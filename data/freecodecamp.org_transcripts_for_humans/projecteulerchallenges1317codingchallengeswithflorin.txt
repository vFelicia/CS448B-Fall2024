With timestamps:

00:20 - you
00:22 - hello everyone and welcome to the third
00:25 - episode I think we should call them
00:28 - episodes of the project Euler in which
00:32 - we're going to continue our journey to
00:35 - solve the project Euler problems
00:40 - okay so look at that my mouse
00:43 - disconnected that's a good thing
00:47 - how are you today
00:50 - let me see if everything's right - let
00:53 - me know if you can hear me
00:55 - let's see alright I think we'd have a
01:00 - bit of a delay so yeah just let me know
01:03 - when you can hear me for those of you
01:06 - don't know my name is Tory pop I'm a
01:08 - software developer engineer program good
01:17 - sorry about it
01:19 - alright yeah I was checking the stream -
01:23 - okay get so apparently it works so yeah
01:28 - I was as I'll be saying I am for it pop
01:30 - I am so far engineer I have a youtube
01:34 - channel I do coding tutorials and live
01:36 - streams and if we could camp I started
01:38 - doing this project order challenges I
01:41 - think three or four weeks ago and this
01:45 - is the third part we did the first five
01:49 - in the first stream then we did next
01:52 - seven I think and now we're going to
01:58 - continue I don't know how far we can get
02:01 - I haven't prepared I mean I didn't
02:06 - wanted to have the solution ready so
02:10 - that we can solve them together which is
02:15 - good because we can see how's the proach
02:18 - maybe we have to Google some things to
02:21 - learn about call-outs I guess we're
02:26 - going to see when we get there yeah this
02:29 - time the chat will be opened so make
02:35 - sure you don't spam that much
02:37 - [Laughter]
02:39 - yeah so project Euler I saw someone
02:41 - asking what project Euler is so is a
02:45 - series of challenging mathematical or
02:48 - computer programming problems meant to
02:51 - delve into family
02:53 - unfamiliar areas by the way I'm nothing
02:56 - oh yeah
02:58 - so my mouse apparently wants to die
02:59 - today so basically it's coding
03:05 - challenges and of the free code camp
03:07 - curriculum we can do it in JavaScript
03:11 - which is nice if you haven't saw the
03:16 - previous live streams I suggest you go
03:17 - and look over and also you should start
03:22 - looking at them on your own and then
03:25 - maybe check in with us to see how how
03:28 - it's going all right let me see I have
03:31 - here another battery to change my my
03:34 - dynamic Mouse just a second hello
03:40 - everyone I see so many people that's
03:43 - crazy
03:45 - ok let me change this yes sorry about
03:50 - that but didn't know that my mouse is
03:52 - being fancy today let's hope it won't
03:56 - die again or I just have to use some
03:58 - other batteries all right well if I
04:06 - think the chat has a 30 second delay so
04:12 - what I would suggest you use the chat is
04:15 - for questions and okay let's see if this
04:19 - works now for questions and if I get
04:23 - stuck maybe you can help me last time
04:26 - Laurent helped me a lot so okay so my
04:29 - mic does I'm my mouse doesn't want to
04:33 - work which is fun we're going to start
04:38 - with the pause on the free code camp
04:42 - we're going to use JavaScript okay
04:45 - let me get some new batteries just a
04:50 - second all this work
04:56 - okay just give me a few seconds
05:01 - painted
05:07 - you
05:17 - all right I have to go to get new pair
05:21 - of batteries yeah it is a delay from the
05:30 - chat and the live stream so keep that in
05:33 - mind I'm not sure what's the latency but
05:36 - it might be a delay of a couple of
05:39 - seconds up to even 20 seconds so it
05:43 - depends on how they setup the stream but
05:45 - yeah alright hopefully now the mouse
05:52 - won't die see this is a developer's
05:56 - journey sometimes you your mouse will
06:00 - die when you need it the most
06:02 - okay good
06:06 - taking too long to replace batteries
06:08 - yeah I'm doing my best buddy
06:10 - alright so let's see the problem we are
06:16 - going to start today it's the large Sun
06:19 - what is it about oh look at all these
06:23 - numbers okay let's see work out the
06:31 - first ten digits of the sum of the
06:34 - following 150 digit numbers
06:39 - okay
06:42 - so I think we need to add up all these
06:45 - numbers and keep track of the last 10
06:50 - digits okay let's see we also have here
06:56 - test number
06:59 - [Music]
07:01 - I think what they will provide us is
07:07 - just this big number
07:11 - yeah
07:14 - but although I see here is an array
07:22 - Oh 150 digit numbers okay so we have
07:26 - these numbers which will be inside of an
07:30 - array and we need to add them up and
07:35 - only return the last ten digits
07:41 - Papa reporting hello our pub okay so how
07:47 - will we do this what I'm thinking is
07:51 - that we basically only need the less
07:54 - than digits of all the numbers we're
07:57 - going to add them up
08:00 - and then store the result in a 10 digit
08:04 - number right I'm not sure that we need
08:08 - all the number so for example this part
08:11 - because they'll add up and do some
08:14 - things let's see so we have 3 6 9 10 for
08:21 - the test number we get
08:32 - oh the first ten digits okay so now the
08:36 - last all right for some reason I thought
08:38 - that it's little less than digit
08:45 - you
08:47 - okay
08:52 - so then we kind of neat add up all the
08:55 - numbers
08:58 - mmm
09:03 - and we go up and store the less-than
09:11 - yeah first and not last
09:17 - okay
09:28 - you
09:32 - so let's see Laura do you have any ideas
09:35 - how we can approach this I guess we can
09:38 - keep adding the digits the good thing is
09:42 - that they all have the same number of
09:43 - digits right so we can kind of go one
09:47 - digit at a time and store the result
09:58 - yes some people in the chat are kind of
10:01 - route so don't do that
10:04 - not sure why
10:08 - this is not as I said I don't have the
10:11 - solution from the beginning we're going
10:13 - to do it on it well at the first kill
10:16 - and we're going to see the approach and
10:18 - how we what's this well what's the way
10:24 - to get to the solution so yeah yep let's
10:30 - start by doing this approach we're going
10:33 - to look over the string get the numbers
10:35 - and add them up you know ending number
10:39 - in a result numbers let's see how that
10:41 - works
10:43 - result number will be a string well or
10:51 - we could use an array
11:00 - let's try that so we're going to have an
11:03 - array and we're going to take is in the
11:06 - test numbers we have two strings which
11:09 - is good so we have 50 digits we can go
11:13 - forward i 0 i LS that 50 i plus plus and
11:18 - here we can get digit 1 well be
11:27 - well I kinda need let's see you know we
11:33 - know that intestines we have to string
11:35 - so we can do something like array of
11:37 - zero and the index will be let's rate at
11:45 - went fifty minus I so fifty - I right
11:50 - because I is zero we want this digit
11:53 - then I is one you said at the beginning
11:57 - donate all digits for every number the
11:59 - most rabid leads are able to the sum
12:01 - well yeah we kind of need all the digits
12:04 - right because they might add up and
12:06 - change the last well the first then
12:09 - right
12:15 - try that so digit 1 digit 2 will be
12:19 - array of 1 so this string and 50 - I
12:25 - okay so we have the two digits and we
12:28 - want to add them together
12:31 - so result numb well we're going to push
12:35 - digit one well let's just keep one and
12:38 - two one and two so one plus two right
12:44 - now this will work so here we're going
12:51 - to have 0 plus 8 will be 8 5 plus 3 will
12:56 - be 8 2 plus 5 will be 7 and so on
13:00 - the only issue will be for example here
13:02 - where we have 4 & 6 when we add them up
13:06 - it will be 10 so we have one extra for
13:11 - the next or than the next addition so we
13:15 - need to account for death
13:19 - okay let's see we could use a boolean to
13:22 - keep track of that so has what may be
13:26 - over ten and will be false so if one
13:32 - plus two and we had variable numbers but
13:36 - let's work with this and see how it goes
13:38 - if one plus two is bigger than 9 so it's
13:43 - 10 11 up to 18 we want over 10 to be
13:48 - true otherwise over 10 will be false and
13:54 - here when we push we kind of want to
13:58 - keep track of that also so 1 + 2 + / 10
14:04 - if we have over 10 we want to add 1
14:08 - otherwise we had 0
14:11 - right
14:15 - but then here we also need to account
14:18 - for that right you might have so let's
14:22 - see we have four we have nine plus nine
14:26 - is 18 so we move one
14:30 - let's see an example here yeah so this
14:33 - is the perfect example 4 plus 6 is 10 so
14:36 - we move one here and then 7 plus 2 is 9
14:39 - but with one from the previous addition
14:43 - we have 10 again right so let's create a
14:48 - sum and do 1 plus 2 plus is over 10 we
14:53 - can do this ternary thingy so then we
14:57 - add the sum and then we check if the sum
15:01 - is bigger than 9 if it is then we set it
15:05 - true otherwise we set it to false this
15:09 - should work so at the end now we're
15:12 - going to have an array let's see result
15:15 - now
15:20 - and let's counsel that law get here we
15:26 - should have an array oh there are
15:29 - strings good good good good good so we
15:31 - need to convert them to strings sorry
15:34 - from strings to numbers yeah not a
15:37 - number okay
15:42 - fifty minus zero so we don't have an
15:44 - index 50 we have an index 49 so minus I
15:47 - minus one
15:53 - thank you our pan in the name of liquor
15:55 - can for your donation yeah yeah thank
16:00 - you
16:00 - yeah it's kind of a bummer some people
16:03 - are just mean yeah and you can see other
16:09 - issue we have now we are pushing the
16:11 - two-digit numbers into the Sun and we
16:14 - don't want that so we can do module stem
16:17 - and then it will cut off that part okay
16:22 - so now hopefully if we did a good job
16:30 - we have the correct calculation for
16:32 - these two numbers and let's see so we
16:36 - start from the right and we need to end
16:39 - up here so the first 10 digits we have
16:44 - it other way around so the last 10
16:49 - digits here
16:51 - let's see do we have something yeah look
16:54 - at that
16:54 - 8 3 4 8 4 2 2 5 2 1 so we have the
17:01 - answer here which is good
17:03 - which is pretty pretty good we just need
17:06 - to get it up right okay so instead of
17:11 - returning the result now we want to do a
17:14 - result now that let's see slice minus 10
17:19 - so the less than numbers we want to
17:23 - reverse it like that we want to join it
17:27 - as a string like that and we want to
17:31 - convert it to a number like that so now
17:34 - if we run this test we should solve the
17:37 - first one here which is good
17:41 - you
17:44 - yeah that's true by the way for those of
17:47 - you who want to chat and also want to
17:50 - support this nonprofit which is very
17:55 - helpful I think they helped hundreds of
17:58 - thousands developers well guess if
18:01 - Amelia's with the articles and
18:03 - everything I don't know the numbers
18:04 - exactly but it's very helpful I promote
18:07 - them a lot if you want to support it you
18:10 - can become a member and then well you
18:14 - will be able to chat in the live chat
18:18 - okay
18:23 - good so we kind of have it for one well
18:28 - with two numbers what we have here is
18:30 - let's see 150 digit numbers so let's see
18:37 - we can do it with the pairs of two right
18:44 - I'm thinking
18:48 - yeah so we can kind
18:51 - to the pairs of two and then keep adding
18:53 - to the number
19:00 - [Music]
19:02 - let's see
19:09 - and all of them the number will get
19:11 - pretty pretty big
19:15 - so it will be more deeds here we have 50
19:17 - digits but at the end we're going to
19:21 - have probably 51 digits 52 digit 7 I
19:26 - don't know
19:27 - so we need to account for that
19:33 - [Music]
19:38 - let's see we could store the result
19:44 - number in this array well we could store
19:48 - the first number right in this array and
19:51 - then add the second one to eight the
19:53 - third one to eight and so on and so
19:55 - forth and at the end we're going to have
19:58 - this big big big number
20:07 - is just that we're pushing here so that
20:15 - means that when it kinda need to push
20:18 - again
20:21 - yeah it's not not the best approach I'm
20:23 - thinking how we can do that
20:27 - because we don't want to lose the first
20:30 - n digit
20:33 - you
20:40 - you
20:44 - [Music]
20:46 - we could change the digit of the index
20:50 - instead of pushing so this works with
20:54 - two numbers but with more members might
20:57 - get bigger and we need to count for that
21:02 - or there is a better way can't think of
21:05 - a better way now
21:09 - you
21:14 - so let's do it manually once so we're
21:18 - going to add these numbers and these
21:20 - numbers and so on and so forth and at
21:23 - the end we're going to have a number
21:24 - from these two numbers right which as of
21:27 - now will be pushed in this array but
21:30 - then we kind of need to use that array
21:32 - and add up this number and the only
21:35 - issue with this approach we are having
21:37 - now is that well we kind of go over only
21:42 - 50 digits but this is the top the sum
21:45 - might get bigger I know that in node I
21:50 - think there is a big hint a library
21:53 - which could save us but
21:56 - I'm not sure here
22:00 - because if we just add the numbers so if
22:03 - you do something like
22:06 - let's test nums of zero plus test noms
22:10 - of one while this is concatenation we
22:14 - can convert them to numbers
22:18 - yes you can see that we have plus 49 but
22:23 - we kind of have the do we have the four
22:26 - digit Oh
22:30 - okay we kind of have the digits here
22:36 - hmm - welcome and as a supporter thank
22:41 - you on behalf of wicked camp yes so I
22:46 - think we over well we overcomplicated
22:52 - this let's see I'm going to comment this
22:58 - out just to save it for now and we're
23:03 - going to return let's do the good old
23:05 - reduce we have the accumulator the item
23:11 - and we want to add the accumulator the
23:14 - number parts in item
23:21 - and we want to start from zero all right
23:27 - let's run this and see what we get
23:31 - well we kind of need this big number
23:36 - [Music]
23:41 - what happens if we say to string
23:48 - a-and what happens if we do think
23:54 - substring zero to ten
24:01 - amazing
24:02 - [Laughter]
24:04 - let's see substring I always have to
24:08 - look at substring so I want numbers I
24:11 - think it's with like splice from 0 to
24:14 - index
24:18 - well
24:20 - doesn't seem to work though substring to
24:27 - really so what's happening
24:34 - doesn't it work for two string
24:39 - let's let's do this in the console as we
24:45 - can see exactly what oops what it looks
24:50 - like if it's a string it or if it's a
24:51 - number
24:53 - okay well look at all this because if
24:59 - you have a number 8 plus 8 it's this
25:03 - color say purple nice but if we have 8
25:06 - plus 8 while we have the codes so
25:12 - we can use this array like that and we
25:19 - can apply the reduce on it like that and
25:24 - you can see that we have a number so now
25:26 - if we do two string oops
25:34 - yeah we get the string so what if we do
25:38 - substring now or substa let's zero ten
25:43 - okay so here it works which is good we
25:48 - kind of want not ten we want 12 because
25:52 - well we have the dot two
25:57 - it's inclusive so we want this and want
26:01 - to replace the dot with a string
26:08 - yeah look at so we add this although
26:14 - there are strings and we get a a plus 49
26:20 - not sure up to how much it goes and then
26:24 - we use the reduce to add up all the
26:26 - numbers inside accumulator then we
26:28 - converted the string we get the 11
26:31 - characters we want and we replace the
26:34 - dot
26:38 - seems to work let's see we use this here
26:44 - so yeah basically what I did at
26:47 - beginning it was pointless although you
26:51 - can see that oh the console.log doesn't
26:54 - work because we're having this oops so
26:59 - we don't have the call of the large side
27:01 - my bad sorry
27:05 - large sum with the test numbs yeah look
27:09 - at that
27:10 - yep the only issue is that it's not the
27:13 - number and we can convert it the number
27:16 - adding a plus well look at that it was
27:21 - much simpler than I originally thought
27:23 - pretty crazy yeah sorry about okay so we
27:30 - add up all the numbers with videos we
27:32 - convert the string to a number and then
27:35 - we convert it back to a string we get
27:37 - the first 11 characters and we replace
27:39 - the dot okay can I think if you save
27:44 - this and we go to the next one I just
27:51 - want to see if it will remain saved
27:54 - okay overcomplicating added highest yeah
27:59 - it doesn't oh well I guess we just have
28:03 - to download the code
28:06 - good doesn't matter how big the number
28:11 - is it at the end you need the first ten
28:13 - digit
28:16 - I would throw away the very small widget
28:18 - not sure what do you mean with that
28:21 - all right good so let's see the longest
28:27 - Kaulitz sorry if I mispronounced your
28:30 - name or I don't I think it's a name
28:33 - right who is this guy but or maybe not
28:39 - the guy
28:41 - it's conjecture okay
28:47 - okay let's see what it says so the
28:49 - following iterative sequence is defined
28:51 - for the set of positive integers and
28:55 - becomes half of n if n is even or n
28:59 - becomes 3 n plus 1 if if n is odd I've
29:04 - heard this before using the rule above
29:07 - and started with 13 we generate the
29:09 - following sequence so this is odd okay
29:15 - and we end up to 1
29:19 - yeah I sat down but and I just didn't
29:23 - like it it can be seen that this
29:27 - sequence starting at 13 and finishing at
29:30 - one contains ten terms one two three
29:33 - four five six seven eight nine ten yeah
29:35 - although it has been proved well it has
29:39 - not yet been proved sorry it is thought
29:44 - that all starting numbers finished -
29:47 - what
29:48 - which starting number under the given a
29:51 - limit produces the longest chain well
29:56 - one the chain starts with terms are
30:00 - allowed to go above 1 million once okay
30:04 - so that's the read it again because my
30:07 - English is not the best so which
30:09 - starting number under the given limit so
30:14 - we have a little limit produces produces
30:18 - the longest chain note once the chain
30:21 - starts the terms are allowed to go above
30:23 - 1 million
30:27 - okay
30:32 - this is interesting
30:37 - we need to find which number produces
30:40 - the longest chain okay
30:50 - one way would be to do the brute force
30:53 - and check for all the numbers created
30:56 - create a sequence
31:01 - and then see which is the longest but we
31:06 - kinda don't want to do that
31:10 - have another idea in mind
31:18 - so yeah if we do the let's start with
31:21 - that but you'll see that it will time
31:23 - out eventually
31:24 - so we have the limit and we need to
31:27 - start which starting number under the
31:31 - given limit produces under four let I
31:34 - equals 1 I less than the limit because
31:39 - we want under the limit we want to check
31:45 - the sequence
31:48 - so let's see we're going to write a
31:51 - function which will do the calculation
31:53 - and it will check
31:58 - to see how long it will take right okay
32:03 - let me think
32:03 - so let's write the function check length
32:10 - I'll check
32:12 - call length of the number okay and here
32:20 - we can do it a while number is different
32:24 - than one right
32:25 - oh and I guess we can start with two we
32:31 - want to do this thing here so if it's
32:35 - even if number modulus to zero we want
32:40 - to do number
32:44 - / -
32:52 - yeah Thank You Lauren by the way let me
32:56 - know what's the delay of the chat let me
32:58 - know when you hear this I probably may
33:02 - need to set up a lower natural cold just
33:07 - so it'd be totally faster okay so if the
33:11 - number is even we want to divide by two
33:13 - else we want to do three times number
33:19 - plus one so this will be while is
33:22 - different than one right
33:24 - okay if number is one then want to
33:29 - return what this will guess we can say
33:33 - get call it slight otherwise we want to
33:38 - say here length which will be zero and
33:42 - here in the wire loop will increase the
33:45 - length
33:47 - plus plus and we're going to return the
33:49 - line like that okay good now you'll see
33:57 - that this won't be the best approach
33:59 - because for every number we're redoing
34:00 - all these calculations and it will
34:03 - timeout but let's let's just start with
34:09 - this and then we can adjust it okay
34:14 - oh boy it's pretty pretty delayed okay
34:20 - so we want to return the number for
34:25 - which the length is the longest so we
34:28 - want to save the number well D number
34:34 - this will be I don't know this will be
34:39 - two by default and then we want to say
34:42 - the MaxLite will be zero so here we're
34:49 - going to get a linked from the Catholics
34:52 - length of the eye which will be the
34:55 - number so we're going over all the
34:57 - numbers right up to the limit we get the
35:00 - length and now we're going to check if
35:04 - length is greater than max length then
35:09 - we want to do two things first max
35:12 - length will be learned we want to
35:14 - reassign the max length and we want to
35:17 - change the number I just added D number
35:20 - no it's not the best but we have the
35:24 - number here so I want it to be special
35:26 - and the number will be I and here at the
35:29 - end we can return the number let's
35:36 - console the clock this and they should
35:39 - hopefully work you can see that for 14
35:42 - it works
35:44 - which is good well it worked for all of
35:49 - them
35:51 - oops yeah okay guess what I was thinking
35:57 - that it will be way too many
36:00 - calculations
36:03 - because for this number for example it
36:06 - will go up to 1 million so for all of
36:10 - the 1 Million numbers or you can see
36:13 - that why okay so up I guess
36:19 - oh you can see sorry let me about this
36:23 - so for 1 million numbers it will do all
36:26 - this and it should take a lot of time
36:31 - but apparently trans and it works so
36:34 - then
36:38 - we shouldn't worry I was thinking about
36:41 - doing an approach where we kind of store
36:47 - the numbers and their length so for
36:52 - example we know that from five to one it
36:57 - will take one two three four five steps
37:01 - right from 13 to one it will take that
37:06 - so I was thinking your Mac is too fast
37:09 - I'm not sure if it runs on my Mac or
37:11 - under servers yeah so what I was
37:15 - thinking is to store these numbers and
37:18 - whenever we go over a number and we
37:24 - already have it so for 16 all right
37:26 - let's sport to for example we have let's
37:30 - see one two three four five six seven
37:32 - eight nine ten yeah so for 13 we have
37:35 - ten for two we have two right
37:37 - although it's weird we only have one
37:39 - step but okay
37:40 - oh it accounts for the chain never mind
37:45 - so if we store the to having the length
37:50 - of two that it's chain to be two then
37:54 - whenever we find two again we can just
37:57 - use that right for example for five we
38:02 - know that we have a length of 1 2 3 4 5
38:05 - 6 so we will just use it whenever we get
38:08 - a number which is 5 instead of doing the
38:12 - calculations again we already knew that
38:15 - for 5 at 6 right
38:18 - memorization okay Thank You Laurent yeah
38:23 - something like that
38:24 - but because it works yeah something like
38:29 - a cache so I was thinking to have a big
38:33 - object with key value pairs then number
38:36 - on the left and the length on the right
38:40 - and we could always check if we have
38:43 - that number in the object then we could
38:46 - use probably a set will work better but
38:49 - I
38:50 - it said that much so oh wow
38:55 - it works like this that's a challenge
38:57 - for you if you want do the second
38:59 - approach I will just move on because it
39:03 - will probably take a lot of time and
39:05 - well I guess we better do another one
39:10 - right okay let's see
39:13 - lettuce pads or Latisse pads hopefully
39:18 - it not miss pross it starting in the
39:20 - top-left corner of a 2x2 grid and only
39:25 - being able to move to the right and down
39:28 - there are exactly six routes to the
39:31 - bottom right corner
39:34 - how many such routes are there to a
39:36 - given grade size
39:40 - okay this is interesting
39:48 - I have no idea how to do this yeah
40:00 - this will be the end Lauren do you have
40:06 - any idea how we can approach this
40:11 - oh boy so
40:19 - mmm-hmm
40:24 - and thinking now
40:27 - here
40:29 - and we have two choices
40:35 - then here we if we reach here we have
40:38 - two choices here we only have one choice
40:45 - I'm 100% sure that there must be some
40:50 - kind of algorithm but I don't know which
40:54 - one
41:01 - but the heavy mind is using the matrix
41:03 - well
41:06 - checking all possibilities
41:13 - [Music]
41:18 - let's see
41:24 - yeah this is fun
41:30 - okay so can we find out
41:39 - how many approaches are therefore from
41:42 - the point so here we have one two three
41:45 - four points which can go one two ways
41:49 - and one two three four points which can
41:54 - only go one way
42:00 - and that's six
42:06 - let me write this down for a two-by-two
42:12 - do have topples in JSI solved it with
42:15 - arrays of positions like x0 y0 and start
42:20 - topples not sure
42:27 - those are also
42:45 - yay
42:48 - so we don't have a lot when it comes to
42:50 - or we have six routes for a 4x4 we have
42:57 - 70 routes that's a lot 420 we have that
43:04 - number
43:07 - 4:9
43:09 - to 640 thousand six hundred and twenty
43:14 - you solve it with arrays of positions
43:19 - how far you I see you've played a lot
43:22 - wait the project Euler how far are you
43:28 - ah
43:33 - so we could do with X&Y as you said
43:40 - let's say so this will be 0 0 0 1 0 2 1
43:45 - 0 1 1 1 2 & 2 0 2 1 2 2
43:50 - and
43:56 - yeah I don't really have a clue
44:01 - we could because let's say we're well we
44:06 - are here right so we can go to the right
44:09 - and down
44:12 - and well when we go to the ride
44:16 - we can only go one more
44:20 - yeah
44:30 - these problems are getting harder and
44:32 - harder
44:43 - let's see if we as I said from here we
44:46 - have two directions here - here - here -
44:50 - and just one there we kind of have an
44:53 - eight
44:56 - what will be the result for three I'm
45:00 - thinking if we can kind of use that
45:03 - number somehow
45:07 - because there must be a formula I'm sure
45:10 - there must be a formula I'm just trying
45:13 - to guess what could it be
45:20 - and very curious what's the the number
45:25 - for three and maybe we can see a
45:30 - battered should I start drawing those
45:40 - yeah
45:43 - so one two three or five six
45:51 - one two three four five six now
46:00 - a position like 0 0 plus move right is
46:03 - like adding 0 1
46:07 - move down its what zero
46:12 - but yeah but then you have one two one
46:16 - two
46:21 - or will you go here also and let's see
46:25 - one too
46:31 - but then you kind of end up to it too -
46:34 - yeah
46:41 - [Music]
46:44 - I wish we had the the solution for three
46:50 - maybe we could find a pattern then
46:55 - one two three one two three
47:03 - a formula 2 but it's super advanced Matt
47:05 - and I do not understand it yeah 1 2
47:17 - how many can you run your I wouldn't
47:21 - want to to draw four 3x3 could you run
47:25 - your script and tell me how many routes
47:27 - we have for three and maybe then I can
47:29 - think of something help me out here
47:32 - Lauren this is why I want to do maybe we
47:40 - can find some kind of formula or wait
47:43 - think about it kind of have something
47:46 - but yeah for three yeah I'm going baby
47:52 - steps
47:55 - hmm this is interesting
48:00 - let's see what Google says about Latisse
48:04 - pads maybe we read some documentation
48:08 - and
48:11 - nor days of this pad
48:15 - combin atronics a lot this pad is in
48:19 - well a lot of things here I don't
48:23 - understand I am NOT very very Matty
48:27 - person though keep that in mind
48:32 - these pets are often used to count other
48:35 - combinatorial objects similarly there
48:37 - are many conventional objects that count
48:39 - the number
48:44 - UPI is
48:45 - think here
48:50 - [Music]
48:54 - okay
48:58 - yeah pretty interesting
49:03 - you
49:08 - Northeast Latisse pads have close
49:11 - connections to the number of community
49:13 - come by nations which are counted by the
49:15 - binomial coefficient and arranged in
49:17 - Pascal triangle
49:23 - okay 4x4
49:31 - 74
49:33 - seventy okay is it cheating because
49:38 - looking this up hope not it's not we
49:43 - make the rules
49:44 - so I see the Pascal triangle here which
49:49 - is you have ones on the sides and then
49:53 - you kind of add them up as you go
49:57 - right
49:59 - so one with one it's still
50:03 - one with 2 is 3 1 which is 4 1 is 5 K 4
50:09 - with 6 is 10
50:12 - with tens fifteen fifteen or twenty
50:14 - thirty five thirty five seventy okay so
50:21 - the numbers and diagonal is like you can
50:24 - see here we have six
50:28 - which is for two by two right six
50:33 - and then for 4x4 sorry I think for 3x3
50:39 - we have 20
50:43 - and for 4x4 we have 70
50:50 - and I think wait if we go this down this
50:55 - road we get the number so let's see the
50:59 - next one
51:01 - 5x5 will be something like
51:08 - six
51:11 - 20:21
51:17 - six okay let me think again so here will
51:22 - be half six here we're going to have six
51:26 - plus 15 which is 21 here we'll have 21
51:32 - plus 35 which will be 56 and 56 plus 70
51:39 - will be
51:43 - what 126
51:49 - yeah but we need this number so that
51:51 - number will be 126 times 2 252 and we
51:59 - don't have 4 5
52:01 - but I guess that will be number okay
52:07 - but how can we code this
52:12 - now our approach will be well pretty
52:15 - much the same but the other direction
52:17 - here we have northeast but we want
52:20 - Saudis soda straight down and right
52:28 - I'm thinking of an approach to heaven
52:31 - array
52:38 - let's see so we need a triangle which
52:41 - will look something like this 1 1 2 1 1
52:50 - 2 3 2 1 right
52:57 - yeah
53:00 - one two one wait no so one one one okay
53:08 - so I missed a couple of steps one one
53:13 - and then we have 1 2 1 and then we have
53:19 - 1 3 3 1 ok so they add up so one
53:27 - does anyone understand what I'm doing
53:29 - here something like that but the next
53:32 - one will be one
53:35 - for sorry this is three six four one
53:42 - right so we can need to go down these
53:45 - three
53:47 - and we get our result this will be our
53:49 - fort so the center of this number will
53:54 - be 2 by 2 which is 4
53:58 - ya know so forth - how can we find it so
54:05 - two by two is four and we have the fifth
54:08 - row from the pyramid I guess let me move
54:12 - can I move everything to the right yeah
54:15 - I want to the next one and the next one
54:21 - so two more
54:28 - 1 5 10 oops this kind of going to put 0
54:33 - here well let's start let's star 5 & 1
54:41 - and here we have 1 6:15
54:47 - well 15 will be this it will have 30
54:55 - and on 2010 plus 10 so 20 will be X I'm
55:00 - going to write down what we have here 6
55:02 - & 1
55:03 - ok so we have a star to be 10-pound to
55:07 - be 15 or no as that's the hashtag X to
55:12 - be 20 okay so if we want the 3 by 3 1 2
55:21 - 3 4 5 6 7 and the seventh number here in
55:27 - the center hmm so this is what we want
55:32 - for 2 by 2 this is what 1 4 3 by 3
55:38 - Oh one two three okay so they kind of go
55:47 - odd number of fashion I guess this is
55:51 - per one by one
55:53 - 2x2 3x3 okay now how can we convert this
55:59 - into code we need this pyramid and if we
56:04 - find this out we'll going to solve the
56:06 - problem it'll be another approach that
56:08 - you took Laurent but oh well we should
56:13 - eventually reach that okay I'm thinking
56:20 - so here we have an array with one digit
56:22 - with two digits 3 sorry yeah an array
56:27 - with one I had one number two numbers
56:29 - three numbers four numbers yet so our
56:33 - array should look something like this so
56:38 - first one will be this
56:42 - yeah this is the PI well let's see I
56:47 - don't want to mispronounce - yeah
56:50 - Pythagorean treat a Pascal strike okay
56:54 - yet so we can use that good so first one
57:00 - will be dead the second one will be one
57:02 - one the third one will be one to one the
57:07 - fourth one will be 1 3 3 1 okay how can
57:10 - I get from this to this
57:17 - sing sing sing sing tink
57:26 - so we could kind of start with an array
57:29 - which has this just the 1 and the 1 1
57:31 - and then when we construct the next
57:35 - array we do this Plus this now doesn't
57:39 - work
57:40 - we kind of have always except for the
57:43 - first one we have ones and deep sides
57:47 - and then the middle this one will be
57:53 - tasted
57:55 - but then this one will be these two okay
58:01 - okay your your was brute yeah probably
58:06 - your was better and just I don't know
58:10 - doing the baby steps to hopefully get
58:13 - there okay
58:18 - have an idea we start with this array
58:22 - and for the next items we do we go over
58:29 - the element well when we construct this
58:33 - array we'll put one and one at the end
58:36 - and in the middle we're going to go over
58:38 - this array and add up the numbers right
58:42 - now when we construct this array we put
58:45 - 1 and 1 on the ends and then we add this
58:48 - 2 and this 2
58:53 - and so forth right good so then we're
58:56 - going to have the pyramid and our answer
59:01 - oh I can't got it so our answer will be
59:08 - let me think
59:11 - so the array des with backtracking yeah
59:16 - I think Thank You Michel in for donating
59:22 - the to two pounds thank you in the name
59:25 - of picker camp yeah probably that will
59:28 - be a better approach but I don't know
59:31 - those I think starting with these
59:34 - problems I kind of have to learn more
59:36 - about all all the other items and stuff
59:41 - but yeah thank you thank you for joining
59:44 - and for donating okay so yeah where were
59:50 - we
59:50 - good so we're going to have our past
59:53 - call triangle I could it could just well
60:04 - I couldn't do it for all these numbers
60:06 - but yeah we're going to start with this
60:09 - and the next item so first we need to
60:14 - figure out how many items we want to
60:16 - have and then when we create the last C
60:21 - so this is the answer for the one by one
60:25 - this is the answer for two by two this
60:28 - will be the answer for three by three
60:32 - sorry so one two yeah this will be for
60:36 - too much yeah exactly
60:37 - twenty
60:39 - okay so we need this Pascal triangle
60:47 - linked to be
60:53 - let's see for 2x2 we want it to be five
60:57 - four three by three we want it to be
61:01 - seven one two three four five six seven
61:06 - so 3 times 2 plus 1 2 times 2 plus 1 the
61:11 - next one will be 4 times 2 8 plus 1 okay
61:15 - good so we're going to do a for loop for
61:20 - let I will be 0 and we're going to go up
61:24 - to great size times 2 plus 1
61:32 - and we're going to start with index two
61:36 - because we already have these two there
61:39 - yeah now in the Pascal triangle we want
61:44 - to push something okay I forgot here I
61:50 - pause pause so we want to push something
61:53 - this something will be the new array
61:56 - which we need to construct based on the
61:58 - previous array
62:02 - yeah kind of Hecky but hopefully it will
62:07 - work
62:08 - so prove prover a will be
62:15 - well let's just call it triangle I'll
62:18 - just call it three easier to type three
62:24 - three and try Hey okay
62:32 - index I minus one so we're going to get
62:35 - this array and for this array we're
62:40 - going to use the previous array and we
62:43 - want to do something with it create next
62:48 - light using the previous light let's
62:53 - call it that hopefully it makes sense
62:55 - for you it does in my mind but who knows
62:59 - okay and the next create next line we're
63:04 - going to use a line function and here so
63:09 - what you want to do first we want to
63:13 - have a line array now so we get that
63:16 - line
63:20 - new line will have an array of one and
63:23 - one and in the middle
63:27 - oh you know what we can do it like this
63:30 - have a 1 and new line that push a 1 at
63:35 - the end so we have this part right
63:39 - okay and we need to construct these
63:43 - numbers so how are we going to do that
63:46 - we have a line we want to go over the
63:51 - line
63:51 - so for let hi zero I less than line that
63:54 - length if I could type I plus plus
64:00 - length again and here we want to add
64:05 - Const um well be line of I plus line of
64:13 - I plus 1 so this one and this one and
64:17 - then in the next loop if we are here and
64:20 - want construct these two we get these
64:22 - two and then this do okay and we want to
64:25 - go up to the last number so we don't
64:28 - want to get this because we don't have a
64:30 - number after it okay and the new lines
64:34 - are going to push the new item then we
64:39 - push that one at the end and then we
64:42 - returned in your line
64:44 - does it make sense hopefully does let me
64:48 - comment this out let me counsel that
64:51 - plug this and now if we did everything
64:54 - right at the end here in the three array
65:00 - we should have this look at that how
65:04 - beautiful like it okay and what we're
65:09 - searching for is pretty much this number
65:12 - so the last array the middle number
65:19 - so const last ray will be try that a
65:25 - slice minus 1 and const medial number
65:30 - will be less the ray of index less tray
65:35 - that length
65:38 - so let's see this one is one two three
65:40 - four five six seven eight nine and we
65:44 - won the element at index zero one two
65:46 - three four so
65:51 - / - and met that floor right now n
65:56 - divided by 2 is 4 point 5 then we delete
66:00 - the 5 at the end of that 5 and we get
66:03 - the middle number
66:08 - Lester ray
66:12 - okay something's not good so we slice
66:16 - let's see the last three
66:21 - oh so it's
66:25 - oh I see so we don't want to slice here
66:29 - we kind of want to get a last item my
66:31 - bad
66:32 - so three that length minus one okay get
66:37 - so then we have the last array or the
66:40 - last line I think we can use that last
66:43 - line just be more thoughtful about it
66:46 - and then the middle number will be
66:48 - seventy okay Hey look at that it worked
66:58 - yeah a lot of thought process about it
67:02 - well behind it and we kind of needed to
67:05 - see this
67:07 - and when we had that well yeah so it
67:11 - might be cheating maybe not we did it
67:14 - well we didn't copy anything so we
67:16 - created our own so yeah
67:17 - it's not cheating right okay I hope
67:24 - everything's working so we can go to the
67:27 - next one I kind of want to download this
67:30 - let's see yeah good save that there all
67:35 - right
67:38 - yeah
67:41 - hopefully you got it
67:44 - it was probably the hardest one we did
67:47 - so far
67:50 - okay let's go to the next one
67:53 - Apple it'll be easier
67:58 - all right so let's see
68:01 - problem 16 power digits son 2 ^ 15 is
68:10 - 32,768 and the sum of its digits is 26
68:15 - what is the sum of the digits of the
68:18 - number 2 ^ okay
68:26 - this will be interesting I guess if we
68:30 - do consult a clock here so we see the
68:35 - result and if we do net that pao2 to the
68:39 - exponent okay
68:45 - Thank You Laurent so for 15 it works for
68:50 - 128 yeah so that was something I was
68:56 - afraid of and for 1000 we get this
69:00 - number
69:01 - oh hey
69:14 - and we need to add up the digits of this
69:17 - number we have here a plus so this
69:20 - number has 302 digits
69:24 - pretty nice weight pretty nice
69:28 - not really but what happens if we do
69:40 - / 10
69:44 - so I'm thinking if we could somehow
69:51 - get the digits okay we could use Martin
69:59 - and divided by 10 to get digits I think
70:06 - but yeah okay
70:10 - the big number will be this and the Sun
70:20 - will start with zero and while the big
70:23 - number
70:26 - well big number is
70:33 - the big number is what so we keep
70:35 - removing the digit so
70:40 - for example if you happy 15
70:45 - we want to remove this digit add this
70:48 - digit plate remove it so on and so forth
70:51 - so while this number is bigger than zero
70:55 - cheating will be to use the formula
70:58 - directly round sickles okay so let me
71:02 - copy this this will be the formula for
71:05 - the previous one so two times n
71:12 - factorial divided by n factorial times n
71:16 - factorial okay it is crazy
71:20 - nice yeah so this was the formula for
71:26 - the previous one
71:26 - pretty clever but who knows I knew they
71:30 - had to be some kind of formula because
71:32 - at the end is PI tag Pascal's triangle
71:37 - and it has all sorts of crazy things
71:39 - going on okay let's get back to this one
71:44 - so while the big number is bigger than
71:46 - zero we want to do something like that
71:49 - some plus equals big number modulus ten
71:52 - and big number divided by ten well I
71:58 - guess we can do mat that floor big
72:01 - number by ten
72:05 - he's big only okay okay it's really not
72:08 - bigger all right so some twenty six
72:19 - again this works for this number this
72:23 - should work for 128 yep so we kind of
72:28 - miss there something yeah
72:32 - what about one thousand
72:36 - okay
72:39 - thing is not working correctly what is
72:43 - it
72:48 - they kind of lose I think
72:53 - what if we don't floor
73:01 - yeah
73:04 - [Music]
73:07 - we want to chop off digit
73:15 - [Music]
73:21 - can we do
73:24 - it should work though yeah
73:50 - so it chuff's the numbers but
73:55 - yeah let's also see
73:58 - cause last digit
74:03 - I hope it is and we add this I want to
74:08 - see what's the last digit also will it
74:13 - get it right six four zero two four six
74:17 - six four four eight
74:24 - [Music]
74:30 - [Music]
74:32 - 0:06
74:39 - why is that six
74:47 - oh oh well yeah that's weird though
74:53 - see here it works here it works here it
74:55 - works here it doesn't work anymore
74:59 - that's weird
75:07 - why is 8
75:16 - you
75:24 - you
75:30 - why is this 0 6 and this 8
75:41 - is there some JavaScript shooter or who
75:46 - knows
75:49 - oh you know what occurred instead of
75:52 - doing this I could just say to string
75:59 - and substring minus one
76:12 - and here we're going to add the last
76:15 - digit like that
76:18 - so apparently no sub strings oversteer
76:24 - okay good yeah
76:28 - this seems to work better I don't know
76:32 - these numbers though
76:36 - so hopefully these digits are good yeah
76:40 - not really
76:42 - you can see that it gets this +10 38
76:50 - we don't want that
76:54 - [Music]
76:57 - you
77:00 - you
77:04 - another approach I still get confused
77:08 - why I didn't work with modulus tan
77:14 - you
77:19 - I'm thinking what would what could we
77:21 - here
77:24 - [Music]
77:26 - let's see something else I want to check
77:30 - its modulus tan what's the difference we
77:35 - have 1 6 56 and we need 166 so it's a
77:39 - 10-digit different but then well then
77:43 - difference here is 8 here is 8 here is 6
77:51 - so that's probably they should
78:00 - you
78:03 - you
78:09 - and I don't know how else could we do
78:12 - because we get these plus 38 so we go
78:15 - don't get full number with begins we
78:21 - could have done it
78:24 - Oh
78:30 - you
78:38 - do we need to convert to an array of
78:41 - digits and just store everything in our
78:45 - array
78:47 - I wouldn't find that
78:50 - [Music]
78:55 - you
78:57 - and thinking so if we do that we start
79:01 - with two and then we multiply by two
79:08 - we get four to six yeah
79:17 - you
79:20 - so multiplication with two is like
79:22 - adding the same number twice right so if
79:25 - we have
79:28 - ace
79:30 - an array with these digits and we want
79:36 - to have well the duplication of this we
79:39 - just add this number again and we can
79:42 - add each number with each number like
79:45 - that
79:48 - in your array
79:51 - the reason why I want to convert this to
79:53 - an array because it will be easier at
79:55 - the end to use reduce and get all the
79:57 - digits although I'm still yet surprised
80:01 - why modular standing doesn't work maybe
80:04 - because the number is too big huh weird
80:09 - so I guess let's do that approach
80:25 - I'm thinking so we start we're going to
80:29 - have summer if we start with two then
80:31 - four then eight then not 16 but either 1
80:37 - 6 or 6/1
80:44 - you
80:46 - then we have not 6 1 + 6 1 so 6 + 6 will
80:53 - be 12 so we keep 2 1 plus 1 will be with
80:59 - 2 and with the one before will be 3 and
81:03 - if we do this approach at the end we're
81:05 - going to end up with well this number
81:10 - but in our array
81:15 - can just add up the digits
81:17 - so how we do this so we go over the
81:20 - digit
81:23 - and we multiplied by 2 and if the number
81:28 - is bigger the next loop will get +1 okay
81:35 - kind of tricky but yeah let's keep this
81:38 - here and I'm going to do this sort of
81:44 - thing how far we need to go
81:54 - well we're going to the for loop okay
81:58 - so let array will be a two and four let
82:05 - me push this up a bit for let I less
82:11 - than zero sorry I - 0 I less than
82:15 - exponent so if we have 2 then we
82:19 - multiply it once ok that works
82:21 - yep so now we want to go over the digits
82:29 - of the array multiply them and if it's
82:33 - bigger than 10 we want to move the digit
82:36 - we kind of did this before right
82:39 - so yeah array that 4 but I think we're
82:45 - going to change this array
82:48 - because money we get from eight to six
82:51 - one which is sixteen we kind of need to
82:54 - push a one there at the end which will
82:59 - be interesting
83:02 - Oh so for let J equals zero J less than
83:12 - rate of length J plus plus and here what
83:17 - we want to do so array of J will be
83:20 - array of J times two
83:26 - good if array of J now is bigger than 9
83:33 - 1 turay of J to be
83:38 - J modulus 10 so we chop off D well
83:43 - second digit and we want to keep track
83:47 - of some kind of boolean let over 10
83:50 - we kind of did this before this will be
83:53 - false and if that's the case then over
83:58 - time
84:01 - we'll be through else over ten will be
84:05 - false
84:08 - okay so we multiply it reverse the array
84:14 - yeah well I want to rather push
84:19 - - then pop you know because we the
84:22 - multiplication is kind of from there
84:24 - right of the side of the number right if
84:26 - you have something like 1248 times 2 you
84:35 - do something like this right so we do do
84:38 - 2 times 8 16
84:40 - oops and then we keep 1 + 2 times 4 is 8
84:45 - plus 1 is 9 then we have 4 + 2 right so
84:52 - that's kind of the approach you do this
84:53 - is why I'm doing the numbers reversed so
84:57 - when you multiply you just go well hope
85:01 - it makes sense okay so we multiply it if
85:07 - it's bigger then we chop off the digit
85:10 - and with over 10 is plus okay and we
85:14 - kind of want to do the same thing here
85:16 - again let's so yeah new value I guess
85:21 - will be this plus over 10 if it is then
85:29 - we add 1 otherwise we had 0 and the new
85:33 - value will be this and
85:39 - if the new value is bigger than nine
85:42 - then we chop off that digit and we add
85:49 - it to
85:53 - yeah okay yeah over ten will be through
85:55 - so we had it next time all right yep
86:00 - this should
86:03 - do something not sure yet what let's
86:07 - return the Ray let's see what we get
86:10 - yeah okay he definitely didn't work so
86:17 - why is that Jay so it goes over the rail
86:21 - length nope
86:22 - it should go
86:27 - so it goes once
86:31 - Oh
86:34 - so we kind of want
86:36 - here if over ten at the end if we still
86:41 - have over ten then we want to do a array
86:47 - that push one so yeah yeah find out so
86:51 - this works now what we did is that so we
86:56 - have 2 4 8 16 so when we have 16 we kind
87:01 - of did 8 times 2 we added 6 but then we
87:06 - didn't have one so we kind of want to
87:08 - push one at the end and now hopefully
87:11 - well if we do let's see 2 to the power
87:15 - of 10 should be okay that's to the power
87:22 - of 11
87:26 - yeah so two to the power of ten is 1,024
87:30 - two to the power of ten
87:33 - yeah 11 is this so we're off by one why
87:39 - because we start here so let's do minus
87:43 - one okay yeah to the power of 2 is 4 to
87:49 - the power of 3 is 8 16 32 and so on
87:54 - yeah so we have all the digits now even
87:57 - for this big number
87:59 - look at that and at the end here we want
88:02 - to use our dear dear reduce method
88:07 - accumulator item box item 0 and voila so
88:14 - this just adds up all the digits in this
88:16 - array well all the numbers and there we
88:20 - go for 1,000 we have 1366 for 128 we
88:28 - have this and for 15 we have this if we
88:33 - run this should work let's download it
88:37 - and move on but let me go over again
88:42 - hopefully you understood it but let's
88:45 - see we can remove this although and I
88:48 - don't know why this didn't work in why I
88:51 - didn't get the last digit correct but
88:53 - nevertheless we just created the number
88:58 - and edited digits in an array under the
89:04 - calculations and at the end we add up
89:06 - all the numbers hopefully this makes
89:09 - sense
89:10 - it does in my head but yeah alright
89:15 - let's go to the next one how much time
89:20 - we have left we could let's see the last
89:23 - one and if it's too hard we're going to
89:26 - leave it for the next one
89:29 - or the next session if not we're going
89:30 - to date today let's see number letter
89:33 - counts okay if the numbers one two five
89:38 - I've written out in words oh boy
89:42 - one two three four five
89:45 - then there are three plus three plus
89:48 - five plus four plus four letters in
89:51 - total all the numbers from one to given
89:55 - limit inclusive or written out in words
89:57 - how many letters would be used note do
90:03 - not count spaces or hyphens for example
90:06 - three four to three hundred and three
90:09 - hundred and forty two contains twenty
90:13 - three letters and 115 contains twenty
90:19 - letters the use of end when written out
90:24 - numbers is a compliance with British
90:26 - usage he's in compliance
90:29 - so okay let's see one two three four
90:35 - five six seven eight nine ten eleven
90:38 - twelve thirteen fourteen fifteen sixteen
90:43 - seventeen eighteen nineteen twenty three
90:49 - 3 + 7 10 13 + 8 10
91:01 - six plus so many sevens 13 plus one two
91:06 - three four five six seven okay seven at
91:09 - 8:20 all right okay okay okay okay okay
91:14 - good good good but not so good let me
91:20 - drink some water
91:28 - you
91:34 - okay
91:38 - the good part is that we only go up to
91:41 - 1000 inclusive limit inclusive so
91:51 - [Music]
91:56 - yep no thinking we have so many
92:00 - variations
92:03 - so let's write them down 1 is 1 2 is 2 3
92:08 - is 3 4 is 4 5 6 7 8 9
92:24 - and then we start with 11 so right 13
92:36 - let me know if I ride them wrong
92:40 - 14 if
92:45 - you
92:48 - hopefully right tomorrow all right
92:50 - heaven throw them in a way sixteen
92:55 - seventeen eight he'd
93:04 - this doesn't look right
93:07 - if he'd
93:12 - yeah okay so it's 15 not five teen okay
93:28 - 19 and then 2030 the good part is that
93:37 - we start with days 40
93:46 - 50 60 70
93:57 - baby
93:59 - a tea and
94:02 - [Music]
94:07 - okay which one did I mess up hopefully
94:14 - it didn't because well pretty much these
94:17 - are all the different ones starting with
94:20 - 100 well 100 and then we have 200 300
94:28 - 600 and we can kind of use this so if
94:31 - you have 638 700
94:43 - 50
94:46 - for stolen and so far
94:49 - who have zero oh boy
94:57 - and we don't have zero to start with
95:00 - with one okay
95:13 - I'm thinking I'm thinking
95:17 - let's just get some random numbers and
95:20 - see if we can find some fancy way today
95:23 - so 876 800
95:32 - and of 842 115 okay
95:39 - so we get the end also when we have over
95:42 - 100
95:49 - many conditions
96:02 - we could check
96:07 - if we well by default and chair is
96:12 - misspelled yeah true
96:15 - thank you
96:19 - we could start by checking
96:26 - well what's the link
96:30 - well I guess if a number bigger than 100
96:34 - if that's the case then we already have
96:38 - 100 which is seven characters then we
96:45 - have the end of Glee yeah if it's bigger
96:49 - than 100 101 right 101 I think it's and
96:57 - yeah okay 100 and so that's basically
97:03 - whenever we have over 100 then we have
97:07 - like 10 characters already which is good
97:11 - we can get rid of that next
97:24 - the only she will be with 1000 here but
97:27 - yeah that's another story
97:30 - if number is 100 well we can just return
97:35 - that 100 right 100 I'm just trying to
97:42 - think about some conditions we could use
97:45 - and if the number is a thousand
97:50 - one
97:53 - thousand how do you spell that thousand
97:56 - right thousand so that's eight that's
98:02 - returned 11
98:05 - oh wait so yeah oh yeah so it's good
98:11 - it's good because then we need to add
98:12 - them up okay good
98:14 - wait what's there get now if it's bigger
98:19 - than 100 we'll start with ten and then
98:26 - well we need to get all the digits
98:40 - let's see digits
98:45 - the the number the string this will
98:53 - convert to the string we want to have an
98:56 - array of numbers use modulus he
99:06 - yeah but the thing with modulus is that
99:07 - so for the first one will work right
99:10 - although if we have the second digit is
99:14 - one then we kinda need to use this kind
99:17 - of thing other than that yeah that will
99:21 - work
99:22 - so what I want here is the digit so we
99:29 - have all the three digits
99:33 - digits of zero this will be the first
99:38 - one so the hundredths place we can use
99:43 - this so if we have this as an object
99:49 - count
99:55 - yes
100:00 - you
100:01 - and for all of these instead of one we
100:07 - have three here well we have the numbers
100:11 - and letters right so here we have three
100:14 - four two five four three so cumbersome
100:19 - do but I guess baby steps
100:25 - three four six five four seven five four
100:31 - eight four four nine okay good
100:37 - so that could work because now we have
100:40 - the digits of zero and we could use this
100:43 - count so we can have count of digits of
100:47 - zero to be added to the son
100:52 - kind of right because for example if we
100:57 - have eight hundred and something we
101:00 - first add
101:03 - Oh eight
101:05 - dead
101:07 - could be a fixed number so we don't yeah
101:10 - all right
101:16 - wink wink
101:19 - yeah
101:24 - so many things to think about
101:32 - what's the prettiest solution for this
101:35 - problem
101:35 - oh well so if we have eight hundred and
101:39 - something we already added a hundred and
101:44 - tooth be tan and then we kind of add so
101:47 - if you have seven hundred the digit of
101:51 - the first place will be seven so seven
101:54 - is what five where but yeah it works so
102:01 - we add five to the Sun now the only
102:04 - issue is that if we have exactly seven
102:07 - hundred
102:09 - then we don't have that end so I guess
102:13 - we can check here if number modulus 100
102:18 - is zero because well wait one second so
102:29 - this accounts for hundred
102:34 - and
102:38 - and here we don't have that hand no end
102:41 - because we have exactly 700 600 so we
102:47 - can start here with left some equal stem
102:49 - and here we can just do some minus
102:54 - equals 3 so we kind of remove that
103:03 - and because it's a fixed number so 800
103:07 - 700 otherwise we have 700 and something
103:12 - right hanging good
103:15 - so we accounted for that
103:19 - [Music]
103:21 - okay
103:25 - now we
103:27 - for that digit the first one which was
103:29 - easier
103:33 - we're bigger than 100 a case we have
103:36 - three digits the hundreds digit then for
103:42 - the tens digit we have the digits of our
103:50 - of what one now this will be tricky
103:57 - any number other than
104:01 - 1 & 0 then we're going to use the days
104:09 - oh boy okay
104:20 - because if you have 890 something
104:28 - but I guess this will be I'm thinking
104:34 - thinking yeah it's just so brute-force I
104:42 - don't really like it though
104:45 - but yeah let's continue and hopefully
104:53 - basically all of this will be a function
104:56 - to get a word length and we'll get the
105:02 - number
105:06 - and here at the end we're going to
105:08 - return the Sun if we have and some
105:13 - otherwise we just return but whatever
105:16 - whatever we want but well whatever we
105:19 - have okay let me do this too so for 10
105:24 - is 3
105:27 - yeah I don't like the pro to do
105:40 - so many test case
105:44 - eleven is
105:50 - office seven also
105:56 - eight
106:01 - you
106:03 - seven again
106:05 - you
106:08 - 9
106:11 - eight
106:15 - eight then here we have 26
106:27 - six do we have any other special numbers
106:30 - we need to worry about by five six or
106:37 - seven seven now six
106:47 - and six again okay this well we have
106:53 - this here but oh well we already know
106:57 - that this is seven
107:02 - okay so what I want to do is whenever we
107:06 - have so here we have the tens digit
107:08 - right
107:11 - then state it
107:17 - if the tens digit is bigger than one
107:22 - then we already can use one of these
107:25 - right so we can do some class equals
107:29 - count of digits but count of tens digit
107:34 - plus zero this is the property of the
107:40 - object we want which will be well seven
107:44 - zero eight zero
107:47 - okay now else if it's one we need to do
107:55 - all of these thingies
108:02 - the 11 and 19 could be Narae with index
108:05 - 1 tonight
108:07 - yeah may be special case and well we
108:12 - already have them here so I guess we'll
108:16 - work with this object properties so if
108:19 - it's one we kind of won the count of ten
108:23 - digit plus the well last digit
108:29 - what's that D let
108:34 - let's ditch I don't know how it's called
108:36 - the digits of two
108:41 - last digit
108:47 - so heck so so heck well and the last
108:53 - digit we kind of want string it so last
108:57 - digit so if we have something like 1/7
109:04 - sorry this is not the house if one
109:09 - so if it's 816 so I want 6 1 & 6 60
109:19 - and well I'll sit zero so then we go to
109:24 - some plus equals count of less digit
109:33 - at six and six
109:36 - 806
109:40 - but here again we could have 0o but we
109:43 - kind of check that there okay
109:49 - all right so we don't have to worry
109:52 - about that we don't have to worry about
109:53 - that now we kind of did probably if we
109:57 - didn't mess up anything we didn't
110:02 - numbers
110:07 - over 100
110:11 - does it over about ten
110:21 - you
110:27 - [Music]
110:29 - I guess I'll save just to be clear digit
110:33 - is zero then we just add the last digit
110:40 - okay yes something's wrong here what
110:46 - Oh
110:55 - all right let's try our function which
111:01 - should hopefully
111:04 - give us the right answer for this
111:12 - and this Oh Polly let's see
111:18 - cancel the clog get word lengths of 340
111:25 - some is not affected good let's start
111:39 - wait wait wait wait wait sir yeah let's
111:43 - uh equal to all right so now it's
111:46 - defined 21 close but that really
111:52 - [Laughter]
112:04 - speaker than 100
112:08 - it's modulus by 100 is not zero so we
112:15 - don't subtract so we have 100 and yet so
112:21 - that's one two three four five six seven
112:26 - and yeah okay next we split the digit
112:32 - let's see digits what we have here three
112:36 - four to get here the sum will be
112:47 - threes of
112:49 - Oh
112:51 - okay fifteen by fifteen console dot log
112:57 - we put one here and some and here we put
113:01 - two and the Sun just to keep track
113:04 - okay so it's ten then three yeah this is
113:09 - five
113:09 - all right good so that's the next up we
113:15 - want to see so 340
113:24 - port so it's bigger that means that we
113:27 - go here three so three plus some so we
113:35 - get 40 which is 640 okay good
113:45 - oh and we didn't do the last one
113:52 - well I guess this is just the last digit
113:58 - so if a last digit is bigger than zero
114:03 - we just do this right
114:07 - okay - one two three good
114:12 - what's rock 4004 at 4040
114:21 - sorry yeah and then this is wait wait
114:25 - wait wait wait what I did so for T and
114:29 - this is 5 and this is I guess for teen
114:38 - forty now let's do it y-yeah or Tina gay
114:44 - so that's eight
114:47 - [Laughter]
114:48 - all right
114:53 - so we get 23 which is 23 which is good
114:58 - let's see for 150
115:04 - get plenty for
115:14 - 115
115:24 - yeah
115:31 - so we go here we add this
115:39 - yeah I guess
115:43 - if it's one
115:47 - then we need to do this if the digit is
115:50 - 1 so 115 we don't care about the last is
115:55 - what otherwise we kind of care
115:58 - so if tens digit is different than one
116:06 - then we do this
116:09 - so hacky
116:14 - but it works which is good
116:17 - oh boy
116:21 - started to get tired so 4:14 I guess all
116:28 - this should work what else let's try for
116:36 - 667 so let's see 667 so we have three we
116:47 - have seven
116:51 - three
116:53 - five
116:57 - and five wait a total of ten turn 23 23
117:08 - okay so apparently this works now the
117:11 - only issue well one of the issues is
117:14 - that we don't account for numbers less
117:19 - than 100 for which we kind of need to do
117:25 - this thing
117:32 - okay so let's remove this from here
117:37 - [Music]
117:39 - delete
117:41 - yeah
117:45 - it's not defined okay
117:53 - because data digits here
118:01 - okay so let's do this digits up here
118:08 - getting so complicated it's hard to keep
118:12 - track
118:13 - and it's probably buggy
118:18 - so if that's the case digits of one zero
118:24 - I guess what we could do is
118:32 - get the digits and reversed
118:40 - and now instead of digits of 0 we have
118:42 - bits of 2 because it's the last one if
118:46 - the numbers bigger than 0 would then 100
118:49 - if it's 100
118:55 - and that it's good
118:58 - 2007 okay we can keep that and now
119:01 - instead of having tens digits the same
119:04 - but this will be zero alright so now we
119:07 - kind of reverse the number and we first
119:11 - check if it's bigger than 100 we add
119:14 - what we want for 100 otherwise we kind
119:18 - of do our thing with digits and less
119:21 - digits and all that so let's see four
119:23 - five
119:24 - we should get fined for 504 what about
119:31 - 17
119:33 - 9 is that true 17 9 yeah look at that
119:39 - what about 10 3
119:44 - okay what about 110 so 110 she's 3
119:58 - seven
120:00 - three three that's a total of sixteen
120:07 - well it's all folks
120:12 - what about thousand
120:15 - you
120:21 - 1,000 hopefully that's 1000 so 3 plus 3
120:29 - 6 8 11 all right so let's do one more
120:38 - what about 67 so 67
120:45 - which is five plus five ten
120:48 - look at that works
120:53 - okay
120:56 - you
120:59 - yeah so we have the special cases
121:04 - we have another console somewhere this
121:08 - but now this function
121:12 - should hopefully work properly and we
121:16 - can kind of go over here to let some for
121:21 - left eye's one I less than limit I plus
121:29 - plus and here we just get word length of
121:36 - i and some plus equals and return some
121:42 - okay and here we cancel that log son
121:54 - which were five is fifteen all right so
121:56 - it's not good yet let's see why
122:02 - you
122:05 - [Music]
122:08 - okay Const length will be days I want to
122:13 - debug it so I put it here add it here
122:15 - and then I do concern that log I and
122:21 - linked I want to see all the light
122:27 - okay oh I see it didn't go up to five
122:36 - maybe that's the only issue we have them
122:39 - correct
122:40 - look at that pasa
122:43 - what about 150
122:50 - well that name of the castle now we
122:57 - missed by four okay what about one
123:06 - thousand
123:08 - we miss by 20
123:12 - so probably
123:16 - one of these is messed up
123:24 - thirty how do you call those numbers so
123:29 - 11 12 13 13 some of probably some of it
123:37 - is messed up
123:45 - and probably deaths Oh 16 hopefully
123:51 - that's the issue otherwise
123:59 - 96
124:03 - well we kind of don't use this so
124:05 - bye-bye let's go back to this okay
124:14 - what would be the issue or characters
124:18 - difference
124:22 - [Music]
124:28 - you
124:36 - nine eight seven
124:39 - so yeah just something very very very
124:49 - so it's a number which only pairs like
124:51 - four times
125:00 - you
125:10 - whoa look at that I got it
125:14 - this is six not seven and this is also
125:17 - six look at that nice so that was the
125:24 - issue
125:27 - perfect okey this was totally mess but
125:35 - well we kind of have it now which is
125:41 - good let's run the test and let's
125:46 - download the solution save it and never
125:49 - speak about it again I'm so securities
125:54 - how someone else did it
125:59 - let's see from project Euler def net
126:06 - here we can can act on my location
126:14 - we can go to this numbers letter counts
126:23 - and I think I need to sign Ain
126:29 - let me do it of off-screen although not
126:32 - sure what's my
126:40 - you
126:43 - I have no idea what they used
126:47 - guess let's register
126:53 - you win the spelling bee contest for a
126:57 - non-native English speaker I am pretty
127:00 - happy okay
127:09 - I want to create a new account here I
127:14 - think here on the platform if we submit
127:22 - okay so username taken so I can create
127:25 - that let's see awesome so I managed to
127:39 - log in you can see that they did a
127:42 - couple here so what I want to do go to
127:51 - 17 let's see if the number that the
127:59 - hominin would if all the numbers from 1
128:02 - to 1000 inclusive were written out in
128:03 - words how many letters would it be so we
128:07 - already have the answer which is this we
128:10 - can check
128:14 - this broad platform only gives you the
128:17 - problem and then you need to submit the
128:20 - number all right so now we can go to the
128:23 - archives and
128:28 - wait
128:36 - you
128:38 - and see how else people did it
128:47 - I've see their love
128:50 - of
128:52 - Java C C++ can I check JavaScript for
128:57 - some reason
129:01 - now
129:06 - you
129:12 - I think yeah I had some issue sorry
129:19 - about that I had to restart the Mac but
129:23 - yeah this will probably cut off from the
129:25 - livestream
129:26 - [Laughter]
129:32 - yeah but I am back yeah so we were
129:35 - looking at at what some other people did
129:39 - to solve this
129:43 - hopefully went back let me know if you
129:46 - can hear me
129:49 - yeah okay I can see myself alright sorry
129:53 - about that
129:56 - so yeah
129:59 - you can see here that one I know one
130:05 - person Harvey mojo did something similar
130:08 - with what we had if it's less than 20 if
130:15 - it's less than 100
130:22 - okay
130:25 - and oh boy let's bite another thing can
130:29 - we have something I know but yeah pretty
130:34 - similar approaches can find Java crypt
130:41 - probably no one directly JavaScript
130:46 - let's see
130:48 - this page nope
130:53 - this page yeah I won't check all the
130:56 - pages oh wow yeah so you need toward
131:02 - decimal to word that small word
131:06 - probably smarter than I had but yeah oh
131:10 - well all right thank you all for joining
131:18 - I'm sorry for the interruption at the
131:20 - end hopefully yeah it should have picked
131:23 - up yeah let's run this submit and way
131:29 - completed that - so today whoa look at
131:34 - this
131:36 - why don't I have my that's weird
131:42 - all right yeah that night works so today
131:46 - we completed five more challenges which
131:51 - were pretty tough especially
131:53 - [Music]
131:55 - this one no the this one this one was
132:02 - the toughest but well with a bit of
132:05 - goo-gooing and thanks to our Wikipedia
132:08 - buddy we could find out one solution to
132:12 - solve this all right thank your for
132:15 - joining I hope you enjoyed it I hope you
132:17 - learn something feel free to continue
132:19 - the challenge feel free to do with them
132:22 - on your own next week we're going to
132:25 - continue and see how far we can get
132:27 - thank you for joining have a good day
132:30 - and I'll see you next time bye

Cleaned transcript:

you hello everyone and welcome to the third episode I think we should call them episodes of the project Euler in which we're going to continue our journey to solve the project Euler problems okay so look at that my mouse disconnected that's a good thing how are you today let me see if everything's right let me know if you can hear me let's see alright I think we'd have a bit of a delay so yeah just let me know when you can hear me for those of you don't know my name is Tory pop I'm a software developer engineer program good sorry about it alright yeah I was checking the stream okay get so apparently it works so yeah I was as I'll be saying I am for it pop I am so far engineer I have a youtube channel I do coding tutorials and live streams and if we could camp I started doing this project order challenges I think three or four weeks ago and this is the third part we did the first five in the first stream then we did next seven I think and now we're going to continue I don't know how far we can get I haven't prepared I mean I didn't wanted to have the solution ready so that we can solve them together which is good because we can see how's the proach maybe we have to Google some things to learn about callouts I guess we're going to see when we get there yeah this time the chat will be opened so make sure you don't spam that much [Laughter] yeah so project Euler I saw someone asking what project Euler is so is a series of challenging mathematical or computer programming problems meant to delve into family unfamiliar areas by the way I'm nothing oh yeah so my mouse apparently wants to die today so basically it's coding challenges and of the free code camp curriculum we can do it in JavaScript which is nice if you haven't saw the previous live streams I suggest you go and look over and also you should start looking at them on your own and then maybe check in with us to see how how it's going all right let me see I have here another battery to change my my dynamic Mouse just a second hello everyone I see so many people that's crazy ok let me change this yes sorry about that but didn't know that my mouse is being fancy today let's hope it won't die again or I just have to use some other batteries all right well if I think the chat has a 30 second delay so what I would suggest you use the chat is for questions and okay let's see if this works now for questions and if I get stuck maybe you can help me last time Laurent helped me a lot so okay so my mic does I'm my mouse doesn't want to work which is fun we're going to start with the pause on the free code camp we're going to use JavaScript okay let me get some new batteries just a second all this work okay just give me a few seconds painted you all right I have to go to get new pair of batteries yeah it is a delay from the chat and the live stream so keep that in mind I'm not sure what's the latency but it might be a delay of a couple of seconds up to even 20 seconds so it depends on how they setup the stream but yeah alright hopefully now the mouse won't die see this is a developer's journey sometimes you your mouse will die when you need it the most okay good taking too long to replace batteries yeah I'm doing my best buddy alright so let's see the problem we are going to start today it's the large Sun what is it about oh look at all these numbers okay let's see work out the first ten digits of the sum of the following 150 digit numbers okay so I think we need to add up all these numbers and keep track of the last 10 digits okay let's see we also have here test number I think what they will provide us is just this big number yeah but although I see here is an array Oh 150 digit numbers okay so we have these numbers which will be inside of an array and we need to add them up and only return the last ten digits Papa reporting hello our pub okay so how will we do this what I'm thinking is that we basically only need the less than digits of all the numbers we're going to add them up and then store the result in a 10 digit number right I'm not sure that we need all the number so for example this part because they'll add up and do some things let's see so we have 3 6 9 10 for the test number we get oh the first ten digits okay so now the last all right for some reason I thought that it's little less than digit you okay so then we kind of neat add up all the numbers mmm and we go up and store the lessthan yeah first and not last okay you so let's see Laura do you have any ideas how we can approach this I guess we can keep adding the digits the good thing is that they all have the same number of digits right so we can kind of go one digit at a time and store the result yes some people in the chat are kind of route so don't do that not sure why this is not as I said I don't have the solution from the beginning we're going to do it on it well at the first kill and we're going to see the approach and how we what's this well what's the way to get to the solution so yeah yep let's start by doing this approach we're going to look over the string get the numbers and add them up you know ending number in a result numbers let's see how that works result number will be a string well or we could use an array let's try that so we're going to have an array and we're going to take is in the test numbers we have two strings which is good so we have 50 digits we can go forward i 0 i LS that 50 i plus plus and here we can get digit 1 well be well I kinda need let's see you know we know that intestines we have to string so we can do something like array of zero and the index will be let's rate at went fifty minus I so fifty I right because I is zero we want this digit then I is one you said at the beginning donate all digits for every number the most rabid leads are able to the sum well yeah we kind of need all the digits right because they might add up and change the last well the first then right try that so digit 1 digit 2 will be array of 1 so this string and 50 I okay so we have the two digits and we want to add them together so result numb well we're going to push digit one well let's just keep one and two one and two so one plus two right now this will work so here we're going to have 0 plus 8 will be 8 5 plus 3 will be 8 2 plus 5 will be 7 and so on the only issue will be for example here where we have 4 & 6 when we add them up it will be 10 so we have one extra for the next or than the next addition so we need to account for death okay let's see we could use a boolean to keep track of that so has what may be over ten and will be false so if one plus two and we had variable numbers but let's work with this and see how it goes if one plus two is bigger than 9 so it's 10 11 up to 18 we want over 10 to be true otherwise over 10 will be false and here when we push we kind of want to keep track of that also so 1 + 2 + / 10 if we have over 10 we want to add 1 otherwise we had 0 right but then here we also need to account for that right you might have so let's see we have four we have nine plus nine is 18 so we move one let's see an example here yeah so this is the perfect example 4 plus 6 is 10 so we move one here and then 7 plus 2 is 9 but with one from the previous addition we have 10 again right so let's create a sum and do 1 plus 2 plus is over 10 we can do this ternary thingy so then we add the sum and then we check if the sum is bigger than 9 if it is then we set it true otherwise we set it to false this should work so at the end now we're going to have an array let's see result now and let's counsel that law get here we should have an array oh there are strings good good good good good so we need to convert them to strings sorry from strings to numbers yeah not a number okay fifty minus zero so we don't have an index 50 we have an index 49 so minus I minus one thank you our pan in the name of liquor can for your donation yeah yeah thank you yeah it's kind of a bummer some people are just mean yeah and you can see other issue we have now we are pushing the twodigit numbers into the Sun and we don't want that so we can do module stem and then it will cut off that part okay so now hopefully if we did a good job we have the correct calculation for these two numbers and let's see so we start from the right and we need to end up here so the first 10 digits we have it other way around so the last 10 digits here let's see do we have something yeah look at that 8 3 4 8 4 2 2 5 2 1 so we have the answer here which is good which is pretty pretty good we just need to get it up right okay so instead of returning the result now we want to do a result now that let's see slice minus 10 so the less than numbers we want to reverse it like that we want to join it as a string like that and we want to convert it to a number like that so now if we run this test we should solve the first one here which is good you yeah that's true by the way for those of you who want to chat and also want to support this nonprofit which is very helpful I think they helped hundreds of thousands developers well guess if Amelia's with the articles and everything I don't know the numbers exactly but it's very helpful I promote them a lot if you want to support it you can become a member and then well you will be able to chat in the live chat okay good so we kind of have it for one well with two numbers what we have here is let's see 150 digit numbers so let's see we can do it with the pairs of two right I'm thinking yeah so we can kind to the pairs of two and then keep adding to the number let's see and all of them the number will get pretty pretty big so it will be more deeds here we have 50 digits but at the end we're going to have probably 51 digits 52 digit 7 I don't know so we need to account for that let's see we could store the result number in this array well we could store the first number right in this array and then add the second one to eight the third one to eight and so on and so forth and at the end we're going to have this big big big number is just that we're pushing here so that means that when it kinda need to push again yeah it's not not the best approach I'm thinking how we can do that because we don't want to lose the first n digit you you we could change the digit of the index instead of pushing so this works with two numbers but with more members might get bigger and we need to count for that or there is a better way can't think of a better way now you so let's do it manually once so we're going to add these numbers and these numbers and so on and so forth and at the end we're going to have a number from these two numbers right which as of now will be pushed in this array but then we kind of need to use that array and add up this number and the only issue with this approach we are having now is that well we kind of go over only 50 digits but this is the top the sum might get bigger I know that in node I think there is a big hint a library which could save us but I'm not sure here because if we just add the numbers so if you do something like let's test nums of zero plus test noms of one while this is concatenation we can convert them to numbers yes you can see that we have plus 49 but we kind of have the do we have the four digit Oh okay we kind of have the digits here hmm welcome and as a supporter thank you on behalf of wicked camp yes so I think we over well we overcomplicated this let's see I'm going to comment this out just to save it for now and we're going to return let's do the good old reduce we have the accumulator the item and we want to add the accumulator the number parts in item and we want to start from zero all right let's run this and see what we get well we kind of need this big number what happens if we say to string aand what happens if we do think substring zero to ten amazing [Laughter] let's see substring I always have to look at substring so I want numbers I think it's with like splice from 0 to index well doesn't seem to work though substring to really so what's happening doesn't it work for two string let's let's do this in the console as we can see exactly what oops what it looks like if it's a string it or if it's a number okay well look at all this because if you have a number 8 plus 8 it's this color say purple nice but if we have 8 plus 8 while we have the codes so we can use this array like that and we can apply the reduce on it like that and you can see that we have a number so now if we do two string oops yeah we get the string so what if we do substring now or substa let's zero ten okay so here it works which is good we kind of want not ten we want 12 because well we have the dot two it's inclusive so we want this and want to replace the dot with a string yeah look at so we add this although there are strings and we get a a plus 49 not sure up to how much it goes and then we use the reduce to add up all the numbers inside accumulator then we converted the string we get the 11 characters we want and we replace the dot seems to work let's see we use this here so yeah basically what I did at beginning it was pointless although you can see that oh the console.log doesn't work because we're having this oops so we don't have the call of the large side my bad sorry large sum with the test numbs yeah look at that yep the only issue is that it's not the number and we can convert it the number adding a plus well look at that it was much simpler than I originally thought pretty crazy yeah sorry about okay so we add up all the numbers with videos we convert the string to a number and then we convert it back to a string we get the first 11 characters and we replace the dot okay can I think if you save this and we go to the next one I just want to see if it will remain saved okay overcomplicating added highest yeah it doesn't oh well I guess we just have to download the code good doesn't matter how big the number is it at the end you need the first ten digit I would throw away the very small widget not sure what do you mean with that all right good so let's see the longest Kaulitz sorry if I mispronounced your name or I don't I think it's a name right who is this guy but or maybe not the guy it's conjecture okay okay let's see what it says so the following iterative sequence is defined for the set of positive integers and becomes half of n if n is even or n becomes 3 n plus 1 if if n is odd I've heard this before using the rule above and started with 13 we generate the following sequence so this is odd okay and we end up to 1 yeah I sat down but and I just didn't like it it can be seen that this sequence starting at 13 and finishing at one contains ten terms one two three four five six seven eight nine ten yeah although it has been proved well it has not yet been proved sorry it is thought that all starting numbers finished what which starting number under the given a limit produces the longest chain well one the chain starts with terms are allowed to go above 1 million once okay so that's the read it again because my English is not the best so which starting number under the given limit so we have a little limit produces produces the longest chain note once the chain starts the terms are allowed to go above 1 million okay this is interesting we need to find which number produces the longest chain okay one way would be to do the brute force and check for all the numbers created create a sequence and then see which is the longest but we kinda don't want to do that have another idea in mind so yeah if we do the let's start with that but you'll see that it will time out eventually so we have the limit and we need to start which starting number under the given limit produces under four let I equals 1 I less than the limit because we want under the limit we want to check the sequence so let's see we're going to write a function which will do the calculation and it will check to see how long it will take right okay let me think so let's write the function check length I'll check call length of the number okay and here we can do it a while number is different than one right oh and I guess we can start with two we want to do this thing here so if it's even if number modulus to zero we want to do number / yeah Thank You Lauren by the way let me know what's the delay of the chat let me know when you hear this I probably may need to set up a lower natural cold just so it'd be totally faster okay so if the number is even we want to divide by two else we want to do three times number plus one so this will be while is different than one right okay if number is one then want to return what this will guess we can say get call it slight otherwise we want to say here length which will be zero and here in the wire loop will increase the length plus plus and we're going to return the line like that okay good now you'll see that this won't be the best approach because for every number we're redoing all these calculations and it will timeout but let's let's just start with this and then we can adjust it okay oh boy it's pretty pretty delayed okay so we want to return the number for which the length is the longest so we want to save the number well D number this will be I don't know this will be two by default and then we want to say the MaxLite will be zero so here we're going to get a linked from the Catholics length of the eye which will be the number so we're going over all the numbers right up to the limit we get the length and now we're going to check if length is greater than max length then we want to do two things first max length will be learned we want to reassign the max length and we want to change the number I just added D number no it's not the best but we have the number here so I want it to be special and the number will be I and here at the end we can return the number let's console the clock this and they should hopefully work you can see that for 14 it works which is good well it worked for all of them oops yeah okay guess what I was thinking that it will be way too many calculations because for this number for example it will go up to 1 million so for all of the 1 Million numbers or you can see that why okay so up I guess oh you can see sorry let me about this so for 1 million numbers it will do all this and it should take a lot of time but apparently trans and it works so then we shouldn't worry I was thinking about doing an approach where we kind of store the numbers and their length so for example we know that from five to one it will take one two three four five steps right from 13 to one it will take that so I was thinking your Mac is too fast I'm not sure if it runs on my Mac or under servers yeah so what I was thinking is to store these numbers and whenever we go over a number and we already have it so for 16 all right let's sport to for example we have let's see one two three four five six seven eight nine ten yeah so for 13 we have ten for two we have two right although it's weird we only have one step but okay oh it accounts for the chain never mind so if we store the to having the length of two that it's chain to be two then whenever we find two again we can just use that right for example for five we know that we have a length of 1 2 3 4 5 6 so we will just use it whenever we get a number which is 5 instead of doing the calculations again we already knew that for 5 at 6 right memorization okay Thank You Laurent yeah something like that but because it works yeah something like a cache so I was thinking to have a big object with key value pairs then number on the left and the length on the right and we could always check if we have that number in the object then we could use probably a set will work better but I it said that much so oh wow it works like this that's a challenge for you if you want do the second approach I will just move on because it will probably take a lot of time and well I guess we better do another one right okay let's see lettuce pads or Latisse pads hopefully it not miss pross it starting in the topleft corner of a 2x2 grid and only being able to move to the right and down there are exactly six routes to the bottom right corner how many such routes are there to a given grade size okay this is interesting I have no idea how to do this yeah this will be the end Lauren do you have any idea how we can approach this oh boy so mmmhmm and thinking now here and we have two choices then here we if we reach here we have two choices here we only have one choice I'm 100% sure that there must be some kind of algorithm but I don't know which one but the heavy mind is using the matrix well checking all possibilities let's see yeah this is fun okay so can we find out how many approaches are therefore from the point so here we have one two three four points which can go one two ways and one two three four points which can only go one way and that's six let me write this down for a twobytwo do have topples in JSI solved it with arrays of positions like x0 y0 and start topples not sure those are also yay so we don't have a lot when it comes to or we have six routes for a 4x4 we have 70 routes that's a lot 420 we have that number 49 to 640 thousand six hundred and twenty you solve it with arrays of positions how far you I see you've played a lot wait the project Euler how far are you ah so we could do with X&Y as you said let's say so this will be 0 0 0 1 0 2 1 0 1 1 1 2 & 2 0 2 1 2 2 and yeah I don't really have a clue we could because let's say we're well we are here right so we can go to the right and down and well when we go to the ride we can only go one more yeah these problems are getting harder and harder let's see if we as I said from here we have two directions here here here and just one there we kind of have an eight what will be the result for three I'm thinking if we can kind of use that number somehow because there must be a formula I'm sure there must be a formula I'm just trying to guess what could it be and very curious what's the the number for three and maybe we can see a battered should I start drawing those yeah so one two three or five six one two three four five six now a position like 0 0 plus move right is like adding 0 1 move down its what zero but yeah but then you have one two one two or will you go here also and let's see one too but then you kind of end up to it too yeah I wish we had the the solution for three maybe we could find a pattern then one two three one two three a formula 2 but it's super advanced Matt and I do not understand it yeah 1 2 how many can you run your I wouldn't want to to draw four 3x3 could you run your script and tell me how many routes we have for three and maybe then I can think of something help me out here Lauren this is why I want to do maybe we can find some kind of formula or wait think about it kind of have something but yeah for three yeah I'm going baby steps hmm this is interesting let's see what Google says about Latisse pads maybe we read some documentation and nor days of this pad combin atronics a lot this pad is in well a lot of things here I don't understand I am NOT very very Matty person though keep that in mind these pets are often used to count other combinatorial objects similarly there are many conventional objects that count the number UPI is think here okay yeah pretty interesting you Northeast Latisse pads have close connections to the number of community come by nations which are counted by the binomial coefficient and arranged in Pascal triangle okay 4x4 74 seventy okay is it cheating because looking this up hope not it's not we make the rules so I see the Pascal triangle here which is you have ones on the sides and then you kind of add them up as you go right so one with one it's still one with 2 is 3 1 which is 4 1 is 5 K 4 with 6 is 10 with tens fifteen fifteen or twenty thirty five thirty five seventy okay so the numbers and diagonal is like you can see here we have six which is for two by two right six and then for 4x4 sorry I think for 3x3 we have 20 and for 4x4 we have 70 and I think wait if we go this down this road we get the number so let's see the next one 5x5 will be something like six 2021 six okay let me think again so here will be half six here we're going to have six plus 15 which is 21 here we'll have 21 plus 35 which will be 56 and 56 plus 70 will be what 126 yeah but we need this number so that number will be 126 times 2 252 and we don't have 4 5 but I guess that will be number okay but how can we code this now our approach will be well pretty much the same but the other direction here we have northeast but we want Saudis soda straight down and right I'm thinking of an approach to heaven array let's see so we need a triangle which will look something like this 1 1 2 1 1 2 3 2 1 right yeah one two one wait no so one one one okay so I missed a couple of steps one one and then we have 1 2 1 and then we have 1 3 3 1 ok so they add up so one does anyone understand what I'm doing here something like that but the next one will be one for sorry this is three six four one right so we can need to go down these three and we get our result this will be our fort so the center of this number will be 2 by 2 which is 4 ya know so forth how can we find it so two by two is four and we have the fifth row from the pyramid I guess let me move can I move everything to the right yeah I want to the next one and the next one so two more 1 5 10 oops this kind of going to put 0 here well let's start let's star 5 & 1 and here we have 1 615 well 15 will be this it will have 30 and on 2010 plus 10 so 20 will be X I'm going to write down what we have here 6 & 1 ok so we have a star to be 10pound to be 15 or no as that's the hashtag X to be 20 okay so if we want the 3 by 3 1 2 3 4 5 6 7 and the seventh number here in the center hmm so this is what we want for 2 by 2 this is what 1 4 3 by 3 Oh one two three okay so they kind of go odd number of fashion I guess this is per one by one 2x2 3x3 okay now how can we convert this into code we need this pyramid and if we find this out we'll going to solve the problem it'll be another approach that you took Laurent but oh well we should eventually reach that okay I'm thinking so here we have an array with one digit with two digits 3 sorry yeah an array with one I had one number two numbers three numbers four numbers yet so our array should look something like this so first one will be this yeah this is the PI well let's see I don't want to mispronounce yeah Pythagorean treat a Pascal strike okay yet so we can use that good so first one will be dead the second one will be one one the third one will be one to one the fourth one will be 1 3 3 1 okay how can I get from this to this sing sing sing sing tink so we could kind of start with an array which has this just the 1 and the 1 1 and then when we construct the next array we do this Plus this now doesn't work we kind of have always except for the first one we have ones and deep sides and then the middle this one will be tasted but then this one will be these two okay okay your your was brute yeah probably your was better and just I don't know doing the baby steps to hopefully get there okay have an idea we start with this array and for the next items we do we go over the element well when we construct this array we'll put one and one at the end and in the middle we're going to go over this array and add up the numbers right now when we construct this array we put 1 and 1 on the ends and then we add this 2 and this 2 and so forth right good so then we're going to have the pyramid and our answer oh I can't got it so our answer will be let me think so the array des with backtracking yeah I think Thank You Michel in for donating the to two pounds thank you in the name of picker camp yeah probably that will be a better approach but I don't know those I think starting with these problems I kind of have to learn more about all all the other items and stuff but yeah thank you thank you for joining and for donating okay so yeah where were we good so we're going to have our past call triangle I could it could just well I couldn't do it for all these numbers but yeah we're going to start with this and the next item so first we need to figure out how many items we want to have and then when we create the last C so this is the answer for the one by one this is the answer for two by two this will be the answer for three by three sorry so one two yeah this will be for too much yeah exactly twenty okay so we need this Pascal triangle linked to be let's see for 2x2 we want it to be five four three by three we want it to be seven one two three four five six seven so 3 times 2 plus 1 2 times 2 plus 1 the next one will be 4 times 2 8 plus 1 okay good so we're going to do a for loop for let I will be 0 and we're going to go up to great size times 2 plus 1 and we're going to start with index two because we already have these two there yeah now in the Pascal triangle we want to push something okay I forgot here I pause pause so we want to push something this something will be the new array which we need to construct based on the previous array yeah kind of Hecky but hopefully it will work so prove prover a will be well let's just call it triangle I'll just call it three easier to type three three and try Hey okay index I minus one so we're going to get this array and for this array we're going to use the previous array and we want to do something with it create next light using the previous light let's call it that hopefully it makes sense for you it does in my mind but who knows okay and the next create next line we're going to use a line function and here so what you want to do first we want to have a line array now so we get that line new line will have an array of one and one and in the middle oh you know what we can do it like this have a 1 and new line that push a 1 at the end so we have this part right okay and we need to construct these numbers so how are we going to do that we have a line we want to go over the line so for let hi zero I less than line that length if I could type I plus plus length again and here we want to add Const um well be line of I plus line of I plus 1 so this one and this one and then in the next loop if we are here and want construct these two we get these two and then this do okay and we want to go up to the last number so we don't want to get this because we don't have a number after it okay and the new lines are going to push the new item then we push that one at the end and then we returned in your line does it make sense hopefully does let me comment this out let me counsel that plug this and now if we did everything right at the end here in the three array we should have this look at that how beautiful like it okay and what we're searching for is pretty much this number so the last array the middle number so const last ray will be try that a slice minus 1 and const medial number will be less the ray of index less tray that length so let's see this one is one two three four five six seven eight nine and we won the element at index zero one two three four so / and met that floor right now n divided by 2 is 4 point 5 then we delete the 5 at the end of that 5 and we get the middle number Lester ray okay something's not good so we slice let's see the last three oh so it's oh I see so we don't want to slice here we kind of want to get a last item my bad so three that length minus one okay get so then we have the last array or the last line I think we can use that last line just be more thoughtful about it and then the middle number will be seventy okay Hey look at that it worked yeah a lot of thought process about it well behind it and we kind of needed to see this and when we had that well yeah so it might be cheating maybe not we did it well we didn't copy anything so we created our own so yeah it's not cheating right okay I hope everything's working so we can go to the next one I kind of want to download this let's see yeah good save that there all right yeah hopefully you got it it was probably the hardest one we did so far okay let's go to the next one Apple it'll be easier all right so let's see problem 16 power digits son 2 ^ 15 is 32,768 and the sum of its digits is 26 what is the sum of the digits of the number 2 ^ okay this will be interesting I guess if we do consult a clock here so we see the result and if we do net that pao2 to the exponent okay Thank You Laurent so for 15 it works for 128 yeah so that was something I was afraid of and for 1000 we get this number oh hey and we need to add up the digits of this number we have here a plus so this number has 302 digits pretty nice weight pretty nice not really but what happens if we do / 10 so I'm thinking if we could somehow get the digits okay we could use Martin and divided by 10 to get digits I think but yeah okay the big number will be this and the Sun will start with zero and while the big number well big number is the big number is what so we keep removing the digit so for example if you happy 15 we want to remove this digit add this digit plate remove it so on and so forth so while this number is bigger than zero cheating will be to use the formula directly round sickles okay so let me copy this this will be the formula for the previous one so two times n factorial divided by n factorial times n factorial okay it is crazy nice yeah so this was the formula for the previous one pretty clever but who knows I knew they had to be some kind of formula because at the end is PI tag Pascal's triangle and it has all sorts of crazy things going on okay let's get back to this one so while the big number is bigger than zero we want to do something like that some plus equals big number modulus ten and big number divided by ten well I guess we can do mat that floor big number by ten he's big only okay okay it's really not bigger all right so some twenty six again this works for this number this should work for 128 yep so we kind of miss there something yeah what about one thousand okay thing is not working correctly what is it they kind of lose I think what if we don't floor yeah we want to chop off digit can we do it should work though yeah so it chuff's the numbers but yeah let's also see cause last digit I hope it is and we add this I want to see what's the last digit also will it get it right six four zero two four six six four four eight 006 why is that six oh oh well yeah that's weird though see here it works here it works here it works here it doesn't work anymore that's weird why is 8 you you why is this 0 6 and this 8 is there some JavaScript shooter or who knows oh you know what occurred instead of doing this I could just say to string and substring minus one and here we're going to add the last digit like that so apparently no sub strings oversteer okay good yeah this seems to work better I don't know these numbers though so hopefully these digits are good yeah not really you can see that it gets this +10 38 we don't want that you you another approach I still get confused why I didn't work with modulus tan you I'm thinking what would what could we here let's see something else I want to check its modulus tan what's the difference we have 1 6 56 and we need 166 so it's a 10digit different but then well then difference here is 8 here is 8 here is 6 so that's probably they should you you and I don't know how else could we do because we get these plus 38 so we go don't get full number with begins we could have done it Oh you do we need to convert to an array of digits and just store everything in our array I wouldn't find that you and thinking so if we do that we start with two and then we multiply by two we get four to six yeah you so multiplication with two is like adding the same number twice right so if we have ace an array with these digits and we want to have well the duplication of this we just add this number again and we can add each number with each number like that in your array the reason why I want to convert this to an array because it will be easier at the end to use reduce and get all the digits although I'm still yet surprised why modular standing doesn't work maybe because the number is too big huh weird so I guess let's do that approach I'm thinking so we start we're going to have summer if we start with two then four then eight then not 16 but either 1 6 or 6/1 you then we have not 6 1 + 6 1 so 6 + 6 will be 12 so we keep 2 1 plus 1 will be with 2 and with the one before will be 3 and if we do this approach at the end we're going to end up with well this number but in our array can just add up the digits so how we do this so we go over the digit and we multiplied by 2 and if the number is bigger the next loop will get +1 okay kind of tricky but yeah let's keep this here and I'm going to do this sort of thing how far we need to go well we're going to the for loop okay so let array will be a two and four let me push this up a bit for let I less than zero sorry I 0 I less than exponent so if we have 2 then we multiply it once ok that works yep so now we want to go over the digits of the array multiply them and if it's bigger than 10 we want to move the digit we kind of did this before right so yeah array that 4 but I think we're going to change this array because money we get from eight to six one which is sixteen we kind of need to push a one there at the end which will be interesting Oh so for let J equals zero J less than rate of length J plus plus and here what we want to do so array of J will be array of J times two good if array of J now is bigger than 9 1 turay of J to be J modulus 10 so we chop off D well second digit and we want to keep track of some kind of boolean let over 10 we kind of did this before this will be false and if that's the case then over time we'll be through else over ten will be false okay so we multiply it reverse the array yeah well I want to rather push then pop you know because we the multiplication is kind of from there right of the side of the number right if you have something like 1248 times 2 you do something like this right so we do do 2 times 8 16 oops and then we keep 1 + 2 times 4 is 8 plus 1 is 9 then we have 4 + 2 right so that's kind of the approach you do this is why I'm doing the numbers reversed so when you multiply you just go well hope it makes sense okay so we multiply it if it's bigger then we chop off the digit and with over 10 is plus okay and we kind of want to do the same thing here again let's so yeah new value I guess will be this plus over 10 if it is then we add 1 otherwise we had 0 and the new value will be this and if the new value is bigger than nine then we chop off that digit and we add it to yeah okay yeah over ten will be through so we had it next time all right yep this should do something not sure yet what let's return the Ray let's see what we get yeah okay he definitely didn't work so why is that Jay so it goes over the rail length nope it should go so it goes once Oh so we kind of want here if over ten at the end if we still have over ten then we want to do a array that push one so yeah yeah find out so this works now what we did is that so we have 2 4 8 16 so when we have 16 we kind of did 8 times 2 we added 6 but then we didn't have one so we kind of want to push one at the end and now hopefully well if we do let's see 2 to the power of 10 should be okay that's to the power of 11 yeah so two to the power of ten is 1,024 two to the power of ten yeah 11 is this so we're off by one why because we start here so let's do minus one okay yeah to the power of 2 is 4 to the power of 3 is 8 16 32 and so on yeah so we have all the digits now even for this big number look at that and at the end here we want to use our dear dear reduce method accumulator item box item 0 and voila so this just adds up all the digits in this array well all the numbers and there we go for 1,000 we have 1366 for 128 we have this and for 15 we have this if we run this should work let's download it and move on but let me go over again hopefully you understood it but let's see we can remove this although and I don't know why this didn't work in why I didn't get the last digit correct but nevertheless we just created the number and edited digits in an array under the calculations and at the end we add up all the numbers hopefully this makes sense it does in my head but yeah alright let's go to the next one how much time we have left we could let's see the last one and if it's too hard we're going to leave it for the next one or the next session if not we're going to date today let's see number letter counts okay if the numbers one two five I've written out in words oh boy one two three four five then there are three plus three plus five plus four plus four letters in total all the numbers from one to given limit inclusive or written out in words how many letters would be used note do not count spaces or hyphens for example three four to three hundred and three hundred and forty two contains twenty three letters and 115 contains twenty letters the use of end when written out numbers is a compliance with British usage he's in compliance so okay let's see one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen twenty three 3 + 7 10 13 + 8 10 six plus so many sevens 13 plus one two three four five six seven okay seven at 820 all right okay okay okay okay okay good good good but not so good let me drink some water you okay the good part is that we only go up to 1000 inclusive limit inclusive so yep no thinking we have so many variations so let's write them down 1 is 1 2 is 2 3 is 3 4 is 4 5 6 7 8 9 and then we start with 11 so right 13 let me know if I ride them wrong 14 if you hopefully right tomorrow all right heaven throw them in a way sixteen seventeen eight he'd this doesn't look right if he'd yeah okay so it's 15 not five teen okay 19 and then 2030 the good part is that we start with days 40 50 60 70 baby a tea and okay which one did I mess up hopefully it didn't because well pretty much these are all the different ones starting with 100 well 100 and then we have 200 300 600 and we can kind of use this so if you have 638 700 50 for stolen and so far who have zero oh boy and we don't have zero to start with with one okay I'm thinking I'm thinking let's just get some random numbers and see if we can find some fancy way today so 876 800 and of 842 115 okay so we get the end also when we have over 100 many conditions we could check if we well by default and chair is misspelled yeah true thank you we could start by checking well what's the link well I guess if a number bigger than 100 if that's the case then we already have 100 which is seven characters then we have the end of Glee yeah if it's bigger than 100 101 right 101 I think it's and yeah okay 100 and so that's basically whenever we have over 100 then we have like 10 characters already which is good we can get rid of that next the only she will be with 1000 here but yeah that's another story if number is 100 well we can just return that 100 right 100 I'm just trying to think about some conditions we could use and if the number is a thousand one thousand how do you spell that thousand right thousand so that's eight that's returned 11 oh wait so yeah oh yeah so it's good it's good because then we need to add them up okay good wait what's there get now if it's bigger than 100 we'll start with ten and then well we need to get all the digits let's see digits the the number the string this will convert to the string we want to have an array of numbers use modulus he yeah but the thing with modulus is that so for the first one will work right although if we have the second digit is one then we kinda need to use this kind of thing other than that yeah that will work so what I want here is the digit so we have all the three digits digits of zero this will be the first one so the hundredths place we can use this so if we have this as an object count yes you and for all of these instead of one we have three here well we have the numbers and letters right so here we have three four two five four three so cumbersome do but I guess baby steps three four six five four seven five four eight four four nine okay good so that could work because now we have the digits of zero and we could use this count so we can have count of digits of zero to be added to the son kind of right because for example if we have eight hundred and something we first add Oh eight dead could be a fixed number so we don't yeah all right wink wink yeah so many things to think about what's the prettiest solution for this problem oh well so if we have eight hundred and something we already added a hundred and tooth be tan and then we kind of add so if you have seven hundred the digit of the first place will be seven so seven is what five where but yeah it works so we add five to the Sun now the only issue is that if we have exactly seven hundred then we don't have that end so I guess we can check here if number modulus 100 is zero because well wait one second so this accounts for hundred and and here we don't have that hand no end because we have exactly 700 600 so we can start here with left some equal stem and here we can just do some minus equals 3 so we kind of remove that and because it's a fixed number so 800 700 otherwise we have 700 and something right hanging good so we accounted for that okay now we for that digit the first one which was easier we're bigger than 100 a case we have three digits the hundreds digit then for the tens digit we have the digits of our of what one now this will be tricky any number other than 1 & 0 then we're going to use the days oh boy okay because if you have 890 something but I guess this will be I'm thinking thinking yeah it's just so bruteforce I don't really like it though but yeah let's continue and hopefully basically all of this will be a function to get a word length and we'll get the number and here at the end we're going to return the Sun if we have and some otherwise we just return but whatever whatever we want but well whatever we have okay let me do this too so for 10 is 3 yeah I don't like the pro to do so many test case eleven is office seven also eight you seven again you 9 eight eight then here we have 26 six do we have any other special numbers we need to worry about by five six or seven seven now six and six again okay this well we have this here but oh well we already know that this is seven okay so what I want to do is whenever we have so here we have the tens digit right then state it if the tens digit is bigger than one then we already can use one of these right so we can do some class equals count of digits but count of tens digit plus zero this is the property of the object we want which will be well seven zero eight zero okay now else if it's one we need to do all of these thingies the 11 and 19 could be Narae with index 1 tonight yeah may be special case and well we already have them here so I guess we'll work with this object properties so if it's one we kind of won the count of ten digit plus the well last digit what's that D let let's ditch I don't know how it's called the digits of two last digit so heck so so heck well and the last digit we kind of want string it so last digit so if we have something like 1/7 sorry this is not the house if one so if it's 816 so I want 6 1 & 6 60 and well I'll sit zero so then we go to some plus equals count of less digit at six and six 806 but here again we could have 0o but we kind of check that there okay all right so we don't have to worry about that we don't have to worry about that now we kind of did probably if we didn't mess up anything we didn't numbers over 100 does it over about ten you I guess I'll save just to be clear digit is zero then we just add the last digit okay yes something's wrong here what Oh all right let's try our function which should hopefully give us the right answer for this and this Oh Polly let's see cancel the clog get word lengths of 340 some is not affected good let's start wait wait wait wait wait sir yeah let's uh equal to all right so now it's defined 21 close but that really [Laughter] speaker than 100 it's modulus by 100 is not zero so we don't subtract so we have 100 and yet so that's one two three four five six seven and yeah okay next we split the digit let's see digits what we have here three four to get here the sum will be threes of Oh okay fifteen by fifteen console dot log we put one here and some and here we put two and the Sun just to keep track okay so it's ten then three yeah this is five all right good so that's the next up we want to see so 340 port so it's bigger that means that we go here three so three plus some so we get 40 which is 640 okay good oh and we didn't do the last one well I guess this is just the last digit so if a last digit is bigger than zero we just do this right okay one two three good what's rock 4004 at 4040 sorry yeah and then this is wait wait wait wait wait what I did so for T and this is 5 and this is I guess for teen forty now let's do it yyeah or Tina gay so that's eight [Laughter] all right so we get 23 which is 23 which is good let's see for 150 get plenty for 115 yeah so we go here we add this yeah I guess if it's one then we need to do this if the digit is 1 so 115 we don't care about the last is what otherwise we kind of care so if tens digit is different than one then we do this so hacky but it works which is good oh boy started to get tired so 414 I guess all this should work what else let's try for 667 so let's see 667 so we have three we have seven three five and five wait a total of ten turn 23 23 okay so apparently this works now the only issue well one of the issues is that we don't account for numbers less than 100 for which we kind of need to do this thing okay so let's remove this from here delete yeah it's not defined okay because data digits here okay so let's do this digits up here getting so complicated it's hard to keep track and it's probably buggy so if that's the case digits of one zero I guess what we could do is get the digits and reversed and now instead of digits of 0 we have bits of 2 because it's the last one if the numbers bigger than 0 would then 100 if it's 100 and that it's good 2007 okay we can keep that and now instead of having tens digits the same but this will be zero alright so now we kind of reverse the number and we first check if it's bigger than 100 we add what we want for 100 otherwise we kind of do our thing with digits and less digits and all that so let's see four five we should get fined for 504 what about 17 9 is that true 17 9 yeah look at that what about 10 3 okay what about 110 so 110 she's 3 seven three three that's a total of sixteen well it's all folks what about thousand you 1,000 hopefully that's 1000 so 3 plus 3 6 8 11 all right so let's do one more what about 67 so 67 which is five plus five ten look at that works okay you yeah so we have the special cases we have another console somewhere this but now this function should hopefully work properly and we can kind of go over here to let some for left eye's one I less than limit I plus plus and here we just get word length of i and some plus equals and return some okay and here we cancel that log son which were five is fifteen all right so it's not good yet let's see why you okay Const length will be days I want to debug it so I put it here add it here and then I do concern that log I and linked I want to see all the light okay oh I see it didn't go up to five maybe that's the only issue we have them correct look at that pasa what about 150 well that name of the castle now we missed by four okay what about one thousand we miss by 20 so probably one of these is messed up thirty how do you call those numbers so 11 12 13 13 some of probably some of it is messed up and probably deaths Oh 16 hopefully that's the issue otherwise 96 well we kind of don't use this so byebye let's go back to this okay what would be the issue or characters difference you nine eight seven so yeah just something very very very so it's a number which only pairs like four times you whoa look at that I got it this is six not seven and this is also six look at that nice so that was the issue perfect okey this was totally mess but well we kind of have it now which is good let's run the test and let's download the solution save it and never speak about it again I'm so securities how someone else did it let's see from project Euler def net here we can can act on my location we can go to this numbers letter counts and I think I need to sign Ain let me do it of offscreen although not sure what's my you I have no idea what they used guess let's register you win the spelling bee contest for a nonnative English speaker I am pretty happy okay I want to create a new account here I think here on the platform if we submit okay so username taken so I can create that let's see awesome so I managed to log in you can see that they did a couple here so what I want to do go to 17 let's see if the number that the hominin would if all the numbers from 1 to 1000 inclusive were written out in words how many letters would it be so we already have the answer which is this we can check this broad platform only gives you the problem and then you need to submit the number all right so now we can go to the archives and wait you and see how else people did it I've see their love of Java C C++ can I check JavaScript for some reason now you I think yeah I had some issue sorry about that I had to restart the Mac but yeah this will probably cut off from the livestream [Laughter] yeah but I am back yeah so we were looking at at what some other people did to solve this hopefully went back let me know if you can hear me yeah okay I can see myself alright sorry about that so yeah you can see here that one I know one person Harvey mojo did something similar with what we had if it's less than 20 if it's less than 100 okay and oh boy let's bite another thing can we have something I know but yeah pretty similar approaches can find Java crypt probably no one directly JavaScript let's see this page nope this page yeah I won't check all the pages oh wow yeah so you need toward decimal to word that small word probably smarter than I had but yeah oh well all right thank you all for joining I'm sorry for the interruption at the end hopefully yeah it should have picked up yeah let's run this submit and way completed that so today whoa look at this why don't I have my that's weird all right yeah that night works so today we completed five more challenges which were pretty tough especially this one no the this one this one was the toughest but well with a bit of googooing and thanks to our Wikipedia buddy we could find out one solution to solve this all right thank your for joining I hope you enjoyed it I hope you learn something feel free to continue the challenge feel free to do with them on your own next week we're going to continue and see how far we can get thank you for joining have a good day and I'll see you next time bye
