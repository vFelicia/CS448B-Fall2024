With timestamps:

00:00 - augmented reality is growing in
00:01 - popularity and in this course you will
00:03 - learn how to develop AR apps by building
00:06 - practical projects the course consists
00:08 - of four different augmented reality
00:10 - projects which are built on top of unity
00:12 - engine and AR Foundation the projects
00:15 - will help you explore various Fields
00:17 - such as engineering education e-commerce
00:19 - and creativity priyanshu developed this
00:21 - course he has a lot of experience
00:22 - developing AR apps and he's created
00:25 - other popular courses on the topic and
00:27 - this free course we are gonna explore
00:29 - the possibilities of Augmented Reality
00:32 - by building such captivating and
00:35 - practical augmented reality experiences
00:37 - we will start with Planet CR in which we
00:39 - will be exploring planet Earth and other
00:41 - different planet States than ever before
00:43 - we'll be exploring it so that's not all
00:44 - we will also delve deeper into the world
00:47 - of creativity by building an application
00:50 - that would actually help you plant
00:52 - different different kinds of plants and
00:54 - into your room if we talk about the
00:56 - fourth project that we are going to
00:57 - build we are going to explore the
00:59 - possibilities of e-commerce with that
01:01 - application we're gonna create an
01:03 - interior design application that would
01:04 - actually help us put different different
01:06 - Interiors different different sofas
01:08 - chairs onto our room I am priyashi
01:11 - co-founder and CTO fantern and I bring
01:12 - you the three comprehensive augmented
01:15 - reality course that is going to teach
01:16 - you to develop augmented right
01:18 - experiences with the AR foundation and
01:20 - unity engine
01:21 - so without any further Ado let's move
01:23 - forward and learn how to build such
01:25 - captivating and amazing augmented yet
01:26 - experiences
01:30 - hey everyone welcome to this lecture and
01:32 - in this lecture we are actually going to
01:34 - build our very first augmented reality
01:36 - project with ar core and AR Foundation
01:38 - from the very scratch I'm going to teach
01:40 - you how you can set up the project how
01:42 - you can uh build the AR Foundation app
01:44 - to your devices right so without any
01:47 - further Ado let's move forward and let's
01:50 - learn what to do next okay the very
01:52 - first thing you have to do is you have
01:54 - to open your Unity up and you have to
01:56 - create a new project now if you don't
01:58 - have any Unity version installed you can
02:00 - simply go to installs option click on
02:02 - install editor choose the editor of your
02:04 - choice now in this course I am going to
02:06 - use Twitter what you want so you can
02:07 - simply click on install then select the
02:09 - Android build support because we are
02:11 - actually going to bend for Android and
02:13 - also select the iOS bit support and then
02:15 - you can simply click on continue
02:17 - accept the terms and condition and
02:19 - simply click on it okay that's gonna
02:21 - take a bit of time it's gonna of course
02:23 - it's gonna take a lot of Internet like
02:25 - around four or five GBS maybe so it's
02:27 - gonna download the package it's gonna
02:29 - install so given the time it needs okay
02:31 - and once the project I mean the unity
02:33 - editor has been installed what you can
02:35 - do is you can simply go to the project
02:37 - section now what you have to do is you
02:39 - have to create a new project now it is
02:41 - very simple to create a new project what
02:43 - you have to do is you have to click on
02:44 - this new project button and once you
02:46 - have create like you know clicked on
02:48 - that particular button you will be able
02:50 - to find this option called editor
02:52 - version now you you can choose any
02:54 - editor you want for this course I'm
02:56 - going to use
02:57 - 2021.3.50 F1 you can also go with any
03:01 - other version such as new to 2019 or
03:03 - 2020 but I would suggest you to like you
03:06 - know keep up with this video that is
03:07 - used 2021 version of unity now once
03:11 - we've selected the unity editor you will
03:13 - be seeing there are multiple options for
03:15 - templates right there's 2D there's 3D
03:17 - there's 3D mobile 2D urp then sample urp
03:21 - I think there's hdrp also then there's
03:24 - like you know a lot of examples that
03:26 - Unity has already coded for us that
03:29 - Unity has already given us but for now
03:31 - for this video we are gonna wait uh
03:33 - gonna go with a blank project and we are
03:35 - going to select 3D core because we want
03:38 - to have the 3D functionalities now if
03:40 - you want to build any sort of like you
03:41 - know 2D game or anything
03:43 - you can simply select the 2D code option
03:45 - but for this video I'm gonna go with 3D
03:47 - code as we are gonna need the 3D version
03:50 - of that
03:51 - once you have selected that 3D core
03:53 - option what you have to do is you have
03:55 - to change the project now you can change
03:56 - the project name to anything I'm Gonna
03:58 - Keep It planets AR you can also keep it
04:00 - anything you want and you can also
04:02 - change the location of the project if
04:04 - you want okay and that simply click on
04:05 - create project that's gonna start the
04:08 - process and it's gonna create a project
04:10 - for you okay
04:11 - now once the project has been created
04:14 - you will see this editor now this editor
04:17 - is called Unity editor now within this
04:19 - editor now what what we have to do is we
04:21 - have to set up the project okay we have
04:23 - to set up this single territor so that
04:25 - it is able to build for Android devices
04:28 - and it should be able to support
04:30 - augmented reality okay
04:32 - now
04:34 - just clear out our head now okay just
04:36 - clear out your head and listen to
04:39 - now the very first process that you want
04:41 - to go through is switching your platform
04:43 - and setting up the project the reason is
04:45 - you can see you can set up the project
04:47 - later on also after importing the assets
04:49 - doing everything but the reason why you
04:52 - should set up your project at the very
04:53 - first because let's say I have added
04:55 - multiple Assets in the project folder
04:57 - okay so what's gonna happen is let's say
04:59 - I remove the graph Graphics API I switch
05:02 - my build platform the switching part the
05:05 - setting apart it's gonna take a much
05:07 - longer time okay and definitely we don't
05:09 - have that much time to wait for it to
05:12 - build and switch the project and all the
05:14 - process it needs to be done so that's
05:16 - why that's why you should always set up
05:19 - your project at the very first then only
05:21 - import the required assets
05:23 - so let's move forward the very first
05:25 - thing you have to do is you have to
05:27 - click on file go to build settings now
05:30 - in the build settings you'll be able to
05:31 - find multiple options in here like
05:33 - there's Windows Mac Linux dedicated
05:34 - server Android iOS PS4 PS5 now
05:39 - now I want to build for Android devices
05:42 - only so I'm going to select Android but
05:44 - you can also build for iOS devices if
05:46 - you want now there's one thing that you
05:49 - have to keep in mind okay the code base
05:51 - will be very much similar because we are
05:53 - going to use AR Foundation now AR
05:54 - Foundation makes it easier for the
05:56 - developers to build for both IOS and
05:58 - Android how it provides two plugins
06:01 - called AR plugin and AR code XR
06:04 - plugin now AR kit is supported on iOS
06:07 - devices and AR core exam plugin is
06:09 - supported on Android devices so if you
06:12 - want to build for iOS you can simply
06:14 - install AR it and if you want to build
06:16 - for Android you can simply install AR
06:18 - code exampler okay that's it nothing
06:21 - much nothing too complicated but again
06:24 - like you know if you want to use AR core
06:26 - on iOS devices that's also possible you
06:28 - just have to install the application
06:31 - from the App Store I think it's called
06:33 - as Google services for AR code or I
06:36 - maybe it's called AR code I'm not really
06:38 - short but there's a plugin for that so
06:40 - you can you can simply install that uh
06:42 - within your iOS device and simply like
06:45 - you know work with it build the
06:46 - applications in there and again if you
06:48 - do this want to do the same for Android
06:50 - that is built for AR code then make sure
06:53 - your Android device supports the airport
06:55 - okay there are uh there's a whole list
06:57 - or where you can find if your device
06:59 - supports VR code or not and if it does
07:01 - what you can do is you can go to Play
07:03 - Store and search for Google services for
07:05 - here okay the link will be down below in
07:07 - the description you can simply begin to
07:10 - search for that app or you can go
07:11 - through the link that will be given in
07:13 - the description and simply install that
07:16 - particular because without that uh the
07:18 - AR code apps won't work on your Android
07:20 - device
07:21 - so I hope that's that's clear to you so
07:24 - let's move forward now you have to
07:27 - select this Android option and click on
07:28 - switch platform now it's gonna take a
07:31 - few minutes or few seconds depending on
07:33 - your system to phrase the platform so
07:35 - given the time it needs
07:37 - bye
07:41 - now once it has switched its platform to
07:43 - Android the next thing you want to do is
07:45 - we want to set up the project so that we
07:47 - don't have to like you know go through
07:48 - the whole painful built-in process again
07:52 - and it shouldn't take much time for you
07:54 - okay we want to make sure that now once
07:58 - you like you know once you have switched
07:59 - the platform you at the very like you
08:01 - know bottom left you'll be able to find
08:02 - this player setting so click on the
08:04 - player settings
08:05 - from there the very first thing you want
08:07 - to change is the company name you can of
08:09 - course you can keep it uh as a disk but
08:11 - I would suggest to change the name right
08:13 - keep it anything you want so for now I
08:16 - want to keep it coded reality because
08:17 - that's the name of my channel and then
08:19 - there's uh I I'm just going to keep the
08:21 - product name as planets here because
08:23 - that's the most suitable way okay now if
08:26 - you want to set uh any icon for the
08:28 - application you can totally do that from
08:30 - here now I uh in the assets folder I
08:33 - already have a icon so I'm gonna I'm
08:35 - gonna show you how you can do that now
08:38 - after that uh in the resolution in
08:40 - presentation you would want to uh go to
08:42 - this default orientation option and make
08:44 - sure to uh select the portrait option in
08:47 - here because we don't want the landscape
08:49 - left or landslip right or any other
08:51 - option there we just want it to be in
08:53 - portrait mode of course if you want you
08:55 - can also keep it uh in landscape mode
08:57 - but again you have to design the UI that
08:59 - for now I'm gonna show you how you can
09:02 - do the scene but for portrait
09:05 - now once uh the orientation has been
09:08 - selected the next thing you can do is
09:10 - you can simply go to other settings now
09:12 - from there make sure you uncheck this
09:14 - autographics API now the reason why we
09:16 - are unchecking this Auto Graphics API
09:18 - because by default our Unity project
09:20 - something called uh cut date something
09:22 - called Volcan right now is another
09:25 - Graphics API just like open GLE
09:28 - but the problem is AR code doesn't
09:30 - really support worker so if your project
09:32 - already has Balkan and if you haven't
09:34 - removed it AR code after building right
09:38 - AR code is gonna give you a lot of
09:40 - letters and your build won't complete so
09:42 - we don't want the World Cup Graphics API
09:44 - so I'm just going to select the welcome
09:45 - from here and click on this minus now
09:48 - that's going to remove the working API
09:50 - from our project and once that has been
09:52 - removed you can simply go to
09:53 - multi-threader rendering and make sure
09:55 - to uncheck this multi-threaded rendering
09:57 - then I didn't go below and you'll be
09:59 - able to find this option called Minima
10:00 - API level now make sure to set to
10:02 - Android 7.0 because AR code requires a
10:06 - minimum bid level of Android 7.0 if you
10:08 - go below that maybe
10:10 - 6.05.1 and maybe below that the problem
10:14 - is that it won't build it's going to
10:15 - give you error so you have to keep
10:17 - either Android 7.0 as the menu APN level
10:20 - or maybe above you can also keep 8.07.1
10:23 - 8.19 10 anything you want okay but just
10:26 - not below Android 7.7 now work that has
10:29 - been done you have to change your
10:31 - scripting back into IL to CPP the reason
10:33 - is AR code doesn't really support 32-bit
10:36 - architecture anymore so you need to
10:38 - build it for uh like you know 64-bit
10:40 - architecture now to do that you you have
10:43 - to set your scripting back into i2cp
10:45 - because if you if we check out mono you
10:48 - won't be able to find this arm 64 option
10:50 - now to get this on 64 option you have to
10:53 - shift to Il to CPT and make sure to
10:55 - check this arm 64 option from there and
10:58 - once that has been done we are actually
11:00 - done for now with the player settings we
11:02 - still have a few more settings to go
11:04 - through but that will only be enabled
11:06 - when AR foundation and er Port has been
11:09 - installed
11:10 - so to do that
11:12 - simply close these window
11:14 - go to window go to package manager then
11:18 - again from the drop down select Unity
11:20 - registry
11:22 - now from there what you can do is
11:24 - give it the time to load it might take a
11:27 - bit of time depending on your internet
11:28 - now it loaded uh very fast on my in my
11:32 - case uh now once the package has been
11:34 - loaded what you can do is you can search
11:36 - for ER okay now once you search for AR
11:39 - you'll be able to find this AR
11:40 - Foundation AR code and arcade exam
11:43 - plugin now these are the three packages
11:45 - we need to focus on if you are building
11:47 - for iOS I would highly suggest to go
11:49 - with AR kit because uh I wouldn't
11:51 - suggest to go with ar code is best with
11:54 - Android so keep it for Android only and
11:57 - if you want to build for iOS then go
11:58 - with AR kit don't worry apart from the
12:01 - building process everything is similar
12:03 - you don't have to make any changes to
12:05 - your code you don't have to make any
12:06 - changes to your project setup just
12:08 - whenever you are building you have to
12:10 - set the project settings according to
12:12 - iOS okay now for this course I'm gonna
12:15 - use Android so I'm gonna simply install
12:17 - the AR codex but before that you have to
12:20 - install this AR foundation 4.2.7 so just
12:23 - select this version and click click on
12:24 - install
12:25 - give it the time it teach for the
12:27 - installation now once that would be done
12:29 - we'll also be installing AR code example
12:31 - now AR code is necessary to build AR
12:34 - experiences for Android
12:36 - me
12:38 - now as you can see AR Foundation has
12:40 - been installed the next thing you have
12:42 - to do is you have to click on the exam
12:44 - plugin and then click on install
12:48 - now once both of these has been
12:50 - installed what you can do is simply
12:52 - close this window again click on file
12:54 - build settings click on player settings
12:56 - and then go to this particular option
12:59 - exam plugin manager okay now in here you
13:02 - will be able to find multiple options
13:04 - that is AR code Oculus and Immunity mock
13:06 - hmd now Oculus and unity mock hmd is not
13:09 - something we want to mess with as of now
13:11 - we wanna uh do everything with this AR
13:14 - core option okay now this ER core option
13:17 - is very important you must check it out
13:19 - the reason is you can see in here you
13:22 - you are able to see a text called
13:24 - initialize its are on start now that
13:26 - means whenever your you start your
13:28 - application it's going to initialize the
13:31 - particular plugin you have checked it so
13:33 - for me I have just checked AR code so
13:35 - it's going to initialize the AR code
13:37 - plugin at the beginning of the starting
13:39 - of the application
13:41 - okay so it is mandatory for you to check
13:43 - the AR core option if you don't do it
13:46 - then ER or won't be initialized at a
13:48 - start at the very start and you will be
13:50 - you won't be able to use AR code within
13:52 - your application so make sure to check
13:54 - this option out and once it has been
13:56 - checked you can simply close this window
13:59 - and now we have got our project set up
14:02 - very well okay now the next thing what
14:05 - you have to do is you have to delete the
14:06 - main camera okay once you have delete
14:08 - the main camera
14:09 - you have to right click in the hierarchy
14:12 - click on XR add an ER session widget
14:15 - then again add an AR session now ER
14:18 - session origin would be responsible for
14:19 - handling the camera the plane tracking
14:21 - the image tracking the recasting and all
14:24 - every and all the other things that are
14:26 - necessary for performing augmented
14:28 - reality and the ER session will be
14:31 - controlling the whole life cycle of
14:32 - unity and your AR application so both of
14:35 - these components are mandatory and you
14:38 - can see inside they are session audit we
14:40 - also have an AR camera which will be uh
14:43 - capturing all the real world scenario
14:45 - and will be like and this whole AR
14:47 - section origin will be helping you to
14:49 - place the object into the real okay now
14:52 - here you can see we have set up our
14:54 - project properly we have set it up
14:57 - properly and now what we have to do is
14:59 - we have to import the assets okay but
15:01 - before that let me change the name of
15:03 - the scene okay so I'm Gonna Keep It uh
15:06 - planets
15:08 - let's follow it or maybe or maybe let's
15:10 - uh call it home swing because we want a
15:13 - whole speed which will help us to
15:15 - navigate between different different uh
15:18 - like you know planets that we have in
15:19 - here now we are going to call this home
15:21 - screen
15:23 - and another one you have to create
15:25 - another C we are going to call that CNS
15:28 - Arc okay or let's do one thing as we
15:31 - have already set it set this scene up
15:33 - for uh augmented reality let's call this
15:35 - scene as uh
15:37 - planet
15:39 - okay let's create another C that will be
15:42 - having the default main camera and we
15:44 - are going to call it home screen
15:46 - now the uh the reason I removed this
15:49 - main camera
15:51 - the reason I removed this main camera is
15:54 - because it renders the virtual scene
15:56 - okay it actually renders this particular
15:58 - scene so that's why I removed it the AR
16:02 - camera would actually be rendering the
16:03 - rear mode so that's why you have to add
16:06 - the AR camera if you want to perform
16:07 - augmentation but as this is the home
16:09 - screen it doesn't needs any sort of
16:11 - augmentation that's why we want to use
16:13 - the main camera as the default camera
16:16 - okay now once both of the scenes are
16:18 - created we want to import the asset
16:21 - okay and we simply wanna import the
16:23 - Assets Now I already have if you if you
16:26 - see here I already have a folder created
16:28 - in where I am having all the unity
16:30 - assets stored now this is the planet's
16:33 - AR assets that we want to import
16:35 - it's again fairly simple right click in
16:38 - the project setting click on import
16:40 - click on custom package I simply import
16:43 - this planet CR Assets Now again you can
16:46 - do the same by simply dragging and
16:48 - dropping uh all the Assets in here
16:50 - so both of the way works choose the one
16:53 - you are comfortable
16:54 - now once you have like you know dragged
16:58 - and drop the or maybe imported the
16:59 - package within your Unity screen you
17:02 - will be able to find this particular
17:03 - window now you you have to Simply click
17:06 - on the import import option that we all
17:09 - the textures all the files that are
17:10 - included in the package will be imported
17:12 - in your project file so give it the time
17:15 - it needs
17:16 - yeah now here you can see that we
17:18 - imported our project now inside the
17:20 - asset folder you will be able to find
17:22 - textures then there's Planet textures
17:24 - that will be containing all the like you
17:26 - know textures for the planets then
17:28 - there's UI texture that will be used for
17:30 - our user interface uh here you can also
17:33 - see that we got a logo now we will be
17:36 - using this logo also that I also have a
17:38 - model for the Saturn so we will be using
17:41 - all these uh in our project to get
17:44 - everything set it up okay
17:46 - so once the assets have been imported
17:49 - the next thing you want to do is
17:51 - let's create the UI okay let's create
17:55 - the user interface first then we are
17:57 - going to move on to the then we are
17:59 - actually going to move on
18:01 - to our augmented realityc okay
18:04 - so now once the home screen has been
18:06 - created simply double click on it to
18:08 - open it then what you have to do is you
18:10 - have to right click in the hierarchy
18:12 - click on the UI add a canvas okay now
18:15 - the canvas is actually going to help us
18:17 - to create UI for this whole scenario and
18:20 - go to your game window and make sure to
18:22 - change it to uh some portrait okay now I
18:25 - actually already have some preloaded
18:27 - templates from wyson now if you want you
18:30 - can also do the same for yourself you
18:32 - can like simply click if you if I show
18:34 - you click on this uh option right and
18:38 - you'll be able to find this plus sign if
18:39 - you click on this plus sign you can name
18:41 - the device you can add its width and
18:43 - height okay that way you will be able to
18:45 - get the proper mode or the proper device
18:48 - you want to use now for me I'm gonna use
18:50 - this OnePlus not C to light for myself
18:52 - you can use any other UI you want if you
18:55 - are let me select something in between
18:57 - Maybe
18:59 - yeah redmi note 9 seems much better so
19:02 - I'm gonna go with redmi Note 9.
19:04 - now here you can see that it's a blank
19:07 - canvas okay and inside the canvas we
19:10 - don't really have any and also also this
19:12 - is a really good feature that we have in
19:14 - unity
19:16 - if you click on this 2D option you will
19:18 - be going on to the 2D mode and once you
19:21 - go on to a 2d mode you can double click
19:22 - on this canvas object and you can zoom
19:25 - out like you can bring the canvas to
19:27 - your phone this is a very useful feature
19:29 - that I think you should know about
19:36 - you can simply click on the canvas
19:38 - option then in the at the inspector
19:41 - you'll be able to find this canvas
19:42 - Scalia okay now in the canvas query you
19:45 - will be able to find this UI scale mode
19:47 - make sure to change it it is actually by
19:49 - default set it up with the constant
19:52 - pixel size we definitely don't want that
19:54 - to make the UI responsive we want kill
19:57 - with spaces okay so make sure this uh to
20:00 - select the scale with screen size option
20:02 - and once you have select that
20:05 - in the canvas we want a background okay
20:07 - we want a background so that not
20:10 - everything this this whole like you know
20:12 - weird looking background isn't visible
20:13 - so the very better the the better way to
20:16 - do is right click in the canvas you can
20:19 - either like you know go to UI add a
20:22 - panel in here right
20:23 - or you can what you can do is you can
20:25 - simply add an image okay we can also add
20:28 - an image like go to UI add an image in
20:30 - here and then
20:32 - change the name of your image to
20:34 - background
20:36 - now once you have selected the image in
20:38 - you can you might find this option
20:40 - called direct transform in the inspector
20:42 - if you select the image right and in
20:45 - there you will be able to find a small
20:46 - box right so click on that box press alt
20:49 - in your keyboard if you are a Windows
20:51 - and press option on your map
20:54 - so once you click the alt button on
20:56 - option button on your device
20:58 - you can simply like you know at the very
21:00 - bottom right you will be able to find
21:02 - the stretch options simply click on that
21:04 - stretch option and you can build and you
21:06 - will be able to see that it has failed
21:08 - the whole image in there okay it is
21:10 - filled the whole background so we want
21:12 - to keep it to white as of now and if we
21:15 - go to our assets and go to the textures
21:19 - option and click on UI textures you'll
21:21 - be able to find this diagram okay now
21:24 - what you can do is now basically the the
21:27 - assets are already set to texture type
21:30 - to like you know Sprite today and even
21:32 - but let's say if you import some other
21:35 - like you know import some external image
21:37 - by yourself you will be able to see that
21:40 - it will be set to this default option
21:42 - okay now if it is set set to default
21:45 - just change it to Sprite 2D anyway
21:47 - because that's the option we are gonna
21:48 - need
21:49 - now once you have selected the
21:52 - background make sure to drag and drop
21:54 - this background image from the UI
21:55 - texture in here you can see that we got
21:58 - a pretty neat and clean background
22:01 - uh for our UI now once you have selected
22:04 - this particular background you can add
22:06 - another image let's click on UI let's
22:09 - add an image now this is going to be our
22:11 - headache okay that is it is going to
22:13 - contain that I tell for us so I'm simply
22:15 - gonna drag and drop this home header and
22:19 - click on set native size and now reduce
22:23 - the size Mill 0.5 yeah 0.5 seems much
22:26 - better and to Anchor this right without
22:28 - anchary this uh like you know this
22:31 - planet's AR logo won't really be
22:33 - responsive so you have to Anchor it to
22:35 - that to answer it simply click on the
22:37 - heading
22:38 - press alt in your keyboard open this
22:41 - option anchor presets option in here
22:43 - just simply press on the top that way
22:46 - you will be able to set the like you
22:49 - know this particular anchor to the very
22:50 - now let's say if we change the
22:52 - resolution or maybe change the UI you
22:54 - can see that it is adapting to the
22:56 - particular interface okay and that's
22:59 - what we want now once you have added
23:01 - this particular heading we are also have
23:03 - to add a few buttons to navigate between
23:05 - the planets right now again it's pretty
23:08 - simple uh first of all I would like you
23:10 - to let you know
23:11 - create a empty container that way it
23:13 - would be much better for us to like you
23:15 - know handle all the uis I mean the UI
23:19 - buttons let's name it uh button button
23:21 - Handler
23:23 - now what you can do is you can simply
23:26 - like you know click on this button
23:28 - Handler again press alt in your keyboard
23:30 - and make sure to stretch it out to the
23:32 - very top and you can like you know
23:34 - reduce or maybe
23:36 - change the top value by something 250
23:40 - maybe yeah change it by uh change the
23:43 - Top Value to 250 now what you can do is
23:45 - you can keep on adding the buttons in
23:47 - here okay and uh let's do it let's add
23:51 - this button Handler let's click on this
23:53 - button Handler add a UI let's add an
23:56 - image in here
23:57 - let's anchor this image to the top
24:00 - and let's reposition this image maybe
24:02 - let's let's change the weight and height
24:05 - to maybe 200. that was seen much better
24:08 - yeah totally much better and let's make
24:11 - it to 200 okay and minus 100
24:15 - now this looks diff uh this definitely
24:17 - looks much better and let's still change
24:19 - the image size name to baby or
24:22 - okay
24:24 - now
24:25 - let's actually let's try minus 200 yeah
24:28 - this looks much better let's duplicate
24:30 - the button
24:31 - and put it uh to maybe the site right
24:36 - let's put it to the side like this and
24:39 - change it to minus 200 and again minus
24:42 - 200 that way we got two different
24:44 - buttons for our planets okay now you can
24:47 - change it to maybe
24:48 - Mars right uh similarly you can uh set
24:53 - the C do the same thing for other
24:56 - buttons right so for now I'm just gonna
24:58 - keep these two buttons what you can do
25:00 - is you can replicate uh much more
25:03 - buttons in here like I already have
25:05 - options for Jupiter Saturn Uranus Venus
25:07 - and other planets too so you can
25:09 - definitely do that for now let's keep
25:11 - these two buttons only and the next
25:14 - thing you have to do is you have to
25:15 - select the Earth button drag and drop
25:17 - this Earth texture in here and again
25:19 - select the mask button and drag and drop
25:21 - the masks option in here now definitely
25:24 - it seems like the spacing is too much
25:26 - let's increase the weight to mainly 400
25:29 - um how about 350 yeah 350 seems much
25:33 - much better and the next thing you can
25:36 - do is as these are images right these
25:38 - doesn't have the capability of button
25:40 - now
25:41 - what you can do is Select both the
25:43 - images click on ADD component and add a
25:46 - button component into onto these images
25:49 - right now if you click on these uh
25:51 - images the buttons like these will these
25:54 - images will be clickable okay so you can
25:56 - click on these images and set any
25:58 - functionality you want for now now once
26:01 - we got the Earth and Mars Butters of it
26:04 - out we have to create a new UI okay so
26:07 - not UI exactly but a new C so I'm going
26:11 - to call this uh Planet seal to earth now
26:14 - once I've opened this Earth C what I can
26:17 - do is I can create a new spear okay
26:19 - that's gonna Conte the
26:22 - Earth planet so I'm going to reset its
26:24 - transform set the Z value to 5 or maybe
26:28 - how about two two seems much better I
26:30 - mean let's keep it to four four would be
26:32 - much like four would look much better
26:34 - the next thing you want to do is rename
26:36 - the spear to R
26:39 - and then create a new material okay so
26:41 - I'm gonna create a new folder called
26:42 - material
26:46 - now I'm gonna create a material called
26:48 - Earth
26:50 - so
26:52 - and then simply drag and drop this Earth
26:55 - material on top of that Earth object now
26:57 - if you change the color you you will be
26:59 - able to see that the object is also
27:02 - changing the color according to the
27:04 - material so that means our material has
27:06 - been applied properly once the material
27:08 - has been applied what you can do is you
27:10 - can simply search for the Earth texture
27:13 - texture now we already have this 2K
27:15 - Earth Day map I'm gonna select that and
27:18 - you can see that we actually got the
27:21 - Earth texture in here now it might seem
27:24 - that like you know it's a bit too flashy
27:27 - uh you can definitely skim through the
27:30 - shaders that we have you can search for
27:32 - uh like you can simply click on this
27:35 - drop down option search for unlit and
27:39 - you can set it to texture that we will
27:41 - be getting this option but it definitely
27:43 - looks much more dull uh let's go for
27:46 - legacy shaders let's try let's start
27:48 - diffuse yeah this one looks much better
27:51 - but I think uh the standard one look was
27:53 - looking better so let's hear the
27:55 - standard standard one only but if you
27:57 - want to reduce the smoothness you can
27:59 - definitely do that let's take two maybe
28:00 - point four yeah point four seems much
28:03 - better and now you can see that we got
28:06 - our Earth properly
28:08 - set it up now what you can do is we want
28:11 - this Earth to rotate right because of
28:13 - course Earth does rotate so you we have
28:16 - to write a new script okay that script
28:19 - would actually be helping us to rotate
28:20 - the Earth
28:21 - now again it's pretty simple so create a
28:24 - new folder called scripts folder now
28:27 - inside the script folder what we want to
28:29 - do is we want to write a script that
28:30 - should actually rotate the art on its
28:32 - axis so I'm going to create a new script
28:34 - let's name it rotation controller
28:38 - okay
28:39 - so let me edit the time to compile and
28:42 - once it has compiled just open the
28:45 - script in your IDE now I'm gonna I'm
28:47 - using visual studio you can use Visual
28:49 - Studio code Sublime Text on any ID you
28:51 - are comfortable with
28:53 - now once the script has been opened we
28:55 - want to create a public variation called
28:57 - public
28:58 - uh
28:59 - public game object
29:02 - or object right let's call it or maybe
29:06 - plan it off that would be much of a
29:07 - universal need let's call it Planet
29:09 - object
29:10 - now once you have created this
29:13 - particular variation you also have to
29:14 - create another video byte other Vector 3
29:16 - variable to be honest okay so let's
29:19 - create a vector 3 variable public
29:21 - website three
29:23 - and then name it rotation Vector because
29:26 - that would actually be helping us to
29:28 - control in which axis we want to rotate
29:31 - our Arc okay so rotation vector
29:34 - now within the update function what you
29:36 - want to do is you want to reference like
29:38 - take a reference to the planet object
29:43 - okay and pass the rotation Vector uh
29:46 - within this particular parameter as a
29:49 - parameter to the rotate function and
29:51 - then multiply it with time dot there
29:54 - okay that's going to give us a much more
29:56 - realistic rotation bag
29:58 - now if we compile the script and add
30:01 - this script to the particular Earth and
30:03 - drag and drop the Earth object as a
30:06 - planet object and uh let's see let's
30:09 - play it okay now right now you can see
30:11 - the Earth is not moving so if you
30:13 - increase the value of this one right it
30:15 - will be how about 10 yeah 10 looks much
30:17 - better so now what I can do is I can
30:20 - replace the value to 10 and now if I
30:22 - play it you can see that we are the
30:25 - planet is actually moving right uh the
30:27 - plant is actually rotating
30:30 - now next well you can like you know
30:33 - replicate the scene maybe duplicate the
30:34 - scene Again by con you can like select
30:38 - the simple C press Ctrl D that's simply
30:41 - gonna duplicate the scene and rename it
30:44 - to Mars okay open that mask and rename
30:47 - the object to maybe
30:50 - Mars and then what you can do is you can
30:53 - click either create a new material or
30:55 - again uh like you know duplicate this
30:57 - material change the name to bars and
30:59 - then select the mask texture and simply
31:03 - drag and drop this texture in here now
31:04 - if we see
31:06 - replay it you can see the mass is also
31:09 - rotating properly right now what's next
31:13 - okay what's next if we open this
31:15 - particular scene if we go to the home
31:17 - screen and if we press on this
31:19 - particular button
31:21 - we must be able to like you know switch
31:23 - between seeds right if you press on R
31:25 - then we should open the Earth scene if
31:27 - we press on Mark then we should open the
31:28 - Marcy definitely right but it's not
31:31 - doing it right
31:33 - so what should we do now to perform that
31:36 - we actually have to create a new script
31:38 - that would actually help us to switch
31:40 - between C okay so again it's pretty
31:43 - simple create a new script and call it
31:46 - scene controller okay
31:48 - now this scene controller will actually
31:50 - be having a method to switch between the
31:53 - seats so open this particular scene
31:56 - controller now you have to add a using a
31:58 - direct app so using Unity engine
32:04 - Dot
32:07 - scene manage okay once you've added that
32:10 - simply click you know create a new
32:12 - function public void
32:15 - switch
32:16 - scenes
32:17 - and make sure it takes a parameter or a
32:20 - string parameter and let's name it seed
32:24 - name
32:25 - once you have created the parameter the
32:28 - next thing what you have to do is you
32:29 - have to uh
32:32 - and give a second
32:34 - click manager you have to reference the
32:37 - scene manager and
32:39 - click on load C right that is load the
32:42 - load scene method and within that you
32:44 - have to pass the shield okay that way
32:47 - will be will actually be able to switch
32:50 - between multiple scenes that we have so
32:52 - next what you want to do is you can
32:54 - simply drag and drop this script to
32:56 - anywhere you want let's attach this
32:58 - scene controller to the canvas that we
32:59 - have or maybe
33:01 - let's not add it to the canvas let's add
33:03 - it to the button handle okay and the
33:06 - next thing what you can do is you can
33:07 - simply click on Earth and Mars
33:09 - add the particular uh like you know go
33:12 - to this on click option click on ADD
33:14 - option and then simply drag and drop
33:16 - this button and Handler in here then
33:18 - click on this no function click on scene
33:20 - controller and make sure to switch to
33:22 - this switch scenes option now you can
33:25 - keep the name of your scene download
33:28 - and if I still lived in Mars I'm going
33:30 - to change it to boss okay
33:34 - now if we let's say if we try to like
33:36 - you know switch between the scenes
33:38 - you can see that it is giving us
33:40 - internet Earth and Mars is not loaded
33:43 - that it couldn't be loaded so what you
33:45 - can do is you can simply click on file
33:47 - build setting click on ADD open scenes
33:50 - just gonna add the home screen in here
33:51 - then go to your series option at the
33:54 - bars and Earth okay now if you like you
33:59 - know
34:00 - play this option
34:02 - you can simply click on R and you can
34:04 - see that it has loaded the over C but
34:06 - again there are no options for going
34:08 - back right we also have to add the
34:10 - option to go back to the home screen
34:13 - again you have to do the things the same
34:15 - way it's pretty simple okay it's not too
34:17 - hard so click on right click on the
34:20 - hierarchy
34:21 - create a new canvas
34:23 - change its UI scale mode to scale with
34:26 - screen size
34:27 - uh then what you can do is you can
34:29 - simply add an image now this image would
34:32 - be acting as a button right so I'm going
34:34 - to add the back texture in here
34:36 - so you guys see I added the back button
34:38 - texture I'm gonna click on set native
34:41 - size and reduce the size to maybe
34:44 - 0.2
34:46 - let's see how does it do not point to
34:48 - decently not pointing maybe 0.5
34:50 - so Pi 0.5 would be two big list go for
34:53 - points F1 phone seems much better and
34:57 - then click on the select transform fill
34:59 - in the anchor preset
35:00 - press alt on your keyboard and Anchor It
35:03 - To The Top okay
35:05 - that way you'll be getting this
35:07 - particular button and you can be
35:10 - how about we keep it 160 and
35:14 - minus 100b so that way we got the button
35:18 - in here
35:19 - now again what you can do is you can
35:21 - simply add a button component
35:24 - you can add the particular script in
35:26 - here that is history uh scene controller
35:29 - script to the canvas
35:31 - click on this click add an option to the
35:33 - on click function drag and drop this
35:34 - canvas in here
35:36 - then click on scene controller click on
35:38 - switch scenes and give the name of your
35:40 - scene where you want to switch
35:43 - now again
35:45 - what you can do is you can simply copy
35:47 - this too right make sure to copy the
35:49 - canvas and the event system without the
35:51 - event system your clicks won't be
35:53 - registered
35:54 - now you can go to the mass scene add
35:57 - these two in here and just check if
36:00 - everything's fine so you can see that
36:01 - everything is loaded as it as it should
36:03 - be now if you play this
36:07 - you can see that we are able to navigate
36:09 - back and forth between the seats
36:13 - now this is it for this lecture okay we
36:15 - actually needed a fully functional ER
36:17 - application and I'll be adding a small
36:20 - demo to this application at the very end
36:22 - of the video okay so make sure to watch
36:25 - that demo also and the task for this
36:28 - okay the task for this lecture would be
36:30 - to add a few more planets up in the list
36:33 - and also you can add an information
36:35 - panel that would actually be so showing
36:37 - the information about these plan
36:39 - properly okay so these are the tasks
36:42 - these are the modifications that you can
36:43 - do to this project and to build this
36:46 - project what you can do is you can
36:47 - simply click on file
36:49 - click on build settings make sure all
36:52 - the scenes are added up in here and then
36:54 - click on build give the name to your
36:56 - application I'm gonna click uh name it
36:59 - build and also also before building a
37:01 - forward to showing if you click on
37:03 - player settings you can actually set
37:05 - your icon now I already have a icon for
37:07 - this so I'm gonna click on this select
37:09 - option
37:10 - go and look out for the icon it should
37:13 - be somewhere here I guess I named it
37:15 - logo so here you can see that we got the
37:18 - planet CR logo now if you build the
37:21 - application
37:22 - you should be able when you like after
37:24 - building the application if you install
37:26 - the application on your device you will
37:28 - be able to see the application with this
37:30 - particular Loop so I'm simply gonna name
37:32 - this application and build and I'm
37:33 - simply gonna save the build okay so it's
37:36 - gonna take a few minutes to build the
37:39 - application for you
37:41 - so yeah this is it for this lecture and
37:43 - make sure you try to add a lot more
37:45 - features to this application believe me
37:48 - it's gonna be fun
38:02 - hey everyone welcome to this lecture and
38:04 - in this lecture I'm going to teach you
38:05 - how you can build an augmented
38:07 - reality-based simulation of a jet
38:09 - turbine sounds amazing right so so let's
38:12 - get started why wait
38:14 - for the very first three you have to do
38:16 - is to set up this project now to set up
38:19 - this project you have to like you know
38:20 - create a project first so to do that
38:22 - what you can do is you can open your
38:23 - Unity Hub click on this new project
38:25 - option choose the unity editor version
38:28 - you want to now for this course for this
38:31 - lecture I'm going to use 2021 you can
38:33 - also go for any other version like I
38:34 - have to give it to
38:36 - 2020.3.4 tf1 also so you can go for any
38:39 - other version you want but I would
38:41 - suggest to like you know keep up with
38:42 - 2021 as it has the latest version latest
38:45 - stable version that we have right now
38:47 - and uh so yeah let's move forward now
38:50 - once you have selected your editor
38:52 - version right the next thing you got to
38:54 - do is you have to select the template
38:55 - now of course there are multiplicity of
38:57 - places 2D template 3D template 2D urp 3D
39:00 - mobile then 3D urp 3D sample c new RPM
39:04 - like you know many other templates uh
39:06 - that you can down but for this now we
39:08 - want to start with a black 3D template
39:10 - so we are going to select the second
39:12 - option that is 3D code now once you have
39:15 - selected that particular option you have
39:17 - to name your product
39:18 - now what should you name you can name
39:20 - anything right I can I can name it jet
39:23 - turbine
39:24 - simulation right I can I can name it
39:27 - this way then if you want to change the
39:28 - location of your project you can totally
39:30 - do that you just have to select this
39:32 - location option click on it once and
39:34 - then what you can do is you can simply
39:36 - select the folder you wanna create the
39:38 - project
39:39 - and once all these things have been done
39:41 - you can simply create project now if you
39:44 - don't have any Unity editors what you
39:46 - can do is you can simply go to install
39:48 - click on install editor select the unity
39:51 - version so this is the latest version
39:53 - that is out there that is 2080 1.3.17 F1
39:56 - what you can do is you can simply click
39:58 - on install
39:59 - Ed the Android build support because if
40:02 - you want to build for Android you are
40:03 - going to delete it and if you want to
40:04 - bid for iOS you can select that
40:06 - and then click on continue uh agree the
40:09 - license and then click on next okay and
40:11 - then it would start downloading and
40:12 - installing the editor and all the
40:14 - packages that is necessary for building
40:16 - for Android and iOS device
40:18 - and then you can again like you know
40:20 - create the project give it a few minutes
40:22 - to like you know create the project and
40:24 - then we can get started now once you
40:26 - have created the project
40:28 - this particular editor window will be
40:30 - opening up right this is the unity
40:32 - editor window and in here we have to the
40:34 - very first thing we have to do is we
40:35 - have to set up this project so that we
40:37 - can build for Android and it should also
40:39 - support augmented reality
40:41 - now you already know for all these four
40:44 - projects that we are going to develop we
40:46 - are going to use uh something called AR
40:48 - foundation and we are
40:50 - so AR Foundation is a pool of like a
40:52 - universal package in where you can add
40:55 - the ER kit and AR code plugin that would
40:57 - actually help you uh build
40:58 - cross-platform AR applications
41:01 - so now before setting up all of that
41:03 - okay what you have to do is you have to
41:05 - click on file click on build settings
41:07 - and then switch to the Android minute if
41:09 - you are building for Android or if you
41:11 - are building for iOS you can simply
41:13 - switch to the ions okay but for now we
41:15 - want to keep it to Android only so what
41:18 - we are going to do is we are gonna
41:19 - select the Android build and then click
41:21 - on switch platform now this is a small
41:23 - tip that I always follow basically what
41:27 - happens now if if there are already
41:28 - assets available within your editor
41:30 - window that is within your project
41:32 - itself it's going to take a lot more
41:34 - time to set up this whole project okay
41:36 - because it's gonna convert all the
41:38 - materials all the assets to the like you
41:41 - know related versions and to avoid that
41:44 - kind of like you know time what we want
41:45 - to do is we want to switch to the
41:47 - platform setup everything at the very
41:49 - first before importing all the assets
41:51 - that we have okay so that's what I do
41:54 - always and believe me that saves me a
41:56 - lot of so I would recommend you guys to
41:58 - do that
41:59 - now once you once your platform has been
42:01 - switched the next thing you can do is
42:03 - you can simply click on player settings
42:05 - now from player settings you can change
42:06 - the company name I'm Gonna Change it to
42:09 - coded reality
42:11 - okay because that is my channel snake
42:12 - then you can change the product name to
42:15 - maybe jet turbine
42:18 - and then if you if you have any sort of
42:20 - icons for your application you can like
42:22 - you know add the icon to the folder and
42:25 - then select it in here that way you can
42:27 - also like you know add a logo for your
42:29 - application
42:31 - and once all these have been done you
42:33 - have to go to your resolution and
42:34 - presentation now we want this app to be
42:37 - in landscape mode okay so for that what
42:39 - we are going to do is we are gonna uh go
42:41 - to this default orientation and I wanna
42:44 - check out landscape left okay once you
42:47 - have selected landscape left what you
42:49 - have to do is you have to click on and
42:50 - get other settings make sure to uncheck
42:52 - this Auto Graphics API because we want
42:54 - to remove this Balkan API from here okay
42:56 - because uh ER Port doesn't really
42:58 - support Vulcan so we have to remove that
43:00 - orderly or else you will be like you
43:02 - know getting errors while building the
43:04 - application so we are simply going to
43:05 - remove that Vulcan API once that has
43:08 - visible what you can do is you can turn
43:10 - off this multi 3D rendering as we are
43:13 - not gonna need it and then go directly
43:16 - below to this minimum API level and set
43:18 - it to Android 7.0 because that is the
43:21 - minimum API level that ER core actually
43:23 - supports
43:24 - uh if you if you are choosing any
43:26 - version below that you are gonna face in
43:28 - so make sure to uh like you know keep it
43:31 - 7.0 or above seven points
43:34 - okay and then we're gonna have to shift
43:36 - our scripting back into IL to CPP okay
43:39 - now once we shift the scripting back
43:42 - into iot CPP you can check this arm 64.
43:45 - the reason we are doing this is the AR
43:47 - code doesn't really supports 32-bit
43:49 - architecture it only supports uh 64-bit
43:52 - architecture so you have to shift
43:54 - towards 64 architecture and with mono
43:56 - that's not really possible like if you
43:59 - check more load you won't be able to uh
44:01 - you won't be having this option for arm
44:03 - 64. so to get that arm 64 option you
44:05 - have to switch towards IL to CPP and uh
44:08 - here's another I'll to CPP builds are
44:11 - much more optimized and much more faster
44:14 - in terms of loading I like the CPP
44:16 - builds are much more faster and much
44:18 - better and much optimized than mono
44:20 - built so whenever like you know you are
44:22 - deploying your app to production make
44:24 - sure to do it in il to CPP scripting
44:26 - back okay and once you are done with
44:29 - this
44:29 - the next thing you have to do is you
44:31 - have to install the plugin you have to
44:33 - install the AR Foundation plugin and
44:35 - also you have to install
44:36 - the AR code example
44:38 - and if you are on iOS then you have to
44:41 - install AR kit plug and also here's
44:43 - another thing AR core is also supported
44:45 - on iOS devices okay so if you wanna like
44:48 - you know stay up with ar core only what
44:51 - you can do is you can simply like you
44:53 - know
44:53 - install AR code plugin and also uh
44:56 - install the AR code from uh Apple's App
44:59 - Store okay that way you'll be able to
45:01 - run ER code on iOS devices also but I
45:03 - think it's much better to like you know
45:05 - use ER Kit only because arkit has much
45:08 - more functionality to be honest like
45:09 - body tracking that uh AR code doesn't
45:11 - have why Always if you if you are on iOS
45:14 - right always try to use AR kit as much
45:17 - as possible rather than using Yahoo and
45:19 - if you are using Android then definitely
45:21 - your code is the V2 now to set up this
45:23 - project for augmented reality you have
45:25 - to click on window then click on package
45:27 - manager from there uh you'll be able to
45:30 - find this particular drop down right and
45:31 - the talk so you have to click on that
45:33 - drop down and select with unity registry
45:35 - so give it the time to load right and
45:37 - once it loads the packages you will be
45:39 - able to find a lot of options in here
45:41 - you know like it's confusing I
45:42 - understand that but to sort everything
45:45 - out just search for AR right with ar you
45:48 - are going to find a lot of different
45:50 - packages now for this tutorial we're
45:53 - gonna need a
45:55 - and if you are choosing to install AR
45:57 - kit plugin also there won't be much
45:59 - difference in building like you know
46:01 - setting up the project the Kodi part but
46:03 - yeah the uh the building part will be
46:06 - different the deploying part will be
46:07 - different for AR kit so I'm gonna stick
46:10 - with ar code and AR Foundation I'm gonna
46:12 - click on AR Foundation the version I'm
46:14 - gonna use is 4.2.7 as this is a stable
46:17 - version and simply gonna click install
46:20 - give it the time to install the packages
46:22 - give it the time to install the air
46:23 - Foundation packages and once it is done
46:26 - what you can do is you can also install
46:27 - the AR code XR plug
46:32 - now as you can see we already installed
46:34 - the AR Foundation package the next thing
46:36 - we have to install is AR code example so
46:38 - I'm going to Simply install it
46:39 - add do you know the benefit of using AR
46:43 - Foundation AR Foundation helps us to
46:46 - like include both AR core and AR kit
46:48 - plugin so with a single code base you
46:51 - can build for both the platforms it
46:53 - brings a more cross-platform
46:55 - functionality for AR so I really like
46:57 - using AR foundation and AR tool other
47:00 - than using any other SDK that is out
47:03 - now once I have installed both the
47:04 - packages right you have to go to your
47:06 - player settings again and make sure that
47:08 - AR core gets initialized uh whenever it
47:12 - is built first so what you have to do is
47:14 - you have to click on player settings
47:16 - then simply go to EXA plugin management
47:18 - and make sure to check this plugin
47:21 - provide okay if you if you don't check
47:24 - this AR core uh like you know AR code
47:26 - option in the plugin providers the AR
47:29 - core part won't be initialized when you
47:31 - start the application which is
47:32 - definitely not the thing we want we want
47:36 - uh AR code to initialized whenever the
47:39 - app is started app has been started so
47:41 - we want to check this particular option
47:44 - and then what you can do is you can
47:46 - rename your scene I'm gonna rename my
47:49 - screen to Jet byte okay
47:52 - and once I renew the seat you can see
47:54 - that we we got the c d m as jet turbine
47:57 - at the very top and also before setting
48:00 - up the scene I just want to make sure
48:01 - that all the settings in the player
48:03 - settings are totally fine so let me go
48:05 - through that once uh yeah we got the
48:07 - graphics EPA sorted we got a
48:09 - multi-threaded rendering sorted out
48:10 - we've also got the minimum API level
48:12 - sorted out
48:13 - we got the scripting back end and the
48:16 - arm 64 option sorted up now there's one
48:19 - more thing if you want to uncheck this
48:20 - on V7 option the 32-bit option you can
48:23 - do that let me keep it for now but if
48:25 - you want you can also unchain that
48:27 - and uh yeah everything seems fine and in
48:30 - the exam plugin management also we got
48:32 - the AR code plugin provider check uh so
48:35 - we got everything set up uh like for our
48:37 - project so that it supports AR now so
48:40 - that our scene also supports here we
48:43 - have to delete the main cap because this
48:45 - camera is the virtual camera and it only
48:47 - records the C only give this game view
48:51 - right we want the real world so that we
48:54 - want the AR app to access our camera and
48:57 - then like you know place the objects
48:59 - there so to do that AR Foundation has
49:01 - something called uh
49:04 - AR session origin so what you can do is
49:06 - you can simply right click in the
49:07 - hierarchy click on XR add an AR session
49:10 - origin and then again click on Exon add
49:12 - an ER session now definitely you already
49:15 - know what the serious session object
49:16 - does it basically handles uh all the
49:19 - like you know camera and all the plane
49:21 - management and everything that is out
49:23 - there all the functionalities and this
49:25 - AR session actually handles the whole
49:28 - life cycle of augmented reality and
49:29 - unity so it is mandatory to have both of
49:32 - these components in here now once you
49:35 - have these components what you have to
49:37 - do is
49:37 - just create a few folders the first
49:40 - folder I want to create is called the
49:41 - script folder okay because that is this
49:44 - particular folder is very necessary
49:47 - other than that we want to create a
49:50 - prefabs folder in case we need it and
49:53 - then we also want to create a materials
49:56 - for okay in case reading now I already
49:59 - have packaged the assets for you guys
50:01 - okay it's already packaged in a Unity
50:03 - package so what you have to do is you
50:05 - have SIM you simply have to download
50:06 - that package from the link given below
50:08 - and once you download that particular
50:10 - package you have to import it the
50:12 - process is very simple once you download
50:14 - it you can see that I have this folder
50:16 - called Unity Assets Now what I'm gonna
50:18 - do is I'm gonna either I can simply drag
50:20 - and drop this folder in here right or I
50:23 - can do I can simply click on import
50:25 - package select the custom package go to
50:28 - the location of the folder and simply
50:30 - open it that way you can see that we got
50:33 - a lot of options in here you don't have
50:35 - to like you know get confused between
50:37 - these options
50:38 - what you just have to do is you have to
50:40 - click on you okay once these packages
50:43 - packages are important
50:45 - he will see an assets folder now within
50:47 - that asset folder there is an audio file
50:49 - another one is this jet engine folder
50:51 - which contains the prefab for the jet
50:54 - engine now what you have to do is you
50:56 - have to Simply drag and drop this jet
50:58 - engine in this particular hierarchy and
51:00 - you will be able to see that this
51:02 - particular J engine has been positioned
51:04 - correctly now this is the preferred
51:07 - position this is the position I tested
51:09 - out this application with so that's why
51:11 - I've kept this position if you want to
51:12 - change it like if you want to move it a
51:14 - bit more forward what you can do is you
51:17 - can simply uh you know use this anchor
51:19 - to move this thing uh much more far
51:21 - further from the camera for now I would
51:24 - just want to keep it to 2 as it is much
51:27 - more of a preference and then I have
51:29 - made the rotation to 90 okay you can
51:32 - also keep it that way but I would
51:34 - suggest to keep it true 90 or maybe uh
51:36 - one eight okay if you want to see the
51:39 - front view of uh front view directly
51:41 - from the cap but for now I just want to
51:43 - keep it to nine that way I'll be able to
51:45 - get the product
51:47 - okay and now here you can see that we
51:50 - got our like you know project attempt we
51:52 - got the check turbine India what about
51:54 - the functionalities we need to code
51:55 - something we just don't want to augment
51:57 - this it's pretty simple we just don't
51:59 - want to augment this thing
52:01 - what do we want to do is just a
52:03 - secondary just a second here you can see
52:05 - that this ER session origin is at the
52:07 - top right so we don't want it at the two
52:10 - top we want it at the center so what you
52:12 - can do is you can simply click on this
52:13 - transform like click on this particular
52:15 - session go to the inspector and in this
52:18 - transform you will be able to find this
52:20 - three dots click on that acceptably
52:22 - reset the drop now I will be able to see
52:24 - the object and the game object in here
52:26 - let our bind in
52:28 - okay let's talk about the functionality
52:30 - now within this app we want some Intel
52:32 - activity or is this app will be boring
52:34 - right this is more of an educational
52:36 - application which is going to teach
52:37 - people about a jet turbine so how should
52:40 - we do this now the basic mechanism that
52:42 - I'm going to teach you today is to like
52:45 - you know you can disable the some part
52:47 - of this particular model like let's say
52:49 - if I wanna see the internal parts of
52:52 - this particular like you know this jet
52:54 - turbine what I can do is I can simply
52:56 - disable this Hull to see what is exactly
52:59 - inside this particular jet turbine and
53:01 - if I want I can also enable it okay that
53:04 - way we'll be able to get a much more
53:06 - broader view much better view of this
53:08 - particular uh Jet top okay so to do that
53:12 - it's it's actually pretty simple okay
53:14 - but before getting to that mechanism I
53:17 - want this particular like you know jet
53:19 - turbine that is this particular what is
53:21 - that oh rotor or blades I want this
53:23 - blades to rotate
53:25 - okay so to do that I'm just going to
53:27 - write a very simple script okay so I'm
53:30 - gonna what you have to do is go to the
53:32 - script folder right click click on
53:35 - Create and create a new C sharp you can
53:38 - call this script as uh rotation
53:40 - controller you can name it anything I'm
53:42 - just gonna name it rotation controller
53:44 - as it sounds much better
53:46 - now let the script compile and once the
53:49 - script has been compiled just open it
53:51 - within your Visual Studio or any other
53:53 - editor that you are using I am using
53:55 - visual studio for now so I'm simply
53:57 - going to use that one so give it the tag
53:59 - okay now here you can see that we got
54:03 - the start and update method so let's
54:06 - remove all of these okay we are going to
54:08 - need the update method but before that
54:10 - let's create a variable now we are going
54:12 - to create a public vector3 variable now
54:14 - you will see why I'm why I am exactly
54:16 - creating a vector 3 video pretty soon so
54:18 - given the type
54:22 - okay once you have created this
54:23 - particular Vector 3 variable you have to
54:25 - go to the update method then what you
54:28 - have to do is you have to write
54:29 - transform to rotate to rotate
54:32 - and inside that you'll have to pass this
54:34 - rotation vector and then multiply it
54:37 - with time dot Delta okay so that way
54:40 - you'll be able to rotate your rotational
54:42 - Motors okay that is these bleeds
54:45 - so let's give it the time to load yeah
54:48 - so as you can see once we got this
54:50 - particular script loaded up compiled
54:52 - what you can do is you can search for
54:54 - the turbine and then that is this you
54:56 - know bleed let me show you it should
54:58 - rotate you know something like this so
55:00 - to do that what you're going to do is
55:01 - you can simply like you know first of
55:03 - all select the turbine option once I
55:05 - have selected that just simply add this
55:07 - rotation script in there and that maybe
55:09 - change the Y value let's say uh in which
55:12 - axis is it rotating so it is rotating in
55:14 - the y axis 1 gonna simply change it to
55:17 - maybe a hundred okay and once I have
55:20 - changed the value to 100 you can uh I
55:22 - cannot check if it is rotating by
55:24 - playing the scene
55:26 - so let's see as you can see that yeah we
55:28 - are able to rotate the particular
55:31 - jet turbine
55:33 - in a certain direction okay so our
55:36 - jitterbahn is rotating it seems more
55:38 - realistic now let's add the other
55:41 - functionality that is enabling and
55:43 - disabling the objects in here okay and
55:46 - before we do that we are going to create
55:47 - a simple UI so what you have to do is
55:50 - you have to again go to the hierarchy
55:52 - right click up in there
55:54 - uh go to the UI option
55:56 - then search for this canvas okay now
56:00 - canvas would actually help us to create
56:01 - the UI now I'm gonna shift to a much
56:04 - better landscape view I'm going to use
56:06 - this particular one plus not C to light
56:08 - uh device resolution this is the device
56:11 - that I am using for testing so I'm going
56:12 - to use this resolution for now if you
56:15 - want you can also like you know try to
56:16 - find some resolution of the devices that
56:18 - you want to add and simply click on this
56:20 - add option give give its name and then
56:23 - with that height
56:24 - that way you will be able to create all
56:26 - these options that I have created for
56:27 - myself
56:28 - so let's revert that and here you can
56:31 - see that we got the canvas option
56:33 - now in here you'll be able to find
56:35 - something called uh canvas scalar from
56:37 - there you'll be able to find this UI
56:39 - scale mode make sure to change it to uh
56:41 - scale with screen size once you have
56:44 - changed it
56:45 - this would actually help you to read the
56:47 - UI much more responsive now once you
56:49 - have changed the canvascaler option
56:51 - create a button okay so I'm gonna create
56:54 - a button text mesh Pro now if you are
56:57 - creating a text message Pro button it
56:58 - should prompt uh a tmb importer simply
57:01 - click on import TMP Essentials
57:03 - give it the time to load
57:06 - once that particular thing has been
57:08 - loaded
57:09 - just edit the button once right just uh
57:12 - see if you can like
57:15 - resize it a bit just for uh you know
57:18 - make it to look much more paid up much
57:20 - more you know better so I'm just gonna
57:23 - do it this way yeah this one looks much
57:26 - better
57:27 - let me Center it right so I did Center
57:30 - it now what I'm gonna do is I'm gonna
57:31 - maybe reduce the scale a bit maybe
57:34 - um Point size yeah 0.5 looks much better
57:38 - so let's change it to okay let's change
57:41 - it to point a yeah uh this is much more
57:43 - visible
57:45 - he appoints it much is much more visible
57:47 - and then what you have to do simply
57:49 - click on this uh transform option from
57:52 - there press alt in your key okay if you
57:54 - are on a Windows PC press alt and if you
57:58 - are on a Mac I think option is for an
58:01 - alternative for at all so you have to
58:03 - click on option and then you have to
58:05 - select this particular option so that it
58:07 - anchors to the bottom
58:10 - all right okay now once it has been
58:12 - anchored what you can do is you can
58:14 - maybe like increase the position of it
58:17 - maybe let's see yeah this looks much
58:20 - much more cleaner and let's name this
58:22 - button as Hall okay
58:24 - uh let's copy the name and again do the
58:28 - C add this same for the text and make it
58:32 - a bit bold yeah this now this particular
58:34 - button looks much more clean right
58:36 - doesn't it it definitely looks much more
58:38 - cleaner if you want you can also create
58:40 - a much like you know much better button
58:43 - through figma or maybe some other UI
58:45 - designing I'm gonna use the default one
58:47 - that unit is providing now I'm going to
58:50 - duplicate that particular button right
58:52 - and let's uh let's see what else do we
58:55 - have we have
58:57 - we have the tubes okay we definitely
58:59 - want to disable and enable the cube so
59:01 - I'm gonna give it two
59:04 - okay so we got the tubes in here
59:07 - now
59:08 - again go change the text of it to cubes
59:11 - and then here's a pretty neat trick that
59:14 - I really like just uh add this to maybe
59:17 - one to eighty maybe 100 and then it this
59:21 - this value actually depends on the UI so
59:23 - I'm gonna add it as 110
59:26 - now I'm again gonna duplicate it right
59:29 - let's uh see what else could we add
59:32 - um we had something called grid yeah we
59:35 - got the grid now I'm also gonna change
59:37 - the name to create
59:38 - then
59:40 - again minus 110
59:43 - and then again change the text to grid
59:47 - yeah
59:49 - so once every is an uh text to grid I
59:52 - also add another button for the Piston
59:54 - so I'm gonna simply duplicate it name
59:57 - this button paste turns
59:59 - uh copy this again go to the text
60:03 - change the text to past tense then
60:05 - select the button again
60:06 - uh add 110 there and you can see that we
60:09 - got all the buttons positioned properly
60:12 - okay now if we let's say
60:14 - change the UI to something else you can
60:16 - see that uh it is pretty much responsive
60:18 - and it is you know working flawlessly as
60:21 - it should
60:23 - now once these buttons are added okay
60:25 - what you have to do is you have to like
60:27 - make sure that once you click this
60:29 - button it should disable add enable the
60:32 - objects that we have
60:34 - to do that we have to create a script so
60:37 - right click in the project folder that
60:38 - is the scripts then click on Create and
60:41 - create a new script let's call it mesh
60:44 - okay this second mesh
60:48 - problems
60:49 - once you have created the scriptlet
60:51 - compile okay so the script is compiled I
60:55 - have opened it the very first thing you
60:56 - have to do is you have to create a
60:58 - variable called uh game object and name
61:01 - it you know naming a variable is really
61:03 - hard for me it takes a lot of time okay
61:05 - let's name it turbine object
61:07 - okay and once you have like you know
61:10 - added this particular variable the next
61:12 - thing you have to do is you have to
61:13 - create a Boolean back okay let's keep it
61:16 - private for now so private uh Boolean
61:19 - and let's name it is active now of
61:23 - course at the very first of the start of
61:26 - the application all of the objects will
61:28 - be active so we want to set it to true
61:31 - and within the like you know
61:34 - within this particular script you also
61:36 - want to create another function that is
61:38 - that will actually help us like if we
61:40 - call that function it is going to help
61:42 - us to disable and enable the object so
61:45 - to do that I'm going to create a public
61:46 - void that is public function
61:49 - public
61:51 - void Let's uh call it uh toggle
61:56 - now once you write this function what
61:59 - you have to do is
62:00 - you have to check if the phone if the
62:03 - like you know mesh is active or not now
62:05 - we want to check this through this is
62:06 - active Boolean so if
62:10 - is active what you want to do is you
62:13 - want to set the turbine object to false
62:16 - so turbine object dot set active to
62:19 - solve and also change the value of is
62:21 - active Okay that way uh we will make
62:24 - sure that uh like you know we are
62:25 - getting the exact value or able to
62:27 - switch on and off the uh the objects
62:31 - now you have to add an else block now
62:33 - within that is block you have to you
62:35 - know again do the same but in this block
62:38 - you have to turn the object active right
62:40 - that is you have to make sure that
62:42 - objects are true they are the objects
62:45 - are actually on
62:46 - so yeah this says that this this is the
62:49 - whole script this is this new text is
62:52 - actually going to help us toggle between
62:53 - the objects so once you have saved the
62:56 - script simply low let's load it now as
62:58 - you can see that we got the script
63:00 - loaded up now the next thing you have to
63:02 - do is you have to select the objects you
63:04 - wanna you know disable and enable so I'm
63:07 - gonna select the hull then I'm gonna
63:09 - select the tubes
63:11 - then the Piston then the grids okay now
63:16 - I'm simply gonna I'm simply gonna drag
63:18 - and drop this mesh toggle option in here
63:19 - then in the Highlander simply going to
63:21 - drag and drop this file object then in
63:24 - the tubes I'm gonna like add this tubes
63:27 - then in the Pistons I'm gonna set this
63:30 - this object to piston then in the grid
63:33 - I'm gonna do the same for the okay once
63:36 - you have done all of that select the
63:37 - buttons
63:39 - uh go down below to the on click make
63:42 - sure to click on ADD and first of all
63:45 - try adding one okay change uh the next
63:48 - thing you have to do is you have to
63:49 - select the first button
63:51 - uh you can see right once the hull
63:54 - object has been selected if you click on
63:57 - the no function drop down you'll be able
63:58 - to see something called this mesh toggle
64:00 - okay this is the name of our script and
64:02 - if okay if your or if your method right
64:05 - if you are this particular function is
64:07 - public you should be able to see that
64:09 - function in here so I have this toggle
64:11 - function I'm simply going to click on
64:13 - the stable function and let's try this
64:16 - particular you know option up right
64:17 - let's see if it is enabling or disable
64:19 - information
64:20 - so if you click the button you can see
64:22 - that it is enabling and disabling the
64:24 - mesh now the next thing you want to do
64:26 - is we want to do this all of the same
64:29 - thing that we have done till now for the
64:31 - other buttons also so I'm going to
64:32 - select the tube then search for the
64:35 - tubes option drag and drop it in here
64:36 - select the mesh Toggler select toggle
64:39 - then again same for Z I'm gonna search
64:42 - for the grid option in here
64:44 - install your token and again same for
64:47 - the pistol
64:51 - so as you can see now if we play it
64:55 - you can see we can enable the hull we
64:57 - can enable and disable the tube we can
65:00 - enable or disable the grids we can also
65:02 - enable and disable the Pistons we have
65:04 - okay so this is it for this now
65:07 - now of course after you have built this
65:10 - whole application you want to test it
65:11 - out right so how to do that again it's
65:13 - pretty simple you have to click on file
65:15 - click on build setting now you can see
65:18 - that we have the scene active we have
65:20 - the jet turbine scene active now there
65:22 - are two ways to add a scene one you can
65:24 - do is you can simply drag and drop this
65:25 - scene in here and the way is that you
65:28 - can click on ADD openc now this is gonna
65:30 - add the active scene in here that is the
65:33 - scene that is opened up within your
65:34 - editor so it right now I have the jet
65:37 - turbine scene open so it has added the
65:39 - objective and seen in here
65:41 - and once you have added the C you you
65:44 - can either click build and run now the
65:46 - build and run option will only work if
65:48 - your phone has developer options turned
65:50 - on and also it is connected to your
65:52 - device
65:53 - another one would be uh the build option
65:56 - okay you can simply click on build name
65:58 - the application anything fun for the
66:00 - name it jet turbine and then click on
66:02 - save that way your application will
66:04 - start building and you can test your
66:06 - application the way you want okay
66:09 - another thing you have to keep in mind
66:11 - is that if you want to test your
66:12 - application make sure uh the Google
66:14 - services for AR is installed within your
66:17 - applic within your phone you can simply
66:19 - search it on the Play Store and also
66:21 - make sure your device is supported okay
66:24 - that is it supports AR because a lot of
66:26 - the device does not support VR also if
66:29 - if your device does not support your
66:31 - code that that means you won't be able
66:32 - to run this application so make sure to
66:35 - check that out
66:36 - and once you have done all that your
66:38 - build application you have you can
66:40 - simply install it and test the
66:41 - application out by yourself now at the
66:44 - end of this video I'm gonna add a clip
66:46 - that will actually show you the demo of
66:49 - the particular application okay
67:11 - so in this lecture we are actually going
67:13 - to build an augmented reality
67:14 - application that would actually help us
67:16 - plant multiple different plants on our
67:18 - surrounding area all right and to do
67:21 - that we are going to use some specific
67:22 - features such as raycast and uh AR plane
67:25 - managers
67:26 - so without any further Ado Let's uh move
67:29 - forward and to get started with the
67:30 - project I want you guys to create a new
67:32 - project with unity engine I'm using the
67:34 - same version that I was using in the
67:36 - previous project so I would suggest you
67:38 - to go with that same version
67:40 - so right now what we have to do is we
67:43 - have to integrate their foundation and
67:45 - AR code package and I already know you
67:47 - guys already know it but let me show you
67:49 - how you can do that again
67:52 - so first of all you had to go to the
67:54 - package manager then you have to uh like
67:56 - from the package you have to select this
67:58 - Unity registry once you've selected that
68:00 - you have to search for AR Foundation
68:02 - and then simply uh install this AR
68:05 - Foundation version and the version I'm
68:06 - using at 4.2.7
68:17 - okay so now that we have installed the
68:19 - AR Foundation plugin what we have to do
68:21 - is we have to also install the AR code
68:23 - plug
68:23 - then simply going to search for the AR
68:25 - code plugin in here and simply install
68:27 - it
68:39 - so now that you have installed the
68:41 - arcoexal plugin what you have to do is
68:43 - you have to set up your project so that
68:44 - you are able to build it for your
68:46 - Android devices so go to file click on
68:49 - build settings which are platform to
68:51 - Android
69:05 - now once you've switched your platform
69:06 - to Android you have to go to player
69:07 - settings and from resolution and
69:10 - presentation I would want you guys to
69:11 - change your default orientation to
69:13 - Portrait you can also keep it to auto
69:15 - rotation if you feel so but after that
69:18 - you have to remove this check mark from
69:20 - autographics API and remove the Vulcan
69:22 - API as it is not supported by our code
69:24 - we also have to turn off multi
69:26 - threadrant rendering and also change the
69:28 - minimum API level to Android
69:30 - 7 4.0 once you have done that you have
69:32 - to change the scripting back into i2cpp
69:35 - so that it supports 64 architecture
69:37 - because AR core doesn't really builds
69:40 - for a 32-bit architecture and it may
69:42 - cause you a lot of error and once you
69:44 - have changed your scripting backends
69:46 - what you have to do is you have to put
69:47 - away the plugin management and make sure
69:49 - to enable AR code plugin provider once
69:52 - you have done all of these
69:54 - delete the main camera from your scene
69:57 - then click on exact add an air session
69:59 - origin and then again add and AR session
70:03 - now once both of these are added select
70:06 - the IR session origin add two components
70:08 - arraycast manager
70:11 - and then
70:12 - The Ark in manager
70:15 - now the AR recast manager would actually
70:17 - help us throw raise uh two different
70:19 - different uh like the planes that would
70:21 - be generated in real time and the AR
70:24 - plane manager would actually help us to
70:27 - generate those planes those artificial
70:28 - planes on top of the ground okay by
70:30 - detecting the graph so now let's
70:33 - uh
70:38 - now all there is setups are done right
70:40 - now the next thing what we have to do is
70:41 - we have to import the Assets Now I
70:44 - already have the assets written so I'm
70:45 - simply going to click on import package
70:47 - custom package then select this garden
70:49 - plants asset and simply import it
70:56 - thank you
71:08 - now once the assets have been imported
71:11 - what you have to do is you have to
71:12 - create a few more folder one would be
71:15 - for the scripts now I'm going to create
71:17 - another folder for a material okay so
71:20 - I'm going to show you what exactly I'm
71:21 - creating that folder for and what we
71:23 - have to do in there so once the
71:25 - materials uh just again so once the
71:27 - material folder is created create a new
71:29 - material called uh
71:31 - clean material okay so I'm gonna call it
71:34 - plain transparent
71:36 - mat okay and do one thing once you've
71:40 - selected This Plane material
71:42 - go to rendering mode and change it to
71:44 - transparent and once you have done that
71:46 - go to the Albedo section from there you
71:48 - have this Alpha Channel decrease it down
71:50 - to zero that way you will have a fully
71:53 - transparent material on your hand and
71:56 - once those things have been done also
71:59 - you can try like you know reducing the
72:01 - smoothness and once all of these are
72:02 - done what you can do is you can simply
72:05 - go to the hierarchy right click in here
72:08 - select inksar and then add an AR default
72:11 - layer now make sure to prefab this AR
72:14 - default pin but before that what I'm
72:16 - gonna do is I'm gonna simply select this
72:18 - materials option in here and drag and
72:21 - drop this material options into the
72:22 - element 0. I mean the plane material
72:25 - into the elements once that has been
72:27 - done you have to create another folder
72:30 - called prefabs
72:34 - and then you have to drag and drop this
72:36 - AR default plane and delete it from the
72:38 - hierarchy and then select the ER session
72:41 - origin again and simply drag and drop
72:43 - this clean prefab this AR default plane
72:45 - into the plane prefab holder that is
72:47 - available in the play and match now the
72:49 - reason I did this because you will be
72:51 - able to visualize the planes that are
72:53 - being generated okay so the place would
72:55 - be transparent with a black border you
72:57 - can totally see that in the demo at the
72:59 - very end of the video so whenever
73:01 - whenever you will be trying to scan your
73:03 - ground multiple different planes will be
73:05 - generated and those planes will have
73:07 - this transpend material okay that will
73:09 - actually help you to visualize that yeah
73:11 - there are
73:14 - planes that are being generated and
73:17 - that's where if you shoot the recast
73:20 - it should disable the plane and also
73:22 - place the plants okay and we are going
73:24 - to implement that mechanism right now
73:26 - now let me like make you go through the
73:29 - prefab once that contains all the
73:32 - plant model so if you go to assets
73:34 - you will find this folder called models
73:37 - from there there this folder got plans
73:39 - and in here you'll be able to find this
73:41 - prefab now I think there are in total 12
73:43 - uh plants that are totally available
73:46 - yeah there are total 12 plants that are
73:48 - available now the next thing you have to
73:50 - do is you have to write the script so
73:52 - that it can hold those plants and
73:54 - randomly Place those plants onto the
73:56 - floor
73:57 - so what I'm going to do is I'm gonna
74:00 - go to a scripts folder create a new
74:02 - script and let's call it
74:04 - plant
74:05 - placement
74:07 - manager
74:10 - once the script is straightened give it
74:12 - some time to compile
74:15 - once the script has compiled what you
74:17 - can do is you can simply open the script
74:18 - in your editor now I'm using visual
74:20 - studio code for this
74:22 - you can use Visual Studio ID too and any
74:25 - other ID that supports unit Engine Okay
74:28 - so
74:30 - let's understand what do we have to do
74:32 - in the script
74:33 - before that let's understand what
74:35 - exactly are we gonna Implement now the
74:38 - basic implementation would be after the
74:40 - ground planes are detected right after
74:42 - the grounds are detected and the planes
74:45 - are placed in there whenever I tap on
74:47 - the screen it should place
74:49 - uh the plants in that particular
74:51 - position okay now of course to make this
74:54 - happen there are multiple components we
74:55 - have to work with we have to work with
74:56 - the recast manager we have to work with
74:58 - the plane manager and we also have to
75:00 - work with the session origin and along
75:02 - with that we also have to store all the
75:04 - hits right whenever you tap on the
75:06 - spleet it should be like it would be
75:08 - registered as a hit so whenever the hit
75:10 - happens
75:11 - it should store those uh like positions
75:14 - in there okay so let's uh implement this
75:17 - whole script
75:18 - so the very first thing is we have to
75:20 - create a placeholder that would actually
75:22 - held all those uh particular plant
75:26 - models and yes so to do that you have to
75:28 - write a public variable uh
75:31 - and you have to give it the data type of
75:33 - game object now it should be an added
75:34 - because we want to store multiple
75:36 - objects and I'm gonna call this variable
75:38 - as flowers okay because it will be story
75:40 - all the flowers that are in there now
75:43 - save this
75:44 - and then go to a unit engine
75:48 - add this particular script to your AR
75:50 - session origin and make sure to add all
75:53 - the plants that are already available
75:55 - okay so I'm gonna go to the prefab and
75:58 - the easiest way to do is to little drag
76:01 - and drop whole like you know plant
76:03 - objects directly in that particular
76:05 - uh array so before doing that what I'm
76:08 - going to do is in the inspector menu at
76:10 - the right of it you will be able to see
76:12 - this lock option so just click on it now
76:14 - if you select any of these models or you
76:18 - can say prefab it won't really change
76:19 - the inspector Mini
76:21 - and what you can do is you can select
76:22 - all of these models right here
76:25 - and once you've selected those you can
76:26 - directly drag and drop it inside this
76:28 - particular script and you can see we got
76:30 - all the 12 elements so you can say 12
76:33 - plants directly inside this
76:36 - particular
76:37 - placeholder that we created as an array
76:39 - now what you're going to do is you can
76:41 - again unlock all of these so that you
76:44 - don't have uh you know it doesn't get
76:45 - stuck to that property now once you have
76:48 - done that go back to the script again
76:50 - now once you've opened the script you
76:53 - have to reference the plane manager that
76:55 - we have in here okay we have to
76:57 - reference the plane manager we have to
76:59 - reference the recast manager and also
77:01 - the AR session voyage
77:03 - so to do that what you have to do is you
77:05 - have to write three more public
77:06 - variables that would contain public
77:09 - AR session origin
77:11 - okay also I forgot before this you have
77:14 - to include two different namespaces
77:16 - because uh it contains all the necessary
77:18 - functions for air Foundation to be able
77:21 - to script okay so to do that you can
77:24 - simply write using
77:26 - Unity engine
77:28 - dot AR Foundation
77:31 - just a second
77:33 - AR foundation and then you also have to
77:35 - add more ring unit engine
77:38 - dot exact
77:40 - dot AR subsystem okay so they uh these
77:43 - two files that is these two namespaces
77:45 - contains all the important uh
77:48 - functionalities that we need here
77:50 - Foundation to provide us okay so for
77:53 - example this we have to create a new
77:55 - variable and we have to call it AR
77:57 - session origin okay and we have to limit
77:59 - session origin now this AR session
78:01 - origin component is a part of this AR
78:04 - Foundation names okay similarly you have
78:06 - to create another variable and we have
78:09 - to call it AR recast
78:11 - manager and I'm gonna name this variable
78:14 - as recast manager and I'm gonna create
78:16 - another script called
78:18 - ER plane manager because we will be
78:21 - doing a few like you know tasks with the
78:23 - planes that's why we are gonna need the
78:25 - AR plan manager okay so I'm gonna name
78:28 - it plain manager once these variables
78:30 - are set up to what you can do is you can
78:31 - simply go to your unit engine
78:34 - and then from there drag and drop the AR
78:37 - session origin Windows component again
78:39 - drag and drop the array cast manager add
78:41 - also the clean manager okay once these
78:44 - managers have been added in here the
78:46 - next thing you have to do is
78:48 - you have to write an uh you actually
78:50 - have to create a list that would contain
78:52 - all the head positions right all the
78:54 - raycast it's that have been done now I
78:57 - will tell you what exactly is the
78:59 - significance of that but for now let's
79:01 - play in that particular list so you have
79:03 - to make it private
79:05 - private
79:06 - list it should be of type AR recast hit
79:10 - it
79:12 - and then also name it I'm gonna name it
79:14 - recast hits and then I'm gonna create a
79:16 - new object of it so new
79:19 - list array casted and
79:22 - we have created or you can say
79:24 - initialized our list in this particular
79:27 - scenario in this particular script now
79:30 - we also have to write an update
79:31 - condition okay or you can say update
79:33 - group in which we have to check for if
79:36 - the person has tapped on the screen or
79:38 - not okay so to do that what you have to
79:40 - do is you have to write this update
79:42 - function in here
79:44 - once this update function is in place
79:47 - you have to check if the person has
79:48 - touched the screen or not so to check
79:51 - that what you can do is you have to
79:52 - write this if condition if
79:55 - input dot get touched
79:58 - okay and then you have to uh set the
80:00 - parameter of the touch index to 0 and
80:03 - then face equals equals touch phase dot
80:07 - bigger okay this means that if you have
80:10 - touched the screen or not okay and if
80:12 - you have touched the speed the next
80:13 - thing we want to do is we want to shoot
80:15 - a request okay we gonna shoot array cast
80:18 - and once the request has been shot we
80:21 - want to place
80:23 - the objects right random we want to
80:26 - randomly place the objects
80:28 - randomly
80:31 - and then at the variant what we want to
80:33 - do is we wanna uh disable the plane
80:35 - manager and also we wanna remove all the
80:38 - planes or you can say disable on the
80:41 - planes that have been generated okay so
80:42 - that the planes don't really become a
80:44 - blockage to our views so we wanna what
80:47 - we want to do is we wanna disable
80:51 - the planes
80:53 - and the plane manager
80:55 - and the reason why we want to disable
80:57 - the plane manager is because we want we
80:59 - don't want the planes to be generated uh
81:01 - generated all over again okay once they
81:03 - have been designed so that's why now
81:06 - let's get to the first part we want to
81:08 - shoot the request right so what we have
81:11 - to do is you we have to uh like you know
81:13 - reference the recast manager so what I'm
81:15 - gonna do is I'm going to reference the
81:17 - request manager as request manager then
81:19 - I'm gonna click on like you know put the
81:21 - dot and ask for the recast function
81:23 - inside that raycast function you have to
81:26 - pass this input dot mouse position okay
81:29 - now Mouse position in your Android
81:32 - device would actually result in the
81:34 - position of your screen where you have
81:35 - touched right if I am touching at a
81:37 - certain position of your of my screen
81:39 - it will return that particular position
81:41 - within this particular function okay and
81:44 - once the mouth position administrative
81:46 - actually uh I did something wrong in
81:48 - here okay I what I did was I gave this
81:51 - parenthesis India and then a zero in it
81:53 - you don't have to do that okay and once
81:55 - this input Mouse position input.mouth
81:57 - position is there the next thing what
81:59 - you have to do is you have to pass the
82:00 - recast hits uh list that we just created
82:03 - okay now actually the raycast hit
82:05 - contains all the position of the like
82:08 - you know raycast that has been shot so
82:10 - we need this weight cast list and we
82:12 - want to store all the like whenever we
82:14 - are touching right yeah whenever our
82:16 - touch has happened it is shooting a
82:18 - recast so we need to store that recast
82:20 - into a certain uh variable or you can
82:22 - say into a certain list right because we
82:25 - want to access that recast hit because
82:28 - it will be giving us the position and
82:30 - whenever we touch right at wherever
82:32 - position we are touching we want the
82:34 - plant to be placed in that position so
82:37 - recast hit is actually gonna return us
82:40 - those position okay so we are gonna need
82:42 - the recast hits and then what we have to
82:44 - do is here to set the trackable type
82:46 - group plane
82:48 - with uh polygons within more molecule
82:51 - okay and once this has been done
82:53 - terminate the statement with an
82:55 - semicolon now this is going to return a
82:58 - Boolean value okay this is actually
83:00 - going to return us a Boolean value
83:02 - now as this function as this stripped or
83:05 - you can say statement we wrote is going
83:06 - to return a symbolian value what we have
83:08 - to do is we have to store it in a
83:10 - variable Boolean variable so I'm going
83:12 - to call it a collision variable right so
83:15 - whenever this particular Collision
83:17 - Boolean is true what we want to do is we
83:20 - want to place those objects if we want
83:21 - to place those objects on our ground
83:25 - if Collision
83:29 - name object I'm going to call this as
83:31 - object you can also call it as a flower
83:33 - I am going to instantiate that
83:35 - particular out okay instantiate
83:39 - flowers now take the index of the
83:42 - flowers and now what we want to do is we
83:43 - want to generate a random number from 0
83:46 - to the like you know n minus 1 that is
83:50 - the length minus 1 so that we are able
83:52 - to get all the flowers from that
83:54 - scenario so
83:56 - random dot range
84:00 - 0 comma
84:03 - flowers
84:04 - dot length minus 1.
84:07 - so that way we'll be able to get all the
84:10 - flowers randomly and we'll be able to
84:12 - instantiate them and once these flowers
84:15 - like you know have been instantiated
84:16 - what we want to do is we want to set
84:18 - their position to where we have actually
84:21 - tapped so to do that object dot
84:25 - transform dot position
84:27 - equals raycast hits
84:30 - zero Dot
84:33 - uh pause
84:34 - dot position okay so this is why we are
84:38 - actually why we have actually created
84:39 - that list called recast head because it
84:41 - actually stores the position of the
84:44 - raycast that has been shot onto the
84:46 - ground and that is how we are actually
84:48 - going to place those objects so I hope
84:50 - this particular topic about uh recast
84:53 - hits is pretty much clear now the next
84:55 - thing we want to do is now basically we
84:58 - uh the script that we created this would
85:00 - be enough for this experience to work
85:02 - but the problem with that will will be
85:04 - is that we are generating those planes
85:06 - right so it has some material so it will
85:09 - be visible on top of the ground and we
85:11 - don't really want that because that will
85:12 - be a visual blockage and won't really be
85:14 - looking good at all right so to do that
85:18 - you have to like you know Loop through
85:20 - that whole uh planes and disable them
85:22 - one by one
85:24 - so we are going to write a for each Loop
85:26 - so inside that forage Loop we are going
85:28 - to reference all the planes that are
85:29 - being created so to do that where plane
85:33 - in plane manager
85:35 - dot trackables okay and once uh you have
85:39 - got those claims what you have to do is
85:40 - you have to disable them one by one so
85:43 - I'm gonna call play Dot Game object dot
85:45 - set active
85:48 - I set it to false so whenever the like
85:51 - how much like whatever number of planes
85:54 - that have been generated they get
85:56 - disabled as soon as I touch the
85:59 - particular screen okay and then what we
86:01 - want to do is after the plays have been
86:03 - disabled we wanna disable the plane
86:05 - match of clean manager dot enabled
86:08 - equals
86:09 - Fox so that way uh after like you know
86:13 - after you've disabled the planes we are
86:15 - disabling the plane manager because we
86:16 - don't want any more planes to visit
86:19 - okay and now that we are done with the
86:21 - script what you can do is you can simply
86:23 - save this particular script and go to a
86:25 - Unity engine editor
86:28 - and just make sure you have added all
86:30 - the flowers and also all the like you
86:33 - know components that were there that is
86:34 - the managers you have added all the
86:36 - managers once you have done all of that
86:38 - what you can do is you can simply uh you
86:40 - know change your scene name to main you
86:43 - can also call it app or anything you
86:44 - want and then go to file
86:47 - build settings click on ADD open scenes
86:49 - or you can simply drag and drop the
86:51 - scene in here
86:52 - then go to player settings and change
86:54 - the product name to anything you want
86:56 - now I'm going to name it garden flowers
86:58 - you can change it to anything you like
87:00 - right
87:02 - and once that has been done you can
87:04 - simply click on build and start building
87:07 - the application right there okay and I'm
87:11 - also going to attach a demo of this
87:13 - whole project at the very end so that
87:15 - you are able to see what we have built
87:17 - during this project and if you have any
87:18 - doubt make sure to join our Discord
87:20 - server or you can uh like you know email
87:22 - me you can go through my LinkedIn and
87:25 - ask me there also you can ask it on my
87:27 - Instagram okay and so I hope that you
87:30 - have enjoyed this particular project I
87:32 - will see you in the next part thank you
88:09 - hey everyone welcome to this lecture in
88:12 - this lecture I am going to teach you
88:13 - about building and furniture-based Tryon
88:15 - application so in this application the
88:18 - base idea is that you will be able to
88:20 - place multiple different Furnitures at
88:22 - your room with the help of again AR
88:24 - foundation and AR code and apart from
88:27 - that we will also be able to switch
88:29 - between those Furnitures with the help
88:31 - of three different buttons that we will
88:33 - be designing in this project video
88:35 - now the challenge in this video is uh
88:38 - what happens generally whenever you are
88:40 - like you know let's say we ignore the
88:42 - very basic things right just with the
88:45 - simple placement stuff so what basically
88:47 - is going to happen if you uh like you
88:49 - know touch on the UI buttons it it is
88:52 - going to react with the touchscreen all
88:54 - right by that what I mean is let's say
88:58 - you are trying to like you know Place
89:00 - some object you have placed it and then
89:02 - you are trying to switch switch into
89:04 - some other Furniture also right so once
89:07 - you are tapping that button even while
89:09 - tapping that button it is going to place
89:11 - that furniture in there which is a big
89:13 - Challenge and I'm going to show you how
89:15 - to solve that problem easily in this
89:18 - particular lecture and of course there
89:20 - are a lot of things that we are going to
89:21 - learn and I hope that it clarifies all
89:25 - the doubts you have till now with uh
89:27 - like you know plane managers they cast
89:29 - and all of those stuff right uh so
89:31 - without any further Ado let's move
89:33 - forward and set up the project Source
89:35 - the very first thing you have to do is
89:36 - you have to go to file then build
89:39 - settings then switch it to Android now
89:41 - this is the usual settings that we do
89:43 - before uh building or you can say uh
89:45 - start coding our project so you have to
89:47 - again do that uh whole process again I'm
89:50 - gonna show it to you again so that won't
89:52 - be a problem
90:06 - now once your build platform has been
90:08 - switched to Android the next thing you
90:09 - have to do is you have to install the AR
90:11 - foundation and the AR code XR plugin so
90:14 - to do that just go to Windows uh then
90:16 - package manager go to your Unity
90:18 - registry now it will take a few seconds
90:20 - to fetch the recent packages right uh so
90:24 - give it the time it needs and once it
90:26 - does that what you have to do is search
90:27 - for AR Foundation
90:29 - now install that particular plugin and
90:31 - once AR Foundation has been installed
90:33 - you have to install something called AR
90:35 - codex now let's say if you also want to
90:37 - build for uh like you know iOS devices
90:40 - then along with the AR core plugin you
90:43 - also have to install AR kit plugin right
90:45 - other than that uh there's the only
90:48 - difference is that you have to set up
90:49 - the build settings uh for iOS separately
90:52 - that's that's it there are no more like
90:55 - you don't have to put any more changes
90:57 - uh within your project
90:59 - so once AR Foundation has been installed
91:01 - you have to install AR code XR plugin so
91:04 - search for it simply install it that's
91:06 - it
91:15 - now once both of these plugins are
91:17 - installed the next thing you have to do
91:18 - is you have to go to edit then I think
91:21 - it was Project settings yeah you have to
91:23 - go to the project settings
91:25 - then you have to go to this uh player
91:28 - setting whereability yeah here it is so
91:30 - you have to go to this player settings
91:31 - now the more easier way would be if you
91:33 - if you go to file then build settings
91:35 - then directly so like you know click on
91:37 - this player setting either way you will
91:39 - be getting to the same settings as
91:40 - required now once you are into the
91:43 - player setting way what you have to do
91:45 - is you have to go to resolution and
91:46 - presentation and change the default
91:48 - orientation to Portrait because this is
91:50 - not an landscape orientation application
91:53 - so we need a portrait uh apart from that
91:56 - you have to go to other settings
91:58 - uh uncheck this Auto Graphics API
92:00 - because as of now uh welcome is not
92:03 - really supported but uh recently uh at
92:06 - Google I O Google announced that in the
92:08 - future versions of AR code will be
92:10 - supporting one but the current version
92:12 - we are using doesn't really support uh
92:14 - well you can graphic save me so simply
92:16 - just removed now apart from that we got
92:19 - multi-threader rendering uncheck it we
92:21 - don't need it then from there you have
92:24 - to go to this minimum API level uh
92:26 - change it to Android 7.0 that is API
92:28 - level 24 because that's the bare minimum
92:31 - uh Android version AR code requires to
92:34 - run apart from that we got the scripting
92:36 - backend you have to change it to file to
92:38 - CPP because currently it is set up in
92:40 - mono and once you have done that you
92:42 - have to go to this arm 64 and make sure
92:45 - to check it right make sure it is
92:47 - enabled because arm 64 helps you get the
92:51 - 64-bit architecture support now from
92:53 - there uh yeah almost every settings is
92:56 - settings are configured the next thing
92:58 - you have to do is you have to go to
92:59 - exact plugin management and make sure to
93:01 - turn on AR code plugin provider and
93:04 - that's it your project that is build
93:06 - settings is set up properly now what you
93:09 - have to do is you have to add the
93:11 - current scene to your build setting so
93:12 - I'm simply gonna click on ADD open
93:14 - scenes so that way we set up our whole
93:17 - build process
93:19 - now let's import the assets right let's
93:22 - design the UI first then we will get
93:24 - into the coding part so again I have
93:27 - packaged the assets into a small Unity
93:30 - package called Sony ER dot Unity package
93:33 - now all these assets are already
93:35 - available in the LMS so you to download
93:37 - these assets you have to go to the LMS
93:39 - and get these assets for yourself
93:42 - now just simply drag and drop this Sony
93:46 - share asset or you can say Unity package
93:48 - into your project folder and simply
93:51 - click on import the next thing you have
93:53 - to do is just simply go to the assets
93:55 - folder you will be finding two more
93:57 - different phones one is for the UI it
93:59 - contains three different UI buttons and
94:01 - then we have the Furnitures which
94:03 - actually contain uh the models that we
94:05 - have now if you like you know see on
94:08 - your right side
94:10 - you should be able to see this small
94:12 - window for visualizing the precepts now
94:16 - in most of the cases it might happen
94:18 - that you might not find this window
94:19 - that's because uh sometimes it's
94:22 - minimized so you have to go at the
94:24 - bottom and you can see that there's this
94:26 - two very small lines you have to drag it
94:28 - to the top and you will be able to
94:30 - visualize uh your furniture mod okay
94:33 - similarly I got another one that is this
94:35 - light brown one and then again there's
94:38 - another one called this white show for
94:40 - now this white sofa looks much better
94:41 - than the other three of course but uh
94:44 - yeah this is how you can visualize these
94:46 - sofas and you can also drag and drop it
94:49 - to the scene if you want okay now let's
94:52 - delete it for now because we are not
94:54 - gonna need it as of now the next thing
94:57 - we have to do is we have to create the
94:59 - user interface okay now the base idea
95:01 - behind the user interface would be uh to
95:04 - switch between these models right to
95:06 - switch between these three models now
95:09 - let's create the UI first
95:11 - the very first thing you have to do that
95:13 - I would suggest right this is what I
95:15 - actually do is I dock my game window
95:18 - window to the right side okay then from
95:22 - there you can see there's this drop down
95:24 - call three aspect right now we don't
95:26 - really need this free aspect what we
95:28 - want is we want to use our template now
95:31 - if you haven't really added a template
95:34 - uh like you know a custom template to
95:36 - your game window you can either use one
95:39 - of the already provided templates but I
95:42 - have added a few of these in my Unity
95:45 - project so I'm going to use that
95:48 - shifted to one of my templates and once
95:51 - the template is open there's another
95:52 - thing you should do is uh in the scene
95:55 - window you should be able to find this
95:57 - 2D mode okay so simply switch uh to the
96:01 - 2D mode because that won't be any
96:02 - helpful while designing the user
96:04 - interfaces or doing anything in 2D okay
96:08 - so once these are done the next thing
96:11 - you have to do is you have to create a
96:12 - canvas now simply right click in the
96:15 - hierarchy go to UI and then create a
96:19 - canvas component or you can say canvas
96:21 - gain object now once you've created a
96:23 - canvas there are two things okay one is
96:25 - this canvas now this canvas is
96:26 - responsible for uh like you know setting
96:29 - up the UI and doing all the stuff
96:31 - regarding the UI but this event system
96:34 - is a very important part
96:36 - the reason why it is very important the
96:38 - event system actually handles all the
96:41 - events that is happening within your
96:43 - user interface right for example the tap
96:45 - of a button if this event system is not
96:48 - available what is gonna happen is you
96:50 - will not be able to interact with the
96:52 - user interface at all so it is very
96:54 - important to have the event system if
96:57 - you want to interact with the UI within
97:01 - your uh like you know Unity project
97:04 - but apart from that that's it and now if
97:08 - we take a look at the canvas we got this
97:10 - something called canvas scalar now in
97:13 - here you should be able to find
97:14 - something called UI scale mode this is a
97:16 - very important thing okay because
97:18 - constant constant pixel size is like you
97:21 - know doesn't really make your UI
97:23 - response so you have to change it to
97:25 - scale with screen size which is gonna
97:27 - help you like you know create a more
97:29 - responsive user interface for your
97:31 - application
97:33 - once you've switched your like you know
97:35 - UI scan mode to scale with screen size
97:38 - the next thing you actually have to do
97:39 - is uh like you know create three buttons
97:43 - now you can either use the default
97:45 - buttons that Unity or text message Pro
97:47 - provides us with but here's what I would
97:50 - suggest is going for an image then
97:52 - adding a button component to it it makes
97:54 - it much more easier because uh if you if
97:57 - you go with a button component uh you I
98:00 - mean a predefined button by unity or
98:02 - text message Pro it's gonna take you a
98:04 - lot of time just to set the UI to it
98:06 - delete and that's a lot of hassle that
98:09 - we don't want to go right now into Okay
98:11 - so
98:13 - here's what we are going to do select
98:15 - the canvas right click go to UI add an
98:19 - image okay now I think the proper size
98:22 - of the image would be 200 by 200 so
98:25 - simply go to the this width and height
98:27 - option and change it to 200 by 21 okay
98:30 - and then add a button component okay see
98:33 - without the button component
98:35 - this uh like you know image will just be
98:38 - an image so we need this particular
98:40 - button component uh to be able to dis to
98:44 - be able to provide the button
98:45 - functionality to this particular image
98:47 - okay so once that is done you can change
98:50 - its name to some like you know maybe uh
98:54 - to one of your prefabs or you can say
98:56 - one of your Furnitures so I'm gonna name
98:59 - this one uh white sofa because that is
99:02 - one of the Furnitures and once you uh
99:05 - name this just save your C
99:07 - and then the next thing you have to do
99:09 - is you have to Anchor it okay you have
99:11 - to Anchor this particular image or you
99:13 - can say this button to the bottom left
99:16 - of your uh UI so again to do it simply
99:20 - press alt on your keyboard then indirect
99:23 - transform component you can see that
99:25 - this Center Middle option in here right
99:27 - so select that wrist alt and then simply
99:30 - select this bottom left option and you
99:33 - can see that this particular UI
99:35 - component got anchored at the bottom
99:38 - left of the UI now duplicate it
99:42 - now name it yellow I think it was
99:44 - something called yellow light brown so
99:46 - if I guess yeah it was light brown sofa
99:49 - that now what you have to do is you have
99:52 - to Anchor it to the center
99:54 - so again press alt on your keyboard
99:56 - select the same option then anchor it to
99:58 - the center okay now again duplicate it
100:01 - after duplicating it change its name to
100:04 - Brown sofa
100:05 - then select the anchor again press alt
100:09 - then put it like you know
100:11 - to the right side or you can say the
100:13 - bottom right of the UI candles
100:16 - the next thing you would want to do is
100:17 - select all these three and uh change its
100:21 - position y to maybe 200 uh is 200 too
100:24 - big maybe uh let's go for 150 yeah 150
100:27 - same reason reasonable and from there
100:30 - select the white sofa change its
100:33 - position X to 150 and select the Browns
100:36 - over and again change Brown surface
100:38 - position it's the minus one quickly okay
100:41 - so that way we got a pretty even uh user
100:44 - interface okay
100:46 - now the next thing you would want to do
100:49 - is to apply this price or you can say
100:52 - the button images to these special
100:54 - button okay so select the white Sosa now
100:58 - in here you should be able to find
100:59 - something called Source image now here's
101:03 - a little dot in here so select that dot
101:05 - and you should be able to find all the
101:07 - in like you know Sprite or images that
101:09 - are already available so I'm going to
101:11 - search for sofa right here and you can
101:14 - see that we got the option for three
101:16 - different so-calls now the first button
101:18 - would be for the white sofa so I'm going
101:20 - to select the white four
101:22 - the second one would be for the light
101:24 - brown sofa so I'm gonna
101:27 - you know check for the light brown sofa
101:29 - and then I'm gonna check for for the
101:32 - third one I'm gonna check for the simple
101:34 - Brown sofa and again it is already
101:36 - available on the top so I don't really
101:37 - have to search point
101:39 - add this way you set up your user
101:42 - interface properly okay now the next
101:45 - thing we have to do is
101:47 - the next thing we have to do is we have
101:48 - to write this to it okay now there are a
101:51 - few things that you have always have to
101:53 - keep in mind and before that
101:56 - we actually have to set up our steel
101:58 - okay we created the UI the next thing we
102:01 - have to do is we have to set up our C so
102:04 - delete the main camera because main
102:05 - camera is not for augmented reality
102:08 - you have to add like you know AR sound
102:10 - sorry AR session origin and AR session
102:13 - so simply right click in the hierarchy
102:15 - go to XR add an a session origin and
102:17 - then again add an AR session
102:20 - now drag and drop both of these to the
102:22 - top because this just a convention that
102:25 - I follow it like you know it makes
102:26 - things much more simpler simpler for me
102:28 - and much more organized Palm
102:30 - now once you have select this AR session
102:32 - origin we have to add two different
102:34 - components okay now both of these
102:37 - components are very necessary for like
102:39 - you know placing the objects into the
102:41 - real world
102:43 - so let's see how you can do the same so
102:47 - the very first thing you have to add is
102:48 - an array cast manager okay now array
102:51 - cast manager would be responsible for
102:53 - shooting the raycasts that would at the
102:55 - very end would help you place the
102:58 - objects at a particular position okay
103:01 - the next thing you have to add is an AR
103:03 - plane manager
103:05 - okay now the AR plane manager would be
103:07 - responsible for detecting your real
103:09 - ground right your real surface and then
103:13 - it would be responsible for generity
103:15 - artificial planes on top of it okay and
103:18 - also reset the Transformers area
103:19 - foundation that would be much better
103:22 - but yeah
103:23 - these are the responsibilities of AR
103:26 - Carson Azure and AR plane
103:28 - okay
103:29 - the next thing I would suggest is to
103:31 - create three different folders one for
103:33 - materials one for prefabs and one for
103:35 - scripts now of course I have my reason
103:37 - so we will get into that now create a
103:40 - folder for called materials okay
103:44 - create another folder called uh prefabs
103:49 - sorry I think I named it wrong yeah
103:52 - these ads then create another Fork
103:55 - uh scripts okay now scripts will be
103:58 - storing the script files the prefabs
104:00 - will be storing the prefabing files and
104:02 - the material for restoring the material
104:04 - sites okay now the next thing we want to
104:07 - do is we want to visualize the planes
104:10 - that are being generated okay so how can
104:13 - you do that it's again pretty simple
104:14 - just right click in the hierarchy go to
104:16 - Exotic add an AR default clip okay
104:19 - simply uh the next thing what you can do
104:21 - is you can assign a material to it it
104:23 - already has a material okay but I
104:26 - wouldn't really suggest you going for
104:27 - that material so go to your materials
104:29 - folder
104:30 - create a new material so I'm gonna
104:32 - create a new material I'm gonna call it
104:34 - cleaner okay now I want it to be
104:37 - transparent so in the in the materials
104:39 - I'm gonna go to rendering mode change
104:42 - its uh change it to transparent and then
104:45 - I'm gonna like you know
104:47 - convert its also value to full zero okay
104:51 - now the next thing I want to do is I am
104:53 - going to select this AR default name go
104:56 - to its material section simply drag and
104:58 - drop my material up in here
105:00 - and then if I go to presack I simply
105:04 - have to drag and drop this AR default
105:06 - plane into the prefabs folder and it
105:08 - will be converted into a preset okay
105:11 - now once that has been done go to your
105:13 - AR session origin and add this AR
105:16 - default link to this plane prefer a
105:19 - preference variable okay
105:22 - so this is it we actually properly set
105:24 - up our whole project so that it can
105:28 - support your foundation and we also set
105:30 - up our UI so what's next okay the next
105:34 - thing is we have to now learn to place
105:37 - the object right switch between those
105:39 - objects and we have to switch it in a
105:41 - way so that it doesn't really affect the
105:43 - placement of our objects okay because uh
105:46 - there is a technique to do that now what
105:49 - uh requirements am I saying this now if
105:53 - you like you know if you use this simple
105:55 - placement stuff that I taught you in the
105:57 - previous lecture video
105:59 - okay if you configure it to place a
106:01 - different object switch between uh like
106:04 - you know those furniture by click of a
106:05 - UI button there will still be a problem
106:07 - the problem is let's say when you are
106:09 - pressing any sort of button in the UI
106:12 - okay it's still gonna place it
106:15 - it's of course it's gonna change but
106:17 - it's still gonna place it when when you
106:19 - are pressing at that button now that is
106:22 - not a behavior we want the behavior we
106:25 - want is when we are pressing on the
106:27 - buttons it should only change these
106:29 - Furniture okay it shouldn't place at the
106:31 - moment we only want to place it when we
106:35 - uh like you know tap on a screen outside
106:37 - of these buttons so that's the
106:40 - functionality we are looking for okay
106:42 - now of course the script is totally same
106:45 - as it was for the previous lecture just
106:47 - with a few modifications and in the
106:49 - previous lecture I forgot uh to write a
106:52 - piece of code okay which is uh very
106:55 - necessary right of course it won't break
106:57 - the functionality within your
106:58 - application it won't crash your
107:01 - application but it's a better option to
107:04 - do it because without that it's gonna
107:06 - throw an exception so let's
107:09 - let's start writing our script okay so
107:12 - you have to create a script I'm gonna
107:14 - name it uh like you know let's say
107:16 - what's your name let's name it furniture
107:18 - place or manage okay so I'm going to
107:20 - name it furniture
107:23 - placement
107:26 - manager
107:27 - okay
107:32 - now simply open the script in your
107:34 - Visual Studio code and once you've
107:36 - opened it
107:37 - just remove the start and update method
107:39 - okay because believe me it just makes
107:42 - things much more uh like you know
107:44 - cluttering just a second it's uh so
107:46 - returning some errors for some reason so
107:48 - let me restart the editor once
107:51 - because sometimes it happens with Visual
107:53 - Studio code this doesn't really happens
107:55 - with visual studio all the time but it I
107:57 - have seen it happening with Visual
107:59 - Studio code all the way so yeah let's
108:01 - remove
108:02 - the start and update method
108:04 - the next thing you want to do is you
108:06 - want to define a few variables okay but
108:09 - before that you have to include a few
108:11 - namespaces now there are two very
108:13 - important namespaces because they give
108:16 - us the functionality they give us access
108:19 - to the apis
108:21 - foundation okay so you have to write
108:24 - these two lines that is using
108:26 - Unity engine
108:31 - dot x r dot AR foundation and also add a
108:35 - Unity engine
108:37 - dot exact dot AR subsystems okay
108:41 - so these are the two namespaces we are
108:43 - gonna require for now of course there
108:45 - are two more namespaces that we need to
108:48 - include but we will go like you know go
108:50 - into that later on in this video itself
108:53 - okay so you have to sing
108:56 - the functionality is the same that is we
108:58 - have to implement the touch
108:59 - functionality we have to shoot a recast
109:01 - to place the objects we also have to
109:03 - implement a a simple function to switch
109:07 - between uh like you know these
109:09 - furnitures
109:10 - apart from that there's another thing
109:13 - that is we have to make sure whenever we
109:15 - are pressing the UI button we don't
109:17 - place that object at that very moment
109:20 - okay so let's write the code for it so
109:24 - let's create the reference variables at
109:26 - first first of all I'm gonna create a
109:27 - reference variable which will be storing
109:29 - our default Furniture okay so I'm gonna
109:31 - call it public
109:33 - uh game object
109:35 - spawnable furniture
109:38 - okay the next thing we are going to do
109:40 - is we are going to Define a variable
109:42 - that will be referring by referencing
109:44 - the AR session origin and I'm gonna call
109:46 - it session i j again I'm going to do the
109:49 - same for the AR recast manager and I'm
109:51 - gonna call it raycast manager and then
109:54 - again the same for uh the plane manager
109:57 - vessel AR
109:59 - plane management when I'm gonna call it
110:02 - plane manager okay and I'm also going to
110:05 - create a private list of raycast hits
110:07 - right so whenever we are shooting any
110:10 - sort of recast into the real world it
110:13 - gets stored in this particular news
110:14 - because we will be accessing this
110:16 - cleanest to get the positional data so
110:20 - private
110:22 - list
110:23 - array cast hit
110:26 - I'm going to call it recast hits equals
110:28 - new Nest requested and voila we actually
110:33 - uh initialized all the particular
110:36 - variables that we are gonna need okay so
110:38 - save the script to go to your Unity
110:39 - engine
110:40 - and let it load
110:43 - now make sure to attach the script to
110:45 - your AR session origin
110:47 - now simply drag and drop the components
110:50 - in me here that is my session noise and
110:52 - then the recast manager and then the
110:54 - plane manager and select the default
110:56 - furniture and you can like you know
110:58 - select this particular dot option in
111:00 - here go to the assets and select the
111:02 - default formation you want to have now I
111:04 - want to have the white sofa as the
111:06 - default Furniture okay so as select like
111:09 - you know set the respawnable for nature
111:12 - to the white sofa now once these are
111:14 - done
111:15 - we have to write uh the functionality so
111:19 - that we are able to place the object
111:21 - into the real okay so I'm gonna explain
111:23 - the logic very briefly so keep your ears
111:27 - open and try to understand it properly
111:29 - so write this update method
111:32 - the very first thing you have to check
111:35 - for and this is what I missed in the
111:37 - previous lecture okay you have to check
111:39 - for if there are any touch on the screen
111:42 - okay then only you have to look for
111:44 - where if the like you know if the person
111:46 - has touched on it or not okay
111:49 - so first of all you have to look for if
111:52 - there are any sort of touch that has
111:55 - happened or is is happening within your
111:57 - particular application so to do that you
112:00 - have to write this if condition if input
112:03 - Dot
112:04 - uh touch count
112:05 - is greater than zero okay and if there
112:08 - are one or more touches what we want to
112:11 - do is we wanna uh start that is we want
112:14 - to check if the touch has happened or
112:16 - not okay so if input dot get touch
112:21 - zero sorry uh you have to put 0 as a
112:24 - parameter because we wanna get the very
112:26 - first touch and then touch dot CS equals
112:30 - equals touch face dot began okay so that
112:33 - way whenever you tap on the screen this
112:36 - particular function is being called okay
112:37 - now inside this function we have to
112:40 - shoot a raycast
112:41 - so raycast manager
112:44 - daughter a cast
112:47 - now inside this you have to provide them
112:50 - like you know touch position now in the
112:52 - previous lecture I showed you that you
112:54 - can use the input.mouse function but in
112:57 - this I'm also going to show you the
112:59 - other way around that is
113:01 - input.getouch.position okay now there
113:03 - are not many difference in it the only
113:05 - difference is that the input dot mouth
113:08 - position Works universally that is it
113:10 - will work for Windows uh MacBooks or any
113:13 - sort of platform right uh where the
113:16 - touch is happening but this
113:18 - input.getouch.position only happens
113:21 - on your Android or iOS device that has a
113:24 - touchscreen okay so let's do it so input
113:27 - dot get touch
113:30 - zero dot position
113:33 - the next thing you have to do is you
113:35 - have to pass the recast hits and then
113:37 - you have to set the trackable type
113:39 - to plane width polygon okay
113:42 - now once it shows the raycast and the
113:44 - raycast has hit that particular ground
113:47 - it's going to return return us uh
113:50 - Boolean value okay that is either it has
113:53 - hit that particular generated plane or
113:56 - not so we are gonna write a Boolean
113:58 - Collision variable okay to detect if the
114:00 - Collision has happened
114:01 - and if the Collision has happened what
114:04 - we generally want to do is
114:06 - we wanna place that object to the
114:09 - position and the like you know to the
114:11 - position of the raycast and uh to the
114:14 - position a rotation of that request okay
114:16 - so it's Collision
114:19 - has happened
114:20 - what we want to do is we want to
114:22 - instantiate the game of the quest so I'm
114:23 - gonna name it object equals
114:26 - instantiate
114:29 - spawnables furniture
114:32 - then I'm gonna set the transform I mean
114:35 - the position of this particular object
114:37 - to the position of the recast head so
114:40 - object.transform dot position equals
114:45 - uh what was it point
114:47 - the cast hits
114:49 - 0 dot pose
114:51 - dot position okay now I'm gonna do the
114:54 - same but for this time for the rotation
114:57 - okay
114:59 - so I'm gonna simply name the position to
115:02 - rotation do the same for the this
115:04 - particular object now once that has been
115:07 - done
115:08 - this will actually help us place the
115:10 - object onto the real world okay apart
115:13 - from this there's another thing that we
115:15 - have to do is whenever we have placed
115:17 - our first object we want to disable the
115:19 - planes right we don't wanna because if
115:22 - the planes are still visible even after
115:24 - placing that object it's going to make
115:26 - the experience very much unrealistic and
115:29 - we don't want unrealism if we are going
115:31 - to build a very immersive uh augmented
115:34 - reality application
115:36 - so to do that
115:37 - you have to Loop through though the
115:40 - place that has been generated so for
115:41 - each
115:43 - where planes
115:46 - in planemanager dot trackables now these
115:50 - trackables actually store all the planes
115:53 - that has been generated so you have to
115:55 - do it like this names Dot Game object
116:00 - dot set active
116:03 - solves okay that way you can set all the
116:07 - game all the plays that has been
116:09 - generated to false and the last thing
116:11 - you have to do is you have to disable
116:12 - the plane manager so that no more
116:15 - artificial planes are generated
116:17 - foreign
116:20 - false now you can save your script okay
116:23 - you can simply save your script and load
116:25 - it in unity but there are a few more
116:28 - things that you have to do okay
116:30 - the first thing you have to do is you
116:31 - have to be able to switch between these
116:34 - Furnitures okay so open your script
116:36 - again
116:37 - see this function is pretty simple it's
116:39 - just a one-liner code you have to create
116:41 - a public function that is public
116:44 - void
116:46 - switch Furniture let's call it to its
116:48 - furniture for now okay then you have to
116:50 - pass a game object as a parameter I'm
116:52 - going to call it for your niche
116:55 - now you can simply what you can do is
116:58 - you can reference respawnable furniture
116:59 - that is uh
117:02 - conversation and set it to the furniture
117:04 - of available as a parameter okay now
117:07 - save it go to your Unity engine
117:11 - now select the UI buttons that you have
117:15 - add an action event action to this on
117:18 - click function drag and drop your AR
117:20 - session origin go to this particular
117:22 - function uh select the furniture
117:25 - placement manager and then click on
117:26 - switch formation okay then select the
117:29 - white sofa go to this white dot and
117:31 - sealing the white silver prefab now do
117:34 - the same for the light brown one too
117:40 - then again the same for the brown soup
117:44 - now once these are done you should be
117:47 - able to successfully switch between
117:48 - those objects okay but this is still a
117:51 - problem okay now see this script is
117:54 - enough for you to be able to place uh
117:56 - like you know data planes then Place uh
117:58 - these Furnitures over to your place but
118:01 - right now the problem that persist is
118:03 - even if you click like while you are
118:05 - clicking on the UI
118:07 - let's say if I am clicking on the UI
118:09 - right now the object will be placed at
118:10 - that moment now this is not something we
118:12 - want there's a very unexpected behavior
118:14 - and a very bad uh Behavior also we don't
118:18 - want that kind of behavior and
118:19 - application you have to create a very
118:21 - simple Boolean function that would check
118:24 - if your own button has been placed or
118:25 - not okay and if your button has been
118:27 - pressed I mean if your button is being
118:30 - pressed you don't want to place at that
118:33 - moment if your button is not being
118:35 - pressed then only you wanna place it
118:37 - okay
118:38 - so you have to write this particular
118:40 - function public move is the return type
118:42 - of that function because we will be
118:44 - returning a Boolean type that is either
118:46 - it would either be of false or either be
118:48 - a true
118:49 - and then you have to name that function
118:52 - I'm going to call it is button rest
118:55 - now before writing the code inside it
118:58 - okay you have to add
119:00 - two more names faces one is for uh the
119:03 - you accessing the UI button that is
119:05 - using Unity engine
119:07 - dot UI
119:09 - then also add an event system per unit
119:12 - because that's how we will be accessing
119:14 - the button so Unity engine
119:18 - dot I think it was called event sisters
119:20 - yeah
119:21 - this is it
119:23 - now once you have added these two
119:25 - namespaces right here let's code this
119:27 - particular function okay
119:29 - so if
119:33 - even system
119:38 - dot current
119:41 - dot uh
119:42 - current selected uh game object
119:45 - now we are going to put this question
119:46 - mark in here now this question mark
119:48 - isn't is more of a short form for
119:50 - knowledge check okay then we have to get
119:53 - the component now I feel like if you
119:55 - don't want to use this question mark you
119:57 - can also use another option called try
119:59 - get component but fauna as I have used
120:01 - already use this question mark I'm gonna
120:04 - use uh the get component in here okay so
120:08 - get component
120:10 - now inside this we have to get the
120:11 - button component because that's uh
120:14 - that's the UI components we will be
120:16 - pressing on okay
120:17 - then I'm gonna check if it has null okay
120:20 - now if the button is null we want to
120:24 - return false
120:25 - that is if we haven't pressed on the
120:27 - button we want to return false and if we
120:30 - have pressed on it then we are gonna
120:32 - return true okay as simple as that
120:38 - now the next thing you have to do is you
120:40 - have to go to this if condition where
120:42 - the Collision is being checked you have
120:44 - to add this and operator and then
120:47 - you have to check if the like you know
120:50 - button press is false or not so is
120:52 - button pressed
120:55 - equals equals false
120:57 - so that way we have completed our script
121:00 - and this script is actually gonna help
121:02 - us to place the object properly without
121:05 - the UI interfering us anymore okay the
121:10 - next thing you have to do is you have to
121:11 - click on sign click on build settings
121:13 - then if you already haven't added the
121:16 - sample scene you have to add that
121:18 - particular scene you are working on
121:19 - then you have to click on build
121:22 - and make you know you can name anything
121:24 - your build now the better way this is uh
121:27 - I like you know I make use of this
121:30 - particular method I create a new folder
121:32 - okay I create a new folder called uh
121:35 - bills
121:37 - now this builds folder contains all the
121:39 - bits that I need okay that way it's uh
121:42 - like I am able to keep track of all the
121:44 - bits that I have built in the previous
121:46 - uh like you know implementations that
121:49 - way I can test for the bugs and all of
121:51 - that so it's a pretty handful method
121:54 - so yeah that's about it this will build
121:56 - the application and after it builds I
121:58 - will try it on and put a like you know
122:01 - attach a video of the demo to uh
122:05 - to to the end of this video so that's it
122:07 - for this lecture thank you

Cleaned transcript:

augmented reality is growing in popularity and in this course you will learn how to develop AR apps by building practical projects the course consists of four different augmented reality projects which are built on top of unity engine and AR Foundation the projects will help you explore various Fields such as engineering education ecommerce and creativity priyanshu developed this course he has a lot of experience developing AR apps and he's created other popular courses on the topic and this free course we are gonna explore the possibilities of Augmented Reality by building such captivating and practical augmented reality experiences we will start with Planet CR in which we will be exploring planet Earth and other different planet States than ever before we'll be exploring it so that's not all we will also delve deeper into the world of creativity by building an application that would actually help you plant different different kinds of plants and into your room if we talk about the fourth project that we are going to build we are going to explore the possibilities of ecommerce with that application we're gonna create an interior design application that would actually help us put different different Interiors different different sofas chairs onto our room I am priyashi cofounder and CTO fantern and I bring you the three comprehensive augmented reality course that is going to teach you to develop augmented right experiences with the AR foundation and unity engine so without any further Ado let's move forward and learn how to build such captivating and amazing augmented yet experiences hey everyone welcome to this lecture and in this lecture we are actually going to build our very first augmented reality project with ar core and AR Foundation from the very scratch I'm going to teach you how you can set up the project how you can uh build the AR Foundation app to your devices right so without any further Ado let's move forward and let's learn what to do next okay the very first thing you have to do is you have to open your Unity up and you have to create a new project now if you don't have any Unity version installed you can simply go to installs option click on install editor choose the editor of your choice now in this course I am going to use Twitter what you want so you can simply click on install then select the Android build support because we are actually going to bend for Android and also select the iOS bit support and then you can simply click on continue accept the terms and condition and simply click on it okay that's gonna take a bit of time it's gonna of course it's gonna take a lot of Internet like around four or five GBS maybe so it's gonna download the package it's gonna install so given the time it needs okay and once the project I mean the unity editor has been installed what you can do is you can simply go to the project section now what you have to do is you have to create a new project now it is very simple to create a new project what you have to do is you have to click on this new project button and once you have create like you know clicked on that particular button you will be able to find this option called editor version now you you can choose any editor you want for this course I'm going to use 2021.3.50 F1 you can also go with any other version such as new to 2019 or 2020 but I would suggest you to like you know keep up with this video that is used 2021 version of unity now once we've selected the unity editor you will be seeing there are multiple options for templates right there's 2D there's 3D there's 3D mobile 2D urp then sample urp I think there's hdrp also then there's like you know a lot of examples that Unity has already coded for us that Unity has already given us but for now for this video we are gonna wait uh gonna go with a blank project and we are going to select 3D core because we want to have the 3D functionalities now if you want to build any sort of like you know 2D game or anything you can simply select the 2D code option but for this video I'm gonna go with 3D code as we are gonna need the 3D version of that once you have selected that 3D core option what you have to do is you have to change the project now you can change the project name to anything I'm Gonna Keep It planets AR you can also keep it anything you want and you can also change the location of the project if you want okay and that simply click on create project that's gonna start the process and it's gonna create a project for you okay now once the project has been created you will see this editor now this editor is called Unity editor now within this editor now what what we have to do is we have to set up the project okay we have to set up this single territor so that it is able to build for Android devices and it should be able to support augmented reality okay now just clear out our head now okay just clear out your head and listen to now the very first process that you want to go through is switching your platform and setting up the project the reason is you can see you can set up the project later on also after importing the assets doing everything but the reason why you should set up your project at the very first because let's say I have added multiple Assets in the project folder okay so what's gonna happen is let's say I remove the graph Graphics API I switch my build platform the switching part the setting apart it's gonna take a much longer time okay and definitely we don't have that much time to wait for it to build and switch the project and all the process it needs to be done so that's why that's why you should always set up your project at the very first then only import the required assets so let's move forward the very first thing you have to do is you have to click on file go to build settings now in the build settings you'll be able to find multiple options in here like there's Windows Mac Linux dedicated server Android iOS PS4 PS5 now now I want to build for Android devices only so I'm going to select Android but you can also build for iOS devices if you want now there's one thing that you have to keep in mind okay the code base will be very much similar because we are going to use AR Foundation now AR Foundation makes it easier for the developers to build for both IOS and Android how it provides two plugins called AR plugin and AR code XR plugin now AR kit is supported on iOS devices and AR core exam plugin is supported on Android devices so if you want to build for iOS you can simply install AR it and if you want to build for Android you can simply install AR code exampler okay that's it nothing much nothing too complicated but again like you know if you want to use AR core on iOS devices that's also possible you just have to install the application from the App Store I think it's called as Google services for AR code or I maybe it's called AR code I'm not really short but there's a plugin for that so you can you can simply install that uh within your iOS device and simply like you know work with it build the applications in there and again if you do this want to do the same for Android that is built for AR code then make sure your Android device supports the airport okay there are uh there's a whole list or where you can find if your device supports VR code or not and if it does what you can do is you can go to Play Store and search for Google services for here okay the link will be down below in the description you can simply begin to search for that app or you can go through the link that will be given in the description and simply install that particular because without that uh the AR code apps won't work on your Android device so I hope that's that's clear to you so let's move forward now you have to select this Android option and click on switch platform now it's gonna take a few minutes or few seconds depending on your system to phrase the platform so given the time it needs bye now once it has switched its platform to Android the next thing you want to do is we want to set up the project so that we don't have to like you know go through the whole painful builtin process again and it shouldn't take much time for you okay we want to make sure that now once you like you know once you have switched the platform you at the very like you know bottom left you'll be able to find this player setting so click on the player settings from there the very first thing you want to change is the company name you can of course you can keep it uh as a disk but I would suggest to change the name right keep it anything you want so for now I want to keep it coded reality because that's the name of my channel and then there's uh I I'm just going to keep the product name as planets here because that's the most suitable way okay now if you want to set uh any icon for the application you can totally do that from here now I uh in the assets folder I already have a icon so I'm gonna I'm gonna show you how you can do that now after that uh in the resolution in presentation you would want to uh go to this default orientation option and make sure to uh select the portrait option in here because we don't want the landscape left or landslip right or any other option there we just want it to be in portrait mode of course if you want you can also keep it uh in landscape mode but again you have to design the UI that for now I'm gonna show you how you can do the scene but for portrait now once uh the orientation has been selected the next thing you can do is you can simply go to other settings now from there make sure you uncheck this autographics API now the reason why we are unchecking this Auto Graphics API because by default our Unity project something called uh cut date something called Volcan right now is another Graphics API just like open GLE but the problem is AR code doesn't really support worker so if your project already has Balkan and if you haven't removed it AR code after building right AR code is gonna give you a lot of letters and your build won't complete so we don't want the World Cup Graphics API so I'm just going to select the welcome from here and click on this minus now that's going to remove the working API from our project and once that has been removed you can simply go to multithreader rendering and make sure to uncheck this multithreaded rendering then I didn't go below and you'll be able to find this option called Minima API level now make sure to set to Android 7.0 because AR code requires a minimum bid level of Android 7.0 if you go below that maybe 6.05.1 and maybe below that the problem is that it won't build it's going to give you error so you have to keep either Android 7.0 as the menu APN level or maybe above you can also keep 8.07.1 8.19 10 anything you want okay but just not below Android 7.7 now work that has been done you have to change your scripting back into IL to CPP the reason is AR code doesn't really support 32bit architecture anymore so you need to build it for uh like you know 64bit architecture now to do that you you have to set your scripting back into i2cp because if you if we check out mono you won't be able to find this arm 64 option now to get this on 64 option you have to shift to Il to CPT and make sure to check this arm 64 option from there and once that has been done we are actually done for now with the player settings we still have a few more settings to go through but that will only be enabled when AR foundation and er Port has been installed so to do that simply close these window go to window go to package manager then again from the drop down select Unity registry now from there what you can do is give it the time to load it might take a bit of time depending on your internet now it loaded uh very fast on my in my case uh now once the package has been loaded what you can do is you can search for ER okay now once you search for AR you'll be able to find this AR Foundation AR code and arcade exam plugin now these are the three packages we need to focus on if you are building for iOS I would highly suggest to go with AR kit because uh I wouldn't suggest to go with ar code is best with Android so keep it for Android only and if you want to build for iOS then go with AR kit don't worry apart from the building process everything is similar you don't have to make any changes to your code you don't have to make any changes to your project setup just whenever you are building you have to set the project settings according to iOS okay now for this course I'm gonna use Android so I'm gonna simply install the AR codex but before that you have to install this AR foundation 4.2.7 so just select this version and click click on install give it the time it teach for the installation now once that would be done we'll also be installing AR code example now AR code is necessary to build AR experiences for Android me now as you can see AR Foundation has been installed the next thing you have to do is you have to click on the exam plugin and then click on install now once both of these has been installed what you can do is simply close this window again click on file build settings click on player settings and then go to this particular option exam plugin manager okay now in here you will be able to find multiple options that is AR code Oculus and Immunity mock hmd now Oculus and unity mock hmd is not something we want to mess with as of now we wanna uh do everything with this AR core option okay now this ER core option is very important you must check it out the reason is you can see in here you you are able to see a text called initialize its are on start now that means whenever your you start your application it's going to initialize the particular plugin you have checked it so for me I have just checked AR code so it's going to initialize the AR code plugin at the beginning of the starting of the application okay so it is mandatory for you to check the AR core option if you don't do it then ER or won't be initialized at a start at the very start and you will be you won't be able to use AR code within your application so make sure to check this option out and once it has been checked you can simply close this window and now we have got our project set up very well okay now the next thing what you have to do is you have to delete the main camera okay once you have delete the main camera you have to right click in the hierarchy click on XR add an ER session widget then again add an AR session now ER session origin would be responsible for handling the camera the plane tracking the image tracking the recasting and all every and all the other things that are necessary for performing augmented reality and the ER session will be controlling the whole life cycle of unity and your AR application so both of these components are mandatory and you can see inside they are session audit we also have an AR camera which will be uh capturing all the real world scenario and will be like and this whole AR section origin will be helping you to place the object into the real okay now here you can see we have set up our project properly we have set it up properly and now what we have to do is we have to import the assets okay but before that let me change the name of the scene okay so I'm Gonna Keep It uh planets let's follow it or maybe or maybe let's uh call it home swing because we want a whole speed which will help us to navigate between different different uh like you know planets that we have in here now we are going to call this home screen and another one you have to create another C we are going to call that CNS Arc okay or let's do one thing as we have already set it set this scene up for uh augmented reality let's call this scene as uh planet okay let's create another C that will be having the default main camera and we are going to call it home screen now the uh the reason I removed this main camera the reason I removed this main camera is because it renders the virtual scene okay it actually renders this particular scene so that's why I removed it the AR camera would actually be rendering the rear mode so that's why you have to add the AR camera if you want to perform augmentation but as this is the home screen it doesn't needs any sort of augmentation that's why we want to use the main camera as the default camera okay now once both of the scenes are created we want to import the asset okay and we simply wanna import the Assets Now I already have if you if you see here I already have a folder created in where I am having all the unity assets stored now this is the planet's AR assets that we want to import it's again fairly simple right click in the project setting click on import click on custom package I simply import this planet CR Assets Now again you can do the same by simply dragging and dropping uh all the Assets in here so both of the way works choose the one you are comfortable now once you have like you know dragged and drop the or maybe imported the package within your Unity screen you will be able to find this particular window now you you have to Simply click on the import import option that we all the textures all the files that are included in the package will be imported in your project file so give it the time it needs yeah now here you can see that we imported our project now inside the asset folder you will be able to find textures then there's Planet textures that will be containing all the like you know textures for the planets then there's UI texture that will be used for our user interface uh here you can also see that we got a logo now we will be using this logo also that I also have a model for the Saturn so we will be using all these uh in our project to get everything set it up okay so once the assets have been imported the next thing you want to do is let's create the UI okay let's create the user interface first then we are going to move on to the then we are actually going to move on to our augmented realityc okay so now once the home screen has been created simply double click on it to open it then what you have to do is you have to right click in the hierarchy click on the UI add a canvas okay now the canvas is actually going to help us to create UI for this whole scenario and go to your game window and make sure to change it to uh some portrait okay now I actually already have some preloaded templates from wyson now if you want you can also do the same for yourself you can like simply click if you if I show you click on this uh option right and you'll be able to find this plus sign if you click on this plus sign you can name the device you can add its width and height okay that way you will be able to get the proper mode or the proper device you want to use now for me I'm gonna use this OnePlus not C to light for myself you can use any other UI you want if you are let me select something in between Maybe yeah redmi note 9 seems much better so I'm gonna go with redmi Note 9. now here you can see that it's a blank canvas okay and inside the canvas we don't really have any and also also this is a really good feature that we have in unity if you click on this 2D option you will be going on to the 2D mode and once you go on to a 2d mode you can double click on this canvas object and you can zoom out like you can bring the canvas to your phone this is a very useful feature that I think you should know about you can simply click on the canvas option then in the at the inspector you'll be able to find this canvas Scalia okay now in the canvas query you will be able to find this UI scale mode make sure to change it it is actually by default set it up with the constant pixel size we definitely don't want that to make the UI responsive we want kill with spaces okay so make sure this uh to select the scale with screen size option and once you have select that in the canvas we want a background okay we want a background so that not everything this this whole like you know weird looking background isn't visible so the very better the the better way to do is right click in the canvas you can either like you know go to UI add a panel in here right or you can what you can do is you can simply add an image okay we can also add an image like go to UI add an image in here and then change the name of your image to background now once you have selected the image in you can you might find this option called direct transform in the inspector if you select the image right and in there you will be able to find a small box right so click on that box press alt in your keyboard if you are a Windows and press option on your map so once you click the alt button on option button on your device you can simply like you know at the very bottom right you will be able to find the stretch options simply click on that stretch option and you can build and you will be able to see that it has failed the whole image in there okay it is filled the whole background so we want to keep it to white as of now and if we go to our assets and go to the textures option and click on UI textures you'll be able to find this diagram okay now what you can do is now basically the the assets are already set to texture type to like you know Sprite today and even but let's say if you import some other like you know import some external image by yourself you will be able to see that it will be set to this default option okay now if it is set set to default just change it to Sprite 2D anyway because that's the option we are gonna need now once you have selected the background make sure to drag and drop this background image from the UI texture in here you can see that we got a pretty neat and clean background uh for our UI now once you have selected this particular background you can add another image let's click on UI let's add an image now this is going to be our headache okay that is it is going to contain that I tell for us so I'm simply gonna drag and drop this home header and click on set native size and now reduce the size Mill 0.5 yeah 0.5 seems much better and to Anchor this right without anchary this uh like you know this planet's AR logo won't really be responsive so you have to Anchor it to that to answer it simply click on the heading press alt in your keyboard open this option anchor presets option in here just simply press on the top that way you will be able to set the like you know this particular anchor to the very now let's say if we change the resolution or maybe change the UI you can see that it is adapting to the particular interface okay and that's what we want now once you have added this particular heading we are also have to add a few buttons to navigate between the planets right now again it's pretty simple uh first of all I would like you to let you know create a empty container that way it would be much better for us to like you know handle all the uis I mean the UI buttons let's name it uh button button Handler now what you can do is you can simply like you know click on this button Handler again press alt in your keyboard and make sure to stretch it out to the very top and you can like you know reduce or maybe change the top value by something 250 maybe yeah change it by uh change the Top Value to 250 now what you can do is you can keep on adding the buttons in here okay and uh let's do it let's add this button Handler let's click on this button Handler add a UI let's add an image in here let's anchor this image to the top and let's reposition this image maybe let's let's change the weight and height to maybe 200. that was seen much better yeah totally much better and let's make it to 200 okay and minus 100 now this looks diff uh this definitely looks much better and let's still change the image size name to baby or okay now let's actually let's try minus 200 yeah this looks much better let's duplicate the button and put it uh to maybe the site right let's put it to the side like this and change it to minus 200 and again minus 200 that way we got two different buttons for our planets okay now you can change it to maybe Mars right uh similarly you can uh set the C do the same thing for other buttons right so for now I'm just gonna keep these two buttons what you can do is you can replicate uh much more buttons in here like I already have options for Jupiter Saturn Uranus Venus and other planets too so you can definitely do that for now let's keep these two buttons only and the next thing you have to do is you have to select the Earth button drag and drop this Earth texture in here and again select the mask button and drag and drop the masks option in here now definitely it seems like the spacing is too much let's increase the weight to mainly 400 um how about 350 yeah 350 seems much much better and the next thing you can do is as these are images right these doesn't have the capability of button now what you can do is Select both the images click on ADD component and add a button component into onto these images right now if you click on these uh images the buttons like these will these images will be clickable okay so you can click on these images and set any functionality you want for now now once we got the Earth and Mars Butters of it out we have to create a new UI okay so not UI exactly but a new C so I'm going to call this uh Planet seal to earth now once I've opened this Earth C what I can do is I can create a new spear okay that's gonna Conte the Earth planet so I'm going to reset its transform set the Z value to 5 or maybe how about two two seems much better I mean let's keep it to four four would be much like four would look much better the next thing you want to do is rename the spear to R and then create a new material okay so I'm gonna create a new folder called material now I'm gonna create a material called Earth so and then simply drag and drop this Earth material on top of that Earth object now if you change the color you you will be able to see that the object is also changing the color according to the material so that means our material has been applied properly once the material has been applied what you can do is you can simply search for the Earth texture texture now we already have this 2K Earth Day map I'm gonna select that and you can see that we actually got the Earth texture in here now it might seem that like you know it's a bit too flashy uh you can definitely skim through the shaders that we have you can search for uh like you can simply click on this drop down option search for unlit and you can set it to texture that we will be getting this option but it definitely looks much more dull uh let's go for legacy shaders let's try let's start diffuse yeah this one looks much better but I think uh the standard one look was looking better so let's hear the standard standard one only but if you want to reduce the smoothness you can definitely do that let's take two maybe point four yeah point four seems much better and now you can see that we got our Earth properly set it up now what you can do is we want this Earth to rotate right because of course Earth does rotate so you we have to write a new script okay that script would actually be helping us to rotate the Earth now again it's pretty simple so create a new folder called scripts folder now inside the script folder what we want to do is we want to write a script that should actually rotate the art on its axis so I'm going to create a new script let's name it rotation controller okay so let me edit the time to compile and once it has compiled just open the script in your IDE now I'm gonna I'm using visual studio you can use Visual Studio code Sublime Text on any ID you are comfortable with now once the script has been opened we want to create a public variation called public uh public game object or object right let's call it or maybe plan it off that would be much of a universal need let's call it Planet object now once you have created this particular variation you also have to create another video byte other Vector 3 variable to be honest okay so let's create a vector 3 variable public website three and then name it rotation Vector because that would actually be helping us to control in which axis we want to rotate our Arc okay so rotation vector now within the update function what you want to do is you want to reference like take a reference to the planet object okay and pass the rotation Vector uh within this particular parameter as a parameter to the rotate function and then multiply it with time dot there okay that's going to give us a much more realistic rotation bag now if we compile the script and add this script to the particular Earth and drag and drop the Earth object as a planet object and uh let's see let's play it okay now right now you can see the Earth is not moving so if you increase the value of this one right it will be how about 10 yeah 10 looks much better so now what I can do is I can replace the value to 10 and now if I play it you can see that we are the planet is actually moving right uh the plant is actually rotating now next well you can like you know replicate the scene maybe duplicate the scene Again by con you can like select the simple C press Ctrl D that's simply gonna duplicate the scene and rename it to Mars okay open that mask and rename the object to maybe Mars and then what you can do is you can click either create a new material or again uh like you know duplicate this material change the name to bars and then select the mask texture and simply drag and drop this texture in here now if we see replay it you can see the mass is also rotating properly right now what's next okay what's next if we open this particular scene if we go to the home screen and if we press on this particular button we must be able to like you know switch between seeds right if you press on R then we should open the Earth scene if we press on Mark then we should open the Marcy definitely right but it's not doing it right so what should we do now to perform that we actually have to create a new script that would actually help us to switch between C okay so again it's pretty simple create a new script and call it scene controller okay now this scene controller will actually be having a method to switch between the seats so open this particular scene controller now you have to add a using a direct app so using Unity engine Dot scene manage okay once you've added that simply click you know create a new function public void switch scenes and make sure it takes a parameter or a string parameter and let's name it seed name once you have created the parameter the next thing what you have to do is you have to uh and give a second click manager you have to reference the scene manager and click on load C right that is load the load scene method and within that you have to pass the shield okay that way will be will actually be able to switch between multiple scenes that we have so next what you want to do is you can simply drag and drop this script to anywhere you want let's attach this scene controller to the canvas that we have or maybe let's not add it to the canvas let's add it to the button handle okay and the next thing what you can do is you can simply click on Earth and Mars add the particular uh like you know go to this on click option click on ADD option and then simply drag and drop this button and Handler in here then click on this no function click on scene controller and make sure to switch to this switch scenes option now you can keep the name of your scene download and if I still lived in Mars I'm going to change it to boss okay now if we let's say if we try to like you know switch between the scenes you can see that it is giving us internet Earth and Mars is not loaded that it couldn't be loaded so what you can do is you can simply click on file build setting click on ADD open scenes just gonna add the home screen in here then go to your series option at the bars and Earth okay now if you like you know play this option you can simply click on R and you can see that it has loaded the over C but again there are no options for going back right we also have to add the option to go back to the home screen again you have to do the things the same way it's pretty simple okay it's not too hard so click on right click on the hierarchy create a new canvas change its UI scale mode to scale with screen size uh then what you can do is you can simply add an image now this image would be acting as a button right so I'm going to add the back texture in here so you guys see I added the back button texture I'm gonna click on set native size and reduce the size to maybe 0.2 let's see how does it do not point to decently not pointing maybe 0.5 so Pi 0.5 would be two big list go for points F1 phone seems much better and then click on the select transform fill in the anchor preset press alt on your keyboard and Anchor It To The Top okay that way you'll be getting this particular button and you can be how about we keep it 160 and minus 100b so that way we got the button in here now again what you can do is you can simply add a button component you can add the particular script in here that is history uh scene controller script to the canvas click on this click add an option to the on click function drag and drop this canvas in here then click on scene controller click on switch scenes and give the name of your scene where you want to switch now again what you can do is you can simply copy this too right make sure to copy the canvas and the event system without the event system your clicks won't be registered now you can go to the mass scene add these two in here and just check if everything's fine so you can see that everything is loaded as it as it should be now if you play this you can see that we are able to navigate back and forth between the seats now this is it for this lecture okay we actually needed a fully functional ER application and I'll be adding a small demo to this application at the very end of the video okay so make sure to watch that demo also and the task for this okay the task for this lecture would be to add a few more planets up in the list and also you can add an information panel that would actually be so showing the information about these plan properly okay so these are the tasks these are the modifications that you can do to this project and to build this project what you can do is you can simply click on file click on build settings make sure all the scenes are added up in here and then click on build give the name to your application I'm gonna click uh name it build and also also before building a forward to showing if you click on player settings you can actually set your icon now I already have a icon for this so I'm gonna click on this select option go and look out for the icon it should be somewhere here I guess I named it logo so here you can see that we got the planet CR logo now if you build the application you should be able when you like after building the application if you install the application on your device you will be able to see the application with this particular Loop so I'm simply gonna name this application and build and I'm simply gonna save the build okay so it's gonna take a few minutes to build the application for you so yeah this is it for this lecture and make sure you try to add a lot more features to this application believe me it's gonna be fun hey everyone welcome to this lecture and in this lecture I'm going to teach you how you can build an augmented realitybased simulation of a jet turbine sounds amazing right so so let's get started why wait for the very first three you have to do is to set up this project now to set up this project you have to like you know create a project first so to do that what you can do is you can open your Unity Hub click on this new project option choose the unity editor version you want to now for this course for this lecture I'm going to use 2021 you can also go for any other version like I have to give it to 2020.3.4 tf1 also so you can go for any other version you want but I would suggest to like you know keep up with 2021 as it has the latest version latest stable version that we have right now and uh so yeah let's move forward now once you have selected your editor version right the next thing you got to do is you have to select the template now of course there are multiplicity of places 2D template 3D template 2D urp 3D mobile then 3D urp 3D sample c new RPM like you know many other templates uh that you can down but for this now we want to start with a black 3D template so we are going to select the second option that is 3D code now once you have selected that particular option you have to name your product now what should you name you can name anything right I can I can name it jet turbine simulation right I can I can name it this way then if you want to change the location of your project you can totally do that you just have to select this location option click on it once and then what you can do is you can simply select the folder you wanna create the project and once all these things have been done you can simply create project now if you don't have any Unity editors what you can do is you can simply go to install click on install editor select the unity version so this is the latest version that is out there that is 2080 1.3.17 F1 what you can do is you can simply click on install Ed the Android build support because if you want to build for Android you are going to delete it and if you want to bid for iOS you can select that and then click on continue uh agree the license and then click on next okay and then it would start downloading and installing the editor and all the packages that is necessary for building for Android and iOS device and then you can again like you know create the project give it a few minutes to like you know create the project and then we can get started now once you have created the project this particular editor window will be opening up right this is the unity editor window and in here we have to the very first thing we have to do is we have to set up this project so that we can build for Android and it should also support augmented reality now you already know for all these four projects that we are going to develop we are going to use uh something called AR foundation and we are so AR Foundation is a pool of like a universal package in where you can add the ER kit and AR code plugin that would actually help you uh build crossplatform AR applications so now before setting up all of that okay what you have to do is you have to click on file click on build settings and then switch to the Android minute if you are building for Android or if you are building for iOS you can simply switch to the ions okay but for now we want to keep it to Android only so what we are going to do is we are gonna select the Android build and then click on switch platform now this is a small tip that I always follow basically what happens now if if there are already assets available within your editor window that is within your project itself it's going to take a lot more time to set up this whole project okay because it's gonna convert all the materials all the assets to the like you know related versions and to avoid that kind of like you know time what we want to do is we want to switch to the platform setup everything at the very first before importing all the assets that we have okay so that's what I do always and believe me that saves me a lot of so I would recommend you guys to do that now once you once your platform has been switched the next thing you can do is you can simply click on player settings now from player settings you can change the company name I'm Gonna Change it to coded reality okay because that is my channel snake then you can change the product name to maybe jet turbine and then if you if you have any sort of icons for your application you can like you know add the icon to the folder and then select it in here that way you can also like you know add a logo for your application and once all these have been done you have to go to your resolution and presentation now we want this app to be in landscape mode okay so for that what we are going to do is we are gonna uh go to this default orientation and I wanna check out landscape left okay once you have selected landscape left what you have to do is you have to click on and get other settings make sure to uncheck this Auto Graphics API because we want to remove this Balkan API from here okay because uh ER Port doesn't really support Vulcan so we have to remove that orderly or else you will be like you know getting errors while building the application so we are simply going to remove that Vulcan API once that has visible what you can do is you can turn off this multi 3D rendering as we are not gonna need it and then go directly below to this minimum API level and set it to Android 7.0 because that is the minimum API level that ER core actually supports uh if you if you are choosing any version below that you are gonna face in so make sure to uh like you know keep it 7.0 or above seven points okay and then we're gonna have to shift our scripting back into IL to CPP okay now once we shift the scripting back into iot CPP you can check this arm 64. the reason we are doing this is the AR code doesn't really supports 32bit architecture it only supports uh 64bit architecture so you have to shift towards 64 architecture and with mono that's not really possible like if you check more load you won't be able to uh you won't be having this option for arm 64. so to get that arm 64 option you have to switch towards IL to CPP and uh here's another I'll to CPP builds are much more optimized and much more faster in terms of loading I like the CPP builds are much more faster and much better and much optimized than mono built so whenever like you know you are deploying your app to production make sure to do it in il to CPP scripting back okay and once you are done with this the next thing you have to do is you have to install the plugin you have to install the AR Foundation plugin and also you have to install the AR code example and if you are on iOS then you have to install AR kit plug and also here's another thing AR core is also supported on iOS devices okay so if you wanna like you know stay up with ar core only what you can do is you can simply like you know install AR code plugin and also uh install the AR code from uh Apple's App Store okay that way you'll be able to run ER code on iOS devices also but I think it's much better to like you know use ER Kit only because arkit has much more functionality to be honest like body tracking that uh AR code doesn't have why Always if you if you are on iOS right always try to use AR kit as much as possible rather than using Yahoo and if you are using Android then definitely your code is the V2 now to set up this project for augmented reality you have to click on window then click on package manager from there uh you'll be able to find this particular drop down right and the talk so you have to click on that drop down and select with unity registry so give it the time to load right and once it loads the packages you will be able to find a lot of options in here you know like it's confusing I understand that but to sort everything out just search for AR right with ar you are going to find a lot of different packages now for this tutorial we're gonna need a and if you are choosing to install AR kit plugin also there won't be much difference in building like you know setting up the project the Kodi part but yeah the uh the building part will be different the deploying part will be different for AR kit so I'm gonna stick with ar code and AR Foundation I'm gonna click on AR Foundation the version I'm gonna use is 4.2.7 as this is a stable version and simply gonna click install give it the time to install the packages give it the time to install the air Foundation packages and once it is done what you can do is you can also install the AR code XR plug now as you can see we already installed the AR Foundation package the next thing we have to install is AR code example so I'm going to Simply install it add do you know the benefit of using AR Foundation AR Foundation helps us to like include both AR core and AR kit plugin so with a single code base you can build for both the platforms it brings a more crossplatform functionality for AR so I really like using AR foundation and AR tool other than using any other SDK that is out now once I have installed both the packages right you have to go to your player settings again and make sure that AR core gets initialized uh whenever it is built first so what you have to do is you have to click on player settings then simply go to EXA plugin management and make sure to check this plugin provide okay if you if you don't check this AR core uh like you know AR code option in the plugin providers the AR core part won't be initialized when you start the application which is definitely not the thing we want we want uh AR code to initialized whenever the app is started app has been started so we want to check this particular option and then what you can do is you can rename your scene I'm gonna rename my screen to Jet byte okay and once I renew the seat you can see that we we got the c d m as jet turbine at the very top and also before setting up the scene I just want to make sure that all the settings in the player settings are totally fine so let me go through that once uh yeah we got the graphics EPA sorted we got a multithreaded rendering sorted out we've also got the minimum API level sorted out we got the scripting back end and the arm 64 option sorted up now there's one more thing if you want to uncheck this on V7 option the 32bit option you can do that let me keep it for now but if you want you can also unchain that and uh yeah everything seems fine and in the exam plugin management also we got the AR code plugin provider check uh so we got everything set up uh like for our project so that it supports AR now so that our scene also supports here we have to delete the main cap because this camera is the virtual camera and it only records the C only give this game view right we want the real world so that we want the AR app to access our camera and then like you know place the objects there so to do that AR Foundation has something called uh AR session origin so what you can do is you can simply right click in the hierarchy click on XR add an AR session origin and then again click on Exon add an ER session now definitely you already know what the serious session object does it basically handles uh all the like you know camera and all the plane management and everything that is out there all the functionalities and this AR session actually handles the whole life cycle of augmented reality and unity so it is mandatory to have both of these components in here now once you have these components what you have to do is just create a few folders the first folder I want to create is called the script folder okay because that is this particular folder is very necessary other than that we want to create a prefabs folder in case we need it and then we also want to create a materials for okay in case reading now I already have packaged the assets for you guys okay it's already packaged in a Unity package so what you have to do is you have SIM you simply have to download that package from the link given below and once you download that particular package you have to import it the process is very simple once you download it you can see that I have this folder called Unity Assets Now what I'm gonna do is I'm gonna either I can simply drag and drop this folder in here right or I can do I can simply click on import package select the custom package go to the location of the folder and simply open it that way you can see that we got a lot of options in here you don't have to like you know get confused between these options what you just have to do is you have to click on you okay once these packages packages are important he will see an assets folder now within that asset folder there is an audio file another one is this jet engine folder which contains the prefab for the jet engine now what you have to do is you have to Simply drag and drop this jet engine in this particular hierarchy and you will be able to see that this particular J engine has been positioned correctly now this is the preferred position this is the position I tested out this application with so that's why I've kept this position if you want to change it like if you want to move it a bit more forward what you can do is you can simply uh you know use this anchor to move this thing uh much more far further from the camera for now I would just want to keep it to 2 as it is much more of a preference and then I have made the rotation to 90 okay you can also keep it that way but I would suggest to keep it true 90 or maybe uh one eight okay if you want to see the front view of uh front view directly from the cap but for now I just want to keep it to nine that way I'll be able to get the product okay and now here you can see that we got our like you know project attempt we got the check turbine India what about the functionalities we need to code something we just don't want to augment this it's pretty simple we just don't want to augment this thing what do we want to do is just a secondary just a second here you can see that this ER session origin is at the top right so we don't want it at the two top we want it at the center so what you can do is you can simply click on this transform like click on this particular session go to the inspector and in this transform you will be able to find this three dots click on that acceptably reset the drop now I will be able to see the object and the game object in here let our bind in okay let's talk about the functionality now within this app we want some Intel activity or is this app will be boring right this is more of an educational application which is going to teach people about a jet turbine so how should we do this now the basic mechanism that I'm going to teach you today is to like you know you can disable the some part of this particular model like let's say if I wanna see the internal parts of this particular like you know this jet turbine what I can do is I can simply disable this Hull to see what is exactly inside this particular jet turbine and if I want I can also enable it okay that way we'll be able to get a much more broader view much better view of this particular uh Jet top okay so to do that it's it's actually pretty simple okay but before getting to that mechanism I want this particular like you know jet turbine that is this particular what is that oh rotor or blades I want this blades to rotate okay so to do that I'm just going to write a very simple script okay so I'm gonna what you have to do is go to the script folder right click click on Create and create a new C sharp you can call this script as uh rotation controller you can name it anything I'm just gonna name it rotation controller as it sounds much better now let the script compile and once the script has been compiled just open it within your Visual Studio or any other editor that you are using I am using visual studio for now so I'm simply going to use that one so give it the tag okay now here you can see that we got the start and update method so let's remove all of these okay we are going to need the update method but before that let's create a variable now we are going to create a public vector3 variable now you will see why I'm why I am exactly creating a vector 3 video pretty soon so given the type okay once you have created this particular Vector 3 variable you have to go to the update method then what you have to do is you have to write transform to rotate to rotate and inside that you'll have to pass this rotation vector and then multiply it with time dot Delta okay so that way you'll be able to rotate your rotational Motors okay that is these bleeds so let's give it the time to load yeah so as you can see once we got this particular script loaded up compiled what you can do is you can search for the turbine and then that is this you know bleed let me show you it should rotate you know something like this so to do that what you're going to do is you can simply like you know first of all select the turbine option once I have selected that just simply add this rotation script in there and that maybe change the Y value let's say uh in which axis is it rotating so it is rotating in the y axis 1 gonna simply change it to maybe a hundred okay and once I have changed the value to 100 you can uh I cannot check if it is rotating by playing the scene so let's see as you can see that yeah we are able to rotate the particular jet turbine in a certain direction okay so our jitterbahn is rotating it seems more realistic now let's add the other functionality that is enabling and disabling the objects in here okay and before we do that we are going to create a simple UI so what you have to do is you have to again go to the hierarchy right click up in there uh go to the UI option then search for this canvas okay now canvas would actually help us to create the UI now I'm gonna shift to a much better landscape view I'm going to use this particular one plus not C to light uh device resolution this is the device that I am using for testing so I'm going to use this resolution for now if you want you can also like you know try to find some resolution of the devices that you want to add and simply click on this add option give give its name and then with that height that way you will be able to create all these options that I have created for myself so let's revert that and here you can see that we got the canvas option now in here you'll be able to find something called uh canvas scalar from there you'll be able to find this UI scale mode make sure to change it to uh scale with screen size once you have changed it this would actually help you to read the UI much more responsive now once you have changed the canvascaler option create a button okay so I'm gonna create a button text mesh Pro now if you are creating a text message Pro button it should prompt uh a tmb importer simply click on import TMP Essentials give it the time to load once that particular thing has been loaded just edit the button once right just uh see if you can like resize it a bit just for uh you know make it to look much more paid up much more you know better so I'm just gonna do it this way yeah this one looks much better let me Center it right so I did Center it now what I'm gonna do is I'm gonna maybe reduce the scale a bit maybe um Point size yeah 0.5 looks much better so let's change it to okay let's change it to point a yeah uh this is much more visible he appoints it much is much more visible and then what you have to do simply click on this uh transform option from there press alt in your key okay if you are on a Windows PC press alt and if you are on a Mac I think option is for an alternative for at all so you have to click on option and then you have to select this particular option so that it anchors to the bottom all right okay now once it has been anchored what you can do is you can maybe like increase the position of it maybe let's see yeah this looks much much more cleaner and let's name this button as Hall okay uh let's copy the name and again do the C add this same for the text and make it a bit bold yeah this now this particular button looks much more clean right doesn't it it definitely looks much more cleaner if you want you can also create a much like you know much better button through figma or maybe some other UI designing I'm gonna use the default one that unit is providing now I'm going to duplicate that particular button right and let's uh let's see what else do we have we have we have the tubes okay we definitely want to disable and enable the cube so I'm gonna give it two okay so we got the tubes in here now again go change the text of it to cubes and then here's a pretty neat trick that I really like just uh add this to maybe one to eighty maybe 100 and then it this this value actually depends on the UI so I'm gonna add it as 110 now I'm again gonna duplicate it right let's uh see what else could we add um we had something called grid yeah we got the grid now I'm also gonna change the name to create then again minus 110 and then again change the text to grid yeah so once every is an uh text to grid I also add another button for the Piston so I'm gonna simply duplicate it name this button paste turns uh copy this again go to the text change the text to past tense then select the button again uh add 110 there and you can see that we got all the buttons positioned properly okay now if we let's say change the UI to something else you can see that uh it is pretty much responsive and it is you know working flawlessly as it should now once these buttons are added okay what you have to do is you have to like make sure that once you click this button it should disable add enable the objects that we have to do that we have to create a script so right click in the project folder that is the scripts then click on Create and create a new script let's call it mesh okay this second mesh problems once you have created the scriptlet compile okay so the script is compiled I have opened it the very first thing you have to do is you have to create a variable called uh game object and name it you know naming a variable is really hard for me it takes a lot of time okay let's name it turbine object okay and once you have like you know added this particular variable the next thing you have to do is you have to create a Boolean back okay let's keep it private for now so private uh Boolean and let's name it is active now of course at the very first of the start of the application all of the objects will be active so we want to set it to true and within the like you know within this particular script you also want to create another function that is that will actually help us like if we call that function it is going to help us to disable and enable the object so to do that I'm going to create a public void that is public function public void Let's uh call it uh toggle now once you write this function what you have to do is you have to check if the phone if the like you know mesh is active or not now we want to check this through this is active Boolean so if is active what you want to do is you want to set the turbine object to false so turbine object dot set active to solve and also change the value of is active Okay that way uh we will make sure that uh like you know we are getting the exact value or able to switch on and off the uh the objects now you have to add an else block now within that is block you have to you know again do the same but in this block you have to turn the object active right that is you have to make sure that objects are true they are the objects are actually on so yeah this says that this this is the whole script this is this new text is actually going to help us toggle between the objects so once you have saved the script simply low let's load it now as you can see that we got the script loaded up now the next thing you have to do is you have to select the objects you wanna you know disable and enable so I'm gonna select the hull then I'm gonna select the tubes then the Piston then the grids okay now I'm simply gonna I'm simply gonna drag and drop this mesh toggle option in here then in the Highlander simply going to drag and drop this file object then in the tubes I'm gonna like add this tubes then in the Pistons I'm gonna set this this object to piston then in the grid I'm gonna do the same for the okay once you have done all of that select the buttons uh go down below to the on click make sure to click on ADD and first of all try adding one okay change uh the next thing you have to do is you have to select the first button uh you can see right once the hull object has been selected if you click on the no function drop down you'll be able to see something called this mesh toggle okay this is the name of our script and if okay if your or if your method right if you are this particular function is public you should be able to see that function in here so I have this toggle function I'm simply going to click on the stable function and let's try this particular you know option up right let's see if it is enabling or disable information so if you click the button you can see that it is enabling and disabling the mesh now the next thing you want to do is we want to do this all of the same thing that we have done till now for the other buttons also so I'm going to select the tube then search for the tubes option drag and drop it in here select the mesh Toggler select toggle then again same for Z I'm gonna search for the grid option in here install your token and again same for the pistol so as you can see now if we play it you can see we can enable the hull we can enable and disable the tube we can enable or disable the grids we can also enable and disable the Pistons we have okay so this is it for this now now of course after you have built this whole application you want to test it out right so how to do that again it's pretty simple you have to click on file click on build setting now you can see that we have the scene active we have the jet turbine scene active now there are two ways to add a scene one you can do is you can simply drag and drop this scene in here and the way is that you can click on ADD openc now this is gonna add the active scene in here that is the scene that is opened up within your editor so it right now I have the jet turbine scene open so it has added the objective and seen in here and once you have added the C you you can either click build and run now the build and run option will only work if your phone has developer options turned on and also it is connected to your device another one would be uh the build option okay you can simply click on build name the application anything fun for the name it jet turbine and then click on save that way your application will start building and you can test your application the way you want okay another thing you have to keep in mind is that if you want to test your application make sure uh the Google services for AR is installed within your applic within your phone you can simply search it on the Play Store and also make sure your device is supported okay that is it supports AR because a lot of the device does not support VR also if if your device does not support your code that that means you won't be able to run this application so make sure to check that out and once you have done all that your build application you have you can simply install it and test the application out by yourself now at the end of this video I'm gonna add a clip that will actually show you the demo of the particular application okay so in this lecture we are actually going to build an augmented reality application that would actually help us plant multiple different plants on our surrounding area all right and to do that we are going to use some specific features such as raycast and uh AR plane managers so without any further Ado Let's uh move forward and to get started with the project I want you guys to create a new project with unity engine I'm using the same version that I was using in the previous project so I would suggest you to go with that same version so right now what we have to do is we have to integrate their foundation and AR code package and I already know you guys already know it but let me show you how you can do that again so first of all you had to go to the package manager then you have to uh like from the package you have to select this Unity registry once you've selected that you have to search for AR Foundation and then simply uh install this AR Foundation version and the version I'm using at 4.2.7 okay so now that we have installed the AR Foundation plugin what we have to do is we have to also install the AR code plug then simply going to search for the AR code plugin in here and simply install it so now that you have installed the arcoexal plugin what you have to do is you have to set up your project so that you are able to build it for your Android devices so go to file click on build settings which are platform to Android now once you've switched your platform to Android you have to go to player settings and from resolution and presentation I would want you guys to change your default orientation to Portrait you can also keep it to auto rotation if you feel so but after that you have to remove this check mark from autographics API and remove the Vulcan API as it is not supported by our code we also have to turn off multi threadrant rendering and also change the minimum API level to Android 7 4.0 once you have done that you have to change the scripting back into i2cpp so that it supports 64 architecture because AR core doesn't really builds for a 32bit architecture and it may cause you a lot of error and once you have changed your scripting backends what you have to do is you have to put away the plugin management and make sure to enable AR code plugin provider once you have done all of these delete the main camera from your scene then click on exact add an air session origin and then again add and AR session now once both of these are added select the IR session origin add two components arraycast manager and then The Ark in manager now the AR recast manager would actually help us throw raise uh two different different uh like the planes that would be generated in real time and the AR plane manager would actually help us to generate those planes those artificial planes on top of the ground okay by detecting the graph so now let's uh now all there is setups are done right now the next thing what we have to do is we have to import the Assets Now I already have the assets written so I'm simply going to click on import package custom package then select this garden plants asset and simply import it thank you now once the assets have been imported what you have to do is you have to create a few more folder one would be for the scripts now I'm going to create another folder for a material okay so I'm going to show you what exactly I'm creating that folder for and what we have to do in there so once the materials uh just again so once the material folder is created create a new material called uh clean material okay so I'm gonna call it plain transparent mat okay and do one thing once you've selected This Plane material go to rendering mode and change it to transparent and once you have done that go to the Albedo section from there you have this Alpha Channel decrease it down to zero that way you will have a fully transparent material on your hand and once those things have been done also you can try like you know reducing the smoothness and once all of these are done what you can do is you can simply go to the hierarchy right click in here select inksar and then add an AR default layer now make sure to prefab this AR default pin but before that what I'm gonna do is I'm gonna simply select this materials option in here and drag and drop this material options into the element 0. I mean the plane material into the elements once that has been done you have to create another folder called prefabs and then you have to drag and drop this AR default plane and delete it from the hierarchy and then select the ER session origin again and simply drag and drop this clean prefab this AR default plane into the plane prefab holder that is available in the play and match now the reason I did this because you will be able to visualize the planes that are being generated okay so the place would be transparent with a black border you can totally see that in the demo at the very end of the video so whenever whenever you will be trying to scan your ground multiple different planes will be generated and those planes will have this transpend material okay that will actually help you to visualize that yeah there are planes that are being generated and that's where if you shoot the recast it should disable the plane and also place the plants okay and we are going to implement that mechanism right now now let me like make you go through the prefab once that contains all the plant model so if you go to assets you will find this folder called models from there there this folder got plans and in here you'll be able to find this prefab now I think there are in total 12 uh plants that are totally available yeah there are total 12 plants that are available now the next thing you have to do is you have to write the script so that it can hold those plants and randomly Place those plants onto the floor so what I'm going to do is I'm gonna go to a scripts folder create a new script and let's call it plant placement manager once the script is straightened give it some time to compile once the script has compiled what you can do is you can simply open the script in your editor now I'm using visual studio code for this you can use Visual Studio ID too and any other ID that supports unit Engine Okay so let's understand what do we have to do in the script before that let's understand what exactly are we gonna Implement now the basic implementation would be after the ground planes are detected right after the grounds are detected and the planes are placed in there whenever I tap on the screen it should place uh the plants in that particular position okay now of course to make this happen there are multiple components we have to work with we have to work with the recast manager we have to work with the plane manager and we also have to work with the session origin and along with that we also have to store all the hits right whenever you tap on the spleet it should be like it would be registered as a hit so whenever the hit happens it should store those uh like positions in there okay so let's uh implement this whole script so the very first thing is we have to create a placeholder that would actually held all those uh particular plant models and yes so to do that you have to write a public variable uh and you have to give it the data type of game object now it should be an added because we want to store multiple objects and I'm gonna call this variable as flowers okay because it will be story all the flowers that are in there now save this and then go to a unit engine add this particular script to your AR session origin and make sure to add all the plants that are already available okay so I'm gonna go to the prefab and the easiest way to do is to little drag and drop whole like you know plant objects directly in that particular uh array so before doing that what I'm going to do is in the inspector menu at the right of it you will be able to see this lock option so just click on it now if you select any of these models or you can say prefab it won't really change the inspector Mini and what you can do is you can select all of these models right here and once you've selected those you can directly drag and drop it inside this particular script and you can see we got all the 12 elements so you can say 12 plants directly inside this particular placeholder that we created as an array now what you're going to do is you can again unlock all of these so that you don't have uh you know it doesn't get stuck to that property now once you have done that go back to the script again now once you've opened the script you have to reference the plane manager that we have in here okay we have to reference the plane manager we have to reference the recast manager and also the AR session voyage so to do that what you have to do is you have to write three more public variables that would contain public AR session origin okay also I forgot before this you have to include two different namespaces because uh it contains all the necessary functions for air Foundation to be able to script okay so to do that you can simply write using Unity engine dot AR Foundation just a second AR foundation and then you also have to add more ring unit engine dot exact dot AR subsystem okay so they uh these two files that is these two namespaces contains all the important uh functionalities that we need here Foundation to provide us okay so for example this we have to create a new variable and we have to call it AR session origin okay and we have to limit session origin now this AR session origin component is a part of this AR Foundation names okay similarly you have to create another variable and we have to call it AR recast manager and I'm gonna name this variable as recast manager and I'm gonna create another script called ER plane manager because we will be doing a few like you know tasks with the planes that's why we are gonna need the AR plan manager okay so I'm gonna name it plain manager once these variables are set up to what you can do is you can simply go to your unit engine and then from there drag and drop the AR session origin Windows component again drag and drop the array cast manager add also the clean manager okay once these managers have been added in here the next thing you have to do is you have to write an uh you actually have to create a list that would contain all the head positions right all the raycast it's that have been done now I will tell you what exactly is the significance of that but for now let's play in that particular list so you have to make it private private list it should be of type AR recast hit it and then also name it I'm gonna name it recast hits and then I'm gonna create a new object of it so new list array casted and we have created or you can say initialized our list in this particular scenario in this particular script now we also have to write an update condition okay or you can say update group in which we have to check for if the person has tapped on the screen or not okay so to do that what you have to do is you have to write this update function in here once this update function is in place you have to check if the person has touched the screen or not so to check that what you can do is you have to write this if condition if input dot get touched okay and then you have to uh set the parameter of the touch index to 0 and then face equals equals touch phase dot bigger okay this means that if you have touched the screen or not okay and if you have touched the speed the next thing we want to do is we want to shoot a request okay we gonna shoot array cast and once the request has been shot we want to place the objects right random we want to randomly place the objects randomly and then at the variant what we want to do is we wanna uh disable the plane manager and also we wanna remove all the planes or you can say disable on the planes that have been generated okay so that the planes don't really become a blockage to our views so we wanna what we want to do is we wanna disable the planes and the plane manager and the reason why we want to disable the plane manager is because we want we don't want the planes to be generated uh generated all over again okay once they have been designed so that's why now let's get to the first part we want to shoot the request right so what we have to do is you we have to uh like you know reference the recast manager so what I'm gonna do is I'm going to reference the request manager as request manager then I'm gonna click on like you know put the dot and ask for the recast function inside that raycast function you have to pass this input dot mouse position okay now Mouse position in your Android device would actually result in the position of your screen where you have touched right if I am touching at a certain position of your of my screen it will return that particular position within this particular function okay and once the mouth position administrative actually uh I did something wrong in here okay I what I did was I gave this parenthesis India and then a zero in it you don't have to do that okay and once this input Mouse position input.mouth position is there the next thing what you have to do is you have to pass the recast hits uh list that we just created okay now actually the raycast hit contains all the position of the like you know raycast that has been shot so we need this weight cast list and we want to store all the like whenever we are touching right yeah whenever our touch has happened it is shooting a recast so we need to store that recast into a certain uh variable or you can say into a certain list right because we want to access that recast hit because it will be giving us the position and whenever we touch right at wherever position we are touching we want the plant to be placed in that position so recast hit is actually gonna return us those position okay so we are gonna need the recast hits and then what we have to do is here to set the trackable type group plane with uh polygons within more molecule okay and once this has been done terminate the statement with an semicolon now this is going to return a Boolean value okay this is actually going to return us a Boolean value now as this function as this stripped or you can say statement we wrote is going to return a symbolian value what we have to do is we have to store it in a variable Boolean variable so I'm going to call it a collision variable right so whenever this particular Collision Boolean is true what we want to do is we want to place those objects if we want to place those objects on our ground if Collision name object I'm going to call this as object you can also call it as a flower I am going to instantiate that particular out okay instantiate flowers now take the index of the flowers and now what we want to do is we want to generate a random number from 0 to the like you know n minus 1 that is the length minus 1 so that we are able to get all the flowers from that scenario so random dot range 0 comma flowers dot length minus 1. so that way we'll be able to get all the flowers randomly and we'll be able to instantiate them and once these flowers like you know have been instantiated what we want to do is we want to set their position to where we have actually tapped so to do that object dot transform dot position equals raycast hits zero Dot uh pause dot position okay so this is why we are actually why we have actually created that list called recast head because it actually stores the position of the raycast that has been shot onto the ground and that is how we are actually going to place those objects so I hope this particular topic about uh recast hits is pretty much clear now the next thing we want to do is now basically we uh the script that we created this would be enough for this experience to work but the problem with that will will be is that we are generating those planes right so it has some material so it will be visible on top of the ground and we don't really want that because that will be a visual blockage and won't really be looking good at all right so to do that you have to like you know Loop through that whole uh planes and disable them one by one so we are going to write a for each Loop so inside that forage Loop we are going to reference all the planes that are being created so to do that where plane in plane manager dot trackables okay and once uh you have got those claims what you have to do is you have to disable them one by one so I'm gonna call play Dot Game object dot set active I set it to false so whenever the like how much like whatever number of planes that have been generated they get disabled as soon as I touch the particular screen okay and then what we want to do is after the plays have been disabled we wanna disable the plane match of clean manager dot enabled equals Fox so that way uh after like you know after you've disabled the planes we are disabling the plane manager because we don't want any more planes to visit okay and now that we are done with the script what you can do is you can simply save this particular script and go to a Unity engine editor and just make sure you have added all the flowers and also all the like you know components that were there that is the managers you have added all the managers once you have done all of that what you can do is you can simply uh you know change your scene name to main you can also call it app or anything you want and then go to file build settings click on ADD open scenes or you can simply drag and drop the scene in here then go to player settings and change the product name to anything you want now I'm going to name it garden flowers you can change it to anything you like right and once that has been done you can simply click on build and start building the application right there okay and I'm also going to attach a demo of this whole project at the very end so that you are able to see what we have built during this project and if you have any doubt make sure to join our Discord server or you can uh like you know email me you can go through my LinkedIn and ask me there also you can ask it on my Instagram okay and so I hope that you have enjoyed this particular project I will see you in the next part thank you hey everyone welcome to this lecture in this lecture I am going to teach you about building and furniturebased Tryon application so in this application the base idea is that you will be able to place multiple different Furnitures at your room with the help of again AR foundation and AR code and apart from that we will also be able to switch between those Furnitures with the help of three different buttons that we will be designing in this project video now the challenge in this video is uh what happens generally whenever you are like you know let's say we ignore the very basic things right just with the simple placement stuff so what basically is going to happen if you uh like you know touch on the UI buttons it it is going to react with the touchscreen all right by that what I mean is let's say you are trying to like you know Place some object you have placed it and then you are trying to switch switch into some other Furniture also right so once you are tapping that button even while tapping that button it is going to place that furniture in there which is a big Challenge and I'm going to show you how to solve that problem easily in this particular lecture and of course there are a lot of things that we are going to learn and I hope that it clarifies all the doubts you have till now with uh like you know plane managers they cast and all of those stuff right uh so without any further Ado let's move forward and set up the project Source the very first thing you have to do is you have to go to file then build settings then switch it to Android now this is the usual settings that we do before uh building or you can say uh start coding our project so you have to again do that uh whole process again I'm gonna show it to you again so that won't be a problem now once your build platform has been switched to Android the next thing you have to do is you have to install the AR foundation and the AR code XR plugin so to do that just go to Windows uh then package manager go to your Unity registry now it will take a few seconds to fetch the recent packages right uh so give it the time it needs and once it does that what you have to do is search for AR Foundation now install that particular plugin and once AR Foundation has been installed you have to install something called AR codex now let's say if you also want to build for uh like you know iOS devices then along with the AR core plugin you also have to install AR kit plugin right other than that uh there's the only difference is that you have to set up the build settings uh for iOS separately that's that's it there are no more like you don't have to put any more changes uh within your project so once AR Foundation has been installed you have to install AR code XR plugin so search for it simply install it that's it now once both of these plugins are installed the next thing you have to do is you have to go to edit then I think it was Project settings yeah you have to go to the project settings then you have to go to this uh player setting whereability yeah here it is so you have to go to this player settings now the more easier way would be if you if you go to file then build settings then directly so like you know click on this player setting either way you will be getting to the same settings as required now once you are into the player setting way what you have to do is you have to go to resolution and presentation and change the default orientation to Portrait because this is not an landscape orientation application so we need a portrait uh apart from that you have to go to other settings uh uncheck this Auto Graphics API because as of now uh welcome is not really supported but uh recently uh at Google I O Google announced that in the future versions of AR code will be supporting one but the current version we are using doesn't really support uh well you can graphic save me so simply just removed now apart from that we got multithreader rendering uncheck it we don't need it then from there you have to go to this minimum API level uh change it to Android 7.0 that is API level 24 because that's the bare minimum uh Android version AR code requires to run apart from that we got the scripting backend you have to change it to file to CPP because currently it is set up in mono and once you have done that you have to go to this arm 64 and make sure to check it right make sure it is enabled because arm 64 helps you get the 64bit architecture support now from there uh yeah almost every settings is settings are configured the next thing you have to do is you have to go to exact plugin management and make sure to turn on AR code plugin provider and that's it your project that is build settings is set up properly now what you have to do is you have to add the current scene to your build setting so I'm simply gonna click on ADD open scenes so that way we set up our whole build process now let's import the assets right let's design the UI first then we will get into the coding part so again I have packaged the assets into a small Unity package called Sony ER dot Unity package now all these assets are already available in the LMS so you to download these assets you have to go to the LMS and get these assets for yourself now just simply drag and drop this Sony share asset or you can say Unity package into your project folder and simply click on import the next thing you have to do is just simply go to the assets folder you will be finding two more different phones one is for the UI it contains three different UI buttons and then we have the Furnitures which actually contain uh the models that we have now if you like you know see on your right side you should be able to see this small window for visualizing the precepts now in most of the cases it might happen that you might not find this window that's because uh sometimes it's minimized so you have to go at the bottom and you can see that there's this two very small lines you have to drag it to the top and you will be able to visualize uh your furniture mod okay similarly I got another one that is this light brown one and then again there's another one called this white show for now this white sofa looks much better than the other three of course but uh yeah this is how you can visualize these sofas and you can also drag and drop it to the scene if you want okay now let's delete it for now because we are not gonna need it as of now the next thing we have to do is we have to create the user interface okay now the base idea behind the user interface would be uh to switch between these models right to switch between these three models now let's create the UI first the very first thing you have to do that I would suggest right this is what I actually do is I dock my game window window to the right side okay then from there you can see there's this drop down call three aspect right now we don't really need this free aspect what we want is we want to use our template now if you haven't really added a template uh like you know a custom template to your game window you can either use one of the already provided templates but I have added a few of these in my Unity project so I'm going to use that shifted to one of my templates and once the template is open there's another thing you should do is uh in the scene window you should be able to find this 2D mode okay so simply switch uh to the 2D mode because that won't be any helpful while designing the user interfaces or doing anything in 2D okay so once these are done the next thing you have to do is you have to create a canvas now simply right click in the hierarchy go to UI and then create a canvas component or you can say canvas gain object now once you've created a canvas there are two things okay one is this canvas now this canvas is responsible for uh like you know setting up the UI and doing all the stuff regarding the UI but this event system is a very important part the reason why it is very important the event system actually handles all the events that is happening within your user interface right for example the tap of a button if this event system is not available what is gonna happen is you will not be able to interact with the user interface at all so it is very important to have the event system if you want to interact with the UI within your uh like you know Unity project but apart from that that's it and now if we take a look at the canvas we got this something called canvas scalar now in here you should be able to find something called UI scale mode this is a very important thing okay because constant constant pixel size is like you know doesn't really make your UI response so you have to change it to scale with screen size which is gonna help you like you know create a more responsive user interface for your application once you've switched your like you know UI scan mode to scale with screen size the next thing you actually have to do is uh like you know create three buttons now you can either use the default buttons that Unity or text message Pro provides us with but here's what I would suggest is going for an image then adding a button component to it it makes it much more easier because uh if you if you go with a button component uh you I mean a predefined button by unity or text message Pro it's gonna take you a lot of time just to set the UI to it delete and that's a lot of hassle that we don't want to go right now into Okay so here's what we are going to do select the canvas right click go to UI add an image okay now I think the proper size of the image would be 200 by 200 so simply go to the this width and height option and change it to 200 by 21 okay and then add a button component okay see without the button component this uh like you know image will just be an image so we need this particular button component uh to be able to dis to be able to provide the button functionality to this particular image okay so once that is done you can change its name to some like you know maybe uh to one of your prefabs or you can say one of your Furnitures so I'm gonna name this one uh white sofa because that is one of the Furnitures and once you uh name this just save your C and then the next thing you have to do is you have to Anchor it okay you have to Anchor this particular image or you can say this button to the bottom left of your uh UI so again to do it simply press alt on your keyboard then indirect transform component you can see that this Center Middle option in here right so select that wrist alt and then simply select this bottom left option and you can see that this particular UI component got anchored at the bottom left of the UI now duplicate it now name it yellow I think it was something called yellow light brown so if I guess yeah it was light brown sofa that now what you have to do is you have to Anchor it to the center so again press alt on your keyboard select the same option then anchor it to the center okay now again duplicate it after duplicating it change its name to Brown sofa then select the anchor again press alt then put it like you know to the right side or you can say the bottom right of the UI candles the next thing you would want to do is select all these three and uh change its position y to maybe 200 uh is 200 too big maybe uh let's go for 150 yeah 150 same reason reasonable and from there select the white sofa change its position X to 150 and select the Browns over and again change Brown surface position it's the minus one quickly okay so that way we got a pretty even uh user interface okay now the next thing you would want to do is to apply this price or you can say the button images to these special button okay so select the white Sosa now in here you should be able to find something called Source image now here's a little dot in here so select that dot and you should be able to find all the in like you know Sprite or images that are already available so I'm going to search for sofa right here and you can see that we got the option for three different socalls now the first button would be for the white sofa so I'm going to select the white four the second one would be for the light brown sofa so I'm gonna you know check for the light brown sofa and then I'm gonna check for for the third one I'm gonna check for the simple Brown sofa and again it is already available on the top so I don't really have to search point add this way you set up your user interface properly okay now the next thing we have to do is the next thing we have to do is we have to write this to it okay now there are a few things that you have always have to keep in mind and before that we actually have to set up our steel okay we created the UI the next thing we have to do is we have to set up our C so delete the main camera because main camera is not for augmented reality you have to add like you know AR sound sorry AR session origin and AR session so simply right click in the hierarchy go to XR add an a session origin and then again add an AR session now drag and drop both of these to the top because this just a convention that I follow it like you know it makes things much more simpler simpler for me and much more organized Palm now once you have select this AR session origin we have to add two different components okay now both of these components are very necessary for like you know placing the objects into the real world so let's see how you can do the same so the very first thing you have to add is an array cast manager okay now array cast manager would be responsible for shooting the raycasts that would at the very end would help you place the objects at a particular position okay the next thing you have to add is an AR plane manager okay now the AR plane manager would be responsible for detecting your real ground right your real surface and then it would be responsible for generity artificial planes on top of it okay and also reset the Transformers area foundation that would be much better but yeah these are the responsibilities of AR Carson Azure and AR plane okay the next thing I would suggest is to create three different folders one for materials one for prefabs and one for scripts now of course I have my reason so we will get into that now create a folder for called materials okay create another folder called uh prefabs sorry I think I named it wrong yeah these ads then create another Fork uh scripts okay now scripts will be storing the script files the prefabs will be storing the prefabing files and the material for restoring the material sites okay now the next thing we want to do is we want to visualize the planes that are being generated okay so how can you do that it's again pretty simple just right click in the hierarchy go to Exotic add an AR default clip okay simply uh the next thing what you can do is you can assign a material to it it already has a material okay but I wouldn't really suggest you going for that material so go to your materials folder create a new material so I'm gonna create a new material I'm gonna call it cleaner okay now I want it to be transparent so in the in the materials I'm gonna go to rendering mode change its uh change it to transparent and then I'm gonna like you know convert its also value to full zero okay now the next thing I want to do is I am going to select this AR default name go to its material section simply drag and drop my material up in here and then if I go to presack I simply have to drag and drop this AR default plane into the prefabs folder and it will be converted into a preset okay now once that has been done go to your AR session origin and add this AR default link to this plane prefer a preference variable okay so this is it we actually properly set up our whole project so that it can support your foundation and we also set up our UI so what's next okay the next thing is we have to now learn to place the object right switch between those objects and we have to switch it in a way so that it doesn't really affect the placement of our objects okay because uh there is a technique to do that now what uh requirements am I saying this now if you like you know if you use this simple placement stuff that I taught you in the previous lecture video okay if you configure it to place a different object switch between uh like you know those furniture by click of a UI button there will still be a problem the problem is let's say when you are pressing any sort of button in the UI okay it's still gonna place it it's of course it's gonna change but it's still gonna place it when when you are pressing at that button now that is not a behavior we want the behavior we want is when we are pressing on the buttons it should only change these Furniture okay it shouldn't place at the moment we only want to place it when we uh like you know tap on a screen outside of these buttons so that's the functionality we are looking for okay now of course the script is totally same as it was for the previous lecture just with a few modifications and in the previous lecture I forgot uh to write a piece of code okay which is uh very necessary right of course it won't break the functionality within your application it won't crash your application but it's a better option to do it because without that it's gonna throw an exception so let's let's start writing our script okay so you have to create a script I'm gonna name it uh like you know let's say what's your name let's name it furniture place or manage okay so I'm going to name it furniture placement manager okay now simply open the script in your Visual Studio code and once you've opened it just remove the start and update method okay because believe me it just makes things much more uh like you know cluttering just a second it's uh so returning some errors for some reason so let me restart the editor once because sometimes it happens with Visual Studio code this doesn't really happens with visual studio all the time but it I have seen it happening with Visual Studio code all the way so yeah let's remove the start and update method the next thing you want to do is you want to define a few variables okay but before that you have to include a few namespaces now there are two very important namespaces because they give us the functionality they give us access to the apis foundation okay so you have to write these two lines that is using Unity engine dot x r dot AR foundation and also add a Unity engine dot exact dot AR subsystems okay so these are the two namespaces we are gonna require for now of course there are two more namespaces that we need to include but we will go like you know go into that later on in this video itself okay so you have to sing the functionality is the same that is we have to implement the touch functionality we have to shoot a recast to place the objects we also have to implement a a simple function to switch between uh like you know these furnitures apart from that there's another thing that is we have to make sure whenever we are pressing the UI button we don't place that object at that very moment okay so let's write the code for it so let's create the reference variables at first first of all I'm gonna create a reference variable which will be storing our default Furniture okay so I'm gonna call it public uh game object spawnable furniture okay the next thing we are going to do is we are going to Define a variable that will be referring by referencing the AR session origin and I'm gonna call it session i j again I'm going to do the same for the AR recast manager and I'm gonna call it raycast manager and then again the same for uh the plane manager vessel AR plane management when I'm gonna call it plane manager okay and I'm also going to create a private list of raycast hits right so whenever we are shooting any sort of recast into the real world it gets stored in this particular news because we will be accessing this cleanest to get the positional data so private list array cast hit I'm going to call it recast hits equals new Nest requested and voila we actually uh initialized all the particular variables that we are gonna need okay so save the script to go to your Unity engine and let it load now make sure to attach the script to your AR session origin now simply drag and drop the components in me here that is my session noise and then the recast manager and then the plane manager and select the default furniture and you can like you know select this particular dot option in here go to the assets and select the default formation you want to have now I want to have the white sofa as the default Furniture okay so as select like you know set the respawnable for nature to the white sofa now once these are done we have to write uh the functionality so that we are able to place the object into the real okay so I'm gonna explain the logic very briefly so keep your ears open and try to understand it properly so write this update method the very first thing you have to check for and this is what I missed in the previous lecture okay you have to check for if there are any touch on the screen okay then only you have to look for where if the like you know if the person has touched on it or not okay so first of all you have to look for if there are any sort of touch that has happened or is is happening within your particular application so to do that you have to write this if condition if input Dot uh touch count is greater than zero okay and if there are one or more touches what we want to do is we wanna uh start that is we want to check if the touch has happened or not okay so if input dot get touch zero sorry uh you have to put 0 as a parameter because we wanna get the very first touch and then touch dot CS equals equals touch face dot began okay so that way whenever you tap on the screen this particular function is being called okay now inside this function we have to shoot a raycast so raycast manager daughter a cast now inside this you have to provide them like you know touch position now in the previous lecture I showed you that you can use the input.mouse function but in this I'm also going to show you the other way around that is input.getouch.position okay now there are not many difference in it the only difference is that the input dot mouth position Works universally that is it will work for Windows uh MacBooks or any sort of platform right uh where the touch is happening but this input.getouch.position only happens on your Android or iOS device that has a touchscreen okay so let's do it so input dot get touch zero dot position the next thing you have to do is you have to pass the recast hits and then you have to set the trackable type to plane width polygon okay now once it shows the raycast and the raycast has hit that particular ground it's going to return return us uh Boolean value okay that is either it has hit that particular generated plane or not so we are gonna write a Boolean Collision variable okay to detect if the Collision has happened and if the Collision has happened what we generally want to do is we wanna place that object to the position and the like you know to the position of the raycast and uh to the position a rotation of that request okay so it's Collision has happened what we want to do is we want to instantiate the game of the quest so I'm gonna name it object equals instantiate spawnables furniture then I'm gonna set the transform I mean the position of this particular object to the position of the recast head so object.transform dot position equals uh what was it point the cast hits 0 dot pose dot position okay now I'm gonna do the same but for this time for the rotation okay so I'm gonna simply name the position to rotation do the same for the this particular object now once that has been done this will actually help us place the object onto the real world okay apart from this there's another thing that we have to do is whenever we have placed our first object we want to disable the planes right we don't wanna because if the planes are still visible even after placing that object it's going to make the experience very much unrealistic and we don't want unrealism if we are going to build a very immersive uh augmented reality application so to do that you have to Loop through though the place that has been generated so for each where planes in planemanager dot trackables now these trackables actually store all the planes that has been generated so you have to do it like this names Dot Game object dot set active solves okay that way you can set all the game all the plays that has been generated to false and the last thing you have to do is you have to disable the plane manager so that no more artificial planes are generated foreign false now you can save your script okay you can simply save your script and load it in unity but there are a few more things that you have to do okay the first thing you have to do is you have to be able to switch between these Furnitures okay so open your script again see this function is pretty simple it's just a oneliner code you have to create a public function that is public void switch Furniture let's call it to its furniture for now okay then you have to pass a game object as a parameter I'm going to call it for your niche now you can simply what you can do is you can reference respawnable furniture that is uh conversation and set it to the furniture of available as a parameter okay now save it go to your Unity engine now select the UI buttons that you have add an action event action to this on click function drag and drop your AR session origin go to this particular function uh select the furniture placement manager and then click on switch formation okay then select the white sofa go to this white dot and sealing the white silver prefab now do the same for the light brown one too then again the same for the brown soup now once these are done you should be able to successfully switch between those objects okay but this is still a problem okay now see this script is enough for you to be able to place uh like you know data planes then Place uh these Furnitures over to your place but right now the problem that persist is even if you click like while you are clicking on the UI let's say if I am clicking on the UI right now the object will be placed at that moment now this is not something we want there's a very unexpected behavior and a very bad uh Behavior also we don't want that kind of behavior and application you have to create a very simple Boolean function that would check if your own button has been placed or not okay and if your button has been pressed I mean if your button is being pressed you don't want to place at that moment if your button is not being pressed then only you wanna place it okay so you have to write this particular function public move is the return type of that function because we will be returning a Boolean type that is either it would either be of false or either be a true and then you have to name that function I'm going to call it is button rest now before writing the code inside it okay you have to add two more names faces one is for uh the you accessing the UI button that is using Unity engine dot UI then also add an event system per unit because that's how we will be accessing the button so Unity engine dot I think it was called event sisters yeah this is it now once you have added these two namespaces right here let's code this particular function okay so if even system dot current dot uh current selected uh game object now we are going to put this question mark in here now this question mark isn't is more of a short form for knowledge check okay then we have to get the component now I feel like if you don't want to use this question mark you can also use another option called try get component but fauna as I have used already use this question mark I'm gonna use uh the get component in here okay so get component now inside this we have to get the button component because that's uh that's the UI components we will be pressing on okay then I'm gonna check if it has null okay now if the button is null we want to return false that is if we haven't pressed on the button we want to return false and if we have pressed on it then we are gonna return true okay as simple as that now the next thing you have to do is you have to go to this if condition where the Collision is being checked you have to add this and operator and then you have to check if the like you know button press is false or not so is button pressed equals equals false so that way we have completed our script and this script is actually gonna help us to place the object properly without the UI interfering us anymore okay the next thing you have to do is you have to click on sign click on build settings then if you already haven't added the sample scene you have to add that particular scene you are working on then you have to click on build and make you know you can name anything your build now the better way this is uh I like you know I make use of this particular method I create a new folder okay I create a new folder called uh bills now this builds folder contains all the bits that I need okay that way it's uh like I am able to keep track of all the bits that I have built in the previous uh like you know implementations that way I can test for the bugs and all of that so it's a pretty handful method so yeah that's about it this will build the application and after it builds I will try it on and put a like you know attach a video of the demo to uh to to the end of this video so that's it for this lecture thank you
