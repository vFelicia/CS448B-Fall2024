With timestamps:

00:04 - hey everybody
00:06 - welcome to live coding with jesse
00:08 - i'm jesse and
00:10 - today we're going to
00:13 - um
00:16 - today we're going to work with react
00:19 - native web
00:21 - um
00:22 - so
00:23 - i got a new setup
00:26 - if anybody saw
00:27 - the
00:28 - last live stream i did for free code cam
00:31 - technically uh it was just a disaster uh
00:35 - the audio was fine with the video caps
00:37 - freezing
00:38 - constantly so
00:39 - i'm gonna backtrack a little bit and go
00:41 - over some of the steps that we did last
00:44 - time
00:46 - that way
00:47 - you'll be able to see it
00:48 - as well as hear it
00:50 - and
00:52 - i'm still getting used to this new setup
00:56 - so i'm going to do try my best to keep
00:59 - track of what's going on with the stream
01:02 - and
01:03 - in terms of quality and then also the
01:06 - the chat so let me know now
01:09 - if you can see this if you can hear me
01:13 - if everything if everything looks good
01:15 - then
01:16 - we'll go ahead and get started
01:20 - i'm going to say hi to everybody in the
01:21 - chat hey
01:23 - um
01:27 - uh umberto says hey hey how's it going
01:30 - um
01:34 - yeah the time the time is weird
01:37 - so it is 8 a.m and my time zone which is
01:40 - eastern time
01:42 - so everybody's saying what time it is
01:46 - let's see
01:49 - uh rabbit works javascript says they do
01:52 - live streaming as well so that's awesome
01:55 - yeah um maybe i'll try to check that out
01:58 - if i if i can
02:03 - alright cool we got people from all over
02:05 - here um everybody's kind of shouting out
02:07 - their location that's awesome
02:10 - we got the last few argentina india
02:13 - poland
02:14 - um awesome
02:16 - okay so
02:18 - nepal
02:20 - really cool all right so here's what
02:22 - we're gonna do
02:24 - um i'm going to
02:26 - start out by uh just like installing um
02:31 - or starting like a create react app
02:33 - project
02:34 - and then we're going to
02:37 - just kind of switch it over
02:39 - to be
02:40 - to use react native web
02:43 - if you don't know about react native web
02:45 - i'll explain it briefly here i think i
02:47 - go i explain it more in the last stream
02:49 - so you can check that out this is
02:51 - project seven
02:53 - so if you check out
02:55 - uh the stream labeled project seven day
02:58 - one
02:59 - you can get more info but basically
03:01 - react native web is going to allow us to
03:04 - use react native so all the syntax is
03:07 - going to look like react native
03:09 - but
03:11 - we will be able to run that same code
03:14 - on the web
03:16 - in ios and android
03:19 - we could run it as a desktop app on
03:22 - windows
03:24 - linux or mac
03:26 - by using electron
03:29 - or something similar
03:31 - and then potentially you know react
03:33 - native does have the capability of
03:36 - running on other things as well
03:39 - for now we're just going to go with with
03:41 - those so the first thing we're going to
03:43 - design for the primary thing is as a web
03:45 - app
03:46 - i've decided to go the web app first
03:50 - route because
03:52 - i'm going to be able to display that
03:54 - while streaming easier than anything
03:56 - else
03:57 - we can run a
03:58 - simulator for
04:01 - like for mobile apps but it takes a lot
04:03 - more
04:04 - out kind of out of the computer in terms
04:06 - of like ram and cpu so i don't want to
04:09 - slow down the stream for that
04:12 - so at some point
04:13 - we're probably going to want to test
04:15 - this
04:16 - on mobile
04:17 - like we'll definitely do that but in
04:19 - terms of like our day-to-day development
04:22 - we're going to develop
04:23 - um as if we were developing like a
04:26 - normal web app all right so we'll
04:28 - basically spend a lot of time in chrome
04:31 - and that's cool it gives us access to
04:33 - all the dev tools we normally would uh
04:36 - it's the development process is a lot
04:39 - easier
04:41 - then let's say like using the simulator
04:43 - or using expo and having like your
04:46 - device hooked up to the computer so
04:48 - i mean expo certainly makes that really
04:51 - easy um but definitely not as easy as
04:55 - just like a straight straight web app
04:57 - okay
04:59 - so uh rabbitworks says visor is nice
05:02 - yeah so i have used visor before so
05:05 - that's also nice
05:11 - but you just like you can't beat the
05:13 - ease of of the web app in in chrome uh
05:16 - we can come close but
05:18 - uh but for now we'll go with web app so
05:22 - uh first things first let me
05:25 - let me open
05:27 - this up
05:28 - and i'm just gonna we're gonna go to the
05:30 - react native web github repo so you all
05:33 - can check it out see
05:34 - see what it is you can read about it you
05:36 - know as we're streaming or later on
05:46 - i'm probably going to mess up on typing
05:48 - a lot because this is
05:50 - a new keyboard
05:52 - that i'm not really used to yet
05:57 - alright so this is react native web
06:00 - i'm gonna put the
06:03 - link to this in the chat right now and i
06:05 - see there's a lot of activity in the
06:06 - chat i'll try to keep up with that but
06:08 - about when we get to about the halfway
06:10 - point in the stream uh i'll maybe stop
06:13 - double check like what's going on in the
06:15 - chat and then at the very end of the
06:17 - stream i'll check the chat again so if
06:19 - you're asking questions or anything just
06:21 - hang in there for a little bit and i
06:22 - will
06:23 - uh i'll get to them soon
06:26 - okay so
06:28 - that link is in
06:30 - the uh the live chat
06:34 - and
06:35 - we're gonna go through
06:37 - here we go that's what i want the
06:39 - getting started guide
06:42 - so we are going to
06:51 - yeah we're going to go through this
06:55 - for
06:56 - create react app
06:58 - and this is what we did last time
07:01 - so we're just going to do it again
07:04 - and i'm not exactly sure what i want to
07:07 - do with this project yet
07:10 - um
07:12 - my thought is this uh i i
07:16 - years ago i made a game to help my
07:19 - oldest son learn math
07:21 - and i thought kind of like i could redo
07:23 - that as an app
07:26 - with react native web
07:28 - so maybe that's it i don't really have
07:31 - any other good ideas for what the
07:32 - project could be so let's let's do that
07:35 - so
07:36 - um let's go with
07:40 - create react app and
07:43 - make sure i actually have create react
07:44 - app on here
07:46 - this is a new computer so the reason the
07:48 - stream is working now and it wasn't
07:50 - working last time is because i bought a
07:52 - new pc
07:53 - for streaming
07:56 - um let's make sure
08:04 - yeah this should work all right
08:16 - bring it back up and let's name it um
08:24 - actually i'm gonna name it like this uh
08:28 - battle math all lower case
08:31 - all one word
08:32 - that's gonna be a bigger deal later on
08:36 - um but there's some
08:38 - rules about what projects can be named
08:41 - that are different depending on the
08:42 - platform
08:44 - so
08:44 - if we just stick with all lowercase
08:47 - altogether
08:49 - no
08:50 - hyphens
08:51 - that should cover every case we should
08:54 - be fine
08:57 - so this is doing the create react app
09:00 - you notice that was way faster than
09:04 - than the last time we tried to do this
09:06 - um
09:09 - so much faster i tried to do it on a
09:10 - 2015 macbook pro last time and
09:14 - you know that's a good machine but
09:17 - it just can't handle streaming and
09:20 - doing stuff like this at the same time
09:22 - all right so this should only take a few
09:23 - more seconds
09:25 - and then we'll be able to go back
09:28 - and add in
09:34 - uh
09:35 - react native
09:37 - uh web support
09:42 - which
09:43 - let's see
09:45 - basically what we're gonna need to do is
09:48 - add in
09:52 - uh
09:53 - react native web
09:54 - because we already have the other stuff
10:10 - oops
10:12 - there we go
10:13 - okay cool
10:15 - so let's cd into our battle math
10:20 - directory i don't know i didn't put this
10:22 - i'll have to i'll move this at some
10:24 - point but i actually put this in the
10:27 - wrong directory
10:30 - yeah shoot
10:31 - all right it's okay for now i i always
10:34 - like to put things in my projects
10:35 - directory
10:37 - um
10:40 - i didn't realize i wasn't already in
10:42 - projects but we're in here
10:44 - um and now let's just open this
10:47 - we're going to open this all in code
10:51 - i'm going to get rid of this one
10:53 - and
10:56 - just to show we have we have our our
10:58 - basic file structure that you that you
11:00 - normally get when
11:02 - you use create react app
11:05 - uh here's our package json
11:07 - right just all normal stuff so far
11:12 - and then now
11:16 - at this point let's add in
11:19 - uh
11:20 - we'll do yarn add react native web
11:24 - to bring in that package
11:27 - let's show our terminal
11:29 - we are
11:38 - okay
11:39 - if you want to know how i set up any of
11:41 - this stuff like
11:44 - on on windows i did a couple of tutorial
11:47 - videos on my youtube channel the link to
11:49 - my youtube channel i think is in the
11:50 - description of this video
11:53 - so
11:54 - you can check that out i show you how to
11:56 - set up um
11:58 - node and git and vs code uh on
12:03 - um
12:04 - on windows
12:08 - so that's this should be like just the
12:10 - last like
12:11 - three three videos or something on my on
12:13 - my channel
12:15 - all right so we have react native web
12:17 - here we can see it's now in our package
12:19 - json
12:23 - and
12:24 - we're gonna need to
12:27 - let's see
12:28 - we're gonna need to add some stuff in
12:30 - here so
12:31 - you can see
12:33 - hopefully let me make this just a little
12:34 - bigger and make sure everybody can see
12:36 - it
12:38 - after we we do this i'm going to go back
12:40 - to the chat okay
12:42 - so we're not doing a custom
12:45 - webpack configuration right because
12:48 - create react app is already doing that
12:51 - for us okay
13:04 - um yeah we're not gonna worry about
13:09 - jest or
13:10 - flow for right now
13:13 - um
13:15 - we're gonna have to do babel we may not
13:17 - have to do babel right now though
13:22 - we'll see we might be able to hold off
13:27 - okay yeah we might be able to hold off
13:29 - on it
13:32 - but basically what we can do to test and
13:34 - we'll see if if i can get away with not
13:36 - configuring anything else at this point
13:38 - then that'll be great just to keep the
13:40 - stream moving along
13:41 - um
13:43 - what we're going to do to test this out
13:45 - is go into our our app
13:48 - dot js file so you see this is
13:52 - if you're not familiar with
13:54 - react
13:55 - or react native right like everything is
13:57 - a javascript file
13:59 - and we use this syntax that's called jsx
14:03 - that looks kind of like html but it's
14:06 - it's not
14:07 - um kind of behind the scenes it's
14:08 - actually all javascript functions
14:12 - um
14:13 - so
14:14 - we are going to
14:20 - come in here and get rid of
14:22 - most
14:23 - basically all of this stuff right we
14:25 - don't want any of this stuff we're going
14:26 - to do our own thing here
14:30 - and
14:30 - [Music]
14:32 - so we're getting rid of logo
14:35 - uh for right now i guess we can keep the
14:38 - app.css
14:40 - let me
14:42 - let me go back here i think we can get a
14:46 - just some boilerplate here
14:48 - um
14:53 - that's what we're doing
14:56 - no i just want some like basic
14:58 - boilerplate
15:00 - um
15:13 - all right let's check out the code
15:14 - sandblocks template they have
15:16 - just so we can grab it
15:20 - uh
15:21 - grab their boilerplate i just want to be
15:23 - able to show you this this actually
15:25 - running first
15:27 - um
15:28 - so
15:31 - let me check out the package json for a
15:33 - second here
15:38 - okay
15:39 - all right we're good the only thing we
15:40 - didn't bring over uh react art
15:43 - which we may need to at some point but i
15:45 - don't think we'll need to for now so
15:48 - uh let's grab
15:52 - i'm gonna just grab this real quick so i
15:54 - don't have to type it all out
15:57 - and
16:02 - now we'll go back here
16:05 - okay
16:05 - and
16:07 - i actually don't want
16:10 - i don't think i need this right now
16:13 - uh we'll do text view and then we'll use
16:16 - style sheet as well so what i'm going to
16:18 - do in here is put in a view to start
16:21 - with
16:22 - right and then inside the view i'm going
16:24 - to add text
16:27 - let me make this bigger i want to make
16:29 - sure everyone can see
16:31 - all right
16:32 - hopefully that's
16:33 - easier to see
16:34 - um
16:36 - so we're gonna add in
16:40 - text
16:44 - and then inside the text you know we'll
16:46 - just let's put the title right we're
16:48 - gonna say this battle math okay
16:52 - and um if you didn't catch it earlier
16:54 - like i built a game for my son when he
16:56 - was learning basic math we're going to
16:58 - try to recreate that game
17:01 - using react native web and hopefully
17:03 - make it better as well and then
17:06 - maybe my other kids can can use it to uh
17:09 - to learn math
17:11 - okay so we have that and then
17:13 - um
17:15 - we can add our style sheet in
17:17 - easiest way is just to copy and paste
17:19 - some of the boilerplate for this so
17:23 - let's grab this
17:26 - and then
17:27 - go back over here
17:32 - we're gonna put in our styles
17:33 - stuff here let's get rid of
17:39 - basically a bunch of this stuff
17:41 - we don't really need any of that stuff
17:45 - uh but our main view we're gonna say
17:48 - styles
17:51 - uh i'm sorry style
17:53 - equals
17:55 - and we're gonna say styles
17:57 - dot i'm gonna say root since this is
17:59 - basically our root um
18:02 - component at least
18:06 - technically it is uh i guess for our
18:09 - purposes here
18:10 - um
18:11 - so let's go root and we'll just give it
18:14 - a
18:16 - uh
18:17 - let's see how i want to do this
18:22 - flex
18:27 - um
18:29 - i'm trying to i want to center the text
18:31 - in the middle of the page so let's go
18:33 - with um
18:34 - justify content
18:38 - center
18:39 - and align
18:42 - items
18:46 - ah this keyboard
18:49 - sorry it's a new keyboard
18:56 - and we're going to go center as well
18:59 - on the root
19:00 - and
19:02 - let's just see if that works now before
19:03 - we go any further with our styling now
19:06 - by default react native uses flexbox
19:11 - so that's why we're using normally you
19:13 - use this with flexbox i don't need to
19:16 - say
19:17 - that this that we're using flexbox
19:19 - because that's that's the default
19:24 - all right now
19:26 - let's get another terminal going
19:28 - um we can see back in our package json
19:32 - that if we want to
19:33 - run this if we want to test this
19:37 - we can
19:38 - use
19:39 - let's actually let's double check that
19:41 - now i think about it
19:43 - uh
19:45 - package json react scripts yep we can
19:48 - just use react scripts okay
19:53 - so if we do yarn start
19:56 - we'll get a nice little test version
19:57 - here just like a normal create react app
20:00 - app
20:01 - so we're gonna hit yarn start
20:06 - see if everything works
20:07 - whoa
20:09 - node server
20:10 - what
20:12 - allow access
20:14 - i guess it's the first time i try to do
20:16 - that
20:17 - oops and it looks like i do need that
20:20 - that um
20:22 - other package that i neglected so
20:25 - let's do
20:28 - everybody just saw all my emails
20:30 - um
20:34 - pretty much don't have anything crazy in
20:35 - there so i'm not worried about that
20:38 - okay so let's yarn add
20:41 - um
20:42 - what was that called react art
20:46 - i think that's what it was called let's
20:47 - double check
20:50 - yep react to art
20:54 - and get that in there and then it should
20:56 - work
21:02 - all right and
21:04 - let's restart that if you're ever
21:06 - running a process in the command line
21:08 - and you want to quit you can just press
21:10 - ctrl c and that usually
21:13 - does the trick
21:14 - so that's what i just did right there
21:15 - just quit it and restart it yay check it
21:18 - out all right so i don't know if you can
21:20 - see that but it says battle math
21:22 - really really small up here okay now
21:25 - notice it's not vertically centered so
21:28 - um i'm guessing that's because our
21:32 - container uh has no height right so this
21:36 - is our our root
21:38 - our root has no height
21:39 - um
21:41 - so
21:42 - we need to give that height of like full
21:45 - width if we really want that to be
21:47 - centered
21:49 - but
21:50 - basically the the important thing here
21:52 - the cool thing here is
21:55 - with very little work
21:57 - we've just used
21:59 - react native
22:01 - syntax right these views and text
22:05 - we've used that you can see we're we're
22:07 - pulling it from react native right which
22:10 - we we get this by bringing in react
22:13 - native web okay we didn't actually bring
22:15 - in react native or by
22:18 - by itself in our package json but via
22:20 - react native web
22:22 - we have access to all these react native
22:24 - primitives and we've just used them
22:28 - here
22:29 - and then
22:31 - we have them running
22:34 - in chrome
22:37 - and if you check it out i'm try to make
22:39 - this as big as i can
22:42 - why is this not dark
22:45 - you can see this computer is i've done
22:47 - almost nothing with it yet because it
22:49 - doesn't have my normal settings
22:51 - but you can see like i'll click on this
22:55 - uh this div here that says battle math
22:57 - in the text it's it's a div right uh so
23:00 - those react native primitives have been
23:02 - converted into dom primitives right so
23:05 - we have divs
23:07 - instead of view and text it's now been
23:09 - transformed into divs and then those
23:12 - styles that through the um react native
23:15 - uh style sheet
23:17 - those styles have now been added to
23:19 - these through like all these classes
23:22 - right
23:23 - um
23:25 - but like let's let's check on our root
23:27 - component here
23:29 - and see
23:31 - uh
23:32 - where's our there we go
23:34 - actually this is gonna be blocked by my
23:36 - my picture here
23:38 - so you probably won't be able to see it
23:40 - um
23:44 - let's see
23:47 - phone display
23:53 - oops
23:57 - all right so we have our
23:59 - okay yeah you can see that justify
24:01 - content center
24:04 - align item center so you can see those
24:06 - are are actually on that that div
24:10 - all right i'm going to go back to the
24:12 - chat right now
24:13 - and
24:18 - i'm going to try to answer as much as i
24:19 - can from the chat in the next few
24:21 - minutes before we go back and maybe do a
24:23 - little bit more with this project
24:26 - maybe we'll actually push this to github
24:28 - too before we end so that the the code
24:31 - is available for you to check out
24:34 - uh i'm gonna have to scroll up quite a
24:36 - bit there's a lot in the chat uh let's
24:38 - just i'm gonna try to get to as much as
24:39 - i can
24:41 - and let me give myself uh a time limit
24:44 - here of about five minutes
24:47 - okay uh we had a couple of people asked
24:49 - if this was for beginners i would say
24:52 - yes it definitely can be for beginners
24:54 - i'll do my best to explain things and
24:56 - certainly ask as many questions as you
24:58 - want
24:59 - it
25:00 - there probably be some things that are
25:02 - going to be hard to understand if you're
25:04 - a beginner
25:05 - but you know just check it out and see
25:07 - if it's too much that you don't
25:08 - understand
25:10 - you know that's that's fine
25:12 - ask a lot of questions
25:14 - i i want to be open to beginners
25:17 - but i also you know i want to build out
25:19 - a project so some of the stuff is going
25:20 - to be advanced
25:23 - let's see someone asks if i read
25:25 - comments i do read comments
25:29 - uh
25:30 - let's see
25:34 - a lot of people are just saying hey so
25:36 - i'm gonna say hi hi to everybody
25:42 - oh efforts for says saying hi from south
25:44 - africa hey how's it going
25:52 - oh alex from argentina
26:00 - minnesota
26:02 - hey so rabbit works you're in minnesota
26:04 - i'm going to be speaking at ndc
26:05 - minnesota this year
26:09 - so if you end up going to that
26:10 - conference or around there uh let me
26:13 - know
26:16 - benjamin from kenya says hi
26:19 - newton from nairobi
26:21 - awesome
26:23 - got mario from houston
26:26 - kamal from uganda amid from singapore
26:29 - you have seen from turkey wow we have
26:32 - people from all over
26:34 - say it's 9pm in china
26:36 - liberia bangladesh
26:38 - wow
26:39 - that's really cool
26:41 - it's so cool
26:43 - um
26:44 - goshu guide says i want to ask
26:46 - you can you read from files on
26:49 - javascript as fast as c plus plus
26:53 - to be totally honest with you i'm i
26:55 - don't have the answer to that
26:58 - so
27:04 - yeah i just don't know if i had to guess
27:07 - i would say
27:09 - c plus plus would be faster
27:12 - uh
27:12 - but
27:14 - i really don't know and by faster when
27:16 - we're talking about the different
27:17 - languages it's usually like
27:19 - a few milliseconds of difference
27:21 - fractions of milliseconds right so
27:24 - um in terms of performance like
27:27 - only in very few situations would that
27:29 - ever really be a big deal for
27:30 - performance but that's a good question
27:32 - does anybody actually know any like real
27:35 - numbers on that in terms of um you know
27:38 - is is javascript or c plus plus more
27:40 - performant
27:44 - yeah east africa india brazil
27:49 - philippines
27:59 - okay
28:00 - korea
28:02 - japan
28:11 - uh rydo says could you make an api
28:14 - calling app just for getting tweets or
28:17 - movies
28:19 - um yeah i mean that's certainly possible
28:21 - are you asking me if it's possible or
28:22 - are you asking me if i could build it
28:24 - like
28:25 - right now in the stream
28:27 - uh
28:28 - we definitely could do something like
28:30 - that on the stream
28:32 - probably not for this project but for a
28:34 - future project
28:40 - um
28:42 - ramune says nice video thank you i
28:44 - appreciate that
28:48 - the fellow from amsterdam hey how's it
28:50 - going
28:53 - okay so rabbitworks says talk about what
28:55 - you're using uh npx
28:57 - versus npm
28:58 - okay i'm going to be
29:00 - 100 honest with you i don't know that
29:03 - much about npx
29:06 - okay the only time i ever use npx is
29:08 - when i'm installing create react app
29:11 - okay so at some point
29:13 - the official docs for create react app
29:16 - started recommending using npx to
29:18 - install
29:20 - new apps with create react app so it
29:23 - wasn't always like that
29:27 - like you can even see there's a link to
29:28 - the instructions for older versions
29:31 - but this seems to be the quickest and
29:32 - recommended way to do it
29:35 - so that's why i do it that way
29:39 - so i've never really taken the time to
29:41 - to look into it
29:43 - um
29:46 - do you see there are alternatives right
29:49 - we could do npm init
29:51 - uh
29:52 - oops you want to create rig
29:54 - we do yarn
29:56 - so
29:57 - uh there's definitely
29:59 - uh multiple ways of of doing this
30:05 - but npx is kind of a newer thing
30:09 - uh if anybody else has any experience
30:12 - with that like more experience
30:13 - technically with that then uh please let
30:16 - me know
30:17 - uh hector says hello from columbia hey
30:19 - how's it going
30:21 - uh limitless says what is npx why not
30:23 - use npm okay so i mean basically the
30:26 - same same thing the only reason i'm
30:28 - using npx instead of npm is because
30:30 - that's the recommended way
30:32 - to use create react app
30:37 - uh rabbitworks says mpx gives you the
30:40 - ability to run package scripts and stuff
30:42 - without having to install them
30:45 - uh as as in create react app all right
30:48 - that's a great answer so like um
30:52 - if you notice in the beginning of stream
30:54 - we never actually installed create react
30:56 - app we just we just ran this right and
30:58 - this was a new setup on a new machine
31:00 - that i've never really built anything on
31:02 - yet so i i never installed it even
31:05 - before the stream so
31:07 - um
31:09 - yeah so i would say
31:11 - that alone makes using npx worth it like
31:14 - taking away that step of having to
31:16 - install
31:17 - something else
31:18 - and thanks rabbitworks
31:29 - mr smith asks a question
31:32 - i'm not i'm not exactly sure
31:35 - what your question means there may be
31:38 - maybe it's a translation thing like
31:40 - i
31:41 - yeah so mr smith
31:44 - uh if you get it like ask your question
31:45 - again maybe like explain it then i'll
31:47 - answer it otherwise i'm not exactly sure
31:49 - what you're trying to ask
32:04 - all right michael creole says if you're
32:05 - using npx you are sure to get the latest
32:08 - version
32:09 - all right so that's that's awesome
32:12 - uh ratto says not scripted yeah this is
32:14 - not not scripted at all
32:19 - um
32:21 - abby says how long have you been
32:22 - practicing um
32:26 - let me think uh
32:31 - like six years
32:33 - so i've been a developer for like six
32:35 - years i think
32:42 - looks like there's a conversation going
32:44 - on in another language um
32:48 - so i don't know if y'all are just
32:50 - talking to each other or whatever
32:52 - um
32:53 - if we have time i can go back and use
32:55 - google translate to see what's going on
32:57 - but i want to get at least a little bit
32:59 - more done with this
33:00 - with this app so i'm going to skip over
33:02 - it for now
33:06 - i'm almost to the bottom of the chat and
33:08 - then we'll go back uh and do a little
33:10 - bit more code
33:14 - uh limitless asking about what it what
33:16 - are the bundlers uh rabbit works says
33:18 - webpack yeah so webpack would be your
33:21 - almost always when you're using react
33:25 - you will also use webpack as your
33:27 - bundler
33:28 - i've seen people use other stuff with
33:30 - react but i've never used anything other
33:32 - than webpack
33:39 - okay rabbit works is recommending using
33:41 - react snippets to be able to generate
33:43 - component boilerplate right away that's
33:45 - that's a really that's good advice
33:48 - uh and then react snippets would is a um
33:51 - like a package uh extension for visual
33:54 - studio code they probably have the same
33:57 - stuff for other editors as well
34:04 - uh
34:06 - i'm not sure how to pronounce the name
34:08 - but the question is uh what's the
34:10 - difference between create react app and
34:12 - react native web
34:15 - okay so
34:16 - create react app is just a tool that
34:19 - lets you
34:20 - build out like the the basics the bare
34:23 - bones for a react uh
34:26 - app
34:28 - really quickly right so we just ran
34:30 - create react app and then we got we got
34:32 - all these files and stuff and folders so
34:35 - it automatically created a lot of the
34:37 - stuff for us that would have taken a
34:39 - while to do on our own but it
34:42 - you need you need it for every project
34:45 - it's almost always the same for every
34:46 - project so that just handles it for us
34:48 - react native web
34:52 - it basic it just allows you to use react
34:55 - native syntax
34:57 - to build web apps
35:00 - so that that would be the the difference
35:03 - um
35:05 - hopefully that answers your question let
35:07 - me know if it didn't
35:17 - edward asks about what what is react
35:19 - native web you code in browser and then
35:21 - build for mobile yeah you you definitely
35:23 - can do it that way but um basically
35:25 - react
35:26 - like i said rack native web just lets
35:28 - you
35:29 - take the react native primitives
35:33 - and
35:33 - turn them into
35:35 - dom primitives so they can run on the
35:38 - web
35:44 - ass why did i use root um to be honest
35:46 - with you i kind of like the idea of
35:48 - using whatever the outermost container
35:51 - is of a component and just saying root
35:55 - here
35:56 - i don't remember where i first saw that
35:57 - but i saw somebody else doing that and
36:00 - thought like okay that's that's not a
36:02 - bad idea uh it saves me from having to
36:04 - come up with names for stuff um
36:07 - and then i i know like whatever's in
36:09 - this route those this applies to the
36:12 - outermost container
36:14 - in every component this is just the
36:16 - outermost container for me so
36:19 - that's that's what i use this for
36:31 - let's see
36:33 - uh are there any examples of react
36:34 - native website
36:36 - uh i believe
36:39 - twitter lite is
36:41 - is used uh they use react native web for
36:43 - twitter lite and they use react native
36:46 - web for
36:48 - um
36:49 - one of the major league soccer
36:51 - websites
36:53 - so
36:55 - just off top my head
36:57 - that's
36:59 - that's it so i'm going to go back to the
37:00 - code right now i know i didn't get
37:02 - through all the comments but i'll get
37:03 - back to the comments uh in about
37:06 - i don't know 10 15 minutes something
37:08 - like that
37:10 - all right cool so let's get back in here
37:12 - and
37:15 - do just a little bit more
37:20 - um okay so
37:23 - here's the basic idea of what this this
37:25 - app is gonna do in terms of just like
37:28 - very very basic
37:30 - uh
37:31 - what we're gonna do is uh
37:33 - the app is going to have
37:36 - a
37:37 - text input
37:40 - and a button to submit
37:42 - it needs that on like every screen
37:45 - it's going to generate a math problem
37:48 - randomly right and then when you input
37:52 - the value in the text input it's it will
37:55 - check to make sure that that's the
37:56 - correct answer
37:58 - right
37:59 - and that's how the game will progress
38:04 - what will happen is on the screen
38:07 - will appear
38:08 - a certain amount of like enemies
38:10 - if you get it right
38:12 - then one of the enemies disappears if
38:14 - you get the question wrong a new enemy
38:16 - appears
38:19 - so
38:20 - you can you can get as many questions
38:23 - wrong as you want without the game like
38:25 - saying game over but it's just going to
38:27 - take even longer for you to get past it
38:30 - so basically to get past the level you
38:31 - will have had to
38:33 - like master that type of of math problem
38:37 - right we're just going to start out with
38:38 - addition
38:40 - it's going to be very basic it's going
38:41 - to be geared towards young children
38:44 - so we're not going to do anything like
38:46 - crazy in terms of graphics
38:48 - definitely nothing super violent or
38:50 - anything like that we want to keep it
38:52 - like
38:53 - appropriate for for young young children
38:56 - okay so for now i'm not going to worry
38:58 - about graphics everything is just going
39:00 - to be a bit of text
39:01 - but we can build this out
39:03 - so
39:04 - react native comes with a
39:07 - text input
39:11 - already built in
39:13 - so we're bit we're going to build stuff
39:14 - out at first just in app.js and as it
39:17 - gets bigger we'll break stuff off into
39:19 - separate components
39:23 - okay so let's put this
39:26 - text input here
39:32 - and
39:33 - let's go to the react native
39:37 - documentation
39:43 - react native text input
39:48 - react native docs are great
39:50 - you can see
39:51 - all the info you need
39:55 - so
39:56 - we'll just take this let's just copy and
39:58 - paste this this basic example that they
40:01 - have
40:02 - so that we can
40:03 - kind of get started
40:05 - as quickly as possible
40:08 - let's throw this in here
40:11 - and you know what let's grab their their
40:13 - state as well ah no i'm not going to
40:17 - let's
40:18 - let's create our own state right because
40:20 - i don't we don't need to use the
40:21 - constructor
40:23 - right we'll grab
40:27 - uh
40:30 - what do they call it
40:31 - text okay so they called their state
40:33 - text
40:47 - text and at first let's just leave this
40:49 - blank for now
40:54 - so what's happening here is
40:57 - we have our text input right they've
40:59 - they've given it some style we'll just
41:01 - keep that for now and then on change
41:04 - text
41:05 - so this is a little bit different than
41:07 - normal react
41:08 - right
41:10 - we have this on change text and that's
41:13 - every time
41:15 - the user types in that
41:17 - that input this is going to be called we
41:20 - got a little arrow function here so
41:22 - we're passing in the actual text the
41:25 - value of that text input
41:27 - right and then we're running this
41:30 - which is we're just setting the state
41:34 - of text to text
41:36 - right
41:38 - since the value we're passing in and the
41:40 - key have the same name we can just do it
41:43 - like this
41:46 - and then the value of the input
41:50 - is actually the the state right so it's
41:53 - kind of a circular you type in there it
41:54 - changes the state
41:56 - and then a change in state
41:58 - causes a re-render which then changes
42:00 - the value that's what's called a
42:02 - controlled input
42:04 - controlled component okay there are
42:06 - other ways to do this but this is the
42:08 - like standard way
42:10 - to to handle an input in react
42:14 - all right so let's save that and just
42:16 - just verify that it works
42:20 - oops
42:25 - get rid of that one okay cool so let's
42:28 - type something hey it works and we can
42:31 - go in here to react
42:34 - and let's check our
42:44 - states
42:45 - see where our state for this component
42:48 - is there we go
42:49 - so our state for our app component here
42:52 - is will change as we type
42:55 - see
43:00 - all right cool so that is working
43:06 - so
43:09 - let's go to
43:12 - uh back here to our react documentation
43:15 - and let's go to button
43:19 - and we're gonna add a button so react
43:22 - native comes with this button like
43:24 - pre-built if you use button it will
43:28 - automatically style it differently
43:30 - depending on the platform
43:32 - right so
43:34 - according to the docs like we're just
43:36 - targeting either android or ios right
43:39 - and this will give it an android style
43:41 - and this will give it an ios style right
43:43 - we're going to stick with that for now
43:45 - we may want to put our own styles on the
43:48 - button if that's the case we'll we'll
43:50 - stop using button and instead we'll use
43:52 - touchable opacity which is the primitive
43:55 - that button is built on
43:57 - right and that lets us do a lot more in
43:59 - terms of styling
44:01 - right but for now
44:02 - just to get this the functionality
44:05 - you know going quickly
44:07 - we're just going to do this so i'm going
44:08 - to copy
44:10 - their example
44:13 - and put it in here for now
44:15 - this button
44:18 - and
44:19 - we've got to make sure we're pull
44:21 - actually pulling button in
44:23 - button
44:24 - and
44:26 - for now the we're not on press we're not
44:29 - going to do anything because we don't we
44:31 - don't have anything set up so we're just
44:33 - going to console log
44:37 - oops
44:38 - console.log
44:41 - and
44:42 - this states
44:44 - text
44:46 - right
44:47 - okay
44:49 - and let's change this from learn more to
44:52 - submit
44:58 - okay
45:01 - oops now let's
45:02 - check our app hey we got a big purple
45:06 - submit button let's type something and
45:08 - then hit that and
45:15 - that's weird
45:17 - on presses mark just required a button
45:20 - so i use undefined all right so we've
45:22 - got an error
45:23 - let's check that out
45:25 - okay so
45:25 - [Music]
45:27 - maybe
45:31 - let me just put that in the arrow
45:32 - function
45:33 - see if that
45:37 - does anything
45:45 - there we go okay so i i should have put
45:48 - it in an arrow function but
45:50 - basically we can see
45:51 - we type we hit submit and we can get the
45:54 - value in uh in the console
45:58 - right so if you're not
46:01 - like familiar with react at all and
46:03 - you've done some web development before
46:05 - you know this is kind of really
46:06 - different than you would normally handle
46:09 - text inputs like
46:10 - um
46:12 - it is a little bit different instead of
46:14 - grabbing values directly from the text
46:16 - input we're grabbing everything from
46:18 - state
46:19 - okay it it may seem a little weird on
46:21 - this scale but
46:23 - uh after you get used to it and you
46:26 - start having more complex uh like use
46:29 - cases
46:30 - you you see like actually saving the
46:32 - value of everything in state ends up
46:34 - being
46:36 - a lot more easy to deal with
46:39 - than needing to grab values from the dom
46:42 - from multiple inputs
46:44 - so it's
46:46 - it is a lot nicer uh it it may not seem
46:48 - like it with just one text input but
46:51 - when you start to get more and more on a
46:52 - page this this does end up
46:56 - being a much easier way of handling uh
46:58 - form inputs
47:00 - okay
47:01 - let me check the time
47:03 - all right we're running i only want the
47:05 - stream to last for about an hour so
47:08 - uh
47:08 - we're we're getting down to about like
47:10 - 10 minutes left let me check the chat
47:13 - just to see how much is in there
47:15 - uh and then
47:21 - yeah
47:22 - thanks there's a lot of chat how about
47:24 - let's let's go ahead and uh create a git
47:27 - repository for this and push this to
47:29 - github
47:31 - uh and then i'll go back to the the
47:34 - questions so
47:35 - let's do get status so this is already
47:40 - like just started out as a git
47:41 - repository when we use create react app
47:43 - it does that
47:44 - so we've changed our package json
47:46 - remember when we added some packages
47:48 - we've changed our app.js and then the
47:50 - yarn lock file comes with us using yarn
47:54 - so that will change automatically every
47:56 - time we update our packages
47:58 - so i'm going to do a git
48:00 - commit
48:02 - with the m flag
48:05 - or i'm sorry with with the am flags
48:07 - we're gonna add an atom and commit and
48:10 - add a message all in one line
48:12 - and let's just say
48:14 - i'm just gonna say init for now because
48:16 - this will be our first commit
48:19 - and
48:21 - yeah that's fine
48:22 - okay
48:23 - so locally we have this repository but
48:26 - we don't actually have it anywhere on
48:27 - github so let's go to github
48:31 - oops
48:35 - if you don't already have a github
48:36 - account i highly recommend getting a
48:38 - github account if if you'd like to
48:40 - become a developer of any sort
48:44 - um you know just sign up as long as you
48:46 - have it that's good and then
48:48 - you know as we go through this and you
48:50 - see the process of committing things to
48:52 - github you'll you'll kind of get a
48:54 - better understanding of what you would
48:56 - use it for so i'm going to create a new
48:57 - repository right
49:00 - now going to name it battle math
49:03 - okay i'm going to skip the description
49:05 - for now i'm going to keep it public i
49:07 - don't want to initialize it with a
49:08 - readme a get ignore or a license okay
49:13 - we can add those in later now
49:18 - i'm going to
49:20 - use the ssh version because i've already
49:22 - set up my ssh keys if you want to know
49:24 - how to do that check out the video about
49:26 - setting up get on on my personal youtube
49:29 - channel links in the description
49:32 - but since i'm doing that i can skip down
49:35 - here we're pushing an existing
49:36 - repository from the command line so i'm
49:39 - going to copy that i'm going to take it
49:40 - one step at a time here we're going to
49:42 - paste that
49:43 - okay so this is we're adding
49:46 - our remote
49:47 - right which is going to be the the ssh
49:50 - path
49:51 - to that repository in github
49:54 - and then
49:55 - we're going to push
49:56 - to that remote
50:01 - so we're pushing our master branch
50:03 - right to that remote
50:11 - great now if we go back here to github
50:15 - and we check our repository you could
50:16 - see hey here it is here's here's all our
50:19 - our files
50:21 - right um if we go to the source in our
50:23 - app.js you can see hey look there's our
50:26 - our title
50:28 - um
50:28 - battle math and here's our text input
50:31 - and our button
50:32 - right so now this is on github and i
50:36 - will give you the url in the chat right
50:38 - now and then from now on i will
50:43 - uh if i remember i'll put this url in
50:46 - the description to the video so
50:48 - everyone you can you can check it out
50:50 - you could submit a pull request if you
50:52 - want um you'll you'll always be able to
50:55 - see what's going on in this project
50:58 - from there
51:02 - so i'm going to scroll up right now and
51:04 - try to get through as many questions as
51:05 - i can
51:06 - in the next like seven minutes or so and
51:08 - then i gotta end this stream and do my
51:11 - my real job
51:12 - uh as a software engineer
51:15 - um
51:17 - i'm trying to i forgot to take note of
51:19 - where i left off at so it might take me
51:21 - a second to
51:23 - figure out where i left off
51:35 - all right i think i found it
51:36 - um
51:40 - always the legend said mission failed
51:42 - we'll get him next time i do not know
51:43 - what that was referring to
51:45 - so
51:47 - not sure what's going on
51:51 - limitless says keep going perfect
51:52 - explain all right thanks um
51:57 - limitless asks if i can talk more about
51:58 - flexbox for a bit okay
52:01 - flexbox is a newer
52:03 - thing in css that allows you to position
52:06 - elements on on the page
52:09 - of of a website or a web app
52:11 - so
52:12 - traditionally this has been done in
52:14 - different ways
52:15 - at one point tables were used
52:18 - people also used floats to create
52:21 - layouts in css
52:24 - flexbox is the default in react native
52:28 - and then
52:29 - there's a newer way that's css grid
52:32 - although you can combine css grid and
52:35 - flexbox
52:36 - so
52:38 - basically flexbox is a technique to
52:41 - position elements on a page uh and it's
52:44 - it's
52:45 - just css
52:47 - so if you check out flexbox
52:50 - there are a lot of cool tutorials online
52:52 - like gamified tutorials flexbox froggy
52:54 - is one that comes to mind that's kind of
52:56 - a nice gamified
52:59 - flexbox tutorial so you can go through
53:01 - that just to learn a little bit more the
53:03 - only thing i will say in react native
53:06 - for for mobile the
53:08 - the axis is flipped so
53:12 - if you know
53:13 - if you don't know anything about flexbox
53:14 - this is going to make sense but if you
53:16 - know a little bit about it just know the
53:17 - the axis is flipped so everything is
53:20 - usually like the opposite of what you
53:21 - think it would be
53:23 - um so by default on web
53:26 - i believe the flex direction is row
53:29 - the default flex direction on
53:32 - mobile if with react native is
53:35 - a column
53:38 - so i think that's way it's either that
53:39 - or the other way around but basically
53:41 - the flex direction is the opposite
53:44 - of what you'd be used to if you learned
53:46 - flexbox for web
53:51 - it's a little bit tricky to learn at
53:52 - first but once you learn it
53:54 - it's really nice uh for positioning
54:00 - um fur khan asks if someone can explain
54:03 - the difference between react and react
54:04 - native
54:05 - uh we got some some answers there as
54:07 - well so um
54:10 - mario says react native lets you build
54:12 - apps that can run on android ios and
54:15 - yeah that's it so like react
54:17 - is um a javascript library or framework
54:20 - depending on who you're talking to
54:22 - that
54:23 - allows you to build web apps
54:26 - react native allows you to build
54:29 - mobile apps
54:31 - uh it but it's expanded into more so you
54:34 - can build for
54:37 - more than just mobile
54:39 - with react native but basically like at
54:41 - its core what it was designed to do at
54:43 - first was to build android and ios apps
54:47 - using
54:49 - um
54:50 - using react
54:56 - uh always the legend says why not just
54:57 - write math problems on paper for the kid
54:59 - well that's how we started i actually
55:01 - like
55:02 - i created this game on a whiteboard with
55:04 - markers playing and then at some point i
55:07 - realized like hey
55:08 - like i could um
55:10 - make this a game like a
55:13 - a computer game right
55:17 - so
55:18 - i just kind of did it as a side project
55:21 - oh
55:24 - sorry
55:25 - i did it as a side project just to help
55:27 - me learn a long time ago
55:30 - but i found the project and ran it like
55:33 - a couple days ago and it just
55:35 - it just occurred to me like hey we could
55:37 - we could just redo this
55:39 - uh michael creole says no pomodoro yeah
55:42 - i did
55:42 - i just forgot to bring up the pomodoro
55:44 - clock so
55:45 - we'll we'll use it in future
55:48 - streams
55:50 - uh sabik says what course should i take
55:52 - in college to be a web developer
55:54 - i would say don't worry about it in
55:55 - college take whatever you want
55:58 - there are plenty of online courses a lot
56:00 - of them are free to learn how to be a
56:02 - web developer so
56:05 - go with that
56:07 - basically plan on learning web
56:09 - development
56:10 - on your own outside of
56:13 - what's offered in your your college
56:18 - fatima says hello from libya hey how's
56:20 - it going
56:21 - uh we have a hello from ghana
56:40 - we have hello from egypt nigeria
56:43 - india ukraine nepal awesome
56:53 - ivory coast
56:54 - new delhi
56:56 - australia
57:01 - uh
57:02 - saudi uh saudi arabia
57:05 - um gosh you guys says does javascript
57:08 - does javascript use the internet to read
57:10 - files uh
57:12 - or cpu
57:15 - um i'm
57:17 - i'm not 100 sure what you're asking
57:19 - there so like
57:21 - um when you're you're running javascript
57:23 - in your browser right like that's using
57:25 - your your cpu your ram you know
57:28 - everything like that so like the
57:29 - javascript files will come to you over
57:31 - the internet
57:33 - but
57:34 - what runs in your browser will
57:36 - use your cpu now like
57:40 - there could be some of that work
57:41 - happening server side so not on your cpu
57:44 - and then the results of that would be
57:46 - sent back to you
57:48 - all right so in a situation let's say
57:50 - where
57:52 - there's a lot of calculation or work
57:54 - that needs to be done maybe it would
57:55 - make sense to do that server side and
57:57 - just send back some sort of visual
57:59 - indication
58:01 - back all right but mostly like running
58:03 - javascript in the browser that that is
58:05 - actually running on your machine
58:11 - all right rados from bosnia hey how's it
58:15 - going
58:20 - hello from kenya from russia
58:24 - um
58:25 - what's your opinion about razer page's
58:27 - web app with uh net core uh actually um
58:33 - so i i just recently worked with a web
58:36 - app like that
58:39 - if your team
58:42 - is like heavy into dotnet
58:44 - and doesn't really know anything else i
58:47 - think that's definitely a way to go
58:50 - if you want like um
58:53 - a client side web app like a true
58:55 - progressive web app experience
58:58 - you probably can't get that with razer
59:01 - pages
59:03 - so
59:05 - you you are somewhat limited in that uh
59:08 - but if you just wanted like an mvc
59:10 - type of web app
59:12 - razer pages is a legitimate way
59:15 - uh i wouldn't go out of my way to learn
59:17 - it but if you already know
59:19 - net
59:21 - that's probably a the quickest way to
59:23 - get a web app up and running
59:32 - uh monica says uh you are too good thank
59:34 - you
59:35 - uh rasheed says you explain very well
59:37 - thanks i appreciate it uh dave asks if
59:40 - these shows are recorded yeah they're
59:41 - recorded it'll be available on the free
59:43 - code camp youtube channel shortly after
59:45 - the stream ends
59:51 - uh sabik asked the question earlier
59:53 - about what
59:55 - course to take in college to get a job
59:58 - so i had recommended you got to learn on
60:00 - your own uh sabik says i know but i want
60:03 - a degree to get a job well then uh do
60:05 - computer science then
60:07 - like if you know you want a job in web
60:09 - development
60:11 - computer science is probably going to
60:13 - look the most impressive
60:16 - uh
60:17 - for for that right like i mean my
60:20 - degrees in business
60:21 - uh but
60:23 - realistically like
60:25 - if i had a degree in computer science it
60:26 - would probably help me more in my career
60:30 - as a software engineer
60:41 - all right i'm going to skip through and
60:42 - find just some questions
60:45 - uh
60:48 - wait
60:49 - uh
60:50 - wahreru
60:51 - says uh why do you use windows instead
60:53 - of linux or mac
60:55 - i use mac at work for the most part i
60:58 - use linux on servers
61:00 - but
61:01 - i needed a
61:03 - machine that could handle streaming and
61:06 - it was a lot cheaper to go with a pc
61:08 - than a mac so that's why i end up doing
61:10 - a pc
61:11 - uh john hanson says jesse why no react
61:14 - hooks i so react hooks are not yet
61:16 - available for react native but the react
61:19 - native
61:20 - 0.5
61:22 - 9.0 release
61:25 - is going to come out soon and when that
61:27 - happens react hooks will be available so
61:30 - we will definitely update
61:32 - and switch to react hooks
61:34 - when that happens
61:43 - all right
61:45 - i'm gonna have to end soon because i'm
61:48 - gonna have i have a stand up
61:50 - for
61:51 - uh for work coming soon
61:54 - but let me try to get through these last
61:55 - few questions
62:01 - uh rados asks about doing a live session
62:04 - together
62:06 - um where writers can create a php api
62:08 - and i could implement interact app that
62:10 - actually sounds really cool
62:12 - yeah we could talk about that um
62:14 - rados if you don't already follow me on
62:16 - twitter
62:18 - follow me on twitter i think the link to
62:20 - my twitter account is in the description
62:23 - um
62:24 - if it's not then just click the link to
62:26 - my uh youtube channel and i have links
62:28 - to my twitter there
62:30 - so like add me on twitter and send me a
62:32 - dm
62:33 - about it and maybe we could try to work
62:34 - that out
62:36 - uh rabbitworks says have to head to work
62:38 - but i hope people can check out my live
62:40 - coding session this evening 5 p.m cst
62:44 - all right so check that out i'll see if
62:46 - hopefully if i can if i don't have a
62:48 - meeting or something then i can i can
62:49 - check it out as well
62:53 - and i'm going to show
62:55 - let's see
62:59 - let's see
63:04 - all right so uh thiago says uh does this
63:07 - mean we can create native apps and
63:09 - websites with the same almost base
63:12 - uh like ionic framework uh yeah yeah
63:16 - basically
63:33 - let's see
63:35 - pablo says do you recommend those
63:36 - beginner
63:37 - developer about react
63:39 - um i'm not so i'm i i
63:42 - think you're asking do i recommend react
63:44 - for beginning developers
63:47 - probably
63:48 - you don't want your very first thing to
63:50 - be jump into react first learn html css
63:53 - and some basic javascript before you go
63:56 - into react
63:59 - but like if if you know html css in
64:02 - basic javascript then for sure like i
64:04 - think react is
64:07 - a good it's easy to learn enough
64:11 - to make some basic web apps in
64:14 - um
64:15 - you know if you want to get really
64:16 - advanced that does take some time but
64:19 - yeah i think it's good for
64:22 - let's say the beginner who's just
64:25 - trying to get into their first framework
64:27 - after learning the basics
64:29 - uh akash says what are your opinions on
64:31 - mobx for state management i've never
64:33 - used mobx i've heard good things about
64:35 - it so
64:36 - you know i think it's definitely a good
64:38 - option
64:39 - although
64:40 - with the react context api
64:43 - uh i think it's
64:45 - less necessary to bring in a third party
64:48 - state management library
64:51 - uh powell says
64:54 - what's the difference
64:56 - uh between node.js express.js versus
64:59 - react to create a web app okay so
65:03 - react is just going to be your your
65:05 - front end of your app like your
65:07 - client-side stuff although it can run
65:09 - server-side but if you want to do
65:11 - anything server-side you need node.js so
65:14 - node.js is javascript running on a
65:17 - server
65:18 - now express is like a live a library
65:23 - that runs
65:25 - with node.js
65:27 - that makes it easier to do server things
65:30 - with node.js
65:32 - so
65:33 - you would use node.js on your server
65:36 - with express to make things easier
65:38 - and then on your client side you're
65:41 - going to use react
65:42 - you could potentially also render react
65:45 - server side as well
65:47 - all right for let's say for like search
65:49 - engine optimization purposes
65:51 - right but they it wouldn't be one versus
65:53 - the other it would be you'd use them
65:56 - together depending on your use case you
65:58 - might want to use them all together or
66:00 - just some of them right if you're
66:02 - building just an api you just need node
66:05 - and then probably express to help with
66:07 - that
66:08 - if you just want client-side you need
66:10 - only react but if you want like both
66:12 - together a client and server-side app if
66:15 - you're handling like form data and
66:16 - things like that then you're going to
66:18 - want to use them all together
66:21 - and on previous live streams if you go
66:23 - back and watch previous live streams
66:24 - we've done just that and used react node
66:27 - and express altogether
66:31 - michael says you need g fuel i'm
66:33 - guessing you said that right when i had
66:34 - that biggie on
66:39 - um
66:40 - game explorer says do you use solo learn
66:44 - uh i don't think i ever use solo learn
66:46 - i've heard about it but i i don't think
66:48 - i've ever used it myself
66:49 - uh we have a hello from georgia hey
66:52 - how's it going
66:54 - um
66:56 - anton says what's your opinion on web
66:59 - assembly
67:00 - uh i think web assembly is awesome and
67:03 - it's going to be very useful
67:05 - um
67:07 - i have not used it yet
67:09 - uh if you don't know webassembly is
67:11 - basically a way to use like other you
67:14 - can use other programming languages on
67:16 - on the web right normally like
67:18 - javascript is your only web programming
67:20 - language but uh it's a way to use
67:24 - without getting too into it like
67:26 - you could potentially use like let's say
67:29 - i don't know like c sharp
67:31 - on the web and things like that right so
67:35 - really cool it's going to present a lot
67:36 - of opportunities for other types of
67:38 - developers to get involved in the web
67:40 - and it's going to be a good opportunity
67:42 - for
67:43 - websites and web apps to be able to do
67:45 - more
67:46 - so i think it's cool
67:49 - um make me proud keeps asking react
67:51 - native for web uh
67:54 - yeah yeah so it's react native
67:57 - that runs on the web as a web app
68:09 - uh ramos says what language is good for
68:10 - web-based project
68:12 - javascript javascript is where it's at
68:14 - for the web
68:16 - [Music]
68:26 - cyberpunk says is this thing live or
68:28 - recorded it's live right now uh and then
68:30 - the recording will be available
68:32 - afterwards
68:37 - um
68:40 - let's see
68:42 - uh i think i've gotten all the questions
68:48 - okay cool uh so yeah i definitely have
68:50 - to go now i gotta get to work uh at my
68:53 - my day job as a software engineer for uh
68:55 - dick sporting goods um
68:58 - i'm actually working with react native
69:00 - web there so i'm gonna quit the react
69:02 - native web stuff here and go right back
69:04 - to my other project and use it again
69:07 - thank you all so much for watching i
69:08 - hope that i can start to do these live
69:10 - streams on a more regular basis now that
69:12 - i have my new
69:14 - computer set up
69:16 - so we have reliable
69:18 - a reliable way to stream uh i'm hoping
69:21 - that i can maybe on like wednesdays and
69:24 - fridays in in the morning in my time so
69:27 - right around the same time we did today
69:29 - do some live streams um if i have time
69:32 - maybe even on the weekends do some live
69:34 - streams but
69:36 - if i can get at least once a week and be
69:38 - consistent with that i'll be happy
69:40 - for now
69:42 - love to be able to do it more but um
69:45 - you know there's just
69:47 - with a new job and things going on it's
69:49 - just been tough uh to find time so
69:51 - anyway i really appreciate uh hanging
69:54 - out with you all
69:55 - and um
69:56 - i'm looking forward to the next stream
69:58 - uh hey feel free to message me you know
70:01 - you can follow me on twitter or
70:03 - instagram i'm pretty um active on those
70:06 - you can message me with any questions or
70:08 - anything you know check out the github
70:10 - repo
70:12 - put issues up there pull requests
70:13 - whatever you want um check out my
70:16 - youtube channel i go more in depth into
70:18 - a lot of things that i've used today and
70:20 - i talk more about it
70:23 - so yeah until next time have a great day
70:25 - have a great weekend i'll see you
70:38 - you

Cleaned transcript:

hey everybody welcome to live coding with jesse i'm jesse and today we're going to um today we're going to work with react native web um so i got a new setup if anybody saw the last live stream i did for free code cam technically uh it was just a disaster uh the audio was fine with the video caps freezing constantly so i'm gonna backtrack a little bit and go over some of the steps that we did last time that way you'll be able to see it as well as hear it and i'm still getting used to this new setup so i'm going to do try my best to keep track of what's going on with the stream and in terms of quality and then also the the chat so let me know now if you can see this if you can hear me if everything if everything looks good then we'll go ahead and get started i'm going to say hi to everybody in the chat hey um uh umberto says hey hey how's it going um yeah the time the time is weird so it is 8 a.m and my time zone which is eastern time so everybody's saying what time it is let's see uh rabbit works javascript says they do live streaming as well so that's awesome yeah um maybe i'll try to check that out if i if i can alright cool we got people from all over here um everybody's kind of shouting out their location that's awesome we got the last few argentina india poland um awesome okay so nepal really cool all right so here's what we're gonna do um i'm going to start out by uh just like installing um or starting like a create react app project and then we're going to just kind of switch it over to be to use react native web if you don't know about react native web i'll explain it briefly here i think i go i explain it more in the last stream so you can check that out this is project seven so if you check out uh the stream labeled project seven day one you can get more info but basically react native web is going to allow us to use react native so all the syntax is going to look like react native but we will be able to run that same code on the web in ios and android we could run it as a desktop app on windows linux or mac by using electron or something similar and then potentially you know react native does have the capability of running on other things as well for now we're just going to go with with those so the first thing we're going to design for the primary thing is as a web app i've decided to go the web app first route because i'm going to be able to display that while streaming easier than anything else we can run a simulator for like for mobile apps but it takes a lot more out kind of out of the computer in terms of like ram and cpu so i don't want to slow down the stream for that so at some point we're probably going to want to test this on mobile like we'll definitely do that but in terms of like our daytoday development we're going to develop um as if we were developing like a normal web app all right so we'll basically spend a lot of time in chrome and that's cool it gives us access to all the dev tools we normally would uh it's the development process is a lot easier then let's say like using the simulator or using expo and having like your device hooked up to the computer so i mean expo certainly makes that really easy um but definitely not as easy as just like a straight straight web app okay so uh rabbitworks says visor is nice yeah so i have used visor before so that's also nice but you just like you can't beat the ease of of the web app in in chrome uh we can come close but uh but for now we'll go with web app so uh first things first let me let me open this up and i'm just gonna we're gonna go to the react native web github repo so you all can check it out see see what it is you can read about it you know as we're streaming or later on i'm probably going to mess up on typing a lot because this is a new keyboard that i'm not really used to yet alright so this is react native web i'm gonna put the link to this in the chat right now and i see there's a lot of activity in the chat i'll try to keep up with that but about when we get to about the halfway point in the stream uh i'll maybe stop double check like what's going on in the chat and then at the very end of the stream i'll check the chat again so if you're asking questions or anything just hang in there for a little bit and i will uh i'll get to them soon okay so that link is in the uh the live chat and we're gonna go through here we go that's what i want the getting started guide so we are going to yeah we're going to go through this for create react app and this is what we did last time so we're just going to do it again and i'm not exactly sure what i want to do with this project yet um my thought is this uh i i years ago i made a game to help my oldest son learn math and i thought kind of like i could redo that as an app with react native web so maybe that's it i don't really have any other good ideas for what the project could be so let's let's do that so um let's go with create react app and make sure i actually have create react app on here this is a new computer so the reason the stream is working now and it wasn't working last time is because i bought a new pc for streaming um let's make sure yeah this should work all right bring it back up and let's name it um actually i'm gonna name it like this uh battle math all lower case all one word that's gonna be a bigger deal later on um but there's some rules about what projects can be named that are different depending on the platform so if we just stick with all lowercase altogether no hyphens that should cover every case we should be fine so this is doing the create react app you notice that was way faster than than the last time we tried to do this um so much faster i tried to do it on a 2015 macbook pro last time and you know that's a good machine but it just can't handle streaming and doing stuff like this at the same time all right so this should only take a few more seconds and then we'll be able to go back and add in uh react native uh web support which let's see basically what we're gonna need to do is add in uh react native web because we already have the other stuff oops there we go okay cool so let's cd into our battle math directory i don't know i didn't put this i'll have to i'll move this at some point but i actually put this in the wrong directory yeah shoot all right it's okay for now i i always like to put things in my projects directory um i didn't realize i wasn't already in projects but we're in here um and now let's just open this we're going to open this all in code i'm going to get rid of this one and just to show we have we have our our basic file structure that you that you normally get when you use create react app uh here's our package json right just all normal stuff so far and then now at this point let's add in uh we'll do yarn add react native web to bring in that package let's show our terminal we are okay if you want to know how i set up any of this stuff like on on windows i did a couple of tutorial videos on my youtube channel the link to my youtube channel i think is in the description of this video so you can check that out i show you how to set up um node and git and vs code uh on um on windows so that's this should be like just the last like three three videos or something on my on my channel all right so we have react native web here we can see it's now in our package json and we're gonna need to let's see we're gonna need to add some stuff in here so you can see hopefully let me make this just a little bigger and make sure everybody can see it after we we do this i'm going to go back to the chat okay so we're not doing a custom webpack configuration right because create react app is already doing that for us okay um yeah we're not gonna worry about jest or flow for right now um we're gonna have to do babel we may not have to do babel right now though we'll see we might be able to hold off okay yeah we might be able to hold off on it but basically what we can do to test and we'll see if if i can get away with not configuring anything else at this point then that'll be great just to keep the stream moving along um what we're going to do to test this out is go into our our app dot js file so you see this is if you're not familiar with react or react native right like everything is a javascript file and we use this syntax that's called jsx that looks kind of like html but it's it's not um kind of behind the scenes it's actually all javascript functions um so we are going to come in here and get rid of most basically all of this stuff right we don't want any of this stuff we're going to do our own thing here and so we're getting rid of logo uh for right now i guess we can keep the app.css let me let me go back here i think we can get a just some boilerplate here um that's what we're doing no i just want some like basic boilerplate um all right let's check out the code sandblocks template they have just so we can grab it uh grab their boilerplate i just want to be able to show you this this actually running first um so let me check out the package json for a second here okay all right we're good the only thing we didn't bring over uh react art which we may need to at some point but i don't think we'll need to for now so uh let's grab i'm gonna just grab this real quick so i don't have to type it all out and now we'll go back here okay and i actually don't want i don't think i need this right now uh we'll do text view and then we'll use style sheet as well so what i'm going to do in here is put in a view to start with right and then inside the view i'm going to add text let me make this bigger i want to make sure everyone can see all right hopefully that's easier to see um so we're gonna add in text and then inside the text you know we'll just let's put the title right we're gonna say this battle math okay and um if you didn't catch it earlier like i built a game for my son when he was learning basic math we're going to try to recreate that game using react native web and hopefully make it better as well and then maybe my other kids can can use it to uh to learn math okay so we have that and then um we can add our style sheet in easiest way is just to copy and paste some of the boilerplate for this so let's grab this and then go back over here we're gonna put in our styles stuff here let's get rid of basically a bunch of this stuff we don't really need any of that stuff uh but our main view we're gonna say styles uh i'm sorry style equals and we're gonna say styles dot i'm gonna say root since this is basically our root um component at least technically it is uh i guess for our purposes here um so let's go root and we'll just give it a uh let's see how i want to do this flex um i'm trying to i want to center the text in the middle of the page so let's go with um justify content center and align items ah this keyboard sorry it's a new keyboard and we're going to go center as well on the root and let's just see if that works now before we go any further with our styling now by default react native uses flexbox so that's why we're using normally you use this with flexbox i don't need to say that this that we're using flexbox because that's that's the default all right now let's get another terminal going um we can see back in our package json that if we want to run this if we want to test this we can use let's actually let's double check that now i think about it uh package json react scripts yep we can just use react scripts okay so if we do yarn start we'll get a nice little test version here just like a normal create react app app so we're gonna hit yarn start see if everything works whoa node server what allow access i guess it's the first time i try to do that oops and it looks like i do need that that um other package that i neglected so let's do everybody just saw all my emails um pretty much don't have anything crazy in there so i'm not worried about that okay so let's yarn add um what was that called react art i think that's what it was called let's double check yep react to art and get that in there and then it should work all right and let's restart that if you're ever running a process in the command line and you want to quit you can just press ctrl c and that usually does the trick so that's what i just did right there just quit it and restart it yay check it out all right so i don't know if you can see that but it says battle math really really small up here okay now notice it's not vertically centered so um i'm guessing that's because our container uh has no height right so this is our our root our root has no height um so we need to give that height of like full width if we really want that to be centered but basically the the important thing here the cool thing here is with very little work we've just used react native syntax right these views and text we've used that you can see we're we're pulling it from react native right which we we get this by bringing in react native web okay we didn't actually bring in react native or by by itself in our package json but via react native web we have access to all these react native primitives and we've just used them here and then we have them running in chrome and if you check it out i'm try to make this as big as i can why is this not dark you can see this computer is i've done almost nothing with it yet because it doesn't have my normal settings but you can see like i'll click on this uh this div here that says battle math in the text it's it's a div right uh so those react native primitives have been converted into dom primitives right so we have divs instead of view and text it's now been transformed into divs and then those styles that through the um react native uh style sheet those styles have now been added to these through like all these classes right um but like let's let's check on our root component here and see uh where's our there we go actually this is gonna be blocked by my my picture here so you probably won't be able to see it um let's see phone display oops all right so we have our okay yeah you can see that justify content center align item center so you can see those are are actually on that that div all right i'm going to go back to the chat right now and i'm going to try to answer as much as i can from the chat in the next few minutes before we go back and maybe do a little bit more with this project maybe we'll actually push this to github too before we end so that the the code is available for you to check out uh i'm gonna have to scroll up quite a bit there's a lot in the chat uh let's just i'm gonna try to get to as much as i can and let me give myself uh a time limit here of about five minutes okay uh we had a couple of people asked if this was for beginners i would say yes it definitely can be for beginners i'll do my best to explain things and certainly ask as many questions as you want it there probably be some things that are going to be hard to understand if you're a beginner but you know just check it out and see if it's too much that you don't understand you know that's that's fine ask a lot of questions i i want to be open to beginners but i also you know i want to build out a project so some of the stuff is going to be advanced let's see someone asks if i read comments i do read comments uh let's see a lot of people are just saying hey so i'm gonna say hi hi to everybody oh efforts for says saying hi from south africa hey how's it going oh alex from argentina minnesota hey so rabbit works you're in minnesota i'm going to be speaking at ndc minnesota this year so if you end up going to that conference or around there uh let me know benjamin from kenya says hi newton from nairobi awesome got mario from houston kamal from uganda amid from singapore you have seen from turkey wow we have people from all over say it's 9pm in china liberia bangladesh wow that's really cool it's so cool um goshu guide says i want to ask you can you read from files on javascript as fast as c plus plus to be totally honest with you i'm i don't have the answer to that so yeah i just don't know if i had to guess i would say c plus plus would be faster uh but i really don't know and by faster when we're talking about the different languages it's usually like a few milliseconds of difference fractions of milliseconds right so um in terms of performance like only in very few situations would that ever really be a big deal for performance but that's a good question does anybody actually know any like real numbers on that in terms of um you know is is javascript or c plus plus more performant yeah east africa india brazil philippines okay korea japan uh rydo says could you make an api calling app just for getting tweets or movies um yeah i mean that's certainly possible are you asking me if it's possible or are you asking me if i could build it like right now in the stream uh we definitely could do something like that on the stream probably not for this project but for a future project um ramune says nice video thank you i appreciate that the fellow from amsterdam hey how's it going okay so rabbitworks says talk about what you're using uh npx versus npm okay i'm going to be 100 honest with you i don't know that much about npx okay the only time i ever use npx is when i'm installing create react app okay so at some point the official docs for create react app started recommending using npx to install new apps with create react app so it wasn't always like that like you can even see there's a link to the instructions for older versions but this seems to be the quickest and recommended way to do it so that's why i do it that way so i've never really taken the time to to look into it um do you see there are alternatives right we could do npm init uh oops you want to create rig we do yarn so uh there's definitely uh multiple ways of of doing this but npx is kind of a newer thing uh if anybody else has any experience with that like more experience technically with that then uh please let me know uh hector says hello from columbia hey how's it going uh limitless says what is npx why not use npm okay so i mean basically the same same thing the only reason i'm using npx instead of npm is because that's the recommended way to use create react app uh rabbitworks says mpx gives you the ability to run package scripts and stuff without having to install them uh as as in create react app all right that's a great answer so like um if you notice in the beginning of stream we never actually installed create react app we just we just ran this right and this was a new setup on a new machine that i've never really built anything on yet so i i never installed it even before the stream so um yeah so i would say that alone makes using npx worth it like taking away that step of having to install something else and thanks rabbitworks mr smith asks a question i'm not i'm not exactly sure what your question means there may be maybe it's a translation thing like i yeah so mr smith uh if you get it like ask your question again maybe like explain it then i'll answer it otherwise i'm not exactly sure what you're trying to ask all right michael creole says if you're using npx you are sure to get the latest version all right so that's that's awesome uh ratto says not scripted yeah this is not not scripted at all um abby says how long have you been practicing um let me think uh like six years so i've been a developer for like six years i think looks like there's a conversation going on in another language um so i don't know if y'all are just talking to each other or whatever um if we have time i can go back and use google translate to see what's going on but i want to get at least a little bit more done with this with this app so i'm going to skip over it for now i'm almost to the bottom of the chat and then we'll go back uh and do a little bit more code uh limitless asking about what it what are the bundlers uh rabbit works says webpack yeah so webpack would be your almost always when you're using react you will also use webpack as your bundler i've seen people use other stuff with react but i've never used anything other than webpack okay rabbit works is recommending using react snippets to be able to generate component boilerplate right away that's that's a really that's good advice uh and then react snippets would is a um like a package uh extension for visual studio code they probably have the same stuff for other editors as well uh i'm not sure how to pronounce the name but the question is uh what's the difference between create react app and react native web okay so create react app is just a tool that lets you build out like the the basics the bare bones for a react uh app really quickly right so we just ran create react app and then we got we got all these files and stuff and folders so it automatically created a lot of the stuff for us that would have taken a while to do on our own but it you need you need it for every project it's almost always the same for every project so that just handles it for us react native web it basic it just allows you to use react native syntax to build web apps so that that would be the the difference um hopefully that answers your question let me know if it didn't edward asks about what what is react native web you code in browser and then build for mobile yeah you you definitely can do it that way but um basically react like i said rack native web just lets you take the react native primitives and turn them into dom primitives so they can run on the web ass why did i use root um to be honest with you i kind of like the idea of using whatever the outermost container is of a component and just saying root here i don't remember where i first saw that but i saw somebody else doing that and thought like okay that's that's not a bad idea uh it saves me from having to come up with names for stuff um and then i i know like whatever's in this route those this applies to the outermost container in every component this is just the outermost container for me so that's that's what i use this for let's see uh are there any examples of react native website uh i believe twitter lite is is used uh they use react native web for twitter lite and they use react native web for um one of the major league soccer websites so just off top my head that's that's it so i'm going to go back to the code right now i know i didn't get through all the comments but i'll get back to the comments uh in about i don't know 10 15 minutes something like that all right cool so let's get back in here and do just a little bit more um okay so here's the basic idea of what this this app is gonna do in terms of just like very very basic uh what we're gonna do is uh the app is going to have a text input and a button to submit it needs that on like every screen it's going to generate a math problem randomly right and then when you input the value in the text input it's it will check to make sure that that's the correct answer right and that's how the game will progress what will happen is on the screen will appear a certain amount of like enemies if you get it right then one of the enemies disappears if you get the question wrong a new enemy appears so you can you can get as many questions wrong as you want without the game like saying game over but it's just going to take even longer for you to get past it so basically to get past the level you will have had to like master that type of of math problem right we're just going to start out with addition it's going to be very basic it's going to be geared towards young children so we're not going to do anything like crazy in terms of graphics definitely nothing super violent or anything like that we want to keep it like appropriate for for young young children okay so for now i'm not going to worry about graphics everything is just going to be a bit of text but we can build this out so react native comes with a text input already built in so we're bit we're going to build stuff out at first just in app.js and as it gets bigger we'll break stuff off into separate components okay so let's put this text input here and let's go to the react native documentation react native text input react native docs are great you can see all the info you need so we'll just take this let's just copy and paste this this basic example that they have so that we can kind of get started as quickly as possible let's throw this in here and you know what let's grab their their state as well ah no i'm not going to let's let's create our own state right because i don't we don't need to use the constructor right we'll grab uh what do they call it text okay so they called their state text text and at first let's just leave this blank for now so what's happening here is we have our text input right they've they've given it some style we'll just keep that for now and then on change text so this is a little bit different than normal react right we have this on change text and that's every time the user types in that that input this is going to be called we got a little arrow function here so we're passing in the actual text the value of that text input right and then we're running this which is we're just setting the state of text to text right since the value we're passing in and the key have the same name we can just do it like this and then the value of the input is actually the the state right so it's kind of a circular you type in there it changes the state and then a change in state causes a rerender which then changes the value that's what's called a controlled input controlled component okay there are other ways to do this but this is the like standard way to to handle an input in react all right so let's save that and just just verify that it works oops get rid of that one okay cool so let's type something hey it works and we can go in here to react and let's check our states see where our state for this component is there we go so our state for our app component here is will change as we type see all right cool so that is working so let's go to uh back here to our react documentation and let's go to button and we're gonna add a button so react native comes with this button like prebuilt if you use button it will automatically style it differently depending on the platform right so according to the docs like we're just targeting either android or ios right and this will give it an android style and this will give it an ios style right we're going to stick with that for now we may want to put our own styles on the button if that's the case we'll we'll stop using button and instead we'll use touchable opacity which is the primitive that button is built on right and that lets us do a lot more in terms of styling right but for now just to get this the functionality you know going quickly we're just going to do this so i'm going to copy their example and put it in here for now this button and we've got to make sure we're pull actually pulling button in button and for now the we're not on press we're not going to do anything because we don't we don't have anything set up so we're just going to console log oops console.log and this states text right okay and let's change this from learn more to submit okay oops now let's check our app hey we got a big purple submit button let's type something and then hit that and that's weird on presses mark just required a button so i use undefined all right so we've got an error let's check that out okay so maybe let me just put that in the arrow function see if that does anything there we go okay so i i should have put it in an arrow function but basically we can see we type we hit submit and we can get the value in uh in the console right so if you're not like familiar with react at all and you've done some web development before you know this is kind of really different than you would normally handle text inputs like um it is a little bit different instead of grabbing values directly from the text input we're grabbing everything from state okay it it may seem a little weird on this scale but uh after you get used to it and you start having more complex uh like use cases you you see like actually saving the value of everything in state ends up being a lot more easy to deal with than needing to grab values from the dom from multiple inputs so it's it is a lot nicer uh it it may not seem like it with just one text input but when you start to get more and more on a page this this does end up being a much easier way of handling uh form inputs okay let me check the time all right we're running i only want the stream to last for about an hour so uh we're we're getting down to about like 10 minutes left let me check the chat just to see how much is in there uh and then yeah thanks there's a lot of chat how about let's let's go ahead and uh create a git repository for this and push this to github uh and then i'll go back to the the questions so let's do get status so this is already like just started out as a git repository when we use create react app it does that so we've changed our package json remember when we added some packages we've changed our app.js and then the yarn lock file comes with us using yarn so that will change automatically every time we update our packages so i'm going to do a git commit with the m flag or i'm sorry with with the am flags we're gonna add an atom and commit and add a message all in one line and let's just say i'm just gonna say init for now because this will be our first commit and yeah that's fine okay so locally we have this repository but we don't actually have it anywhere on github so let's go to github oops if you don't already have a github account i highly recommend getting a github account if if you'd like to become a developer of any sort um you know just sign up as long as you have it that's good and then you know as we go through this and you see the process of committing things to github you'll you'll kind of get a better understanding of what you would use it for so i'm going to create a new repository right now going to name it battle math okay i'm going to skip the description for now i'm going to keep it public i don't want to initialize it with a readme a get ignore or a license okay we can add those in later now i'm going to use the ssh version because i've already set up my ssh keys if you want to know how to do that check out the video about setting up get on on my personal youtube channel links in the description but since i'm doing that i can skip down here we're pushing an existing repository from the command line so i'm going to copy that i'm going to take it one step at a time here we're going to paste that okay so this is we're adding our remote right which is going to be the the ssh path to that repository in github and then we're going to push to that remote so we're pushing our master branch right to that remote great now if we go back here to github and we check our repository you could see hey here it is here's here's all our our files right um if we go to the source in our app.js you can see hey look there's our our title um battle math and here's our text input and our button right so now this is on github and i will give you the url in the chat right now and then from now on i will uh if i remember i'll put this url in the description to the video so everyone you can you can check it out you could submit a pull request if you want um you'll you'll always be able to see what's going on in this project from there so i'm going to scroll up right now and try to get through as many questions as i can in the next like seven minutes or so and then i gotta end this stream and do my my real job uh as a software engineer um i'm trying to i forgot to take note of where i left off at so it might take me a second to figure out where i left off all right i think i found it um always the legend said mission failed we'll get him next time i do not know what that was referring to so not sure what's going on limitless says keep going perfect explain all right thanks um limitless asks if i can talk more about flexbox for a bit okay flexbox is a newer thing in css that allows you to position elements on on the page of of a website or a web app so traditionally this has been done in different ways at one point tables were used people also used floats to create layouts in css flexbox is the default in react native and then there's a newer way that's css grid although you can combine css grid and flexbox so basically flexbox is a technique to position elements on a page uh and it's it's just css so if you check out flexbox there are a lot of cool tutorials online like gamified tutorials flexbox froggy is one that comes to mind that's kind of a nice gamified flexbox tutorial so you can go through that just to learn a little bit more the only thing i will say in react native for for mobile the the axis is flipped so if you know if you don't know anything about flexbox this is going to make sense but if you know a little bit about it just know the the axis is flipped so everything is usually like the opposite of what you think it would be um so by default on web i believe the flex direction is row the default flex direction on mobile if with react native is a column so i think that's way it's either that or the other way around but basically the flex direction is the opposite of what you'd be used to if you learned flexbox for web it's a little bit tricky to learn at first but once you learn it it's really nice uh for positioning um fur khan asks if someone can explain the difference between react and react native uh we got some some answers there as well so um mario says react native lets you build apps that can run on android ios and yeah that's it so like react is um a javascript library or framework depending on who you're talking to that allows you to build web apps react native allows you to build mobile apps uh it but it's expanded into more so you can build for more than just mobile with react native but basically like at its core what it was designed to do at first was to build android and ios apps using um using react uh always the legend says why not just write math problems on paper for the kid well that's how we started i actually like i created this game on a whiteboard with markers playing and then at some point i realized like hey like i could um make this a game like a a computer game right so i just kind of did it as a side project oh sorry i did it as a side project just to help me learn a long time ago but i found the project and ran it like a couple days ago and it just it just occurred to me like hey we could we could just redo this uh michael creole says no pomodoro yeah i did i just forgot to bring up the pomodoro clock so we'll we'll use it in future streams uh sabik says what course should i take in college to be a web developer i would say don't worry about it in college take whatever you want there are plenty of online courses a lot of them are free to learn how to be a web developer so go with that basically plan on learning web development on your own outside of what's offered in your your college fatima says hello from libya hey how's it going uh we have a hello from ghana we have hello from egypt nigeria india ukraine nepal awesome ivory coast new delhi australia uh saudi uh saudi arabia um gosh you guys says does javascript does javascript use the internet to read files uh or cpu um i'm i'm not 100 sure what you're asking there so like um when you're you're running javascript in your browser right like that's using your your cpu your ram you know everything like that so like the javascript files will come to you over the internet but what runs in your browser will use your cpu now like there could be some of that work happening server side so not on your cpu and then the results of that would be sent back to you all right so in a situation let's say where there's a lot of calculation or work that needs to be done maybe it would make sense to do that server side and just send back some sort of visual indication back all right but mostly like running javascript in the browser that that is actually running on your machine all right rados from bosnia hey how's it going hello from kenya from russia um what's your opinion about razer page's web app with uh net core uh actually um so i i just recently worked with a web app like that if your team is like heavy into dotnet and doesn't really know anything else i think that's definitely a way to go if you want like um a client side web app like a true progressive web app experience you probably can't get that with razer pages so you you are somewhat limited in that uh but if you just wanted like an mvc type of web app razer pages is a legitimate way uh i wouldn't go out of my way to learn it but if you already know net that's probably a the quickest way to get a web app up and running uh monica says uh you are too good thank you uh rasheed says you explain very well thanks i appreciate it uh dave asks if these shows are recorded yeah they're recorded it'll be available on the free code camp youtube channel shortly after the stream ends uh sabik asked the question earlier about what course to take in college to get a job so i had recommended you got to learn on your own uh sabik says i know but i want a degree to get a job well then uh do computer science then like if you know you want a job in web development computer science is probably going to look the most impressive uh for for that right like i mean my degrees in business uh but realistically like if i had a degree in computer science it would probably help me more in my career as a software engineer all right i'm going to skip through and find just some questions uh wait uh wahreru says uh why do you use windows instead of linux or mac i use mac at work for the most part i use linux on servers but i needed a machine that could handle streaming and it was a lot cheaper to go with a pc than a mac so that's why i end up doing a pc uh john hanson says jesse why no react hooks i so react hooks are not yet available for react native but the react native 0.5 9.0 release is going to come out soon and when that happens react hooks will be available so we will definitely update and switch to react hooks when that happens all right i'm gonna have to end soon because i'm gonna have i have a stand up for uh for work coming soon but let me try to get through these last few questions uh rados asks about doing a live session together um where writers can create a php api and i could implement interact app that actually sounds really cool yeah we could talk about that um rados if you don't already follow me on twitter follow me on twitter i think the link to my twitter account is in the description um if it's not then just click the link to my uh youtube channel and i have links to my twitter there so like add me on twitter and send me a dm about it and maybe we could try to work that out uh rabbitworks says have to head to work but i hope people can check out my live coding session this evening 5 p.m cst all right so check that out i'll see if hopefully if i can if i don't have a meeting or something then i can i can check it out as well and i'm going to show let's see let's see all right so uh thiago says uh does this mean we can create native apps and websites with the same almost base uh like ionic framework uh yeah yeah basically let's see pablo says do you recommend those beginner developer about react um i'm not so i'm i i think you're asking do i recommend react for beginning developers probably you don't want your very first thing to be jump into react first learn html css and some basic javascript before you go into react but like if if you know html css in basic javascript then for sure like i think react is a good it's easy to learn enough to make some basic web apps in um you know if you want to get really advanced that does take some time but yeah i think it's good for let's say the beginner who's just trying to get into their first framework after learning the basics uh akash says what are your opinions on mobx for state management i've never used mobx i've heard good things about it so you know i think it's definitely a good option although with the react context api uh i think it's less necessary to bring in a third party state management library uh powell says what's the difference uh between node.js express.js versus react to create a web app okay so react is just going to be your your front end of your app like your clientside stuff although it can run serverside but if you want to do anything serverside you need node.js so node.js is javascript running on a server now express is like a live a library that runs with node.js that makes it easier to do server things with node.js so you would use node.js on your server with express to make things easier and then on your client side you're going to use react you could potentially also render react server side as well all right for let's say for like search engine optimization purposes right but they it wouldn't be one versus the other it would be you'd use them together depending on your use case you might want to use them all together or just some of them right if you're building just an api you just need node and then probably express to help with that if you just want clientside you need only react but if you want like both together a client and serverside app if you're handling like form data and things like that then you're going to want to use them all together and on previous live streams if you go back and watch previous live streams we've done just that and used react node and express altogether michael says you need g fuel i'm guessing you said that right when i had that biggie on um game explorer says do you use solo learn uh i don't think i ever use solo learn i've heard about it but i i don't think i've ever used it myself uh we have a hello from georgia hey how's it going um anton says what's your opinion on web assembly uh i think web assembly is awesome and it's going to be very useful um i have not used it yet uh if you don't know webassembly is basically a way to use like other you can use other programming languages on on the web right normally like javascript is your only web programming language but uh it's a way to use without getting too into it like you could potentially use like let's say i don't know like c sharp on the web and things like that right so really cool it's going to present a lot of opportunities for other types of developers to get involved in the web and it's going to be a good opportunity for websites and web apps to be able to do more so i think it's cool um make me proud keeps asking react native for web uh yeah yeah so it's react native that runs on the web as a web app uh ramos says what language is good for webbased project javascript javascript is where it's at for the web cyberpunk says is this thing live or recorded it's live right now uh and then the recording will be available afterwards um let's see uh i think i've gotten all the questions okay cool uh so yeah i definitely have to go now i gotta get to work uh at my my day job as a software engineer for uh dick sporting goods um i'm actually working with react native web there so i'm gonna quit the react native web stuff here and go right back to my other project and use it again thank you all so much for watching i hope that i can start to do these live streams on a more regular basis now that i have my new computer set up so we have reliable a reliable way to stream uh i'm hoping that i can maybe on like wednesdays and fridays in in the morning in my time so right around the same time we did today do some live streams um if i have time maybe even on the weekends do some live streams but if i can get at least once a week and be consistent with that i'll be happy for now love to be able to do it more but um you know there's just with a new job and things going on it's just been tough uh to find time so anyway i really appreciate uh hanging out with you all and um i'm looking forward to the next stream uh hey feel free to message me you know you can follow me on twitter or instagram i'm pretty um active on those you can message me with any questions or anything you know check out the github repo put issues up there pull requests whatever you want um check out my youtube channel i go more in depth into a lot of things that i've used today and i talk more about it so yeah until next time have a great day have a great weekend i'll see you you
