With timestamps:

00:05 - hey everybody welcome to live coding
00:07 - with jesse i'm jesse and uh today we're
00:10 - gonna do two things
00:12 - number one
00:13 - we're going to
00:15 - put in some sort of desktop notification
00:20 - whenever you lose focus for this app and
00:23 - number two we're gonna deploy this react
00:25 - native project as a web app and there's
00:28 - a couple different ways we could deploy
00:30 - it
00:31 - i think we're going to go with github
00:32 - pages
00:34 - that way anybody that checks out the
00:35 - github repo can also easily get to
00:38 - the
00:39 - uh the demo uh of this
00:42 - so there's a ton of stuff in the live
00:45 - chat now
00:47 - i tried to uh glance through as much as
00:49 - possible
00:50 - uh just to see what people are asking
00:53 - it seems like uh a lot of you are just
00:55 - kind of talking in the chat that's
00:56 - awesome a lot of people saying hi so hey
00:58 - what's up uh but i did have um
01:01 - somebody asking about part two of this
01:03 - series
01:05 - part two is has been deleted it is
01:07 - definitely uh i believe it's my fault
01:10 - that is deleted i'm sorry about that i'm
01:11 - gonna redo part two
01:14 - so that will be available
01:17 - at some point uh but for now just skip
01:20 - to part three uh and
01:23 - hopefully there's not too much that you
01:24 - missed uh from part two but i'm
01:26 - definitely going to try to go back look
01:28 - at the uh what i did
01:30 - between
01:31 - part one and part three and then redo
01:34 - that probably as a live stream
01:36 - to try to make it this like as similar
01:40 - to the original as possible
01:42 - but um just as a quick intro
01:45 - for
01:46 - anybody that's joining for the first
01:49 - time or
01:50 - you know maybe hasn't seen all the
01:53 - videos in this series this is live
01:55 - coding with jesse so i code
01:58 - mostly react native projects now i've
02:00 - done other things in the past
02:02 - and i don't rehearse beforehand
02:04 - the goal is just to see
02:07 - a software engineer
02:08 - coding
02:10 - without rehearsing anything all the
02:12 - mistakes included try to debug as we go
02:16 - and try to be as realistic as possible
02:18 - with what my normal
02:20 - coding experiences is like
02:23 - i do
02:24 - have a little bit of a structure to this
02:27 - so i'm going to set a 25 minute pomodoro
02:29 - timer soon
02:30 - and then i'm going to code for 25
02:32 - minutes and then i'm going to take a
02:33 - little break and answer questions
02:35 - so if you're asking a question in the
02:37 - chat and it seems like i'm ignoring you
02:38 - just hang on for a little bit longer and
02:41 - once my timer goes off i'm going to try
02:42 - to get to all the questions
02:45 - now for this particular app
02:48 - if you want to know like what we're
02:50 - doing probably go back to the first
02:54 - uh in this series so this is part eight
02:56 - of
02:57 - the series on uh building a brain
03:00 - computer app i do a an overview in part
03:03 - one so the summary is basically i'm
03:06 - taking this brain computer device which
03:08 - i'm going to put on in a second
03:10 - this is the neurocity notion it's it's a
03:13 - pretty new uh and this has the parts
03:16 - inside of it like you would normally see
03:17 - on a cell phone
03:19 - and basically what it does is it reads
03:21 - your brain waves
03:22 - and
03:24 - sends some data
03:25 - in this case to a web app that we've
03:27 - created well actually it's a mobile and
03:29 - web app that we've created with react
03:32 - native
03:33 - now you can get a lot of different data
03:35 - but in particular the data that i'm
03:37 - using for this app is data on focus
03:40 - so the goal of the app is just to let
03:42 - you know when you've lost focus
03:45 - so i'm gonna put this on
03:47 - and you can see on the screen that
03:50 - it's measuring my focus so it probably
03:53 - needs a second to get
03:57 - get ready
04:02 - there we go so i got a little bit a
04:03 - little bit of focus going on here you
04:05 - see sometimes i'm losing it um
04:09 - which i imagine while i'm trying to talk
04:10 - and live stream i probably won't be
04:12 - super focused but right now
04:16 - if we were on a phone
04:18 - we would get a vibration and the color
04:20 - of the screen would change when i lose
04:22 - focus but we can't vibrate on the web
04:24 - right so we need to add something into
04:26 - the web
04:27 - and i'm thinking maybe some sort of
04:29 - notification
04:30 - potentially a sound
04:32 - uh
04:33 - that's that's the plan right now so
04:39 - let's check out in our app here and you
04:42 - can see this the link to the github repo
04:44 - is in the description
04:46 - of the video so if you want to check out
04:47 - the code and follow along everyone you
04:49 - know feel free to do that i've kept
04:51 - everything pretty simple in one file
04:53 - app.tsx is where everything's going to
04:54 - be happening
04:56 - a little bit later on we're going to go
04:57 - into the package.json file as well
05:00 - and add a few things but for right now
05:02 - we're just going to step in the stick in
05:04 - this app.tsx file
05:07 - and we need to find out where we're
05:11 - setting the
05:12 - the current notifications at
05:15 - for mobile which is the
05:17 - the vibration so let's go through here
05:21 - and just check out some of our functions
05:30 - there we go
05:31 - here's where we're doing the vibration
05:33 - so this is where we want to do this as
05:35 - well for our notification
05:38 - so we're going to need to
05:41 - get some code to do this
05:44 - so figure we'll uh we'll look that up
05:46 - there is a
05:49 - there is an app already that i use it's
05:51 - my pomodoro timer app
05:54 - and it's called pompom and it was built
05:57 - by
05:58 - someone that used to watch the live
05:59 - stream all the time
06:01 - his name is harshit so let's go to his
06:03 - github repo and see how he's done it in
06:05 - his app and see if we can borrow a
06:08 - little bit from his app
06:10 - for our app
06:11 - so let me see if
06:19 - let's see if that's the name of his repo
06:24 - looks like there's a lot of repos like
06:25 - that so let's just go to a harsh it's
06:27 - repo then we'll just get a good hub
06:31 - and he's pretty active so he should
06:32 - actually be right in my activity there
06:34 - we go
06:39 - and
06:40 - let's check out his repositories
06:45 - and type
06:46 - oops let's do language we're going to
06:48 - pick javascript it looks like all this
06:50 - stuff is javascript so let's see if we
06:52 - can find it
06:54 - palm does he not have a repo for it um
07:01 - oh no maybe he doesn't have it
07:03 - uh
07:05 - timer
07:06 - no
07:08 - i was hoping he'd have the code for it
07:10 - but maybe he doesn't have the code for
07:11 - it
07:16 - all right then i guess we'll just have
07:17 - to look it up
07:20 - and go through quickly just to see
07:23 - if he has it
07:25 - and it's just named something else but
07:28 - all
07:30 - yeah that's going back
07:34 - kind of far i don't see it so
07:37 - let's just look it up then uh so show
07:44 - notification from web
07:48 - so
07:49 - mdn is a great resource mozilla
07:51 - developer network and we're going to use
07:53 - the notifications api
07:56 - so let's see how we do it we definitely
07:58 - need permission
08:00 - uh and
08:03 - so i guess we're gonna have to request
08:05 - permission
08:07 - and then
08:09 - let's see
08:10 - oh cool there's a little code
08:16 - yeah let's grab
08:18 - let's just grab this code for now
08:20 - and then modify it for what we need
08:28 - so
08:30 - let's throw it in here
08:36 - and we can kind of read through this and
08:38 - see what's happening here
08:40 - all right so we need to check that's a
08:42 - good check see if browser supports
08:44 - notifications
08:46 - and
08:53 - oh see if i don't really want to alert
08:59 - so let's get rid of the alert
09:04 - what we're going to do is instead move
09:06 - all of this into the if statement
09:08 - so we're only even going to attempt this
09:11 - if
09:12 - the browser supports notifications
09:15 - let's get rid of this
09:17 - else
09:24 - so we're gonna say if there are
09:26 - notifications
09:34 - so now we're going to say
09:36 - so if the browser does support
09:38 - notifications
09:42 - we're going to check to see if
09:43 - permission has already been granted
09:45 - okay so if it has been granted
09:50 - then we'll do something here
09:53 - otherwise we need to ask
09:57 - cool
09:58 - and then not only that but we also need
10:00 - to check to see if the window object
10:02 - even exists right because if we're not
10:03 - on web this window object doesn't exist
10:06 - that's going to throw an error
10:07 - so
10:08 - react native gives us an easy way to
10:10 - check for this which we're going to do
10:12 - in just a minute but i'm going to change
10:13 - this up to an arrow function just to
10:15 - match the rest of the app
10:22 - and i'm going to say this notification
10:24 - init is what i'm going to call it
10:26 - and
10:32 - we're gonna run this
10:36 - only if
10:38 - we are
10:39 - uh in
10:41 - in the web so let's go up here to where
10:43 - we import react native
10:47 - and we're going to import platform
10:51 - so platform
10:53 - is going to let us know
10:55 - if we're on the web or not
10:59 - so we're gonna use
11:01 - let's see
11:02 - one of these use effects
11:06 - would be a good place to check
11:08 - and maybe down here
11:16 - actually let's just search
11:17 - if we have a use effect that i'm
11:19 - currently using as there we go
11:23 - this particular use effect
11:25 - right so
11:27 - react
11:28 - has these life cycle hooks right and
11:32 - basically does things at different
11:34 - points in the component life cycle
11:37 - a use effect hook
11:39 - with
11:41 - the second argument passed in is an
11:43 - empty array so the first argument is a
11:45 - function the second argument is an array
11:47 - if it's an empty array
11:48 - this happens when the component mounts
11:51 - so this should only happen
11:53 - basically for our app
11:55 - when the app loads
11:57 - so we're already doing a check here for
11:59 - async storage
12:01 - okay
12:02 - but
12:03 - let's do another check here and let's
12:05 - say
12:06 - if
12:09 - platform
12:12 - dot os
12:14 - equals
12:15 - web
12:19 - then
12:20 - we want to
12:22 - call notification
12:26 - and knit
12:27 - okay
12:30 - all right so now if we have if we're
12:32 - calling notification init
12:38 - would be down here right
12:40 - now we're going to check to see if the
12:41 - browser supports notifications if it
12:43 - does
12:44 - and permissions granted
12:47 - now
12:48 - we can do notifications so i'm not going
12:51 - to immediately show a new notification
12:54 - i'm going to leave that code there for a
12:56 - second but what we're going to do is
12:59 - we're probably going to set
13:02 - set
13:06 - notification
13:10 - and
13:11 - we're going to set notifications to true
13:14 - so we're going to we're going to set our
13:15 - state here
13:19 - and
13:22 - let's see
13:23 - otherwise we need to request permission
13:25 - so we already have our code here to
13:27 - request permission
13:29 - so the browser is going to ask that
13:33 - uh if permission is granted
13:36 - then
13:38 - we're also going to do set notifications
13:40 - to true
13:44 - all right um
13:47 - now
13:48 - if for some reason it's not granted
13:54 - let's set our notifications to false
13:57 - if you're a little bit lost it should
13:58 - make a lot more sense once we actually
14:00 - demo this
14:03 - all right and we haven't even created
14:04 - this part of state yet so let's let's do
14:07 - that now
14:10 - otherwise nothing's gonna work
14:13 - so we can say
14:15 - cons
14:19 - notification
14:22 - set
14:23 - notification oops
14:25 - notifications
14:30 - use state
14:32 - and we're going to set it by default to
14:33 - false
14:36 - okay
14:37 - all right so now let's go back down
14:41 - here
14:43 - and
14:45 - right here was the use effect where we
14:46 - set the
14:48 - vibration right
14:50 - and
14:52 - let's say let's go here now and first
14:55 - we're going to check to see if
14:57 - notification
14:58 - is true
14:59 - right so at this point if notification
15:02 - is true that means that we've already
15:05 - checked to see whether or not or on web
15:08 - so we won't have to recheck that and
15:09 - we've already done the check to see if
15:12 - notifications are available in that
15:14 - browser like if it's a new enough
15:15 - browser that it has notifications so
15:18 - we've done those checks and we've also
15:20 - checked to see whether the user has
15:21 - enabled notifications whether they need
15:23 - to enable or whether they've rejected
15:25 - them
15:26 - so at this point
15:28 - we should just need to say notifications
15:32 - so if notifications are true
15:34 - i'm going to use a turn area here
15:37 - so
15:38 - it's actually kind of a shortcut right
15:39 - so if notifications are true
15:42 - we're going to
15:44 - do something and this is what we're
15:46 - going to do
15:47 - so we're going to do
15:49 - a notification
15:51 - i'm going to say new notification
15:55 - and let's see if this could work like
15:57 - this if i don't actually have to create
15:59 - the variable if this will just throw it
16:01 - i'm not sure because i haven't really
16:02 - worked with notifications
16:04 - before in code so let's see how this
16:06 - works and
16:08 - [Music]
16:12 - let's just say stay focused
16:18 - all right now i'm not sure if there's
16:20 - the equivalent of a cancel notification
16:22 - we'll see
16:24 - we'll see how it goes well we may have
16:26 - to come back here and and check out the
16:28 - documentation a little bit more all
16:30 - right so now it once it's asking me
16:33 - uh if
16:35 - it uh i want to allow notification so
16:37 - i'm going to allow
16:39 - now let's see if we get get one look we
16:41 - got notified oh you can't see it because
16:43 - of my
16:44 - my face let me change this
16:46 - all right so way down in the corner it's
16:48 - small i don't know how to make it bigger
16:49 - but stay focused came it says stay
16:52 - focused
16:53 - right so we are getting in the
16:54 - notification to stay focused so that's
16:57 - awesome that works
16:58 - um
17:01 - actually cool we just got um
17:03 - a
17:04 - like a donation or a sign up or
17:06 - something i'm not sure what it is uh
17:09 - but dion
17:10 - uh dimucci
17:12 - um just donated a free code camp
17:15 - so thank you very much for that uh i'm a
17:18 - little i'm a little new with the whole
17:20 - um being able to have donations and
17:22 - stuff in the chat so i'll try to look
17:24 - for those and uh give you all a shout
17:25 - out when i see it
17:27 - um i think it's really cool and it's
17:29 - going to be very helpful for uh for code
17:30 - camp though so that's awesome and
17:32 - quincy's in the chat too uh so if you
17:35 - don't know quincy is
17:37 - uh the the founder and head of free code
17:41 - camp uh so thank you so much for being
17:42 - in the chat quincy um that's it's always
17:46 - cool when quincy's here
17:47 - um
17:48 - all right so
17:50 - we we have the notifications here and
17:52 - it's actually giving me like a tiny
17:54 - little
17:55 - um noise like a notification noise which
17:57 - is cool because i had thought about
17:59 - adding in our own noise but i don't
18:01 - think we need to i think that
18:02 - notification is fine uh i don't want to
18:05 - be like
18:06 - extra annoying to the user
18:08 - because i'm trying to keep them focused
18:10 - not not have them lose their focus right
18:13 - so if we're too intrusive
18:15 - like well
18:16 - the giant red flashing screen might
18:18 - already be kind of intrusive but
18:21 - if we're too intrusive with noise and
18:22 - everything it might just be too much but
18:24 - i think that's that's pretty awesome the
18:26 - only thing i want to look up is like can
18:28 - we manually take away the notification
18:31 - like let's say they get focused again i
18:33 - don't want them to have to come down
18:34 - here and clear that notification out
18:36 - let's see if we can cancel it so we got
18:39 - all our methods here
18:40 - uh event handlers let's see
18:52 - so let me make that bigger sorry that
18:54 - was probably way too small for everybody
18:56 - uh but let's
18:58 - let's go here and see so notification
19:00 - actions
19:03 - interesting buddy this looks like all
19:05 - the stuff we can put in our notification
19:09 - well while i didn't realize there was so
19:10 - much to these notifications this is
19:12 - really cool
19:17 - and we can actually do a vibration which
19:19 - i suppose that would work like if you
19:21 - were running this in the browser on your
19:23 - phone that's kind of cool
19:26 - i don't think i'm going to implement
19:27 - that today but it's good to know on
19:29 - close on air on show
19:32 - notification close cool
19:36 - all right let's click this and see how
19:38 - we would do notification close
19:41 - this feature is available in webworkers
19:43 - in secure context
19:46 - uh
19:58 - oh my gosh i must be like uh losing
20:01 - focus pretty frequently here
20:03 - so
20:04 - all right so i think we do need to give
20:06 - our notification a name
20:10 - and so then we can actually call close
20:12 - on it
20:14 - and then let's let's see
20:18 - see how we do that
20:23 - so i'm going to change this
20:26 - because i don't know that we can do this
20:28 - inside of our little shortcut ternary
20:30 - here so let's change this to an actual
20:32 - if i hate to do so many nested is but
20:38 - in this case
20:40 - we'll just go with it
20:45 - well this project has never it's never
20:47 - been refactored or anything this is
20:49 - still pretty uh pretty new so
20:53 - don't take what i'm doing is like the
20:55 - best way to do anything uh in this live
20:57 - stream a lot of times what we're trying
20:59 - to do is just get stuff working
21:01 - and
21:02 - you know sometimes we go back and and do
21:04 - a little refactoring but
21:06 - for the most part
21:08 - let's see
21:16 - const there we go const n
21:19 - is a notification and actually
21:24 - this can't be
21:26 - i gotta define this out here
21:31 - so let's say this
21:32 - let's
21:43 - did i call okay no i called state
21:45 - notifications so we're good
21:50 - i let notification
21:53 - it's gonna be mad that i didn't
21:56 - has any type i didn't give it a type
21:59 - i'm not really sure what the
22:01 - notification type is in typescript so
22:04 - we're going to just leave it at that for
22:05 - now
22:08 - notification equals
22:12 - now we should be able to do is say
22:17 - notification
22:18 - dots
22:19 - close
22:23 - all right so let's see
22:25 - if that works
22:30 - whoa did not work cannot read close of
22:32 - undefined
22:34 - okay
22:42 - maybe we need this
22:46 - let's see
22:58 - let's see if this helps us uh nope
23:01 - cannot read property close of undefined
23:08 - checking the uh
23:10 - chat really quick
23:15 - just to see if anybody has any uh
23:17 - comments about
23:19 - what i'm doing right now occasionally
23:21 - you all figure out how to do the thing
23:23 - that i'm trying to do
23:24 - and uh tell me about it in the chat
23:27 - all right so that didn't work why did
23:29 - that not work
24:07 - looks like the only different thing that
24:09 - we did
24:11 - that they did they added these options
24:14 - i mean this is def this is inside of an
24:16 - event listener
24:29 - oh okay i see um
24:34 - anthony's saying the initialization is
24:36 - in the if statement i'm closing in the
24:37 - elf state else statement
24:41 - is only being defined in the sk all
24:42 - right did i mess up the scope let's
24:44 - check that out so
24:46 - if
24:58 - all right so basically
25:02 - what potentially could be happening here
25:04 - is that
25:06 - since this is an else
25:12 - all right how about this if
25:14 - notifications
25:25 - let's see if there is a notification
25:27 - then we close the notification let's see
25:29 - if that works
25:44 - it doesn't look like it's actually
25:45 - closing it though
25:50 - i look at my
25:51 - my action center has all these
25:53 - notifications
25:59 - i wonder if it can actually close the
26:01 - like
26:03 - i don't
26:04 - usually when i get a notification it
26:06 - stays in my action center
26:08 - and it's not
26:10 - um
26:12 - like it's it's it doesn't get close
26:15 - right is that a thing that happens like
26:19 - that websites can close them
26:27 - let's see
26:28 - got some some of you are helping out in
26:31 - the chat so let's check out what you're
26:32 - saying
26:47 - all right so i'm getting a bunch of
26:48 - different suggestions here
26:51 - let me try to keep them straight
27:00 - let me check it i got about four minutes
27:02 - left before i'm gonna go back to the
27:03 - chat and answer a few questions and then
27:06 - after you answer some questions then
27:07 - we'll actually deploy this
27:17 - i wonder
27:22 - i'm not really seeing much of a
27:24 - difference
27:26 - between when i actually put this in and
27:28 - when i didn't
27:31 - let me
27:51 - yeah you know what i think i'm going to
27:52 - leave this out for now
27:55 - because
27:58 - i i don't actually see any difference on
28:01 - my screen oh you know what i forgot that
28:02 - i
28:03 - y'all can't see the notification
28:05 - um basically what's happening is the
28:07 - notifications are going on and off
28:10 - um
28:13 - whether i have this code in here or not
28:20 - now this might be dependent on browser
28:22 - and operating system
28:24 - but in terms of being on chrome on a
28:27 - windows 10 computer
28:30 - it seems like the notifications only
28:32 - stay on the screen for a second and then
28:34 - go off anyway
28:36 - so i don't really see that we need to
28:39 - like manually
28:41 - close the notification
28:43 - even if this was working which i'm not
28:45 - even sure if it was if it's working
28:46 - because it didn't seem like anything was
28:48 - different
28:49 - but what was different is we did get a
28:51 - few errors whenever we were we're doing
28:54 - this so let's get rid of that now
28:57 - and
29:00 - let's just do this
29:02 - let's get rid of this for now
29:04 - you know at some point maybe you will
29:06 - add something else into the
29:07 - notifications
29:08 - might not be a bad idea if we ever like
29:11 - actually get a real logo for this maybe
29:12 - we can throw that in there
29:14 - uh you know make it look a little bit
29:16 - nicer
29:19 - but for right now i think that that
29:21 - basically gives us something else you
29:23 - know mainly what i wanted is
29:25 - if i'm on a desktop and i'm using this
29:27 - i'm probably not going to be staring at
29:29 - this screen all the time right so the
29:32 - change that i see
29:34 - is not going to help me it was different
29:35 - whenever i you could have the phone
29:37 - right the phone app one from previous
29:39 - episodes
29:41 - you could potentially just set your
29:42 - phone out and see the color change and
29:44 - feel the vibration
29:46 - and that would warn you to stay focused
29:48 - but on a desktop the color change isn't
29:50 - going to do anything you're probably
29:50 - working on something else and you don't
29:52 - have it up on your screen you need
29:53 - something else you can't have vibrations
29:56 - so this notification should come up on
29:58 - top of whatever you're working on
30:01 - so i think we have kind of mission
30:02 - accomplished in terms of what the point
30:04 - was for that
30:06 - so i'm gonna go back
30:08 - back in here
30:10 - let me put this down here
30:12 - and um
30:14 - let's create a
30:17 - pull request
30:18 - or i'm not gonna do a pull request i'm
30:20 - just to merge this straight into master
30:22 - because
30:24 - it's just
30:25 - a small project at this point
30:28 - so let's do a git status just to see
30:29 - what's changed which only app.tsx has
30:32 - which is what we should expect we'll do
30:35 - get commits am
30:37 - [Music]
30:38 - and we'll add this as a new feature
30:41 - and we'll say show
30:43 - desktop
30:46 - notification
30:50 - on web
30:56 - i don't need to do that i just do get
30:58 - push
31:00 - when i'm at work i always have to do a
31:02 - git push origin and then whatever branch
31:04 - i want to push to and do like a
31:06 - legitimate pull request on a separate
31:08 - branch so i'm used to doing it like that
31:10 - when it's just my own private project
31:12 - here
31:13 - i don't worry about that so
31:15 - you can just do get get push and it'll
31:18 - go right to your origin by default
31:20 - whatever your branch on
31:22 - all right cool
31:25 - i don't know if i'm messing up
31:26 - it's possible that
31:29 - all my
31:30 - my headphones or something is messing up
31:33 - the focus on here but i feel like it's
31:35 - going up and down
31:36 - really fast
31:38 - we may have to
31:40 - let's try to figure out
31:42 - if it's just me
31:44 - or if there's something up
31:47 - with how this is going up and down so
31:49 - much
31:50 - like something in terms of code or
31:51 - anything but
31:53 - i guess when i try to focus i can keep
31:55 - the focus
31:56 - uh a little bit higher
31:58 - so
32:00 - maybe it's just hard to focus talking
32:02 - and coding at the same time all right so
32:05 - that's cool for
32:07 - the first part of the live stream i'm
32:09 - gonna set let's say a five minute timer
32:11 - go to live chat answer a few questions
32:13 - and then we're going to come back we're
32:15 - going to
32:16 - build this for the web and we're going
32:18 - to deploy it to github pages
32:26 - so i'm scrolling up
32:28 - and i'm just going to start off at the
32:29 - top and answer as many questions as i
32:31 - can
32:37 - all right so see the questions about
32:39 - part two in the series which i explained
32:41 - that at the beginning so if anybody's
32:42 - interested in the missing part two of
32:44 - this series uh then go back to the
32:47 - beginning of this stream uh when it's
32:49 - done and
32:51 - i gave an explanation for that
32:55 - uh andre says i recently started
32:56 - learning javascript and i noticed that
32:58 - everyone talks about react what is it uh
33:01 - there's a lot of good discussion in the
33:02 - chat about that so if you're interested
33:04 - in hearing all that discussion
33:06 - scroll back in the chat to the beginning
33:08 - of the chat and you can see that but
33:09 - basically
33:10 - react is a
33:12 - javascript library that helps you build
33:14 - out
33:16 - like the front end of of your app it has
33:18 - some different components to it
33:21 - a certain way of doing styling
33:23 - and
33:25 - one of the biggest things
33:27 - in my mind is the way it handles state
33:29 - management and updates
33:31 - like updates as your users clicking
33:33 - around things change right it's
33:37 - it's very nice i like how it handles
33:39 - that so i don't want to go into like a
33:41 - big discussion of react right now
33:44 - because i don't think i have time for it
33:45 - anyway uh but
33:47 - basically the short answer is
33:49 - it's a react live it's a javascript
33:52 - library that helps you build
33:54 - uis
33:56 - user interfaces
34:07 - let's see
34:11 - oh there's a lot of discussion about
34:12 - this i'm kind of i'm scrolling through
34:30 - a lot of people saying hi i see all the
34:32 - hellos hey everybody
34:35 - people from all over the world here we
34:37 - have people from
34:38 - uh
34:40 - tanzania
34:42 - um
34:44 - let's see
34:46 - india nepal
34:49 - somalia
34:51 - pakistan palestine
34:54 - vietnam lithuania
34:58 - chicago
35:01 - very cool
35:03 - very cool everybody's watching from all
35:04 - around the world
35:08 - uh shoe bomb asks should i watch
35:10 - previous videos or directly watch this
35:12 - suggestions please
35:14 - um
35:15 - i i think you're you're fine to watch
35:17 - this right now like just to see what's
35:19 - going on if you want to get a better
35:20 - understanding of what we're doing then
35:22 - you might want to watch the previous
35:24 - ones but you know you don't have to uh
35:26 - just you know ask any questions
35:28 - if you're not sure what's what's going
35:30 - on at some point
35:32 - sajid asks what do you mean by brain app
35:35 - uh i mean
35:37 - this this app
35:38 - the main data that this app is working
35:40 - with is coming from your brain through
35:43 - this brain computer interface
35:46 - so that's what i mean when i say brain
35:47 - app we're working with data
35:50 - live data from
35:52 - from the brain
35:55 - swahan says i'm a beginner in
35:57 - programming can you tell me where to
35:58 - start i definitely recommend starting
36:00 - with freecodecamp.org
36:02 - check out the lessons there go through
36:03 - them it'll give you a great uh
36:05 - introduction to
36:07 - some
36:08 - types of programming
36:10 - and then you can decide from there
36:12 - whether you want to keep going with it
36:13 - and what type of programming that you
36:15 - want to do
36:16 - it's totally free
36:18 - i did it when i was a beginner
36:21 - and a lot of people have used it and
36:24 - it's it's helped them go from not
36:26 - knowing anything in programming to
36:28 - being professional programmers
36:40 - all right
36:42 - raphael from brazil was here my oldest
36:45 - son's name is raphael so uh what's up
36:48 - great name
36:53 - learn tech says it's night at my town
36:56 - would be available tomorrow this will
36:57 - definitely be available as soon as i'm
36:59 - done with the live stream usually give
37:01 - it a minute or two and it'll be
37:03 - available to watch the recording um you
37:06 - know almost immediately when i'm done
37:09 - with the stream
37:11 - let's see
37:12 - all right i'm gonna my timer went off so
37:15 - let's go back and let's launch this
37:17 - thing
37:18 - and
37:21 - i have
37:22 - the
37:25 - expo
37:28 - documentation up
37:30 - on my screen right here
37:35 - it's i'm kind of glad that my face is
37:37 - now covering up the notifications
37:39 - because every time i lose focus it keeps
37:42 - popping up now
37:45 - i think this app is definitely going to
37:46 - work well on desktop because the desktop
37:48 - notifications are becoming so annoying
37:51 - it is making me really want to learn how
37:53 - to stay focused
37:55 - so i think this is going to be a great
37:56 - thing
37:58 - all right but here's what we're going to
37:59 - do we're going to look at this building
38:00 - step
38:02 - and then we're going to skip down to the
38:03 - github pages step
38:04 - so first thing we're gonna do this build
38:07 - it says we can actually optimize for
38:09 - speed i've never run this before
38:12 - so let's try it out we do npx expo
38:14 - optimize
38:16 - let's try it out and see what happens
38:19 - i don't know if we need to close down
38:21 - our server or keep it open or what
38:23 - in terms of our local server so let's
38:25 - just try it and see if it works
38:32 - all right let's see what happened
38:35 - optima cannot optimize images without
38:38 - sharp cli run this command again after
38:40 - successfully installing sharp
38:42 - all right
38:54 - oh for those of you who watched the last
38:56 - couple episodes where we were working on
38:58 - getting this app into the apple app
39:00 - store i'm still working on that
39:02 - evidently that demo mode we put in it
39:04 - worked fine on android but for some
39:06 - reason the testers said they couldn't
39:07 - get it to work so i don't know if we
39:09 - need to like do another build and submit
39:11 - it but that's what i'm going to try to
39:12 - do so i'm not going to do that on a
39:14 - stream since we just we we did a stream
39:16 - where we did a build and submitted it so
39:18 - i'm probably just going to re-watch that
39:20 - stream and follow along with what i did
39:22 - before
39:23 - and do the same steps
39:25 - to build it and re-release and see if
39:27 - that works
39:28 - but when this is done for web at least
39:32 - those of you who want to try this app
39:34 - and don't have an android phone now
39:36 - you'll be able to try it on the web
39:38 - so
39:40 - hopefully that'll be
39:42 - open it up to more users
39:44 - all right so it looks like this worked
39:47 - now let's see if this npx expo optimize
39:50 - works now
39:52 - cool
39:56 - all right it looks like basically all we
39:58 - had was our icon and our splash
40:01 - uh which
40:03 - oh yeah we did create those because we
40:05 - did that for the other stuff cool
40:07 - um
40:08 - by other stuff i mean the android and
40:10 - ios apps we created an icon and a splash
40:13 - screen
40:14 - and we saved 148 bytes
40:17 - not really sure that it was worth it in
40:19 - a bigger project that might actually be
40:21 - worth it but since we have no
40:23 - we really don't have
40:25 - anything in terms of assets we have the
40:26 - bare minimum right the icon and the
40:28 - splash screen
40:30 - so now we can move on and do expo build
40:33 - web
40:35 - all right and
40:37 - let's get that going
40:39 - not sure how long this will take i'm
40:40 - guessing not that long since there's not
40:42 - a whole lot to the project but this is
40:44 - going to create a new web directory so
40:46 - we have this build web directory here
40:49 - that we didn't have before
40:50 - and that's where our build falls are
40:52 - gonna be let's open that up and see
40:54 - oh where'd it go
40:59 - we lost it
41:01 - where'd he go
41:03 - there it is
41:05 - now let's see what's in here
41:06 - so now we have a bunch of files in here
41:09 - and this is where it's going to get
41:10 - hosted
41:13 - let's go all kind of stuff progressive
41:15 - web app stuff which is sweet
41:18 - very cool that that's actually cool so
41:20 - we have i'm gonna see what icon they
41:22 - have for this
41:26 - oh sweet so it actually took our icon
41:28 - that was in our assets and it made an
41:29 - apple touch icon
41:31 - chrome
41:32 - icon very cool i didn't know i did all
41:35 - that that's that's very useful
41:41 - see what it did i don't think we'll be
41:42 - able to see that oh it even made a
41:44 - little favicon
41:46 - that's very cool i i like that whoever
41:48 - um
41:49 - probably evan bacon so shout out to evan
41:51 - bacon who
41:53 - i don't think he's watching the stream
41:54 - right now he has before but he works at
41:56 - expo and he's he's been doing a lot of
41:58 - work for the expo web stuff so if i had
42:01 - to guess i'd say it was him that
42:04 - did all this stuff and that that's
42:06 - really a nice touch to automatically
42:08 - create all the icons and everything like
42:10 - that because
42:12 - doing that manually always it's not a
42:14 - lot of work but it always seems like a
42:15 - pain once you get to this part where you
42:17 - actually want to launch it
42:18 - and
42:20 - you know now you gotta go like into an
42:21 - image editor it just feels weird and
42:24 - it's something that
42:26 - is easy to forget
42:27 - uh
42:28 - forget to do and then when you realize
42:30 - you have to do it it's just like i gotta
42:32 - go in here and do this now so i don't
42:34 - know that's just how i feel i'm not
42:35 - really into image editing so that's not
42:38 - my thing
42:40 - so that's very cool
42:42 - and
42:44 - now we can deploy so let's go to github
42:47 - pages
42:51 - and we've already we already have a git
42:53 - repo the remote is already our github
42:56 - repo so we can skip that but we do need
42:58 - to do our yarn add
43:00 - d which means add as a development
43:02 - dependency
43:04 - uh gh pages
43:07 - so let's do that
43:19 - if you have a small like project that
43:20 - you're working on
43:22 - and you need to host it somewhere i
43:23 - definitely recommend gh pages it's very
43:26 - easy to do
43:28 - and let's
43:31 - open our package json now
43:33 - it's pretty easy to do and
43:36 - it keeps everything central to github
43:39 - and it doesn't cost anything
43:43 - so it's a great place to start if you're
43:45 - not to the point in your project yet
43:47 - where you really want to put a lot of
43:48 - money into it
43:50 - it's
43:51 - you know i have a lot of just kind of
43:53 - fun projects that i don't know if i'll
43:55 - ever do anything more with but it's
43:57 - really cool to be able to to try them
43:58 - out or
43:59 - when
44:00 - when people like i tell people about
44:02 - them and say oh yeah let's check this
44:04 - out and i can just click a link in
44:06 - github and and do a little demo
44:10 - so we have our scripts already out so we
44:13 - can't really copy and paste this entire
44:14 - thing
44:16 - since we already have
44:18 - other things in our package json
44:24 - so now we have a deploy and a pre-deploy
44:26 - the pre-deploy is just the expo build
44:29 - web that we did already
44:32 - and then their deploy
44:38 - uses github pages to deploy this uh to
44:40 - github which we are going to run that in
44:43 - a minute and we're going to have to put
44:45 - in our home page which we don't have at
44:46 - all
44:47 - so let's do our home page we're gonna
44:49 - have to change it obviously this is not
44:51 - the
44:53 - this is not our home page so
44:55 - yeah oh there we go so
44:58 - the documentation uses evan bacon's
45:00 - github so
45:02 - now i'm
45:03 - i'm really sure that he's the one that
45:05 - built this
45:06 - so we need to change that to the github
45:08 - for
45:09 - this project so we're going to go to
45:12 - github now and get that url
45:15 - stay focused
45:28 - so now we can see this is
45:30 - linked to the github repo that we're
45:32 - using so let's save that
45:35 - and we'll go back here to the
45:36 - documentation and see finally we can
45:39 - just do yarn deploy
45:43 - so let's try it out
45:49 - see if it's working
45:57 - cool let's run in webpack
46:06 - we're exceeding the
46:08 - size limit that's interesting i wonder
46:10 - why we're exceeding the size limit
46:21 - oh well
46:24 - very cool it's deployed it's published
46:34 - so we may need to work on our file sizes
46:37 - here at some point but it should be
46:39 - published so let's go to github now
46:42 - and let's see
46:45 - what would i do i accidentally did that
46:48 - let's see what we have here we have a gh
46:50 - pages branch now which let's just see
46:52 - what which gets deployed so you see all
46:54 - that stuff in our static web
46:57 - our web build directory that we just
46:59 - checked out
47:00 - that's all now push here
47:07 - and we should be able to go to
47:10 - i'm trying to think what the
47:13 - i don't remember what the default urls
47:14 - are so we're gonna have to figure that
47:17 - out for a minute
47:18 - uh let's go to our settings though
47:22 - and
47:24 - options
47:27 - there we go
47:28 - so we go down here to github pages
47:30 - here's the options for that so if if you
47:32 - do this on your own on a different
47:34 - project and you don't follow these steps
47:36 - like let's say you're not using expo
47:37 - this is where you would go
47:39 - to use github pages so there's a couple
47:41 - things you could do it's actually it's
47:43 - very cool
47:45 - you can use a custom domain
47:49 - you can
47:50 - if you want to do like
47:52 - jekyll you can do a theme here but
47:54 - otherwise you can take any branch right
47:57 - so we're using the github pages branch
48:00 - and that was set like by default through
48:02 - expo but i could choose any branch i
48:04 - wanted to
48:06 - or any folder like if i had a docs
48:08 - folder in my master branch insert it
48:10 - from that branch of that folder
48:12 - so there's a lot of flexibility here but
48:14 - anyway the the url
48:17 - is here and this is standard so like
48:19 - anything that i have on github pages if
48:22 - if i were to go to
48:22 - jesserrygold.github.io
48:24 - slash the name of the project
48:27 - then that would take me to
48:29 - the the site so let's see
48:32 - focus
48:33 - uh-oh
48:36 - is it not working
48:40 - all right let's inspect it and see
48:42 - what's happening
48:44 - failed to load resource
48:47 - fail to load resource
48:50 - i don't know
48:58 - looks like
49:01 - looks like it's not working
49:02 - what happened
49:13 - all right stay focused favicon
49:16 - say focus manifest
49:20 - all right so it looks like it's not
49:21 - finding
49:24 - what it wants to find
49:31 - let's check this out
49:38 - so it should be finding this stuff
49:44 - all right so static
49:48 - that's
49:54 - interesting that it's not finding this
49:55 - stuff
49:57 - let's double check our documentation
50:00 - oops
50:08 - this one isn't working now either
50:13 - why is that
50:15 - oh no
50:17 - it literally broke
50:26 - let's run this again let's start our
50:28 - local server again
50:31 - just see if we can get it to run
50:43 - okay all right that's running now
50:49 - all right so we're running locally again
50:55 - but for some reason
50:58 - this one is not working and it looks
51:00 - like it can't find any other resources
51:04 - which is kind of leading me to believe
51:06 - that maybe it's a path issue
51:08 - let's see if it's finding anything
51:10 - yeah it looks like nothing basically so
51:14 - wondering if there's something else we
51:16 - need to change in the project
51:18 - something we need to do differently
51:22 - let's see
51:23 - so let's go back to our
51:26 - we can get rid of that
51:29 - let's go here
51:31 - all right so
51:34 - maybe we um
51:37 - need to do our build with the
51:40 - package.json
51:43 - this is scripts predefined bill trying
51:45 - to deploy
51:48 - all right looks like they're are more
51:49 - detailed instructions under that so
51:50 - let's follow this
51:52 - we did that
51:56 - that's the player app let's make sure
51:58 - you're sure it's good
52:01 - you did that configure your package json
52:05 - we've done that
52:08 - pre-deploy is automatically run to
52:09 - before deploy generate a production bill
52:12 - to your app
52:14 - with yarn deploy
52:19 - yep there's nobody about the url you set
52:21 - as your home page in package.json
52:25 - oh maybe
52:30 - you know what i set the wrong home page
52:33 - that's the problem
52:35 - if somebody's trying to tell me that
52:38 - apologies but i set the wrong home page
52:40 - so
52:41 - uh
52:42 - this is actually the home page that we
52:45 - want right this is the page of the repo
52:50 - and that's why i can't find anything so
52:52 - let's save that so at that point make
52:54 - sure you use
52:56 - the
52:58 - page the github pages url the one that
53:02 - your demo will be at not the
53:06 - the url for your
53:08 - your github repo
53:09 - so that is a different uh a different
53:12 - url so
53:16 - that that makes sense actually uh
53:18 - so let's do yarn deploy now
53:27 - which it's it's oh no what'd i do
53:34 - focus
53:38 - directory not empty
53:43 - okay
53:44 - it needs it to be empty that's weird
53:47 - i mean we can definitely delete that
53:53 - [Music]
53:56 - so i'm removing that so um
53:58 - web build rm
54:00 - rf is a very powerful command it'll
54:02 - delete everything recursively so we just
54:04 - did that in web build we're going to run
54:06 - this again
54:09 - because the error that we got was saying
54:11 - hey this directory has something in it
54:14 - which it didn't like so
54:16 - uh
54:18 - you would think that that you'd be able
54:19 - to keep running deploy and it wouldn't
54:22 - you wouldn't need to manually delete
54:23 - that so maybe we set it up wrong
54:26 - maybe something wrong with the project
54:28 - but either way like
54:31 - if you get that error then you just need
54:33 - to delete that
54:34 - you don't have to do it with the command
54:35 - line if you don't want to you could just
54:37 - go in and through the ui and delete it
54:40 - all right let's try this again
54:41 - whoops
54:44 - stay focused
54:51 - let's make sure the latest commit yeah
54:53 - 34 seconds ago
54:55 - yeah that seems like
55:04 - that should have worked by now
55:15 - there we go
55:16 - i had to empty the the cash and look now
55:19 - we we have it so let me
55:24 - get rid of what i was doing here
55:27 - all right close that out i'm just in
55:30 - fact i'm just going to close out our
55:31 - local server
55:32 - completely
55:34 - there we go
55:36 - and
55:38 - we're going to link up the notion
55:42 - let me grab my
55:43 - device id from my other screen
55:48 - put that in there
55:52 - put in my email
55:54 - and i'll grab my
56:00 - password nice
56:06 - sure what then
56:08 - cool so now on github
56:12 - i'm running this
56:14 - it's working
56:16 - i'm getting
56:18 - i should be getting notifications let's
56:20 - see if i'm getting it from
56:26 - let me
56:27 - there we go
56:28 - allow notifications
56:31 - cool so now i'm getting notifications
56:33 - from
56:34 - my github page
56:36 - which
56:37 - you can see down in the corner there i
56:38 - know it's really small i i really don't
56:40 - know how to make notifications bigger
56:43 - but it's working
56:46 - so now anybody can go there like even
56:48 - right now you could go there and you
56:49 - could run this
56:50 - now if you if you don't have a notion
56:53 - headset which most of you probably don't
56:56 - um because it's still kind of
56:58 - i don't know if it's like
57:00 - officially you can buy it like anybody
57:02 - can buy it right now or if it's still
57:03 - kind of like in development but
57:06 - uh
57:08 - still i don't think there are that many
57:09 - of them out there yet
57:11 - so if you want to just kind of like play
57:12 - around with it and see if it works you
57:14 - can type in
57:16 - test
57:17 - as your device id and like leave email
57:20 - and password blank and hit submit and
57:22 - it'll just have
57:24 - random numbers come up
57:27 - so like at least you can
57:29 - you can try it out
57:33 - uh otherwise
57:35 - you can try
57:38 - whoa
57:39 - oh that's weird
57:40 - an error invalid path
57:44 - oh that's that error that came up before
57:46 - i think we have a uh
57:49 - we have something for that so
57:52 - i believe what happened is my password
57:54 - manager put in the email address for
57:56 - device id
57:57 - and that at symbol was not
58:00 - you can't put that in there so it didn't
58:02 - like that
58:04 - but otherwise i would need to put in
58:06 - like my device id
58:08 - email password again i could sign in
58:10 - and it should work
58:15 - cool so mission accomplished for today
58:18 - i want to see if there's anything else i
58:19 - need to commit
58:24 - whoa
58:25 - all right
58:27 - splash
58:28 - package json
58:30 - oh yeah of course our package json
58:33 - i'm just gonna add everything and we'll
58:35 - do uh git commits
58:39 - i didn't have to put the a flag there
58:41 - it's just habit uh let's go
58:58 - there we go cool
59:00 - all right so we now have our app
59:02 - deployed successfully on the web we
59:05 - previously deployed it to
59:07 - the
59:10 - android app store
59:12 - what do you call that the google google
59:14 - play store
59:16 - and
59:17 - we have
59:18 - unsuccessfully attempted to deploy at
59:21 - the
59:22 - uh the apple app store
59:24 - uh but
59:26 - i'm gonna retry that so we've tried
59:28 - twice
59:29 - and it hasn't worked so i'm gonna try it
59:32 - again and see if we can get that in
59:33 - there
59:34 - uh but yeah at that point
59:37 - i don't know what we'll do next with
59:38 - this i don't know if we'll we'll upgrade
59:40 - this or we'll move to a different
59:42 - project or or what so let me know what
59:44 - you think like in the comments or uh on
59:47 - twitter or whatever
59:48 - and let me know like would you like to
59:50 - keep working on this brain computer
59:51 - interface project and add in some more
59:54 - features would you like to move to some
59:56 - type of different project if so what
59:58 - would you like to see for now though
60:01 - i'm going to answer some more questions
60:05 - and try to get through all your
60:07 - questions here before
60:08 - before i uh end the stream
60:12 - let me find where i left off
60:17 - okay
60:27 - all right i guess i don't need this on
60:28 - anymore
60:40 - all right so we have a question is there
60:42 - any way to set the state in a big object
60:44 - with you state rather than all those
60:46 - individual use state calls yeah that's a
60:48 - great question so
60:49 - let's uh let's look at this in the app
60:52 - here
60:55 - so we do have quite a few set state
60:57 - calls here
60:58 - what we could do
61:00 - we could have an object that does use
61:02 - state but what i found is that if i have
61:05 - an object for you state
61:07 - especially if there's nested values in
61:09 - that object
61:12 - for some reason like things just don't
61:13 - get updated like i want them to get
61:15 - updated so what we could use instead is
61:17 - something called use reducer
61:20 - and then we could pass in we can have an
61:22 - object for all the state using use
61:24 - reducer have it set up similar to redux
61:28 - and
61:30 - that has worked for me
61:32 - that might be a better way to go about
61:34 - what we're doing with this app since we
61:36 - have so much state here it's starting to
61:38 - get a little bit crazy
61:40 - but yeah that's definitely um that's a
61:43 - great question
61:44 - and i i think
61:47 - used reducer is probably the way to go
61:49 - if you start to get a lot of state that
61:51 - you're trying to handle
61:53 - danielle says love your viz thanks i
61:56 - appreciate that
62:01 - ace of spades says 135 repos what a mad
62:04 - was that when we were checking out uh
62:06 - harshit's repos
62:08 - he's a great programmer so
62:11 - although you should when you see
62:12 - someone's github and they have a lot of
62:14 - repos that like total repo count
62:16 - includes things that have been forked so
62:19 - that doesn't necessarily
62:20 - mean that they're like maintaining 135
62:23 - repos so
62:24 - uh just kind of take that
62:27 - for what it's worth there
62:28 - you know somebody could potentially have
62:31 - none of their own repos and just
62:33 - like to fork other people's repost
62:50 - i see some
62:53 - thanks pretty much so i'm just i'm
62:55 - looking for for questions at this point
63:01 - uh brother philip says i have a question
63:03 - what if you're trying to build with an
63:05 - sdk but the documentation is trash
63:09 - that's a tough one um
63:11 - you know what this is actually
63:14 - something that i do if i can't find
63:16 - answers with the documentation is i'll
63:18 - go into github
63:19 - and
63:20 - i'll try to find other people that are
63:22 - using
63:24 - what i'm using so i'll go into the
63:26 - github and i'll go to a search right and
63:28 - what i do is i would search for
63:30 - something
63:32 - uh that is particular to that sdk like
63:35 - for instance notion right so i'd go in
63:37 - and i'd say notion.focus
63:42 - i'd copy that
63:43 - and i put it in here
63:45 - because i figure like what are the odds
63:47 - that somebody's gonna have notion.focus
63:49 - and not be using notion
63:51 - right so
63:52 - i'd go in here i'd go into the code
63:55 - i'd select it and i'd say probably want
63:57 - to try like javascript right i'm looking
63:59 - for some javascript
64:01 - and i'm going to try to see
64:04 - like if somebody else have does somebody
64:06 - else have notion.focus
64:08 - actually it looks like
64:09 - a lot of them have
64:11 - notion
64:12 - it's not
64:13 - i don't know if i could do it like this
64:17 - see if i could do like an exact match
64:24 - okay there we go that's a lot less
64:26 - so now i can see
64:28 - all right i want only the repos that are
64:31 - exactly using since i put those double
64:33 - quotes around it notion.focus right
64:37 - now i can see
64:39 - okay here we go
64:41 - these are the repo's that are using that
64:43 - so i can go in and say all right let's
64:45 - say i only want javascript
64:48 - oops
64:50 - didn't we just see that
64:57 - showing two available code results
65:01 - that's really weird that is
65:04 - isn't that weird like obviously this is
65:05 - javascript
65:07 - that's interesting
65:08 - um
65:09 - anyway like i can go in here and say
65:12 - like all right well here's an example of
65:13 - somebody using notion.focus right this
65:15 - is exactly what we're trying to do i can
65:17 - click into this and i can see all right
65:18 - this is how they used it sometimes that
65:21 - helps me
65:23 - because
65:24 - if the documentation is really bad or
65:27 - the documentation is wrong or outdated
65:29 - at least if you can find somebody else
65:30 - that's using what you're trying to use
65:32 - and see how they implemented it it gives
65:34 - you something to try
65:36 - so that's that's kind of my go-to
65:39 - obviously if you could find it on stack
65:40 - overflow or something like that that's
65:42 - that's awesome too
65:43 - uh but this is nice because you get to
65:45 - see the code in context of a real
65:47 - project
65:48 - and you could see
65:50 - and you get to see like exactly like how
65:52 - old is this like all right this code was
65:54 - in here on october 12 2019
65:57 - it's pretty new
65:58 - um
66:00 - yeah so you can judge like
66:03 - all right this code maybe it's 10 years
66:04 - old i don't i don't want to use it
66:06 - versus something that's way newer but it
66:08 - gives you a nice
66:10 - i think it's kind of a nice way to see
66:12 - like real world examples of stuff
66:20 - uh ace of spades says any books you can
66:22 - recommend on optimizing your code really
66:24 - having a hard time not making it a messy
66:26 - wall of text i don't really have any
66:28 - books that come to mind um in terms of
66:30 - optimizing code
66:32 - um
66:34 - i don't know if anybody knows of any
66:35 - books
66:36 - for
66:38 - like optimizing your code
66:40 - uh put them in the in the chat to be
66:42 - honest with you like
66:43 - i don't really read a lot of coding
66:45 - books i'm i'm more like
66:48 - i like kind of tutorials and videos
66:51 - i
66:52 - actually read probably a lot of
66:54 - documentation now
66:56 - for the different like tools that i'm
66:57 - using
66:59 - so
67:00 - i i'm not great with the book
67:01 - recommendations in terms of coding
67:20 - uh thomas jaeger says why not use
67:22 - context api or redux to set
67:23 - notifications at the global state level
67:25 - won't you be using notification state in
67:27 - any other components actually normally
67:29 - that's a great idea but it turns out
67:31 - that in this project i don't have any
67:32 - other components yet so
67:35 - everything's in app.tsx i just did
67:37 - i decided to leave everything in there
67:39 - just for simplicity um for for the live
67:43 - streaming
67:44 - uh because
67:46 - i i figured instead of trying to click
67:48 - around to different
67:50 - components i put it all in one
67:52 - i normally like to have a lot more
67:53 - components
67:56 - but i thought i'd try it try it like
67:58 - this just to see how it goes um
68:01 - i'm not exactly sure whether i like it
68:03 - or not to be honest with you
68:06 - i am
68:07 - i don't know this this length of
68:09 - component seems a little long to me like
68:12 - i could definitely do it
68:14 - uh but in terms of like ui it is very
68:17 - simple
68:18 - so like i don't think it would make that
68:19 - much sense to split the ui out into its
68:22 - own components at this point because
68:24 - it's so simple
68:26 - but the logic
68:28 - is has gotten quite large so it's
68:31 - possible that i could split out some of
68:32 - the logic into
68:35 - their own files maybe i like to keep
68:38 - like a utils like a utilities folder
68:41 - and
68:42 - you know break up some stuff into there
68:43 - so
68:45 - that's that's a good point like if you
68:47 - do want are going to be sharing state
68:50 - then potentially you would want to use
68:51 - context api or redux to share state
68:55 - if your app was larger and more complex
69:02 - emanuel census says you should erase the
69:05 - set notification false in
69:08 - notification init
69:12 - let's see where that's at
69:23 - erase that you saying that's probably
69:24 - not needed
69:26 - i agree that that's probably not needed
69:29 - i was just thinking if there was some
69:31 - way that
69:32 - i don't know if this is possible
69:36 - that someone who maybe had previously
69:37 - granted permission would somehow
69:41 - not grant permission
69:43 - i don't know
69:44 - uh but you're right like it seems like
69:47 - if they even got to this point
69:49 - then
69:51 - the permission
69:53 - is obviously not denied i don't know
69:55 - what the other states could be is it
69:57 - just denied or granted is there some
69:59 - other state anyway
70:01 - you're right dude this is probably
70:02 - unnecessary
70:17 - when i get the notifications working
70:19 - quincy in the chat says toasty
70:22 - and then
70:23 - he said get it because it's a toast
70:25 - notification i did get it
70:30 - uh
70:32 - did someone ask what language this was
70:34 - uh it is uh it's typescript so it's
70:36 - basically it's javascript and with react
70:38 - native uh and i am using typescript
70:41 - although this is not like fully
70:43 - typed so i'm
70:44 - using typescript very lightly
70:51 - quincy says thanks for sharing your
70:53 - wisdom here with everyone jesse you're
70:54 - welcome
70:56 - thanks thank you so much for the
70:57 - opportunity and for being here in the
70:59 - chat
71:04 - uh
71:06 - no or noel says what can i do with a
71:08 - brain computer
71:09 - uh you could do a lot of cool stuff with
71:12 - it so
71:14 - you know you could do like we're doing
71:15 - with our app and monitor your focus you
71:17 - could help monitor your level of calm
71:20 - like if you're trying to meditate or
71:21 - something try to get your calmness to a
71:24 - certain level you can
71:27 - actually
71:29 - link it up to other actions so
71:32 - on screen actions like clicking a button
71:35 - or something like that or with internet
71:37 - of things you could link it up so if you
71:39 - if you think a certain thing it may turn
71:41 - a light on or off
71:42 - right but it does is very basic but
71:45 - potentially like
71:46 - if you linked it up
71:48 - in certain ways you could do pretty
71:50 - complex things just with
71:52 - your thoughts
71:53 - uh so i'd like to do more with that on
71:55 - like future streams
71:57 - this is kind of like my first idea i do
71:59 - have other ideas of what to do with this
72:01 - so we might get to some of that you know
72:03 - later on
72:15 - um glorious says is there a selenium
72:18 - tutorial on this channel
72:20 - i don't know for sure
72:26 - i don't remember seeing a selenium
72:28 - tutorial but there is a ton of content
72:30 - on this channel so it's entirely
72:31 - possible it's there
72:37 - um dion dimucci asks what hardware will
72:40 - you use for the interface so um i think
72:43 - i explained this already but i'm just
72:44 - gonna throw it out there again this is
72:46 - the neurocity notion headset
72:49 - um
72:50 - there are other brain computer interface
72:52 - headsets
72:54 - that you could get um
72:56 - probably so
72:57 - one that's pretty inexpensive is
73:00 - the muse headset muse
73:04 - i haven't worked with it personally but
73:05 - i've seen other people work with it one
73:07 - that's a bit more complex is uh open i
73:10 - believe it's open bci
73:13 - that one
73:15 - may require you to like 3d print some
73:17 - stuff i believe you can buy a kit to
73:19 - build it without 3d printing
73:21 - it's been a while since i checked on
73:23 - that so there are a few other options
73:26 - but i
73:27 - i'm using the neurocity notion which
73:30 - comes with a very kind of easy to use
73:33 - javascript api
74:00 - i've gotten to the point in the chat
74:02 - where we were kind of going back and
74:03 - forth about the code so i'm trying to
74:05 - skip around and make sure
74:07 - uh or skim through and make sure i don't
74:08 - miss another question that i didn't see
74:10 - already
74:22 - all right we have seen a few questions
74:24 - about what is this app what is the
74:25 - purpose of this app
74:27 - i go over it a little bit at the very
74:28 - beginning of this stream so you could
74:30 - check that out if you want a more
74:31 - in-depth explanation of it go all the
74:33 - way back to part one of this series
74:36 - and at the beginning of part one i i
74:39 - think i explained
74:41 - a in depth what
74:43 - this app is all about
74:52 - uh fuad
74:54 - sorry if i mispronounce your name says
74:56 - do you recommend using bootstrap for for
74:58 - layout
74:59 - um bootstrap is nice i prefer material
75:01 - design based frameworks i just i kind of
75:04 - like material design i've done a lot of
75:05 - projects with it so i'm
75:07 - i can
75:08 - implement material design stuff very
75:10 - quickly now since i've had so much
75:11 - practice with it so
75:14 - that's what i like but bootstrap is
75:16 - is certainly a good way to go very
75:18 - popular
75:23 - uh love overflow says why are you using
75:25 - typescript versus something like python
75:27 - or js
75:29 - uh
75:29 - i i use typescript at work so i thought
75:33 - why not use type
75:34 - typescript for this project it'll give
75:36 - me a little bit more practice i don't
75:38 - really know
75:39 - much about python i've done some basic
75:41 - python stuff but that was years ago
75:44 - and
75:45 - so i i'm a javascript developer
75:47 - primarily so that's why i kind of stick
75:49 - with javascript i figure i have a lot
75:52 - more knowledge to share about javascript
75:54 - and typescript than i do about anything
75:56 - else so i might as well stick with that
75:58 - from my live streams i don't have
76:00 - anything against you know any other
76:02 - languages that's just what i'm
76:04 - more talented at
76:07 - kristoff asks if i'm married yes i'm
76:09 - married and i have four kids
76:17 - all right everybody's shouting out where
76:18 - they're from let me go through so we got
76:20 - nigeria germany belgium brazil
76:22 - netherlands uh chile morocco
76:25 - colombia netherlands serbia india brazil
76:28 - morocco asgard nice
76:31 - russia egypt kenya
76:35 - saudi arabia morocco
76:38 - nice we got people from everywhere that
76:41 - is awesome
76:46 - tanmay says i made a brain controlled
76:47 - android game i use the emotive headset
76:50 - oh very cool
76:52 - i i'm not familiar with the emotive
76:54 - headset but that's pretty sweet uh i
76:56 - kind of i'd like to do a game with this
76:58 - as well
77:08 - uh edward wants to know how long it
77:09 - takes to become a good programmer and
77:11 - react uh it's hard to say for sure
77:13 - really that just depends on so many
77:15 - other factors so um
77:18 - i
77:19 - i couldn't say how long it would take
77:21 - any one person because it really depends
77:23 - on their previous experience and how
77:26 - much time they have to dedicate
77:28 - to to learning and practice
77:33 - pseudocrypto says best coding channel
77:35 - i'm gonna assume that's a statement and
77:36 - not a question and say that uh thank you
77:39 - for saying free codecamp is the best
77:41 - coding channel
77:45 - uh
77:46 - curious souls says freecodecamp.org is
77:48 - awesome
77:49 - i agree
77:51 - thank you
77:56 - pseudocrypto asks if anybody is into
77:58 - cryptocurrencies i do have some
77:59 - investments in cryptocurrencies i'm not
78:02 - like
78:02 - all about it uh but i just
78:05 - have a little bit of money in a couple
78:06 - different cryptocurrencies
78:13 - uh him once you ask what browser i'm
78:15 - using it's google chrome
78:28 - okay uh andre romanov mentioned that the
78:32 - homepage name was wrong thank you for
78:34 - that andre
78:36 - i uh i wish i would have seen that
78:38 - because you definitely caught that
78:39 - before i did so shout out for uh for
78:42 - catching my mistake before i did
78:59 - whoa
79:00 - sorry my uh
79:02 - the scroll bar just jumped on me in the
79:04 - live chat
79:05 - i lost my place
79:08 - there we go
79:14 - preach says
79:15 - rm-rf which is the command i used uh is
79:18 - the path to getting fired yeah but he
79:21 - added the uh an asterisk after the rf
79:23 - which is basically
79:24 - delete everything recursively yeah don't
79:27 - do that
79:29 - unless for some reason you want to wipe
79:31 - everything off of your your computer
79:44 - says i'm 14 years old how to start
79:47 - learning this skill
79:48 - definitely check out freecodecam.org and
79:51 - start with the free lessons there
79:53 - and that's that should be a great place
79:55 - to start
79:59 - uh pre pre-fee says does the notion work
80:02 - as expected
80:03 - uh yeah it definitely does work as
80:05 - expected
80:06 - i
80:07 - i
80:08 - when i first tried it out i was
80:10 - surprised at like how accurately it
80:13 - it picked up brain patterns and stuff so
80:16 - i'm very impressed with it
80:19 - abdullah asks what's the right pathway
80:22 - to teach myself coding
80:24 - i'd definitely start out with some free
80:25 - resources so you're in a great place
80:27 - right now the free code camp youtube
80:29 - channel check out the freecodecamp.org
80:31 - lessons and um yeah i would definitely
80:33 - start with some of the free resources
80:35 - first
80:36 - if you decide that there's something you
80:38 - really want to learn and you want to pay
80:39 - for a course or something that's fine
80:40 - but i would
80:42 - you know start out with a free code camp
80:43 - stuff first before you commit
80:46 - you know money money to your learning
81:05 - oh uh rory says can you put a link for
81:07 - the app please yeah i'll link it let me
81:09 - throw this in the chat
81:11 - grab this link
81:12 - i'm gonna throw this in the chat and
81:14 - then i'm also gonna put it in the github
81:17 - repo
81:19 - so if you go to the github repo you'll
81:21 - see it right there
81:22 - where's this at
81:36 - there you go so now if you go to the
81:37 - github repo which the link is in the
81:39 - description you can just click the link
81:42 - and that should take you right to the
81:44 - the demo
81:50 - all right somebody asked a question i i
81:52 - cannot read their name it's in
81:54 - different characters than i'm used to
81:56 - reading it says how to how do you focus
81:58 - on programming for a long time for
81:59 - example during the month or half year
82:01 - what do you usually force do to force
82:03 - yourself well
82:07 - getting paid to program is a good way to
82:09 - force myself to do it like i have a boss
82:11 - i have teammates that'll check up on
82:13 - what i'm doing
82:14 - so that's a good way to force myself
82:17 - you know doing these these coding live
82:19 - streams and coding videos helps as well
82:21 - because i have people that
82:23 - you know they can see how much progress
82:24 - i've made they're expecting me to
82:27 - do the streams and things like that so
82:28 - that helps
82:30 - setting goals does help
82:33 - but yeah i'd say like
82:35 - whenever
82:37 - like whenever i have to code to make
82:38 - money to pay the bills and take care of
82:40 - my family like that's that's a good way
82:42 - to
82:45 - it's a good motivation
82:47 - right i can't i can't not work right i i
82:50 - have to do my work now
82:53 - i do like to code so that's also a good
82:55 - motivation but
82:57 - sometimes even things you like to do you
82:59 - don't want to do all the time right so
83:00 - like i like to work out but i don't like
83:02 - to work out all the time right
83:04 - so um yeah for those times when i don't
83:07 - feel as motivated or coding doesn't seem
83:10 - as fun as it normally does
83:12 - then what does help is just the
83:14 - responsibility of
83:15 - you know people are counting on me my
83:17 - family's counting on me my teammates are
83:19 - counting on me you know my company is
83:20 - counting on me so
83:22 - uh kind of that feeling of
83:23 - responsibility helps as well
83:28 - and if it's just in terms of like
83:30 - feeling like i can do it
83:32 - i to be honest with you i probably drink
83:33 - too much caffeine so
83:35 - that's
83:37 - also another
83:39 - uh another way i get motivated
83:42 - good question though
83:48 - i am skipping over a few questions
83:49 - because there are repeat questions that
83:51 - i've already answered so um
83:54 - apologies if it seems like i'm not
83:55 - answering your question
83:57 - but i have i've had a couple questions
83:58 - that i've answered multiple times so i'm
84:00 - just kind of skipping over
84:07 - uh lock lock raj says is this good for
84:10 - any kind of mobile application i'd say
84:12 - yeah definitely you can use react native
84:16 - for
84:18 - android ios or web and actually other
84:21 - things as well so there's there are ways
84:23 - to
84:24 - use react native to build for instance
84:26 - like smart tv apps
84:30 - i'm showing some of the other stuff i've
84:31 - seen
84:32 - i've seen some weird stuff like
84:35 - building a word document out of react
84:37 - native code but
84:39 - in terms of actual
84:41 - useful things
84:42 - i don't know maybe there is some use
84:44 - case for that but i kind of thought it
84:45 - was just
84:46 - a uh
84:48 - a project just to say like hey look what
84:50 - we can do
84:52 - so yeah but definitely react native i
84:54 - think is a great way to build apps from
84:56 - multiple platforms
85:02 - um so
85:04 - soterios says have you had any other
85:06 - ideas for applications with notion yeah
85:08 - for sure so i've had ideas for
85:10 - like a game i really would love to do a
85:13 - a game
85:14 - for children
85:16 - with to help them learn how to calm
85:18 - themselves down
85:20 - and
85:21 - i think it would be very helpful for
85:23 - children who maybe have uh have issues
85:26 - with
85:27 - like
85:28 - um obsessive-compulsive disorder issues
85:31 - with anger
85:33 - issues with anxiety
85:35 - that way like they can
85:38 - in in some type of like video game type
85:41 - of way that would be very
85:44 - um like they would really get into like
85:47 - something fun that they would want to do
85:48 - but in reality it's teaching them
85:50 - to calm themselves down so the the
85:53 - things in the game are changing based on
85:56 - their brain patterns
85:57 - and success in the game
86:00 - can only be achieved through
86:03 - making their brain show like calm
86:05 - patterns right
86:07 - so
86:08 - that's the high level
86:11 - goal of the game i would like to make
86:12 - i'm not exactly sure the best way to go
86:14 - about that i'm not a game designer right
86:17 - and i'm i'm not
86:18 - like
86:19 - a scientist that studies brainwaves
86:21 - either so i just had had the idea uh and
86:26 - i imagine it's gonna take a lot of trial
86:28 - and error for me to make something
86:29 - useful
86:31 - but
86:31 - that's one of my ideas another idea i
86:33 - have is
86:35 - trying to
86:37 - just link this up with
86:39 - something that can help with like
86:40 - internet of things so
86:42 - some product like if this than that or
86:45 - zapier
86:47 - so i would
86:49 - those would basically open up to
86:51 - somebody who's a non-coder the ability
86:53 - to use the notion headset with
86:56 - a variety of other tools
87:00 - that
87:01 - they would just be able to basically do
87:03 - some like drag and drop
87:06 - coding i guess
87:07 - with those if this and that and tapir
87:10 - so those are my two like main ideas for
87:13 - it i also have like just a few other
87:15 - updates to this app we've been working
87:17 - on that might make it a little bit more
87:19 - useful
87:20 - uh
87:21 - and i mean let's face it to you hi it's
87:23 - not great looking right now so there's
87:24 - some some basic stuff that could
87:26 - probably help
87:44 - all right i've got somebody was like
87:45 - spamming the channel it did get
87:47 - automatically hidden so that's good but
87:49 - i'm trying to make my way through it
87:59 - wow a lot of stuff in there
88:02 - yeah please don't don't try to spam the
88:04 - the channel
88:08 - all right
88:09 - okay a few more people shouting out
88:10 - where they're from someone from
88:12 - amsterdam
88:13 - angola
88:21 - netherlands detroit brazil kenya
88:24 - awesome
88:31 - pakistan more from brazil
88:34 - um have a question how long have you
88:36 - been programming
88:38 - uh
88:39 - i guess it's been a long time now um
88:42 - let me think
88:44 - so
88:46 - been like a couple years at
88:51 - one two
88:53 - five
88:55 - i'm gonna say like eight-ish years
88:57 - something like that
88:59 - i'm not i don't remember for sure but
89:00 - i'm gonna say around eight years of
89:02 - programming
89:03 - like actually programming for money
89:05 - right like i i messed around with some
89:07 - stuff before that but like really
89:09 - programming like as a job
89:11 - probably around eight years at this
89:13 - point
89:21 - oh my goodness i gotta find i need to
89:24 - just
89:27 - hide this user
89:29 - all right i'm gonna hide
89:32 - one there's a user that kept spamming
89:33 - the channel luckily
89:35 - the messages were getting hidden but
89:39 - it's just making it hard to see the
89:40 - questions on here
89:42 - okay
89:56 - uh umair says which project do you
89:58 - suggest for react js beginner to make
90:00 - them take them to the next level
90:02 - um i don't know for sure uh you probably
90:05 - want to do a project that's a bit more
90:07 - complex that
90:08 - like you need to make api calls
90:10 - maybe do some more advanced state
90:12 - management something that would require
90:14 - like the context api or redux
90:17 - that's probably going to help you get
90:18 - more to the next level
90:22 - just i guess the the complexity of it
90:25 - will will help you kind of think through
90:28 - better like ways of
90:30 - programming and organizing things
90:33 - so in terms of exactly what that would
90:35 - be i don't know um
90:39 - it could be a lot of different types of
90:41 - projects i'm not sure but
90:45 - if it incorporates those like for
90:46 - instance maybe like a message board some
90:49 - sort of forum
90:50 - with the ability to make posts uh the
90:52 - ability to comment on posts things like
90:54 - that that would require
90:58 - require a little bit of thought
91:01 - right so
91:02 - um maybe something like that would be a
91:04 - good place to a good thing to work on
91:06 - but i mean to be honest if you find like
91:08 - open source projects that are react
91:10 - based
91:11 - that may be even better because you'll
91:13 - get exposure to
91:15 - some
91:28 - to react available i'd say you could
91:30 - jump whenever you want just whenever the
91:33 - opportunity arises that you need to
91:34 - build a native app then you jump right
91:37 - into react
91:42 - native uh cash app asks what's the
91:45 - difference between xml and json
91:48 - uh
91:50 - i find json to be cleaner to look at to
91:53 - be honest with you xml has a lot of
91:54 - angle brackets that
91:57 - i don't know i don't really they
91:58 - basically serve the same purpose though
92:00 - it's just a matter of the syntax
92:10 - uh
92:11 - sandu says what's the difference between
92:13 - react js and react native i actually
92:15 - just did a video explaining the
92:16 - difference so
92:17 - if you check the description to this
92:20 - this live stream
92:21 - uh there's a link to my youtube channel
92:25 - in the description
92:26 - click on that and one of the latest
92:28 - videos on that channel is going to be
92:31 - the difference between react and react
92:33 - native so check that out
92:35 - i give some examples and and do more
92:38 - like a thorough answer to that
92:41 - yeah definitely if any of you enjoyed
92:43 - the the live stream and want to see more
92:45 - stuff by me i did a lot of previous live
92:47 - streams on free code camp and then i did
92:49 - some live streams and tutorial videos on
92:51 - my own youtube channel so please you
92:53 - know check it out if you like it like
92:56 - you know subscribe watch some of the
92:57 - videos
92:58 - you know the more the more people that
93:00 - watch and say they get something out of
93:02 - it you know the more videos and streams
93:04 - i'll try to do i really i like doing it
93:06 - but
93:07 - um really like only if people feel like
93:10 - it's useful
93:11 - why keep doing it you know what i'm
93:13 - saying like i i want it
93:14 - i'm not making any money off it or
93:16 - anything
93:17 - but
93:18 - if i'm helping people i want to keep
93:19 - doing it
93:25 - uh lewis wants to know more about the
93:27 - second argument of use effect
93:29 - so yeah the use effect argument so let's
93:32 - see where we're using it so for instance
93:34 - on this use effect the first argument is
93:38 - this whole thing right this
93:42 - function
93:44 - the second one
93:46 - is this array
93:48 - now
93:49 - the array everything we put in this
93:51 - array
93:52 - anytime this updates so these are two
93:54 - pieces of state focus and user are two
93:57 - pieces of state
93:59 - if focus changes or if user changes this
94:01 - is going to run
94:04 - if nothing else if something else
94:05 - changes that's not inside this array
94:07 - this will not run
94:08 - okay so that's what that's that second
94:10 - argument does if we left this empty
94:15 - then it would only run when the app
94:17 - first mounts and it would never run
94:18 - again unless the app unmounted and
94:20 - remounted
94:22 - if we didn't pass in a second argument
94:23 - at all this would run every time
94:25 - anything changed any piece of state
94:29 - that changed if we're using redux like
94:30 - any piece of redux door change this
94:32 - would
94:34 - this would change every single time
94:36 - or it would run every single time that's
94:38 - that's what that second
94:40 - second thing does it may there may be
94:42 - more to it so you know check out the
94:44 - documentation for react but
94:47 - in terms of
94:49 - like my coding experience those are
94:51 - basically like the three
94:53 - cases that come up most often
95:00 - uh dola soul says what's your schedule
95:02 - will you be live tomorrow probably not
95:04 - tomorrow uh i gotta work tomorrow
95:08 - um
95:09 - i would say the soonest that i would
95:11 - live stream again maybe like tuesday at
95:13 - some point
95:15 - i do have to work tuesday but i might be
95:16 - able to squeeze a live stream in we'll
95:18 - just we'll see how it goes
95:42 - uh
95:44 - let's see
95:45 - tung trung says uh excuse me may i ask
95:48 - how do i learn html and css well
95:51 - check out freecodecamp.org the first
95:53 - lessons are all on html and css that's a
95:56 - great place to start beside beyond that
95:58 - practice is just keep practicing look at
96:01 - projects that are they're good see how
96:03 - they do things uh but
96:06 - freecodecam.org is is a way to start
96:25 - uh garvit is asking about how to learn
96:27 - react uh freecodecamp.org actually has
96:30 - react lessons and they're pretty good
96:32 - in fact when i um
96:34 - at work
96:36 - i
96:37 - when i first got hired one of the things
96:39 - that i needed to do was teach my the
96:40 - rest of my team react
96:42 - they didn't really have very much
96:43 - experience with it and one of the first
96:45 - things i did is showed them the free
96:46 - codecamp.org lessons i had them go
96:49 - through all the lessons
96:50 - asked me any questions they had and then
96:52 - after that we would pair program
96:54 - together
96:55 - for a week at a time until i went
96:57 - through everybody on the team and that's
96:59 - how
97:00 - i went about you know getting them
97:02 - more knowledgeable about react so
97:05 - i would definitely check out those
97:07 - lessons
97:15 - thomas yeager says why did you not use
97:17 - redux in this application a lot of your
97:19 - state you used in multiple components
97:21 - redux or context api would have been
97:22 - beneficial here um actually thomas so
97:25 - like
97:26 - i i don't have multiple components i
97:28 - just have one big component for this
97:29 - project so um actually i think you you
97:32 - had asked about this a little bit
97:33 - earlier in the video so uh just kind of
97:36 - reiterate that
97:38 - i normally do use redux or context api
97:42 - when i have a larger application
97:45 - so that is a good call for a larger app
97:51 - ams what certificate is worth the most
97:53 - on uh workforce
97:56 - i don't really know much about what
97:58 - certificates
97:59 - i for what i do i don't need
98:01 - certificates so i don't worry about that
98:03 - if anybody else knows about
98:05 - like
98:06 - computer
98:07 - type certificates you know let us know
98:09 - in the chat
98:13 - kerry says hi just started learning to
98:15 - code wanted to say thanks for taking the
98:16 - time to explain every detail
98:18 - oh you're welcome i'm i try to explain
98:21 - as much as i can
98:23 - so you know but if i missed something
98:25 - feel free to ask a question but thank
98:26 - you for saying that
98:29 - uh charis says hi awesome stream awesome
98:31 - chat by the way ah thank you so much
98:38 - cashyapp says what is the purpose and
98:39 - then quickly followed up with the
98:41 - purpose of xml and json files i'm glad
98:43 - because i was about to go into a big
98:45 - talk about the purpose of life but
98:48 - the purpose of xml and json files
98:51 - usually is some type of configuration so
98:55 - it's just a bunch of key value pairs
98:57 - to
98:58 - let a
99:00 - some type of program know
99:03 - like some information that you wanted to
99:04 - know it's like it's a standard
99:07 - so if you make an api call you're
99:08 - probably going to get back json
99:11 - maybe xml if it's a little older or
99:12 - something like that but it's it's a
99:15 - standard way to provide information to
99:17 - an application
99:35 - all right sorry if that froze things for
99:37 - a second that was weird
99:38 - uh my computer just kind of like uh
99:41 - stalled for a second there but
99:44 - let's see
99:46 - i
99:47 - atendra says can i follow the brain
99:49 - computer app series to learn react
99:51 - native if i only know
99:52 - react um
99:54 - you'll definitely learn about react
99:56 - native i don't know if you'll
99:58 - if it would be like the best tutorial
100:00 - but
100:01 - uh
100:02 - it's you will definitely learn something
100:03 - about react native for sure
100:13 - all right oh that's pretty much it
100:15 - hopefully i got to all the questions and
100:17 - um
100:19 - yeah so i'm gonna i'm gonna log off now
100:22 - and uh and finish up the stream and
100:24 - take the rest of the sunday to hang out
100:26 - with my family uh we're probably gonna
100:28 - have uh watch a movie here soon or
100:30 - something
100:31 - so uh thank you all so much for watching
100:34 - uh it was this was cool it was
100:37 - hey we we accomplished what we wanted to
100:39 - accomplish today
100:41 - and i'm definitely going to redo that
100:43 - part two of the stream so look out for
100:45 - that coming up i'll probably do it as a
100:47 - live stream and we'll just kind of go
100:49 - back over what we did in part two that
100:52 - got deleted
100:53 - um beyond that i'm i'm kind of wondering
100:56 - what to stream about next so maybe more
100:59 - of uh more of this project maybe a
101:01 - different project let me know what you
101:02 - think and and what might be beneficial
101:05 - to you um and if you like this you know
101:08 - please subscribe to this channel check
101:10 - out our other videos check out my
101:12 - youtube channel links in the description
101:13 - feel free to reach out to me on social
101:15 - media
101:16 - i'm on twitter i'm on
101:19 - instagram linkedin i'm i'm on like all
101:22 - this stuff so just find me and uh if you
101:24 - send me a question i'll do my best to
101:26 - get back to you as soon as i can
101:28 - so have a great a great week i don't
101:32 - know when the next time i'll stream is
101:33 - uh you know i'll try to stream
101:37 - at some point in the week if i can uh
101:39 - but
101:40 - uh if i don't have a great week and i
101:43 - hope to see y'all next time thanks for
101:45 - watching

Cleaned transcript:

hey everybody welcome to live coding with jesse i'm jesse and uh today we're gonna do two things number one we're going to put in some sort of desktop notification whenever you lose focus for this app and number two we're gonna deploy this react native project as a web app and there's a couple different ways we could deploy it i think we're going to go with github pages that way anybody that checks out the github repo can also easily get to the uh the demo uh of this so there's a ton of stuff in the live chat now i tried to uh glance through as much as possible uh just to see what people are asking it seems like uh a lot of you are just kind of talking in the chat that's awesome a lot of people saying hi so hey what's up uh but i did have um somebody asking about part two of this series part two is has been deleted it is definitely uh i believe it's my fault that is deleted i'm sorry about that i'm gonna redo part two so that will be available at some point uh but for now just skip to part three uh and hopefully there's not too much that you missed uh from part two but i'm definitely going to try to go back look at the uh what i did between part one and part three and then redo that probably as a live stream to try to make it this like as similar to the original as possible but um just as a quick intro for anybody that's joining for the first time or you know maybe hasn't seen all the videos in this series this is live coding with jesse so i code mostly react native projects now i've done other things in the past and i don't rehearse beforehand the goal is just to see a software engineer coding without rehearsing anything all the mistakes included try to debug as we go and try to be as realistic as possible with what my normal coding experiences is like i do have a little bit of a structure to this so i'm going to set a 25 minute pomodoro timer soon and then i'm going to code for 25 minutes and then i'm going to take a little break and answer questions so if you're asking a question in the chat and it seems like i'm ignoring you just hang on for a little bit longer and once my timer goes off i'm going to try to get to all the questions now for this particular app if you want to know like what we're doing probably go back to the first uh in this series so this is part eight of the series on uh building a brain computer app i do a an overview in part one so the summary is basically i'm taking this brain computer device which i'm going to put on in a second this is the neurocity notion it's it's a pretty new uh and this has the parts inside of it like you would normally see on a cell phone and basically what it does is it reads your brain waves and sends some data in this case to a web app that we've created well actually it's a mobile and web app that we've created with react native now you can get a lot of different data but in particular the data that i'm using for this app is data on focus so the goal of the app is just to let you know when you've lost focus so i'm gonna put this on and you can see on the screen that it's measuring my focus so it probably needs a second to get get ready there we go so i got a little bit a little bit of focus going on here you see sometimes i'm losing it um which i imagine while i'm trying to talk and live stream i probably won't be super focused but right now if we were on a phone we would get a vibration and the color of the screen would change when i lose focus but we can't vibrate on the web right so we need to add something into the web and i'm thinking maybe some sort of notification potentially a sound uh that's that's the plan right now so let's check out in our app here and you can see this the link to the github repo is in the description of the video so if you want to check out the code and follow along everyone you know feel free to do that i've kept everything pretty simple in one file app.tsx is where everything's going to be happening a little bit later on we're going to go into the package.json file as well and add a few things but for right now we're just going to step in the stick in this app.tsx file and we need to find out where we're setting the the current notifications at for mobile which is the the vibration so let's go through here and just check out some of our functions there we go here's where we're doing the vibration so this is where we want to do this as well for our notification so we're going to need to get some code to do this so figure we'll uh we'll look that up there is a there is an app already that i use it's my pomodoro timer app and it's called pompom and it was built by someone that used to watch the live stream all the time his name is harshit so let's go to his github repo and see how he's done it in his app and see if we can borrow a little bit from his app for our app so let me see if let's see if that's the name of his repo looks like there's a lot of repos like that so let's just go to a harsh it's repo then we'll just get a good hub and he's pretty active so he should actually be right in my activity there we go and let's check out his repositories and type oops let's do language we're going to pick javascript it looks like all this stuff is javascript so let's see if we can find it palm does he not have a repo for it um oh no maybe he doesn't have it uh timer no i was hoping he'd have the code for it but maybe he doesn't have the code for it all right then i guess we'll just have to look it up and go through quickly just to see if he has it and it's just named something else but all yeah that's going back kind of far i don't see it so let's just look it up then uh so show notification from web so mdn is a great resource mozilla developer network and we're going to use the notifications api so let's see how we do it we definitely need permission uh and so i guess we're gonna have to request permission and then let's see oh cool there's a little code yeah let's grab let's just grab this code for now and then modify it for what we need so let's throw it in here and we can kind of read through this and see what's happening here all right so we need to check that's a good check see if browser supports notifications and oh see if i don't really want to alert so let's get rid of the alert what we're going to do is instead move all of this into the if statement so we're only even going to attempt this if the browser supports notifications let's get rid of this else so we're gonna say if there are notifications so now we're going to say so if the browser does support notifications we're going to check to see if permission has already been granted okay so if it has been granted then we'll do something here otherwise we need to ask cool and then not only that but we also need to check to see if the window object even exists right because if we're not on web this window object doesn't exist that's going to throw an error so react native gives us an easy way to check for this which we're going to do in just a minute but i'm going to change this up to an arrow function just to match the rest of the app and i'm going to say this notification init is what i'm going to call it and we're gonna run this only if we are uh in in the web so let's go up here to where we import react native and we're going to import platform so platform is going to let us know if we're on the web or not so we're gonna use let's see one of these use effects would be a good place to check and maybe down here actually let's just search if we have a use effect that i'm currently using as there we go this particular use effect right so react has these life cycle hooks right and basically does things at different points in the component life cycle a use effect hook with the second argument passed in is an empty array so the first argument is a function the second argument is an array if it's an empty array this happens when the component mounts so this should only happen basically for our app when the app loads so we're already doing a check here for async storage okay but let's do another check here and let's say if platform dot os equals web then we want to call notification and knit okay all right so now if we have if we're calling notification init would be down here right now we're going to check to see if the browser supports notifications if it does and permissions granted now we can do notifications so i'm not going to immediately show a new notification i'm going to leave that code there for a second but what we're going to do is we're probably going to set set notification and we're going to set notifications to true so we're going to we're going to set our state here and let's see otherwise we need to request permission so we already have our code here to request permission so the browser is going to ask that uh if permission is granted then we're also going to do set notifications to true all right um now if for some reason it's not granted let's set our notifications to false if you're a little bit lost it should make a lot more sense once we actually demo this all right and we haven't even created this part of state yet so let's let's do that now otherwise nothing's gonna work so we can say cons notification set notification oops notifications use state and we're going to set it by default to false okay all right so now let's go back down here and right here was the use effect where we set the vibration right and let's say let's go here now and first we're going to check to see if notification is true right so at this point if notification is true that means that we've already checked to see whether or not or on web so we won't have to recheck that and we've already done the check to see if notifications are available in that browser like if it's a new enough browser that it has notifications so we've done those checks and we've also checked to see whether the user has enabled notifications whether they need to enable or whether they've rejected them so at this point we should just need to say notifications so if notifications are true i'm going to use a turn area here so it's actually kind of a shortcut right so if notifications are true we're going to do something and this is what we're going to do so we're going to do a notification i'm going to say new notification and let's see if this could work like this if i don't actually have to create the variable if this will just throw it i'm not sure because i haven't really worked with notifications before in code so let's see how this works and let's just say stay focused all right now i'm not sure if there's the equivalent of a cancel notification we'll see we'll see how it goes well we may have to come back here and and check out the documentation a little bit more all right so now it once it's asking me uh if it uh i want to allow notification so i'm going to allow now let's see if we get get one look we got notified oh you can't see it because of my my face let me change this all right so way down in the corner it's small i don't know how to make it bigger but stay focused came it says stay focused right so we are getting in the notification to stay focused so that's awesome that works um actually cool we just got um a like a donation or a sign up or something i'm not sure what it is uh but dion uh dimucci um just donated a free code camp so thank you very much for that uh i'm a little i'm a little new with the whole um being able to have donations and stuff in the chat so i'll try to look for those and uh give you all a shout out when i see it um i think it's really cool and it's going to be very helpful for uh for code camp though so that's awesome and quincy's in the chat too uh so if you don't know quincy is uh the the founder and head of free code camp uh so thank you so much for being in the chat quincy um that's it's always cool when quincy's here um all right so we we have the notifications here and it's actually giving me like a tiny little um noise like a notification noise which is cool because i had thought about adding in our own noise but i don't think we need to i think that notification is fine uh i don't want to be like extra annoying to the user because i'm trying to keep them focused not not have them lose their focus right so if we're too intrusive like well the giant red flashing screen might already be kind of intrusive but if we're too intrusive with noise and everything it might just be too much but i think that's that's pretty awesome the only thing i want to look up is like can we manually take away the notification like let's say they get focused again i don't want them to have to come down here and clear that notification out let's see if we can cancel it so we got all our methods here uh event handlers let's see so let me make that bigger sorry that was probably way too small for everybody uh but let's let's go here and see so notification actions interesting buddy this looks like all the stuff we can put in our notification well while i didn't realize there was so much to these notifications this is really cool and we can actually do a vibration which i suppose that would work like if you were running this in the browser on your phone that's kind of cool i don't think i'm going to implement that today but it's good to know on close on air on show notification close cool all right let's click this and see how we would do notification close this feature is available in webworkers in secure context uh oh my gosh i must be like uh losing focus pretty frequently here so all right so i think we do need to give our notification a name and so then we can actually call close on it and then let's let's see see how we do that so i'm going to change this because i don't know that we can do this inside of our little shortcut ternary here so let's change this to an actual if i hate to do so many nested is but in this case we'll just go with it well this project has never it's never been refactored or anything this is still pretty uh pretty new so don't take what i'm doing is like the best way to do anything uh in this live stream a lot of times what we're trying to do is just get stuff working and you know sometimes we go back and and do a little refactoring but for the most part let's see const there we go const n is a notification and actually this can't be i gotta define this out here so let's say this let's did i call okay no i called state notifications so we're good i let notification it's gonna be mad that i didn't has any type i didn't give it a type i'm not really sure what the notification type is in typescript so we're going to just leave it at that for now notification equals now we should be able to do is say notification dots close all right so let's see if that works whoa did not work cannot read close of undefined okay maybe we need this let's see let's see if this helps us uh nope cannot read property close of undefined checking the uh chat really quick just to see if anybody has any uh comments about what i'm doing right now occasionally you all figure out how to do the thing that i'm trying to do and uh tell me about it in the chat all right so that didn't work why did that not work looks like the only different thing that we did that they did they added these options i mean this is def this is inside of an event listener oh okay i see um anthony's saying the initialization is in the if statement i'm closing in the elf state else statement is only being defined in the sk all right did i mess up the scope let's check that out so if all right so basically what potentially could be happening here is that since this is an else all right how about this if notifications let's see if there is a notification then we close the notification let's see if that works it doesn't look like it's actually closing it though i look at my my action center has all these notifications i wonder if it can actually close the like i don't usually when i get a notification it stays in my action center and it's not um like it's it's it doesn't get close right is that a thing that happens like that websites can close them let's see got some some of you are helping out in the chat so let's check out what you're saying all right so i'm getting a bunch of different suggestions here let me try to keep them straight let me check it i got about four minutes left before i'm gonna go back to the chat and answer a few questions and then after you answer some questions then we'll actually deploy this i wonder i'm not really seeing much of a difference between when i actually put this in and when i didn't let me yeah you know what i think i'm going to leave this out for now because i i don't actually see any difference on my screen oh you know what i forgot that i y'all can't see the notification um basically what's happening is the notifications are going on and off um whether i have this code in here or not now this might be dependent on browser and operating system but in terms of being on chrome on a windows 10 computer it seems like the notifications only stay on the screen for a second and then go off anyway so i don't really see that we need to like manually close the notification even if this was working which i'm not even sure if it was if it's working because it didn't seem like anything was different but what was different is we did get a few errors whenever we were we're doing this so let's get rid of that now and let's just do this let's get rid of this for now you know at some point maybe you will add something else into the notifications might not be a bad idea if we ever like actually get a real logo for this maybe we can throw that in there uh you know make it look a little bit nicer but for right now i think that that basically gives us something else you know mainly what i wanted is if i'm on a desktop and i'm using this i'm probably not going to be staring at this screen all the time right so the change that i see is not going to help me it was different whenever i you could have the phone right the phone app one from previous episodes you could potentially just set your phone out and see the color change and feel the vibration and that would warn you to stay focused but on a desktop the color change isn't going to do anything you're probably working on something else and you don't have it up on your screen you need something else you can't have vibrations so this notification should come up on top of whatever you're working on so i think we have kind of mission accomplished in terms of what the point was for that so i'm gonna go back back in here let me put this down here and um let's create a pull request or i'm not gonna do a pull request i'm just to merge this straight into master because it's just a small project at this point so let's do a git status just to see what's changed which only app.tsx has which is what we should expect we'll do get commits am and we'll add this as a new feature and we'll say show desktop notification on web i don't need to do that i just do get push when i'm at work i always have to do a git push origin and then whatever branch i want to push to and do like a legitimate pull request on a separate branch so i'm used to doing it like that when it's just my own private project here i don't worry about that so you can just do get get push and it'll go right to your origin by default whatever your branch on all right cool i don't know if i'm messing up it's possible that all my my headphones or something is messing up the focus on here but i feel like it's going up and down really fast we may have to let's try to figure out if it's just me or if there's something up with how this is going up and down so much like something in terms of code or anything but i guess when i try to focus i can keep the focus uh a little bit higher so maybe it's just hard to focus talking and coding at the same time all right so that's cool for the first part of the live stream i'm gonna set let's say a five minute timer go to live chat answer a few questions and then we're going to come back we're going to build this for the web and we're going to deploy it to github pages so i'm scrolling up and i'm just going to start off at the top and answer as many questions as i can all right so see the questions about part two in the series which i explained that at the beginning so if anybody's interested in the missing part two of this series uh then go back to the beginning of this stream uh when it's done and i gave an explanation for that uh andre says i recently started learning javascript and i noticed that everyone talks about react what is it uh there's a lot of good discussion in the chat about that so if you're interested in hearing all that discussion scroll back in the chat to the beginning of the chat and you can see that but basically react is a javascript library that helps you build out like the front end of of your app it has some different components to it a certain way of doing styling and one of the biggest things in my mind is the way it handles state management and updates like updates as your users clicking around things change right it's it's very nice i like how it handles that so i don't want to go into like a big discussion of react right now because i don't think i have time for it anyway uh but basically the short answer is it's a react live it's a javascript library that helps you build uis user interfaces let's see oh there's a lot of discussion about this i'm kind of i'm scrolling through a lot of people saying hi i see all the hellos hey everybody people from all over the world here we have people from uh tanzania um let's see india nepal somalia pakistan palestine vietnam lithuania chicago very cool very cool everybody's watching from all around the world uh shoe bomb asks should i watch previous videos or directly watch this suggestions please um i i think you're you're fine to watch this right now like just to see what's going on if you want to get a better understanding of what we're doing then you might want to watch the previous ones but you know you don't have to uh just you know ask any questions if you're not sure what's what's going on at some point sajid asks what do you mean by brain app uh i mean this this app the main data that this app is working with is coming from your brain through this brain computer interface so that's what i mean when i say brain app we're working with data live data from from the brain swahan says i'm a beginner in programming can you tell me where to start i definitely recommend starting with freecodecamp.org check out the lessons there go through them it'll give you a great uh introduction to some types of programming and then you can decide from there whether you want to keep going with it and what type of programming that you want to do it's totally free i did it when i was a beginner and a lot of people have used it and it's it's helped them go from not knowing anything in programming to being professional programmers all right raphael from brazil was here my oldest son's name is raphael so uh what's up great name learn tech says it's night at my town would be available tomorrow this will definitely be available as soon as i'm done with the live stream usually give it a minute or two and it'll be available to watch the recording um you know almost immediately when i'm done with the stream let's see all right i'm gonna my timer went off so let's go back and let's launch this thing and i have the expo documentation up on my screen right here it's i'm kind of glad that my face is now covering up the notifications because every time i lose focus it keeps popping up now i think this app is definitely going to work well on desktop because the desktop notifications are becoming so annoying it is making me really want to learn how to stay focused so i think this is going to be a great thing all right but here's what we're going to do we're going to look at this building step and then we're going to skip down to the github pages step so first thing we're gonna do this build it says we can actually optimize for speed i've never run this before so let's try it out we do npx expo optimize let's try it out and see what happens i don't know if we need to close down our server or keep it open or what in terms of our local server so let's just try it and see if it works all right let's see what happened optima cannot optimize images without sharp cli run this command again after successfully installing sharp all right oh for those of you who watched the last couple episodes where we were working on getting this app into the apple app store i'm still working on that evidently that demo mode we put in it worked fine on android but for some reason the testers said they couldn't get it to work so i don't know if we need to like do another build and submit it but that's what i'm going to try to do so i'm not going to do that on a stream since we just we we did a stream where we did a build and submitted it so i'm probably just going to rewatch that stream and follow along with what i did before and do the same steps to build it and rerelease and see if that works but when this is done for web at least those of you who want to try this app and don't have an android phone now you'll be able to try it on the web so hopefully that'll be open it up to more users all right so it looks like this worked now let's see if this npx expo optimize works now cool all right it looks like basically all we had was our icon and our splash uh which oh yeah we did create those because we did that for the other stuff cool um by other stuff i mean the android and ios apps we created an icon and a splash screen and we saved 148 bytes not really sure that it was worth it in a bigger project that might actually be worth it but since we have no we really don't have anything in terms of assets we have the bare minimum right the icon and the splash screen so now we can move on and do expo build web all right and let's get that going not sure how long this will take i'm guessing not that long since there's not a whole lot to the project but this is going to create a new web directory so we have this build web directory here that we didn't have before and that's where our build falls are gonna be let's open that up and see oh where'd it go we lost it where'd he go there it is now let's see what's in here so now we have a bunch of files in here and this is where it's going to get hosted let's go all kind of stuff progressive web app stuff which is sweet very cool that that's actually cool so we have i'm gonna see what icon they have for this oh sweet so it actually took our icon that was in our assets and it made an apple touch icon chrome icon very cool i didn't know i did all that that's that's very useful see what it did i don't think we'll be able to see that oh it even made a little favicon that's very cool i i like that whoever um probably evan bacon so shout out to evan bacon who i don't think he's watching the stream right now he has before but he works at expo and he's he's been doing a lot of work for the expo web stuff so if i had to guess i'd say it was him that did all this stuff and that that's really a nice touch to automatically create all the icons and everything like that because doing that manually always it's not a lot of work but it always seems like a pain once you get to this part where you actually want to launch it and you know now you gotta go like into an image editor it just feels weird and it's something that is easy to forget uh forget to do and then when you realize you have to do it it's just like i gotta go in here and do this now so i don't know that's just how i feel i'm not really into image editing so that's not my thing so that's very cool and now we can deploy so let's go to github pages and we've already we already have a git repo the remote is already our github repo so we can skip that but we do need to do our yarn add d which means add as a development dependency uh gh pages so let's do that if you have a small like project that you're working on and you need to host it somewhere i definitely recommend gh pages it's very easy to do and let's open our package json now it's pretty easy to do and it keeps everything central to github and it doesn't cost anything so it's a great place to start if you're not to the point in your project yet where you really want to put a lot of money into it it's you know i have a lot of just kind of fun projects that i don't know if i'll ever do anything more with but it's really cool to be able to to try them out or when when people like i tell people about them and say oh yeah let's check this out and i can just click a link in github and and do a little demo so we have our scripts already out so we can't really copy and paste this entire thing since we already have other things in our package json so now we have a deploy and a predeploy the predeploy is just the expo build web that we did already and then their deploy uses github pages to deploy this uh to github which we are going to run that in a minute and we're going to have to put in our home page which we don't have at all so let's do our home page we're gonna have to change it obviously this is not the this is not our home page so yeah oh there we go so the documentation uses evan bacon's github so now i'm i'm really sure that he's the one that built this so we need to change that to the github for this project so we're going to go to github now and get that url stay focused so now we can see this is linked to the github repo that we're using so let's save that and we'll go back here to the documentation and see finally we can just do yarn deploy so let's try it out see if it's working cool let's run in webpack we're exceeding the size limit that's interesting i wonder why we're exceeding the size limit oh well very cool it's deployed it's published so we may need to work on our file sizes here at some point but it should be published so let's go to github now and let's see what would i do i accidentally did that let's see what we have here we have a gh pages branch now which let's just see what which gets deployed so you see all that stuff in our static web our web build directory that we just checked out that's all now push here and we should be able to go to i'm trying to think what the i don't remember what the default urls are so we're gonna have to figure that out for a minute uh let's go to our settings though and options there we go so we go down here to github pages here's the options for that so if if you do this on your own on a different project and you don't follow these steps like let's say you're not using expo this is where you would go to use github pages so there's a couple things you could do it's actually it's very cool you can use a custom domain you can if you want to do like jekyll you can do a theme here but otherwise you can take any branch right so we're using the github pages branch and that was set like by default through expo but i could choose any branch i wanted to or any folder like if i had a docs folder in my master branch insert it from that branch of that folder so there's a lot of flexibility here but anyway the the url is here and this is standard so like anything that i have on github pages if if i were to go to jesserrygold.github.io slash the name of the project then that would take me to the the site so let's see focus uhoh is it not working all right let's inspect it and see what's happening failed to load resource fail to load resource i don't know looks like looks like it's not working what happened all right stay focused favicon say focus manifest all right so it looks like it's not finding what it wants to find let's check this out so it should be finding this stuff all right so static that's interesting that it's not finding this stuff let's double check our documentation oops this one isn't working now either why is that oh no it literally broke let's run this again let's start our local server again just see if we can get it to run okay all right that's running now all right so we're running locally again but for some reason this one is not working and it looks like it can't find any other resources which is kind of leading me to believe that maybe it's a path issue let's see if it's finding anything yeah it looks like nothing basically so wondering if there's something else we need to change in the project something we need to do differently let's see so let's go back to our we can get rid of that let's go here all right so maybe we um need to do our build with the package.json this is scripts predefined bill trying to deploy all right looks like they're are more detailed instructions under that so let's follow this we did that that's the player app let's make sure you're sure it's good you did that configure your package json we've done that predeploy is automatically run to before deploy generate a production bill to your app with yarn deploy yep there's nobody about the url you set as your home page in package.json oh maybe you know what i set the wrong home page that's the problem if somebody's trying to tell me that apologies but i set the wrong home page so uh this is actually the home page that we want right this is the page of the repo and that's why i can't find anything so let's save that so at that point make sure you use the page the github pages url the one that your demo will be at not the the url for your your github repo so that is a different uh a different url so that that makes sense actually uh so let's do yarn deploy now which it's it's oh no what'd i do focus directory not empty okay it needs it to be empty that's weird i mean we can definitely delete that so i'm removing that so um web build rm rf is a very powerful command it'll delete everything recursively so we just did that in web build we're going to run this again because the error that we got was saying hey this directory has something in it which it didn't like so uh you would think that that you'd be able to keep running deploy and it wouldn't you wouldn't need to manually delete that so maybe we set it up wrong maybe something wrong with the project but either way like if you get that error then you just need to delete that you don't have to do it with the command line if you don't want to you could just go in and through the ui and delete it all right let's try this again whoops stay focused let's make sure the latest commit yeah 34 seconds ago yeah that seems like that should have worked by now there we go i had to empty the the cash and look now we we have it so let me get rid of what i was doing here all right close that out i'm just in fact i'm just going to close out our local server completely there we go and we're going to link up the notion let me grab my device id from my other screen put that in there put in my email and i'll grab my password nice sure what then cool so now on github i'm running this it's working i'm getting i should be getting notifications let's see if i'm getting it from let me there we go allow notifications cool so now i'm getting notifications from my github page which you can see down in the corner there i know it's really small i i really don't know how to make notifications bigger but it's working so now anybody can go there like even right now you could go there and you could run this now if you if you don't have a notion headset which most of you probably don't um because it's still kind of i don't know if it's like officially you can buy it like anybody can buy it right now or if it's still kind of like in development but uh still i don't think there are that many of them out there yet so if you want to just kind of like play around with it and see if it works you can type in test as your device id and like leave email and password blank and hit submit and it'll just have random numbers come up so like at least you can you can try it out uh otherwise you can try whoa oh that's weird an error invalid path oh that's that error that came up before i think we have a uh we have something for that so i believe what happened is my password manager put in the email address for device id and that at symbol was not you can't put that in there so it didn't like that but otherwise i would need to put in like my device id email password again i could sign in and it should work cool so mission accomplished for today i want to see if there's anything else i need to commit whoa all right splash package json oh yeah of course our package json i'm just gonna add everything and we'll do uh git commits i didn't have to put the a flag there it's just habit uh let's go there we go cool all right so we now have our app deployed successfully on the web we previously deployed it to the android app store what do you call that the google google play store and we have unsuccessfully attempted to deploy at the uh the apple app store uh but i'm gonna retry that so we've tried twice and it hasn't worked so i'm gonna try it again and see if we can get that in there uh but yeah at that point i don't know what we'll do next with this i don't know if we'll we'll upgrade this or we'll move to a different project or or what so let me know what you think like in the comments or uh on twitter or whatever and let me know like would you like to keep working on this brain computer interface project and add in some more features would you like to move to some type of different project if so what would you like to see for now though i'm going to answer some more questions and try to get through all your questions here before before i uh end the stream let me find where i left off okay all right i guess i don't need this on anymore all right so we have a question is there any way to set the state in a big object with you state rather than all those individual use state calls yeah that's a great question so let's uh let's look at this in the app here so we do have quite a few set state calls here what we could do we could have an object that does use state but what i found is that if i have an object for you state especially if there's nested values in that object for some reason like things just don't get updated like i want them to get updated so what we could use instead is something called use reducer and then we could pass in we can have an object for all the state using use reducer have it set up similar to redux and that has worked for me that might be a better way to go about what we're doing with this app since we have so much state here it's starting to get a little bit crazy but yeah that's definitely um that's a great question and i i think used reducer is probably the way to go if you start to get a lot of state that you're trying to handle danielle says love your viz thanks i appreciate that ace of spades says 135 repos what a mad was that when we were checking out uh harshit's repos he's a great programmer so although you should when you see someone's github and they have a lot of repos that like total repo count includes things that have been forked so that doesn't necessarily mean that they're like maintaining 135 repos so uh just kind of take that for what it's worth there you know somebody could potentially have none of their own repos and just like to fork other people's repost i see some thanks pretty much so i'm just i'm looking for for questions at this point uh brother philip says i have a question what if you're trying to build with an sdk but the documentation is trash that's a tough one um you know what this is actually something that i do if i can't find answers with the documentation is i'll go into github and i'll try to find other people that are using what i'm using so i'll go into the github and i'll go to a search right and what i do is i would search for something uh that is particular to that sdk like for instance notion right so i'd go in and i'd say notion.focus i'd copy that and i put it in here because i figure like what are the odds that somebody's gonna have notion.focus and not be using notion right so i'd go in here i'd go into the code i'd select it and i'd say probably want to try like javascript right i'm looking for some javascript and i'm going to try to see like if somebody else have does somebody else have notion.focus actually it looks like a lot of them have notion it's not i don't know if i could do it like this see if i could do like an exact match okay there we go that's a lot less so now i can see all right i want only the repos that are exactly using since i put those double quotes around it notion.focus right now i can see okay here we go these are the repo's that are using that so i can go in and say all right let's say i only want javascript oops didn't we just see that showing two available code results that's really weird that is isn't that weird like obviously this is javascript that's interesting um anyway like i can go in here and say like all right well here's an example of somebody using notion.focus right this is exactly what we're trying to do i can click into this and i can see all right this is how they used it sometimes that helps me because if the documentation is really bad or the documentation is wrong or outdated at least if you can find somebody else that's using what you're trying to use and see how they implemented it it gives you something to try so that's that's kind of my goto obviously if you could find it on stack overflow or something like that that's that's awesome too uh but this is nice because you get to see the code in context of a real project and you could see and you get to see like exactly like how old is this like all right this code was in here on october 12 2019 it's pretty new um yeah so you can judge like all right this code maybe it's 10 years old i don't i don't want to use it versus something that's way newer but it gives you a nice i think it's kind of a nice way to see like real world examples of stuff uh ace of spades says any books you can recommend on optimizing your code really having a hard time not making it a messy wall of text i don't really have any books that come to mind um in terms of optimizing code um i don't know if anybody knows of any books for like optimizing your code uh put them in the in the chat to be honest with you like i don't really read a lot of coding books i'm i'm more like i like kind of tutorials and videos i actually read probably a lot of documentation now for the different like tools that i'm using so i i'm not great with the book recommendations in terms of coding uh thomas jaeger says why not use context api or redux to set notifications at the global state level won't you be using notification state in any other components actually normally that's a great idea but it turns out that in this project i don't have any other components yet so everything's in app.tsx i just did i decided to leave everything in there just for simplicity um for for the live streaming uh because i i figured instead of trying to click around to different components i put it all in one i normally like to have a lot more components but i thought i'd try it try it like this just to see how it goes um i'm not exactly sure whether i like it or not to be honest with you i am i don't know this this length of component seems a little long to me like i could definitely do it uh but in terms of like ui it is very simple so like i don't think it would make that much sense to split the ui out into its own components at this point because it's so simple but the logic is has gotten quite large so it's possible that i could split out some of the logic into their own files maybe i like to keep like a utils like a utilities folder and you know break up some stuff into there so that's that's a good point like if you do want are going to be sharing state then potentially you would want to use context api or redux to share state if your app was larger and more complex emanuel census says you should erase the set notification false in notification init let's see where that's at erase that you saying that's probably not needed i agree that that's probably not needed i was just thinking if there was some way that i don't know if this is possible that someone who maybe had previously granted permission would somehow not grant permission i don't know uh but you're right like it seems like if they even got to this point then the permission is obviously not denied i don't know what the other states could be is it just denied or granted is there some other state anyway you're right dude this is probably unnecessary when i get the notifications working quincy in the chat says toasty and then he said get it because it's a toast notification i did get it uh did someone ask what language this was uh it is uh it's typescript so it's basically it's javascript and with react native uh and i am using typescript although this is not like fully typed so i'm using typescript very lightly quincy says thanks for sharing your wisdom here with everyone jesse you're welcome thanks thank you so much for the opportunity and for being here in the chat uh no or noel says what can i do with a brain computer uh you could do a lot of cool stuff with it so you know you could do like we're doing with our app and monitor your focus you could help monitor your level of calm like if you're trying to meditate or something try to get your calmness to a certain level you can actually link it up to other actions so on screen actions like clicking a button or something like that or with internet of things you could link it up so if you if you think a certain thing it may turn a light on or off right but it does is very basic but potentially like if you linked it up in certain ways you could do pretty complex things just with your thoughts uh so i'd like to do more with that on like future streams this is kind of like my first idea i do have other ideas of what to do with this so we might get to some of that you know later on um glorious says is there a selenium tutorial on this channel i don't know for sure i don't remember seeing a selenium tutorial but there is a ton of content on this channel so it's entirely possible it's there um dion dimucci asks what hardware will you use for the interface so um i think i explained this already but i'm just gonna throw it out there again this is the neurocity notion headset um there are other brain computer interface headsets that you could get um probably so one that's pretty inexpensive is the muse headset muse i haven't worked with it personally but i've seen other people work with it one that's a bit more complex is uh open i believe it's open bci that one may require you to like 3d print some stuff i believe you can buy a kit to build it without 3d printing it's been a while since i checked on that so there are a few other options but i i'm using the neurocity notion which comes with a very kind of easy to use javascript api i've gotten to the point in the chat where we were kind of going back and forth about the code so i'm trying to skip around and make sure uh or skim through and make sure i don't miss another question that i didn't see already all right we have seen a few questions about what is this app what is the purpose of this app i go over it a little bit at the very beginning of this stream so you could check that out if you want a more indepth explanation of it go all the way back to part one of this series and at the beginning of part one i i think i explained a in depth what this app is all about uh fuad sorry if i mispronounce your name says do you recommend using bootstrap for for layout um bootstrap is nice i prefer material design based frameworks i just i kind of like material design i've done a lot of projects with it so i'm i can implement material design stuff very quickly now since i've had so much practice with it so that's what i like but bootstrap is is certainly a good way to go very popular uh love overflow says why are you using typescript versus something like python or js uh i i use typescript at work so i thought why not use type typescript for this project it'll give me a little bit more practice i don't really know much about python i've done some basic python stuff but that was years ago and so i i'm a javascript developer primarily so that's why i kind of stick with javascript i figure i have a lot more knowledge to share about javascript and typescript than i do about anything else so i might as well stick with that from my live streams i don't have anything against you know any other languages that's just what i'm more talented at kristoff asks if i'm married yes i'm married and i have four kids all right everybody's shouting out where they're from let me go through so we got nigeria germany belgium brazil netherlands uh chile morocco colombia netherlands serbia india brazil morocco asgard nice russia egypt kenya saudi arabia morocco nice we got people from everywhere that is awesome tanmay says i made a brain controlled android game i use the emotive headset oh very cool i i'm not familiar with the emotive headset but that's pretty sweet uh i kind of i'd like to do a game with this as well uh edward wants to know how long it takes to become a good programmer and react uh it's hard to say for sure really that just depends on so many other factors so um i i couldn't say how long it would take any one person because it really depends on their previous experience and how much time they have to dedicate to to learning and practice pseudocrypto says best coding channel i'm gonna assume that's a statement and not a question and say that uh thank you for saying free codecamp is the best coding channel uh curious souls says freecodecamp.org is awesome i agree thank you pseudocrypto asks if anybody is into cryptocurrencies i do have some investments in cryptocurrencies i'm not like all about it uh but i just have a little bit of money in a couple different cryptocurrencies uh him once you ask what browser i'm using it's google chrome okay uh andre romanov mentioned that the homepage name was wrong thank you for that andre i uh i wish i would have seen that because you definitely caught that before i did so shout out for uh for catching my mistake before i did whoa sorry my uh the scroll bar just jumped on me in the live chat i lost my place there we go preach says rmrf which is the command i used uh is the path to getting fired yeah but he added the uh an asterisk after the rf which is basically delete everything recursively yeah don't do that unless for some reason you want to wipe everything off of your your computer says i'm 14 years old how to start learning this skill definitely check out freecodecam.org and start with the free lessons there and that's that should be a great place to start uh pre prefee says does the notion work as expected uh yeah it definitely does work as expected i i when i first tried it out i was surprised at like how accurately it it picked up brain patterns and stuff so i'm very impressed with it abdullah asks what's the right pathway to teach myself coding i'd definitely start out with some free resources so you're in a great place right now the free code camp youtube channel check out the freecodecamp.org lessons and um yeah i would definitely start with some of the free resources first if you decide that there's something you really want to learn and you want to pay for a course or something that's fine but i would you know start out with a free code camp stuff first before you commit you know money money to your learning oh uh rory says can you put a link for the app please yeah i'll link it let me throw this in the chat grab this link i'm gonna throw this in the chat and then i'm also gonna put it in the github repo so if you go to the github repo you'll see it right there where's this at there you go so now if you go to the github repo which the link is in the description you can just click the link and that should take you right to the the demo all right somebody asked a question i i cannot read their name it's in different characters than i'm used to reading it says how to how do you focus on programming for a long time for example during the month or half year what do you usually force do to force yourself well getting paid to program is a good way to force myself to do it like i have a boss i have teammates that'll check up on what i'm doing so that's a good way to force myself you know doing these these coding live streams and coding videos helps as well because i have people that you know they can see how much progress i've made they're expecting me to do the streams and things like that so that helps setting goals does help but yeah i'd say like whenever like whenever i have to code to make money to pay the bills and take care of my family like that's that's a good way to it's a good motivation right i can't i can't not work right i i have to do my work now i do like to code so that's also a good motivation but sometimes even things you like to do you don't want to do all the time right so like i like to work out but i don't like to work out all the time right so um yeah for those times when i don't feel as motivated or coding doesn't seem as fun as it normally does then what does help is just the responsibility of you know people are counting on me my family's counting on me my teammates are counting on me you know my company is counting on me so uh kind of that feeling of responsibility helps as well and if it's just in terms of like feeling like i can do it i to be honest with you i probably drink too much caffeine so that's also another uh another way i get motivated good question though i am skipping over a few questions because there are repeat questions that i've already answered so um apologies if it seems like i'm not answering your question but i have i've had a couple questions that i've answered multiple times so i'm just kind of skipping over uh lock lock raj says is this good for any kind of mobile application i'd say yeah definitely you can use react native for android ios or web and actually other things as well so there's there are ways to use react native to build for instance like smart tv apps i'm showing some of the other stuff i've seen i've seen some weird stuff like building a word document out of react native code but in terms of actual useful things i don't know maybe there is some use case for that but i kind of thought it was just a uh a project just to say like hey look what we can do so yeah but definitely react native i think is a great way to build apps from multiple platforms um so soterios says have you had any other ideas for applications with notion yeah for sure so i've had ideas for like a game i really would love to do a a game for children with to help them learn how to calm themselves down and i think it would be very helpful for children who maybe have uh have issues with like um obsessivecompulsive disorder issues with anger issues with anxiety that way like they can in in some type of like video game type of way that would be very um like they would really get into like something fun that they would want to do but in reality it's teaching them to calm themselves down so the the things in the game are changing based on their brain patterns and success in the game can only be achieved through making their brain show like calm patterns right so that's the high level goal of the game i would like to make i'm not exactly sure the best way to go about that i'm not a game designer right and i'm i'm not like a scientist that studies brainwaves either so i just had had the idea uh and i imagine it's gonna take a lot of trial and error for me to make something useful but that's one of my ideas another idea i have is trying to just link this up with something that can help with like internet of things so some product like if this than that or zapier so i would those would basically open up to somebody who's a noncoder the ability to use the notion headset with a variety of other tools that they would just be able to basically do some like drag and drop coding i guess with those if this and that and tapir so those are my two like main ideas for it i also have like just a few other updates to this app we've been working on that might make it a little bit more useful uh and i mean let's face it to you hi it's not great looking right now so there's some some basic stuff that could probably help all right i've got somebody was like spamming the channel it did get automatically hidden so that's good but i'm trying to make my way through it wow a lot of stuff in there yeah please don't don't try to spam the the channel all right okay a few more people shouting out where they're from someone from amsterdam angola netherlands detroit brazil kenya awesome pakistan more from brazil um have a question how long have you been programming uh i guess it's been a long time now um let me think so been like a couple years at one two five i'm gonna say like eightish years something like that i'm not i don't remember for sure but i'm gonna say around eight years of programming like actually programming for money right like i i messed around with some stuff before that but like really programming like as a job probably around eight years at this point oh my goodness i gotta find i need to just hide this user all right i'm gonna hide one there's a user that kept spamming the channel luckily the messages were getting hidden but it's just making it hard to see the questions on here okay uh umair says which project do you suggest for react js beginner to make them take them to the next level um i don't know for sure uh you probably want to do a project that's a bit more complex that like you need to make api calls maybe do some more advanced state management something that would require like the context api or redux that's probably going to help you get more to the next level just i guess the the complexity of it will will help you kind of think through better like ways of programming and organizing things so in terms of exactly what that would be i don't know um it could be a lot of different types of projects i'm not sure but if it incorporates those like for instance maybe like a message board some sort of forum with the ability to make posts uh the ability to comment on posts things like that that would require require a little bit of thought right so um maybe something like that would be a good place to a good thing to work on but i mean to be honest if you find like open source projects that are react based that may be even better because you'll get exposure to some to react available i'd say you could jump whenever you want just whenever the opportunity arises that you need to build a native app then you jump right into react native uh cash app asks what's the difference between xml and json uh i find json to be cleaner to look at to be honest with you xml has a lot of angle brackets that i don't know i don't really they basically serve the same purpose though it's just a matter of the syntax uh sandu says what's the difference between react js and react native i actually just did a video explaining the difference so if you check the description to this this live stream uh there's a link to my youtube channel in the description click on that and one of the latest videos on that channel is going to be the difference between react and react native so check that out i give some examples and and do more like a thorough answer to that yeah definitely if any of you enjoyed the the live stream and want to see more stuff by me i did a lot of previous live streams on free code camp and then i did some live streams and tutorial videos on my own youtube channel so please you know check it out if you like it like you know subscribe watch some of the videos you know the more the more people that watch and say they get something out of it you know the more videos and streams i'll try to do i really i like doing it but um really like only if people feel like it's useful why keep doing it you know what i'm saying like i i want it i'm not making any money off it or anything but if i'm helping people i want to keep doing it uh lewis wants to know more about the second argument of use effect so yeah the use effect argument so let's see where we're using it so for instance on this use effect the first argument is this whole thing right this function the second one is this array now the array everything we put in this array anytime this updates so these are two pieces of state focus and user are two pieces of state if focus changes or if user changes this is going to run if nothing else if something else changes that's not inside this array this will not run okay so that's what that's that second argument does if we left this empty then it would only run when the app first mounts and it would never run again unless the app unmounted and remounted if we didn't pass in a second argument at all this would run every time anything changed any piece of state that changed if we're using redux like any piece of redux door change this would this would change every single time or it would run every single time that's that's what that second second thing does it may there may be more to it so you know check out the documentation for react but in terms of like my coding experience those are basically like the three cases that come up most often uh dola soul says what's your schedule will you be live tomorrow probably not tomorrow uh i gotta work tomorrow um i would say the soonest that i would live stream again maybe like tuesday at some point i do have to work tuesday but i might be able to squeeze a live stream in we'll just we'll see how it goes uh let's see tung trung says uh excuse me may i ask how do i learn html and css well check out freecodecamp.org the first lessons are all on html and css that's a great place to start beside beyond that practice is just keep practicing look at projects that are they're good see how they do things uh but freecodecam.org is is a way to start uh garvit is asking about how to learn react uh freecodecamp.org actually has react lessons and they're pretty good in fact when i um at work i when i first got hired one of the things that i needed to do was teach my the rest of my team react they didn't really have very much experience with it and one of the first things i did is showed them the free codecamp.org lessons i had them go through all the lessons asked me any questions they had and then after that we would pair program together for a week at a time until i went through everybody on the team and that's how i went about you know getting them more knowledgeable about react so i would definitely check out those lessons thomas yeager says why did you not use redux in this application a lot of your state you used in multiple components redux or context api would have been beneficial here um actually thomas so like i i don't have multiple components i just have one big component for this project so um actually i think you you had asked about this a little bit earlier in the video so uh just kind of reiterate that i normally do use redux or context api when i have a larger application so that is a good call for a larger app ams what certificate is worth the most on uh workforce i don't really know much about what certificates i for what i do i don't need certificates so i don't worry about that if anybody else knows about like computer type certificates you know let us know in the chat kerry says hi just started learning to code wanted to say thanks for taking the time to explain every detail oh you're welcome i'm i try to explain as much as i can so you know but if i missed something feel free to ask a question but thank you for saying that uh charis says hi awesome stream awesome chat by the way ah thank you so much cashyapp says what is the purpose and then quickly followed up with the purpose of xml and json files i'm glad because i was about to go into a big talk about the purpose of life but the purpose of xml and json files usually is some type of configuration so it's just a bunch of key value pairs to let a some type of program know like some information that you wanted to know it's like it's a standard so if you make an api call you're probably going to get back json maybe xml if it's a little older or something like that but it's it's a standard way to provide information to an application all right sorry if that froze things for a second that was weird uh my computer just kind of like uh stalled for a second there but let's see i atendra says can i follow the brain computer app series to learn react native if i only know react um you'll definitely learn about react native i don't know if you'll if it would be like the best tutorial but uh it's you will definitely learn something about react native for sure all right oh that's pretty much it hopefully i got to all the questions and um yeah so i'm gonna i'm gonna log off now and uh and finish up the stream and take the rest of the sunday to hang out with my family uh we're probably gonna have uh watch a movie here soon or something so uh thank you all so much for watching uh it was this was cool it was hey we we accomplished what we wanted to accomplish today and i'm definitely going to redo that part two of the stream so look out for that coming up i'll probably do it as a live stream and we'll just kind of go back over what we did in part two that got deleted um beyond that i'm i'm kind of wondering what to stream about next so maybe more of uh more of this project maybe a different project let me know what you think and and what might be beneficial to you um and if you like this you know please subscribe to this channel check out our other videos check out my youtube channel links in the description feel free to reach out to me on social media i'm on twitter i'm on instagram linkedin i'm i'm on like all this stuff so just find me and uh if you send me a question i'll do my best to get back to you as soon as i can so have a great a great week i don't know when the next time i'll stream is uh you know i'll try to stream at some point in the week if i can uh but uh if i don't have a great week and i hope to see y'all next time thanks for watching
