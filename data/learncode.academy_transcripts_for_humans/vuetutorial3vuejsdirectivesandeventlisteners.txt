With timestamps:

00:00 - in this video we are going to use view
00:02 - directives uh to work with our data in a
00:04 - more powerful way view directives are
00:06 - very very powerful they're very much
00:08 - like angular directives if you're
00:10 - familiar with angular
00:12 - and they allow us to just in a quick
00:14 - line of code accomplish great things so
00:16 - let's go ahead and start by changing
00:19 - this friends list from an object full of
00:22 - objects to an array full of objects
00:24 - let's go and create friends
00:28 - let's make an array of our friends i'll
00:30 - start by just doing simple names
00:32 - so there we go we have an array of
00:34 - friends now i can get rid of this
00:35 - computed we don't need this anymore
00:38 - and so we can do here is we can loop
00:41 - through the friends array and spit out
00:43 - an h2 for each one of our friends so
00:45 - let's go ahead and do h2
00:50 - and we can use the v4 directive
00:54 - this will allow us to do a for loop
00:55 - through our data so for each item in
00:58 - friends
01:00 - we're going to create a friend object so
01:02 - for friend in friends much like you do a
01:05 - javascript loop and we can now spit out
01:08 - the value of friend
01:11 - so you have it we have an h2 for each
01:13 - one of our friends and we're spinning
01:15 - out the entire value of friend let's go
01:18 - change this now to be a full object
01:21 - so let's change this to an array of
01:23 - objects
01:28 - and clean up a little mess there
01:31 - so now we have have an array of friends
01:33 - you notice it actually spits out the
01:35 - whole
01:36 - javascript object for each person oh
01:38 - great although that's not really what we
01:39 - need we want friend name
01:43 - actually there's no such thing as friend
01:45 - name friend first
01:51 - or in this case we could also do friend
01:54 - full name
01:57 - so it'll again we can use the filter on
01:59 - each object that works just fine here as
02:01 - well so that's the v4 directive let's
02:05 - also say we want to start changing
02:07 - friends names we want to be able to edit
02:09 - each friend's name
02:10 - so what i'll do here is i'll create
02:12 - their name in nh4
02:16 - and let's create an input
02:20 - and let's actually say we want to edit
02:22 - their first name so v model
02:24 - is going to be the directive for this
02:26 - and we can see friend
02:28 - dot
02:30 - first
02:32 - and so v model means that it's
02:33 - automatically going to sync to that
02:35 - first name and when i make changes it's
02:38 - two-way data binding so if i change the
02:40 - y then automatically that got changed it
02:43 - got changed in my data and that
02:45 - triggered a re-render on anybody that
02:48 - was listening to that data so it's
02:49 - reactive
02:50 - to a reactive data binding there so i
02:52 - can say his name is now billy
02:55 - and i say john's name is johnny and so
02:57 - that's a really simple way to edit data
03:00 - that's one of the simple things that
03:02 - makes view easy to work with is that
03:04 - two-way data binding so let's also make
03:06 - a model for friend.last
03:13 - you see now that we can
03:14 - fully edit any one of their names
03:20 - now let's say we want to work on that
03:21 - person's age let's make an h5 for their
03:24 - age
03:29 - how could we change their age we can add
03:31 - some buttons to maybe bump it up and
03:33 - down so let's make a button here
03:39 - and what we can do is we can use the v
03:42 - on
03:43 - which will allow us to act on any user
03:45 - event so the user event we want is a
03:46 - click so we're going to do colon click
03:49 - so v on colon click equals and then we
03:53 - can have it do something we can say
03:54 - friend
04:01 - friend.h equals friend h plus one let's
04:03 - see if this works
04:06 - yep it works
04:07 - and then i can also
04:11 - make a minus
04:12 - button that will take their age down one
04:20 - we can change their age change their age
04:22 - back up change their age back down now
04:24 - while that's a very simple quick way to
04:26 - do it the better way of doing this is to
04:29 - move this logic out of the template
04:30 - logic in a template is generally
04:33 - speaking a bad idea you want to do this
04:34 - as little as possible so we can add a
04:37 - methods object now
04:41 - let's make a methods object
04:43 - and we can say increment age
04:48 - and this will receive a friend
04:50 - it's very important that we receive a
04:51 - friend
04:52 - not just a number because we can now go
04:55 - friend
04:56 - age equals
04:59 - friend h one
05:01 - so we can do now is on click we can say
05:04 - hey
05:05 - increment
05:08 - friend and now this will work so we are
05:11 - going to increment age pass it in our
05:14 - friend
05:15 - and then this will automatically bump
05:17 - the age up you can see up still works
05:19 - and down still works in the hacky way so
05:21 - let's go ahead change this to a
05:23 - decrement method now
05:25 - decrement age
05:32 - and that will be -1 so then this will be
05:35 - decrement age
05:42 - so now we're just essentially handing
05:44 - that method off there we're handling
05:46 - that
05:47 - logic out of the template and into a
05:50 - method
05:51 - there we are we're able to change our
05:53 - friends ages
05:54 - and we're able to change our friends
05:56 - names so that's how you work with data
05:58 - using methods and using directives in
06:01 - vue.js
06:10 - you

Cleaned transcript:

in this video we are going to use view directives uh to work with our data in a more powerful way view directives are very very powerful they're very much like angular directives if you're familiar with angular and they allow us to just in a quick line of code accomplish great things so let's go ahead and start by changing this friends list from an object full of objects to an array full of objects let's go and create friends let's make an array of our friends i'll start by just doing simple names so there we go we have an array of friends now i can get rid of this computed we don't need this anymore and so we can do here is we can loop through the friends array and spit out an h2 for each one of our friends so let's go ahead and do h2 and we can use the v4 directive this will allow us to do a for loop through our data so for each item in friends we're going to create a friend object so for friend in friends much like you do a javascript loop and we can now spit out the value of friend so you have it we have an h2 for each one of our friends and we're spinning out the entire value of friend let's go change this now to be a full object so let's change this to an array of objects and clean up a little mess there so now we have have an array of friends you notice it actually spits out the whole javascript object for each person oh great although that's not really what we need we want friend name actually there's no such thing as friend name friend first or in this case we could also do friend full name so it'll again we can use the filter on each object that works just fine here as well so that's the v4 directive let's also say we want to start changing friends names we want to be able to edit each friend's name so what i'll do here is i'll create their name in nh4 and let's create an input and let's actually say we want to edit their first name so v model is going to be the directive for this and we can see friend dot first and so v model means that it's automatically going to sync to that first name and when i make changes it's twoway data binding so if i change the y then automatically that got changed it got changed in my data and that triggered a rerender on anybody that was listening to that data so it's reactive to a reactive data binding there so i can say his name is now billy and i say john's name is johnny and so that's a really simple way to edit data that's one of the simple things that makes view easy to work with is that twoway data binding so let's also make a model for friend.last you see now that we can fully edit any one of their names now let's say we want to work on that person's age let's make an h5 for their age how could we change their age we can add some buttons to maybe bump it up and down so let's make a button here and what we can do is we can use the v on which will allow us to act on any user event so the user event we want is a click so we're going to do colon click so v on colon click equals and then we can have it do something we can say friend friend.h equals friend h plus one let's see if this works yep it works and then i can also make a minus button that will take their age down one we can change their age change their age back up change their age back down now while that's a very simple quick way to do it the better way of doing this is to move this logic out of the template logic in a template is generally speaking a bad idea you want to do this as little as possible so we can add a methods object now let's make a methods object and we can say increment age and this will receive a friend it's very important that we receive a friend not just a number because we can now go friend age equals friend h one so we can do now is on click we can say hey increment friend and now this will work so we are going to increment age pass it in our friend and then this will automatically bump the age up you can see up still works and down still works in the hacky way so let's go ahead change this to a decrement method now decrement age and that will be 1 so then this will be decrement age so now we're just essentially handing that method off there we're handling that logic out of the template and into a method there we are we're able to change our friends ages and we're able to change our friends names so that's how you work with data using methods and using directives in vue.js you
