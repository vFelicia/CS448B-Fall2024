With timestamps:

00:00 - in this video we are going to build a
00:01 - machine learning recommendation engine
00:04 - completely in the browser using
00:05 - javascript it's going to be a lot of fun
00:07 - and the problem we're going to solve is
00:09 - i want you to suggest to me good color
00:12 - themes for my text editor for me and as
00:14 - you can see i've got it going here and
00:16 - it's it's choosing some pretty nice
00:18 - themes if you've ever followed my videos
00:20 - before you can see that these look a lot
00:22 - like the themes that i choose to use day
00:23 - in and day out so it is definitely
00:25 - working and it works completely based on
00:28 - my ratings of randomly generated themes
00:30 - which oftentimes are ugly themes like
00:32 - this one yuck that's gross um but as i
00:36 - vote the neural network gets better and
00:38 - better and starts recommending better
00:40 - and better themes i have about 30 or 40
00:42 - votes under my belt right here
00:44 - and it's really good so let's kind of
00:46 - walk you through what you have to do to
00:47 - make a recommendation engine it's pretty
00:49 - similar to what we did in the last step
00:51 - we're going to start by making a new
00:52 - network and i'll just kind of plunk out
00:54 - some code here and then we'll walk
00:56 - through the actual code that i've built
00:58 - so we'll make a new network
01:01 - and then we're going to train it with
01:03 - our data and the data is
01:05 - the color schemes that we have voted on
01:07 - and our voting response so it'll look
01:09 - something like this so we have an array
01:13 - of training data and each piece of
01:14 - training data will look like this it'll
01:16 - be an input
01:18 - and an output so the input is going to
01:21 - have 12 dimensions to it this time 12
01:23 - inputs the input values are sometimes
01:25 - called input neurons in machine learning
01:28 - or sometimes they're called input
01:30 - dimensions so we're going to have 12
01:32 - neurons we're going to have the rgb of
01:34 - our background color and then the rgb of
01:36 - our three colors with our color scheme
01:38 - you can see we basically have four
01:39 - colors background color one color two
01:42 - and color three so we're basically going
01:44 - to just do an array to keep it simple
01:47 - instead of doing a named object values
01:49 - so we're basically gonna have rgb of
01:52 - backgrounds i'll just use all zeroes for
01:54 - now color one
01:56 - color two
01:57 - and color three
01:59 - so that's what our input is going to
02:00 - look like these are going to be an rgb
02:03 - value between zero and fifty and these
02:05 - are gonna be an rgb value between
02:07 - 50 and
02:09 - 255. so i'm kind of giving it an initial
02:12 - parameter of we're doing a dark
02:13 - background in light text and then the
02:15 - output is going to be a score it's going
02:17 - to be what you clicked on with your
02:18 - stars which is going to be basically a
02:21 - score between zero and one uh so you're
02:23 - going to rate does this color scheme get
02:26 - a zero or a one or somewhere in between
02:28 - for me so we're going to build up that
02:30 - training data and then we have a trained
02:32 - network which is also called a model uh
02:35 - so once we once that network is trained
02:37 - we're going to generate a hundred
02:39 - thousand different possible color
02:41 - schemes which may sound like a lot but
02:43 - there's actually
02:44 - 10 septillion possible color schemes
02:47 - with the four colors we have so 100 000
02:50 - is actually not very big of a sampling
02:52 - and again it's going to be completely
02:53 - random we're going to generate a hundred
02:55 - thousand of them and then we're going to
02:56 - do net.run and we're going to do each
02:59 - scheme at a time so we're going to run
03:01 - i will do a for loop and then we'll run
03:03 - that scheme
03:05 - or theme
03:06 - and we're going to get the results we're
03:08 - going to we're going to sort them all by
03:09 - results and we're going to give you the
03:11 - top 20 results so that's basically how
03:13 - you're going to make the recommendation
03:14 - engine we're going to train a model
03:16 - we're going to run a bunch of values
03:17 - through that model and we're going to
03:19 - pick the highest scoring values and
03:21 - return them to you you can see here we
03:23 - have the highest scoring values
03:24 - and let's go and get into the code i'm
03:26 - going to show you how it works we'll
03:28 - give you the code at the end of the
03:29 - video and you can have fun and play
03:30 - around with it so we've made this fake
03:32 - editor wrapper here
03:34 - and i basically copied some text some
03:36 - code and then i wrapped the different
03:38 - portions in spans they're going to get
03:40 - color 1 color 2 or color 3.
03:43 - class color 1 class color two class
03:45 - color three so this is just a fake
03:46 - editor here with text
03:49 - and so when we generate random colors
03:51 - we're just going to find everything
03:52 - color one give it color one find
03:54 - everything with class color two and
03:56 - color three so on
03:57 - here's our stars
03:59 - and then here's the themes id that we're
04:01 - going to pop all our themes into a
04:03 - little bit of css not too much
04:05 - just to kind of make this page a little
04:06 - more beautiful for you and then we're on
04:08 - to our theme generator code so we're
04:10 - going to do here is we start by just
04:12 - kind of grabbing all of those selectors
04:15 - on the page
04:16 - we initialize the training data in local
04:18 - storage yeah so that way if i refresh
04:20 - this page i still have all my training
04:22 - data yay
04:23 - so we started off by being an empty
04:25 - array unless it already exists and then
04:27 - we create this current colors object
04:30 - and we generate random colors into it so
04:33 - this object right here represents the
04:35 - colors of the scheme or the theme that
04:37 - you're voting on right now we have a
04:39 - background color and we have one two
04:42 - three color options you can see that
04:44 - when we generate random colors we get
04:45 - some ugly stuff i mean there's some bad
04:48 - color combinations out there if you're
04:49 - just doing it randomly so we generate a
04:52 - random theme which populates it here
04:55 - and then we predict theme combinations
04:57 - so
04:58 - basically all we do at this point is we
05:00 - listen to the stars and as you click on
05:03 - a star we're going to turn that into a
05:05 - score so if you click on star number 4
05:08 - index four which is number five because
05:10 - they go zero one two three four um if
05:13 - you click on four that gets divided by
05:15 - four and turns into a one so these are
05:17 - going to be a score value of zero to one
05:21 - if you remember from the last video
05:23 - everything needs to be a value of 0 to
05:25 - 1. and here's what our training data
05:27 - looks like we're basically going to have
05:29 - an input array
05:31 - of the rgb values we've gone from having
05:34 - an input array of three values to an
05:36 - input array of 12 values rgb for our
05:39 - background rgb for color 1 2 and 3.
05:43 - in machine learning these are oftentimes
05:45 - called neurons input neurons or input
05:47 - dimensions so we have 12 input neurons
05:51 - 12 input dimensions and we only have one
05:53 - output dimension and that is our score
05:56 - so when you click on a star
05:58 - we take the current dimensions from here
06:01 - for our input dimensions and we take the
06:03 - star value that you just clicked on and
06:05 - that's our output dimension so there we
06:07 - have it we have our 12 input dimensions
06:09 - whenever you click on a star this save
06:11 - training data runs
06:13 - we save our 12 input dimensions and our
06:15 - one output dimension on to local storage
06:18 - and now we can go on to predict theme
06:20 - combinations
06:22 - so basically we create a new neural
06:24 - network here every time you click so
06:26 - we're going to make a new neural network
06:28 - we're going to train it with the data
06:29 - that we got off of local storage
06:31 - and then we're going to generate in this
06:32 - case we have 10 000 combinations here
06:34 - let's change that to 100 000.
06:37 - so we're going to create a hundred
06:39 - thousand random themes which is just a
06:42 - sampling of the possible themes out
06:44 - there again there's about 10 septillion
06:46 - possible themes out there with what
06:48 - we're doing here
06:49 - so we're going to take those colors and
06:51 - create our own input dimensions again
06:55 - we're going to run them through the
06:56 - network and get that score out of the
06:58 - output dimensions
07:00 - and then we're going to push those
07:01 - results all onto a results array we're
07:03 - going to sort them by score and then
07:06 - we're going to take the top 20 and add a
07:08 - new theme this is our add a new theme
07:10 - function here which just basically
07:13 - templates it out takes those colors and
07:15 - spits it out onto the page for you along
07:17 - with the score and the rgb values that
07:19 - it's using that's it so it took me about
07:23 - an hour to do most of the time i was
07:25 - spending figuring out the html the css
07:28 - and some of these helper methods here
07:30 - like generate a random rgb value
07:33 - and generate a random background rgb
07:35 - value also a helpful note here is the
07:38 - background is always going to be a
07:39 - number between 0 and 50 because i want
07:41 - dark backgrounds so that is one
07:43 - constraint that i put on the system
07:45 - and then the foreground colors are all
07:46 - going to be between 50 and 255 because i
07:49 - don't want black text on black
07:51 - background so i did kind of give it a
07:53 - heads up a leg up on the game we're
07:55 - doing dark background themes here but as
07:58 - you vote these recommendations just keep
08:00 - getting better and better for you
08:03 - and it's actually kind of surprising how
08:05 - if you just give it 10 negative votes
08:08 - because sometimes it takes 15 to 20
08:10 - times for you to actually get a pretty
08:12 - random color combination
08:15 - but it was interesting to see that just
08:16 - by negatively voting the network started
08:20 - predicting some decent themes for me
08:22 - after five or ten clicks so there you go
08:24 - the the code's in the description go
08:26 - ahead tinker around with it have fun
08:28 - with it and that's how you make a basic
08:30 - prediction recommendation engine
08:32 - completely in the browser using
08:33 - javascript

Cleaned transcript:

in this video we are going to build a machine learning recommendation engine completely in the browser using javascript it's going to be a lot of fun and the problem we're going to solve is i want you to suggest to me good color themes for my text editor for me and as you can see i've got it going here and it's it's choosing some pretty nice themes if you've ever followed my videos before you can see that these look a lot like the themes that i choose to use day in and day out so it is definitely working and it works completely based on my ratings of randomly generated themes which oftentimes are ugly themes like this one yuck that's gross um but as i vote the neural network gets better and better and starts recommending better and better themes i have about 30 or 40 votes under my belt right here and it's really good so let's kind of walk you through what you have to do to make a recommendation engine it's pretty similar to what we did in the last step we're going to start by making a new network and i'll just kind of plunk out some code here and then we'll walk through the actual code that i've built so we'll make a new network and then we're going to train it with our data and the data is the color schemes that we have voted on and our voting response so it'll look something like this so we have an array of training data and each piece of training data will look like this it'll be an input and an output so the input is going to have 12 dimensions to it this time 12 inputs the input values are sometimes called input neurons in machine learning or sometimes they're called input dimensions so we're going to have 12 neurons we're going to have the rgb of our background color and then the rgb of our three colors with our color scheme you can see we basically have four colors background color one color two and color three so we're basically going to just do an array to keep it simple instead of doing a named object values so we're basically gonna have rgb of backgrounds i'll just use all zeroes for now color one color two and color three so that's what our input is going to look like these are going to be an rgb value between zero and fifty and these are gonna be an rgb value between 50 and 255. so i'm kind of giving it an initial parameter of we're doing a dark background in light text and then the output is going to be a score it's going to be what you clicked on with your stars which is going to be basically a score between zero and one uh so you're going to rate does this color scheme get a zero or a one or somewhere in between for me so we're going to build up that training data and then we have a trained network which is also called a model uh so once we once that network is trained we're going to generate a hundred thousand different possible color schemes which may sound like a lot but there's actually 10 septillion possible color schemes with the four colors we have so 100 000 is actually not very big of a sampling and again it's going to be completely random we're going to generate a hundred thousand of them and then we're going to do net.run and we're going to do each scheme at a time so we're going to run i will do a for loop and then we'll run that scheme or theme and we're going to get the results we're going to we're going to sort them all by results and we're going to give you the top 20 results so that's basically how you're going to make the recommendation engine we're going to train a model we're going to run a bunch of values through that model and we're going to pick the highest scoring values and return them to you you can see here we have the highest scoring values and let's go and get into the code i'm going to show you how it works we'll give you the code at the end of the video and you can have fun and play around with it so we've made this fake editor wrapper here and i basically copied some text some code and then i wrapped the different portions in spans they're going to get color 1 color 2 or color 3. class color 1 class color two class color three so this is just a fake editor here with text and so when we generate random colors we're just going to find everything color one give it color one find everything with class color two and color three so on here's our stars and then here's the themes id that we're going to pop all our themes into a little bit of css not too much just to kind of make this page a little more beautiful for you and then we're on to our theme generator code so we're going to do here is we start by just kind of grabbing all of those selectors on the page we initialize the training data in local storage yeah so that way if i refresh this page i still have all my training data yay so we started off by being an empty array unless it already exists and then we create this current colors object and we generate random colors into it so this object right here represents the colors of the scheme or the theme that you're voting on right now we have a background color and we have one two three color options you can see that when we generate random colors we get some ugly stuff i mean there's some bad color combinations out there if you're just doing it randomly so we generate a random theme which populates it here and then we predict theme combinations so basically all we do at this point is we listen to the stars and as you click on a star we're going to turn that into a score so if you click on star number 4 index four which is number five because they go zero one two three four um if you click on four that gets divided by four and turns into a one so these are going to be a score value of zero to one if you remember from the last video everything needs to be a value of 0 to 1. and here's what our training data looks like we're basically going to have an input array of the rgb values we've gone from having an input array of three values to an input array of 12 values rgb for our background rgb for color 1 2 and 3. in machine learning these are oftentimes called neurons input neurons or input dimensions so we have 12 input neurons 12 input dimensions and we only have one output dimension and that is our score so when you click on a star we take the current dimensions from here for our input dimensions and we take the star value that you just clicked on and that's our output dimension so there we have it we have our 12 input dimensions whenever you click on a star this save training data runs we save our 12 input dimensions and our one output dimension on to local storage and now we can go on to predict theme combinations so basically we create a new neural network here every time you click so we're going to make a new neural network we're going to train it with the data that we got off of local storage and then we're going to generate in this case we have 10 000 combinations here let's change that to 100 000. so we're going to create a hundred thousand random themes which is just a sampling of the possible themes out there again there's about 10 septillion possible themes out there with what we're doing here so we're going to take those colors and create our own input dimensions again we're going to run them through the network and get that score out of the output dimensions and then we're going to push those results all onto a results array we're going to sort them by score and then we're going to take the top 20 and add a new theme this is our add a new theme function here which just basically templates it out takes those colors and spits it out onto the page for you along with the score and the rgb values that it's using that's it so it took me about an hour to do most of the time i was spending figuring out the html the css and some of these helper methods here like generate a random rgb value and generate a random background rgb value also a helpful note here is the background is always going to be a number between 0 and 50 because i want dark backgrounds so that is one constraint that i put on the system and then the foreground colors are all going to be between 50 and 255 because i don't want black text on black background so i did kind of give it a heads up a leg up on the game we're doing dark background themes here but as you vote these recommendations just keep getting better and better for you and it's actually kind of surprising how if you just give it 10 negative votes because sometimes it takes 15 to 20 times for you to actually get a pretty random color combination but it was interesting to see that just by negatively voting the network started predicting some decent themes for me after five or ten clicks so there you go the the code's in the description go ahead tinker around with it have fun with it and that's how you make a basic prediction recommendation engine completely in the browser using javascript
