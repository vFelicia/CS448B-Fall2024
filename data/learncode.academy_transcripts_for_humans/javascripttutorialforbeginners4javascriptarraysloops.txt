With timestamps:

00:01 - so we've been learning JavaScript and I
00:02 - want to point out again that pretty much
00:05 - everything you've learned so far is
00:07 - programming in general almost every
00:09 - computer programming language is going
00:11 - to have variables IFL statements
00:13 - comparison operators functions and what
00:16 - we're about to learn which is arrays and
00:18 - Loops um and I've got one more lesson
00:21 - for you here we're going to cover arrays
00:22 - and loops and then you're going to be
00:24 - able to do some fun stuff in the browser
00:26 - to change your web page so let's just
00:28 - get into it once again I'm using the
00:31 - main JS file which I've added onto my
00:34 - index.html and we're going to be doing
00:35 - our coding in
00:37 - here so an array is simply a list of
00:40 - items I can go there my list equals and
00:44 - then I do open and close of square
00:45 - brackets now whatever I put in here is a
00:48 - part of my array so I can go apples
00:53 - oranges
00:55 - bananas and so now I've got my console
00:58 - open over here again because I want to
01:00 - interact with this list so if I go my
01:03 - list not defined let me go ahead and
01:06 - save this oh I didn't turn on live
01:08 - reload for this lesson I apologize save
01:11 - refresh my list there you go you can see
01:15 - we've got apples oranges and bananas now
01:18 - if I want to access a specific item on
01:20 - this list I can go my list zero to get
01:24 - the Zero Entry one of the things you
01:26 - learn in computer science is that uh web
01:29 - developer and just developers in general
01:31 - pretty much count from zero 0 1 2 and
01:35 - that's kind of a long explanation as to
01:37 - why so I'm not going to explain it but
01:40 - the zero index would be apples the one
01:43 - index or the first index would be
01:45 - oranges and the number two index would
01:47 - be bananas so if I want to access my
01:50 - list one that's oranges and bananas
01:53 - would be my list two if I go my list
01:56 - three that's undefined because it hasn't
01:58 - been defined yet so let's go ahead and
02:00 - add that in my
02:04 - list three which you can add after
02:07 - you've created the list
02:09 - equals
02:11 - pineapples let's go ahead save it's
02:13 - going to
02:14 - refresh my list three now equals
02:17 - pineapples let's say I want to change
02:20 - index zero to be something
02:23 - else my list zero equals
02:28 - watermelon so here you go so now if I
02:31 - were to go my list I've added index 3
02:34 - and I've changed index one that's
02:37 - basically how you're going to change
02:39 - values um and it's important to note
02:42 - that these values Don't Have To Be
02:44 - Strings arrays can hold any type in
02:47 - JavaScript they can hold strings numbers
02:50 - functions even other arrays so I can go
02:54 - my list equals apples the number 12 and
02:58 - let's create a function up here
03:01 - here go alert high that's the one I've
03:04 - been using might as well stick to it I'm
03:07 - just going to add go in there you notice
03:09 - go is a variable name because functions
03:11 - are actually variables as far as
03:13 - JavaScript is concerned so now if I look
03:16 - at my list in the console apples 12 and
03:20 - the function go so that's pretty much an
03:24 - example of the fact that arrays can hold
03:26 - anything and if I actually want to
03:28 - access this fun fun and call it well I
03:31 - can either call go which is going to
03:33 - alert or go is in my array so I can go
03:35 - my list to and that I can run it just
03:39 - like I can a function and that's exactly
03:41 - the same as changing these letters to go
03:45 - so I'm accessing it and then I'm calling
03:48 - it so that's kind of you know it's a
03:50 - little quirky you really wouldn't do
03:52 - that but once again arrays can hold
03:54 - anything or I can make this array hold a
03:56 - new array of will
04:01 - Laura there we go so now if I look at my
04:05 - list it's got apples 12 and an array of
04:10 - names will is the zero index Laura is
04:13 - the one index great now arrays have
04:15 - what's called what are called Methods or
04:18 - better yet actions that you can run on
04:20 - arrays let's go back to Apples
04:22 - oranges
04:25 - bananas let's save that let's get rid of
04:28 - you so I can go my list dot shift and
04:34 - that will give me the first entry off of
04:36 - my list and it will actually pull it out
04:39 - of the list so now the list has one less
04:41 - entry if I look at my list now apples
04:44 - has been pulled out and oranges and
04:47 - bananas are all that remain so now I can
04:50 - go my list shift again so I could say
04:55 - their current
04:57 - fruit equals my list.
05:00 - shift there we go now current
05:04 - fruit will equal oranges because that
05:06 - was at the front of the stack in my list
05:09 - only has one item left so once again
05:12 - shift pulls your first item out actually
05:15 - removes it from your list and passes it
05:18 - to whatever your function passes it to
05:20 - whatever variable is on the other side
05:22 - of your function let's go back let's
05:24 - refresh my page my list is now back to
05:27 - normal there's also a pop
05:31 - method pop is going to pull the last
05:34 - value off of the list and it's going to
05:36 - actually remove it so now my list has
05:39 - two entries the first and the second and
05:41 - bananas is gone now there's also a very
05:44 - cool method called for
05:49 - each and for each you pass it a function
05:53 - and it's automatically going to put two
05:55 - arguments into this function for you
05:57 - it's going to give you a value
06:00 - and an index for each item it's going to
06:03 - Loop through this and it's going to run
06:04 - my function then it's going to run this
06:06 - value run the function then it's going
06:09 - to take this value and run the function
06:11 - so I can console log value
06:14 - index and I should see three console
06:16 - logs apples zero oranges one bananas 2
06:21 - or a more useful way of doing it would
06:23 - be
06:24 - alert I
06:26 - have plus value Plus in my shopping
06:35 - bag I have apples in my shopping bag I
06:38 - have oranges in my shopping bag I have
06:41 - bananas in my shopping bag now one Quirk
06:44 - with JavaScript is older browsers are
06:46 - not going to have all the newer methods
06:48 - for each is a newer method um and not
06:51 - every browser has it so if you're
06:53 - running this on an older browser you
06:55 - might get an error message that says for
06:57 - each is not defined um and so what
07:00 - you're actually going to have to do is
07:01 - you're going to have to use an older way
07:03 - of looping through or iterating through
07:06 - this list so let's get into now the
07:08 - second part of of this lesson which is
07:11 - loops loops are well they're just what
07:13 - they sound like they're ways of looping
07:15 - through things over and over again and
07:17 - there's three kinds of Loops in
07:18 - JavaScript there's the while
07:21 - loop a do Loop and a for Loop let's look
07:24 - at each one of these what's it doing who
07:27 - knows so let's do the while loop
07:30 - they're all very similar by the way they
07:32 - just have a little bit different way of
07:33 - going about it as long as what's in here
07:36 - is true y will execute whatever's in
07:39 - this block whatever's between these
07:41 - curly braces so what I could do is I
07:43 - could say ver times equals
07:48 - z and while times is less than
07:52 - [Music]
07:53 - 10 let's console log tried
07:58 - it let's let's also spit out times just
08:01 - so we can see and let's say times equals
08:05 - time + 1 so now it's going to make it if
08:08 - it's zero it's going to bump it up one
08:10 - if it's one it's going to bump it up to
08:11 - two let's see what happens we tried it
08:14 - when times was zero and then we bumped
08:16 - it up now we tried it in times was one
08:18 - tried it when times was two we tried it
08:20 - all the way up till times was nine and
08:22 - when times was 10 we didn't try it
08:24 - anymore the while stopped it did what's
08:27 - called a
08:28 - break and so as long as this is true
08:30 - again it's going to run this block of
08:33 - code another way we can simplify this is
08:35 - we can just go times plus plus which is
08:38 - code for bump it up one more if it's
08:40 - zero make it one if it's one make it two
08:43 - another thing you can do is Javas in
08:45 - JavaScript is you can do minus minus
08:47 - which basically minus is one from
08:49 - whatever it is so times plus plus there
08:53 - we go that's going to do the exact same
08:54 - thing so that's a while loop uh there's
08:57 - also a do while loop or a do Loop you
09:00 - don't see this one as
09:03 - often and that's basically the same
09:06 - thing so I'm going to go console log
09:09 - tried
09:12 - it
09:13 - times and then I'm going to do same
09:15 - thing times plus plus and I'm going to
09:18 - go while times is less than 10 exact
09:22 - same
09:23 - thing and you'll notice it does the
09:26 - exact same thing tried it zero tried it
09:28 - one tried two try it three the
09:30 - difference pretty much the only
09:32 - difference between do and
09:35 - while is do is going to always run at
09:38 - least one time and then it's going to do
09:40 - a check to see if this is true or false
09:43 - so you're guaranteed one execution and
09:45 - it might stop after that whereas while
09:48 - is going to run the check first and if
09:50 - that's false then it's not ever going to
09:52 - run if it's true it's going to run over
09:55 - and over and over again until it's false
09:57 - so that's doing while they're very very
09:59 - very similar so the last Loop is the
10:02 - four Loop and the four Loop is the most
10:04 - common one you're going to see in
10:05 - JavaScript but unfortunately it's the
10:07 - most complicated one if you're just
10:09 - starting out it's not really hard per se
10:12 - it's just not quite as simple as the
10:14 - while loop and the do while loop so what
10:16 - you have in the for Loop is you have
10:18 - three arguments you have your setup you
10:20 - have your
10:22 - comparison and then you have your change
10:25 - this is what's going to happen every
10:26 - time it goes through the loop so here's
10:29 - kind of the common for Loop that you're
10:31 - going to see you're going to see there I
10:33 - equals
10:37 - 0 and then you're going to go I less
10:40 - than 10 so as long as I is less than 10
10:42 - that's our comparison that's what would
10:44 - be in our while and then we're going to
10:46 - do i++ every time so we're starting off
10:50 - we're going to run this once we're going
10:52 - to check is I less than 10 yes it is
10:54 - we're going to run our Loop and every
10:56 - time we run our loop we're going to bump
10:58 - I up one more time and so let's console
11:01 - log this I
11:03 - is and then let's do I let's run this
11:06 - and see what happens you see that I is
11:08 - currently zero we started off I is zero
11:11 - and then it's going to run my block and
11:13 - then it's going to bump I up one more
11:15 - time then it's going to run it again hey
11:17 - is I less than 10 nope I mean yes it is
11:20 - run the block bump I up one more time is
11:23 - I still less than 10 yep run the block
11:26 - bump it up that keeps happening until I
11:29 - is no longer less than 10 and then it
11:31 - breaks so this is useful because we can
11:34 - actually make I the length of our array
11:37 - I'll kind of show you what we mean here
11:39 - let's make my list and then we're almost
11:41 - done with our
11:42 - lesson and I'm using capital letters
11:45 - now nice these are proper proper
11:51 - nouns there we go so I have apples
11:53 - oranges and bananas so I'm going to say
11:56 - I equals z and as long as I is less than
12:00 - my list.
12:01 - length GTH there you
12:05 - go then I'm going to do that so now it's
12:07 - going to run three times let me show you
12:10 - what my list. length
12:12 - is my list. length is three because I
12:16 - have three items in my list now that
12:19 - seems a little strange because I have a
12:21 - zero index one index 2 index you would
12:24 - think length would be two but length is
12:26 - three because when it comes to Dot
12:29 - length we're counting like a normal
12:31 - humid would count three items in my list
12:34 - so three items a zero a one and a two
12:37 - index I know that's confusing but
12:39 - whatever that's JavaScript so as long as
12:42 - I is less than the length of my array
12:45 - I'm going to Loop through and so what I
12:47 - can do now is I can go console
12:50 - log my list I so the first time around
12:55 - that'll be zero Second Time Around it'll
12:58 - be one Second Time Around it'll be two
13:00 - and there is no next time around I think
13:04 - I said first second second first second
13:06 - third you can see apples oranges bananas
13:08 - and then I'm done so I can do the exact
13:11 - same thing
13:13 - alert you
13:16 - have my list
13:20 - DOI or brackets ey in your
13:27 - basket there we go you have apples in
13:29 - your basket you have oranges in your
13:31 - basket and you have bananas in your
13:34 - basket so that's a for Loop now you can
13:36 - pretty much copy and paste this code and
13:39 - that's something that you can use
13:41 - anytime you want to iterate an array
13:43 - that's the most common for Loop I'll
13:44 - usually when I started off I copied and
13:47 - I pasted this away and I saved it
13:49 - because I just couldn't quite remember
13:51 - the order in the syntax were these
13:53 - commas were these semicolons it's
13:55 - something you just have to use several
13:57 - times to really get fortable with save
14:00 - this somewhere as a snippet of code that
14:01 - you reuse later that's arrays that's
14:04 - loops and in the next lesson we're going
14:07 - to use functions arrays and Loops to do
14:09 - some fun
14:12 - stuff

Cleaned transcript:

so we've been learning JavaScript and I want to point out again that pretty much everything you've learned so far is programming in general almost every computer programming language is going to have variables IFL statements comparison operators functions and what we're about to learn which is arrays and Loops um and I've got one more lesson for you here we're going to cover arrays and loops and then you're going to be able to do some fun stuff in the browser to change your web page so let's just get into it once again I'm using the main JS file which I've added onto my index.html and we're going to be doing our coding in here so an array is simply a list of items I can go there my list equals and then I do open and close of square brackets now whatever I put in here is a part of my array so I can go apples oranges bananas and so now I've got my console open over here again because I want to interact with this list so if I go my list not defined let me go ahead and save this oh I didn't turn on live reload for this lesson I apologize save refresh my list there you go you can see we've got apples oranges and bananas now if I want to access a specific item on this list I can go my list zero to get the Zero Entry one of the things you learn in computer science is that uh web developer and just developers in general pretty much count from zero 0 1 2 and that's kind of a long explanation as to why so I'm not going to explain it but the zero index would be apples the one index or the first index would be oranges and the number two index would be bananas so if I want to access my list one that's oranges and bananas would be my list two if I go my list three that's undefined because it hasn't been defined yet so let's go ahead and add that in my list three which you can add after you've created the list equals pineapples let's go ahead save it's going to refresh my list three now equals pineapples let's say I want to change index zero to be something else my list zero equals watermelon so here you go so now if I were to go my list I've added index 3 and I've changed index one that's basically how you're going to change values um and it's important to note that these values Don't Have To Be Strings arrays can hold any type in JavaScript they can hold strings numbers functions even other arrays so I can go my list equals apples the number 12 and let's create a function up here here go alert high that's the one I've been using might as well stick to it I'm just going to add go in there you notice go is a variable name because functions are actually variables as far as JavaScript is concerned so now if I look at my list in the console apples 12 and the function go so that's pretty much an example of the fact that arrays can hold anything and if I actually want to access this fun fun and call it well I can either call go which is going to alert or go is in my array so I can go my list to and that I can run it just like I can a function and that's exactly the same as changing these letters to go so I'm accessing it and then I'm calling it so that's kind of you know it's a little quirky you really wouldn't do that but once again arrays can hold anything or I can make this array hold a new array of will Laura there we go so now if I look at my list it's got apples 12 and an array of names will is the zero index Laura is the one index great now arrays have what's called what are called Methods or better yet actions that you can run on arrays let's go back to Apples oranges bananas let's save that let's get rid of you so I can go my list dot shift and that will give me the first entry off of my list and it will actually pull it out of the list so now the list has one less entry if I look at my list now apples has been pulled out and oranges and bananas are all that remain so now I can go my list shift again so I could say their current fruit equals my list. shift there we go now current fruit will equal oranges because that was at the front of the stack in my list only has one item left so once again shift pulls your first item out actually removes it from your list and passes it to whatever your function passes it to whatever variable is on the other side of your function let's go back let's refresh my page my list is now back to normal there's also a pop method pop is going to pull the last value off of the list and it's going to actually remove it so now my list has two entries the first and the second and bananas is gone now there's also a very cool method called for each and for each you pass it a function and it's automatically going to put two arguments into this function for you it's going to give you a value and an index for each item it's going to Loop through this and it's going to run my function then it's going to run this value run the function then it's going to take this value and run the function so I can console log value index and I should see three console logs apples zero oranges one bananas 2 or a more useful way of doing it would be alert I have plus value Plus in my shopping bag I have apples in my shopping bag I have oranges in my shopping bag I have bananas in my shopping bag now one Quirk with JavaScript is older browsers are not going to have all the newer methods for each is a newer method um and not every browser has it so if you're running this on an older browser you might get an error message that says for each is not defined um and so what you're actually going to have to do is you're going to have to use an older way of looping through or iterating through this list so let's get into now the second part of of this lesson which is loops loops are well they're just what they sound like they're ways of looping through things over and over again and there's three kinds of Loops in JavaScript there's the while loop a do Loop and a for Loop let's look at each one of these what's it doing who knows so let's do the while loop they're all very similar by the way they just have a little bit different way of going about it as long as what's in here is true y will execute whatever's in this block whatever's between these curly braces so what I could do is I could say ver times equals z and while times is less than 10 let's console log tried it let's let's also spit out times just so we can see and let's say times equals time + 1 so now it's going to make it if it's zero it's going to bump it up one if it's one it's going to bump it up to two let's see what happens we tried it when times was zero and then we bumped it up now we tried it in times was one tried it when times was two we tried it all the way up till times was nine and when times was 10 we didn't try it anymore the while stopped it did what's called a break and so as long as this is true again it's going to run this block of code another way we can simplify this is we can just go times plus plus which is code for bump it up one more if it's zero make it one if it's one make it two another thing you can do is Javas in JavaScript is you can do minus minus which basically minus is one from whatever it is so times plus plus there we go that's going to do the exact same thing so that's a while loop uh there's also a do while loop or a do Loop you don't see this one as often and that's basically the same thing so I'm going to go console log tried it times and then I'm going to do same thing times plus plus and I'm going to go while times is less than 10 exact same thing and you'll notice it does the exact same thing tried it zero tried it one tried two try it three the difference pretty much the only difference between do and while is do is going to always run at least one time and then it's going to do a check to see if this is true or false so you're guaranteed one execution and it might stop after that whereas while is going to run the check first and if that's false then it's not ever going to run if it's true it's going to run over and over and over again until it's false so that's doing while they're very very very similar so the last Loop is the four Loop and the four Loop is the most common one you're going to see in JavaScript but unfortunately it's the most complicated one if you're just starting out it's not really hard per se it's just not quite as simple as the while loop and the do while loop so what you have in the for Loop is you have three arguments you have your setup you have your comparison and then you have your change this is what's going to happen every time it goes through the loop so here's kind of the common for Loop that you're going to see you're going to see there I equals 0 and then you're going to go I less than 10 so as long as I is less than 10 that's our comparison that's what would be in our while and then we're going to do i++ every time so we're starting off we're going to run this once we're going to check is I less than 10 yes it is we're going to run our Loop and every time we run our loop we're going to bump I up one more time and so let's console log this I is and then let's do I let's run this and see what happens you see that I is currently zero we started off I is zero and then it's going to run my block and then it's going to bump I up one more time then it's going to run it again hey is I less than 10 nope I mean yes it is run the block bump I up one more time is I still less than 10 yep run the block bump it up that keeps happening until I is no longer less than 10 and then it breaks so this is useful because we can actually make I the length of our array I'll kind of show you what we mean here let's make my list and then we're almost done with our lesson and I'm using capital letters now nice these are proper proper nouns there we go so I have apples oranges and bananas so I'm going to say I equals z and as long as I is less than my list. length GTH there you go then I'm going to do that so now it's going to run three times let me show you what my list. length is my list. length is three because I have three items in my list now that seems a little strange because I have a zero index one index 2 index you would think length would be two but length is three because when it comes to Dot length we're counting like a normal humid would count three items in my list so three items a zero a one and a two index I know that's confusing but whatever that's JavaScript so as long as I is less than the length of my array I'm going to Loop through and so what I can do now is I can go console log my list I so the first time around that'll be zero Second Time Around it'll be one Second Time Around it'll be two and there is no next time around I think I said first second second first second third you can see apples oranges bananas and then I'm done so I can do the exact same thing alert you have my list DOI or brackets ey in your basket there we go you have apples in your basket you have oranges in your basket and you have bananas in your basket so that's a for Loop now you can pretty much copy and paste this code and that's something that you can use anytime you want to iterate an array that's the most common for Loop I'll usually when I started off I copied and I pasted this away and I saved it because I just couldn't quite remember the order in the syntax were these commas were these semicolons it's something you just have to use several times to really get fortable with save this somewhere as a snippet of code that you reuse later that's arrays that's loops and in the next lesson we're going to use functions arrays and Loops to do some fun stuff
