With timestamps:

00:00 - all right we're going to learn
00:01 - javascript events today and javascript
00:03 - events in my opinion are really where
00:05 - javascript starts getting fun because
00:07 - you get to interact with the user as
00:08 - they interact with page so what an event
00:11 - is
00:11 - is that's anything that the user does to
00:14 - interact with a web webpage so if i were
00:15 - to click here that's a click event if i
00:18 - were to mouse over here that's a mouse
00:20 - enter and a mouse leave event when i
00:22 - leave so we can listen to these events
00:24 - it's called listening to these events
00:26 - and we can react and interact with the
00:29 - user so let's kind of get into what
00:31 - these events are i'm going to show you i
00:33 - basically have this add numbers here
00:35 - that's basically a paragraph
00:37 - with an input called num1 and an input
00:40 - with the idea of num id of num2 and then
00:42 - we have a paragraph with the idea of add
00:44 - sum so it's probably clear what we're
00:46 - going to be building here is whenever
00:48 - they change add 1 and add 2 we want to
00:51 - create the sum yay sounds easy enough so
00:54 - let's go ahead and build this out if you
00:55 - remember from our prior lesson we do
00:58 - selectors to actually grab an element so
01:01 - let's actually get num1 here
01:04 - num1 equals document
01:07 - dot
01:07 - gets elements by
01:10 - id
01:11 - and this is num
01:13 - dash one
01:15 - there we go and let's get number two as
01:16 - well
01:18 - up
01:20 - num2
01:23 - there we go now let's go and get some
01:24 - while we're at it
01:27 - add some
01:30 - is add some i believe that's add dash
01:33 - sum let's make check yep add dash sum
01:36 - okay so we've gotten our elements here
01:39 - and to add a listener it's very simple
01:41 - you just take your element and do add
01:43 - event listener
01:46 - and then your first argument is the name
01:48 - of the event so let's do a click events
01:51 - and then this function will fire or
01:54 - execute every time that event takes
01:56 - place so let's just console.log
01:59 - hi
02:01 - there we go i have live reload going so
02:03 - let's just refresh so now when i click
02:05 - it console logs high there you go you
02:07 - can see it going
02:08 - let's show you let's actually make it
02:10 - alert high here
02:14 - hi
02:16 - hi okay let's do some other events here
02:18 - let's do a mouse enter
02:21 - so now whenever i enter it
02:23 - oh
02:23 - hi
02:24 - hi okay how about a mouse leave
02:30 - so i'm in
02:31 - and i left and then i get the high some
02:33 - other events are focus and that's going
02:36 - to be whenever i whoop
02:38 - focus on it there we go that's a focus
02:40 - event
02:42 - and now i can't get away
02:44 - and then a blur event
02:47 - not blue blur event is going to be
02:49 - whenever i leave that element
02:52 - let's see if i can get out here okay
02:54 - some of those events are actually tricky
02:55 - to get out of when you're doing alerts
02:56 - so there's a focus and let's blur blur
02:58 - hi there we go so here's kind of a list
03:01 - of events i got click mouse enter mouse
03:03 - leave mouse down is when your mouse
03:05 - clicks down mouse up is when you let it
03:07 - back up a click is when the browser
03:09 - actually registers that you clicked
03:11 - because you know if you hold it down
03:12 - real long and then you let go that's not
03:15 - going to register as a click so click is
03:18 - only when it's fast enough to be a click
03:20 - mouse up mouse move is when you're
03:22 - actually moving over it it will actually
03:24 - send your coordinates your mouse back
03:27 - key down key up those are actually your
03:29 - keyboard events
03:31 - blur and focus we already covered them
03:32 - here's your full list of events which
03:33 - i'll include in the description as you
03:35 - can see there are a lot of them the ones
03:38 - you'll probably want to focus on are the
03:40 - mouse events some of these are called
03:41 - mouse events and then some of them are
03:43 - called keyboard events and those are the
03:46 - ones you tend to use the most where
03:47 - those keyboard there you go keyboard
03:48 - events these are the ones you're going
03:50 - to use the most i'll put that in the
03:51 - description again and let's actually get
03:53 - into building this little addition
03:55 - program
03:56 - so what we want to do is we actually
03:58 - want to just add an input event which is
04:01 - whenever anything changes in the value
04:04 - of our input this will work all the way
04:05 - back to i think internet explorer 9.
04:08 - so on the input event we want to
04:11 - do some
04:12 - addition now it's generally not the best
04:14 - practice here to create a function it's
04:17 - usually a better practice to insert a
04:19 - function that's been created here
04:21 - like add and then this is just going to
04:23 - do ads so whenever the input event fires
04:25 - we're going to run the add function
04:27 - which is created right there
04:30 - that's good for several reasons which i
04:31 - can get into more later on one of the
04:33 - reasons is now i can fire that whenever
04:37 - either of these run so whenever
04:40 - the num1 has an input event i can run
04:42 - add and when num2 has an input event i
04:45 - can run at so that's one reason alone
04:47 - that it's great to pull it out
04:49 - so that way you can share this function
04:52 - between multiple elements that's kind of
04:54 - a good practice so we're going to do
04:55 - here is we're going to actually get our
04:57 - two values var1 equals
05:00 - num1
05:02 - dot value that's going to be the actual
05:04 - value
05:06 - 2 equals num2
05:08 - dot value let's console log both of
05:10 - these 1 2.
05:14 - abc
05:15 - d e f there we go we have our two values
05:18 - excellent
05:20 - um and then let's actually add some we
05:22 - want to change the inner html add sum
05:26 - enter html
05:29 - equals one actually we'll just uh see
05:31 - yeah one plus two so let's go check it
05:34 - out we got 12 and we have 24 and we got
05:38 - one two two four because anything that
05:40 - comes in from an input is a string type
05:43 - it's not a number type so how you
05:45 - convert that from a string type to a
05:47 - number is just go parse
05:49 - floats
05:51 - so that's going to parse it into a
05:52 - floating
05:54 - number
05:56 - floating integer floating number i
05:58 - forget exactly that's supposed to be
05:59 - called so let's do 12
06:01 - and 35 okay 34. okay so that works but
06:04 - if you notice when this is empty it says
06:07 - non which means not a number that's
06:10 - because we just tried to parse undefined
06:13 - as a number so we can do here is
06:16 - we can do an or zero these little double
06:19 - bars mean or which means if this value
06:22 - is basically null
06:24 - undefined
06:26 - non
06:27 - which is not a number
06:29 - then it's going to say okay that doesn't
06:31 - exist let's use the or value instead
06:34 - so i could say
06:36 - null or zero
06:38 - then i could do null or zero and
06:40 - basically one would equate to zero and
06:42 - two would equate to zero
06:44 - so
06:45 - really how this pans out to be is
06:48 - if this doesn't create a number we're
06:50 - going to use 0 instead if this doesn't
06:52 - create a number we're going to use 0
06:54 - instead so there we go let's try this
06:55 - now 34 excellent it did 34 plus 0
06:59 - and then plus 1 for 35. all right there
07:01 - you go we did our little number addition
07:03 - and let's do a little maybe your sum
07:06 - is
07:09 - and of course this will actually do
07:11 - something tricky as well
07:14 - 3 4 plus 2 4. why did that do that well
07:18 - because as soon as we start adding a
07:19 - string to numbers
07:22 - then it can't do that so it adds a
07:24 - number plus a number so kind of the way
07:26 - you get around this is go sum equals 1
07:29 - plus two
07:30 - ah two numbers together i can do that
07:33 - javascript says and now we can add sum
07:35 - in there
07:36 - so that'll work
07:38 - 34 plus
07:39 - two excellent
07:41 - um and another way that you could do
07:43 - that
07:44 - is you could just go
07:47 - parentheses like that one plus two and
07:50 - so that will do whatever's inside of the
07:52 - parentheses first so that's a number
07:54 - plus a number that'll work
07:56 - and then it will add that number plus
07:58 - the string in which case it will turn
08:00 - them all into one big string so i'll
08:02 - just leave it like that it's a little
08:03 - bit cleaner if i if you ask me excellent
08:06 - so there's our addition our edition is
08:07 - working
08:08 - thanks to click events so let's go ahead
08:10 - and do maybe one more example here i'm
08:12 - going to turn off this html
08:15 - and turn on this html
08:20 - so what i have here is i have a list of
08:22 - lis and i have a list of images now the
08:25 - images have a class of hide which means
08:27 - they're hidden
08:28 - up here my class hide in the css is
08:31 - display none so i basically want to be
08:33 - able to click on this a tag
08:37 - and then i want that to show an image
08:40 - actually show it and hide it so let me
08:42 - go ahead and save this to kind of see
08:43 - what we have here so we have simon
08:44 - cowell bruce willis and ben carson
08:47 - three great guys of course and then uh
08:50 - basically i want to click on one of
08:51 - those and so i've added an href
08:54 - of pound pound will just by default just
08:57 - reload your same page it doesn't really
08:59 - matter what we put in href because we're
09:01 - going to be returning false which means
09:03 - we're going to cancel this out it's
09:04 - never going to go anywhere
09:06 - so if that was google.com it's not going
09:08 - to go to google.com we're actually going
09:10 - to cancel that out but it's good to put
09:12 - something in there so by default if you
09:14 - have a link that you're going to be
09:15 - canceling with javascript just put pound
09:17 - in there so we have id of simon
09:20 - id of bruce id of ben
09:23 - and then our images we want to toggle
09:24 - are simon pick bruce pick and ben pick
09:27 - okay let's go and build this out let's
09:29 - get rid of this javascript
09:31 - uh
09:32 - i will put that in the description on
09:34 - maybe codepen or something for you for a
09:36 - little bit later
09:37 - but for now we'll get rid of that and
09:38 - let's go ahead and grab that simon
09:40 - element where simon
09:42 - equals document
09:44 - dot get element by id
09:47 - and then this is just simon
09:51 - there we go and let's get simon pick
09:59 - simon dash pick i believe yeah
10:03 - there we go so
10:04 - when simon is going to get an event
10:06 - listener
10:10 - click
10:11 - function
10:14 - so whenever simon gets clicked we're
10:15 - going to run this function
10:17 - if simon pick
10:22 - classname
10:25 - so if it has the hide class
10:28 - then we're going to remove it
10:34 - dot class name
10:36 - equals there we go so basically if it
10:38 - has a class name hide we're going to
10:40 - remove it so let's go and click
10:41 - hey there he is
10:43 - and then else
10:45 - we're going to
10:48 - put it back on
10:51 - there we go now it's going to toggle
10:53 - there he is there he isn't okay
10:55 - excellent so now let's do the same thing
10:56 - for bruce willis and ben carson and then
10:58 - we'll make this app a little bit cleaner
11:00 - so let's get everything that says simon
11:02 - and change it to bruce
11:03 - i'm using sublime text multiple cursors
11:05 - here
11:06 - sublime text and a lot of text editors
11:08 - have this control d or apple d or
11:10 - command d i guess
11:12 - that's going to automatically select all
11:14 - the same stuff so i can change it which
11:16 - is awesome what uh and we got ben carson
11:18 - so simon did that let's do bruce let's
11:21 - find everything in here that's called
11:22 - simon
11:25 - bruce it just makes it so much faster to
11:28 - do this stuff
11:30 - and then ben
11:33 - here we go we should have all three
11:35 - simon bruce ben let's see what happens
11:38 - if i click a couple of them and now
11:39 - they're both showing that's something we
11:40 - can deal with a little later
11:42 - okay so
11:44 - all three of them are in here but i
11:46 - don't like this for a lot of reasons one
11:48 - this is a lot of almost identical code
11:51 - there's this thing that coders talk
11:53 - about all the co all the things all the
11:55 - all the time called dry dry code don't
11:59 - repeat yourself i almost said do not
12:01 - don't repeat yourself dry dry coat this
12:05 - is not dry code because uh there's all
12:08 - this repeating this is basically exactly
12:10 - the same thing as this which is
12:12 - basically the exact same thing as this
12:14 - that's a really bad idea so we actually
12:16 - want to
12:17 - find a way that we can share all this
12:20 - so let's go ahead and create a new
12:22 - function here i'm just going to go ahead
12:23 - and mute you guys out
12:26 - and let's actually do a new function
12:31 - let's add event listener i'm just going
12:33 - to actually copy you
12:36 - let's get at one function that everybody
12:39 - can share that everybody can use we'll
12:41 - call it pick link
12:43 - there we go so now simon can listen to
12:45 - that
12:46 - and
12:47 - bruce can listen to that and ben can
12:50 - listen to this excellent so now piclink
12:53 - can kind of do all of this at once
12:57 - i'm going to go ahead and
12:59 - scroll down eyes there we go
13:01 - get you guys some space up there
13:03 - pick a link
13:05 - and then what we're gonna do here is
13:06 - we're actually going to
13:08 - get it one thing that's interesting
13:09 - about an event listener let me go ahead
13:11 - and just uh console log this for you
13:14 - basically when we start sharing stuff we
13:17 - don't know who got clicked on
13:18 - so we don't know if we clicked on simon
13:21 - bruce or ben
13:22 - when we fire this function so we have to
13:24 - look that up based off of this this will
13:26 - be the element that got clicked so this
13:29 - will be simon if you clicked on simon
13:32 - the value of this will be bruce if you
13:34 - clicked on bruce well here i'll just
13:35 - console.log it so you can see
13:37 - there we go so this is my a for simon
13:41 - if i click on bruce then i'm console
13:42 - logging this then that's going to be
13:43 - bruce willis b is going to be ben carson
13:46 - so what i've done here is you'll notice
13:48 - i've added this data dash img attribute
13:51 - so you're free to use with html four or
13:55 - five data dash
13:58 - anything you want so i just called it
13:59 - img because this is going to be the id
14:02 - of the image that i want to toggle when
14:04 - i click on simon you'll notice that this
14:06 - has the id of simon pick
14:08 - and so basically when i click on this
14:10 - link i want to toggle simon click so i
14:12 - add a data image of simon click data
14:15 - image of bruce pick
14:16 - sorry simon pick data image of ben pick
14:19 - so i'm actually going to snatch that out
14:21 - so here's kind of how that'll work i'll
14:23 - go very pick
14:25 - instead of before i was automatically
14:28 - looking at simon pick bruce pick or ben
14:31 - pick well now i don't know which pick it
14:33 - is so it's just going to be ver pick
14:35 - equals
14:36 - document.getelements
14:38 - by id
14:40 - and i actually want to snatch the
14:42 - attribute out there out of there so
14:44 - where pick
14:45 - id equals
14:47 - this dot attributes
14:50 - so this again
14:52 - is my a link that got clicked on and i
14:55 - want to look at my attributes list and i
14:57 - want to grab data dash img
15:01 - so i can't go data dash img that's bad
15:05 - syntax that's going to
15:07 - it's data minus img so there's another
15:10 - way that you can access attributes is i
15:12 - can do this
15:13 - and so that's going to be the data img
15:16 - so i can also do this
15:20 - attributes
15:22 - basically you can use it to access any
15:23 - value you want so i don't need to do
15:26 - that for attributes i can do the cleaner
15:28 - version which is this way
15:30 - this dot attributes dot data img is
15:32 - basically what i'm doing dot value so
15:35 - i'm going to get the value out of the
15:37 - data img attribute and so pick id let's
15:40 - go to console.log pick id
15:44 - make sure i got this runner right so
15:46 - there you go simon pick is the idea i'm
15:47 - getting bruce pick
15:49 - and ben pick awesome so now i just have
15:51 - to do pick id
15:55 - so i'm getting my element this is the
15:57 - pick that i want to show and now i just
15:59 - have to kind of copy and paste this code
16:01 - here let's copy and paste this
16:03 - get rid of my comments
16:05 - let me toggle it over a little bit so
16:08 - now i'm just doing pick
16:09 - i've picked up class name as hide get
16:11 - rid of it excellent this should totally
16:13 - work let's see
16:15 - simon's working bruce is working ben is
16:18 - working so now what we did is it took a
16:20 - little bit of figuring out a little bit
16:21 - of reworking but look how much shorter
16:23 - my code is now so i've added three
16:25 - listeners i don't need you
16:28 - i don't need you
16:31 - and i don't need you excellent that's a
16:33 - very simple code and this is good for
16:37 - several reasons
16:38 - one i'm only creating one function so
16:40 - i'm using a little less memory than if i
16:42 - created three different functions
16:44 - and now any future functionality i want
16:47 - to add into my program it's all i have
16:50 - to do is change this one function and
16:52 - all three of them will get the results
16:54 - so remember that problem i had earlier
16:56 - where if i click on several i see them
16:58 - all well what i want to do is i actually
17:00 - want to hide every image
17:03 - i want to actually hide every image
17:05 - that's in existence on the page first
17:08 - and then i want to show everything so
17:10 - i'm going to go document
17:13 - dot
17:14 - query selector
17:19 - image
17:21 - there we go and then i would basically
17:24 - loop through that i could go over image
17:26 - all images
17:29 - and then i could loop through all images
17:30 - and i could tell each image to have a
17:32 - class of hide and then i could run
17:35 - through the rest of the code and show
17:37 - the one that i want to show i might as
17:39 - well do it for you right since i just
17:40 - told you about it let's do a for loop
17:43 - var i equals zero remember that for loop
17:45 - and how annoying they are you just got
17:47 - to keep doing it to remember how to do
17:49 - it i is less than
17:51 - all images
17:52 - dot length
17:54 - i plus plus man it takes a while to
17:56 - remember that for loop basically i'm
17:58 - just going to go through i as many times
18:00 - as it takes
18:02 - all images i so i want to get the image
18:04 - that i'm looking for
18:07 - let's see dot class name
18:10 - equals hide
18:12 - so i'm going to add hide class name to
18:14 - every image on the page
18:16 - and then i'm going to go through with
18:17 - the rest of my program let's see if this
18:18 - works
18:20 - oh it works
18:22 - excellent
18:23 - excellent that is exactly what i wanted
18:26 - it to do am i only showing one yep i'm
18:28 - only showing one awesome there you go
18:30 - that's javascript's
18:32 - event listeners mixed in with some for
18:35 - loops and some selectors that's kind of
18:36 - tying some stuff together for you if it
18:38 - got a little complicated with this
18:40 - example don't worry just mess around
18:41 - with your math example for a while i'm
18:43 - going to post both of these on codepen
18:45 - and i'm going to put that link in the
18:46 - description have an excellent day

Cleaned transcript:

all right we're going to learn javascript events today and javascript events in my opinion are really where javascript starts getting fun because you get to interact with the user as they interact with page so what an event is is that's anything that the user does to interact with a web webpage so if i were to click here that's a click event if i were to mouse over here that's a mouse enter and a mouse leave event when i leave so we can listen to these events it's called listening to these events and we can react and interact with the user so let's kind of get into what these events are i'm going to show you i basically have this add numbers here that's basically a paragraph with an input called num1 and an input with the idea of num id of num2 and then we have a paragraph with the idea of add sum so it's probably clear what we're going to be building here is whenever they change add 1 and add 2 we want to create the sum yay sounds easy enough so let's go ahead and build this out if you remember from our prior lesson we do selectors to actually grab an element so let's actually get num1 here num1 equals document dot gets elements by id and this is num dash one there we go and let's get number two as well up num2 there we go now let's go and get some while we're at it add some is add some i believe that's add dash sum let's make check yep add dash sum okay so we've gotten our elements here and to add a listener it's very simple you just take your element and do add event listener and then your first argument is the name of the event so let's do a click events and then this function will fire or execute every time that event takes place so let's just console.log hi there we go i have live reload going so let's just refresh so now when i click it console logs high there you go you can see it going let's show you let's actually make it alert high here hi hi okay let's do some other events here let's do a mouse enter so now whenever i enter it oh hi hi okay how about a mouse leave so i'm in and i left and then i get the high some other events are focus and that's going to be whenever i whoop focus on it there we go that's a focus event and now i can't get away and then a blur event not blue blur event is going to be whenever i leave that element let's see if i can get out here okay some of those events are actually tricky to get out of when you're doing alerts so there's a focus and let's blur blur hi there we go so here's kind of a list of events i got click mouse enter mouse leave mouse down is when your mouse clicks down mouse up is when you let it back up a click is when the browser actually registers that you clicked because you know if you hold it down real long and then you let go that's not going to register as a click so click is only when it's fast enough to be a click mouse up mouse move is when you're actually moving over it it will actually send your coordinates your mouse back key down key up those are actually your keyboard events blur and focus we already covered them here's your full list of events which i'll include in the description as you can see there are a lot of them the ones you'll probably want to focus on are the mouse events some of these are called mouse events and then some of them are called keyboard events and those are the ones you tend to use the most where those keyboard there you go keyboard events these are the ones you're going to use the most i'll put that in the description again and let's actually get into building this little addition program so what we want to do is we actually want to just add an input event which is whenever anything changes in the value of our input this will work all the way back to i think internet explorer 9. so on the input event we want to do some addition now it's generally not the best practice here to create a function it's usually a better practice to insert a function that's been created here like add and then this is just going to do ads so whenever the input event fires we're going to run the add function which is created right there that's good for several reasons which i can get into more later on one of the reasons is now i can fire that whenever either of these run so whenever the num1 has an input event i can run add and when num2 has an input event i can run at so that's one reason alone that it's great to pull it out so that way you can share this function between multiple elements that's kind of a good practice so we're going to do here is we're going to actually get our two values var1 equals num1 dot value that's going to be the actual value 2 equals num2 dot value let's console log both of these 1 2. abc d e f there we go we have our two values excellent um and then let's actually add some we want to change the inner html add sum enter html equals one actually we'll just uh see yeah one plus two so let's go check it out we got 12 and we have 24 and we got one two two four because anything that comes in from an input is a string type it's not a number type so how you convert that from a string type to a number is just go parse floats so that's going to parse it into a floating number floating integer floating number i forget exactly that's supposed to be called so let's do 12 and 35 okay 34. okay so that works but if you notice when this is empty it says non which means not a number that's because we just tried to parse undefined as a number so we can do here is we can do an or zero these little double bars mean or which means if this value is basically null undefined non which is not a number then it's going to say okay that doesn't exist let's use the or value instead so i could say null or zero then i could do null or zero and basically one would equate to zero and two would equate to zero so really how this pans out to be is if this doesn't create a number we're going to use 0 instead if this doesn't create a number we're going to use 0 instead so there we go let's try this now 34 excellent it did 34 plus 0 and then plus 1 for 35. all right there you go we did our little number addition and let's do a little maybe your sum is and of course this will actually do something tricky as well 3 4 plus 2 4. why did that do that well because as soon as we start adding a string to numbers then it can't do that so it adds a number plus a number so kind of the way you get around this is go sum equals 1 plus two ah two numbers together i can do that javascript says and now we can add sum in there so that'll work 34 plus two excellent um and another way that you could do that is you could just go parentheses like that one plus two and so that will do whatever's inside of the parentheses first so that's a number plus a number that'll work and then it will add that number plus the string in which case it will turn them all into one big string so i'll just leave it like that it's a little bit cleaner if i if you ask me excellent so there's our addition our edition is working thanks to click events so let's go ahead and do maybe one more example here i'm going to turn off this html and turn on this html so what i have here is i have a list of lis and i have a list of images now the images have a class of hide which means they're hidden up here my class hide in the css is display none so i basically want to be able to click on this a tag and then i want that to show an image actually show it and hide it so let me go ahead and save this to kind of see what we have here so we have simon cowell bruce willis and ben carson three great guys of course and then uh basically i want to click on one of those and so i've added an href of pound pound will just by default just reload your same page it doesn't really matter what we put in href because we're going to be returning false which means we're going to cancel this out it's never going to go anywhere so if that was google.com it's not going to go to google.com we're actually going to cancel that out but it's good to put something in there so by default if you have a link that you're going to be canceling with javascript just put pound in there so we have id of simon id of bruce id of ben and then our images we want to toggle are simon pick bruce pick and ben pick okay let's go and build this out let's get rid of this javascript uh i will put that in the description on maybe codepen or something for you for a little bit later but for now we'll get rid of that and let's go ahead and grab that simon element where simon equals document dot get element by id and then this is just simon there we go and let's get simon pick simon dash pick i believe yeah there we go so when simon is going to get an event listener click function so whenever simon gets clicked we're going to run this function if simon pick classname so if it has the hide class then we're going to remove it dot class name equals there we go so basically if it has a class name hide we're going to remove it so let's go and click hey there he is and then else we're going to put it back on there we go now it's going to toggle there he is there he isn't okay excellent so now let's do the same thing for bruce willis and ben carson and then we'll make this app a little bit cleaner so let's get everything that says simon and change it to bruce i'm using sublime text multiple cursors here sublime text and a lot of text editors have this control d or apple d or command d i guess that's going to automatically select all the same stuff so i can change it which is awesome what uh and we got ben carson so simon did that let's do bruce let's find everything in here that's called simon bruce it just makes it so much faster to do this stuff and then ben here we go we should have all three simon bruce ben let's see what happens if i click a couple of them and now they're both showing that's something we can deal with a little later okay so all three of them are in here but i don't like this for a lot of reasons one this is a lot of almost identical code there's this thing that coders talk about all the co all the things all the all the time called dry dry code don't repeat yourself i almost said do not don't repeat yourself dry dry coat this is not dry code because uh there's all this repeating this is basically exactly the same thing as this which is basically the exact same thing as this that's a really bad idea so we actually want to find a way that we can share all this so let's go ahead and create a new function here i'm just going to go ahead and mute you guys out and let's actually do a new function let's add event listener i'm just going to actually copy you let's get at one function that everybody can share that everybody can use we'll call it pick link there we go so now simon can listen to that and bruce can listen to that and ben can listen to this excellent so now piclink can kind of do all of this at once i'm going to go ahead and scroll down eyes there we go get you guys some space up there pick a link and then what we're gonna do here is we're actually going to get it one thing that's interesting about an event listener let me go ahead and just uh console log this for you basically when we start sharing stuff we don't know who got clicked on so we don't know if we clicked on simon bruce or ben when we fire this function so we have to look that up based off of this this will be the element that got clicked so this will be simon if you clicked on simon the value of this will be bruce if you clicked on bruce well here i'll just console.log it so you can see there we go so this is my a for simon if i click on bruce then i'm console logging this then that's going to be bruce willis b is going to be ben carson so what i've done here is you'll notice i've added this data dash img attribute so you're free to use with html four or five data dash anything you want so i just called it img because this is going to be the id of the image that i want to toggle when i click on simon you'll notice that this has the id of simon pick and so basically when i click on this link i want to toggle simon click so i add a data image of simon click data image of bruce pick sorry simon pick data image of ben pick so i'm actually going to snatch that out so here's kind of how that'll work i'll go very pick instead of before i was automatically looking at simon pick bruce pick or ben pick well now i don't know which pick it is so it's just going to be ver pick equals document.getelements by id and i actually want to snatch the attribute out there out of there so where pick id equals this dot attributes so this again is my a link that got clicked on and i want to look at my attributes list and i want to grab data dash img so i can't go data dash img that's bad syntax that's going to it's data minus img so there's another way that you can access attributes is i can do this and so that's going to be the data img so i can also do this attributes basically you can use it to access any value you want so i don't need to do that for attributes i can do the cleaner version which is this way this dot attributes dot data img is basically what i'm doing dot value so i'm going to get the value out of the data img attribute and so pick id let's go to console.log pick id make sure i got this runner right so there you go simon pick is the idea i'm getting bruce pick and ben pick awesome so now i just have to do pick id so i'm getting my element this is the pick that i want to show and now i just have to kind of copy and paste this code here let's copy and paste this get rid of my comments let me toggle it over a little bit so now i'm just doing pick i've picked up class name as hide get rid of it excellent this should totally work let's see simon's working bruce is working ben is working so now what we did is it took a little bit of figuring out a little bit of reworking but look how much shorter my code is now so i've added three listeners i don't need you i don't need you and i don't need you excellent that's a very simple code and this is good for several reasons one i'm only creating one function so i'm using a little less memory than if i created three different functions and now any future functionality i want to add into my program it's all i have to do is change this one function and all three of them will get the results so remember that problem i had earlier where if i click on several i see them all well what i want to do is i actually want to hide every image i want to actually hide every image that's in existence on the page first and then i want to show everything so i'm going to go document dot query selector image there we go and then i would basically loop through that i could go over image all images and then i could loop through all images and i could tell each image to have a class of hide and then i could run through the rest of the code and show the one that i want to show i might as well do it for you right since i just told you about it let's do a for loop var i equals zero remember that for loop and how annoying they are you just got to keep doing it to remember how to do it i is less than all images dot length i plus plus man it takes a while to remember that for loop basically i'm just going to go through i as many times as it takes all images i so i want to get the image that i'm looking for let's see dot class name equals hide so i'm going to add hide class name to every image on the page and then i'm going to go through with the rest of my program let's see if this works oh it works excellent excellent that is exactly what i wanted it to do am i only showing one yep i'm only showing one awesome there you go that's javascript's event listeners mixed in with some for loops and some selectors that's kind of tying some stuff together for you if it got a little complicated with this example don't worry just mess around with your math example for a while i'm going to post both of these on codepen and i'm going to put that link in the description have an excellent day
