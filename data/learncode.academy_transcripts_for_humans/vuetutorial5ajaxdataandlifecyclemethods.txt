With timestamps:

00:00 - in this video we're going to show you
00:01 - the view lifecycle methods which allow
00:02 - us to do some cool things including load
00:05 - some dynamic data from a server that our
00:06 - component needs to render so the
00:08 - lifecycle methods that View bakes in our
00:10 - before creates which as you guessed
00:13 - fires if this was a function we add here
00:16 - it's going to fire before our view
00:19 - component gets actually created so we
00:21 - have before creates we have create we
00:24 - have before mounts which is before the
00:27 - component actually gets mounted into the
00:29 - dom and then we have mounted which is
00:31 - the one we'll want to use if we want to
00:33 - load any dynamic data then we also have
00:35 - before destroy and destroyed if you want
00:37 - to do some cleanup or something before
00:39 - this component ever leaves the dom so
00:42 - let's go ahead and create a mounted
00:43 - method we'll just create it right here
00:46 - on our view object that we're sending to
00:48 - our new view and let's just do console
00:51 - log mounted so this is going to fire
00:54 - when our component actually mounts to
00:56 - and you can see right here the ID app so
00:59 - if I save and refresh hey I got it
01:01 - mounted to prove this to you let's go
01:03 - ahead and remove this if you remove the
01:05 - element it will not mount to the dom it
01:07 - doesn't know where and when this is
01:09 - useful in some circumstances if you
01:11 - don't want to mount it to the dom
01:12 - immediately but you want to kind of get
01:14 - it all set up so what I can do down here
01:16 - now in my console is I can go app dot
01:19 - amount and then I can just give it let's
01:22 - go to mount to app and there we go it
01:25 - mounted and you can see it said mounted
01:27 - so that's kind of a way that you can use
01:29 - that so that's when that fires it fires
01:31 - when your app boom attaches to the dom
01:34 - and so that's where we're going to want
01:35 - to fetch some dynamic data so we could
01:38 - do this with the fetch API here we could
01:39 - just use JavaScript fetch API request
01:43 - some data in there or whatever it is who
01:45 - knows what it is then let's go ahead
01:48 - take that response and let's turn it
01:52 - into JSON
01:56 - then we have our response and we can do
02:01 - something with it
02:02 - so in this case let's go ahead and use
02:05 - rest learn code Academy which is a free
02:08 - restful api that I set up a while ago
02:10 - it's great for prototyping stuff the
02:12 - date is public and it gets erased every
02:14 - so often but basically how to use it as
02:15 - you just go rest dot learn code dot
02:20 - Academy slash API make up your own user
02:22 - make sure you make up your own unique
02:23 - user so I'll make this view five and
02:25 - then you make up the collection so this
02:27 - will be friends so the first time you
02:30 - try to access it it doesn't exist it
02:32 - gets created and now it's an empty array
02:33 - so I can go ahead and fetch that now
02:36 - that's now a full restful endpoint with
02:38 - git post input so there we go
02:41 - view five friends and when we get that
02:44 - data back in let's say this dot data or
02:47 - this dot friends equals data so there we
02:51 - have it and that's now we're fetching
02:54 - dynamic data let's prove that this
02:55 - actually populates that dynamic list by
02:58 - going to my terminal I'm gonna use curl
03:00 - to actually post some people to that
03:02 - friends list so we're gonna send a post
03:07 - request here and the data will be named
03:12 - we're just gonna give it a JSON object
03:16 - I'm gonna post my name there we go we'll
03:19 - and we're gonna post to that URL there
03:22 - we go we added it you can see our
03:23 - response back we got an ID so if I go to
03:26 - here I now have one friend in my friends
03:30 - list and if I now reload this I don't
03:33 - have my friends list because I haven't
03:34 - mounted yet so let's run that exact same
03:36 - command mount it mounted it grab my
03:39 - friends and there you go my friends are
03:41 - now populated so now I want to insert
03:43 - friend dot name instead of just friend
03:46 - let's mount it again fetched it and
03:50 - there at my name will so that's getting
03:52 - a little annoying to have to trigger
03:54 - that mouth let's add this yell back in
03:56 - here
03:57 - now let's go post another friend here
04:00 - let's post say William and maybe one
04:05 - more person Willis so now I should have
04:09 - three friends or my app loads up
04:11 - excellent I have three friends so that's
04:13 - kind of how you'll use your lifecycle
04:15 - methods to do fun stuff namely the most
04:17 - common use case is going to be to load
04:19 - dynamic data in the next videos let's go
04:22 - ahead turn this into a full friends list
04:23 - editor so we can delete friends and edit
04:26 - friends

Cleaned transcript:

in this video we're going to show you the view lifecycle methods which allow us to do some cool things including load some dynamic data from a server that our component needs to render so the lifecycle methods that View bakes in our before creates which as you guessed fires if this was a function we add here it's going to fire before our view component gets actually created so we have before creates we have create we have before mounts which is before the component actually gets mounted into the dom and then we have mounted which is the one we'll want to use if we want to load any dynamic data then we also have before destroy and destroyed if you want to do some cleanup or something before this component ever leaves the dom so let's go ahead and create a mounted method we'll just create it right here on our view object that we're sending to our new view and let's just do console log mounted so this is going to fire when our component actually mounts to and you can see right here the ID app so if I save and refresh hey I got it mounted to prove this to you let's go ahead and remove this if you remove the element it will not mount to the dom it doesn't know where and when this is useful in some circumstances if you don't want to mount it to the dom immediately but you want to kind of get it all set up so what I can do down here now in my console is I can go app dot amount and then I can just give it let's go to mount to app and there we go it mounted and you can see it said mounted so that's kind of a way that you can use that so that's when that fires it fires when your app boom attaches to the dom and so that's where we're going to want to fetch some dynamic data so we could do this with the fetch API here we could just use JavaScript fetch API request some data in there or whatever it is who knows what it is then let's go ahead take that response and let's turn it into JSON then we have our response and we can do something with it so in this case let's go ahead and use rest learn code Academy which is a free restful api that I set up a while ago it's great for prototyping stuff the date is public and it gets erased every so often but basically how to use it as you just go rest dot learn code dot Academy slash API make up your own user make sure you make up your own unique user so I'll make this view five and then you make up the collection so this will be friends so the first time you try to access it it doesn't exist it gets created and now it's an empty array so I can go ahead and fetch that now that's now a full restful endpoint with git post input so there we go view five friends and when we get that data back in let's say this dot data or this dot friends equals data so there we have it and that's now we're fetching dynamic data let's prove that this actually populates that dynamic list by going to my terminal I'm gonna use curl to actually post some people to that friends list so we're gonna send a post request here and the data will be named we're just gonna give it a JSON object I'm gonna post my name there we go we'll and we're gonna post to that URL there we go we added it you can see our response back we got an ID so if I go to here I now have one friend in my friends list and if I now reload this I don't have my friends list because I haven't mounted yet so let's run that exact same command mount it mounted it grab my friends and there you go my friends are now populated so now I want to insert friend dot name instead of just friend let's mount it again fetched it and there at my name will so that's getting a little annoying to have to trigger that mouth let's add this yell back in here now let's go post another friend here let's post say William and maybe one more person Willis so now I should have three friends or my app loads up excellent I have three friends so that's kind of how you'll use your lifecycle methods to do fun stuff namely the most common use case is going to be to load dynamic data in the next videos let's go ahead turn this into a full friends list editor so we can delete friends and edit friends
