With timestamps:

00:00 - so I'm using JavaScript events to do
00:01 - this simple to-do list editor which
00:02 - we're going to build today I can change
00:04 - it to Apple or I can change it to
00:08 - watermelon there we go and so that's
00:10 - basically my to-do list editor and so
00:13 - that's what we're going to build in this
00:14 - so if you remember from the prior lesson
00:16 - you can actually do selectors uh let me
00:19 - kind of show you what this app is going
00:21 - to be let me show you the HTML and kind
00:23 - of what I'm envisioning here so
00:25 - basically I have a UL with three liis in
00:28 - it those are their three Lis each Li has
00:30 - a span and an input so the span is what
00:33 - I see when I'm not in edit mode the
00:35 - input is going to be what I want to see
00:36 - when I'm in edit mode so kind of the way
00:39 - I'm going to do this is I'm going to add
00:41 - a class edit
00:43 - here and when class edit is on let me
00:45 - save this will live reload when class
00:47 - edit is on the span goes away the input
00:50 - gets shown so all I have to do to change
00:51 - edit mode is add that class or remove
00:54 - that class okay very simple seems easy
00:56 - enough uh so how I did that with CSS is
01:00 - my li input by default is a display none
01:04 - so this guy is always hidden by default
01:07 - and then when you have a class edit the
01:09 - span goes to display none and then class
01:12 - edit the input gets display initial so
01:15 - now the input is shown when edit is on
01:17 - span goes away input gets hidden so
01:20 - three simple CSS rules and I have the
01:21 - functionality for that so now on
01:24 - JavaScript when I click on An Li I want
01:27 - to add the edit class so now I'm in mode
01:30 - I type in my input and when I blur my
01:33 - input whenever I
01:35 - leave um or whenever I hit the enter key
01:37 - so that's be something I add to whenever
01:39 - I leave or hit the enter key then I want
01:41 - to update this with my value that I
01:44 - changed and then I want to remove my
01:46 - edit class so that's kind of my program
01:48 - let's go ahead and write it um you'll
01:49 - actually see it's pretty simple so let's
01:51 - go and first get our
01:53 - checklist our checklist UL right here so
01:56 - that's ID checklist so we're going to go
01:59 - check
02:00 - list equals
02:03 - document um get
02:06 - element by
02:09 - ID there we go so I've got the checklist
02:11 - now let's go get all the items within
02:13 - the checklist now so one cool thing is I
02:16 - can actually search within my checklist
02:18 - for all my items so I can go instead of
02:21 - document I don't want to search my
02:22 - entire document I just want to search
02:24 - within my checklist for all the items so
02:27 - checklist. query selector all
02:30 - I can do query selector all because it's
02:32 - going to be very fast there's only a few
02:34 - items within my checklist to begin with
02:37 - um and so I don't I'm not worried at all
02:39 - about speeder performance with using
02:40 - query selector all so there I have all
02:42 - my items right now so this is going to
02:44 - be an array let me go console
02:47 - logit so this is going to be an array of
02:50 - three liis we've got that Li that Li and
02:52 - that Li so we want to Loop through this
02:54 - array and then we want to add a listener
02:56 - to each item in the array so if you
02:58 - remember from a few lessons ago let's do
03:00 - a for Loop here so there I equals
03:03 - z i items. length so we're going to
03:07 - start off at zero as long as I is less
03:09 - than items length we're going to keep
03:11 - increasing I so now I can go
03:14 - items and once again these four Loops
03:16 - are weird you just got to code them and
03:18 - code them and code them and write them
03:20 - and write them and write them till you
03:21 - just finally get it and remember and
03:24 - have it memorized cuz it just it's not
03:26 - very natural this is one of the parts of
03:28 - programming that does feel like actual
03:30 - code cuz it's not English so it's okay
03:33 - if that seems annoying to you for a
03:34 - while at first um so now for each item
03:37 - we're going to add an event
03:40 - listener um and let's do a click event
03:43 - and then this right here if we do a
03:45 - function here that's not a very good
03:46 - idea because now it's going to every
03:49 - time we Loop run through this Loop for
03:51 - each item it's going to create a new
03:53 - function to do the same thing uh so we
03:56 - don't want to do that let's just go
03:57 - ahead and do edit item
04:01 - let's just actually make a function
04:02 - called edit item so we've only created
04:06 - one function that's living in memory
04:07 - down here and then it's going to run
04:10 - that function on any one of these items
04:12 - click events so this is better
04:14 - programming right here than adding a
04:16 - function in there you can do it it'll
04:18 - probably work just fine but this is
04:20 - better programming to pull your function
04:22 - out and then add your event listener to
04:25 - that function so basically whenever we
04:27 - click we want to edit this item so let's
04:29 - go and console log I'm going to console
04:30 - log this which might seem like a funny
04:33 - word but basically since any one of our
04:36 - items can trigger this function we need
04:39 - a way of knowing which item was clicked
04:41 - and that's the this this is whichever
04:43 - item had the event listener attached to
04:45 - it so if I were to click on this which
04:49 - is item one or item zero then this will
04:53 - be item zero let me just show you in
04:55 - practice here so I'm console logging
04:56 - this every time there's a click there we
04:58 - go so I clicked on apples and there you
05:00 - go this is the LI containing apples so
05:04 - if I to click on this I to click on the
05:07 - second Li then the value of this is now
05:11 - the Orange's Li if I were to click on
05:12 - the third Li the value of this would be
05:15 - the bananas Li so that's what this is
05:18 - It's the context uh that this function
05:21 - is running in so now I can actually edit
05:24 - whichever one got clicked so I could go
05:27 - if this. class name
05:30 - uh does not equal
05:33 - edit uh actually you know I'm just going
05:35 - to say this. class
05:38 - name equals
05:40 - edit I was going to I was going to have
05:42 - it be edit if it didn't equal it always
05:45 - needs to be edit no matter what so even
05:47 - if it was edit before we click on it now
05:49 - it's going to be edit so there we go now
05:51 - it's working sort of uh it never goes
05:54 - away but it's working step one complete
05:57 - when you click on it it goes into edit
05:59 - mode mode so now what we want to do is
06:02 - uh let's do a little bit more I think
06:05 - let me go refresh this I also want to
06:07 - focus on this input box which is really
06:10 - simple to do this. Focus actually uh I
06:14 - want to get the input inside of it so as
06:16 - you see I've clicked on this
06:18 - Li um and so that is the value of this
06:22 - right here but I want to get the input
06:24 - and I want to focus on the input you
06:25 - know what I also want to select all the
06:27 - text inside of it so that's pretty
06:29 - simple really just go ver
06:31 - input equals this. query selector all
06:34 - actually just query
06:35 - selector so I'm going to get the input
06:38 - inside of my li and then I'm just going
06:41 - to go input.
06:43 - Focus so there we go let's refresh this
06:46 - when I click hey now I have that nice
06:48 - little Focus bar around my input box and
06:51 - then let's also get a selection
06:54 - range set selection
06:58 - range so we're going to start at zero
07:01 - and we're just going to go input. value.
07:05 - length so basically the whole length of
07:08 - whatever our current value is we're
07:10 - going to select from zero which is here
07:12 - all the way to the full length of our
07:14 - text uh because what the input. value is
07:17 - is that's our current value of our input
07:19 - let me show you here I'm going to
07:20 - console log my current value
07:25 - is and then
07:27 - input. value
07:31 - so I'm going to when I click there you
07:33 - go my current value is
07:34 - Apples my current value is oranges so
07:37 - that's what that input value is an input
07:40 - value. length is how many letters I
07:42 - current H currently have on there uh so
07:45 - let me just change this to
07:48 - length so there we go six characters in
07:51 - apples right a p p l e s yep six oranges
07:55 - o r a n g e s yep so seven characters in
07:59 - that and so that's what that length is
08:03 - so I'm going to create a selection from
08:05 - zero to the full length I know that's
08:07 - kind of confusing and it's probably too
08:10 - much but whatever so there we have this
08:12 - nice little when you click on it it's it
08:14 - focuses on it you see my focus gets
08:17 - whichever one I clicked on and then it
08:19 - selects the full text range so that's
08:21 - pretty nice behavior so now I can change
08:25 - it uh let's change this to just apple
08:28 - and then I can leave my value has
08:30 - changed but I want to get out of edit
08:31 - mode so let's go Ahad and add a blur
08:34 - event listener now uh but I don't
08:37 - actually want to add that blur event
08:39 - listener to the whole Li I want to add
08:42 - the blur to the input so let's go ahead
08:44 - and get let me copy
08:46 - this let's get our
08:49 - inputs so I'm going to query selector
08:51 - all
08:52 - input so now this is the array of all
08:56 - the inputs inside of my checklist so
08:59 - that's that so as I'm looping through
09:02 - here I'm going to also add a listener to
09:05 - every
09:08 - input so now I'm going to go I'm going
09:11 - to Loop through my checklist length 0 1
09:14 - 2 three and then I'm going to add a
09:17 - listener for item zero I'm going to add
09:19 - a listener for input zero as well so
09:22 - this will be a
09:25 - blur on blur not blue on blur I'm going
09:29 - to do an update item
09:33 - function so now let's just console log
09:37 - and say we
09:39 - blurred make sure we're working that far
09:43 - so I clicked there we go we blurred and
09:46 - let me actually console log the
09:48 - value this
09:51 - value apples let's say more
09:55 - apples we blurred more apples okay so
09:57 - that's how I'm going to get the the
09:59 - value out um and then very simply I just
10:02 - want to apply this value I've got my
10:05 - value on blur I want to apply it to the
10:07 - span I want to set the inner HTML of the
10:10 - span which is my previous element
10:12 - sibling which is the code for that so
10:15 - I'm just going to go this.
10:20 - previous element sibling. HTML if you
10:24 - remember that from when I did that
10:25 - earlier equals dis. Val dis
10:30 - so there we go now when I blur I want to
10:32 - update that so
10:35 - apples I blurred of course we didn't
10:37 - really realize that we were able to do
10:39 - that because what I also have to do is I
10:41 - have to go to my parent node which is
10:43 - here and I have to remove that edit
10:46 - class for it to go back out of edit
10:50 - mode do class name equals nothing so
10:55 - there we go our program should be
10:57 - working more
11:00 - apples got it I edited my span took it
11:03 - out of edit mode and we're good to go uh
11:07 - so one more thing that Let's do let's go
11:09 - ahead and add an event listener for key
11:14 - press and let's go item key
11:18 - press so if I hit that Enter key I want
11:20 - to do the exact same behavior I want to
11:23 - update that item the same way so let's
11:26 - do our function item key press
11:31 - so whenever the key press event is fired
11:33 - we're going to run item key press which
11:35 - is this
11:36 - guy uh and so one thing that this guy
11:39 - gets is he gets an event object every
11:42 - time it fires let's go a and console log
11:44 - that event object so you can see
11:48 - it so I'm going to go ahead and key
11:50 - press I'm going to hit an a key hey
11:53 - there we go that's a keyboard event you
11:55 - can see there's a whole bunch of
11:56 - information about what actually happened
11:58 - to that event
11:59 - um and here's the important one for us
12:03 - it's the which event. witch it is the 97
12:07 - key which is the a key well great that
12:09 - doesn't help me out at all uh so you can
12:12 - see
12:13 - B is the 98 key let's actually console
12:17 - VA log event. witch so you can kind of
12:20 - see what's going on here A B CDE e 97 98
12:23 - 99 100 let's see what enter is enter is
12:26 - 13 13 uh so there's no way on Earth
12:29 - you're going to memorize this I always
12:30 - have to Google JavaScript key codes I
12:33 - will give you this link as well in the
12:35 - description here's all your key codes um
12:38 - enter is 13 enter is key 13 so usually I
12:41 - do one of two things I either look up a
12:43 - key codes list or I do exactly what I
12:46 - did here I just console log event which
12:49 - and I figure out which key I actually am
12:51 - looking for so in this case I'm looking
12:53 - for the enter key I hit enter a few
12:55 - times okay that's 13 all right 13 is
12:58 - what I want to respond to so if I know
13:01 - that feels like true programming to
13:02 - actually look up a key by
13:04 - number if event which equals
13:08 - 13 then we're actually going to we want
13:11 - to run update item but we want to run it
13:14 - with this
13:15 - being the event that was clicked on the
13:19 - this here so we basically want to run
13:21 - update item but we can't just run update
13:23 - item because then it won't know what
13:24 - this is we actually have to run update
13:26 - item with this being the thing that got
13:29 - the key press of 13 so we do that by
13:32 - simply saying
13:34 - call update item
13:36 - call this so now it's going to basically
13:39 - Run update item and it's going to set
13:41 - this to be whatever I give it so I could
13:45 - give it window or I could give it high
13:48 - so now this would equal the string High
13:50 - which of course would break because High
13:52 - has no parent node there's no such thing
13:54 - as high. previous element sibling uh so
13:57 - that's going to break but but as long as
13:59 - I give it this now my item which got the
14:02 - key press which is my
14:05 - input is going to be the this value when
14:09 - update item runs I hope that makes sense
14:12 - it's kind of a trickier concept we're
14:14 - basically passing the value of this from
14:17 - my function on item key press to my
14:20 - function on update item it's called
14:21 - changing the context so let's see if
14:23 - this works Apple hit enter boom
14:26 - excellent let's change this to banana
14:30 - excellent and then Apple again enter
14:33 - excellent it works so there's the
14:35 - program I'm going to go ahead and put
14:37 - this up uh probably on code pen for you
14:39 - guys to play around with hope it helped
14:41 - you out if it's too confusing and it's
14:44 - over your head just play around with um
14:47 - looking up a get element by ID and
14:49 - adding an event listener to it have some
14:52 - fun with that then maybe mess with
14:54 - looping through arrays of things uh kind
14:58 - of more of these Concepts that I'm doing
14:59 - here and then calling something by
15:02 - passing context that's a little of a
15:04 - trickier thing as well so if that's over
15:06 - your head that's totally understandable
15:08 - have a great day and hope you enjoyed
15:09 - the lesson

Cleaned transcript:

so I'm using JavaScript events to do this simple todo list editor which we're going to build today I can change it to Apple or I can change it to watermelon there we go and so that's basically my todo list editor and so that's what we're going to build in this so if you remember from the prior lesson you can actually do selectors uh let me kind of show you what this app is going to be let me show you the HTML and kind of what I'm envisioning here so basically I have a UL with three liis in it those are their three Lis each Li has a span and an input so the span is what I see when I'm not in edit mode the input is going to be what I want to see when I'm in edit mode so kind of the way I'm going to do this is I'm going to add a class edit here and when class edit is on let me save this will live reload when class edit is on the span goes away the input gets shown so all I have to do to change edit mode is add that class or remove that class okay very simple seems easy enough uh so how I did that with CSS is my li input by default is a display none so this guy is always hidden by default and then when you have a class edit the span goes to display none and then class edit the input gets display initial so now the input is shown when edit is on span goes away input gets hidden so three simple CSS rules and I have the functionality for that so now on JavaScript when I click on An Li I want to add the edit class so now I'm in mode I type in my input and when I blur my input whenever I leave um or whenever I hit the enter key so that's be something I add to whenever I leave or hit the enter key then I want to update this with my value that I changed and then I want to remove my edit class so that's kind of my program let's go ahead and write it um you'll actually see it's pretty simple so let's go and first get our checklist our checklist UL right here so that's ID checklist so we're going to go check list equals document um get element by ID there we go so I've got the checklist now let's go get all the items within the checklist now so one cool thing is I can actually search within my checklist for all my items so I can go instead of document I don't want to search my entire document I just want to search within my checklist for all the items so checklist. query selector all I can do query selector all because it's going to be very fast there's only a few items within my checklist to begin with um and so I don't I'm not worried at all about speeder performance with using query selector all so there I have all my items right now so this is going to be an array let me go console logit so this is going to be an array of three liis we've got that Li that Li and that Li so we want to Loop through this array and then we want to add a listener to each item in the array so if you remember from a few lessons ago let's do a for Loop here so there I equals z i items. length so we're going to start off at zero as long as I is less than items length we're going to keep increasing I so now I can go items and once again these four Loops are weird you just got to code them and code them and code them and write them and write them and write them till you just finally get it and remember and have it memorized cuz it just it's not very natural this is one of the parts of programming that does feel like actual code cuz it's not English so it's okay if that seems annoying to you for a while at first um so now for each item we're going to add an event listener um and let's do a click event and then this right here if we do a function here that's not a very good idea because now it's going to every time we Loop run through this Loop for each item it's going to create a new function to do the same thing uh so we don't want to do that let's just go ahead and do edit item let's just actually make a function called edit item so we've only created one function that's living in memory down here and then it's going to run that function on any one of these items click events so this is better programming right here than adding a function in there you can do it it'll probably work just fine but this is better programming to pull your function out and then add your event listener to that function so basically whenever we click we want to edit this item so let's go and console log I'm going to console log this which might seem like a funny word but basically since any one of our items can trigger this function we need a way of knowing which item was clicked and that's the this this is whichever item had the event listener attached to it so if I were to click on this which is item one or item zero then this will be item zero let me just show you in practice here so I'm console logging this every time there's a click there we go so I clicked on apples and there you go this is the LI containing apples so if I to click on this I to click on the second Li then the value of this is now the Orange's Li if I were to click on the third Li the value of this would be the bananas Li so that's what this is It's the context uh that this function is running in so now I can actually edit whichever one got clicked so I could go if this. class name uh does not equal edit uh actually you know I'm just going to say this. class name equals edit I was going to I was going to have it be edit if it didn't equal it always needs to be edit no matter what so even if it was edit before we click on it now it's going to be edit so there we go now it's working sort of uh it never goes away but it's working step one complete when you click on it it goes into edit mode mode so now what we want to do is uh let's do a little bit more I think let me go refresh this I also want to focus on this input box which is really simple to do this. Focus actually uh I want to get the input inside of it so as you see I've clicked on this Li um and so that is the value of this right here but I want to get the input and I want to focus on the input you know what I also want to select all the text inside of it so that's pretty simple really just go ver input equals this. query selector all actually just query selector so I'm going to get the input inside of my li and then I'm just going to go input. Focus so there we go let's refresh this when I click hey now I have that nice little Focus bar around my input box and then let's also get a selection range set selection range so we're going to start at zero and we're just going to go input. value. length so basically the whole length of whatever our current value is we're going to select from zero which is here all the way to the full length of our text uh because what the input. value is is that's our current value of our input let me show you here I'm going to console log my current value is and then input. value so I'm going to when I click there you go my current value is Apples my current value is oranges so that's what that input value is an input value. length is how many letters I current H currently have on there uh so let me just change this to length so there we go six characters in apples right a p p l e s yep six oranges o r a n g e s yep so seven characters in that and so that's what that length is so I'm going to create a selection from zero to the full length I know that's kind of confusing and it's probably too much but whatever so there we have this nice little when you click on it it's it focuses on it you see my focus gets whichever one I clicked on and then it selects the full text range so that's pretty nice behavior so now I can change it uh let's change this to just apple and then I can leave my value has changed but I want to get out of edit mode so let's go Ahad and add a blur event listener now uh but I don't actually want to add that blur event listener to the whole Li I want to add the blur to the input so let's go ahead and get let me copy this let's get our inputs so I'm going to query selector all input so now this is the array of all the inputs inside of my checklist so that's that so as I'm looping through here I'm going to also add a listener to every input so now I'm going to go I'm going to Loop through my checklist length 0 1 2 three and then I'm going to add a listener for item zero I'm going to add a listener for input zero as well so this will be a blur on blur not blue on blur I'm going to do an update item function so now let's just console log and say we blurred make sure we're working that far so I clicked there we go we blurred and let me actually console log the value this value apples let's say more apples we blurred more apples okay so that's how I'm going to get the the value out um and then very simply I just want to apply this value I've got my value on blur I want to apply it to the span I want to set the inner HTML of the span which is my previous element sibling which is the code for that so I'm just going to go this. previous element sibling. HTML if you remember that from when I did that earlier equals dis. Val dis so there we go now when I blur I want to update that so apples I blurred of course we didn't really realize that we were able to do that because what I also have to do is I have to go to my parent node which is here and I have to remove that edit class for it to go back out of edit mode do class name equals nothing so there we go our program should be working more apples got it I edited my span took it out of edit mode and we're good to go uh so one more thing that Let's do let's go ahead and add an event listener for key press and let's go item key press so if I hit that Enter key I want to do the exact same behavior I want to update that item the same way so let's do our function item key press so whenever the key press event is fired we're going to run item key press which is this guy uh and so one thing that this guy gets is he gets an event object every time it fires let's go a and console log that event object so you can see it so I'm going to go ahead and key press I'm going to hit an a key hey there we go that's a keyboard event you can see there's a whole bunch of information about what actually happened to that event um and here's the important one for us it's the which event. witch it is the 97 key which is the a key well great that doesn't help me out at all uh so you can see B is the 98 key let's actually console VA log event. witch so you can kind of see what's going on here A B CDE e 97 98 99 100 let's see what enter is enter is 13 13 uh so there's no way on Earth you're going to memorize this I always have to Google JavaScript key codes I will give you this link as well in the description here's all your key codes um enter is 13 enter is key 13 so usually I do one of two things I either look up a key codes list or I do exactly what I did here I just console log event which and I figure out which key I actually am looking for so in this case I'm looking for the enter key I hit enter a few times okay that's 13 all right 13 is what I want to respond to so if I know that feels like true programming to actually look up a key by number if event which equals 13 then we're actually going to we want to run update item but we want to run it with this being the event that was clicked on the this here so we basically want to run update item but we can't just run update item because then it won't know what this is we actually have to run update item with this being the thing that got the key press of 13 so we do that by simply saying call update item call this so now it's going to basically Run update item and it's going to set this to be whatever I give it so I could give it window or I could give it high so now this would equal the string High which of course would break because High has no parent node there's no such thing as high. previous element sibling uh so that's going to break but but as long as I give it this now my item which got the key press which is my input is going to be the this value when update item runs I hope that makes sense it's kind of a trickier concept we're basically passing the value of this from my function on item key press to my function on update item it's called changing the context so let's see if this works Apple hit enter boom excellent let's change this to banana excellent and then Apple again enter excellent it works so there's the program I'm going to go ahead and put this up uh probably on code pen for you guys to play around with hope it helped you out if it's too confusing and it's over your head just play around with um looking up a get element by ID and adding an event listener to it have some fun with that then maybe mess with looping through arrays of things uh kind of more of these Concepts that I'm doing here and then calling something by passing context that's a little of a trickier thing as well so if that's over your head that's totally understandable have a great day and hope you enjoyed the lesson
