With timestamps:

00:01 - so if you are at all passionate about
00:03 - server
00:04 - Administration or uh Dev Ops or making
00:08 - deployments uh or if you're wanting to
00:09 - get into that world uh vagrant and you
00:12 - don't know what vagrant is vagrant is
00:14 - awesome it is a tremendous tool for
00:16 - learning all that stuff basically what
00:18 - it does is it allows us to On Demand
00:21 - spin up virtual Linux boxes you could
00:23 - spin up four of them on your machine and
00:25 - run a you know run a load balancer and
00:28 - test failover stuff or you could spin up
00:30 - a virtual vagrant box and configure it
00:33 - and try to do deployments to that
00:35 - virtual machine it's a great playground
00:37 - for learning stuff and it's very useful
00:39 - for a lot of other things uh so let's go
00:42 - ahead and get into how to use vagrant to
00:44 - spin up a virtual Linux machine and
00:46 - later on once I'm done I'll kind of tell
00:48 - you some more philosophy on why you
00:50 - should use it for local development
00:52 - environment instead of wamp or M or
00:55 - stuff like that and how devs are using
00:57 - it but for now let's get into the fun
00:58 - stuff and let's actually use it you're
01:00 - going to want to go to vagrant up.com
01:02 - and you're going to want to download it
01:04 - you're also going to want to go to if
01:05 - you don't have virtual box installed yet
01:07 - virtualbox.org and download it and
01:10 - install it and all of this will by the
01:12 - way be in a gist that I will put in the
01:14 - description so I don't leave you hanging
01:17 - um and so those are both installed I
01:18 - should be able to go vagrant DV and you
01:21 - should be running 15 or newer uh for
01:24 - what we're going to be doing today so
01:26 - then all you have to do is go to vagrant
01:28 - cloud.com
01:30 - uh and we are going to pick some boxes
01:32 - that we want to install on our system so
01:34 - go to vagrant cloud.com and go to
01:37 - popular and the most popular ones are
01:39 - the precise 32 abun two box and the
01:41 - precise 64 uh 64 is more powerful but
01:45 - it's going to consume more RAM on your
01:47 - computer uh this precise 32-bit takes
01:50 - about 300 megabits of ram megabytes of
01:52 - ram to run and this takes more like 5 or
01:55 - 600 so I usually run the 32s unless I
01:58 - have a reason to run the 64-bit system
02:01 - cuz I can run a whole lot more of these
02:03 - especially if you only have like 4 GB of
02:05 - RAM or so you're going to want to run a
02:07 - 32bit uh so what you're going to do is
02:09 - vagrant box add and then that and that
02:13 - will download that box image it won't
02:16 - install anything on your system yet it's
02:17 - just going to put that box on your
02:19 - machine so we can now spin up you notice
02:22 - I've downloaded it before it'll take you
02:24 - a few minutes to download it if you have
02:26 - not um but now I can spin up as many
02:30 - precise 32 boxes as I want as long as my
02:32 - computer can handle it uh so now you're
02:34 - just going to go to you know install as
02:36 - many boxes as you want and now you go to
02:39 - the folder that you want to be running
02:41 - uh to actually create your virtual box
02:44 - in and you're going to go
02:46 - vagrant in knit and once again that um
02:51 - let me see if I can do no I can't Tab
02:53 - and have it auto correct uh hash cor
02:55 - precise
02:57 - 32 there we go so I'm going to now knit
03:00 - that um and now I can go vagrant
03:04 - up and so now I'm going to spin up my
03:07 - precise 32 box it's going to import the
03:10 - image it's going to start booting up my
03:12 - Linux box and it's also going to add a
03:14 - vagrant user and create SSH privileges
03:18 - for that user so I don't need a
03:20 - password um there we go now I'm running
03:23 - a Linux box on my machine so I can now
03:25 - go vagrant SSH and it's going to ssh in
03:29 - as vagrant user so there we go I'm now
03:32 - on the precise 32 box as far as my
03:34 - computer's concerned this is a server
03:36 - out on the internet and I am sshing into
03:39 - it so I can go pseudo apt get install
03:43 - git I'm going to start installing GitHub
03:45 - on my new machine um that'll take a
03:47 - little while probably a minute or two so
03:49 - I'll cancel and pretend that was
03:51 - successful um so there we go I'm going
03:54 - to exit out now and let's go ahe and
03:57 - make this a even more realistic let's
03:58 - give it an IP address and a domain name
04:01 - uh so we can actually run it as a web
04:03 - server and as a fake uh domain name so
04:06 - we don't even need to purchase hosting
04:08 - uh let's go ahead if I LS I exit it out
04:12 - of that box and I'm back on my machine
04:15 - um and so what you can do now is let's
04:17 - go ahead and open that vagrant
04:19 - file in Sublime Text I'm going to change
04:23 - syntax to Ruby so it looks
04:25 - pretty okay so it created a vagrant
04:28 - configuration file for me and the only
04:29 - line in it is this all the other ones
04:31 - are just kind of some boilerplate stuff
04:33 - for me and the only thing I'm going to
04:36 - add is I'm going to uncomment this
04:38 - private networking and I'm going to give
04:40 - it an IP
04:42 - address 55.
04:44 - 55.55 you can make up pretty much
04:46 - whatever you want um and so my IP
04:49 - address is going to be running that I'm
04:51 - going to save and quit and now I'm going
04:53 - to run vagrant
04:56 - reload so now it's going to uh reload my
05:00 - box with my new configuration it's going
05:02 - to shut my box down reboot it and now
05:04 - I'm going to be running you'll see that
05:06 - it is now making a connection to
05:09 - something it doesn't spin forever it
05:10 - makes a connection to something but it
05:12 - stops right away so it doesn't really
05:14 - know uh there's there's no Apache or
05:17 - there's no web server running on my
05:19 - Linux box uh so the connection goes
05:22 - through but I don't get an HTML file or
05:24 - anything so let's go ahead and install
05:26 - engine X let's go I'm going to vagrant
05:30 - SSH so I'm going back into my box if
05:32 - you're not familiar with engine X engine
05:34 - X is like a substitution for Apache uh
05:37 - usually it's what you use when you're
05:39 - running a node.js application in
05:41 - production we'll get into that in
05:43 - probably the next video um so let's go
05:46 - pseudo aptg let's update our aptg
05:50 - application real quick that's always a
05:53 - good idea whenever you spin up a box the
05:55 - first thing you should do is run apt git
05:57 - update um apt get install engine X so
06:02 - let's go ahead and install the engine X
06:04 - web server it's very light takes almost
06:07 - no time that's done and now all we have
06:10 - to do is go service we do pseudo
06:13 - service engine X
06:15 - start there we go it started and now if
06:18 - I run there we go welcome to engine X is
06:21 - my default so now I am running a web
06:25 - server on
06:28 - 5555555 now the only thing I want to do
06:30 - is I want to actually make this map to a
06:34 - domain name so let's go ahead and go
06:37 - we're going to go pseudo open Etc SL
06:42 - hosts uh and we're going to do this in
06:45 - I'll do in Sublime
06:49 - Text so here we are if you've never
06:51 - messed with a hosts file before uh it's
06:54 - it's very basic there's basically just
06:55 - two rules don't change anything that's
06:57 - in here already the other rule is any IP
07:01 - address you type in you can assign a
07:04 - domain name to
07:06 - it so now when anything on my machine
07:08 - goes to my awom site.com it's going to
07:10 - send it to this IP address instead of
07:13 - whatever IP address it would normally
07:15 - send myom site.com to I'm going to save
07:18 - it it may ask for your password um so
07:21 - now I should be able to go to myom
07:23 - site.com and there you go it's going to
07:25 - my new server welcome to engine X so
07:28 - what we've just done is we have spun up
07:30 - a Linux server you can now configure it
07:33 - however you want to um and you can then
07:36 - make sure that mysite.com goes to your
07:38 - server instead of whatever IP address
07:42 - you normally go to um and so what lots
07:44 - of times people will do is they'll
07:46 - actually do this is they'll go dev.
07:48 - mysite.com ask for my password and so
07:52 - then you'll go to dev. mysite.com for
07:55 - your local machine and then you'll go to
07:57 - my awom site.com
07:59 - for your production machine so I want to
08:02 - talk real quick about why you would do
08:04 - this two reasons one you want to play
08:06 - around with Linux machines and you want
08:08 - to be able to destroy them when you're
08:09 - done okay so that's that's a great
08:11 - reason right there um uh the other day I
08:15 - was running I think I already mentioned
08:17 - I was running you know tons of Linux
08:18 - machines behind a a fake Linux machine
08:21 - running a load balancer I was able to
08:24 - see what happens when memory started
08:26 - getting low on this machine and all
08:28 - these other things you can totally run
08:30 - tests you can set up a fake server and
08:33 - practice making command line deployments
08:36 - to that server without blowing up your
08:38 - production server um so there's that
08:41 - there's just practice and then the other
08:43 - big big big big big way that people are
08:46 - using vagrant is they are running a
08:49 - vagrant file in the repository for their
08:52 - project um and so what this is going to
08:55 - do is whenever your project is open
08:58 - you're going to be able to instead of
08:59 - running map uh which will install
09:01 - install Apache MySQL and PHP on your Mac
09:06 - uh or on your Windows machine you can
09:10 - actually just run a vagrant box that's
09:13 - configured exactly like your production
09:15 - web server and then you can give it an
09:17 - IP address and a domain name like dev.
09:21 - awom website.com and so now you don't
09:25 - have your machine is not tied to one
09:27 - project uh cuz lots of times what will
09:30 - happen is a Dev will have a problem on
09:32 - their machine uh but they're not seeing
09:34 - that problem on another dev's machine
09:36 - because they're running a different
09:37 - version of PHP or they're running a
09:39 - different version of Ruby or they're
09:41 - running a slightly different version of
09:44 - Mac OS 10 or something and this way the
09:47 - code you're writing is running on the
09:49 - exact same virtual box that all the
09:51 - other devs on your team are running
09:54 - their code on um uh another nice thing
09:58 - is that whenever vagrant makes that SSH
10:01 - connection you can actually access all
10:02 - the code from your repo right here from
10:05 - within the virtual machine so the
10:07 - virtual machine is running and it's
10:09 - running the code from your GitHub
10:11 - repository that you're editing on the
10:14 - machine you're on now if that makes any
10:15 - sense it basically solves the problem of
10:18 - well that doesn't happen on my machine
10:20 - why is it happening on your machine
10:22 - which happens to developers all the time
10:25 - so there's my Spiel there's my little
10:27 - Soap Box presentation for you I hope you
10:29 - have a ton of fun with vagrant in the
10:31 - next video we're going to be getting
10:33 - into running um we're going to run a
10:35 - vagrant box and we're going to install
10:37 - engine X as a front end to our node.js
10:39 - application and then after that we're
10:41 - going to set up a load balancer so
10:43 - engine X can be running to multiple
10:46 - node.js servers uh and handling
10:48 - failovers and stuff like that hope you
10:50 - enjoyed the video

Cleaned transcript:

so if you are at all passionate about server Administration or uh Dev Ops or making deployments uh or if you're wanting to get into that world uh vagrant and you don't know what vagrant is vagrant is awesome it is a tremendous tool for learning all that stuff basically what it does is it allows us to On Demand spin up virtual Linux boxes you could spin up four of them on your machine and run a you know run a load balancer and test failover stuff or you could spin up a virtual vagrant box and configure it and try to do deployments to that virtual machine it's a great playground for learning stuff and it's very useful for a lot of other things uh so let's go ahead and get into how to use vagrant to spin up a virtual Linux machine and later on once I'm done I'll kind of tell you some more philosophy on why you should use it for local development environment instead of wamp or M or stuff like that and how devs are using it but for now let's get into the fun stuff and let's actually use it you're going to want to go to vagrant up.com and you're going to want to download it you're also going to want to go to if you don't have virtual box installed yet virtualbox.org and download it and install it and all of this will by the way be in a gist that I will put in the description so I don't leave you hanging um and so those are both installed I should be able to go vagrant DV and you should be running 15 or newer uh for what we're going to be doing today so then all you have to do is go to vagrant cloud.com uh and we are going to pick some boxes that we want to install on our system so go to vagrant cloud.com and go to popular and the most popular ones are the precise 32 abun two box and the precise 64 uh 64 is more powerful but it's going to consume more RAM on your computer uh this precise 32bit takes about 300 megabits of ram megabytes of ram to run and this takes more like 5 or 600 so I usually run the 32s unless I have a reason to run the 64bit system cuz I can run a whole lot more of these especially if you only have like 4 GB of RAM or so you're going to want to run a 32bit uh so what you're going to do is vagrant box add and then that and that will download that box image it won't install anything on your system yet it's just going to put that box on your machine so we can now spin up you notice I've downloaded it before it'll take you a few minutes to download it if you have not um but now I can spin up as many precise 32 boxes as I want as long as my computer can handle it uh so now you're just going to go to you know install as many boxes as you want and now you go to the folder that you want to be running uh to actually create your virtual box in and you're going to go vagrant in knit and once again that um let me see if I can do no I can't Tab and have it auto correct uh hash cor precise 32 there we go so I'm going to now knit that um and now I can go vagrant up and so now I'm going to spin up my precise 32 box it's going to import the image it's going to start booting up my Linux box and it's also going to add a vagrant user and create SSH privileges for that user so I don't need a password um there we go now I'm running a Linux box on my machine so I can now go vagrant SSH and it's going to ssh in as vagrant user so there we go I'm now on the precise 32 box as far as my computer's concerned this is a server out on the internet and I am sshing into it so I can go pseudo apt get install git I'm going to start installing GitHub on my new machine um that'll take a little while probably a minute or two so I'll cancel and pretend that was successful um so there we go I'm going to exit out now and let's go ahe and make this a even more realistic let's give it an IP address and a domain name uh so we can actually run it as a web server and as a fake uh domain name so we don't even need to purchase hosting uh let's go ahead if I LS I exit it out of that box and I'm back on my machine um and so what you can do now is let's go ahead and open that vagrant file in Sublime Text I'm going to change syntax to Ruby so it looks pretty okay so it created a vagrant configuration file for me and the only line in it is this all the other ones are just kind of some boilerplate stuff for me and the only thing I'm going to add is I'm going to uncomment this private networking and I'm going to give it an IP address 55. 55.55 you can make up pretty much whatever you want um and so my IP address is going to be running that I'm going to save and quit and now I'm going to run vagrant reload so now it's going to uh reload my box with my new configuration it's going to shut my box down reboot it and now I'm going to be running you'll see that it is now making a connection to something it doesn't spin forever it makes a connection to something but it stops right away so it doesn't really know uh there's there's no Apache or there's no web server running on my Linux box uh so the connection goes through but I don't get an HTML file or anything so let's go ahead and install engine X let's go I'm going to vagrant SSH so I'm going back into my box if you're not familiar with engine X engine X is like a substitution for Apache uh usually it's what you use when you're running a node.js application in production we'll get into that in probably the next video um so let's go pseudo aptg let's update our aptg application real quick that's always a good idea whenever you spin up a box the first thing you should do is run apt git update um apt get install engine X so let's go ahead and install the engine X web server it's very light takes almost no time that's done and now all we have to do is go service we do pseudo service engine X start there we go it started and now if I run there we go welcome to engine X is my default so now I am running a web server on 5555555 now the only thing I want to do is I want to actually make this map to a domain name so let's go ahead and go we're going to go pseudo open Etc SL hosts uh and we're going to do this in I'll do in Sublime Text so here we are if you've never messed with a hosts file before uh it's it's very basic there's basically just two rules don't change anything that's in here already the other rule is any IP address you type in you can assign a domain name to it so now when anything on my machine goes to my awom site.com it's going to send it to this IP address instead of whatever IP address it would normally send myom site.com to I'm going to save it it may ask for your password um so now I should be able to go to myom site.com and there you go it's going to my new server welcome to engine X so what we've just done is we have spun up a Linux server you can now configure it however you want to um and you can then make sure that mysite.com goes to your server instead of whatever IP address you normally go to um and so what lots of times people will do is they'll actually do this is they'll go dev. mysite.com ask for my password and so then you'll go to dev. mysite.com for your local machine and then you'll go to my awom site.com for your production machine so I want to talk real quick about why you would do this two reasons one you want to play around with Linux machines and you want to be able to destroy them when you're done okay so that's that's a great reason right there um uh the other day I was running I think I already mentioned I was running you know tons of Linux machines behind a a fake Linux machine running a load balancer I was able to see what happens when memory started getting low on this machine and all these other things you can totally run tests you can set up a fake server and practice making command line deployments to that server without blowing up your production server um so there's that there's just practice and then the other big big big big big way that people are using vagrant is they are running a vagrant file in the repository for their project um and so what this is going to do is whenever your project is open you're going to be able to instead of running map uh which will install install Apache MySQL and PHP on your Mac uh or on your Windows machine you can actually just run a vagrant box that's configured exactly like your production web server and then you can give it an IP address and a domain name like dev. awom website.com and so now you don't have your machine is not tied to one project uh cuz lots of times what will happen is a Dev will have a problem on their machine uh but they're not seeing that problem on another dev's machine because they're running a different version of PHP or they're running a different version of Ruby or they're running a slightly different version of Mac OS 10 or something and this way the code you're writing is running on the exact same virtual box that all the other devs on your team are running their code on um uh another nice thing is that whenever vagrant makes that SSH connection you can actually access all the code from your repo right here from within the virtual machine so the virtual machine is running and it's running the code from your GitHub repository that you're editing on the machine you're on now if that makes any sense it basically solves the problem of well that doesn't happen on my machine why is it happening on your machine which happens to developers all the time so there's my Spiel there's my little Soap Box presentation for you I hope you have a ton of fun with vagrant in the next video we're going to be getting into running um we're going to run a vagrant box and we're going to install engine X as a front end to our node.js application and then after that we're going to set up a load balancer so engine X can be running to multiple node.js servers uh and handling failovers and stuff like that hope you enjoyed the video
