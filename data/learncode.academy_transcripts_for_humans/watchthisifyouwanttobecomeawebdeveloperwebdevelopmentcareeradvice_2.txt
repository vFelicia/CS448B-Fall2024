With timestamps:

00:00 - hey there so I don't know what I'm going
00:03 - to title this video yet but as far as
00:04 - I'm concerned now the title is what I
00:07 - wish someone told me when I started web
00:09 - development um I have people ask me all
00:12 - the time hey I want to start web
00:13 - development what do I do what do I learn
00:15 - and uh at what point are employers going
00:17 - to say man I want to hire this guy and
00:19 - so I'm like oh you found the right video
00:21 - if that's you you've got to watch this
00:23 - video because I'm going to shortcut
00:24 - years off your learning experience and
00:26 - I'm going to tell you stuff that a lot
00:27 - of developers don't like to tell people
00:30 - cuz they like to keep it a secret cuz it
00:31 - makes them feel like they'll be easier
00:34 - to hire if nobody else knows this stuff
00:36 - but I don't think that way I'm just
00:38 - going to tell you everything so if
00:40 - you're wanting to learn web development
00:42 - I'm going to tell you this this is it
00:44 - I'm going to dump it all out into this
00:46 - video so track with me I've got a cogle
00:49 - mind map here that hopefully will make
00:50 - it easier to understand
00:53 - um and I'll show you what to learn and
00:56 - what order to learn it in and what
00:58 - course to take to actually
01:00 - be ready for a job description that
01:03 - someone is trying to find today looking
01:04 - to hire uh no matter what you do if
01:08 - you're going to go into web development
01:09 - you got to learn basic front end that's
01:11 - HTML CSS JavaScript this is your first
01:14 - step get comfortable in the basics of
01:16 - all three of these and here's the reason
01:17 - why is because no matter what browser
01:19 - you're using if you're using Internet
01:21 - Explorer Firefox Chrome iPhone iPad you
01:24 - know Android it's running these three
01:27 - languages in the browser it's opening up
01:30 - an HTML page with CSS Styles and
01:32 - JavaScript
01:34 - functionality everything runs this these
01:36 - are the three browser languages it used
01:38 - to be flash was on this list but thank
01:40 - God flash is dying out um just don't
01:43 - learn flash don't put it on your resume
01:45 - it doesn't help it doesn't really you
01:47 - know maybe there's a flash developer out
01:49 - there that's going to get mad at me for
01:50 - saying that but it's it's basically a
01:51 - dead technology um basic front end learn
01:55 - it learn HTML that's easy you'll learn
01:57 - it in a in a couple days uh CS s you
02:00 - don't have to become a CSS ninja just
02:03 - just learn how to do a basic layout on
02:05 - your own be comfortable with it
02:07 - JavaScript you don't have to do a whole
02:09 - bunch of crazy stuff but learn the
02:10 - concepts of how JavaScript talks to a
02:13 - server um which if you're if you're
02:16 - starting off learn jQuery and learn
02:18 - jQuery ajax jQuery ajax command that and
02:21 - then you're done I mean if if you want
02:23 - to go back and that's about all you need
02:24 - to learn at first uh just learn how to
02:28 - how to hit a web service get some
02:29 - information and spit it out on a page
02:31 - basic front end that's your first thing
02:33 - to learn um and then no matter which
02:36 - route you take I'll go into this next no
02:38 - matter which route you take you want to
02:40 - learn a few things basic terminal usage
02:43 - a lot of people avoid the command line
02:45 - or The Terminal because it terrifies
02:46 - them to just see a black screen with a
02:49 - prompt um it's not scary it's just scary
02:52 - because you don't know which five
02:54 - commands to use you're going to be
02:56 - locked into this realm of basic frontend
02:59 - until until you learn how to use the
03:00 - terminal no matter which route you take
03:02 - so you've got to learn it and then the
03:04 - next step is learn GitHub I got a video
03:06 - on these two uh basic level for this
03:08 - I'll put it in the description um and
03:10 - you know I also have a blog post that I
03:12 - will put the link to in the description
03:14 - that kind of is going to recap all this
03:16 - give you a link to this mind map because
03:17 - you're going to forget it probably um
03:20 - and I also strongly encourage you too uh
03:23 - to look into team Treehouse because they
03:25 - have lessons to learn most of these
03:27 - things and the first 15 days I have a
03:30 - link on the blog post for getting the
03:32 - first 15 days for free of video lessons
03:35 - and after that it's only like $20 a
03:37 - month a lot of people I talk to use
03:39 - Treehouse and they are learning the web
03:40 - stuff fast uh they're really really good
03:43 - lessons on Treehouse so check out that
03:46 - link no matter what you do uh get 15
03:48 - days for free uh and so back to this you
03:51 - want to learn basic terminal in GitHub
03:53 - you want to learn about web services
03:57 - slash they're also called apis um
04:00 - specifically they can be called restful
04:02 - web services you don't have to learn how
04:04 - to make them but you want to kind of
04:05 - learn what these things are basically
04:07 - what a web service is is it's how the
04:10 - browser talks to a server real time and
04:12 - gets information it's how a server talks
04:15 - to another server and gets information
04:18 - to send to the browser that kind of
04:20 - thing just kind of be comfortable with
04:22 - the concept of what a web service is if
04:25 - you're doing jQuery
04:26 - ajax then you'll basically be using web
04:29 - services I'll leave it at that cuz we'll
04:31 - get into it later okay that's off the
04:33 - table for now and now you've got two
04:36 - choices you've learned basic run end you
04:38 - know how to use the command line in
04:39 - GitHub I'm ready to become like a
04:41 - full-on developer that people are hiring
04:43 - for people are hiring front-end
04:44 - developers and they're hiring backend
04:46 - developers and people are hiring people
04:48 - that know both uh but you want to pick
04:51 - one or the other and then you can get a
04:53 - job and so to kind of before I
04:55 - illustrate what those are let's say how
04:57 - does the internet work real quick just
04:59 - so you guys can understand what those
05:01 - two roles are we got these three things
05:03 - we got the client also called the front
05:05 - end and what that is is that's your web
05:07 - browser that's Chrome that's your iPhone
05:09 - that's whatever and how the internet
05:12 - works is is you say give me
05:14 - twitter.com and so the client the
05:16 - browser sends off twitter.com and it
05:18 - pulls up the twitter.com server and the
05:22 - server says okay they pulled up Twitter
05:24 - what do we do well we give them the
05:25 - homepage by default what's the homepage
05:27 - have on it it has the top hundred most
05:29 - popular tweets okay so then it talks to
05:32 - the database which is where all this
05:33 - information's stored it says give me the
05:36 - top most you know top most recent tweets
05:38 - or whatever that comes back to the
05:40 - server the server puts it together in
05:42 - HTML spits it back out to the client in
05:45 - the front end that makes it look all
05:47 - beautiful with their CSS and JavaScript
05:49 - and then you know the client does some
05:51 - smarter things as you scroll down and
05:53 - you're running out of tweets it's it
05:54 - real time talks to the server says okay
05:57 - I need 10 more tweets okay let's get 10
05:59 - more let's send it back out to the
06:01 - JavaScript um and so that's kind of your
06:03 - Two Worlds you got your client which is
06:05 - called front end your server which is
06:07 - called backend and you kind of it used
06:10 - to be these were the only developers cuz
06:13 - if you think like 10 years ago for the
06:14 - internet the front end was ugly it was
06:16 - just information and links and it was
06:19 - this basic front end was front end
06:21 - that's all there was uh but that is not
06:24 - the case anymore things have to be slick
06:26 - and smart and they have to have cool
06:28 - user experiences fun user experiences
06:31 - you have to know where the mouse is on
06:32 - the page and do specific things based
06:34 - off of what the user's doing you have to
06:36 - let them log in and load up their
06:38 - profile without reloading a new page I
06:40 - mean that's basically front-end
06:42 - developer so if you're passionate about
06:44 - all that stuff go front-end you can
06:46 - always learn backend and add back end
06:48 - into it later and vice versa if you like
06:50 - data and you like budgeting and finances
06:53 - and you like organization and stuff like
06:56 - that you're not as much of you might not
06:59 - call yourself as much the the raw
07:00 - creative type who has to be into Indie
07:03 - music that nobody's heard of H you might
07:05 - want to go backend it first I'm not
07:07 - going to stereotype the two but um
07:09 - either way if you like development
07:10 - you'll like them both so that's kind of
07:12 - that's kind of might help you decide
07:13 - what to take so I'm going to get rid of
07:15 - you you're gone don't need you anymore
07:17 - let's say you've chosen to go frontend
07:19 - developer don't get overwhelmed there's
07:21 - not much on this it just looks
07:22 - complicated this is if you learn these
07:25 - things you are ripe and ready to go get
07:27 - a job as a front end developer and
07:28 - people are going to want to hire you so
07:31 - the first thing you want to do is you
07:32 - want to learn a JavaScript framework
07:35 - technically an MV MVC or MV whatever MV
07:39 - star JavaScript framework there's about
07:41 - 30 of them out there but I'll tell you
07:43 - what people are hiring mostly backbone
07:45 - JS developers and Angular JS developers
07:48 - right now used to be backbone is like
07:51 - the main one and then there's a decent
07:53 - bit of knockout uh but the majority of
07:56 - jobs um backbone or angular is what
07:58 - they're looking for uh and here's kind
08:00 - of why is is when you start writing
08:02 - thousands and thousands of lines of
08:04 - JavaScript to make this whole
08:06 - application that does your whole thing
08:07 - without ever navigating to another page
08:10 - you need a framework that helps you
08:11 - organize that code in a way that makes
08:13 - sense is not complicated and just works
08:17 - without breaking if the user does some
08:19 - random thing so that's where these
08:21 - Frameworks come in um they're JavaScript
08:24 - they're all JavaScript but they kind of
08:26 - have their own Dynamic to them like kind
08:27 - of their own language and their way of
08:29 - doing things if I was to pick one to
08:32 - learn I'd pick angular I I honestly
08:34 - think angular's backbone is barely ahead
08:38 - in terms of how many jobs are out there
08:39 - right now um but there's a lot of jobs a
08:42 - lot of people looking for angular
08:43 - developers now it's almost even and in
08:45 - the next couple years I think angular is
08:47 - just going to be more popular Google
08:48 - makes angular it's kind of one of the
08:50 - big reasons um but seriously if you
08:53 - learn one of these well people are
08:54 - looking for backbone JS developer that's
08:56 - an actual job title Angular JS
08:59 - developer um learn one of these learn
09:02 - how to make a single page web app with
09:04 - these things um and then if you want to
09:06 - learn both it'll just make you available
09:08 - for more jobs and then whichever one you
09:10 - learn I put knockout on there because
09:12 - it's it's kind of popular it's it's
09:14 - enough to be mentioned and there's a
09:15 - bunch of other ones that that are out
09:17 - there that sure they're great to learn
09:18 - Ember and other stuff but hey you're
09:20 - learning pick one of these two unit
09:23 - testing whatever you do learn how to
09:24 - write tests for your application and
09:28 - your framework it's going to look
09:29 - different for angular it's going to look
09:30 - different for backbone um this is kind
09:33 - of like phase two you can get a job
09:35 - without knowing unit testing uh it'll
09:37 - just kind of show that you're a true Pro
09:39 - if you know how to write tests for your
09:41 - application and I'll leave it at that
09:43 - this is not a video where I'm going to
09:44 - get into what that is so that's the
09:47 - that's going to be the toughest part
09:48 - right there learn a JavaScript framework
09:51 - um and learn jQuery you got to know
09:53 - jQuery but that's not really a framework
09:55 - uh that's just kind of kind of falls
09:56 - into basic front end um you got got to
09:59 - learn from there a CSS tool these are
10:02 - really easy these aren't languages
10:03 - they're tools SAS less stylist basically
10:07 - you're writing CSS for all intensive
10:09 - purposes but you can do some cool stuff
10:11 - like create variables and and have it
10:15 - reuse certain parts of your code so you
10:16 - don't have to write it for everything uh
10:19 - not going to go into it it's pretty easy
10:21 - to learn it in a few days SAS is the one
10:23 - to learn less is almost identical for
10:26 - all intents and purposes it's almost the
10:28 - exact same thing
10:29 - um and then you want to learn a CSS
10:31 - framework which is bootstrap or
10:34 - Foundation are pretty much the two most
10:36 - popular um bootstrap I have a video out
10:38 - for that I'll throw it in the
10:39 - description uh what these let you do is
10:42 - these let you write with very little
10:43 - code uh a responsive web app like a web
10:46 - app that just looks cool looks clean
10:48 - they give you a lot of built-in CSS
10:50 - rules to help you build widgets and
10:53 - build page layouts so you're not having
10:55 - to hand code all this and it also sets
10:57 - you up to where you can build it and
10:59 - tell the next developer hey I did this
11:00 - with bootstrap and they know how to go
11:02 - find information from bootstrap on how
11:05 - and why you did what you
11:07 - did um and that kind of falls into
11:09 - responsive design you need to know what
11:11 - this is and how to do it responsive
11:12 - design is I don't know if you've seen
11:14 - all the new web pages now if you resize
11:16 - your browser the layout of the page
11:18 - changes to fit the size of screen you
11:21 - have so if you pull it up on an iPad the
11:23 - page looks different um and if you have
11:24 - a small browser window it looks
11:26 - different um images are smaller or
11:28 - bigger that's called responsive design
11:30 - uh you got to know that now it's not
11:33 - it's not super complicated you can
11:34 - really learn it in a couple weeks um and
11:37 - bootstrap and Foundation are both
11:39 - responsive Frameworks so if you learn
11:41 - them you're kind of learning responsive
11:42 - design so that's a tool that's not
11:44 - really so much a language and then
11:46 - front-end build tools these are just
11:49 - little tools that you got to learn so
11:51 - remember how I mentioned if you're
11:53 - building a whole JavaScript application
11:55 - you're going to have thousands of lines
11:57 - of code sometimes and you don't want
11:59 - them all in one file that's a disaster
12:01 - so you got to split them up into a bunch
12:03 - of different JavaScript files maybe one
12:05 - for your header one for your footer one
12:06 - for your sidebar one for your profile
12:09 - one for your tweets
12:11 - listing um and then you want to be able
12:13 - to build those together into one
12:15 - compressed Javascript file so you're
12:16 - only sending your browser one file
12:19 - instead of 20 or 100 files and so that's
12:21 - kind of where your build tool runs in
12:23 - these all run on the command line which
12:25 - is why you got to learn the command line
12:27 - and that's going to run either grunt or
12:28 - gulp grunt is basically the popular big
12:32 - dog that's been out for Years everybody
12:34 - everybody uses grunt gulp is the new guy
12:37 - that's I think a lot easier to use and
12:39 - it's basically a replacement for grunt
12:42 - um learn grunt first take a look at gulp
12:44 - basically what this is going to do is
12:46 - you get a bunch of grunt will listen and
12:48 - as you save a Javascript file it'll then
12:52 - compress all the JavaScript files
12:53 - together and spit it out and reload your
12:55 - web page real time so that's kind of
12:57 - what grunt does um as you save your SAS
13:00 - file it'll process it and turn it into a
13:02 - CSS file that's kind of the what grunt
13:05 - does um and then Y.O yman uses grunt uh
13:11 - and that's just kind of a fun thing look
13:12 - into that Bower is package management
13:14 - package management is becoming a really
13:16 - big deal uh you don't want to have to
13:19 - give people a jQuery file and a
13:22 - backbone.js file you just want to say
13:24 - hey download the project the project has
13:26 - a package file that says you'll need
13:28 - jQuery backbone all that you got to
13:31 - learn basically what package management
13:33 - means um and so instead of putting all
13:36 - those files in your project you just put
13:38 - a package on it which is just usually
13:40 - three lines of code that says when you
13:42 - run install get backbone get jQuery get
13:46 - SAS get grunt get all these things and
13:49 - then your Project's ready to go on your
13:51 - machine so got to kind of learn about
13:53 - bow and package management and then
13:55 - browserify and requirejs learn how to
13:58 - use one or the other of these ideally
14:00 - both requirejs has been the popular guy
14:02 - for a while but browser fi is I think a
14:05 - lot better and a lot of people are going
14:07 - to be using this guy in the future and
14:09 - already are um I'll leave that for now
14:12 - so that's frontend developer hopefully I
14:14 - didn't freak you out so far but if you
14:16 - want to go front and develop a route
14:18 - this is stuff that I so wish somebody
14:21 - had told me years ago I had to figure
14:22 - this out over the course of time um
14:26 - let's say you're not that you want to go
14:27 - backend developer woohoo backend
14:29 - developer uh I want to do that I want to
14:32 - be that server guy that works with
14:34 - databases um here's basically a backend
14:37 - server is going to be running one of
14:39 - these Technologies it's going to be
14:41 - running Ruby on Rails node.js which is
14:44 - Javascript a lot of guys like that a lot
14:46 - of guys don't like that
14:47 - PHP python which python usually runs
14:51 - Jango umnet which is going to be the C
14:54 - language um and you'll be writing unit
14:56 - tests for whatever technology you pick
14:58 - if you're looking for jobs out there
15:01 - there's a ton of Ruby on Rails jobs
15:03 - absolute ton of Ruby on Rails jobs a
15:06 - growing number of node.js jobs because
15:08 - it's really cool to be able to write
15:10 - JavaScript on the front end and
15:11 - JavaScript on the back end um I love
15:14 - node node is my favorite uh because I
15:16 - started out as a front-end developer um
15:19 - node is super cool a lot of PHP jobs
15:22 - they don't tend to pay as well because
15:24 - it's uh a lot more people know PHP and
15:29 - uh it tends to not be as used for super
15:32 - highlevel super large sites some people
15:35 - are going to hate me for saying that but
15:37 - if you're looking for jobs and you're
15:39 - you're saying hey just tell me which one
15:40 - to pick I'd say go Ruby on Rails go Ruby
15:42 - on Rails um no JS if you already know
15:45 - JavaScript um and you like JavaScript a
15:48 - lot I I'd say pick one of these two uh
15:50 - learn some PHP learn WordPress learn um
15:55 - Symphony you know there's a lot of PHP
15:57 - has a ton of
15:59 - um Frameworks out there for it Ruby on
16:00 - Rails is the
16:02 - framework um and node.js is going to be
16:05 - writing JavaScript and you'll be writing
16:07 - it with
16:10 - express.js um I actually have a video
16:12 - for getting started on express.js it's
16:14 - not really for super beginners it's kind
16:16 - of for backend developers already but
16:18 - I'll put that in the
16:19 - description um once you pick your
16:22 - backend technology you're going to want
16:23 - to learn how to wire that up I'm going
16:26 - to move this out of the way here you're
16:27 - going to want to learn how to wire that
16:28 - up into different databases uh so say
16:30 - you picked Ruby on Rails yipp I want to
16:32 - be a Ruby on Rails developer learn how
16:35 - Ruby on Rails talks to a myql database
16:37 - once you've learned that uh learn how it
16:39 - talks to a mongodb database it's
16:41 - probably not going to be a world of
16:43 - difference they you're getting
16:45 - information or you're saving information
16:46 - to the database um then learn how it
16:49 - save stuff to a reddis database um those
16:52 - are kind of the big three to learn right
16:53 - now there's probably 10 or 20 you don't
16:56 - have to learn them all just get
16:57 - comfortable with more than one and get
17:00 - over the fear of of working with a
17:03 - database uh that's kind of you know you
17:05 - want to learn how to talk to a database
17:07 - and then you want to learn some other
17:08 - things is how do I build a restful
17:11 - service now how do I build an API so
17:14 - JavaScript can talk to me and say give
17:17 - me 10 tweets and I'm going to build an
17:19 - API a web service that JavaScript can
17:22 - talk to that will help them retrieve
17:24 - tweets through the database through my
17:25 - service learn how to build services
17:29 - um usually any tutorial on Ruby on Rails
17:31 - will teach you how to do this uh learn
17:34 - how to do security do some Googling on
17:36 - Ruby on rail security Ruby on Rails
17:38 - security best practices learn what
17:41 - stupid mistakes not to make with Ruby
17:43 - that will leave your website vulnerable
17:46 - uh next thing learn about ooth 2 uh have
17:49 - you ever seen those things that say Hey
17:50 - login with my Google account log in with
17:52 - my Facebook account that's called ooth
17:55 - uh that is so popular right now you want
17:57 - to know how someone can log into your
17:59 - application with their Google account
18:01 - with their Facebook account which brings
18:03 - us to authorization authentication you
18:06 - want to learn what those are what the
18:08 - differences between the two pretty easy
18:10 - straightforward learn how to make a
18:12 - username password login on Ruby and
18:14 - rails uh that's called um your
18:17 - authentication uh and then learn how to
18:20 - restrict people from certain parts of
18:22 - your site unless they're authenticated
18:24 - unless they're logged in that's called
18:26 - authorization learn how to restri them
18:28 - from getting uh two tweets unless
18:31 - they're logged in make sure learn how to
18:33 - restrict someone from posting to someone
18:35 - else's Twitter account unless they're
18:37 - logged in as that person that's all
18:38 - authorization stuff um so learn how that
18:41 - works and then the last thing on that is
18:43 - you want to learn caching learn um I
18:48 - won't go into it too much but learn
18:50 - memcached learn engine X too high level
18:54 - to leave for this conversation but you
18:55 - want to learn some of these caching
18:57 - things varnish and Squid are also good I
18:59 - threw those on there if you just want to
19:00 - learn a
19:01 - ton are you overwhelmed yet are you
19:04 - freaking out there's if you look at it
19:06 - you don't have to learn everything on
19:07 - here learn one pick one I picked Ruby on
19:10 - Rails learn how to tie it into one or
19:12 - more databases learn a couple things
19:14 - that's your learning curve for the next
19:15 - two years go for it and then you're
19:18 - going to be hired and people are going
19:19 - to love you because you know the right
19:21 - stuff um if you're a backend guy and
19:23 - you're super loving backend and you want
19:26 - to go to a higher level um look into Dev
19:30 - Ops Dev Ops is basically server
19:32 - management how do I manage I have such a
19:34 - big website that I have to have 20
19:37 - different servers to handle all the
19:38 - traffic what do people use when they're
19:41 - doing that kind of stuff that's like
19:42 - devops world that's like backend part
19:45 - two I'm not going to go into that
19:47 - because most of you guys probably aren't
19:48 - anywhere near that world but if you are
19:50 - and you want to learn it there's your
19:52 - list of stuff to learn your different
19:54 - tools that you'll Le uh use in those
19:56 - Arenas so that's it I hope I didn't
19:58 - freak you out and overwhelm you it's
20:00 - okay if you have to watch this video
20:02 - four times to not get crazy overwhelmed
20:05 - but if you pick one of these tracks and
20:07 - learn the Technologies you're good to go
20:09 - you're going to get hired you're going
20:10 - to be a person that people want on their
20:12 - team because these are the technologies
20:14 - that people are using right now this is
20:16 - what it takes to be a web developer in
20:18 - 2014 and hope you liked it have an
20:21 - awesome
20:22 - day

Cleaned transcript:

hey there so I don't know what I'm going to title this video yet but as far as I'm concerned now the title is what I wish someone told me when I started web development um I have people ask me all the time hey I want to start web development what do I do what do I learn and uh at what point are employers going to say man I want to hire this guy and so I'm like oh you found the right video if that's you you've got to watch this video because I'm going to shortcut years off your learning experience and I'm going to tell you stuff that a lot of developers don't like to tell people cuz they like to keep it a secret cuz it makes them feel like they'll be easier to hire if nobody else knows this stuff but I don't think that way I'm just going to tell you everything so if you're wanting to learn web development I'm going to tell you this this is it I'm going to dump it all out into this video so track with me I've got a cogle mind map here that hopefully will make it easier to understand um and I'll show you what to learn and what order to learn it in and what course to take to actually be ready for a job description that someone is trying to find today looking to hire uh no matter what you do if you're going to go into web development you got to learn basic front end that's HTML CSS JavaScript this is your first step get comfortable in the basics of all three of these and here's the reason why is because no matter what browser you're using if you're using Internet Explorer Firefox Chrome iPhone iPad you know Android it's running these three languages in the browser it's opening up an HTML page with CSS Styles and JavaScript functionality everything runs this these are the three browser languages it used to be flash was on this list but thank God flash is dying out um just don't learn flash don't put it on your resume it doesn't help it doesn't really you know maybe there's a flash developer out there that's going to get mad at me for saying that but it's it's basically a dead technology um basic front end learn it learn HTML that's easy you'll learn it in a in a couple days uh CS s you don't have to become a CSS ninja just just learn how to do a basic layout on your own be comfortable with it JavaScript you don't have to do a whole bunch of crazy stuff but learn the concepts of how JavaScript talks to a server um which if you're if you're starting off learn jQuery and learn jQuery ajax jQuery ajax command that and then you're done I mean if if you want to go back and that's about all you need to learn at first uh just learn how to how to hit a web service get some information and spit it out on a page basic front end that's your first thing to learn um and then no matter which route you take I'll go into this next no matter which route you take you want to learn a few things basic terminal usage a lot of people avoid the command line or The Terminal because it terrifies them to just see a black screen with a prompt um it's not scary it's just scary because you don't know which five commands to use you're going to be locked into this realm of basic frontend until until you learn how to use the terminal no matter which route you take so you've got to learn it and then the next step is learn GitHub I got a video on these two uh basic level for this I'll put it in the description um and you know I also have a blog post that I will put the link to in the description that kind of is going to recap all this give you a link to this mind map because you're going to forget it probably um and I also strongly encourage you too uh to look into team Treehouse because they have lessons to learn most of these things and the first 15 days I have a link on the blog post for getting the first 15 days for free of video lessons and after that it's only like $20 a month a lot of people I talk to use Treehouse and they are learning the web stuff fast uh they're really really good lessons on Treehouse so check out that link no matter what you do uh get 15 days for free uh and so back to this you want to learn basic terminal in GitHub you want to learn about web services slash they're also called apis um specifically they can be called restful web services you don't have to learn how to make them but you want to kind of learn what these things are basically what a web service is is it's how the browser talks to a server real time and gets information it's how a server talks to another server and gets information to send to the browser that kind of thing just kind of be comfortable with the concept of what a web service is if you're doing jQuery ajax then you'll basically be using web services I'll leave it at that cuz we'll get into it later okay that's off the table for now and now you've got two choices you've learned basic run end you know how to use the command line in GitHub I'm ready to become like a fullon developer that people are hiring for people are hiring frontend developers and they're hiring backend developers and people are hiring people that know both uh but you want to pick one or the other and then you can get a job and so to kind of before I illustrate what those are let's say how does the internet work real quick just so you guys can understand what those two roles are we got these three things we got the client also called the front end and what that is is that's your web browser that's Chrome that's your iPhone that's whatever and how the internet works is is you say give me twitter.com and so the client the browser sends off twitter.com and it pulls up the twitter.com server and the server says okay they pulled up Twitter what do we do well we give them the homepage by default what's the homepage have on it it has the top hundred most popular tweets okay so then it talks to the database which is where all this information's stored it says give me the top most you know top most recent tweets or whatever that comes back to the server the server puts it together in HTML spits it back out to the client in the front end that makes it look all beautiful with their CSS and JavaScript and then you know the client does some smarter things as you scroll down and you're running out of tweets it's it real time talks to the server says okay I need 10 more tweets okay let's get 10 more let's send it back out to the JavaScript um and so that's kind of your Two Worlds you got your client which is called front end your server which is called backend and you kind of it used to be these were the only developers cuz if you think like 10 years ago for the internet the front end was ugly it was just information and links and it was this basic front end was front end that's all there was uh but that is not the case anymore things have to be slick and smart and they have to have cool user experiences fun user experiences you have to know where the mouse is on the page and do specific things based off of what the user's doing you have to let them log in and load up their profile without reloading a new page I mean that's basically frontend developer so if you're passionate about all that stuff go frontend you can always learn backend and add back end into it later and vice versa if you like data and you like budgeting and finances and you like organization and stuff like that you're not as much of you might not call yourself as much the the raw creative type who has to be into Indie music that nobody's heard of H you might want to go backend it first I'm not going to stereotype the two but um either way if you like development you'll like them both so that's kind of that's kind of might help you decide what to take so I'm going to get rid of you you're gone don't need you anymore let's say you've chosen to go frontend developer don't get overwhelmed there's not much on this it just looks complicated this is if you learn these things you are ripe and ready to go get a job as a front end developer and people are going to want to hire you so the first thing you want to do is you want to learn a JavaScript framework technically an MV MVC or MV whatever MV star JavaScript framework there's about 30 of them out there but I'll tell you what people are hiring mostly backbone JS developers and Angular JS developers right now used to be backbone is like the main one and then there's a decent bit of knockout uh but the majority of jobs um backbone or angular is what they're looking for uh and here's kind of why is is when you start writing thousands and thousands of lines of JavaScript to make this whole application that does your whole thing without ever navigating to another page you need a framework that helps you organize that code in a way that makes sense is not complicated and just works without breaking if the user does some random thing so that's where these Frameworks come in um they're JavaScript they're all JavaScript but they kind of have their own Dynamic to them like kind of their own language and their way of doing things if I was to pick one to learn I'd pick angular I I honestly think angular's backbone is barely ahead in terms of how many jobs are out there right now um but there's a lot of jobs a lot of people looking for angular developers now it's almost even and in the next couple years I think angular is just going to be more popular Google makes angular it's kind of one of the big reasons um but seriously if you learn one of these well people are looking for backbone JS developer that's an actual job title Angular JS developer um learn one of these learn how to make a single page web app with these things um and then if you want to learn both it'll just make you available for more jobs and then whichever one you learn I put knockout on there because it's it's kind of popular it's it's enough to be mentioned and there's a bunch of other ones that that are out there that sure they're great to learn Ember and other stuff but hey you're learning pick one of these two unit testing whatever you do learn how to write tests for your application and your framework it's going to look different for angular it's going to look different for backbone um this is kind of like phase two you can get a job without knowing unit testing uh it'll just kind of show that you're a true Pro if you know how to write tests for your application and I'll leave it at that this is not a video where I'm going to get into what that is so that's the that's going to be the toughest part right there learn a JavaScript framework um and learn jQuery you got to know jQuery but that's not really a framework uh that's just kind of kind of falls into basic front end um you got got to learn from there a CSS tool these are really easy these aren't languages they're tools SAS less stylist basically you're writing CSS for all intensive purposes but you can do some cool stuff like create variables and and have it reuse certain parts of your code so you don't have to write it for everything uh not going to go into it it's pretty easy to learn it in a few days SAS is the one to learn less is almost identical for all intents and purposes it's almost the exact same thing um and then you want to learn a CSS framework which is bootstrap or Foundation are pretty much the two most popular um bootstrap I have a video out for that I'll throw it in the description uh what these let you do is these let you write with very little code uh a responsive web app like a web app that just looks cool looks clean they give you a lot of builtin CSS rules to help you build widgets and build page layouts so you're not having to hand code all this and it also sets you up to where you can build it and tell the next developer hey I did this with bootstrap and they know how to go find information from bootstrap on how and why you did what you did um and that kind of falls into responsive design you need to know what this is and how to do it responsive design is I don't know if you've seen all the new web pages now if you resize your browser the layout of the page changes to fit the size of screen you have so if you pull it up on an iPad the page looks different um and if you have a small browser window it looks different um images are smaller or bigger that's called responsive design uh you got to know that now it's not it's not super complicated you can really learn it in a couple weeks um and bootstrap and Foundation are both responsive Frameworks so if you learn them you're kind of learning responsive design so that's a tool that's not really so much a language and then frontend build tools these are just little tools that you got to learn so remember how I mentioned if you're building a whole JavaScript application you're going to have thousands of lines of code sometimes and you don't want them all in one file that's a disaster so you got to split them up into a bunch of different JavaScript files maybe one for your header one for your footer one for your sidebar one for your profile one for your tweets listing um and then you want to be able to build those together into one compressed Javascript file so you're only sending your browser one file instead of 20 or 100 files and so that's kind of where your build tool runs in these all run on the command line which is why you got to learn the command line and that's going to run either grunt or gulp grunt is basically the popular big dog that's been out for Years everybody everybody uses grunt gulp is the new guy that's I think a lot easier to use and it's basically a replacement for grunt um learn grunt first take a look at gulp basically what this is going to do is you get a bunch of grunt will listen and as you save a Javascript file it'll then compress all the JavaScript files together and spit it out and reload your web page real time so that's kind of what grunt does um as you save your SAS file it'll process it and turn it into a CSS file that's kind of the what grunt does um and then Y.O yman uses grunt uh and that's just kind of a fun thing look into that Bower is package management package management is becoming a really big deal uh you don't want to have to give people a jQuery file and a backbone.js file you just want to say hey download the project the project has a package file that says you'll need jQuery backbone all that you got to learn basically what package management means um and so instead of putting all those files in your project you just put a package on it which is just usually three lines of code that says when you run install get backbone get jQuery get SAS get grunt get all these things and then your Project's ready to go on your machine so got to kind of learn about bow and package management and then browserify and requirejs learn how to use one or the other of these ideally both requirejs has been the popular guy for a while but browser fi is I think a lot better and a lot of people are going to be using this guy in the future and already are um I'll leave that for now so that's frontend developer hopefully I didn't freak you out so far but if you want to go front and develop a route this is stuff that I so wish somebody had told me years ago I had to figure this out over the course of time um let's say you're not that you want to go backend developer woohoo backend developer uh I want to do that I want to be that server guy that works with databases um here's basically a backend server is going to be running one of these Technologies it's going to be running Ruby on Rails node.js which is Javascript a lot of guys like that a lot of guys don't like that PHP python which python usually runs Jango umnet which is going to be the C language um and you'll be writing unit tests for whatever technology you pick if you're looking for jobs out there there's a ton of Ruby on Rails jobs absolute ton of Ruby on Rails jobs a growing number of node.js jobs because it's really cool to be able to write JavaScript on the front end and JavaScript on the back end um I love node node is my favorite uh because I started out as a frontend developer um node is super cool a lot of PHP jobs they don't tend to pay as well because it's uh a lot more people know PHP and uh it tends to not be as used for super highlevel super large sites some people are going to hate me for saying that but if you're looking for jobs and you're you're saying hey just tell me which one to pick I'd say go Ruby on Rails go Ruby on Rails um no JS if you already know JavaScript um and you like JavaScript a lot I I'd say pick one of these two uh learn some PHP learn WordPress learn um Symphony you know there's a lot of PHP has a ton of um Frameworks out there for it Ruby on Rails is the framework um and node.js is going to be writing JavaScript and you'll be writing it with express.js um I actually have a video for getting started on express.js it's not really for super beginners it's kind of for backend developers already but I'll put that in the description um once you pick your backend technology you're going to want to learn how to wire that up I'm going to move this out of the way here you're going to want to learn how to wire that up into different databases uh so say you picked Ruby on Rails yipp I want to be a Ruby on Rails developer learn how Ruby on Rails talks to a myql database once you've learned that uh learn how it talks to a mongodb database it's probably not going to be a world of difference they you're getting information or you're saving information to the database um then learn how it save stuff to a reddis database um those are kind of the big three to learn right now there's probably 10 or 20 you don't have to learn them all just get comfortable with more than one and get over the fear of of working with a database uh that's kind of you know you want to learn how to talk to a database and then you want to learn some other things is how do I build a restful service now how do I build an API so JavaScript can talk to me and say give me 10 tweets and I'm going to build an API a web service that JavaScript can talk to that will help them retrieve tweets through the database through my service learn how to build services um usually any tutorial on Ruby on Rails will teach you how to do this uh learn how to do security do some Googling on Ruby on rail security Ruby on Rails security best practices learn what stupid mistakes not to make with Ruby that will leave your website vulnerable uh next thing learn about ooth 2 uh have you ever seen those things that say Hey login with my Google account log in with my Facebook account that's called ooth uh that is so popular right now you want to know how someone can log into your application with their Google account with their Facebook account which brings us to authorization authentication you want to learn what those are what the differences between the two pretty easy straightforward learn how to make a username password login on Ruby and rails uh that's called um your authentication uh and then learn how to restrict people from certain parts of your site unless they're authenticated unless they're logged in that's called authorization learn how to restri them from getting uh two tweets unless they're logged in make sure learn how to restrict someone from posting to someone else's Twitter account unless they're logged in as that person that's all authorization stuff um so learn how that works and then the last thing on that is you want to learn caching learn um I won't go into it too much but learn memcached learn engine X too high level to leave for this conversation but you want to learn some of these caching things varnish and Squid are also good I threw those on there if you just want to learn a ton are you overwhelmed yet are you freaking out there's if you look at it you don't have to learn everything on here learn one pick one I picked Ruby on Rails learn how to tie it into one or more databases learn a couple things that's your learning curve for the next two years go for it and then you're going to be hired and people are going to love you because you know the right stuff um if you're a backend guy and you're super loving backend and you want to go to a higher level um look into Dev Ops Dev Ops is basically server management how do I manage I have such a big website that I have to have 20 different servers to handle all the traffic what do people use when they're doing that kind of stuff that's like devops world that's like backend part two I'm not going to go into that because most of you guys probably aren't anywhere near that world but if you are and you want to learn it there's your list of stuff to learn your different tools that you'll Le uh use in those Arenas so that's it I hope I didn't freak you out and overwhelm you it's okay if you have to watch this video four times to not get crazy overwhelmed but if you pick one of these tracks and learn the Technologies you're good to go you're going to get hired you're going to be a person that people want on their team because these are the technologies that people are using right now this is what it takes to be a web developer in 2014 and hope you liked it have an awesome day
