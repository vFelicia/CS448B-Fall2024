With timestamps:

00:00 - so in my last video I showed you how to
00:02 - get email sending from your node.js
00:04 - application uh with send grid and it's
00:07 - working great uh but in a real life
00:09 - scenario you'll probably want to send
00:10 - HTML emails Rich HTML emails and that's
00:13 - a little bit more involved one because
00:15 - there's a lot of
00:16 - restrictions um around Rich HTML emails
00:20 - because there's so many mail clients out
00:22 - there and lots of them especially like
00:23 - Outlook are going to handle things
00:25 - really different so I'm going to kind of
00:27 - give you my thoughts on how I would
00:29 - approach rich HTML emails um first off
00:32 - with srid the only thing you've got to
00:34 - do is change text to HTML and then
00:36 - you're done that's all srid cares about
00:37 - now I can send H1s and I can send uh
00:41 - HTML tags of course there's several
00:43 - issues with this one you do not want to
00:45 - be coding HTML straight into a
00:48 - JavaScript string terrible idea you're
00:50 - going to hate your life uh it's also a
00:52 - terrible workflow you can't code in here
00:54 - you don't know what it's going to look
00:55 - like on the other end unless you send
00:57 - yourself a thousand emails while you're
00:58 - developing so we need some kind of
01:00 - workflow around here and then last we we
01:03 - lastly there's some tooling you can use
01:05 - to build responsive emails uh that are a
01:08 - lot more should I say Dependable on how
01:11 - they'll display in different clients so
01:13 - let's get into that workflow and then
01:14 - into some tooling first thing I'm going
01:16 - to do is I'm going to go I'm going to
01:18 - make myself a preview route router. get
01:27 - preview and I'm just going to send
01:29 - myself an email template so res. send uh
01:33 - res.
01:36 - render email and let's send it say my
01:39 - first
01:41 - name so I want it to render myself an
01:44 - email from the email template now I
01:46 - don't have an email template yet so
01:47 - let's go ahead and save I generated this
01:49 - Express app with the express generator
01:52 - and I use let's see here I used Express
01:57 - and I use the Hogan flag which is
01:59 - basically mustache um so Hogan we're
02:02 - using Hogan templates here you can use
02:04 - Jade you can use whatever you like but
02:07 - I'm showing you Hogan for this example
02:09 - so email. hjs so now this is my email
02:12 - template here let's get rid ahead we
02:13 - don't need that and let's get rid of
02:16 - this and let's just say I don't know you
02:19 - signed up for something so
02:21 - thanks
02:23 - first name thanks okay so now that's
02:27 - going to render let me go start my note
02:29 - up again
02:31 - and npm
02:34 - start and I should be able to go to SL
02:38 - preview not found okay let's see what's
02:41 - up with
02:42 - that I didn't save my
02:45 - file reboot my Express app there you go
02:49 - so that says thanks will let's say I
02:50 - coded and coded and coded and this is
02:52 - exactly what I wanted it to do so let's
02:54 - get this instead of rendering to my
02:57 - response let's get this rendering we
02:59 - just want the string output so Express
03:03 - comes with hjs which is Hogan for
03:06 - Express so we actually want to do this
03:07 - Hogan compiling manually so we're going
03:10 - to go npm install flag s Hogan
03:16 - JS and so that's installing Hogan JS so
03:19 - now we can go there Hogan equals require
03:23 - Hogan
03:24 - JS it's going to give me the Hogan JS
03:27 - library and I also want to access the
03:28 - file system CU I want to grab that file
03:31 - directly ver FS equals require FS which
03:35 - is the file system node.js module that
03:38 - comes baked into node so we're going to
03:40 - do is we're going to get the file
03:42 - compile the
03:44 - template we're going to do those outside
03:46 - of the route because we want to do these
03:49 - once the once the application boots up
03:51 - we don't want to have to get the file
03:53 - and compile the template every single
03:55 - request so we're going to bump those up
03:57 - here and then right here we are going to
04:00 - render the
04:01 - template so let's go and get
04:05 - file ver template
04:08 - equals fs. read file
04:14 - sync
04:16 - views email. hjs and you also I'll go
04:21 - full screen here you also need to do
04:23 - utf-8 which is what you want to do if
04:26 - you ever want to get the contents out of
04:28 - a file and pass them into a variable
04:30 - so now we want to compile the template
04:32 - very
04:34 - compiled equals hogan.
04:39 - compile there we go so now I've compiled
04:42 - the template uh you don't really have to
04:43 - know what that does you can look it up
04:45 - and see um and so now I can run my
04:47 - compiled templates so I can go compiled
04:51 - templates.
04:58 - render that could be that could come
05:00 - from query prams we could look this up
05:02 - in a database whatever I'm just going to
05:03 - print that object there so now we should
05:06 - be good let me restart my nodejs app no
05:09 - not npm
05:11 - install npm start of course I did
05:15 - something wrong what did I do I put a
05:17 - semicolon
05:20 - there npm starts and let's just go to
05:23 - Roots so it should send me an HTML email
05:25 - says woohoo let's see if I got one one
05:30 - two three 4 ah about four or five
05:35 - seconds thanks will yippe so that came
05:37 - through it templated my name in and it
05:39 - sent me an HTML email okay so that's a
05:42 - basic HTML email example now how do I do
05:45 - two things one how do I code this thing
05:48 - for um for all the email clients and
05:52 - then how do I also tool this to make the
05:54 - workflow a little better let's tackle
05:56 - the coding issue I like using ink by
05:59 - zerb if you go to zb.com in zerb is the
06:02 - people that make Foundation zerb are the
06:04 - people that make Foundation uh which is
06:06 - kind of a bootstrap competitor and they
06:08 - have ink which is this cool email
06:10 - service for you so a couple rules with
06:14 - emails is one you actually can't Define
06:17 - Styles like this and have it be
06:19 - compliant across devices uh you also
06:21 - can't do classes you can't define a
06:23 - class like an H1 say special class
06:26 - assign that to here and have those
06:28 - Styles make it you have to inline all of
06:30 - your Styles which means you can't go
06:32 - font weight bold you have to go style
06:35 - font weight
06:38 - bold so you have to inline them like
06:40 - that now you don't want to have to do
06:42 - that yourself you want to let an inliner
06:43 - do it for you so let's strike that let's
06:46 - say I did all my coding just the way I
06:49 - did before um I can actually copy this
06:51 - out and what Inc is going to provide you
06:54 - is they're going to provide you three
06:55 - things they're going to give you some
06:56 - built-in templates they're going to give
06:58 - you responsive class passes and they're
07:00 - going to give you an inliner that'll
07:02 - convert all that for you so I can
07:04 - actually paste any old HTML in here and
07:06 - just use the inliner if I want you can
07:08 - see it struck out my style tag and now
07:11 - the style is printed in line nice so
07:14 - that'll work that'll be a lot more
07:16 - cross client compliant uh and so let's
07:20 - also look at their email templates super
07:22 - nice let's preview this sidebar hero one
07:25 - this is a nice responsive email template
07:27 - it's also got responsive images which
07:29 - which is super cool so those images are
07:30 - going to resize for me and so I want to
07:33 - use this guy let's view the
07:35 - source and one other terrible thing
07:38 - you're going to notice is tables yes you
07:41 - have to code in tables if you want a
07:43 - goodlooking HTML email I'm so sorry I
07:46 - didn't create it please forgive whoever
07:49 - did so let's copy this guy out real
07:51 - quick real quick and you can also see
07:53 - here's some of the here's some of the uh
07:56 - classes that they give you six columns
07:59 - 12 columns so it's pretty similar if
08:01 - you're used to bootstrap it feels a lot
08:03 - like that you can read the docs and find
08:05 - out more I suggest just starting off
08:07 - with a template that you like and going
08:09 - from there so I can actually use this
08:12 - guy do the inliner let's paste my HTML
08:16 - there let's convert it and look at this
08:19 - horrid thing it made for me look how
08:21 - many styles you have to have inline on
08:23 - every single tag just to make it work
08:25 - well so that's that let's uh am I still
08:28 - running here yeah I'm still running
08:31 - let's go ahead and resend this to myself
08:33 - and see what that responsive template
08:35 - looks like in my email
08:40 - client should come in any second there
08:42 - we
08:43 - go ah I forgot to reboot my app always
08:46 - forget to do
08:47 - that there you go reboot my app send it
08:50 - again there'll be a couple more seconds
08:57 - here and once again this is not super
08:59 - fun to maintain I still don't want to go
09:01 - this workflow so I'll show you a great
09:04 - tool here in a second there you go I got
09:05 - this nice responsive o images grow and
09:09 - Shrink it's lots of fun as I grow that
09:11 - out more it'll all look nice so and by
09:15 - the way if I did not run this through
09:16 - the inliner this would not look good so
09:19 - what kind of tooling can I do to help my
09:21 - workflow out well once again zerb has
09:23 - this great
09:25 - tool and it's called generator zerb Inc
09:28 - which is for yman if if you don't know
09:29 - what Yen is you're going to want to stop
09:30 - right now and watch my video on yman I
09:33 - think a lot of you guys have probably
09:34 - seen it so let's go ahead and install
09:37 - that um the command would be npm install
09:41 - dasg
09:44 - generator
09:46 - generator zerb Inc so that's going to
09:50 - install it I already have it installed
09:51 - so I'm not going to run that and then
09:53 - let's make a
09:56 - directory CD Inc and now I can just go
09:58 - yo
10:02 - Zer Inc there we go and it lets you pick
10:05 - one of the templates which are those
10:07 - ones we saw so I had picked sidebar hero
10:09 - let's pick sidebar hero this is going to
10:11 - take I don't know about 20 seconds so
10:13 - I'm going to let it run I'll be right
10:15 - back okay I'm back that probably took
10:17 - about 25 seconds um and let's look what
10:19 - it generated for me slime let's open you
10:23 - up so I have this whole index.html
10:26 - here's the entire template that I got in
10:28 - it P pulled out all of zerbs ink Styles
10:31 - into a file that I no longer need and it
10:34 - also pulled Styles into a style CSS so
10:36 - now I can build like I would with a
10:38 - normal web page you could add as many
10:40 - styles in there as you want and you can
10:42 - do your HTML and it feels a lot more
10:44 - like good development only thing I have
10:47 - to run before I use it this is important
10:49 - is you got to run Bower install because
10:51 - for whatever reason the generator
10:53 - doesn't run that for you so I ran Bower
10:55 - install and now I can just do gulp it
10:57 - uses gulp instead of grunt
10:59 - and you can see I'm listening on port
11:01 - 8080 so let's go a and grab that so now
11:04 - I have a live reload workflow for my
11:08 - HTML email designing there we go let's
11:13 - see I don't want to welcome Daniel
11:14 - olivan I'll welcome
11:17 - will there we go and so of course I'm
11:19 - actually going to mustache this into
11:20 - first
11:22 - name there you go say let's say I
11:25 - tweaked it let's say I added a bunch of
11:27 - great stuff I'm saving it now now that
11:29 - I'm done I just run gulp build and
11:32 - that's going to do all the inlining for
11:34 - me super fast and now I can look at
11:38 - build index HTML here's my fully inlined
11:42 - mess of an
11:44 - email and it kept all the
11:46 - mustache let's see it kept all the
11:49 - mustache insert points there and so now
11:52 - I can just copy that out paste it into
11:55 - my finished template and I'm done so
11:58 - that is is how I will
12:01 - do
12:03 - responsive uh cross device cross email
12:06 - client rich HTML emails gosh that's a
12:10 - mouthful I could barely get it out hope
12:12 - that helped you out have an excellent
12:13 - day and I'll catch you around

Cleaned transcript:

so in my last video I showed you how to get email sending from your node.js application uh with send grid and it's working great uh but in a real life scenario you'll probably want to send HTML emails Rich HTML emails and that's a little bit more involved one because there's a lot of restrictions um around Rich HTML emails because there's so many mail clients out there and lots of them especially like Outlook are going to handle things really different so I'm going to kind of give you my thoughts on how I would approach rich HTML emails um first off with srid the only thing you've got to do is change text to HTML and then you're done that's all srid cares about now I can send H1s and I can send uh HTML tags of course there's several issues with this one you do not want to be coding HTML straight into a JavaScript string terrible idea you're going to hate your life uh it's also a terrible workflow you can't code in here you don't know what it's going to look like on the other end unless you send yourself a thousand emails while you're developing so we need some kind of workflow around here and then last we we lastly there's some tooling you can use to build responsive emails uh that are a lot more should I say Dependable on how they'll display in different clients so let's get into that workflow and then into some tooling first thing I'm going to do is I'm going to go I'm going to make myself a preview route router. get preview and I'm just going to send myself an email template so res. send uh res. render email and let's send it say my first name so I want it to render myself an email from the email template now I don't have an email template yet so let's go ahead and save I generated this Express app with the express generator and I use let's see here I used Express and I use the Hogan flag which is basically mustache um so Hogan we're using Hogan templates here you can use Jade you can use whatever you like but I'm showing you Hogan for this example so email. hjs so now this is my email template here let's get rid ahead we don't need that and let's get rid of this and let's just say I don't know you signed up for something so thanks first name thanks okay so now that's going to render let me go start my note up again and npm start and I should be able to go to SL preview not found okay let's see what's up with that I didn't save my file reboot my Express app there you go so that says thanks will let's say I coded and coded and coded and this is exactly what I wanted it to do so let's get this instead of rendering to my response let's get this rendering we just want the string output so Express comes with hjs which is Hogan for Express so we actually want to do this Hogan compiling manually so we're going to go npm install flag s Hogan JS and so that's installing Hogan JS so now we can go there Hogan equals require Hogan JS it's going to give me the Hogan JS library and I also want to access the file system CU I want to grab that file directly ver FS equals require FS which is the file system node.js module that comes baked into node so we're going to do is we're going to get the file compile the template we're going to do those outside of the route because we want to do these once the once the application boots up we don't want to have to get the file and compile the template every single request so we're going to bump those up here and then right here we are going to render the template so let's go and get file ver template equals fs. read file sync views email. hjs and you also I'll go full screen here you also need to do utf8 which is what you want to do if you ever want to get the contents out of a file and pass them into a variable so now we want to compile the template very compiled equals hogan. compile there we go so now I've compiled the template uh you don't really have to know what that does you can look it up and see um and so now I can run my compiled templates so I can go compiled templates. render that could be that could come from query prams we could look this up in a database whatever I'm just going to print that object there so now we should be good let me restart my nodejs app no not npm install npm start of course I did something wrong what did I do I put a semicolon there npm starts and let's just go to Roots so it should send me an HTML email says woohoo let's see if I got one one two three 4 ah about four or five seconds thanks will yippe so that came through it templated my name in and it sent me an HTML email okay so that's a basic HTML email example now how do I do two things one how do I code this thing for um for all the email clients and then how do I also tool this to make the workflow a little better let's tackle the coding issue I like using ink by zerb if you go to zb.com in zerb is the people that make Foundation zerb are the people that make Foundation uh which is kind of a bootstrap competitor and they have ink which is this cool email service for you so a couple rules with emails is one you actually can't Define Styles like this and have it be compliant across devices uh you also can't do classes you can't define a class like an H1 say special class assign that to here and have those Styles make it you have to inline all of your Styles which means you can't go font weight bold you have to go style font weight bold so you have to inline them like that now you don't want to have to do that yourself you want to let an inliner do it for you so let's strike that let's say I did all my coding just the way I did before um I can actually copy this out and what Inc is going to provide you is they're going to provide you three things they're going to give you some builtin templates they're going to give you responsive class passes and they're going to give you an inliner that'll convert all that for you so I can actually paste any old HTML in here and just use the inliner if I want you can see it struck out my style tag and now the style is printed in line nice so that'll work that'll be a lot more cross client compliant uh and so let's also look at their email templates super nice let's preview this sidebar hero one this is a nice responsive email template it's also got responsive images which which is super cool so those images are going to resize for me and so I want to use this guy let's view the source and one other terrible thing you're going to notice is tables yes you have to code in tables if you want a goodlooking HTML email I'm so sorry I didn't create it please forgive whoever did so let's copy this guy out real quick real quick and you can also see here's some of the here's some of the uh classes that they give you six columns 12 columns so it's pretty similar if you're used to bootstrap it feels a lot like that you can read the docs and find out more I suggest just starting off with a template that you like and going from there so I can actually use this guy do the inliner let's paste my HTML there let's convert it and look at this horrid thing it made for me look how many styles you have to have inline on every single tag just to make it work well so that's that let's uh am I still running here yeah I'm still running let's go ahead and resend this to myself and see what that responsive template looks like in my email client should come in any second there we go ah I forgot to reboot my app always forget to do that there you go reboot my app send it again there'll be a couple more seconds here and once again this is not super fun to maintain I still don't want to go this workflow so I'll show you a great tool here in a second there you go I got this nice responsive o images grow and Shrink it's lots of fun as I grow that out more it'll all look nice so and by the way if I did not run this through the inliner this would not look good so what kind of tooling can I do to help my workflow out well once again zerb has this great tool and it's called generator zerb Inc which is for yman if if you don't know what Yen is you're going to want to stop right now and watch my video on yman I think a lot of you guys have probably seen it so let's go ahead and install that um the command would be npm install dasg generator generator zerb Inc so that's going to install it I already have it installed so I'm not going to run that and then let's make a directory CD Inc and now I can just go yo Zer Inc there we go and it lets you pick one of the templates which are those ones we saw so I had picked sidebar hero let's pick sidebar hero this is going to take I don't know about 20 seconds so I'm going to let it run I'll be right back okay I'm back that probably took about 25 seconds um and let's look what it generated for me slime let's open you up so I have this whole index.html here's the entire template that I got in it P pulled out all of zerbs ink Styles into a file that I no longer need and it also pulled Styles into a style CSS so now I can build like I would with a normal web page you could add as many styles in there as you want and you can do your HTML and it feels a lot more like good development only thing I have to run before I use it this is important is you got to run Bower install because for whatever reason the generator doesn't run that for you so I ran Bower install and now I can just do gulp it uses gulp instead of grunt and you can see I'm listening on port 8080 so let's go a and grab that so now I have a live reload workflow for my HTML email designing there we go let's see I don't want to welcome Daniel olivan I'll welcome will there we go and so of course I'm actually going to mustache this into first name there you go say let's say I tweaked it let's say I added a bunch of great stuff I'm saving it now now that I'm done I just run gulp build and that's going to do all the inlining for me super fast and now I can look at build index HTML here's my fully inlined mess of an email and it kept all the mustache let's see it kept all the mustache insert points there and so now I can just copy that out paste it into my finished template and I'm done so that is is how I will do responsive uh cross device cross email client rich HTML emails gosh that's a mouthful I could barely get it out hope that helped you out have an excellent day and I'll catch you around
