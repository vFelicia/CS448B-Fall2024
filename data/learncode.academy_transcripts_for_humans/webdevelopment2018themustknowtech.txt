With timestamps:

00:00 - hey everybody this is my absolute
00:02 - favorite video of the year every year
00:04 - it's the video of uh where i really
00:06 - cover what does it take to be a great
00:08 - web developer this year i mean it covers
00:11 - the basics for people getting into web
00:13 - development what do you need to learn in
00:14 - in what order do you need to learn it
00:16 - and it also covers for people who are
00:18 - currently front end or back end
00:19 - engineers or devops engineers what do
00:21 - you need to learn this year to keep your
00:23 - skill set really current so i'm excited
00:26 - about it uh there's three things i want
00:27 - to cover real quick up front one the
00:29 - link to this mind map right here on
00:31 - koggle is in the description so that way
00:33 - everything that's blue is a link to a
00:35 - video that i have
00:36 - or a course that i have or uh some great
00:39 - information on the web
00:41 - so you'll want to click on that once you
00:43 - watch this when you're actually learning
00:44 - all these things because i have a lot of
00:46 - videos covered already as you can see
00:49 - also there's some links in the
00:51 - description to the different areas so
00:52 - you can jump straight to an area of your
00:54 - expertise if you're already say a
00:56 - front-end engineer and lastly all the
00:58 - opinions on here are my own absolutely
01:01 - none of them are bought and paid for i
01:03 - do not recommend anything on here
01:05 - because someone gives me money to do so
01:08 - that's very very important to mention i
01:10 - do have one link that's an affiliate
01:11 - link but it's on there i've been
01:13 - recommending them for a long time anyway
01:15 - and i'll tell you what that link is so
01:17 - let's begin um you want to become a web
01:20 - developer in 2018 what does this
01:22 - landscape look like
01:24 - well you're going to learn basic front
01:26 - end development and then you're going to
01:27 - become either a front-end engineer which
01:29 - is this road up here which i'll show you
01:31 - or you're going to become a back-end
01:33 - engineer and you can actually learn both
01:35 - and become what's called a full-stack
01:37 - engineer if i were to give you my
01:38 - recommendation i would say learn basic
01:41 - front end you have to do this anyway you
01:42 - need to start with learning basic front
01:44 - end
01:45 - then become a javascript slash front end
01:47 - engineer and then become a full stack
01:50 - javascript engineer and then learn other
01:53 - backend languages i'll go into more of
01:55 - that detail later on as we go along but
01:57 - that's my recommended path in 2018 for
01:59 - what's going to be the best for you the
02:01 - best for your job opportunities and all
02:03 - that so
02:05 - if you're learning today you want to
02:06 - become a web developer in 2018 this is
02:09 - what you need to do start off by
02:10 - clicking on this link and learning basic
02:12 - html it's really easy to learn you're
02:15 - going to learn html css and basic
02:19 - javascript so html is content for a web
02:23 - page every webpage you go to is made in
02:25 - html it's basic content
02:28 - without css which is style cascading
02:31 - style sheets which is what that stands
02:33 - for you're just going to be able to
02:34 - create ugly ugly ugly content so then as
02:37 - soon as you learn the real basics of
02:39 - html which you can get comfortable in in
02:41 - just a few hours
02:43 - then you're going to start learning css
02:44 - you want to start making that content
02:46 - look pretty and beautiful
02:48 - so you're going to start by learning the
02:49 - basics of css then you're going to learn
02:51 - how to do layouts you're going to use
02:53 - grid mostly grid and flexbox these days
02:57 - then you want to learn how to do
02:58 - responsive design responsive means that
03:00 - that same html
03:02 - will look different and display
03:03 - different on an iphone than it will on a
03:05 - big old desktop computer that's called
03:07 - responsive
03:08 - and then responsive images and css
03:11 - animation you honestly probably don't
03:13 - have to learn too much in css animation
03:15 - for the basics but that's kind of your
03:17 - basic css skill set and so again you
03:20 - learn basic html then learn css and the
03:23 - rest of html together as you go
03:26 - so once you have those down then you're
03:27 - going to start learning basic javascript
03:30 - now javascript is the function to a web
03:32 - page so say on twitter you go and add a
03:35 - new tweet it shows up in your timeline
03:37 - right away it just appears on the page
03:39 - that's javascript to doing all those
03:41 - smarts
03:42 - let's say you reply to a tweet and then
03:44 - it somehow
03:45 - goes and notifies everybody else's
03:47 - phones well javascript is telling that
03:48 - web page hey send out this new tweet
03:50 - that's the function
03:52 - javascript is also a programming
03:53 - language so this is where you start to
03:55 - learn basic programming
03:57 - and here's kind of the things you'll
03:59 - want to learn on here
04:01 - i won't go through really what they are
04:02 - you can learn them as you go
04:04 - jquery is on here you don't really need
04:06 - to learn jquery anymore
04:08 - but i put it on the list because the
04:11 - skill sets there are jobs for just this
04:14 - skill set here and they tend to know
04:16 - html css and oftentimes those companies
04:19 - will use jquery so
04:20 - it's a decent thing to familiarize
04:22 - yourself with while you're at this stage
04:24 - i call this
04:26 - the website developer stage you can
04:28 - create websites but you can't
04:30 - necessarily create web apps like you
04:32 - couldn't go create twitter
04:34 - but you do know how to create like a
04:35 - brochure site you know it has flat
04:38 - information maybe for a small business
04:40 - or restaurant or something so this is a
04:42 - skill set you can start getting work for
04:44 - you can start making money uh maybe even
04:46 - get a full-time job and then as you go
04:49 - down one of these two paths
04:50 - then you can really become a career web
04:53 - developer
04:54 - so that's basic front end that's what it
04:55 - takes to do basic front end in 2018 so
04:58 - then as you pick a path again i
04:59 - recommend this path first and then back
05:02 - end but as you pick a path you're going
05:03 - to want to learn this to-do list as you
05:05 - go you don't have to learn it all
05:07 - overnight um but you do want to learn
05:10 - them as you're going this is kind of
05:12 - just like a learning list for you so by
05:14 - the time you become a full front end
05:16 - engineer you'll kind of learn these
05:17 - things you want to learn how to use the
05:18 - terminal you don't have to master it but
05:20 - you do want to feel comfortable there if
05:22 - you're not comfortable in the terminal
05:24 - in the console you will start being held
05:26 - back as you go deeper so terminal
05:29 - something you want to lose you'll want
05:31 - to learn it's a little intimidating at
05:33 - first but you pick it up really quickly
05:36 - then you're going to want to learn basic
05:37 - ssh
05:38 - and then how to put files onto a web
05:41 - server with ssh then you're going to
05:42 - learn github github is how
05:45 - the world tends to store their code as a
05:48 - standard professional developers tend to
05:50 - use git and they tend to use github with
05:53 - git
05:54 - then you're going to learn how client
05:56 - which is like a web page and the servers
05:58 - talk to each other there's two videos i
06:00 - put on this link that are really really
06:03 - helpful for people getting into web
06:04 - development it's things that
06:06 - are very difficult to
06:08 - know what you don't know and that took
06:10 - me years to kind of pick up on that i've
06:12 - compiled into two pretty short videos
06:14 - that i really wish someone would have
06:16 - told me when i was starting out
06:18 - learn what a restful web service is
06:20 - that's kind of something that you'll
06:22 - need to learn as you become a front end
06:24 - or back end engineer
06:25 - how you can kind of talk client to
06:27 - server
06:28 - and then you want to learn domain name
06:30 - and dns basics um just a little bit more
06:33 - about what an a record is what a c name
06:35 - record is stuff like that
06:37 - um and then lastly i guess i failed to
06:40 - mention the first time you want to be
06:41 - able to publish your html css and basic
06:43 - javascript to a website that's really
06:45 - important
06:46 - i recommend hostgator for this i've been
06:48 - recommending them for a long time so i
06:50 - finally did get an affiliate coupon code
06:53 - with them so if you do click this link
06:55 - or use this code i may make a buck off
06:57 - of it so that is the one link on here
06:59 - that i will mention is an affiliate link
07:01 - so don't use it if you don't want to
07:03 - there's these drop 25 percent and drop
07:05 - 10 bucks codes but let's make a deal i
07:08 - think can give you somewhere around 30
07:09 - to 40 lots of the time so that is again
07:11 - that is my coupon code use it to your
07:13 - own peril
07:15 - and so you want to learn basically how
07:16 - to set up a website that's the easiest
07:18 - place to do it when you don't know what
07:20 - you're doing is hostgator they're also
07:21 - one of the cheapest out there and then
07:23 - you want to learn how to put your html
07:25 - css and javascript on that website so
07:28 - that's basic front end um once you've
07:30 - got that and you're becoming a front-end
07:33 - developer uh here's kind of the things
07:35 - you want to learn this looks
07:36 - intimidating this is not very
07:38 - intimidating in reality um just give me
07:41 - about one minute to explain why here so
07:44 - you basically want to learn
07:46 - four things when you're becoming a
07:48 - front-end developer also known as a
07:51 - front-end engineer or a web developer or
07:53 - a javascript engineer or a react
07:55 - developer or view developer those are
07:57 - kind of the job titles you'll be
07:58 - searching for when you know these things
08:00 - you're going to upgrade your css skills
08:02 - you're going to upgrade your javascript
08:04 - skills become a little bit more
08:06 - confident as a programmer
08:07 - you're going to learn some build tools
08:09 - and you're going to learn one or more
08:10 - javascript frameworks
08:12 - things like this you can learn in more
08:15 - or less a day and then master in a week
08:17 - same with a lot of things up here you
08:19 - can learn so many of these things on
08:21 - this list in a day at the most a week
08:24 - this is going to be where most of your
08:25 - learning is going to take place in
08:26 - learning one of these frameworks so it's
08:28 - really not that big of a deal
08:31 - so css tools and skills these have been
08:33 - around for years nothing's really
08:35 - changed here sas lesser stylus are the
08:38 - pre-compilers you want to use they just
08:40 - add extra functionality to css
08:43 - when it comes to a css framework
08:46 - if you know css grid you might not need
08:48 - a framework anymore
08:51 - being that you do need a framework
08:52 - bootstrap or materialize are kind of the
08:54 - two coolest ones these days i've not
08:56 - gotten a lot of chance with the brand
08:57 - new bootstrap before i need to learn
09:00 - that and do a video on that
09:02 - because it does it's based on css grid
09:04 - so it's kind of cool
09:06 - and then css organization is something
09:08 - that that's useful in a lot of arenas
09:11 - basically the methodologies for what you
09:13 - name classes and what you call your css
09:16 - things when you're
09:17 - developing them
09:18 - uh those are kind of the three popular
09:20 - css organization methodologies that you
09:22 - want to learn again super easy to learn
09:26 - and then you'll want to learn a
09:27 - front-end build tool you want to be able
09:29 - to take all your css and compile it up
09:31 - and build it up
09:33 - npm scripts are a great way to do that i
09:35 - cover those in my node.js course
09:37 - webpack is the number one tool to use
09:40 - there used to be grunt and gulp
09:43 - and webpack but honestly you just kind
09:45 - of want to learn webpack these days if
09:47 - you're going to learn one other one you
09:49 - could learn gulp but webpack is really
09:51 - just the one to know
09:52 - and then here's a really good document
09:54 - from i believe mozilla on front end
09:56 - performance and and how to learn the
09:58 - areas to make sure your front end
10:00 - website is performant and put together
10:02 - really smart um
10:04 - so then once you learn that uh let's go
10:06 - to javascript frameworks this is really
10:08 - the biggest thing you want to learn to
10:10 - become a front-end engineer front-end
10:12 - developer
10:13 - is you want to learn how to program well
10:16 - using a framework now the one to know in
10:18 - 2018 is react js if you're going to
10:21 - learn one learn react boom that is it
10:24 - react and vue are the two that i would
10:26 - tell you to learn in 2018 angular and
10:29 - ember are still out there with some jobs
10:30 - but not a lot of new applications are
10:33 - being built in angular and ember so i
10:35 - would say honestly don't even worry
10:37 - about those unless you have some spare
10:39 - time and you want to maybe familiarize
10:41 - yourself with angular because there's
10:43 - a decent bit of angular job still out
10:45 - there
10:46 - react and view are the two things to
10:48 - know
10:49 - and so if i was going to build a brand
10:50 - new web app today
10:52 - if it was small like a single module i'd
10:54 - do it in view
10:56 - just view just drop view on the page
10:58 - you'll have your module done it's going
10:59 - to be fast it's going to be easy view is
11:02 - really great
11:03 - and then as the app grows i'm going to
11:05 - use
11:06 - maybe view with view this right here
11:09 - view
11:10 - or next if it's going to be a larger
11:12 - view app but honestly
11:14 - personal opinion once it starts getting
11:15 - into larger apps i'm going to absolutely
11:18 - use react
11:19 - just because if nothing else the
11:21 - community solutions
11:23 - and help content available react is
11:26 - awesome react or vue can handle big apps
11:28 - really well but react is the one to pick
11:30 - these days um
11:32 - so what do you do with react um if i was
11:34 - doing react
11:36 - relay or apollo if you're gonna use
11:38 - graphql graphql is a really cool
11:41 - alternative to rest
11:43 - that's definitely something you want to
11:45 - familiarize yourself with these days
11:47 - apollo is probably my favorite i prefer
11:49 - apollo over relay
11:51 - and then next js or after js or if you
11:53 - want to do server side rendered apps
11:55 - those are really good to look into
11:57 - and then managing css and react
11:59 - glamorous emotion or styled components
12:01 - are kind of duking it out for who's the
12:03 - best honestly
12:05 - they're all going to get the job done
12:06 - well each has their advantages and
12:08 - disadvantages
12:10 - but anyway no no real preference there
12:12 - overall just kind of take a quick glance
12:14 - at all of them but that's how you're
12:15 - going to manage your css inside of react
12:18 - and then you also want to look into
12:20 - state management so this applies to
12:22 - multiple different frameworks
12:24 - so with react you don't want to keep all
12:26 - your data in the react application you
12:28 - want to keep all your data in mobx or
12:31 - redux
12:33 - and my preference would be use modbx for
12:35 - smaller applications and if they get
12:37 - bigger and complicated and start to to
12:39 - get a little shaky with how complex
12:42 - you're doing things with data use redux
12:45 - at that point but lots of people default
12:47 - to redux these days and you shouldn't
12:49 - you should default to mob x because it's
12:51 - way simpler
12:52 - you're going to get more work done in
12:54 - the day and you're going to enjoy your
12:55 - developer life more because there's a
12:56 - lot of ceremony to building applications
12:59 - with redux and if you don't need that to
13:02 - solve complexity
13:03 - code with mobx if you're in the react
13:05 - ecosystem you'll know what i mean
13:08 - flux is good to know because that's kind
13:09 - of where these two came from but you
13:11 - don't really need to use flux these days
13:14 - i mean rxjs and bacon.js are very fun
13:16 - for learning functional programming kind
13:18 - of up here and you can actually use a
13:21 - lot of those methodologies in your other
13:23 - apps as well
13:24 - and then you want to learn unit testing
13:26 - how do i test my react.js application
13:28 - how do i write tests
13:30 - that can run against that app jest is
13:32 - definitely the one to use these days
13:34 - mocha is also really really good and has
13:36 - been around for quite a while
13:38 - but just is the one i would definitely
13:39 - go to right off the bat so that's kind
13:42 - of your javascript framework ecosystem
13:44 - of 2018 not a lot has changed there's
13:47 - just maturity coming and vue is getting
13:49 - a lot more popular
13:51 - some other fun things you can learn nah
13:54 - really the only one that's required on
13:55 - here is es6 if you do not know es6
13:59 - you're going to start feeling pretty out
14:01 - of date in 2018 it's definitely
14:03 - something you need to know
14:05 - which is technically es 2015 es 2016 es
14:08 - 2017
14:10 - those are those the ones you want to
14:11 - know static type checkers are good to
14:13 - know but you don't have to know these
14:15 - they're really really easy to implement
14:17 - and functional programming javascript is
14:19 - definitely something you should kind of
14:20 - walk yourself through at some point as
14:22 - well you don't need to learn it right
14:23 - away so that's the front end skill set
14:26 - your javascript engineer javascript
14:28 - developer at this point um although if
14:31 - you see a job for javascript engineer
14:33 - lots of times that can mean back-end
14:35 - javascript as well so
14:37 - be aware of that all these other jobs
14:39 - are for sure you know this skill set
14:41 - that i laid out here
14:43 - so you've learned basic html you're
14:45 - front end developer front end engineer
14:47 - at this point i would say the next step
14:49 - you should do in your learning process
14:50 - is learn node.js so you're full stack
14:54 - javascript developer so you're going to
14:56 - go to back end now and you're going to
14:57 - start really learning how to build out
14:58 - the server side of those applications
15:01 - you've been building in javascript and
15:03 - absolutely if you're going to pick one
15:04 - back-end language these days pick nodejs
15:08 - it's one of the easiest and fastest to
15:09 - learn if you already know javascript
15:11 - it's going to feel really really natural
15:13 - node.js with express js is totally the
15:17 - thing to do these days
15:18 - you're not going to go wrong with it
15:20 - also i have an ojs course because i
15:22 - absolutely believe in it so much
15:24 - compiled a lot of great knowledge into
15:26 - uh not just node.js but what it means to
15:28 - be a back-end engineer so if you're new
15:30 - to back-end engineering um if you've
15:32 - been in this world for a while this
15:35 - node.js course is going to be really
15:36 - really good for you a lot of key
15:38 - software engineering concepts for the
15:40 - back end are in here
15:42 - the job titles that you're going to end
15:44 - up looking for in the back end
15:46 - maybe backend engineer back in developer
15:48 - they're the same thing full stack
15:50 - engineer full stack developer
15:52 - full stack usually means you know at
15:54 - least react or vue or angular or
15:56 - something
15:58 - uh and then it might just be called a
15:59 - software developer
16:01 - and but honestly most often it's going
16:03 - to be the language you know so you're
16:05 - you're looking for no js developer job
16:07 - node.js engineer job a ruby job or a net
16:10 - job
16:11 - uh they might also be called a platform
16:13 - engineer or a dba if you're just
16:16 - databases what i clicked on something
16:18 - what did that do okay
16:19 - but dbas are people who just love and
16:22 - live and breathe databases and i don't
16:24 - quite understand those people but
16:25 - they're very valuable so dba is
16:27 - something else that's out there so
16:29 - these are
16:30 - all kind of the popular languages and
16:32 - honestly there's many many more so many
16:34 - back-end languages so what i'd say is
16:39 - start with node.js
16:41 - don't learn these ones for now
16:44 - don't learn any of the other scripting
16:46 - languages if you know node.js instead
16:48 - learn a scripting language and then to
16:51 - expand your horizons learn maybe a
16:53 - functional language a high-performance
16:55 - language
16:56 - um
16:57 - notable others we'll get to that in a
16:59 - second so if i were if i were to say
17:01 - what language is plural should i learn
17:04 - node.js first from there i would do
17:06 - golang and then from there i would do
17:08 - closure if i'm just going to give you my
17:10 - opinion learn that first learn that
17:13 - second learn that third there's all
17:16 - sorts of great stuff out there that's
17:17 - that pays well that has lots of job
17:19 - opportunity but these are going to be
17:20 - the ones that i think are going to set
17:21 - you up for success the best in 2018. um
17:25 - java and csharp.net are on here because
17:27 - there's a lot of jobs for that but
17:30 - um these worlds are are interesting
17:32 - java's been around for a long time and i
17:34 - don't recommend people to learn these at
17:35 - n at least not early on
17:38 - because you might get bad practices you
17:40 - might get a bad way of doing things or
17:43 - you might get an amazing way of doing
17:44 - things they're just a really mixed bag
17:46 - in these two ecosystems so i say don't
17:49 - learn those right off um you can look at
17:51 - them later on and then you maybe have
17:53 - more opinion there's there's a lot of
17:55 - bad java out there and there's a lot of
17:57 - bad.net out there and then there's a lot
17:59 - of good as well so that's that's why i
18:01 - don't ever recommend those to people who
18:02 - are learning
18:04 - um one cool thing to learn is serverless
18:06 - and aws lambda
18:08 - that's a really really cool thing to
18:10 - learn these days it's very very useful
18:13 - to know i mean it's a lot of fun to look
18:15 - into serverless
18:16 - architectures
18:18 - so what you do i did it again i zoomed
18:20 - in or something so what you do when
18:22 - you're learning a new language is you're
18:24 - going to say i'm learning node.js
18:26 - you're going to learn basically these
18:29 - things with the language you're going to
18:30 - look up
18:31 - uh what do they use for package
18:33 - management
18:34 - what do they use for unit functional
18:35 - testing so and it's easy to find on
18:37 - google you know functional testing with
18:39 - javascript functional testing
18:42 - with golang unit testing with golang
18:45 - you know unit functional testing with
18:46 - closure you basically can google all of
18:48 - these things here you want to learn how
18:50 - do you build a restful api how do you
18:52 - build a graphql api what are some
18:54 - security best practices all these things
18:56 - these are the things you will want to
18:57 - learn for each language and honestly
19:01 - the most difficult thing when you're
19:02 - learning a new backend programming
19:03 - language is not so much the language
19:05 - itself it's oftentimes the ecosystem
19:08 - it's knowing what is considered standard
19:11 - uh so like what is the most popular
19:12 - node.js package for working with a mysql
19:16 - database uh what's the most popular one
19:18 - for working with another database you
19:19 - know how do node.js engineers tend to
19:21 - set up their projects these are things
19:23 - that just take a while
19:24 - of getting involved in the community to
19:26 - learn how that works so you tend to feel
19:28 - like a fish out of water for the first
19:29 - couple weeks learning a new back-end
19:31 - language
19:33 - but once you kind of learn the standard
19:34 - ways of of doing things it really you
19:37 - really start to feel at home quickly
19:40 - and then you also want to learn these
19:41 - databases you want to learn these
19:42 - databases how to connect to them and
19:44 - interact with them for each language you
19:46 - do
19:47 - you'll also want to know how to set them
19:49 - up so
19:50 - start up here learn my sequel that's
19:52 - totally the easiest and best way to
19:54 - start postgres is in many ways very very
19:57 - similar to mysql so if you know one you
20:00 - in many ways know the other
20:02 - so you want to learn relational
20:03 - databases and then you want to learn a
20:05 - nosql database that's kind of these two
20:07 - lines here
20:08 - redis you tend to use for caching and
20:10 - for you know keeping track of users
20:12 - sessions interacting with your
20:14 - application uh cassandra can also be
20:16 - used for that cassandra also finds its
20:18 - home on this line down here document
20:20 - databases
20:23 - search engine databases elasticsearch
20:25 - and solar are the most popular graph
20:28 - databases are a very cool kind of newer
20:30 - thing they've been around for a little
20:31 - while but they're getting more
20:33 - popular these days neo4j orient db
20:36 - there's there's several others but those
20:38 - are two very cool ones to look at
20:40 - um and then message brokers it's kind of
20:42 - a a different way that applications can
20:44 - communicate with each other aside from
20:46 - making either restful or graphql api
20:48 - requests
20:50 - they can communicate over messaging bus
20:52 - this is especially useful over really
20:54 - large and complex applications so
20:56 - rabbitmq 0mq and kafka are three very
20:59 - popular message brokers so if you know
21:01 - all those things in one or two languages
21:03 - i mean you're doing good if you know all
21:04 - these things in one language you're
21:06 - doing good
21:07 - that's kind of the back end developer
21:09 - skill set for 2018
21:12 - so if you're really confident as a
21:13 - back-end developer another area you can
21:14 - look into is devops which i've covered
21:16 - in the past as well this is kind of like
21:18 - back end developer 2.0 slash a really
21:22 - niche area of being a back-end developer
21:25 - where you're just really really good at
21:27 - deploying and helping teams deploy
21:30 - applications in a professional way
21:32 - so to be a devops engineer you need to
21:34 - know some infrastructure platforms aws
21:37 - is probably the best one to learn if
21:39 - you're just going to learn one learn aws
21:42 - it's going to put you in the most demand
21:43 - and it's going to pay the best
21:45 - azure google cloud really good
21:47 - digitalocean is great for simpler
21:48 - smaller infrastructures simpler smaller
21:51 - companies
21:52 - then you're going to want to learn how
21:53 - to do server management also called cm
21:56 - or configuration management the number
21:57 - one thing you've got to learn these days
21:58 - is docker
22:00 - and then ansible is a good thing to
22:01 - learn as well there's salt puppet and
22:02 - chef
22:03 - puppet and chef tend to be used on more
22:05 - enterprise level size of things
22:07 - but they're good to know but if you
22:09 - learn docker and ansible you've got a
22:10 - cool skill set
22:12 - as well
22:13 - and those are those are totally the ways
22:15 - to do it so docker's basically going to
22:16 - help you package up an application into
22:18 - a container that you can just put all
22:20 - over the place you can run that same
22:22 - container here or here or here or here
22:24 - or on 20 servers on one server docker is
22:27 - awesome you need to know docker honestly
22:29 - even if you're a back-end engineer you
22:31 - should know docker these days it's very
22:32 - very important
22:34 - um and then ci pipelines continuous
22:36 - integration continuous deployment
22:39 - making apps deploy as you merge code to
22:42 - github
22:43 - really cool solutions for that circle ci
22:45 - and code ship those are ones that are
22:46 - hosted you know you pay monthly and they
22:48 - take care of it all for you or you can
22:50 - install stuff on your own servers and
22:52 - infrastructure jenkins is probably the
22:54 - most popular but the oldest drone ci is
22:57 - a lot of fun but the least feature full
22:59 - it's docker native so it's it's really
23:01 - lightweight in the way it runs i like
23:03 - drone it's a lot of fun get lab is also
23:06 - a very cool solution that's that's very
23:09 - all-encompassing so your whole company
23:11 - either uses git lab or they don't tends
23:13 - to be how it works
23:15 - um and then when you learn docker uh
23:17 - docker's really settled in the last
23:19 - couple years so docker used to have all
23:21 - this change and traction and stuff going
23:23 - on and it's really settled into some
23:25 - stability here
23:26 - uh one i have a course with o'reilly on
23:28 - docker
23:30 - and then if you're
23:32 - building out something small scale you
23:33 - want to use docker swarm maybe docker
23:35 - cloud
23:36 - if you're building out something medium
23:38 - scale
23:39 - what would normally be what say 12
23:41 - servers if you weren't using docker
23:43 - ranchers a great easy solution for
23:46 - running kubernetes without having to
23:48 - worry about running kubernetes
23:51 - and then docker data center universal
23:52 - control plane are good if you're more
23:54 - enterprise level
23:56 - which is good and then if you're doing
23:57 - stuff big scale kubernetes or mesos are
24:00 - really the two things to use with
24:02 - kubernetes really being the one to use
24:05 - so if you learn docker with kubernetes
24:08 - that's that's a great skill set for
24:10 - devops these days lots of demand at all
24:13 - sorts of companies so huh there's deep
24:16 - breath
24:16 - that's what it takes to be a software
24:19 - engineer web developer these days
24:21 - obviously so much more always you could
24:23 - talk about this stuff for hours but
24:25 - that's what you want to know that you
24:27 - you learn these things you're going to
24:28 - be in demand you're going to get jobs
24:29 - and you're going to have a lot of fun
24:31 - working with fun high-tech
24:33 - solutions so hope you enjoyed this video
24:35 - leave a comment tell me what you
24:37 - any questions you have on any of the
24:39 - stuff that i covered and have yourselves
24:41 - a great day

Cleaned transcript:

hey everybody this is my absolute favorite video of the year every year it's the video of uh where i really cover what does it take to be a great web developer this year i mean it covers the basics for people getting into web development what do you need to learn in in what order do you need to learn it and it also covers for people who are currently front end or back end engineers or devops engineers what do you need to learn this year to keep your skill set really current so i'm excited about it uh there's three things i want to cover real quick up front one the link to this mind map right here on koggle is in the description so that way everything that's blue is a link to a video that i have or a course that i have or uh some great information on the web so you'll want to click on that once you watch this when you're actually learning all these things because i have a lot of videos covered already as you can see also there's some links in the description to the different areas so you can jump straight to an area of your expertise if you're already say a frontend engineer and lastly all the opinions on here are my own absolutely none of them are bought and paid for i do not recommend anything on here because someone gives me money to do so that's very very important to mention i do have one link that's an affiliate link but it's on there i've been recommending them for a long time anyway and i'll tell you what that link is so let's begin um you want to become a web developer in 2018 what does this landscape look like well you're going to learn basic front end development and then you're going to become either a frontend engineer which is this road up here which i'll show you or you're going to become a backend engineer and you can actually learn both and become what's called a fullstack engineer if i were to give you my recommendation i would say learn basic front end you have to do this anyway you need to start with learning basic front end then become a javascript slash front end engineer and then become a full stack javascript engineer and then learn other backend languages i'll go into more of that detail later on as we go along but that's my recommended path in 2018 for what's going to be the best for you the best for your job opportunities and all that so if you're learning today you want to become a web developer in 2018 this is what you need to do start off by clicking on this link and learning basic html it's really easy to learn you're going to learn html css and basic javascript so html is content for a web page every webpage you go to is made in html it's basic content without css which is style cascading style sheets which is what that stands for you're just going to be able to create ugly ugly ugly content so then as soon as you learn the real basics of html which you can get comfortable in in just a few hours then you're going to start learning css you want to start making that content look pretty and beautiful so you're going to start by learning the basics of css then you're going to learn how to do layouts you're going to use grid mostly grid and flexbox these days then you want to learn how to do responsive design responsive means that that same html will look different and display different on an iphone than it will on a big old desktop computer that's called responsive and then responsive images and css animation you honestly probably don't have to learn too much in css animation for the basics but that's kind of your basic css skill set and so again you learn basic html then learn css and the rest of html together as you go so once you have those down then you're going to start learning basic javascript now javascript is the function to a web page so say on twitter you go and add a new tweet it shows up in your timeline right away it just appears on the page that's javascript to doing all those smarts let's say you reply to a tweet and then it somehow goes and notifies everybody else's phones well javascript is telling that web page hey send out this new tweet that's the function javascript is also a programming language so this is where you start to learn basic programming and here's kind of the things you'll want to learn on here i won't go through really what they are you can learn them as you go jquery is on here you don't really need to learn jquery anymore but i put it on the list because the skill sets there are jobs for just this skill set here and they tend to know html css and oftentimes those companies will use jquery so it's a decent thing to familiarize yourself with while you're at this stage i call this the website developer stage you can create websites but you can't necessarily create web apps like you couldn't go create twitter but you do know how to create like a brochure site you know it has flat information maybe for a small business or restaurant or something so this is a skill set you can start getting work for you can start making money uh maybe even get a fulltime job and then as you go down one of these two paths then you can really become a career web developer so that's basic front end that's what it takes to do basic front end in 2018 so then as you pick a path again i recommend this path first and then back end but as you pick a path you're going to want to learn this todo list as you go you don't have to learn it all overnight um but you do want to learn them as you're going this is kind of just like a learning list for you so by the time you become a full front end engineer you'll kind of learn these things you want to learn how to use the terminal you don't have to master it but you do want to feel comfortable there if you're not comfortable in the terminal in the console you will start being held back as you go deeper so terminal something you want to lose you'll want to learn it's a little intimidating at first but you pick it up really quickly then you're going to want to learn basic ssh and then how to put files onto a web server with ssh then you're going to learn github github is how the world tends to store their code as a standard professional developers tend to use git and they tend to use github with git then you're going to learn how client which is like a web page and the servers talk to each other there's two videos i put on this link that are really really helpful for people getting into web development it's things that are very difficult to know what you don't know and that took me years to kind of pick up on that i've compiled into two pretty short videos that i really wish someone would have told me when i was starting out learn what a restful web service is that's kind of something that you'll need to learn as you become a front end or back end engineer how you can kind of talk client to server and then you want to learn domain name and dns basics um just a little bit more about what an a record is what a c name record is stuff like that um and then lastly i guess i failed to mention the first time you want to be able to publish your html css and basic javascript to a website that's really important i recommend hostgator for this i've been recommending them for a long time so i finally did get an affiliate coupon code with them so if you do click this link or use this code i may make a buck off of it so that is the one link on here that i will mention is an affiliate link so don't use it if you don't want to there's these drop 25 percent and drop 10 bucks codes but let's make a deal i think can give you somewhere around 30 to 40 lots of the time so that is again that is my coupon code use it to your own peril and so you want to learn basically how to set up a website that's the easiest place to do it when you don't know what you're doing is hostgator they're also one of the cheapest out there and then you want to learn how to put your html css and javascript on that website so that's basic front end um once you've got that and you're becoming a frontend developer uh here's kind of the things you want to learn this looks intimidating this is not very intimidating in reality um just give me about one minute to explain why here so you basically want to learn four things when you're becoming a frontend developer also known as a frontend engineer or a web developer or a javascript engineer or a react developer or view developer those are kind of the job titles you'll be searching for when you know these things you're going to upgrade your css skills you're going to upgrade your javascript skills become a little bit more confident as a programmer you're going to learn some build tools and you're going to learn one or more javascript frameworks things like this you can learn in more or less a day and then master in a week same with a lot of things up here you can learn so many of these things on this list in a day at the most a week this is going to be where most of your learning is going to take place in learning one of these frameworks so it's really not that big of a deal so css tools and skills these have been around for years nothing's really changed here sas lesser stylus are the precompilers you want to use they just add extra functionality to css when it comes to a css framework if you know css grid you might not need a framework anymore being that you do need a framework bootstrap or materialize are kind of the two coolest ones these days i've not gotten a lot of chance with the brand new bootstrap before i need to learn that and do a video on that because it does it's based on css grid so it's kind of cool and then css organization is something that that's useful in a lot of arenas basically the methodologies for what you name classes and what you call your css things when you're developing them uh those are kind of the three popular css organization methodologies that you want to learn again super easy to learn and then you'll want to learn a frontend build tool you want to be able to take all your css and compile it up and build it up npm scripts are a great way to do that i cover those in my node.js course webpack is the number one tool to use there used to be grunt and gulp and webpack but honestly you just kind of want to learn webpack these days if you're going to learn one other one you could learn gulp but webpack is really just the one to know and then here's a really good document from i believe mozilla on front end performance and and how to learn the areas to make sure your front end website is performant and put together really smart um so then once you learn that uh let's go to javascript frameworks this is really the biggest thing you want to learn to become a frontend engineer frontend developer is you want to learn how to program well using a framework now the one to know in 2018 is react js if you're going to learn one learn react boom that is it react and vue are the two that i would tell you to learn in 2018 angular and ember are still out there with some jobs but not a lot of new applications are being built in angular and ember so i would say honestly don't even worry about those unless you have some spare time and you want to maybe familiarize yourself with angular because there's a decent bit of angular job still out there react and view are the two things to know and so if i was going to build a brand new web app today if it was small like a single module i'd do it in view just view just drop view on the page you'll have your module done it's going to be fast it's going to be easy view is really great and then as the app grows i'm going to use maybe view with view this right here view or next if it's going to be a larger view app but honestly personal opinion once it starts getting into larger apps i'm going to absolutely use react just because if nothing else the community solutions and help content available react is awesome react or vue can handle big apps really well but react is the one to pick these days um so what do you do with react um if i was doing react relay or apollo if you're gonna use graphql graphql is a really cool alternative to rest that's definitely something you want to familiarize yourself with these days apollo is probably my favorite i prefer apollo over relay and then next js or after js or if you want to do server side rendered apps those are really good to look into and then managing css and react glamorous emotion or styled components are kind of duking it out for who's the best honestly they're all going to get the job done well each has their advantages and disadvantages but anyway no no real preference there overall just kind of take a quick glance at all of them but that's how you're going to manage your css inside of react and then you also want to look into state management so this applies to multiple different frameworks so with react you don't want to keep all your data in the react application you want to keep all your data in mobx or redux and my preference would be use modbx for smaller applications and if they get bigger and complicated and start to to get a little shaky with how complex you're doing things with data use redux at that point but lots of people default to redux these days and you shouldn't you should default to mob x because it's way simpler you're going to get more work done in the day and you're going to enjoy your developer life more because there's a lot of ceremony to building applications with redux and if you don't need that to solve complexity code with mobx if you're in the react ecosystem you'll know what i mean flux is good to know because that's kind of where these two came from but you don't really need to use flux these days i mean rxjs and bacon.js are very fun for learning functional programming kind of up here and you can actually use a lot of those methodologies in your other apps as well and then you want to learn unit testing how do i test my react.js application how do i write tests that can run against that app jest is definitely the one to use these days mocha is also really really good and has been around for quite a while but just is the one i would definitely go to right off the bat so that's kind of your javascript framework ecosystem of 2018 not a lot has changed there's just maturity coming and vue is getting a lot more popular some other fun things you can learn nah really the only one that's required on here is es6 if you do not know es6 you're going to start feeling pretty out of date in 2018 it's definitely something you need to know which is technically es 2015 es 2016 es 2017 those are those the ones you want to know static type checkers are good to know but you don't have to know these they're really really easy to implement and functional programming javascript is definitely something you should kind of walk yourself through at some point as well you don't need to learn it right away so that's the front end skill set your javascript engineer javascript developer at this point um although if you see a job for javascript engineer lots of times that can mean backend javascript as well so be aware of that all these other jobs are for sure you know this skill set that i laid out here so you've learned basic html you're front end developer front end engineer at this point i would say the next step you should do in your learning process is learn node.js so you're full stack javascript developer so you're going to go to back end now and you're going to start really learning how to build out the server side of those applications you've been building in javascript and absolutely if you're going to pick one backend language these days pick nodejs it's one of the easiest and fastest to learn if you already know javascript it's going to feel really really natural node.js with express js is totally the thing to do these days you're not going to go wrong with it also i have an ojs course because i absolutely believe in it so much compiled a lot of great knowledge into uh not just node.js but what it means to be a backend engineer so if you're new to backend engineering um if you've been in this world for a while this node.js course is going to be really really good for you a lot of key software engineering concepts for the back end are in here the job titles that you're going to end up looking for in the back end maybe backend engineer back in developer they're the same thing full stack engineer full stack developer full stack usually means you know at least react or vue or angular or something uh and then it might just be called a software developer and but honestly most often it's going to be the language you know so you're you're looking for no js developer job node.js engineer job a ruby job or a net job uh they might also be called a platform engineer or a dba if you're just databases what i clicked on something what did that do okay but dbas are people who just love and live and breathe databases and i don't quite understand those people but they're very valuable so dba is something else that's out there so these are all kind of the popular languages and honestly there's many many more so many backend languages so what i'd say is start with node.js don't learn these ones for now don't learn any of the other scripting languages if you know node.js instead learn a scripting language and then to expand your horizons learn maybe a functional language a highperformance language um notable others we'll get to that in a second so if i were if i were to say what language is plural should i learn node.js first from there i would do golang and then from there i would do closure if i'm just going to give you my opinion learn that first learn that second learn that third there's all sorts of great stuff out there that's that pays well that has lots of job opportunity but these are going to be the ones that i think are going to set you up for success the best in 2018. um java and csharp.net are on here because there's a lot of jobs for that but um these worlds are are interesting java's been around for a long time and i don't recommend people to learn these at n at least not early on because you might get bad practices you might get a bad way of doing things or you might get an amazing way of doing things they're just a really mixed bag in these two ecosystems so i say don't learn those right off um you can look at them later on and then you maybe have more opinion there's there's a lot of bad java out there and there's a lot of bad.net out there and then there's a lot of good as well so that's that's why i don't ever recommend those to people who are learning um one cool thing to learn is serverless and aws lambda that's a really really cool thing to learn these days it's very very useful to know i mean it's a lot of fun to look into serverless architectures so what you do i did it again i zoomed in or something so what you do when you're learning a new language is you're going to say i'm learning node.js you're going to learn basically these things with the language you're going to look up uh what do they use for package management what do they use for unit functional testing so and it's easy to find on google you know functional testing with javascript functional testing with golang unit testing with golang you know unit functional testing with closure you basically can google all of these things here you want to learn how do you build a restful api how do you build a graphql api what are some security best practices all these things these are the things you will want to learn for each language and honestly the most difficult thing when you're learning a new backend programming language is not so much the language itself it's oftentimes the ecosystem it's knowing what is considered standard uh so like what is the most popular node.js package for working with a mysql database uh what's the most popular one for working with another database you know how do node.js engineers tend to set up their projects these are things that just take a while of getting involved in the community to learn how that works so you tend to feel like a fish out of water for the first couple weeks learning a new backend language but once you kind of learn the standard ways of of doing things it really you really start to feel at home quickly and then you also want to learn these databases you want to learn these databases how to connect to them and interact with them for each language you do you'll also want to know how to set them up so start up here learn my sequel that's totally the easiest and best way to start postgres is in many ways very very similar to mysql so if you know one you in many ways know the other so you want to learn relational databases and then you want to learn a nosql database that's kind of these two lines here redis you tend to use for caching and for you know keeping track of users sessions interacting with your application uh cassandra can also be used for that cassandra also finds its home on this line down here document databases search engine databases elasticsearch and solar are the most popular graph databases are a very cool kind of newer thing they've been around for a little while but they're getting more popular these days neo4j orient db there's there's several others but those are two very cool ones to look at um and then message brokers it's kind of a a different way that applications can communicate with each other aside from making either restful or graphql api requests they can communicate over messaging bus this is especially useful over really large and complex applications so rabbitmq 0mq and kafka are three very popular message brokers so if you know all those things in one or two languages i mean you're doing good if you know all these things in one language you're doing good that's kind of the back end developer skill set for 2018 so if you're really confident as a backend developer another area you can look into is devops which i've covered in the past as well this is kind of like back end developer 2.0 slash a really niche area of being a backend developer where you're just really really good at deploying and helping teams deploy applications in a professional way so to be a devops engineer you need to know some infrastructure platforms aws is probably the best one to learn if you're just going to learn one learn aws it's going to put you in the most demand and it's going to pay the best azure google cloud really good digitalocean is great for simpler smaller infrastructures simpler smaller companies then you're going to want to learn how to do server management also called cm or configuration management the number one thing you've got to learn these days is docker and then ansible is a good thing to learn as well there's salt puppet and chef puppet and chef tend to be used on more enterprise level size of things but they're good to know but if you learn docker and ansible you've got a cool skill set as well and those are those are totally the ways to do it so docker's basically going to help you package up an application into a container that you can just put all over the place you can run that same container here or here or here or here or on 20 servers on one server docker is awesome you need to know docker honestly even if you're a backend engineer you should know docker these days it's very very important um and then ci pipelines continuous integration continuous deployment making apps deploy as you merge code to github really cool solutions for that circle ci and code ship those are ones that are hosted you know you pay monthly and they take care of it all for you or you can install stuff on your own servers and infrastructure jenkins is probably the most popular but the oldest drone ci is a lot of fun but the least feature full it's docker native so it's it's really lightweight in the way it runs i like drone it's a lot of fun get lab is also a very cool solution that's that's very allencompassing so your whole company either uses git lab or they don't tends to be how it works um and then when you learn docker uh docker's really settled in the last couple years so docker used to have all this change and traction and stuff going on and it's really settled into some stability here uh one i have a course with o'reilly on docker and then if you're building out something small scale you want to use docker swarm maybe docker cloud if you're building out something medium scale what would normally be what say 12 servers if you weren't using docker ranchers a great easy solution for running kubernetes without having to worry about running kubernetes and then docker data center universal control plane are good if you're more enterprise level which is good and then if you're doing stuff big scale kubernetes or mesos are really the two things to use with kubernetes really being the one to use so if you learn docker with kubernetes that's that's a great skill set for devops these days lots of demand at all sorts of companies so huh there's deep breath that's what it takes to be a software engineer web developer these days obviously so much more always you could talk about this stuff for hours but that's what you want to know that you you learn these things you're going to be in demand you're going to get jobs and you're going to have a lot of fun working with fun hightech solutions so hope you enjoyed this video leave a comment tell me what you any questions you have on any of the stuff that i covered and have yourselves a great day
