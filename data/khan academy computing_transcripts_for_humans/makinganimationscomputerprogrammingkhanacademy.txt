With timestamps:

00:00 - - [Voiceover] Let's turn a
drawing into an animation.
00:03 - I've created this program which
00:05 - draws a red car against a bright blue sky.
00:09 - I have one variable in this program, 'x.'
00:12 - And I start that variable at 10.
00:16 - 'x' stands for the the
x position of the car,
00:19 - and I use it when I draw the
car body, these two rectangles.
00:23 - I also use it when I draw the car wheels,
00:25 - these two ellipses.
00:28 - So, let's see what
happens when I change 'x.'
00:32 - Oh, the car is moving across the screen.
00:35 - (makes triumphant vocal music sounds)
00:37 - But it's not really an animation.
00:40 - It would only be an
animation if the car moved
00:43 - without me having to change the code.
00:47 - It'd be an animation if
anybody could see our program,
00:50 - not have to change the
code, and they would just
00:52 - see the car move in front of them.
00:56 - So how do we really
make this an animation?
01:00 - Well, we need to somehow get
this programming environment
01:02 - to make new drawings many times a second.
01:05 - And for those drawings to have
01:06 - a different 'x' value each time.
01:10 - I'll show you how we can do that.
01:13 - At the bottom of my program,
I'm going to type 'draw ='
01:17 - And then it auto-completed
the rest for me.
01:21 - You probably haven't
seen this syntax before.
01:25 - This is a function definition.
01:28 - And we're going to go deep into that
01:30 - in the functions tutorial later.
01:32 - But basically, a function makes it easy
01:35 - for us to group a bunch of code together
01:38 - so that the program knows to
run all that code together.
01:42 - So we're going to end up
01:43 - putting multiple lines
of code inside here.
01:47 - The 'draw' function is a special function.
01:50 - So we define a function
called 'draw' in our program,
01:54 - the programming environment,
on Khan Academy,
01:57 - will then run the code
inside 'draw' repeatedly.
02:01 - Many times a second.
02:04 - So all lines of code inside here
02:07 - will be run repeatedly.
02:11 - Everything that's not inside
this function, so all of this,
02:15 - will only get run once when
the program first loads.
02:20 - So we want to get our car
code inside of this function.
02:26 - I'm going to select all of it, and cut it.
02:29 - Paste it in here.
02:31 - Then I'm going to indent it so that it
02:33 - really looks like it's inside the function
02:36 - in between these curly braces here.
02:40 - Alright, now everything looks
the same as it was before.
02:46 - Well, it looks the same.
It actually isn't the same.
02:49 - We are now actually having our car drawing
02:52 - drawn over and over many time a second.
02:55 - But it looks the same because it's always
02:57 - getting drawn in the same spot.
03:02 - Right? Because 'x' is 281.
03:05 - And that 'x' gets fed into
this 'rect' in these ellipses.
03:09 - And the 'x' stays 281 every single time.
03:12 - So that car is not going to move.
03:15 - It's just going to stay there.
03:17 - We want the car to be in
a new spot every time.
03:21 - Conceptually, we want to be
able to tell the program,
03:24 - "Let's start the car's 'x' position at 10,
03:28 - "and then add one to that position
03:30 - "in every drawing of the animation."
03:33 - To do that, I'm going
to move the 'x' variable
03:36 - outside of the draw function, up here.
03:40 - Set it back to 10.
03:42 - Now, since this is outside
the 'draw' function,
03:45 - this line of code will get run once
03:47 - at the beginning of the
program, setting 'x' to 10.
03:52 - Now, inside 'draw' at the very end,
03:55 - I'll add a line of code to
add one to that variable.
03:59 - 'x = x + 1'
04:02 - Ha ha! It's moving!
04:04 - Alright. It's a little smeary.
04:06 - So it looks more like paint than a car.
04:09 - The reason it's smearing is because
04:11 - we're telling the program
to redraw the car each time,
04:15 - but it's redrawing it on
top of the car from before,
04:18 - because it's sill there.
04:20 - If we want the program to
erase the car from before,
04:24 - then what we can do is
take the 'background' call
04:27 - and move it inside of 'draw.'
04:30 - Let me just press
restart, and there you go.
04:33 - A car going across a screen.
04:35 - Ha ha.
04:38 - What if I wanted a faster car?
04:41 - In that case I could just
add more, more to 'x.'
04:45 - Like if I want it to jump
by 10 pixels every time.
04:48 - Just restart. Woo-hoo!
04:49 - Zoomy, zoomy, zoomy!
04:51 - I could even, I could make it negative
04:53 - and make it go in reverse.
04:55 - So let's try that.
04:56 - Oh! There is went.
04:58 - Off the screen.
04:59 - So, as you can see, I can change the way
05:03 - that I'm modifying the 'x' each time
05:06 - to make the car change, you know
05:09 - the drawings of the car change differently
05:11 - in each frame of the animation.
05:14 - So, I did that quickly.
05:15 - Let's review how this program works.
05:18 - At the beginning, outside
of the 'draw' function,
05:21 - I declare my variable, and I set it to 10.
05:26 - I then define the 'draw' function,
05:29 - and I put a bunch of
drawing code inside of it.
05:32 - At the end of the function,
I add some amount to 'x.'
05:38 - And when the programming environemnt
05:39 - sees that I define the 'draw' function,
05:42 - it knows that it should run
the code inside the function
05:45 - over and over many times a second.
05:48 - That is how we do animations
05:50 - in the processing JS
environment on Khan Academy.
05:55 - Now, you'll get a chance to try
05:56 - animating a drawing yourself.
05:59 - Ready, set, animate!

Cleaned transcript:

[Voiceover] Let's turn a drawing into an animation. I've created this program which draws a red car against a bright blue sky. I have one variable in this program, 'x.' And I start that variable at 10. 'x' stands for the the x position of the car, and I use it when I draw the car body, these two rectangles. I also use it when I draw the car wheels, these two ellipses. So, let's see what happens when I change 'x.' Oh, the car is moving across the screen. (makes triumphant vocal music sounds) But it's not really an animation. It would only be an animation if the car moved without me having to change the code. It'd be an animation if anybody could see our program, not have to change the code, and they would just see the car move in front of them. So how do we really make this an animation? Well, we need to somehow get this programming environment to make new drawings many times a second. And for those drawings to have a different 'x' value each time. I'll show you how we can do that. At the bottom of my program, I'm going to type 'draw =' And then it autocompleted the rest for me. You probably haven't seen this syntax before. This is a function definition. And we're going to go deep into that in the functions tutorial later. But basically, a function makes it easy for us to group a bunch of code together so that the program knows to run all that code together. So we're going to end up putting multiple lines of code inside here. The 'draw' function is a special function. So we define a function called 'draw' in our program, the programming environment, on Khan Academy, will then run the code inside 'draw' repeatedly. Many times a second. So all lines of code inside here will be run repeatedly. Everything that's not inside this function, so all of this, will only get run once when the program first loads. So we want to get our car code inside of this function. I'm going to select all of it, and cut it. Paste it in here. Then I'm going to indent it so that it really looks like it's inside the function in between these curly braces here. Alright, now everything looks the same as it was before. Well, it looks the same. It actually isn't the same. We are now actually having our car drawing drawn over and over many time a second. But it looks the same because it's always getting drawn in the same spot. Right? Because 'x' is 281. And that 'x' gets fed into this 'rect' in these ellipses. And the 'x' stays 281 every single time. So that car is not going to move. It's just going to stay there. We want the car to be in a new spot every time. Conceptually, we want to be able to tell the program, "Let's start the car's 'x' position at 10, "and then add one to that position "in every drawing of the animation." To do that, I'm going to move the 'x' variable outside of the draw function, up here. Set it back to 10. Now, since this is outside the 'draw' function, this line of code will get run once at the beginning of the program, setting 'x' to 10. Now, inside 'draw' at the very end, I'll add a line of code to add one to that variable. 'x = x + 1' Ha ha! It's moving! Alright. It's a little smeary. So it looks more like paint than a car. The reason it's smearing is because we're telling the program to redraw the car each time, but it's redrawing it on top of the car from before, because it's sill there. If we want the program to erase the car from before, then what we can do is take the 'background' call and move it inside of 'draw.' Let me just press restart, and there you go. A car going across a screen. Ha ha. What if I wanted a faster car? In that case I could just add more, more to 'x.' Like if I want it to jump by 10 pixels every time. Just restart. Woohoo! Zoomy, zoomy, zoomy! I could even, I could make it negative and make it go in reverse. So let's try that. Oh! There is went. Off the screen. So, as you can see, I can change the way that I'm modifying the 'x' each time to make the car change, you know the drawings of the car change differently in each frame of the animation. So, I did that quickly. Let's review how this program works. At the beginning, outside of the 'draw' function, I declare my variable, and I set it to 10. I then define the 'draw' function, and I put a bunch of drawing code inside of it. At the end of the function, I add some amount to 'x.' And when the programming environemnt sees that I define the 'draw' function, it knows that it should run the code inside the function over and over many times a second. That is how we do animations in the processing JS environment on Khan Academy. Now, you'll get a chance to try animating a drawing yourself. Ready, set, animate!
