With timestamps:

00:00 - - [Voiceover] Let's review
what we already know,
00:02 - the 'ellipse' function.
00:04 - I have four ellipses drawing a face.
00:07 - If I want to change
something about this face,
00:09 - like make the mouth open wide,
00:12 - then I just need to find the
right number and change it.
00:15 - Let's see, the mouth
is the second 'ellipse'
00:18 - and the width is the third parameter,
00:21 - so I'll just increase this.
00:23 - There we go. Nice and wide.
00:25 - Okay. So we understand ellipses.
00:28 - What else can we make?
00:31 - Well, we can make rectangles
00:33 - using the 'rect' function,
00:36 - another command that our
programs here know how to obey.
00:40 - Here, I will draw a little neck for a face
00:44 - and I already know some
good numbers for it.
00:46 - There we go.
00:48 - Just like 'ellipse', the 'rect' function
00:51 - takes four parameters and
they're pretty similar.
00:55 - The first parameter is x,
the second parameter is y,
00:58 - the third parameter is width,
01:00 - and the fourth parameter is height.
01:03 - But the parameters don't
work quite the same way
01:05 - as they do for ellipses.
01:08 - Let me show you what I mean,
01:09 - by turning this human
face into a robot face,
01:13 - which means turning all these
ellipses into rectangles.
01:17 - I will start with the top one
01:19 - and just type 'rect' instead of 'ellipse',
01:22 - keeping the numbers the same.
01:24 - Woah!
01:25 - Okay, the rectangle's
half way down the page,
01:28 - even though it had the same
parameters as the 'ellipse'.
01:32 - Why is that?
01:33 - Well, the x and y parameters
of the 'rect' function
01:38 - actually control the upper
left corner of the rectangle,
01:41 - not the center.
01:43 - So this rectangle now starts
01:45 - at what used to be the center of the face.
01:49 - So that means I need to do some adjusting
01:52 - of the x and y.
01:53 - I'll just decrease the x
01:57 - and then decrease the y.
02:00 - There we go. That's pretty good.
02:02 - Now I'll change the rest
of these rectangles,
02:05 - change the rest of these
into rectangles too.
02:08 - So this one like this. Just move it over.
02:13 - And as you see, it's totally okay to
02:16 - not have numbers perfect on the first try.
02:19 - You can come up with some numbers,
02:21 - try them out, see if you like 'em,
02:24 - keep changing them 'til they look good.
02:27 - And if you have any graph paper handy,
02:29 - you could actually draw out your drawings
02:31 - on graph paper first, which I think
02:34 - is really handy for
getting the right numbers.
02:39 - And just gonna move this over there.
02:43 - All right! Looking good!
02:45 - So I'm liking this robot
but I don't like the fact
02:48 - that there's so many rectangles
02:51 - and I'm having a hard time remembering
02:53 - which of these rectangles
draw which part of the face.
02:57 - To help me, I'm going to add something
03:00 - called a 'comment'.
03:02 - A 'comment' always starts with two slashes
03:05 - and after it is a bit
of text to help humans
03:08 - understand what the code does.
03:11 - So this draws the face,
03:14 - this draws the mouth,
03:16 - this is a left eye,
03:19 - right eye,
03:21 - and the neck.
03:24 - Okay. Great, now this code makes sense.
03:27 - Let me show you one more shape, a 'line',
03:30 - which I will use to draw a
unibrow over the robot's eyes.
03:36 - I'll start by typing
'line' and once again,
03:39 - I need to type in four parameters.
03:42 - The first two parameters are
the start point of the line.
03:45 - I'll start it where the left eye starts.
03:48 - 140, 150.
03:51 - Okay.
03:52 - Now you might think
the next two parameters
03:54 - are the width and height?
03:55 - But actually, lines don't
have width and height.
03:57 - Lines have start points and end points.
04:00 - So the last two parameters
will tell the program
04:03 - where the line should end.
04:05 - I want the unibrow to end
where the right eye ends.
04:09 - So that would be 240 plus 30,
04:13 - 270, okay?
04:16 - And I want this unibrow to
be a straight line across.
04:19 - So I'll use the same y
coordinate for the start
04:23 - and the end point, 150.
04:25 - Let's try it out. There we go!
04:27 - Looking good!
04:28 - But also looking a little bit mean,
04:31 - like, I get uncomfortable
around mean robots
04:34 - 'cause I worry they'll, you
know, take over the world
04:36 - or whatever mean robots do.
04:38 - So we're just gonna get a little happier.
04:40 - There we go. Okay.
04:42 - Now let me show you one more
thing about drawing shapes.
04:45 - Do you see how our function
calls are ordered in the editor?
04:50 - The first one is 'rect'
and the last one is 'line'.
04:53 - That order is actually very important
04:56 - because that's the order that our program
04:58 - will run the code and draw the shapes.
05:01 - Watch what happens if I cut and move
05:05 - the mouth command so
that it's above the face.
05:10 - It's gone! It's disappeared.
05:12 - Or at least looks like it disappeared.
05:14 - What actually happens is that
the program draws the mouth
05:17 - but then draws the face on top of it.
05:20 - So we can't see our mouth anymore.
05:22 - Keep this in mind as
you make your drawings
05:24 - because you'll probably want shapes
05:25 - to be drawn in a certain
order on top of each other.
05:28 - And if you can't find
a shape you've drawn,
05:31 - you might discover it's hiding
underneath another shape.
05:34 - Since you probably don't have
x-ray vision to see that,
05:37 - one thing you can do is
just rearrange your code
05:40 - to figure it out.
05:41 - And now we have our mouth back.
05:43 - Okay, so we covered a lot in this lesson,
05:46 - but stick with it, keep exploring,
05:49 - and you'll get the hang of it soon.

Cleaned transcript:

[Voiceover] Let's review what we already know, the 'ellipse' function. I have four ellipses drawing a face. If I want to change something about this face, like make the mouth open wide, then I just need to find the right number and change it. Let's see, the mouth is the second 'ellipse' and the width is the third parameter, so I'll just increase this. There we go. Nice and wide. Okay. So we understand ellipses. What else can we make? Well, we can make rectangles using the 'rect' function, another command that our programs here know how to obey. Here, I will draw a little neck for a face and I already know some good numbers for it. There we go. Just like 'ellipse', the 'rect' function takes four parameters and they're pretty similar. The first parameter is x, the second parameter is y, the third parameter is width, and the fourth parameter is height. But the parameters don't work quite the same way as they do for ellipses. Let me show you what I mean, by turning this human face into a robot face, which means turning all these ellipses into rectangles. I will start with the top one and just type 'rect' instead of 'ellipse', keeping the numbers the same. Woah! Okay, the rectangle's half way down the page, even though it had the same parameters as the 'ellipse'. Why is that? Well, the x and y parameters of the 'rect' function actually control the upper left corner of the rectangle, not the center. So this rectangle now starts at what used to be the center of the face. So that means I need to do some adjusting of the x and y. I'll just decrease the x and then decrease the y. There we go. That's pretty good. Now I'll change the rest of these rectangles, change the rest of these into rectangles too. So this one like this. Just move it over. And as you see, it's totally okay to not have numbers perfect on the first try. You can come up with some numbers, try them out, see if you like 'em, keep changing them 'til they look good. And if you have any graph paper handy, you could actually draw out your drawings on graph paper first, which I think is really handy for getting the right numbers. And just gonna move this over there. All right! Looking good! So I'm liking this robot but I don't like the fact that there's so many rectangles and I'm having a hard time remembering which of these rectangles draw which part of the face. To help me, I'm going to add something called a 'comment'. A 'comment' always starts with two slashes and after it is a bit of text to help humans understand what the code does. So this draws the face, this draws the mouth, this is a left eye, right eye, and the neck. Okay. Great, now this code makes sense. Let me show you one more shape, a 'line', which I will use to draw a unibrow over the robot's eyes. I'll start by typing 'line' and once again, I need to type in four parameters. The first two parameters are the start point of the line. I'll start it where the left eye starts. 140, 150. Okay. Now you might think the next two parameters are the width and height? But actually, lines don't have width and height. Lines have start points and end points. So the last two parameters will tell the program where the line should end. I want the unibrow to end where the right eye ends. So that would be 240 plus 30, 270, okay? And I want this unibrow to be a straight line across. So I'll use the same y coordinate for the start and the end point, 150. Let's try it out. There we go! Looking good! But also looking a little bit mean, like, I get uncomfortable around mean robots 'cause I worry they'll, you know, take over the world or whatever mean robots do. So we're just gonna get a little happier. There we go. Okay. Now let me show you one more thing about drawing shapes. Do you see how our function calls are ordered in the editor? The first one is 'rect' and the last one is 'line'. That order is actually very important because that's the order that our program will run the code and draw the shapes. Watch what happens if I cut and move the mouth command so that it's above the face. It's gone! It's disappeared. Or at least looks like it disappeared. What actually happens is that the program draws the mouth but then draws the face on top of it. So we can't see our mouth anymore. Keep this in mind as you make your drawings because you'll probably want shapes to be drawn in a certain order on top of each other. And if you can't find a shape you've drawn, you might discover it's hiding underneath another shape. Since you probably don't have xray vision to see that, one thing you can do is just rearrange your code to figure it out. And now we have our mouth back. Okay, so we covered a lot in this lesson, but stick with it, keep exploring, and you'll get the hang of it soon.
