With timestamps:

00:00 - Voiceover: Congratulations!
00:01 - You now understand the
JavaScript language.
00:04 - Variables, loops, strings,
functions, objects,
00:06 - arrays, even object-oriented design.
00:09 - But what good is a language if you can't
00:11 - make something cool with it?
00:13 - There are lots of ways you can use your
00:15 - new knowledge, but one of the most popular
00:16 - ways to use JavaScript with Processing.js
00:19 - is to make games and visualizations,
00:21 - which you probably know,
if you've ever looked
00:23 - at our hot programs list.
00:24 - A game is something interactive,
00:27 - where you get some reward.
00:28 - There is usually a win
state, a lose state, a score.
00:31 - A visualization is also
highly interactive,
00:35 - but without the game mechanics.
00:37 - Let's look at some of the common
00:38 - components we'll need.
00:40 - We'll need UI controls
for anything we're doing.
00:43 - Like buttons, and sliders, and menus.
00:47 - And some of these will be simple buttons,
00:49 - other times we'll need multiple buttons,
00:51 - other times we'll need
sliders, and drop-downs, and
00:53 - it all builds upon the same
basic principles, though.
00:57 - Besides interaction with
a mouse, we'll also want
00:59 - keyboard control, like
being able to use the arrows
01:02 - to move our characters up and down, or to
01:05 - change the angle of our visualization.
01:07 - We often also want the notion of scenes.
01:10 - A scene is like your
start screen, and your
01:12 - options screen, and your main screen,
01:14 - and your end screen.
01:16 - And they're usually very different,
01:17 - and at any given point
we want to be showing
01:19 - one of them or the other,
so you have to really
01:21 - organize your code in order to know
01:23 - the difference between
the scenes, and have
01:24 - a good way of switching between them.
01:27 - And now let's talk about a few things
01:28 - specific to games.
01:30 - The environment of a game.
01:32 - Is it a side-scroller,
which means it's kinda
01:34 - a character moving
forward through a space?
01:38 - Is it a bird's eye view, like going
01:41 - through a maze?
01:43 - Is it a 3D environment?
01:44 - It's crazy, but you can do it.
01:46 - Are there multiple levels, and each
01:47 - of them have different environments?
01:50 - What are the characters in the game?
01:52 - They'll probably have different behaviors,
01:53 - and emotions, and states, like a
01:55 - happy state and a dead state.
01:57 - And they'll might be user controlled or
02:00 - sometimes they'll be
programatically controlled.
02:03 - And your program gives it some sort of
02:05 - logic to follow.
02:06 - There could be one of them,
02:07 - there could be lots of them.
02:09 - They could get spawned during the game
02:10 - as it's played.
02:12 - Now once we've got characters in an
02:13 - environment, we usually
also add in some items, and
02:16 - then we have a lot of things
colliding with each other.
02:18 - And we usually want to
know when things collide,
02:20 - because things are typically trying to
02:22 - attract each other, or avoid each other,
02:24 - like when you're picking up gems,
02:26 - or avoiding nasty turtles.
02:28 - So we need to be able to detect collision
02:30 - between objects, and
sometimes it's very simple
02:33 - collision, and other
times it's more complex
02:35 - if the objects are all
different shapes and sizes.
02:39 - Finally, if it's a game,
it's usually got a score.
02:41 - So how do you measure how
well the user is doing?
02:44 - When do you tell them
if they've lost or won?
02:46 - How spectacular can you make
02:48 - the win screen or the lose screen?
02:51 - So, as you can see, there
are a lot of aspects
02:52 - to think about when making
games and visualizations.
02:55 - We'll walk through some of them here,
02:57 - but we don't know what's in your head,
02:58 - and most likely, you'll
have to just combine
03:00 - the knowledge you learned here to make
03:02 - whatever really cool thing
is in your head right now.

Cleaned transcript:

Voiceover Congratulations! You now understand the JavaScript language. Variables, loops, strings, functions, objects, arrays, even objectoriented design. But what good is a language if you can't make something cool with it? There are lots of ways you can use your new knowledge, but one of the most popular ways to use JavaScript with Processing.js is to make games and visualizations, which you probably know, if you've ever looked at our hot programs list. A game is something interactive, where you get some reward. There is usually a win state, a lose state, a score. A visualization is also highly interactive, but without the game mechanics. Let's look at some of the common components we'll need. We'll need UI controls for anything we're doing. Like buttons, and sliders, and menus. And some of these will be simple buttons, other times we'll need multiple buttons, other times we'll need sliders, and dropdowns, and it all builds upon the same basic principles, though. Besides interaction with a mouse, we'll also want keyboard control, like being able to use the arrows to move our characters up and down, or to change the angle of our visualization. We often also want the notion of scenes. A scene is like your start screen, and your options screen, and your main screen, and your end screen. And they're usually very different, and at any given point we want to be showing one of them or the other, so you have to really organize your code in order to know the difference between the scenes, and have a good way of switching between them. And now let's talk about a few things specific to games. The environment of a game. Is it a sidescroller, which means it's kinda a character moving forward through a space? Is it a bird's eye view, like going through a maze? Is it a 3D environment? It's crazy, but you can do it. Are there multiple levels, and each of them have different environments? What are the characters in the game? They'll probably have different behaviors, and emotions, and states, like a happy state and a dead state. And they'll might be user controlled or sometimes they'll be programatically controlled. And your program gives it some sort of logic to follow. There could be one of them, there could be lots of them. They could get spawned during the game as it's played. Now once we've got characters in an environment, we usually also add in some items, and then we have a lot of things colliding with each other. And we usually want to know when things collide, because things are typically trying to attract each other, or avoid each other, like when you're picking up gems, or avoiding nasty turtles. So we need to be able to detect collision between objects, and sometimes it's very simple collision, and other times it's more complex if the objects are all different shapes and sizes. Finally, if it's a game, it's usually got a score. So how do you measure how well the user is doing? When do you tell them if they've lost or won? How spectacular can you make the win screen or the lose screen? So, as you can see, there are a lot of aspects to think about when making games and visualizations. We'll walk through some of them here, but we don't know what's in your head, and most likely, you'll have to just combine the knowledge you learned here to make whatever really cool thing is in your head right now.
