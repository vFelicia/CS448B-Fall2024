With timestamps:

00:01 - - [Voiceover] Today I want to talk about
00:02 - making your code easier to read.
00:04 - First let's talk about what it means
00:05 - to make a human language easier to read.
00:08 - The languages that we speak every day
00:09 - have lots of rules, but they also have
00:11 - lots of flexibility,
00:12 - especially when we write them down.
00:14 - Like if I'm being really lazy one day,
00:16 - I could write this.
00:18 - Now you can read that sentence
00:19 - and eventually figure it out,
00:23 - but you have to figure
out where the periods
00:24 - go and it takes time.
00:26 - Now what would happen if
we cleaned it up a bit?
00:29 - Ta-da.
00:31 - Okay, so you agree that
that's a lot easier
00:34 - to understand, right?
00:35 - Now imagine if everybody wrote like
00:37 - this first sentence and we constantly had
00:39 - to read everything multiple times
00:41 - just to figure out how it flowed.
00:43 - It'd be really painful, right?
00:45 - It's the same thing with
programming languages.
00:48 - They have a lot of rules and they're
00:49 - more strict than human languages,
00:51 - but they can also be
written in confusing ways.
00:54 - For example, this code here is valid code
00:58 - and it runs and it's a cool program,
01:00 - but man, it's really
hard to read as a human.
01:04 - So what would you do to
make it easier to read?
01:06 - A few things.
01:08 - The first thing we'd do is we'd move
01:09 - every statement onto its own line.
01:12 - Like this.
01:13 - Now that makes it a little easier to read,
01:15 - but there's still a lot more we can do.
01:17 - So the next thing we want to do
01:18 - is indent the code properly.
01:21 - Now in human languages like English,
01:22 - we indent to help us understand
01:24 - the structure of writing.
01:25 - Like when we indent the first sentence
01:26 - of a paragraph or indent a quote.
01:28 - It's the same thing with code.
01:29 - We indent in order to show
the structure of the code.
01:32 - Let me see.
01:33 - Okay, so let's go through this
01:36 - and see how indentation helps
01:37 - to understand the structure.
01:39 - When we talk about structure,
01:40 - we mean functions, and for, and ifs.
01:42 - So here inside this function you can see
01:45 - that we indent the first statement
01:47 - inside this function
because we want to show
01:49 - that it's inside this function.
01:51 - It's like a child of this function.
01:52 - It's only going to be called
if this function's called.
01:55 - All right.
01:56 - And then we have this for loop
01:58 - and everything inside an for loop
02:00 - is indented twice because
we're trying to show
02:02 - that this is all inside the for loop.
02:04 - It's all shown under the for loop.
02:06 - It's only going to be executed
02:07 - when we go through the for loop.
02:08 - And then finally inside the if,
02:10 - we indent things three times
02:13 - because we're trying to show that they're
02:14 - a child of the if blocks.
02:16 - They're only going to be executed
02:17 - if this if condition is true.
02:20 - So by using indentation,
we can really understand
02:22 - the structure of the program better.
02:24 - Now the cool thing is that your editor
02:26 - will help you with indentation.
02:28 - So if I go and put this on this line
02:31 - and then I just press enter,
02:33 - you see how it just automatically goes
02:35 - and is indented one thing,
02:37 - just like we wanted.
02:38 - So as long as the editor
is working correctly,
02:41 - you should actually have
correctly indented code.
02:43 - So that's pretty cool.
02:45 - All right, so our program
looks pretty good now,
02:47 - but there's still more we can do
02:49 - to improve readability.
02:51 - I'll give you a hint by showing
02:52 - this English sentence before and after.
02:55 - See these two sentences?
02:58 - They're really similar, the only thing
02:59 - that's different is that
we added some white space
03:01 - in between punctuation and letters.
03:03 - That little bit of white space
03:05 - actually made it a lot more readable.
03:07 - So once again, it's the
same thing with our code.
03:10 - If we just add white space at good points,
03:13 - our code becomes more readable.
03:15 - So here it is with white space.
03:17 - So we added space in between all our
03:19 - function arguments, we
added space on either side
03:23 - of the equals sign when we were assigning
03:25 - variables to things, and we added space
03:28 - around operators like less than,
03:30 - and greater than, and times,
03:33 - and we also added space
before our curly brackets.
03:38 - And that's it.
03:39 - So now when you look at our code,
03:41 - I hope you agree it's quite beautiful
03:42 - and it's really much easier to understand,
03:45 - and you don't have to read through it
03:47 - quite as many times, right?
03:49 - And hey, what I've learned
is that cleaning code
03:51 - is actually a lot more fun and easier
03:53 - than cleaning the room and
it doesn't get dirty again.
03:56 - So it's pretty cool and you should
03:57 - try it out with your programs.

Cleaned transcript:

[Voiceover] Today I want to talk about making your code easier to read. First let's talk about what it means to make a human language easier to read. The languages that we speak every day have lots of rules, but they also have lots of flexibility, especially when we write them down. Like if I'm being really lazy one day, I could write this. Now you can read that sentence and eventually figure it out, but you have to figure out where the periods go and it takes time. Now what would happen if we cleaned it up a bit? Tada. Okay, so you agree that that's a lot easier to understand, right? Now imagine if everybody wrote like this first sentence and we constantly had to read everything multiple times just to figure out how it flowed. It'd be really painful, right? It's the same thing with programming languages. They have a lot of rules and they're more strict than human languages, but they can also be written in confusing ways. For example, this code here is valid code and it runs and it's a cool program, but man, it's really hard to read as a human. So what would you do to make it easier to read? A few things. The first thing we'd do is we'd move every statement onto its own line. Like this. Now that makes it a little easier to read, but there's still a lot more we can do. So the next thing we want to do is indent the code properly. Now in human languages like English, we indent to help us understand the structure of writing. Like when we indent the first sentence of a paragraph or indent a quote. It's the same thing with code. We indent in order to show the structure of the code. Let me see. Okay, so let's go through this and see how indentation helps to understand the structure. When we talk about structure, we mean functions, and for, and ifs. So here inside this function you can see that we indent the first statement inside this function because we want to show that it's inside this function. It's like a child of this function. It's only going to be called if this function's called. All right. And then we have this for loop and everything inside an for loop is indented twice because we're trying to show that this is all inside the for loop. It's all shown under the for loop. It's only going to be executed when we go through the for loop. And then finally inside the if, we indent things three times because we're trying to show that they're a child of the if blocks. They're only going to be executed if this if condition is true. So by using indentation, we can really understand the structure of the program better. Now the cool thing is that your editor will help you with indentation. So if I go and put this on this line and then I just press enter, you see how it just automatically goes and is indented one thing, just like we wanted. So as long as the editor is working correctly, you should actually have correctly indented code. So that's pretty cool. All right, so our program looks pretty good now, but there's still more we can do to improve readability. I'll give you a hint by showing this English sentence before and after. See these two sentences? They're really similar, the only thing that's different is that we added some white space in between punctuation and letters. That little bit of white space actually made it a lot more readable. So once again, it's the same thing with our code. If we just add white space at good points, our code becomes more readable. So here it is with white space. So we added space in between all our function arguments, we added space on either side of the equals sign when we were assigning variables to things, and we added space around operators like less than, and greater than, and times, and we also added space before our curly brackets. And that's it. So now when you look at our code, I hope you agree it's quite beautiful and it's really much easier to understand, and you don't have to read through it quite as many times, right? And hey, what I've learned is that cleaning code is actually a lot more fun and easier than cleaning the room and it doesn't get dirty again. So it's pretty cool and you should try it out with your programs.
