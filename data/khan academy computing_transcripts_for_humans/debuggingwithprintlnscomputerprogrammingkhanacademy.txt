With timestamps:

00:00 - Now that your programs are getting 
more interesting
00:03 - With functions and logic and all of that
00:05 - You'll likely find yourself introducing
more mistakes into your programs.
00:10 - And it'll bug you when those mistakes
keep your program
00:14 - from doing what you want them to do.
00:16 - You might instantly know what's wrong
00:19 - but sometimes you have to
spend some time debugging.
00:22 - And I want to give you some tips
for doing that in this talkthrough.
00:25 - I've started with this program that has
a white rectangle in the middle
00:29 - and instructions to click inside of it.
00:32 - When I click inside, I expect a
rectangle to show up where my mouse was.
00:37 - But right now, it doesn't work. And if
you want, you can pause right now
00:41 - and verify that's true. That it's just not
working wherever I click.
00:46 - Alright, so why isn't it working?
Well, let's debug it together.
00:50 - The first thing I'm going to check is
whether the mouseClicked function
00:55 - is being called at all. It should be called
every time I click the mouse.
00:59 - But let's just check to make sure.
01:01 - An easy way to confirm that is to stick a
println right inside the function at the top.
01:08 - println("clicked!");
01:10 - Alright, so now when I clicked I see the
console pop up and it says "clicked!".
01:16 - So we know that mouseClicked is
being called like we expected.
01:21 - this println function here is a handy
way to debug your program
01:25 - and when you're done debugging you
can always remove the statements
01:29 - by deleting or commenting out
and then closing the console.
01:34 - OK, the next thing I'm going
to do is check to see
01:38 - if this code [inside the if-statement]
is ever reached here.
01:42 - So what I'm really trying to figure out
is whether this [condition] is ever true.
01:47 - So I'm going to put another
println inside the if, whoo!
01:56 - And you might say "oh well,
there's a rect here"
01:59 - and we would have seen a rect
but sometimes there can be a problem
02:01 - with what we're showing. But there's never
going to be a problem with a println.
02:06 - So a println is a way to make sure
that some code is getting called.
02:10 - Alright, so now I'm going to
try clicking again.
02:12 - Hmm, okay. I'm not seeing anything
pop up in the console.
02:19 - Alright, so that means that what's wrong
is that this [condition] is never true.
02:24 - So I have to figure out what is wrong
with the condition in the if.
02:28 - Why is it never true?
02:31 - So, to debug if and conditions, I often
start with just printing out the values
02:37 - that I'm checking to make sure
they are what I'd expect.
02:42 - Alright, let's see, click around. All of
these values look really reasonable to me.
02:48 - So now I'm going to print out
the conditions inside the if.
02:54 - So I'll take this first half here
and then I'll take this second half
03:00 - and this just helps you narrow it down
since this is a complex condition.
03:03 - Alright, so what I'm seeing is
that the first condition is true
03:08 - and the second one is false
when I expect it to be true
03:12 - because I'm clicking in
the corner of the rectangle.
03:15 - So now I'm just going to read
through the condition and see.
03:19 - "mouseY greater than 100",
100 is the top side of the rectangle.
03:30 - So that makes sense,
mouseY should be 100.
03:34 - And then we have "mouseY
is greater than 400".
03:39 - OK, well that's wrong because
when mouseY is inside the rectangle
03:44 - It's never going to be greater than
400, that would be outside the canvas.
03:48 - So what we really should be checking is
that mouseY is greater than the top
03:52 - of the rectangle and mouseY is less
than the bottom of the rectangle.
03:59 - And the bottom of the rectangle
would be 100 + 150 = 250.
04:06 - And now we can see "true" [in the console]
so I'm going to change my condition here
04:12 - and yay, rectangles! So now I'm
going to keep clicking
04:17 - and I see that I can't get rectangles
in the right side of the rectangle.
04:22 - So there's still something wrong
with this first condition here.
04:27 - So let's re-do this. "mouseX
is greater than 100".
04:31 - That's right because 100 is the
left side of the rectangle.
04:35 - And then "mouseX less than 150".
OK, so this is the problem here.
04:40 - 150 gives us only 50 pixels
where this condition is true
04:45 - but it should actually
be true for 150 pixels
04:49 - because that's how
wide the rectangle is.
04:51 - So this should be 100 + 150
= 250. Now we'll see it's true.
04:58 - I'm going to go and change this
inside the if and let's see.
05:02 - Woohoo! Rectangles
everywhere we click!
05:06 - Alright, so it looks like
I've fixed everything.
05:11 - I'm just going to check and keep clicking
around, seeing if I missed any edge cases.
05:16 - See that everything is working
as expected. Great!
05:21 - Now, you may have figured out
what was wrong with my code
05:25 - before I did all of these printlns.
05:28 - But you'll probably run into
code that's trickier than this.
05:31 - And you can use the same
techniques for it.
05:35 - Just figure out which of your code
is actually being run.
05:38 - And then figure out
why it's not being run.
05:41 - Or why it's being run in a weird way
by inspecting the values and conditions.
05:46 - And you can use println
to do that really easily.

Cleaned transcript:

Now that your programs are getting more interesting With functions and logic and all of that You'll likely find yourself introducing more mistakes into your programs. And it'll bug you when those mistakes keep your program from doing what you want them to do. You might instantly know what's wrong but sometimes you have to spend some time debugging. And I want to give you some tips for doing that in this talkthrough. I've started with this program that has a white rectangle in the middle and instructions to click inside of it. When I click inside, I expect a rectangle to show up where my mouse was. But right now, it doesn't work. And if you want, you can pause right now and verify that's true. That it's just not working wherever I click. Alright, so why isn't it working? Well, let's debug it together. The first thing I'm going to check is whether the mouseClicked function is being called at all. It should be called every time I click the mouse. But let's just check to make sure. An easy way to confirm that is to stick a println right inside the function at the top. println("clicked!"); Alright, so now when I clicked I see the console pop up and it says "clicked!". So we know that mouseClicked is being called like we expected. this println function here is a handy way to debug your program and when you're done debugging you can always remove the statements by deleting or commenting out and then closing the console. OK, the next thing I'm going to do is check to see if this code [inside the ifstatement] is ever reached here. So what I'm really trying to figure out is whether this [condition] is ever true. So I'm going to put another println inside the if, whoo! And you might say "oh well, there's a rect here" and we would have seen a rect but sometimes there can be a problem with what we're showing. But there's never going to be a problem with a println. So a println is a way to make sure that some code is getting called. Alright, so now I'm going to try clicking again. Hmm, okay. I'm not seeing anything pop up in the console. Alright, so that means that what's wrong is that this [condition] is never true. So I have to figure out what is wrong with the condition in the if. Why is it never true? So, to debug if and conditions, I often start with just printing out the values that I'm checking to make sure they are what I'd expect. Alright, let's see, click around. All of these values look really reasonable to me. So now I'm going to print out the conditions inside the if. So I'll take this first half here and then I'll take this second half and this just helps you narrow it down since this is a complex condition. Alright, so what I'm seeing is that the first condition is true and the second one is false when I expect it to be true because I'm clicking in the corner of the rectangle. So now I'm just going to read through the condition and see. "mouseY greater than 100", 100 is the top side of the rectangle. So that makes sense, mouseY should be 100. And then we have "mouseY is greater than 400". OK, well that's wrong because when mouseY is inside the rectangle It's never going to be greater than 400, that would be outside the canvas. So what we really should be checking is that mouseY is greater than the top of the rectangle and mouseY is less than the bottom of the rectangle. And the bottom of the rectangle would be 100 + 150 = 250. And now we can see "true" [in the console] so I'm going to change my condition here and yay, rectangles! So now I'm going to keep clicking and I see that I can't get rectangles in the right side of the rectangle. So there's still something wrong with this first condition here. So let's redo this. "mouseX is greater than 100". That's right because 100 is the left side of the rectangle. And then "mouseX less than 150". OK, so this is the problem here. 150 gives us only 50 pixels where this condition is true but it should actually be true for 150 pixels because that's how wide the rectangle is. So this should be 100 + 150 = 250. Now we'll see it's true. I'm going to go and change this inside the if and let's see. Woohoo! Rectangles everywhere we click! Alright, so it looks like I've fixed everything. I'm just going to check and keep clicking around, seeing if I missed any edge cases. See that everything is working as expected. Great! Now, you may have figured out what was wrong with my code before I did all of these printlns. But you'll probably run into code that's trickier than this. And you can use the same techniques for it. Just figure out which of your code is actually being run. And then figure out why it's not being run. Or why it's being run in a weird way by inspecting the values and conditions. And you can use println to do that really easily.
