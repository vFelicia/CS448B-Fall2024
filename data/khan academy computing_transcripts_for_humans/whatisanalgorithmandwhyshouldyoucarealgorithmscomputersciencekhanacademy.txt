With timestamps:

00:00 - - [Voiceover] What is an algorithm?
00:03 - One definition might be a set of steps
00:05 - to accomplish a task.
00:07 - You might have an algorithm
00:09 - for getting from home to school,
00:11 - for making a grilled cheese sandwich,
00:13 - or for finding what you're
looking for in a grocery store.
00:18 - In computer science, an
algorithm is a set of steps
00:21 - for a computer program
to accomplish a task.
00:24 - Algorithms put the science
in computer science.
00:28 - And finding good algorithms
and knowing when to apply them
00:31 - will allow you to write
interesting and important programs.
00:36 - Let's talk about a few famous algorithms.
00:39 - How does Google Hangouts
transmit live video
00:41 - across the Internet so quickly?
00:44 - They use audio and video
compression algorithms.
00:48 - How does Google Maps figure out how to get
00:50 - from Dallas, Texas to Orlando, Florida
00:53 - so that you can get to Disney World?
00:55 - They use a route finding algorithm.
00:58 - How does Pixar color a
3D model of a character
01:01 - based on the lighting in a virtual room?
01:04 - They use a rendering algorithm.
01:08 - How does Nasa choose how
to arrange the solar panels
01:11 - on the International Space Station
01:13 - and when to rearrange them?
01:15 - They use an optimization
and a scheduling algorithm.
01:20 - Those algorithms are more complex
01:22 - than our everyday algorithms
01:23 - like making a grilled cheese sandwich.
01:25 - But they boil down to the same thing,
01:27 - a set of steps to accomplish a task.
01:31 - If you know something
about existing algorithms,
01:34 - you can save yourself some effort
01:36 - and make your programs faster
01:38 - by applying the right one.
01:40 - For example, let's say
that you're writing a game
01:43 - and you want the user
01:44 - to be able to play against the computer.
01:46 - Well, you could look at
checkers games for inspiration.
01:50 - Computer scientists have
figured out how to write
01:52 - checkers programs that never lose
01:55 - by using the minimax search algorithm
01:58 - to search through the huge
tree of possible moves.
02:03 - If your game is similar to checkers,
02:05 - then you might be able to use algorithms
02:06 - based on these techniques.
02:08 - If not, then knowing the
limitations of those algorithms
02:12 - might lead you to redesign your game
02:14 - if it requires having a
skilled computer player.
02:17 - It's also important to know
how to design new algorithms
02:21 - as well as how to analyze their
correctness and efficiency.
02:25 - In the biological sciences,
02:27 - new algorithms are
continually being designed
02:29 - with purposes like designing
the molecular structures
02:32 - that are the core of
disease fighting drugs.
02:36 - In physics, algorithms simulate climate
02:39 - and weather patterns.
02:40 - In other algorithms, search
and analyze the vast data
02:44 - about stars in the
universe that's collected
02:46 - by automated space telescopes.
02:49 - Across all the sciences,
and even on websites
02:52 - like Khan Academy, efficient
algorithms are needed
02:55 - to analyze huge data sets
or to select intelligently
02:59 - from a vast number of possible decisions.
03:02 - In just about any area
you might be interested,
03:05 - new algorithms will allow
massive computational power
03:08 - to be harnessed to do things
that people really need
03:11 - and care about.
03:12 - Now, not all algorithms are created equal.
03:15 - So what makes a good algorithm?
03:18 - The two most important criteria
03:20 - are that it solves a problem
03:22 - and that it does so efficiently.
03:26 - Most of the time, we want an algorithm
03:27 - to give us an answer that
we know is always correct.
03:31 - Sometimes we can live with an algorithm
03:33 - that doesn't give us the correct
answer or the best answer
03:36 - because the only perfect algorithms
03:38 - that we know for those problems
03:40 - take a really, really long time.
03:43 - For example, let's say we want a program
03:46 - that would determine
the most efficient route
03:49 - for a truck that delivers packages,
03:51 - starting and ending the day at a depot.
03:54 - It would take weeks to run
03:56 - going through all the possibilities.
03:59 - But if we're okay with a program
04:00 - that would determine a route that's good
04:02 - but maybe not the best,
04:04 - then it could run in seconds.
04:06 - In some case, good is good enough.
04:09 - How do you measure the
efficiency of an algorithm?
04:12 - We could time how long
it takes to run the code,
04:15 - but that would only tell
us about that particular
04:18 - implementation in a certain
programming language
04:20 - on a particular computer
04:22 - and just for the input it was given.
04:25 - Instead, computer
scientists use a technique
04:27 - called asymptotic analysis,
04:29 - which allows algorithms to
be compared independently
04:32 - of a particular programming
language or hardware
04:35 - so that we can conclusively say that yes,
04:37 - some algorithms are more
efficient than others.
04:41 - Now you can learn about algorithms
04:43 - and asymptotic analysis on Khan Academy
04:45 - thanks to the contribution
of two Dartmouth
04:48 - college professors.
04:50 - Tom Cormen is the first author
04:52 - of the most popular
college algorithms textbook
04:54 - in the world, plus the author
04:56 - of Algorithms Unlocked.
04:59 - Devin Balkcom designed
Dartmouth's intro CS course
05:02 - and researches robotics.
05:04 - He built the world's first
origami folding robot.
05:08 - Tom and Devin will teach
you many of the algorithms
05:10 - that you would learn in APCS or CS 101,
05:13 - like searching algorithms,
sorting algorithms,
05:15 - recursive algorithms
and my personal favorite,
05:17 - graph algorithms.
05:19 - There will be tons of
interactive visualizations,
05:22 - quizzes and coding challenges
05:24 - to help you understand better
05:25 - along your learning journey.

Cleaned transcript:

[Voiceover] What is an algorithm? One definition might be a set of steps to accomplish a task. You might have an algorithm for getting from home to school, for making a grilled cheese sandwich, or for finding what you're looking for in a grocery store. In computer science, an algorithm is a set of steps for a computer program to accomplish a task. Algorithms put the science in computer science. And finding good algorithms and knowing when to apply them will allow you to write interesting and important programs. Let's talk about a few famous algorithms. How does Google Hangouts transmit live video across the Internet so quickly? They use audio and video compression algorithms. How does Google Maps figure out how to get from Dallas, Texas to Orlando, Florida so that you can get to Disney World? They use a route finding algorithm. How does Pixar color a 3D model of a character based on the lighting in a virtual room? They use a rendering algorithm. How does Nasa choose how to arrange the solar panels on the International Space Station and when to rearrange them? They use an optimization and a scheduling algorithm. Those algorithms are more complex than our everyday algorithms like making a grilled cheese sandwich. But they boil down to the same thing, a set of steps to accomplish a task. If you know something about existing algorithms, you can save yourself some effort and make your programs faster by applying the right one. For example, let's say that you're writing a game and you want the user to be able to play against the computer. Well, you could look at checkers games for inspiration. Computer scientists have figured out how to write checkers programs that never lose by using the minimax search algorithm to search through the huge tree of possible moves. If your game is similar to checkers, then you might be able to use algorithms based on these techniques. If not, then knowing the limitations of those algorithms might lead you to redesign your game if it requires having a skilled computer player. It's also important to know how to design new algorithms as well as how to analyze their correctness and efficiency. In the biological sciences, new algorithms are continually being designed with purposes like designing the molecular structures that are the core of disease fighting drugs. In physics, algorithms simulate climate and weather patterns. In other algorithms, search and analyze the vast data about stars in the universe that's collected by automated space telescopes. Across all the sciences, and even on websites like Khan Academy, efficient algorithms are needed to analyze huge data sets or to select intelligently from a vast number of possible decisions. In just about any area you might be interested, new algorithms will allow massive computational power to be harnessed to do things that people really need and care about. Now, not all algorithms are created equal. So what makes a good algorithm? The two most important criteria are that it solves a problem and that it does so efficiently. Most of the time, we want an algorithm to give us an answer that we know is always correct. Sometimes we can live with an algorithm that doesn't give us the correct answer or the best answer because the only perfect algorithms that we know for those problems take a really, really long time. For example, let's say we want a program that would determine the most efficient route for a truck that delivers packages, starting and ending the day at a depot. It would take weeks to run going through all the possibilities. But if we're okay with a program that would determine a route that's good but maybe not the best, then it could run in seconds. In some case, good is good enough. How do you measure the efficiency of an algorithm? We could time how long it takes to run the code, but that would only tell us about that particular implementation in a certain programming language on a particular computer and just for the input it was given. Instead, computer scientists use a technique called asymptotic analysis, which allows algorithms to be compared independently of a particular programming language or hardware so that we can conclusively say that yes, some algorithms are more efficient than others. Now you can learn about algorithms and asymptotic analysis on Khan Academy thanks to the contribution of two Dartmouth college professors. Tom Cormen is the first author of the most popular college algorithms textbook in the world, plus the author of Algorithms Unlocked. Devin Balkcom designed Dartmouth's intro CS course and researches robotics. He built the world's first origami folding robot. Tom and Devin will teach you many of the algorithms that you would learn in APCS or CS 101, like searching algorithms, sorting algorithms, recursive algorithms and my personal favorite, graph algorithms. There will be tons of interactive visualizations, quizzes and coding challenges to help you understand better along your learning journey.
