With timestamps:

00:00 - - You've seen how to change the color
00:02 - and background color of
the text on your page.
00:05 - But there is so much more that
you can do with text and CSS.
00:09 - To start off, let's change the font.
00:12 - What's a font?
00:13 - You probably already know what one is,
00:15 - but you may not know the word for it.
00:17 - It's the style of the letters
that make up the words,
00:19 - like whether the letters
have flourishes on them,
00:22 - or how thick they are,
00:23 - or if they look like they
are written with an ink pen.
00:25 - Here. It'll be easier if I just go ahead
00:28 - and change the font
family on this webpage.
00:30 - I'll go to our p CSS rule,
00:33 - that selects all the paragraphs,
00:35 - and add a font family property here.
00:38 - So we have font-family: sans-serif;
00:42 - Do you see how the letters changed?
00:44 - Notice they look a bit simpler now.
00:45 - OK. Now let me change the font family back
00:49 - by specifying serif instead.
00:52 - Notice the letters look
a bit more complex?
00:55 - A serif font is any font that has
00:57 - what looks like little
feet on the letters.
00:59 - When we tell the browser
to use a serif font family,
01:02 - it will use the default
serif font for the computer,
01:05 - which is usually the Times New Roman font.
01:08 - I'm not a big fan of that font, though,
01:10 - so I'm going to change it
back again to sans-serif.
01:13 - The sans comes from latin
and means "without,"
01:17 - so a sans-serif font is one that doesn't
01:20 - have those little feet on the letters.
01:22 - That's why the letters look simpler.
01:24 - When we tell the browser to
use a sans-serif font family,
01:27 - it uses the default
sans-serif for that computer
01:30 - which is usually Arial or Helvetica.
01:33 - But here's an important point.
01:35 - It'll pick the default
font of whatever computer
01:38 - the viewer is on, not the author.
01:41 - So we may very well be seeing
01:43 - two different sans-serif fonts right now
01:45 - if your computer has a
different default than mine.
01:47 - Sometimes I'm OK with that,
01:49 - but other times I'm picky.
01:51 - And I really want to make sure that
01:52 - whoever's viewing my webpage
01:53 - sees it in exactly the same fonts as me.
01:56 - In that case, I can specify
the precise font name.
02:00 - Like Helvetica.
02:03 - This will work as long as both you and me
02:06 - have Helvetica on our computers.
02:08 - But not all computers have the same fonts,
02:10 - and in that case the computer will
02:12 - just ignore the property entirely.
02:14 - Luckily, CSS lets us specify
a fallback font family.
02:18 - A backup, in case a particular font
02:20 - doesn't exist on a computer.
02:22 - We just add a comma after "Helvetica"
02:25 - and then bring back sans-serif there.
02:28 - Now the computer will look for Helvetica,
02:30 - and if it can't find it,
02:31 - just use its default sans-serif font.
02:34 - Generally, whenever you
specify a specific font name,
02:38 - like Helvetica,
02:39 - you should always specify a
backup family name as well.
02:43 - Besides serif and sans-serif,
there are a couple
02:46 - other generic font
family names we can use.
02:49 - If we wanted our lyrics
to look more hand-written,
02:53 - we could specify
font-family: cursive. Nice.
02:57 - Or, if we wanted the
lyrics to be a bit fancier,
03:01 - we could try the fantasy font family.
03:05 - Or, what if we wanted them to look like
03:06 - they were written on a typewriter?
03:08 - We could specify the
monospace font family.
03:11 - A monospace font is fixed-width,
03:13 - meaning that all the letters
take up the exact same width.
03:16 - And in fact, you've seen
a lot of monospace fonts
03:19 - here on Khan Academy,
03:20 - because we always use monospace
fonts for code editors.
03:24 - That's because we want all
of our code to line up,
03:26 - regardless of the letters in the words.
03:28 - OK. Now that you know how
to change the font family,
03:31 - use your power wisely.
03:33 - If you want your page to look good,
03:35 - limit yourself to a few different families
03:37 - and come up with pairs of
fonts that look good together.
03:40 - But hey, if you don't want
your page to look good,
03:42 - then the world is your ugly oyster.
03:45 - Go forth and fontify.

Cleaned transcript:

You've seen how to change the color and background color of the text on your page. But there is so much more that you can do with text and CSS. To start off, let's change the font. What's a font? You probably already know what one is, but you may not know the word for it. It's the style of the letters that make up the words, like whether the letters have flourishes on them, or how thick they are, or if they look like they are written with an ink pen. Here. It'll be easier if I just go ahead and change the font family on this webpage. I'll go to our p CSS rule, that selects all the paragraphs, and add a font family property here. So we have fontfamily sansserif; Do you see how the letters changed? Notice they look a bit simpler now. OK. Now let me change the font family back by specifying serif instead. Notice the letters look a bit more complex? A serif font is any font that has what looks like little feet on the letters. When we tell the browser to use a serif font family, it will use the default serif font for the computer, which is usually the Times New Roman font. I'm not a big fan of that font, though, so I'm going to change it back again to sansserif. The sans comes from latin and means "without," so a sansserif font is one that doesn't have those little feet on the letters. That's why the letters look simpler. When we tell the browser to use a sansserif font family, it uses the default sansserif for that computer which is usually Arial or Helvetica. But here's an important point. It'll pick the default font of whatever computer the viewer is on, not the author. So we may very well be seeing two different sansserif fonts right now if your computer has a different default than mine. Sometimes I'm OK with that, but other times I'm picky. And I really want to make sure that whoever's viewing my webpage sees it in exactly the same fonts as me. In that case, I can specify the precise font name. Like Helvetica. This will work as long as both you and me have Helvetica on our computers. But not all computers have the same fonts, and in that case the computer will just ignore the property entirely. Luckily, CSS lets us specify a fallback font family. A backup, in case a particular font doesn't exist on a computer. We just add a comma after "Helvetica" and then bring back sansserif there. Now the computer will look for Helvetica, and if it can't find it, just use its default sansserif font. Generally, whenever you specify a specific font name, like Helvetica, you should always specify a backup family name as well. Besides serif and sansserif, there are a couple other generic font family names we can use. If we wanted our lyrics to look more handwritten, we could specify fontfamily cursive. Nice. Or, if we wanted the lyrics to be a bit fancier, we could try the fantasy font family. Or, what if we wanted them to look like they were written on a typewriter? We could specify the monospace font family. A monospace font is fixedwidth, meaning that all the letters take up the exact same width. And in fact, you've seen a lot of monospace fonts here on Khan Academy, because we always use monospace fonts for code editors. That's because we want all of our code to line up, regardless of the letters in the words. OK. Now that you know how to change the font family, use your power wisely. If you want your page to look good, limit yourself to a few different families and come up with pairs of fonts that look good together. But hey, if you don't want your page to look good, then the world is your ugly oyster. Go forth and fontify.
