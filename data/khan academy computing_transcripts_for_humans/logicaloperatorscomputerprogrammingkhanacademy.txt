With timestamps:

00:01 - Now let's talk about more complex conditions you can check with your programs
00:05 - To demonstrate, i've set up the canvas to look kind like an old game i used to play
00:08 - Foursquare.
00:09 - There is four squares (it´s got a good name), and you stand in one and bounce your ball to the other squares.
00:14 - So right now I'll draw an ellipse wherever my mouse is, so that's like our ball
00:18 - What I wanna do is highlight the square that the ball is in, by drawing an white rectangle on top of it.
00:23 - I know I need an IF statement to do that, because I only want to do it to one at a time, only when I am over that rectangle
00:29 - Okay, so let's start by drawing that rectangle.
00:34 - So I'll just copy the rect from there, but give it a different fill, a white fill
00:39 - Good. Now let's wrap it with an IF
00:45 - You see it auto-completes the curly braces for me, so I got to move it inside.
00:50 - Ok. So when do I want to show that rectangle?
00:54 - Well, I know I wanna do it when mouse x is less than 200 (mouseX 
01:00 - So that works, but then if I go down here, it is still showing.
01:07 - So I also need to check mouseY
01:10 - Well, how do I check Both of those things?
01:13 - Thats why we have the "AND" operator
01:14 - So the And operator we use when we want to check multiple conditions.
01:17 - So we just write && and then we write our next condition, so "mouseY < 200"
01:26 - So it doesn't light over here anymore and it does here! YAYY
01:30 - Lets do the next square, just to prove this works.
01:36 - Alright, so we just have to change some stuff.
01:38 - Well take this rectangle instead, and we obviously need to change the conditions so its not so lighting up.
01:45 - So this time, mouseX needs to be greater than 200 and mouseY still less than 200
01:52 - Beautiful, look at that!
01:56 - Alright, now, in foursquare, whenever the ball hits the edges, you know, these lines in the middle and corners
02:02 - we allways yell "EdgeBall"
02:04 - So i wanna do that here too. Lets start by writing it "EDGE BALLL".
02:10 - And lets write in the middle and make it red.
02:14 - So I only want it to happen if I'm on the edges.
02:19 - So we are gonna add our if
02:22 - And move this code inside of it
02:27 - So.. When I want it to happen?
02:29 - Well there is edges in the middle, so the middle is when mouseX == 200
02:36 - Alright lets see. Do I get Edge Ball..
02:40 - There we go! EDGE BALL
02:43 - Ok. Humm. So that works in this middle line here
02:49 - But I also want it to work on this line here.
02:52 - So, in that case, I want mouseY == 200, because thats what that middle line is.
03:02 - Ok Lets See, so that's not working. Nothing is working.
03:08 - Ow, one thing works, just the very center.
03:11 - Well, thats because I used an and, so its only gonna do it if BOTH of these are true, and it will only happen in the center.
03:19 - So what I actually wanna say is, EITHER one of these are true
03:22 - So we use the OR operator
03:24 - So the OR operator looks like this: "||"
03:27 - We call those pipe simbols, and you probably never used them before
03:31 - You have to look it on your keyboard, it is usually on your top-right
03:35 - Hopefully you actually have it on your keyboard
03:39 - Alright? cool, so now lets see if it works..
03:42 - Alriight, so works there, works there and then works there.. beautiful..
03:46 - we can keep adding more conditions here
03:49 - so with both AND and OR, you can have as many of these as you want
03:52 - If you need to check 60 different conditions you can totally do that, right
03:55 - Because we havent take care of our edges yet so
03:59 - lets say if mouseX is less than 3
04:04 - So that should be... there we go, that little edge there
04:09 - Very good
04:10 - Or mouseX is greater than 397 (mouseX>397)
04:14 - There we go.. beautifull!
04:17 - So we keep doing it for all the edges
04:21 - So.. yeah! There is AND (&&) and OR (||) and now you can see how you can build up much more complex conditions in your programs.
04:27 - And thats good, because the world is a complex place.

Cleaned transcript:

Now let's talk about more complex conditions you can check with your programs To demonstrate, i've set up the canvas to look kind like an old game i used to play Foursquare. There is four squares (it´s got a good name), and you stand in one and bounce your ball to the other squares. So right now I'll draw an ellipse wherever my mouse is, so that's like our ball What I wanna do is highlight the square that the ball is in, by drawing an white rectangle on top of it. I know I need an IF statement to do that, because I only want to do it to one at a time, only when I am over that rectangle Okay, so let's start by drawing that rectangle. So I'll just copy the rect from there, but give it a different fill, a white fill Good. Now let's wrap it with an IF You see it autocompletes the curly braces for me, so I got to move it inside. Ok. So when do I want to show that rectangle? Well, I know I wanna do it when mouse x is less than 200 (mouseX So that works, but then if I go down here, it is still showing. So I also need to check mouseY Well, how do I check Both of those things? Thats why we have the "AND" operator So the And operator we use when we want to check multiple conditions. So we just write && and then we write our next condition, so "mouseY < 200" So it doesn't light over here anymore and it does here! YAYY Lets do the next square, just to prove this works. Alright, so we just have to change some stuff. Well take this rectangle instead, and we obviously need to change the conditions so its not so lighting up. So this time, mouseX needs to be greater than 200 and mouseY still less than 200 Beautiful, look at that! Alright, now, in foursquare, whenever the ball hits the edges, you know, these lines in the middle and corners we allways yell "EdgeBall" So i wanna do that here too. Lets start by writing it "EDGE BALLL". And lets write in the middle and make it red. So I only want it to happen if I'm on the edges. So we are gonna add our if And move this code inside of it So.. When I want it to happen? Well there is edges in the middle, so the middle is when mouseX == 200 Alright lets see. Do I get Edge Ball.. There we go! EDGE BALL Ok. Humm. So that works in this middle line here But I also want it to work on this line here. So, in that case, I want mouseY == 200, because thats what that middle line is. Ok Lets See, so that's not working. Nothing is working. Ow, one thing works, just the very center. Well, thats because I used an and, so its only gonna do it if BOTH of these are true, and it will only happen in the center. So what I actually wanna say is, EITHER one of these are true So we use the OR operator So the OR operator looks like this "||" We call those pipe simbols, and you probably never used them before You have to look it on your keyboard, it is usually on your topright Hopefully you actually have it on your keyboard Alright? cool, so now lets see if it works.. Alriight, so works there, works there and then works there.. beautiful.. we can keep adding more conditions here so with both AND and OR, you can have as many of these as you want If you need to check 60 different conditions you can totally do that, right Because we havent take care of our edges yet so lets say if mouseX is less than 3 So that should be... there we go, that little edge there Very good Or mouseX is greater than 397 (mouseX>397) There we go.. beautifull! So we keep doing it for all the edges So.. yeah! There is AND (&&) and OR (||) and now you can see how you can build up much more complex conditions in your programs. And thats good, because the world is a complex place.
