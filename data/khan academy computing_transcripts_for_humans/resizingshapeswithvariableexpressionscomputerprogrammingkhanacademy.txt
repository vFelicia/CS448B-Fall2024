With timestamps:

00:00 - We're back with Winston.
00:02 - We now have both an x and a y variable for
00:05 - Winston's position.
00:07 - So we can move him sideways
00:10 - Up and down, woo!
00:12 - Very nice.
00:13 - Now, let's reset these variables
00:16 - with 200 and 200
00:19 - and review how this program works.
00:22 - So starting here, we've got an eyeSize variable.
00:25 - It's being used to control the eye size,
00:27 - because the eyes are all 40 pixels wide
00:29 - and 40 pixels tall.
00:32 - And then we have these x and y variables,
00:35 - and those position the center of the face.
00:39 - And you can see them used
00:41 - in this ellipse command here
00:42 - that draws the big yellow circle.
00:45 - And then down here,
00:47 - for the eyes,
00:48 - the x and y are used again.
00:50 - And here,
00:52 - the eyes are positioned
00:54 - relative to the center of the face.
00:55 - So maybe this one is
00:58 - fifty pixels
00:59 - to the left of the center
01:01 - and this one is a hundred pixels
01:03 - to the right of the center.
01:05 - OK. So pretty cool
01:07 - and that's why we're able
01:09 - to move Winston up and down
01:11 - Now, I want to be able to control
01:13 - more things about Winston's face
01:15 - with variables
01:16 - so I want to figure out
01:17 - what else in the program
01:19 - we can store as variables
01:20 - to do that
01:21 - I'm going to go through
01:22 - each line of code
01:23 - and look for what we call
01:25 - hard-coded numbers
01:27 - those are numbers that are
01:29 - just literal numbers
01:30 - not variables or dependant on variables
01:34 - so lets start here
01:35 - in the first ellipse call
01:37 - we have 300 and 300
01:39 - for the width and height
01:41 - those are just literal numbers
01:43 - so lets make a variable
01:45 - for those instead
01:46 - called faceSize
01:48 - and have it store 300
01:50 - now we'll just write faceSize,
01:53 - faceSize
01:55 - OK So keep going
01:56 - and skip colours
01:58 - now the ellipse commands are either --
02:00 - they're all variables or
02:01 - dependant on variables
02:02 - so I'm going to leave them
02:03 - like this for now
02:04 - and then the mouth command
02:07 - those are dependant on x and y
02:09 - but these here
02:10 - are just literal numbers
02:12 - 150 and 150
02:14 - so we're going to say
02:16 - mouthSize that's a good name
02:19 - equals 150
02:22 - we'll replace this with mouthSize
02:25 - and mouthSize
02:27 - alright so now
02:28 - we have the sizes of the shapes
02:30 - stored as variables at the top
02:32 - that means that its really easy
02:34 - for us to change the sizes
02:36 - like this like
02:36 - Wooo Winston's hungry
02:39 - and then maybe like, you know,
02:41 - Winston's got hungry and
02:42 - then he eats lots of donuts
02:44 - and then he gets super big
02:45 - alright
02:47 - but there is something
02:49 - I don't like about the program right now
02:51 - So if I make the face size really small
02:59 - it starts to look funny
03:01 - because the eyes and the mouth
03:03 - are sticking out of the face
03:04 - and at certain points it doesn't even
03:06 - really look like they're connected
03:07 - to that face
03:08 - or its not really a face any more, is it?
03:11 - So what I really want to happen
03:13 - is that when I change faceSize
03:16 - I want the eyes and the mouth --
03:18 - I want their size to change along with it
03:21 - so if I make faceSize be half the size
03:24 - I want the mouth to be half the size too
03:27 - so that means that
03:29 - I want to calculate mouthSize and eyeSize
03:32 - as fractions of faceSize
03:36 - alright lets reset these variables
03:39 - and I'll show you what I mean
03:42 - Let's start with mouthSize
03:44 - so right now
03:45 - faceSize is 300 and mouthSize is 150
03:50 - so if we think of about them
03:51 - relative to each other
03:53 - we'd say that faceSize is twice as big
03:55 - as mouthSize
03:57 - or that mouthSize is half the size
04:00 - of faceSize
04:01 - and we can write that in code like this
04:04 - one half times faceSize
04:08 - ok so this line of code says
04:09 - that we take the value of faceSize
04:11 - multiply it by a half
04:13 - and store that in mouthSize
04:15 - so that if we change this here
04:18 - it would figure out what half of that was
04:20 - and that would become mouthSize
04:22 - Perfect! That's what we want
04:24 - So now eyeSize
04:27 - so faceSize is 300
04:29 - and eyeSize is 40
04:31 - so we need it to be
04:33 - 40 three hundreths of faceSize
04:36 - which is really, well lets see
04:39 - four over 30 which we can
04:41 - simplify down to two over 15
04:44 - so we're going to say
04:45 - two over fifteen times faceSize
04:50 - by the way
04:50 - if you're new to fractions
04:52 - and that math is tricky for you
04:54 - you can learn more about fractions
04:56 - on khanacademy
04:57 - and come back here when you're
04:59 - feeling ready
05:00 - here, you just go there
05:02 - ok
05:03 - so lets try resizing the face again
05:06 - Haha! Check it out
05:08 - the mouth and the eyes resize
05:10 - proportionally to the face
05:11 - but you probably noticed
05:13 - something is wrong
05:14 - the eyes and the mouth
05:16 - are still sticking out of the face
05:19 - even though they are
05:20 - much more appropriately sized
05:23 - That is because we still have
05:24 - some hard-coded numbers
05:26 - in our ellipse commands
05:28 - some numbers that should actually
05:30 - be fractions of variables instead
05:33 - here, I'll show you
05:34 - So for the eye ellipse we have
05:37 - x minus 50 for the x position
05:40 - so this means it's always x minus 50
05:43 - even if we make our faceSize
05:45 - smaller than 50 pixels
05:46 - and that definitely doesn't make sense
05:48 - because that means that the left eye
05:49 - is going to be
05:50 - not even in the face anymore
05:52 - so it should be x minus some fraction
05:55 - the size of our face
05:57 - and we can figure out the fraction
05:59 - the same way
06:00 - 50 relative to the original 300
06:03 - so 50 over 300, five over 30, one over six
06:08 - so one over six times faceSize
06:12 - and we see another 50 here
06:14 - so we can do the same thing
06:16 - the same expression
06:17 - here we have 100 over 300
06:19 - that's going to be
06:20 - one third times faceSize
06:23 - this one is 60
06:24 - so that'll end up being
06:26 - one fifth times faceSize
06:29 - and here this is another 50
06:32 - so its one sixth again
06:34 - and then 40
06:35 - that's what we figured out up here
06:38 - two over 15
06:39 - so two over 15 times faceSize
06:45 - alright so lets try again
06:48 - Oh, look at that!
06:49 - Look at it. That's beautiful
06:51 - so good
06:52 - alright so let's review
06:54 - We created this variable
06:56 - that stored the size of the face
06:57 - and it just stores a number
06:59 - then we have these mouthSize
07:01 - and eyeSize variables
07:03 - and we calculate them based as fractions
07:05 - of faceSize
07:06 - to make sure that
07:07 - their values always changed
07:09 - based on what we start this one off as
07:12 - then all of the offsets are calculated
07:15 - based on faceSize too
07:16 - to make sure the position
07:18 - inside the face changes
07:19 - if faceSize changes
07:22 - Whoo! Alright.
07:23 - So now that we really understand
07:24 - how to make variables
07:25 - dependant on the values of other variables
07:27 - we can do so much more with our programmes
07:30 - let's celebrate by making Winston
07:32 - Huge! yeah, go Winston!

Cleaned transcript:

We're back with Winston. We now have both an x and a y variable for Winston's position. So we can move him sideways Up and down, woo! Very nice. Now, let's reset these variables with 200 and 200 and review how this program works. So starting here, we've got an eyeSize variable. It's being used to control the eye size, because the eyes are all 40 pixels wide and 40 pixels tall. And then we have these x and y variables, and those position the center of the face. And you can see them used in this ellipse command here that draws the big yellow circle. And then down here, for the eyes, the x and y are used again. And here, the eyes are positioned relative to the center of the face. So maybe this one is fifty pixels to the left of the center and this one is a hundred pixels to the right of the center. OK. So pretty cool and that's why we're able to move Winston up and down Now, I want to be able to control more things about Winston's face with variables so I want to figure out what else in the program we can store as variables to do that I'm going to go through each line of code and look for what we call hardcoded numbers those are numbers that are just literal numbers not variables or dependant on variables so lets start here in the first ellipse call we have 300 and 300 for the width and height those are just literal numbers so lets make a variable for those instead called faceSize and have it store 300 now we'll just write faceSize, faceSize OK So keep going and skip colours now the ellipse commands are either they're all variables or dependant on variables so I'm going to leave them like this for now and then the mouth command those are dependant on x and y but these here are just literal numbers 150 and 150 so we're going to say mouthSize that's a good name equals 150 we'll replace this with mouthSize and mouthSize alright so now we have the sizes of the shapes stored as variables at the top that means that its really easy for us to change the sizes like this like Wooo Winston's hungry and then maybe like, you know, Winston's got hungry and then he eats lots of donuts and then he gets super big alright but there is something I don't like about the program right now So if I make the face size really small it starts to look funny because the eyes and the mouth are sticking out of the face and at certain points it doesn't even really look like they're connected to that face or its not really a face any more, is it? So what I really want to happen is that when I change faceSize I want the eyes and the mouth I want their size to change along with it so if I make faceSize be half the size I want the mouth to be half the size too so that means that I want to calculate mouthSize and eyeSize as fractions of faceSize alright lets reset these variables and I'll show you what I mean Let's start with mouthSize so right now faceSize is 300 and mouthSize is 150 so if we think of about them relative to each other we'd say that faceSize is twice as big as mouthSize or that mouthSize is half the size of faceSize and we can write that in code like this one half times faceSize ok so this line of code says that we take the value of faceSize multiply it by a half and store that in mouthSize so that if we change this here it would figure out what half of that was and that would become mouthSize Perfect! That's what we want So now eyeSize so faceSize is 300 and eyeSize is 40 so we need it to be 40 three hundreths of faceSize which is really, well lets see four over 30 which we can simplify down to two over 15 so we're going to say two over fifteen times faceSize by the way if you're new to fractions and that math is tricky for you you can learn more about fractions on khanacademy and come back here when you're feeling ready here, you just go there ok so lets try resizing the face again Haha! Check it out the mouth and the eyes resize proportionally to the face but you probably noticed something is wrong the eyes and the mouth are still sticking out of the face even though they are much more appropriately sized That is because we still have some hardcoded numbers in our ellipse commands some numbers that should actually be fractions of variables instead here, I'll show you So for the eye ellipse we have x minus 50 for the x position so this means it's always x minus 50 even if we make our faceSize smaller than 50 pixels and that definitely doesn't make sense because that means that the left eye is going to be not even in the face anymore so it should be x minus some fraction the size of our face and we can figure out the fraction the same way 50 relative to the original 300 so 50 over 300, five over 30, one over six so one over six times faceSize and we see another 50 here so we can do the same thing the same expression here we have 100 over 300 that's going to be one third times faceSize this one is 60 so that'll end up being one fifth times faceSize and here this is another 50 so its one sixth again and then 40 that's what we figured out up here two over 15 so two over 15 times faceSize alright so lets try again Oh, look at that! Look at it. That's beautiful so good alright so let's review We created this variable that stored the size of the face and it just stores a number then we have these mouthSize and eyeSize variables and we calculate them based as fractions of faceSize to make sure that their values always changed based on what we start this one off as then all of the offsets are calculated based on faceSize too to make sure the position inside the face changes if faceSize changes Whoo! Alright. So now that we really understand how to make variables dependant on the values of other variables we can do so much more with our programmes let's celebrate by making Winston Huge! yeah, go Winston!
