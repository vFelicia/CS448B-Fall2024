With timestamps:

00:00 - - [Voiceover] So far,
I've been showing you
00:02 - how to use jQuery to make changes
00:04 - that we could have just made in HTML.
00:08 - What's the point?
00:10 - Well, now I'm going to
show you how to use jQuery
00:13 - to make changes to your page
00:15 - after the user has done some action,
00:17 - like clicked a button, scroll the page,
00:20 - typed in a form, anything like that.
00:23 - Finally, you'll be making
your pages truly interactive.
00:28 - So in order to react to user
events, you have to tell jQuery
00:33 - which user events you're interested in
00:35 - and what function you want it to call
00:38 - when that event happens.
00:40 - I'll demonstrate how to do
that with a button click,
00:44 - one of the simplest of events.
00:47 - First, I'll add a button tag to the HTML.
00:50 - Let's see.
00:52 - Put it at the bottom or
maybe at the top of the page.
00:56 - Go at the top.
00:57 - So, ''
01:02 - 'Crocodilize',
01:04 - great verb.
01:06 - All right.
01:07 - So I have that button there now
01:09 - and if I click it,
absolutely nothing happens,
01:12 - so I need to use jQuery
to make it do something.
01:17 - Down in the JavaScript,
I'll start by writing jQuery
01:20 - to select the button.
01:24 - All right. Now, I'm going
to call the 'on' method,
01:28 - which is what we use in jQuery
01:30 - for attaching event listeners.
01:33 - The first parameter that I pass
01:35 - is a string with the event name,
01:38 - which is just 'click'.
01:41 - The second parameter is
a 'callback function',
01:44 - the function that we want to be called
01:47 - whenever the event actually happens.
01:52 - All right. So what should
I put in this function?
01:56 - Well, here's a little tip.
01:59 - I usually start off
with just a console.log
02:02 - to make sure that it
worked before I get fancy.
02:05 - "Whoa, you clicked me.
02:07 - "You like me."
02:08 - All right.
02:09 - Now pause the talk-through,
02:11 - open up your JavaScript console,
02:13 - click the button and see if it worked.
02:18 - Okay. So hopefully, you saw what I saw.
02:21 - Now, let's make it actually do something.
02:25 - So, what I'm gonna do
02:27 - is take all the DOM modifying code
02:29 - from the previous talk-throughs
02:31 - and I'm just going to cut it
02:36 - and paste it into a function.
02:39 - Actually, let me define the function,
02:41 - so 'var crocodilize = function()'
02:46 - and then I can just paste
02:49 - our code in there,
02:51 - indent it all nice.
02:53 - Okay, cool. Now I have a function
02:56 - that knows how to crocodilize a page
02:59 - and I could just call that function
03:02 - from the 'callback function'.
03:05 - Ooh, yay!
03:07 - So, I want you to experience this as well.
03:10 - Try pausing the talk-through
and clicking the button.
03:16 - Isn't that awesome?
03:17 - All right. So you're gonna try this out
03:20 - in the next challenge.

Cleaned transcript:

[Voiceover] So far, I've been showing you how to use jQuery to make changes that we could have just made in HTML. What's the point? Well, now I'm going to show you how to use jQuery to make changes to your page after the user has done some action, like clicked a button, scroll the page, typed in a form, anything like that. Finally, you'll be making your pages truly interactive. So in order to react to user events, you have to tell jQuery which user events you're interested in and what function you want it to call when that event happens. I'll demonstrate how to do that with a button click, one of the simplest of events. First, I'll add a button tag to the HTML. Let's see. Put it at the bottom or maybe at the top of the page. Go at the top. So, '' 'Crocodilize', great verb. All right. So I have that button there now and if I click it, absolutely nothing happens, so I need to use jQuery to make it do something. Down in the JavaScript, I'll start by writing jQuery to select the button. All right. Now, I'm going to call the 'on' method, which is what we use in jQuery for attaching event listeners. The first parameter that I pass is a string with the event name, which is just 'click'. The second parameter is a 'callback function', the function that we want to be called whenever the event actually happens. All right. So what should I put in this function? Well, here's a little tip. I usually start off with just a console.log to make sure that it worked before I get fancy. "Whoa, you clicked me. "You like me." All right. Now pause the talkthrough, open up your JavaScript console, click the button and see if it worked. Okay. So hopefully, you saw what I saw. Now, let's make it actually do something. So, what I'm gonna do is take all the DOM modifying code from the previous talkthroughs and I'm just going to cut it and paste it into a function. Actually, let me define the function, so 'var crocodilize = function()' and then I can just paste our code in there, indent it all nice. Okay, cool. Now I have a function that knows how to crocodilize a page and I could just call that function from the 'callback function'. Ooh, yay! So, I want you to experience this as well. Try pausing the talkthrough and clicking the button. Isn't that awesome? All right. So you're gonna try this out in the next challenge.
