With timestamps:

00:00 - - [Narrator] This is a
tool that will help us
00:02 - visualize exactly what
the computer's doing.
00:04 - The line of code that's on,
00:06 - the memory it's storing
00:07 - and what it's out putting.
00:09 - So let's begin.
00:10 - The computer will start
at the very beginning
00:14 - in the header of the outer for loop.
00:17 - The first thing it does,
00:19 - is initialize the variable I to one.
00:22 - We can see here, that it says
00:24 - in memory I is now equal to one.
00:28 - The next thing it does,
00:29 - is check that I is less
than or equal to 10.
00:32 - Since one is less than 10, that's true
00:35 - and now the computer knows,
00:36 - it can enter this for loop body, here.
00:40 - So let's go next.
00:43 - Inside the for loop,
00:44 - it sees another for loop.
00:48 - This one has a very similar header.
00:51 - But this time it's going to
set a different variable, J.
00:55 - So it sets J equal to one
00:57 - and we can see that the memory is updated.
01:00 - And it checks to make sure that
01:01 - J is less than or equal to 10,
01:03 - which it is.
01:04 - And that means it can continue
01:05 - into the body of this inner for loop.
01:10 - It goes into the body
01:11 - and sees this console.log statement.
01:14 - Now here I'm using console.log
01:16 - instead of print line,
01:17 - because it's a slightly
different environment,
01:19 - but it does the same thing.
01:21 - So when it executes that,
01:22 - it'll multiply I times J.
01:24 - We can see I is one and J is one.
01:26 - So we're gonna get a very
exciting, one, beautiful!
01:31 - All right now, it goes back
to this inner for loop.
01:36 - Because it's not don't with it yet.
01:38 - The first thing it needs to do
01:39 - is execute this increment part,
01:41 - because that always happens
at the end of a repetition.
01:47 - So once it does that, you
can see that J is now two.
01:51 - So now it's going to check the condition
01:53 - to see if it's still true.
01:55 - Is J still less than or equal to 10.
01:58 - It is, so that means it can keep going
02:01 - into the body of this loop.
02:05 - And once again, it's going
to display I times J.
02:08 - This time J is two and I is still one.
02:10 - So we're gonna see two, great.
02:14 - So, now it goes back once
again to the inner for loop.
02:18 - It's going to change J to three,
02:21 - see that it's less than 10.
02:23 - Go into the loop.
02:25 - Execute that there.
02:26 - And this is how we're gonna get through
02:29 - the first multiples,
02:33 - all the way, you know, up to 10, ready?
02:40 - Up to nine.
02:43 - And the final execution,
02:46 - will be when J is 10.
02:48 - Once it's set J equal to 10
02:52 - and gets to 11,
02:54 - it can no longer enter this loop.
02:57 - Because it says, is 11
less than or equal to 10?
03:00 - No, it is not.
03:02 - At that point, it knows
that this loop is done,
03:05 - it's going to exit it and go back
03:08 - to the outer for loop, here.
03:12 - So now it goes back.
03:14 - And in this outer for loop,
03:15 - I is still only equal to one,
03:19 - and it hasn't executed
this I plus plus, yet.
03:23 - It finally needs to do this
03:24 - now that it's done executing
the inside instructions.
03:27 - So we should see, I become two, very good.
03:31 - Now it's two.
03:32 - And now we can see, oh, is
two less than or equal to 10?
03:35 - Yes it is.
03:37 - And it's gonna go inside
to that inner for loop.
03:41 - And execute that inner for loop.
03:43 - Now see that J resets to one.
03:46 - So that's really interesting,
03:49 - because it's starting all
over again with this for loop.
03:53 - So now when it gets here,
03:54 - it's gonna do I times J,
03:57 - this times it's doing two times one.
03:59 - We're gonna see two.
04:01 - So this time, I is gonna be two,
04:02 - the whole time.
04:03 - And J is gonna go from one to 10.
04:06 - So we should see two times one
04:08 - and then we should see, two times two.
04:11 - And then we should see, two times three,
04:14 - and so on.
04:16 - So this'll keep going until
it gets to J equals 10
04:20 - and then it's going to go back
up to that outer for loop,
04:23 - and I will become three and
it'll keep going and keep going.
04:27 - So hopefully this gives you an idea
04:29 - for what is actually happening
04:31 - with the computer behind the scenes.
04:34 - If you want, you can try out
this visualization yourself
04:37 - and go all the way through
04:39 - every execution of the
code, all 342 steps.

Cleaned transcript:

[Narrator] This is a tool that will help us visualize exactly what the computer's doing. The line of code that's on, the memory it's storing and what it's out putting. So let's begin. The computer will start at the very beginning in the header of the outer for loop. The first thing it does, is initialize the variable I to one. We can see here, that it says in memory I is now equal to one. The next thing it does, is check that I is less than or equal to 10. Since one is less than 10, that's true and now the computer knows, it can enter this for loop body, here. So let's go next. Inside the for loop, it sees another for loop. This one has a very similar header. But this time it's going to set a different variable, J. So it sets J equal to one and we can see that the memory is updated. And it checks to make sure that J is less than or equal to 10, which it is. And that means it can continue into the body of this inner for loop. It goes into the body and sees this console.log statement. Now here I'm using console.log instead of print line, because it's a slightly different environment, but it does the same thing. So when it executes that, it'll multiply I times J. We can see I is one and J is one. So we're gonna get a very exciting, one, beautiful! All right now, it goes back to this inner for loop. Because it's not don't with it yet. The first thing it needs to do is execute this increment part, because that always happens at the end of a repetition. So once it does that, you can see that J is now two. So now it's going to check the condition to see if it's still true. Is J still less than or equal to 10. It is, so that means it can keep going into the body of this loop. And once again, it's going to display I times J. This time J is two and I is still one. So we're gonna see two, great. So, now it goes back once again to the inner for loop. It's going to change J to three, see that it's less than 10. Go into the loop. Execute that there. And this is how we're gonna get through the first multiples, all the way, you know, up to 10, ready? Up to nine. And the final execution, will be when J is 10. Once it's set J equal to 10 and gets to 11, it can no longer enter this loop. Because it says, is 11 less than or equal to 10? No, it is not. At that point, it knows that this loop is done, it's going to exit it and go back to the outer for loop, here. So now it goes back. And in this outer for loop, I is still only equal to one, and it hasn't executed this I plus plus, yet. It finally needs to do this now that it's done executing the inside instructions. So we should see, I become two, very good. Now it's two. And now we can see, oh, is two less than or equal to 10? Yes it is. And it's gonna go inside to that inner for loop. And execute that inner for loop. Now see that J resets to one. So that's really interesting, because it's starting all over again with this for loop. So now when it gets here, it's gonna do I times J, this times it's doing two times one. We're gonna see two. So this time, I is gonna be two, the whole time. And J is gonna go from one to 10. So we should see two times one and then we should see, two times two. And then we should see, two times three, and so on. So this'll keep going until it gets to J equals 10 and then it's going to go back up to that outer for loop, and I will become three and it'll keep going and keep going. So hopefully this gives you an idea for what is actually happening with the computer behind the scenes. If you want, you can try out this visualization yourself and go all the way through every execution of the code, all 342 steps.
