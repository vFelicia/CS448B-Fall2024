With timestamps:

00:00 - (upbeat music)
00:14 - - See, I started working on JQuery in 2005
00:19 - before then it wasn't,
JQuery wasn't even a thing.
00:22 - It was just a collection of
tools that I had written.
00:27 - It was mostly because
00:28 - I had been creating a number of websites
00:31 - and resources around that time
00:33 - and I kept wanting to have
00:36 - the certain utilities
00:38 - to make my development easier,
00:41 - and part of that was
00:46 - one just working around
sort of like the browser
00:49 - incompatibilities that
existed at the time.
00:51 - There was, you know, Internet
Explorer, and Firefox.
00:56 - It was just so hard to
try and develop against
00:58 - all these different
browsers simultaneously.
01:01 - So that was one issue, but the other issue
01:02 - was just that I felt that the preexisting
01:06 - development tools,
01:07 - especially the JavaScript
development tools,
01:10 - could be better.
01:13 - The most popular library at the time was
01:15 - the prototype JavaScript library
01:18 - and this was one that was bundled with the
01:21 - Ruby on Rails framework,
01:23 - so it was popular and it
was taking off with rails,
01:26 - and that library actually I found it to be
01:31 - extremely informative.
01:34 - That was the first time I
had seen a JavaScript library
01:37 - written in a nice, clean,
obagetoriantive manner,
01:42 - where you have nice, all these
nice functional paradigms
01:46 - built into it,
01:48 - and I didn't really realize
that JavaScript could be so
01:51 - beautiful and elegant.
01:53 - And once I saw that, it really inspired me
01:56 - to want to build something even better,
01:58 - and I realized that prototype
primarily focused on
02:02 - the JavaScript language
02:03 - whereas there weren't
many tools that focused on
02:06 - the JavaScript language
inside the browser,
02:08 - specifically manipulated HTML in the DOM
02:12 - and so there was this gap here
02:14 - and there was this big usability
02:19 - chasm and so that's when I
started to build different tools
02:23 - and different libraries
02:24 - and eventually all these kind of
02:27 - glommed together into
a single library, which
02:31 - I ended up calling JQuery.
02:33 - I was originally gonna call it
02:35 - JSelect, but that domain
was taken or something
02:39 - and I ended up going with,
02:40 - going with JQuery
02:43 - and ended up releasing it January of 2006.
02:48 - I should say, at the
time I was in college.
02:52 - I was doing all of this
while I was in college
02:54 - and all these different projects
and stuff I was working on
02:57 - were just various side
projects and things that I had
03:00 - and JQuery kind of spun
out of these side projects.
03:05 - And I should say none of those
side projects exist anymore.
03:07 - JQuery is the only one that still exists.
03:09 - So the Selector Pattern came from,
03:12 - at least where I saw it from,
03:14 - was this library written by
this developer in the UK,
03:18 - Simon Willison, and he created this method
03:24 - where it was like, "get
elements by Selector"
03:27 - if I remember correctly,
03:28 - and it allowed you to just
run a simple CSS Selector
03:31 - and find some elements,
03:32 - but it was very, very primitive.
03:34 - You could only do just
the most basic of queries
03:36 - and it didn't have the full, nice,
03:38 - CSS two inches, three, and everything.
03:42 - And so one of the things I wanted was one,
03:44 - I wanted a better version of that library,
03:46 - a more comprehensive version,
03:48 - and additionally, I
wanted to make the process
03:51 - of attaching events into the page.
03:54 - Because when you're building
03:56 - an interactive JavaScript application,
03:58 - you need to listen for when the user's
04:00 - gonna be doing certain things
04:02 - and so doing that process
of finding an element
04:04 - and attach an event to it,
04:06 - I wanted to optimize completely for that.
04:09 - And so that's really what JQuery was
04:11 - initially all about
04:13 - and it wasn't until later
that I started in adding
04:15 - and other things like being
able to have like animations
04:18 - and it wasn't even until
after I released it
04:20 - that I added Ajax and stuff.
04:22 - That's because other people wanted it.
04:24 - I wasn't even using that personally.
04:27 - So it really was, I was
definitely inspired by
04:32 - all these other developers
and their libraries
04:35 - and they just weren't quite perfect.
04:39 - I wanted to be just that little bit better
04:42 - to all fit together.
04:43 - - So how'd it go from you
sort of making something
04:48 - and giving it, to it sort of
taking on a life of it's own
04:51 - cause it didn't take long for it
04:53 - to take on a life of its own.
04:57 - - It felt like it took a long time to
04:59 - take on a life of its own.
05:01 - Mostly because, so like you know,
05:03 - release it January 2006,
05:05 - and one of the very first
design decisions I made,
05:07 - I guess there were a couple that I made
05:09 - right from the start that helped a lot.
05:11 - One was that I provided an
explicit plugin architecture,
05:15 - so that people could write plugins
05:17 - and add them into the JQuery library
05:19 - and then now they could
get the full advantage
05:21 - of this framework.
05:24 - The other decision I made was that
05:26 - on the very first day it was released,
05:28 - I had documentation written.
05:30 - Like I sat down and went
through every method
05:32 - and documented it and how it worked
05:33 - and provided little examples
05:35 - and one thing I think
is interesting is that
05:38 - from January 2006 when
I released the library,
05:42 - to January 2007, JQuery
was the only library,
05:46 - the only JavaScript
library with documentation.
05:49 - All the others were just
like, "Read the source code"
05:51 - or "Go through revision
control" or whatever it was
05:54 - and that always really surprised me.
05:58 - Well, I think it's just a
side effect of developers.
06:00 - Like you want to write your code,
06:02 - you don't want to do the boring stuff
06:06 - and writing docs and whatever,
06:08 - and so at least as far as
the growth of the library,
06:14 - there were a lot of decisions that I made
06:17 - over the course of its history
06:20 - that weren't code related.
06:23 - And one of the things I always
try to emphasize is that
06:27 - when you're trying to
manage a good project,
06:30 - especially a good open source project,
06:32 - code is only a very small portion
06:34 - of the total equation.
06:37 - You have to spend a lot of time
06:39 - and a lot of effort in
06:42 - making something that
06:44 - people are going to want to learn,
06:47 - that it's is easy for them to learn,
06:49 - and that once they do learn it,
06:51 - they don't get frustrated
and leave later on.
06:54 - And you have this whole flow
06:57 - that you have to make sure
at every step of the way
06:58 - that people are happy and as satisfied
07:01 - and that they're learning,
07:02 - so that usually involves doing things like
07:04 - you have to make sure
07:05 - you have a clear website,
07:08 - that it's easy to download
whatever you're trying to give,
07:11 - that the documentation is very clear,
07:13 - that you have like a very nice
like Getting Started guide,
07:18 - but then additionally
that you have a community
07:19 - built up around this.
07:21 - Now the very first person I
brought on to the JQuery team,
07:25 - at this point it was just me,
07:27 - then the next person I brought in
07:28 - was actually someone to
help manage the community
07:32 - and not another developer per se
07:34 - and although he was a developer.
07:37 - And because the reason
why I wanted this was
07:41 - I wanted to make sure that if
anyone was having a problem
07:44 - anywhere, that their needs
07:47 - were going to be taken into account
07:49 - and that we would be able to help and fix
07:50 - whatever issue that they were hitting.
07:52 - So we were just extremely proactive
07:55 - in fixing browser issues,
07:57 - in finding just issues in
the library in general,
08:01 - and Summer of 2006 till the end of 2006,
08:05 - I was actually in Y Combinator,
08:08 - the startup accelerator
run by Paul Graham and co.
08:13 - and at that time they were in Boston
08:15 - and I moved to Boston with some friends.
08:18 - We tried to do a startup,
08:20 - which ended up failing.
08:21 - Well we did not get enough funding
08:23 - and it just didn't take off.
08:24 - Once the startup went away,
08:27 - I ended up joining Mozilla
and there I worked as
08:31 - primarily for many years,
a JavaScript evangelist.
08:34 - So my job was to promote JavaScript
08:36 - and get people, you know,
08:38 - to understand what's coming
in the specifications,
08:41 - tools, and all sorts of stuff like that.
08:43 - But again, I wasn't actually working
08:45 - on JQuery as part of my job.
08:47 - Like it was still very much like,
08:49 - I would do that and then in my spare time
08:51 - I would just be doing mailing lists
08:54 - and fixing bugs and all those
sort of things you have to do.
08:57 - It wasn't until about
my last year at Mozilla,
09:01 - so like about 2010 to 2011,
that they actually said,
09:07 - "Okay, you can work on JQuery full time"
09:09 - and that's when I started working on it.
09:11 - And it was great because
what I ended up doing
09:14 - during that time
09:16 - was I put a lot of effort into
09:19 - making sure there was
infrastructure in place
09:21 - so that if I wasn't working on it,
09:24 - if I wasn't there on a day to day basis,
09:26 - it could continue to exist
09:28 - and part of that was
setting up a non-profit
09:32 - and making sure that
there were enough people
09:35 - working in every aspect of it
09:36 - such that when I eventually
came and joined Khan Academy,
09:41 - I actually stepped down
from the JQuery project
09:43 - and everything's been
running very well since
09:46 - and I can just use JQuery
now as a happy consumer.

Cleaned transcript:

(upbeat music) See, I started working on JQuery in 2005 before then it wasn't, JQuery wasn't even a thing. It was just a collection of tools that I had written. It was mostly because I had been creating a number of websites and resources around that time and I kept wanting to have the certain utilities to make my development easier, and part of that was one just working around sort of like the browser incompatibilities that existed at the time. There was, you know, Internet Explorer, and Firefox. It was just so hard to try and develop against all these different browsers simultaneously. So that was one issue, but the other issue was just that I felt that the preexisting development tools, especially the JavaScript development tools, could be better. The most popular library at the time was the prototype JavaScript library and this was one that was bundled with the Ruby on Rails framework, so it was popular and it was taking off with rails, and that library actually I found it to be extremely informative. That was the first time I had seen a JavaScript library written in a nice, clean, obagetoriantive manner, where you have nice, all these nice functional paradigms built into it, and I didn't really realize that JavaScript could be so beautiful and elegant. And once I saw that, it really inspired me to want to build something even better, and I realized that prototype primarily focused on the JavaScript language whereas there weren't many tools that focused on the JavaScript language inside the browser, specifically manipulated HTML in the DOM and so there was this gap here and there was this big usability chasm and so that's when I started to build different tools and different libraries and eventually all these kind of glommed together into a single library, which I ended up calling JQuery. I was originally gonna call it JSelect, but that domain was taken or something and I ended up going with, going with JQuery and ended up releasing it January of 2006. I should say, at the time I was in college. I was doing all of this while I was in college and all these different projects and stuff I was working on were just various side projects and things that I had and JQuery kind of spun out of these side projects. And I should say none of those side projects exist anymore. JQuery is the only one that still exists. So the Selector Pattern came from, at least where I saw it from, was this library written by this developer in the UK, Simon Willison, and he created this method where it was like, "get elements by Selector" if I remember correctly, and it allowed you to just run a simple CSS Selector and find some elements, but it was very, very primitive. You could only do just the most basic of queries and it didn't have the full, nice, CSS two inches, three, and everything. And so one of the things I wanted was one, I wanted a better version of that library, a more comprehensive version, and additionally, I wanted to make the process of attaching events into the page. Because when you're building an interactive JavaScript application, you need to listen for when the user's gonna be doing certain things and so doing that process of finding an element and attach an event to it, I wanted to optimize completely for that. And so that's really what JQuery was initially all about and it wasn't until later that I started in adding and other things like being able to have like animations and it wasn't even until after I released it that I added Ajax and stuff. That's because other people wanted it. I wasn't even using that personally. So it really was, I was definitely inspired by all these other developers and their libraries and they just weren't quite perfect. I wanted to be just that little bit better to all fit together. So how'd it go from you sort of making something and giving it, to it sort of taking on a life of it's own cause it didn't take long for it to take on a life of its own. It felt like it took a long time to take on a life of its own. Mostly because, so like you know, release it January 2006, and one of the very first design decisions I made, I guess there were a couple that I made right from the start that helped a lot. One was that I provided an explicit plugin architecture, so that people could write plugins and add them into the JQuery library and then now they could get the full advantage of this framework. The other decision I made was that on the very first day it was released, I had documentation written. Like I sat down and went through every method and documented it and how it worked and provided little examples and one thing I think is interesting is that from January 2006 when I released the library, to January 2007, JQuery was the only library, the only JavaScript library with documentation. All the others were just like, "Read the source code" or "Go through revision control" or whatever it was and that always really surprised me. Well, I think it's just a side effect of developers. Like you want to write your code, you don't want to do the boring stuff and writing docs and whatever, and so at least as far as the growth of the library, there were a lot of decisions that I made over the course of its history that weren't code related. And one of the things I always try to emphasize is that when you're trying to manage a good project, especially a good open source project, code is only a very small portion of the total equation. You have to spend a lot of time and a lot of effort in making something that people are going to want to learn, that it's is easy for them to learn, and that once they do learn it, they don't get frustrated and leave later on. And you have this whole flow that you have to make sure at every step of the way that people are happy and as satisfied and that they're learning, so that usually involves doing things like you have to make sure you have a clear website, that it's easy to download whatever you're trying to give, that the documentation is very clear, that you have like a very nice like Getting Started guide, but then additionally that you have a community built up around this. Now the very first person I brought on to the JQuery team, at this point it was just me, then the next person I brought in was actually someone to help manage the community and not another developer per se and although he was a developer. And because the reason why I wanted this was I wanted to make sure that if anyone was having a problem anywhere, that their needs were going to be taken into account and that we would be able to help and fix whatever issue that they were hitting. So we were just extremely proactive in fixing browser issues, in finding just issues in the library in general, and Summer of 2006 till the end of 2006, I was actually in Y Combinator, the startup accelerator run by Paul Graham and co. and at that time they were in Boston and I moved to Boston with some friends. We tried to do a startup, which ended up failing. Well we did not get enough funding and it just didn't take off. Once the startup went away, I ended up joining Mozilla and there I worked as primarily for many years, a JavaScript evangelist. So my job was to promote JavaScript and get people, you know, to understand what's coming in the specifications, tools, and all sorts of stuff like that. But again, I wasn't actually working on JQuery as part of my job. Like it was still very much like, I would do that and then in my spare time I would just be doing mailing lists and fixing bugs and all those sort of things you have to do. It wasn't until about my last year at Mozilla, so like about 2010 to 2011, that they actually said, "Okay, you can work on JQuery full time" and that's when I started working on it. And it was great because what I ended up doing during that time was I put a lot of effort into making sure there was infrastructure in place so that if I wasn't working on it, if I wasn't there on a day to day basis, it could continue to exist and part of that was setting up a nonprofit and making sure that there were enough people working in every aspect of it such that when I eventually came and joined Khan Academy, I actually stepped down from the JQuery project and everything's been running very well since and I can just use JQuery now as a happy consumer.
