00:00 - hey guys this is Kazi from clever
00:01 - programmer calm where you learn to code
00:03 - smarter in the notes below the problem
00:07 - who's the bigger guys there so take a
00:09 - shot at it the solution is also there
00:12 - but we're going to walk through the
00:13 - solution right now so let's get to it
00:15 - I'm sorry the biggest guy who's the
00:18 - biggest guy okay so essentially if you
00:20 - read the problem it says write a
00:22 - function biggest guy that takes in three
00:24 - numbers as input and returns the biggest
00:27 - one so I take three numbers and I find
00:30 - whoever is the biggest and then I return
00:32 - it okay so this one gets more
00:34 - challenging and if you've tried it on
00:36 - your own you'll notice there are a lot
00:37 - of if else statements that you're doing
00:39 - also on line eight I have a bonus
00:42 - challenge for you guys it's all right of
00:45 - one line solution okay what I mean by
00:48 - that is like two lines right because you
00:51 - have to have one line to define the
00:52 - function obviously and then you have to
00:54 - have one line for the solution so that's
00:55 - what I mean by one line okay now it's
00:58 - medium to hard difficulty because
01:01 - you guys haven't done anything like this
01:03 - before so it'll be challenging if you
01:06 - want to do the bonus challenge and I'll
01:08 - go over that as well first I'm going to
01:11 - go through the normal way so let's
01:13 - define a function called the biggest guy
01:15 - that takes in three numbers a B and C
01:19 - okay or we can call it num1 num2 and num
01:24 - three okay now the approach that I want
01:29 - to take against this is I want to find
01:31 - who's the bigger guy between num1 and
01:34 - num2 okay so find bigger guy between
01:38 - num1 and num2
01:42 - then after finding the bigger guy
01:44 - compare
01:47 - after finding the bigger guy I want to
01:50 - find a bigger guy between
01:54 - I'm sorry or let's just say biggest guy
01:58 - right between
02:01 - big guy bigger guy oops
02:06 - and number three okay that's kind of the
02:10 - approach I want to take I want to find
02:12 - who's bigger between num1 and num2 and
02:15 - then once i find these guys right i'll
02:18 - find like the bigger guy kind of whoops
02:22 - bigger guy
02:24 - then i want to check the bigger guy
02:27 - against num three and then see who's the
02:28 - biggest okay so with that pseudocode /
02:31 - english written formula let's go ahead
02:35 - and try to code this up so
02:38 - if num1 is
02:41 - greater than num2 then big Gert guy is
02:46 - equal to num 1
02:50 - right else
02:52 - bigger guy is equal to num - okay and
02:59 - once so now I've found the bigger guy
03:02 - now I just have to compare the bigger
03:04 - guy with num 3 okay so
03:08 - if bigger guy is
03:13 - greater than num 3 then biggest guy is
03:18 - equal to bigger guy
03:22 - else
03:25 - biggest guy is equal to num 3
03:30 - return num 3 okay I haven't tested this
03:35 - function yet hopefully it's right let's
03:38 - let's comment out line 44 which tests
03:42 - our function right we want to run this
03:44 - function because these are the tests
03:46 - I've written for you guys and it allows
03:48 - you to test your functions and if we
03:50 - give it one three two it should return
03:52 - three if we give it 30 10 20 it should
03:55 - return 30 if we give it in any order
03:57 - should return 30 if we give it strings
04:00 - it should also know what to do don't
04:01 - worry about that you don't have to do
04:03 - anything extra that's just a trick you
04:04 - guys
04:05 - python knows how to compare strings okay
04:08 - so let's take this bad boy out for a run
04:12 - we got an assertion error on line 44
04:17 - what's the error
04:19 - did we like not write this correctly it
04:21 - was going to test biggest it should be
04:24 - called guy I don't know why I have by
04:29 - guy
04:31 - but what's the assertion error oh
04:41 - right cut yep return biggest guy duh
04:46 - okay boom there you go success your code
04:51 - is correct okay so it says I'm running
04:52 - tests and then it says good job your
04:55 - code is correct
04:57 - alright that's it for this one now let's
05:02 - try to change this and coat it up in a
05:05 - better way ok let's coat it up in kind
05:09 - of like a one line solution so
05:13 - the one line solution I'm ok I'm kind of
05:18 - cheating it's not really a one line
05:20 - solution
05:21 - what it is is um it wants you to kind of
05:24 - use your previously written solution ok
05:27 - so you can say define bigger guy of num1
05:32 - and num2 and you can say if num 1 is
05:37 - greater than num to return num 1
05:40 - else return num2 okay so remember this
05:45 - was the function you wrote for bigger
05:47 - guy um
05:49 - so now let's use that function to do
05:51 - this problem here here's here's the nice
05:55 - solution so I can say return bigger guy
05:59 - num 1 common um -
06:02 - and I won't actually call my function
06:05 - here again bigger guy
06:09 - of num1 comma num2 and then compare that
06:13 - against number three so if I run it it
06:16 - again says success your code is correct
06:18 - now how does this work well I
06:22 - want you to pause the video and try to
06:25 - think of your think of yourself how it
06:27 - works but now I'm going to go over how
06:29 - it actually works okay so this is a
06:30 - really nice problem here it is allowing
06:33 - you to use functions within functions
06:35 - okay
06:37 - well I have this guy here right so what
06:42 - can I do with this when I pass it like
06:45 - one let's say I have one three two here
06:47 - right those are the inputs I pass it in
06:50 - as you can see on line thirty two one
06:52 - three two so what does this do it calls
06:57 - a bigger guy function with one and three
06:59 - using the bigger guy function it finds
07:02 - the max of 1 and 3 so
07:04 - this whole thing evaluates to a 3
07:08 - then it fought it tries to find the
07:11 - bigger guy between 3 and number 3 number
07:14 - 3 is 2 so then we just go back to this
07:17 - function and find the bigger guy between
07:19 - 3 and 2 and then this function will
07:22 - return 3 and that's your solution
07:25 - notice this is the key here the notes
07:28 - right find bigger guy between num int
07:31 - num1 and num2 and then find the biggest
07:34 - guy between bigger guy and num 3 okay so
07:40 - let me go back and put it like this
07:44 - these notes will be here for you guys
07:46 - when you guys reviewing the video this
07:48 - is the solution ok and
07:52 - that's it we're getting closer to
07:55 - starting to now work on projects so like
07:58 - the Twilio api project where we will be
08:02 - kind of coding up some stuff and you can
08:05 - actually make a text messaging app
08:06 - through that and then we will also be
08:08 - getting to
08:09 - do some make some games like rock paper
08:13 - and scissors okay so a lot all these
08:16 - functions are very important for you to
08:17 - learn so then you can actually use these
08:20 - things when you're writing your own
08:22 - you're writing your own code you know
08:24 - how to think in the correct way
08:26 - one thing I want to reveal to you guys
08:29 - is Python has a built-in function called
08:31 - max that kind of does this and finds the
08:34 - biggest number all right so you can
08:37 - actually just say max of uh
08:40 - you know num1 num2
08:43 - num 3 and I can prove to you it works as
08:46 - if I returned look it says if I run it
08:49 - which I'm clicking it right now and
08:51 - running it it just a success your code
08:53 - is correct so max is a built-in function
08:56 - that finds the maximum between you know
08:58 - any numbers you give it okay
09:02 - thanks for watching if you haven't
09:04 - already go ahead and subscribe right now
09:07 - I'll see you guys in the next video