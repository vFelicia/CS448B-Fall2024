00:00 - in this video we're going to be building
00:02 - The Tick Tock web 3.0 adapt with an xjs
00:04 - and interior you're going to be able to
00:06 - upload your videos to the blockchain so
00:08 - that they are available forever and
00:11 - other users will be able to come over
00:12 - and review those videos and even give a
00:15 - thumbs up to them like you shared to
00:16 - this video so with that said smash that
00:19 - like button and subscribe to the channel
00:20 - let's just jump straight into all right
00:22 - so before we actually get started let's
00:23 - just go ahead and spin up this app
00:25 - because we haven't seen how it looks
00:26 - like so what I'm going to do is just
00:28 - type in yarn Dev in the terminal and
00:30 - that should pretty much get started with
00:33 - a that should pretty much like get our
00:36 - server up and running and we're gonna go
00:40 - ahead and get started with the Chrome
00:42 - and
00:43 - it's only because for whatever reason
00:45 - Safari isn't supporting
00:47 - any kind of wallets that's weird
00:51 - all right so let's see what we've got
00:54 - um we have this nice beautiful design
00:57 - that
00:58 - um
00:59 - that we got here so we got this nice
01:02 - beautiful design and this is what we're
01:04 - going to be working with so there's a
01:05 - bunch of like pre-added data and then
01:08 - there's gonna be this guy with the
01:10 - upload
01:12 - um
01:13 - what's that with the upload thing upload
01:17 - modal and then we will have a light
01:19 - button which uh yeah it's not defined so
01:24 - it doesn't work yet so that's fine but
01:25 - this record is spinning so we're good to
01:28 - go camera rolling all right wow there's
01:31 - a bunch of console a lot going on for no
01:33 - apparent reason let's actually get rid
01:35 - of those because
01:36 - you know how we roll we don't do
01:38 - unreasonable console logging
01:41 - there you go
01:42 - all right now with that said I think
01:45 - what we're going to be getting started
01:47 - with is just uh the contract so what I
01:50 - like to do initially is
01:53 - um use truffle to create a contract so
01:56 - that's literally what we're gonna type
01:58 - in truffle create a contract and it's
02:01 - gonna be called
02:05 - [Music]
02:07 - magically tick tock
02:11 - and before we actually forget about it
02:15 - because that's a tendency I like for
02:16 - whatever reason I do is go into your
02:18 - migrations folder and create a new file
02:22 - with the title of zero one
02:24 - deploy.js and not K ask if that doesn't
02:28 - exist
02:31 - there you go
02:35 - apples
02:37 - and what we're going to be doing in here
02:39 - is actually I'll just make this nice
02:42 - I'll make I'll make the text bigger and
02:44 - make things bigger that's what she said
02:49 - all right you should see it now right I
02:51 - just get up
02:53 - get a magnifying glass
02:55 - all right so cons Tick Tock these holes
02:59 - our teeth
03:00 - facts dot require Tick Tock what they
03:05 - basically we'll do is when you go into
03:07 - your Tick Tock dot Soul file
03:09 - um it'll look for this thing so
03:12 - and then just import it in the next stop
03:15 - module whoa
03:19 - I don't know what that is
03:22 - module dot exports
03:26 - um and we're going to explain function
03:28 - it's going to be it's going to have an
03:31 - input of deployer and then deploy the
03:35 - deploy Tick Tock that's literally what
03:36 - we're gonna look that's all we need and
03:39 - then um it's going to be only used when
03:41 - when we try to like deploy the contract
03:43 - so it's not necessary now but I keep
03:46 - forgetting so let's just get over with
03:47 - it and let's go into the contract
03:49 - huh
03:53 - all right so the version that we're
03:55 - going to be using is the zero point
03:58 - 8.16 I kind of forgot the numbers here
04:02 - and
04:03 - um
04:04 - let's just get started
04:06 - um so there's no need to have a
04:08 - Constructor in this case but there's a
04:11 - couple things that we're gonna do so
04:13 - I just want to like set up all the
04:15 - structs mappings all that kind of stuff
04:18 - ahead of time so let's just get started
04:20 - with a struct and and that's going to be
04:25 - um I'm sorry if it's going to be a video
04:26 - it's like a video object this is how
04:29 - it's going to look like
04:30 - these are the props that each video
04:32 - object will have so we're gonna have a
04:35 - caption
04:37 - um
04:38 - and then you want to put this semicolons
04:40 - at the end because if you don't it's
04:42 - going to be issues
04:45 - um and we're gonna have likes we're
04:46 - gonna have
04:48 - um there's likes gonna have likes we're
04:50 - gonna have dislikes and we're gonna have
04:52 - an address which is basically going to
04:54 - be the owner or the person who like
04:57 - uploaded the video itself and we're
05:00 - gonna have an array of addresses that
05:04 - will contain basically the likers um
05:06 - actually I can just put that like right
05:08 - there so there's that all right so now
05:10 - we're gonna do some uh relatively
05:12 - Advanced life we're gonna have a mapping
05:16 - and this mapping will map addresses
05:21 - to another mapping
05:24 - which will be which will map a uint
05:29 - wow a uint
05:31 - to a pool
05:33 - huh
05:34 - that's it's gonna be interesting and
05:37 - it's going to be a public and it's going
05:40 - to be liked users
05:44 - so we're going to be mapping each user's
05:46 - address who's using this app
05:48 - to whether they like this specific post
05:50 - or not so what let's what this will mean
05:52 - is we'll have my address my wallet
05:54 - address and I'm gonna go in and see if
05:58 - and like start watching video number
06:01 - zero and then decide to like it it's
06:03 - gonna be my address mapped to another
06:06 - mapping which is like zero true
06:10 - and so that basically all that means is
06:12 - I like the first video or like zeroth
06:15 - video but I'm talking like human
06:17 - language now so basically that's what it
06:19 - will mean uh we'll get turned in a
06:21 - second
06:22 - kind of try to understand what it means
06:24 - uh but you'll understand it later on
06:26 - we're going to have another mapping in
06:28 - the meantime
06:30 - which will be a number mapped to a video
06:34 - right and that will be another public
06:36 - one and that will be the videos
06:38 - themselves so this is where we are going
06:41 - to map the IDS to the videos themselves
06:45 - um you could have we could have just
06:47 - created an ID here but we are trying to
06:50 - show like different ways of building
06:52 - contracts so we're going to go this way
06:55 - now what happened there and we're going
06:57 - to create yet another mapping and it's
07:00 - going to be another number and this is
07:02 - going to be
07:04 - another number in here and this is going
07:07 - to be public again and this will call
07:09 - lights so we are going to keep track of
07:11 - each like for each video ID so you'll
07:15 - have a video ID and then you will be
07:17 - able to map like we're going to mat
07:19 - we're going to use a bunch of mappings
07:21 - here all right
07:22 - so video number zero this is how much
07:24 - likes it has these are the users that
07:26 - actually liked uh that actually liked it
07:28 - and then like when you pass in an
07:30 - address you're going to be able to
07:31 - figure out whether like which videos did
07:34 - that specific person like so there's a
07:36 - lot of like weird connections but um
07:38 - this is an advanced tutorial bro all
07:40 - right and uh we're gonna have one more
07:43 - variable which is going to be a uint
07:45 - it's going to be public and we're just
07:47 - gonna call it video count oops
07:51 - and let's just do it that way that's
07:54 - going to be initialized at zero
07:55 - obviously and then we're just going to
07:57 - keep incrementing it now whenever you
07:59 - create a new video you want to have an
08:01 - event that you're going to like Emit and
08:04 - this is some blockchain stuff we haven't
08:05 - really done this
08:07 - um before but basically what this will
08:09 - do is
08:10 - it's like kind of like console logging
08:12 - but onto the blockchain it's like
08:14 - battery so you don't have to like worry
08:18 - about it much you can completely leave
08:20 - it out but it's just like adds that one
08:22 - level of extra
08:24 - did a video so keep it I think
08:27 - anyways video created
08:32 - and we'll have a normal regular stuff
08:35 - like that like a regular
08:37 - circular
08:39 - what is it like a Paran
08:42 - so we're gonna have an ID we're gonna
08:44 - have a string that will be basically
08:47 - caption
08:50 - we're gonna have a URL
08:52 - number of likes dislikes and the owner
08:56 - that's pretty good
08:58 - [Music]
09:11 - oh and that crazy thing is going on
09:13 - because I have to like close it like
09:15 - that and that should have saved a leash
09:17 - solved all the issues so that's good I'm
09:19 - gonna have two more events
09:22 - and one of them is video liked and we're
09:25 - gonna have a number
09:27 - a u in
09:29 - it's going to be an ID and we're going
09:32 - to have
09:33 - the lights basically a number of likes
09:37 - passed in here
09:38 - and another event which video is like
09:42 - so like I said I just want to like
09:44 - console like everything
09:46 - it's going to be the same input
09:49 - so there's your like basic setup
09:52 - um and now it's actually a time to go
09:55 - ahead and create a new video so we're
09:57 - gonna have to have a new function in
09:59 - here
10:00 - you know all the like random stuff
10:06 - so function and we'll call it create
10:09 - video all right
10:11 - now we're going to have a couple of
10:13 - things that we'll have to pass in here
10:14 - so we're going to pass in the caption
10:17 - whenever it would call this function and
10:19 - a URL so
10:22 - the URL basically is just like a
10:24 - Tick-Tock link or some sort of like
10:26 - video link that we're going to store on
10:29 - the blockchain
10:30 - and before we even do anything it's like
10:33 - video count plus plus so you want to
10:35 - increment that immediately
10:37 - and videos.video count or I mean like
10:41 - video
10:43 - count yep
10:45 - um so what is videos before we go any
10:47 - further
10:49 - there's your videos all right so
10:52 - the ID that we just incremented we're
10:56 - gonna use that immediately to store our
10:58 - first video and map the first video to
11:01 - that specific counter all right
11:03 - and we're going to create a new video
11:06 - using the structure.v that that we
11:09 - created up here so there's that
11:12 - um
11:15 - let's go ahead and start passing caption
11:17 - URL
11:20 - and we're gonna have zero likes zero
11:22 - dislikes and message sender is going to
11:25 - be the owner
11:28 - and we're going to create a new array of
11:31 - addresses
11:33 - that like doesn't have anything in there
11:35 - oh I forgot a comma there so there's
11:37 - that well that's interesting oh it's
11:40 - because I changed up the order so let's
11:43 - go ahead and swap them
11:45 - around
11:47 - and we should be good to go okay so yeah
11:50 - basically we want to match these items
11:52 - to each of these elements so you want to
11:55 - take these and match these items to
11:58 - these elements that you're passing in so
12:00 - first obvious is caption URL Lexus likes
12:03 - so you want to make sure that the order
12:05 - is specific
12:07 - now once like now once you're done with
12:10 - that and your team uh no events I think
12:14 - that's how we're I'm gonna call All of
12:16 - You Slackers
12:18 - um you can basically skip anything
12:19 - that's uh happening after I type emit
12:23 - um but for those that are like Elite and
12:25 - actually doing events we're going to
12:27 - commit a new event which we want to call
12:30 - which is uh like something we already
12:32 - prepped here so we're gonna pass in the
12:35 - ID which is video count we're going to
12:38 - pass in the caption we're going to pass
12:41 - in url00 and message dot sander so once
12:46 - again you want to map everything to
12:48 - these and I'm like when I say map it's
12:50 - kind of like that mapping but it's like
12:52 - your brain does the mapping so get it
12:54 - right
12:55 - all right now if you haven't heard of it
12:58 - before
13:00 - um or if you haven't watched any of my
13:01 - previous videos I like to use something
13:04 - called the remix IDE extension inside of
13:07 - vs code
13:08 - so this is that guy now go ahead install
13:11 - it there's no setup needed at all once
13:13 - you're done that's the icon that you
13:15 - want to click
13:17 - um
13:18 - takes a little bit of a time to
13:20 - load up but once it's done you want to
13:23 - select the correct corresponding version
13:25 - so if it's 0 8 16 you want to go with
13:28 - that specific version and I'll just hit
13:31 - run and deploy and hit activate on the
13:33 - pop-up window and once you're there
13:37 - um notice that you're gonna have the
13:39 - output coming up and could not detect
13:40 - not work whatever or you might have
13:43 - something else there now there are two
13:45 - options that you can do right now one is
13:47 - go to your inferior account and select
13:49 - Gurley which is going to be the network
13:51 - we're going to be using to have this
13:53 - tutorial when we deploy the contract now
13:55 - you can pick this
13:57 - and uh get this RPC URL is what it's
14:00 - called paste it here however I don't
14:02 - recommend it because uh Tesla Works a
14:05 - little slower than your local so what
14:07 - you can do instead is go to
14:08 - trufflesweet.com
14:11 - and then select that bad boy download it
14:14 - install it and this is how it's going to
14:16 - look like
14:19 - there you go there's our ganache now
14:21 - what you will not see is this it's
14:23 - obviously not my ganache that's on your
14:26 - machine so completely forget about that
14:28 - but if you hit a quick start bringing in
14:30 - the exact same thing now if you come in
14:32 - here
14:34 - you want to go ahead and copy this RPC
14:36 - server type of thing copy that guy
14:39 - go over
14:40 - and then paste it here if you can see
14:43 - that that's literally the exact same
14:45 - link and once you hit connect it's going
14:47 - to connect so that's cool now I'm going
14:49 - to open up a secondary uh sidebar and
14:52 - then just pull output there
14:55 - because I prefer it showing up there so
14:57 - I can hide that bottom thingy because
14:59 - it's a better use of space in my opinion
15:02 - and notice there's a couple of things
15:04 - that you will be able to do obviously
15:06 - disconnect your account and then there's
15:08 - going to be all these and then there you
15:10 - will have a bunch access to a bunch of
15:12 - these wallets now these wallets are
15:14 - exactly these wallets so what ganache
15:17 - does is it gives you a hundred each and
15:19 - it's like a local lead locally running
15:22 - uh blockchain server type thing on your
15:26 - machine so you don't have to use test
15:28 - nuts which are like kind of slow
15:30 - sometimes but
15:31 - there you go
15:33 - and what you can do is if you have a
15:35 - contract opened it's going to give you
15:37 - the option to compile that so let's do
15:40 - that let's see what that does
15:42 - like you can see it says please wait and
15:45 - compilation compilation finished and
15:47 - there you go now
15:49 - you can now go ahead and deploy this
15:51 - contract let's see what that does and
15:53 - there you go that's what happened there
15:55 - so if you open this it's literally the
15:57 - exact same thing that we just created
15:58 - right so there's like all kinds of stuff
16:01 - like you can hold it video account which
16:04 - will literally like all this will do
16:06 - when you create a variable is under
16:08 - under the hood it creates like a call
16:10 - function to it like what is a call
16:12 - function it's basically if you're
16:13 - familiar with apis it's like a get
16:15 - method function but for the blockchain
16:18 - so there's that you can read data from
16:20 - the blockchain for my beginners out
16:22 - there all right and then there's like
16:24 - this transact thingy
16:26 - um that's like posting post calls and if
16:29 - you're like super beginner it's like
16:31 - adding data to the blockchain but get
16:33 - familiar with transactions and calls and
16:35 - also get familiar with get and post
16:37 - because if you're not
16:38 - gonna get left behind all right so when
16:41 - you call that video count it's going to
16:43 - return zero which is pretty cool because
16:46 - we don't have to give it any kind of
16:48 - value and the uh and the initial value
16:51 - that solidity gives it is zero by itself
16:54 - so that's pretty cool some languages
16:56 - don't know that
16:57 - that's why we use consolidity and then
16:59 - there's like a bunch of things so like
17:01 - we don't even have to worry about this
17:02 - but there is this uh let's just go
17:04 - through like what these mappings are so
17:06 - you see the first mapping it's like the
17:08 - pretty crazy one but initially let's go
17:11 - through the second one so videos what
17:13 - you can do is pass in a u-wind which is
17:15 - just a number like a
17:18 - an integer and what I'm going to do is
17:20 - just pass in zero and see what happens
17:22 - and uh literally nothing happens so it
17:25 - like sends me back all the all the basic
17:27 - default stuff
17:29 - it's not valid basically what that means
17:31 - is there's no videos created or no
17:34 - videos added to that specific ID there's
17:37 - no video with the ID of the zero that's
17:40 - what I'm trying to say and then you can
17:42 - do the exact same thing for like likes
17:45 - there you go it like gave you back at
17:48 - zero so it's like not even valid at all
17:51 - oh yeah it's like
17:53 - it gave me back a zero because once
17:55 - again as the the initial value well what
17:59 - happened there and then here you can put
18:01 - in an address so I'm just gonna go ahead
18:03 - copy my addresses paste that guy there
18:07 - and then video ID is going to be zero in
18:09 - this case call that and like see like
18:13 - like there's no data that would exist
18:16 - there so like how would it know
18:18 - if it's a true or false you know what
18:20 - I'm saying see what I'm saying it's like
18:22 - a lot of undefined stuff
18:24 - now with that fiddling but that that's
18:27 - basically how it works and it will
18:28 - eventually we're going to use all this
18:31 - stuff so don't worry about it I'm just
18:33 - gonna like populate it with data
18:35 - all right video create like create video
18:38 - what do we have to do we gotta put in a
18:40 - caption and we're gonna put in a URL now
18:44 - because those are strings I'm just gonna
18:46 - go with like dummy data
18:48 - so I'll put in a caption and I'll put in
18:50 - a
18:51 - totally URL because that's totally
18:54 - everywhere out hit transact and there's
18:57 - some things happening here gas is being
19:00 - used
19:01 - some kind of gaslighting so there's like
19:03 - all kinds of stuff happening here and
19:04 - then random gas lighting and things
19:07 - things of that nature but we don't
19:09 - really know what is really happening in
19:11 - the background unless we are able to
19:13 - call it so let's try to call video
19:15 - account and now as you can see it says
19:17 - one so that's helpful
19:19 - let's see if we got
19:22 - um let's see if we got back the data
19:24 - that we just added and there you go
19:27 - it sent back all the data we wanted all
19:31 - right so it's a weird data structure
19:32 - that you're we're gonna have to get used
19:34 - to it but basically let me just copy it
19:37 - and we'll run through it
19:39 - so I just created temp.json file you
19:42 - don't have to follow but I just wanted
19:44 - to show you what's happening here to
19:45 - basically get the exact same data twice
19:48 - now this is just the basic this is how
19:52 - soluted it does it by itself and then
19:54 - this is
19:55 - this is a data structure that you gave
19:57 - it to it so just something to uh to get
20:01 - used to but
20:03 - honestly it doesn't really matter it's
20:05 - going to be easier to just refer to
20:06 - these uh things and then later in the
20:08 - video you'll realize that we're going to
20:10 - be using this stuff all right
20:12 - now you're literally getting back every
20:15 - single data piece that you just passed
20:17 - in so that's pretty cool let's move on
20:20 - now a few things that we're going to be
20:22 - needing in this contract and I'm not
20:24 - going to go through all the testing uh
20:27 - just I'm gonna do an overall testing
20:30 - session and be very and I'm not even
20:33 - recording okay there oh my God
20:36 - all right so a few other
20:38 - functions that we're going to be needing
20:40 - is first one is going to be this
20:42 - function get number of videos
20:46 - and it's just gonna be like a regular
20:48 - public uh function that returns
20:53 - a number
20:57 - oops like that
20:59 - and all it will do is just say return
21:02 - video account
21:04 - that's it done we're going to be needing
21:06 - this in the on the front end don't worry
21:08 - about it for now uh let's just move on
21:11 - there's gonna be two more functions one
21:13 - of them is going to be like video
21:18 - and I'm just gonna like make it as
21:21 - simple as possible and let's just
21:23 - initialize another one which is going to
21:26 - be you guessed it dislike video
21:29 - [Applause]
21:32 - all right we're gonna get started with
21:34 - like video but it's gonna be almost the
21:36 - exact same thing in a dislike one so you
21:39 - will have an opportunity to like test
21:40 - out your solidity skills after this one
21:43 - all right like video what are we gonna
21:45 - do
21:46 - um we're gonna create an instance of the
21:48 - specific video uh that we're trying to
21:51 - like so we're gonna need to pass in a
21:53 - u-end which is going to be Ivy and if
21:56 - you see all these like underscores in
21:58 - here and up here basically all that
22:00 - means is that we're only using those
22:02 - variables Within These functions and
22:04 - there's no like they have no business
22:06 - out of outside of those functions it's
22:08 - like internal use only
22:10 - easy that's it
22:12 - all right so let's go ahead and create a
22:15 - storage let's go ahead and create a
22:18 - instance of the video that we're trying
22:20 - to like here so we're gonna add a video
22:22 - and then we're gonna grab these specific
22:25 - video from using the ID that we just
22:28 - passed in
22:29 - all right
22:30 - now once we got that we also have to
22:32 - make sure that the light users for that
22:36 - specific video all right
22:39 - select users it's like users who like
22:42 - the post but that would be a way too
22:44 - long variable names comment down below
22:46 - like what would be a better name there
22:48 - but anyways you gotta pass in
22:51 - there's a couple things that we need to
22:52 - pass in remember we're going to pass in
22:54 - an address we're going to pass in the ID
22:57 - and that will return a Boolean all right
23:00 - I'm going to pass in message sender the
23:03 - person who is trying to like that
23:04 - specific video
23:07 - oops and we're going to need to pass in
23:09 - the ID all right so we need to make sure
23:13 - all right so we need to make sure that
23:16 - the person who's trying the video trying
23:18 - to like the video hasn't haven't liked
23:20 - this video before all right and if they
23:22 - have this let's just like gently remind
23:24 - them that you have already liked
23:28 - this video all right that's it
23:33 - um and I keep forgetting the semi column
23:35 - but you shouldn't all right moving on uh
23:39 - likes
23:40 - we're gonna update all these mappings
23:42 - all right so we're gonna update all
23:44 - these mappings all right so we're going
23:46 - to have likes and we're gonna go ahead
23:49 - and update update the value of it so we
23:53 - can you can just go plus plus or if
23:56 - you're if you're not that familiar with
23:57 - that you just go likes
23:59 - on this variety plus one basically take
24:03 - the value of this add one to it and then
24:06 - just like give that value to this
24:09 - specific mapping item thing
24:12 - and then same thing is going to have
24:16 - um underscore video
24:18 - then we just like basically do all the
24:20 - admin admin work around uh the like so
24:24 - we're gonna have to grab the video
24:25 - instance that we just created and
24:28 - push the message sender to the like
24:31 - users array
24:34 - and I'm actually going to say push and
24:37 - push in message that's thunder so that's
24:40 - just going to like again
24:44 - all right and like literally let's just
24:46 - finish all the administrative work
24:48 - around that's like functionality so
24:50 - underscore video which is the video
24:52 - instance you just created
24:55 - um and let's just update the likers
24:58 - array by pushing yeah push
25:02 - we're pushing massive Center in there
25:04 - what does this do again grab the video
25:07 - which is created up here it's like the
25:09 - video that we're trying to like right
25:10 - and then there is this array called the
25:13 - likers uh Lakers haha and then pushing
25:16 - the message center meaning the person
25:17 - who actually liked that video pushed
25:20 - them in there so we can keep track of
25:21 - them and now we gotta update all the
25:24 - mappings so
25:26 - this here that we require it to be false
25:29 - we're gonna make sure that now this is
25:31 - going to be true so we do it with one
25:33 - equal sign and then we just update it to
25:35 - true and instead of column we're going
25:38 - to have a semicolon and now we're going
25:40 - to update the actual
25:42 - array of videos that we created
25:45 - somewhere here and now we're actually
25:47 - going to go ahead and update this
25:49 - mapping by by saying that videos ID
25:57 - in Kohl's video
26:00 - so there's a couple of things happening
26:02 - here once again let's just run through
26:03 - it so we create a local instance like
26:06 - just for this specific function outside
26:08 - of this this guy is not even going to
26:10 - exist so create an instance using the
26:13 - mapping that we originally have what you
26:15 - want to do is work on only one object
26:17 - and then just like update that and then
26:18 - push it right back to its place and then
26:20 - get rid of the old value so that's what
26:22 - we're doing we're going to pick that out
26:24 - and then we're going to do stuff with it
26:26 - all right now we're going to need this
26:29 - to determine whether the person who is
26:32 - trying to like this video has already
26:33 - liked it or not if they did if they
26:36 - haven't let's just get them through
26:37 - which is uh this this stuff and if they
26:40 - have then we'll get like send this error
26:43 - message back and not don't let the
26:45 - process go through now we're going to
26:48 - increase increase the the amount of
26:50 - likes this video has on it so up that a
26:54 - number solve that by one basically and
26:56 - we're going to also store the person who
26:59 - liked the video in an array and then uh
27:03 - also update the mapping for the specific
27:07 - user whether they like the video or not
27:09 - and uh finally whatever modifications
27:13 - with it on that local instance of that
27:15 - video just put it back get rid of the
27:17 - old value and that's pretty much it now
27:20 - for my rich people who commit events
27:24 - we're going to uh amid the video like
27:27 - the event passing the ID and then the
27:30 - amount of likes and that's basically
27:33 - pretty much the like functionality now I
27:36 - want you to go ahead pause this video
27:38 - and try to figure out the dislike
27:40 - functionality by yourself if you're in
27:43 - and if you're for whatever reason you
27:45 - couldn't figure it out it's okay
27:46 - completely because we're here to learn
27:48 - let's go ahead and do that now so just
27:50 - like last time we're gonna have to pass
27:52 - in an ID and then we're gonna go ahead
27:54 - create just like last time actually I'm
27:57 - not even going to type all that you can
27:59 - literally copy this guy and then put
28:01 - this right there that capital V right
28:05 - there new requirement
28:11 - and now in this case we want to check
28:14 - that the person like let's make sure
28:17 - that the person has actually liked the
28:19 - video so instead of false we're going to
28:22 - require that this is true I'm going to
28:25 - update the message and we can be like
28:27 - hey you you like the video first
28:34 - and now once you want to go go ahead and
28:37 - do is decrease the number of likes
28:40 - just like that and then
28:43 - update the mapping
28:46 - to be false and so the person can like
28:49 - it again and then
28:52 - update the modified value
28:55 - and then again for my rich people video
28:58 - dislike passing the ID and passing the
29:00 - number of likes and that is pretty much
29:03 - your contract so and that is pretty much
29:05 - your contract actually there's one more
29:07 - function that we're going to be doing
29:08 - we're going to make which is going to be
29:10 - get vid
29:13 - videos like that
29:15 - and it's going to be a public function
29:18 - which will return a video
29:21 - view returns
29:29 - which will basically return all the
29:31 - videos that we have on stored on the
29:34 - contract
29:36 - so we're going to create a new array
29:46 - we're going to create a new array which
29:48 - will uh which will just populate with
29:51 - all the all the stored videos from the
29:53 - chain
29:55 - so you're just going to like Define the
29:57 - structure of it and all that kind of
29:59 - stuff and you're going to make sure that
30:01 - this is not going to be longer like
30:03 - there cannot be more items in that
30:06 - specific array than video than the
30:09 - number of videos we've already stored on
30:12 - the on the blockchain
30:13 - and so once you're done with that you
30:16 - want to map through you want to
30:17 - literally Loop through all the all the
30:20 - videos that we have uploaded
30:31 - with the regular boring old
30:34 - for Loop
30:38 - and then one by one push them into the
30:41 - array that we just created
30:51 - now you might notice that I'm doing some
30:54 - wizard right here and actually that's
30:56 - some weird stuff going on there but
30:58 - basically what's happening is that the
30:59 - number of videos
31:00 - it the the video IDs are starting by
31:05 - what with one and that's because we are
31:07 - incrementing the video count over here
31:09 - now this guy is starting from zero so
31:13 - like there is a couple of things that we
31:14 - can do here there's a couple of things
31:16 - that we can do here we can make this
31:18 - make this charge at one and then add the
31:21 - equal sign there but it's not like
31:24 - no one really does less than equal to
31:27 - unless I'm just not aware of it so I we
31:31 - just uh opted for going this way and
31:34 - then um
31:35 - obviously
31:37 - the video why these have to match
31:40 - the video ideas have to keep up with
31:42 - this so you gotta add one to it and that
31:44 - way you're gonna be fine now once you're
31:47 - done with that
31:48 - just return that array and you're good
31:51 - to go all right now let's go ahead and
31:53 - actually test this out as it is I'm just
31:57 - gonna add a couple of video a couple of
31:59 - stuff in here and before we test out you
32:01 - want to make sure that everything you
32:02 - had here get rid of it all no need for
32:06 - that I'm going to recompile everything
32:08 - that you have and should be good to go
32:12 - now empty out the output because oh wait
32:15 - clear that because there's no reason for
32:17 - you to see all that stuff deploy that
32:20 - bad boy and you're good to go all right
32:22 - new video
32:24 - caption
32:27 - and then put in a URL
32:29 - totally URL number two
32:32 - transact that all right gas burning is
32:36 - there all right let's get the number of
32:37 - videos there's one video get videos get
32:39 - all of the videos all right there you go
32:41 - there's uh literally every kind of every
32:44 - information that you will you need to do
32:46 - you need to know there's your there's
32:48 - your caption there's your url number of
32:51 - likes dislikes the array of likers which
32:53 - is currently an empty array because
32:55 - nobody likes this video and then the
32:57 - owner which is Me Myself and I
33:00 - all right let's see number of likes one
33:03 - uh you're gonna pass in the ID all right
33:05 - zero perfect video count oh I think we
33:08 - tested that already
33:10 - um and then videos let's get back to
33:12 - data uh ID is going to be one pass it in
33:16 - you got back all the data
33:18 - that's pretty good uh by my standards
33:21 - all right let's go ahead and like that
33:23 - video there you go all right well
33:25 - there's all the gaslighting going on and
33:28 - let's check the number of likes once
33:30 - again so call that and it says one so
33:32 - we're pretty much good to go for this
33:35 - that is your contract let's go ahead and
33:37 - deploy it now all right let's go ahead
33:39 - and deploy this contract that we have
33:41 - right over here so I'm gonna go ahead
33:43 - and
33:45 - open up that thing down there pull my
33:48 - output back there because uh that's
33:50 - something we're going to be using in a
33:52 - little bit
33:53 - and what you want to do is go into your
33:56 - extensions and now install truffle and
33:59 - the good thing about truffle is it's
34:01 - pretty well integrated with ganache and
34:03 - inferior so it's going to be helpful by
34:06 - the way this is the one that you want to
34:07 - download truffle or vs code buy
34:10 - consensus software and they have the
34:12 - check mark so that's cool all right
34:18 - all right this is the thing that you
34:20 - will see this little like truffle
34:22 - looking thingy
34:23 - and you will have two networks over here
34:26 - ganache and infuro and if you don't have
34:28 - them you can literally just click
34:30 - connect not work and then connect it so
34:33 - what you can do once you're done is go
34:35 - into like right click on that Tick Tock
34:38 - dot Soul file and hit build now you can
34:42 - also hide the secondary window or the
34:44 - secondary sidebar and let's just like
34:47 - compile it so build it and there you go
34:50 - everything is up today nothing to
34:52 - compile that's pretty cool and let's go
34:55 - ahead and deploy now wait I'm clicking
34:58 - the wrong phone and if again if you
35:00 - don't have the deploy file it's not
35:02 - going to work so make sure you have it
35:03 - all right
35:05 - now if you right click on tiktok.sol
35:09 - and then hit deploy and you have ganache
35:12 - connected which once again super easy uh
35:16 - let me just show you real quick
35:18 - so I'm just like gonna say uh connect
35:20 - select ganache and then you're gonna put
35:22 - in a port now how you get the port
35:24 - that's your Port right there 75.45 paste
35:28 - that in there and you're good to go uh
35:30 - and that will connect automatically so
35:32 - I'm gonna clear the output and go back
35:35 - here and deploy to ganache first
35:38 - so that's going to be my local and hit
35:42 - that let's see what happens
35:44 - and if you get the contract address and
35:47 - successful deployment and you're
35:50 - basically good to go now what you want
35:51 - to do is go ahead copy this guy close
35:54 - that and then go into your utils file
35:57 - and contract.js now here
36:00 - it was a little fast Euros contract.js
36:03 - all right that's where you want to go
36:05 - once you copy the contract address
36:08 - create a new variable called
36:10 - um I don't know contract
36:13 - contract or dress or something like that
36:16 - and then just pop that in there
36:22 - or actually we can literally just call
36:24 - oops
36:24 - what they're literally just call it a
36:26 - dress no need to go too fancy on it but
36:30 - what that does is uh we're just gonna
36:33 - save it for uh there for now don't worry
36:35 - about it
36:36 - um and then the one more thing you want
36:38 - to make sure is uh go into your
36:40 - artifacts and then there's this Tick
36:42 - Tock that Json file all right that's
36:44 - something called the ABI now this isn't
36:47 - a different format uh but here's the API
36:50 - that we're going to be using so you can
36:52 - either copy that or just copy this
36:54 - entire file and paste it right into your
36:57 - utils folder all right and then what you
37:00 - can do is go ahead and import
37:03 - contract import that as contract API or
37:07 - something like that and we're just gonna
37:09 - tick tock.json
37:13 - and there you have it now you have
37:14 - access to it now with these two things
37:19 - we can create a brand new uh function
37:24 - which will be create contract oops
37:28 - [Music]
37:31 - what happened to my keyboard
37:34 - oh
37:36 - create contract
37:39 - and there's no input here there's like
37:42 - little thing to input
37:45 - um now what you want to do is
37:49 - store
37:51 - and restructure the ethereum object from
37:53 - your window
37:56 - from
37:57 - window so what that what's that like
38:00 - that doesn't make sense window if you
38:03 - don't know it that's the like all the
38:05 - code that is running in your browser and
38:08 - then ethereum is the specific code that
38:10 - metamask injects into your browser
38:12 - whenever it's running so uh
38:16 - there you go I'm just going to go ahead
38:18 - and unlock it
38:19 - and there's like all kinds of code going
38:22 - on in the background in metamax metamask
38:24 - injects some into it and that'll make it
38:27 - easy to interact with the contract now
38:29 - if this ethereum
38:32 - um
38:34 - uh ethereum object exists in my window
38:38 - and what I want to do is generate a
38:41 - create a new instance of web3
38:45 - um
38:46 - by using the web3 JS Library so let's go
38:50 - ahead and import that
38:54 - just like that and that should be good
38:57 - to go for now and then we're going to
38:59 - return a new
39:01 - web free these contract
39:06 - using the contract ABI hey
39:12 - and the address now once once again as I
39:15 - said it earlier you want to go for the
39:18 - ABI itself all right so there's a bunch
39:21 - of random code in here which we're not
39:24 - really going to need so
39:26 - just use that uh and then you can just
39:29 - refer to that and then that basically
39:31 - takes care of all the contract interface
39:35 - or interaction uh type of stuff
39:38 - all right now that we're done with our
39:42 - uh ganache uh up uh our ganache
39:46 - deployment what you want to do is once
39:49 - again hit Deploy on that bad boy but
39:51 - this time I'm going to select girly and
39:54 - leave the leave the gas gas price empty
39:57 - and then here if you haven't worked with
39:59 - uh this extension before you will only
40:02 - have paste mnemonic and generate
40:04 - mnemonic
40:06 - I because I have worked with it I
40:08 - already have this uh thing uh there and
40:11 - that's just that means that I already
40:12 - have a wallet set up with my with my
40:15 - truffle so what you can do if you don't
40:17 - have it is go into your meta mask
40:20 - and then click that three thing no
40:23 - actually click that guy
40:24 - click settings I don't even know where
40:26 - to go hit uh privacy security whatever
40:30 - and then secret recovery phrase and then
40:33 - just pop in your password now
40:36 - do not share this with anybody and just
40:39 - like keep it separate from where your
40:41 - money is at like just just think
40:44 - basically all right like whenever
40:46 - someone has access to your secret
40:48 - recovery uh phrase that basically means
40:50 - they have full control over your wallet
40:53 - so and then like if you think that oh
40:56 - your wallet might be at risk just
40:58 - generate a new one put your funds
41:00 - somewhere safe just like use your brain
41:03 - all right
41:04 - but in this video and I want to like
41:07 - emphasize this we at cover program will
41:09 - never ask for your private key or any
41:13 - kind of private stuff we don't even ask
41:15 - for your public Keys all right we don't
41:18 - ask for anything so if anybody in the
41:20 - comments pretends to be us it's not us
41:23 - be smart
41:25 - save your money all right
41:27 - so there you have it uh grab that and
41:30 - once you paste it there it's gonna be
41:32 - something oops Yeah paste
41:36 - and then you paste something in there
41:38 - and then this window will pop up now you
41:40 - can save it somewhere and then uh this
41:43 - extension will remember it just like it
41:45 - remembers for me so I'm just gonna pop
41:47 - curly there and again and then you can
41:50 - just use it like that so there you go
41:52 - now it's going to take a little extra
41:54 - time because once again it's a test nut
41:56 - it takes longer so I'm just gonna fast
41:58 - forward there and then show you what the
42:00 - result is
42:01 - um by the way if you're a deployment is
42:04 - uh stuck
42:06 - um there's going to be that little thing
42:07 - going down there uh what you want to
42:10 - make sure is that you have your
42:11 - notifications on but mines are off
42:13 - because I like to focus
42:14 - just click that install button and then
42:18 - you're gonna be basically good to go and
42:20 - this is going to take a little extra
42:21 - time and there are like all kinds of
42:23 - random things going on here so I'm just
42:25 - going to remove that
42:27 - um
42:30 - and then it failed for whatever reason
42:32 - let's check it out now let's go ahead
42:34 - try again I don't really understand
42:36 - what's happening
42:39 - oh I think it just timed out because it
42:42 - oh wait
42:46 - all right so if that issue happens to
42:47 - you you might want to go ahead and
42:50 - create a separate folder for your next
42:53 - app so you can just create a folder it's
42:56 - called maxed app put your pages uh and
42:59 - then like leave everything contract
43:00 - related out here so you're going to need
43:02 - your contacts your components uh not
43:05 - build the next folder Pages public
43:08 - Styles and
43:10 - your
43:14 - your next config
43:16 - package Json
43:19 - and
43:20 - I think those are the only ones oh yes
43:23 - Lind
43:24 - and the dot EnV file so once you have
43:26 - all these go ahead grab them and then
43:29 - just throw them in there in the next
43:31 - step folder so that should pretty that's
43:33 - your Technique to take care of a lot of
43:35 - things so go into your terminal then
43:38 - we're gonna reset that
43:40 - and then you're gonna have to CB into
43:42 - your next app folder and then just run
43:44 - the yarn in there let's see if that uh
43:47 - figures itself out and in the meantime
43:51 - um so there the reason we're doing that
43:53 - is there's some uh peer dependency
43:55 - issues there so that's that's fine we'll
43:58 - figure it out
44:00 - um now you also want to make sure you
44:02 - update your git ignore and remove all
44:05 - these folder things
44:07 - um because otherwise like otherwise it
44:10 - will only look in this very specific
44:12 - folder however I need it to look in all
44:15 - other folders and now you can see your
44:16 - like uh get thing is only recognizing 55
44:20 - changes not 200 5 000 whatever
44:25 - so we'll not need that and let's try
44:28 - deploying this guy again
44:31 - girly
44:34 - um open that bad boy install it npmi and
44:38 - then that should technically generate a
44:40 - new uh package Json file soon
44:45 - I think it did it already I just don't
44:48 - see where it's at oh there you go there
44:51 - it is and that should be the only file
44:53 - that is out there
44:55 - uh where that should be the only
44:57 - dependency that the outer project has
44:59 - this is once again this is like these
45:01 - are like things that will come with
45:03 - experience don't worry about it if you
45:05 - can figure it out by yourself like
45:07 - there's nothing shameful about it all
45:09 - right so once you've done all of that
45:11 - um there's still going to be a couple of
45:12 - Errors if uh if you're like me however
45:15 - it might have solved it so there's a few
45:16 - things just to wrap it up again what you
45:19 - wanna what you need to do so
45:22 - create a next Dash app folder and you
45:26 - will need to pass in all these files uh
45:29 - and then just remove any like everything
45:32 - like all of these stuff have to come in
45:35 - here
45:35 - in your git ignore this December step
45:38 - number one step number two in the get
45:40 - ignore file all these uh files will have
45:44 - a slash in front of them just like this
45:46 - one and I forgot about it
45:48 - remove all the slashes literally you can
45:50 - come in uh to command F click that uh
45:53 - thing and then just print uh put a slash
45:56 - in there and then put nothing there I'm
45:58 - just like one by one remove all the
46:00 - slashes start removed it from the
46:02 - comments but it doesn't any matter there
46:05 - so you don't want to see any kind of
46:07 - slashes in here because that will like
46:10 - that will only that will make this
46:12 - follow and look for those folders in
46:15 - here and not one or two levels deeper
46:18 - once that's done remove all the node
46:20 - modules so remove your node modules from
46:22 - there remove your node modules from out
46:24 - here and that should put you in a pretty
46:27 - good place now
46:30 - these are the only files that you should
46:32 - be seeing in fact you shouldn't even be
46:33 - seeing this this is just one of my
46:35 - functions so I'm just going to remove it
46:36 - you're not going to have that file so
46:38 - these are the files that you should see
46:40 - here everything else that is basically
46:43 - has anything to do with your front-end
46:46 - application has to be put in here all
46:49 - right so this is something that all
46:51 - right now you're going to learn and
46:53 - actually I'm pretty glad we made this
46:55 - mistake this is a mistake on RN uh
46:57 - however if you happen to ever do this
47:00 - now you're going to be prepared for that
47:01 - so
47:02 - everything bad has something good in it
47:05 - look at the positive end of stuff all
47:08 - right so now you just learned that scale
47:10 - and then once you're done and remove
47:11 - everything open up your terminal and
47:14 - subterminal stop everything and then you
47:17 - will have to run reset a couple times
47:21 - uh I'm just gonna restart both of my
47:24 - terminals here and then one folder what
47:27 - you want to do is CD and turn next app
47:29 - folder and then just throw in the yarn
47:31 - and let it do its thing
47:33 - that will ensure that your next app is
47:37 - ready to go and then we'll restart it in
47:39 - just a second and this other one is only
47:41 - going to be used for for uh like
47:44 - installing stuff all right
47:46 - just type in your nub once that's done
47:49 - and then your next stop should be pretty
47:53 - much good to go all right
47:55 - they're like stuff that that are not
47:58 - working perfectly so let's see oh
48:01 - apparently okay so I forgot my utils
48:04 - folder to put that there too
48:06 - that's gonna be that's gonna need to be
48:07 - there all right there you go now it's
48:09 - working
48:12 - there we go we're good there all right
48:15 - so that should be good
48:17 - and now what you're going to do is now
48:19 - you will be able to deploy the contract
48:21 - all right it might still give an error
48:23 - but there should be no other kind of
48:26 - error the reason that other error was
48:27 - happening is because deployment need
48:32 - this deployment
48:33 - contract deployment needs a specific
48:35 - version of react but uh or like a
48:38 - specific dependency however the next app
48:41 - requires a different version of that and
48:43 - that conflicts and then it just like
48:44 - throws all kinds of Errors so figure it
48:47 - out good to go all right now it failed
48:50 - again so that's and that's because we
48:52 - just like didn't install anything there
48:53 - so let's run yarn there and when it
48:56 - comes to like blockchain sometimes yarn
48:58 - doesn't seem to work sometimes uh npm
49:01 - doesn't work so what I like to do is
49:03 - just run both of them and then usually
49:05 - that saves me a lot of headache
49:08 - so once my yarn finished running I'm
49:11 - just gonna go ahead and run uh yeah I'm
49:14 - installed as well just for good measure
49:17 - totally no need to do that but I'll just
49:19 - do it anyways
49:22 - and then let's see what do we got now
49:25 - reset that terminal
49:28 - that one is running so that's good
49:31 - hid my contracts Tick Tock Soul deploy
49:34 - that bad boy and then just select girly
49:37 - all right
49:39 - now it's waiting and now it's throwing
49:41 - me a different error so it says use
49:44 - error user project is inactive all right
49:47 - that's fine that that error I'm pretty
49:49 - familiar with and that's fine so in your
49:52 - truffle what you want to do is check if
49:55 - you're if you're a service is connected
49:57 - to the right project all right obviously
49:59 - like if the project is not existing in
50:03 - my account
50:05 - out here in front of infuro it's
50:08 - obviously not going to work
50:09 - so you got your
50:11 - um Tick Tock right but it says eBay
50:13 - there that's fine I can just right click
50:16 - on that guy
50:18 - all right so that guy and then
50:19 - disconnected cool now
50:22 - you might be using the Truffle extension
50:24 - for the very first time and in that case
50:26 - when you connect to the inferior service
50:29 - it will pop open a little window here
50:32 - that will just force you to sign in
50:34 - all right once you sign in that guy will
50:37 - come up and then you can pick it up
50:39 - where I'm at so once you signed in Easy
50:41 - just pops up in your browser hit
50:43 - authorize and you're good to go then you
50:45 - can just select the project you want to
50:47 - connect to
50:48 - okay
50:50 - and we should be good to go pretty much
50:53 - now all right let's go back and for the
50:56 - fifth time at this point select girly
50:59 - inferior Tick Tock clone girly zero
51:04 - glass us price and create that guy or
51:08 - use that guy there's another uh user
51:11 - project is an epic okay well if that
51:14 - happens let's go into our truffle config
51:19 - so here you can just clearly like take
51:22 - this entire networks thing and just get
51:24 - rid of the entire thing like you don't
51:25 - need any of that it will be regenerated
51:27 - so let's go that's fine
51:29 - all right hit deploy again
51:33 - girly no gas Burns paste that
51:36 - let's see if it like go through this
51:38 - done
51:40 - so far so good because it takes longer
51:42 - times and it's like deploying and raw
51:45 - all right let's see like the other ones
51:47 - were like way faster at throwing the air
51:49 - and there you go I think this is this is
51:51 - already good to go it's like there's a
51:53 - bunch of steps and there's a bunch of
51:54 - places where it can go wrong this was a
51:56 - good debugging session where you will be
51:58 - able to uh face a ton of errors that uh
52:02 - all of us face on a daily basis and if
52:04 - you miss like one step this is where you
52:07 - can come back to figure out all the
52:09 - errors that you might have made
52:10 - somewhere so there it is and then when
52:13 - you see all these blocks like that's
52:15 - when actually it's like verifying that
52:16 - it is being deployed and the transaction
52:19 - hash that you see here uh those are
52:22 - that's being verified on these blocks so
52:26 - let's wait for it and whenever you see
52:29 - our contract address that's when you
52:31 - know you're good and it also says like
52:33 - deploy succeeded
52:37 - and it also says deploy succeeded so
52:39 - that's pretty much it now you want to go
52:42 - ahead copy this number too or like this
52:44 - address as well and then go back to your
52:46 - utils so now inside of next up and then
52:50 - hit the contract file and then after
52:52 - here you can go ahead and put in the
52:56 - I don't know just like say something
52:58 - like okay this is ganache and then
53:03 - export cons to contrast again
53:07 - and then say girly
53:11 - and then just like comment on this
53:13 - entire line and whenever we are ready
53:15 - you can literally just change it to this
53:17 - specific address and then this will be
53:20 - available for anybody out there you can
53:22 - share it with your friends family
53:23 - whatever
53:25 - um
53:26 - and they will be able to use your app
53:28 - it's that sad that was a pretty rough
53:30 - deployment but we made it
53:33 - um and if you made it this far
53:35 - and you have that same error I usually
53:37 - just get rid of that yes then Fallen
53:41 - usually goes away in a little bit
53:44 - but if you made it as far you're a champ
53:46 - let's keep on going all right now with
53:48 - the deployment done let's go ahead and
53:49 - start connecting our wallets to this bad
53:52 - boy so there's a few things that we're
53:54 - gonna need to do so go into your app.js
53:57 - file and in here we're gonna import a
54:00 - couple of things we already have our
54:02 - contacts set up so don't have to worry
54:03 - about that that's pretty cool thanks
54:06 - Kevin shout out
54:07 - all right so we're going to import the
54:10 - CSS file of rainbowkid all right so
54:15 - Rainbow Kids
54:15 - [Music]
54:18 - that's CSS and then we're gonna import a
54:21 - couple few couple more things so there's
54:23 - chain
54:25 - ular there's configure chains
54:28 - and then there is create
54:31 - client
54:33 - and then there is uh wag me config and
54:37 - all this comes from wagme
54:40 - now I don't know what's good there
54:44 - ain't got imported a couple of times
54:47 - oh there you go all right now that
54:49 - should that should look way better all
54:51 - right
54:53 - now we're gonna go ahead and import a
54:55 - couple more things because we're not
54:57 - done yet we're gonna get default default
55:02 - wallets
55:05 - and Rainbow
55:10 - kit provider
55:12 - and you also need Dark theme because we
55:16 - want to make it look cool
55:18 - and all this is coming from that rainbow
55:21 - okay where rainbow me slash rainbow okay
55:24 - whatever you can read
55:26 - and then two more things
55:32 - you got
55:37 - ah
55:43 - we got we got anything for your provider
55:45 - uh we're gonna need the providers so
55:47 - we're gonna need infuria support
55:49 - provider
55:51 - from
55:53 - wag me slash
55:56 - providers slash in fura
56:01 - like that
56:02 - and then I'm just going to duplicate
56:04 - that line and change that to Json
56:08 - RPC like that
56:11 - and I'm gonna import Json RPC Provider
56:15 - from there pretty good
56:17 - and just like in a couple previous
56:19 - videos that you might have seen or I
56:21 - haven't if not what are you doing this
56:23 - like put it on your watch later watch
56:25 - after this one all right const
56:28 - you want to destructure chains and
56:31 - provider
56:33 - from whoops
56:36 - um configure chains like that and then
56:39 - we're gonna have two arrays in here
56:43 - all right so the first one is going to
56:44 - be the chain so we're going to have
56:46 - chained the girly and now we're gonna
56:49 - have James not Json chain Dot localhost
56:54 - perfect our chains are ready to go and
56:57 - then next up we're gonna create the
56:59 - providers so we're gonna have two we're
57:02 - gonna have the inferior provider which
57:04 - will need the API key all right so let's
57:06 - put that guy there and then we're gonna
57:08 - say process the environment Dot
57:13 - let's go to the dnv file all right
57:18 - so that's the that's the key that we'll
57:20 - need put that there and that will
57:22 - basically work important and then you
57:24 - also want to uh up the priority so the
57:27 - priority is going to be one meaning
57:30 - any kind of change that change that
57:32 - we're gonna uh connect to with this app
57:36 - um first we're gonna look for it on
57:38 - inferior if inferior doesn't have to if
57:41 - your uh happens do not support that
57:44 - specific chain
57:46 - and we're gonna need to uh add the Json
57:49 - RPC provider
57:51 - so Json RPC provider
57:55 - like that
57:57 - open paren open that squiggly new line
58:01 - set the priority number two
58:05 - meaning it's going to be coming after
58:08 - the intro one and then just put in the
58:10 - RPC link
58:12 - chain and then in the shade a function
58:15 - which will return this HTTP object which
58:20 - is going to be uh once again
58:24 - seven five four to five this is coming
58:26 - from ganache so where's my garage
58:29 - there it is once again this is your link
58:32 - with the bear and you should be good to
58:34 - go actually what I want to do is just
58:37 - copy this whole entire thing just in
58:39 - case there's some weird stuff that
58:42 - should be
58:43 - I should be coming back to no hold but
58:45 - like weird things happen sometimes let's
58:48 - just make sure that everything is
58:49 - identical all right let's go ahead and
58:52 - create some connectors
58:55 - here
58:57 - the default wallets
59:00 - and I'm passing a few things you're
59:02 - gonna pass in app name is going to be
59:05 - what is this Tick Tock just like that
59:08 - perfect and then you want to pass some
59:10 - chains nice you got the connectors there
59:14 - and then last but not least
59:16 - you want to create a wag me config so
59:21 - let me config equals
59:25 - um create client
59:33 - foreign
59:36 - auto connect
59:39 - it's going to be true and you want to
59:41 - make you want to pass in connectors and
59:43 - you want to pass in provider and
59:48 - now it should be good to go all right
59:50 - now we want to wrap this around our
59:53 - application so we're going to need the
59:55 - wag me config and then you wanna
59:58 - pass in
60:01 - the variable that you just created
60:05 - as your client hey there you go
60:09 - all right close that bad boy wrap it
60:11 - around bam air is gone cool all right
60:16 - now you're gonna need rain bokeh
60:18 - provider
60:19 - theme dark theme but make it a function
60:22 - enable cool mode
60:24 - because that's pretty cool and then uh
60:27 - rule some on a passing chains uh
60:33 - and it should be that guy so yeah once
60:37 - you put that there
60:38 - you're good all right close that and
60:42 - after that provider that should be ready
60:44 - to go too all right
60:46 - that should be pretty much enabled you
60:48 - to do it all right there's some
60:50 - hydration error going on let's refresh
60:53 - let's see if it's still there no it's
60:55 - not that's pretty good all right now
60:58 - we're gonna add the connect button and
61:01 - the
61:02 - um conditional rendering
61:05 - all right so for that you want to go
61:07 - into our index.js file and then we're
61:09 - going to import a couple of things here
61:11 - so first of all we're going to need
61:15 - um use
61:17 - count all right from
61:20 - lag me because wag me is cool and they
61:23 - take care of
61:26 - all the account related stuff and the
61:28 - all the wallet connection related stuff
61:30 - all right so you want to have a use
61:32 - effect I don't know if you imported that
61:34 - or not yup we haven't
61:38 - um
61:40 - see we're gonna need that soon
61:42 - and then one of our address changes and
61:45 - by the way what a subtracts you get out
61:48 - you want to go ahead and destruct your
61:50 - address from a use account first
61:53 - like that
61:54 - so whatever that changes you want to
61:56 - update a state which we have to I don't
62:00 - know Define here
62:01 - it's a user account and you will have
62:04 - some user account like that which will
62:08 - be a used State bam
62:12 - like that and I like to put that stuff
62:15 - up there nice
62:17 - so one whenever the uh connected wallet
62:21 - changes you will basically update the
62:24 - use date so
62:26 - just like that and then I'm gonna go
62:29 - grab this guy
62:31 - this actually should be user account wow
62:35 - whenever uh that that guy is actually
62:38 - true meaning that there is a value you
62:41 - want to render out this whole thing
62:43 - let's see what we've got there okay so
62:46 - that's interesting that's probably
62:48 - because I still have it connected to my
62:52 - wallet is still connected so let's see
62:53 - if I disconnect
62:56 - this and then this all right there you
62:59 - go so now it seems like it's a
63:01 - completely empty thing that's that's
63:02 - fine that's fine so now what we're gonna
63:04 - do is go ahead and import a connect
63:07 - button
63:09 - so it's gonna be connect button from
63:13 - Rainbow me slash rainbow kick and then
63:15 - grab that guy
63:17 - and that guy will basically take care of
63:19 - our entire wallet pop-up and things like
63:22 - that so
63:24 - thank you rainbow kit
63:26 - let's see what we got bam connect bam
63:30 - cool mode
63:32 - um
63:34 - let's go with the second one next
63:36 - connect
63:37 - bam okay it says wrong Network that's
63:40 - fine
63:42 - no issues actually it's not the wrong
63:44 - Network
63:46 - it might be oh so there's some sort of
63:49 - issues uh there's some sort of issue
63:51 - with the chains right now let's figure
63:52 - what's uh what's happening there
63:58 - okay so I think I figured out what the
64:00 - issue is if you go back into your app.js
64:03 - file
64:04 - um
64:04 - we gotta put in these chains all right
64:07 - and yeah plural and singular sometimes
64:10 - gets messed up so you want to just make
64:12 - sure that these are the chains that
64:14 - you're passing in there that should yeah
64:17 - there you go they literally just fixed
64:19 - it in real time you don't even have to
64:21 - worry about it and now it gives you this
64:23 - nice little connect disconnect and then
64:26 - Network switcher thing so that said
64:28 - while the connection is ready let's go
64:30 - ahead and connect the functionality to
64:32 - this app and we should be good to go
64:34 - let's go ahead and get started
64:37 - connecting all the features so
64:40 - our boy Kevin kevs has already set up
64:43 - our contacts so that's pretty good now
64:46 - we don't have to worry about that so go
64:47 - into your contact spot that's where
64:49 - we're going to be work I thought it was
64:51 - just opening up and close it straight
64:52 - away that was done all right let's go
64:56 - into context
65:00 - and here's gonna be a few things that
65:03 - we're gonna be setting up uh straight
65:05 - away so we're gonna have to import a
65:08 - couple things uh just like we did it on
65:11 - the index file we're gonna need the use
65:13 - account from wag me and we're gonna need
65:15 - to import
65:17 - hello I'm gonna need to import create
65:20 - contract okay create contract
65:28 - it would help if I could like type
65:31 - without typos apparently all right next
65:35 - up we're going to create a couple of
65:36 - these dates in here and so we're gonna
65:38 - need a user account and a set user
65:41 - account use stage
65:43 - which will start off as empty or like
65:49 - empty strings then you're going to need
65:51 - a
65:54 - contract instance basically
65:58 - and that that's what we're going to be
66:00 - using to interact with the uh smart
66:04 - contract itself and then we're going to
66:06 - store the video data somewhere so we're
66:08 - going to have videos uh and set videos
66:12 - and that's going to start off as a empty
66:14 - array
66:16 - and so with that said let's go ahead and
66:19 - destructure address from our user
66:22 - account and let's fix the typo again and
66:26 - we're gonna get started with
66:29 - and we're gonna go we're just gonna like
66:31 - jump straight into it so we're gonna
66:33 - need a use effect all right so we're
66:35 - just gonna initialize everything so
66:37 - whenever the address changes and if you
66:40 - don't know what use effect is it's
66:42 - basically just a piece of code that runs
66:44 - once when you fire out the application
66:46 - and if you pass in any kind of variables
66:48 - here it's just going to keep on running
66:50 - whenever that thing changes and that's
66:52 - what we want to do because if you change
66:55 - the wallet that's being that's connected
66:56 - to your app you want everything to
66:58 - refresh all right because like imagine
67:00 - you log in with your wallet and the next
67:04 - user comes in logs in with their wallet
67:05 - but they start spending your money all
67:07 - right
67:08 - pretty easy to understand why it's
67:10 - important all right
67:12 - now you obviously want to go ahead and
67:15 - update the contract instance as well
67:20 - and we don't need to pass in that it
67:22 - actually doesn't really change but just
67:24 - in case there is some sort of there is a
67:27 - network change or something like that
67:29 - the wallet address might change and
67:31 - that's the easiest way to like kick
67:32 - things off all right and there's going
67:34 - to be a couple of functions that we're
67:35 - going to implement here so first of all
67:38 - I'm just going to like lay out
67:39 - everything and then we're gonna go one
67:41 - by one all right we're going to start
67:43 - with create video and it's going to be
67:45 - an async function with a caption and a
67:49 - URL input
67:51 - leave it right there next up we're gonna
67:54 - have a call get all videos
67:58 - which will uh again be a basic function
68:02 - with no inputs and then just close it
68:04 - right there and then um
68:07 - I mean that's something we want to
68:08 - definitely run every single time with
68:10 - the application starts or the contract
68:13 - is being updated so whenever the
68:15 - contract is updated we want to run this
68:19 - get all videos function like that and
68:23 - then there's going to be a couple more
68:24 - so obviously you want to go ahead and
68:27 - like a video
68:30 - so there's gonna be another racing
68:32 - function and by the way everybody
68:33 - everything is going to be async in here
68:36 - and if you like a video if you also want
68:38 - to dislike a video
68:42 - like that
68:45 - and then you want to know whether a
68:47 - video is like or not
68:52 - and you also want to be able to get the
68:54 - number of likes on a specific video
68:58 - just like that and actually I kind of
69:00 - want to
69:01 - put these at like right after all all
69:04 - this get function and so this will
69:06 - create a video this will get get all the
69:09 - videos this will get for one specific
69:11 - video like this is a Creator function
69:13 - these are like uh this is get everything
69:16 - function this is get one specific videos
69:19 - stuff and then this is interacting with
69:22 - one specific uh or these are interacting
69:26 - with one specific video so I just like
69:27 - to like kind of like group these based
69:29 - on these uh parameters you can switch
69:31 - them around like have whatever order in
69:34 - there
69:35 - it doesn't really matter it's just for
69:37 - my personal taste and I prefer them like
69:39 - that
69:41 - now you want to export a couple of
69:43 - things so you definitely want to in
69:44 - sport create video because you will use
69:48 - it in other components and then you want
69:50 - to explore it like the video
69:53 - because you want to use it in other
69:55 - components that you want to export
69:57 - dislike video
69:59 - because you want to use it in other
70:00 - components and then you want to export
70:03 - videos as in the state because you want
70:05 - to use it in other components there's
70:08 - light
70:10 - it's again because you want to use it in
70:11 - other components a and then get number
70:15 - of likes
70:17 - because you guessed it when I use it
70:19 - another components nice
70:22 - uh there is some sort of error going on
70:24 - there maybe that's because I should be
70:26 - exporting videos instead of video well
70:28 - that would be helpful if I try to export
70:31 - something that actually does it does
70:33 - exist all right let's hook all of these
70:36 - up with all of their uh respective
70:41 - let's hook all these functions up to all
70:45 - the components somewhere else in the app
70:48 - and then we're just gonna like go
70:50 - through them fill them out and we're
70:51 - done
70:52 - so once again what's happening is we are
70:55 - connecting all the functions before we
70:57 - even type them out because it's just all
70:59 - kinds of like random setup stuff it
71:01 - doesn't like it breaks the flow so I
71:03 - just want to like get them over with
71:05 - real fast and then we just like get to
71:07 - the meaty stuff fast all right so export
71:11 - your create uh import your create video
71:13 - destructure it and then uh and then down
71:16 - here in your handles instead of normal
71:19 - like regular way of doing things we're
71:22 - going to toast dot promise
71:26 - I'm going to say toast dot promptness
71:29 - which what I will do it will give us a
71:32 - nice little animation that will wait for
71:34 - the function to resolve itself and if it
71:36 - resolves you're going to get a jack Mark
71:38 - and if it doesn't then you're gonna get
71:41 - an X and so it's like super Visual and
71:43 - it also like a uh it's also really good
71:46 - for the user experience
71:49 - it's a little weird when it comes to the
71:51 - code itself because it has this react
71:54 - hot toast um
71:55 - library that we're going to need to use
71:57 - but that's the trade-off for it some
72:00 - nice little animations all right so
72:03 - you're gonna uh pass the create video
72:06 - function in here where you're gonna pass
72:09 - in uh the caption and the video URL
72:13 - which are by the way
72:15 - um all these states that we already set
72:17 - up here so that's completely ready and
72:20 - waiting for you
72:22 - and then there's a few things that you
72:24 - can pop in here these are basically all
72:26 - the messages that uh the toast message
72:29 - will give you so if it's still being
72:32 - it's loading and it's gonna say
72:33 - uploading video this can take a moment
72:35 - with a little nice animation once it's
72:38 - succeeded that's what it's gonna say and
72:40 - there is an error message just so we
72:41 - handled that too so you're gonna know if
72:44 - something went wrong
72:45 - there are these two lines commented out
72:48 - so we're just going to
72:50 - comment them back in and that function
72:54 - should technically be pretty good to go
72:57 - let's go back to our context and just
73:00 - console log those things out whenever
73:02 - this function runs
73:09 - just like that and that should be
73:12 - that should be it let's see what have we
73:14 - got let's see if it's working if we need
73:17 - to do anything so press that type in
73:19 - caption and then URL and then just hit
73:22 - create new there you go
73:25 - it's ready to go and you also saw
73:28 - there's there's the toast message so
73:30 - that's pretty good all right let's move
73:32 - on with our next one all right so let's
73:34 - go into our sideboard.js file and this
73:38 - is actually
73:40 - just this there's like a lot of things
73:42 - going on there
73:44 - so there you go let's go ahead and
73:46 - figure out what is happening here so
73:48 - there's a few things that we're going to
73:49 - be destructuring here like hang on there
73:52 - so we're gonna need light video we're
73:54 - gonna need dislike video we're gonna
73:57 - need
73:58 - um get number
74:01 - of videos right and what you need is
74:05 - light
74:06 - up like that
74:09 - got this
74:15 - so let's just double check yeah that
74:17 - circuits okay so there's no typos there
74:20 - so that's pretty good
74:22 - now
74:25 - now we're gonna be updating a few things
74:28 - here whoa my co-pilot is going hard so
74:31 - we're gonna need a use effect in here
74:33 - and I believe we have that imported and
74:36 - then if not it's going to be an epic
74:38 - fail
74:41 - hmm
74:42 - all right we're gonna need to just
74:45 - create a function in here because that's
74:47 - one thing that um use effect doesn't
74:49 - really let us do so if you want to do
74:51 - wait check if liked if you're going to
74:55 - do any kind of async stuff in uh inside
74:58 - of this effect you will need an internal
75:00 - function for that so that's exactly what
75:02 - we're making and then like straight away
75:05 - right after that just call it and then
75:07 - you should be good to go or you can also
75:09 - create a something called a
75:11 - self-executing function or self-invoking
75:13 - function not entirely sure
75:16 - um of the name I like I love them a lot
75:18 - I usually use them not this time though
75:20 - but it's whatever all right so here
75:23 - we're going to create a comp light
75:25 - variable which is literally just gonna
75:28 - in both feet is light function and pass
75:30 - in ID now after that we're gonna also
75:33 - create a likes
75:36 - variable which is going to await for the
75:39 - get number of likes function to return a
75:42 - value and then we're just going to
75:45 - update all the states that we have here
75:46 - so set number of likes
75:49 - that's pretty easy and then right above
75:51 - that select light
75:54 - so all of these we will be writing them
75:56 - in just a second these will return uh I
76:00 - already have that I don't know how did I
76:01 - have it anyways these functions will
76:03 - return like obviously set light will
76:06 - return a Boolean and get number of or
76:08 - Set uh
76:09 - or is like this going to return a
76:12 - Boolean and get number of likes is going
76:13 - to return a number it's uh number itself
76:16 - but we're gonna need that
76:19 - we're going to need that to update all
76:21 - the stuff that we have here
76:23 - and there's a use effect issue that we
76:28 - have that's completely fine because we
76:29 - can just copy that and there was
76:31 - probably a typo there you go that will
76:34 - update
76:36 - update the value there so let's see uh
76:39 - if we go into context and we just say
76:42 - that it should return
76:45 - uh could turn false but I wanna I wanted
76:48 - to ah
76:50 - return true like that
76:53 - and then get a number of likes is going
76:56 - to return
76:57 - some weird number like put something
77:00 - there some very weird Let It Go like
77:02 - it's it's working perfectly now which is
77:05 - like after actually populate like real
77:08 - data to it and there you go now it's
77:10 - light and if you want to change it to
77:12 - false it's going to be false and there
77:14 - you go you can also update that number
77:18 - yeah 55.55 there you go it's working
77:21 - perfectly now we're just gonna get all
77:23 - the functionality behind it that is
77:26 - actually going to make this app work
77:29 - and then there's one more file where
77:31 - we're going to be needing uh functions
77:34 - from the context is it's going to be the
77:37 - main
77:38 - view.js now here
77:40 - uh as you can see there's this dummy uh
77:44 - Tick Tock I'm just going to remove it we
77:47 - don't we don't need that
77:49 - now what we do need though is oh we
77:52 - actually have the destructuring ready
77:54 - for us uh we need the videos
77:58 - and here we're just going to have
78:00 - another use effect
78:02 - empty this out and put that out and we
78:05 - only we need to fire this up every
78:09 - single time whenever a video is change
78:10 - so we want to update the the tick tocks
78:14 - use of uh the tick tocks use tape so
78:16 - we're just going to come in here and
78:18 - then set Tech talks and then videos
78:20 - so what this does is from here we'll
78:23 - populate all the video data into this uh
78:27 - use State and then inside of main view
78:29 - we're going to use that and we're going
78:31 - to use that to populate this data right
78:33 - now because there's like no videos in
78:36 - there it's just going to say no video
78:38 - that's completely fine we're going to
78:40 - get to it in a minute and then uh and
78:42 - then it's going to have our videos all
78:45 - right with that said let's uh we're
78:48 - pretty much we're good to go on hooking
78:50 - up all the all the functionality to all
78:53 - the other
78:54 - uh components now it's actually just
78:57 - time to write all these functions and
79:00 - we're going to be done with this project
79:01 - in no time all right now that we're able
79:04 - to get videos or like with that error
79:06 - but I'm gonna fix that in a little bit
79:08 - um that's cool hat and actually
79:11 - implement the create
79:13 - videos function
79:16 - and by the way this is going to be like
79:18 - almost scary easy now one more thing
79:20 - that we're gonna make sure here is that
79:23 - well
79:26 - one more thing you want to make sure
79:28 - here is that you're checking for the uh
79:31 - address as well so if there's no user
79:34 - logged in this function doesn't run and
79:37 - it's not supposed to run all right
79:40 - so this guy what what this is going to
79:43 - do is we're just gonna wait
79:45 - uh and we're going to grab the contract
79:48 - and then once again methods so that's
79:51 - what I was saying look out for all the
79:53 - patterns that you can recognize and just
79:55 - like memorize them all right
79:58 - all right let's see what do we got in
79:59 - the contract itself we have create video
80:02 - okay so let's put that guy there and
80:05 - then we're gonna pass in a bunch of
80:07 - things but this is what I was talking
80:09 - about in the previous section that
80:12 - you know normally you would you would
80:14 - just hit the transact button uh but in
80:16 - this case we're actually going to be
80:18 - saying send and what that will like make
80:21 - our like what that will do is pop open
80:23 - your metamask and then um
80:26 - do some do the kind of transactions that
80:29 - you saw on other websites you want to
80:31 - make sure the sender of the money is
80:33 - going to be the address meaning the
80:35 - person that is actually locked in all
80:38 - right
80:39 - and that's what we're uh searching for
80:42 - it now I just want to like put that
80:43 - there instead and we can also put that
80:47 - guy there as well so if the state is not
80:49 - updated the app is not going to load so
80:51 - that's perfect if if we're checking for
80:53 - that all right so from
80:57 - so from user account so the person who
81:00 - is logged in is going to be paying for
81:04 - this transaction basically all they got
81:06 - to pay for is the gas fees which is not
81:07 - that crazy high especially now that uh
81:10 - there was this East merch all right I'm
81:13 - going to specify the gas and in this
81:15 - case we're just gonna go with one
81:16 - million
81:19 - and remember this is in ways so this is
81:21 - like not beef all right so like chill
81:24 - out and then you want to set the gas
81:26 - price to be null so basically what this
81:31 - is is you're setting the max gas to be
81:33 - spent is going to be one million way
81:35 - which is like fraction of an ethereum
81:37 - and then you also want to set the gas
81:40 - price less than like the minimum or like
81:42 - whatever money to be like burnt or like
81:44 - whatever it used to be burned is gonna
81:46 - be no and that should technically be
81:49 - pretty much good to go now one more
81:51 - thing you want to add is you want to
81:53 - pass in the caption
81:55 - and you want to pass in the URL that you
81:57 - are getting from this function all right
81:59 - so let's see how that works
82:04 - so now that we got this guy let's open
82:06 - that and then this
82:09 - is
82:11 - my first video
82:23 - and I got this video URL on my clipboard
82:27 - so I'm just going to put that
82:28 - and I hit create new let's see what that
82:31 - does
82:32 - hit confirm
82:35 - says video uploaded
82:38 - all right let's see what we got
82:40 - um
82:41 - so it still says the get videos is not a
82:43 - function that's a little interesting to
82:46 - me let's double check the log here so
82:50 - as blocks into this block seem to be
82:53 - working so that's pretty good and the
82:56 - contract address that we interacted with
82:59 - is the B9 so that should be good too
83:02 - and I think I oh and I mean obviously I
83:07 - was talking about how like pattern
83:08 - recognition but I'm not recognizing the
83:10 - pattern itself either
83:12 - so like when you got contract there's a
83:15 - lot of things you can do with it so when
83:17 - you want to call a method inside of a
83:18 - contract you want to like specify that
83:21 - it's like
83:22 - expecting someone to listen to you when
83:24 - you're not even calling them right oh
83:26 - boy
83:28 - and again as usual
83:31 - um methods
83:33 - all right don't make these silly
83:35 - mistakes that I do like I literally had
83:37 - a mistake in these zigzag exact same row
83:41 - twice all right don't don't mess it up
83:44 - like same line two it's the same errors
83:48 - J's all right let's update let's see
83:51 - what's happening here all right
83:53 - cannot read properties of undefined
83:55 - address all right let's see
83:58 - that's uh
84:00 - there's gonna be a few different
84:03 - wait what's happening there
84:06 - all right let's restart this guy
84:09 - all right refresh
84:14 - well that guy never had an issue or just
84:16 - that's pretty good
84:18 - all right there you go that's your uh
84:20 - First Tech talk I don't know why it's
84:22 - not showing up though so that's
84:24 - interesting let's figure that part out
84:26 - so we've got the URL oh that should
84:29 - technically work
84:34 - all right so as you can see there is my
84:37 - uh link however
84:40 - to go ahead and copy that that's just
84:42 - innovate that's not gonna work all right
84:44 - let's go ahead and create a new Ted Talk
84:48 - post so I'm just gonna go ahead and grab
84:51 - a new link
84:52 - all right so finally I got a correct
84:55 - link let's just put this guy in here and
84:58 - let's
85:00 - this is my first video okay
85:04 - actually works
85:07 - let's see how that goes all right create
85:11 - new yup coming from that guy and there
85:13 - you go video uploaded all right let's
85:15 - refresh
85:17 - and if I scroll down
85:20 - there you go
85:24 - there is your first tech talk that you
85:27 - just uploaded this uh yeah this will be
85:29 - this will need to be redeployed this for
85:31 - a tutorial yeah I put an image here
85:34 - that's fine that's fine anyways now it's
85:36 - time to go ahead and actually like this
85:38 - video
85:39 - pretty good one you should watch it the
85:41 - clever programmer on tick tock
85:43 - all right
85:45 - that being said let's go ahead and let's
85:47 - move on to the other function so there's
85:50 - a few more
85:51 - as is like and there's get number of
85:54 - likes let's actually get those done
85:56 - first those are gonna be the easiest
85:59 - ones
86:02 - all right so
86:04 - get number of likes we got all the uh
86:07 - guard Clauses and everything set up so
86:09 - we're just gonna wait and we're gonna
86:12 - say contract
86:14 - dot methods
86:16 - fine enough didn't mess it up let's go
86:20 - to our solidity file and then get number
86:30 - contract up methods okay
86:33 - so we're gonna say oh wait
86:37 - contract dot methods and we're gonna
86:41 - have a little bit of a Twist here so I
86:44 - think that yeah whatever uh copilot
86:48 - thinks that's that's fine that's fine so
86:50 - let's go into our solidity file so if
86:52 - you think about it we haven't really
86:54 - created any kind of good number of likes
86:57 - function in here so instead we are going
87:00 - to use this mapping so let's see how we
87:04 - can call this activate that
87:07 - um that guy there and then just close
87:09 - the output we're not going to need it
87:10 - just open this
87:12 - and then uh here you see if you passing
87:15 - the the ID of the video
87:19 - all right
87:20 - if you're passing the ID of the video
87:22 - that's where uh that's how you're gonna
87:25 - get that number of likes back all right
87:27 - so that's the one we're gonna call so
87:29 - we're gonna say
87:33 - we're gonna say wherever we're at oh
87:35 - yeah here likes
87:38 - and we're gonna press an ID which we get
87:41 - from the front
87:43 - we're gonna go ahead and call that
87:45 - and let's just cancel log before we do
87:48 - anything
87:49 - and so for that it is helpful if we put
87:52 - it in a
87:54 - variable so it's going to be likes of
87:58 - course likes equals that and we'll just
88:02 - passing lights there
88:04 - and let's see what we got
88:08 - there you go there's four zeros that
88:11 - means like okay it was console locked
88:13 - twice but that's completely fine now
88:16 - we're just gonna like pass it to pass it
88:19 - back to the uh
88:21 - to the front actually it's kind of cool
88:22 - that I have this black thing here
88:24 - because it's like way easier to see it
88:25 - than here that's actually that was
88:28 - actually a power move yes
88:30 - all right
88:31 - well what we're gonna do now is
88:36 - is actually just go ahead and say return
88:39 - likes remove the console lock because we
88:41 - don't need that and let's see there you
88:44 - go it says zero now I could like it but
88:48 - I mean it doesn't go through yet and
88:50 - it's just like random stuff happening
88:52 - don't worry about it
88:53 - all right
88:54 - obviously we haven't even defined this
88:57 - so uh next up we're gonna look for is
89:00 - light
89:04 - and so once again we're going to be
89:06 - using the
89:07 - solidity file here
89:09 - and we're gonna go for the liked users
89:17 - and we're gonna go for this like
89:19 - complicated mapping so let's just go
89:21 - ahead and grab like users and then uh
89:24 - wait where is his light here is his
89:26 - light all right there you go
89:29 - so let's go ahead and type in a weight
89:32 - contract dot methods and then pass in
89:36 - that guy
89:38 - and then if you remember it needs two
89:40 - inputs so one of them is going to be the
89:42 - user address because we are interested
89:45 - in whether the user is currently using
89:46 - that
89:48 - has liked this video or not and we're
89:51 - going to pass in the ID which we are
89:53 - getting from the front end and then just
89:55 - call that
89:56 - and then once again you want to save it
89:58 - user liked in a separate variable
90:04 - and then just return it
90:09 - and let's see how that works out
90:12 - okay so it says user address is not
90:14 - defined that's interesting because I
90:16 - clearly remember defining it oh it's a
90:19 - user account that would be helpful if uh
90:23 - everything was the same all right
90:25 - let's see and there you go now that part
90:29 - works
90:31 - okay so there's literally the only thing
90:33 - that's left is liking and disliking a
90:35 - video
90:36 - so let's go ahead and implant those
90:38 - right now
90:40 - both of them are going to be almost the
90:43 - exact same so I'm just going to type it
90:45 - out once and then copy paste and we're
90:47 - good to go so what we're gonna do here
90:49 - is we're gonna call another function
90:52 - from the contract
90:54 - so we got methods and then how do we
90:57 - even call this so come back here let's
91:00 - see it was like video and it needed the
91:02 - ID all right so paste that and then
91:05 - we're going to pass in the ID that we
91:07 - got from the front end nice
91:10 - and then uh we're gonna need to pass in
91:13 - a few things but that's literally the
91:15 - same thing that we are passing in when
91:17 - we're creating it so I'm just gonna once
91:19 - again for Leicester just copy it and
91:22 - then see how that works out
91:27 - now the same thing can be said about
91:29 - this like video the only thing is you're
91:31 - gonna change the method that we're using
91:34 - and that's going to be this live video
91:36 - Let's place that there
91:39 - and I'm just gonna refresh so everything
91:41 - is good to go and hit that
91:44 - okay my metamaskas popping up there's
91:47 - nothing no fees to pay
91:49 - no fees to pay and if I refresh
91:53 - my video was like then there is one more
91:55 - line there is one like so that my
91:57 - friends is literally the entire build
91:59 - now you can go ahead and go customize
92:01 - this build show it to your friends
92:03 - family whatever but this is pretty much
92:06 - this build and this is a wrap I think
92:09 - this is a pretty good weight this was a
92:11 - pretty good video to understand a bunch
92:13 - of errors that you could be making while
92:15 - you are
92:16 - working on these projects
92:19 - and I hope you get some value out of it
92:21 - and if you did let me know Down Below in
92:23 - the comments that's it see you next time
92:25 - peace