00:00 - - Hey guys, what's up?
00:01 - So in the last video I
talked about string slicing.
00:06 - In this video I'm gonna
talk about lists, okay?
00:08 - Lists of things and
what the heck are lists.
00:11 - Lists are awesome.
00:12 - However, in the last video I
left you guys with a question.
00:16 - I said, take this,
00:20 - right, and parse it.
00:21 - And basically XBox 360, pull that out,
00:25 - save it in a variable like product.
00:27 - Pull this out, save it
in a variable like price.
00:30 - And save this in a
variable like condition.
00:32 - Right, so when you have
your Excel sheet open,
00:35 - it looks really nice,
it'll look like this.
00:43 - My solution, I'm gonna
do it in a different way
00:47 - because if you try to use it
as index, this is the solution.
00:50 - So you can pause the video,
think about how it works.
00:53 - That's how you'll pull the 150
00:55 - and using the same logic,
you'll pull the New.
00:57 - However, index is a
very ugly method to use
01:01 - for getting, parsing the string.
01:04 - What I want to show you guys
is this method called find.
01:07 - Okay, that's a very nice method.
01:09 - Let's say we take the
data, and I do data.find
01:14 - and find, it shows you the
bottom what it takes in
01:17 - as the function, it takes in the substring
01:21 - and then it takes in optional
arguments, like start and n.
01:26 - So I'm gonna say data.find
01:29 - and I'll give it
01:30 - substring pite.
01:33 - What a substring means
is that, that's something
01:37 - that exists in the original string.
01:41 - For example,
01:44 - I have to give find,
01:45 - the function find or the method find,
01:47 - I have to give it something
that exists within this.
01:50 - If I gave it something that
doesn't exist within it
01:52 - like banana,
01:54 - it would say negative one,
01:56 - like I didn't find anything.
01:58 - But if I gave it a pite, you
can see that it finds a nine.
02:04 - And another thing you can
give it is how you solve...
02:09 - Is you can give it where
to start from, okay?
02:12 - So I can say, for example,
02:15 - start looking after ten,
02:19 - or look for pite,
02:21 - but I want you to start at string nine,
02:24 - okay?
02:25 - Or I want you to start
at string ten, alright?
02:29 - And now it finds a pite at location 15.
02:32 - So if I do data, and if you count it up,
02:35 - you'll see that this is the pite
02:37 - and it is at indeed at location 15.
02:39 - If I do data(15), you'll see that
02:41 - it gives you back that pite.
02:45 - Right?
02:47 - Okay, so by getting that second pite,
02:51 - now you can get the value
in between the first pite
02:54 - and the second pite by
saying something like,
02:59 - start from finding the first pite
03:03 - and then go up to
03:06 - finding the second pite.
03:10 - Right?
03:11 - So I can say, finding,
03:14 - or start from,
03:17 - or look for pite.
03:19 - And then start from
ten, for example, right?
03:24 - And this gives you this guy here.
03:26 - And just to make sure we don't
03:27 - include the pite in the first one
03:29 - we can just start from plus one with that.
03:31 - Okay?
03:32 - So that gives you in between
the first and the second pite
03:34 - you get probably like 150.
03:36 - Okay, so,
03:38 - the reason why I went even
more in depth in strings
03:41 - even when the video called lists
03:43 - is because a lot of what
you learn from strings
03:47 - is applicable to lists, okay?
03:49 - So, let's take a list
and call it groceries.
03:54 - And I will have apple,
and I foreshadowed this
03:57 - for you guys a little bit...
03:59 - Banana--and you can also have integers.
04:01 - Although usually you try to
04:02 - put the same kind of thing in the list.
04:06 - But sure, let's put five
in there and six in there
04:09 - and then oranges or something, okay?
04:12 - Cool.
04:13 - Now, if I wanna
04:15 - take this list
04:17 - and I wanna get the first
element and the second element,
04:19 - if it was just a string,
04:22 - right?
04:22 - Like the reason why lists
are useful is 'cause
04:24 - you can use it to store
multiple variables.
04:29 - Like for example, if you
wanted to use variables
04:31 - to store this, aww shh--
04:34 - It would be a little...
04:38 - It would be weird.
04:39 - 'Cause you will say groceries,
zero is equal to apple.
04:43 - You would say...
04:51 - Groceries of one are banana.
04:53 - And so then when you do groceries of zero,
04:55 - you get back apple.
04:57 - And when you do groceries of one,
05:00 - you get back banana.
05:02 - But lists make it, make that thing,
05:05 - for you in a really easy way, okay?
05:09 - So now, if I do groceries and
if I do groceries of zero,
05:14 - I get back apple, okay?
05:16 - And if I do groceries of
one, I get back banana.
05:19 - Because apple is in the zero position.
05:22 - Banana is in the first position.
05:25 - This is in the second,
third, fourth position, okay?
05:30 - So lists make it really nice for you.
05:33 - Imagine if you were trying
to store data for a race.
05:36 - So like, four of your
friends ran really fast
05:40 - and you wanted to record who
came first, who came second.
05:43 - So you can save
05:46 - race is equal to
05:49 - like John came first,
and then Bob came second,
05:53 - and then, you know, whatever,
like Timothy came in third,
05:59 - uh, Timothy is pretty slow. (laughs)
06:03 - So we can say like,
okay, who came in first?
06:07 - We can ask that question.
06:08 - We get back John.
06:09 - We can say, who came in second?
06:11 - We get back Bob.
06:12 - And I can say, who came in third?
06:14 - Or I can say who came in last?
06:17 - That negative one gets
you the last element.
06:19 - And this answers all my questions.
06:22 - So just like how were
able to slice strings,
06:26 - we're able to slice
06:28 - lists, okay?
06:30 - But notice, lists is nicer for elements.
06:33 - So for example,
06:35 - XBox 360 and all this stuff,
06:38 - I'll show you guys a really
cool trick you can do with lists
06:41 - to break that up into pieces.
06:43 - So like for example,
06:46 - if I gave you a string like this, right,
06:48 - what is going on?
06:50 - Notice that there are a lot
of spaces in between, right?
06:52 - Let's just replace those spaces,
06:54 - just so it's more visual,
06:56 - let's replace those space with that,
06:59 - and let's say we want to get
the what part separately,
07:02 - is part separately, going part separately,
07:04 - and on part separately,
07:07 - without having any of
the dashes in the middle.
07:10 - There's a method we can
use called .split, okay?
07:14 - And we can pass to .split
what we want to split by.
07:19 - So I can say something like this,
07:21 - I want to split by the dashes, okay?
07:23 - So check it out, now I got
what is going on, right?
07:27 - This is a list
07:30 - of strings.
07:31 - Now the data complexity is
getting a little bit higher,
07:34 - it's a list containing
strings inside of it.
07:39 - Okay, so, I can call this like,
07:43 - you know,
07:46 - greeting or something, it doesn't matter,
07:48 - and if I do greeting, I can say
07:50 - What's the first word of greeting?
07:53 - What's the second word?
07:58 - Whoops.
08:02 - Greeting, right, what's the second word?
08:05 - And for example, I can
say what's the last word?
08:09 - And it'll give me what is going on,
08:11 - on being the last word, right?
08:13 - Now, I can also do
string slicing just like
08:17 - how I can do in strings.
08:19 - So I have start, I have stop,
08:22 - and I have step.
08:24 - So if I take the race one again,
08:27 - I can say go from zero
all the way to the end.
08:31 - I can say the same way, like this,
08:35 - this is like optional, right?
08:38 - It starts with zero and it ends at zero,
08:40 - or ends at the last one by default.
08:43 - If I wanna get from John to Bob,
08:46 - I can say like give me the
08:47 - first two...
08:50 - first two contestants of the race.
08:53 - And it will give me John and Bob.
08:55 - Or I'll say give me
everybody but the last guy
08:58 - so I can ask that question
to my list, just like that.
09:04 - Okay, now to answer your guys' question
09:06 - of how to reverse the string,
09:08 - it's the same you can
reverse the list as well.
09:12 - So, lemme show you guys.
09:14 - There are a couple of different ways,
09:15 - but I'm gonna show you guys
the nicest, the fanciest way.
09:20 - So let's take this list
09:23 - and I wanna step by...
09:26 - Sorry, I wanna start at
the default, which is zero.
09:29 - I don't have to write zero,
09:30 - but I'll just write it for you guys.
09:32 - I want to go all the way to the end
09:34 - and I don't have to write this, okay?
09:36 - So I'll just leave it blank here.
09:39 - And for the last part, for step,
09:42 - instead of saying step by one,
09:44 - which will just give me the whole thing.
09:47 - Instead of saying give
me every other element,
09:49 - so like give me John and then Timothy
09:52 - I will say
09:55 - step by negative one.
09:57 - So check this out,
10:00 - let's remove
10:03 - this,
10:05 - right?
10:06 - And let's remove that
guy, and let's do that,
10:09 - and you will see how it steps.
10:14 - It just reversed the list.
10:17 - If we have
10:18 - the same string, like
10:20 - let's say we have data I
can do the same way and
10:25 - reverse everything in data.
10:28 - So you can see XBox 360 and New and 150
10:31 - are all written backwards, okay?
10:35 - So that's how you would
like reverse something.
10:38 - Now I want to talk about
10:43 - split again,
10:44 - and I want to talk about
one very important method
10:48 - called a pen for a list.
10:50 - One of the most commonly used things
10:53 - that any programmer does
in any language, okay?
10:57 - So split is like Java,
Cs, everybody uses that.
11:01 - It just might not be called split.
11:02 - And the same thing in
Python, everybody uses split
11:05 - and the next method I'm
about to show you, pen.
11:07 - Very common for all the games you make,
11:10 - for everything that you
do, it's going to be like
11:11 - one of the most common thing you use,
11:13 - especially a pen, so pay attention.
11:15 - So I'm gonna show you
11:18 - the method called
11:20 - the split, okay?
11:22 - So I've shown you a little
bit of that already.
11:23 - So let's say I take data
and I wanna break it up,
11:27 - right, product, price, condition.
11:31 - Very easy way to do it, very
easy way to do it split.
11:33 - So let's use data.split,
11:36 - and I wanna say split by
11:39 - pite.
11:41 - Boom, look at that.
11:42 - How nice is that, right?
11:44 - It automatically just split it by that
11:46 - and you can store that in
11:50 - details or something.
11:52 - And now if I do details of zero,
11:57 - and I can set that equal to product.
12:00 - So now if I do product, I get that.
12:03 - I can say
12:05 - price is equal to
12:07 - details
12:09 - of one
12:10 - and I can say condition
12:13 - is equal to details
12:14 - of two.
12:16 - Okay, price, condition,
12:19 - boom,
12:20 - okay?
12:21 - So that was like some really
nice ways to get this done.
12:24 - In the next video I will talk about a pen.
12:27 - So stay tuned.