00:00 - hey guys what's up this is ky from
00:02 - clever
00:04 - program.com and um we just kind of got a
00:08 - new setup so I wanted to just point that
00:11 - out so we can get started and move past
00:14 - it because we want to get to the cool
00:16 - stuff so now today I want to give you
00:18 - guys your first lecture on
00:22 - objectoriented programming so if you
00:25 - guys are taking this course I suggest I
00:28 - highly suggest you guys take on my
00:30 - website clever program.com because you
00:34 - guys will have a full learning
00:36 - management system there which means that
00:39 - it will tell you what percent of your
00:40 - course is complete and where you left
00:43 - off the last time so if you forget and
00:46 - you're picking it back up it'll start
00:48 - you from right there think of it like
00:49 - Netflix but for your career so binge
00:53 - friendly and no regrets that's the
00:57 - perspective I want you to take on it all
00:58 - right so here we will also have a lot of
01:01 - exercises perhaps some extra notes and a
01:04 - wonderful community so take advantage of
01:06 - that and if you're taking it on my
01:08 - YouTube channel that's great but here it
01:10 - actually might be
01:12 - greater okay that is one of the most
01:15 - famous and amazing ways to program and
01:19 - it's different than functional
01:20 - programming which is kind of what you
01:22 - guys have been doing you know you make a
01:23 - function that does something and that
01:25 - works that's great but I want to also
01:27 - show you object-oriented programming and
01:29 - that how maybe that can be useful for
01:32 - you okay it takes a little bit to wrap
01:34 - your mind around it but I'm going to
01:36 - give you guys a little sneak peek at it
01:39 - a little
01:40 - example and um then what I'm going to do
01:43 - is show you guys where you guys can
01:45 - start accessing this code from here on
01:47 - out okay I'm going to make you guys some
01:49 - adults and I want to show you the real
01:52 - place to access this code from so up
01:54 - until now I've been giving you a link
01:57 - like.it which is reel.it or perhaps some
02:01 - other form of Link but now I'm going to
02:03 - show you guys GitHub I'm going to
02:06 - introduce you to your new and most
02:09 - powerful uh technology and I'm going to
02:12 - show you how you can go and just take a
02:14 - look at this code and it'll start all
02:16 - being in one place okay it's going to be
02:18 - like one home for all the code so let's
02:22 - take one thing at a time and just start
02:25 - off with objectoriented programming so
02:28 - how does it work well a quick example I
02:30 - can give you is in Python you need to
02:34 - create something called a class okay so
02:36 - we are going to create a class and that
02:39 - class could be called student okay now
02:43 - let's come down and the first thing
02:45 - whenever you make that class is you need
02:47 - to Define your initialization method so
02:50 - how do we do that it's a little finicky
02:53 - if this your first time seeing it but
02:55 - don't worry about it now give me
02:58 - something right like what does a student
03:02 - um start with so like let's say that all
03:05 - the students in the world no matter what
03:07 - course they're taking no matter what
03:10 - class they're in what are some things
03:11 - that are common among students you can't
03:14 - say they're all taking a computer
03:15 - science course that wouldn't make sense
03:18 - because somebody might be taking a
03:19 - biology course or whatnot but there are
03:22 - a few things all students have in common
03:25 - H maybe they have a name right so if
03:28 - they have a name we're going to put that
03:30 - in our initialization or init method um
03:35 - in in classes in object oriented
03:38 - programming what looks like functions
03:40 - are really methods okay so this method
03:44 - called init will have something called
03:47 - some a name okay this self part here
03:51 - that's we just put that always uh don't
03:55 - worry about kind of how it works it'll
03:58 - be very clear to you
04:00 - in the future okay but for now just
04:03 - remember when you open up that method
04:04 - write self so all students have a name
04:08 - right um what is something else that all
04:11 - students might have in like let's say a
04:13 - college class or a university class
04:17 - perhaps they have a grade right so let's
04:20 - put grade here and for that let's just
04:24 - leave it at that keep it real simple now
04:27 - what we can do is we're going to say
04:28 - self. name is equal to name and S.G
04:31 - grade is equal to grade these things are
04:35 - going to be really funny looking right
04:37 - now because it's all new but I promise
04:40 - it'll start making sense okay so how do
04:43 - we deal with this data now I'm going to
04:47 - create a new student okay we we can call
04:50 - the student Kitty um and I will say that
04:56 - um this student uh it's going to be from
04:58 - a student class okay and for the self
05:02 - part we're not going to put anything
05:04 - there all right we are going to put her
05:07 - name because remember this class is
05:10 - takes two methods right student class
05:13 - takes um this uh the initialization
05:17 - method takes two arguments name and
05:19 - grade so we got to give a name and a
05:22 - grade so maybe we can give her the name
05:24 - Kitty and um we can give her the grade
05:29 - uh I I don't know she sounds like a b
05:31 - student no I'm kidding uh we're just
05:33 - going to give her a b crade uh maybe she
05:36 - she could be a really good student uh
05:38 - and now we'll have another student named
05:40 - Daniel and we're going to initialize him
05:43 - using the student class as well and
05:45 - we're going to give him the name Daniel
05:48 - and we're going to give him the grade of
05:51 - I don't know uh 80 okay now we've
05:56 - created these guys but how do we access
05:58 - their data so now you'll see that
06:00 - there's a easy way to access this data
06:02 - where it's all concise and nicely packed
06:04 - and packaged together that's really the
06:06 - point of object-oriented programming so
06:09 - instead of having like a variable like
06:12 - um Kitty and kitty name and kitty grade
06:15 - we have all that information packed
06:17 - inside of kitty and instead of having
06:19 - all separate variables for Daniel we
06:22 - have all that information packed inside
06:23 - of Daniel and let me give you an example
06:25 - so let's say I want to get kitty's name
06:28 - I can just do kitty .name thanks to this
06:31 - self. name part this self part is the
06:34 - kitty part
06:36 - okay uh if I want to get Daniel's name I
06:39 - can do daniel. name and now let me show
06:42 - you what I mean so I'm going to say
06:43 - print I'm going to wrap these in print
06:45 - I'm going to go around here and I'm
06:47 - going to Simply run this and at the
06:49 - bottom hopefully you see Kitty and you
06:52 - see Daniel being printed now what if I
06:54 - wanted to get their grades well I can
06:56 - just do print kitty. grade and hopefully
06:59 - you ested by this point k um daniel.
07:03 - grade okay hopefully that made sense so
07:07 - hopefully you see a little bit of How
07:09 - It's Working and as I add more
07:12 - attributes um I am I can add like self.
07:17 - AG is equal to age and here I can pass
07:20 - that in as a possible parameter age and
07:24 - so what this means is that you have to
07:26 - actually pass an age otherwise um you
07:30 - can actually
07:31 - initialize those um those guys like
07:35 - kitty and Daniel you can't initialize
07:37 - those objects so I that's why it's
07:40 - giving me a little error so I got to
07:41 - pass in an age let's say um some age
07:44 - okay let's say um 30 years old and we
07:48 - can say for Daniel 15 years old and I
07:51 - can even print out their ages the same
07:54 - way kitty. AG print daniel. Ag and and
07:59 - when I run it you can see that uh 85 and
08:03 - 80 which are the grades right and then
08:06 - 30 is the kitty age and then 15 is the
08:10 - Daniel age okay so that is just a little
08:14 - sneak peek of how objectoriented
08:16 - programming works I'll later show you
08:18 - how you can use it to actually do some
08:20 - really powerful stuff like uh you know
08:23 - the turtle module I was showing you
08:25 - earlier we're going to build a guy where
08:28 - we can play around round with the turtle
08:30 - module that we were using earlier okay
08:32 - so I'll show you guys some powerful
08:33 - things but for now I want to show you
08:35 - where you guys can access this code so
08:38 - I'm going to do some magic here and uh
08:42 - this is going to basically put the code
08:44 - for you guys online right from my
08:47 - computer okay so don't worry about this
08:48 - part so much I will have a course where
08:51 - I explain to you guys how you guys can
08:53 - do this too so I'm going to say pushing
08:57 - new contents
09:00 - of
09:00 - course clever programmer
09:04 - students and I'm going to say get
09:08 - push and then I'm going to go on
09:12 - github.com
09:14 - and here's where you guys can actually
09:16 - access this you can go on github.com
09:18 - look for a repository called clever
09:21 - programmer stuff and in there I have put
09:25 - together an objectoriented programming
09:28 - folder which is O and then the lesson
09:31 - one that we were actually working on you
09:33 - can click there and you can actually
09:35 - look at all of that code okay how cool
09:38 - is that so it's going to be now the home
09:42 - of all of our code at clever programmer
09:46 - okay you guys will be able to go and
09:48 - access it from right there I want you to
09:50 - do me a favor once you come up here hit
09:52 - that little nice um star okay because I
09:57 - barely ever get stars on my GitHub rep
09:59 - repositories and by having this I can
10:01 - make people think that I'm a cool
10:03 - programmer okay but in fact I'm I'm just
10:07 - hacking and tricking the system so
10:10 - that's it guys for this first video hope
10:12 - you guys enjoyed it hope you guys are
10:14 - excited for more I love you guys I
10:17 - appreciate you and I cannot wait to see
10:19 - you in the
10:20 - next video