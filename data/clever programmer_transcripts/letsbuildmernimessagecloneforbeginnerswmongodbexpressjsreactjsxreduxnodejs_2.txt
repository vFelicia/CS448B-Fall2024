00:01 - what's going on everybody how's it going
00:03 - welcome everybody to this uh imessage
00:07 - mirn
00:07 - build because today we are going to be
00:11 - building with the mern stack apples
00:14 - one of the most uh popular application
00:18 - so stick with me guys till the very end
00:21 - because this is going to be
00:23 - huge all right let's actually go ahead
00:26 - and i think
00:27 - uh i can go ahead and demo
00:30 - this app to you so if you guys were here
00:34 - last friday with sunny uh
00:38 - you were able to build this thing using
00:41 - uh firebase and um
00:44 - the other one react and redux of course
00:47 - so
00:48 - like always uh i have the github link
00:51 - down below
00:52 - in the description so if you guys are
00:54 - interested
00:55 - and you guys want to um go ahead and
00:58 - watch it watch it or actually download
01:02 - it so co
01:03 - clone the project let's go ahead in the
01:06 - description the github link
01:08 - should be good i will be with there guys
01:11 - uh
01:12 - in any second with the github hey
01:15 - what is up rukia how's it going
01:18 - uh welcoming everybody
01:22 - thank you so much uh yeah what is up
01:26 - garyvee how's it going
01:28 - uh magmat my name is david how's it
01:30 - going
01:31 - yo radhu uh
01:34 - okay before uh yeah uh
01:37 - yeah i am going to build hey priyanshu
01:41 - what is up so guys if you don't know
01:43 - priyanshu but
01:44 - i'm sure you guys do know him uh he is
01:47 - an
01:48 - awesome student of our flagship uh
01:50 - course prophet with javascript
01:52 - and he is actually has such a great
01:56 - energy
01:56 - that it's over everything all right
02:01 - so let's actually dive into
02:05 - uh today's build but first let's take a
02:08 - look at
02:09 - how it is actually uh
02:12 - gonna look like okay i just adjusted a
02:15 - bit on my uh
02:20 - audio and now should be good okay i'm
02:23 - sharing my screen
02:24 - and guys this is
02:27 - the imessage clone that you already know
02:30 - and
02:31 - like and let me move myself to the
02:34 - right side of the image now i this it
02:37 - actually uses
02:38 - um google authentication we can actually
02:41 - later on
02:42 - dive into how to do
02:45 - um sign in with apple using firebase
02:48 - because that's an
02:50 - another awesome thing and i'm just gonna
02:52 - go ahead sign in here
02:54 - hey and we just got our very first
02:57 - donation
02:59 - thank you so much moleka uh we were just
03:03 - on a call
03:04 - today so she literally knows what's
03:06 - going on
03:07 - yes it is going to be amazing and the
03:10 - guys if you are pumped
03:11 - let me know down below in the in the
03:14 - chat
03:15 - um because this is an
03:18 - awesome uh build okay and gn
03:21 - gaming asks for a shout out there you go
03:24 - bro
03:25 - and here we go
03:28 - okay now let's actually go back to
03:31 - the imessage clone so you guys should
03:34 - actually be
03:35 - able to see it i'm gonna zoom in a tiny
03:38 - bit
03:39 - so this is literally how it is working
03:42 - this actually uses pusher so
03:45 - that it is actually real time and i'm
03:48 - just gonna go
03:50 - and type a tiny little welcome message
03:53 - for everybody who has joined but i mean
03:55 - i actually have but
03:56 - yeah there we go so let's just type in
04:00 - what's up guys
04:01 - and a rocket emoji
04:05 - and it should be there there we go so
04:08 - as you guys actually saw it it updates
04:11 - instantly it pops in there and it also
04:15 - updates
04:16 - here as well and now if i go to the
04:19 - youtube um
04:22 - thread let's go ahead and type in some
04:25 - stuff
04:26 - like i don't know like yo
04:29 - and it should be good
04:32 - and now it pops in here as well
04:36 - and updates here as well and of course
04:40 - we can go ahead and literally do the add
04:43 - new message and all that stuff
04:45 - and we are also gonna be using
04:48 - woo welcome dude boom
04:52 - and we are also gonna be using
04:55 - uh mongodb
04:58 - and all that stuff that you guys are
05:00 - actually used to
05:02 - so let's actually go into the mongodb
05:06 - which shows literally nothing but let's
05:08 - go ahead and refresh
05:09 - everything and here we go this is
05:12 - literally how it looks like
05:14 - so let's actually go ahead and build
05:18 - this thing guys who is pumped and who is
05:21 - ready
05:22 - to build the imessage clone using react
05:25 - redux
05:26 - mongodb express js node.js
05:29 - and the full moon stack
05:32 - to build today's imessage clone
05:36 - and put the put it on their portfolio
05:38 - let me know
05:39 - if you guys are ready i want to see it
05:42 - in the chat that you guys are going
05:44 - crazy and you guys
05:45 - want to build this and you guys want to
05:48 - be
05:48 - one of the 5 000 people that
05:52 - are going to get jobs as developer
05:55 - this year because we set it ourselves
05:58 - the goal
05:59 - that we want to help 5 000 people
06:03 - at least by the end of 2020
06:06 - to get jobs as developers let's go guys
06:10 - show some love in the comment section
06:12 - down below let me know
06:14 - who is excited who is pumped and who's
06:17 - ready okay mama it says go ahead
06:21 - yes uh we got psycho coder in the house
06:25 - yo
06:26 - what's up uh
06:29 - prashun says the imessage clone looks
06:32 - good yes
06:32 - it does uh sunny our front end
06:36 - master ninja built this thing so
06:39 - it's definitely it's of course it looks
06:41 - cool
06:43 - uh yeah radu says i converted four
06:46 - clones to
06:48 - me vn using using vue
06:52 - okay and yeah
06:56 - okay uh icon 101
07:00 - says whoa super hyped nice all right
07:04 - and let's actually i think let's
07:06 - actually go ahead and
07:08 - dive into this thing so i'm just gonna
07:11 - go ahead and go to this
07:13 - youtube video that you guys are watching
07:15 - so that
07:16 - i can show you guys what is going on and
07:19 - how everything how i will uh help you
07:22 - guys go ahead
07:23 - and help you guys with this thing all
07:26 - right
07:27 - so i'm on to back to safari
07:31 - let's go ahead and
07:34 - open up the video yeah with all the ads
07:37 - and all that stuff
07:38 - now uh guys if you know if you already
07:41 - know
07:42 - uh this is the link that you guys are
07:45 - looking for
07:47 - it should be working but i'm just gonna
07:49 - go ahead and test it out so let's
07:51 - actually
07:51 - everybody go ahead and click this link
07:55 - and let's open up github
07:58 - so that we can yeah please make airbnb
08:01 - and twitter mirnclone
08:03 - awesome we will we definitely will in
08:06 - the coming
08:07 - one one of the coming bills is going to
08:09 - be that
08:11 - uh yeah uh you wouldn't use firebase for
08:15 - this build that's actually an
08:16 - awesome question so i
08:20 - personally would use firebase but
08:23 - uh this is more like these sessions are
08:26 - more like to provide you guys
08:27 - as much value as possible so that you
08:30 - guys can go ahead and
08:31 - get jobs as developers this year
08:35 - so that's why we are transforming
08:37 - everything to the mern stack
08:39 - as well and we want to teach you guys as
08:42 - much uh
08:43 - back-end knowledge and all that stuff as
08:46 - possible all right
08:47 - so my advice is always
08:50 - and i think we are even on this inside
08:53 - of
08:53 - clever programmer team that actually you
08:56 - should try
08:56 - and go ahead and use firebase as much as
09:00 - possible
09:01 - and the when the when there is a feature
09:03 - that you cannot do
09:04 - in firebase or when you need back-end
09:07 - that's when you need to introduce uh
09:09 - backhand and all that stuff
09:10 - also the other thing is a mongodb
09:13 - is a much more popular um
09:17 - yeah i will uh explain mirin in just a
09:19 - sec
09:20 - someone asked from facebook uh i'm just
09:23 - gonna put it up here so that i don't
09:25 - forget it
09:26 - so and uh and the reason and the other
09:29 - reason that we are teaching you guys
09:30 - this much mongodb and the mern stack and
09:33 - all that stuff
09:34 - like what you guys can see here uh
09:38 - oops wrong button so this
09:41 - should this is actually the uh mongodb
09:44 - so this is
09:45 - the reason why we are showing you guys
09:47 - this much of
09:48 - this thing that uh because
09:52 - this is more more like in demand uh
09:55 - inside of uh of a job okay
09:59 - so this is required and firebase is not
10:03 - that popular
10:04 - so we just want to help you guys all
10:05 - right and what is mern i don't
10:08 - understand that
10:09 - so mern actually stands for mongodb
10:11 - express.js
10:13 - react.js and node.js okay
10:17 - so this is this is literally the tech
10:20 - that we will be using today
10:22 - okay i will be drawing it out in just a
10:24 - bit
10:25 - okay now let's actually go ahead hi
10:28 - victoria from germany by the way
10:31 - and so guys as you as i showed you guys
10:36 - the link is down below in the
10:37 - description good
10:39 - go ahead and go to this github link
10:42 - uh hit that green button copy this
10:45 - message uh or or this link actually
10:48 - copy this and let's go ahead and
10:51 - everybody
10:52 - open up a terminal and i'm just gonna go
10:55 - ahead
10:56 - and zoom in a bit
10:59 - and here we go hey first thing let's
11:02 - let's do amazon
11:04 - stack yes my man we will do it
11:07 - okay now uh what we will be doing
11:10 - is just pretty much just cloning this
11:13 - project
11:14 - which is the starter project okay now
11:17 - uh let's actually go ahead and type in
11:19 - git clone
11:21 - and paste the link that we got and that
11:23 - will do the work for
11:25 - us and in the background you can already
11:27 - see that it created a folder for me
11:30 - okay let's
11:34 - and here we go we should be good
11:37 - and what another thing that you guys
11:39 - want to do
11:40 - is pretty much just create a new folder
11:43 - and that will contain all the back end
11:45 - all right
11:45 - so what we will do is say uh this is
11:48 - going to be the front end
11:49 - so front end today so it's going to be
11:52 - imessage
11:53 - uh front end and the other folder is
11:56 - going to be
11:58 - the imessage backend all right
12:01 - whoops
12:05 - backhand
12:09 - here we go so literally we have two
12:11 - folders and now we can go ahead
12:14 - and start installing all the
12:15 - dependencies that we
12:17 - will be using today and we have
12:20 - a hundred and oh 240 concurrent viewers
12:26 - thank you so much guys let me know in
12:29 - the chat if you guys are excited
12:31 - and if you guys are ready to build
12:33 - today's
12:34 - um today's uh imessage clone
12:39 - okay so what what i will be doing is
12:42 - pretty much just list
12:43 - out whatever we have and oops
12:47 - and let's actually go ahead copy this
12:50 - open up a new terminal
12:52 - and i'm just going to paste it in here
12:53 - so that i am in that folder
12:55 - and why are you using zsa why not when i
12:58 - get bash
12:59 - personal preference my fan round friend
13:01 - okay that that's literally it
13:04 - okay uh and what i will be typing typing
13:08 - in here is pretty much
13:09 - npmi which stands for npm install and
13:12 - that will go ahead
13:13 - and pop in all the react uh
13:16 - dependencies that i will need and i will
13:19 - also open up a
13:21 - vs code which should be yes we have it
13:23 - here
13:24 - and on the back end side i will
13:28 - i will go into that folder and what i
13:31 - will be doing is pretty much
13:32 - start the get version control then set
13:36 - up the note package
13:37 - uh and yeah that will be pretty much it
13:40 - so what i will be doing is just type in
13:42 - here get
13:43 - in it that will start up my git version
13:46 - control
13:47 - we are on the master branch and
13:51 - what i will be doing is just type in npm
13:54 - init and that will throw a couple of
13:58 - questions
13:58 - at me uh how i want to set up this
14:01 - project
14:02 - and um so we got the package name of
14:07 - course we got
14:07 - some version uh we got the description
14:11 - which is good which is we can just leave
14:13 - all this stuff
14:14 - out and don't worry about them uh and
14:18 - one thing though is the entry point
14:20 - which should be
14:21 - server.js and the other one yeah
14:24 - and that will be pretty much it yeah uh
14:27 - of course you can
14:28 - go and type in your name uh
14:31 - into the author but other than that you
14:35 - don't have to worry about
14:36 - any of these and with that done we
14:40 - have our package.json file which
14:43 - i should be zooming into okay this
14:46 - should be good
14:48 - and i have amid some exam from the day
14:52 - after tomorrow but i couldn't resist
14:53 - myself from watching this build
14:55 - let's go let's go
14:59 - okay so what i will be doing is pretty
15:02 - much just
15:03 - add a type which will be a module
15:06 - and i will also add a start script
15:10 - whoops i will also add a start script
15:13 - which will be
15:15 - nodeserver.js and that will pretty much
15:17 - um
15:19 - do all the work for us when we are
15:22 - deploying this application
15:24 - all right now let's save this file let's
15:27 - go back to the terminal
15:28 - and we actually have um
15:32 - two or three dependencies that we will
15:35 - need to install
15:36 - right now and one of them is of course
15:38 - express
15:39 - the other one is mongoose which we will
15:41 - be using
15:42 - to connect to mango db and we will also
15:46 - add pusher okay so pusher is pretty much
15:50 - just an engine that we are
15:52 - using to make this application real time
15:55 - okay
15:56 - all right uh and let me just run through
16:00 - the comment section
16:01 - if there is any good question i can
16:03 - answer
16:05 - okay here we go all right
16:09 - uh so next up uh
16:13 - we will be just installing all these
16:15 - dependencies and i'm just gonna go ahead
16:17 - and type in here uh npm
16:21 - i express mongoose and
16:24 - pusher that's pretty much it that's
16:28 - oh and of course we will need the course
16:30 - um
16:31 - so that we will be able to
16:34 - um we will be able to uh
16:38 - add the course headers of course all
16:40 - right
16:42 - and that is going to be done in just a
16:45 - second uh this is pretty fast actually
16:49 - and what i will be doing is
16:52 - open up a new terminal and i will start
16:54 - up the node
16:55 - server it's actually going to crash a
16:58 - couple of times
16:59 - for now but let's don't worry about it
17:02 - uh once we add the
17:05 - uh server.js file we will be
17:09 - uh able to run this okay now i see
17:12 - a lot of questions regarding the hey
17:15 - lucy what's up
17:16 - uh regarding this stack that we
17:19 - are uh going to use today
17:23 - so let me go ahead and quickly draw it
17:25 - up on a
17:26 - board uh oops
17:30 - so i will just add the server.js file
17:33 - and let's go ahead and demo everything
17:36 - okay
17:37 - now what we will have is what we already
17:41 - have
17:42 - is actually a better way this is going
17:44 - to be this is the front end that we
17:46 - already have all right so this is the
17:49 - front end
17:50 - with react and redox
17:54 - okay this is made by sunny all right we
17:57 - are not going to worry about this
17:58 - uh today we have it uh ready
18:02 - next up what we will actually work with
18:06 - is going to be the back end all right
18:09 - and that is going to be the juicy the
18:11 - more technical part right because the
18:13 - front end is
18:14 - looks cool has a ton of technology
18:17 - behind it
18:18 - especially if you're using something
18:19 - like firebase but
18:21 - the back end is the hardcore uh
18:24 - technical stuff all right and let's
18:27 - actually
18:28 - yeah so on the back end we are gonna be
18:31 - using
18:32 - uh the most popular uh back-end node uh
18:36 - back-end javascript runtime which is uh
18:40 - node.js
18:42 - and we will also use server.js which is
18:46 - inside of node.js
18:47 - and oops okay
18:51 - so we will yeah i messed up this drawing
18:54 - so
18:55 - we will use node.js for the backend we
18:58 - will
18:58 - also uh use inside of that which is
19:01 - called
19:02 - server or express.js
19:07 - express.js
19:09 - that is actually the um
19:12 - that's essentially the server side
19:15 - javascript all right
19:16 - that's the easiest way and we will also
19:19 - use um
19:20 - mongodb right mongodb
19:25 - and to connect between the server
19:28 - and the uh database we are going to use
19:32 - something called
19:34 - mongoose okay so this is some badass
19:37 - tool
19:37 - this is going to make the whole
19:39 - connection super easy
19:41 - and super fast and yeah that's pretty
19:44 - much
19:45 - the back end stack and just uh just so
19:48 - you guys see
19:49 - uh this is going to be the connection
19:51 - between the front and
19:52 - the back end and we are going to be
19:54 - using something called
19:55 - apis all right this these are going to
19:58 - be rest apis
19:59 - is uh um and yeah you guys are going to
20:02 - pick it up
20:03 - as we go okay boom
20:07 - and yeah here we go all right now
20:11 - with that said let's go guys and let me
20:14 - know
20:15 - if you guys are ready and if you guys
20:17 - are
20:18 - uh if you guys are ready and pumped up
20:21 - to start
20:22 - today's build the imessage clone using
20:26 - the mirn stack okay let me know i want
20:29 - to see it in the comments i want to see
20:31 - them rolling
20:32 - and yeah okay can you please make your
20:35 - youtube
20:36 - thumbnail small it's blocking the back
20:39 - end
20:40 - um not sure what what do you mean
20:46 - um
20:48 - means like build with voice and video
20:50 - call function
20:52 - um i'm not sure if we are going to do
20:55 - skype
20:56 - but i am actually planning to do
20:58 - facetime which is essentially the same
21:00 - but you know so
21:03 - if you guys are pumped about the
21:04 - facetime build with real-time videos so
21:07 - like a real-time chatter app
21:09 - using the mern stack let's go ahead and
21:12 - drop some
21:14 - uh drop some
21:16 - uh fire in the chat okay now
21:21 - we will be going ahead and let's
21:23 - actually
21:24 - i'm gonna go ahead and share my screen
21:27 - and
21:27 - pretty much that will let's go ahead and
21:30 - start today's
21:32 - build now one thing though that i want
21:34 - to add is a get ignore file
21:36 - um otherwise it's going to be
21:40 - otherwise my whole github is going to be
21:42 - like checked with all the node modules
21:46 - um yeah that should do it
21:49 - yeah we reduced everything in the stash
21:54 - okay arrow okay so that's it and
21:58 - we can close up the gear ignore
22:01 - next up what we will be doing yeah
22:03 - facetime do it okay
22:04 - we will and yeah okay
22:08 - and what i will be doing is pretty much
22:10 - just lay out the whole application
22:12 - how it's going to be built up over here
22:15 - and then we will go ahead and actually
22:16 - do it okay so first we will be importing
22:19 - everything that we will need
22:21 - then we will uh of course have some app
22:24 - config so that's where uh we will create
22:26 - our instance we will set the port we
22:28 - decide the pusher and all that stuff
22:31 - um next up what we will be doing
22:34 - is pretty much just add the middlewares
22:38 - um
22:46 - okay okay yeah
22:49 - facetime all right that's the energy
22:53 - that i want to see in the chat guys
22:54 - let's go ahead and drop some fire okay
22:58 - exactly okay uh text now clone
23:01 - i don't know what text now is um
23:04 - is my instagram handle by the way oh oh
23:07 - it's not
23:08 - so boom this is my instagram
23:13 - account let's go ahead and drop me any
23:16 - messages
23:16 - or any requests that you guys want to
23:20 - actually have on your portfolio whatever
23:22 - apps you
23:23 - guys want like literally text me up i
23:26 - will be responding to all of them
23:28 - by the end of today hopefully and
23:32 - yeah so just drop me anything that you
23:35 - guys want
23:36 - to okay okay let's actually go back
23:39 - and we okay so we will add the
23:43 - middlewares
23:44 - and then we will do some kind of db
23:47 - config
23:49 - and then uh we will do
23:54 - uh the api routes and we will also have
23:57 - the listening part all right whoops
24:02 - let there we go
24:05 - all right super quickly let's just run
24:08 - through
24:08 - uh how do we set up the uh backhand
24:12 - uh part so this is going to be
24:15 - uh like just we are going to be touching
24:18 - the key points okay
24:20 - and with that said yeah i already see
24:24 - uh the message is coming in nice
24:27 - uh all right and yeah i see that
24:30 - everybody is asking
24:32 - to slow down a bit because we got
24:34 - complete beginners
24:35 - all right i'm going to slow down a bit
24:37 - and let's actually continue with that
24:40 - uh slower down speed so now what i will
24:42 - be doing is importing all the
24:44 - dependencies
24:45 - that we have installed all right so as
24:48 - you guys remember
24:49 - we have installed express mongoose
24:52 - pusher and
24:53 - cores so guys if you don't know what
24:56 - these
24:56 - are express is the server side
24:58 - javascript
24:59 - mongoose is a tool is an awesome tool
25:02 - and
25:02 - it's going to make our connection to the
25:07 - mongodb database super easy pusher is
25:10 - going to make
25:11 - our app real time and course is a core
25:14 - is just pretty much the course headers
25:16 - it's like access control and all that
25:18 - stuff
25:18 - all right now what we will be doing
25:22 - is let's go ahead and import it i am
25:25 - using
25:25 - the es7 uh snippets
25:29 - so if you guys just go ahead and type
25:31 - es7
25:32 - in the uh extensions this is what will
25:35 - pop up
25:36 - let's go ahead and i actually highly
25:37 - recommend everybody go it goes ahead and
25:40 - installs this um because this is an
25:43 - awesome tool and i am you i'm gonna be
25:45 - using
25:46 - the uh these snippets all right
25:50 - so i'm just gonna uh import everything
25:53 - uh and let's start with express so i'm
25:56 - going to import express from express of
25:58 - course
25:59 - then uh mongoose
26:03 - and again and we
26:06 - also have the pusher and the course
26:10 - just like that and now what i will be
26:12 - doing is pretty much
26:13 - just create an uh application the
26:16 - the app instance which is pretty much
26:20 - like decreating a variable
26:21 - like syntactically okay
26:25 - okay now i will be typing in const app
26:28 - equals express and that will essentially
26:31 - create our app instance and next up i
26:34 - will be defining
26:35 - which port is it going to be running on
26:37 - so depending on if it is going to be a
26:40 - production or some kind of server
26:42 - environment where it is uh predefined
26:45 - which instance runs on which port we
26:48 - want to go
26:49 - uh with that port otherwise if you're
26:52 - running it locally we will be running it
26:54 - on the 9000th
26:55 - port okay so let's go we are typing
26:59 - import equals
27:00 - process the environment and
27:04 - port and we will run it on the nine
27:09 - nine thousand port all right next up uh
27:12 - let's import the middlewares otherwise
27:14 - we will be forgetting it and we will be
27:15 - like oh my god what is happening
27:17 - but because we are importing them now
27:20 - we're going to be cool
27:21 - so two things that we will be importing
27:24 - one of them is going to
27:25 - give our app the ability to work with
27:28 - json files be
27:29 - because with apis we are going to be
27:31 - working with the json files all right
27:34 - and the other one is going to be pretty
27:36 - much the course headers
27:37 - um and it's just going to be a super
27:40 - easy
27:41 - um way to do it okay uh
27:46 - sihan i i hope i spelled your name
27:49 - correctly
27:49 - or pronounced sorry um i don't know
27:52 - redux should i continue watching
27:54 - 100 uh we are not going to be
27:58 - actually uh building up redux
28:02 - we are just going to be using whatever
28:04 - sony has built
28:05 - for us okay so if you guys
28:08 - don't know any front end any react any
28:11 - redox
28:12 - not a problem we are going to
28:15 - like like this video is more uh is
28:18 - focused on the back end okay
28:20 - uh if you guys are interested let's go
28:23 - ahead and
28:24 - back last friday i think
28:28 - uh sonny went live with this uh
28:31 - and built it the front end part okay so
28:34 - if you guys
28:35 - want to go ahead and learn um
28:39 - react and the redox i highly recommend
28:41 - everybody goes ahead and watches that
28:43 - video
28:44 - afterwards okay all right
28:47 - now let's go back and
28:51 - let's actually add all the um
28:55 - middlewares that we are going to be
28:57 - using today
28:58 - so let's say hey what's up alex sandros
29:02 - uh so we will be using
29:06 - uh we will be using the course
29:09 - and that will pretty much enable all of
29:11 - them
29:12 - um yes you can ask me tomorrow whenever
29:16 - you want to
29:17 - and we will be saying
29:20 - app.use oops
29:23 - and we will add the express
29:27 - dot json uh ability
29:30 - okay now
29:35 - so uh next up what we will be uh doing
29:38 - is
29:39 - let's not very focus on the db for now
29:42 - let's just go ahead and create a uh
29:46 - create an api route which is essentially
29:49 - not going to do
29:50 - anything super fancy it's just going to
29:53 - say
29:53 - hello clever programmers all right so
29:58 - oops uh so what this does is actually
30:01 - if you are calling the app on the with
30:03 - the get methodology
30:05 - on the uh root it's going to fire off a
30:09 - function
30:09 - which will set the response status to
30:12 - 200
30:13 - which in server language it actually
30:16 - means
30:16 - okay and we are going to send
30:19 - back hello clever programmers alright
30:23 - so this actually should be working
30:27 - and the other thing that we would do is
30:30 - pretty much say that the app
30:32 - should listen on the port that we
30:35 - defined up here and oops
30:38 - once that's act once it actually is able
30:41 - to listen
30:42 - we are going to go ahead and console.log
30:45 - that we are listening on
30:46 - whatever port we are at uh
30:49 - humble is me says i am 60 percent
30:52 - through
30:52 - javascript um what do you mean by that
30:57 - okay um yeah i learned okay
31:00 - and nikhil says let's do it that's
31:04 - amazing
31:05 - uh oh okay let's do it says
31:09 - just started javascript course and then
31:11 - okay
31:13 - all right let's go ahead and test this
31:16 - thing out and i will be using
31:18 - an app called postman which is somewhere
31:21 - around here
31:23 - and postman is essentially is going to
31:25 - give me the ability
31:27 - to go ahead and check out on
31:30 - on the apis that i am working with
31:34 - so we pretty much what i will be doing
31:37 - is i'm trying to move everything
31:40 - to so that it's going to be easy yo
31:44 - we just got our second donation from
31:46 - nitil
31:48 - thank you so much for the 20 rupees we
31:50 - really appreciate you
31:52 - and thank you for sticking here with us
31:54 - and guys
31:55 - if you are like this video and if you
31:57 - find these videos
31:59 - useful and if you guys want us to
32:02 - go ahead and do these lives every single
32:06 - day
32:07 - smash the like button and let's carry on
32:11 - okay now i will be zooming in
32:15 - a bit so that you guys can actually uh
32:18 - see it
32:19 - and let's actually uh write this uh
32:22 - to 9000 and yes we are
32:26 - getting uh back the hello clever
32:29 - programmers
32:30 - uh response so guys this is actually
32:33 - working
32:34 - this is uh looking cool so
32:37 - let's get i'm actually going to give you
32:40 - guys a round of applause because you
32:41 - guys deserve it
32:43 - [Music]
32:43 - [Applause]
32:47 - so if you guys are pumped and if you
32:49 - guys are with me and you have
32:51 - a working um
32:54 - working api around let me know
32:57 - in the chat so that we can actually
32:59 - elevate this thing
33:01 - uh to a conversation so it's not going
33:04 - to be like a
33:05 - lecture stuff okay so let's actually
33:07 - engage i am watching uh the chat uh
33:10 - and all the reactions so let's go ahead
33:14 - and start engaging okay so next up what
33:17 - we will be doing
33:18 - is pretty much just connect to our
33:20 - database
33:21 - or actually first we need to set it up
33:23 - of course
33:24 - so we will be setting up our database
33:26 - then we will be connecting to it and we
33:28 - will start
33:29 - working with our uh
33:32 - with our uh back end all right let's do
33:35 - it
33:36 - so what i would so
33:39 - let's actually go to mongodb.com
33:42 - this is a free uh nosql database
33:46 - and oh i actually i'm here
33:49 - so uh that's actually i'm gonna go ahead
33:52 - and sign
33:53 - out so what i will be doing is pretty
33:56 - much you guys can go ahead
33:58 - and sign in uh this is a free tool that
34:01 - we are gonna be using
34:03 - um so this is going to just give us the
34:06 - ability
34:07 - to store data in here and it's going to
34:11 - be super easy to set
34:12 - up now what we will be doing is create a
34:16 - new project
34:18 - then we will name it imessagelive
34:22 - oops hello imessage
34:25 - live and once that's done
34:29 - uh we don't have we are not going to
34:31 - work with anybody else so let's actually
34:34 - create the project and
34:37 - how do you connect the react app with
34:39 - mirn and node though uh
34:40 - that is actually that's the thing that
34:43 - we
34:44 - uh it's called apis so
34:48 - it's going to be the api routes and yeah
34:51 - that's pretty much it and i am going to
34:53 - teach you guys today
34:54 - and we will actually going ahead and
34:57 - connect it
34:58 - okay now next up
35:01 - let's go ahead and uh
35:04 - is there any
35:08 - is there any limit of projects creating
35:10 - a mongodb
35:12 - um i couldn't reach it
35:15 - i don't know so
35:18 - what you guys need to do is pretty much
35:20 - uh hit
35:21 - this button this create cluster button
35:24 - this is going to give you guys
35:26 - three options and you want to go with
35:28 - the far
35:29 - left one because that is free um
35:33 - and that is perfect for today so next up
35:36 - uh you don't need to worry about any of
35:38 - these uh setups
35:40 - and just go ahead and there is actually
35:43 - a
35:44 - create cluster button which for some
35:46 - reason doesn't appear on the stream
35:49 - but there it is let's go ahead and hit
35:51 - that
35:52 - it's actually going to take quite a time
35:54 - uh to set up
35:56 - and provision all the stuff so in the
35:59 - meantime
36:00 - let's actually go back here uh
36:03 - to our code and let's actually set
36:06 - everything up so that we will need to
36:09 - just uh
36:10 - paste in the connection url and that
36:12 - will do the work
36:13 - for us okay
36:17 - so what we will be doing is pretty much
36:20 - create a
36:21 - const which is going to be a uri
36:25 - and next up what we will be doing
36:28 - is uh leave it empty and
36:32 - then what we will be doing is say
36:35 - mongoose.connect
36:36 - and what we want to do is add the
36:40 - uri
36:40 - in here and
36:44 - inside of there we will actually add
36:48 - these these properties this is
36:51 - actually needed for um mangoes because
36:55 - it's still under development
36:57 - and they st and this is kind of like a
36:59 - transition
37:00 - uh that they are actually doing so
37:04 - oh alibaba yeah yeah uh near a million
37:07 - subs that's right
37:08 - we are above 800k like yo
37:13 - that's awesome okay so with that
37:16 - actually
37:16 - the mongoose connection is going to be
37:18 - done
37:20 - and let's see how our database is doing
37:22 - it still needs a little
37:24 - time and but
37:27 - while that happens let's actually create
37:29 - our schema
37:31 - for uh today's build okay
37:34 - so what we will be doing is pretty much
37:36 - say
37:38 - uh we will we will just go ahead and
37:41 - create a
37:43 - data dot js file that
37:46 - where we will be importing mongoose of
37:48 - course
37:50 - hey mongoose
37:53 - from mongoose and that
37:56 - and then we will be just going ahead and
37:59 - create the i'm asset schema
38:02 - now the imessage schema is pretty much
38:04 - going to consist about
38:06 - a chat name which is going to be the
38:08 - chat room or the group name
38:10 - then inside of there we will have
38:12 - conversation
38:14 - and inside of there that we are going to
38:17 - have a message
38:18 - a timestamp and a user which will have a
38:21 - display name an email address a photo
38:23 - a uid and yeah that would be pretty much
38:27 - it
38:28 - and of course we are going to need to
38:30 - export that
38:32 - and that's just going to be a mongoose
38:34 - model
38:35 - doesn't doesn't know it so mangoes.modal
38:40 - and we will call the collection where we
38:43 - are saving it so guys if you know um so
38:46 - guys you remember
38:46 - that uh when you are using sql
38:50 - uh you guys are using tables right
38:54 - but in nosql we are using collections
38:57 - instead of tables
38:58 - right just wanted to clear it out
39:01 - okay
39:06 - whoa thank you so much
39:09 - so 3a 101 says i like clever programmer
39:12 - i gave you guys
39:13 - 12 subscribers by sending to my friends
39:16 - about your channel
39:17 - thank you so much brother thank you so
39:19 - much we really appreciate you
39:21 - okay now what we will be doing is
39:25 - let's go ahead and we have guys 264
39:31 - concurrent viewers at the moment so
39:34 - massive shout out to you guys and i hope
39:37 - you guys are
39:37 - pumped and ready to build the imessage
39:40 - clone using
39:41 - the mern stack
39:45 - let's actually go ahead and continue
39:48 - building the thing so we will be naming
39:52 - the collection to conversations
39:56 - and we will be adding the imessage
40:00 - schema oh damn so you can just go ahead
40:04 - and copy this
40:05 - and paste it in here and will actually
40:07 - work
40:08 - so what we will be doing uh next up is
40:11 - pretty much
40:12 - we just need to import this and the back
40:14 - end is
40:15 - like halfway done guys so if you are
40:18 - this far with me
40:19 - smash the like button and if you guys
40:22 - are pumped
40:23 - drop it in the chat i want to know if
40:25 - you guys are ready to continue
40:28 - so we will be just importing
40:31 - um whoops
40:34 - so let's actually import data and
40:37 - that
40:38 - is pretty much okay so mango
40:41 - data and here we go
40:44 - so next up what we will be doing is
40:48 - go back to mongodb.com this should be
40:51 - finished by now
40:53 - and let's actually go ahead
40:57 - uh let's actually go ahead and create
41:00 - the
41:00 - database access okay we need to set
41:04 - two more things on mongodb before we can
41:07 - go ahead and connect to the database
41:09 - so while uh so let's actually do that
41:12 - right now so we will need to add a
41:16 - database user which we will call admin
41:18 - and we will just need to uh how to
41:21 - generate a
41:23 - password that will be done and guys
41:26 - you want to go ahead and
41:29 - copy it or store it somewhere safe
41:32 - because
41:32 - this password is not going to be
41:34 - retrievable anymore okay
41:36 - now with that done uh let's go ahead and
41:40 - add the user
41:41 - and let's go to network access where we
41:44 - will hit
41:45 - uh add ip address and guys
41:48 - i'm going to allow access from anywhere
41:50 - but
41:51 - as always a huge
41:54 - huge huge disclaimer
41:58 - do not do this in production environment
42:00 - and do not do this especially
42:03 - with our clients so i got a lot of
42:06 - questions what should we be doing
42:07 - and my answer for that is pretty much
42:11 - ask your client which what is going to
42:14 - be the ip address of that server where
42:17 - it is going to be running
42:18 - and while you are working on the app
42:21 - allow access from anywhere but then turn
42:24 - that off
42:25 - and set the ip address to that only
42:27 - server and your ip address
42:30 - so that you can literally like have
42:33 - control over that database and then you
42:37 - will be able to
42:38 - um help your client
42:41 - but when you are running the app on the
42:44 - client server
42:45 - that's what you want to add to so
42:49 - now let's go ahead and confirm that and
42:52 - go
42:53 - back to my screen so confirming it's
42:56 - actually going to say pending but we are
43:00 - uh good so
43:03 - now what we will be doing next up is
43:06 - pretty much
43:06 - go ahead go back to clusters and hit the
43:09 - connect button
43:13 - do you guys have made any kind of app
43:15 - website or
43:16 - game we might be thinking about that i
43:20 - don't know
43:22 - i'm just going to leave it open okay
43:24 - also make a dashboard of imessage uh
43:26 - uh we can we can totally do that in one
43:29 - of our future builds okay
43:31 - so yeah uh with especially with the new
43:34 - ios
43:35 - 14 uh dashboard that would be an awesome
43:38 - build okay
43:40 - like the pins right that's what you
43:42 - wanna that's what you mean okay
43:44 - so let's go back
43:47 - and let's hit actually everybody the
43:50 - connect
43:51 - application and where is my arrow there
43:54 - it is
43:55 - so let's everybody go ahead and
43:58 - hit that connect your app and
44:01 - there we go you want to go ahead and
44:04 - copy this line of code and go back to
44:07 - your code
44:09 - and you will be pretty much inserting
44:12 - this here
44:13 - you also want to go ahead and type in
44:16 - which db
44:17 - are you going to be working in so let's
44:19 - type in
44:20 - imess
44:24 - db and you want to also go ahead and
44:26 - change the password
44:28 - to the one that you
44:31 - just saved so hopefully you are either
44:34 - using some
44:35 - productivity tool like i do which is
44:38 - called
44:38 - alfred and it actually saves my
44:40 - clipboard um
44:42 - clipboard history but if you guys don't
44:45 - use it i highly
44:46 - highly recommend everybody goes ahead
44:48 - and just saves it somewhere
44:50 - safe so that you guys can go ahead and
44:52 - retrieve it
44:53 - now with that said we actually
44:56 - have a working uh mongodb
44:59 - connection so what we should be able to
45:03 - do
45:03 - is go down here under uh mongoose
45:07 - connect
45:08 - and say mangus the
45:11 - oops the connection
45:17 - no no once and open
45:21 - and that's when you want to go ahead and
45:22 - fire off a function
45:25 - which which will
45:30 - this is how you fire off a function and
45:32 - then you want to go ahead and cancel log
45:35 - db connected okay and now
45:38 - if we uh go ahead and go back to our
45:42 - terminal
45:42 - where it actually is running this is
45:46 - um oh yeah i forgot to add the js
45:51 - over here and we should be able to
45:55 - see the application running
45:59 - uh yeah i deleted the d from the end but
46:02 - the db is actually connected so guys
46:06 - if you guys are with me and if you guys
46:09 - have your uh mongodb connected to your
46:13 - application
46:15 - drop some fire let me know in the chat
46:18 - down below uh if you guys are with me
46:20 - and if you guys are
46:22 - ready to go ahead and continue and start
46:25 - creating
46:26 - our api routes okay
46:32 - okay now um let's go ahead and start
46:36 - building all the apis and we will act
46:40 - after this we will go ahead and connect
46:41 - it to our front end we will be
46:43 - pretty much done okay now we will need
46:46 - quite a few
46:47 - um so first thing first we will
46:50 - definitely need
46:51 - to create a conversation right uh and
46:56 - that
46:56 - will essentially be like we go in here
46:59 - and say that on the new uh slash
47:02 - conversation endpoint
47:04 - we want to go ahead fire off a function
47:06 - which will save
47:08 - down whatever we send in the body
47:12 - and that will be our db data and the
47:15 - mongodb
47:16 - will go ahead and create
47:19 - with that using that data we want to go
47:22 - ahead and create
47:24 - a new document inside of our collection
47:27 - right let me know if it's clear and if
47:30 - we can move on
47:31 - and then we will pretty much go ahead
47:34 - and handle any errors that might occur
47:38 - and send back 201 which means
47:42 - uh created in server language and
47:45 - with that done let's actually go ahead
47:47 - and test this out
47:49 - okay wrong direction so we should be in
47:52 - the new conversation
47:54 - in postman and let's actually go into
47:57 - body
47:57 - and i will just type in here epic cp
48:01 - community okay so that is going to be my
48:03 - chat name
48:04 - right and guys if you don't know why i
48:07 - named
48:08 - that failed chat name let's go back and
48:10 - check out
48:11 - the schema that we just created okay so
48:14 - everything is in connection with
48:15 - everything
48:16 - this is what i am sending in okay if we
48:19 - are leaving the conversation empty
48:21 - that's
48:21 - totally okay because we are
48:24 - not sending a message just yet okay
48:27 - afterwards we will do that
48:29 - but that's going to be another endpoint
48:31 - okay now
48:32 - with that said let's go back to the
48:34 - server let's go back
48:35 - and create this very conversation
48:38 - okay and we should be seeing the
48:42 - following answer
48:43 - if everything is uh going correctly
48:47 - now guys let me know if you guys are
48:50 - with me and if you guys are actually
48:51 - following it if this is actually
48:53 - valuable for uh to you and just drop it
48:57 - uh and just drop it in the chat
49:00 - if you guys are with me here and i want
49:04 - to see you guys that you guys are pumped
49:06 - and if you guys are ready to continue
49:09 - and go forward okay i see all the con
49:13 - uh comments coming and going as
49:16 - crazy okay everything is loaded
49:21 - um yeah icon says yeah
49:24 - okay and here we
49:28 - go all right guys please do not
49:31 - spam the chat i will need to uh put you
49:34 - guys on timeout
49:36 - and that's not something you want to be
49:37 - in okay so
49:39 - please keep the check clean uh this is a
49:42 - friendly place where everybody
49:44 - is here to learn and to learn actually
49:46 - together
49:47 - so let's not uh mess things up
49:51 - all right now i don't see
49:54 - uh okay so how are you going to upload
49:57 - this later yeah we can
49:59 - um
50:02 - okay let's actually go ahead and
50:05 - continue so just drop it any kind of
50:10 - questions that you guys have i want to
50:11 - see it in chat
50:12 - okay now uh with that done
50:16 - let's continue and let's create yeah
50:20 - okay really pumped that's the energy
50:22 - that i'm talking about
50:24 - a huge air horn for you guys
50:28 - all right uh and i think
50:33 - okay boom now
50:38 - love and appreciate your work thank you
50:41 - so much we got our reed who is super
50:43 - pumped
50:44 - yeah uh uh tommy asks creates an
50:48 - id by default
50:49 - that is correct we uh mango does it for
50:51 - us so that we don't have to worry about
50:53 - it's just like firebase does okay so
50:56 - firebase is actually doing
50:57 - the same thing um
51:00 - but we we are going it's literally the
51:03 - same stuff
51:04 - just firebase adds it as the name of the
51:07 - uh document
51:08 - or the the collection or whatever and we
51:11 - are actually going to be
51:12 - using that id as well
51:15 - okay uh
51:19 - i can go back rukia dropped some fire
51:23 - yes there we go lucy thanks for all
51:27 - of course my pleasure and let's actually
51:30 - go ahead and
51:31 - continue with that done okay
51:35 - let's go back to my screen does mongodb
51:38 - has any limitation
51:39 - yes it has but i mean it's
51:42 - it's pretty generous so don't worry
51:44 - about that
51:47 - okay so let's go ahead and continue
51:51 - and what we will be doing is
51:54 - let's actually say that we want to save
51:57 - a new message
51:59 - and what we will be doing is pretty much
52:01 - add another post endpoint and
52:06 - boom uh
52:07 - [Music]
52:09 - but so we got a question by priyanshu
52:13 - and he asks uh this might this question
52:16 - might there might be a question for
52:19 - several but when to use
52:21 - mongodb and when to use postgrad and sql
52:23 - based database
52:25 - honestly always use some nosql stuff
52:29 - never go for sql that's my personal
52:32 - opinion i hate sql
52:33 - there is definitely lots of times when
52:36 - sql is more efficient and you want to go
52:38 - with sql
52:39 - but as much as possible try to find the
52:43 - reason
52:44 - why not to use sql because that's like
52:47 - so many so much uh complex so much more
52:49 - complicated
52:50 - and you want to go ahead and and just
52:53 - try to keep everything as simple as
52:55 - possible because then you can work
52:57 - faster
52:58 - right and the faster you work the more
53:00 - clients you can satisfy and the more
53:02 - clients you satisfy the more you get
53:04 - paid and the more you get
53:05 - paid the more wealthy you are going to
53:06 - be so at the end of the day that's kind
53:08 - of what you
53:09 - what you're working for right and you
53:12 - can have more people okay
53:13 - so and we also got a question from coder
53:17 - guy
53:17 - mongodb storage limit um 500 megabytes i
53:21 - think
53:26 - okay
53:28 - jason has always still hated the sequel
53:30 - i've never said that but that's right
53:32 - okay so let's go ahead and continue
53:37 - so what i pasted in here is
53:40 - a post endpoint and we will be saying
53:43 - the
53:44 - new message endpoint that's where we
53:46 - want to go ahead and
53:47 - add all these stuff and
53:51 - what we will be saying is mango data we
53:54 - want to go ahead and update it
53:56 - and so we will filter on
54:00 - which id which uh document
54:04 - has the id that we are going to be
54:05 - passing in as a query
54:07 - right so we are
54:10 - actually going to be using this id
54:13 - that is generated by uh
54:17 - uh generated by mongodb
54:20 - and we will be using that to filter on
54:23 - uh
54:24 - any conversation um
54:28 - where we will be where we will be adding
54:31 - all the new uh thanks priyanshu
54:34 - uh where we will be adding the new
54:37 - messages right
54:39 - so let's go back and
54:42 - so in and next next up what we will be
54:44 - doing is
54:45 - add into the conversation uh
54:50 - exactly that's exactly what i was gonna
54:52 - say that keep the chat clean okay
54:55 - so next up we will be pushing in uh the
54:58 - request body
54:59 - into the conversation array okay
55:03 - so we will be passing in the query the
55:06 - id as a query
55:07 - we will be searching which conversation
55:09 - are we going to push a new message
55:11 - to so with that said fire up the
55:14 - function
55:15 - and handle any errors that we got we
55:17 - also want to console.log if there is an
55:20 - error uh saving the message and
55:23 - wipe with us asks your opinion on php
55:27 - no go really on no go
55:31 - okay and what we want to do is like yeah
55:35 - handle all the errors
55:36 - that we might get and also if everything
55:39 - is
55:40 - correct and done we want to go ahead and
55:42 - send back
55:44 - the data so that we can check it out all
55:46 - right
55:47 - let's go to our lovely postman
55:50 - and we want to go ahead and copy this
55:53 - id and go ahead and paste it in the id
55:57 - field and what you want to do is
56:02 - like we can literally go ahead and add
56:05 - all these stuff in here okay
56:07 - so we we had rishi uh with us
56:10 - two days back or it was yesterday no it
56:12 - was two days back
56:14 - uh so we will be uh we will be using
56:18 - the same photo all right so let's send
56:21 - it
56:21 - and could not send
56:28 - we just faced the bug guys something is
56:30 - happening
56:33 - so let's actually see what we got
56:38 - so uh what we had is that in the
56:42 - in here we had the message we have the
56:45 - timestamp we have the user
56:47 - yeah yeah yeah and
56:51 - mango data inside of conversation
56:54 - message timestamp user which is display
56:56 - email photo you whoa i think it's a
57:00 - it's another kind of problem so let's
57:04 - see what we had
57:06 - let's try to send this again and
57:10 - this is uh throwing some kind of error
57:13 - could not send eric uh oh connection
57:17 - okay so this wasn't actually a bug
57:21 - i just made a mistake of not changing
57:23 - the port
57:25 - so guys make sure that you guys are
57:27 - using the correct port okay
57:30 - otherwise you are going to be
57:32 - encountering issues so with that said
57:34 - we just got this ugly uh data back
57:38 - don't worry about it we're not gonna be
57:40 - using it so it's just a nice thing that
57:42 - we can see
57:44 - okay uh and let's
57:47 - actually go ahead and
57:50 - continue so guys if you are with me
57:54 - and if you guys could save a message
57:56 - into
57:57 - your mongodb database as i just could
58:00 - uh let me know in the chat and if you
58:03 - guys are actually
58:04 - finding this video um good
58:08 - and we are at 277 likes so guys
58:12 - if you guys if you got uh value out of
58:15 - this video
58:16 - smash the like button so that we can get
58:19 - this video out there to as
58:21 - many people as possible and that will
58:25 - help
58:25 - us go ahead and help 5000 people
58:28 - get jobs as developers which is our goal
58:32 - for 2020 okay all right
58:35 - now let's go ahead and check the mongodb
58:39 - out quickly how it actually looks like
58:44 - so inside of here we just got a new
58:46 - message there we go
58:48 - and let's go ahead and continue
58:51 - building all our uh endpoints
58:54 - so what we want to do is pretty much
58:57 - uh retrieve the conversation list right
59:02 - and the other thing that we want to do
59:04 - is retrieve message
59:06 - all the messages okay so let's do
59:10 - the first one
59:13 - so let's go ahead and now
59:16 - add a get endpoint all right
59:19 - so we will be saying oops app.get
59:23 - and inside of there we will say the get
59:26 - and conversation list
59:31 - okay uh so we will say app.get
59:35 - conversation list we will fire off
59:37 - a function a uh callback function and
59:40 - inside of there
59:42 - what we will be doing is pretty much
59:44 - just
59:46 - get everything back from uh all these
59:50 - conversations and then push back only
59:53 - the data that we will be using on the
59:54 - front end okay
59:56 - so what we will be doing is of course uh
59:58 - we will say mangodata.fine
60:02 - and we don't want to go ahead and filter
60:05 - out all these stuff
60:06 - that's not for not today so
60:10 - we will say error and if there is an
60:12 - error we need to of course handle it
60:14 - and with that done let's go ahead and
60:19 - handle the error uh so we will need a
60:22 - huge huge if gate and we will say
60:26 - error and inside of there response
60:28 - status is going to be
60:30 - 500 if there is an error and we will say
60:34 - uh we will send back the error okay
60:38 - now as if everything is working
60:40 - perfectly we want to go ahead and sort
60:43 - the data
60:44 - right so that we are getting it back in
60:48 - the correct order order
60:49 - okay so we will need to store the data
60:53 - then we will need to create a
60:55 - conversations array
60:57 - an empty array and that's what we will
61:00 - be pushing
61:01 - back okay this is literally the stuff
61:04 - that is going to appear over here
61:07 - right we are helping our front end
61:11 - to build that thing up right
61:15 - okay so i don't even know which
61:18 - direction
61:19 - point yeah so we will have our front end
61:21 - to build this thing up
61:23 - and we will be passing the relevant
61:25 - stuff
61:26 - here okay now uh once that's done
61:30 - we want to go ahead and map through all
61:32 - the
61:33 - uh all the data that we got back so we
61:37 - will say
61:37 - data dot map
61:40 - and inside of the oops inside of there
61:43 - we will say
61:44 - conversation uh data
61:48 - and we will say inside of here uh
61:52 - we would pretty much just set up uh
61:55 - the structure that we want to go ahead
61:57 - and send back so of course
61:59 - we want to send back the id we want to
62:01 - send back the name we want to send back
62:02 - the timestamp
62:03 - and this this is literally where we will
62:06 - be
62:07 - uh this is how we will be set this
62:10 - up and once this is done we want to go
62:13 - ahead and
62:14 - push this info to the conversation
62:18 - uh to the conversation array okay so
62:21 - that's pretty much uh how we set up uh
62:24 - the stuff that we will be sending back
62:26 - and then
62:27 - of course let's go ahead and send
62:30 - this back right so hopefully guys
62:34 - you understood it and everything is
62:36 - working perfectly so let's actually go
62:39 - ahead and test this
62:40 - thing out okay so
62:43 - conversation list let's go ahead and
62:46 - check it out and here we go guys
62:50 - this is working this is awesome so
62:54 - guys if you are if you guys are here
62:56 - with me
62:57 - and you guys have this uh
63:00 - just as uh i have then it's a great
63:03 - place to be
63:04 - and smash the like button and let me
63:06 - know in the chat okay
63:09 - uh so for what you not recommend
63:12 - angular angular is actually a pain in
63:14 - the butt to learn
63:16 - i just want to throw it out there i i
63:18 - see skill room ask
63:19 - asks about it but honestly if you're a
63:22 - new
63:23 - uh if you're new to web development i
63:25 - highly not recommend going with the
63:27 - angular because this is super hard to
63:30 - learn
63:30 - but if you already know angular let's go
63:32 - and great job
63:34 - but um but yeah
63:38 - if you want to if you want to work with
63:39 - it go for it but
63:41 - always react okay now
63:48 - now next up what we will be doing is
63:51 - going back to our code
63:54 - and we will be just a
63:56 - [Music]
63:57 - we will be retrieving the conversation
64:01 - and because patrick is in love with mern
64:05 - that's another reason why i not
64:06 - recommend angular
64:09 - pretty much it okay um
64:14 - it would be nice to make an application
64:16 - using sockets uh
64:18 - and sees uh usefulness uh
64:21 - yeah of course lucy um
64:24 - actually the facetime clone is going to
64:27 - use a couple of sockets it's not going
64:28 - to be using the socket io
64:30 - who will still use pusher because pusher
64:32 - is so much better so yeah
64:33 - that's it uh so yeah what we will be
64:37 - retrieving now is the actual
64:39 - conversation
64:41 - and it's going to be another uh get
64:44 - endpoint and inside of here we will of
64:47 - course pass the
64:49 - id in as a query and once that's done
64:52 - we will filter on that okay
64:55 - so we will be
64:59 - filtering on the id that we just passed
65:03 - in and we would just go ahead and
65:05 - retrieve
65:06 - the full conversation okay
65:10 - uh matt says learn whatever the
65:13 - companies in your area want
65:16 - that's pretty much it like literally
65:18 - that's the
65:19 - best advice all right
65:24 - so uh but learn react because that's so
65:27 - much better
65:29 - okay and the and another thing that we
65:33 - want to go ahead and retrieve
65:34 - and help the front end with is pretty
65:37 - much
65:37 - send back the uh
65:40 - first message the or actually the last
65:43 - message
65:44 - that we have so that we can actually
65:46 - update this stuff
65:48 - this stuff and the image okay
65:51 - let's go back and add this endpoint
65:55 - as well and what we will say
65:58 - in here is just a get last message
66:02 - endpoint
66:03 - and what we will do is again we will be
66:06 - searching it for the query
66:08 - inside of the query we will also say
66:12 - the mango data should find it should
66:14 - search
66:15 - on the uh on the conversation
66:18 - yes but what we will do
66:22 - is just send back the last one right so
66:25 - we will uh
66:26 - sort it so that the newest one is going
66:29 - to be on top
66:30 - but we want to just send back the first
66:33 - one which is remember
66:35 - this is going to be the number zero okay
66:38 - so in computer science we uh
66:41 - start counting from number zero okay
66:46 - now with with that said
66:49 - uh i think we should be good
66:52 - with the back end okay so guys
66:56 - let me know in the chat if you guys are
66:59 - pumped
66:59 - and if you guys are with me and you guys
67:02 - are ready
67:03 - to connect your back end to the front
67:06 - end
67:06 - and have a full mern stack application
67:10 - and ready to add to your portfolio
67:13 - drop some fire drop some love
67:16 - let me know uh who is here
67:19 - with me and who is ready to continue
67:22 - and actually make this backhand stuff
67:25 - this fully technical stuff which doesn't
67:27 - have a lovely
67:28 - gui and you want to go ahead and connect
67:31 - it
67:31 - to your front end okay now
67:35 - what we will do is pretty much
67:39 - just uh uh open up the front end
67:43 - which we already downloaded and we can
67:46 - actually
67:46 - close these two files and let's
67:49 - actually go in here now this is actually
67:53 - literally the code that sunny uh built
67:57 - on friday and guys if you don't have it
68:00 - already uh link is in the description to
68:03 - this one
68:05 - link is in down below and you guys want
68:07 - to go ahead
68:08 - and clone that project using git clone
68:11 - and you wanna have that over here now
68:14 - another thing i've done with this one
68:17 - is i went ahead and said uh
68:21 - npmi which literally means
68:24 - um that we are installing all the
68:27 - dependencies so
68:28 - upload the uploaded version doesn't
68:30 - contain the folder
68:32 - called node modules which is yeah this
68:34 - one
68:35 - and the reason for that is actually that
68:38 - this thing uh i wanna
68:42 - okay real info oh okay let's start
68:45 - that's not my stuff around so uh the
68:48 - reason for that
68:49 - it is around 160 mb's
68:52 - i think yeah here we go okay still
68:55 - calculating the size
68:57 - so it still doesn't know how much it's
68:59 - actually a super
69:01 - heavy uh folder and it has all the
69:04 - dependencies in there right
69:06 - so guys you can see it it's crazy amount
69:08 - of data and you don't want to
69:11 - add it on top of your github now
69:14 - the reason the reason being you have to
69:17 - go ahead and install
69:18 - all these dependencies and there is one
69:20 - more that we
69:21 - are going to uh install right now
69:24 - and that is called axios so we will say
69:26 - mpmi
69:29 - axios and that will pretty much go ahead
69:32 - and install axios and then we will be
69:36 - able to make
69:37 - requests to our backend right
69:43 - is react native better than
69:45 - [Music]
69:47 - better than c sharp uh c plus plus of
69:49 - course it is
69:51 - everything which starts with react is
69:52 - better than whatever you want
69:55 - okay and so salizabil asks when to use
69:58 - angular um
70:02 - my advice on that would be only use
70:04 - angular
70:05 - if you already know it if you're new to
70:07 - coding and if you're just starting
70:09 - don't do it it's going to be super hard
70:11 - and it's go
70:12 - it's not going to give you that much
70:14 - success and you will
70:15 - feel uh you will not feel that
70:17 - successful
70:18 - uh as you actually are because it's just
70:22 - super hard to learn okay
70:23 - so i would i wouldn't recommend using
70:26 - that
70:27 - okay now um let's go
70:30 - back to our uh i'm not gonna use
70:34 - that anymore and what we want to do now
70:38 - is pretty much first install our
70:40 - firebase
70:42 - or actually connect it to our firebase
70:44 - because
70:45 - uh that's how we could we can
70:48 - go ahead and we can go ahead and deploy
70:53 - now uh i got this question
70:56 - uh are we going to build uh a clone
70:59 - using react native yes we are we have it
71:02 - planned okay
71:04 - okay now let's go ahead and go to
71:07 - firebase.com
71:10 - if i was a google.com actually and if
71:12 - you guys don't know firebase already
71:14 - it's a suite of tools by google and we
71:17 - will be using that today
71:19 - uh to uh
71:23 - to host our application now this
71:26 - actually is capable of
71:28 - a lot of stuff and i highly recommend
71:30 - everybody goes ahead and learns how to
71:32 - use it
71:33 - or just go to one of sunny sessions and
71:36 - you will pretty much be able to learn it
71:38 - so we will just say
71:39 - imessage clone
71:43 - and that will be it i don't need no
71:46 - analytics today
71:47 - and um and that will actually go ahead
71:51 - and provision all the resource and get
71:53 - everything set
71:54 - up for us and firebase is actually super
71:57 - easy to use
71:58 - so that's part of the reason that we are
72:00 - using it
72:01 - now i am also going to open
72:05 - up a uh open up an instance
72:09 - of the front-end application that we
72:12 - have
72:13 - and it's just going to run and we will
72:15 - have we will be able to see it
72:17 - uh hot reloading okay so
72:21 - by the time my message clone project is
72:23 - ready
72:24 - and here we go now where is my
72:27 - oh okay yeah because 3000 is okay it's
72:30 - running
72:31 - okay now what i will do is go in here
72:35 - and wait for the project to start okay
72:38 - it takes a little time but
72:40 - eventually it will be there now next up
72:42 - what we would do
72:43 - is pretty much hit this uh web icon oh
72:46 - we could have used a better color
72:48 - so hit this web icon and
72:52 - when we will build a firebase code
72:58 - actually a good idea uh
73:01 - and andre alexandros asks why not host
73:03 - on netlify
73:07 - that's actually it's like personal
73:09 - preference right
73:10 - so let's go ahead and he'll hit the web
73:13 - uh
73:14 - icon and go ahead and type in imessage
73:18 - clone and you want to also check the
73:21 - setup firebase hosting next up you want
73:24 - to go ahead and
73:26 - register your app and say next next
73:30 - continue to console that's pretty much
73:33 - uh how we set up our application in
73:36 - firebase
73:37 - that's the reason that we love it so
73:39 - much that is super easy to use
73:42 - and yeah that's it all right now next up
73:45 - what we will be doing
73:47 - is go here and go here to this
73:50 - uh settings icon over there and what we
73:53 - will be doing is say project settings
73:55 - and go down here hit config and pretty
73:59 - much
73:59 - copy all the stuff in between the
74:02 - parents
74:03 - uh delete the comment that i just uh
74:06 - that i deleted over here
74:08 - so you guys could see that this is this
74:10 - was here so i just
74:11 - went ahead and deleted this and that
74:13 - will pretty much just set up
74:15 - all the firebase stuff that we would
74:16 - need now with the done we can close this
74:19 - file
74:19 - up and next up what we will uh open
74:23 - is going to be the sidebar.js file now
74:27 - there is a nice little um keyboard
74:29 - shortcut
74:30 - which is command p on mac if you guys
74:33 - use windows
74:34 - uh any of our windows buddies in the
74:38 - chat please help us out which is the
74:40 - equivalent for command p
74:42 - in vs code and
74:46 - i will be i will be saying
74:49 - uh we will go into sidebar js
74:53 - now inside of here we have a lot of
74:56 - lovely stuff which uh
74:58 - which is uh prepared by sunny but
75:01 - this time we are not going to be using
75:04 - that
75:04 - in fact we are actually going to delete
75:07 - those stuff
75:08 - now guys who has actually who is here
75:13 - uh from any of these mirn transformation
75:16 - sessions
75:16 - who has actually done this stuff let me
75:18 - know guys i want to communicate with you
75:21 - because right now it's just
75:22 - a yes alexander says control p awesome
75:25 - so right now it's more like feels like a
75:28 - uh lecture but i guys i want to
75:31 - communicate with you so
75:32 - let's go ahead and everybody drop in the
75:34 - comments if you guys
75:36 - have used beside uh these um
75:40 - this stuff that we are going to be using
75:42 - if you guys have a already a mern stack
75:44 - application
75:45 - on your portfolio or uh
75:48 - if you guys actually have worked with it
75:50 - so randomly high
75:52 - says yes uh or actually me
75:56 - yeah thanks thanks so much brother
75:59 - okay uh we got another control p so
76:03 - yeah that's actually lovely that you
76:04 - guys are ready to help out each other
76:07 - so next up what we will be doing
76:11 - is pretty much oh my god we have we
76:14 - almost have 200 people
76:16 - at the same time watching here elias
76:19 - says
76:20 - i have five i think that's the that's
76:22 - the mern project
76:24 - that's actually awesome brother that's
76:27 - crazy this goes out for you
76:31 - so great job and let's use these free
76:34 - builds that
76:35 - to put that on your portfolio and and
76:38 - win a job in 2020
76:40 - mahey says already done clone
76:43 - done seven clones thanks cp team thank
76:46 - you so much brother for
76:48 - trusting in us and actually giving us
76:51 - the privilege
76:52 - to help you get a job because definitely
76:55 - you will get a job
76:56 - very very soon okay
77:01 - sounds cool so next up what we will be
77:04 - uh doing is go back to this screen
77:09 - and what about firebase functions we
77:12 - will use them too but
77:14 - those are like not part of the mern
77:16 - stack so
77:17 - we are doing it uh differently
77:20 - okay now rahul says love the setup david
77:24 - actually i think you were the one who
77:27 - added a pulley request to one of my
77:29 - starter projects
77:30 - guys if you are fine if you guys can add
77:34 - actual value
77:35 - without completing the starter project
77:37 - uh feel free
77:39 - uh to do that and we just got another
77:42 - lovely donation
77:44 - by waffy mohammed thanks for the hard
77:46 - work
77:47 - brother thank you so much for staying
77:49 - here with us
77:50 - and being here with me and actually
77:53 - i really hope that you are getting value
77:56 - out of this and we really appreciate you
77:58 - brother
77:59 - um so yeah hope that you will have a job
78:03 - very very soon as a developer okay next
78:06 - up
78:06 - uh let's go ahead and
78:09 - inside of here okay
78:14 - let's go ahead and add a new function in
78:17 - here
78:18 - and we will pretty much just say that
78:20 - let's go to the
78:21 - uh get conversation list endpoint and
78:26 - let's get the response and next up
78:32 - yo what's up and next up what we will do
78:35 - is
78:35 - set the chats to the data that we are
78:38 - actually getting back
78:39 - now you guys can actually see that we
78:41 - got this axial stuff going on and this
78:43 - is going to be freaking out because we
78:45 - haven't
78:45 - imported it but the reason for that is
78:48 - that
78:50 - uh we haven't actually set up
78:54 - our axios instance so with that said
78:57 - let's actually go ahead and do that
79:00 - super quickly so what we would do it
79:03 - oops
79:04 - what we will do is go into here add a
79:07 - new file
79:08 - which we will call axios.js and
79:11 - what we want to do because we already
79:13 - have installed
79:15 - yeah it's freaking out so we already
79:18 - have
79:18 - installed somewhere around here yeah
79:20 - here it is so we already have
79:22 - installed axios uh let's actually go
79:26 - ahead
79:27 - um and import it
79:30 - so we will import axios from axios
79:35 - excels there we go and we will also go
79:38 - ahead and create an
79:40 - instance which is going to be axios
79:43 - create
79:44 - and next up the base url comes
79:47 - and i always mess this up with this
79:50 - abbreviation but
79:52 - don't worry guys and what we will do is
79:55 - pretty much just
79:56 - say that uh the m4 the base url which we
80:00 - are going to be calling
80:01 - is literally the uh
80:05 - literally going to be where our
80:07 - application is running
80:09 - on so uh
80:12 - what we will say is http
80:15 - oops column
80:18 - and local host
80:23 - and 9000 because that's the port where
80:26 - we are running
80:27 - in the local environment now next up we
80:29 - just want to go ahead and export
80:31 - everything and
80:34 - oops instance there we go
80:38 - and guys literally that creates our uh
80:41 - axios instant and that's pretty much it
80:44 - so you can you guys can go ahead and
80:49 - and pretty much start importing this and
80:51 - i just want to answer this question that
80:53 - which is the best platform for
80:55 - freelancing and i would actually say
80:58 - if you are starting up either
80:59 - freelancer.com
81:01 - or um fiverr that's like a good
81:04 - playground
81:05 - and then when you're ready to roll uh
81:09 - let's go to upwork okay now
81:13 - uh do you use eslint yeah i think so
81:16 - http alexandros
81:17 - because uh because
81:21 - uh this is actually uh local and once we
81:24 - are going to be uh deploying uh
81:28 - so when it's going when it's deployed
81:30 - then we are going to be uh https but
81:33 - in the local environment it doesn't
81:34 - really matter and
81:36 - we also got the nice lovely donation
81:39 - from kelvin
81:40 - thank you so much brother i actually
81:42 - remember you from a lot of our
81:44 - a lot of these videos and lives and all
81:46 - that
81:47 - uh you have such a great energy and we
81:49 - really appreciate you brother that you
81:51 - are
81:51 - uh here with us and dropping these
81:53 - awesome
81:54 - uh donations so huge shout out for you
81:58 - and thank you so much for staying here
82:00 - and this goes out to you
82:02 - [Music]
82:05 - [Applause]
82:06 - okay next up what we will be doing is
82:10 - yeah we we got the instance exported and
82:13 - don't need that anymore and inside of
82:15 - here what we want to go ahead and do
82:18 - is say uh import and we will
82:21 - import the axios from
82:24 - here and we will say axios that will
82:28 - pretty much
82:29 - import everything for us and
82:32 - let's actually delete all the firebase
82:35 - stuff
82:35 - i'm sorry sunny if you're here
82:38 - this is it and we will just
82:42 - go ahead and use that function to
82:45 - actually
82:46 - get uh all the chats now
82:49 - this will refresh every single
82:52 - piece uh every single chat room
82:56 - and this will actually go ahead and
82:57 - render out everything
83:00 - hey comment of course brother thank you
83:03 - so much for staying here with us and
83:05 - yeah i love you brother okay
83:08 - next up what we will be doing is inside
83:12 - of here uh down down below
83:15 - uh where we're gonna go ahead and and
83:18 - render out the sidebar chat i'm actually
83:20 - going to remove
83:22 - on the left bar so this
83:25 - is not actually how the data structure
83:29 - is
83:29 - in our case but we still want to go with
83:32 - the destructured version
83:34 - so what we will do is pretty much
83:36 - replace this uh
83:38 - data stuff to this timestamp right and
83:41 - we also wanna
83:44 - change the ch the chat name to name
83:47 - because that's
83:48 - how we actually retrieve it now
83:51 - what we will do is next up we also need
83:54 - to
83:56 - change the props so
83:59 - we need to pass in the key of course
84:01 - which is going to be the id
84:03 - that we have uh
84:07 - and we also want to want to pass it as
84:09 - the id as well we want to pass in the
84:11 - chat name
84:12 - which is the actual name and we also
84:15 - want to pass in the timestamp
84:16 - now uh just a quick question difference
84:19 - between fetch and axios
84:21 - uh as far as i know axios is like more
84:23 - professional
84:25 - i don't exactly know the perfect uh
84:30 - difference or or the uh
84:33 - gap analyzes between those but as far as
84:36 - i know axios is more professional and
84:38 - easier to use and
84:39 - i like axios a bit better so that that's
84:42 - that's definitely a difference uh
84:46 - yeah will you care about the api uh
84:49 - the security for a rest api not this
84:52 - time
84:52 - but we can definitely do a different
84:55 - session
84:56 - where we will only focus on security and
84:58 - all that stuff but
84:59 - because i want to keep it super short uh
85:03 - that you guys can get the most value out
85:05 - of this
85:06 - video the fastest possible uh
85:09 - time i want to keep it under two hours
85:12 - okay
85:13 - now
85:16 - popper react helps fight with david
85:18 - loves node.js
85:20 - that's right that's actually right okay
85:23 - now let's go ahead and uh
85:27 - let's go ahead and let's check out on
85:30 - the sidebar chat
85:32 - what we have there so yeah
85:35 - and inside of here we also have
85:39 - um we also have a lot of
85:42 - firebase things going on so what we will
85:46 - be doing
85:46 - is pretty much say uh
85:49 - we will replace these stuff again of
85:52 - course
85:53 - and we will just add an other uh
85:56 - function which will be get sidebar
85:59 - element
86:00 - okay and that will literally go ahead
86:03 - and
86:04 - go to this endpoint pass in the id as a
86:07 - query because it's after the question
86:09 - mark right
86:11 - and
86:13 - [Music]
86:14 - oh yeah oh by axios by default converts
86:18 - data to into json actually actually
86:21 - that's right and i didn't even notice
86:22 - that like i said
86:23 - axios is more pro okay um
86:27 - that's actually a great great info i
86:29 - love that i love that
86:32 - oh okay axios is basically a layer on
86:34 - top of fetch we
86:36 - we are all learning guys here like i
86:38 - said we are all learning
86:40 - and what pcr am i using i'm not actually
86:43 - using a pc i'm using a macbook
86:45 - okay now let's go ahead and
86:50 - drop out all the firebase stuff that was
86:52 - going on in here
86:54 - um this worked perfectly but we are just
86:58 - gonna get rid of it because we are gonna
86:59 - be using
87:00 - something else and this is where the
87:03 - real time
87:04 - stuff will go okay nero time
87:07 - stuff later on
87:10 - you guys need to stay here and be where
87:13 - here with me
87:14 - until i am dropping and teaching you
87:17 - guys how we actually make it real time
87:19 - because
87:19 - we are going to make this application in
87:22 - real time
87:23 - so guys if you are pumped about that
87:26 - let me know in the description in the
87:28 - chat and oh my god
87:30 - we i didn't even notice but we uh
87:33 - crossed 300 likes thank you so much guys
87:37 - this is going out for you
87:42 - so thank you so much guys and we
87:44 - actually have
87:45 - above 200 218 concurrent viewers
87:50 - on all the live platforms where i'm
87:53 - at so with that done let's go ahead
87:57 - and let's actually i think this should
87:59 - be working
88:00 - now now uh the other thing we need to
88:03 - work on is going to be in the chat.js
88:06 - file
88:08 - uh so let's go there
88:11 - and what we need to uh import here is
88:14 - of course it's going to be the axios uh
88:19 - so let's go ahead and import axios
88:22 - from axios but guys notice that
88:26 - uh so there is a little bit of
88:28 - difference i want to add this to
88:30 - here so i want yeah and
88:33 - so let's please actually everybody go
88:35 - ahead and
88:37 - check these two uh lines for
88:40 - just a bit of a time so this one and
88:43 - that one
88:45 - so i so this is actually
88:48 - importing this file while this one
88:51 - is importing the dependency so guys uh
88:56 - i literally i wanna want you guys to
88:58 - understand what's the difference between
89:00 - these two
89:01 - now on the right hand side we are
89:03 - actually importing the axios package
89:06 - and on the left hand side we are
89:08 - importing
89:09 - the instance that we created on the
89:11 - right hand side using the package okay
89:14 - i really hope that cleared it up uh but
89:16 - i just remember
89:17 - getting a lot of questions regarding
89:18 - this uh topic
89:20 - why is there a dot in the slash and why
89:22 - is in there on the other side like
89:24 - yeah so i just wanted to clear it out
89:26 - okay uh
89:27 - um i actually i don't know if i've
89:30 - imported it
89:30 - in here of course i haven't here we go
89:34 - now let's go ahead and save this chat
89:38 - saved cool and we also have like crazy
89:41 - amount of
89:42 - uh firebase things going on
89:47 - but we will be replacing those stuff
89:49 - with a
89:50 - nice little uh chat thing
89:54 - okay so that's pretty much it
89:57 - and we are actually getting the
89:59 - conversation and going
90:01 - to go to this endpoint where
90:04 - oh yeah kevin says it's a super helpful
90:07 - breakdown thank you so much i really
90:08 - hope it cleared up
90:09 - and let's do it says i don't understand
90:14 - anything brother
90:15 - drop me a message and i i'm i'm happy to
90:18 - help you understand everything
90:21 - but were you actually paying attention
90:24 - okay
90:26 - now with that done so let's go back here
90:30 - so id is going to be the chat id of
90:32 - course then we want to go
90:34 - ahead and use the wrist uh the response
90:37 - and actually set the
90:40 - um chat so we want to go ahead
90:43 - and inside of the we want to go ahead
90:47 - and get the conversation and save it
90:50 - okay
90:52 - [Music]
90:54 - that's exactly right that's that's right
90:57 - that's all right
90:58 - okay all right now uh we want to go
91:01 - ahead and get
91:02 - rid of all the firebase stuff and
91:05 - we will just go ahead and
91:08 - add these things oops there's so much
91:11 - cable going on my desk that
91:13 - ah i need to learn cable management if
91:16 - anybody knows a course on cable
91:17 - management let me know
91:18 - so i've just added the conversation
91:21 - um function in here and i'm calling this
91:25 - function which will go ahead and grab
91:27 - all the conversation data for me
91:29 - and we'll set the messages to the data
91:32 - that we actually get back and because
91:34 - the data structure requires that
91:36 - um the because the data structure
91:40 - requires that
91:41 - this is how we actually uh save it so
91:44 - let's do it
91:45 - actually asks uh if i have any
91:47 - recommendations for javascript beginners
91:50 - uh what i would recommend is going ahead
91:53 - and searching up on
91:54 - the youtube searching up our youtube
91:57 - because we are dropping crazy amount of
91:59 - free content
91:59 - for you guys like the eight hour
92:02 - javascript course the react basics uh
92:05 - and we have all this stuff going on and
92:08 - if you guys enjoy that let's go ahead
92:12 - and build all the clones that we have
92:15 - and
92:16 - pretty much that that would be it so
92:18 - yeah
92:19 - okay uh
92:25 - okay
92:29 - okay my management thanks so much
92:32 - okay uh yeah exactly you can follow uh
92:36 - clever programmer videos on javascript
92:37 - another
92:38 - uh yeah let's go ahead and check out
92:41 - cleverprogrammer's youtube channel
92:42 - that's crazy amount
92:43 - of value for you guys okay
92:47 - now let's go ahead and
92:50 - we still have 180 people here with
92:54 - us huge shout out to you guys thank you
92:57 - so much for staying here with me
92:59 - i highly appreciate everybody who is
93:01 - here and
93:02 - enjoying this and just smash the like
93:04 - button if you like this video okay
93:07 - now next up uh and probably
93:10 - one of the last things that we want to
93:12 - do is
93:13 - first actually yeah uh we also want to
93:17 - go ahead and create a
93:18 - send message endpoint and that
93:22 - just uh goes on right under here
93:27 - so we also we of course send this
93:29 - message
93:30 - this is the structure that we are
93:32 - actually going to be using
93:34 - then we are deleting whatever is in
93:37 - uh the input next up uh
93:43 - yeah that's pretty much it and
93:46 - we can and one more thing though which i
93:49 - always forget
93:51 - is uh you need a new table and your
93:54 - monitor is wobbling
93:56 - um i could be right okay that's right
94:00 - uh oh yeah
94:03 - it is oh but actually it's the monitor
94:06 - so uh
94:07 - now let's go ahead and create an uh
94:09 - create
94:10 - and oh my god this is super awesome
94:15 - okay thank you so
94:18 - uh what we will do uh is pretty much
94:22 - just
94:22 - add another um add another
94:26 - api call where we will go ahead
94:29 - and create a new conversation
94:32 - so that will pretty much be like a
94:36 - uh this one so
94:40 - this is going to actually be a longer
94:42 - one so i will just
94:43 - uh add this uh snippet of code
94:47 - i have it ready uh so i i will just
94:50 - drop the snippet of code here for you
94:52 - guys
94:53 - and this is going to be essentially
94:57 - the same uh add chat that we have up
95:00 - here so let's get a
95:02 - get rid of that for now and what this
95:05 - does is literally this actually requires
95:08 - two parameters because otherwise if this
95:10 - would make the whole
95:12 - build super long so we need to have the
95:15 - chat name first
95:16 - then we will get the first message
95:19 - because we need to send the first
95:21 - message
95:22 - uh at the same moment uh because
95:25 - otherwise it would make just the whole
95:27 - build super complicated and once we got
95:30 - both of them we want to go ahead
95:34 - and create a new conversation right
95:38 - chat name chat name perfect and we want
95:42 - to add
95:43 - uh we want to actually store down the
95:46 - the id from the response and at the
95:49 - exact same moment
95:51 - let's actually make it look like this
95:55 - uh and let's
95:58 - actually add a new message
96:01 - right into that exact same uh
96:04 - conversation that we just created
96:06 - otherwise it will go ahead and freak out
96:09 - and some stuff is going to crash but
96:12 - because
96:13 - the we are handling it this way uh is
96:16 - going to make the whole thing uh super
96:18 - easy and smooth okay
96:20 - with that said i think we are ready to
96:23 - test
96:24 - this app out now where it is
96:27 - i first i need to find the app
96:30 - uh i don't even know where we are
96:34 - uh no not not this one i think we are
96:37 - running
96:38 - on localhost 3002 so that's actually
96:41 - [Music]
96:43 - uh maybe 301
96:46 - [Music]
96:48 - okay so we have a couple of uh stuff
96:51 - going on in here
96:53 - and yeah because i have the this part uh
96:56 - which uh saves down the last message uh
97:00 - we need to define all these
97:05 - so uh we need to define all these uh
97:08 - use states which is actually gonna be
97:11 - super fast
97:13 - let's go ahead and add in the last
97:15 - message last photo and last time stem
97:18 - these are um
97:22 - i wonder if there is a react fundamental
97:24 - with you at your channel
97:25 - uh without using zoom yes there is we
97:27 - just dropped it i think
97:28 - last wednesday or something sometime
97:32 - sometime last week it's actually a
97:33 - 12-hour long video
97:36 - going into the nitty-gritty okay i
97:38 - highly recommend
97:39 - everybody goes ahead and watches that
97:42 - okay
97:45 - that's literally our goal that so that
97:47 - we can provide
97:48 - these information for you guys for free
97:51 - pretty much it
97:52 - okay and let's go ahead
97:55 - so with with these states done
97:59 - we can pretty much set everything up and
98:02 - that will
98:03 - actually go ahead and work perfectly now
98:06 - we also okay i forgot to add the bug
98:10 - feature
98:13 - okay so we are actually facing some bugs
98:16 - but we are going to go ahead and debug
98:18 - everything so guys if you're with me
98:19 - we are going to go in and debug stuff
98:21 - because back-end development is just
98:23 - uh with a lot of bugs so
98:26 - uh we got the sun message has already
98:29 - been
98:30 - defined and declared uh yeah so the
98:32 - problem with that
98:34 - is yeah so i i forgot to
98:39 - delete sunny's code on the send message
98:42 - function
98:44 - but this way we should be good on that
98:47 - part
98:47 - and there we go guys we have we debugged
98:51 - every oh
98:52 - i forgot to share my screen oh damn okay
98:56 - so
98:56 - i will go ahead and command z back
98:59 - everything so i
99:00 - undid all the stuff so um
99:03 - this is the code i forgot to delete now
99:05 - i'm going ahead
99:06 - and uh literally select it and delete
99:09 - and
99:10 - with that done we should be able to go
99:13 - back and now it should be working
99:16 - there we go guys we have it working
99:20 - and that's it okay
99:23 - let's set back the colors behind me and
99:27 - [Music]
99:28 - okay sunny is actually not angry
99:33 - [Laughter]
99:36 - okay but yeah
99:40 - we are removing firebase yeah
99:43 - okay so
99:46 - now um there is actually a lovely
99:49 - comment i want to save for myself
99:52 - so uh
99:55 - what i will do is go ahead and sign in
99:57 - here
99:59 - uh vibe with us asks what is my opinion
100:03 - on php
100:06 - hmm
100:09 - okay so first let's answer the question
100:12 - what is my opinion
100:13 - on php no go no way i wouldn't go that
100:16 - that route
100:17 - and the other thing uh which we need to
100:20 - do
100:21 - before this uh
100:24 - before this issue goes away is pretty
100:26 - much just go back to firebase
100:29 - go to authentication and what you guys
100:32 - will need to do
100:34 - is pretty much just hit this set uh
100:36 - setup sign in
100:37 - method and just go ahead uh hit google
100:41 - uh add your email address in there um
100:45 - thank you so much brother from facebook
100:48 - and
100:49 - you want to go ahead and save it and
100:52 - nicely done
100:53 - we should have we should be able to fix
100:56 - this
100:56 - stuff now uh
101:01 - what we will be doing is say let's go
101:04 - ahead
101:04 - sign in and guys we still have
101:08 - 156 people with us
101:11 - let's go guys thank you so much for
101:13 - being here with me
101:15 - and yeah okay now
101:18 - we should be able to log in and
101:21 - yes here we are now oh my god we got the
101:24 - epic cp
101:25 - community inside of here and it's going
101:27 - to freak out because
101:29 - yeah uh the data that we have in here
101:33 - uh is just not compatible so what i'm
101:36 - going to do is delete this whole thing
101:39 - and go back to my app now because we are
101:43 - uh uh because we are
101:47 - using redux uh we are
101:50 - not uh we don't get uh logged out so
101:53 - what i will be doing is add the uh chat
101:56 - name
101:57 - and i will say epic cp community
102:01 - and say uh okay
102:04 - now it wants a welcome message from me
102:07 - so
102:08 - i'll say hey guys whoops hey guys
102:12 - uh fire and okay
102:17 - and nothing happens but
102:21 - this is okay because this is not real
102:23 - time just now
102:24 - so let's go ahead and let's see what do
102:27 - we got in mongodb
102:29 - so let's refresh it actually shows that
102:32 - we have an epic cp
102:33 - uh community here and we
102:36 - also have this message working so
102:40 - there we go guys massive shout out to
102:42 - everybody
102:43 - who is at this point with me and let me
102:46 - know
102:47 - if you are one of them and if you have
102:49 - if you were
102:50 - able to create a
102:53 - create an app which actually is able to
102:57 - save down the new message right
103:00 - let me know guys in the chat if you guys
103:03 - are
103:04 - with me and if you guys are pumped to
103:06 - continue
103:07 - all right let's actually add this effect
103:13 - 300 days ago i would make api requests
103:15 - every one second to make my