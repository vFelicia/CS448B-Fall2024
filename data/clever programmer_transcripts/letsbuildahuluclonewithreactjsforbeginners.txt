00:00 - and today i'm here with your boy sunny
00:02 - how's it going guys
00:03 - super pumped for today's episode how's
00:06 - it going everybody
00:07 - so right now and today you know we
00:10 - decided to pretty much
00:11 - dissect the biggest tech companies out
00:14 - there for you guys
00:15 - and we're showing you guys how to build
00:18 - the
00:18 - actual the front end and even some
00:20 - functionalities too
00:22 - so today we are tackling hulu and due to
00:25 - popular demand
00:26 - you know we're gonna go dive deep into
00:28 - this we already did netflix we did
00:30 - google we did spotify we did amazon
00:33 - now it's time for hulu so sunny came up
00:36 - with this build this guy is a genius so
00:38 - guys
00:38 - you know really follow the code if you
00:40 - can also put it on your portfolio we've
00:42 - seen so many results from this
00:44 - so show us a little bit about you know
00:46 - the whole build study
00:47 - let's do it so today as frankie said
00:49 - guys we're building
00:50 - another big tech company so you can see
00:54 - right here we've got hulu so hulu is a
00:56 - uh frankie so who is an american company
00:58 - so jonah explain quickly what hulu is
01:02 - correct so hulu is the direct competitor
01:04 - of netflix
01:05 - some people you know say they prefer
01:07 - hulu some prefer netflix you know they
01:09 - do
01:10 - have their own perks i feel like even
01:12 - hulu has a bit of channels and things
01:14 - like that but ultimately you know
01:15 - a lot of them have the same movies being
01:18 - shared but hulu has some exclusive shows
01:20 - as well so
01:20 - that's what makes it cool you know it's
01:22 - you can either choose apples or oranges
01:24 - you know netflix is part of culture
01:26 - pretty much netflix and chill
01:27 - but hulu is is great in its own way as
01:30 - well
01:31 - awesome nice so like you said like you
01:33 - heard it guys we've got an amazing
01:35 - music video streaming platform hulu and
01:38 - what we did is we went ahead and built
01:40 - it so you can see we've got a bunch of
01:41 - tech involved here guys
01:43 - we've got the navbar so you see we've
01:45 - got a lovely little nap bar over here
01:47 - with some hover over functionality we've
01:48 - got this nice little animation
01:50 - when you hover over this uh sort of sub
01:52 - nav bars call it
01:54 - and even when you're going over the
01:55 - video feed so you can see everything has
01:56 - this nice
01:57 - dynamic ui to it right a really nice
02:00 - look and feel
02:00 - and the cool thing is this is not stack
02:03 - information guys
02:04 - so one this is live so if you want to go
02:06 - check it out here is the link to go
02:08 - check it out
02:09 - and two if you want to actually go ahead
02:11 - and click one of these so you can click
02:12 - on action for example
02:13 - and you can see this is actually pulling
02:16 - live
02:16 - movie information guys so this is very
02:19 - responsive
02:20 - yeah super responsive as well so good
02:22 - point frankie so let's go ahead and
02:24 - resize this right now and we'll see if
02:26 - we go ahead and chuck it into responsive
02:28 - mode so let's go ahead
02:29 - and do this and now you guys can
02:31 - actually go ahead and see
02:33 - it will only use up the space that it
02:35 - can use so you see this and even the top
02:37 - bar
02:37 - whenever we go to this point for example
02:39 - it becomes scrollable
02:40 - this is super nice super clean and we're
02:42 - using flexbox to go ahead and get this
02:44 - working
02:45 - so if you guys are excited let us know
02:47 - in the chat we can see a few people
02:49 - dropping some positivity now that's
02:50 - awesome
02:51 - love that you guys for being here so
02:53 - kazi was originally meant
02:54 - to be in this call but something
02:56 - happened with his little puppy you know
02:59 - she broke her little nail and she was
03:01 - bleeding a lot so
03:02 - they actually had to go to the emergency
03:04 - room and you know that's why i'm here
03:06 - filling up with this so
03:07 - i'm kind of a very beginner in code so
03:09 - you guys are going to get you know the
03:10 - whole
03:10 - build through some beginner eyes and
03:13 - he's going to lead it all the way just
03:14 - like he does with his magic he's great
03:16 - at teaching so
03:17 - stay tuned thank you guys also i saw
03:19 - somebody said that's not the current
03:21 - huli board
03:21 - yeah so good point we actually are using
03:24 - the
03:25 - uh we're using like a a rebuild design
03:27 - so i found a link where they basically
03:29 - were planning a rebuild of hulu
03:31 - and we're using the new concept design
03:32 - so it's actually a very modern design
03:34 - um so yeah so super interesting stuff
03:37 - let's go ahead and have a look
03:39 - so secluded grace because you guys are
03:41 - awesome i'm pumped and ready that's the
03:42 - kind of energy we want guys
03:43 - we can see everyone getting super
03:45 - excited in this chat this is awesome
03:47 - and guys let's drop frankie a massive
03:50 - massive
03:51 - um they're just dropping a massive
03:53 - praise because frankie
03:54 - jumped in last minute clutch and he just
03:56 - handles it doesn't panic he just came in
03:59 - and he's doing these things this is
04:00 - awesome oh look beast rwa just joined
04:03 - pwj course
04:04 - a few hours ago nice dude
04:07 - that's awesome bro hit us up we'll give
04:10 - you a shout out
04:11 - right now and then also we'll send you a
04:13 - message we'll get into and and
04:15 - we'll link up with you so everybody that
04:17 - joins pwp pwj
04:19 - you know drop it in the comments below
04:21 - also we do have
04:22 - a one hour full training of how to
04:24 - become a javascript developer
04:26 - and we show you exactly how to do that
04:28 - so click the link in the description
04:30 - below the first link and it'll take you
04:31 - to that training
04:32 - nice cause he's in the chat guys there
04:34 - we go
04:35 - see oh yeah he's he's in the car waiting
04:38 - in er
04:39 - because his poor little dog broke the
04:41 - nail and he has to get him to the little
04:43 - the vet so damn it but guys yeah as
04:46 - frankie mentioned
04:47 - we have a free training webinar so
04:50 - make sure you go ahead and check it in
04:51 - the description and it's going to teach
04:53 - you the top three mistakes to avoid when
04:54 - becoming a javascript developer
04:56 - it's completely free go and check it out
05:00 - all right frankie awesome yep it's
05:02 - beautiful guys if you guys want to take
05:04 - a lot of value look at that webinar look
05:06 - at that training
05:06 - and i'm sure you'll get something out of
05:08 - it yes
05:10 - go frank already let's go there he goes
05:12 - let's go sonny and frank love the hilly
05:14 - build
05:15 - hey this is amazing guys this is awesome
05:17 - i just love to have him on the chat
05:19 - thank you frank for being part of the
05:20 - community man you bring tons of value
05:23 - hey let's hop into it or what sonny
05:25 - let's do it so firstly guys
05:27 - you know how we do it we like to sort of
05:28 - draft things out so we know the tech
05:30 - that we're going to cover today right
05:32 - so first thing what we're going to do is
05:34 - just hop over into vs code
05:35 - and right now we're just going to draft
05:37 - up some of the tech that we're covering
05:38 - today so
05:39 - in order to get the functionality we're
05:42 - basically going to talk about
05:44 - so here we're obviously the app is built
05:46 - in react so the entire app is built in
05:48 - react
05:48 - and let me know if you guys can see that
05:50 - but with higher apps react we are
05:52 - actually going to be using material
05:54 - ui right so material ui and that's how
05:57 - we get these beautiful
05:58 - icons over here so all of these icons
06:00 - that you see are
06:01 - material ui and we've it's not a
06:02 - stranger to our builds we use them in
06:04 - pretty much
06:05 - most of the builds and you guys are
06:07 - going to get another use case here
06:08 - today with material ui so let's go ahead
06:11 - and do that we also got we've got a
06:13 - bunch of flexbox so you can see earlier
06:14 - on we showed you guys
06:16 - how it's completely responsive so as it
06:18 - gets smaller the bill is going to get a
06:19 - lot smaller
06:20 - that's going to be super exciting to
06:21 - learn we also have
06:24 - tmdb guys so tmdb is essentially we're
06:27 - going to show you how
06:28 - to make api calls to a movie service
06:32 - let's just call it like a movie service
06:33 - and it's basically like a netflix style
06:36 - movie service so you can pull
06:37 - movie data from it and yeah so that's
06:40 - going to be super
06:40 - exciting to go ahead and do that um
06:44 - and then we've also got a few more
06:46 - things let's go ahead and break it down
06:48 - we've got um so you guys notice how when
06:50 - i click this
06:51 - you see there's like an animation right
06:52 - there right so there's a really nice
06:54 - animation
06:55 - that animation we call that um
06:58 - we actually call that react flip move so
07:01 - i'm going to be showing you guys
07:03 - how we can implement something called
07:04 - react flip move
07:06 - for animations so you get those really
07:09 - nice sort of slick animations because
07:11 - that's just like the icing on the cake
07:12 - once you add that in everything looks
07:14 - super clean and it starts to look like
07:16 - an actual dynamic app
07:17 - right so really really powerful stuff
07:19 - and once we've done all of that we are
07:21 - going to be deploying
07:22 - on firebase right so we're going to be
07:24 - deploying on firebase hosting
07:26 - right frankie do you want to just uh
07:28 - answer a few questions while i quickly
07:30 - just i need to deactivate the sound
07:32 - because i keep getting a little ping
07:33 - right now give me one second yep
07:35 - sounds good by the way man firebase has
07:38 - shown a lot of love to us during these
07:39 - builds drop in the comments below if you
07:42 - guys have implemented
07:43 - firebase in your own builds because it's
07:45 - made these builds
07:46 - so much more easier for us and also it's
07:48 - great to
07:49 - show you guys other ways to host your
07:52 - databases
07:53 - other than you know actual sql databases
07:56 - so
07:56 - it's awesome and like you were
07:58 - mentioning tmdb i i've seen so many
08:00 - people
08:01 - whether they they're doing you know
08:02 - movie lists or
08:04 - builds like the one that we did on on
08:05 - netflix and all of that they always use
08:08 - tmdb and it actually reminds me a lot of
08:10 - the library in imdb so
08:14 - it's pretty much tmdb is the movie
08:16 - database
08:17 - imdb is international movie database
08:20 - so that's where we're pulling all the
08:21 - data and also like sunny said we're
08:23 - going to be using material ui we're
08:25 - going to be using
08:26 - flexbox and i love material ui i believe
08:29 - it's a library right sonny
08:30 - yeah so it's a library library exactly
08:33 - and it just gives you like a bunch of
08:34 - components
08:35 - an icon library which is really powerful
08:37 - we use that in most of the builds uh and
08:40 - yeah so
08:40 - we're going to be using that today
08:43 - awesome yeah i love those icons by the
08:44 - way
08:45 - so that's that's great things about
08:46 - libraries you know sometimes they have
08:48 - great tools for designers slash
08:50 - developers and material ui is one of
08:52 - them
08:53 - yes let's look at what's going on in the
08:55 - chat right now so we're receiving a lot
08:56 - of love
08:58 - yeah we've got we've got some positivity
09:00 - today it's crazy dude
09:01 - yeah man people are loving us more and
09:04 - more yeah oh
09:05 - dude we just we're about to hit 500
09:07 - people live right now holy crap
09:09 - let's go nice thank you so much cp pam
09:12 - we love you guys
09:13 - it's about yep 500 people right now 300
09:16 - likes so make sure to like that
09:18 - like that thumbs up button yeah make
09:20 - sure it turns blue
09:22 - exactly yeah man if you guys are
09:23 - enjoying the content drop some love in
09:24 - the comments
09:25 - so i see right here yogesh sharma says
09:29 - hello brother you are doing great work i
09:31 - love to watch your video
09:32 - if possible then make website using
09:35 - learn that's
09:36 - actually one of the plans that we have
09:38 - moving forward i know sunny has talked a
09:40 - lot
09:40 - a lot about it and he wants to build a
09:42 - bunch of abs using the burns
09:44 - stack just because i know you guys are
09:46 - you know wanting it and you guys are
09:47 - demanding it so
09:48 - you know we're here for you guys and you
09:50 - know that's that's why
09:52 - even today you know i decided to jump in
09:54 - here so
09:55 - things happen in life man you never know
09:56 - what's going to happen but you know you
09:58 - got to be ready to just you know
10:00 - dive in and actually take control of
10:01 - life exactly
10:03 - at least as much as you can exactly so
10:06 - without further ado let's go ahead and
10:07 - jump
10:08 - straight in guys and let us know whoa we
10:10 - just got another donation
10:12 - hey check it out joshua oh wait oh no
10:15 - it's got tagged to the wrong thing there
10:16 - we go joshua thomas thank you so
10:18 - much for that 5. donation that's awesome
10:20 - dude that's a wicked way to start this
10:22 - uh status build thank you very much you
10:24 - so much brother
10:25 - nice so guys first thing we're going to
10:27 - do is we are going to go ahead open up
10:30 - our terminal
10:30 - and we're going to type in make sure
10:32 - you're in the right place so yep we're
10:34 - in a good place here so we're going to
10:35 - do mpx
10:36 - and you if you don't if mpx doesn't work
10:38 - at this point guys you want to do
10:39 - you want to go ahead and go over to node
10:41 - and install mpx uh and install node and
10:44 - then you'll get access to mpx
10:46 - right so mpx create react app
10:49 - and then we're going to basically call
10:50 - it in this case let's just call it hulu
10:52 - youtube clone
10:53 - because i've already got an app called
10:54 - actually in this case let's do just
10:57 - there we go and that will go ahead and
10:59 - it will basically
11:00 - use to create react to app tool built by
11:02 - facebook
11:03 - to go ahead and basically prepare a
11:05 - starter app for us
11:06 - so while we're doing that frankly let's
11:09 - actually go ahead and set up our
11:10 - firebase
11:11 - so gonna talk a little bit about what
11:13 - firebase does frankie
11:15 - awesome yes so firebase is google's
11:17 - solution
11:18 - for making a nosql database right and it
11:20 - makes it super simple for beginners
11:22 - actually to host databases because
11:24 - a lot of times there's so many tools
11:26 - like i myself don't have much experience
11:28 - with databases
11:29 - the only experience i've had is with sql
11:31 - and honestly it's uh
11:32 - it's pretty complicated and it's it does
11:35 - involve
11:36 - you know whole ecosystems but the cool
11:38 - thing about this is that
11:39 - you know you can pretty much use
11:41 - google's tools
11:42 - you are familiar with their ui with how
11:45 - they manage everything
11:46 - and it's a pretty fast solution it's
11:48 - also very intuitive that's that's
11:49 - actually why i love it myself
11:51 - oh [ __ ] cause he just dropped dropped
11:54 - the super chat he goes
11:55 - guys start going let's go love you both
11:57 - let's keep that pace up also what's up
11:58 - cp
11:59 - fam let's go that's nice
12:02 - that's awesome awesome much love brother
12:04 - let's do it
12:05 - so guys carrying on what we're going to
12:07 - do is you want all you need to get
12:09 - started with firebase is a google
12:10 - account
12:11 - so you want to click on go to console
12:13 - and then
12:14 - you all you need to do once you're
12:16 - inside the console is go ahead and click
12:18 - add a project
12:19 - right so click add a project and once
12:21 - you're inside here you want to do hulu
12:23 - hulu clone i've actually already done
12:24 - one because i'm going to call it hulu
12:26 - youtube clone
12:27 - but you can call it hulu clone this bit
12:29 - really doesn't matter guys you want to
12:30 - click continue
12:31 - uh you can enable google analytics or
12:33 - not i'm going to choose to just
12:34 - get rid of it for this one so this is
12:36 - why we need to do this for one
12:38 - reason because we're going to be
12:39 - deploying the app just like this you see
12:41 - like it's going to have its own url in
12:42 - the end
12:43 - and we're going to have everything sort
12:44 - of working in that way so we need
12:46 - we need to set up firebase so that we
12:48 - can do that later on
12:49 - okay so with that said what we also need
12:53 - to do is go ahead
12:54 - over to tmdb right so tmdb
12:58 - and this is the movie database and what
13:00 - we need to do is we need to actually go
13:02 - ahead and get a key
13:03 - from this movie database so i you need
13:06 - to create an account so i've gone ahead
13:07 - and created an account and click login
13:10 - and let's go ahead and oh god i can't
13:12 - remember where the hell this key is but
13:14 - is this free by the way this is yeah
13:16 - this is free
13:18 - this is free so you need to go to
13:20 - settings
13:22 - and then i'm just going to quickly hide
13:24 - this for a second because i just want to
13:26 - double check something
13:27 - but okay so yeah so
13:30 - let's go ahead and do this so one second
13:34 - guys
13:39 - give me so somebody somebody asks how
13:41 - much storage does
13:43 - firebase provide aditya uh how much
13:46 - storage is five bits but
13:47 - so they actually provide quite uh they
13:50 - provide a very generous and
13:52 - that quota of free storage guys so
13:54 - pretty much for what you're going to be
13:55 - using it for you have
13:56 - more than enough um storage on there and
13:59 - it's only when you're sort of scaling to
14:00 - to sort of serious numbers that you're
14:02 - going to have to
14:03 - have to worry about that stuff but guys
14:05 - once you're inside of the tm
14:07 - db uh let's go ahead and go over once
14:09 - you're inside tmdb
14:10 - what you want to do is you're going to
14:11 - click on this over here in the top
14:13 - and you're going to click on the
14:14 - settings and then it will take you to
14:16 - this page right
14:16 - on the bottom left over here you've got
14:18 - api right so you want to go over to api
14:21 - and then if you scroll down you should
14:23 - be able to see api
14:24 - key version 3 auth okay so this key
14:27 - right here
14:28 - and this over here the reason why i mean
14:30 - i don't really know i don't really think
14:31 - it's going to be
14:32 - a huge bummer if ever any if everyone
14:34 - gets access to this key
14:35 - um but the point is that i don't want it
14:37 - to come down in the middle of a live so
14:39 - i'm just going to go and hide it for now
14:40 - but this is what you need to go ahead
14:42 - and do right so you need to go ahead and
14:44 - get this key
14:45 - copy it somewhere safe and we're going
14:46 - to be using that later on right
14:48 - so with that said i'm just going to
14:50 - quickly get out the screen so you need
14:51 - that key so we've got our key we've got
14:53 - firebase setup
14:54 - and we're ready to move so now let's go
14:56 - back to our react app
14:58 - so let's go who's pump people that's it
15:01 - guys look at the comments below if
15:03 - you're pumped
15:04 - that's it we just hit over 500 viewers
15:07 - as well guys so this is awesome let's
15:08 - keep the energy
15:10 - high so now we're gonna do is go into
15:11 - the hulu clone so make sure you're
15:13 - inside the right directory
15:14 - and then what you want to do is go
15:16 - inside of here and you can see you've
15:18 - got a bunch of things here right so what
15:20 - we want to do is we need to get rid of a
15:21 - few things
15:22 - we want to get rid of the app.test.js
15:25 - the uh
15:26 - the logo and the setup test so these
15:28 - three files we're gonna get rid of
15:30 - we just got a super chat thank you so
15:32 - much and that was by docker
15:34 - awesome stuff dude thank you rupees
15:36 - thank you so much docker we appreciate
15:37 - you man thanks for being part of the
15:38 - family
15:40 - amazing go ahead right into this exactly
15:42 - thank you so much dude
15:43 - uh so what i'm gonna do is go ahead and
15:45 - delete these so to actually get the app
15:47 - started you're gonna do npm start
15:48 - that'll spin up the app
15:50 - you should be able to see a sort of
15:52 - spinning react icon if everything went
15:53 - well
15:55 - so we should be able to see that over
15:56 - here now and what will happen is that
15:58 - will pop up in localhost
16:00 - 3000 so that's where any react app goes
16:02 - ahead
16:03 - and starts off right so let's see
16:07 - we should see it spin up now there we go
16:09 - so once you get to this point guys
16:11 - you're in a very good place you've
16:12 - pretty much started your first react app
16:14 - so let's go ahead and do a cleanup
16:16 - process so like i said we're going to
16:18 - delete this one
16:19 - hey we just got another one donation
16:21 - harder
16:22 - pre-damn thank you so much 100 indian
16:24 - rupees we appreciate you guys
16:26 - so so much thank you for all the love
16:28 - massive this gets us pumped guys
16:30 - so this is awesome we'll delete the logo
16:32 - we're going to delete setup tests
16:34 - now you can see the terminal is going to
16:35 - start freaking out because what we're
16:37 - doing is so i'm going to go ahead and
16:39 - hide the terminal right now
16:40 - we want to actually go ahead and get rid
16:42 - of the logo over here because we no
16:44 - longer have that logo file
16:46 - get rid of all of this stuff and just
16:47 - type in here saying
16:49 - uh let's oops let's just say let's build
16:52 - a
16:52 - hulu clone clever programmers
16:57 - nice save it and then what we will be
17:01 - able to see
17:02 - is you get this right so let's build a
17:03 - hulu clone cover programmers
17:05 - and what i'm going to do guys for you
17:06 - guys is i'm going to go ahead and
17:08 - actually make this
17:09 - a bit easier for you guys to see so i'm
17:11 - going to go ahead and hide this
17:13 - let's go ahead and drop this let me
17:16 - close that before it lags up a little
17:17 - bit
17:18 - uh and what i'm going to do is i'm going
17:19 - to pull this over onto the other screen
17:20 - so you guys can actually see as we code
17:23 - as it was another super chat donation
17:25 - from fun with
17:26 - sanchi that's nice thank you so much he
17:29 - says hey sunny happy to see you here
17:31 - we worked in test code together and now
17:33 - we're learning from you here as well
17:35 - from nimish oh my god
17:38 - that's insane dude holy crap i have to
17:42 - take a minute there
17:43 - oh amazing man for all you guys that
17:45 - don't know tesco is pretty much the uk
17:47 - version of walmart and that's where
17:49 - sunny was working
17:50 - before hearing clever programmers so
17:52 - that's amazing man
17:53 - dude that's crazy oh my god
17:57 - wow i also got another super chat from
18:00 - uh thank you so much man 100
18:02 - indian rupees we appreciate you guys so
18:04 - much we're barely about to start this
18:06 - build and we're already at 33
18:07 - donations thank you oh that's it let's
18:10 - go guys that's
18:11 - awesome oh god the guy that's just blown
18:13 - my mind wow like somebody i used to work
18:15 - with just reached out that's insane i
18:17 - love
18:17 - you guys this is so cool right so now
18:20 - what we're going to do is
18:21 - let's go ahead and go to app.css and
18:24 - what you want to do here is i might make
18:25 - this a
18:26 - tad smaller so let's go ahead and do
18:28 - this and boom there we go
18:31 - and then what we're going to do is uh
18:32 - frankie is that still pretty clear
18:34 - yeah i can see that very well very good
18:36 - it looks way better
18:37 - yeah nice so what we're going to do now
18:38 - is we're going to go ahead and delete
18:40 - everything inside
18:41 - app.css and if we save it you see it got
18:43 - rid of some default styles now
18:45 - there's always this default little extra
18:47 - piece of space over here you see that we
18:49 - don't want that
18:49 - so to get rid of that we need to go to
18:51 - index.css and i like to add it here
18:53 - because it just makes a lot of sense
18:54 - adding that rule over
18:56 - here and what we do is margin zero save
18:58 - it and you notice it pops up
19:00 - right so it'll pop up a little bit you
19:02 - wanna make sure you do that
19:04 - um because that will actually give you
19:06 - pretty much a clean slate that any rule
19:08 - that you then go ahead and write or
19:09 - build
19:10 - it's going to go ahead and only apply
19:12 - the styles that you want
19:14 - now with that said guys what we want to
19:16 - do
19:17 - is we want to basically sort of draft
19:19 - out the app right so this app is going
19:21 - to consist of a bunch of components
19:23 - at the top we're going to have a header
19:25 - so we're going to have some kind of
19:27 - header at the top right so it's going to
19:28 - be some kind of header over here
19:31 - and then we're going to go ahead and
19:33 - have a
19:34 - sort of a that sub navigation bar so
19:37 - something over here so it's going to be
19:38 - some kind of navigation bar
19:40 - and then we pretty much have a bunch of
19:42 - results underneath it
19:44 - right so i'll go ahead and i'll show you
19:46 - guys this visually in the actual build
19:47 - so we have the header at the top
19:48 - the navigation bar and then some kind of
19:50 - results so if we look
19:52 - at the actual build
19:55 - oh nice we just got another one clever
19:58 - programmer that's causing sunny can you
20:00 - keep showing final
20:01 - build now and then as well on the right
20:03 - side all good
20:04 - if not some people might not have seen
20:06 - the app yet don't
20:08 - show you guys yeah we'll do that guys um
20:11 - so
20:12 - you can see right here we have this is
20:14 - the actual hulu app that we're building
20:15 - so
20:16 - a lot of people might have joined after
20:18 - when we originally started whoa we just
20:19 - got another five pound chat
20:21 - damn dude insane thank you so much man
20:26 - he says just a request could you please
20:27 - make a react firebase project with admin
20:29 - account with full authentication i'm
20:31 - struggling with that
20:32 - definitely man we'll touch on that you
20:34 - got it dude that's awesome we will
20:35 - definitely do that and make that for you
20:37 - um and we've also got another donation
20:39 - thank you so much thank you
20:40 - damn dude this is insane holy crap so
20:42 - much love yeah thank you so much thank
20:44 - you
20:45 - we really appreciate you man thank you
20:46 - guys so
20:48 - you can see we have the the header at
20:50 - the top so this is the header component
20:52 - that we're going to be building then we
20:54 - have a navigation component so the
20:56 - navigation is going to be this one
20:57 - and it's going to be purely responsible
20:59 - for navigating between the different
21:01 - genres or sections of the app
21:03 - and then we have the results right so we
21:05 - have the results that render out here
21:07 - and then as you can see this results is
21:08 - completely responsive as we showed you
21:10 - before
21:10 - it's a completely responsive set of
21:12 - results and that navigation
21:14 - just to show you in practice guys when
21:16 - you click it those results get updated
21:18 - in a really nice efficient way and it
21:19 - pulls that information from tmdb
21:22 - okay so this is yeah it's really really
21:25 - nice and clean
21:26 - thank you a tool duby for another
21:28 - donation love you guys
21:30 - this is insane thank you guys so much
21:33 - yeah this is so cool
21:34 - so joshua said can you make a robin hood
21:36 - clone yes we have robin hood coming
21:38 - so stay tuned guys what i'm going to do
21:41 - as well frankie i'm going to go ahead
21:42 - and toggle word wrap so that way
21:44 - you guys will never get it off the
21:46 - screen right
21:47 - now so let's go ahead and what i like to
21:50 - do if you haven't seen my builds before
21:52 - well i like to sort of mask things out
21:54 - and frankie and kazia said this is very
21:56 - helpful for a lot of you guys
21:57 - so if you do find it helpful all the
21:59 - houses smash the thumbs up button
22:01 - so here we go that's it just flash this
22:03 - on somewhere
22:06 - so what we're going to do is we have the
22:07 - header component that we spoke about so
22:09 - the thing at the top
22:10 - right we had the navigation component
22:13 - which was that uh sort of sub navigation
22:15 - bar and then we had the results right
22:17 - so i like to do this because it gives
22:19 - you a very clean layout and you can just
22:20 - start building in a very sort of
22:22 - structured way okay so the first thing
22:24 - we're going to do is build this header
22:26 - component over here so let's go ahead
22:27 - and do this
22:29 - and you can see obviously if i do this
22:31 - it's going to say failed to compile
22:32 - because we don't have a header
22:34 - right so let's go ahead and create that
22:36 - file so we're going to do header
22:37 - dot js boom and now
22:40 - i'm going to show you a lovely little
22:42 - trick we just got another donation
22:43 - another donation thank you so much
22:47 - 16 rupees appreciate you thank you so
22:49 - much dude
22:50 - amazing we can't actually see the uh the
22:52 - some of the the gifs and gifts that you
22:54 - guys are posting
22:55 - um notice how i said both because we
22:57 - don't start a war
22:58 - on that gift yeah so here guys if you do
23:01 - rfce
23:03 - and i hit enter you get this lovely
23:05 - little snippet and if you're wondering
23:06 - how we do that
23:07 - then what you need to do is go over here
23:09 - and just download this lovely extension
23:11 - called es7
23:12 - just type in es7 snippets and you'll get
23:14 - this right so just install that and
23:15 - that's how you go ahead
23:17 - and get this functionality if you do
23:19 - rfce enter
23:20 - boom you get that right now we're going
23:22 - to be using something called bem
23:24 - for our naming convention so this is how
23:26 - we name our classes
23:28 - uh if you don't know what bim is check
23:29 - out the builds previously or go ahead
23:31 - and check out bem online
23:32 - but here basically it starts off with
23:34 - just the component name okay so that's
23:36 - bem
23:36 - and then every time we build a component
23:39 - what we're going to do is to speed this
23:40 - up we're basically going to go ahead and
23:42 - create a css file so in this case
23:44 - header.css like this
23:46 - boom save it and we need to create that
23:48 - header.css file so we can
23:50 - actually go ahead and write some css
23:52 - inside of it
23:53 - so there we go our header css file nice
23:56 - now if we go over this closed as far
23:57 - because we don't need it
23:59 - now in here still complaining so you can
24:01 - either import it at the top manually or
24:04 - if you go to the end of the header and
24:05 - you press ctrl spacebar
24:07 - auto import and you get a nice little
24:09 - trick
24:10 - and if you save it now there you go guys
24:12 - so you see
24:13 - it does it stops that sort of freaking
24:15 - out and just to prove that that is the
24:17 - header component rendering if i do h1
24:19 - and say
24:19 - i am a header and save
24:23 - there you can see i am a header so just
24:26 - quick reiteration of what we just did
24:27 - just go ahead remove this
24:29 - we basically just built the header
24:31 - component right so
24:32 - that's pretty much finished guys i'm
24:34 - joking
24:36 - we're not done yet we've got the header
24:38 - component here
24:39 - and that's going to basically we're
24:40 - going to turn this
24:42 - like sort of nasty thing which says i'm
24:44 - a header to
24:46 - this beautiful header over here right
24:48 - we're going to use flexbox and material
24:49 - ui to make it look like that
24:51 - all right now it's a beautiful
24:53 - placeholder makes it very easy for you
24:55 - to know understand that that's the
24:56 - header that you're going to be working
24:57 - in
24:58 - exactly so it's going to be super useful
24:59 - for you guys and once you actually go
25:01 - ahead and create that
25:02 - let's go ahead and uh delete that
25:05 - uh delete says react god how are you
25:08 - yeah thank you dude i'm doing good i'm
25:10 - doing better
25:11 - now because i got frankie here yeah yeah
25:13 - i love doing lives with frankie this is
25:15 - awesome
25:16 - right so now guys what we're going to do
25:18 - for the header
25:20 - let's go ahead and jump in so we've got
25:21 - the header component
25:23 - and the first thing we need is we need a
25:25 - bunch of icons right so what we're going
25:27 - to
25:27 - do at this point is we're going to go
25:28 - ahead and down go to material ui.com
25:32 - and let's go ahead and go to here so you
25:35 - see it says npm
25:36 - install material ui core so what we're
25:39 - going to do
25:39 - is to get this working press command j
25:42 - to pull up the terminal now i like to
25:45 - keep
25:45 - a terminal open and just hit the add
25:48 - button so that way you see it's still
25:49 - got my terminal running
25:51 - but i've got a second terminal over here
25:52 - so that way you don't have to keep
25:53 - stopping everything
25:54 - and then i'm going to paste that so it's
25:56 - npm install material ui
25:58 - core and while that's doing that guys so
26:00 - you can see it's installing
26:01 - what we're going to now do is go over
26:03 - here type in icons
26:04 - like this and then you can see we also
26:08 - need to install this one
26:10 - so you're going to need to install
26:11 - material ui core and the icon set
26:13 - so let's go ahead and do that so let's
26:15 - go back
26:16 - over here as you see once that's done
26:18 - we're going to do install material ui
26:20 - icons like that awesome and then just i
26:23 - love it
26:24 - i love it because it's like you guys are
26:26 - getting to see how sunny starts
26:28 - ads i mean abs just from scratch and
26:31 - really
26:32 - it's a whole journey sometimes you know
26:33 - people skip steps on tutorials so it's
26:35 - great that you guys can
26:36 - are actually able to see this yeah and i
26:39 - think like uh
26:40 - even when sort of we see new people come
26:42 - to the channel like i think that's where
26:44 - they see the most value because they can
26:45 - pretty much start
26:46 - from the beginning and go all the way to
26:48 - the end with us
26:49 - so yeah if you guys are enjoying it then
26:52 - let us know in the comments
26:54 - so awesome so we added the icon set
26:56 - right
26:57 - now something i want to show you guys
26:59 - here you can see you've got a button
27:00 - which says you can search
27:01 - the full list of these icons so let's go
27:03 - ahead and click that
27:05 - and you can see you get to this really
27:06 - nice sort of icon picker
27:08 - now this is where we find our icons guys
27:10 - so if i go ahead and type in search
27:12 - if i click this you can see it gives me
27:14 - the code for the icon
27:15 - and you can pretty much go ahead and
27:17 - just get all of the icons that we need
27:18 - so
27:19 - all of these icons that you guys see
27:20 - over here whether it be the account
27:22 - whether it would be the home
27:23 - this little lightning every little thing
27:25 - for example even the lightning one
27:27 - all i did was i went here and i typed in
27:29 - lightning and i got this one
27:30 - flash on and that's the import to use it
27:33 - and then you just use it as a regular
27:34 - component
27:35 - so throughout the app you're going to
27:36 - see me using a lot of icons this is how
27:39 - we get them
27:39 - okay so now that we cleared that up
27:43 - hey let's go delete thank you dude he
27:46 - just dropped a 50
27:47 - uh rupee super chat thank you so much
27:50 - thank you so much man that's awesome
27:52 - dude thank you
27:54 - appreciate that we're at 650 viewers at
27:58 - the moment this is awesome guys
28:00 - oh hopefully we can reach 1 000. yeah
28:02 - let's get that number up guys
28:04 - let's go and you can get a pre-launch
28:06 - maybe yeah okay another free
28:08 - it's so funny that free lunch that got
28:09 - sent to me the vouchers don't work in
28:12 - the uk
28:13 - oh wow so so one day we're gonna use
28:15 - that for you yeah
28:17 - you can use that awesome nice so now
28:20 - let's go to header.js
28:22 - and what we're gonna do here guys is
28:24 - we're basically gonna go ahead and do
28:26 - two things so
28:27 - uh whenever we do these kind of layouts
28:29 - what i like to say is
28:30 - so imagine over here right what we
28:32 - essentially have is we have like two
28:34 - containers we have one container here
28:37 - and we have essentially another
28:38 - container over here
28:40 - right now if we basically have two
28:43 - containers and oh no
28:44 - it wasn't not freezing one sec if we
28:47 - have two containers like this one over
28:48 - here
28:49 - and this one over here and we do display
28:52 - flex
28:53 - now they're going to be in rows and if
28:54 - we do space between
28:56 - that's how i pretty much push this one
28:58 - all the way over there and i push this
28:59 - one all the way over there
29:01 - right so we need two containers right uh
29:04 - and then inside the left container we're
29:05 - gonna have all the icons inside the
29:06 - right container we'll just pretty much
29:08 - have the image
29:09 - okay so to show you guys how to do that
29:12 - over here what we're going to do is
29:13 - we're going to say div and this is going
29:15 - to have
29:16 - a class name of header icons right so
29:19 - we're going to have a div and it's going
29:20 - to have a class name of header icons
29:21 - over here
29:23 - and what we're going to do now is this
29:25 - is where all the icons are going to go
29:26 - so
29:27 - all icons here like that we can get rid
29:30 - of this i am a header
29:32 - and for the next one we could have a div
29:34 - and an image inside of it
29:35 - but if you think about it on the right
29:37 - all we have is the image so we don't
29:38 - actually need a div we could just use an
29:40 - image
29:40 - right awesome we just got another
29:43 - donation from sizeandyp he says your
29:44 - live streams help me to become good at
29:46 - css thank you guys and keep going
29:48 - nice dude appreciate it so much
29:51 - beautiful man so then the the image on
29:54 - the right is going to be the hulu logo
29:55 - right and then you're going to push it
29:57 - back to the right side of it so that
29:58 - you know it has a little bit of padding
30:00 - and looks good with the whole the
30:02 - other left side of the header right
30:04 - exactly what frankie just said so
30:06 - exactly so pretty much we've got an
30:08 - image tag here and this is a logo just
30:11 - from google so i've just gone to google
30:12 - i've typed in hulu logo and i typed in
30:14 - hulu logo white
30:16 - and i found this one right so let me go
30:18 - ahead and
30:19 - toggle the word wrap let's go ahead and
30:22 - do this
30:22 - so you can see now we pretty much have
30:25 - and you know what let me go ahead and
30:26 - make try and actually change this
30:28 - uh permanently because it's going to do
30:30 - it on different
30:31 - pages it's got enable word wrap on there
30:34 - we go
30:35 - boom nice so now we've got this so you
30:38 - can see we've got the source
30:39 - and it's a white image so you won't
30:41 - actually see this right now but if we go
30:43 - ahead and inspect this
30:45 - and go ahead and make this full screen
30:47 - there's an image here so you guys can
30:48 - see that
30:49 - there is actually an image right here
30:51 - but because it's white you can't
30:52 - actually
30:53 - see it so you see if i go ahead and do
30:55 - that you can see it says hulu
30:57 - right so there is an image there and
30:59 - just don't be fooled because it's white
31:02 - so nice so we have the header icons and
31:04 - then we have the image next to each
31:06 - other
31:07 - so these are two containers and then
31:08 - just to show you guys let's go ahead and
31:10 - pop some icons in there so the first i'm
31:12 - going to go ahead and import
31:14 - a bunch of icons at the top so let me go
31:17 - ahead and pull these
31:18 - in right now so these are a bunch of
31:19 - imports by the way can you
31:22 - zoom a little bit into the code just so
31:23 - we can have a little bit of a bigger
31:25 - view of it
31:26 - yep so let's go ahead and do that now
31:29 - there we go like that awesome yeah nice
31:32 - that's better
31:33 - awesome dude so now what we're going to
31:35 - do is we're going to paste and you can
31:36 - see these are the
31:37 - uh like i said before these are the
31:39 - icons that we spoke about earlier right
31:41 - uh now some people are saying when do
31:43 - all redux come we're not using redux in
31:45 - this build
31:46 - i'm showing you guys how we can actually
31:47 - go ahead and use
31:49 - a sort of a very simple level of sort of
31:52 - using state and props to actually
31:54 - achieve everything we need
31:55 - so my advice to you guys if you're new
31:57 - to development is don't get
31:59 - caught up with always thinking that you
32:01 - need redux or always thinking that you
32:03 - need the context api
32:04 - you can do some crazy builds like this
32:06 - one for example the one that we built
32:08 - here
32:09 - or without the react context api or
32:11 - redox so i'm going to go ahead and show
32:12 - you how you do that today
32:14 - there's a time and place for those
32:16 - things
32:17 - but you don't always need to over
32:18 - complicate a build right so here we have
32:20 - the home icon
32:21 - and to use it let's go ahead and do this
32:24 - let's do home icon save
32:26 - and we should see on the right now we'll
32:27 - get a home icon which should pop in so
32:30 - there we go
32:31 - lovely little home icon if i zoom in a
32:32 - little bit you guys should be able to
32:33 - see that
32:34 - so the home icon we have the flash icon
32:37 - so
32:38 - let's go ahead and grab this one flash
32:42 - icon here
32:43 - and then we've got the live icon so this
32:45 - one over here
32:49 - like that save library icon yeah nice
32:53 - those look awesome man you see like
32:55 - these ones and look how easy that is
32:56 - guys like we've just
32:58 - imported them using material ui it saves
33:00 - us all the headache of going and finding
33:02 - them and it just
33:03 - imports as a component really really
33:06 - nice stuff
33:07 - also i see a lot of people asking about
33:08 - the github repos um this is kind of like
33:11 - a topic that i was going to talk about
33:12 - with a lot of people because
33:14 - oh and we also got another donation
33:15 - thank you so much travel more donations
33:18 - and sumit anglicar thank you so much
33:21 - guys we appreciate you
33:22 - yeah that's awesome guys i'm pumped man
33:25 - yeah this is insane i love that
33:26 - i'm kind of skeptical to give the the
33:28 - github repos because i feel like
33:30 - following along is going to give you a
33:32 - lot more value it doesn't take long for
33:34 - us to go ahead and put this on github
33:35 - but then i just find that people copy
33:37 - rather than actually learn so maybe
33:39 - we'll see how it goes
33:40 - uh if we do put them up on github you
33:42 - guys will see in the description
33:44 - but um yeah in my advice is if you're
33:46 - following this right now
33:47 - just follow it along with us guys like
33:49 - this is completely we're doing this for
33:50 - you guys to learn from it
33:52 - just follow it along and you'll get the
33:53 - most value from it nice
33:55 - at the end of the day it's gonna be
33:56 - practice that's gonna you know ingrain
33:58 - that skill set into you so really do
34:00 - follow along
34:01 - and then up your skills put it on your
34:02 - portfolio guys start seeing the results
34:04 - that's awesome
34:05 - like sonny said check out the
34:06 - description below we'll if we do add the
34:08 - github repository we'll put it there so
34:11 - yeah
34:12 - exactly oh awesome joseph murray just
34:14 - dropped a he says here red bull
34:16 - uh thank you dude and some readable
34:18 - right now
34:19 - i know right awesome
34:22 - so let's go ahead and continue on so we
34:26 - have
34:26 - these icons right now if you notice each
34:29 - one of these icons actually has some
34:30 - text under it so it says verified
34:32 - trending home
34:33 - collection search account right really
34:35 - close so once you hover over them huh
34:37 - you see the actual text
34:39 - yeah and then we have we have one active
34:40 - one here and then we have these ones
34:42 - where it's got like this sort of look
34:43 - and feel to it right
34:45 - so firstly before we actually go ahead
34:47 - and do that let's go actually and clean
34:49 - up this image because
34:50 - i would like to kind of see that image
34:52 - and right now we can't really see it and
34:53 - it's kind of a headache so
34:55 - let's go ahead and go to our header.css
34:57 - file
34:58 - so this one right here and what we're
35:00 - going to do is i'm just going to go
35:02 - ahead and pop my code up so i can see
35:04 - everything
35:05 - nice so inside of header.css
35:08 - i'm going to target the header container
35:10 - so this outer container over here
35:13 - and i'm going to basically go ahead and
35:14 - do color
35:16 - white so i'm going to set all of these
35:18 - to white and that will actually change
35:19 - the color here but before we do that
35:21 - let's go ahead and change this to like
35:22 - let's just change it to red to
35:23 - exaggerate something right so we can see
35:25 - it
35:26 - um and then what i'm going to say
35:28 - display flex
35:29 - right display flex and now you can see
35:31 - all the header
35:32 - sort of elements right so everything uh
35:34 - all these header elements are kind of
35:36 - gone into a column
35:38 - and the reason why is you're thinking
35:39 - hang on but shouldn't it be a row
35:41 - right because no remember like i said
35:43 - this is actually there's an image here
35:44 - so
35:45 - to exaggerate this point i'm going to do
35:47 - background color
35:48 - and let's just make this black for a
35:49 - second all right so back on color of
35:51 - black
35:52 - and if we make that image smaller so
35:55 - just to show you guys because right now
35:56 - there is an image there but it's so big
35:58 - that you can't see it so what i'm going
36:00 - to go ahead and do
36:01 - is go ahead and make that a lot smaller
36:03 - so let's do object fit contain
36:06 - to keep the aspect ratio and let's do a
36:08 - height of 80 pixels
36:09 - so you can see there is a hulu logo
36:12 - there right
36:12 - so let's go ahead and make this half and
36:14 - half like this awesome
36:16 - so you can see now we've got everything
36:18 - um
36:19 - in in this sort of format so it looks
36:21 - very very nice
36:22 - it says sunny's voice is too high uh
36:24 - frankie is my voice too high
36:27 - from my end i feel like it's okay maybe
36:29 - drop down the gain a little bit or the
36:31 - actual
36:32 - just just adjust it a tiny bit there we
36:34 - go
36:35 - right nice so now what we're gonna do
36:39 - is we are going to go to um
36:43 - now we're going to go to we're going to
36:45 - add a padding of 20 pixels so we're not
36:47 - sort of
36:48 - we don't have everything around the
36:49 - outside so if i do that there we go a
36:51 - nice little padding of 20 pixels
36:53 - and then i'm going to do a line items
36:55 - center so everything's aligned centrally
36:57 - on the vertical axis so there you go
36:59 - pulls it down nice and then what we're
37:01 - going to do is justify content space
37:03 - between
37:04 - right this is the magic that actually
37:06 - separates everything so i don't know
37:08 - what happened there so oops we've just
37:09 - got rid of something
37:11 - so let's see what we did there we've got
37:12 - background color black let's go ahead
37:14 - and boom
37:15 - this one right here we've got justify
37:18 - content
37:19 - header overflow x let's do a scroll so
37:23 - if it goes too big
37:24 - where did that go okay so it's kind of
37:26 - gone way over there right now
37:28 - so we need to fix out why that's
37:29 - happening um
37:31 - what i would do to fix this guys is
37:34 - firstly you see like
37:35 - the app right now has some weird width
37:37 - going on right so let's go to app.js
37:39 - let's go to inside of our app.css and
37:42 - remember i change this to a lowercase a
37:44 - so go inside app.css and
37:47 - actually set the width of app
37:51 - to a hundred view it right and this will
37:53 - actually go ahead and fix oh
37:55 - i know why it's because i was zoomed in
37:57 - dude i think
37:58 - was i uh well
38:02 - i don't know i'll figure this out but
38:03 - basically what we're going to do here is
38:05 - the background color
38:06 - right got another super chat by ankit
38:10 - vastava nice can you tell me how to pass
38:12 - data from child comp to
38:14 - parent nice yeah so we we will be doing
38:18 - that
38:18 - definitely today so if you stay tuned on
38:20 - this video
38:21 - and i'll be showing you actually a very
38:23 - powerful way uh that we do that because
38:25 - the actual whole app functions off of
38:27 - that
38:27 - uh parent-to-chart prop passing so
38:30 - that's going to be a really handy thing
38:31 - so stay tuned
38:32 - and you'll be able to find out uh
38:33 - awesome so 100 view width right so let's
38:36 - go ahead and refresh
38:37 - and i don't know why i mean you know
38:40 - what
38:40 - oh it was me i was zoomed in on my
38:44 - on the mac track pad that was like
38:47 - yeah okay that okay guys that was my bad
38:49 - so this is how it actually looks
38:51 - okay that's awesome all right now we're
38:54 - back in
38:55 - you know i was thinking i was like what
38:56 - the hell is going on like yeah now it's
38:58 - starting to look like the build
38:59 - now i can see the header yeah how it's
39:01 - going to form out exactly so now you can
39:03 - see that there's a little bit more of a
39:04 - sort of structure to it right
39:05 - so now and also i saw somebody ask
39:09 - what does this mean this means the in
39:12 - the image tag inside of the header
39:14 - container so the direct
39:15 - child of the header container so that's
39:17 - why we do that so
39:19 - now you can see look that justified
39:20 - content i spoke about it pushes the two
39:23 - containers apart from each other so you
39:24 - get this very nice
39:25 - sort of finishing touch right now what
39:28 - we want is
39:29 - you can see like when we made it a bit
39:31 - smaller
39:32 - so study one question when you add the
39:34 - justify content one does that make it
39:36 - like more responsive in case like you do
39:38 - end up you know making the
39:40 - i see okay yeah you're smaller yeah
39:43 - exactly so if i go ahead and uh
39:45 - also just want to say dot net sean just
39:47 - dropped us 10 euros dude
39:49 - he says thanks for your awesome streams
39:51 - appreciate you did thank you so much
39:53 - brother yeah thank you
39:55 - yeah that's awesome right so let's go
39:57 - ahead and check this so now
39:59 - you see guys justify content space
40:01 - between if we actually go ahead and see
40:04 - like if i go and resize this now it's
40:06 - not very responsive right like i mean
40:08 - that's not
40:08 - very nice to look at but if i go ahead
40:11 - and add justified content space between
40:13 - boom look at that the hulu logo is
40:15 - beautiful yeah with one line of code
40:17 - guys
40:18 - wow that is insane also we just crossed
40:21 - the 700
40:22 - watching now mark so 700 people in this
40:25 - live stream
40:25 - thank you guys so much we appreciate
40:27 - that thank you so much to tasha as well
40:30 - he just dropped another donation
40:31 - appreciate that dude and guys
40:33 - if you're enjoying the video all we ask
40:35 - is that what do they have to do frankie
40:37 - man if you guys are enjoying this
40:38 - content you're enjoying this video
40:40 - please
40:40 - smash that like button because it's
40:43 - going to help us
40:44 - share it with so many other people just
40:45 - like you that want to learn this
40:47 - skill set how to build these apps and
40:49 - right now hulu so drop
40:51 - drop something in the comments below
40:52 - drop some of that love and also smash
40:54 - that like button and even the subscribe
40:55 - button
40:56 - exactly and guys if you are enjoying
40:58 - this pull out your phones shoot an
40:59 - instagram story and
41:00 - hit me in uh and tag me and um frank
41:04 - frankie's instagram handle's over here
41:06 - so i'm just pointing at them now
41:07 - uh yeah so make sure you go ahead and do
41:09 - that and then we can have a chat
41:11 - and we can see you guys and see who's
41:12 - watching awesome so let's get back to it
41:15 - so let's change the color of those uh
41:18 - icons to white
41:19 - so it starts to look a bit more nicer
41:20 - we're not going to keep this as a black
41:22 - background but
41:23 - it's just purely for the visibility so
41:25 - we can actually go ahead and see what's
41:26 - going on
41:27 - um nice so now what we're going to do is
41:31 - let's go ahead and style those icons
41:34 - right so let's go ahead and start those
41:35 - icons so
41:36 - what i'm going to do now is i'm going to
41:37 - go ahead to those icons
41:39 - and i'm going to so remember those icons
41:41 - are inside of a container div
41:43 - here right so we're going to do is we're
41:45 - going to go ahead and do header icons
41:47 - i'm doing display flex i'm saying align
41:49 - the item centrally and text align
41:51 - center this is important for later right
41:54 - so this is going to be important for
41:55 - later
41:55 - and it'll make a lot of sense as to why
41:57 - we do that but for now
41:59 - what i want to do is i actually want to
42:01 - basically go ahead and remember in this
42:03 - in the actual build we had the text
42:05 - underneath right
42:06 - so in order to get that working what we
42:08 - need to do is we need to actually go
42:10 - ahead and go over to
42:11 - the the header and what we need to do
42:15 - is actually wrap all of these icons
42:18 - inside of so for example this is the
42:21 - stat this is how we've done it at the
42:22 - moment but what we want to do
42:24 - is actually go ahead and wrap each icon
42:26 - in a div
42:27 - we're going to call this one header
42:29 - underscore icon like that
42:31 - and then i'm going to pop the icon
42:33 - inside of there save it so you can see
42:35 - now
42:35 - we've got the icon inside right and then
42:38 - we're going to add a p
42:39 - tag right so a p tag and this is going
42:41 - to say home for example
42:43 - and if i save this now you can see that
42:45 - it says home
42:47 - right so you see it says home now we're
42:49 - going to do that to all of them
42:51 - right so i'm going to go ahead and
42:52 - rather than sort of doing that same step
42:54 - i've got a snippet here that i'm going
42:55 - to go ahead and
42:56 - pop in so i'm basically going to replace
42:58 - all of these with
43:00 - like we said guys wrap it in a div with
43:02 - a class name a header icon
43:03 - a p tag with some context behind it so
43:06 - you can see we've got trending
43:07 - verified collection search and account
43:11 - all right so wrapping each individual
43:14 - one in dips make it makes it so that it
43:16 - becomes more flexible right so you can
43:17 - do more things with the actual image
43:18 - itself if you want to give it space or
43:20 - you know if you're adding more
43:21 - components to that header right so
43:23 - the reason why i actually put them in
43:25 - divs is because we wanted it so that
43:28 - they uh sort of you see like right now
43:30 - all of these
43:31 - essentially if we look at this uh you've
43:34 - basically got a container here so this
43:36 - that's the header icon that's a header
43:38 - icon
43:39 - that's a header icon right and you see
43:42 - each child in there so we've got the
43:43 - text we've got the trending
43:45 - the home the verified and then you've
43:47 - got the icon right
43:48 - because it's in its own container
43:50 - they're something that we call
43:51 - display inline so right now it's doing
43:53 - something called display
43:54 - inline in that small container right so
43:57 - this small container this one right here
44:00 - is doing display inline so this right
44:03 - here
44:04 - yeah and what we can do is we can change
44:05 - this from display inline to display flex
44:07 - and then we could do things like justify
44:08 - content center
44:09 - and that will keep everything center
44:12 - centered which is why
44:13 - even when we change the sizing over here
44:16 - you see that even when things are spread
44:17 - out
44:18 - that box everything stays central
44:20 - essential within its
44:22 - sort of container you see that right
44:24 - beautiful
44:26 - i see so what we're going to do now is
44:28 - we have the header icon
44:30 - and in order to basically go ahead and
44:33 - space them out a little bit more right
44:36 - what we're going to do is we're going to
44:37 - target those header icons so let's go
44:38 - back here
44:39 - and let's just do the following so we're
44:40 - going to say header icon
44:42 - and here we do if i do display
44:46 - flex on the header icon you see
44:47 - everything goes into a row
44:49 - right amazing so so that's handy but
44:52 - it's not
44:53 - exactly what we want to do flex
44:54 - direction column
44:56 - like this and then you can see it all
44:57 - goes underneath right
44:59 - and then if i do width of 100 pixels
45:04 - then you see everything sort of gets
45:05 - somewhat spaced out
45:07 - and then if i do margin right of
45:10 - 30 pixels everything gets a little bit
45:13 - more split but you know actually for
45:14 - this one
45:15 - let's go ahead and actually not do that
45:17 - let's go ahead and actually fix
45:19 - the reason as to why these aren't
45:21 - centered at the top of everything right
45:23 - so you see everything's not centered
45:24 - correctly at the top and also guys
45:26 - when i hover over it look i still get
45:27 - this annoying like
45:29 - pointer right i actually want to see a
45:32 - sort of hovering effect so
45:34 - if we do this cursor pointer now you can
45:36 - see when i hover over it i get like a
45:38 - nice sort of uh my cursor changes
45:40 - to that pointer that adds a lot to the
45:44 - build actually
45:45 - you know sometimes people do ignore that
45:47 - and it just gives it a whole other
45:48 - experience once your
45:50 - your cursor changes once you're on top
45:51 - of or hovering on top of those buttons
45:53 - it makes it it gives kind of like
45:55 - subconscious directions to the people to
45:57 - click on them
45:58 - exactly exactly it's all about those
46:00 - sort of things guys
46:01 - massive thank you to almond jane he says
46:03 - thanks sunny frankie nars and qazi
46:05 - your videos are my favorite past time
46:06 - now cheers guys much appreciated and
46:08 - please don't put codes on get
46:09 - let people watch you and get the value i
46:11 - personally feel the same way dude
46:13 - so it's still in it we're still making
46:14 - that decision but um
46:16 - we'll keep you guys tuned with what we
46:17 - decide thank you so much man i'm on i
46:20 - appreciate you man much love
46:22 - thank you dude so now what we're gonna
46:24 - do is to target
46:26 - the icons right so to target these icons
46:28 - that we see inside of here
46:29 - right now rather than giving them more
46:31 - class name material ui
46:33 - gives it a class name by default right
46:34 - so what we can do is we can actually go
46:36 - ahead and say
46:37 - we say header icon and then we can say
46:40 - the direct child which is
46:43 - this material ui svg icon root so the
46:45 - where
46:46 - am i getting that from if i go to
46:47 - inspect if i go over here and i
46:49 - basically grab
46:50 - this you can see over here on the right
46:53 - let me go ahead and pull this over here
46:55 - you see it says material ui icon so i'll
46:57 - actually make that very big
46:58 - you actually see the class name like
47:00 - material ui gives it is material ui svg
47:02 - icon root
47:03 - so we're saying inside of our header
47:04 - icon container just go and grab that
47:06 - right so that's how we get that um and
47:10 - then what i'm going to say is i'm going
47:11 - to say
47:11 - so there's a trick if you do margin left
47:13 - margin right
47:14 - auto what you'll see now is it will
47:18 - actually go ahead
47:19 - and center everything because it
47:21 - basically gives it
47:22 - a max width as in as much sort of uh
47:26 - margin on the right and there's much
47:27 - margin on the left and that actually
47:28 - naturally centers something
47:30 - so that's how with the icons you can see
47:31 - they're getting centered right now right
47:33 - so that's awesome we're going to make it
47:36 - a little bit of a different size
47:38 - we're going to say font size 30 pixels
47:40 - and it just adds a little bit more
47:41 - beefiness to it
47:42 - we're also going to go ahead and do the
47:45 - following so now
47:46 - by default i don't want this text to
47:49 - show right
47:50 - i don't want the trending the verified
47:52 - the collection search account
47:53 - i don't actually want that to show so
47:55 - how do we hide that by default right so
47:57 - what we're going to do is we're going to
47:58 - target the p
47:59 - so i'm going to say inside the header
48:00 - icon target the p the p tag so
48:03 - we do that with this we say header icon
48:05 - target the p
48:06 - tag and what you can do is firstly
48:09 - i want that to be uppercase so let's
48:11 - actually make it look a bit nicer first
48:12 - so i want to be uppercase like this
48:14 - so to do that we do text transform
48:18 - text transform uppercase oops text
48:20 - transform
48:21 - uppercase like this save it boom
48:23 - everything goes uppercase right
48:25 - letter spacing so that's how you see
48:27 - right now our letters are very closely
48:28 - spaced but these ones are a bit more
48:29 - apart
48:30 - to get that you do let us spacing three
48:32 - pixels and you can see everything
48:34 - looks a bit more sort of beefed out
48:35 - don't worry that they're all overlapping
48:37 - we'll fix that in a sec as well
48:39 - so now i'm gonna do is i'm gonna say
48:42 - font size small margin left margin right
48:44 - of auto so let's go ahead and do this
48:47 - and that actually goes ahead and centers
48:48 - everything and it makes the font size
48:50 - smaller it's fine that they're
48:51 - overlapping for now i'll show you why
48:53 - because what we're going to do is we're
48:53 - going to say display none right so
48:56 - display none which actually hides
48:57 - everything
48:58 - and you're probably wondering well
49:00 - what's the point of making it look nice
49:01 - if we're hiding it
49:02 - um and the reason why we do that guys is
49:06 - because we actually add this magic line
49:07 - over here so we say
49:09 - when we hover over the header icon to
49:12 - that container
49:13 - so when we hover over that target the p
49:15 - tag inside
49:17 - and then we're going to say change the
49:19 - display rule for that one that you're
49:20 - hovering over
49:21 - let's do inline so let's go ahead and do
49:24 - that now you can see look at that
49:27 - beautiful man whoa so when you say
49:29 - display
49:30 - inline that's showing what specifically
49:33 - so the the p tag of the
49:36 - the icons themselves or what yeah so the
49:39 - the display inline is saying basically
49:41 - by default whenever you
49:43 - uh have a container so if you have a div
49:45 - right so if you have like
49:46 - any sort of div uh so let's say this is
49:49 - a div
49:50 - by default if i put like an element
49:51 - inside of it so if i put one element
49:53 - here
49:54 - another element in by default it
49:56 - basically goes in it's called display
49:57 - block or i think it's display inline so
49:59 - basically they just stack up
50:01 - so you basically just stack things up on
50:02 - top of each other which is why
50:04 - you see that by default you get the text
50:06 - come up here and then you've got the
50:07 - icon over here
50:08 - right so what we're saying is make the p
50:11 - tag
50:12 - always hide itself right so always hide
50:14 - itself which is why we don't see any of
50:16 - the p tags right
50:17 - but when we hover over it show the p
50:20 - tag but in the form of display inline
50:23 - which means it will drop that p
50:24 - tag here right and then you see the p
50:27 - tag
50:28 - and which is why when i hover over it
50:29 - now you can see that
50:32 - yeah very amazing so yeah very nice and
50:34 - bounces a little bit
50:35 - yeah you get a very nice sort of like
50:37 - slick effect there right
50:39 - so that's really cool really clean and
50:41 - you can see it's the same that we got
50:42 - over here
50:43 - so now you can see on the left on our
50:45 - actual build we've got this right here
50:47 - which is
50:47 - it's always got home active which is
50:49 - because it's like home is selected
50:51 - right now okay so how do we give
50:53 - something a selected sort of state
50:56 - right and what i will show you is bem
50:58 - actually have a very good way of doing
50:59 - this
51:00 - uh and what we'll do is i'll show you
51:02 - how we will write this
51:05 - so let's go ahead and make this smaller
51:06 - for now so you can see here
51:08 - if we do so in bem convention what you
51:11 - usually say is
51:12 - we say for the selected ones you can do
51:14 - header icon and then usually have
51:16 - something called a modifier
51:18 - so it's dash dash and then in this case
51:20 - we're going to say active
51:21 - right so this one would be considered
51:23 - the active one and then what we can do
51:25 - is
51:25 - if we go on to over here and i'd
51:27 - basically do this i say
51:30 - target the header icon which is active
51:33 - and what we can end up saying
51:34 - is always basically show that one as
51:38 - display inline
51:39 - so always show that one is display
51:41 - inline now what this will do is
51:43 - you see by default it will actually go
51:45 - ahead and it will snap in there so if we
51:47 - go ahead and save this
51:48 - header icon active
51:51 - oh oops it's because it has to be after
51:53 - this row so
51:54 - oh sorry no we have to do display inline
51:56 - but i'm going to make it dash
51:57 - import oops while we're done let's play
51:59 - inline but i'm going to make this one
52:00 - dash
52:01 - important because we want this one to be
52:03 - basically saying this does not get
52:04 - overwritten by any
52:05 - any other rule that's why it's always
52:08 - showing
52:09 - yeah and you can see it kind of jumped
52:10 - underneath there which is strange right
52:12 - it doesn't look great
52:13 - um so i actually changed this because
52:17 - we should be using this inline flex for
52:19 - this one right so inline flex for the
52:21 - active one and even here
52:23 - this actually keep to a better
52:24 - convention use inline flex
52:26 - and what that will do is it actually
52:28 - sticks to some of the rules that we've
52:29 - added in before
52:30 - so now you can see if i go ahead and
52:32 - save it
52:34 - um just double check something
52:37 - header icon active
52:42 - let's go ahead and check header icon
52:44 - header connective there we go
52:46 - home icon
52:49 - p tag inline flex there we go p
52:52 - tag inline flex header oh okay um
52:57 - it's because i need to do this sorry i'm
52:59 - not targeting this one i'm saying
53:01 - target the p tag inside of that yeah
53:03 - there we go that's why i wasn't showing
53:04 - up
53:05 - there we go so now you guys can see we
53:08 - have a lovely looking
53:10 - responsive bar at the top right so
53:13 - now it's permanently showing what i like
53:15 - about it too is like now that you see
53:17 - that home is showing
53:18 - then intuitively if you hover over you
53:20 - can kind of tell that the other
53:22 - titles will appear yeah it's giving you
53:24 - direction for that in my opinion
53:26 - exactly so this is all about like being
53:28 - a good front-end developer guys it's all
53:30 - those little sort of
53:30 - uh traits which is telling you that this
53:33 - is clickable this is
53:34 - like some this is where i'm gonna go if
53:36 - i click this and so forth
53:37 - and this is active right now right so
53:39 - that's all sort of the subtle things
53:41 - which make you
53:42 - sort of a better front end developer now
53:43 - notice that there's a scroll bar here
53:46 - right there's a scroll so if i make this
53:47 - super small you can scroll
53:49 - so that's pretty good but we don't want
53:51 - to actually show the scroll bar right so
53:53 - in some cases
53:54 - i mean look here we don't actually show
53:55 - the scroll bar because we want that
53:56 - clean ui
53:58 - so even here if i make it smaller
53:59 - everything's scrollable but we don't
54:01 - actually show the scroll bar
54:02 - to hide that it's very simple what we do
54:05 - is we add the following trick
54:06 - right we go ahead and go to
54:10 - look so juicy when once you take it out
54:12 - it looks so juicy
54:14 - yeah it's clean right so like what we
54:16 - can do is we add this snippet right so i
54:18 - actually get this from w3schools i use
54:20 - it all the time the same snippet
54:22 - basically you say header colon colon
54:24 - webkit scroll bar
54:26 - display none and that gets rid of it for
54:28 - chrome safari and oprah
54:30 - and if you do header and you add these
54:34 - two so ms overflow style and scroll with
54:36 - scroll bar with none that will go ahead
54:38 - and fix it for internet explorer edge
54:40 - and firefox
54:41 - right so these are this is how you
54:43 - remove a scroll bar but
54:44 - keep the functionality right and how you
54:47 - make it very compatible with all the
54:48 - major browsers as well
54:50 - that's awesome dude i didn't know that
54:51 - exactly because remember you need to
54:53 - like try and account for everyone when
54:55 - you're doing this stuff so it's going to
54:56 - be really important to go ahead and do
54:58 - that
54:58 - so now what we're going to do is go back
55:01 - to
55:02 - the header.js and we actually can we're
55:04 - at we're at 69
55:06 - chat revenue donations let's go down
55:10 - thank you guys that's insane holy crap
55:13 - love that
55:14 - and we just got another donation by sonu
55:15 - kumar thank you so much man hello
55:17 - brothers i love all streaming videos
55:19 - thank you man much love to you
55:20 - oh did we uh mike i can't actually see
55:24 - my
55:24 - um i think my my chats frozen in let me
55:27 - quickly reload my chat one second guys
55:30 - so comment maybe it hasn't refreshed
55:32 - yeah i feel like
55:33 - because sometimes it does that if you do
55:35 - so connie g asks when is the airbnb live
55:37 - stream coming up so that one is going to
55:39 - come tomorrow and that one
55:41 - cause he's going to be here with you
55:42 - guys so you can get all you guys pumped
55:44 - i know you missed them you guys been
55:45 - dropping it on the chat
55:46 - and whoa another another five
55:50 - euro donation damn that's crazy
55:53 - thank you so much man it says great
55:55 - streams also why are you guys choosing
55:56 - to use firefox with css instead of using
55:59 - grid
55:59 - systems in material ui
56:02 - uh wait say that again sorry what was
56:04 - that why are we using
56:06 - he says yeah why are you using flexbox
56:08 - with css instead of using the grid
56:09 - system in
56:10 - material ui good question dude so
56:14 - actually we are using the
56:17 - uh we are using flexbox because it's
56:19 - just flexboxes
56:20 - i mean like guys why the way i would say
56:22 - is use flexbot learn flexbox because you
56:25 - can
56:25 - i built some seriously complicated
56:27 - layouts with just flexbox alone
56:30 - and then what you can do is move over to
56:32 - uh something more sort of sophisticated
56:33 - like css grid if you need it
56:36 - but remember like i said guys don't over
56:37 - complicate your builds keep them simple
56:39 - like
56:40 - there's no sort of you're not gonna get
56:42 - a reward by over complicating the
56:44 - the build instead you're actually going
56:46 - to get sort of looked at badly because
56:48 - the developer who can build something
56:50 - extremely simply and go ahead and um
56:54 - and make it work and sort of which is
56:55 - very easy to maintain
56:57 - that's going to be the developer that is
56:58 - more likely to get the job as opposed to
57:00 - someone who just over engineers over
57:01 - complicates the build
57:03 - right um awesome so now i've actually
57:06 - pulled up the actual youtube
57:07 - comments because for some reason i can't
57:09 - pin them anymore on the screen
57:11 - um nice okay so let's carry on guys so
57:14 - with that said
57:15 - we were now looking at so we've got this
57:17 - bit at the top done right
57:19 - now for the background color it's ugly
57:21 - as black so i don't want to go ahead and
57:23 - do that so i'm going to basically
57:24 - comment this out in a second so it's
57:26 - going to go back to white if i comment
57:27 - it out you guys can see you won't be
57:28 - able to see anything which is why i
57:30 - haven't
57:30 - but inside of app what i'm going to do
57:33 - is i'm going to make the entire
57:34 - background of the app
57:35 - what they have on hulu and that is this
57:38 - right here so
57:39 - if you do a background image and you do
57:41 - a linear gradient
57:42 - gradient sorry and what we're saying
57:44 - here is we're saying
57:46 - go from basically left to right
57:49 - and we've got like a very dark sort of
57:51 - black color here and we've got like a
57:53 - very sort of subtle green
57:54 - right so if i save this now you can see
57:58 - if i save this and then what i need to
58:00 - do is i also need to go back to header
58:02 - and get rid of that background color and
58:04 - you can see now we get that nice little
58:07 - wow right gradient type of thing yeah
58:10 - yeah and you can see like you see that
58:11 - we get it there and we get it there
58:14 - very very clean all right so now
58:17 - the app is just pretty much that's the
58:19 - background color yeah and this is
58:20 - awesome because look you can see the app
58:22 - start starting to come together
58:24 - right so with that said we
58:27 - just actually went ahead and finished
58:29 - the header section so
58:31 - i think that deserves a little let's go
58:39 - there we go nice guys so we just done
58:42 - the header section
58:43 - right there and next part is the nab bar
58:46 - right so the nav bar section
58:48 - of the build so let's go ahead and
58:51 - continue here so we can go ahead and do
58:53 - nav oops enough
58:55 - like this and let's go ahead and create
58:58 - that file so command b is a shortcut to
59:00 - pull that up
59:00 - in case you didn't know that and what
59:02 - you can do is create a nav dot js
59:04 - over there boom and what we do is rfce
59:08 - create that let's go ahead and create a
59:10 - class name
59:11 - and give it nav because we're going to
59:13 - stick to our bim naming convention
59:15 - i'm going to go ahead and import nav.css
59:18 - like that
59:19 - and remember because we're importing a
59:21 - nav.css we need to go ahead and create
59:23 - that file so nav.css like this
59:26 - and now you can see we've got what we
59:29 - need
59:29 - right so it's still complaining because
59:31 - remember we pulled it in here but we
59:32 - need to
59:33 - go ahead and import it there like so
59:36 - so now we import it to prove that it's
59:38 - working here we can say h1 and i can say
59:40 - i
59:41 - am the navbar like this right so there
59:44 - you can see i am the nut
59:45 - pops in all right so this is awesome
59:48 - um so somebody says do you recommend
59:50 - using z index don't only use the zen
59:52 - zed index when you need to guys like
59:54 - again don't over complicate your build
59:56 - unless you actually need to do that um
59:59 - so we have i am in that bar
60:01 - so i'm going to do now is we need to
60:04 - actually go ahead and
60:05 - for the nav bar guys we're going to keep
60:07 - it very simple to begin with
60:08 - right we're going to keep it super
60:10 - simple we're just going to have a bunch
60:12 - of h2 elements right so and they're
60:14 - basically going to say
60:16 - the different options so one's going to
60:17 - say trending another one's going to say
60:19 - top rated
60:22 - right another one's going to say let's
60:25 - go ahead and do this
60:26 - oh now they're coming back again man i
60:28 - don't know what ecam does sometimes
60:31 - yeah we love ecam yeah vinoth vino says
60:35 - today sunny is very handsome thank you
60:37 - dude
60:40 - like always let's go thank you
60:43 - there we go we change this to action
60:45 - there we go nice
60:47 - and here i'm going to change this to
60:48 - comedy like so
60:51 - comedy and for example and then you'll
60:53 - see that we've got those things
60:54 - basically popping up here right so
60:57 - comedy and then i'm just going to chuck
60:59 - a few more in so i'm actually going to
61:01 - fill these out right now so we can we
61:02 - don't actually have to repeat this step
61:04 - later
61:04 - so we've got comedy comedy comedy so
61:06 - we've got a few more sections here we've
61:08 - got horror we've got romance we've got
61:09 - horror
61:11 - we've got romance so sunny i know that
61:13 - right now we're adding the daft bar
61:14 - functionality and and everything so
61:16 - the one that we just finished is the
61:19 - header like you were saying
61:20 - yeah but then what is the difference
61:21 - between you know the the
61:23 - menu on top and then the actual navbar
61:25 - would that be considered like maybe
61:26 - another napkin the first one
61:28 - yeah so good very very good question
61:30 - actually so i think a lot of people
61:32 - might have got confused with that
61:33 - so the top right here guys is actually
61:36 - sort of the navbar right so that's
61:38 - actually what you would typically
61:39 - consider in that bar but in this case
61:41 - when we didn't make this this top now
61:43 - bar functional which is why i didn't
61:44 - call it in that bar for
61:46 - for the demo purposes right so i'm
61:48 - referring to this one as the navbar
61:50 - because i'm basically referring to
61:51 - functionally make this do some stuff
61:53 - right so as i click this it actually
61:54 - does some stuff here
61:55 - um but this this how you can actually
61:57 - navigate through the whole app
61:59 - yeah so that's why i decided to call it
62:01 - in that bar in this case right
62:03 - um but this one right here we're calling
62:06 - it sort of the
62:07 - uh that yeah this one right here is nav
62:09 - and then that one's just header
62:10 - because it's more of a a sort of um
62:15 - presentational component as opposed to a
62:17 - functional it does something component
62:19 - yeah
62:20 - right so with that said we've got us our
62:23 - sort of stuff right here
62:25 - so let's go ahead and style this so it
62:26 - looks a bit nice so let's go ahead and
62:28 - go to nav.css
62:30 - so let me open up my nav.css and
62:33 - remember we are inside
62:34 - of the uh nav container so this nav
62:38 - container right here
62:39 - so now we're going to say it's going to
62:40 - say inside nav like this
62:42 - we're going to say display flex i'm also
62:45 - going to change the color to white so i
62:46 - can start seeing everything so display
62:48 - flex
62:49 - automatically pushed everything into a
62:50 - row the color white
62:52 - made it so that it the the text was
62:54 - obviously white
62:56 - and then if i do overflow x scroll
62:59 - this is basically going to add a scroll
63:00 - bar to the things which are going off
63:02 - the screen so you see now i've got
63:04 - some scroll functionality which is
63:06 - really nice
63:08 - somebody said which editor editor are
63:09 - you using this is called vs
63:12 - vs code guys i'm using the insider's
63:14 - edition i'd recommend you use
63:16 - the normal edition and that will be more
63:18 - than sufficient for what you need to do
63:20 - visual studio code by microsoft for you
63:22 - guys
63:23 - yeah exactly
63:27 - nice so awesome uh what we're going to
63:29 - do now is we're also going to add a
63:31 - padding
63:32 - so i'm going to say padding of 10 pixels
63:34 - so here
63:35 - padding all around of 10 pixels like
63:37 - that
63:38 - and you can see that adds a little bit
63:39 - of padding around it and then i'm going
63:41 - to say padding left
63:42 - because i don't want it to touch the
63:43 - left side i'll say padding left to 40
63:45 - pixels and that will actually push it
63:46 - away a little bit more
63:47 - from the left side right now remember we
63:50 - talked about that trick before
63:52 - how you hide the nav bars so to hide it
63:54 - you can see you do dotnav.nav
63:56 - and then here this is again the same
63:58 - trick that we used before so for chrome
64:00 - safari and oprah you do this one
64:02 - and for uh internet explorer edge and
64:05 - firefox you just do this
64:06 - so you guys can go ahead and copy that
64:08 - and that will actually go ahead and hide
64:09 - the number so you see it keeps the
64:10 - functionality
64:12 - better hides in that bar awesome so next
64:15 - is we're going to target those h2s right
64:18 - so you see here in nav.js we've got
64:19 - these h2 elements inside here
64:21 - what we're going to do is we're going to
64:22 - go ahead and say dot nav
64:25 - target the child h2 elements and let's
64:27 - change firstly let's change them to a
64:28 - cursor pointer
64:29 - so now when i hover over it we get that
64:31 - nice little pointer which is much nicer
64:34 - right because as frankie said like those
64:35 - little elements guys are what basically
64:38 - makes makes it makes a website usable
64:41 - right
64:41 - it's like it makes a website actually
64:42 - usable it adds experience to it right it
64:45 - adds
64:46 - depth to it i is this when maybe from ui
64:49 - you start becoming a little bit more of
64:51 - a ux
64:51 - developer kind of giving the user an
64:53 - experience as well as you know when
64:55 - they're using your actual app
64:56 - exactly honestly and it's very true like
64:59 - especially if you're doing front-end
65:00 - development guys
65:01 - you are pretty much going to be um
65:04 - very very heavily involved with like
65:06 - design elements and things like that
65:08 - i think uh cause he said frankie where
65:10 - are we at in super chat
65:11 - so we're in 76 in super chat as of now
65:15 - guys
65:16 - wow we're almost about to cross the 100
65:18 - mark so that's gonna be
65:20 - amazing thank you guys so much i'm so
65:22 - surprised man
65:23 - each live stream we're just you know
65:25 - hitting it off the park it's insane
65:27 - that's awesome guys and if you guys
65:29 - didn't know already tomorrow
65:31 - we are gonna go ahead and actually build
65:34 - airbnb clones so like
65:36 - if you guys are excited about that we
65:37 - are going to be dropping that tomorrow
65:39 - so
65:39 - drop a thumbs up if you're excited for
65:41 - that and let us know in the comments
65:42 - what you guys want to see next in terms
65:44 - of a build right we've got facebook
65:46 - coming on thursday as well so
65:47 - full week of content for you guys so
65:51 - fun stuff coming so now massive
65:53 - companies that we're building here guys
65:55 - yeah massive companies guys imagine you
65:57 - add all of these to your portfolio
66:00 - that's a crisp portfolio dude that's a
66:02 - nice one yeah
66:04 - nice so now what we're going to do is
66:06 - we're going to add a margin
66:07 - left and a margin right of 30 pixels so
66:09 - let's go ahead and drop that in and i'm
66:11 - going to change the font weight to 500.
66:13 - so we do that you can see now it spaces
66:15 - things out a little bit more
66:16 - and let's also go and do something here
66:19 - so
66:20 - right now you see it's got it looks like
66:22 - this which is nice right it looks kind
66:23 - of cool
66:24 - but if we look over here you can see two
66:26 - things happened
66:27 - right now if you go over it the text
66:30 - actually
66:31 - it kind of becomes a bit lighter right
66:33 - so it becomes a little bit lighter
66:35 - and it also grows but it doesn't snap it
66:38 - animates it grows like in a very nice
66:40 - subtle way
66:41 - so to get that functionality working
66:43 - what we do is
66:45 - first we change the default opacity so
66:48 - we change the default opacity to 0.7
66:51 - like this and that will actually make it
66:52 - like you see a little bit darker by
66:54 - default
66:55 - and then what we do is we go and say
66:58 - target in that bar target the h2 element
67:00 - but when we hover over the h2 element
67:03 - change the opacity to one so let's go
67:05 - ahead and look at that does so now if i
67:07 - go over it so when i hover
67:08 - the opacity goes back to one so you see
67:12 - that little color difference every time
67:13 - i hover over it
67:15 - right beautiful font so that's that yeah
67:18 - that's awesome and then we're also going
67:19 - to say transform
67:21 - and we're going to say scale of 1.2 so
67:24 - this will actually mean that as soon as
67:25 - i go over it it's going to
67:26 - scale a little bit you see that it
67:28 - scales a tiny bit yeah yep
67:30 - but that doesn't look as nice as this
67:32 - look at this is like buttery smooth
67:34 - right so like this one when we do it
67:35 - like you see like everything's buttery
67:37 - smooth
67:37 - now to get that what you do is you say
67:41 - to the parent
67:42 - container so or the actual h2 element
67:44 - itself you say
67:45 - transition and then you say
67:48 - the transform so we're doing a
67:50 - transformer so make sure that the
67:52 - transform
67:53 - takes 50 milliseconds and we're going to
67:54 - use something called ease out so i'm not
67:56 - going to go through what the different
67:57 - ones are easing these out but
67:59 - ease out is quite a cool one and if we
68:00 - do that now you see look at that we get
68:02 - like a very nice animated look
68:04 - wow that's beautiful you see so it's
68:07 - very nice how you get these little
68:08 - subtle changes and it gives you that
68:09 - sort of
68:10 - finishing touch right um
68:14 - that's it super crisp so with that said
68:17 - that's actually the ui portion of that
68:21 - nav bar complete so if we go ahead and
68:23 - just make this a little bit bigger so
68:24 - you guys can go ahead and see that
68:26 - there you go like we've got that nice
68:28 - looking ui element right there right
68:31 - so that's very very clean and looks
68:33 - pretty nice
68:34 - so the next section is let's go ahead
68:37 - and go to app
68:38 - right so we've got the results right the
68:40 - results section and
68:42 - we're at 798 likes on this video guys
68:45 - let's go
68:45 - we're going to reach that 1000 by the
68:47 - end of this video help us out guys smash
68:49 - that like button
68:50 - yeah let's see if we can get to a
68:51 - thousand guys i think we can i think we
68:53 - got a thousand
68:54 - we've got that nice hey joshua thomas is
68:57 - still with us awesome dude he says
68:59 - beautiful simply beautiful nice thanks
69:02 - for sticking out man
69:03 - thank you and what guys we notice when
69:05 - you guys are watching we notice who
69:06 - sticks around who watches
69:08 - like we start to get to know you guys
69:09 - it's really cool and then eventually
69:11 - he's like we see a lot of people inside
69:12 - the
69:12 - the course which is which is amazing um
69:15 - awesome
69:16 - so now guys the next section is
69:20 - we're gonna go ahead and tackle the
69:22 - results
69:23 - okay so the results section so here
69:26 - what we need to do is let's go ahead and
69:28 - drop it here so let's go ahead and do
69:30 - this
69:32 - results like that all right so we need
69:34 - to go ahead and make this file so i'm
69:36 - going to go ahead and say results.js
69:38 - there we go i'm going to say rfce there
69:41 - we go
69:42 - and then remember stick to our bim
69:44 - convention so class name equals results
69:46 - save it there we go and
69:49 - we need to import the css file so import
69:53 - like this we say results.css like that
69:56 - and remember we need to create the
69:58 - results.css file
70:00 - there we go nice so
70:03 - with that said that's really nice and
70:05 - clean we have the results up and running
70:07 - uh awesome so right there the results is
70:10 - you're gonna start filtering out
70:12 - the movies by the specific thing that
70:14 - you're clicking like trending maybe top
70:16 - rated or action all of those
70:18 - yeah exactly so you see this section
70:20 - right here is the result so we've
70:21 - already built the
70:22 - the header we just built the the
70:25 - navigation
70:26 - and the final piece of the puzzle is
70:27 - building this results and when we say
70:29 - this results
70:30 - this is like a scrollable container so
70:32 - it's going to be something which we can
70:33 - scroll down
70:34 - so it's going to be a longer container
70:36 - and yeah it's going to be pretty much
70:37 - fully responsible for all of the movies
70:39 - that you see and also
70:40 - if you guys didn't notice earlier when i
70:42 - was demoing it when we hover over it you
70:44 - see it actually shows you the date that
70:46 - it was added or the date the film was
70:47 - made
70:48 - and the number of likes right so for
70:50 - each one you see that so it actually
70:51 - gives you
70:52 - that's beautiful yeah all that
70:54 - information as well
70:55 - so that's really cool um nice so
70:59 - let's go ahead and check now um dude
71:02 - since we said that we just got over like
71:04 - 70 likes 60 likes i think it was all
71:06 - good
71:06 - oh wow that's insane now we're gonna now
71:08 - we're definitely gonna hit it yeah
71:09 - that's
71:10 - good so much that's amazing thank you
71:12 - guys
71:14 - yeah man people are showing so much love
71:16 - in the chat we love you guys thank you
71:18 - so much
71:19 - he says club programmer sourab says do
71:21 - you guys make only fun and clone like
71:23 - don't you do
71:24 - an end to end one with back end like no
71:26 - databases and stuff
71:28 - so actually i want to address that
71:30 - quickly so guys
71:32 - we do end-to-end builds like it's just
71:34 - because we do i'm using firebase
71:36 - firebase
71:37 - is a back-end solution right so i think
71:39 - it's a it's a misconception if we're not
71:41 - using express or node.js or something
71:43 - it's not like a full build uh firebase
71:45 - is a complete build guys like firebase
71:47 - is of
71:48 - end to end we've got the front end in
71:49 - react the backend we use firestore in a
71:51 - lot of our builds
71:52 - and then we deploy it using firebase
71:53 - hosting very very powerful stuff here
71:56 - and uh yes you if you do need to have
71:58 - like some back-end functionality you can
72:00 - use cloud functions
72:01 - um but yeah honestly i would say you
72:04 - pretty much we can uh we have been doing
72:06 - end-to-end bills but
72:08 - to answer your question exactly we will
72:10 - be using the man stack
72:12 - and we're going we've got a ton of
72:13 - builds so yes if you're super excited
72:15 - check out the
72:16 - check out the zoom clone that was made
72:18 - using node.js as well
72:19 - so that's a little bit different but at
72:22 - the same time you know i know
72:23 - huge companies are using firebase as
72:25 - their backend so
72:27 - exactly and also we just got a donation
72:30 - by fun with sanchi thank you so much he
72:32 - says sunny i am enjoying
72:33 - your way of teaching a lot it's
72:35 - impressive
72:36 - i i think this is uh i think it's
72:39 - nimeshi who was working with me i think
72:40 - i recognized the picture
72:42 - i think it's the same person yeah that's
72:44 - insane dude i appreciate that thank you
72:45 - so much
72:46 - nice all right let's carry on guys so
72:49 - this is awesome
72:50 - so uh somehow wow chris kevin says
72:53 - logged into the second account to get
72:54 - the likes up
72:55 - that's what i'm talking about that's
72:57 - what i'm talking about thank you cp pam
73:00 - and another donation by deepak thank you
73:02 - so much man we really appreciate you for
73:04 - the indian rupees
73:05 - thank you amazing thank you dude awesome
73:08 - so now what we're gonna do is
73:09 - this one's actually very like it looks
73:12 - very simple how we do this right
73:14 - so what we're actually gonna have is
73:15 - we're gonna have a video
73:17 - card component inside of results right
73:20 - so imagine we had a video card and we
73:21 - also got another one
73:22 - from unkit uh and kid
73:26 - thank you so much css skills are got
73:28 - level curious to see more
73:30 - thank you dude thank you amazing stay
73:31 - tuned you'll see more definitely exactly
73:33 - it gets more and more from here so we've
73:35 - got the
73:36 - video card component right now imagine a
73:38 - video card component when i say that i'm
73:40 - referring to this thing over here so
73:42 - this is
73:42 - basically one video card component right
73:45 - and then what we can do is we can pass
73:47 - different props to it and that will
73:49 - essentially just render it out in a
73:51 - different way but we're just reusing the
73:52 - component which is what react is all
73:54 - about it's about reusing that component
73:58 - david jonathan i see your question he
74:00 - says uh please
74:01 - he's actually a student inside of pwj he
74:03 - says please what's the major difference
74:04 - between firebase and firestore
74:06 - and why is firebase your preference
74:07 - firestore is a database within firebase
74:10 - just to quickly answer that uh but we
74:12 - can jump into that in the coaching call
74:13 - i would definitely be
74:14 - uh i'll explain that a little bit more
74:16 - afterwards awesome
74:18 - so now guys like we said we're going to
74:19 - build a video card
74:21 - so let's go ahead and create a video
74:23 - called component so videocard.js
74:27 - like this and again we can do rfce and
74:30 - look guys with it without these little
74:31 - snippets and stuff like this would take
74:33 - you a little bit longer than
74:34 - than what we're doing right here so
74:36 - learn these little tricks and it will
74:38 - save you a lot of time
74:40 - like it will save you it stacks up it
74:42 - really does stack up
74:43 - yeah it saves you ton of time especially
74:45 - when we're doing these builds daily
74:46 - take it from us that like without these
74:48 - tricks it wouldn't be possible to pump
74:50 - out the content like this
74:52 - so you have to be very sort of like
74:54 - mindful and just get learn these little
74:55 - tricks
74:57 - again at the end of the day it's a lot
74:58 - to do with you know the energy that
75:00 - you're putting to waste or
75:01 - you know actually putting to use so be
75:03 - aware of them learn them that's why
75:05 - sunny is taking the time to teaching
75:06 - to teach you guys and actually point
75:08 - them out so apply them
75:10 - exactly exactly so now we have
75:14 - um so omiya says i really want to have a
75:18 - one-on-one with you guys
75:19 - just check out the link in the
75:20 - description and pretty much in pwg you
75:22 - can definitely have one-on-ones with us
75:24 - so yeah feel free to check that out just
75:26 - so i don't slack really
75:27 - nice so inside a video card guys we have
75:30 - a few things going on
75:31 - we essentially are going to pass in like
75:33 - a movie prop right so
75:35 - imagine we passed in so the props come
75:37 - in here so props are simply like
75:40 - customizable properties that we can pass
75:41 - into a component and what we can do is
75:43 - we can destructure it
75:44 - and say get me the movie object that we
75:46 - pass in
75:47 - right so imagine whenever we render this
75:49 - we just say
75:50 - there is a movie and that movie is some
75:53 - kind of movie
75:53 - and basically inside a video card i use
75:57 - that to render it out
75:58 - in the way that we want so what we can
76:01 - do here
76:02 - is inside the video card it's going to
76:04 - consist of a few things consist of a bit
76:06 - like an image
76:07 - so let's go ahead and actually grab an
76:09 - image and i'm going to quickly drop it
76:10 - on our faces so that
76:11 - google images doesn't screw me over live
76:17 - let's go ahead and do something it's
76:18 - great because we're seeing you get all
76:20 - the resources as well you know from the
76:22 - browser and everything so that's that's
76:23 - amazing
76:24 - yeah exactly so let's go ahead and check
76:28 - on but let's go ahead and use this as a
76:30 - picture so copy image address
76:32 - boom let's go back and let's go here so
76:35 - image source if i go ahead and pop this
76:37 - in
76:38 - so this is a image online and what we
76:40 - can do is if i render this image
76:42 - yeah so let's go ahead and pull the
76:44 - video card component in
76:46 - sometimes that shortcut doesn't work and
76:48 - you're gonna have to do it manually so
76:49 - you say
76:50 - import video card your card from
76:54 - video card like this save it and what
76:57 - you should be able to see now
76:58 - is that image
77:02 - should be shown here actually
77:06 - let's just double check if we do h1
77:08 - let's just say hello
77:10 - let's see if we see it so all right so
77:11 - right now we're not actually seeing
77:13 - let's just double check so let's refresh
77:16 - okay so we don't actually see our
77:17 - component so let's check why
77:18 - we don't see it so we've got the video
77:19 - card here the results
77:21 - are we rendering the results going to
77:23 - app to save the file
77:25 - okay so that was why so we save it auto
77:28 - import
77:29 - and then it says movie is not defined
77:30 - okay so this one so for now let's just
77:32 - ignore the movie
77:34 - and there we go so you can see we've got
77:36 - a we've got a picture
77:37 - right there right so we're going to use
77:39 - this as a temporary picture so we've got
77:40 - an image
77:42 - and then we would have some kind of text
77:45 - right so we'd have like an h2 which
77:46 - would be like
77:47 - so i think somebody's saying you're not
77:49 - sharing your screen so oh yeah
77:50 - damn it oh yeah oops good call guys good
77:54 - call guys
77:54 - thank you thank you thank you that was a
77:57 - that happens at times
77:59 - right so so this is what we did so we
78:01 - pretty much um
78:02 - all i did was add a image tag that's
78:04 - literally all i did
78:05 - um and we added this movie so the
78:08 - component takes a prop
78:09 - chord uh movie right
78:13 - i love the the sort of passion that i
78:15 - see from everyone like you're not
78:16 - sharing your damn screen dude
78:18 - it's like what do you think you are yeah
78:21 - yeah like give the people what they want
78:23 - yeah
78:24 - okay guys yeah always point out things
78:27 - guys because sometimes you know we're
78:28 - oblivious to a few things so many things
78:30 - are going on so it always helps to know
78:31 - that somebody has their back and i know
78:33 - that you guys do so thank you guys so
78:35 - much
78:35 - yeah like us like us just dropped a
78:39 - good game
78:43 - oh man so then we've got that and then
78:46 - what we're going to do now is like
78:47 - imagine we had a movie
78:48 - so this would be like the movie title
78:50 - let's say here and then we would have a
78:52 - p
78:52 - tag so something like underneath and
78:54 - this would pretty much say
78:56 - something like this would essentially be
78:58 - what we have here so it'll be like this
79:00 - thumbs up stuff
79:01 - right so we could just say like number
79:03 - of likes number of likes blah blah blah
79:05 - something like that right and then
79:08 - uh yeah so we're gonna have the movie
79:10 - title and
79:11 - at the top we would also have a movie
79:13 - overview so like some kind of p tag
79:15 - over here which would say like this is a
79:18 - film
79:18 - about coding right something like that
79:22 - right this is a film about coding so you
79:24 - see like here says this would be this is
79:25 - a film about coding this would say some
79:27 - movie title
79:28 - and this would be the number of likes so
79:30 - you see we're drafting out roughly right
79:32 - i'll keep this super clean i'll just do
79:33 - this yeah this film recording
79:36 - nice so you can see it's all white it's
79:38 - not it's all black sorry which is why
79:39 - it's a little bit hard to see
79:40 - okay um now what we're gonna do
79:44 - is we are gonna go ahead and basically
79:47 - make this a little bit more visible
79:48 - style it so it looks a little bit nicer
79:51 - yeah so let's go into videocard.css
79:55 - over here and let's actually start
79:56 - styling this so video card remember is
79:58 - the parent container
80:00 - so everything is built around that so
80:01 - let's go ahead and start styling the
80:03 - video card
80:04 - so first thing we're going to do is
80:06 - we're going to give this
80:07 - actually let's go ahead and fix that
80:09 - image because right now
80:10 - the image is huge so i'm going to say
80:12 - target the image
80:13 - make sure it has a height of 300 pixels
80:16 - and a width of 500 pixels
80:18 - right which will give us this aspect
80:19 - ratio so this one right here
80:21 - this is the one you see in hulu or in
80:23 - the redesigned hulu
80:24 - and then we're going to say object fit
80:26 - contain which keeps the uh if i get rid
80:28 - of object fit contain
80:29 - see it's stretched right so if we add
80:33 - that it keeps the aspect ratio this is
80:34 - super important guys
80:36 - it's really really important because if
80:39 - you don't do that one line of code
80:41 - you start seeing stretched images
80:42 - everywhere and it just ruins the entire
80:44 - experience
80:45 - so we don't want that and what we're
80:47 - going to do is we're going to go here
80:48 - and first thing we're going to do is
80:49 - because i hate it i'm going to say color
80:51 - white
80:52 - and now there we go we can see the text
80:54 - right so that's a lot nicer
80:55 - we're going to make the width of this be
80:58 - a set 500 pixels
81:00 - we're going to make the height of this
81:02 - be a set with a height of 500 or 400
81:04 - pixels
81:05 - and i'm going to give it a padding oops
81:09 - and give it a padding of 20 pixels
81:13 - okay and you see now it's no longer
81:15 - touching the side so it's got a little
81:16 - bit of spacing around it
81:18 - awesome so what we're going to do now
81:21 - is i want it so that when we hover over
81:23 - this we get this effect
81:25 - right so when we hover over it we get
81:26 - this kind of nice smooth effect
81:29 - right um oh this is a really nice
81:33 - comment there he goes i can use your
81:34 - mind
81:35 - oh this is awesome dude someone says i'm
81:37 - continuously open my eyes i'm an angular
81:39 - guy
81:40 - i loved react when i saw your clones
81:42 - that's why i love you 3000.
81:44 - nice we have a little bit of a i think i
81:47 - had the film down here it was um
81:50 - where's there oh damn it yeah captain oh
81:53 - it's not captain america damn it i was
81:54 - gonna say avengers
81:55 - that's where i love v3000 came from nice
81:59 - so wow i didn't know that that's funny
82:00 - yeah so now
82:02 - we've got the um we want it so it scales
82:05 - up a little bit right so the way we do
82:07 - that is we target the video economy say
82:08 - on hover
82:10 - transform scale of like this is
82:12 - basically saying nine percent
82:14 - yeah makes it okay nine percent bigger
82:16 - once you hover over i see yeah you see
82:18 - that
82:19 - but again we hate that snappy behavior
82:21 - so how do we get smooth and silky we say
82:23 - transition
82:25 - transition and we say transform so so
82:27 - make the transform
82:28 - 100 milliseconds and if i don't pass in
82:31 - like an ease in ease out or something
82:33 - by default i think it does ease in right
82:35 - so if i go ahead and do that
82:36 - hey look at that beautiful
82:40 - really clean right yeah so like now you
82:42 - see you got the same behavior
82:44 - so you put the ease in animation instead
82:46 - of the 100
82:47 - milliseconds so yeah this you'd put that
82:50 - in here so oh
82:52 - you said it was default i see yeah so i
82:54 - think by default it does ease in i think
82:57 - um but i'm not 100 sure but either way
83:00 - it
83:00 - like these are all this is actually
83:02 - something i learned in my last job
83:03 - they're very very subtle
83:05 - um very subtle changes but they do make
83:08 - a difference so if we use ease in for
83:09 - example
83:10 - it actually for this example guys leave
83:13 - it out because it's actually the perfect
83:15 - one
83:15 - that's that's the actual natural
83:16 - behavior that you want so we're just
83:18 - saying take 100 milliseconds
83:20 - when you do that scale nice so with that
83:23 - said we're going to
83:24 - add some padding to the h2 so where it
83:26 - says movie title so let's go ahead and
83:28 - do that we say video card direct chart
83:29 - h2 yeah added that tiny bit of padding
83:32 - right over here so you see that padding
83:35 - right in this gap here uh and then what
83:39 - we're going to do
83:40 - is we're going to say for
83:43 - the uh okay yeah so the next step i
83:46 - guess is actually
83:48 - so now what i want to show you guys is
83:50 - is if we actually render a few of these
83:52 - right how do we get that responsiveness
83:54 - going on like so how do we get it so
83:57 - that we see it as we see it here so
83:59 - whenever we make it smaller you see it
84:01 - actually works perfectly responsive
84:02 - and look how perfect that is like on a
84:04 - phone and you
84:06 - you'll be amazed at how easy it is to
84:07 - get that right
84:09 - um so so the way we do that is
84:13 - let's go ahead and go to results.js so
84:16 - let's go to our results.js and you see
84:18 - here guys
84:19 - we have a container called results right
84:21 - so we're going to go to our results.css
84:23 - target the results and basically before
84:26 - we do that
84:27 - i'm going to go back into results and
84:29 - just to stress test it
84:31 - i'm gonna basically render out like a
84:32 - bunch of video cards right
84:35 - so so now this is how like we would see
84:37 - a bunch and right now if i make this
84:38 - bigger you see
84:39 - it doesn't do anything fancy with it
84:41 - that was so fast by the way
84:43 - wow crazy right yeah
84:47 - so like you see it doesn't do anything
84:49 - fancy with this right now right but it
84:51 - just kind of looks a bit like
84:52 - you know could look a little better so
84:53 - we go back to results.css
84:56 - and over here let's see if we
84:59 - now three lines of code guys three lines
85:02 - of code and we will get this
85:05 - right here what you see here we're gonna
85:06 - get this to look like this
85:08 - like it's in pretty much nearly like
85:10 - this right three lines of code
85:13 - we're at 958 likes guy oh my
85:17 - god faster than i thought i think if you
85:19 - guys are impressed with this next part
85:22 - so if we do three lines of code and we
85:23 - get this right i think let's push that
85:25 - number
85:26 - straight to a thousand right let's go
85:28 - let's do it so
85:29 - here what we do is we say
85:33 - display flex number one so that's the
85:35 - first line of code
85:36 - now it's inside of a row right you see
85:39 - everything's kind of messed up it's like
85:40 - whoa
85:41 - we've got this white space saying
85:42 - everything's broken and then what we do
85:44 - is we say flex wrap
85:46 - right flex wrap and then there you can
85:47 - see the likes coming up we're at 978
85:50 - 978 that's two lines of code and we say
85:52 - wrap and if we do that
85:54 - okay okay now if we make this a bit
85:56 - bigger
85:57 - you can see look okay it actually wraps
85:59 - but it's not oh wow
86:00 - but it's not centered right so it's not
86:03 - centered
86:04 - and then what we do is we say justify
86:06 - content
86:08 - center boom dude
86:11 - that's it whoa let's go i love it
86:14 - because you only have to do it once and
86:15 - now you can see it in
86:17 - all of the other images so all the other
86:18 - images have the hover on functionality
86:21 - it has the zooming in or the what is it
86:23 - called the 100 millisecond
86:25 - um and the nine percent yeah uh you know
86:28 - higher
86:29 - or bigger picture this once you hover on
86:31 - top of it yep
86:32 - exactly exactly yep and guys like that
86:35 - was so slick like like three lines of
86:37 - code and now look at this is completely
86:38 - wristband so even if you're on a tablet
86:40 - and you're looking at this like okay
86:41 - perfect user experience if i go into a
86:43 - phone like it's in a smaller device okay
86:46 - thing works perfectly if i go into a
86:47 - desktop it's going to maximize the
86:49 - potential use
86:50 - and even if it gets bigger than this so
86:52 - i've got a huge ultra wide in front of
86:53 - me it will just use up as much room as
86:55 - it can it'll just wrap around
86:56 - and it'll stay centered and with that
86:58 - said we just hit a thousand like
87:00 - let's go hey that's what i'm talking
87:03 - about
87:04 - so much man with those three lines of
87:06 - code you guys helped us
87:07 - reach the 1k likes on this video thank
87:09 - you guys so much
87:11 - let's get to 1.5 k now that's the new
87:13 - benchmark that's
87:14 - it 1.5 game 1.5 k new go guys
87:17 - new go nice so we have the video card
87:21 - over here right which is awesome uh and
87:24 - now what we're going to do
87:26 - is okay this is nice right we pretty
87:28 - much have everything out
87:30 - but we read too that's amazing yeah we
87:33 - have like everything
87:34 - on the visual side of things kind of
87:36 - done here right but we want to basically
87:37 - get to a point now where
87:39 - we can uh pull this data in right so
87:42 - from um
87:44 - from tmtb so let's get involved in that
87:46 - stuff now so the first thing we're going
87:48 - to do
87:48 - is we're going to create a file
87:52 - called uh requests.js right so
87:56 - request.js and this is going to be
87:58 - primarily for any request
88:00 - that we make to let me just quickly
88:03 - change this
88:03 - let me go to
88:06 - here so this is going to be for any
88:09 - request that we make to the tmdb
88:11 - api so you see it's a movie api i
88:13 - remember earlier on we showed you if you
88:14 - go into your
88:16 - profile settings and then you go over
88:18 - here
88:19 - oh oops not this one you oops you go
88:22 - over here
88:23 - to api all you want to do is click on
88:26 - that and you'll be able to generate a
88:27 - key somewhere down here
88:29 - and you'll basically be able to use that
88:30 - and everything will work in the
88:32 - and you'll get your key right so you
88:34 - want to get ahold of your key oops
88:36 - that's it there we go you get audio keys
88:38 - so with that said
88:39 - what we're going to do to get ourselves
88:41 - prepared so that everything works
88:42 - correctly
88:43 - we need to go to results results sorry
88:45 - dot uh
88:46 - not results request dot requests
88:49 - maybe dot js right and it's not capital
88:53 - r because this is not a component
88:54 - right so this is not a component that
88:56 - we're using here
88:58 - now what you want to do is you want to
89:00 - have const api key
89:02 - right and basically guys i want you to
89:05 - paste your key here
89:07 - okay so i want you guys to paste your
89:09 - keys so this is going to be your key
89:11 - that you guys were able to get over here
89:13 - so inside of api
89:15 - and tmdb completely free you just need
89:17 - to paste
89:18 - your key okay so go ahead and paste your
89:21 - key
89:22 - and then what we're going to do next is
89:25 - we're actually going to go ahead and
89:26 - make this a little bit bigger now
89:27 - because this is very important part so
89:29 - i look at that it nicely and it's just
89:31 - behaved itself nice that's awesome
89:34 - so here what we're going to say we're
89:35 - going to say export default because
89:36 - we're going to export a list like
89:38 - basically an object
89:39 - right so we're going to say we're going
89:41 - to have a bunch of exports here
89:43 - that are going to basically reach out to
89:45 - certain endpoints on that
89:47 - tmdb server right so tmdb provides
89:50 - something called an
89:50 - api right and then api if we
89:54 - want to make it very quick and simple we
89:56 - say tmdb
89:58 - api like this and basically what it is
90:02 - is it's basically just like a server
90:04 - that they have running
90:05 - and what we can do is we can make we can
90:07 - send requests saying
90:08 - hey give me all the films that are
90:10 - inside that are like the action films
90:13 - give me all the films of the comedy
90:14 - films give me all the films of the
90:16 - sci-fi films
90:17 - and with that you can pretty much go
90:18 - ahead and get everything that you kind
90:20 - of need working
90:21 - right so what we're going to do is we're
90:23 - going to show an example of the first
90:25 - one so
90:26 - this is an example of the first api call
90:29 - so the endpoint pretty much is forward
90:32 - slash trending
90:33 - forward slash all then it's four slash
90:36 - week and then it's go you start
90:37 - putting in the parameters so here it
90:39 - will say api key equals and
90:41 - you'll notice we're using back quotes so
90:43 - these are not normal questions are there
90:45 - so normal quotes are this
90:46 - we're using backticks so these backticks
90:48 - and that allows you to do
90:50 - javascript string interpolation so we
90:51 - can actually use our api key value
90:54 - inside here so oh wow all right so that
90:57 - will actually be super handy
90:58 - so at this point it will replace here
91:00 - and it'll just say your key but we want
91:01 - you'd
91:02 - want to put your key here so imagine you
91:04 - had a key which was like some gibberish
91:06 - like this
91:07 - or something that's going to be your key
91:09 - and then that'll go ahead in here
91:10 - right so you want to do that and this is
91:13 - going to be the first one and what this
91:14 - allows us to do now
91:16 - is it allows me to basically rather than
91:18 - using this ugly string
91:19 - i can do something like this in the
91:21 - future because you say request dot
91:23 - fetch trending and that will actually
91:25 - work that will represent
91:26 - this nasty string with my api key inside
91:29 - of it
91:30 - okay beautiful so i'm going to basically
91:33 - pop in a bunch of the other ones that we
91:34 - have here right so i'm going to go ahead
91:36 - and do the following so
91:38 - i'm going to say we've got these ones
91:41 - over here now so we've got
91:43 - i'm going to go through all of that now
91:44 - you're going to fetch top rated
91:46 - actions comedy all of these right
91:48 - exactly so
91:49 - you've got top rated and i'll go through
91:51 - this list so that way at any point you
91:53 - guys what i'll say is just pause it here
91:55 - and you can pretty much write these out
91:57 - and i'll explain them quickly so we've
91:58 - got fetch top rated again this is this
92:00 - is the endpoint top right and it's got
92:01 - an api key
92:02 - and saying the english the us english
92:04 - ones which that's the language we
92:06 - selected
92:07 - they're saying the action films you can
92:08 - see with these ones like action comedy
92:10 - horror
92:11 - there's genres that they have for some
92:12 - reason that this is how they've set up
92:14 - so the action movie genre is code 28
92:16 - the comedy movies is 35 horror movies 27
92:20 - now you don't really need to know too
92:21 - much about how they got these numbers or
92:23 - whatever you just need to know that
92:24 - that's the one for those ones
92:25 - so you can go ahead and just copy that
92:27 - and that will work perfectly
92:29 - david muwangi says can i use an n file
92:32 - yes you can use an m file
92:33 - yeah i would actually recommend if you
92:35 - know how to use m files go ahead and use
92:36 - an m-file
92:37 - uh and that will work what i'm going to
92:40 - do is
92:40 - i'm just going to go i'm going to keep
92:42 - it as this for now and what i'll do is
92:44 - i'll pop in my key when we actually come
92:46 - to use this
92:47 - so nice so with that said we've done the
92:50 - first part right so we've set up our
92:52 - requests in a way that's that's good the
92:55 - next part
92:56 - is let's go ahead and create a file
92:59 - called axios dot js
93:02 - right axios.js now some of you might
93:05 - know what axios is
93:07 - it's essentially a library that we use
93:09 - to make requests
93:10 - to any sort of server or api endpoint
93:14 - right now somebody says
93:17 - perfect timing tech cut just said why
93:18 - didn't you use axios instead of fetch
93:20 - we are using axios today here so we've
93:22 - used fetch in previous videos
93:24 - today i thought let's mix it up and
93:25 - let's use axios axios is pretty much let
93:27 - me go ahead and show you guys very
93:28 - quickly what axios is
93:30 - it's essentially just a very popular
93:32 - promise based http client
93:34 - for um for javascript uh and basically
93:37 - it's very very well known
93:39 - and you can basically make a request to
93:41 - like for example here that you can make
93:43 - a request to an endpoint
93:44 - and it will come back with the response
93:46 - and it also give you an error if
93:48 - anything went wrong
93:49 - so it's very very beautiful very very
93:51 - powerful so
93:52 - so axial is handling the requests from
93:55 - that we're trying to get from the api
93:57 - the im the tmdb api right yeah exactly
94:01 - amazing yes it's exactly that's exactly
94:03 - what it's doing
94:04 - so in order to install it it's very
94:06 - simple we just say import
94:08 - say import uh no sorry not import npm i
94:12 - or install the shorthand is npmi and you
94:14 - can say axios
94:15 - like that we can go ahead and we can
94:19 - pretty much do that and you see it's
94:20 - super quick
94:21 - to install that there you go and we can
94:22 - drop the terminal down with command j
94:24 - and then we can say import axios from
94:28 - axios now some of you guys might have
94:30 - used axios before and you might be
94:31 - wondering oh i know this bit
94:33 - i know this stuff like but stay tuned
94:35 - because this one right here actually i
94:37 - didn't even know this trick so
94:38 - this is a very little handy trick i'm
94:40 - about to show you so what you can do is
94:42 - you can make an
94:42 - instance of axios so that way whenever
94:44 - you make a get request or something
94:46 - you don't have to include the beginning
94:48 - of the
94:50 - the the sort of url so sometimes it's
94:52 - kind of annoying to have the beginning
94:54 - the way we do it is we say this we say
94:56 - const instance
94:57 - equals axios and you say create
95:00 - and then basically just set the base url
95:02 - to whatever it is so in this case this
95:03 - is the api
95:04 - url so what this means is when we make
95:08 - those requests that we sent earlier
95:10 - we'll basically be appending the base
95:12 - url to the beginning of this so it would
95:14 - be like this
95:15 - you see it turned into a link right so
95:17 - it's http api and then for this one
95:19 - it'll basically be this
95:21 - and then for this one it'll basically be
95:23 - this you see so that's what we're doing
95:25 - but we're trying to make it i
95:27 - see now that's insane man i love it it's
95:30 - clean right and then you don't have to
95:32 - always do it instead you just say
95:33 - axios.get and because you said we're
95:35 - facing that url
95:37 - yeah inside of or in the front of those
95:39 - requests right
95:40 - exactly man that's amazing it's
95:43 - mind-blowing
95:43 - really powerful stuff and here you say
95:46 - export default
95:47 - instance like this s4d for instance save
95:50 - it
95:50 - and we've got axios set up to the point
95:53 - that we need it
95:54 - okay so now what we can do is let's go
95:56 - over to
95:57 - our video uh let's go over to our
96:00 - results
96:01 - results let's go to results
96:06 - this one here now what we're gonna do
96:08 - here is
96:09 - we're going to have essentially rather
96:11 - than mapping out like this
96:13 - we're going to have some we only want to
96:14 - show one thing right we want to show
96:16 - like
96:16 - one um
96:20 - like we basically want to have something
96:21 - like this we're going to say movies
96:23 - dot map and then we basically say go
96:24 - through every single movie inside of
96:26 - like this movies array
96:28 - and just render out all the video cards
96:31 - so something like this
96:32 - you know beautiful we just got a
96:34 - donation by supra
96:36 - thank you so much man nice that's much
96:38 - appreciated of you guys i love react.js
96:40 - a lot
96:40 - more videos down down lane he says hope
96:44 - to have a convo with you soon
96:45 - amazingly ben thank you so much dude
96:48 - massively appreciate that
96:50 - mike might closely you guys are absolute
96:52 - legends we love you guys honestly
96:54 - they're pretty the support today has
96:55 - been insane guys so like
96:57 - really really massive i love that
97:01 - right it's what keeps us going guys
97:03 - thank you so much
97:04 - always drop the love in the comments
97:05 - below and then
97:07 - let's keep on moving thank you guys
97:09 - definitely definitely
97:11 - uh nice so now let's go ahead and
97:14 - yeah so we want something like this you
97:16 - see it says movies.map but now it's
97:17 - saying hang on movies isn't defined
97:19 - right so
97:20 - what we're going to do is we're going to
97:21 - use something called state okay so here
97:24 - where
97:24 - the way we do is we say const and then
97:26 - we're going to say movies and this is
97:27 - basically state is basically
97:29 - uh how you write a variable inside of
97:32 - react so you say set movies and this is
97:33 - how you're going to modify
97:35 - the movies and you say use state so this
97:37 - is a hook
97:38 - this is something what we call hook and
97:40 - what i just did there is i've done an
97:42 - auto import so i've imported at the top
97:44 - here
97:44 - and the initial value of this is going
97:46 - to be an empty array because movies we
97:48 - want to be an empty array in the
97:49 - beginning
97:50 - okay so the cool part now
97:53 - is you can see if i do results you see
97:56 - like it doesn't render out a video card
97:58 - because there's nothing to loop through
97:59 - right but if i added like two elements
98:01 - in this array
98:01 - let's just say one and two it will map
98:04 - through it twice
98:05 - and then it'll just render out two video
98:07 - cards so if i do that
98:08 - so it maps out two video cards if i had
98:11 - a third
98:11 - it maps out a third of the video card
98:15 - yeah but look at it but this doesn't
98:17 - actually provide any data it's just
98:18 - showing you proof that it's actually
98:19 - mapping through the the array that we
98:21 - just set up right
98:22 - so initially we want it to be blank now
98:26 - this is where the magic happens this is
98:28 - where we connect the
98:29 - api to our react front end and we pull
98:32 - in all of that
98:33 - that beautiful stuff wow yeah let's go
98:36 - so then it's going to pull up the exact
98:39 - number of
98:40 - you know the items inside of the array
98:42 - that the list provides as if for example
98:44 - if you click top rated then
98:46 - the array is going to populate with
98:48 - let's say there was top 10
98:49 - top rated movies yeah so that's going to
98:51 - be the size of that array yeah exactly
98:53 - that'll be the size of that area
98:55 - i also see david johnson's how did you
98:57 - do that auto import so let's go ahead
98:59 - and show you
99:00 - quickly so imagine if you didn't import
99:01 - it you could either do control space at
99:03 - the end and you go to
99:04 - you see the first one is the snippet the
99:06 - second one is auto import
99:08 - boom you get it there that also happens
99:09 - when you're typing sometimes so it will
99:11 - pop up with you
99:12 - so a nice little tip so now what we're
99:14 - going to do is we're going to use the
99:15 - use effect hook
99:16 - right so use effect so use effect i can
99:19 - use a snippet there but i want to show
99:20 - you guys how to write it so
99:21 - use effect you basically someone said
99:24 - google should hire you
99:28 - i mean you're missing out yeah google
99:30 - should sponsor us i think
99:31 - that'll be awesome i know right yeah
99:33 - after that google build
99:35 - oh yeah exactly so now a user effect
99:38 - takes a function right and it basically
99:40 - it takes something called dependencies
99:42 - now inside of here if we leave this
99:44 - blank what this
99:45 - is saying is it's saying run this code
99:47 - run this code
99:48 - once when the results component or
99:51 - whatever component you're inside of
99:53 - loads right or mounts yeah so once it
99:55 - loads or mounts
99:56 - run this code once yeah so it doesn't do
99:59 - it after that right so it only does it
100:01 - then
100:01 - if i do this it means every time it
100:04 - re-renders
100:06 - every time the the results component
100:10 - loads a month so that every time it
100:11 - re-renders
100:12 - that's when this happens but if i do
100:13 - this it says only run it once right
100:16 - so when it loads now if i pass the
100:18 - dependency in here so say if i pass
100:19 - something like name
100:21 - it will run it once when the component
100:22 - loads and it will also run it
100:24 - every time the name changes we just got
100:27 - another donation from manav aurora he
100:29 - says you're doing really good amazing
100:31 - really creative man thank you dude guys
100:33 - we're at 81
100:34 - on chat donations super chat donations
100:37 - thank you guys
100:38 - so much let's reach that 100 mark thank
100:40 - you guys appreciate you
100:41 - exactly thank you so much guys amazing
100:44 - stuff
100:46 - right so if we get rid of this and then
100:48 - we've got here a
100:50 - video card nice so now what we're going
100:52 - to do
100:54 - is we are going to go to we're going to
100:56 - actually put do a very
100:57 - clever piece of code inside of it so
101:00 - we're going to do something called an
101:01 - async
101:01 - function right so in order to run
101:04 - anything asynchronous and when i say
101:06 - asynchronous
101:07 - what i mean here guys is anything that
101:09 - involves
101:10 - um anything that involves um
101:13 - like sending some information out to a
101:15 - server and pulling it in
101:17 - after as in like pulling in so you
101:18 - whenever we sort of go to a server and
101:20 - grab some information
101:22 - it's going to have a delay there's going
101:24 - to be some kind of delay
101:25 - right so here what we do is we say async
101:28 - if you ever want to run an async inside
101:30 - of a
101:31 - inside of a function do this you say
101:33 - async
101:35 - oh oops what do you think why can't i
101:37 - spell today yeah async function
101:39 - and say fetch data like this
101:43 - another donation by william cruz chf
101:46 - five oh thank you so much man i
101:48 - appreciate you we've actually seen you
101:49 - in other live streams man so thank you
101:51 - so much for you know being
101:52 - uh regular here and yeah man stay tuned
101:54 - we're gonna continue doing these
101:56 - almost daily yeah much daily at this
101:58 - point yeah
101:59 - also i think i think ch5 is more than
102:01 - five dollars right
102:04 - yeah i think it was uh wasn't it frank's
102:06 - swiss francs i think so
102:07 - yeah so that's amazing nice we just got
102:09 - another donation so much william
102:12 - thank you dude thank you so much man
102:14 - appreciate it also guys yeah i see this
102:17 - a lot i said if you love clever progress
102:18 - go vote for us at hakone top programming
102:20 - guru award
102:21 - that would be insane guys so if you do
102:25 - uh love the channel you love the live
102:26 - streams you appreciate the content we
102:27 - push out
102:28 - all we ask is that you smash the thumbs
102:30 - up button and go ahead and click that
102:32 - link
102:32 - and vote for us in those awards because
102:34 - it'll be awesome you know like it's more
102:35 - motivation to do this
102:37 - nice yeah hopefully we can win man we've
102:39 - been putting out a lot of energy a lot
102:41 - of work for you guys
102:42 - uh hopefully you guys can get a lot of
102:43 - value from this and if you are enjoying
102:45 - this value go into that link that leif
102:47 - war warp nine paint nine is dropping in
102:50 - the description
102:51 - in the actual chat so go into that link
102:53 - right now and vote for us if you guys
102:55 - are finding value
102:56 - for this thank you exactly thank you so
102:58 - much guys nice
102:59 - so we've got the fetch data function
103:01 - right here and then what we would
103:02 - eventually do is we'd just say to use it
103:04 - you just say fetch data
103:06 - so here you just say fetch data like
103:08 - this right now obviously it's not doing
103:10 - anything at this point but
103:11 - this is where we do the magic so here we
103:13 - say
103:14 - const request request
103:18 - equals and we say await because we're
103:20 - we're saying wait for the response to
103:22 - come back
103:23 - david jonathan just forwarded thank you
103:25 - so much dude
103:27 - uh so we set a weight and then basically
103:29 - here's where we use axios but
103:31 - typically when you use axios you do this
103:32 - you say import axios from
103:35 - axios like this but because we just set
103:37 - it up in our local directory
103:40 - we're going to go ahead and pull it from
103:41 - our local so this one here axios right
103:44 - now what we do now is we say await axios
103:48 - dot
103:48 - get and this is the clever part right so
103:52 - remember earlier we set up like if we do
103:54 - axios dot get remember it
103:55 - automatically uses that base url that we
103:58 - just set up so it's really really going
103:59 - to be
104:00 - powerful to do right uh oh nice i can
104:02 - see loads of people voting this is
104:03 - awesome
104:04 - thank you guys amazing thank you guys so
104:06 - much for voting
104:07 - that's awesome yeah nice so we've got
104:09 - await.get and then what we can do is we
104:12 - basically need to do
104:12 - so let's just test it out so let's just
104:14 - say requests let's go into our requests
104:16 - and it automatically imported oh no it
104:18 - didn't report the request let's go ahead
104:20 - and
104:20 - import that so import request from
104:22 - requests like this
104:24 - and request dot and then you'll see as
104:25 - soon as i do that it gives me all the
104:27 - action movies animation so let's go
104:29 - ahead and use action movies as an
104:30 - example
104:31 - right then what i'm going to do is just
104:33 - to prove to you guys that this is
104:35 - working or doing something i'm going to
104:36 - say console.log request
104:38 - right so this is what i recommend you
104:40 - guys could do as well to see that it's
104:41 - working and it says use effect is not
104:43 - defined so we can go here and do
104:45 - import and it imports it at the top over
104:47 - here save it
104:49 - go back and now you can see if we open
104:51 - up the inspector
104:52 - go to the console and it says server
104:55 - responded with a 401
104:56 - that's because i didn't put my key in
104:58 - right so what i'm going to do is i'm
104:59 - just going to quickly go into my axe
105:03 - oh we got a 10 donation by chris connor
105:08 - thank you so much whoa we're at 98 super
105:11 - chat
105:12 - thank you guys oh guys that's insane
105:14 - thank you so much dude
105:16 - that's insane thank you so so much
105:19 - damn dude the energy today is it's on
105:21 - fire i love this everybody's showing
105:23 - some love
105:24 - yeah this is this is amazing guys right
105:28 - um oh look at this
105:31 - kyle johnson just said uh i just jumped
105:34 - on this stream after finishing the
105:35 - instagram clone video every time sonny
105:37 - says now this is the clever part my mind
105:38 - gets flooded
105:41 - let's go i actually thought about that
105:43 - too nice thank you so much girl
105:45 - all right so now we've got this uh so
105:48 - we've got a 401 right so if i go to my
105:50 - request.js and you see here the key
105:52 - so what i'm going to do is i'm just
105:53 - going to switch the screen out and i'm
105:54 - going to replace the key in with my key
105:56 - so you would be doing this with the key
105:58 - that you guys got from tmdb
106:00 - so boom i pop in my key and
106:03 - we go back to um let's close that one
106:07 - let's go back to the results so we are
106:10 - back
106:10 - there we go so now if i save it
106:14 - and i refresh oh you can actually see it
106:16 - works so if i refresh
106:18 - it says the results so here we actually
106:20 - console logged the
106:21 - request so you see this one we will
106:23 - console the response
106:25 - um i should actually call it response
106:27 - because this is what we're here
106:28 - we're getting and you can see here we've
106:30 - got the data right
106:31 - so now this is the interesting part so
106:34 - inside of data
106:36 - so this is what i would do guys whenever
106:37 - you make any api
106:39 - call or do anything like that i actually
106:42 - like to log out
106:43 - the stuff i like to log out the um i
106:46 - like to log out the response because i
106:47 - don't actually always trust the api docs
106:49 - so i'd like to see
106:50 - why they're actually giving back uh and
106:52 - i recommend you guys do it too because
106:54 - i've run into situations where the api
106:55 - docs are out of date and you're like
106:56 - whoa
106:57 - i didn't think developers did this but
106:58 - they do a lot um so you want to do
107:01 - data.results and then you can see now in
107:03 - the results we get all of the videos
107:05 - right so this is like little project
107:06 - power
107:07 - and this is actually this one right here
107:09 - so you see project power
107:11 - so you can see that's the first one and
107:13 - then you've got you've got the second
107:14 - one which is
107:15 - tenet so this is tenet right here you've
107:18 - got the third one which is
107:19 - um another one whoa we just got another
107:22 - donation
107:23 - from deepak it says please start react
107:26 - native clone series
107:27 - guys we have everything coming we have
107:29 - we have a man stack videos we have we
107:31 - will be starting a react native series
107:34 - don't worry we've got we'll keep you
107:35 - coming yeah this is we got you guys
107:37 - we got you stay tuned yeah give us a
107:39 - little bit of time you know
107:40 - exactly that's it um
107:43 - well it's got another donation from
107:45 - akshay kotish appreciate that dude
107:47 - thank you so much wow we just crossed
107:49 - the 100 mark guys
107:54 - nice that's
107:58 - awesome dude thank you so much guys
108:01 - alright so now let's continue on so we
108:04 - we get the response back right
108:06 - so what i want to do is with that
108:08 - response uh i want to basically capture
108:10 - those requests uh the the results so i'm
108:12 - going to set the movies
108:14 - to the request request oops request dot
108:19 - data dot results because that's that's
108:22 - this list that we see right here right
108:24 - so inside the results
108:25 - now what i'm going to do after that is
108:27 - i'm going to say return
108:28 - request and that will basically jump out
108:30 - of that async function
108:32 - and it does what we need to do okay so
108:34 - this one is always going to get the
108:36 - action movies
108:37 - right so we're going to make a change
108:38 - here afterwards but it's always for now
108:40 - it's always going to get the action
108:41 - movies
108:42 - so i'm going to save that and i'm going
108:44 - to close this
108:45 - and there you go so now it's loading out
108:47 - as many action movies as they're
108:48 - actually returning but
108:49 - it doesn't look like that it's what we
108:51 - see is profitable javascript right
108:53 - so link is in the description if you
108:55 - want to check it out
108:58 - thank you guys so much if you guys are
109:00 - enjoying this content really you're
109:01 - gonna get a lot of value from profit
109:03 - with javascript it's the second link in
109:04 - the description below
109:06 - if you don't want to check out the sales
109:07 - page we do got the one hour free
109:09 - training for you guys that can actually
109:11 - help you become a
109:12 - profitable javascript developer so check
109:14 - that out guys exactly this is in the
109:16 - description guys make sure you check out
109:17 - free training
109:18 - so like even like these videos
109:20 - everything that's free is awesome so
109:22 - really really nice so so now we've got
109:25 - we've got the movies being updated right
109:28 - but we need to basically pass that movie
109:30 - into
109:31 - the the actual component so right here
109:33 - we're not actually passing it in
109:34 - so to get that working i'm just going to
109:36 - say movie equals
109:38 - movie and basically what we're doing
109:40 - here just to explain so remember we
109:42 - pulled in those movies from that
109:43 - response then
109:45 - now this is an array of those results
109:47 - right um
109:48 - what we're going to say is we're mapping
109:49 - through and each of the movie items so
109:52 - every time we iterate through it it's
109:53 - going to give us a new movie item
109:55 - we're saying go to the video card
109:56 - component and basically just pass in
109:58 - that movie as a prop
110:00 - so jump inside the video because we need
110:02 - to save that jump beside a video card
110:04 - and we get the movie here
110:05 - now what we can do here is
110:08 - we can actually do some clever stuff now
110:10 - we can go in here we can say
110:12 - for the movie title rather than just
110:14 - saying movie title
110:15 - we can actually go ahead and do the
110:17 - following so firstly
110:19 - let's actually change the images right
110:21 - because the images are going to be the
110:22 - most apparent thing to change so we're
110:24 - going to go ahead
110:24 - grab this change this to our jsx
110:28 - and then we're going to say for the
110:30 - images by the way
110:31 - they give us a like the end of a url
110:34 - right so they give us the end of a url
110:37 - but
110:38 - the end of the url isn't everything so
110:40 - obviously any link
110:42 - has some kind of base url for the images
110:45 - this is the base url that you're going
110:46 - to need to use
110:47 - they don't tell you this in the api very
110:49 - easily so you have to dig deep so just
110:52 - save the time and use this one that i
110:53 - show you so this is going to be the base
110:55 - url and then here what you say is
110:57 - let's just use backticks and let's just
110:59 - say base url
111:01 - so uh base on this url so base url
111:06 - and then we're going to say
111:09 - um oops sorry basically i'm going to say
111:11 - movie
111:12 - dot in this called backdrop path right
111:15 - so
111:16 - some films have a backdrop path so if i
111:19 - save this
111:21 - boom look at that we start getting some
111:22 - of the films in
111:24 - oh wow amazing so you can see it's
111:27 - actually working right like it's
111:28 - actually pulling in the films
111:29 - and it's actually like showing that on
111:31 - the on the screen which is awesome um
111:34 - the images yeah pulling in the the
111:36 - images which is nice
111:37 - so that's working but some films guys
111:40 - don't actually provide a
111:42 - backdrop part so what we can do instead
111:45 - is say if they don't have that so if
111:48 - there isn't a backdrop part oops
111:51 - go ahead and try and find the movie
111:54 - oh damn it let's go ahead and try and
111:56 - find the movie dot
111:57 - poster path so i i saved you a bunch of
112:01 - time and i went ahead and i looked for
112:02 - that
112:03 - um so some of the movies which didn't
112:04 - have a backdrop off had something called
112:06 - poster path
112:07 - so this is how you say this is saying
112:08 - either use this if you can find it or
112:11 - fall back to this and you can actually
112:12 - keep on chaining so you can say after
112:14 - that if they don't have that use this or
112:16 - you can put a placeholder there if they
112:17 - didn't which would be kind of a clean
112:19 - solution
112:20 - um and there's another one actually so
112:22 - there's poster path
112:24 - uh yeah so it's just postpartum nice and
112:27 - then
112:27 - here we can just say movie uh movie
112:31 - let's just say movie poster alternative
112:33 - something
112:34 - like that right so this is awesome so
112:36 - look at that we get everything pulling
112:37 - in
112:37 - starting to look really clean if we make
112:39 - this a bit full screen you see oh look
112:40 - at that it's starting to look
112:42 - starting to get there right so now
112:45 - what we can do is for the p tag i'm
112:47 - going to change it
112:49 - to basically this p tag we're going to
112:51 - make this p tag
112:52 - kind of like kind of like powerful in
112:55 - what you can do right so the first thing
112:56 - we're going to do is i'm going to do
112:58 - some jsx i'm going to say
112:59 - show the movie release date or the first
113:02 - air date
113:03 - right so show like the movie release
113:04 - date of the first because this is what
113:06 - they do in that one
113:07 - so i'm going to say show that or show
113:08 - that right so if we save it
113:11 - you'll see it shows the oh sorry this is
113:15 - not the right one i need to do it on
113:16 - this is actually the wrong one this one
113:18 - should be the film this is the overview
113:22 - for the overview we have movie overview
113:25 - so here
113:26 - so this one is actually movie overview
113:29 - so if i save that
113:30 - you'll now see that you get a nice long
113:32 - overview of the films
113:34 - okay and then you can see if we go to
113:38 - um but notice guys that this is
113:40 - something i want to show you so
113:42 - these mo movie overviews look at that
113:43 - it's just they're just way too long
113:45 - right like no you never see this on the
113:48 - website it's always like truncated so
113:50 - you get this dot dot dot
113:52 - all right now i'm going to show you how
113:54 - you truncate right so truncate is the
113:56 - process of basically when something's
113:58 - too long or if something goes over
114:00 - one line then you can basically truncate
114:02 - so you just add that dot dot dot
114:04 - right which gives a much nicer
114:05 - experience than this because like
114:07 - this is just ugly right now yeah it's
114:09 - too much going on
114:11 - so we are going to install
114:14 - something over here and we're going to
114:15 - install something called
114:18 - react text truncate so
114:21 - you need to go into your um terminal so
114:24 - let's go into our terminal let's go here
114:26 - and let's do mpm i and it's
114:29 - react text truncate so we're going to
114:32 - install that
114:33 - and while that's installing what we're
114:35 - going to do is we're going to go to the
114:36 - top
114:36 - i'm going to go import text truncate
114:38 - from react text junkie
114:40 - and we're basically going to pop this in
114:42 - instead of our p tag so
114:44 - i'm going to replace the p tag i'm going
114:45 - to have both so i can show you the
114:47 - example
114:48 - and what this is saying is it takes some
114:50 - props it takes it says if it goes over
114:51 - one line
114:54 - basically choose an element which is a p
114:56 - tag
114:58 - this is the text that i want to sort of
114:59 - render and once it goes over one line
115:01 - truncate it with this
115:03 - three dots oh yeah so you can choose
115:05 - anything pretty much if you want
115:07 - yeah exactly you could be like one two
115:08 - three or anything you want
115:10 - exactly and i'll show you that actually
115:12 - so now if we
115:13 - get rid of that and we do this now
115:15 - you'll see look at that
115:16 - after it goes past one and if we change
115:18 - this to two lines
115:22 - it truncates after two lines beautiful
115:24 - so
115:25 - really really powerful stuff here and
115:26 - like if you do that and like frankie
115:27 - said if you want to change this to like
115:28 - one two three
115:31 - you see it says one two three at the end
115:32 - of it wow
115:34 - yeah so this is like the power of using
115:36 - like code so
115:38 - that's that's why even some some apps
115:40 - actually show
115:41 - parentheses learn more right and you can
115:44 - actually
115:45 - you know click on it if you do want to
115:47 - see more so you can you can handle it
115:48 - different ways
115:49 - so that's a great way that's a really
115:51 - good thing frankie just said i think
115:52 - that
115:53 - actually made me want to show the actual
115:55 - demo so
115:57 - react text truncate when you actually
115:58 - use it gives you
116:00 - um two and another functionality which
116:03 - is actually what exactly what frankie
116:04 - just said
116:05 - and what you can do is you can say text
116:07 - truncate child
116:09 - right like this and like just go ahead
116:10 - and do this and this will actually be
116:12 - like an anchor tag which is like read on
116:14 - so if i say wow
116:15 - that's a little link nice hey look at
116:17 - that and it actually goes
116:18 - wow that's cool right and you could
116:21 - probably get that link from the api and
116:22 - that would actually give you the read-on
116:24 - functionality
116:26 - so i like that see frankie's already in
116:29 - the right head space with that so like
116:31 - they they thought of that as well and
116:32 - then they uh
116:34 - yeah i think that's really handy thing
116:36 - because actually
116:37 - truncating something like this is a
116:39 - little bit harder in css you can do it
116:41 - but there is a bit of a sort of annoying
116:43 - side to it
116:44 - that i've experienced personally use
116:46 - something called ellipsis but it's kind
116:47 - of annoying to do that
116:49 - uh okay so now what we're doing is guys
116:51 - i see somebody says i don't know
116:52 - actually what's going on so
116:53 - we're actually we're plugging in the
116:55 - movie title and the number of likes from
116:57 - the api so we've done the pictures
116:58 - and the description uh the movie title
117:01 - is very simple
117:02 - we're actually going to say either get
117:04 - the movie title or the original name
117:06 - so here the movie title or the original
117:09 - name
117:09 - let's go ahead and save that now you can
117:12 - see project power
117:13 - tenet sleepover teenage mutant ninja
117:15 - turtles rogue
117:17 - nice right so everything's working and
117:20 - for the p
117:20 - tag what i'm going to do is i'm going to
117:23 - go ahead and do the following so the
117:24 - first thing is i want to do a movie
117:26 - vote count so here i'm going to say this
117:29 - is
117:29 - the vote count so this is the number of
117:31 - votes
117:33 - so you can see 727 34 4.49 and so forth
117:37 - so that's really cool and what we can do
117:39 - is
117:40 - i'm going to use a logo from material ui
117:42 - so an icon from material ui
117:44 - and this one's called the thumbs up
117:46 - sharp icon so let's go ahead and import
117:48 - that
117:49 - thumbs up sharp and down here
117:52 - what we can do is we can actually go
117:53 - ahead and do this we can say thumbs up
117:55 - sharp
117:56 - like this inside of our p tag and now
118:00 - we should see um
118:04 - it's probably probably compiling
118:08 - but we should see in a second that
118:09 - there'll be a thumbs up and then it'll
118:10 - say 34 which signifies that it's likes
118:13 - that we're talking about
118:14 - right so it should be very clear and it
118:16 - should be up in a second
118:18 - and then what we're going to do is we
118:21 - want it so that
118:22 - when we have the the we can have the
118:24 - movie type
118:25 - so in some cases the movie type isn't
118:27 - available so here what i'm going to say
118:29 - is i'm going to say only show the movie
118:31 - type and then the little black dot
118:33 - if it's available so here only show if
118:36 - you have the media type available
118:38 - only then show the media type and then
118:41 - render a little black dot next to it
118:43 - the black dots a sort of separator that
118:45 - we're using okay
118:46 - so let me see what's going on here so
118:48 - let's go ahead and go to node
118:49 - it says compiling so i'm going to cancel
118:51 - it do npm start sometimes it can get
118:53 - hung
118:56 - so you can get a little bit hung up
119:00 - duh nice so
119:03 - we got it says nano says there's a
119:06 - vue.js truncate library
119:08 - also oh nice yeah full library for that
119:11 - yeah there's a lot of libraries like in
119:13 - react and angular view is
119:15 - even just pure javascript libraries like
119:17 - node.js libraries
119:18 - that you can use uh a lot of this stuff
119:20 - has been built previously so
119:22 - what i'll say is rather than sort of
119:23 - rewriting everything just go ahead and
119:25 - use something if you can
119:26 - sometimes um sometimes i don't always do
119:29 - that
119:30 - um nice so i mean while this is starting
119:33 - up i don't know why that's taking
119:34 - extra long for some reason but it should
119:36 - come in soon
119:37 - so we're gonna say if there's media
119:39 - there have that as well and then i'm
119:41 - also gonna say
119:41 - oh so there we go should pop in though
119:44 - hey there we go we got the likes
119:46 - right beautiful so it's really clean and
119:49 - now what we're going to say is next to
119:50 - the likes
119:51 - show either the release date or the
119:54 - first air date
119:55 - right and then actually render that
119:57 - little black dot after that so we're
119:59 - always going to show this one so i'm
120:00 - going to
120:00 - render that little black dot and now you
120:03 - actually see like a little sort of
120:04 - black dot pop up and then we're going to
120:06 - actually style this so it looks very
120:08 - nice
120:09 - just for simplicity purposes as we have
120:12 - two p tags we have one up here
120:14 - and one over here i'm going to give this
120:15 - one a class name
120:17 - so when we style it i can access it very
120:19 - easily so i'm going to go here
120:21 - and go ahead and give this a class name
120:23 - this one's going to be video card stats
120:26 - so let's go ahead and do this video card
120:27 - stats
120:29 - save it and with that said
120:32 - i'm going to now make this look i mean
120:35 - it's already looking pretty good to be
120:36 - fair i mean it's amazing yeah i think
120:38 - it's just we just have to target the
120:39 - video
120:40 - card stats so a video card go over here
120:43 - and let's go ahead and go to your video
120:45 - card stats nice
120:46 - and what i'm going to say is oh that's
120:49 - it yeah so
120:50 - for this one we actually want to make it
120:52 - so that
120:53 - so right now it's actually kind of
120:54 - squished together whereas in the final
120:57 - in this build it's not fully squished
120:59 - together it's a little bit bigger right
121:01 - so in order to get it looking like that
121:03 - we're going to basically go ahead and
121:04 - say
121:06 - um we didn't actually change the font
121:09 - size
121:10 - okay strange but basically what i want
121:11 - to do is i don't want to show it all the
121:13 - time
121:13 - right i don't want to show that all the
121:14 - time we want it to be
121:16 - essentially just showing when you hover
121:19 - over it so
121:20 - how do we do that we say by default
121:24 - hide the video stats right so hide the
121:26 - video card stats so by default
121:28 - hide the video card stats if i save that
121:31 - you'll see
121:31 - it's disappeared now right it's
121:33 - disappeared it's not there
121:35 - and then what we're going to say is okay
121:38 - when you hover over the video card
121:40 - so when we i love that
121:43 - what's that i love that functionality
121:45 - yeah i love that function like the hover
121:46 - functionality it's so clean yeah it's
121:48 - nice right yeah
121:49 - we're saying now when we hover over it
121:51 - target the video cover stats
121:53 - and basically change it to display
121:55 - inline
121:57 - so what this does is simple as that
122:02 - boom
122:04 - and you get that functionality you just
122:05 - get that functionality just like that
122:08 - all right which is awesome like it's
122:10 - really clean it's really nice
122:12 - uh and i think what we'll do here is i
122:14 - just want to add a
122:15 - space manually or like here
122:19 - let's add some spaces oh it's all it's
122:21 - pretty fine and that's why
122:24 - that's fine okay so adding that
122:28 - that little bullet point is adding space
122:30 - adding spaces
122:31 - no no so i added a manual space here uh
122:34 - but this is nice
122:35 - it's just like a little breaker you see
122:36 - like in the actual thing it's like a
122:38 - little sort of
122:39 - just a separator so that's the only
122:41 - reason why i added that little thing
122:43 - that's because i used it in the actual
122:44 - build as well but this is nice now guys
122:46 - because look
122:47 - you're not spammed with those extra
122:49 - details except when you hover over it
122:51 - so okay you see this one's got 34 likes
122:53 - okay this must be a decent film
122:54 - but let's go to like teenage mutant
122:56 - ninja turtles is 5 000 likes this must
122:58 - be a better film
122:59 - right and then avengers infinity award
123:01 - just takes it somewhere to a different
123:02 - level
123:03 - yeah like so you see like you've got
123:06 - like
123:06 - a very nice ui now and we're actually
123:08 - getting i mean we're almost there right
123:10 - but
123:10 - when we click these nothing's happening
123:12 - right nothing's happening
123:15 - but what we want is we want it to be
123:16 - like this so when i click like comedy
123:18 - it goes ahead renders comedy if i click
123:20 - this if i click this
123:21 - you get this nice sort of functionality
123:23 - right
123:24 - so this is where we need to sort of step
123:27 - out a bit and
123:28 - adjust our code tab just a little bit
123:30 - right
123:31 - so let's go back to our
123:34 - results right so our results suggest
123:38 - now inside of results.js what we did
123:40 - previously is we said always get the
123:42 - action movies
123:43 - right but what we're going to do is we
123:45 - want to customize the results
123:47 - so that it takes a prop called selected
123:50 - option
123:51 - right selected options that gets it from
123:54 - the actual navbar
123:55 - yeah exactly so this is going to be part
123:58 - we're basically going to pass something
123:59 - from the nav bar
124:01 - and we're going to like basically this
124:03 - will be
124:04 - that value right so we're just going to
124:06 - say selected
124:09 - option goes here right oops next option
124:14 - like this right now if we save this now
124:17 - you'll see that it has nothing
124:21 - because it it doesn't have a selected
124:22 - option which means that the request
124:24 - basically gets nothing back
124:26 - right but this is good for what we want
124:28 - right this is good for now this is good
124:30 - for now so what we can do is we go back
124:31 - to app.js
124:33 - and you can see here this is where we
124:34 - have the three main components we spoke
124:36 - about earlier now
124:38 - at that at the app level this is where i
124:40 - was saying don't over complicate it guys
124:41 - like don't over complicate by
124:43 - introducing react context api and stuff
124:44 - like that just for this build
124:46 - i'm going to show you how you can just
124:47 - use state to get the desired effect we
124:49 - want so
124:50 - that exact same selected option i'm
124:53 - going to go ahead and create
124:55 - a piece of state here and i'm going to
124:57 - say
124:58 - const selected option
125:02 - selected option and we'll say here set
125:05 - selected option
125:07 - like this and now here i'm going to say
125:09 - use state right so we're using a piece
125:11 - of state here
125:12 - and by default i'm going to give this an
125:13 - empty string right empty string here
125:16 - now it says use state is not defined so
125:18 - i'm going to go ahead and do a little
125:19 - import trick
125:20 - boom i've imported it at the top and we
125:22 - should be able to now see
125:24 - still blank all right it's still blank
125:26 - so
125:28 - why is this happening so firstly we need
125:30 - to pass the selected option as the prop
125:32 - down to results
125:34 - it's still blank why is it still blank
125:37 - because
125:38 - remember we it doesn't have anything to
125:40 - fetch from
125:41 - right so what we need to do is we need
125:42 - to say the the first value
125:45 - should be for example like rest results
125:48 - dot fetch trending for example
125:51 - right so this is going to say the first
125:53 - value should be uh
125:55 - result request.fetchtrain so now when it
125:57 - loads the first thing it does is it has
125:59 - that request.fetch trending which is
126:01 - actually
126:02 - the that one right here so you see where
126:03 - it's like force trending
126:05 - with the api key and stuff right so
126:07 - that's the initial value which means
126:08 - that when you come onto the app
126:10 - it's going to get you the trending one
126:12 - first which is actually makes sense
126:13 - because it's the first value here
126:15 - right yep that's beautiful and you got
126:18 - to make it easy for your users too you
126:19 - know so
126:20 - it would be better for your website to
126:22 - show the trending movies so that they
126:23 - can get an idea of you know
126:25 - what else is there what's popular right
126:27 - now and then from there they can choose
126:28 - you know going into comedy going
126:30 - into action and you know it gives you a
126:32 - good insight
126:33 - exactly exactly so now what we can do
126:37 - to sort of make this nicer is we can go
126:39 - to the nub bar
126:40 - and we can actually pass in this
126:42 - modifier so many people don't know you
126:44 - can actually pass a modifier
126:46 - as a prop so here the navbar is going to
126:49 - get a mod
126:50 - a prop called set selected uh option so
126:52 - here
126:53 - we pass in this and this will allow us
126:55 - to change the state
126:57 - of that selected option all right now
127:00 - what we can do is inside of the nav
127:02 - what we can actually say is on the click
127:05 - so for example here
127:07 - i can say on click oops on
127:10 - click fire off a function
127:14 - and then this function is going to be
127:15 - set to select
127:17 - that's mind-blowing man that's awesome
127:20 - it's powerful right
127:21 - and then here we're going to say you're
127:23 - wrapping up or
127:24 - putting that set select option inside of
127:26 - the h2 tags
127:28 - yeah exactly so we're using we're
127:29 - passing it through
127:31 - and then now what's happening is if i
127:33 - just make this sort of bigger so we can
127:35 - see on one line
127:36 - you can see now so when we click this
127:37 - one it's going to set the selected
127:39 - option to the fetch trending
127:41 - right and because this is the modifier
127:43 - for that piece of state up in app.js
127:46 - this selected option now changes which
127:48 - means that this one
127:49 - gets fed a different url
127:53 - right so it's a very very sort of
127:55 - mind-blowing man that's amazing
127:57 - yes it's super clean exactly super super
128:00 - clean
128:01 - and what we're going to do here is i'm
128:02 - going to do another one which has
128:04 - set it to top rated fetch top braid so
128:08 - set to fetch top rated save it and now
128:11 - just to prove that this works guys
128:12 - before i do the rest of them
128:14 - so you see here it says hang on in
128:16 - results.js react hook use effect is
128:18 - missing a dependency select option
128:20 - very important line here right
128:23 - super important line remember when we
128:26 - changed
128:27 - the selected option over here right
128:30 - because this is a parameter outside of
128:32 - the use effect
128:33 - right we have to say it's a dependency
128:36 - because this use effect
128:38 - depends on this variable which comes
128:40 - from outside so it's basically saying
128:42 - that like if this variable changes
128:44 - you now need to update this code because
128:46 - you can't keep running the old one
128:48 - react you have to tell it what it's
128:49 - dependent on so this one is dependent on
128:51 - select option selected options now if i
128:53 - save this you'll see the warning would
128:54 - disappear yeah
128:58 - and with that said what we can do is we
129:00 - can actually go ahead and test this
129:01 - we can go ahead and go here and now if i
129:03 - click on top braided
129:06 - hey so now let's go
129:09 - look at that trending top rated all
129:12 - right
129:12 - now now you can see it's a little bit
129:14 - glitchy though right it's a little bit
129:16 - kind of like i mean it looks a little
129:17 - bit
129:18 - weird how it's swapping it just a little
129:19 - bit to refresh huh yeah like it's a
129:20 - little bit weird how it swaps them out
129:22 - and obviously i'll do these ones
129:23 - afterwards but this
129:24 - initial thing is a bit like why is it a
129:26 - little bit kind of glitchy and the
129:27 - reason why
129:28 - it's glitchy is because when we actually
129:30 - map them out we should be passing
129:31 - something called a key
129:33 - right now each movie has an id so the
129:36 - the key should be this is a reacting and
129:38 - this is basically telling react
129:40 - uh when this big list of things
129:42 - re-renders
129:43 - is everything unique or is it like can
129:46 - we how can i identify if you don't pass
129:48 - a key
129:49 - react kind of goes like oh my god okay
129:51 - i'm just going to re-render the entire
129:52 - list
129:53 - because i don't know what's going on but
129:54 - if you pass a key in it knows that okay
129:56 - this is the same component i don't need
129:58 - to change that one
129:59 - this one okay this one's changed i need
130:00 - to change that one so you see like
130:03 - it changes a little bit so here i'm
130:04 - going to say the movie id is the key so
130:06 - if we save that now
130:07 - and do this now you should be able to
130:09 - notice that
130:11 - it will be a little bit slicker so you
130:12 - see like actually it doesn't have that
130:14 - jarry glitchiness to it it paces itself
130:17 - it just swaps the entire thing out right
130:20 - and you see and what it does there is it
130:21 - actually does some very clever caching
130:23 - under the hood
130:24 - right so under the hood now you see like
130:26 - now when it loads
130:28 - it doesn't have to reload the images
130:30 - because it is in like it actually caches
130:32 - them in a local memory
130:34 - and it loads it super nicely as you see
130:36 - that once it loads it once it just snaps
130:38 - in
130:39 - right so what we can do now is we can
130:42 - finish off the implementation of the
130:44 - additional endpoints so we can go to
130:47 - um we can go to number and by the way
130:51 - guys
130:51 - we just reached 1.1k likes thank you
130:54 - guys
130:55 - so much man we just keep growing it's
130:57 - insane thank you
130:58 - fam we love you honestly the support
131:02 - today has been unreal so like
131:04 - really really crazy stuff nice so now
131:07 - what i'm going to do is
131:08 - let's really feed them yeah i'm gonna go
131:10 - ahead and copy an entire snippet that i
131:12 - have right here
131:13 - and i will pause it on the screen so you
131:14 - guys can see it all i'm doing is i'm
131:16 - adding on clicks to everything here
131:18 - so just showing you guys so you can see
131:21 - you've got the
131:22 - trending and you can just pause the
131:23 - video and see as you do it
131:25 - and here you can see we've got the
131:27 - second option and we're just fetching
131:29 - different
131:29 - endpoints you see like because we set
131:31 - everything up in the beginning
131:33 - this is why our code is maintainable
131:34 - it's very easy to understand what's
131:36 - going on here
131:37 - right it's very easy to understand that
131:38 - like okay this is doing this
131:40 - you see inside of requests like you can
131:42 - see all the the exports
131:44 - right so it's really really powerful way
131:45 - of doing things and it uses our api key
131:48 - which is awesome
131:49 - right so if we save this now go back
131:51 - over here
131:53 - and we make this one full screen now if
131:55 - i do for example romance horror
131:57 - mystery you see this everything works
131:59 - like we've got a full app that's just
132:01 - working super nice
132:02 - super responsive now everything's a bit
132:05 - snappy
132:06 - right now right whereas in this app you
132:09 - see
132:09 - everything kind of had it has that
132:10 - little animation
132:12 - yeah yeah when that animation kind of is
132:14 - like a finishing touch it kind of
132:16 - it makes it like well okay this is an
132:17 - app not just a website
132:19 - that's beautiful yeah yeah what is it
132:21 - look what is it called or what
132:22 - so this is called react flip kit right
132:25 - i'm sure it's freak flip kit so
132:27 - uh we call this react uh flipkart and
132:29 - the way we basically do this
132:31 - is i will show you guys so we basically
132:33 - i think it's called react
132:34 - flip kit
132:37 - yep and this is a extremely rat flip
132:41 - tool kit i think it is yeah maybe
132:42 - yes this one right called toolkit and
132:44 - this is basically a very powerful way of
132:46 - re-rendering lists okay
132:48 - now uh no it's not this one sorry wow
132:51 - is it no it's not that one is it looks
132:53 - similar yeah i think it's similar to
132:54 - that one yeah but this one
132:56 - is actually react flip move
132:59 - react move yeah so the one that we're
133:01 - looking for is this one react flip move
133:04 - now over here this is effortless
133:06 - animation and it is effortless animation
133:08 - you just need to learn how to do it once
133:09 - and you do it very well
133:11 - so what we're going to do is we're going
133:12 - to install it so to install it we need
133:14 - to do npm i
133:15 - react flip move and you don't need to do
133:18 - dash save anymore so dash
133:19 - s we can actually just go ahead and do
133:22 - this so
133:23 - here we can do command j to bring it up
133:25 - go to our second
133:27 - terminal go up here we say npm oops
133:30 - mpmi react flip move that will install
133:33 - react move into our project
133:36 - and then the first step is we need to
133:39 - basically we have a functional component
133:42 - right we have a functional component
133:43 - over uh inside of our video our video
133:46 - card is the thing that we want to
133:48 - animate
133:49 - right so the video card we're referring
133:51 - to is this so this thing is what we want
133:53 - to animate
133:55 - right so what we need to do is we need
133:56 - to use something called a forward ref
133:58 - right now in react it's not as
134:00 - complicated as it sounds
134:01 - all you need to do is follow my steps of
134:04 - what i'm doing right here right
134:06 - so you just need to why is keynote
134:08 - opening up on my laptop
134:09 - what's going on okay so now here i just
134:12 - need to go
134:12 - change this to your es6 uh arrow
134:14 - function so i say const
134:16 - video card equals
134:19 - like this and arrow and you can see like
134:22 - everything
134:23 - works the exact same nothing broke
134:24 - nothing changed and then we need to do
134:26 - something called uh
134:28 - we need to add a forward ref now all the
134:30 - forward ref is doing
134:32 - to make it very simple but simply put is
134:35 - in
134:36 - plain html we basically we can refer to
134:39 - elements
134:40 - in by using something called references
134:42 - we can say this is this imagine it's
134:43 - like a big pointer right
134:45 - it's what tells like the browser that
134:48 - this is this
134:48 - this item this is this item so in this
134:50 - case we need to add something called a
134:52 - forward ref
134:53 - we imported from react at the top and
134:56 - basically all you need to do is add a
134:57 - open
134:58 - opening bracket here so opening bracket
135:00 - over here scroll down
135:02 - go to your ending curly brace and add an
135:05 - opening bracket around that
135:07 - and then at the top next to your
135:10 - uh props destructuring you basically get
135:13 - this new property called a ref
135:15 - right now this is basically like a big
135:17 - fat pointer
135:18 - all it does is it points at stuff on
135:21 - your page right so imagine it's just
135:22 - something which is pointing at your page
135:24 - now with just basically all we need to
135:26 - do is attach this
135:28 - to the outer div for the video card and
135:31 - that's
135:31 - all there is to basically getting the
135:34 - reference to that that video card so now
135:37 - react has a way of saying
135:38 - this is this video card this is this
135:40 - video card this is this video card
135:43 - now why is that important because the
135:44 - way that these guys implemented this
135:47 - to actually finish and to get everything
135:49 - working now all we need to do is go to
135:51 - results.js so let's go over to our
135:54 - results.js
135:55 - uh we need to import flip move from
135:57 - react flip move because we just
135:58 - installed it from npm so here we go
136:00 - import flip move from react flip move
136:03 - and then
136:04 - this is how crazy it is guys like to get
136:06 - that animation right so
136:08 - this is before without the animation so
136:11 - just to give you a quick demonstration
136:13 - you can see it's very snappy
136:16 - it just it looks like a website right it
136:17 - doesn't look like an app it looks like a
136:19 - website
136:20 - now you're right yeah but all we need to
136:23 - do now
136:24 - is add this we add flip move
136:28 - like this and i basically put this
136:31 - entire
136:32 - mapping inside a flip move that's
136:35 - it because we have that forward ref and
136:38 - react knows how to
136:39 - point at which elements now now if you
136:41 - see
136:42 - okay so this is so you see it actually
136:44 - works right
136:45 - it works really well but something's
136:48 - clearly wrong
136:49 - right yeah i mean the animations there
136:52 - the animation is really clean right it
136:54 - works really well
136:55 - but it's put it into a list and the
136:58 - reason why this has happened guys is
137:00 - because if we look at our code
137:02 - all right we have results right we have
137:05 - results
137:06 - here in css and we've done display flex
137:08 - on results
137:10 - now we're wondering why isn't this in a
137:11 - row because when we added the react flip
137:14 - move library
137:15 - what it did is it actually added so this
137:17 - is results
137:18 - it added another div which means that
137:22 - it is actually doing it but now instead
137:24 - of targeting results
137:25 - what we need to do is go ahead and
137:28 - target
137:29 - the following we need to go ahead and
137:30 - say results
137:33 - go inside that div that they added and
137:35 - then do that
137:38 - and now if we save it yeah we get this
137:41 - and if we do comedy
137:43 - it says click on comedy or we're already
137:45 - uncomfortable it's too horror
137:47 - hey look at that um let's go
137:51 - that's awesome damn that's beautiful and
137:53 - now that looks like it so
137:55 - we just took it with that one additional
137:57 - step
137:58 - from looking like a website to an actual
138:01 - app
138:02 - right so it's an actual sort of
138:03 - functional app whereas before it looked
138:06 - like an actual website it just looked
138:07 - like a normal website but now it's like
138:09 - this is the kind of thing you would see
138:10 - on like amazon prime you know when you
138:12 - you got those yeah when you got those
138:15 - when you're on your tv and you've got
138:16 - that little pointer that you sort of
138:17 - click on things and
138:19 - you know that this would look amazing on
138:20 - tv man i love it yeah this would be
138:22 - awesome
138:23 - we are at we are in 1193 likes we're
138:27 - about to break 1.2 k likes
138:29 - so hit that smash button if you guys
138:32 - really enjoy
138:32 - sunny's styling abilities this is insane
138:35 - guys i love how this looks thank you
138:37 - guys so much
138:38 - yeah this has been awesome like uh we
138:40 - actually got a comment from knowledge
138:42 - itself
138:42 - saying it's amazing thank you so much
138:49 - just a bit of fun yeah nice so i think
138:52 - we actually got two like two people
138:54 - joined uh
138:55 - when we watch if you joined when we
138:57 - while you're watching this let us know
138:59 - in the comments guys
139:00 - uh oh yeah so i see ben whitney thank
139:02 - you so much for joining man we really
139:04 - really appreciate you and then we
139:06 - see devon das yeah thank you so much
139:08 - three minutes ago
139:09 - and then 26 minutes ago i don't know if
139:11 - you guys can see
139:12 - that's insane love that
139:16 - thank you guys oh nice david john okay
139:18 - so david jonathan
139:20 - is actually on the pwj course right uh
139:22 - and he says hey guys i want to say that
139:24 - if you're still thinking about signing
139:25 - up for the pwg course i haven't decided
139:27 - that and you're missing
139:28 - it's the in best investment you can make
139:31 - on yourself in 2020
139:32 - so like guys you heard it yourself david
139:34 - johnson is an amazing student
139:36 - uh i was actually chatting to him last
139:37 - week um
139:39 - you know coaching i'll be speaking to
139:41 - him right after this because we have a
139:42 - coaching call right after this session
139:44 - so amazing stuff david no breaks give it
139:47 - up for sunny guys thank you so much
139:48 - and guess what we just broke the 1.2k
139:51 - legs
139:51 - hey let's go
139:55 - guys for being so active and always you
139:58 - know following everything that we're
139:59 - doing we're putting out for you guys
140:01 - really really really appreciate it nice
140:03 - that's awesome dude exactly that we
140:05 - really really appreciate you guys
140:07 - uh his majesty said joined about 30
140:10 - minutes ago
140:11 - is that is that is that ben i'm
140:14 - wondering is that bad
140:17 - yeah i think that might be ben whitney
140:18 - then yeah and then i see just
140:20 - just now at this moment rashmita khatri
140:23 - just joined
140:24 - wow thank you so much rashmita we
140:26 - appreciate you
140:27 - nice that's amazing dude this is awesome
140:30 - part of the family now
140:31 - yeah exactly frank says this build is so
140:34 - clean better than netflix because of
140:35 - axios awesome dude
140:37 - glad you found that frank's another
140:39 - amazing inside of the course
140:40 - um he's not actually even a student guys
140:42 - frank is somebody who's been in the
140:44 - industry for like 10 years
140:45 - and he's now part a part of the pwg
140:48 - community and he's like
140:49 - upgrading his knowledge on react and his
140:51 - knowledge in javascript so
140:53 - by joining pwj you're literally being
140:55 - surrounded by this community of like
140:57 - awesome developers
140:58 - so this is this is great like and and
141:00 - what's insane too was that
141:01 - frank shared in a few live streams back
141:03 - he said that he landed
141:05 - a six-figure contract with sonos
141:08 - as a consultant to build their radio
141:10 - station
141:11 - app wow we were just mind blown guys
141:14 - frank is an amazing student amazing
141:17 - asset to our community and
141:18 - you know people like him are people that
141:20 - are consuming this type of content and
141:22 - actually putting it in their portfolios
141:24 - he got it
141:25 - he actually he said that he got that job
141:27 - from building the spotify app which is
141:29 - amazing guys thank you guys so much
141:33 - keep at it put in the work yeah honestly
141:35 - when frank dropped that news we
141:37 - literally i think like qazi was up on
141:38 - his chair jumping with that frankie
141:40 - i was over at this side i was going
141:42 - crazy i was like oh my god
141:44 - yeah like this guy dr frank made a
141:46 - six-figure contract
141:47 - happen like with with just you by
141:49 - showing them the spotify clown so
141:51 - guys like this these projects have a lot
141:52 - of value you can see that a lot of
141:54 - people
141:54 - sort of benefit from so if you do all we
141:56 - ask is that you just smash the thumbs up
141:58 - button
141:59 - that is it that's all we ask guys smash
142:01 - the thumbs up button and if you haven't
142:03 - already
142:03 - there is some kind of voting going on
142:05 - right now i think it's hackernoon maybe
142:07 - um
142:08 - yep yeah but that would be awesome if
142:09 - you guys can vote for the channel
142:10 - because that is yeah that's crazy
142:12 - nice so hills from i'll drop in i'll
142:14 - drop the link in the chat so you guys
142:15 - can go
142:16 - vote it's this link right now in this
142:18 - moment yeah so go in now
142:20 - go vote and then come back to the stream
142:22 - yeah that's it guys literally if you can
142:24 - literally just go to that link right now
142:26 - in the description
142:27 - uh drop a like a vote for us that'll be
142:29 - amazing and it'll be awesome that
142:31 - like all of us can win that award
142:33 - together that'll be awesome
142:34 - so hell is somebody from the uh pwg team
142:37 - uh team as well he said hey sonny i'm
142:39 - sorry from pwj
142:40 - i want to tell you that you're awesome
142:41 - bro thank you dude and i'll see you in
142:42 - the uh
142:43 - coaching call straight after this that's
142:45 - awesome
142:46 - nice oh dude this has been amazing right
142:49 - i think
142:50 - with that said we are now at the point
142:52 - where we can deploy this thing right we
142:54 - can deploy this app
142:56 - all right my favorite part so guys like
142:58 - if you guys are pumped for this like let
143:00 - us know in the comments like
143:01 - now what we're going to do is the fun
143:02 - part we're going to deploy this i'm
143:04 - going to show you how easy it is to
143:05 - deploy this with firebase
143:07 - so previously we set everything up on
143:09 - firebase we we went over here
143:11 - we created an account and guys beyond
143:13 - that we don't actually need to do
143:14 - anything more
143:15 - with the firebase panel so like we
143:17 - literally just need to do that one step
143:20 - what you do have to do though is run
143:22 - this command so
143:25 - here what you're gonna have to do is
143:26 - you're gonna say sudo npm
143:29 - install dash g saying globally
143:32 - firebase tools right and this one this
143:35 - will allow you to
143:36 - use the firebase cli so you need to do
143:38 - this and put in a password
143:41 - and basically once that works it will go
143:43 - ahead and it will install the firebase
143:44 - tools into your
143:46 - computer for you right now once you've
143:48 - done that you need to go ahead and do
143:50 - uh um firebase login
143:54 - right and what that will do is i didn't
143:56 - actually need to do this step i
143:57 - already did this earlier but it's fine i
143:58 - just want to show you guys from like
143:59 - start to finish you guys can see how we
144:01 - do it
144:02 - um there you go so you see it says
144:04 - updated package so i guess we did
144:06 - so you can say firebase login and then
144:08 - it will actually go ahead
144:10 - and i've already logged in so it says
144:12 - already logged in and i'm going to clear
144:13 - that
144:14 - quickly because i don't want to have my
144:15 - email up too long
144:17 - damn it please don't spam me guys
144:21 - yeah so now with that said what we're
144:23 - going to do is
144:25 - we're going to say firebase um init
144:28 - right and this initializes the firebase
144:30 - like sort of app for a project
144:32 - then you get this really nice cli right
144:34 - and if you make it big enough you
144:35 - actually get this massive firebase thing
144:37 - over here which is cool
144:39 - but now what we're going to do is we're
144:40 - going to say we're going to use the
144:41 - arrow keys go down to hosting click
144:43 - enter
144:44 - and then we're going to say use an
144:45 - existing project
144:47 - right and then we're going to scroll
144:49 - through and we basically need to go
144:51 - through and find the one today which is
144:52 - the hulu
144:53 - youtube clone right so i'm going to
144:55 - click on hulu youtube clone
144:57 - do that and then here's very important
145:00 - guys
145:00 - yeah so you want to make sure you type
145:02 - in build okay
145:04 - so build is extremely important as you
145:06 - see we've got build over here
145:08 - right so it says build and make sure
145:11 - that you do not mess this bit up because
145:12 - this is very important for what you need
145:14 - to do next
145:15 - so enter configure it as a single page
145:18 - app so we're going to type in why
145:19 - because every react app is a single page
145:21 - app
145:21 - so we're going to do this and then there
145:23 - you go it's done right
145:25 - so once we've done that now what we need
145:27 - to do is say npm
145:29 - run build right now what this is gonna
145:32 - do
145:32 - is oops what's happening here so it says
145:35 - npm
145:36 - this is no problem
145:41 - oh damn it oh damn it what i ended up
145:43 - doing oh i did a mistake that we did in
145:45 - earlier builds as well
145:46 - damn it what i did is actually make sure
145:48 - you're pushed make sure you're cd
145:50 - inside the right directory guys so you
145:53 - make sure you're inside of the hulu
145:54 - clone so
145:54 - to fix this if this ever happens to you
145:57 - to fix this i remember
145:58 - in the beginning actually somebody said
146:00 - that it was a comment
146:01 - right in the beginning really and i i
146:03 - actually ignored it yep somebody called
146:05 - it out in the beginning
146:06 - yeah it's a really like honestly it's a
146:08 - good point like that they made because
146:09 - uh
146:10 - what you have to do to fix this then you
146:11 - get rid of this you get rid of firebase
146:13 - rc
146:13 - get rid of the package lock um
146:17 - yeah get rid of that and then package
146:18 - json in this case
146:20 - what we're going to have to do now is
146:22 - we're going to have to go in here and we
146:23 - have to say npm
146:24 - right so we have a few dependencies that
146:26 - we installed you see they're not
146:27 - actually in our project now because we
146:29 - didn't we weren't in the right directory
146:31 - so we need to do a quick fix and i'm
146:32 - just going to install everything i'm
146:33 - saying material ui
146:34 - icons material ui core axios
146:38 - a few things that we need install and
146:39 - you'll see it will pop up in the
146:40 - dependencies over here
146:42 - right so let's go ahead and do that
146:44 - that's a silly mistake that we made and
146:46 - we've done that before as well like
146:48 - basically it should be completely fine
146:50 - while we're actually sort of fixing that
146:51 - uh we can actually go ahead and answer
146:53 - some questions
146:55 - um so let's go ahead and see so
146:58 - asan yasin says i'll watch every single
147:01 - stream you guys have made i joined today
147:03 - and i shocked
147:04 - and i shocked sunny is explaining in
147:06 - detail i loved it
147:08 - nice man that's wonderful so many people
147:11 - joining in today thank you guys
147:13 - let us know guys if you do end up
147:14 - joining profit with javascript we are
147:16 - pumped to have you we always want to
147:18 - grow this community
147:19 - it's insane and thank you so much 100
147:23 - guys is huge when you join uh let me try
147:26 - to mpmi axios
147:28 - uh what else do we install flip mpi flip
147:31 - move
147:33 - and you know guys we're we're doing
147:35 - we're having these mistakes ourselves so
147:37 - that you don't have to go through them
147:38 - so
147:39 - you know the best way to learn is really
147:41 - learning from your mistakes
147:42 - and even a better way to learn is
147:44 - learning from other people's mistakes
147:46 - you know exactly you're going to want to
147:47 - do
147:48 - that yeah and guys this is just proof
147:50 - that like even if you've been developing
147:51 - for ages
147:52 - small mistakes like big mistakes happen
147:55 - small mistakes happen it's completely
147:57 - natural and i actually like it when like
148:00 - a mistake happens on a live because i
148:01 - think it gives people the sort of like
148:03 - it crushes that misconception of like
148:05 - everything's perfect when they're coding
148:07 - like
148:07 - trust me guys yeah it's it always this
148:10 - stuff happens like it does happen
148:12 - it's a messy road yeah exactly let's see
148:14 - if we've got any more dependencies so
148:16 - we've got requests
148:17 - we're done oh god damn it okay that's
148:19 - fine we've got this one
148:21 - uh here we've got flip move axios we did
148:26 - asks please tell us again how to get an
148:28 - api key from tmdb
148:30 - we show that multiple times in the
148:32 - beginning of the video and then in the
148:33 - middle of the video as well
148:34 - yeah there's going to be under settings
148:36 - there's an api
148:38 - menu so check that out it's really
148:40 - simple
148:41 - just right here guys so this setting
148:43 - right here
148:44 - inside of your tmdb dashboard just make
148:48 - sure you go into your settings
148:49 - go here and click it and you'll be able
148:51 - to generate a key and that's it
148:54 - nice so with that said i think now
148:57 - i think now we're good i think we're
148:58 - good now so now what we can do is we can
149:00 - go back and we can basically pretend
149:02 - none of this happened
149:03 - we can say npm uh we can do firebase
149:06 - init one more time so firebase in it
149:08 - there we go and make sure you're in the
149:10 - right uh
149:11 - photos we're gonna go back to hosting
149:13 - and we say use an existing project
149:15 - we go down to hulu youtube clone we say
149:18 - build
149:19 - here we say yes for a single page app
149:22 - boom it's done now we say npm
149:24 - run build and we do this
149:27 - and then it says okay like now it's
149:29 - creating an optimized production bus so
149:31 - mpm run build is essentially what it's
149:34 - going to do is it's going to strip out
149:36 - all the
149:36 - not like all the non-developer tools
149:38 - right so like all the developer stuff
149:40 - gets thrown out like because we want to
149:42 - make a very
149:42 - streamlined build because when your
149:44 - website's up on on
149:45 - on the internet you don't want it to be
149:48 - super heavy you don't want it to be
149:50 - super
149:50 - clunky so all these extra things like
149:52 - when i save the file when it hot reloads
149:54 - we don't need that in the actual live
149:55 - build we just need to be lightweight so
149:57 - what it does it strips everything out
149:59 - and it
149:59 - pushes everything into this build folder
150:01 - which is why when we did firebase in it
150:02 - we specified it goes into the build
150:04 - folder
150:05 - right so this shouldn't take too long in
150:08 - the meantime let's go have a look and
150:09 - see
150:10 - somebody asks is it possible to use
150:12 - firebase and
150:13 - wordpress uh
150:16 - i'm not sure i honestly i don't know
150:19 - because i don't i haven't used too much
150:21 - of wordpress
150:22 - but firebase is a very flexible platform
150:25 - so
150:25 - uh definitely go and check and the docs
150:28 - are so good the docs are really good so
150:29 - if you have that question go ahead and
150:31 - check it out and i'm sure it would be
150:32 - that's a great
150:33 - question yeah if you guys find that out
150:34 - drop it in the comments below so that we
150:36 - can all know yep
150:38 - so here what we're going to do is once
150:40 - it's done all we need to do guys to
150:42 - deploy this thing is a firebase deploy
150:44 - so if you're excited uh
150:46 - drop this like a smash that thumbs up
150:48 - button and also guys
150:49 - pull out your phones and tag me and
150:51 - frankie right here if you're watching
150:52 - this video whether it's a replay or
150:54 - you're watching it right now
150:55 - and uh tag us on instagram and shoot a
150:58 - story when we deploy it
150:59 - go on to the website yourself and shoot
151:01 - a story for us and it's really nice to
151:03 - see that we can see that you watched it
151:04 - you stuck with us
151:06 - and yeah we always loved that so
151:08 - firebase deploy
151:09 - i guess guys let's go all right should
151:11 - we do it frankie should i hit should i
151:13 - hit enter on this
151:14 - let's do it man i think they're ready
151:16 - yeah let's do it dude so
151:18 - i hate enter and that's it let's go
151:20 - let's see it's counting it down
151:22 - i think it's gonna be five four
151:26 - three three two one
151:35 - nice so go ahead and go over to this
151:38 - link guys
151:39 - uh and you'll be able to actually go
151:41 - ahead and check out i'm going to drop it
151:42 - in the comment section as well
151:44 - there you go go ahead and check out the
151:46 - app guys and you can pretty much play
151:47 - around with it see it for yourself
151:49 - and yeah like you can see that the app
151:51 - should be up and running you can click
151:53 - on the different things and it will go
151:54 - ahead and it should be working as
151:56 - expected
151:57 - mess around with the hover functionality
151:58 - finalize that yep let's show it on ours
152:01 - yeah so let's go ahead and let's
152:02 - actually go to the live version
152:05 - so you can see how fast that was guys
152:06 - like if i go ahead and open up again
152:08 - like boom look how quick that is it's
152:10 - insane
152:12 - like yeah and you see like even when we
152:14 - do
152:15 - so clean like and everything works super
152:17 - nice and guys
152:18 - the amazing thing is this is going to be
152:19 - on your portfolio so like you can go
152:21 - ahead and show someone this
152:22 - and i think it's a really nice showpiece
152:24 - on your portfolio like it would be a
152:26 - really awesome thing to show
152:28 - you can show a bunch of different things
152:29 - you can show responsive design
152:31 - you can show uh api usage you can show
152:33 - that you can
152:34 - build things in es6 fashion with react
152:36 - hooks and do everything in a modern way
152:38 - um yeah so i can see a lot of people are
152:40 - going crazy in the comments
152:41 - that's awesome see puniam says great
152:44 - sunny
152:44 - sunday says hey good to be here muhammad
152:47 - says good job guys
152:49 - um comedia says i just joined for the
152:52 - first time you
152:53 - thank you so thank you for being here
152:54 - dude i appreciate that
152:56 - let's go this is amazing man this build
152:58 - makes me want to watch movies
153:00 - because they look so beautiful yeah
153:02 - insane
153:03 - insane dude thank you guys so much if
153:06 - you guys
153:07 - are finding this very useful for you go
153:10 - to the description below
153:11 - check out our free one-hour training to
153:14 - become a javascript developer i think if
153:16 - you got
153:16 - if you guys got value from this you're
153:17 - gonna get value from that as well and
153:19 - stay tuned for the other lives as well
153:21 - we're going to be going live tomorrow
153:22 - sunny and kaz are going to go live and
153:24 - they're going to build
153:25 - airbnb clone so that's an amazing build
153:28 - i know that a lot of boot camps actually
153:30 - use that as their final project
153:32 - i heard death mountain used to use that
153:34 - as a final project
153:35 - airbnb clones so yeah i mean that's a
153:37 - great tool that's awesome
153:39 - that's awesome yeah uh
153:42 - give one sec okay yeah i think guys yeah
153:44 - like if you're interested then
153:46 - definitely
153:46 - tomorrow be sure to set a reminder on
153:49 - your phone
153:50 - uh we go live i'm not sure what time it
153:52 - is on in american time but i think it's
153:54 - 6 30 b 6 30 p.m bst
153:58 - and that turns out to be what time that
154:00 - would be about 10
154:02 - about 10 30 10 15 yeah pst yeah
154:05 - it's a big time exactly so we'll be
154:07 - going live again tomorrow and the day
154:08 - after
154:09 - so awesome stuff um yeah
154:12 - like if you guys enjoyed that let us
154:14 - know i think what we do now frankie any
154:16 - lasting last minute things to say
154:20 - as of now man i love this build it's
154:22 - insane guys just putting in
154:24 - well how long was this this was two
154:25 - hours and 34 minutes if you guys can
154:27 - make
154:27 - and follow this build in two hours and
154:29 - 34 minutes guys you guys can literally
154:31 - change your life change your
154:32 - opportunities
154:33 - and actually get a job from this so you
154:36 - know
154:36 - there's so many ways that you can even
154:38 - spice up this project you can add a
154:39 - little bit more functionality to the
154:41 - the first header that we have and yeah
154:43 - make it interesting play around with the
154:45 - code
154:46 - like we said if we find we're going to
154:48 - discuss about this but if we find it
154:50 - useful to drop the actual github repo
154:52 - link for you guys it'll be in the
154:53 - description below but honestly guys
154:54 - don't be lazy you know follow the
154:56 - project sunny does a great
154:58 - job at explaining everything and you're
154:59 - going to get massive tons of value from
155:02 - this
155:02 - exactly guys make sure you definitely do
155:05 - like follow along with it because
155:06 - honestly copying something you're not
155:08 - going to like
155:09 - just think of yourself you're cheating
155:11 - yourself like you're going to be
155:12 - cheating yourself
155:13 - like going ahead and even if you don't
155:15 - fully understand what you're sort of
155:16 - coding when you follow along with these
155:18 - tutorials
155:18 - trust me do it so many times like do it
155:21 - do it enough times and that pattern
155:22 - recognition
155:23 - will kick in and you'll start to see the
155:25 - patterns you'll start to see what state
155:26 - props all these
155:28 - like what is a hook you'll start to see
155:29 - it it will really um
155:31 - really really be good because
155:35 - is it is it too loud oh damn it i didn't
155:38 - even notice it that's crazy
155:40 - the gain is too too high i think
155:43 - nice somebody asked somebody even asked
155:46 - did you use back end for this
155:48 - and guys we used firebase for this and
155:52 - the reason why
155:52 - you guys maybe didn't even notice if
155:54 - you're not paying that much attention is
155:55 - because it's
155:56 - so easy to implement we touch on it at
155:59 - the beginning we're touching it at the
156:00 - end
156:01 - but pretty much by setting it up in the
156:02 - beginning it took us what sunny about
156:04 - one to two minutes
156:05 - literally and from there you have a full
156:08 - full-on functionality with back-end
156:10 - using firebase
156:11 - yeah it
156:15 - cracked me up so much i didn't realize i
156:17 - was kind of leaning against the mic
156:25 - thank you so much man for the indian
156:26 - rupees appreciate your donation
156:29 - right now guys we are at 1274
156:32 - likes so 1274 likes that's insane
156:36 - and our chat donations reached the 100
156:38 - 100 mark so thank you guys
156:40 - so much for that yeah honestly insane
156:42 - support today guys
156:44 - and uh yeah like we said make sure if
156:46 - you are interested you found value from
156:48 - this then be here for tomorrow's live
156:49 - build today we built
156:50 - the hulu app uh completely deployed on
156:54 - firebase
156:55 - and like frankie mentioned before we
156:57 - have a free training and link is in the
156:58 - description
156:59 - be sure to check it out and yeah that's
157:02 - awesome dude
157:05 - oh that was fun thank you guys so much
157:07 - now go on and build it
157:08 - let's go exactly go ahead build that app
157:11 - and tag us in the stories
157:12 - in the texas like we've dropped here and
157:14 - yeah i think with that said frankie i
157:16 - think that's an awesome place
157:18 - to wrap this video up would you say i
157:21 - think that's a wrap man
157:22 - beautiful beautiful rap yeah that's it
157:24 - dude all right guys
157:25 - thank you so much for watching and we
157:28 - will see you
157:29 - in the next video peace
157:32 - peace bye bye