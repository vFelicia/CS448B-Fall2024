00:00 - hey guys how are you doing so today I'm
00:03 - going to take on a very interesting
00:04 - challenge which is going to be I'm going
00:06 - to go through the entire code Academy
00:09 - course and try to finish it as fast as I
00:11 - can and along the way my goal is to be
00:13 - able to help you guys give you guys some
00:15 - kind of intuition and for most of the
00:18 - people that are stuck this is going to
00:20 - help you kind of get unstuck and think
00:23 - about code um in a little bit of a
00:27 - different way I hope so I hope that this
00:29 - video helps you and it helps you solve
00:33 - those frustrating annoying problems
00:35 - because I remember when I was going
00:36 - through this I didn't have any help and
00:38 - I would quit for weeks at a time because
00:43 - I simply did not know where to go even
00:46 - the forms didn't help me so that's
00:49 - pretty much my main point to help
00:52 - everybody else out there so we're going
00:55 - to be taking the code Academy course
00:56 - here and we're going to be taking in the
00:59 - language called Python and there tons of
01:02 - students enrolled here 2.5 million it's
01:05 - a fairly long long course and the level
01:10 - required is beginner so unit 1 it's
01:15 - syntax
01:16 - tip calculator unit 2 talks about
01:18 - strings date and time and as we get
01:22 - further down we go into more and more
01:24 - useful and more advanced things so
01:26 - conditionals and control flow is going
01:28 - to be fun functions dictionaries and
01:33 - pretty much all of the stuff here
01:35 - battleships is going to be a lot of fun
01:38 - so feel free to use this video as a
01:41 - resource to help you if you get stuck or
01:43 - for entertainment you know just sit
01:45 - through and watch along how I tackle
01:49 - these problems ok so the first one is
01:53 - python is an easy programming language
01:56 - you can use it to create web apps games
02:00 - even a search engine I agree
02:03 - ready to learn Python click Save and
02:05 - submit ok so the first problem is
02:07 - already done all I have to do is hit
02:09 - save and submit code
02:11 - okay max streak of one start next lesson
02:16 - so creating web apps games and search
02:19 - engines all involve storing and working
02:22 - with different types of data they do so
02:23 - using variables variable stores a piece
02:27 - of data and gives a specific name for
02:30 - example spam is equal to five so
02:34 - basically here they're teaching you how
02:36 - to store a variable name so what I need
02:40 - to do they gave me the steps to do it
02:42 - right over here
02:43 - so I'm going to say my variable is equal
02:48 - to 10 and that's pretty much all I need
02:51 - to do here so that was very simple set
02:56 - the variables to the values listed in
02:58 - the instructions not a big deal is equal
03:00 - to true B is equal to false and we're
03:04 - done so they're talking about boolean's
03:07 - here boolean values are basically true
03:10 - and false so like they say a light
03:13 - switch you know boom one is on one is
03:17 - off oh my int whoops forgot to add that
03:23 - oh then want me to actually that was
03:26 - just an example so we got to do my n2 is
03:30 - equal to 7 my float equal to one point
03:33 - two three my bool is equals true this
03:37 - should be good all right
03:40 - you've been reassigned so here we're
03:44 - going to try to reassign values so
03:45 - initially my int was seven and then I'm
03:48 - going to change my into three and that's
03:51 - pretty much it for this one sweet okay
03:56 - now we get into functions and functions
03:59 - are fairly cool this code is poorly
04:01 - formatted because every time you write
04:04 - des right you gotta indent four spaces
04:09 - four or more spaces after you write that
04:13 - : this is called a function so we wrote
04:16 - a function called spam and what it does
04:19 - is it makes x equals 12 and then it
04:22 - returns
04:23 - so since these instructions they're part
04:28 - of the overall function so these need to
04:30 - be indented right underneath the
04:32 - function let's go ahead and indent this
04:34 - and let's hit submit and this should
04:37 - work okay good white space means right
04:43 - space so in Python remember white space
04:46 - is very important and once again we need
04:48 - to indent all of these otherwise we will
04:51 - get errors a matter of interpretation a
04:56 - window in the top right corner of the
04:58 - page is called interpreter so basically
05:03 - it's that black window the little black
05:07 - window on top right and the interpreter
05:11 - runs your code line by line and checks
05:13 - for any errors so in this example they
05:16 - make a variable called katz and assign
05:18 - it the value 3 so we're supposed to
05:21 - create a variable called spam and set it
05:24 - to true and we're supposed to create a
05:26 - variable called eggs and assign it the
05:30 - value false ok great
05:32 - just to make sure the video is recording
05:34 - okay single line comments and comments
05:40 - or things that are ignored in Python and
05:43 - there are things that are ignored in any
05:45 - programming language so the point of a
05:48 - comment is you're telling the Machine
05:51 - hey
05:52 - don't read this ok read everything else
05:55 - but just don't read anything that has
05:57 - some special symbol next to it
05:59 - telling the machine that it's a comment
06:01 - it's meant to be only read by a human
06:03 - being and the computer has nothing to do
06:06 - with it right so if I said 5 plus 5 the
06:09 - computer might give me back a 10 but if
06:11 - I put as a comment and I did this the
06:14 - computer's not going to give me back
06:16 - anything right if I did this the
06:19 - computer might give me back a syntax
06:21 - error or something right if I if I have
06:23 - semicolons like this but if I did this
06:25 - and made it into a comment the computer
06:27 - is just going to ignore it that's really
06:30 - the point behind
06:32 - behind hashtags their overall comments
06:37 - so it says make sure
06:41 - write a comment on line one make sure it
06:43 - starts with so we can say anything we
06:45 - want right hi I am a very clever
06:50 - programmer okay cool so multi-line
06:58 - comments the idea is that I can say
07:00 - stuff like hello how are you doing today
07:07 - five plus five is ten million pretty
07:14 - much I can say anything that I want and
07:16 - this is a multi-line comment okay so
07:20 - we're done set count equal the basically
07:25 - the point of a multi-line comment is you
07:28 - can just write multi lines and you don't
07:31 - have to put the hashtag over and over
07:32 - and over again it's also useful for
07:35 - documentation later on when you learn
07:38 - what documentation is for now since
07:40 - you're probably learning this language
07:41 - on code Academy and you're watching this
07:44 - video I'm assuming that you don't know
07:47 - what documentation is because you're
07:49 - most likely a beginner but if you're not
07:51 - that's okay too great now let's do some
07:56 - math so in programming languages you can
07:59 - do you can do a lot of math okay there's
08:01 - a lot of the math stuff that you can do
08:03 - which is fun so for example if I opened
08:06 - up my terminal I can I can do I can open
08:14 - a Python and actually let's just do
08:19 - regular Python if I did five plus five I
08:21 - did ten plus ten you know ten times
08:26 - twenty so on and so forth you can do you
08:29 - can do math operations so let's do
08:33 - addition Oh
08:34 - set the variable count to equal the sum
08:37 - of two big numbers
08:40 - okay what does it mean big numbers I
08:45 - don't know 100 plus 200 sure I mean I
08:51 - don't know how big of the numbers of the
08:54 - wanted but I just put some arbitrary
08:56 - numbers 100 and 300 fairly big
09:00 - exponentiation so we're going to learn
09:02 - about how to use the exponent in Python
09:04 - and most of the most of the places
09:06 - you'll see the exponent like this right
09:09 - something raised to the power of some
09:11 - things if I did 2 raised to the power of
09:14 - 2 that's 4 if I did 4 to the raise to
09:18 - the power of 2 that's 16 4 squared and
09:21 - here we're going to do a and we're going
09:25 - to say to a new variable called eggs and
09:28 - use exponent set X is equal to 100 I'm
09:31 - going to do it like this I'm going to
09:34 - say 10 squared right that gives me a
09:37 - hundred so this should run perfectly we
09:44 - got the result 100 we got the little
09:46 - green checkmark at the bottom so let's
09:48 - keep going
09:51 - so now let's talk about the modular
09:53 - operator it's basically the remainder so
09:56 - if you had 10 modulo 2 well what's the
10:00 - remainder if you did 10/2 doesn't to go
10:04 - perfectly into 10 so let's just make
10:09 - this clear and I did 10 divided by 2 I
10:12 - have no leftovers right it goes
10:14 - perfectly to tents if I did 10 modulo 2
10:18 - I should have a remainder of 0 nothing
10:20 - is left over but if I did 11 divided by
10:23 - 2 well 2 doesn't go perfectly into 11
10:27 - because 11 is an odd number so if I did
10:29 - 11 remainder of 2 what do you think I'm
10:33 - going to get back to goats perfectly
10:35 - into 10 and then there's one left over
10:37 - so my remainder is going to be if you
10:40 - have guests already it's going to be one
10:42 - okay so that's simply what our remainder
10:44 - is now let me just ask you what do you
10:46 - think the remainder of 99 divided by
10:49 - Manjula - is going to be so remember 98
10:55 - - goes perfectly into 98 and then you
10:58 - have one over so you get remainder is
11:01 - going to be one here how about 100
11:03 - modulo modulo - right how about 100
11:07 - modulo 3 what you get so once again 99 3
11:13 - is going to go into 99 you get one left
11:15 - over and you're going to get a remainder
11:17 - of 1 so sometimes you want to get the
11:19 - remainder right of whatever you're doing
11:21 - so it's gonna it's a pretty useful
11:24 - operator to have at our disposal because
11:27 - then we can use it fairly easily
11:31 - so here use modulus at spam equal to 1
11:35 - so once again we did 99 we did 100
11:38 - modulo 3 and that's going to give us
11:40 - back 1 remember we tested it out so
11:43 - that's how we're going to make spam
11:45 - equal to 1 see use modulus spam equal to
11:48 - 1 you can use any two numbers that will
11:50 - ever mater want to do this cool extra
11:52 - view bringing it all together variables
11:57 - which store values for later data types
12:01 - such as numbers and boolean's so
12:03 - variables are like you know X is equal
12:06 - to 5 y is equal to 2 those are all your
12:09 - variables okay data types are in Python
12:13 - you'll you have you know give numbers
12:16 - you have strings you can have a list you
12:22 - can have a dictionary so once again if
12:24 - you don't know what a list or dictionary
12:26 - is just ignore this so it's not a
12:27 - problem don't worry about it but just
12:29 - remember like 5 and hello those are
12:32 - different kind of data types
12:33 - hello is a string or what if I had a
12:36 - true in here right remember with the
12:38 - word for true and false says source with
12:40 - the B bool ok boolean so true and false
12:45 - they're going to be boolean values
12:49 - whitespace so that's what separates the
12:52 - statements if I had X is equal to 5 and
12:55 - now I'm doing Y is equal to 4 that's
12:58 - separating the statement X 5
12:59 - and why for you know you can't just do y
13:02 - equals 4 on the same line you got to
13:04 - give it some white space in white space
13:07 - just means blank and blank means
13:09 - something very important in Python so if
13:11 - you did define f of nothing and it says
13:16 - print hello well it's not going to work
13:20 - if you have if you don't have that white
13:23 - space before the print so in Python what
13:26 - white space is very very important in
13:28 - Lang other languages white space doesn't
13:30 - matter you just put squigglies around
13:32 - everything but comments okay comments
13:37 - how can I make this line a comment just
13:39 - add a hashtag before it okay comment my
13:44 - code will run until ignore it it won't
13:46 - give me a syntax or nothing you'll just
13:48 - is just going to ignore and arithmetic
13:52 - operations that's pretty straightforward
13:54 - plus minus sign subtraction addition
13:58 - multiplication of two numbers division
14:01 - exponentiation of two numbers our
14:03 - multiple numbers and then the module
14:05 - operator right the module operator that
14:07 - we played with so it says write a single
14:09 - line comment on line one I'm going to
14:11 - say hello YouTube audience I'm assuming
14:16 - that's how you're watching this video
14:19 - set the variable mod T equal to true and
14:24 - set another variable Python equal to one
14:27 - point two three four and set the third
14:30 - variable Monty Python equal to Python
14:37 - squared right I'm taking this Python and
14:41 - I'm squaring it okay cool
14:48 - so what is the start lesson sure let's
14:54 - start the lesson I mean
14:57 - that's what I'm here for right doing
14:59 - these lessons now let's apply the
15:03 - concepts from the previous section to a
15:05 - real-world example okay so now we're
15:11 - getting to some fun part of the code so
15:14 - you've finished eating a restaurant and
15:15 - receive this bill you'll apply the tip
15:18 - to the overall cost of the meal
15:20 - including tax first let's declare the
15:24 - variable meal and assign it the value of
15:26 - 40 for 50s so here when there's a meal
15:28 - and that is equal to 40 450 the reason
15:32 - why you always see me have spaces here
15:35 - is because that's writing good code
15:37 - that's just trying to make my code
15:40 - cleaner because when it's tightly
15:43 - compacted together like that it's hard
15:45 - for a human to read and it reduces the
15:48 - readability so this is the standard way
15:51 - to do this and it's accepted and it's
15:53 - the convention so you should practice
15:57 - writing good code as you're starting
16:00 - your careers okay so I have this meal
16:04 - and those are all my instructions meal
16:08 - tax is equal to 6.75% another way to
16:14 - write 6.75 is point zero six seven five
16:18 - and because remember 6.75% is really the
16:25 - same thing as six point seven five
16:28 - divided by 100 okay so if I run this
16:33 - code again it's going to work
16:36 - assign the tip variable on line five
16:39 - okay so tip set the variable tip to
16:43 - decimal value of 15% on line five okay
16:50 - so what we're going to do here so the
16:53 - variable tip to decimal value fifteen
16:55 - percent on line five
16:56 - okay so
16:59 - that's the decimal value of 15%
17:02 - wait that's oh ok so they're using
17:12 - Python 2 and here I just want to explain
17:16 - it really quickly so what just happened
17:18 - was you saw me do 15 divided by 100 and
17:21 - then it gave me an error and then I
17:22 - added that little decimal zero
17:25 - afterwards and then all of a sudden it
17:27 - says a way to go click next lesson so
17:30 - I'm going to explain to you why what if
17:31 - those work and why one of the one of
17:33 - them didn't work ok so if I did 15
17:38 - divided by a hundred in Python 3 I'm
17:42 - going to get a decimal value ok but in
17:45 - Python 2 let me show you what happens ok
17:47 - so let me activate my Python 2 here so I
17:51 - can show you guys what happens and let's
17:56 - say 15 divided by 100 so notice what
17:59 - happened it gave me a 0 that's weird so
18:01 - here's what it does if I did 10 divided
18:06 - by 3 it's going to give me the perfect
18:10 - number of times 3 goes into 10 okay it's
18:13 - not going to give me a decimal value if
18:15 - I want to do that I have to make sure
18:18 - that I'm telling the computer that I'm
18:20 - passing in an integer like a float
18:22 - number a decimal number once I tell it
18:25 - that it knows to give me the exact value
18:28 - but otherwise it'll just tell me how
18:31 - many times some number goes into another
18:33 - number if I did once again hundred
18:35 - divided by three I'm going to get 33 ok
18:39 - I'm not going to get 33 point 3 3 3
18:41 - whatever I should get if I did 100
18:44 - divided by 0.3 point 0 then I will get
18:48 - that so what was happening here was when
18:50 - I did 15 divided by a hundred it was
18:53 - like hundred goes zero times into 15
18:57 - because it's trying to give me a whole
18:58 - number but when I do point 0 now it says
19:03 - 15 divided by 100 and it gives me some
19:05 - small decimal value ok that decimal
19:08 - value will be point zero one five
19:11 - so here if I can show you 15/100
19:15 - it's going to be 0.15 sorry I meant to
19:19 - 0.15 reassign in a single line okay
19:23 - we've got three variables we need to
19:24 - perform our calculation we know some
19:26 - arithmetic operations that can help us
19:28 - out
19:29 - so we saw in Lesson one we could suspend
19:32 - is equal to 7 then later change your
19:34 - mind and say this like a cool on line 7
19:36 - assign meal to the value so meal to the
19:41 - value of itself plus itself times tax so
19:46 - pretty much like this ok so no like this
19:55 - okay right no no no I had it correct
20:04 - first all right so here I'm saying if
20:07 - the meal was $44 that's just $44 $44 50
20:12 - Cent's and then the menial times the tax
20:16 - is the tax you have to pay
20:19 - okay so 44.50 and the tax you have to
20:23 - pay on that is point zero six so this is
20:27 - your tax this is your meal meal plus tax
20:31 - that's the entire amount that you have
20:33 - to pay for your meal okay
20:35 - fairly simple total assign the variable
20:41 - total to the sum of meal plus on line
20:43 - eight now you have the total cost of
20:45 - your meal assign the riddle total to the
20:49 - sum now you have the total cost of your
20:51 - meal I'm confused is really saying do
20:56 - this now
20:58 - I'm saying total is equal to meal plus
21:06 - tip maybe Oh Oh doh okay
21:11 - so it's basically meal plus the tip that
21:14 - we paid on the meal okay so the same
21:16 - logic implies yeah though so meal how
21:21 - much you paid for the meal that's your
21:23 - total okay so the new meal is this whole
21:27 - thing here so this variable here is
21:30 - holding your information for the meal
21:33 - itself and the tax that you paid on it
21:35 - and then this part here is calculating
21:39 - the tip that you paid based on your meal
21:40 - so that's going to be your total this
21:43 - takes into account the money that you
21:45 - paid for your meal it takes into account
21:48 - the tip that you paid based on your on
21:50 - your meal and it takes into account the
21:52 - tax based on your meal okay next strings
21:58 - and console.log
22:08 - I'm going to create a variable called
22:11 - Brian and I'm going to assign it the
22:14 - value hello hello life okay this is
22:20 - called the string string means literally
22:23 - I can put anything I want in there okay
22:26 - it's not going to throw an error it's
22:28 - not going to do anything it's just
22:29 - completely arbitrary and it's just
22:31 - completely made-up whatever you want to
22:33 - put in it that's what a string is okay
22:37 - when you're writing the word document in
22:40 - Python those would be like all it's all
22:42 - every single word in there is you know
22:44 - it's all a string that's what it is
22:46 - because hello life is not a variable it
22:50 - doesn't have any value attached to it
22:52 - but Brian is a variable because if you
22:55 - typed in Brian you would get back hello
22:57 - life cool let's move on
23:00 - so now let's practice let's get a little
23:02 - practice in strings so set Caesar is
23:06 - equal to graham Caesar is equal to
23:10 - Graham and pray line praline and
23:15 - probably sing it wrong equal to John and
23:20 - Viking is equal to Teresa and those are
23:27 - all strings okay and that's pretty much
23:29 - it here the string below is broken fix
23:32 - it using the scape backslash this isn't
23:34 - flying this is a falling with stop so
23:36 - skip backslash what that means is okay
23:40 - look you have you're trying to put this
23:42 - entire thing into a string right you
23:46 - want to put this entire thing with
23:47 - quotes around it so whether you put
23:49 - single quotes or double quotes it
23:51 - doesn't matter but what the main problem
23:54 - is happening here is it's a it's
23:57 - thinking that this apostrophe in isn't
24:00 - it's thinking that it's ending the
24:03 - ending the string so it thinks this part
24:06 - is a string and then it just has no idea
24:09 - what this whole part is right it thinks
24:11 - this whole part if I separated it out it
24:15 - thinks this whole part is just some
24:16 - gibberish and this part is the actual
24:19 - string but what we want is we
24:21 - want the whole thing to be a string so
24:23 - one solution would be
24:25 - I put double quotes here and I put
24:26 - double quotes here but that's not the
24:28 - answer that they want okay they want us
24:30 - to do something that escapes a backslash
24:32 - so this is what we're gonna do okay and
24:37 - what that means is it's saying this is
24:40 - an apostrophe and I don't want you to
24:43 - think of it as a quote okay that's all
24:45 - that does that's Collins you know the
24:47 - term Ford escaping escape backslash okay
24:50 - so you're escaping the quote by putting
24:54 - a backslash there so now the whole thing
24:57 - has turned into a string and that's it
25:01 - okay now we have the string python has
25:04 - six characters number zero to five as
25:07 - shown below all right so now let's try
25:09 - to get the fifth character so I'm going
25:12 - to do how do I get the fifth character
25:16 - so what do I want me to do here
25:18 - fifth letter goes in a blood of string
25:21 - mod T all right so the fifth letter is
25:24 - going to be n here right because that's
25:27 - the fifth letter here weight start
25:33 - cutting right so 0 1 2 3 4 5 oh I see
25:42 - they want us to start counting from here
25:43 - so 1 2 3 4 5 so oh no no I'm wrong it's
25:50 - still N but I just didn't put it in what
26:06 - what is going on so if you wanted Y you
26:12 - could just type
26:31 - this is weird how today how do they want
26:35 - this not sure how they want this oh oh
26:45 - okay I feel I feel feel a little law not
26:51 - good I think for here all right I'm kind
27:02 - of lost this is this is super oh my god
27:11 - they're saying Monty Monty okay Monty
27:15 - all right now remember the reason why so
27:19 - the fifth letter is really the fourth
27:21 - letter because we start from zero so one
27:23 - two three four five
27:27 - but in our case the word was Monty okay
27:30 - and that's what tripped me up so here
27:33 - for us the word is actually Monty so let
27:37 - me actually write that down here
27:43 - and that's that's what it is
27:47 - for us okay okay that's what it is for
27:56 - us that's how we got Monty in the fifth
27:58 - letter ignore the top part that's only
28:02 - an example I constantly was trying to
28:04 - use that okay let's move on string
28:06 - methods okay Len lower/upper string
28:08 - great so these are pretty cool methods
28:13 - you know you can use this one to get a
28:15 - length of a string so let's say you had
28:17 - something like hello my name is Rafa
28:20 - Kazi and I'm a programmer is going to
28:23 - tell you like hey the length of that
28:24 - string is huge that's like a lot of
28:27 - letters in there if you said hello right
28:31 - if I try to get a length so let me let
28:34 - me show you guys these here so if I said
28:37 - a Len of hello well that's five right
28:41 - there five letters in it now let's say I
28:44 - did a hello dot lower what do you think
28:47 - that's going to do that's just going to
28:48 - make Hello all lowercase
28:51 - let's say I had a you know a bunch of
28:55 - capital o whatever letters is going to
28:57 - make it all lower well what do you think
29:00 - the upper upper is going to do you're
29:03 - just going to do the it's going to is
29:06 - simply going to do the opposite of that
29:09 - so if we had you know a bunch of small
29:12 - letters and like this is going to make
29:14 - them all upper case okay so that's
29:19 - really what's going on there okay this
29:25 - doesn't need to be this wide come closer
29:29 - all right cool make sense all right and
29:33 - string what this does is it just
29:37 - converts something to a string so if I
29:39 - had a number like five it's going to
29:43 - give me back a string five okay so like
29:46 - let's say I did five plus five well you
29:48 - can do that but let's say you try to do
29:49 - five plus five you can't you can't add
29:55 - those so what it does is it just
29:57 - add some together just like if you said
29:58 - hello plus everyone okay it's just going
30:06 - to just going to concatenate them so
30:09 - what it did is it added the fives
30:10 - together it's not really looking at them
30:14 - like numbers is just looking at them
30:16 - like strings so it doesn't know that
30:19 - it's an integer type and it can add them
30:21 - together anymore all it can do is
30:24 - concatenate them and do only things that
30:26 - it knows how to do with strings it
30:28 - doesn't see these 5s any different than
30:30 - it sees hello and everyone
30:32 - so that's really what string does so if
30:35 - I do string of five plus string of five
30:38 - well what do you think you're going to
30:40 - get do you think you're going to get
30:42 - fifty five the five five or do you think
30:44 - you're going to get ten so think about
30:47 - it for a second okay I hope that you've
30:50 - thought about it or pause the video I'm
30:52 - going to hit enter you're going to get
30:53 - five five of course because you're
30:55 - taking the number five and you've been
30:57 - burning it to a string meaning you're
30:59 - forcefully putting the quotes around it
31:01 - all it does is put two quotes around it
31:04 - okay if you did string of Hello is going
31:07 - to say undefined variable because it
31:09 - doesn't know what Hello is so you have
31:12 - to do it on something that actually
31:13 - exists so like a number a floating
31:17 - number you can do it on but you can't
31:20 - really you know if you did it on the
31:22 - string it wouldn't make much sense so
31:25 - you can use this on everything but you
31:27 - can use it on numbers so it's helpful
31:29 - all right so I've basically explained to
31:33 - you what Len lower/upper and SD are do
31:35 - and now let's let's get started on line
31:38 - one create a variable name pair it and
31:40 - set it to the string Norwegian blue so
31:43 - I'm going to say a parrot is equal to
31:47 - Norwegian blue on line two I'm going to
31:52 - say print so right here I'm going to
32:02 - write lengths parent okay let me ask you
32:06 - and treat these like short interactive
32:09 - quizzes okay just pause the video and
32:11 - think about what the answer would be so
32:13 - what do you think the length of parrot
32:14 - is going to be I'm going to give you
32:16 - five seconds to pause the video and come
32:17 - up with an answer and then I'm going to
32:19 - go ahead and answer it five four three
32:21 - two one is going to be the length of
32:25 - this strength so it's going to be one
32:26 - two three four five six seven eight nine
32:32 - space 10 11 12 13 14 so it's going to
32:37 - return 14 let's try so we got back 14
32:40 - iya right okay cool now let's let's move
32:43 - on now it's going to show us Ryan depth
32:46 - so it's showing us Ryan dot lower and
32:48 - that will just return Ryan so call lower
32:51 - on parrot after print on line 3 and
32:53 - editor so I'm going to say print and I'm
33:01 - going to refer to this string by the
33:04 - word by the variable parrot okay I don't
33:07 - have to write a Norwegian blue again I
33:09 - can just write parent and I can say
33:12 - lower and it's going to return what do
33:14 - you think is going to return and lower
33:15 - take few seconds 5 4 3 2 1 and it's
33:20 - going to return the region blue in all
33:23 - lowercase so all is going to do is
33:25 - change this B to a lowercase and this
33:27 - end to a lowercase and return that so
33:29 - here don't worry about the none all
33:34 - right call upper so upper is pretty much
33:37 - the same thing so I'm going to just do
33:40 - upper here
33:44 - okay cool so that's pretty simple and we
33:49 - got everything in uppercase you guys
33:51 - already have an idea about this declare
33:56 - and assign your variable in line five
33:58 - then call your method on line
34:00 - then on line five so I'm going to
34:02 - declare on line four so I'm going to say
34:04 - create a variable called pi is equal to
34:06 - three point one four and I'm going to
34:09 - print string pi okay and it's going to
34:13 - put quotes around that number that's
34:14 - pretty much what it's doing okay it's
34:16 - not showing you but in my terminal which
34:19 - is better I'd showed you there right
34:21 - it showed you there so if I ran pi is
34:24 - equal to three point one four and it is
34:27 - print string of Pi oh well just trust me
34:36 - guys it's supposed to have it's really
34:39 - it's a string so it has quotes around it
34:41 - okay if I showed it to you you see it
34:44 - has quotes around it but when you print
34:45 - it I forgot it just doesn't put quotes
34:48 - around it but in reality it has quotes
34:50 - around it okay so remember this is not
34:52 - the number 3.14 it's the string 3.14
34:56 - just like a string so you if you did
34:58 - 3.14 plus two
35:00 - you're not going to get you're not going
35:02 - to get three point five point one for
35:04 - which you're going to get is something
35:08 - that doesn't make any sense because it
35:10 - says you cannot concatenate or combine a
35:14 - string and an integer so basically what
35:17 - you're doing is like Hello plus two you
35:19 - can't do that okay that's going to give
35:21 - you an error okay let's take a closer
35:28 - look at why you use Len string and
35:30 - string object but dot notation such as
35:32 - string dot upper for the rest so let's
35:35 - take a closer look down so lion roar Len
35:41 - line line upper okay methods that use
35:45 - dot notation only work with strings on
35:48 - the other hand Len and string can work
35:50 - on other data types so if you have a
35:52 - list of things
35:54 - you know if I had if I showed you a
35:57 - little bit of sneak peek of what's to
35:59 - come ahead if I had a some list okay and
36:05 - this list has a bunch of let's say
36:08 - numbers in it in increasing order X
36:14 - that's what that is
36:15 - well if I did Len of X I will get that
36:18 - there are eight numbers in this list
36:21 - okay so that's what a Len of X is going
36:24 - to do and string of X is just going to
36:29 - put quotes around okay that's all that
36:31 - does okay not very useful okay
36:36 - so on line to recall the Len function
36:39 - with the argument ministry so I can say
36:45 - Len of ministry so once again what do
36:49 - you think it's going to give me if you
36:51 - guess it is going to give me the length
36:53 - of this string here good job that's
36:55 - right
36:56 - line four I'm going to do ministry dot
37:01 - upper and that's gonna basically
37:06 - uppercase the whole string okay the
37:09 - Ministry of Silly Walks twenty seven so
37:13 - the length of this is twenty seven you
37:15 - can count it if you want okay
37:19 - tell python to print monty python to the
37:22 - console online for print and I can just
37:25 - do a Monty Python okay
37:27 - in Python three you have to always use
37:31 - print like this okay so just an FYI if
37:36 - you're if you have Python installed on
37:39 - Python tool you can use the print like
37:41 - this or the other way ordered this way
37:43 - okay all right this was simple enough
37:48 - and now we're doing more printing
37:50 - variables so the Machine goes is going
37:53 - to be our variable and we're going to
37:55 - sign it to the string pain
37:59 - all right and then I'm going to print
38:03 - the Machine goes okay that was pretty
38:12 - simple all right so now they want us to
38:18 - do some string concatenation so remember
38:21 - what I told you
38:22 - hello plus everyone
38:28 - plus say cheers okay what do you think
38:36 - this is going to write I think it's a
38:37 - hello everyone said cheers okay or so it
38:43 - just when you do the plus sign on
38:45 - strings that just concatenate in other
38:48 - words it just puts it together okay
38:50 - that's all that fancy word concatenate
38:52 - means if you don't want to say that's
38:53 - okay but just learn it because the fancy
38:55 - cool word is used very often but it's
38:59 - just saying that you're combining the
39:00 - string so that's what happens when you
39:04 - do the plus sign so here you know you
39:07 - probably have a good feeling what this
39:08 - is going to turn out to be if I did
39:10 - print life of brian so as a matter of
39:14 - fact why don't we do it right there Life
39:16 - of Brian okay let's give it a try print
39:20 - the concatenate string spam and eggs on
39:23 - line three so I'm going to say print and
39:29 - this should not okay so this might work
39:33 - but I'm just going to show you guys the
39:34 - regular way spam and eggs and