00:02 - what's up everybody this is jesse from
00:04 - cleverprogrammer
00:05 - and we are going to be building today
00:08 - the coinbase app
00:09 - with react native all right so
00:12 - let me show you what we're going to be
00:14 - building
00:16 - it's this app and tanner tell me a
00:18 - little bit about
00:19 - what um this app contains with
00:22 - technologies
00:24 - yeah so uh first off everybody uh i know
00:27 - that i'm new
00:28 - so i just joined clever programmer my
00:29 - name is tanner uh today we're gonna be
00:31 - bringing you this coinbase clone
00:33 - uh so as you guys can see we're on the
00:34 - splash page you can either sign in or or
00:36 - uh
00:36 - sign up so jesse if you go ahead and hit
00:39 - the sign up button we can walk these
00:41 - people through our app here i'm gonna
00:43 - sign in
00:44 - sign in oh and then which email should i
00:47 - use my own email
00:50 - yeah so you should be able to use the
00:52 - email that you signed up with earlier
00:54 - and we're gonna be using firebase
00:56 - authentication guys so this is going to
00:57 - be able to
00:58 - connect with firebase get us logged in
01:00 - and we're going to be using redux to be
01:01 - able to keep our users logged into the
01:03 - app
01:04 - um and as you guys will see later once
01:06 - we kind of refresh the app it's going to
01:07 - keep us locked in and we're going to go
01:08 - right back into the
01:09 - home page here so she just pulled up
01:12 - we're in the home page
01:13 - um it shows all of our you know wish
01:15 - list for the cryptos that we want to see
01:16 - it shows the
01:17 - latest news about all the latest crypto
01:19 - um
01:20 - and it even has like a learning section
01:21 - too uh so jesse if you want to click
01:23 - into
01:24 - bitcoin real quick up in the uh wish oh
01:27 - this looks so amazing doesn't it guys
01:30 - put in the comment below if you think
01:31 - this app looks amazing okay
01:35 - so let's look here i'm gonna press the
01:38 - watch list the bitcoin hey let's go
01:42 - oh my god this is amazing so is this
01:45 - graph like real time
01:46 - here sorry is this like real time
01:49 - right yeah so we're gonna have
01:53 - uh live data feeded through into this
01:55 - chart we're gonna have
01:56 - um you know all of the information about
01:58 - the different bitcoins that we can click
02:00 - into
02:00 - so right now we have bitcoin and we have
02:02 - another one and we can add you know as
02:04 - many as we want to the app as well so
02:05 - you guys are gonna see where we get the
02:06 - data
02:07 - how we pass it through how we use uh
02:09 - redux to keep our users logged in
02:11 - we're gonna be using styled components
02:13 - to make everything look the way that it
02:14 - does
02:15 - make it look nice uh so
02:18 - yeah i think that's about it right so we
02:19 - can go ahead and start jumping into this
02:21 - build
02:22 - oh that's cool that's cool so tanner if
02:25 - i want to start up
02:26 - making a react native app what is
02:29 - something i start off with
02:32 - right so guys first thing that we're
02:34 - going to need to do
02:35 - to start with react native is we're
02:36 - going to have to install the expo cli
02:39 - so when it comes to react native we have
02:42 - two options
02:43 - we have our default react native but
02:45 - what we're going to use today is
02:46 - expo because it allows us to build one
02:48 - code base that's going to convert to
02:50 - both ios
02:51 - and android so it makes it really really
02:53 - easy okay so what is the command that i
02:55 - need to use
02:56 - npm yeah so go ahead and say uh npm
03:00 - install expo dash cli oh i might have to
03:04 - do a pseudo to be honest so sudo
03:06 - npm install and then
03:10 - uh expo cli
03:13 - expo so guys this is gonna give us
03:15 - access to the expo command
03:17 - which is going to basically allow us to
03:20 - uh
03:20 - create the entire project much like
03:22 - using uh create
03:24 - react app right
03:27 - and if you guys know anything about
03:28 - react this is going to be very very
03:29 - similar
03:30 - so if you've watched the other builds uh
03:33 - react native
03:34 - is you know almost the same as using
03:36 - react
03:37 - but you guys are gonna see kind of how
03:39 - we replace certain components
03:42 - to make it so that it actually converts
03:43 - to what we want it to be
03:45 - on the actual mobile app
03:49 - okay um cool so after we go ahead and
03:53 - let the
03:54 - expo cli install the next thing that
03:57 - we're gonna have to do is say expo init
03:59 - and again that's going to be the same
04:01 - thing as using uh create react
04:03 - app so that's going to basically set up
04:05 - everything for us
04:06 - yeah in order to do an expo in it
04:09 - would i need to make a empty repository
04:14 - in my on my desktop for example or let
04:17 - me see
04:18 - okay i could do it here so let's go
04:20 - ahead and create a project folder
04:21 - right folder and then you guys could
04:25 - call it
04:27 - coinbase uh react
04:30 - native youtube
04:33 - okay and that that one guys the other
04:37 - one you're gonna be opening that one up
04:39 - in the visual studio code that's what
04:41 - we're going to be using
04:42 - okay so new window
04:46 - here okay so new window
04:50 - and i'm going to open that one up here
04:54 - and it's the coinbase this one
04:58 - or yeah we could open this one up here
05:01 - and actually
05:02 - we need to wait for this to happen so oh
05:05 - let's go
05:06 - it is done ocli got installed yes
05:09 - so what i got to do now is going to into
05:11 - that empty project here
05:15 - so we're going to say and then you can
05:17 - say dot
05:18 - and this is going to create the uh
05:20 - project right there in that current
05:21 - directory that you're in
05:22 - right so as soon as you guys create an
05:24 - empty project directory just say expo
05:26 - init
05:27 - and then dot and that's gonna say create
05:28 - our app in our current directory
05:31 - right so i'm gonna go into that one
05:33 - youtube
05:34 - okay and then here i hope you guys can
05:37 - see it i'm going to do
05:38 - expo init and that's going to create the
05:40 - expo
05:41 - project
05:45 - oh i have to do expo init period i think
05:48 - expo
05:48 - init dot okay yes
05:53 - awesome all right and then i'm gonna be
05:56 - choosing
05:57 - the blank project right this one so
06:00 - guys you can choose between all of these
06:02 - options here but
06:03 - choose the blank one the top one okay so
06:06 - enter
06:08 - so some of those options will require
06:10 - you to know typescript some of them do
06:12 - give you
06:12 - like a navigation bar and some other uh
06:14 - templated stuff which is pretty cool
06:16 - um but yeah the one that we want to
06:17 - start with with uh today is gonna be the
06:19 - blank one
06:20 - and so we're gonna have a very minimal
06:21 - uh setup so
06:23 - again if you've watched a lot of the
06:24 - other react clones uh typically we have
06:27 - to kind of clean
06:28 - up whatever react uh create react app
06:30 - gives us
06:31 - uh so there's a bunch of test files a
06:33 - bunch of stuff that we don't really ever
06:34 - really need to use
06:35 - um and we usually just go ahead and
06:37 - delete those with uh
06:38 - the react native app that we just built
06:40 - out we don't really have to do anything
06:42 - we just need to go ahead and get started
06:44 - so once that builds out uh jesse will be
06:47 - able to show us how we can actually
06:49 - launch that
06:50 - into a simulator uh live on our computer
06:52 - and kind of test out
06:53 - the app itself oh i love the simulator i
06:56 - mean it's so cool you know you see that
06:57 - mobile and you can see how things work
06:59 - we're
06:59 - going to be showing you guys that in a
07:01 - moment okay oh
07:03 - let's go it is done so as you can see
07:06 - it says here right to run your project
07:09 - run
07:09 - one of the following npm commands so
07:12 - we're gonna be doing
07:13 - npm run ios but before we do that let's
07:17 - look into the code that you got when you
07:20 - have um installed everything okay when
07:23 - you were finished
07:24 - with that installment and that's this
07:27 - that's this guy so here view text status
07:30 - bar now i'm going to be opening up
07:32 - that project again um let's oh sorry
07:36 - about that this one
07:37 - okay and here i'm gonna make this a
07:39 - little bit bigger for you guys
07:41 - npm run ios just like i said before
07:46 - so guys to be able to use these
07:47 - emulators if you're on windows
07:49 - you'll have to install android studio or
07:52 - whenever she launches this you can
07:54 - see that um that qr code right there
07:57 - you can scan that on your phone with the
07:59 - expo app that you can install on your
08:00 - phone
08:01 - and pretty much just test out the live
08:03 - uh app on your actual physical phone
08:06 - uh beyond that you can install uh
08:08 - android uh studio
08:10 - um but there's quite a hefty install
08:12 - with that to kind of get the android
08:14 - emulator
08:14 - and then otherwise if you're on mac you
08:17 - can use uh xcode and just
08:19 - uh easily use the ios emulator as well
08:22 - yeah you know routes are going to be ios
08:25 - or your
08:26 - actual phone no i'm just thinking about
08:28 - the joke you said the other day you know
08:29 - when people use
08:30 - android studio their laptop heats up and
08:33 - he's up so much that you know people
08:35 - could make an ag on it you know so
08:37 - i think it's really funny um so guys now
08:40 - that that's done
08:42 - it should where's my emulator
08:45 - it should start yummy oh wait so here
08:48 - guys
08:48 - on this icon press it and boom there it
08:52 - is
08:53 - we have the emulator so let's put that
08:55 - here
08:56 - next to the code okay in this screen so
08:59 - let me flip
09:00 - and then we can see how this
09:04 - shows when we are building things okay
09:07 - so there we go and oh
09:10 - look tanner already changed the text and
09:14 - now it's visible here on
09:15 - the left side awesome
09:18 - so what's the first thing our react
09:20 - servers guys every time we make a change
09:22 - we can see it live
09:23 - on the app again if you open this on
09:26 - your physical device you'll see it pop
09:28 - up
09:28 - on your actual phone the live action
09:31 - that you make
09:31 - it's really really cool that's so cool
09:35 - that's so cool so
09:36 - tanner what is the first thing that
09:37 - we're going to be building out where are
09:39 - we going to start so the first thing
09:40 - that we need to do is go ahead and build
09:42 - out uh the splash screen which is going
09:44 - to take us right into
09:45 - the login screen so let's
09:48 - see here so first thing we want to do we
09:50 - can go ahead and just replace this view
09:52 - right here
09:54 - we're going to replace it with our
09:55 - welcome component we don't have the
09:57 - welcome component yet
09:58 - guys so we're going to have to go ahead
09:59 - and build that out so if we go ahead and
10:01 - try to save it we're going to get a
10:03 - bunch of errors
10:04 - and react native is not shy to give you
10:06 - a lot of a lot of errors
10:08 - don't worry about it don't don't get
10:10 - afraid of errors you're going to see it
10:12 - all the time in react native
10:13 - so we're going to make a folder i think
10:15 - called screens and then with a file
10:17 - called
10:17 - index is that correct exactly exactly
10:21 - so uh right that's the first thing we
10:24 - need to do so we have our
10:25 - uh welcome component here and then we
10:27 - have our welcome component being brought
10:29 - in as you guys can see we're going to
10:30 - bring it in
10:31 - from a screens folder so let's go ahead
10:33 - and start
10:34 - building out this directory that we're
10:35 - going to use so first thing we're going
10:37 - to need is a screens directory
10:39 - and the next thing is going to be pretty
10:40 - familiar to you guys we're going to need
10:42 - a components directory
10:46 - um and then we can go ahead and just
10:47 - already add the
10:49 - resources directory as well so in react
10:52 - native it's pretty standard
10:53 - that we're gonna have actual screens and
10:56 - then
10:57 - components aside from that right so
10:59 - we're going to bring in the com
11:00 - little extra components into our screens
11:03 - now
11:03 - in react native we have to build out a
11:06 - navigator and it's basically going to be
11:08 - a stack of these screens so that's why
11:10 - we have to build it out the way that we
11:11 - do
11:12 - so the next thing we want to do is go
11:14 - ahead into our screens folder here
11:16 - let's go ahead and create an index file
11:18 - oh
11:19 - sorry about it
11:22 - okay cool all right um and in our index
11:26 - file
11:27 - we're going to need to basically just uh
11:29 - export
11:31 - the welcome screen that we're going to
11:32 - use so we're going to say
11:34 - export everything
11:38 - from
11:41 - uh welcome index
11:44 - right so we're gonna have another folder
11:46 - inside of here
11:48 - inside of our screens we're gonna have
11:49 - another folder and this is gonna be our
11:51 - welcome folder
11:56 - and then in that folder we're going to
11:57 - put another index file
12:00 - so you guys can probably tell already
12:02 - we're going to actually separate all of
12:03 - our screens
12:04 - into their own separate folders
12:06 - eventually we'll have a home folder
12:08 - a login folder everything that we need
12:10 - in this screens folder right here
12:12 - and our initial index file inside of our
12:14 - screens is where we're going to export
12:16 - each one of those
12:17 - screens themselves all right
12:21 - so let's head back into the welcome
12:23 - index file
12:26 - and guys just like in react we can use
12:29 - very little shorthands so we can say rnf
12:33 - and this is going to create a react
12:35 - native function based component so if i
12:37 - hit enter
12:38 - on that boom it fills it out for us
12:40 - we're saying export default function
12:42 - and the first thing that you guys should
12:44 - notice is that we're not using divs
12:46 - and we have to use a text box to
12:48 - actually get text to our screen
12:51 - the reason being again in react native
12:53 - it's trying to
12:55 - basically build out all of these
12:56 - components to work for both ios
12:59 - and android so we have to be very
13:00 - specific and use specific types of
13:02 - components
13:03 - that are pretty much provided for us
13:06 - that kind of allow us to build up these
13:07 - things if we use a regular div like we
13:09 - would in react
13:10 - it's just not going to work for us
13:14 - okay guys so just to make sure that this
13:19 - works we can go ahead and just say
13:20 - coinbase in here
13:22 - and save that so if we
13:27 - i think you might have to refresh the
13:29 - [Music]
13:31 - simulator so how do i do that how would
13:34 - i refresh it
13:36 - oh um one thing you could do is just go
13:39 - ahead and close it off
13:40 - in the terminal and then just rerun it
13:42 - with npm run ios
13:44 - and then put dash c so that we're
13:46 - clearing the cache when we run it
13:48 - right so npm run ios
13:51 - dash c like this
13:58 - is that usually what needs to be done in
13:59 - react native or
14:02 - so a lot of the times uh and right now
14:04 - it's really not that
14:06 - important of a step um but once we start
14:08 - using redux to have that logged in state
14:11 - we're gonna have to pretty much always
14:13 - clear the cache
14:14 - to clear their logged in state um until
14:16 - we at least put in like a log
14:18 - out button or something right right
14:20 - right so
14:21 - i refreshed it everything works again
14:25 - um looks like we're still getting an
14:28 - error so let's look back into our app
14:30 - here all right so we have welcome
14:32 - from screens index so let's look in here
14:34 - we have thank you or maybe
14:35 - maybe you need a folder welcome steady
14:38 - it's because right here i forgot to name
14:40 - this
14:41 - uh the right way so i think we need to
14:44 - name this
14:46 - welcome and uh in just a minute guys
14:50 - we're gonna have to take in some props
14:51 - because we're gonna have to build out
14:52 - the navigator
14:53 - but for now let's just try to make sure
14:54 - that this welcome screen works
14:56 - are you by the way i don't see you
14:58 - typing tanner are you in my screen
15:00 - are you sure are we on the live share
15:03 - yeah it should be um it should be in the
15:07 - screens welcome index
15:11 - all right right right right right yeah
15:13 - so all i did guys was change the name of
15:15 - the function instead of
15:17 - export default function index we changed
15:19 - it to welcome
15:20 - um and at this point if we refresh our
15:23 - uh
15:23 - simulator then we should get an update
15:32 - like this so i also changed here in
15:34 - app.js we first had only screens but now
15:37 - i changed it to okay i'm gonna put on
15:39 - simulator again
15:41 - here i put welcome here because of the
15:44 - folder here
15:46 - okay so this should be this should work
15:49 - now
15:53 - yeah so screens welcome index yeah that
15:56 - should
15:56 - should be working um here try closing
16:00 - out the emulator before you
16:03 - restart it okay so i'm closing it out
16:06 - and i'm restarting it here and if you're
16:09 - on your physical device
16:10 - there's actually gonna be a notification
16:13 - uh on your phone
16:14 - where it has a refresh button and
16:15 - that'll actually reset that for you
16:18 - okay so it's starting it up here it says
16:20 - starting metro bundler
16:22 - okay okay and now it should get opening
16:26 - okay open up the iphone
16:29 - that's where you can see it and we
16:30 - closed it just now
16:34 - so let's bring it here next to our code
16:39 - it's opening up now expo all right
16:52 - hmm it's a sale component exception
16:55 - component exception by the way it also
16:57 - says log23 component exception element
17:00 - type is invalid expected a string
17:04 - so which page in page
17:08 - um render application.js in line
17:12 - 54 so what is
17:15 - this logo one
17:18 - warning react create element type is
17:21 - envelope expecting a string
17:24 - hmm do we
17:28 - okay okay yeah i think i know what's
17:30 - happening
17:31 - okay what do you think is happening so
17:34 - first okay actually that looks good
17:38 - so i'm gonna go ahead and just delete
17:40 - this
17:43 - [Music]
17:44 - and
17:47 - okay
17:58 - nope
18:00 - hmm
18:06 - okay guys so let's try something really
18:09 - quick
18:10 - so if you're debugging like this tenor
18:12 - what is something
18:13 - what's the first step you're going to be
18:14 - looking at
18:17 - uh the first thing that i'm going to try
18:19 - to do is just put everything into a view
18:21 - kind of just like in
18:22 - uh regular react when we try to make
18:24 - sure that everything's like in a
18:25 - fragment or something
18:26 - so um but that didn't seem to help so
18:30 - um yeah i can't see the error message
18:33 - too clearly
18:34 - uh what does this say so it says
18:37 - component exception
18:39 - element type is invalid expecting a
18:41 - string for building components or a
18:42 - class
18:43 - function for composite components but
18:47 - gut undefined
18:48 - you likely forget to export your
18:50 - component from the file it is defined in
18:52 - and or you might have
18:53 - mixed up default and named imports
18:56 - so this welcome here something is not
18:59 - going correct with the export
19:01 - maybe so here index
19:04 - export default function should it be
19:07 - something with this
19:11 - i think i know what it is okay great all
19:13 - right guys so
19:14 - in our welcome folder let's go ahead and
19:16 - create a new folder i mean a new file
19:18 - we're going to say welcome
19:22 - yes all right so this
19:25 - is where i'm gonna want to put my actual
19:28 - component
19:28 - so let's move that into our welcome.js
19:32 - file
19:33 - okay i'm gonna open that one up here
19:36 - yeah
19:37 - yeah all right and then in the index
19:40 - file
19:41 - we actually want to say import welcome
19:45 - from uh
19:48 - let's see i might have actually
19:50 - forgotten a step so let's create a
19:53 - pages folder inside of welcome and move
19:57 - our welcome dot js into the pages
20:00 - okay welcome to gs we're going to move
20:02 - that to the folder pages
20:04 - and then i'm going to open it up here
20:07 - yeah
20:08 - so as you guys can see we have kind of
20:10 - like layers of
20:12 - uh index files as we kind of go further
20:14 - into the screens
20:15 - so we have a folder for our welcome in
20:17 - that folder we have pages
20:19 - so we're having pages out of each screen
20:21 - uh so it's you know
20:22 - layers upon layers that's how we create
20:24 - our apps so
20:25 - let's hop back into the index.js within
20:28 - the welcome folder jesse
20:30 - excuse me the what did you say
20:33 - uh index.js inside of pages
20:36 - okay welcome pages index.js
20:39 - and we're going to say import welcome
20:41 - from pages forward slash welcome
20:44 - all right so we're going to look into
20:45 - this folder grab our pages component
20:48 - import it into here so that our overall
20:51 - index right here
20:52 - is going to grab it from this index so
20:55 - basically we're kind of passing it up
20:56 - through all of the layers of folders and
21:00 - this overall index right here
21:01 - this one's sitting inside of the screen
21:04 - so
21:06 - basically what that's going to do is
21:07 - grab all of the different pages that we
21:09 - create
21:10 - right so we're going to have our you
21:12 - know
21:14 - paint our login page all of these are
21:16 - going to be exported from this
21:18 - overall index page sitting inside of the
21:20 - screens folder
21:23 - so at this point if we save everything
21:29 - good
21:32 - be able to refresh our app and get the
21:34 - results that we want
21:42 - so i have to do this right by the way i
21:44 - could also do i could also open up the
21:46 - terminal here in the
21:48 - visual studio code right so but so
21:52 - starting metro bundler pressing this one
21:54 - again here okay
21:58 - so now everything got refreshed
22:02 - here this one is like this so that's
22:04 - good
22:07 - now it says import welcome from
22:10 - so now it's complaining about this
22:12 - import here
22:15 - okay so what does it say it says none of
22:19 - these files exist screen
22:20 - slash welcome slash pages
22:25 - so we're sitting inside of welcome
22:29 - we should be able to look into pages and
22:31 - find
22:32 - welcome all right guys so again right
22:36 - when we're working on react native we're
22:37 - going to see a lot of errors
22:39 - so it's pretty much just kind of reading
22:42 - through the message that it gives us and
22:44 - trying to figure out what exactly might
22:46 - be going
22:46 - wrong and we have kind of already
22:49 - you know a huge kind of we're going into
22:52 - folder upon folder upon folder
22:54 - so we got to make sure that everything's
22:56 - pointing correctly
22:57 - so let's hop back into welcome.js
23:01 - uh jesse yeah in pages okay
23:05 - all right so let's just make sure that
23:06 - this looks clean i think it looks clean
23:08 - we have a proper
23:09 - component here we're saying export
23:11 - default function capitalized
23:13 - welcome so let's hop back up to the next
23:16 - index file
23:17 - okay this one how come if we maybe i
23:20 - missed this but how come we have two
23:22 - index files
23:25 - yeah so pretty much uh you know we're
23:28 - kind of going up
23:29 - this ladder right now so we started with
23:31 - welcome.js
23:32 - then we're going into this next index
23:35 - and then the next step would be kind of
23:36 - going up one level to that
23:37 - other index okay and so pretty much
23:39 - what's happening is
23:41 - you know we're creating all of these
23:43 - very separate pages within these very
23:45 - separate
23:45 - uh screens and so we're having to pass
23:48 - it up
23:49 - through the folders to get to this
23:51 - overall index file that's going to
23:53 - export
23:53 - all of the screens okay great
23:56 - so i did realize though inside of this
24:00 - secondary index i think the one that
24:01 - we're in right now
24:03 - we need to explore
24:08 - so guys there's no point in really uh
24:11 - creating our components if we're not
24:12 - exporting them
24:15 - so we're going to be exporting
24:20 - okay trial and error trial and error so
24:24 - now we should be able to refresh the app
24:26 - and hopefully this time it'll work okay
24:31 - so let's see
24:34 - npm run ios
24:38 - dash see okay it's starting up this
24:41 - looks good starting metro bundler
24:44 - okay we can click on here
24:49 - this one is good i would try closing out
24:52 - the iphone again and then reopening it
24:55 - oh this one
24:58 - click on then open it get it open it
25:00 - again
25:08 - does it only open when when you when you
25:11 - restart it like this
25:13 - i guess so because i just closed it but
25:15 - we have to open it up again yeah so once
25:17 - you close the simulator you'll have to
25:19 - rewrite
25:19 - all right okay let's go come on come on
25:22 - come on oh there we go
25:25 - opening up expo this is the address of
25:27 - the expo okay guys
25:28 - and this is an iphone 8 model you can
25:31 - also use uh iphone 12
25:32 - or all kinds of models okay so
25:36 - let's go it's opening up the project
25:40 - and that's it so what does this actually
25:42 - mean because what confuses me is like
25:44 - we're importing welcome
25:45 - but now we're exporting it so what does
25:47 - that mean tanner
25:49 - yeah so pretty much that index page that
25:52 - you're in right now
25:53 - is really just kind of like a middle man
25:56 - to actually pass it
25:57 - up to the next index page so what we
26:00 - want to do is just have a
26:02 - general overall index page and we'll see
26:04 - it come together in just a minute okay
26:06 - um but this general overall uh index
26:09 - page is going to allow us to basically
26:10 - say hey
26:11 - grab whatever from pages so that we
26:14 - don't have to keep diving into folders
26:16 - and saying all right grab it from
26:18 - pages welcome ah right so this is like a
26:21 - like a general layer inside of the app
26:24 - basically
26:25 - inside of our app like we're using that
26:26 - second index
26:28 - uh the js file like a um like a general
26:31 - layer okay
26:32 - um now i think there are no errors now
26:35 - so let's continue
26:36 - yeah so we're good and you should i
26:39 - can't see it too well but you should be
26:40 - able to see
26:41 - coinbase sitting up in the actual
26:43 - notification bar up there
26:45 - any notification yeah it's actually here
26:47 - on the left it's actually mixed up with
26:49 - the wi-fi signal
26:50 - it's not big indeed but unfortunately
26:52 - guys i cannot zoom in
26:54 - on this iphone here so let's continue
26:57 - okay we got it here the coinbase
27:00 - awesome so let's head back to app.js
27:04 - and actually no sorry we're gonna go
27:07 - back into welcome.js yeah
27:10 - so this text so there's a couple things
27:12 - we need to do inside of this file here
27:14 - um so this is gonna be our splash screen
27:17 - so to get that
27:18 - text outside of that status bar we need
27:21 - to use what is called safe area now this
27:23 - is one of the examples of a component
27:26 - that only applies
27:27 - to ios and this is something that you
27:29 - kind of see a lot
27:30 - in react native where certain types of
27:34 - components
27:35 - either act differently or only apply to
27:37 - one of
27:38 - the two os's now as you guys see we have
27:41 - an error because i did not import it
27:44 - so let's try okay let's we're gonna have
27:47 - to up
27:48 - here where we say view and text from
27:50 - react native we're all gonna
27:51 - also say safe area view
27:58 - so this one only applies to ios but as
28:00 - you guys see the coinbase text is now no
28:02 - longer
28:03 - overlaying with that uh status area
28:06 - oh why is that oh that is what it's
28:08 - meant for oh this is real
28:10 - oh that's sick that's dope so this tape
28:12 - area
28:13 - basically wraps your code and says you
28:15 - know don't touch
28:16 - uh you know this top area this status
28:19 - bar area and if you're on an iphone 12
28:21 - you have that knot right so we don't
28:23 - want to go past that notch
28:24 - so that's what safe area allows us to do
28:26 - is kind of stay within
28:28 - a safe area now again that one's only
28:31 - for ios
28:32 - um there are some things that only only
28:34 - work on android only work on ios
28:36 - or are done completely differently if we
28:39 - wanted like to add a box shadow to
28:40 - something
28:41 - in android we would say elevate in ios
28:44 - we would say
28:45 - you know shadow this shadow that you
28:47 - have to do like four different things to
28:48 - actually get it to work so
28:50 - there's a lot of differences here that's
28:51 - cool that's cool okay all right so the
28:53 - next thing
28:55 - the next thing we want to do uh here in
28:57 - the welcome screen before we move on
29:00 - is first we want to bring in some props
29:02 - and we're not going to see this come
29:03 - into play quite yet
29:05 - but once we build out our navigator
29:07 - we're going to have a
29:09 - automatic prop applied to any screen we
29:12 - include on our navigation stack
29:14 - so we're going to take in some props and
29:16 - we're going to first unpack
29:19 - our navigation
29:25 - we're going to use some destructoring
29:26 - here unpack navigation from props and
29:29 - this is going to be automatic guys we're
29:30 - never going to see
29:31 - us manually pass this into welcome it
29:34 - happens behind the scenes
29:36 - by our root navigation tool so we'll see
29:38 - that in a moment
29:41 - next thing is we're going to create
29:45 - a custom hook and this is going to be
29:49 - for setting buttons visible or not so as
29:52 - you guys
29:53 - you know can tell when we load up an app
29:55 - we have a splash screen it takes a few
29:56 - seconds
29:57 - and then our login screen appears so
29:59 - that's kind of the effect that we want
30:00 - to get here
30:01 - so we're going to say visible set
30:04 - visible so this is going to be our
30:05 - custom hook
30:06 - and we're going to say use state so
30:09 - let's import that
30:19 - so we'll comma it in up here yeah so
30:21 - where we say import react from react
30:24 - you state yeah
30:28 - and we're also going to need to use
30:34 - effect
30:36 - okay there we go so we're gonna say use
30:38 - date and we're gonna say false
30:40 - because we don't want it to show up
30:41 - originally but after a certain amount of
30:44 - time
30:44 - is when we're going to set it visible so
30:47 - the next thing we want to do
30:49 - yeah by the way can you speak up a
30:51 - little bit like in your volume with your
30:52 - mic is that possible or maybe you talk
30:54 - closer to the mic
30:56 - yeah is that better i guess so yeah i
30:58 - hope so yeah
31:00 - i'll pick up the game just a little bit
31:04 - how's that yeah i hope so yep
31:07 - awesome cool so next thing we want to do
31:10 - is add
31:11 - this use effect so let's clean this up a
31:14 - bit we don't need everything in here
31:15 - we don't need a variable that's going to
31:17 - change our use effect we also
31:19 - don't need a return and we're going to
31:20 - change the effect as well so let's get
31:22 - rid of that
31:23 - all right so what we're going to do in
31:24 - the use effect is we're going to set
31:26 - a timeout
31:29 - and in this timeout we're going to have
31:32 - our uh
31:33 - callback function that we're going to
31:34 - build out inside of it
31:36 - and once our time is up we're going to
31:39 - set visible to true
31:42 - so what is this timeout used for like
31:44 - what do we want to what what are we
31:45 - trying to set visible or not
31:48 - yeah so we won't see it right now but in
31:52 - just a moment
31:53 - we're actually going to add some buttons
31:54 - down here uh and they're going to be in
31:56 - an area where we're basically going to
31:58 - say you know
31:59 - if visible right so we're gonna have
32:02 - this kind of
32:03 - conditional rendering yeah
32:06 - and then we're gonna you know have some
32:08 - buttons um and this is gonna allow us to
32:11 - log in sign up whatever we want to do
32:14 - right so the
32:15 - initial kind of effect that we want is
32:17 - to say okay we have our splash screen
32:19 - with no buttons you know it takes a
32:22 - couple seconds we're loading in the app
32:24 - and then we show the button right so it
32:26 - takes about two seconds because that's
32:27 - what it
32:28 - happens here right you give it two
32:29 - thousand so
32:31 - awesome yeah
32:34 - cool cool cool and then i just added
32:36 - this text right here to say clone
32:38 - now guys we have to make sure we have
32:40 - these text boxes
32:41 - if we just say you know like we would
32:44 - sometimes
32:45 - i mean it's not good practice but you
32:46 - know in basic web development or using
32:49 - react we could just say
32:50 - clone or whatever we want to say as text
32:52 - it's going to throw all kinds of errors
32:54 - where we do it that way and react native
32:57 - uh let me go back there we go cool all
33:00 - right so this is gonna be our splash
33:01 - screen
33:01 - next thing that we want to do jesse is
33:03 - we want to style it out
33:07 - uh we're gonna head back into the
33:10 - resources folder
33:11 - and we're gonna start creating uh some
33:13 - styles
33:16 - resources
33:21 - so let's see actually if you want to go
33:24 - ahead
33:24 - and uh kill the server real quick
33:28 - yeah oh and guys when when we're in
33:30 - react uh
33:31 - native we actually have to kill the
33:33 - server every time we want to install
33:35 - something new
33:35 - i don't know about you guys but when i'm
33:37 - working in react i never really kill the
33:39 - server i just
33:39 - npm install whatever i want to install
33:42 - uh in react native it almost never works
33:44 - you usually have to kill the server
33:45 - first
33:46 - so jesse if you want to go ahead and say
33:48 - npm install
33:49 - we want to install react native
33:51 - responsive fonts
33:53 - oh so wait so i'm going to go to
33:59 - oh so i'm going to go to our project
34:05 - and excuse me what did you say npm what
34:09 - yeah so say npm i mpmi
34:13 - and it's going to be react react dash oh
34:18 - excuse me react dash react dash native
34:21 - dash
34:22 - native dash responsive
34:26 - dash font size all one word oh font
34:29 - size like this yes
34:33 - great and that's it i gotta
34:36 - execute this now yep okay go ahead
34:40 - we're gonna install it and guys what
34:43 - this package does react native
34:45 - responsive font size
34:46 - is it gives us two main functions that
34:49 - we can use the one that we're going to
34:51 - use
34:52 - um will allow us to calculate a font
34:54 - size
34:55 - based off of uh the basically the screen
34:59 - height
34:59 - right so obviously everyone has a
35:02 - different type of phone
35:03 - we have 80 000 screen sizes when it
35:06 - comes to phones
35:07 - so to basically say that we only want
35:09 - one font size would be kind of
35:11 - uh an error in the developers part right
35:14 - so this package basically allows us to
35:18 - you know uh calculate that font size
35:21 - based off of screen height
35:22 - so right now we can barely see the text
35:24 - that's on that phone
35:26 - but once we install this it's going to
35:27 - be a little bit easier to read um are
35:29 - you sure this is the
35:30 - this is the package because i got an
35:33 - error it wasn't the right pack i
35:34 - couldn't find that package
35:36 - now put it in your uh chat as well if
35:40 - you want to copy from there
35:43 - in the skype chat
35:45 - [Music]
35:46 - wait i can't open that one now
35:52 - let me see okay here i think it's here
35:59 - aha here i think oh yeah it needed
36:03 - another dash at the end before font size
36:05 - actually
36:06 - okay oh yeah yeah so
36:09 - no yeah that's okay so guys so it's
36:12 - empty
36:12 - so you don't have to do sudo i don't
36:15 - think that was a previous thing i had
36:17 - before but npm i
36:18 - react dash native dash responsive
36:22 - dash font size okay now this looks
36:26 - better yeah okay so while we let that
36:29 - install if you want to head back over to
36:31 - our resources folder
36:33 - um i just added a file so we're gonna
36:35 - have a file in there called colors.js
36:38 - great now this is another pretty
36:39 - standard thing for react native
36:41 - you're typically going to have a
36:43 - separate file somewhere that's going to
36:44 - store all of your apps
36:46 - colors that you can use across the
36:48 - entire app
36:49 - so guys we're going to say export
36:51 - default
36:53 - and we're gonna just say colors now
36:54 - typically when we see export default
36:56 - it's usually like
36:57 - a function based component or something
36:59 - uh for us
37:00 - oh look it's just gonna be an object i
37:02 - found out how to make this bigger
37:05 - let's go okay oh okay here we go
37:08 - hey hey
37:10 - all righty nice colors
37:15 - all right so the first one we want is
37:17 - gonna be white
37:18 - it's pretty standard uh so we can just
37:21 - say
37:22 - f f all right
37:25 - next thing guys we're going to say
37:26 - primary blue this is going to be our
37:28 - coin base blue
37:30 - oh that's royal blue yeah
37:33 - we're going to say oh oh
37:40 - so this is the colors that we have so
37:42 - far we'll add a little bit later
37:44 - um let's hop back into our
37:48 - uh welcome no yes our welcome js page
37:51 - oh this one here
37:54 - yes and actually
37:58 - right click well actually i'll do it uh
38:00 - we're gonna add a
38:01 - style dot js file to our welcome folder
38:05 - so not the pages
38:06 - but the welcome uh so we're gonna say
38:09 - style.js if you can click into that
38:11 - yep here yes
38:16 - all right guys so in this one we're
38:19 - going to start using
38:20 - a style sheet so we're going to start
38:23 - creating our styled components
38:25 - oh we're going to say
38:29 - import style sheet from react native
38:34 - and this allows us to kind of just build
38:36 - javascript objects
38:38 - that will apply our you know
38:41 - more or less css to our components um
38:45 - and this is another really standard
38:47 - thing for react native because you're
38:48 - not going to use css pages
38:51 - uh the next thing we want is rf value
38:54 - and this is the function that we're
38:56 - going to use from
38:58 - that uh react native react
39:01 - native uh responsive
39:04 - fossils right so that thing that we just
39:07 - installed
39:09 - we're gonna use rf value now this is the
39:12 - one that will calculate based off of
39:13 - screen height
39:14 - i think there's another function in this
39:16 - uh
39:17 - package but i don't remember its name so
39:23 - all right so then we're going to say
39:24 - import colors from
39:26 - wherever we just created colors so we're
39:28 - going to go all the way back up
39:30 - and go ahead and grab that resources
39:33 - folder and then grab
39:34 - colors
39:38 - there we go oh cool
39:43 - next thing that we want to do is go
39:44 - ahead and say export default
39:47 - style sheet now guys you've seen this at
39:50 - the bottom
39:51 - of react clones we're going to do it in
39:54 - its own
39:55 - file and then just bring this file into
39:58 - our welcome page
39:59 - to import all of these styles
40:02 - okay so let's first create our container
40:08 - there we go all right so we're going to
40:10 - say flex equals one
40:12 - uh and this is pretty much just gonna
40:13 - say that our splash page is gonna take
40:16 - up the entire page
40:18 - and we're gonna set that background
40:19 - color to colors so we're gonna look into
40:22 - that object we just imported
40:24 - and go find primary blue oh
40:27 - so this is super handy actually
40:29 - basically to have a template of colors
40:31 - for your whole app
40:32 - so this is also this is just something
40:34 - you gonna be able to do yeah
40:36 - this is also something you use for
40:37 - example if you want to have a light and
40:39 - dark team
40:40 - in your app yes sick yeah i love that
40:43 - i love that let's go come on come on yes
40:46 - so yeah typically guys you know
40:48 - sometimes we'll have this colors folder
40:49 - and it's actually going to have some
40:50 - stuff at the top that's gonna
40:52 - you know it's gonna use some react
40:53 - native features that will determine
40:57 - if your app or your phone is in dark
41:00 - mode and it'll change all of the
41:01 - uh colors so it's really really cool
41:05 - um so then we're gonna have our main
41:07 - view
41:08 - we're gonna say flex one again
41:11 - we're gonna say align items
41:15 - we're gonna say center and then justify
41:19 - content center oh
41:22 - this is going to be pretty standard for
41:24 - any splash screen
41:25 - uh right we just want the logo or the
41:27 - text to be
41:28 - dead center of the page with whatever
41:30 - kind of uh
41:31 - themed color background that we have so
41:34 - then we want to create our text style as
41:36 - well
41:37 - and we're going to say color
41:41 - and guys this is pretty much these are
41:43 - pretty much
41:44 - css objects but in a javascript
41:48 - type format uh which allows us
41:51 - to style everything in react native
41:53 - right because we can't really use css
41:55 - pages in here by the way tenor
41:56 - it seems like your sound is getting
41:58 - softer or somehow
42:02 - maybe sorry guys is that better
42:05 - um no it has to be a little bit louder i
42:07 - think to be honest
42:10 - okay a little bit louder or maybe can
42:12 - you go come closer to the mic
42:13 - is that possible because i'm really loud
42:15 - i think yeah
42:18 - okay i just turned up the game again a
42:20 - little bit is that better it's still a
42:22 - little bit
42:23 - soft i don't know how to fix it
42:27 - maybe talk a little bit louder i don't
42:29 - know yeah just uh i'll just have to talk
42:31 - a little bit louder okay
42:32 - is that better let's just keep going
42:36 - okay all right guys so now we've created
42:40 - our text style as well
42:41 - we're gonna say colors and set that one
42:43 - to white we're going to make it bold and
42:45 - we're going to set the font size
42:47 - to rf value of 35
42:50 - so again this is that function that's
42:52 - basically going to calculate
42:54 - our font based off of screen size so
42:58 - all right let's save that file let's
43:00 - head back into the welcome.js
43:02 - file jesse
43:06 - sorry yeah this file which well
43:10 - welcome.js welcome to js yes
43:14 - all right and then uh we're gonna start
43:17 - styling or we're gonna start adding
43:18 - the style so first thing that we need to
43:20 - do is go ahead and import it up here at
43:22 - the top
43:23 - we're gonna say import style
43:27 - from and we're going to go up one folder
43:29 - and import our style
43:32 - there we go alright so our safe view
43:34 - we're going to make this our container
43:35 - so we're going to say
43:39 - io equals style.container
43:43 - all right because again guys this is an
43:46 - object
43:47 - right this entire thing is just an
43:48 - object and we're accessing all of the
43:50 - objects within our object
43:52 - so it's just objects so we're going to
43:55 - say
43:56 - style and look into the style object and
43:57 - grab our container object
44:00 - all right and then our view this one's
44:02 - going to be style equals
44:04 - uh style dot main view all right
44:09 - wow this is cool this makes sense though
44:11 - it's so clean too you know
44:14 - oh yeah and then we're gonna oh what's
44:17 - that
44:17 - the heck i don't know what just happened
44:21 - um and then we're gonna assign this
44:23 - style equal style text style
44:26 - to both of our text pieces there we go
44:29 - whoa and that's about it so i don't
44:32 - think the
44:32 - app is running right now if you want to
44:35 - rerun it yes let's do it
44:37 - i'm so curious on how it looks now
44:39 - already so
44:40 - whoop i'm gonna go here i'm gonna stop
44:44 - the server
44:45 - okay and i'm gonna
44:49 - refresh the page
44:52 - page okay so yes
45:01 - awesome so i'm gonna open up the
45:05 - emulator again it's starting up right
45:08 - now
45:10 - and oh
45:16 - oh i think we have a primary background
45:20 - color i'm gonna make this bigger again
45:21 - guys
45:22 - and it's blue and everything is centered
45:25 - how cool looks this guys oh my god so
45:28 - clean dude
45:32 - so this is our splash screen guys next
45:34 - thing that we want to do is
45:35 - create those buttons uh that are gonna
45:38 - show up
45:38 - after you know a couple seconds so we're
45:40 - gonna have this initial splash screen
45:42 - it's gonna wait a little bit
45:43 - we're gonna be loading up the app and
45:45 - then we're gonna have some
45:47 - uh buttons kind of just come in at the
45:49 - bottom which are gonna allow us to
45:50 - access the login and sign up pages
45:55 - so um we're gonna have to create
45:59 - some button components and i want to
46:01 - explain
46:02 - in just a little bit uh why we're going
46:05 - to do it the way that we're
46:07 - doing it so first thing we want to do is
46:10 - go into our components folder
46:11 - we're going to create a new folder this
46:14 - one's going to be
46:15 - button
46:19 - right and then inside a button we're
46:21 - going to create button.js
46:24 - so new file button.js
46:29 - yes all right guys
46:32 - so once again we can say uh
46:35 - rnf react native functional component
46:38 - wow
46:39 - yeah there we go pretty clean there i
46:41 - love it so we're going to take some
46:42 - props
46:43 - and these props are going to allow us to
46:45 - kind of have different
46:46 - buttons across our entire page now the
46:49 - reason that we're creating a custom
46:50 - button
46:51 - component the way that we're doing it uh
46:54 - rather than just
46:54 - you know importing button from react
46:56 - native is because
46:58 - if you use button from react native it's
47:00 - going to be very very plain and very
47:02 - very default
47:03 - and only controlled by android or ios we
47:07 - have no control over the way that they
47:09 - look
47:10 - when we do it that way so we're creating
47:12 - custom button components
47:13 - so the way that we're gonna do it is
47:15 - called or is a component called
47:17 - touchable opacity right now this is
47:21 - going to be
47:22 - a a type of object or a type of element
47:26 - that react uh native supplies to us
47:31 - that allows us to have full control over
47:34 - the way that it looks the way that it
47:36 - appears but it's also going to have
47:37 - touchable feedback
47:39 - right so when we click on it it's going
47:40 - to have automatic opacity applied
47:43 - and as you guys will see in just a
47:44 - second i can actually just
47:46 - tell it how active we want it to be
47:49 - right so we have to say
47:50 - um active opacity equals
47:54 - we're going to pass in 0.5 so it's going
47:56 - to go halfway
47:58 - uh opaque opaque what is that word
48:01 - right yeah so no i think it's correct
48:03 - it's going to be
48:04 - 0.5 opacity period there we go
48:08 - um so right when we click on it it's
48:11 - going to get a little bit opacity
48:12 - and we're going to be able to style this
48:14 - out however we want so we're going to
48:16 - have different buttons
48:17 - across this entire app we have blue
48:18 - buttons white buttons
48:20 - all these different buttons uh we don't
48:22 - want the default
48:23 - you know android material ui whatever
48:26 - and we don't want the default
48:27 - ios because then we have no control over
48:30 - the way that they look
48:31 - so we're creating our own button
48:33 - components
48:35 - so up here we're going to say const
48:38 - and we're going to destructor our props
48:40 - so we're going to have our text because
48:42 - again right we want to be able to use
48:43 - this button
48:44 - everywhere we want oh my god my screen
48:47 - just locked
48:49 - there we go okay jesse can you still
48:51 - hear me yeah i can hear you i can hear
48:53 - you i can hear it you can hear it clear
48:54 - yeah yeah yeah all right guys so we're
48:57 - gonna need text because we're gonna use
48:59 - this button
48:59 - everywhere it's gonna be reusable button
49:01 - component so we're gonna have a text
49:02 - we're gonna have an icon
49:04 - we're gonna have disabled
49:07 - um and i think that's it for now we
49:09 - might have to add to that later
49:10 - but we're gonna destructure this from
49:12 - our props
49:14 - all right next let's get rid of this
49:19 - text what we're going to do is say if we
49:21 - have text
49:23 - we might not have sex so if we have text
49:28 - then we're going to pass in the text
49:30 - into a text field
49:33 - okay guys so let's go ahead and load up
49:35 - the text in here
49:38 - i'm just going to copy this line because
49:41 - what we're going to do is actually just
49:43 - something very similar we're going to
49:44 - say if we have an icon
49:47 - then pass in icon well actually we don't
49:50 - want this to be text right so we're
49:52 - going to say
49:53 - image now we're going to have to import
49:54 - this
49:56 - and this comes from react native as well
49:59 - but this is basically gonna be like our
50:01 - uh you know standard image tag it's just
50:04 - a little bit different in react native
50:06 - so we're gonna come up here to the top
50:08 - and say where we say
50:10 - view and image we're going to also say i
50:12 - mean when we said view and text we're
50:14 - going to also say
50:15 - image and i don't think we imported
50:17 - touchable opacity so we need to do that
50:19 - as well
50:20 - we can get rid of view because we're not
50:21 - using it here all right so i overwrote
50:24 - view with touchable opacity we also have
50:26 - text we also have image
50:28 - now we're going to say the source of our
50:30 - image is going to be
50:32 - the icon
50:35 - next we're going to say resize mode and
50:37 - this is basically
50:39 - uh you know like
50:42 - background size or whatever we're going
50:44 - to say resize mode is going to be
50:45 - contained
50:46 - okay we don't want it to like expand
50:47 - past our button or anything like that
50:49 - so i think that looks pretty good for
50:52 - now
50:53 - and the next thing that we want to do is
50:55 - going to be very similar to when we
50:57 - created
50:57 - our splash page we're going to have to
51:00 - uh basically import and export this in a
51:03 - separate
51:04 - index file right so
51:07 - in our button folder yes in the button
51:10 - folder
51:12 - here in our button folder yeah we're
51:14 - going to say index.js
51:18 - and there we go uh we're gonna go ahead
51:21 - and import the button and
51:22 - immediately export the button oh again
51:25 - in that layer
51:27 - yep so the same way that we're doing our
51:29 - screens guys is the same way that we're
51:31 - gonna do our components
51:32 - um where pretty much you know
51:35 - when you look at you know the standard
51:38 - kind of
51:39 - imports when we say import yada yada
51:41 - from react and we use this kind of
51:43 - destructoring or whatever we want to
51:45 - call this um
51:47 - sorry i actually moved to the welcome js
51:50 - page that's my bad
51:51 - um but yeah when we typically
51:54 - import stuff from react or react native
51:57 - and we're saying use effect
51:58 - or view text safe area right we're only
52:02 - really saying one thing we're importing
52:04 - it from one place
52:05 - so this is the way that it works right
52:07 - we have one index file that's basically
52:09 - importing everything that we want to use
52:11 - and then exporting it back out
52:13 - so that we don't have to keep saying
52:15 - okay go into this folder go into this
52:16 - folder go into this folder we're just
52:18 - gonna have it in one place and
52:19 - destructor it from there cool
52:21 - yeah okay awesome yeah by the way
52:24 - your mic is your mic close by or not
52:28 - yeah it should be i mean it's like right
52:30 - here okay this is better if your glaze
52:33 - but it's still quite soft though so try
52:35 - to speak up and i might be really loud
52:37 - so
52:38 - yeah okay sorry
52:41 - um i'm just gonna keep adjusting the
52:45 - gain there okay cool so let's head back
52:47 - to the index.js in our button folder
52:52 - and this is going to be where we import
52:54 - button
52:55 - from the button.js
52:58 - so we're going to go into the index
53:00 - index.js
53:01 - yeah we're going to be here yes perfect
53:04 - so we're going to say import button
53:06 - from the immediate file button
53:10 - okay and then we're just going to
53:12 - immediately export it
53:16 - so we're gonna say import i mean export
53:19 - button
53:20 - as default there we go
53:23 - okay next thing that we want to do is
53:26 - also create a style gs file
53:30 - in that same folder so inside of the
53:33 - button folder we're going to say
53:34 - style.js
53:36 - and we'll come back to this in just a
53:37 - little bit but for now
53:39 - we're going to say the same thing that
53:41 - we said in the last one
53:43 - import button
53:47 - from button
53:53 - and then export button as well
53:56 - wait in which file are you now you're in
53:58 - the welcome
53:59 - i am in style.js inside of the button
54:03 - right here
54:04 - yeah there we go so this is going to
54:06 - look the exact same as our
54:07 - uh after mentioned index
54:11 - yes there we go okay so we're going to
54:14 - say
54:15 - button as default there we go
54:20 - this is in components ah you're in
54:23 - components okay
54:24 - yeah yeah so inside a button we also
54:27 - have style.js
54:29 - and that's what i just created wait wait
54:31 - button.js sorry i'm like i'm confused so
54:34 - button.js and the style.js
54:36 - yeah style.js so you're here that i just
54:39 - created
54:40 - yeah okay great
54:43 - oh what just happened there we go okay
54:45 - cool so yeah it's
54:47 - right now uh for now we're just gonna
54:49 - have it the same as our index.js file
54:52 - and then we're going to come back and
54:53 - add the styles in just a bit
54:55 - so the next thing that we want to do is
54:57 - inside of the
54:59 - components folder we're going to create
55:01 - another index.js
55:03 - and this is where we're going to
55:06 - pretty much officially export our button
55:09 - right so same way that we did our
55:10 - screens we're passing it up
55:12 - in layers all right so you should see
55:15 - now
55:16 - a index file immediately inside of the
55:18 - components folder there jesse
55:21 - in the folder like here
55:25 - yeah so index the bottom one the bottom
55:28 - one
55:29 - here yep yeah there we go cool
55:32 - so in this one we're going to say import
55:33 - button
55:35 - baton there we go
55:39 - that sounds very familiar
55:45 - um there we go
55:50 - all right and then we're just gonna
55:51 - export button right alright so guys
55:54 - this is pretty much what i was talking
55:55 - about you know just the same as when we
55:58 - import stuff from react native when we
56:01 - import stuff from react
56:02 - uh this is you know typically we're just
56:04 - gonna see a destructor
56:06 - version of it up top where it's gonna
56:08 - say you know
56:09 - let's import use state and use effect
56:11 - from react
56:13 - well this is basically how that back-end
56:15 - looks we're basically just saying
56:17 - bring everything into an overall index
56:19 - file even though we have
56:21 - folders upon folders upon files all of
56:23 - this stuff
56:24 - we're just gonna have it all exported
56:26 - from one file
56:29 - let's save that one and let's save the
56:33 - other index okay cool
56:34 - thank all my stuff to save now now
56:37 - at this point we can go back into
56:40 - welcome.js
56:42 - and add the buttons oh
56:45 - so we're going to go here yep
56:48 - and then so this is where we're going to
56:50 - say if we have a visible
56:53 - selection
56:56 - and let's create a view first right
56:59 - because if you guys are familiar with
57:00 - react you know that we can't
57:02 - have multiple items just sporadically
57:04 - anywhere without like a fragment at
57:06 - least
57:07 - um so the the next best thing that we
57:09 - have in react native is just this view
57:11 - so we still have to render it um so
57:14 - we're gonna say
57:16 - button so we're gonna have to import
57:17 - this from the top
57:20 - so we're gonna say import
57:24 - button and as you guys can see we're
57:26 - just destructoring it
57:27 - and we're gonna go look inside of oops
57:32 - we're gonna go look inside of components
57:33 - and that way we don't have to do
57:34 - anything like components
57:36 - button button all that stuff right we
57:39 - just say components
57:41 - oops come components there we go
57:45 - all right i need to wrap that in a
57:46 - string there we go
57:49 - all right so now we have our button so
57:50 - now let's come down here
57:53 - and pass in some text or buttons because
57:54 - remember guys we needed all of those
57:56 - props
57:56 - so this first one is going to say get
57:58 - started
58:00 - oh yeah and disabled is false
58:08 - there we go
58:11 - all right and then uh copy paste it
58:13 - we're gonna have another button this
58:14 - one's gonna say
58:16 - sign in
58:19 - okay and this one's also gonna be
58:20 - disabled uh false
58:23 - and we'll be back because we're going to
58:25 - add some on press
58:26 - so in react native
58:30 - we can't really create like a tags or
58:34 - links or anything like that
58:35 - we create buttons and then we say on
58:38 - press
58:39 - you know do some sort of navigation
58:42 - thing so as you guys see up here we have
58:43 - a navigation
58:45 - prop and that's going to be
58:46 - automatically created
58:48 - by the the navigation component that we
58:52 - create
58:52 - in just a moment so
58:55 - and the navigation component can kind of
58:57 - be thought of as like
58:58 - a react router basically
59:02 - okay so
59:06 - next thing that we want to do is go
59:07 - ahead and start creating this
59:10 - uh navigation component so i'm gonna go
59:12 - ahead and delete that on press that i
59:13 - just made because we don't need it right
59:15 - now
59:16 - but we'll be back so now let's go back
59:19 - into app.js
59:21 - jesse yeah and by the way you do have an
59:24 - error
59:24 - um is that something we should be
59:26 - looking for right now because it's
59:27 - looking for the files i believe
59:30 - um what does it say the import of the
59:32 - button at line four
59:34 - as welcome.js here
59:38 - button from okay so boom
59:42 - boom maybe i forgot an
59:46 - extra oh refreshing yes
59:49 - oh nice look we got the get started and
59:52 - the sign
59:53 - in okay cool there we go there we go
59:55 - app.js
59:57 - yeah so if you guys missed that i forgot
60:00 - to go up one more folder
60:02 - to import the button um and then jesse
60:04 - you should be able to actually click on
60:05 - those
60:06 - and we should see some sort of opacity
60:08 - oh on those buttons oh no button okay
60:10 - i'm going to click on it
60:13 - you see that it's very very slightly
60:15 - guys i hope you guys can see it but when
60:17 - you press on it
60:18 - it becomes a little bit lighter and that
60:21 - is that opacity
60:23 - that we um stated here i think in colors
60:27 - right or in styles here in style
60:30 - but button here and button.js that is
60:33 - this
60:33 - particular opacity yes
60:37 - awesome cool let's go we can kind of see
60:39 - it all come together
60:40 - and that's going to basically allow us
60:42 - to have automatic visual feedback from
60:44 - whatever element we say
60:45 - you know touchable opacity cool cool
60:49 - let's go let's go so what else what's
60:51 - next
60:52 - so let's hop back into app.js and we're
60:56 - going to remove this
60:57 - welcome screen and what we're going to
60:59 - do now is actually just create our root
61:02 - navigation
61:03 - so because if we just leave that welcome
61:05 - screen right here on the app
61:06 - uh js we're we're just going to be stuck
61:09 - on the uh splash screen forever right
61:12 - so what we wanna do and we're gonna
61:14 - break it for now because we don't have
61:15 - this yet
61:16 - um but we're gonna create our navigation
61:19 - component and this is gonna allow us to
61:20 - jump
61:20 - from screen to screen right uh so here's
61:24 - our component we need to
61:25 - also import it so up here at the top uh
61:27 - we can get rid of the import welcome
61:29 - we're actually just now gonna say import
61:32 - root
61:33 - navigation and we're gonna get that from
61:38 - we're going to get that from a
61:40 - navigation folder which we have not
61:42 - created yet
61:44 - navigation there we go and we're going
61:47 - to call it
61:48 - navigation there we go guys so now let's
61:51 - go back
61:52 - over here to our folder structure we're
61:55 - going to create a new folder at the base
61:57 - of our
61:57 - app and this is what's going to be
61:59 - called
62:00 - navigation
62:03 - okay and then inside of that
62:07 - uh we're going to create the root
62:10 - navigation component
62:12 - so we'll say new file root navigation.js
62:17 - now this is probably the most important
62:19 - part of your react native app
62:21 - because this is how you're actually
62:22 - going to get from screen to screen
62:24 - without this you will never go anywhere
62:26 - you'll be stuck on one page
62:28 - for eternity so let's go ahead and again
62:31 - say rnf go ahead and create
62:35 - our function based component um
62:39 - and we need a couple things so first
62:42 - thing that we want to do is actually you
62:44 - want to kill the server jesse
62:45 - oh kill the server we're going yeah
62:48 - we're gonna go ahead and
62:50 - install some stuff okay we're gonna go
62:53 - install some i'm gonna make my screen a
62:54 - little bit bigger i'm gonna zoom in okay
62:56 - whoop like this this is my terminal guys
63:00 - oh this is too big actually i like it i
63:01 - make it smaller a little bit smaller
63:02 - okay
63:03 - like this and hey
63:06 - i have to oh it was very wide okay whoop
63:08 - like that
63:10 - okay how wide was it
63:13 - already like this i zoomed in i just
63:16 - sent you the command that we want to use
63:19 - okay so guys we're going to say npm i
63:23 - and we're going to install two things
63:24 - right now so we need react navigation
63:27 - native and renek react navigation stack
63:30 - so once you paste it in we'll see what
63:32 - that looks like
63:36 - oh this i pasted it in
63:40 - oh strange okay sorry about that
63:44 - aha like this okay moment guys here it
63:47 - is
63:47 - boom npmi there we go at react nate
63:51 - dash navigation slash stack
63:55 - and then at dash
63:58 - navigation slash native okay so that's
64:01 - the full command guys
64:05 - so these are uh you know pretty much the
64:08 - go-to
64:10 - uh for creating your react native
64:13 - navigation so once you install these uh
64:16 - what they're gonna provide for us is the
64:17 - navigation
64:18 - uh container and then the navigation
64:21 - stack that we're gonna be able to
64:22 - actually get around our app with great
64:25 - we hop back into the
64:27 - root navigation js file
64:31 - here
64:34 - all right so let's go ahead and import
64:37 - those
64:38 - what we aren't going to need is the view
64:40 - and the text from react native
64:42 - because when we have our uh root
64:45 - navigation
64:47 - component we don't really ever put any
64:49 - like real
64:50 - uh like forward facing
64:54 - information or anything in there right
64:56 - we don't have any view we don't have any
64:57 - text so we can go ahead and delete that
64:59 - so what we do want is to actually create
65:02 - our navigational stuff so we're gonna
65:03 - import navigation
65:08 - container we're going to get this
65:12 - from
65:16 - at react dash navigation
65:20 - native okay guys and then just kind of
65:24 - copy paste that real quick because the
65:27 - next thing that we need
65:28 - is create stack navigation
65:32 - and again i kind of mentioned this
65:34 - earlier but all of the pages that we
65:35 - create
65:36 - they're basically just a stack of pages
65:38 - on our app
65:39 - you know we can swipe through them or
65:40 - whatever and we could actually
65:42 - physically swipe through them if we had
65:43 - a specific
65:44 - animation but we don't need that for
65:46 - this app
65:47 - but the point being is we just have a
65:49 - stack of pages and we need a way to get
65:50 - through them so we're creating this
65:52 - navigation stack
65:54 - so let's change this one from native to
65:55 - stack there we go guys
66:00 - all right and then we have that being
66:02 - exported that's
66:04 - good now next thing that we want is to
66:06 - create
66:07 - our stack so we're going to say const
66:11 - stack
66:11 - equals and we're going to run
66:16 - create stack navigation
66:20 - all right next thing that we want to do
66:23 - is we don't have any of these uh viewer
66:26 - text anymore
66:27 - so let's go ahead and say
66:31 - navigation container and that's what we
66:34 - just
66:34 - imported and this is going to wrap our
66:36 - stack so next thing that we're going to
66:37 - do is say stack
66:38 - that console that we just created and
66:42 - screen now guys
66:46 - pretty much oh wait i forgot one step
66:49 - so let's delete this really quick uh we
66:52 - need first
66:53 - stack dot uh
66:58 - navigator there we go
67:01 - now this guys is pretty much like using
67:03 - uh react router
67:05 - where we have this kind of overall
67:06 - wrapper that's going to hold all of our
67:08 - pages
67:09 - so in react router you would probably
67:12 - have like a route here right here
67:13 - right well what we're gonna do is say
67:15 - stack
67:16 - dot screen and these are gonna be all of
67:20 - the different screens that we can access
67:22 - um and we we're pretty much just gonna
67:25 - keep creating these for every new one
67:27 - that we need
67:28 - crap so this is actually a self-closing
67:30 - tag so i made this wrong so there we go
67:34 - all right so this first one its name is
67:37 - gonna be splash and we actually have to
67:38 - give them
67:39 - names to be able to access them
67:42 - the next thing that we want to do is
67:44 - give it a component
67:46 - so we're going to say component equals
67:49 - welcome because that's the only one that
67:50 - we have right now and that's going to be
67:51 - the one that we use for our splash page
67:54 - all right cool guys so at this point
67:57 - um and jesse i don't think the server's
68:00 - running right now
68:01 - um let's see no i don't think it's not
68:05 - no it's not running
68:06 - so npm i
68:09 - i no sorry npn run ios
68:13 - c okay
68:16 - now it starts up again it's gonna start
68:18 - up the metro bundler
68:20 - this will come up okay
68:25 - then open up the simulator
68:29 - see on the right on the left i mean
68:33 - okay this goes well
68:36 - hmm it only shows me this
68:42 - um let's see so stack screen
68:47 - let's see and then let's see what's in
68:50 - the app
68:50 - okay so we have our root navigation from
68:54 - navigation and then
68:57 - export default root navigation screen
69:01 - component ah well probably because i
69:05 - have not
69:06 - imported the welcome screen
69:09 - uh-huh yeah that makes sense
69:12 - yeah yeah yeah it's probably important
69:15 - probably a little bit yeah let's say
69:17 - import welcome
69:19 - from let's go up one page
69:23 - grab our screens folder and grab
69:26 - welcome okay let's see where it is in
69:29 - the page okay
69:30 - so you're welcome is here in these
69:33 - screens welcome
69:36 - wasn't it here welcome
69:39 - like this pages so that
69:42 - should don't you need slash pages
69:48 - um if you look here at the file
69:51 - structure
69:52 - no because it should be grabbing from
69:53 - that index page
69:55 - that's sitting inside of the controller
69:57 - yep
69:58 - like this so let's see so welcome
70:02 - welcome from screens welcome yeah we
70:05 - might just have to reload the app again
70:13 - yeah so try try closing out the emulator
70:16 - again we can try
70:18 - refreshing it closing out the emulator
70:21 - starting this one up we
70:24 - npm run ios i'm not sick of it yet so
70:27 - it's okay
70:29 - so let's go starting metro bundler
70:34 - then ios simulator
70:39 - oh there we go oh
70:42 - whoops now it's on my on my other screen
70:46 - let's grab it from there
70:49 - so whoop let's put it next to our code
70:53 - and let's so that that's what hap that
70:55 - is what happens though when you close it
70:57 - you have to like
70:58 - reset i have to resize it for you guys
71:00 - again and all that but that's okay you
71:02 - guys can see it here now
71:03 - so guys by the way if you are a fan
71:08 - of um tanner's teaching he is one of the
71:10 - teachers and that's why
71:12 - he became our newest team team member
71:14 - okay he
71:15 - is teaching at our full stack mastery
71:17 - boot camp okay our eighth
71:19 - online uh eight month online program
71:22 - where we teach you how to become a full
71:26 - stack developer today we're going to be
71:28 - teaching you
71:29 - everything you need to know okay from
71:30 - front end back end
71:32 - how to build full stack apps but also
71:35 - one of the most important parts in our
71:37 - full stack mastery bootcamp
71:38 - that we focus on are fundamentals
71:42 - fundamentals okay so because guys
71:44 - imagine it if you build a house if you
71:46 - have to build a house
71:48 - building and knowing how to build the
71:49 - foundation is the most
71:51 - important wouldn't you agree tanner
71:55 - yeah definitely and i mean honestly the
71:58 - way i've always
71:59 - kind of seen it like you know with
72:00 - clever programmer you know you can come
72:02 - on you can look at the react phones you
72:04 - can look at
72:05 - you know all of that but you're gonna be
72:06 - pretty dependent on watching the clones
72:08 - and also you're only going to get the
72:10 - front end if you want to get these apps
72:11 - to actually work
72:12 - you know you'll learn the back end and
72:13 - you'll be able to do it you know
72:15 - naturally or on your own so i think it's
72:18 - really cool yeah yeah
72:19 - so but a lot of projects okay that we
72:22 - make in the boot camp we're gonna be
72:23 - it's always a lot of fun
72:25 - okay the it's always like a uh whenever
72:27 - we start record it's like a family
72:29 - you know you'll be together you'll be
72:31 - learning together you have so much fun
72:33 - guys
72:33 - and um i don't know maybe some of you
72:35 - guys have been to the webinar
72:37 - last week okay was amazing uh we we
72:40 - bring so much value and all of that i'm
72:42 - really proud of the program
72:43 - actually to be honest also because some
72:45 - of my students
72:47 - actually only being in the boot camp for
72:50 - two months they already landed the job
72:52 - of 70k
72:53 - dollars annual income i think that's
72:56 - amazing
72:57 - i don't know if you think so but i think
72:59 - that is amazing
73:00 - okay so guys if you are interested by
73:02 - the way in the description
73:04 - below is a link where you can book a
73:08 - strategy session with us okay just to
73:10 - see if you're interested
73:12 - just to see if you're a fit for our boot
73:14 - camp okay it's an investment
73:16 - but i assure you it is worth your time
73:19 - money and energy okay that's it
73:22 - let's go let's do this okay so
73:25 - it is actually loaded up here and it's
73:28 - giving me an error some sort of air
73:30 - yeah what does that say it says unable
73:32 - to resolve
73:33 - module react native gesture handler
73:38 - react native gesture handler
73:43 - react native gesture handler could not
73:45 - be found within the project
73:48 - oh if you are sure the module exists try
73:51 - these steps
73:55 - uh yeah we might be forgetting something
73:58 - oh what are we forgetting all right so
74:02 - we have our root navigation
74:04 - and we have react navigation stack we
74:07 - have react navigation native
74:10 - we have create stack we have
74:15 - navigation container
74:18 - all right where are you now which file
74:20 - are you now
74:22 - i'm root navigation studying yeah our
74:26 - root navigation
74:36 - okay so we have our screens being
74:40 - imported
74:42 - okay
74:47 - okay so i don't think we actually
74:50 - need to use it anywhere but it is
74:53 - something that we do need to install
74:55 - um so when we did react native uh react
74:58 - navigation native and react navigation
75:00 - stack
75:00 - uh we forgot to mpmi install
75:03 - react native gesture handler
75:07 - oh so that's my bad sorry okay
75:10 - so what does it actually do with just
75:12 - your handler
75:14 - so the gesture handler basically uh
75:18 - kind of how i mentioned earlier like we
75:19 - could have a stack you know of
75:21 - some stuff that we could swipe through
75:23 - you can you know you'll see it on
75:24 - you know apps all the time swiping
75:26 - through pages and stuff um
75:28 - it more or less allows that to happen
75:30 - right so you could uh but it also
75:33 - it does a lot more than that right so it
75:35 - just allows in general
75:36 - different gestures we can click on a
75:38 - button it'll bring us to a new page
75:41 - and kind of just allow us easier
75:43 - navigation right like this so i'm going
75:45 - to be doing
75:46 - npm install react native
75:50 - okay dash don't forget the dash guys
75:52 - react dash native
75:53 - dash gesture dash handler
75:56 - okay so can you make your uh terminal
76:00 - bigger
76:01 - yeah i i am boop there we go
76:04 - there we go there we go
76:07 - ah so this makes this actually assures
76:10 - all those swipe movements and all the
76:12 - movements you can make on your phone
76:14 - which are you know nowadays so normal um
76:18 - oh yeah to do that okay cool i think
76:21 - it's almost i think it's done
76:23 - all right so yeah we'll probably have to
76:26 - well we had to
76:27 - kill it off to install it anyways so we
76:29 - can go ahead and relaunch it
76:31 - yes relaunch it i'm gonna close off
76:34 - this simulator first okay and then i'm
76:37 - gonna run it again
76:41 - so now it starts up again
76:46 - whoa
76:50 - cool and now simulator okay
76:54 - why is it opening up in this because i
76:56 - closed it
76:57 - so let's see what goes on here
77:02 - so i'm gonna make it bigger for you guys
77:04 - and other than that
77:06 - tenor what what is the next thing once
77:09 - if once this is
77:10 - solved what is the next thing so once we
77:15 - can get past this error we will create
77:18 - our
77:18 - uh login page or at least start linking
77:20 - together the login page
77:22 - right right it stays black though
77:25 - so what does that mean is your emulator
77:28 - broken bro
77:32 - well it says you're opening on iphone 8
77:37 - here it does say this on line 15
77:42 - okay failed to build javascript bundle
77:46 - because of why because of nat react and
77:48 - native screens okay
77:50 - yeah okay so i thought that was gonna
77:51 - happen i sent you a couple more
77:53 - things to install so we can go ahead and
77:54 - kill it off again all right we have to
77:56 - install a lot guys
77:59 - we're not done yet okay we're not done
78:01 - in the terminal yet okay terminal gotta
78:03 - work hard today
78:05 - okay so that said got set guys
78:08 - that's okay so we have to install some
78:11 - more
78:12 - so we have to install this and
78:15 - um it's gonna be called a lot of the
78:17 - stuff that we end up installing we don't
78:19 - really like
78:20 - tend to you know import or use but
78:23 - they're pretty much dependencies
78:24 - on uh the navigation system
78:28 - right so with react native navigation it
78:31 - does require quite a bit to actually
78:33 - work and be able to navigate through all
78:36 - of your different screens
78:37 - right right so what does this gesture uh
78:40 - command do
78:40 - npmi react native reanimate it
78:45 - um it's just one of those like random
78:48 - dependencies to be honest with you
78:50 - like i don't really i've never really
78:51 - like used it in depth or anything
78:54 - so okay okay okay so that was
78:58 - done pretty quickly so this means it's
79:00 - all good
79:01 - okay so we're gonna do the next one okay
79:05 - the next one is gonna be react native
79:07 - safe area context
79:09 - which you know yeah save area context
79:12 - okay this one
79:22 - right and the last one
79:27 - and this is one the i think this is our
79:29 - last error was about this
79:30 - okay so mpmi react
79:34 - native screens
79:38 - that's a lot of packages is it normal in
79:41 - react native to use a lot of packages
79:45 - i would say so um especially when it
79:47 - comes to like the navigation component
79:49 - aha right right i feel like a lot goes
79:52 - into that
79:52 - so i'm gonna close off this emulator so
79:55 - are you sure
79:56 - tanner that we have installed everything
79:58 - that we need
80:00 - that should be yeah um it should be
80:03 - everything okay
80:04 - great well if it doesn't we'll just find
80:06 - it out that's what a developer does
80:08 - right so npm run ios
80:10 - dashie
80:13 - okay metro bundler starting up
80:22 - oh it takes quite long comparison to
80:25 - okay
80:25 - there it is nice okay hmm
80:29 - that's getting heavy man oh the app's
80:30 - getting heavy
80:32 - i hope i hope this is a good sign though
80:34 - that we saw that screen with apps
80:37 - oh i think something's happening
80:41 - something's happening
80:45 - okay cross our fingers that we don't get
80:48 - any errors
80:50 - well 100 okay
80:53 - oh but i think
80:57 - we we should be in our root navigation
81:00 - okay so in the notification folder root
81:01 - navigation file
81:03 - and then at line seven it says
81:06 - this is not a function create stack
81:10 - navigation is not a function
81:12 - so we are importing create
81:15 - nav stack navigation from
81:19 - this oh so i think we also i don't think
81:23 - we
81:23 - installed this one to be honest it's
81:26 - because i'm dyslexic
81:28 - oh so it's gonna be creax create stack
81:32 - navigator
81:34 - we're gonna change the import as well
81:37 - and
81:38 - that should fix it
81:41 - nope nope now but by the way did i i
81:44 - don't remember
81:45 - installing this did we did this did i
81:46 - install this one
81:49 - yeah i put it in with uh the native one
81:51 - i just gave it to you as one line
81:52 - all right okay okay good good good good
81:55 - just checking both at once
81:57 - so create stack navigator
82:01 - from react navigation stack
82:04 - that looks good this should be good you
82:06 - know what
82:07 - a lot of the times when we have an error
82:09 - especially when it's kind of like a
82:11 - a deep root error in react native um
82:14 - you'll have to completely refresh the
82:16 - app
82:16 - [Laughter]
82:19 - so guys we're we're teaching you we're
82:21 - teaching you the real
82:22 - life scenarios here okay it's not even
82:25 - scenario
82:26 - this is just how it is okay so we're
82:28 - killing that server
82:30 - again but that's okay we just got to
82:31 - keep doing going okay
82:33 - in development and when you're studying
82:35 - you know you just gotta keep going
82:36 - so here it's starting off again
82:41 - yeah some of those errors they're gonna
82:42 - be pretty persistent and react native
82:44 - so you really just gotta get used to
82:46 - refreshing it
82:47 - sometimes the air is gonna be there
82:49 - shoot i didn't close it off before i
82:50 - killed it i'm
82:52 - sorry learned that the hard way
82:56 - guys stay with us okay
83:00 - this is just how it's done okay so
83:07 - it's going to start up and then
83:10 - start oh that mean emulator
83:17 - to do okay
83:20 - what does the black screen mean we had
83:22 - that before that's usually not a good
83:24 - sign
83:27 - um did anything pop up in the expo
83:29 - terminal
83:30 - like you did last time no
83:33 - says running build yep running
83:36 - application
83:38 - man that's an ios thing got a black
83:40 - screen of death
83:41 - um yeah i guess
83:45 - i mean the the code compiled correctly
83:47 - so i would just try to reset the
83:48 - emulator again really this this time
83:52 - let's run
83:53 - uh npm run ios with dash c so where
83:55 - they're clearing the cache
83:57 - yeah oh i've done that also the previous
83:59 - time
84:00 - was that not necessary like this right
84:03 - um
84:04 - yeah let's do that make sure we close
84:05 - out the emulator yeah it's closed
84:08 - it's closed okay let's go
84:12 - a e
84:19 - oh it came up
84:22 - oh oh i'm seeing something that i like
84:29 - no black screen that's good no black
84:31 - screen um
84:32 - real quick hop back into root navigation
84:35 - i added something that i'd like to
84:36 - explain real quick
84:38 - nice rude navigation all right guys so
84:41 - this line right here a couple lines
84:43 - right here uh
84:44 - screen options right we're not really
84:46 - passing them in right now
84:47 - but basically this is kind of like and
84:50 - well actually it applies to android and
84:52 - ios but a lot of the times with these
84:54 - like
84:55 - default kind of like material ui and
84:57 - stuff like that
84:58 - oh actually our app is up finally yes
85:02 - we see there up at the top you guys see
85:04 - that white bar that says flash
85:06 - that's what this screen option right
85:07 - here is for to hide that
85:09 - ugly bar that we typically get with
85:10 - default uh ios
85:12 - and android apps oh so the stack screen
85:16 - has a default of that the white bar oh
85:19 - yeah
85:19 - oh yeah wow that's almost like that's
85:22 - almost like default on you know react ts
85:24 - like when you have to remove
85:26 - all the margin and all that in your
85:27 - whole app exactly
85:30 - okay so guys let's go in right here in
85:32 - our stack navigator
85:33 - um and we're pretty much just gonna say
85:35 - screen options
85:36 - and we're gonna say we're gonna pass in
85:39 - the screen options
85:40 - uh object that we just created and
85:42 - pretty much tell it to
85:44 - hide all of those headers so it's going
85:46 - to affect
85:47 - all of the pages we don't want any
85:48 - headers anywhere
85:52 - wait it's head or shown uh screen
85:55 - yeah there we go yeah yeah because you
85:57 - want to pass in the object not the key
85:59 - only
85:59 - yeah got it great great there we go so
86:02 - we want to fasten this object that we
86:03 - created
86:04 - um and there's other stuff that you guys
86:06 - can look into as well
86:07 - i mean if you wanted to keep that bar
86:09 - you could and you could change the
86:10 - background color you can
86:11 - customize all kinds of different stuff
86:12 - um but for our our purposes and
86:14 - especially on a splash screen we
86:16 - definitely want to hide that
86:17 - so tanner if i would want to know what
86:19 - kind of properties i can pass into
86:21 - navigator or
86:22 - you know stack um where should why
86:25 - should i look up the documentation
86:28 - so react native and expo both have their
86:31 - own
86:34 - documentation and even so much as
86:37 - actually for this particular part
86:39 - there's a specific documentation that we
86:40 - want to go to so we would go to react
86:44 - navigation so if i would look it up at
86:47 - google
86:47 - what would i say react navigation
86:52 - yeah actually just type in react
86:53 - navigation yeah it'll be the first link
86:55 - it's gonna say reactnavigation.org
86:58 - yep and then head on over into that
87:01 - say read the docs um it's going to tell
87:04 - you how to install it the stuff that we
87:05 - already did where we installed react
87:06 - native native
87:07 - or navigation native um and then it's
87:09 - going to tell you
87:10 - all kinds of different things so there's
87:12 - tab navigation which is that bottom bar
87:13 - that you can put into your apps
87:15 - kind of like on instagram um and you can
87:18 - pass in different icons into that you
87:19 - can have all kinds of different pages
87:21 - linked to each one of those icons
87:23 - but what we're doing is using it as a
87:25 - router right we still need it as a
87:27 - router to even get to these pages
87:29 - regardless of having the tab navigation
87:31 - at the bottom or not
87:33 - okay okay yeah okay
87:36 - nice so screen options we're passing it
87:40 - a value of that
87:41 - screen options object which makes that
87:43 - white bar
87:45 - hide or actually disappear at the top
87:47 - here so what's next
87:49 - so next we're gonna start building the
87:51 - login page so
87:53 - while we're still in the root navigator
87:54 - we're gonna import it we haven't created
87:56 - it yet so we're gonna get
87:57 - uh some errors
88:01 - oh yeah curly braces
88:06 - there we go so let's import login
88:10 - from
88:13 - our screens and we're going to have uh
88:16 - an off section so this is going to have
88:18 - login and sign up so again right we can
88:21 - just destructor this we don't have to
88:22 - keep going in
88:23 - even further so i like doing that and
88:25 - then
88:27 - down here where we have our stack screen
88:30 - let's control c oops there we go
88:34 - create two stack screens here guys
88:37 - um so this one we're gonna rename so
88:40 - we're gonna call it login
88:42 - and we're going to pass in that login
88:43 - component we just imported
88:46 - and the next thing that we want to do is
88:48 - also
88:51 - uh go back into our
88:55 - screens page so we have a welcome folder
88:58 - we're going to create an auth folder
89:01 - um so create folder
89:04 - auth and then in off we're going to
89:07 - create a new file
89:08 - and this is going to be
89:13 - well actually first
89:16 - let's see yeah sorry no that's okay
89:21 - yeah we are going to create a new file
89:23 - is going to be that index.js
89:25 - so again this is the pretty similar
89:27 - pattern that we should be getting used
89:28 - to
89:29 - where when we create these uh folder
89:32 - systems for these different pages
89:34 - we're going to have well different
89:35 - screens we're going to have different
89:36 - pages in each screen and we're also
89:37 - going to have that overall index
89:39 - to be able to export all of the
89:41 - different pages all the different
89:43 - screens
89:43 - all in one place right so where do you
89:45 - want me to go now
89:48 - so in screens inside of auth there
89:51 - should be
89:52 - an index.js right by the way you do we
89:55 - do have an
89:56 - error but we can look at that later okay
89:58 - so yeah so that's your login page we
90:00 - haven't created it yet
90:01 - aha so auth index yep
90:05 - going to go ahead and import the login
90:06 - page so this is going to be errors on
90:08 - top of errors on top of errors because
90:10 - we're
90:10 - we're importing login in so many places
90:12 - and we haven't created it yet right
90:14 - guys yeah yeah all right so let's import
90:18 - login
90:19 - and let's export login right
90:22 - eventually we will also add sign in as
90:24 - well origin
90:26 - or login i don't know where it came from
90:31 - our computer is speaking gibberish all
90:33 - right so in
90:34 - our off let's create a new folder and
90:36 - this is going to be
90:38 - login login there we go
90:41 - and this is going to need a login.js
90:44 - and a index.js right guys so
90:48 - very very same thing that we did with
90:50 - our welcome page we're just going over
90:51 - the same patterns
90:52 - so let's create a new file in here we're
90:54 - going to say index.js
90:58 - inside of login guys yes
91:02 - and you can probably guess what we're
91:03 - going to do we're going to say import
91:05 - login
91:06 - from login
91:12 - and then export
91:15 - in curly brackets
91:18 - log in as default as
91:22 - default
91:25 - perfect cool and last thing
91:28 - but certainly most definitely not least
91:31 - inside of our login folder we're going
91:32 - to create a new file
91:34 - capital login.js so we're finally going
91:37 - to start getting rid of that
91:38 - error oh we're finally going to be
91:41 - making the login component itself itself
91:45 - yes oh again guys r n f boom
91:49 - all right cool so
91:53 - what do we want in here first we want
91:55 - buttons so let's go ahead and say
91:57 - imbor that's very same button component
92:00 - that we created
92:03 - we're going to get this from
92:06 - all the way up
92:10 - should be four one two three
92:14 - four yeah okay so go up about four times
92:18 - and grab components
92:22 - all right and then right here where we
92:24 - say import view and text from react
92:26 - native
92:27 - we're going to need a safe area
92:30 - because we don't want our input fields
92:32 - to kind of intertwine with the
92:35 - status area and then we're also going to
92:37 - say scroll view as well
92:38 - now guys in react native
92:43 - if we've had an entire page of content
92:46 - that exceeded
92:47 - the total height of our screen like if
92:50 - you have an iphone 12 or whatever and it
92:51 - goes past this the height of your screen
92:54 - you can't scroll to see the rest of it
92:56 - without a scroll view
92:58 - it will not allow it to happen
93:01 - so uh we'll demo this with with and
93:04 - without
93:05 - well actually there's not enough content
93:06 - on the login page to really demo it but
93:09 - you guys will see it later
93:10 - we'll demo it without the scroll view
93:13 - when we create
93:14 - uh the the dashboard
93:17 - so let's first wrap this in a safe area
93:20 - view
93:21 - and then
93:25 - go ahead and put in a scroll view as
93:26 - well so these are gonna be our
93:28 - containers
93:29 - uh and next thing we're gonna have is
93:31 - just a couple of views to contain the
93:33 - text and the button
93:37 - for our login page
93:42 - so we have a view here and this is
93:44 - basically just a div
93:45 - a more advanced div that react native
93:49 - uses
93:49 - to kind of generate our content and then
93:52 - here let's say
93:53 - sign in to the coinbase
93:58 - hey six so now let's go ahead and create
94:02 - another view underneath
94:04 - and this is going to be our button it's
94:07 - going to be self-closing there we go
94:09 - all right so we're going to pass in some
94:10 - props do you guys remember what our
94:13 - component looks like we need
94:14 - tons of props we're only going to pass
94:16 - in two though for this one
94:17 - so we're going to say text equals sign
94:20 - in
94:22 - and disabled equals false
94:30 - perfect
94:35 - okay so let's save that save that
94:38 - and last
94:42 - but not least we need to go ahead
94:45 - and create an on press event for
94:48 - our um button
94:54 - on our welcome page so if we head back
94:58 - over to welcome.js
95:06 - we're gonna go ahead and create an
95:07 - on-press event in
95:09 - uh welcome.js wait wait wait sorry i was
95:13 - not
95:13 - i'm not at wacom.js i should be here
95:16 - sorry i was still at the button okay
95:19 - okay
95:20 - yeah there we go all right so this is
95:22 - going to be
95:23 - wait which one did we just create sign
95:25 - in so yeah on the sign in button
95:27 - because we just created the login page
95:29 - we're going to say on press equals
95:32 - and here we're going to use a little uh
95:35 - callback function so we're going to go
95:38 - ahead and say
95:39 - navigation now this is where you see it
95:41 - coming into play
95:42 - that navigation we never passed it into
95:44 - this component but we did
95:46 - however call that component from within
95:48 - our navigation component
95:50 - right so just creating it calling it
95:52 - into that navigation stack
95:54 - automatically gives this component this
95:56 - navigation
95:57 - uh object we're gonna say
96:00 - navigation.navigate
96:04 - basically a link right so we're gonna go
96:06 - ahead and pass into this navigate
96:07 - function we're gonna go ahead and pass
96:08 - in log in
96:11 - that's going to take our app to a login
96:13 - page
96:14 - it's going to go ahead and find whatever
96:15 - it can
96:17 - with the name of login so if we head
96:18 - back over to root navigation
96:22 - root navigation
96:26 - whoop yep yep so you guys see the names
96:29 - there that's how we access these
96:31 - components
96:32 - so on the stack screen we say name
96:34 - equals login and that's what we just
96:35 - passed into that navigate
96:37 - function there so we can kind of see it
96:40 - all coming together this is how it's
96:41 - gonna
96:42 - uh kind of play out and
96:45 - i'm feeling like we're missing one thing
96:48 - let me check through some of these index
96:50 - files
96:51 - i believe
96:55 - welcome in our welcome no in
96:58 - our screens
97:01 - in our screens we're in the screens
97:04 - folder
97:05 - in the screens folder on that very top
97:07 - index
97:10 - well it'll be it'll be the very bottom
97:12 - yeah this one
97:15 - um so i think that's an auth so even
97:18 - further down
97:19 - yeah you can close off and we close
97:20 - welcome it'll be the last one
97:22 - right this one there we go yep in that
97:24 - one
97:26 - we want to go ahead and export uh the
97:28 - login page we just created
97:30 - so now is where you'll actually see what
97:33 - i meant where we're basically just going
97:35 - to have one
97:36 - index page exporting all of our
97:38 - different screens and components
97:40 - oh
97:44 - all right so auth oops
97:48 - auth index is automatically correct oops
97:52 - um
97:55 - auth index is automatically grabbing the
97:57 - index page from
97:58 - the auth file or auth folder which is
98:01 - exporting login and then
98:05 - that top line is exporting the
98:09 - index from the welcome folder which has
98:12 - our welcome component so everything kind
98:14 - of ties together and exports out of this
98:16 - one page so it's kind of like a gateway
98:21 - um cool cool i think that's pretty much
98:24 - that
98:25 - so let's uh let's try to reload the
98:28 - the app there oh okay so let's close the
98:32 - app first
98:33 - here
98:36 - okay um
98:40 - npm run ios
98:43 - okay see if it starts up
98:48 - it does
98:56 - okay
98:59 - yeah and then simulator
99:05 - okay it's still thinking
99:11 - we didn't get any abs well no no death
99:14 - oh
99:16 - uh what does it say so none of these
99:18 - files exist screen
99:19 - slash auth slash pages slash
99:24 - login screen
99:27 - off pages
99:30 - login and what does it say which uh file
99:33 - is throwing that error
99:34 - no it doesn't actually
99:38 - um but where did we import login into
99:41 - into the index that index this one
99:48 - wait which file is it when it says your
99:52 - screen
99:58 - oh wait i think i know why guys
100:02 - yeah so remember remember in the welcome
100:04 - folder the first folder that we have in
100:06 - there is pages
100:08 - yeah yeah yeah yeah yeah i messed up so
100:11 - yeah if we open up the auth folder
100:15 - we don't have a pages folder yeah
100:18 - by the way there's no indeed yeah yeah
100:21 - yeah
100:21 - yeah so let's create that and then
100:24 - pretty much just grab the login folder
100:26 - and
100:26 - throw it into the uh pages folder okay
100:28 - so this
100:29 - yeah you got there right okay boom
100:33 - there we go and that will require you to
100:35 - reload
100:36 - uh the emulator again right right right
100:39 - right okay
100:40 - got it so two
100:43 - two two okay
100:48 - shoot
100:53 - so here yeah it is already starting up
101:05 - oh this is a good sign usually i like
101:07 - this better
101:09 - [Laughter]
101:12 - well it's just part of the deaf life you
101:14 - know just gotta keep going
101:18 - so next thing that we're going to do is
101:19 - go ahead and style out those buttons
101:21 - because we left them pretty
101:22 - blank pretty uh unstyled the only thing
101:25 - that they have is that kind of default
101:27 - feedback the touch base feedback oh
101:30 - let's go look everything's working yeah
101:32 - that looks
101:33 - nice that looks slick okay let's go so
101:36 - let's go back to
101:37 - the the app.js file
101:40 - or where do you want to go so we're
101:43 - gonna go
101:44 - into we're going to go into the button
101:47 - folder
101:47 - in back into that style.js file that i
101:50 - said we were going to revisit
101:53 - excuse me which file um so
101:56 - in components yeah in button
102:01 - and then style js style js all right
102:04 - style gs so we left this with kind of a
102:07 - placeholder
102:08 - um go ahead and delete everything we
102:10 - don't really
102:11 - need that so
102:16 - we're gonna import a couple things this
102:17 - is gonna look a lot like the last
102:19 - style page that we created so we're
102:20 - gonna go ahead and import
102:24 - style sheet why do i keep doing
102:27 - parentheses
102:32 - there we go style sheet
102:35 - from react native
102:40 - uh and then guys we're gonna also get
102:42 - the rf value
102:45 - because again right we don't want our
102:46 - text to be uh too tiny and we don't want
102:49 - it to be too set
102:50 - we wanna kind of have it be more fluid
102:53 - based on what phone we're using so this
102:56 - is going to be react
102:57 - dash native dash responsive
103:01 - dash font size there we go
103:07 - okay next we're going to import that
103:11 - colors uh object that we had
103:16 - so let's go up a couple files our
103:18 - folders
103:19 - go back into our resources and find our
103:22 - colors
103:25 - so let me make sure that's enough
103:28 - so we have one two yeah i think that
103:30 - should be enough so just a couple
103:33 - uh folders up now we're gonna say export
103:37 - default and again we're going to use
103:40 - that style sheet
103:41 - so stylesheet.create to create our
103:44 - object here
103:46 - all right so here's where we're going to
103:48 - start applying some of our
103:50 - button styles so the plain black text
103:52 - that we have sitting under
103:53 - the coinbase clone text right there it
103:56 - has a little bit of a visual feedback
103:57 - when we touch it
103:58 - but they don't really look too nice
103:59 - right now so
104:01 - we're gonna say button container
104:06 - and let's just give this some good style
104:08 - let's make it look nice we're going to
104:10 - say width
104:12 - 100 now guys if we're not putting
104:15 - you know only a number then it has to be
104:17 - in a string in this kind of format
104:22 - okay next we're going to say height
104:27 - we're going to say rf value
104:32 - 50.
104:36 - okay and then we're going to say border
104:38 - radius so this is going to set our
104:40 - button
104:41 - to be a little bit rounded so we're
104:42 - going to say 10
104:45 - flex direction now guys
104:48 - i haven't said display flex at all and
104:50 - yet we're able to use flex direction the
104:52 - reason being
104:53 - is everything in react native is by
104:56 - default
104:56 - display flex react native knows what's
105:00 - up
105:04 - so tanner can you by the way let's let's
105:06 - let's pause for
105:07 - what can you tell a little bit about
105:09 - your career and what you have been doing
105:12 - so far um with uh with
105:15 - with coding you know yeah
105:19 - oh you only see me that's not what's
105:21 - supposed to happen
105:25 - um yeah i mean i started coding when i
105:29 - was like
105:30 - nine or ten pretty young uh mostly just
105:33 - hobbyish it wasn't really like
105:35 - anything too serious um but pretty much
105:38 - in third grade we had like a weebly
105:40 - project and uh
105:40 - i thought it was extremely interesting i
105:42 - thought you know
105:44 -  we can drag stuff around create
105:46 - websites anybody across the world with
105:47 - the same
105:48 - uh url can view it that's amazing and i
105:50 - love creating so
105:52 - i started kind of just reverse
105:54 - engineering all the code that i could
105:55 - find right
105:56 - because at the time you know there
105:57 - wasn't any clever programmer there
105:59 - wasn't any
105:59 - youtube channels no boot camps and stuff
106:02 - like that
106:03 - so i didn't have like proper guidance or
106:04 - anything it was mostly just let's see
106:06 - what i can
106:06 - build let's see what i can break let's
106:08 - see how many errors i can debug
106:10 - um if there's anything i'm good at it's
106:12 - probably debugging yes
106:13 - yeah yeah that was something that you
106:14 - should be good at that's one of the most
106:16 - important skills as a developer i think
106:18 - and what you just said you know
106:19 - having guidance to uh your journey
106:23 - becoming a developer is so
106:24 - important okay that's also what a lot of
106:26 - students say right
106:27 - the students that we teach they say like
106:29 - wow uh you guys
106:31 - guiding me that that takes me to the
106:32 - next level because some of them have
106:34 - been doing this for a long time on their
106:36 - own
106:37 - that's why guys you know join the
106:38 - community have fun interact with other
106:41 - people
106:41 - i always say one of my favorite mentors
106:43 - is actually
106:44 - um when you teach it you get to learn it
106:47 - twice
106:48 - which actually means like you're helping
106:49 - somebody and you're reinforcing your own
106:51 - knowledge
106:52 - okay so i think it's so amazing and i
106:55 - love seeing this build by the way so
106:56 - let's keep going but i think this is
106:59 - let's go fire okay guys
107:04 - alright guys so so we're here
107:08 - okay so it's up and running cool awesome
107:11 - so where did we leave off we say align
107:14 - center
107:15 - yeah you were standing the buttons
107:19 - cool so the next thing we want to do is
107:22 - justify
107:23 - content center so this is basically
107:25 - saying because
107:26 - you know it's not actually a button this
107:28 - is just a random
107:29 - uh touchable opacity type view area
107:33 - um so we're basically saying we want all
107:35 - of the text that's inside of it to go
107:37 - towards the center
107:38 - as if it was a button so we're going to
107:39 - say justify and
107:41 - align everything to the center
107:44 - and the next thing we want to say is a
107:45 - line cell
107:48 - center as well
107:52 - um and then if you guys remember that
107:55 - color object we created we're gonna say
107:58 - background color
107:59 - colors primary blue
108:02 - so our so our button here
108:08 - is going to be blue
108:12 - um let's see
108:16 - okay so then we're going to say button
108:18 - text
108:20 - and this is actually going to be uh the
108:22 - default button right because it doesn't
108:24 - really make
108:24 - sense to have a primary blue background
108:27 - for the button that's going to be on
108:28 - this splash screen
108:29 - but in our um
108:33 - button.js we're going to be able to take
108:35 - in
108:36 - some optional uh styles so we'll be able
108:39 - to style out all of our buttons
108:41 - a little bit differently
108:45 - we're gonna say colors
108:48 - dot white for the text color the font
108:52 - weight is gonna be bold
108:58 - and then the font size we're going to
108:59 - use that um
109:01 - that rf value function
109:04 - and we're going to say 15.
109:09 - the last thing that we want is going to
109:12 - be
109:12 - icon style
109:16 - so let's give it a height and a width
109:19 - using the rf
109:20 - value
109:24 - so this one's going to be 20 and our uh
109:27 - height or no our width
109:31 - is going to be 25.
109:35 - okay and then tint color which is a word
109:38 - you'll see
109:38 - all the time in react native especially
109:41 - when you do have like a tab bar or
109:43 - something
109:43 - uh the tint color is typically like the
109:46 - highlighted or active
109:48 - version so if we have an icon its tint
109:50 - color is going to be
109:52 - white okay
109:56 - so the next thing that we want to do is
109:58 - hop back into the button.js
110:04 - oh the button.js let's go
110:07 - yes awesome so up here where we have our
110:10 - uh constants we're going to add a couple
110:12 - more right now we have text
110:13 - icon and disable so we also want to add
110:17 - like i said guys we're going to have
110:19 - some button style
110:20 - you know we don't want all of our
110:22 - buttons to be background primary blue
110:23 - because it's going to blend right into
110:24 - the splash screen
110:26 - so we're going to say button style we're
110:28 - going to say on press we're going to be
110:29 - able to pass
110:30 - in some callback functions and then
110:33 - we're going to also say button
110:35 - text style because we're going to be
110:36 - able to change the background we need to
110:38 - change the text as well
110:40 - right right
110:44 - so next um let's see
110:47 - our touchable opacity i'm going to start
110:49 - breaking this down because we're going
110:50 - to have some more stuff in here
110:54 - so we're going to take in some
110:56 - attributes first we need an on press
111:03 - on first that's something different than
111:05 - on click but it does the same
111:06 - right yeah pretty much yeah it acts as
111:09 - on click but
111:10 - for your thumb
111:14 - i'll press i'll press yeah right and
111:16 - then style
111:18 - uh this one's gonna be an array
111:22 - where's my curly brackets i can never
111:23 - use curly bracket and then an array of
111:25 - what
111:27 - uh it's gonna be an array where we're
111:29 - gonna say style
111:31 - dot button container so this is going to
111:34 - be
111:35 - kind of uh that
111:38 - that uh that style object that we just
111:40 - created inside of our style.js
111:43 - and then we're also going to comma
111:46 - in button style right so the reason we
111:49 - want button style to be second
111:51 - is because we want it to override
111:53 - anything right if we get button style
111:55 - we want it to override anything that
111:56 - comes in uh first
111:59 - so by default our button's gonna have
112:00 - that blue background
112:02 - but if we pass in a different background
112:04 - we want that to be the case
112:05 - oh just like high style components work
112:08 - actually right
112:09 - yeah true inheritance but you can you
112:11 - can adjust that specific
112:13 - um component or element in this case you
112:15 - know you want to change
112:16 - cool pick
112:20 - and then let's see so we're going to
112:22 - change our text a little bit because we
112:23 - have some text style now
112:25 - so let's kind of break this down
112:31 - okay so
112:36 - we're gonna say style
112:42 - and we're gonna do the same thing so
112:43 - we're going to pass in an array
112:45 - now the first thing we want is that
112:46 - style um
112:49 - button text that we created
112:53 - the next thing that we want is going to
112:54 - be button uh
112:58 - text style and
113:01 - then we're gonna pass in our own css
113:03 - object right here
113:05 - so we're gonna say margin right
113:10 - if we have an icon so question mark
113:13 - we're going to set the margin right to
113:15 - 10 otherwise we're going to set it to
113:16 - zero
113:18 - okay guys so if we have an icon we want
113:21 - to give it a little bit of a margin
113:22 - right
113:22 - otherwise we don't want a margin okay
113:26 - um and then this is spelt completely
113:30 - wrong what am i doing here
113:34 - so this is button text
113:37 - and then it's style dot
113:44 - okay what wait isn't it here isn't it
113:47 - like
113:48 - this one button textile is that what you
113:50 - mean
113:52 - oh oh yeah so we want that one to be the
113:54 - second one because that's the one that
113:55 - we're going to pass
113:56 - in and then this is the one that we
113:57 - built out in the style js
113:59 - right oh okay oh yeah right you're right
114:03 - like this okay cool thank you i don't
114:06 - know what just happened
114:07 - okay cool so i think that looks better
114:09 - and
114:11 - let's go oh my god it looks amazing
114:16 - what does that error say um said visible
114:20 - it says can find variable disabled
114:24 - it can't find this
114:27 - in the welcome.js
114:31 - and disable yes it needs to be disabled
114:33 - oh that's an easy fix
114:35 - okay let's go easiest fix we've had
114:38 - all right so then we're gonna add some
114:40 - style to our image so we're gonna say
114:42 - style is
114:47 - style dot icon style guys
114:52 - there we go okay so
114:55 - right now the image i mean the uh the
114:59 - button is going to blend into the
115:00 - background because it's the same
115:01 - color so we need to go ahead and start
115:03 - passing in uh some new values to kind of
115:06 - take over
115:07 - that style so
115:11 - what are we gonna do we're gonna go
115:12 - create some style inside of our welcome
115:17 - style so if you go back into screens and
115:20 - then back into welcome
115:21 - and then style.js
115:25 - we're going to add we're going to add
115:27 - style
115:28 - for our buttons specifically on the
115:30 - welcome page right so very local kind of
115:32 - like using css module
115:33 - right guys if now i'm that i'm not
115:36 - opening the file structure on the left
115:37 - side
115:38 - whoops um you can still see here at the
115:41 - top where i am
115:42 - okay you can still see it here so we are
115:44 - now in style.js okay in the folder
115:47 - welcome awesome so let's
115:50 - say that for our welcome screen we want
115:54 - the background color rv button style to
115:56 - be
115:58 - colors.white okay
116:01 - and then the button two which is gonna
116:03 - be the secondary button there because
116:06 - we have two buttons on our welcome
116:07 - screen we don't want both of them to be
116:08 - primary buttons
116:10 - so we're gonna say button two and um
116:14 - well let's first give this one a margin
116:16 - top
116:19 - of 20. okay and we'll come down here
116:23 - and say button text style
116:28 - this one's going to be color and we want
116:30 - to actually set this one the colors
116:32 - of primary blue right because if we have
116:33 - a white background on the button then
116:35 - we're going to make the text itself
116:37 - blue so why is this one complaining here
116:41 - tender um
116:44 - because i forgot the commas separate
116:47 - yeah yeah yeah of course of course
116:49 - there we go yeah we want to make sure
116:51 - that all of these are common separated
116:52 - guys
116:53 - cool all
116:56 - right so let's see when
117:00 - you save a bunch of stuff okay cool uh
117:02 - what's the error that it's giving us
117:04 - oh style variable style can't find
117:07 - variable style did we do we
117:10 - pass that inside of our button.js we did
117:15 - not
117:15 - import button the style component
117:18 - right um so it should either be here or
117:24 - we can put it in the top up here we're
117:26 - going to say import
117:28 - style from dot
117:31 - style there we go ah that makes sense
117:34 - okay
117:35 - so it will give it better and you have
117:39 - double double comma at style.js so here
117:42 - i think
117:44 - was it here yeah here gone
117:47 - oh yeah like it never happened there we
117:49 - go okay oh
117:52 - oh yeah i can't find i saw this before
117:57 - aha this was install.js
118:01 - i have value like this yes
118:05 - all righty oh alliance center is not a
118:07 - valid style
118:08 - property oh
118:12 - i thought a line center it's a line item
118:16 - good one good catch amazing okay awesome
118:21 - well i'm sure a lot of people can relate
118:22 - you know so that's okay
118:24 - it's all about debugging guys it's all
118:26 - about backtracking where you came from
118:28 - and what you
118:29 - have been doing up until now so cool oh
118:32 - the buttons are here
118:33 - okay so what's next hannah so
118:36 - next we want to actually start passing
118:38 - in uh some of the styles
118:40 - so we need to go back to our welcome
118:42 - page so welcome.js
118:44 - welcome to js um
118:49 - here yep
118:53 - yep so so far we've passed in
118:56 - text we've passed and disabled
119:00 - and now we need to pass in
119:03 - button style oh i'm sorry
119:08 - oh oh sorry sorry sorry oops
119:11 - i was trying to rearrange things better
119:13 - for you guys but
119:16 - alright so this one's gonna be button uh
119:19 - a style
119:20 - dot button style uh so this is again the
119:22 - one that we just created
119:23 - uh inside of the local style
119:26 - to the welcome page right yep and then
119:30 - button text style and this one's gonna
119:34 - be
119:34 - style dot button text style
119:38 - it's so clean though like you only
119:40 - import style
119:42 - you only import style here at the top
119:44 - and then you can just use it here
119:46 - everywhere you know by having by by
119:48 - accessing those keys with the styles
119:50 - amazing
119:51 - oh let's go look i think it got applied
119:54 - okay let's do it for the next button
119:58 - button style button textile equals
120:03 - style dot button style 2
120:09 - all right let's let that refresh a
120:12 - little bit
120:13 - okay so we have that we have
120:18 - that and
120:21 - oh let's style out this view right here
120:24 - right because we don't want our buttons
120:25 - to kind of be
120:26 - pressed up against that splash screen
120:28 - logo where it says coinbase clone
120:31 - so let's give this um just its own
120:34 - you know typical styler so we're going
120:36 - to say style equals
120:37 - we're going to say style dot
120:42 - bottom view now we haven't created this
120:44 - one yet oh
120:45 - so let's hop back into style.js
120:49 - the one for our welcome screen oh yeah
120:53 - oh so many thoughts style okay and then
120:55 - it's probably here
120:57 - right yep so let's go ahead and uh
121:00 - comma in and we're gonna say
121:03 - button view now we're gonna create this
121:06 - object
121:06 - um we're going to give it some let's see
121:11 - padding i think well first
121:14 - let's give it position absolute
121:18 - again anything that's not like a direct
121:20 - number we're going to wrap those in
121:22 - strings
121:22 - so we're going to say position absolute
121:24 - we're going to say
121:27 - bottom 30
121:30 - left 20 and right
121:34 - 20. e
121:37 - [Music]
121:40 - okay and then let's go back to our
121:43 - welcome.js look at that
121:45 - whoa wow this looks already so good guys
121:48 - i love it okay okay so that's the get
121:52 - started button
121:52 - the white one actually right yeah so i
121:56 - think
121:56 - i might have like gave it the wrong name
121:59 - so i'm gonna hop back into the style.js
122:01 - okay so we have button side which has
122:04 - background
122:05 - color white and then button textile
122:08 - which has
122:09 - colors primary blue okay
122:14 - that looks good so let's hop back into
122:17 - welcome.js
122:20 - so we said button style equals
122:23 - style.button style and then we said
122:24 - buttons
122:25 - text style is style button textile
122:29 - okay okay wait maybe i can help you out
122:31 - i can do the oh shoot
122:33 - i can do this and
122:36 - i can split the screen on the right side
122:38 - i'm gonna open up the style
122:40 - for the pages where you were before
122:44 - and then on the left side i'm going to
122:46 - close this one up is this possible is
122:48 - this visible
122:49 - do you think this is visible like this
122:52 - um yeah i think that looks
122:54 - fine um
122:58 - let's see here so take us into your
123:01 - thought process
123:02 - tenor if you can right now i am sitting
123:06 - into
123:07 - a button.js just making sure i had all
123:10 - of the
123:11 - uh pops passed in that we wanted so
123:13 - you're in button.js
123:15 - okay and then we have a button text
123:19 - style as well
123:20 - so it looks like we have everything
123:22 - there all right so we're
123:24 - passing in this button textile is not
123:26 - lighted up
123:27 - though where so we're not using
123:30 - it's not light light it up so there's
123:33 - something with this one
123:35 - button textile oh you know what
123:40 - right here where i said style dot i was
123:42 - trying to access
123:43 - this style inside of the style component
123:47 - and uh we didn't put it there because
123:49 - it's uh it's a prop
123:51 - so delete that let's try that again
124:01 - [Music]
124:06 - so actually if you reloaded i mean we
124:08 - don't have to reload it but if you did
124:09 - you would see that it's the splash
124:11 - screen for you know a couple seconds
124:13 - we only see the logo we see that the
124:14 - page is loading basically
124:16 - and then the buttons appear um so they
124:18 - they're not there
124:19 - instantly yeah just because of the
124:22 - that's because of the set timeout right
124:24 - with the two seconds we put it on before
124:26 - it's visible with the conditional
124:28 - rendering
124:29 - right where was it in app or where did
124:31 - we do that um
124:32 - it is welcome the welcome page exactly
124:36 - so that's what happens here guys the
124:38 - moment
124:38 - this component welcome gets loaded up
124:41 - use effect is fired off
124:43 - which is a react hook okay and use
124:45 - effect fire is only off when
124:46 - the app is being loaded so that will
124:49 - give us a timeout of two
124:50 - seconds and basically within the after
124:53 - two seconds the variable visible is set
124:56 - on true
124:57 - which in case it is true all of this
125:00 - will be rendered on your app
125:04 - okay the buttons and all of that that's
125:06 - why that
125:07 - is happening okay cool let's go what's
125:10 - next
125:11 - so if you click which one do we create
125:14 - we've created login
125:15 - so try clicking on sign in and it should
125:18 - since we linked up all the navigation it
125:19 - should take us
125:21 - to a login page oh okay so
125:24 - i'm going to click on sign in
125:28 - there we go and it shows us the sign-in
125:31 - page
125:32 - so this is kind of and as you kind of
125:33 - saw it kind of slid in so this is why we
125:35 - had so many different stuff being
125:37 - uh you know installed and imported and
125:39 - everything for our navigation
125:41 - um that page just slid in that's the you
125:44 - know
125:44 - animated part and everything else that
125:46 - we have so we just have stacks of pages
125:48 - that are sliding in and out
125:49 - and we have that navigation stack kind
125:51 - of handling it all for us
125:53 - so the next thing we want to do is start
125:55 - adding some input fields
125:57 - to our login page oh nice i like
126:01 - okay so what should we make
126:05 - so let's head to auth pages login
126:09 - login.js off pages
126:12 - oh sorry sorry sorry sorry uh where's
126:14 - all pages here screen
126:16 - yeah okay off pages odd pages
126:19 - login yes
126:23 - and then here awesome
126:26 - so what do we want to do we need to
126:29 - import a bunch of stuff
126:31 - so we already have let me change this to
126:33 - word wrap okay so we already have
126:35 - our view text safe area uh
126:38 - scrollable view let's go ahead and add
126:41 - just a couple more things so we need
126:42 - text input so we can actually
126:44 - you know have some input field
126:48 - we're also going to need touchable
126:50 - opacity
126:52 - oh where are you at i'm not seeing you
126:55 - index
126:56 - or um in the yeah the login page
127:00 - oh so okay okay great i will show you oh
127:02 - yeah it should be
127:03 - i guess it's not like breaking down but
127:07 - i'm
127:07 - i'm at the top over here okay great so
127:09 - maybe maybe toggle word wrap
127:11 - oh yeah word word right right um view
127:15 - i think toggle word wrap
127:18 - yeah good idea okay there we go so yeah
127:22 - i just added a couple things up here
127:23 - just the text input and the touchable
127:25 - opacity
127:28 - okay and then we have our button ready
127:30 - and everything like that
127:32 - so let's create a couple constants um so
127:35 - first
127:36 - we need to take in some props because
127:38 - again guys anything that's
127:40 - in our uh navigation stack is going to
127:43 - automatically get
127:44 - a navigation property so we're going to
127:46 - say const
127:48 - we're going to destruct the
127:53 - i know how to spell that'd be nice we're
127:55 - gonna distract the navigation
127:57 - properly you sure it's navigation
128:01 - right yes okay great awesome
128:05 - that's always good we're going to create
128:07 - a couple uh
128:09 - you know states some standard stuff yeah
128:17 - so we do this you know in react all the
128:19 - time every time someone's
128:20 - you know typing in an input field we're
128:22 - updating these uh
128:24 - custom hooks where we're saying all
128:25 - right let's set the email let's set the
128:27 - password
128:27 - let's set their first name right yep
128:30 - yeah yeah yeah
128:33 - so we're gonna say email equal set email
128:36 - we're going to say password equal set
128:37 - password
128:38 - and both of these are going to use state
128:40 - and be
128:41 - an empty string originally right and
128:43 - they will be updated
128:44 - upon user input
128:47 - and we're missing one thing jesse
128:51 - when you come back to the top and say
128:54 - uh react we need to import
128:58 - you state there we go yes yes not
129:02 - state yes oh
129:05 - let's go okay wow that looks really good
129:08 - okay
129:08 - oh i'm gonna press the sign in
129:12 - yay there we go so what do we need to
129:15 - add we need to add
129:16 - uh some input fields and
129:19 - we need to make sure our button can get
129:22 - us to the dashboard once we create that
129:25 - so let's first under our text view here
129:29 - we're going to create some views inside
129:31 - of this view right so we have this view
129:32 - we're going to be inside of it
129:34 - and we're going to create another view
129:39 - okay first thing we need is
129:42 - a text
129:47 - and this is going to be basically a
129:48 - label for our input field so we're going
129:50 - to say email
129:53 - okay and then we're going to go ahead
129:54 - and also say text input
129:59 - a lot of the stuff that we use and
130:00 - actually this is going to be
130:02 - self-closing
130:02 - so a lot of the stuff that we use you
130:04 - know it looks like typical stuff that we
130:06 - would see in react
130:07 - um or a lot of the typical kind of html
130:10 - type stuff that we would use
130:12 - but it has to be very specific to react
130:14 - native to be kind of
130:16 - converted the right way once it loads up
130:18 - in ios or android
130:21 - so this one we're going to say value
130:23 - equals
130:25 - that email variable that we created
130:29 - and then we're going to also say the
130:30 - placeholder is whatever we want to say
130:32 - so something you know like example at
130:35 - email
130:37 - aha yeah that's the one going to be
130:40 - visible in the input right
130:42 - oh yeah oh and then oh we're going to
130:45 - give it an unchanged
130:46 - yeah so on change text so it's a little
130:50 - bit different in react native right
130:53 - and um what are we going to do we're
130:55 - going to say
130:57 - grab the text that's inside of it and
131:00 - we're going to pass it to
131:02 - so this is basically just a callback
131:04 - function we don't want it to
131:06 - we don't want this to run immediately i
131:08 - don't know if you guys have ever run
131:09 - into this and react
131:10 - but if we don't have like a callback
131:11 - function here and we just simply say set
131:13 - email
131:14 - we're going to get some sort of weird
131:15 - loop it's going to keep trying to run
131:16 - over and over and over
131:18 - uh we don't want that so we're firing
131:19 - off yeah it will fire off the moment
131:22 - unchanged text will be triggered okay
131:24 - guys so
131:25 - always have parentheses at the front
131:28 - that way
131:28 - that won't happen it's a callback
131:30 - function like tanner just
131:31 - explained cool and this will set the
131:33 - email right
131:35 - yeah so next thing we want is to
131:38 - set the password so i'm going to copy
131:40 - this entire view right here
131:41 - and just paste it right below and boom
131:44 - password
131:45 - just going to change a couple values
131:46 - right so we're going to say password
131:49 - and we don't really need a placeholder i
131:51 - mean we could
131:52 - put like stars
131:57 - so the value for this one is gonna be
131:58 - password yeah guys here like this one so
132:01 - it lights up as you can see
132:03 - okay and here we're going to be using
132:07 - yeah we're going to be using a setter
132:09 - function which
132:10 - will set the value on the variable
132:12 - password
132:13 - because we're using a use state here
132:16 - okay
132:16 - that's just a topic of react hooks okay
132:19 - cool let's go
132:20 - i'm wondering how it looks like let's go
132:23 - ahead and save it and see if we get our
132:25 - input fields popped up
132:27 - did it not say oh
132:31 - oh we are seeing something
132:34 - nice yeah so uh input fields they
132:37 - pretty much show up invisible in react
132:40 - native by default right so we have to
132:41 - style these out
132:42 - and actually make them you know show up
132:44 - on our screen we can
132:46 - obviously see if we had a placeholder
132:47 - there that we could see an input build
132:49 - there we can also click into them type
132:50 - into them
132:51 - um but by default they have no border
132:53 - they have no outline they have no none
132:54 - of that annoying stuff that oh
132:56 - i like that better though i like that
132:58 - better i mean i always have to
133:00 - i always have to remove that that blue
133:03 - ugly border
133:05 - oh yeah i hate it okay cool
133:08 - so let's style this up
133:10 - [Music]
133:11 - yeah so let's um
133:15 - add one more thing to our button here
133:18 - and this is gonna be on press
133:22 - um what are we gonna do let's leave this
133:26 - um
133:29 - i was gonna say let's leave it empty for
133:30 - now but no we don't want to do that
133:32 - we're gonna say navigation dot
133:35 - uh navigate
133:39 - dude why can i not spell nav a gate here
133:41 - we go we're going to navigate to the
133:44 - home page we haven't created it yet
133:46 - but this is going to be the label that
133:47 - we put into our
133:49 - uh navigation stack right so we need
133:52 - those titles those names
133:54 - sorry where were you at i clicked yeah
133:56 - good
133:58 - okay okay so
134:02 - are you saving are you saving it yeah
134:06 - so i think that should be good nothing's
134:07 - gonna change yet so we need to start
134:09 - um styling it out let's add a little bit
134:12 - of
134:13 - uh text though so let's see
134:18 - right under our password
134:22 - are you still there okay yeah so right
134:24 - under our password view here
134:26 - guys we're going to go ahead and create
134:27 - another view
134:29 - um and here we're going to actually use
134:31 - those touchable opacities that we
134:34 - imported at the top right
134:38 - below opacity and in this we're going to
134:40 - say text
134:42 - capitalized uh capitalize text right
134:45 - forgot password
134:50 - okay and then i'm going to copy this
134:54 - and create another one and this one's
134:55 - going to say
134:57 - uh privacy policy oh
135:02 - there we go guys so now once we save we
135:06 - should see
135:06 - those kind of pop up and they'll have
135:09 - that
135:10 - kind of little bit of a little bit of a
135:13 - visual feedback once
135:14 - they're clicked on because of the
135:15 - touchable opacity oh
135:18 - yes oh oh forgot password privacy policy
135:22 - cool all right so now let's start adding
135:26 - some
135:26 - style jesse oh okay okay which file
135:30 - so we're gonna actually create a new one
135:32 - so this is gonna be in
135:33 - our auth in our pages
135:36 - so auth pages and new file
135:41 - style.js
135:44 - pages wait
135:48 - here this one guys this is the new one
135:50 - yeah let's go
135:52 - yep there we go so inside pages guys
135:54 - style
135:55 - okay i'm gonna go over back to
135:58 - the other style page and just copy
136:00 - everything that we had
136:01 - okay the other style page
136:06 - oh okay
136:09 - so we have our container it's gonna have
136:11 - flex one we have our background which is
136:13 - gonna be white this time because we're
136:15 - not on the splash page anymore
136:16 - we don't want a giant blue background
136:20 - so there we go um
136:23 - and let's see we have everything we want
136:25 - imported cool yeah so i just copied this
136:26 - from
136:27 - the welcome pages style page okay guys
136:31 - now let's add some padding because uh
136:34 - you know with our splash page it was
136:36 - just one piece of text
136:38 - completely centered to you know the
136:40 - absolute center of the page
136:42 - whereas this is going to be you know we
136:44 - have our input field we have our button
136:46 - and as you guys can see on the screen
136:47 - right now the button is touching
136:49 - the edge of the screen so we're gonna
136:50 - have some padding to it
136:54 - um here sorry okay so how much padding
136:58 - yeah i'm trying to i'm actually for now
137:01 - let's just add some padding top
137:05 - okay now this is pretty cool this is
137:07 - pretty cool we're gonna actually access
137:10 - your uh phone it's
137:13 - screen height right so we're gonna say
137:14 - platform os oh
137:16 - now if this equals android
137:22 - what are we gonna do we're gonna say
137:26 - status bar
137:30 - all right height now what is this for
137:34 - it's basically doing the exact same
137:36 - thing that safe area is doing
137:39 - for ios right because like i said that
137:42 - save area it only applies to ios
137:43 - if we want to make sure that on android
137:45 - our text or whatever else doesn't
137:47 - intervene with the status area this is
137:50 - what we want to do we want to say
137:51 - padding top platform os if it equals
137:54 - android let's add some uh
137:57 - add some stuff right so so tenor
138:00 - i have a question yeah this platform
138:04 - where can we get that from like
138:07 - um yeah actually i forgot to uh import
138:10 - that
138:10 - okay so right here where we say react
138:13 - native mm-hmm
138:14 - we're also going to say import
138:19 - status bar using that yes now we're
138:22 - using
138:22 - form so let's get that all right so from
138:26 - the react native library we can check
138:29 - whether we're running our app on is
138:32 - actually an android
138:34 - or something else but in case it's an
138:35 - android we can set the current height of
138:38 - the status bar
138:40 - or we can use that or either it becomes
138:42 - zero
138:43 - right because we're using a ternary
138:45 - operator here guys yeah
138:47 - inside of that status bar that we
138:48 - imported is gonna have its current
138:50 - height
138:51 - and then otherwise we'll set it to zero
138:52 - because we don't need any padding top
138:54 - for
138:55 - uh ios right
138:58 - okay cool wow i never knew this was
139:00 - possible okay
139:03 - that said by the way do we need this
139:04 - main view
139:06 - yeah do we need this main view by the
139:08 - way because we are in
139:09 - the style.pages right so do we need this
139:12 - main view because this is not the
139:16 - uh yeah we're gonna keep this okay but
139:19 - instead of saying main viewplex 1 we're
139:21 - going to say
139:21 - flex grow one
139:25 - and we don't really need those
139:29 - so we're going to say padding top
139:33 - and uh do we have rf value yes we do
139:35 - okay so we have our value imported we're
139:37 - going to use that we're going to say
139:38 - 60
139:42 - and then padding now this is one of the
139:43 - things that i really really like about
139:45 - uh react native that i always miss when
139:48 - i go back to react
139:49 - padding horizontal we don't have to
139:52 - specifically say
139:54 - padding left padding right when we only
139:56 - want padding left and right
139:57 - or you know whatever we want to do
140:00 - we can say padding horizontal or padding
140:02 - vertical and it's going to automatically
140:04 - do everything we need and then justify
140:07 - content space between
140:17 - cool uh text style what do we want to do
140:21 - for our textile
140:22 - let's see we're gonna say um
140:26 - font size value is gonna be rf value
140:30 - 20 okay font wait we can keep that at
140:33 - bold and
140:34 - the color we don't want it to be white
140:36 - so we can get rid of that
140:37 - that looks good okay then let's copy
140:41 - this we're going to use another
140:42 - text style and because we have like the
140:46 - whole privacy policy and forgot password
140:49 - we can change those so we're going to
140:50 - say
140:52 - text style 1 we're going to change this
140:55 - to 14
140:57 - and we can leave it at bold too okay
141:02 - let me see i don't really think we need
141:04 - the rest of this stuff
141:06 - and get rid of those
141:09 - okay and then let's see so we're gonna
141:13 - need a
141:14 - yeah no no go ahead go ahead we're gonna
141:17 - need a flex row view
141:19 - uh so let's create this so we're gonna
141:21 - say margin top
141:23 - that one's gonna be 30. and we're gonna
141:26 - say
141:26 - flex
141:31 - is your neighbor dying
141:34 - i hope not
141:37 - okay i don't even know what i just typed
141:40 - uh
141:41 - we're gonna say direction
141:44 - equals row that's what we're styling all
141:46 - right guys so
141:48 - so wait in react native you have to give
141:50 - it a row
141:51 - as a value because usually it's a
141:54 - default
141:55 - row value right flex direction yeah and
141:58 - react native even though
141:59 - everything is already default display
142:01 - flex it's actually
142:03 - defaulting to columns so it's reverse oh
142:07 - okay that's cool that's interesting okay
142:10 - let's go
142:11 - so we're gonna say flex direction row
142:13 - and then we're gonna say
142:17 - yes hitler yeah yeah i items
142:20 - i did yes
142:31 - let's go all right guys
142:35 - um let's start adding some of this i'm
142:38 - pretty sure this isn't all of it but we
142:39 - can come back to this let's start adding
142:41 - some of this to our login page right
142:43 - so what do we got
142:47 - what do we got go here style
142:50 - yes yes so let's uh scroll all the way
142:54 - up because we don't have our uh style
142:55 - page
142:56 - so we're going to go ahead and say
142:57 - import style
143:01 - wait where are you at where are you
143:05 - okay awesome yeah all the way at the top
143:08 - yeah
143:08 - import style from
143:13 - let's go up and grab our style
143:17 - okay all right so let's see
143:20 - if i hop back into the style we created
143:23 - we created container we created main
143:25 - view
143:25 - so safe area view we're going to say
143:27 - style equals
143:30 - oh yeah and this is this one's going to
143:33 - be our container so we're going to say
143:34 - style
143:36 - dot container and then our scroll view
143:44 - is going to be content paint container
143:48 - style equals
143:52 - and we're going to pass
143:55 - in style.main view
144:01 - okay now the content uh container style
144:05 - it's just a little bit different it's
144:06 - something that we pretty much just use
144:08 - on
144:09 - um scroll views because
144:13 - you know sometimes our scroll view will
144:14 - actually like ignore some style or
144:15 - whatever it doesn't really act like a
144:17 - typical
144:18 - view container so we're gonna say
144:19 - content container style okay
144:21 - we're gonna give it the style of the
144:23 - main view okay
144:25 - yeah uh and then let's see so
144:29 - the first text right here where we say
144:31 - sign in to coinbase
144:33 - we're gonna say style equals style dot
144:36 - text view
144:36 - or text style i think that's what we
144:39 - named it
144:42 - you want to check it
144:47 - it is textile we're good okay
144:51 - okay cool and then let's see
144:57 - review right here this one's going to be
145:01 - style equals
145:07 - um what did we say oh we haven't created
145:10 - this one yet actually
145:11 - so we'll say style equals style dot
145:14 - margin
145:15 - or set margin we can call it that set
145:18 - margin
145:19 - so let's go back to the style.js yep in
145:22 - the pages guys here in the style
145:25 - then here's set margin right oh
145:28 - sorry i thought it was going to help you
145:30 - but
145:31 - all good there we go
145:35 - cool so set margin we're going to say
145:37 - margin top
145:38 - and this one's going to be
145:42 - what are we going to do 15. okay
145:48 - i think we're going to style those uh
145:49 - input fields as well right we don't want
145:51 - to leave them completely blank
145:52 - and just nothing there so we're going to
145:55 - give it
145:57 - some height we'll say rf value
146:04 - and we'll say 45 for this one
146:08 - we'll do some padding horizontal right
146:10 - we don't want to touch in the borders of
146:12 - our phone
146:14 - and then font size this one's going to
146:20 - be rf value
146:22 - um 15. okay
146:28 - cool guys uh let's see what else we want
146:31 - to do we're going to say margin top so
146:32 - that the
146:34 - uh text areas don't kind of like collide
146:36 - into each other
146:37 - so we'll say margin top five sounds
146:40 - pretty good
146:41 - now let's give it a border now with with
146:43 - um
146:45 - with react native we can't just simply
146:47 - say like border one pixel all the idea
146:49 - we gotta say border width as a separate
146:52 - entity
146:53 - one border radius as a separate entity
146:57 - which i mean that one's always a
146:58 - separate entity anyways so
147:01 - and then border color right even if we
147:04 - give it a border with we're still not
147:06 - going to see it so we got to say color
147:07 - dot oh what happened here
147:11 - is this cool is it okay no
147:18 - okay so border color equals
147:19 - colors.medium gray but we didn't create
147:21 - that yet right so let's head back to the
147:22 - colors.js in the resources folder
147:28 - oh
147:30 - all right so i'll say medium gray medium
147:33 - gray
147:35 - i never know how to spell gray properly
147:37 - like i never know to use e or a
147:40 - if you know what i think i think i used
147:43 - i think i used
147:44 - a i did no maybe
147:47 - like i used there's there's t called
147:50 - earl grey right so that way you can
147:52 - maybe
147:53 - remember it because earl starts with e
147:55 - so earl grey grey
147:57 - we gray oh yeah
148:01 - okay so if you want to type in uh just
148:04 - gray in there
148:05 - the vs code live chair kind of kicked me
148:08 - out
148:08 - yeah aha like this or yeah
148:12 - well it'll be a string yeah oh
148:15 - sorry okay
148:18 - so so you'll have to reinvite me to the
148:22 - to the vs code live share oh really what
148:24 - happened
148:26 - i don't know i just threw up some random
148:27 - air and kicked me out oh no
148:29 - um wait i have to click this
148:33 - invite oh yeah i think this is working
148:36 - okay you got invited
148:37 - that's great medium gray let's see
148:41 - hmm it's not giving me any other
148:44 - you can just wrap it in a string and
148:46 - then oh yeah right
148:48 - like this okay easy peasy lemon squeezy
148:52 - yo you're back in the session grade
148:54 - awesome
148:56 - so now that we have medium gray what
148:58 - other colors do do we need
149:01 - um i think we're good for now yeah
149:03 - medium gray here
149:04 - for the colors so we can head back on
149:06 - over to the style.js
149:08 - for the login page right we're there now
149:12 - or
149:14 - right yeah cool so we just need one more
149:18 - thing
149:21 - this is going to be a button view
149:25 - we're going to say margin vertical and
149:28 - we're going to set that to 20.
149:30 - awesome so now let's head back on over
149:32 - to login.js and start
149:34 - filling in some of these styles yeah so
149:36 - actually yeah
149:38 - we i think we started off with this one
149:40 - so what i'm gonna do set margin text
149:42 - input style
149:43 - and btn view okay so we're gonna be
149:46 - importing that
149:47 - here or using that here basically
149:50 - yeah so the last one we did was on line
149:53 - 20.
149:54 - we said style main view mm-hmm
149:58 - so let's see we said market margin oh
150:01 - right yeah we did set margin that was
150:03 - the last time we did
150:04 - okay cool so we can actually copy this
150:07 - set margin
150:08 - and we're going to put it on the other
150:09 - view as well that has our password
150:12 - section down here
150:15 - okay and then i'm just going to
150:16 - multi-cursor this so basically
150:19 - you know hold down control or command
150:22 - type into two places here
150:23 - so for our text for our email text and
150:27 - our password text we're going to say
150:29 - style equals
150:33 - um what did we call it we said like text
150:38 - style text uh style input or something
150:42 - wait let me take a second text input
150:43 - style
150:44 - okay
150:47 - that'll be text style one and then our
150:49 - input field here
150:50 - is gonna have uh the text input style
151:00 - so that's gonna be here and here as well
151:04 - yes okay so
151:07 - we added this guys on line 29 and also
151:11 - at line 38. okay cool let's go
151:17 - let's go okay um
151:20 - next if you scroll down to where we have
151:22 - all of those touchable opacities
151:24 - we can kind of start passing in some
151:27 - styles there as well so over here we
151:29 - have a overall
151:31 - view so we're going to say style equals
151:33 - and this is going to
151:34 - be
151:38 - style dot
151:43 - flex row view yeah that one okay
151:49 - and then style equals uh
151:53 - style.link style and this is going to be
151:56 - our touchable opacities so we can copy
151:58 - this and put it in the other one as well
152:01 - right guys
152:05 - okay so i think that should be did we
152:08 - make the link style already
152:11 - oh wait did we did we not
152:14 - because i don't remember seeing it here
152:16 - no
152:18 - okay let's uh let's create that
152:23 - we'll say link style
152:26 - okay um what do we want to do for this
152:30 - one we want to say font size
152:37 - rf value ah there we go
152:40 - so tender by the way i'm a bit curious
152:43 - about the rf value maybe you said it but
152:46 - why is it handy to use that is or does
152:49 - it have anything to do with the response
152:51 - font size library or
152:54 - yeah so the uh that long library name
152:57 - that we imported
152:58 - yeah what was it react native response
153:01 - yeah
153:01 - font size that one yeah
153:05 - uh pretty much that's a function that
153:07 - allows us to
153:09 - um well i mean it doesn't allow us to do
153:11 - anything because we're not doing it but
153:12 - it
153:13 - calculates um sizes mostly font sizes
153:17 - based off of the screen's width right
153:19 - right
153:20 - so if we're on like a iphone 12 versus
153:24 - like an iphone 5
153:25 - obviously those screen sizes are way
153:26 - different so uh
153:28 - this function allows us to kind of have
153:30 - that generated font size
153:32 - so that we you know it looks proper oh
153:34 - sick
153:35 - whoa well react native is so clean
153:38 - it's like it's looking at things
153:40 - differently like over i would say like
153:42 - they're like a like a horizontal view of
153:46 - things you know what i mean so
153:48 - that you know with this library you can
153:50 - just set all of your fonts according to
153:52 - the screen you are
153:54 - actually developing now for for the
153:56 - iphone
153:57 - 8 that we use here but it's so
153:59 - responsive in this way because we don't
154:01 - need to think about
154:02 - how the font size should look for an
154:04 - iphone 12
154:05 - is that correct exactly yeah right oh
154:09 - cool
154:10 - okay so let's go font size value
154:13 - rf value so this one's going to be
154:16 - 14. there we go
154:20 - okay so i think that should be all of
154:22 - the styles that we need uh
154:24 - let's log let's go back to login.js make
154:26 - sure we have everything there
154:28 - login.js we put in all the styles
154:33 - oh right here we need to say style
154:35 - equals
154:37 - uh style.buttonview
154:40 - yeah that one okay i think that should
154:43 - be it
154:44 - what is that error saying oh that error
154:47 - is trying to install the
154:50 - oh wait where i think we're where
154:53 - i think you're forgetting you're the
154:55 - import style it says unexpected token
154:57 - on line 11.
155:01 - yeah importing style
155:04 - because i said import style and then
155:06 - immediately said the file name yep
155:08 - there we go there we go oh that should
155:10 - be better
155:11 - now nothing none of these files exist
155:15 - to style the js
155:18 - which one this one
155:22 - the error is here fall style
155:26 - sheet
155:36 - okay so i don't think we went out enough
155:38 - enough um
155:42 - folders i think we need to go out one
155:44 - more yeah i think so two
155:45 - three at least
155:49 - yeah and then can't variable find
155:50 - variable tech textile
155:52 - one
155:57 - so where where is that set up oh this
156:00 - one is in a different hmm
156:03 - so where are we using textile one i
156:05 - would look it up like this because i
156:07 - want to know
156:08 - where it's being used okay so here it's
156:11 - defined
156:13 - but here in the login.js textile
156:17 - one textile one oh because i didn't say
156:19 - style dot there we go
156:21 - aha see and we need to change that yeah
156:25 - up there as well and here too style like
156:28 - this
156:29 - right perfect there we go okay whoa
156:32 - awesome works fast all right so now try
156:35 - to
156:36 - go hit the sign in button oh signing
156:39 - button
156:39 - let's see if we get the new style on our
156:41 - login page
156:43 - i'm going to click it now oh
156:48 - okay um all right what does that one say
156:52 - textile one can't find variables textile
156:55 - one
156:55 - it's it's being persistent so we need to
156:58 - reset it
156:59 - oh we need to re oh is that what it is
157:01 - okay we're gonna reset it
157:03 - okay can i not reset it by
157:06 - hard refreshing the emulator or
157:08 - something
157:09 - oh wait look i mean there's gotta be a
157:12 - way to request it on the emulator yeah
157:14 - i don't really use macs i don't know hmm
157:19 - okay okay anyways
157:23 - we have to kill it probably
157:26 - okay there we go
157:30 - well we haven't done this for a while
157:31 - actually for so
157:33 - that's pretty good so that said
157:40 - there we go
157:45 - iphone x iphone 8
157:49 - okay this is also going well that's good
157:51 - no errors for so far
157:54 - okay so what's next tenor once we have
157:57 - the login page and everything
158:01 - uh once we can have our login page
158:04 - oh wait wait let me sign in
158:08 - i'm gonna sign boom
158:12 - hey let's go oh my god guys this is
158:16 - amazing
158:17 - look at this look at this we got the
158:19 - email we got the password
158:21 - we can even type stuff in here okay
158:26 - i cannot um give my email oop
158:30 - jesse well yeah kind of uh keep in mind
158:33 - like everything
158:34 - you know in react native it's it's all
158:35 - flex um
158:37 - and everything has been cascading down
158:39 - it's all been
158:40 - you know column view and then that part
158:42 - right there under the password
158:44 - is where we said specifically that we
158:46 - want it to be row and so that's where we
158:48 - have
158:49 - forgot password and whatever else right
158:51 - so
158:52 - that's where we kind of made that row
158:54 - view right right
158:56 - so that was flex direction
159:00 - okay where we had row indeed
159:04 - okay guys so that's here button content
159:06 - yeah that's actually here
159:09 - it's actually oh no wait it's here i
159:12 - think
159:13 - this one flex row view that's the one
159:15 - you're talking about here
159:16 - oh yeah cool and wait if i press this
159:19 - it should have that hover yes oh holy
159:22 - cow
159:23 - so slick guys and i can just paste
159:25 - things in here
159:27 - just like a real app cool
159:31 - okay i love it so the next thing we want
159:33 - to do is go ahead and
159:34 - create our create account page awesome
159:38 - so where where should we make that
159:41 - should we make it here also in the login
159:44 - yeah so this will be another example
159:46 - where we kind of see multiple imports
159:47 - from that index
159:48 - um giving that kind of good example of
159:51 - why we do that
159:52 - so we're going to be back into our auth
159:54 - folder
159:55 - and first thing what we're going to do
159:57 - is
159:59 - let's see we want to go into
160:04 - auth pages and create a folder for
160:08 - um i think create account
160:11 - so yeah yeah so off pages
160:16 - new folder and this is going to be
160:18 - create
160:19 - account there we go create account
160:23 - yeah and then in there we're going to
160:26 - say
160:27 - index.js
160:31 - yep and let's see so in here we're going
160:34 - to say import
160:39 - and we're going to import it from
160:46 - all right oh what happened here i don't
160:48 - think that's necessary
160:54 - i don't know what if bs code is on today
160:56 - but
160:58 - all right guys so then we're gonna go
160:59 - ahead and just uh
161:01 - export create account as default because
161:04 - this is the index that's inside of our
161:05 - create account folder
161:06 - okay we're gonna export it as default
161:09 - and then we're just gonna export it with
161:11 - our login as well yeah like we've done
161:13 - with all the previous components guys
161:15 - also with the login
161:16 - you know here export login as default so
161:18 - we're also doing that with
161:19 - the create account okay and then
161:23 - tanner just made a create account.js
161:26 - file
161:26 - okay also in that folder create account
161:28 - so
161:30 - rn f or what was the abbreviation you
161:32 - use
161:35 - um yeah so we'll do rnf so react native
161:38 - function
161:41 - boom so we'll just save this for now um
161:44 - to kind of prevent any fatal errors or
161:47 - anything
161:48 - and let's hop back into index.js
161:51 - in our pages folder or no wait
161:55 - in our auth folder so
161:59 - to give it really clear to you guys i'm
162:01 - gonna go in here okay the indexing
162:03 - off boom
162:07 - all right so we're gonna say import
162:10 - create account from
162:13 - pages create account and
162:18 - we're going to export both login and
162:19 - create account
162:22 - awesome cool so now we have our login
162:25 - page and our
162:26 - uh create account page let's see i don't
162:29 - think we need anything else there
162:33 - cool so let's hop back into our root
162:35 - navigation page
162:39 - root navigation page we
162:46 - oh all right so we're gonna say import
162:47 - login and create account now you guys
162:49 - can see
162:50 - that kind of effect that i was saying
162:52 - right so anytime we've ever
162:53 - imported anything from react we do this
162:57 - whereas typically with our own custom
162:58 - components we're saying hey go grab this
163:00 - from
163:01 - you know folder within folder within
163:02 - folder now we can say hey we have all of
163:04 - these components all of these log in and
163:05 - create account page
163:06 - they're all very similar we want to grab
163:08 - them from one area
163:12 - okay cool so now that we have that let's
163:15 - create
163:15 - our stack for it
163:19 - right oh so stack screen and then
163:21 - instead of login you're going to be
163:23 - saying create
163:24 - account right yeah exactly
163:27 - so we'll say right here let's see
163:31 - create account and right here create
163:34 - account
163:36 - perfect cool um honestly let's go back
163:39 - to the create account.js
163:43 - create a contact.js i'm going to i put
163:45 - on the the word toggle or toggle rep
163:48 - um where is the create account where was
163:51 - it where was it
163:52 - off pages here yeah
163:58 - so if we wait what is the error that
163:59 - we're getting couldn't find a component
164:02 - get component or children prop for the
164:04 - screen create account
164:08 - okay yeah so we'll probably just have to
164:11 - refresh the the simulator then
164:14 - yeah yeah okay
164:20 - in the meantime you can go ahead with
164:22 - the create account
164:23 - i think with the code
164:28 - let me make it smaller
164:33 - okay so yeah i was just gonna test it
164:35 - with this uh sign up text right here but
164:37 - we can just go ahead and start
164:39 - uh building it out as well right so we
164:41 - have our function based component
164:44 - we're gonna have to import some stuff
164:45 - from react native here so we have our
164:47 - view we have our text
164:49 - and we have oh my god
164:52 - i'm sorry guys i thought we could work
164:56 - faster but
164:57 - no going fast is never good like going
165:00 - slow
165:01 - is fast that's also what we tell our
165:03 - students by the way in the boot camp
165:04 - guys
165:04 - going slow is fast if you focus on the
165:07 - fundamentals of coding
165:09 - that's when uh once you have those
165:11 - fundamentals you can do anything
165:13 - like for example with react native right
165:16 - if your knowledge of react.js is really
165:18 - good
165:19 - how long would it take to to learn react
165:21 - native it's it's fairly easy
165:23 - you know um so here
165:27 - oh you have to see me later oh i'm still
165:28 - getting that error by the way
165:30 - even though i closed it that's strange
165:34 - so couldn't find a component get
165:36 - component or children prop for the
165:38 - screen
165:38 - create a count hmm
165:44 - create a concrete comment
165:50 - okay so we have create oh wait
165:55 - so maybe in in the root should we look
165:58 - for oh
165:58 - oh oh oh there we go oh no no
166:02 - sorry almost um does it give the same
166:04 - error yeah
166:06 - no it doesn't give gives another error
166:08 - actually
166:09 - uh no it is the same but it's in a
166:12 - different
166:12 - area root navigation line 16 is
166:16 - oh let's go see i thought i thought it
166:18 - would happen
166:19 - yeah great all right so the way that it
166:22 - was fixed guys
166:24 - the index.js inside of create account
166:27 - in that folder um when we said yes this
166:31 - file right here um we say create account
166:34 - uh
166:34 - default you know export it as default i
166:36 - had accidentally capitalized
166:38 - default so now we should be good
166:43 - awesome
166:46 - okay cool so
166:51 - well we can't go back from the sign in
166:53 - page but if you want to reload the
166:54 - terminal we should be able to see our
166:56 - create account page now
166:58 - oh oh so
167:01 - okay i have to kill it i'll kill it kill
167:04 - it
167:06 - and kill it with fire okay nba run
167:10 - let's close it first boom
167:17 - all righty there we go
167:28 - so in android you don't have to kill it
167:30 - at all
167:33 - well when i work on my physical phone
167:36 - you don't really have to
167:37 - i have to like restart it every single
167:38 - time everything every once in a while
167:40 - you'll get a persistent error and you'll
167:41 - have to
167:42 - kind of reset it like that but uh yeah
167:44 - you get a notification kind of
167:47 - like in your notification section where
167:50 - you'll actually just be able to reset
167:52 - or refresh the app oh it's handy to work
167:55 - from your phone then oh but hey
167:57 - look it works at least it doesn't break
167:59 - here at this point so that's always good
168:01 - then sign in once it gets started
168:04 - no oh get started
168:07 - that's why we have to reset it oh oh my
168:10 - god
168:11 - okay i'm so sorry guys get started
168:13 - because you want to create an account
168:15 - because you just got into the app okay
168:17 - that's the whole point of it okay
168:19 - oh my god i'm sorry but other than that
168:22 - guys what's the next once we have create
168:24 - account
168:24 - it will show us what we have to
168:28 - we also have would have to make input in
168:30 - like an email or a name right to create
168:32 - an account
168:33 - so how does that go yep so we won't
168:36 - touch up on
168:38 - the firebase authentication immediately
168:40 - but we'll come back to the create
168:41 - account
168:42 - once we have the dashboard created right
168:44 - right right right right right
168:47 - so here we go there it is
168:53 - all right perfect okay close
169:05 - it does hover nicely but
169:08 - it doesn't do what we want i think yet
169:12 - yet okay so let's see where that goes
169:15 - right
169:16 - right sorry guys uh we did not
169:19 - put in the button yet so which page was
169:22 - that welcome page welcome.js
169:26 - we're going to do welcome pages
169:28 - welcome.js
169:32 - and then get started first button here
169:34 - the get started button we're going to
169:35 - say on press
169:38 - equals and then we're going to pass in
169:41 - a we're going to pass in a callback
169:44 - function right here and this is going to
169:45 - take us
169:46 - to navigation.navigate
169:52 - and where we want to go we want to go to
169:55 - create
169:56 - account oh sick that is so
170:00 - easy sort of like it's so logical
170:04 - or once it's set up it's a breeze
170:07 - what so apparently on press upon well
170:10 - this is apparently a click with the
170:11 - thumb
170:12 - but then this callback function is being
170:15 - called guys
170:16 - and then as you can see it's so easy
170:18 - like navigation navigate and then
170:20 - you just call the component that needs
170:22 - to come up that you want to be
170:24 - redirected to holy that's so cool
170:27 - okay now that we have this set up don't
170:30 - we need to
170:31 - oh we have already navigation that's why
170:33 - you added that as props in the beginning
170:36 - oh wow
170:37 - holy okay um all right
170:40 - let's try to click on that guess started
170:42 - button excuse me
170:44 - oh now let's try to click that get
170:46 - started yes okay boom
170:49 - there we go pushed up into that status
170:53 - area but we do have that sign up text
170:56 - yeah because did you use that sign up
170:58 - text in the create account
171:00 - yeah exactly so we can also change that
171:03 - and say
171:04 - create account
171:09 - does it change yes okay wow
171:13 - perfect perfect so
171:16 - what we want to do because we have all
171:18 - this laid out
171:20 - we need to import a few things up here
171:22 - at the top
171:23 - so we already have view we have text we
171:25 - have safe area view
171:28 - so now what we want is to import as well
171:31 - uh
171:32 - scroll view
171:37 - okay and we need let's see touchable
171:41 - um let's see touchable and this one's
171:44 - not going to be touchable opacity
171:45 - actually
171:46 - it's going to be touchable without
171:48 - feedback so there's actually a bunch of
171:49 - different
171:50 - touchables that we can use well i don't
171:52 - want to say a bunch there's like a few
171:54 - so we have touchable opacity we have
171:55 - touchable without feedback and then we
171:57 - have like touchable
171:58 - highlight which i like i like the
172:00 - touchable highlight one
172:01 - to be honest it kind of highlights the
172:02 - entire background all right then we want
172:05 - text input right we need to be able to
172:07 - log in
172:08 - um and then i think that's about it
172:11 - awesome okay and then let's also import
172:14 - that button that we created so we'll
172:16 - import
172:18 - button from
172:26 - one two three oh yeah button
172:29 - or five question mark i think
172:33 - components well we'll see you soon
172:37 - enough
172:38 - if that we'll get the errors we'll get
172:41 - the errors
172:44 - all right and then import of course
172:46 - style
172:47 - from
172:51 - we will need to create all right
172:55 - there we go guys now all right we have
172:58 - everything that we need we have all of
172:59 - our
172:59 - different components we have our button
173:02 - the custom button we created
173:03 - and we have a style even though we
173:05 - haven't created that file yet
173:08 - okay so inside of our function component
173:10 - here
173:12 - we first of course need to get our props
173:15 - right and we'll create a const
173:18 - and this is again going to be our
173:20 - navigation
173:23 - so especially while setting up your
173:25 - react native app
173:26 - it's going to be a lot of the same
173:27 - patterns um but every page
173:30 - that you want to navigate away from any
173:33 - page that you want to have a button that
173:34 - leads to another page
173:36 - you'll have to actually uh you know
173:39 - utilize this navigation from the props
173:43 - now let's create a bunch of
173:46 - um custom hooks so we're gonna need
173:51 - we're gonna need first name
173:53 - so we'll say set first name
173:57 - oh we'll say use date
174:01 - let me import that for you at the top
174:04 - okay there we go perfect
174:07 - and then this one's gonna be an empty
174:09 - string as a default value
174:11 - okay cool cool
174:12 - [Music]
174:15 - what else do we need we're gonna need
174:17 - first name we're gonna need last name
174:18 - we're going to need
174:20 - email so set
174:23 - email
174:26 - and we'll need password set password
174:31 - and then jesse's changing first name to
174:33 - last name for that second line there
174:35 - yep all right so we have first name set
174:38 - first name and then so forth right
174:41 - um all of these are going to be just
174:44 - empty strings to start with
174:46 - next we can uh get rid of this view here
174:49 - yeah right because the first thing
174:53 - that we want to do with pretty much most
174:54 - of our pages is make sure that we have
174:56 - a safe area view we want to make sure
174:58 - that we're not going to
175:00 - intertwine with the ios status area
175:06 - yes scroll view
175:09 - next thing we want is scroll view even
175:11 - if you don't think you're going to have
175:12 - enough content to actually
175:14 - need a scroll view or actually expand
175:17 - past
175:17 - you know most people's screens it's
175:19 - still good to have because
175:21 - you never really know how small
175:22 - someone's screen is going to be yeah
175:24 - yeah yeah some people are still using
175:26 - like uh iphone five so
175:28 - true that is true then we're gonna have
175:31 - a
175:32 - we're gonna have a view here um so we're
175:35 - gonna have
175:36 - well the title of our screen i mean this
175:38 - is gonna be pretty much similar to
175:39 - setting up our login page
175:41 - so we're gonna say title um or text or
175:44 - rather and this one's going to be
175:46 - create your account
175:51 - all right now let's create a view under
175:52 - this this is going to store
175:54 - our um
175:57 - our labels and our input fields
176:00 - right so let's go ahead and create a
176:01 - text and this one's gonna be first name
176:09 - and then we're gonna go ahead and say
176:10 - what do we want here
176:12 - what was that component called text
176:14 - input
176:16 - right so we need text input
176:20 - self closing and
176:24 - we're going to say value equals that uh
176:26 - that variable the first
176:28 - first name variable
176:31 - okay guys and then we're gonna set the
176:32 - placeholder so we know what to type in
176:34 - here
176:35 - um and this one's gonna be first name or
176:38 - whatever you want right it could be john
176:39 - smith
176:41 - oh wait first name so we only need john
176:43 - there we go
176:45 - all right and then we're gonna say style
176:49 - equals style
176:55 - text input style
176:58 - okay now we haven't created the style
177:00 - page yet yeah
177:02 - it's going to be a lot of the same stuff
177:04 - okay so can we also this view or with
177:06 - the import can we also steal that from
177:08 - the
177:09 - log from the login or
177:12 - i mean we'll just copy everything over
177:15 - okay
177:17 - because i think it's best to kind of
177:18 - keep everything pretty local
177:20 - kind of like when whenever you use like
177:23 - css modules and stuff
177:24 - keep everything pretty local um
177:26 - especially with when it comes to react
177:27 - native
177:27 - right so for this view we'll say um
177:31 - style.set margin
177:35 - voila okay yes what else do we need here
177:38 - so the safe area we're going to do the
177:39 - same thing that we did before we're
177:40 - going to say style equals
177:42 - style dot container
177:46 - okay and our scroll view remember guys
177:49 - this one acts a little bit weird so
177:51 - we're going to say style
177:53 - uh or content container style right
177:56 - and this one's going to be
178:00 - main view main view huh yeah
178:04 - so by the way standard i'm wondering
178:05 - about this prop like why does it have
178:07 - this specific name because i don't
178:09 - remember you
178:11 - using this one right or am i
178:14 - am i asking a weird question i think we
178:17 - used it in the login page
178:18 - um we use it in one page yeah so the
178:21 - scroll views
178:22 - are just a little bit weird sometimes um
178:24 - you can
178:25 - apply direct style on them but
178:28 - just you know because it's just in
178:32 - general uh a strange
178:35 - type of component so you have to say
178:38 - content container style
178:40 - and it's pretty much gonna force it to
178:42 - take whatever
178:43 - style you pass into it right right right
178:46 - right yeah because we are using it in
178:48 - login
178:48 - as well indeed and okay let's go to the
178:51 - next
178:52 - view what kind of style does it need um
178:56 - so that one we don't really need a style
178:58 - i think we're good there
179:00 - um and then this text we're going to say
179:04 - star style equals
179:09 - spelling style dot text style
179:14 - okay good good good text input good
179:19 - okay and what do we want here
179:22 - we want to update the first name so
179:25 - we're going to say
179:25 - on change text
179:30 - and again right we need to make sure
179:32 - that we have
179:33 - a callback function here so we're going
179:35 - to take in the text i mean this
179:37 - this by the way is just an arbitrary
179:38 - label guys right this could be anything
179:40 - it could be the event object
179:42 - it could be whatever we want to say yeah
179:43 - so text
179:45 - uh and then we're gonna go ahead and say
179:47 - set
179:49 - first name we're gonna pass in that text
179:54 - cool all right so that's one text area
179:57 - we can go ahead and kind of copy this
179:59 - view yes so you guys
180:00 - we're going to be needing last name for
180:02 - that email and password
180:04 - with those views yep
180:08 - so we can kind of just go ahead and code
180:10 - all of these out
180:13 - this one's gonna be set last name there
180:16 - we go
180:17 - yep good
180:21 - yeah good good good looks good to me
180:23 - we're gonna set
180:24 - email and
180:28 - we're also gonna set password
180:38 - email
180:46 - set email
180:51 - password password perfect there we go
180:54 - so now we have all of our sections right
180:56 - guys so
180:58 - i'm gonna go ahead and you know show the
181:00 - title of the page create your account
181:02 - uh text or the uh first name text input
181:06 - for the last name
181:07 - email and the password cool
181:11 - [Applause]
181:12 - let's see so i think all of those are
181:14 - going to pretty much have
181:16 - the same kind of style so that's good
181:19 - and then
181:19 - we're going to need one more view
181:21 - underneath
181:22 - so this can actually be in a separate
181:24 - view
181:26 - down here oh so that is outside of the
181:30 - of this view right okay great
181:34 - so this is gonna be one of our custom
181:35 - buttons
181:37 - all right guys so we're gonna say well
181:40 - first let's say
181:41 - for this style equals
181:45 - l dot button
181:54 - it's going to be start with disabled
182:00 - and it's going to be false okay
182:04 - so now what we need to do oh look
182:07 - look look look look oh hey it's
182:10 - there hey
182:11 - let's go create your account okay guys
182:13 - just like we have we made here
182:16 - oh you know what i just realized it is
182:17 - sharing the same style
182:19 - file i don't know why i didn't realize
182:20 - that but the style file is not in the
182:23 - same folder but it just
182:26 - did you yeah it's going back up so we
182:28 - don't even have it inside of the login
182:30 - folder it's actually just shared between
182:32 - right
182:33 - smart smart smart smart smart very clean
182:37 - because so guys here look create your
182:40 - account
182:41 - okay that's what happens here oh
182:44 - i can even swipe it can you see that so
182:46 - but first here first name
182:48 - last name email and password and
182:51 - the button has start just like tanner
182:54 - made
182:55 - here at the bottom this one here
182:58 - that looks sick oh okay
183:01 - cool let's go so what happens now
183:04 - if i would fill in some data in here
183:07 - and i would press start what would
183:10 - happen what should happen
183:13 - so right now we don't have anything
183:15 - really linked up eventually we're going
183:17 - to get some firebase auth
183:18 - kind of linkedin so that we can you know
183:21 - actually start creating some accounts
183:23 - and then we want the button
183:25 - to have that uh that navigate prop that
183:27 - we always have and we want it to push
183:29 - us to the dashboard right now we don't
183:31 - have anything linked up yet
183:32 - so okay okay well maybe that's also
183:36 - something
183:37 - i know you want to do now or maybe we
183:39 - should do it later
183:42 - i think that's going to be after we
183:43 - create the dashboard so right now let's
183:46 - go ahead and
183:46 - start adding um well we have one more
183:48 - piece of text
183:50 - that we're going to add okay um so let's
183:53 - see
183:55 - okay so let's see
183:58 - so kind of like we did with our login
184:00 - page we're going to go
184:01 - under the password field
184:05 - under the password field uh wait the
184:08 - login page
184:09 - the login create account page oh
184:12 - no okay i was in the right i was in the
184:14 - right file okay good
184:17 - where's the password password is here so
184:20 - under here
184:22 - or
184:26 - so let's go ahead and um just like we
184:28 - did with the login page
184:30 - we had you know that kind of like uh
184:32 - forget
184:33 - forgot password and policy stuff
184:36 - so what we want to do is kind of have
184:38 - like the legal
184:39 - agreement type ordeal right so you know
184:42 - if you're 18
184:43 - yada yada so we're going to say view
184:46 - here
184:47 - and in the view well first we're going
184:50 - to style it
184:51 - so we're going to say style equals
184:56 - l equals style.section and i don't think
184:58 - we've created this one yet so we'll have
185:00 - to go back and create that
185:02 - and then we're going to say
185:06 - used to be capital so capital text there
185:09 - we go
185:10 - um and this is going to be i
185:13 - certify that i um
185:20 - 18 years of age
185:23 - or older right yes
185:26 - and and i agree
185:30 - to the okay and we'll leave it there
185:33 - because what we're going to do is
185:34 - highlight some of the other text to be
185:36 - blue okay so this is still going to be
185:40 - inside of the same text field
185:42 - or text area we're going to go ahead and
185:44 - create a touchable
185:46 - without feedback
185:51 - without feedback and
185:54 - in it we're gonna have kind of like a
185:57 - secondary text field
185:59 - so let's give it a style we're going to
186:00 - say style equals
186:03 - and let's see um so we already have
186:06 - a bunch of different text styles so far
186:09 - so we'll say style equals uh
186:12 - link style 2
186:15 - that works mm-hmm for sure it's going to
186:18 - be
186:20 - user agreement okay
186:24 - yeah so what does this component
186:27 - actually do
186:28 - attachable without feedback
186:31 - so it would allow us to kind of create
186:33 - those custom style buttons or custom
186:35 - style
186:36 - links without having to use the default
186:39 - react native button component that we
186:40 - can't style
186:42 - but also without having you know too
186:44 - much visual visual feedback right so we
186:46 - have the touchable opacity which
186:48 - you know we can change the opacity to
186:51 - but then we also have
186:53 - a touchable highlight which would
186:56 - basically have like
186:57 - some sort of background that we can
186:58 - assign um detachable without feedback
187:01 - is usually used for like links so in
187:04 - this
187:04 - particular example we're saying halfway
187:06 - through this paragraph user agreement
187:08 - it's going to be blue text
187:10 - you're going to you know that implies
187:11 - that you can click on it and take you to
187:13 - whatever user agreement
187:14 - you know maybe it's pdf i don't know
187:16 - some sort of website
187:18 - so it'll be a link uh you don't really
187:19 - need a feedback there so okay cool cool
187:22 - that's explained that's thank you for
187:23 - that explanation okay let's keep going
187:25 - use your agreement what else and then
187:29 - we're gonna say
187:29 - and and let's copy this touchable
187:32 - right um and we're gonna change this one
187:37 - is going to be saying the same but we're
187:38 - going to change it to privacy policy
187:42 - there we go how do you spell policy
187:45 - like that for sure all right that's
187:48 - pretty much it for this section now what
187:51 - we want to do is
187:52 - go back to the style.js inside of our
187:54 - auth folder
187:55 - mm-hmm floor pages
187:59 - styled scs this one i mean
188:02 - wait wait
188:07 - wait which one did you say this one
188:08 - right yeah yeah that way
188:11 - perfect so let's see so we have textile
188:14 - up here on line 17
188:17 - right so kind of just to be a little
188:22 - more uh direct and keep everything
188:24 - together we have textile
188:26 - textile one textile so we're gonna add
188:28 - text off to here
188:30 - okay uh this one is gonna be flex 1.
188:36 - we're going to go ahead and set the font
188:37 - size we're going to set it to
188:39 - again rf value right guys and we're
188:42 - going to say 15.
188:45 - let's set the color to colors dot medium
188:48 - gray now this is going to be that entire
188:51 - text area that we just added so we want
188:54 - it to be
188:56 - wait what is this why does it keep doing
188:58 - that yep
189:01 - all right yeah so this is going to be
189:02 - kind of like that uh you know disclaimer
189:04 - text or small print or whatever you want
189:06 - to say it's usually some sort of smaller
189:07 - light
189:08 - gray so that's how we're going to see
189:09 - that
189:11 - and okay so now we want to add
189:15 - the link style to and where did we have
189:18 - the link style before
189:19 - here below so i have link style at the
189:21 - bottom let's just copy that
189:25 - and this is going to be the second
189:26 - iteration and we're going to just make
189:29 - it a little bit bigger than the last one
189:32 - and i think that's about it that should
189:34 - be good
189:35 - awesome and then if you guys remember we
189:39 - created a section as well
189:42 - so we're gonna say section here and this
189:45 - is gonna be
189:46 - a margin top of 20
189:50 - with a flex direction
189:55 - what of row right
189:58 - because by default we're already in
189:59 - column with react native so we want to
190:02 - change it to
190:02 - row at this point we should
190:06 - get the text showing up and we shouldn't
190:07 - have any errors
190:10 - so let's see oh there we go
190:14 - there we go okay we need some spaces
190:17 - but yeah but we need some spaces but
190:20 - other than that
190:22 - it works okay and the links okay they
190:24 - don't have the
190:26 - i thought they might have to hover but
190:28 - other than that
190:29 - i have the feedback because we said
190:31 - touchable without feedback
190:32 - um so there's gonna be immediate links
190:34 - to whatever you know you would link them
190:36 - to
190:37 - um but yeah we can add some uh
190:40 - so let's go back to create here we can
190:43 - add some like spacing there
190:45 - so the overall is called
190:49 - style section and then let's see
190:53 - we just give you the space
190:57 - oh those spacings yeah definitely
190:59 - definitely
191:00 - um but i forgot wait is it right here
191:02 - yes i forgot
191:03 - to say aha
191:07 - this is going to equal style dot
191:10 - text style two okay
191:13 - oh yeah there we go so now we're gonna
191:16 - give you a great
191:17 - text yes it's a little spaced away from
191:20 - the input as well
191:21 - and it just in general looks how you
191:23 - would expect so it looks pretty nice
191:24 - looks pretty clean
191:28 - okay cool cool
191:32 - so what's next this looks really clean
191:34 - like this component is complete right
191:36 - just create an account component
191:40 - or do you need to add something else to
191:42 - it
191:44 - no i think that it looks good man it's
191:46 - clean it uh pretty much is finished for
191:48 - as far as this one goes right
191:50 - so later you know we're gonna start kind
191:51 - of implementing the firebase
191:53 - authentication as well
191:54 - um right now you know we could just
191:57 - basically send it all the way over to
191:58 - the home page
191:59 - um once we start creating the dashboard
192:02 - just so we can get everything built out
192:04 - before starting
192:05 - to implement uh you know authentication
192:08 - and
192:08 - redux and all that stuff
192:12 - okay so yeah we can go ahead and add the
192:15 - dashboard
192:17 - to the stack navigator okay um yeah
192:21 - let's do that as the last part
192:22 - okay because um yeah
192:26 - okay um the stack navigator so
192:29 - root navigation okay
192:33 - yep so guys at the top here um and again
192:35 - just like always we haven't really
192:37 - created this file
192:38 - yet but we're gonna say dashboard over
192:40 - here
192:42 - dashboard and we're gonna say from and
192:45 - we're going to grab this from the
192:46 - screens and we're going to have a home
192:48 - section
192:49 - okay now for now we can just comment
192:52 - this out
192:53 - and then we'll come down here copy this
192:55 - stack
192:57 - paste that in change this to the name of
193:00 - dashboard
193:02 - dashboard
193:05 - and this one as well wait is that what i
193:07 - called it yes
193:08 - yeah yeah yeah that's what you called it
193:10 - there we go
193:12 - all right and then comment online out as
193:13 - well so this is going to kind of be
193:15 - a save spot kind of a
193:19 - a clean close right so we have our login
193:21 - page we have our
193:23 - a signup page we have everything ready
193:25 - to
193:26 - get into the app and then we're gonna
193:29 - start building out
193:30 - the dashboard the authentication and
193:32 - everything else
193:33 - and actually viewing the cryptos and
193:35 - their pages and their graphs and all
193:36 - that cool stuff
193:38 - yeah amazing so i think we're gonna be
193:40 - this is where this is what we're gonna
193:42 - be ending with
193:43 - right tanner so i think this is it
193:46 - for today guys i hope you really liked
193:48 - it please smash that like button
193:50 - if you like and of course if you're
193:51 - interested in joining our
193:53 - full stack mastery bootcamp okay our
193:55 - eighth month
193:56 - online really really cool fun
194:00 - boot camp okay whereby we teach you how
194:02 - to become a full stack developer
194:04 - please click the link below in the
194:06 - description to book a session with us
194:08 - okay and i'll see you there and other
194:12 - than that
194:12 - thank you so much today for for tanner
194:14 - for doing this with me it was super fun
194:16 - and we'll see you guys next time
194:19 - bye all right bye