00:00 - now guys today we are going to be
00:02 - building an Instagram clone with react
00:06 - so we come to you with another banger
00:08 - this is also gonna have firebase and
00:10 - user authentication and it's going to be
00:13 - deployed online and it has all the
00:18 - functionality the bells and whistles of
00:20 - Instagram here is actually Instagram
00:23 - right and then here is our app that
00:27 - we're gonna be building looks clean bro
00:31 - that is super clean and for example I
00:34 - can go here at the bottom and I can
00:37 - choose a file and let's just say I pick
00:40 - let's say this one you can upload it and
00:42 - I can say let's build a react to do app
00:48 - you can put my emojis or whatever it is
00:51 - that I want simply hit upload oh you
00:57 - have to click the file I chose it yep
01:03 - oh yeah nice and it's right here so you
01:05 - guys can see that yo our boy Aaron is
01:08 - here what is up yo thanks for the
01:13 - support rode that means a lot I
01:15 - appreciate it so you guys can see we
01:18 - just uploaded that photo so quickly and
01:22 - we're gonna show you how to be able to
01:24 - upload things and comment oh we didn't
01:27 - show them the common functionality right
01:28 - Sonny
01:29 - oh yeah nice let me actually jump on and
01:31 - I'll comment something else yeah go for
01:33 - it alright so if I go over to the
01:35 - comment I cause you just post it and say
01:37 - what's up guys so 3 2 1 boom the real
01:44 - time guys yeah okay because yes
01:49 - essentially hosted online and so then
01:51 - you just went and you posted a comment
01:54 - and then I went and I posted a comment
01:55 - and boom it just worked in real time
01:57 - like that right yeah and guys it's worth
02:00 - mentioning that we each logged into an
02:01 - account yeah you did that which is why
02:04 - it's clever cause IAM which is why i
02:05 - says my tag yep and so i can even click
02:08 - actually log out here and it will log me
02:11 - out and i can also click sign
02:14 - and then it allows me to sign up from
02:17 - there
02:18 - exactly yep so pretty pumped about that
02:23 - let me actually just take a look at how
02:25 - many users we have live right now is the
02:28 - live stream going fine yeah yeah okay
02:34 - let's see cool
02:36 - all right so this is what we're gonna be
02:39 - building I hope that you guys are
02:41 - excited to build this with us and at
02:44 - this point what do you say sunny should
02:47 - we get
02:48 - should we kind of jump into it let's do
02:51 - it okay so where do we start what do we
02:54 - do
02:54 - okay so first step is for anyone who
02:57 - hasn't coded with the react before it's
03:00 - one simple thing that we're gonna do so
03:01 - I need you to share the terminal right
03:04 - now cause you I'm gonna start so let's
03:06 - go right there
03:06 - command J man that shortcut is helping
03:09 - already so I will go here sure terminals
03:14 - read-only right click make read and
03:16 - write boom there you go oh so now I have
03:19 - access to your terminal awesome so the
03:21 - first thing we're gonna do is inside of
03:22 - the folder that we're coding in we're
03:24 - just gonna do MPX and then we're gonna
03:26 - run something called create reactor so
03:28 - this is something that Facebook built
03:29 - and it just it allows you to get a my
03:32 - terminals being wind it allows you to
03:33 - get a stock app set up so here we're
03:37 - gonna say Instagram Instagram clone or
03:40 - on their Instagram clone there we go
03:44 - let's just go with that and we can enter
03:47 - and that will get all of the files that
03:49 - we need set up and it will give us like
03:51 - a react template to start with and that
03:53 - will save you all the headache of all
03:55 - the boring steps to get everything up
03:56 - and running so I'd always recommend if
03:57 - you're coding in react you use create
04:00 - react app because it kind of gets rid of
04:01 - all that eggs and by the way this app
04:04 - will also be responsive for all of you
04:06 - guys so when you guys are done building
04:07 - it like look at that ah ah clean it's
04:13 - clean and we're also using material UI
04:16 - hey guys so for some of the things like
04:17 - the Avatar the buttons that you know is
04:19 - that's a really nice design library from
04:22 - Google called material UI so we're gonna
04:24 - show you guys how you can use up today
04:26 - nice I just logged in nice awesome so
04:33 - clean next step kasi while that's
04:36 - getting set up let's go ahead and setup
04:38 - firebase okay
04:40 - dude let's do it so while cause he's
04:43 - doing that firebase is a set of tools
04:45 - it's a suite of tools actually from
04:48 - Google and it allows you to do a bunch
04:50 - of different things so today we're
04:51 - actually gonna use three of these
04:52 - different services maybe four I think
04:54 - that what we're doing is we're having
04:55 - the database on firebase so it's gonna
04:57 - be a complete back-end solution for that
04:59 - I'm also gonna have so just to tell you
05:02 - what card he's doing is he said he's
05:04 - creating a new project which is what you
05:06 - guys need to do if you're following this
05:08 - and you just want to call it Instagram
05:09 - clone and then you click continue and
05:11 - it's gonna ask you after this if you're
05:13 - gonna add Google Analytics so it's up to
05:15 - you if you're gonna do that and then
05:17 - that will actually spin up the
05:18 - environment the backend environment for
05:20 - you and this gives everything done for
05:21 - you guys so you can have your database
05:23 - hosted here authentication so all the
05:25 - logging in and everything that you just
05:26 - saw them that happens through firebase
05:28 - and we can also deploy the website so it
05:31 - can be live on an actual link that
05:32 - everyone can access afterwards and we
05:35 - also have firebase storage which is how
05:37 - you were able to see the picture that
05:40 - cause he uploaded actually go online and
05:42 - then we can actually store that into our
05:43 - database so there's a bunch of things
05:44 - that we're gonna cover today so I hope
05:46 - you guys are excited nice oh my god 318
05:50 - people live that is amazing it's awesome
05:54 - thank you guys for jumping on your
05:56 - engagement and guys it means a lot to us
05:58 - it's a huge deal if you guys just give
06:00 - the video a like it doesn't take
06:02 - anything from you but it helps us a lot
06:04 - because we're trying to stream and
06:06 - trying to get it across as many people
06:07 - as possible so it really helps the
06:09 - channel grow and all you have to do is
06:11 - just click and smash that like button
06:13 - and we will love you for it and that's
06:16 - what keeps us going exactly and if you
06:19 - guys are enjoying it make sure you shoot
06:20 - some Instagram stories and talk to me in
06:21 - kasnia oh yeah we did that right we
06:24 - posted oh my god people are freaking
06:26 - testing the app that's so cool and and
06:34 - ya guys where was that post where you
06:36 - said so yeah you guys can actually tag
06:38 - us you guys can shoot and
06:39 - i G story right now we actually had a
06:41 - somebody to tag us yesterday and I've
06:43 - reposted their story on my Instagram but
06:46 - just make a quick video with your phone
06:49 - and then tag us at for Sonny it's this
06:52 - and then for me it's clever cause II so
06:54 - Tyga said that'd be awesome
06:55 - nice and I actually gives us a chance to
06:57 - speak to you guys see who's actually
06:59 - watching the videos it makes it a little
07:01 - bit more real for us yeah nice yeah yeah
07:03 - yeah it makes it like it makes us want
07:05 - to do it every single day like even
07:07 - though we only got a message that's
07:09 - something from like one or two people
07:10 - with the video but like that one video
07:13 - just gave us all the juice to get gone
07:16 - it really does like you really boost us
07:18 - to carry on doing this every day yeah
07:19 - nice okay so the next step is if you
07:22 - just want to hit on firebase you see
07:24 - that button yeah exactly
07:26 - and what we need to do here is just
07:28 - register the app so we just call it
07:30 - Instagram clone and we want to tick that
07:32 - little box called set up firebase
07:34 - hosting yeah and the next step we can
07:37 - actually ignore this because we use node
07:39 - modules when we set the app up so we
07:41 - don't actually need to worry about this
07:42 - then click Next and this one guys if you
07:46 - have if you are starting from fresh you
07:49 - just need to paste this into your
07:50 - terminal and run it and that will
07:52 - actually install all of the firebase
07:54 - tools in across your different projects
07:56 - so it will get you the firebase tools
07:59 - onto your terminal so that you can use
08:00 - it and you can do all the deployments
08:01 - but if I typed in and hit enter Sonny
08:04 - and I have it already installed what
08:05 - would happen it would most likely just
08:08 - up try to upgrade the modules okay so
08:12 - it's not it's not gonna hurt us doing it
08:14 - yeah all right should be good next yeah
08:17 - next we're gonna just ignore this for
08:19 - now we're just gonna continue ahead to
08:21 - the console yeah awesome so now we have
08:26 - our registered everything's good the
08:28 - reason why I did that cause if otherwise
08:30 - cuz you didn't do sudo oh yeah yeah if
08:33 - you guys get that error you most likely
08:35 - if you're on a Mac especially you just
08:36 - need to run sudo npm install and then
08:39 - what it will do is it'll just prompt
08:41 - your password you just enter your
08:42 - password and then it will have the right
08:43 - permission so you don't run into that
08:45 - issue yeah and and thanks for giving the
08:48 - video a like by the way guys appreciate
08:50 - that otome everyone's gaming it like
08:53 - yeah okay so next what we're gonna do is
08:56 - we're gonna jump back over to our code
08:59 - uh-huh here we go yep
09:01 - so if we just open up our photos what
09:05 - we're gonna do is we're gonna actually
09:05 - spin up the app so we currently have so
09:10 - you see when we done cracked up in the
09:11 - terminal I just did LS and it says that
09:14 - there is Instagram clone so what we need
09:16 - to do is do a CD into Instagram clone so
09:19 - CD inside of install done and now we're
09:22 - inside of Instagram so here here's where
09:25 - you see deed right right there yeah just
09:36 - saw over kill the MPM star and that's
09:46 - how you pretty much get the out fire it
09:47 - up mm-hmm
09:48 - right there NPM start yep
09:52 - now what we're gonna do is actually yes
09:55 - I think cause you actually started doing
09:57 - this already so on the host is Chad nice
09:59 - thank you yeah so what we're gonna do
10:01 - now is you just want to set up your
10:03 - directory so this is the the start a
10:05 - template you're gonna get when you start
10:07 - up and up what we want to do is kind of
10:09 - clear it out so we kind of just stop
10:11 - should we start still should we stop the
10:15 - and rock or keep it going yeah okay nice
10:20 - okay yeah so what we can do now is if we
10:25 - go to the photos yep mmhmm yeah right
10:45 - here so yeah hit delete gone rid of yeah
10:55 - cool cool all right so we're gonna go
10:58 - here and remove all the code inside of
11:01 - the header because we don't need that
11:02 - yep I'm the import statement at the top
11:04 - for the logo
11:05 - there we go so that was that's just
11:07 - gonna give you a fresh start right and
11:09 - what we tend to do want to do is like
11:11 - whenever you sort of start up an app you
11:13 - don't really want any of the styling
11:15 - that they already have inside of there
11:16 - you kind of wanna have a fresh clean
11:17 - slate that you can work from so let's go
11:20 - ahead and save that and if we go over to
11:23 - app test we can get rid of that file too
11:26 - so I'm gonna just quickly delete that
11:28 - one as well so then here's a comment for
11:31 - you what's that
11:32 - sunny giggling like to go my
11:36 - girlfriend's a spring shade when she
11:41 - could then we can then we can have that
11:42 - Val so now we've now we've got a nice
11:47 - starting point so what we want to do now
11:48 - is if we go to app dot CSS so this is
11:53 - the sort of final bit of cleanup that I
11:54 - like to do so we just want to let me
11:58 - also follow you oh yeah yeah nice go for
12:01 - it so now we want to get rid of
12:03 - everything and I like to add this one
12:05 - rule here which Macy says because what
12:08 - happens guys is whenever you have like a
12:10 - blank website that's created with your
12:13 - act even when you're doing default like
12:14 - web dev everything gets like this
12:16 - default margin of ten pixels and it's
12:19 - really annoying and everything kind of
12:20 - doesn't abide by what you want so you
12:22 - want to kind of get rid of that so
12:23 - before we added that line there was this
12:25 - default little margin so if I save it
12:27 - now you'll see you see that margin is
12:29 - hot mm-hmm you kind of gets it out of
12:32 - nowhere so you want to get rid of that
12:33 - so you basically add this rule and then
12:35 - that will sort of give you a fresh start
12:37 - so what we're gonna do now is I'm just
12:39 - going to do that file ok so now we're
12:42 - inside of our app so the first step I
12:43 - guess where I like to start off is
12:45 - pretty much let's just kind of get a
12:49 - rough idea of how the app looks right
12:51 - yeah so we saw how we start it before
12:53 - what we pre what we basically want is to
12:56 - have a bunch of posts so I like to use
12:59 - comments when we solve drop this out so
13:01 - we want a bunch of posts so we're gonna
13:03 - have a bunch of posts so in this case
13:05 - when opposed posts and then we're gonna
13:07 - have the header so we're gonna have some
13:11 - kind of header and the header is
13:13 - basically that top bar on Instagram
13:15 - the header is gonna be like right around
13:17 - here right at the top
13:19 - exactly okay so when you go onto
13:21 - Instagram and you see that little logo
13:23 - on the left and you see the login
13:24 - buttons on the right that's what we're
13:26 - talking about
13:27 - uh-huh yeah yeah perfect so what we're
13:30 - gonna do is like the header in yeah like
13:33 - this is the header
13:34 - yes exactly uh-huh yeah and even have
13:37 - you noticed how on our app when you
13:39 - scroll down it actually sticks so we're
13:42 - gonna show you how to do that as well
13:43 - which is a neat little feature sewn on
13:45 - yeah yeah because here when I'm
13:47 - scrolling down the header is seen which
13:48 - is stuck yeah so we're gonna also show
13:51 - you how to replicate that which is quite
13:54 - neat and a lot of people don't know that
13:55 - I didn't actually know that until fairly
13:56 - recently useful so what we're gonna do
14:01 - now is we're just gonna start off with
14:02 - the header to keep things simple we are
14:04 - going to add a div so a div is just a
14:07 - simple container and here I'm gonna just
14:09 - pretty much call it app so this is Emmet
14:12 - that I'm doing here somewhere say app
14:13 - header nice oops I didn't work because
14:16 - what I thought and we can get rid of
14:18 - this yep so if you guys are wondering
14:21 - what this is it's just something called
14:23 - bem i'd recommend go checking it out
14:25 - it's a really nice way of naming your
14:27 - CSS classes and it's a way that it helps
14:31 - you stay consistent as you code bigger
14:33 - bigger like bigger and bigger projects
14:35 - so throughout the app you're gonna see
14:36 - me using this convention and that's
14:38 - called BEM so BM yeah nice so what we're
14:41 - gonna do now is we're just gonna add a
14:43 - image so I've got an image over here and
14:46 - this image right now we were gonna give
14:48 - it a class of app header image and it's
14:51 - got a source and this is just the
14:53 - Instagram logo by the way guys it's
14:55 - nothing special nothing fancy is just
14:56 - the Instagram logo so if we save this
14:58 - now we should be able to see on our
15:00 - website that thing Yeah right there did
15:04 - you see that yeah so we've got a nice
15:06 - little Instagram logo neat okay so the
15:09 - next thing we want to do is you see I
15:11 - gave it a little bit of a a class right
15:14 - now so that app header image right yeah
15:16 - we're gonna go over to opto CSS and i'm
15:19 - gonna add this special line of code here
15:20 - and this is basically saying regardless
15:23 - of how big that container gets keep the
15:25 - aspect ratio of the Instagram because we
15:28 - never really want to stretch that
15:29 - right yeah so we always want to keep
15:32 - that so this little line of code here
15:33 - just keep stats per ratio so it's always
15:35 - gonna stay and it's always gonna look
15:37 - like it's perfect it's not gonna look
15:39 - like it's stretched it's not gonna look
15:40 - like it's broken nice and now what we're
15:43 - gonna do is we have yeah the header so
15:47 - that's perfect at the moment so we're
15:49 - just gonna keep it very simple for now
15:50 - so we can just get rid of that one and
15:53 - we can actually get rid of this let's
15:55 - actually pop this one underneath there
15:56 - for now
15:57 - so you have it like that nice and there
16:00 - save it and we should be able to see
16:02 - there we go right now we need to style
16:04 - the app header because right now it
16:06 - doesn't look the best and if you notice
16:08 - on Instagram it's very so but they
16:11 - actually have a background color it's
16:13 - like a very subtle grain right so what
16:16 - we want is we want the app so the app is
16:19 - gonna have that subtle gray background
16:22 - so you can demonstrate that by just
16:24 - opening up the the instruments I Kazi
16:27 - and you can just show them so you see at
16:28 - the back there's like a tiny gray right
16:30 - yep right there I mean it's not exactly
16:33 - white because this over here is white
16:35 - and this over here is like gray there's
16:39 - a very very subtle change so we're gonna
16:41 - add that so I've just grabbed the color
16:43 - from the Instagram and I used a little
16:46 - nice Chrome extension which allows it's
16:48 - like a little pepper and it allows you
16:49 - to just grab all of the colors from
16:51 - websites which is nice what is it called
16:52 - so the one that I use is called I'm
16:56 - actually sure it's called colorzilla
16:59 - mm-hmm so color Zilla that's the one
17:02 - that's really cool that one and
17:05 - basically what that does is it gives you
17:06 - a little pipette and you can pretty much
17:08 - just touch anywhere on the screen and it
17:10 - copies the hex code so it copies this
17:12 - little code right here and that's what
17:14 - you can use when you need to actually
17:17 - add that to your website which is really
17:19 - perfect nice okay so now what we're
17:22 - gonna do is we are gonna go over to what
17:26 - can I see the localhost anymore give me
17:28 - one sec let me just open up locals okay
17:32 - now what we're gonna do is we are going
17:34 - to add the background color for the
17:36 - header image so this one is going to be
17:37 - a white so we're just going to use very
17:40 - simple colors here we literally going to
17:41 - use the word why
17:43 - that gives you a nice clear
17:44 - crystal-clear white and now you can see
17:46 - it's very subtle it's actually a very
17:50 - very very subtle in the background yeah
17:52 - it's right there I can see it and then
17:53 - this is white
17:54 - yeah so that's why it so the actual app
17:57 - body itself is gonna be it's gonna be
18:00 - white but everything so that header it's
18:03 - very hard to tell at this point but
18:04 - isn't there's the opposite there header
18:06 - is white and their app body is actually
18:08 - gray also in our case it looks like that
18:12 - right now but it is oh sorry I've done
18:15 - it wrong I've done that's it now it
18:17 - should be correct yeah yeah there we go
18:19 - yeah it's just because you see where it
18:21 - says hello clever program was this
18:23 - button Instagram come with Iraq right
18:25 - now it's considering that to be the
18:27 - container so what we can actually do to
18:28 - get around that was we can say hi 100
18:32 - percent right and that should actually
18:35 - get rid of that issue or 100 view height
18:39 - I think but we can I you'll see that
18:41 - won't be an issue later on there you go
18:42 - there you go great stuff and what we can
18:49 - do now is comfortable here yeah nice
19:04 - nice yeah you can see it's already take
19:08 - away the padding I want to see what
19:10 - happens yeah so if we take that out
19:12 - you'll see it just drops to you yeah
19:14 - it's like so close to the top right
19:17 - there yeah so most of the time guys it's
19:20 - usually padding or margins that you want
19:22 - to do and if you guys don't know the
19:23 - difference padding is gonna add the
19:25 - padding inside ah margin it's gonna add
19:27 - it outside because I see the white
19:29 - borders got bigger so that means it was
19:31 - from the inside exactly yeah so he's
19:34 - patting the at the elements inside makes
19:36 - and up okay yep so now what we're gonna
19:39 - do is there's one last finishing touch
19:41 - here which is we just add a border
19:43 - bottom mm-hmm and we're gonna give it
19:46 - one pixel which means it's a very thin
19:47 - border it's a solid line and we're gonna
19:50 - say its light gray so light gray yep
19:53 - there we go okay
19:54 - and now if we say that you see it's got
19:57 - that little nice little clean line right
20:00 - so we're already starting to get
20:02 - somewhat of a fill for the like somewhat
20:04 - an Instagram fill here nice okay so let
20:08 - me just double check some stuff okay so
20:11 - the next step is let's actually get
20:13 - those posts ran up so if we go to app
20:15 - that J s and we go down to line 17
20:18 - we can see now so here is where we want
20:20 - to kind of have the posts like the posts
20:22 - which look really nice the post which we
20:24 - can see rendered out on the screen so
20:26 - what I'm gonna do here is rather than
20:28 - write a simple post or whether there
20:30 - might dip I'm actually gonna create a
20:31 - component so we're gonna go ahead into
20:34 - the the photos as in where the files are
20:37 - and we're gonna create a I'm gonna
20:40 - create one right now actually you can
20:42 - create it on your screen because then
20:43 - they can see uh-huh okay we'll create
20:45 - one and we're gonna cool this we're
20:48 - gonna call this post a s okay
20:51 - so this is a component that's gonna
20:52 - design how the post looks or like for
20:55 - example here this is a post and so we're
20:59 - gonna design this thing right now right
21:01 - exactly that oh okay love it so then
21:04 - what we're gonna do is we're gonna use
21:05 - this really nice extension and it's
21:07 - called es7 snippets it's really really
21:10 - handy extension that you can do and what
21:12 - it does is guys if I type in RFC II it
21:15 - pops up so that's exactly the one so you
21:17 - guys want to just go ahead and install
21:19 - that what we can do then is if I type in
21:21 - RFC II and I press ENTER boom we just
21:24 - get everything filled out for us which
21:25 - is really really nice beautiful now what
21:29 - we want to do is we go over to the post
21:31 - and we've pretty much just gonna add a
21:33 - bunch of so we if we look over at
21:36 - Instagram at their posts that they have
21:38 - at the moment they sort of get a rough
21:41 - inspiration so at the top they have a
21:43 - sort of a lava header yeah and every bus
21:47 - which has an avatar and then it has the
21:49 - user name right yep so let's go ahead
21:51 - and just sort of advance we let's just
21:52 - say we've come in here saying there's an
21:54 - avatar so they've got a header and
21:57 - inside the header they have an avatar
21:59 - and the user name yup I see so like the
22:02 - header is this of the post right here
22:03 - right exactly and then have the image
22:08 - so when you say avatar that's this guy
22:10 - and then yeah right here exactly and
22:13 - we're not gonna worry too much about the
22:14 - location for now we're just gonna have
22:16 - the image and then underneath there we
22:19 - aren't gonna write the like
22:20 - functionality we're just gonna have
22:21 - pretty much the username and then the
22:23 - caption so underneath the image we're
22:26 - gonna have user name and caption so if
22:28 - you scroll down you'll see you know it
22:30 - says coding Rob stay balanced right
22:32 - there is a username and then right there
22:35 - whoops
22:36 - right there is the caption exactly and
22:38 - yeah of course it's a big caption yeah
22:42 - so in that case it's a big caption so
22:45 - now what we're gonna do is I'm just
22:46 - gonna sort of get a little test going so
22:48 - I'm just gonna say let's just do here
22:52 - we'll say a h3 tag and we can just say
22:54 - username just to sort of dummy it out
22:57 - and then we go back to our app don't yes
23:00 - I think you need to refund me cause it
23:03 - is they're not following yeah there we
23:05 - go yeah there we go and now if we
23:08 - basically to get that component in all
23:10 - we have to do is write post yeah we do
23:12 - that and then I think if you go over to
23:14 - the end of the word and you press ctrl
23:17 - spacebar
23:18 - oh no it's not doing about your little
23:19 - trick so we might have to employ it so
23:21 - we say import from post and then the
23:24 - file is post there we go
23:26 - importing the component from here right
23:29 - exactly so now we're importing the
23:31 - component and you can see it's actually
23:32 - popped up on the screen now so we have
23:34 - that the next step is naturally to get
23:37 - some kind of image so that we can sort
23:39 - of render out so let's go ahead and let
23:42 - me go ahead and find a image so let's do
23:44 - let's just find an image to say react
23:47 - image so let me just find a quick image
23:52 - to grab so let's do this one this one's
23:54 - pretty cool so we can say this let me
23:55 - say copy image address so right now what
23:59 - I'm gonna do is I'm just gonna have a so
24:04 - remember guys at the top would be where
24:06 - they have the avatar and the image at
24:07 - the username and then here we're gonna
24:08 - have image just gonna be image and the
24:10 - source right now I'm just popping in
24:12 - this is just a picture of a react logo
24:15 - pretty much it's just a massive react
24:16 - logo
24:17 - and there we have it there so what we're
24:20 - gonna do next is we and we will style
24:23 - everything so that it looks good and it
24:25 - looks clean afterwards and then what
24:27 - we're gonna do afterwards is we've got
24:29 - the final bit which is the username and
24:31 - caption so here we're gonna have a h4
24:33 - and it's just gonna say something like
24:35 - you'll say the username and then it'll
24:37 - say something like this and it will just
24:39 - say the caption so I like to just mark
24:42 - it out like this you can't have a rough
24:44 - idea of what your component looks like
24:47 - and then what we do is we start this one
24:48 - component and then we just reuse it
24:49 - right
24:51 - yeah and I'll show you how we do all of
24:52 - that so now what we're gonna do is we're
24:54 - gonna style so firstly the image is way
24:56 - too big
24:57 - yeah we don't want this big we don't it
24:58 - doesn't look good it's not gonna scale
25:01 - very well so the first thing we need to
25:02 - do now is we actually need to go ahead
25:05 - and add a class to this so we're gonna
25:07 - say class and this one is just gonna be
25:09 - called post yep image yeah and while
25:12 - we're here let's go ahead and add a
25:14 - class to the container so when you
25:17 - whenever you do classes going by the BEM
25:22 - sort of naming convention your component
25:24 - is is the first first word and then you
25:28 - have an underscore underscore and then
25:29 - you have the element you're talking
25:30 - about so in this case we're in the post
25:32 - component image element right yeah so
25:35 - what we're gonna do now is we're gonna
25:36 - go over to we need to actually create a
25:39 - post CSS so if you just want to create
25:41 - that and I will import it while we're
25:44 - doing that so we say import or / post
25:48 - CSS there we go so you imported it right
25:52 - there
25:53 - cool yep I think it stopped following me
25:55 - again yeah yeah it stops following you
25:58 - every time I do that yeah so now we have
26:02 - the post image so I'm gonna go ahead and
26:04 - I'm gonna go and add a class and I'm
26:06 - gonna say the width I want the width to
26:08 - always be just a hundred percent so I
26:10 - don't ever want it to go pause because
26:11 - we're we're styling this image right now
26:13 - right which is [ __ ] it's like really
26:16 - huge right now yeah we don't really want
26:18 - it to ever go to that length we just
26:20 - want to get 100% of the screen you know
26:22 - here we say 100% and then we say object
26:24 - fit contain yeah that's the same rule is
26:27 - before so saying just keep the aspect
26:29 - ratio so there you go
26:31 - right nice now if you just resize the
26:34 - screen you're gonna notice that it's
26:35 - gonna be responsive always to a hundred
26:38 - percent of what you oh I love that
26:41 - object fit contain like the image is
26:44 - always gonna look super nice that's
26:47 - really clean oh that's clean really
26:49 - happy trick yeah yeah so that's
26:52 - something which a lot of people don't
26:53 - know about but that's a really really
26:55 - crucial thing when you're dealing with
26:56 - that images that's awesome yeah cuz
26:58 - images always end up looking really
27:00 - funny you know and I'm like man why does
27:01 - it not just look nice exactly and then
27:05 - they start looking weird and it just
27:06 - kind of throws you off so I see now we
27:08 - got the username and now we got the
27:10 - image and we're username and then the
27:13 - caption which is pretty much like this
27:16 - component that we were trying to model
27:17 - after right yeah so now this go ahead
27:20 - and give it some actual thing so let's
27:22 - just say this was clever Kazi yeah
27:24 - so yes you grab handle and then the
27:25 - caption was Wow day 1 day 3 of lives
27:31 - that's right yeah and now what we're
27:33 - gonna do is I just want to make the the
27:35 - username bowed so I don't actually need
27:37 - to do a nice fancy style thing I could
27:38 - just do something like this they still
27:41 - use the B I thought it you have to do
27:42 - strong right or now oh yeah you might
27:46 - actually because I don't actually use
27:47 - this one too much there defecated it or
27:49 - something yeah so we've moved it over to
27:51 - strong now you alright yeah so that will
27:54 - now have it so that it goes to so he
27:57 - said I think that's made it all bowed
27:59 - right no yeah I don't know what it is
28:04 - yeah yeah yeah what would do here then
28:06 - is well show you another approach so
28:08 - this is I mean I think it's actually all
28:10 - h4 so I don't think it did anything so
28:13 - what we can do here to fix this is we
28:15 - can just say this is gonna be the post
28:17 - we can say post text for example for now
28:20 - so this is relating to the post text so
28:22 - what we can do now is we can say that
28:23 - all of the post text is going to be
28:25 - let's give the post text to be Cisco
28:28 - here and they say post yeah I think the
28:30 - text should be regular shouldn't be
28:32 - bolded it should just be regular and
28:34 - only the user name should be bolded
28:37 - exactly so we'll divs it we'll give this
28:39 - a fun way of normal and you'll see that
28:41 - that will drop it down right yeah and
28:44 - what we
28:45 - do then is I think strong should work
28:47 - them because it's gonna then let's put
28:48 - clever Kazi and strong yep that's that
28:50 - should yeah and now there we go nice so
28:56 - then you have this off Instagram Phil
28:57 - coming through now and the next step
28:59 - what we're gonna do is let's just go
29:01 - ahead and get rid of this mark this mark
29:03 - so here we said we had we wanted an
29:05 - avatar right yeah so what we're gonna do
29:08 - now is we're actually gonna go ahead and
29:09 - look over at material UI so if you just
29:12 - open up material UI and to install
29:16 - material is very simple we just have to
29:18 - end this inside the terminal on the
29:20 - first page of material UI they have an
29:22 - NPM install so you just want to copy
29:24 - that and install that yeah and that will
29:33 - actually pull in the entire material UI
29:35 - design library and then we can just
29:36 - start using it as we wish so right now
29:39 - we're gonna do is we are gonna go ahead
29:41 - and import something called so this is
29:44 - the import statement for it so it's
29:46 - import a Vita and if you ever need to
29:49 - find this stuff guys it's all inside of
29:51 - the material UI dog so if you go into
29:52 - the search bar and type in an advert is
29:55 - gonna come up and it's going to show you
29:56 - how to use an avatar so let's go ahead
30:01 - and use it so where we're gonna put it
30:03 - is pretty much inside so right now we
30:06 - have a h3 right we're gonna basically
30:09 - have the Avatar next to it so we're
30:12 - gonna hum this like this so gonna have
30:15 - the avatar and here the alternative so
30:17 - this is what you can do you can actually
30:18 - give it an image it's gonna actually
30:20 - have a little image inside of that but
30:22 - for now we don't really want to be
30:24 - bothering with the images too much so
30:25 - right now this is actually gonna this
30:27 - isn't gonna sort of go equate to
30:29 - anything so it's just gonna go to the oh
30:31 - right and oh wait does is let's say if
30:34 - this was Rafi Kazi yeah it's just rough
30:37 - a Kazi it's just gonna basically put an
30:39 - R to symbolize it whoops I think yeah
30:43 - there's gonna put our there right yeah
30:45 - so now what we can do is if we save that
30:49 - we should be able to see do the install
30:51 - oh yeah we need to MPN start again yeah
30:54 - to get the app up and running
30:55 - yeah and now what we can do is we need
30:58 - to just wrap this so I kind of want
31:00 - these two next to each other so I'm
31:01 - gonna put them inside a container I'm
31:03 - gonna say div and I'm gonna say post mmm
31:06 - clean yeah so also it holes it pulled
31:10 - from the alt huh
31:11 - yeah it pulls it from the hole which is
31:13 - really nice because when we login what
31:15 - we can do then is we can use your
31:16 - display name and we can say if there is
31:18 - no picture set for that user then just
31:21 - use the first that ever there's the name
31:22 - which is pretty clean yeah you know damn
31:25 - dhruv got it right I am actually using a
31:28 - MacBook that's 16 inches I figured that
31:33 - uh yeah okay so we have post avatar post
31:41 - header so right now what we're gonna do
31:43 - is if we save this you should be able to
31:45 - see it will change the look of that so
31:48 - let's go ahead and ho look so why is
31:50 - mine not yeah okay so now Isabella I'm
31:55 - psyched yeah keep going guys we have the
31:58 - avatar but it's it's on top of the
32:01 - username which isn't really what we want
32:02 - so what we're gonna do now is we added
32:04 - this class name to the Container which
32:06 - surrounds these two elements and we're
32:08 - gonna go to our CSS and we're just gonna
32:10 - do display flex and what flex is gonna
32:14 - do is by default it throws it into a row
32:17 - so now you'll see everything's gone into
32:19 - a row right but the text is out of line
32:22 - so we want everything to be centered so
32:25 - to send every to center everything we do
32:27 - a line items Center and that will pull
32:29 - the text into the middle oh nice remove
32:31 - the display flex again just so we can
32:34 - visualize what is it doing
32:36 - yep so this is exact this is what it
32:39 - looks like right now now enable it real
32:41 - quick so if I bring that back and then
32:43 - save boom okay awesome
32:46 - yeah and that's another reason why you
32:48 - should be using react guys because you
32:50 - get this awesome feature called hot
32:51 - reloading so as soon as you save your
32:53 - file you just there's no there's not
32:55 - even a refresh you just sort of quickly
32:56 - adjusts sometimes especially when you're
32:59 - doing CSS it's really fast yeah so now
33:02 - we're gonna do is where we have the
33:04 - username so there's two ways of actually
33:07 - grabbing that but what instead what
33:09 - we're gonna do
33:09 - as a post avatar you see why now it's
33:12 - touching the tact right which doesn't
33:15 - look the best so we're gonna say post
33:16 - avatar and I want to do a margin right
33:19 - so I just want to add some little bit of
33:21 - spacing to that don't say margin right
33:23 - and then you see if we say that it just
33:25 - pops a little bit to the side right yeah
33:28 - but right here also this username is now
33:32 - has a little margin got it
33:33 - yeah okay still touching the side which
33:36 - which ideally we kind of want it to be a
33:38 - bit more cleaner than that that avatar
33:40 - right yeah like right now there's no you
33:43 - shouldn't be like touching the edge of
33:45 - the screen and stuff like that so what
33:46 - was yeah here it's not touching the edge
33:48 - of the screen it has space yeah so what
33:52 - we're gonna do is the entire post
33:53 - container or no the entire header
33:56 - container so the thing surrounding the
33:58 - avatar and username we're gonna go ahead
34:00 - and give that some padding so I think
34:03 - it's yet post header so I say padding
34:06 - and we're gonna give that let's just see
34:08 - what 20 pixels looks like so if we go
34:10 - and save that it's have a look and you
34:12 - can see is quite it already actually
34:13 - looks much nicer with that yes it does
34:15 - yeah so that looks pretty clean and we
34:19 - want to do the same thing for the bottom
34:20 - so it says clever Kazi Wow when you just
34:23 - do 20 AXA dad's padding in every
34:25 - direction right yeah so there's that's a
34:27 - really good point actually so if I was
34:29 - to do 20 X 10 pixels notice how it's
34:32 - gonna do 20 on the horror vertical but
34:35 - 10 on the horizontal yeah and you can
34:40 - pretty much do that you can go to the
34:41 - point of doing this and I think it goes
34:43 - top left whatever it does it goes left
34:47 - top right mom there's a lot of short
34:49 - hands that you can do for this but for
34:50 - now we just want 20 all around it so
34:52 - we're just gonna do 20 and the next step
34:55 - is we want to do the same thing to the
34:57 - caption so we're we have we gave a class
34:59 - name of post text and a go here and
35:02 - we're gonna say just give it a padding
35:04 - so padding of 20 pixels so boom and if
35:09 - we say that look at that so that's
35:12 - already looking clean yeah all right
35:14 - yeah sorry looking pretty nice to clean
35:16 - and it's already starting to feel a bit
35:18 - more like the app that we kind of want
35:20 - so there's another thing
35:23 - so if you obviously when it gets a bit
35:26 - big so if this screen was to get really
35:28 - large we don't want that image to just
35:31 - keep getting bigger and bigger and
35:32 - bigger right we want to kind of say you
35:34 - need a map because right now it keeps
35:35 - going forever yeah and that doesn't
35:38 - really look good on screens it starts to
35:40 - become a bad user experience so here we
35:42 - gave the outside container class name a
35:45 - post so what we do here is we go to line
35:47 - one and we say post and what we're gonna
35:50 - do is we're just gonna say give it a max
35:52 - width of 500 let's just give it a little
35:55 - test of 500 pixels and see how that does
35:58 - so now I see it maxes out so if you was
36:01 - to get smaller it would start resizing
36:04 - perfect that's awesome it used to get
36:07 - smaller than that it would actually
36:08 - start to resize yeah oh nice I think
36:13 - yeah I think in that case yeah thanks
36:16 - what we're gonna do now is we are going
36:18 - to actually so so not something to
36:23 - remembers remember we have that very
36:24 - subtle gray right behind it yeah but the
36:27 - actual background color of a post should
36:30 - be white so we should say background
36:31 - color white this is actually a good
36:33 - question from Cristobal he says what is
36:35 - the difference between class and class
36:37 - name and the difference really is that
36:39 - it's because you're using sunny is using
36:42 - we're using JSX
36:44 - and so would react you're gonna use
36:46 - class name and if you were just using
36:49 - regular HTML CSS JavaScript then you
36:51 - would use class yeah just to add to that
36:54 - as well in react class is actually
36:56 - reserved for class components so that's
37:00 - why it doesn't it's a way to not get
37:02 - confused between your classes and your
37:04 - actual class components so that's
37:08 - something to bear in mind which is why
37:09 - they're moving towards so I mean some
37:12 - people may be wondering like I've heard
37:13 - of class-based components of how two
37:14 - functional components you do need to
37:17 - know both guys I would recommend you
37:19 - them both but right now just to keep it
37:21 - short on sweet we're using something
37:22 - called functional components which is
37:24 - why you don't see any sort of class or
37:26 - anything like that but yeah just a rule
37:28 - of thumb when you're doing your you're
37:31 - sort of styling give everything instead
37:33 - of a class give it a class name that's
37:34 - all you need to remember
37:36 - mmm-hmm nice dope okay okay so now the
37:40 - next step is we kind of need the borders
37:42 - right we need everything to have its
37:43 - correct borders so what we're gonna do
37:46 - now is firstly the entire post should
37:48 - have a border so we're gonna go here and
37:50 - we're gonna say it should have a border
37:52 - that's gonna be one pixel solid light
37:54 - gray and it would all make me know get
37:58 - that oh nice you see it's time to really
38:01 - form quite quickly right yeah very
38:04 - quickly yeah looking really nice yeah
38:06 - the border is now all around the photo
38:08 - nice and what we're gonna do next is
38:11 - we're actually gonna give the image a
38:13 - top and bottom border so we're gonna say
38:15 - border top is one pixel solid light gray
38:18 - yeah it's light gray like gray yep and
38:23 - we're gonna copy that line and we're
38:24 - just gonna say border bottom is that and
38:29 - the reason why I did that is because I
38:30 - don't want the the sides to become
38:33 - double borders if that makes sense
38:34 - because currently they already have a
38:37 - border around the side you see inside
38:39 - outside the entire post so if I was to
38:41 - add another light gray border around the
38:43 - image you're gonna get double borders
38:45 - and it won't look that nice I see okay
38:47 - right yeah yeah so that's that that's
38:50 - why we did that and then now what we
38:52 - want to do is I think that's actually
38:54 - pretty cool so what we're gonna do now
38:55 - is actually test this a little bit more
38:57 - so where we had in Appius we had the
38:59 - posts we're gonna do now is if you just
39:02 - press command J Kazi on the undercoating
39:04 - thing yeah yep there we go according to
39:07 - visual studio hey Visual Studio code as
39:10 - that yeah we're gonna just paste it a
39:13 - couple of times and we should now see so
39:15 - whoa look at that nice right that is
39:19 - clean so now what we want to do is we
39:22 - want to sort out the spacing right so if
39:25 - you know it's on Instagram they have
39:26 - this nice little spacing gaps between
39:28 - each one so what we're gonna do to sort
39:31 - of do that is we're gonna go ahead and
39:32 - add to the post so the actual container
39:36 - itself we're gonna add a margin bottom
39:40 - of 45 pixels and what this is gonna do
39:43 - as soon as I click Save notice on the
39:45 - right it just added that little bit of
39:46 - space underneath it so we're saying
39:49 - give that component forty five pixels
39:52 - worth of space underneath it all right
39:55 - and then you get that nice old gap
39:57 - underneath everything so now we're
39:58 - actually looking pretty good
39:59 - okay let's comment that out real quick
40:01 - ah okay okay this this gap whoops what
40:04 - the hell
40:05 - uh-huh this gap right here right once
40:08 - that gets enabled exactly nice okay and
40:13 - what I'm gonna do now is because we
40:15 - previously did something which might
40:17 - break so we're gonna go to app though
40:18 - CSS just gonna get rid of this line of
40:20 - code because now our container is
40:22 - growing so we don't need that anymore
40:23 - okay so what we're doing now is we have
40:26 - the three posts right but obviously it I
40:28 - mean it looks good but in actual reality
40:31 - you know we don't want these three posts
40:34 - to be the same every time right we want
40:36 - them to be customizable so now what we
40:39 - need to do is we just need to pass
40:41 - through so the way we differentiate one
40:44 - component from another and react is we
40:46 - use something called props so props are
40:49 - basically like imagine just like a
40:50 - normal HTML element but in this case we
40:53 - have a bunch of things we have like the
40:55 - image URL so whatever the image URL is
40:58 - so in this case let's go ahead and give
41:00 - that the image URL that we have mehriban
41:03 - is like everyone is discussing where
41:05 - Kazi is from like it's so annoying I'm
41:08 - just looking at the chat like it started
41:10 - with Isabella she just won't stop asking
41:13 - where I'm from and then like everybody
41:14 - just starts talking about it and then
41:16 - like marijuana's like from Pakistan but
41:22 - when two states yeah yeah I'll just
41:24 - leave it a mystery for everybody you
41:26 - know here we are coding react in every
41:31 - way because we come from
41:32 - yeah I'm from Mars we're gonna go ahead
41:39 - and add the image URL here so it gets
41:41 - passed through as a prop right yeah so
41:45 - let's do that and then what other things
41:47 - we need to customize we need to
41:48 - customize the user name so we go ahead
41:51 - and pass in a user name so let's say
41:52 - this one is using it let's just say like
41:54 - in this case it'll be clever cause II
41:57 - another thing that we need to customize
41:59 - is the caption all right yeah
42:03 - the caption we could just say here is
42:05 - like well it works yeah somebody asked a
42:09 - good question
42:10 - Fayed says why would we want to use
42:13 - react can we not just use CSS and HTML
42:16 - to create this Instagram clone what is
42:18 - reacts purpose right so I mean cause
42:22 - you're new to it well you're more newer
42:24 - to react that I'm so what what of you
42:26 - found like what the benefits for you
42:28 - since you've been using rare well a few
42:31 - things that are really amazing to me is
42:33 - like making my app in a component based
42:36 - way where everything is a component and
42:38 - so everything is like extremely fast
42:42 - like the fact that this is its own
42:43 - component separate from like this thing
42:46 - at the top means that this thing can
42:49 - take its own time and load on its own
42:50 - time this can load on its own time
42:52 - another one is like if I'm about to make
42:55 - a new comment to this app it's not gonna
42:57 - refresh the entire app it's just gonna
42:59 - refresh that one new comment I add this
43:01 - is why Instagram is so fast if I make a
43:04 - comment on this guy's post same thing is
43:06 - gonna happen and this is what Instagram
43:08 - is using react so for me it's really the
43:11 - speed and also how easily and quickly I
43:15 - can put most things together but I mean
43:17 - yes any give us yours like that's all I
43:21 - see the benefits I see it and the reason
43:23 - why it's called react guys is because
43:25 - it's literally only reacting to the
43:28 - changes it needs to react to oh down
43:30 - yeah I did not know that yeah because
43:34 - it's only gonna react to the bits that
43:36 - needs to which is why it's super
43:37 - efficient and really fast yeah so yeah I
43:40 - mean like to be honest I didn't know
43:41 - that for a very long time and then it
43:42 - kind of clicked one day all by oh it's
43:44 - good react right that is brilliant
43:47 - yeah and honestly when you get into big
43:50 - code bases guys it really makes a
43:52 - difference when you can actually see
43:54 - just the code that you need to see so
43:56 - rather than seeing hundreds of lines of
43:57 - code you're just coding on like for
43:59 - example if we look at the post you can
44:01 - see we're just only have like 20 lines
44:04 - of code inside of the post yeah that we
44:06 - need it with so he actually makes
44:07 - everything really easy and manageable
44:08 - yeah yeah but that's a really good
44:10 - question
44:11 - nice yeah thanks for the question so
44:14 - let's go back to you so here we're
44:16 - passing through
44:17 - a bunch of attributes we got username
44:19 - caption image URL and what we're gonna
44:21 - do now is to pass those through here it
44:24 - comes through as a parameter here so it
44:26 - says props but what we can do is we can
44:28 - do something even better here we can D
44:29 - structure so this is es6 syntax and we
44:32 - can actually just pass through the exact
44:34 - names that we passed in so here we
44:36 - passed in username caption and image URL
44:38 - so if we just pass those in here so we
44:40 - say username caption and image URL and
44:45 - then what we can do is it's basically
44:48 - opening up the object so the props that
44:50 - we passed in and here we can just do
44:52 - this and guys what I'm doing here is as
44:54 - Kazi mention before this is JSX so if
44:57 - you have these squiggly brackets you can
44:59 - actually add JavaScript here and there
45:00 - and then it sort of loads your
45:02 - JavaScript dynamically into your HTML
45:03 - which is really powerful so down here
45:07 - another benefit of using react right
45:10 - because you can't just do this in
45:11 - regular HTML CSS and JavaScript right
45:14 - exactly you have to do that whole
45:16 - document dot get element by ID and that
45:18 - doesn't really refresh this is this is
45:20 - another massive reason as to why we use
45:22 - it yeah so nice so nice and then what
45:26 - we're gonna do here is we're actually
45:27 - gonna delete that and we're gonna add
45:29 - the caption here so it's pretty much
45:31 - that simple so we've just passed in the
45:33 - props and now you'll see the first
45:36 - component should load and the second and
45:38 - third would be empty so all we need to
45:40 - save the first part that's why yeah so
45:43 - now you see the first file has loaded
45:44 - and you know my comment is coming
45:47 - through wow it works there's a little
45:50 - little comma at the top so I got rid of
45:52 - that and it should fix that yeah you see
45:56 - the second and third one it elegantly if
45:58 - it doesn't get the props
45:59 - it doesn't just crash and freak out it
46:01 - just leaves it undefined which is which
46:02 - is a nicer way of handling it than just
46:04 - sort of going crazy and breaking so now
46:07 - if we were just to sort of replace these
46:09 - two so we're not gonna replace the
46:10 - images just yet we're gonna just say
46:11 - this one's gonna be me and this one
46:13 - could be like oh there we go
46:18 - and here we could say dope and this one
46:23 - we could say this is a fun project there
46:27 - you go
46:28 - and if we save that and we refresh now
46:31 - you can see it's come up with the so you
46:34 - can see now we've differentiated each of
46:36 - them so you can see like you are clever
46:37 - cause you've got SSS anger and
46:39 - everything sort of looks and feels as it
46:42 - should so now what we can do is and just
46:44 - to make that very visual very quickly
46:46 - what I'll do is I'll actually just so
46:49 - let me just copy this image address and
46:51 - I'll add in different image here so you
46:52 - can see very clearly that that actually
46:54 - did change so now if it refreshes these
46:57 - he the first one is oh wait did I do it
47:01 - right
47:02 - it's what uh oh I knew I only I need to
47:05 - change that to an actual picture so
47:07 - let's just say dog sure give me one sec
47:09 - yep it's grabbing a picture of Google
47:12 - yeah and program programming planet says
47:14 - it might sound weird but it's the first
47:16 - video I'm seeing of sunny is there any
47:17 - personal channel of him and I think you
47:19 - sunny has a personal Channel oh yeah
47:23 - nice yeah it's literally just my name
47:25 - guys it's just sunny Stanga so I will
47:28 - pop that in the right here like that yep
47:31 - just like that nice so you guys I need
47:33 - to a little bit more but right now me
47:35 - and cause you pretty much just doing
47:37 - these live streams are about to leave a
47:39 - legacy that's the goal
47:44 - three days now awesome so we've I just
47:47 - added that now so it should come through
47:49 - so it should be a picture of a dog that
47:52 - comes through if we refresh you say that
47:55 - so why is that oh okay
47:57 - of course because you see in post Jess I
48:00 - didn't actually pass it through as the
48:02 - pro I say as this article devalues so
48:04 - now I'm gonna change that to be the one
48:06 - that we passed in so image URL right
48:09 - there a way of seeing how it all works
48:12 - so now you can see all the images and
48:15 - learning let me find another one yeah
48:18 - let's just use this one
48:20 - image is hiding from you alright this
48:24 - crap oh I just I didn't add the prop
48:27 - name right like image URL yeah be
48:29 - careful guys yeah she said that and
48:32 - there we go there now we've got okay
48:33 - there we go
48:34 - perfect so there we have our pretty much
48:38 - everything set up and it's working as we
48:39 - want what we want to do next
48:42 - is rather than hard coding these posts
48:44 - we kind of want needs to come from
48:46 - somewhere so I'm gonna give a quick
48:47 - demonstration of something called state
48:49 - and state is basically like a short-term
48:52 - memory store in react so let's go ahead
48:54 - and set up a piece of state so here we
48:57 - have let's just call it posts so it's
49:00 - gonna resemble an array of the posts
49:01 - inside of our app so post and then hold
49:04 - it you in order to actually set that you
49:07 - have to do set posts so this is the
49:09 - standard of how you write a piece of
49:12 - state so how you setup a piece of state
49:14 - we're gonna use the and just for
49:15 - simplicity guy's a piece of state really
49:19 - is just like how you set variables in
49:21 - react that's a simple way to think about
49:23 - if you're brand new to react this
49:25 - variable posts here it's it's just
49:28 - pretty much a variable and yeah exactly
49:32 - yeah so it's a really good thing you
49:34 - mentioned there so it literally whenever
49:35 - rather than doing this guy's so rather
49:38 - than doing cons post equals a blank
49:41 - array just think of it as you set this
49:43 - you set your variables up like this
49:44 - right and you never ever do this in
49:47 - react you never ever say like posts
49:50 - start append
49:51 - something like and then you adds a
49:53 - string to it and then and then cuz
49:55 - you're directly manipulating hit it
49:57 - right here instead what you do is you
49:58 - say set posts and then you pass in
50:02 - whatever value you want here alright so
50:05 - that's how you do it inside of react but
50:06 - you don't do this direct manipulation
50:08 - where you have to follow the react rules
50:10 - which of these alright and this is an
50:13 - example of a hook guys so a hook is just
50:15 - like a short little small piece of code
50:16 - we can buy our own herbs and they're
50:18 - really powerful and functional and they
50:20 - just pretty much allow us to use really
50:22 - cool things such as stay and and there's
50:25 - a few more level show throughout this
50:26 - demo Sharia says sure says I just got
50:30 - here when I run the npx create react app
50:32 - command on the terminal
50:34 - it shows the term npx is not recognized
50:36 - as a name of the blah blah so basically
50:39 - the problem here is you don't have the
50:42 - package npx installed so you will have
50:44 - to go and install + px' and then you
50:47 - guys can do npx create react apps so
50:51 - just look up how to install you know
50:53 - like literally copy that
50:55 - line of code trap and px create app
50:58 - google it and then it'll tell you like
51:00 - what the problem is exactly yeah you're
51:03 - gonna have to set up an PX before I know
51:05 - install it to your computer before you
51:07 - can use it yeah yeah so we're we have
51:09 - the state we have to give it an initial
51:11 - value so that when when the app loads
51:13 - it's gonna have a value inside of it so
51:15 - here I'm gonna basically give it to
51:17 - objects and those two objects if you
51:19 - haven't guessed it they're going to be
51:21 - the objects that we had here so the
51:25 - posts props so the first one we're gonna
51:28 - give it this so we're gonna say I just
51:30 - need to separate this now so we say
51:32 - cover Kazi and then the second bit is
51:35 - going to be the caption so this is an
51:37 - object so the syntax is slightly
51:39 - different so we do it like this and then
51:42 - the final one is going to be an image
51:44 - URL just like that alright and for time
51:48 - simplicity I'm going to just copy this
51:50 - same one so we're gonna have two of the
51:51 - same things rendering so there we go
51:54 - and I'm basically just gonna yes so
51:56 - that's that's perfect so now what we've
51:58 - got is we've got an array of two objects
52:00 - right and this is gonna this is what we
52:02 - which each post here basically has these
52:06 - three pieces of information exactly and
52:09 - what that means is like so user name is
52:12 - going to be whatever your user name is
52:14 - caption is going to be where it says
52:17 - dope here or where it says wow it works
52:19 - and then image URL is obviously what is
52:23 - being rendered right here so each post
52:26 - has three pieces of information and this
52:28 - over here is the first post and then
52:31 - this over here is the second post
52:33 - exactly yeah yep and what we want to do
52:37 - now is this actually making simple no
52:39 - because even if we were to have like a
52:41 - thousand things here all we need to do
52:43 - now is actually write on one elegant
52:45 - piece of code here so we basically put a
52:47 - little JSX brackets and we basically do
52:50 - this so you just want to scroll down a
52:52 - little bit cause you on the on the left
52:53 - so here we can just say we can say posts
52:58 - dot map so map is an ESX function and
53:01 - basically what it's doing now is it's
53:03 - going to every single post so it's gonna
53:06 - go through that list that cause you
53:07 - showed before so this list up here
53:10 - and it's basically just gonna say so the
53:11 - first timing runs through it this is
53:13 - gonna be post the most variable and the
53:15 - second time it runs for it this is gonna
53:16 - be the post variable yeah and what we're
53:18 - gonna do is we're just gonna return
53:21 - something for me by the way sunny I
53:23 - think what we really should start doing
53:24 - is putting everything in coats and box
53:27 - right after the video is done like right
53:29 - after we're done live-streaming and then
53:31 - just show people where they need to add
53:33 - their like firebase config file and then
53:36 - they're good to go yeah that's a good
53:38 - idea I think we will do that on the next
53:39 - cool definitely yeah yeah awesome so now
53:43 - what we're gonna do is we have the post
53:44 - and then what we're gonna say is every
53:47 - time we get a post it's very simply what
53:50 - we do is we say every time we get post
53:51 - so we're gonna render out a post so
53:53 - that's the first step so the main thing
53:54 - you're trying to do here is based on
53:56 - these one second before you just start
53:58 - writing because I keep spore Singh you
54:00 - to follow you so what you're trying to
54:02 - do here is just looping through these
54:03 - posts right so the post one should show
54:05 - here and then post two should show here
54:08 - exactly yeah and then what we do here is
54:12 - we say username equals so here we just
54:15 - say post dot and then you access those
54:18 - properties we saw before so now we're
54:19 - gonna do username and then here we'll
54:21 - say caption equals post dot caption
54:25 - because that's what we gave it inside
54:26 - the object and the final one is image
54:28 - URL so image URL nice double loops
54:32 - yep and sunny this is also a really good
54:35 - question
54:36 - ossama asks try not to sound stupid but
54:39 - it's firebase better than using node.js
54:41 - back-end yes there's a really good
54:44 - question actually so a lot of people do
54:46 - get confused about this bit so firebase
54:48 - what they try to do is they try and
54:50 - actually get rid of all the complexity
54:52 - of a traditional back-end so you don't
54:53 - have to make the API request and you're
54:55 - gonna see when we actually start
54:57 - implementing the database next but if
54:59 - you do need a back-end so no js' is
55:04 - basically for those of you who don't
55:05 - know it's server-side JavaScript so it's
55:08 - just the stuff that's on the server in
55:09 - the background so whenever you solve
55:11 - using the Instagram website or something
55:14 - and you click something in most cases it
55:16 - makes your requests like on some kind of
55:17 - database server somewhere and that's
55:19 - usually running either like Python or
55:21 - nodejs or something like that
55:23 - but here what we're gonna do is firebase
55:26 - actually strips that away from us so we
55:27 - don't even need to do that and I'll show
55:29 - you that in a sec but well if you do
55:32 - need to do that guys
55:33 - firebase offers something called cloud
55:35 - functions and cloud functions can be
55:36 - written in nodejs so it tells your
55:39 - question it's more it's not really a
55:41 - case of which one's better it's it's
55:43 - more of a case of firebase allows you to
55:45 - have no js' cloud functions which can
55:48 - scale up or down depending on how many
55:50 - people are using them at one time so
55:52 - it's really really powerful yeah okay
55:55 - awesome and I think also did we mention
55:59 - that firebase gives you a real time
56:01 - database yes that's a really good point
56:03 - so firebase has something called the
56:06 - firestore database and that is a real
56:08 - time database guys so traditionally if
56:10 - you have a database in in any app you
56:13 - kind of have to constantly sort of fetch
56:15 - every five seconds or ten seconds and
56:17 - that's quite intense and you don't
56:20 - really get like a real-time feel it just
56:21 - feels like this janky experience whereas
56:23 - in firebase they do all of the stuff so
56:26 - some of you may have used something
56:27 - called socket dial which is basically
56:29 - like sets up like these real-time
56:30 - listeners but in firebase you don't even
56:33 - have to do that they do everything for
56:34 - you behind the scenes all you have to do
56:36 - is like literally I think it's like
56:37 - three lines of code and we're gonna show
56:39 - you that soon and it pretty much sets up
56:41 - this real time sink so that way if if
56:45 - somebody adds something information into
56:46 - the database it immediately comes
56:49 - through them the way we combine that
56:50 - with react is really really beautiful
56:52 - and it gives you a really elegant
56:53 - solution to all of that headache so you
56:55 - never have to worry about that real time
56:57 - sink anymore yeah okay awesome
57:03 - yes so now what we're gonna do is we're
57:05 - actually gonna get rid of those two
57:06 - hard-coded posts and now this line of
57:10 - code is doing is just mapping through so
57:11 - it's going through every single post and
57:13 - it's just outputting a post component
57:15 - every time it sees some information so
57:17 - if we save this now we should see it
57:19 - were gonna have two posts which are the
57:20 - same because remember I just copied and
57:22 - pasted the information which is perfect
57:23 - yeah so what all right let's get that so
57:26 - go ahead yeah which is nice so the next
57:29 - step not truly I think we should maybe
57:31 - implement the firebase database yep at
57:35 - this yeah so
57:36 - let's go ahead and go over to firebase
57:38 - mm-hm
57:42 - database yup so database and I want you
57:46 - to click on create database okay here we
57:50 - go perfect start in test mode oh I keep
57:53 - forgetting to actually take the comment
57:55 - off the screen all right so let's click
57:59 - test mode yep test mode and then we'll
58:03 - click on next
58:05 - Sam Sam crazy all of us has to tell me
58:08 - remove that comment and then I mean this
58:13 - is pretty cool like we have labs here
58:15 - who says that they're using mostly
58:18 - Apache Cassandra for the databases so
58:21 - like seems like they know a thing or two
58:23 - and then Mario you asked is the writing
58:26 - on screen also a function of V s code
58:28 - live no I use an app for annotation
58:30 - called screen brush it's it allows you
58:33 - to annotate on your own screen yeah it's
58:38 - true really and even when we sort of
58:40 - pair programming and yeah see what house
58:42 - he's talking about like I'm just like
58:43 - look right over here man
58:47 - yeah okay so now we've got the database
58:52 - set up so now basically all you need to
58:55 - know at this point is many people may
58:57 - have used sequel database many people
58:59 - may have used know sequel databases this
59:01 - is like a hybrid right so firebase they
59:03 - realized that there was these problems
59:05 - of sequel databases they realized that
59:07 - there was a lack of functionality in no
59:09 - sequel databases so they basically found
59:11 - a middle ground and they have this
59:13 - collection document collection structure
59:15 - and what we're gonna do here is you
59:18 - pretty much have a collection of posts
59:21 - so right now we have some posts so we're
59:23 - gonna create a collection for that and
59:24 - you have imagine every single post is
59:27 - something called a document right so you
59:29 - have one collection called post and then
59:31 - you have multiple documents inside of it
59:33 - which are each gonna resemble a post on
59:36 - site on our Instagram clone right so
59:39 - just as cause he's down here he's
59:40 - actually created the collection and then
59:42 - you've got the document ID which is all
59:43 - Nike generated and then you've got the
59:45 - three filled so you've got caption user
59:47 - name and image URL so perfect so
59:49 - if you want to go ahead and add a
59:50 - caption so let's go ahead and add a test
59:52 - caption so and then if you want to go
60:01 - ahead and write a user name there you go
60:05 - and an image URL let's just find an
60:08 - image URL or you can grab the one from
60:10 - the code maybe you know so you can grab
60:14 - that one nice there we go and as soon as
60:20 - you click Save that should be done
60:23 - awesome so now you can see we've added
60:26 - one post stripe so the next I guess the
60:29 - next step what we need to do is go ahead
60:32 - and get our config file so that we can
60:34 - tell so now we need to connect our react
60:36 - up to our firebase database so let's go
60:39 - over to that little cog icon on the left
60:41 - yeah so let's go ahead and click that
60:44 - side menu yeah project settings scroll
60:47 - the way to the bottom and if you click
60:49 - on config this is the magic sort of
60:53 - piece that we need so what we're gonna
60:55 - do in in our code is we're gonna create
60:57 - a file called firebase j/s so inside of
61:05 - a little bit of a config file and this
61:07 - is basically gonna be responsible now
61:09 - for all of our config settings right so
61:13 - if we go here and I'm just gonna do let
61:16 - me open up five ways to js5 yes there we
61:19 - go
61:20 - and you've copied in there right oh
61:22 - you've done it really nice okay so is
61:25 - this the this is the API key that you
61:26 - just got before right I just poked yeah
61:30 - I just I think just got it right now
61:31 - yep so now what we're gonna do is this
61:33 - is the snippet of code that I always
61:35 - referred to so you guys can just copy
61:36 - this and what we're gonna do is we're
61:39 - just gonna grab the contents of the
61:41 - config just cut out and all we're gonna
61:45 - do guys is just pop it inside of here so
61:47 - what this is doing here is basically
61:50 - it's initializing the app so we've
61:52 - installed firebase I don't know if we've
61:54 - actually done that yeah we need to
61:55 - inside the terminal we need to do an NPM
61:58 - I firebase so that's actually gonna
62:01 - install firebase into our
62:03 - into our project community the modules
62:05 - and just a little note cat is something
62:07 - I learned recently is you don't need to
62:09 - do this - - save anymore with NPM so you
62:11 - can actually just do NPM my firebase
62:13 - just a side note
62:15 - that's actually really I didn't know
62:17 - that you can tell me that yeah I stack
62:19 - overflowed and I was like it's saving
62:21 - that module even yeah I just kind of
62:25 - assumed I was like no we can't do that
62:27 - it's gonna break yeah awesome so then we
62:31 - have Solanas installed now we just
62:34 - employed the firebase module to talk do
62:35 - you not answer to this question by the
62:37 - way sunny Ross the boss asked so I'm in
62:40 - the works a web developer and I use
62:42 - angular with this process be similar in
62:44 - angular so it's a good question to some
62:50 - degree you have some similarities
62:52 - because they're both JavaScript so you'd
62:54 - be using the same sort of like SDK but
62:57 - with that said there are a lot of
63:00 - differences guys because the way we're
63:02 - gonna pull it in and the way we're gonna
63:04 - render connect to the database is a
63:06 - massive massive sort of differentiation
63:08 - between how use react and then Howie's
63:10 - angular so I would recommend if you're
63:12 - doing this I would say with react if you
63:17 - do want to sort of learn more about
63:18 - angular stuff then I'd recommend
63:19 - following a different tutorial and just
63:21 - doing it from scratch and yeah so
63:23 - implementing it this video yeah because
63:25 - angular is like a framework and react is
63:28 - just a library to react is much more
63:30 - lightweight so with angular even Sonny
63:33 - and I were talking about this yesterday
63:34 - you're gonna have a full like you have
63:36 - to follow their structure for how you
63:38 - store your files and your directories
63:40 - and literally you have to work within
63:42 - that framework would react you're not
63:45 - really you don't have to worry about any
63:46 - of that so it's gonna be completely
63:47 - different
63:48 - exactly it's so much like away guys
63:51 - especially if you're new to this I'll
63:52 - definitely recommend react yeah yeah
63:55 - and it's also much more popular guys
63:56 - it's much more popular at the moment I
63:59 - mean it's just crazy to me that we're
64:01 - building a full database connecting and
64:02 - having that two-way sync and like we're
64:05 - not setting up routes we're not setting
64:07 - up like endpoints we're not setting up
64:09 - like uh-oh RM we don't have a models
64:11 - database like I mean it's it's weird to
64:15 - me because any time you're doing model
64:16 - viewcontroller like you have to do those
64:19 - things yeah you would have to do
64:21 - everything by the book whereas we've
64:23 - react it's very much a case of like you
64:25 - just find what you need and the rest is
64:27 - done and firebase is such a good
64:29 - complementary feat that sort of suite of
64:31 - tools to use with it because they're the
64:32 - same thing they just get rid of all the
64:34 - complexity so combining the two is a
64:36 - no-brainer mm-hmm
64:37 - but there's just not that many tutorials
64:38 - on it which is why this will actually be
64:40 - really useful to a lot of people yeah I
64:44 - know we keep getting lots of questions
64:45 - and we want to go through it fast but
64:46 - these are all really good questions so I
64:48 - want to just address them is it Mohammed
64:50 - asks is it safe to use all DB
64:52 - credentials in front and side so it's a
64:56 - very good question there are many things
64:58 - that you can do to protect it so a lot
65:01 - of this stuff guys even if you protect
65:03 - it and you use all this complicated
65:04 - stuff when you actually release your app
65:07 - if you inspect the code even on
65:09 - production websites if you were go to
65:11 - live if you went to Instagram that their
65:13 - API keys are actually gonna be inside of
65:17 - the inside of their front and so a lot
65:20 - of this stuff in this case the config
65:22 - stuff yes it's okay to have it on the
65:25 - front end but with that said I would
65:27 - make sure that you set up the rules the
65:29 - security rules correctly in firebase so
65:31 - what that what that would usually mean
65:33 - is any requests which would come outside
65:35 - of the say for example if you deploy
65:38 - this website if somebody was to use your
65:41 - config outside of your website domain it
65:43 - should block it all right so you can set
65:45 - those things up but you I would
65:48 - recommend setting those up and even
65:49 - fire-based
65:50 - database yeah a bunch of rules because
65:53 - yeah you can set it up in a way where
65:54 - it's like Mohamed calm if they use it on
65:57 - there and then it works otherwise it
65:58 - doesn't work
65:59 - yeah exactly so that's something which
66:02 - I'd recommend and that's probably the
66:04 - better way to do it what I would say is
66:06 - don't maybe don't push this into you as
66:09 - you know with that said I honestly it's
66:10 - completely fine these are public these
66:12 - are quite public in terms of what you
66:13 - can do with them I've seen actual
66:15 - production massive web sites with their
66:17 - firebase keys on there so it's actually
66:20 - completely fine provided you set your
66:22 - rules up correctly
66:23 - awesome let's keep it going coding says
66:25 - it's so amazing I can't wait to try this
66:27 - new coder I'm signed up for your monthly
66:29 - subs
66:30 - awesome love to hear that nice let's
66:33 - keep going and yeah and if you guys ever
66:36 - want to join the Prophet with JavaScript
66:38 - course guys where we go deep into all of
66:40 - this I know some of you guys we have
66:42 - three of you guys just joined so Derek
66:44 - joined and price and Richard in the last
66:47 - 30 40 minutes if you guys ever want to
66:49 - join the link is in the description
66:51 - click that link and I mean again if you
66:54 - want to learn all of this stuff and then
66:56 - learn how to go to up work go to
66:59 - freelancer comm all these online
67:00 - platforms and land clients we show you
67:02 - that as well
67:03 - so click that link and join the course
67:05 - and then you can come back to watching
67:07 - this tutorial
67:07 - yeah and if you're enjoying this kind of
67:10 - sessions guys we actually have like up
67:12 - to four of these in the course every
67:13 - single week which is really really
67:15 - amazing and we actually those are much
67:17 - more personal so yeah we actually jump
67:19 - on a zoom coup and we chat back and
67:21 - forth which is really nice yeah right
67:24 - big iron things and some really nice
67:26 - stuff that you guys are teaching me so
67:28 - much more than my uni is thank you
67:30 - that's awesome yeah awesome that's what
67:32 - we're here for that's what gets us hyped
67:34 - up you know and again guys just remember
67:35 - you want to take Instagram story while
67:38 - this is happening record the video flip
67:40 - the camera to yourself also show your
67:42 - face so like record which are building
67:44 - and show your face and we will repost
67:46 - you you know on aren't thing just it's I
67:50 - think mine I think I've shared this with
67:52 - you guys but I'll do it again but mine
67:56 - is at clever cause II and then sunny
67:59 - yours is SSSs Stanga yeah so SSS saying
68:04 - right there there we go so yeah guys
68:06 - definitely share this with us that's
68:08 - what keeps us going
68:08 - I love to see that because they
68:11 - literally motivates us every time for
68:13 - these sessions yeah yeah nice okay so
68:16 - now what we need to do is we need to
68:18 - call this initialize app function which
68:20 - is provided to us from firebase we pass
68:22 - it the config and then all we need to do
68:24 - here is this is some simple self and
68:26 - this is grabbing three services from
68:28 - firebase and it's storing him into three
68:30 - variables so one is taxes to DB we do
68:33 - this the other one is to access the
68:35 - authentication so we'll explain more
68:37 - about this afterwards but this is so
68:39 - that we can actually log in log out
68:41 - create users etc and the final one is
68:43 - storage
68:44 - that's gonna be how we can actually
68:45 - upload a bunch of em from like a bunch
68:48 - of pictures and stuff like that to
68:50 - firebase and instance store in our DB oh
68:53 - wow so I don't even have to worry about
68:55 - s3 Amazon Web Services and any of that
68:58 - no this is amazing this is literally you
69:07 - literally have a very clean piece of
69:09 - code and it just works what we want to
69:11 - do this so now what we're gonna do is
69:14 - we're gonna go over to apt ojs and
69:16 - basically we have a little mission right
69:18 - now so I think you need to follow me
69:20 - again cause I will follow you don't
69:22 - worry all right here we go
69:24 - boom boom let's go it's rock and roll
69:28 - now what we want to do is we want to
69:30 - instead of having this hard-coded we
69:32 - want that to pull into our database and
69:33 - react gives us something really powerful
69:35 - it's called a use effect and use effect
69:38 - is again
69:39 - so just like we have the used state hook
69:41 - there's another one called use effect
69:42 - and what use effect does is basically
69:45 - I'm just going to write a quick comment
69:46 - here is it runs a piece of code based on
69:50 - a specific condition
69:53 - that's literally what a user fact does
69:55 - so if you just break it down and think
69:57 - of it like that it becomes very very
69:59 - simple so it's just a use of effect you
70:04 - know use effect it's very confusing if
70:07 - you did I use effect there we go
70:08 - so if you do that so it's pretty much
70:11 - just gonna run a piece of code based on
70:13 - a specific condition so what we can we
70:15 - can have several of these guys so in
70:17 - this case we're gonna we're gonna type
70:18 - one out here and the syntax for this is
70:21 - we do use effect and then it has an an
70:24 - arrow function to begin with and this is
70:26 - where the code runs so this is where the
70:29 - code runs alright yeah and what we're
70:33 - gonna do is the conditions actually go
70:36 - into here and the conditions are simply
70:38 - variables so if we leave it blank this
70:40 - is gonna mean it's gonna run once when
70:43 - the page loads so once when the app
70:45 - component loads so right now we're
70:47 - inside of the app component it's gonna
70:49 - basically run when the app component
70:50 - loads but then it's not gonna run again
70:52 - so it's actually really really good for
70:54 - what we need to do right now yeah but
70:56 - hey for example if I was to
70:57 - but inside of here posts this would mean
71:00 - it would run once when the app component
71:02 - loads but also every single time posts
71:06 - change so every single time posts change
71:08 - it will run this code again so you've
71:10 - got some really good functionality here
71:12 - you can be flexible with and you can
71:14 - have several of these to do as much
71:15 - money look at this this is so cool okay
71:18 - so let me just I'm just writing some
71:19 - dummy text so you see the text on the
71:21 - screen right yeah you see how it says
71:24 - dummy it's like a little harder to read
71:26 - than like where it's you know the
71:27 - variable and everything yeah it
71:30 - automatically knows where it's harder to
71:33 - read and it can darken it oh nice hold
71:38 - control I just hold control and it does
71:40 - that that's mind blowing
71:41 - that's awesome Wow yeah that's nice and
71:44 - you have to get rid of it or does it go
71:46 - after a certain amount of time if I just
71:48 - hit enter it goes away but if I don't
71:50 - hit enter it'll stay there that's
71:52 - awesome I think I might grab that soon
71:54 - yeah so here what we need to do is we
71:58 - need to implement this this one over
72:00 - here just to clarify for everybody this
72:02 - little like bracket that looks like this
72:05 - this just means whatever the code is
72:08 - here run it once when the page refreshes
72:10 - that's it never run again that's all
72:12 - that means
72:13 - exactly so what we're gonna do here is
72:17 - we need to pull the information from the
72:20 - database and then basically capture it
72:22 - here right yeah but firebase gives us
72:25 - some really really powerful stuff here
72:26 - so first what we need to do is we need
72:28 - to import that database variable that we
72:31 - set up earlier so we go ahead into our
72:33 - firebase file and we import that and
72:36 - then here what we can do is we can say
72:38 - DB yeah doc collection and what did you
72:42 - name the collection I think it was posts
72:43 - right yeah it's called post but with the
72:46 - quotes
72:47 - holy crap sunny five times in a row
72:50 - semicolons you put semicolons five times
72:53 - in a row yeah I know
72:57 - we got the collection so this is the
73:00 - posts inside of firebase guys so it's
73:03 - food posts and then what we're gonna do
73:04 - now is we're gonna say we basically need
73:08 - to say on snapshot so on snapshot
73:11 - basically this really really powerful
73:14 - listener that's how we need to think of
73:17 - it it's a very very powerful listener
73:19 - and what its gonna do it's basically
73:21 - every single time the database changes
73:24 - in that collection so every single time
73:26 - a document gets added changed modified
73:29 - inside the posts imagine a camera right
73:32 - it's just gonna take a snapshot of
73:34 - exactly what that collection looks like
73:37 - so you're gonna get an update of all the
73:39 - documents if somebody adds a document or
73:42 - adds a post it's gonna update it it's
73:44 - gonna refire this bit of code yep every
73:46 - single time any new document if I add a
73:48 - new document here like a new post
73:50 - information boom this thing fires right
73:53 - there so that's what on snapshot does it
73:56 - just says hey every single time a change
73:59 - happens fire this code exactly then that
74:02 - then this bit of code will fire off yeah
74:05 - by the way Labs asks do you guys have a
74:08 - discord so we have what's called slack
74:11 - and we can actually show you guys our
74:13 - slack community so this is where's
74:17 - profit JavaScript so this is our profit
74:18 - with JavaScript slack community and so
74:21 - it's kind of like discord but we've set
74:24 - it up in a pretty awesome way so this is
74:26 - where we're like a sign you homeworks
74:27 - feedback review and you can see all a
74:29 - lot all the students are extremely
74:31 - active we have over you know 1200
74:34 - students in here everybody is super
74:36 - freaking awesome and just cool so you
74:38 - know if you want to but be a part of
74:40 - this then definitely join profit with
74:42 - JavaScript and then we have a very
74:44 - curated set of community of just people
74:47 - who are amazing and are willing to learn
74:48 - just like you exactly we have weekly
74:51 - homework we have coaching calls the
74:54 - community so supportive guys it
74:56 - literally becomes a case so if you ask a
74:58 - question you can be guaranteed that
75:00 - within about 10 minutes somebody would
75:01 - have answered your question yeah so it's
75:03 - much more responsive than you pretty
75:05 - much get with like Stack Overflow or
75:06 - those or communities yeah yeah oh my
75:10 - gosh that core flow just makes you want
75:12 - to just always be thinking about killing
75:13 - yourself ugh it's so condescending and
75:18 - patronizing everybody on there it really
75:20 - is access to it so I think
75:25 - if you guys want to join the course the
75:27 - link for the course is actually in the
75:29 - description of the video yes you just
75:30 - want to go check that out now and you
75:32 - can click that link and jump in the
75:34 - course okay let's keep going
75:38 - so as we mentioned whenever something
75:41 - gets pushed into this post it's gonna
75:43 - fire off this bit of code and when it
75:45 - fires it off we basically just want to
75:46 - do this we want to say set our posts to
75:50 - something inside of here and what we're
75:52 - gonna put inside of it is we're gonna
75:53 - say from that snapshot from that
75:55 - snapshot go get the docs so the docs are
75:58 - the list of things that we saw or
76:00 - completes doing this annoying things
76:01 - here Docs and then we're gonna say map
76:03 - through every single one and this piece
76:05 - of code is always the one that's all
76:06 - gets a bit tricky firmament understands
76:08 - a map through every single one get each
76:10 - dot it's it's kind of just like a fancy
76:13 - way of writing a loop but I mean I know
76:15 - it's more that map is more than that but
76:17 - I just think of it like for loop yeah
76:19 - yeah and if I had multiple docs here map
76:23 - is allowing me to just loop through it
76:25 - and then whatever that one doc is you
76:27 - get access to it right here so if we had
76:29 - the second doc you then it would loop
76:31 - through and you would get access to it
76:33 - exactly exactly and then what we do here
76:36 - is we just want to map doc data so data
76:39 - is basically gonna give you all of the
76:43 - properties that cause he's got in that
76:44 - document on the right so you can see
76:46 - caption image URL and the final one
76:49 - which was username yeah yeah it's gonna
76:53 - have all of those things right so that
76:55 - pretty much is going to update the posts
76:58 - as soon as the component loads so if
77:00 - we've done everything worried I can
77:02 - actually get rid of this right now so
77:03 - there's this hard code it's no nice okay
77:06 - and I can get rid of this and if I save
77:08 - it now so you should see it
77:10 - yeah what we did is we were just deleted
77:12 - these two posts that we had hard-coded
77:14 - now what we're gonna be trying to do is
77:16 - pull the stuff that we have in the
77:18 - database okay
77:20 - exactly so if we were fresh now we
77:23 - should if everything's gone well we can
77:25 - see oh we need to MPN start yeah nice
77:30 - what we should see now is that
77:32 - everything pops up accordingly over
77:35 - where we expect it so we should have one
77:37 - post
77:38 - and that post the contents of that
77:40 - should be what cause he put in the
77:41 - database earlier there we go nice oh wow
77:45 - so this is coming from hold on let's
77:47 - actually put it side by side take a look
77:49 - at what's happening so this is what we
77:50 - had put in our database earlier if you
77:52 - guys remember and so here you know the
77:56 - caption is this the image is coming from
78:00 - free code camp and then user name is
78:02 - actually right there and this is this
78:06 - one document now what happens if I add
78:07 - another document will it show up yes
78:10 - this is a really beautiful part so as
78:11 - you start writing that I'll explain what
78:13 - happens so okay we just stopped a real
78:15 - time listener guys right so what that
78:18 - means is that every single time remember
78:20 - I said every single time something gets
78:21 - pushed into that collection it's gonna
78:24 - refire that piece of code that we wrote
78:25 - which is gonna update the posts and then
78:28 - it rear-ended everything on the page so
78:29 - that means that once cause the adds all
78:31 - of this stuff what's gonna happen is
78:33 - actually it's gonna refire that code and
78:37 - then in real time re render it on the
78:39 - screen so it's actually gonna be a
78:41 - really really quick implementation so as
78:43 - soon as cause I hit save watch what
78:44 - happens no that was clean look at that
78:49 - boom right here everything that I just
78:52 - wrote is right there yeah which is
78:56 - amazing like and guys somebody asks a
78:58 - really good question here how do we pull
79:00 - individual post IDs so I will actually
79:03 - show you right now because we are gonna
79:05 - need to do that at some point so we can
79:08 - actually do that right now so where we
79:10 - have the user fact so we head over back
79:13 - to the code yes what he's talking here
79:15 - is the unique IDs are for every single
79:17 - document they each have a unique ID yeah
79:20 - so the idea is right here guys every
79:23 - single document has its own unique ID he
79:25 - wants to pull that out and get access to
79:27 - these yeah exactly
79:29 - so now the way we do that is previously
79:32 - we were just mapping the the three
79:34 - things so that the CAPTCHA and the image
79:35 - URL and that stuff so all I'm gonna do
79:37 - here is rather than just returning that
79:39 - stuff I'm gonna actually create an
79:41 - object here that we're returning and
79:43 - that stuff I'm just gonna basically call
79:45 - that post so it's gonna have a post and
79:48 - then that's gonna have all the day air
79:49 - inside of that post
79:51 - we're gonna have his we're also gonna
79:52 - have an ID so right now I'm actually
79:54 - creating an object so I'll make it bit
79:56 - clearer us there you go
79:57 - I have an object we have an ID and we
79:59 - have a post and the ID the way we get
80:01 - the ID guys say doc don't ID right so
80:04 - each doc is gonna be this so doctor ID
80:07 - will get you literally that ID right
80:09 - there and then when you do doc dot data
80:12 - you're actually digging into this
80:16 - specific doc and you're getting this
80:18 - data over here and so that's this guy
80:21 - right there by the way so it's like
80:23 - literally going to be a squiggly like
80:25 - object yeah and what we need to do to
80:28 - fix this now is because previously we
80:30 - were mapping through our posts thinking
80:32 - that everything was just an object but
80:34 - now it's an object with keys so what we
80:36 - can do here is we can actually just
80:38 - destructor at this point and we can say
80:40 - post and we can also add an ID and that
80:43 - will fix it for us so now we have the ID
80:44 - and we have the post and what we can do
80:47 - with that ID guys is react is really
80:49 - clever right previously we weren't
80:51 - passing something called a key and what
80:53 - if we don't pass a key every single time
80:56 - that Kazi was adding a new element to
80:59 - that a new post to the page it was
81:01 - rerender in the entire list because it
81:03 - wasn't sure which one was changed which
81:06 - one was edited or updated if we add a
81:09 - unique key now so in this case we're
81:11 - gonna add the key which is the ID of the
81:12 - post now it's really genius so it's
81:16 - basically if he pushes a new post in it
81:18 - will know that the two posts that were
81:20 - previously there while owed post so
81:23 - don't bother rerender in them just
81:24 - rerender the new one and push the list
81:27 - on okay so what are you saying add a new
81:31 - post yep so if you add a new post now
81:34 - it's not gonna be that apparent when
81:36 - they when you see it now but it will be
81:38 - more efficient when we render this okay
81:40 - so basically what you're saying is like
81:42 - if I add a new post everyone actually do
81:44 - it won't refresh these it will just add
81:46 - a new post and that's it right yeah it
81:48 - was right now without a key actually
81:51 - refresh is all three so refresh all
81:54 - three of those elements in the page okay
81:56 - so instead of refreshing all three of
81:58 - those it this time it will only refresh
82:00 - one the one that I'm adding okay this is
82:03 - very important like with
82:04 - doesn't show but like what if I had
82:07 - 20,000 images on here or 20,000 echoes
82:10 - you don't want to refresh 20,000 posts
82:12 - so yeah caption here is okay and then we
82:21 - will have an image URL and maybe do I
82:28 - have another PNG let's try this one
82:32 - thanks Alfred by the way guys if you
82:38 - guys wanna yeah cause he introduced me
82:42 - to that and pretty much everything you
82:44 - copy is available for three months
82:46 - afterwards we have a database so crazily
82:52 - powerful guys like you can copy ho
82:55 - snippets of code it's crazy there we go
82:57 - nice awesome yeah that was an image I
83:01 - had copied like some time long ago and I
83:05 - had it here then boom right there we got
83:08 - it my username is right there and then
83:11 - my caption is right here perfect awesome
83:15 - yeah so now what we want to do guys is I
83:20 - want to just highlight this this is
83:21 - pretty actually awesome Ranbir says hi
83:23 - buddy thank you very much for your
83:25 - tutorials I followed your tutorial
83:26 - Django and was able to build some web
83:28 - applications by myself and finally I was
83:31 - able to crack an interview in a big MNC
83:34 - nice that's awesome that is awesome
83:38 - congratulations honestly guys that's
83:40 - actually really common with our students
83:42 - we actually hear this more than we
83:43 - thought we would like we constantly hear
83:45 - of success stories it's really really
83:48 - nice to see every time we saw here from
83:49 - that yeah awesome I think what we should
83:53 - naturally do now is make some kind of
83:55 - way so that we can actually upload right
83:58 - yeah like so we can have setup so we can
84:01 - upload ourselves right yeah we need
84:03 - ourselves at this point I guess well the
84:07 - way to do that is firstly actually what
84:09 - might be better as if we do the logging
84:11 - in because we're gonna need to have some
84:13 - kind of user name when we do that okay
84:16 - so right now over trying to add is
84:17 - Oh actually you know what I should do I
84:20 - should actually add a screen overlay on
84:23 - ECAM and actually because that actually
84:28 - could be really cool give me one second
84:32 - I hope I don't mess it up so I'll say
84:34 - what are we doing so right now we're
84:36 - gonna work on user authentication right
84:38 - yep so we're gonna do some user
84:40 - authentication so firebase
84:41 - authentication okay I'll say firebase
84:44 - user authentication like that yeah so
84:48 - what what I'm saying you know what I
84:49 - mean so like anybody anybody joins at
84:51 - any time they know what we're currently
84:53 - working on yeah that's cool let's make
84:56 - it look maybe make it a little bit
84:58 - smaller oh that's nice that's really
85:00 - nice yeah that's cool okay hold on so
85:05 - otech smaller yeah so just make it taste
85:08 - a little bit smaller and that's it
85:12 - awesome okay
85:15 - I think that I don't know maybe is that
85:17 - hopefully that's helpful for you guys
85:19 - let us know we're just trying it out and
85:22 - seeing how this works on maybe
85:24 - background give it a different type of
85:26 - color yeah in which IDE are you coding
85:31 - we're coding in V s code right now we're
85:33 - using a feature called vs live share
85:36 - which is how me and Kazi are coding at
85:38 - the same time and I can see his
85:39 - localhost so we'd really recommend you
85:41 - guys download and check that out because
85:43 - it allows you to actually code on the
85:45 - same project at the same time in a
85:47 - really nice way oh that's cool that's
85:48 - clean that's awesome right so then now
85:50 - anytime anybody joins at any time oh
85:55 - okay so with that said let's go ahead
86:00 - and go over to firebase now okay so if
86:06 - we click on the little bugger menu on
86:07 - the left here yep and we click on
86:11 - authentication so guys this is by far I
86:14 - have coded with authentications before
86:16 - this is by far the easiest way to or any
86:19 - so I am excited I want to learn how to
86:23 - do this authentication because like
86:24 - authentication is always a nightmare
86:27 - yeah and you're gonna be amazed at how
86:29 - clean and easy I know we're gonna do
86:31 - email
86:31 - and password 1 are we gonna do Google or
86:35 - anything like that or not right now so
86:37 - not right now but we can definitely do I
86:40 - think that'll be an amazing video to
86:41 - show really teens yeah we could
86:43 - definitely do that I think I'll be a
86:45 - good idea okay today we're gonna do
86:47 - email and password so if we click on
86:49 - enable uh-huh go ahead and click on save
86:53 - yep perfect and now what we want to do
86:57 - is it's that simple and also guys you
86:59 - know what cause that's a really good
87:00 - video for the next time because we can
87:02 - show how you can use the fuga on
87:03 - password features of firebase as well
87:05 - well they send you an email they do all
87:07 - of that for you yeah yeah of exactly
87:11 - what was that thing that's stored all
87:13 - copied it's called Alfred Alfred yeah
87:18 - also you can see here the authorized
87:21 - domains so even if you can see all our
87:23 - front-end code and API is everything it
87:26 - doesn't matter because if you're not on
87:28 - this list it won't work for you look at
87:38 - me let you this is my first time in here
87:40 - and not like I'm talking like I know
87:42 - what I'm talking about you in security
87:49 - man you guys are not friends ok awesome
87:54 - cool ok so the next step is what we can
87:58 - do is let's go ahead and go to so we
88:03 - already have the authentication config
88:05 - self that we saw earlier what we're
88:07 - gonna do now is also have some kind of
88:10 - input field so like a email password and
88:14 - a user name and what we're gonna do is
88:16 - we're actually going to make a modal for
88:18 - that right so it'll be a very clean
88:20 - interface that we can use so we're gonna
88:21 - use something called material UI guys
88:23 - material UI is really slick so let's go
88:26 - ahead and go over to material UI okay so
88:29 - material you I am right there yeah in
88:33 - the search bar at the top just type in
88:34 - modal mm-hm
88:37 - search oh and here we get a bunch of
88:44 - right so what I'm gonna do now is if you
88:47 - go down you can actually click on the
88:50 - you see the crocodile brackets to the
88:51 - left and right if you go down to the
88:53 - simple modal so just a little bit down
88:56 - yeah there we go there right where your
88:58 - mouse is so just over those crocodile
89:01 - brackets huh so the left yeah that one
89:04 - yeah and what we're gonna do now is I'm
89:06 - just gonna copy a bunch of code so I'm
89:08 - gonna copy the modal element of the code
89:10 - so at the bomb
89:11 - okay I'm gonna complete the import so so
89:15 - this one right over here
89:16 - yeah so I'm not gonna copy the entire
89:18 - thing well I'm actually gonna copy just
89:20 - what we need because most of the time
89:22 - guys you're actually gonna see these and
89:24 - you don't need every bit of code from it
89:26 - you only need like small snippets okay
89:28 - so I'm follow we're following you on
89:29 - this other side so we'll see what you're
89:31 - gonna copy yeah so I'm gonna copy this
89:33 - modal and this modal needs some kind of
89:36 - state for opening it fires off the
89:38 - handle close and we don't actually need
89:39 - these two things so we can get rid of
89:41 - that and then it renders some kind of
89:42 - body here and in this case the body is
89:45 - pretty much a variable inside of the
89:49 - examples you can see it says Const body
89:50 - at the bomb so I'm just gonna copy the
89:52 - actual contents of that so we don't
89:54 - actually have a separate variable but
89:56 - it's just gonna be dumped here so if you
89:59 - see why I did that instead of all of
90:01 - this stuff I'm just gonna say I am a
90:05 - modal like that right mm-hmm
90:07 - then what we're gonna do is I need a few
90:10 - functions so I need a piece of state to
90:12 - keep track of if it's open
90:13 - I need a unclosed method so a handle
90:16 - close function so I'm gonna create the
90:18 - handle close function actually we can do
90:20 - that or I'll show you a very nice little
90:23 - trick so before we do that we're gonna
90:25 - create a piece of state to keep track of
90:26 - if the modal is open so we say open set
90:29 - open and then we're gonna use state and
90:32 - then I'm basically gonna do you stay
90:33 - folks so what we're working on right now
90:35 - guys is a modal so I mean I don't know
90:38 - if Instagram has a run there's actually
90:41 - a good demo on material UI that you can
90:44 - check okay I material.you I yeah so
90:47 - let's go to here
90:49 - yeah and just go up so that you see with
90:55 - open modal yep so we're trying to build
90:57 - a modal like this
90:58 - something that actually when I when we
90:59 - click it it pops up and the reason is
91:02 - that that's what we want and then people
91:03 - should be able to type in their username
91:05 - and password in a modal like this so
91:08 - that's what we're building exactly and
91:12 - then it says it gives a really nice UI
91:14 - guys it's not quite a nice interface it
91:16 - doesn't clog up the screen it just sort
91:18 - of gives you this nice click out you can
91:20 - click out of it if you need to yeah so
91:22 - what we're gonna do now is we've created
91:24 - a piece of state and that then allows us
91:26 - to use it here but then what we can do
91:28 - is on close in the in the example that
91:31 - they gave us on clothes all there is is
91:33 - a function that does this so it pretty
91:36 - much just does that
91:37 - it just says set open to false we don't
91:40 - need all of this extra code so we can
91:41 - get rid of that we can go here and we
91:43 - can do something called an inline
91:44 - function so we could just say this set
91:46 - closed set open sorry set open to folks
91:49 - so that will literally just cause every
91:52 - single time that you click outside of
91:54 - the modal it's just gonna set the the
91:56 - state of the model to be false and is it
91:59 - closes and on close is listening for any
92:01 - clicks outside of the modal yeah so
92:04 - they've got it out for us so they hand
92:06 - all that sort of extra headache we're
92:07 - traditionally you would have had to
92:09 - account for all of that yeah my material
92:11 - UI takes care of it I see yeah so
92:14 - there's a bunch of styling I'm just
92:16 - gonna copy right now so there's a few
92:18 - things and styling so I'm gonna go ahead
92:20 - at the top of our file and copy that and
92:22 - this is all just sort of material UI
92:24 - styling if anyone's interested in
92:27 - looking at that more I'd recommend just
92:29 - checking out the the dummy code that
92:32 - they give you and you can pretty much
92:34 - see how that works but what we do here
92:37 - is we actually need the classes so what
92:39 - they do is they use this use styles hook
92:40 - make stars hook sorry it gives us this
92:43 - new styles parameter we just call it and
92:47 - it gives us access to classes and then
92:50 - we end up using that over here so it
92:51 - says class to start paper and you can
92:53 - see like there's a bunch of styling
92:54 - rules here so that's all that's doing
92:56 - and then what we want to do is we want
92:59 - to get rid of this because we just went
93:01 - to be in the middle of the page so we
93:02 - don't want to be randomly a little bit
93:03 - to the left or to the top so with that
93:06 - said I think that's everything we needed
93:09 - we need to import material
93:11 - so there's a bunch of imports we need so
93:14 - there's two that I'm gonna just pull in
93:15 - right now so it's these two that we are
93:18 - missing there we go yep and there's one
93:23 - more modal style so get modal style is
93:26 - where is that one it's here so let's go
93:30 - ahead and add that so it's constable
93:32 - style and guys I'm just getting this
93:33 - from the example code that we saw on the
93:37 - website so there we go now all we need
93:41 - is a button to actually open our modal
93:43 - so naturally that button is gonna be
93:46 - something like login or register right
93:48 - so let's go ahead and add a button here
93:51 - so it's just add it over here for now
93:53 - let's actually use a material UI button
93:55 - so it's just a capital B and we need to
93:58 - import that so maybe you can show that
94:00 - little trick Kazi and just see if that
94:02 - works
94:03 - so you just go to the end edge of that
94:06 - and then you press on control spacebar
94:08 - and then you got it auto import there
94:12 - you go I think your Mike's gone off cozy
94:14 - all time so yeah all I did is I just
94:17 - went control space at the end of the
94:18 - button and then hit enter and it auto
94:20 - importantly at the top yeah that's it
94:23 - nice and then all we do here is we just
94:26 - say this add this one so it's just say
94:28 - it's called login or yeah login let's
94:30 - just call it login well let's call this
94:31 - one sign up because we want to sign up
94:33 - first before we can actually log in and
94:35 - here we just say on click and this is
94:38 - gonna fire off a sign in/sign up
94:41 - function so I'm gonna write a little
94:42 - function up here which is Const sign up
94:46 - and this one is just gonna basically be
94:48 - a simple function it has an event every
94:52 - time you sort of have these sort of
94:53 - things you have an event and I'd highly
94:55 - recommend you do event don't prevent
94:56 - default but it's because it's not a form
94:58 - we don't have to do that so now we
95:00 - connect it we say sign up mm-hmm
95:03 - oh no sorry here we're not even going to
95:05 - do that we're just gonna open the modal
95:06 - and we're gonna have every although that
95:08 - logic inside the motor so here we just
95:09 - say set open to true so now we should
95:13 - have a button on our page so if we go
95:16 - ahead and I've got a little error there
95:18 - we go go rid of it so now we have a
95:22 - should have a button on the page once it
95:25 - loads hmm right there so sign up yeah I
95:30 - can hover oh nice so we get a nice
95:35 - little modal there guys and that's
95:37 - actually gonna it's responsive and I can
95:40 - rule if I click inside of it it stays
95:42 - there but if I click anywhere outside of
95:44 - it it detects it exactly so that's a
95:48 - really nice way of getting a responsive
95:50 - modal very quick and what we need to do
95:53 - now is basically have a bunch of
95:55 - elements inside of it so what we are
95:58 - gonna do is I'm just double checking
96:00 - something right now so we're gonna do
96:02 - now is we're gonna have a bunch of code
96:05 - inside here so rather than hi I am a
96:07 - modal I'm gonna have firstly I want to
96:10 - have the Instagram logo at the top so
96:12 - I'm just going to snip it here so this
96:14 - is just saying it's gonna be centered so
96:15 - we're using some default HTML attributes
96:18 - enter it that's how I send out my stuff
96:20 - yeah and then we're gonna say I've got a
96:24 - class I don't know if I actually gonna
96:25 - so I'm gonna leave the class name here
96:27 - for now and then basically this is just
96:29 - gonna pop out little Instagram icon
96:32 - there and then I'm gonna have two input
96:34 - fields and a button so I'm just gonna
96:37 - copy some code here so we've got two
96:39 - input fields and a bun so if I go ahead
96:42 - and pop this in so I've just added two
96:44 - input fields so we've got email and
96:45 - password and this is signup so we
96:49 - actually need one more input field which
96:50 - is also for the username of the user
96:53 - mm-hmm paste that so we've got three
96:56 - input fields here so we've got user name
96:58 - email and password and now we're gonna
97:00 - get a bunch of errors because we haven't
97:01 - actually set these pieces of stay up so
97:04 - let's go ahead and do that so we need a
97:05 - username and email and a password so
97:08 - here I'm going to basically just copy
97:10 - these lines of code three times I'm just
97:13 - going to change them as we need it so
97:15 - I'm gonna say this one is gonna be
97:16 - username and then look at that that's
97:20 - really nice because Kazi can cut at the
97:22 - same time guys and then we can just get
97:24 - this done really nicely and quick so you
97:26 - see password set password and then
97:28 - username will come okay set to be using
97:30 - name last team what nice
97:33 - that's it you know and so now we have
97:36 - all of our states up and handle login
97:39 - it's asking it's not defined so here by
97:42 - the way just one question I want to take
97:43 - this by Logan he says guys I'm new to
97:45 - the idea of writing JSX what's actually
97:47 - hand what's actually handling the JSX
97:50 - syntax is it the react scripts naturally
97:53 - or do I have to install JSX asides
97:54 - dependency first right that's a really
97:58 - good question so yes so guys something
98:02 - need to remember is that when you do NPM
98:04 - star it actually does a bunch of stuff
98:07 - so when you save a bow it actually sort
98:09 - of like bundles your app together and it
98:11 - does a bunch of like it's good
98:13 - translation so what that basically means
98:15 - is if you've got JSX
98:17 - it will translate that into you'll get
98:19 - your JavaScript and you'll basically pop
98:20 - that in and render it as normal HTML but
98:23 - that is set up with create reactor now
98:25 - if you want to do it manually I would
98:27 - recommend you have to look at things
98:29 - like web pack and do those things
98:30 - manually but I would honestly recommend
98:32 - that you do use create reactor because
98:35 - it's the trade-off really isn't worth it
98:37 - and if you do want to go to manual I'll
98:38 - just create react up and then look into
98:40 - something called ejecting your app from
98:42 - react and that's how you can start to
98:44 - manually then tinker with those things
98:46 - but I would never really start a project
98:48 - honestly there's been professional jobs
98:51 - that I've done where I use create react
98:53 - app so it's a very professional thing
98:55 - that you could do and this there's
98:57 - nothing wrong we're setting up an app
98:58 - like that
98:59 - got it awesome right that's a really
99:03 - good question so next what we need to do
99:05 - is in import the input module so I'm
99:08 - gonna go up to the top import that and
99:10 - then handle login so right now where we
99:13 - do this the button click inside of that
99:16 - modal we want it to call the signup
99:18 - function and here we're just gonna say
99:20 - signup mm-hmm
99:23 - so nice so if we save that and we have a
99:26 - look now so right now it's not a nice
99:28 - thing but I mean it looks a bit janky
99:31 - but we can fix up so what we're gonna do
99:34 - now is we have classes dot paper what we
99:38 - wanted to do is actually have it so the
99:41 - first step in fixing this issue is we
99:43 - want to have everything inside of a form
99:45 - because a forum will mean that you would
99:47 - naturally type out and as soon as you
99:48 - hit enter it's gonna submit that form
99:50 - right mm-hmm so we want to do his oh and
99:53 - also a reason why that might be
99:54 - happening is because I actually have
99:55 - these in the wrong brackets so if you go
99:58 - ahead and try it now so save and let's
100:00 - have a look at that so you save so I
100:05 - think it's come on okay so we still need
100:07 - to start it okay fair enough
100:08 - so now what we want to do is outside of
100:10 - this div we're gonna surround everything
100:12 - inside of our forms when it's around
100:14 - inside of it I'm gonna create a form and
100:16 - just surround all of our contents inside
100:18 - of that so when I grab all this stuff
100:21 - check it inside the form and just push
100:24 - it a little bit in so we have the
100:26 - incorrect another good question is how
100:31 - do we pass data beyond email and
100:33 - password like a person's name or phone
100:35 - number when creating a new user because
100:36 - that's that's pretty good cuz I want to
100:37 - know that too if I was creating a new
100:39 - user India firebase you know I'm gonna
100:41 - store different types of information yep
100:45 - so that's a really good question in
100:46 - firebase there we actually are gonna do
100:49 - that for the username so I'm actually
100:51 - gonna collect the username from the
100:53 - input form and then update the users
100:56 - profile information so that that's their
100:58 - display name which is attached to them
101:00 - now for the phone number they also have
101:02 - a function that you can use I think it's
101:04 - update phone number but you'll see when
101:06 - we do this we're gonna call something
101:08 - called update I'm just trying to find a
101:11 - code that we're gonna use I think it's
101:13 - something like yeah update profile is
101:17 - what we're gonna use and that's how
101:18 - we're gonna update display name of the
101:20 - user but you can also do I think it's
101:22 - update phone number update email etc so
101:26 - you can actually do those things yeah
101:27 - you can but when we get tired it will
101:29 - make a lot fence because we need to
101:30 - still write a use effect for that yeah
101:33 - so now what we're gonna do is we're
101:36 - gonna write a we're gonna star this
101:38 - class so it just looks a bit nicer so
101:40 - right now it looks a bit weird so we're
101:42 - gonna do class name and we're gonna say
101:44 - app signup and inside of app dot CSS I'm
101:49 - gonna have app signup and basically here
101:53 - this is all going to be this is
101:56 - basically going to be how we style that
101:57 - for
101:58 - you see on the right so if you want to
102:00 - just open up that form at the moment the
102:02 - model sorry copy on your screen if you
102:04 - click sign up
102:05 - uh-huh and then every time I make a
102:06 - change you'll see it in real time now so
102:08 - if we do display flags so look what
102:11 - happens guys it's gonna get all
102:12 - scrambled up now if I do that you see
102:14 - that yeah because it goes into our row
102:16 - so now what I need to do is flex
102:18 - Direction column column yeah and what
102:22 - happens we do this oh hey look at that
102:25 - like it just completely fixed everything
102:27 - it looks much cleaner I think I think
102:30 - maybe we can do text-align:center here
102:32 - and we might be able to if you didn't
102:34 - have hot reload would it even be
102:36 - possible to see that change like that
102:40 - because if I hit you know I would have
102:42 - to hit refresh and then it would break
102:43 - out of that form
102:45 - exactly and that's a really good point
102:48 - because that's really one of the amazing
102:49 - benefits of using something like react
102:51 - without reloading because some apps
102:53 - imagine you have to sign in you have to
102:55 - do a bunch of steps just to get to a
102:57 - certain point and then you have to style
102:59 - it and then every time you sort of make
103:00 - a change it just got rid of it yeah yeah
103:02 - it makes development tremendously slower
103:05 - which is exactly I'm really glad you
103:06 - brought up because that's a really
103:08 - really good use case and that's most
103:09 - that's the main use case for hot
103:11 - reloading yeah damn okay awesome nice
103:15 - okay so next what we're gonna do is we
103:19 - need to basically power up this signup
103:21 - function so here what we do is we say to
103:25 - handle this now we just need to say so
103:28 - event dot event prevent default so we
103:32 - always have this otherwise it's gonna
103:34 - cause a refresh when we submit the form
103:36 - so we need to give the form type submit
103:39 - and that gives us that natural behavior
103:40 - what am i typing in and we hit enter on
103:42 - the keyboard and then sort of submits
103:44 - the form so we need to have this so that
103:46 - it doesn't refresh and then we want to
103:48 - have is auth so authors from that so we
103:51 - need to import it at the top so we
103:53 - import that from the config file that we
103:55 - had previously mm-hmm and then over here
103:59 - now we have auth and what we're gonna do
104:02 - is say oh and this bits gonna blow your
104:04 - mind cardi when you see okay I'm ready a
104:07 - user with email and password and all I
104:10 - did right now
104:11 - it's pasta he mail and parcel right oh
104:16 - yeah
104:18 - one sign up that's it a niche I do that
104:20 - and then I say don't catch because if
104:23 - there's any error oh this is from the
104:25 - state this is being passed from the
104:27 - state variables exactly yeah holy crap
104:30 - and if there's any error in that process
104:33 - I'm gonna catch it and I'm gonna alert
104:35 - so I'm gonna make a little pop up on the
104:37 - screen yeah and I want to show that
104:38 - message so error don't message like it's
104:43 - that it's crazy right setting it up in
104:53 - any app that I'm creating it's like one
104:55 - of my worst experiences to just see it
104:57 - oh my god yeah it's insane and what
105:01 - we're gonna do at this point is we also
105:03 - when we create the user I want to then
105:07 - update the user name right so I want to
105:09 - then have their user name sort of be
105:12 - shown so what we're gonna do is oh we
105:14 - don't actually do it here there's two
105:15 - steps to this we'll get to that in a
105:16 - second so before we actually show you
105:19 - this what we're gonna do is this is the
105:21 - first part right this is essentially
105:23 - gonna create the user and then it's
105:25 - gonna catch it so we're gonna basically
105:26 - if I just do this so you can say it's
105:28 - saying oh stop create user with email
105:30 - imposter and if there's any error for
105:31 - any reason
105:32 - can we see can we see it in action like
105:34 - can I just have my firebase database on
105:36 - this side and like actually test it and
105:38 - see the user get created live I think so
105:42 - we can try it in a sec if you go to the
105:45 - react app now and you go to sign up I
105:47 - just want to show you go sign up and
105:49 - then you click sign up at the bomb look
105:51 - what happens it pops up saying the email
105:53 - address is badly formatted so they give
105:55 - you back invalidation guys they're a
105:57 - yeah a petition they're giving you back
106:00 - and validation and even you're getting
106:03 - these error messages that they have
106:04 - created and all learn yeah we don't have
106:07 - to do anything crazy right yeah all from
106:12 - that two lines of code right and that's
106:13 - gonna create the user and everything but
106:15 - before we do that there's a really
106:17 - really important part that we need to we
106:19 - need to do here and this is the bit
106:21 - which is a little bit of a
106:23 - something they need to get ahead around
106:25 - but once it makes sense it's actually
106:27 - the powerful part so we do use effect
106:30 - and then here to use the fact this is a
106:32 - syntax for years effect so this is gonna
106:35 - run once when we when we sort of run the
106:37 - app and now we need to do is there's a
106:40 - listener in use effect right and the way
106:43 - we do is we say auth dot on earth state
106:47 - changed so it's cool it's used like this
106:50 - it says on on also state change and
106:52 - basically this is going to listen and it
106:55 - gives us back something called a North's
106:56 - user this is gonna listen for any single
107:00 - time any authentication change happens
107:03 - so when I mean by that is if you log in
107:05 - when you log out you create a user yeah
107:07 - every single time any change happens it
107:09 - fires this off right so can you see how
107:13 - by using this pattern of listeners right
107:15 - we use them for the database but on
107:16 - snapshot and now we're using it again
107:18 - for this and now we're gonna say if
107:20 - there was a user so for example if you
107:22 - had logged in yeah so at this point user
107:25 - has logged in right yeah this code is
107:29 - they get fired else the user has logged
107:32 - out yeah all right so that's when these
107:35 - two bits bits of code get fired off so
107:38 - with that said we can actually do some
107:39 - really cool stuff now so I'm gonna
107:41 - create a piece of state to keep track of
107:43 - the user so I'm gonna say set user and
107:45 - user and this is gonna start off with a
107:47 - default value of null uh-huh alright and
107:50 - here I'm gonna say set the set the user
107:54 - to be no loops if they're logged out if
107:58 - they love that I just want to set the
107:59 - user to be no so I always want to make
108:02 - sure that if they logged out that the
108:03 - user is gonna be no right or if they do
108:05 - logout we reset the user to no and then
108:08 - here once the user logs in yeah
108:10 - here what I want to do is I want a
108:12 - console log it first so that way it's
108:14 - always nice to see inside of the console
108:17 - to see if somebody's actually there or
108:18 - not yeah I'm I'm going to set the user
108:21 - to the auth user so I'm gonna actually
108:24 - capture that user inside of our state
108:26 - uh-huh and guys this actually is amazing
108:30 - because it survives a refresh so let's
108:32 - say cause he logged in and then he
108:34 - refreshed it would go and check and it
108:36 - would see that he's still
108:37 - them because it uses cookie tracking oh
108:39 - then it would send the piece of state so
108:41 - that way is persistent service state
108:43 - nice if all is not consistent but this
108:46 - actually keeps you logged in which is
108:47 - very nice so state is not persistent but
108:50 - is this thing over here that keeps you
108:52 - logged in yes okay okay so and now it's
108:58 - next snippet of code can we can I can I
109:01 - log in right now
109:03 - no yeah we've got one little step one
109:05 - little step and then the whole thing
109:06 - comes together so this is the final
109:08 - piece yeah we're saying if the or if the
109:11 - user has a display name then don't
109:14 - update them right because by default
109:16 - they shouldn't have this they shouldn't
109:17 - have any display name when we created
109:19 - them yeah all right but if they were a
109:21 - new user so this is most likely the case
109:24 - of if we just created someone mm-hmm all
109:27 - right and in our state we have the user
109:30 - name that we just typed in yeah and
109:32 - we're saying go to the user that you
109:33 - just logged in with update their profile
109:35 - ooh and this adds it to their into their
109:39 - firebase as an attribute right yes
109:43 - exactly so nice yeah we're actually
109:46 - gonna see the user being updated in that
109:49 - time so now we've got two things we have
109:51 - a listener and there's one tiny step we
109:54 - need to do now so remember guys we're
109:56 - using user name here and we're also
109:58 - using the user so remember we're
110:02 - updating the user and we're using user
110:04 - name so that means we have to include
110:06 - them dependencies here so because we're
110:08 - saying anytime they change they have to
110:11 - be fired off so that whenever you use a
110:12 - variable so for example we're using a
110:14 - variable here and we're also use any
110:16 - quick question if this is already a
110:18 - listener yep why isn't why is it inside
110:23 - of this listener use effect so youth
110:29 - effect isn't a listener as such it is it
110:32 - mean it listens for changes for this I
110:34 - guess yeah this is a sort of think of
110:37 - this as like a back end listener right
110:38 - yeah this is a front it's not because
110:40 - it's listening to changes on the front
110:42 - end yep this one's changing to back end
110:44 - responses like if we log in if we don't
110:46 - login right cool stuff so the two work
110:48 - together but
110:50 - one thing we need to remember is this is
110:52 - a listener you're correct so every
110:53 - single time it changes it refires this
110:56 - code so the problem that we run into now
110:58 - is what happens if this code that the
111:01 - front end listener gets fired off ten
111:04 - times because the username changed ten
111:05 - times right then we're gonna have ten
111:07 - listeners and it's gonna get really
111:09 - heavy right yeah
111:10 - so what we do is in a use affect and
111:13 - this is something new to you I think as
111:15 - well like in a news event what we can
111:17 - say is this on also state change returns
111:20 - something called an unsubscribe so you
111:22 - could say const unsubscribe oops
111:25 - const on sub scribe equals this right
111:30 - mm-hmm and then this basically sets a
111:32 - listener but then you get this function
111:33 - at the end right and then what we want
111:35 - to do here is is basically inside of a
111:38 - use effect right inside of any use
111:41 - effect you have ability to basically say
111:45 - return so you can return a function
111:48 - right and this basically says once if
111:52 - the user fact fires again perform some
111:55 - cleanup actions before so this times
111:57 - they perform some cleanup actions before
112:00 - you refire these effect right and in our
112:04 - case what we're doing is we're
112:06 - unsubscribing the listener so that way
112:07 - it doesn't spam and it doesn't start and
112:10 - then this way it would so imagine what
112:12 - happens here so say we login yeah and we
112:14 - update the username right yep it's gonna
112:16 - refire this front end code mm-hmm but
112:19 - before it does that we were saying
112:20 - detach the listener that you just set up
112:23 - so that we don't have duplicates yep and
112:25 - then it will refire it got it yeah so
112:29 - it's all about efficient programming so
112:31 - that's a very sort of efficient use case
112:33 - of how we use this yeah and once it's
112:36 - all yeah it sounds quite sort of
112:37 - complicated but remember we said use
112:39 - effect if you understand what that does
112:40 - everything starts to make a little bit
112:42 - more sense yep all right so now we can
112:45 - sign up okay so let's have the terminal
112:49 - open so let's make this full screen the
112:53 - code not no sorry in the in the
112:56 - inspector okay yeah so let's make this
112:59 - full screen and let's have the terminal
113:02 - open
113:03 - and let's go to cons oh yeah nice and if
113:06 - we refresh so let's refresh I just want
113:10 - to show one thing yep so now you should
113:13 - be able to see inside of that I mean it
113:17 - should come up okay no that's fine yeah
113:19 - we're good
113:19 - yeah so now yeah so you can say clever
113:25 - programmer and enter an email so Yuki
113:29 - doesn't have to be a it just has to be a
113:31 - correct just want to know I just
113:32 - highlight this I think that's pretty
113:33 - good Logan says they're going to be a
113:35 - repo of this project available and slack
113:37 - after the call
113:38 - I'd like to recreate it from scratch for
113:41 - my learning and then add it to my
113:42 - portfolio this weekend that's a really
113:45 - good question we can definitely do that
113:47 - we can definitely solve host this code
113:49 - on on sort of the community or we can
113:53 - push it into a private github or public
113:54 - github and give you access to that yeah
113:56 - we can do that okay and that's really
114:00 - good by the way he's talking about
114:02 - adding it to a portfolio which we always
114:03 - recommend inside the course yeah so look
114:06 - there you go did you see that so you see
114:09 - that that exact thing is a user so I
114:11 - know it looks like a lot of gibberish
114:12 - right yeah but but I can see this turtle
114:15 - a name I can see email email verified as
114:19 - false ooh nice yeah so now if you
114:23 - refresh the page I just want to show you
114:25 - something else if you're a fresh set
114:26 - page look what happens now which is
114:29 - really nice so if you click on CC it
114:33 - popped up again the console.log yeah it
114:36 - says if i refresh yet says there yeah
114:40 - not you like that yeah it still knows
114:44 - that I am in email yeah so we had one
114:47 - little problem that the actual username
114:51 - didn't get updated I think that is
114:54 - because we maybe need to do it at the
114:56 - point of creation so maybe we have to do
114:59 - where we create the email create use of
115:01 - an email and password I think we do at
115:05 - that point so if we go back to the code
115:06 - uh-huh you know it's how it hasn't got a
115:08 - display name which we need to fix that
115:10 - so what we can do now is we can say here
115:14 - we can say dot
115:16 - then then so yeah so dot then and I
115:18 - think this gives us back a North to user
115:20 - so I think this gives us back the users
115:21 - credentials so we can say user yeah and
115:25 - then we can fire off some code and then
115:26 - here we can say or user and if I look at
115:29 - what we get so if we do dot I should be
115:32 - able to see a bunch of this so we've got
115:33 - additional user info credential
115:36 - operation type of user so I think if we
115:38 - do user Don update and by the way guys
115:42 - in order to see what is going on here
115:44 - I'm just literally doing command control
115:48 - space so you can try that cause if you
115:49 - go on if you go press dot uh-huh yep dot
115:54 - and then if you scroll all the way down
115:55 - so press oh no not there so down here
115:59 - what line I'm on 88 uh-huh so if you
116:04 - just do dot and then you see you get a
116:07 - bunch of the autocompletes right yeah so
116:09 - the one we're interested in here is
116:11 - rather than doing it where we did it
116:13 - before so update profile right so we're
116:15 - gonna keep it there but we're also gonna
116:16 - do it down here so we're gonna say
116:18 - update the profile when you create them
116:20 - so that the display name display name is
116:24 - equal to the user name and we are gonna
116:27 - get rid of it where we had it previously
116:28 - before you can actually get it look good
116:31 - so now it's actually simplified our code
116:32 - quite a lot yeah so yep so now when we
116:36 - create them we're gonna update the
116:37 - proper and what we need to do is we also
116:38 - need to return that so cuz it's from a
116:40 - promise so if we return it it ends that
116:43 - and it does it correctly so with that
116:45 - said username oops
116:47 - we'll be careful ah and we say that so
116:50 - now let's run another test so we need to
116:53 - actually create a sign out button
116:54 - because you're currently signed in
116:55 - uh-huh
116:56 - so I don't know if it will sign you in
116:58 - again we can try it we can give it try
117:00 - yeah so this gives you test 23 and then
117:02 - let's do sign up so this should have
117:06 - signed you up into a new way of I think
117:10 - I'm signed up so let me try refreshing
117:12 - and then let's see what it does
117:15 - yeah now it's a I'm two users right now
117:18 - so test one two three and then I'm also
117:23 - so this correct is it's just it loved
117:26 - you out the other one that was just a
117:28 - react
117:28 - and I'm curious actually is it putting
117:31 - me in cookies so let's take a look at
117:34 - cookies localhost and I have my session
117:39 - ID yeah so I think it's either the
117:43 - session ID that they used to track you
117:46 - or it's something like if you go down
117:48 - you see I saw CSRF token we being used
117:51 - yet
117:51 - so that one could be being used but it's
117:53 - one of the authentication ones that is
117:55 - being used to actually keep track of who
117:57 - you are got it yeah yeah somebody's
118:01 - asking take TK codes is asking when do
118:05 - we use how do you guys decide when to
118:07 - use functional component and react and
118:09 - before suddenly you jump on it what I
118:12 - would just wanted to say is like what
118:14 - I've picked up from it is even in Python
118:17 - programming I tried to stick as much to
118:19 - functional programming as I possibly can
118:21 - just because it keeps the complexity of
118:23 - everything extremely clean and even with
118:28 - react I think you should use functional
118:31 - components everywhere rather than
118:32 - class-based components but sunny go
118:34 - ahead that's a perfect answer
118:36 - so yeah just as cause he said like the
118:39 - sort of a lot of programmers are going
118:41 - towards a functional programming
118:42 - approach and the reason why is because
118:44 - it's literally a function when you code
118:47 - in this way like the component we just
118:48 - made it's a function which has some kind
118:50 - of input and it returns some stuff right
118:52 - and then boy it returns is the HTML now
118:55 - when you think of everything as a
118:56 - function it becomes very clear as to
118:58 - what's actually happening when you have
119:00 - classes it becomes very sort of
119:02 - extrapolate and you can't actually see
119:04 - what's going on like what is this class
119:06 - doing what is a constructor inside of a
119:08 - class where is it where is it inheriting
119:11 - from like it gets very weird it gets
119:15 - very tough like like where it gets very
119:18 - abstracted away from you it doesn't make
119:19 - sense as to what is actually happening
119:21 - yeah and also a big headache the iPhone
119:24 - I'm guaranteed is gonna be a hundred
119:25 - other developers who have had this is
119:27 - where the hell you put this that this
119:30 - keyword yeah right yeah yeah so honestly
119:33 - it becomes a headache and you just don't
119:34 - have to deal with that when you use
119:35 - functional programming right which is so
119:37 - yeah that's the main reason behind why
119:41 - you do need to know both unfortunately
119:43 - because a lot of jobs the code bases
119:46 - would be in class space components and
119:47 - then a lot of your job would actually be
119:49 - changing it to a functional component so
119:52 - you do need to know both and it's very
119:53 - valuable to know both yeah okay got it
119:56 - nice so now we have a working login
120:01 - login system so what we can do now is we
120:05 - can remember we stored that user inside
120:08 - of this state over here right so as soon
120:10 - as you refresh we actually have that
120:12 - user and what we can do now is we can
120:14 - change that button that you see so the
120:16 - signup button we can actually change
120:18 - that to instead of saying sign up we can
120:21 - say logout so if we go down here we can
120:23 - actually add a conditional which says if
120:28 - the user is present so if the user
120:30 - exists so if the users not know then I
120:33 - want to render this stuff so if the user
120:35 - exists I want to render a button which
120:38 - is not gonna say this but it's just
120:39 - gonna say sign out right so this one's
120:41 - gonna be responsible for saying so it's
120:44 - what its gonna be responsible for saying
120:46 - sign out so I'll log out let's just say
120:49 - log out yeah and here we're gonna have
120:52 - an or so this is how you do an or and
120:54 - then you say otherwise if they're not
120:56 - logged in then I sign up buttons gonna
120:58 - come up alright and we're also gonna
121:00 - have a login button as well guys we'll
121:02 - cut that in a sec but I just want to
121:04 - show something very quickly so you might
121:07 - have thought how do we log out it's
121:08 - gonna be quite complicated and etc
121:10 - honestly guys this is how simple it is
121:12 - to logger you say auth dot i think it's
121:16 - literally a case of long yep so
121:19 - essentially all thoughts of sign out
121:21 - yeah or thoughts sign out that's it
121:25 - that's literally it and you do every bit
121:28 - of authentication now notice how when
121:29 - cause he goes on he's logged in so a big
121:31 - click Sign Out logout boom he's locked
121:35 - out you no longer have that element
121:38 - inside of the inside of the console so
121:42 - you you won't see anymore which is
121:45 - insane right
121:46 - that's crazy yeah like just with that
121:49 - one line I sign out and it's so easy
121:52 - yeah honestly it's really that simple
121:55 - so what we're gonna do now is create the
121:57 - login or sign in right
122:00 - somebody said fill Fulani says note for
122:03 - back and react front-end but honestly
122:05 - you don't even need node you can just
122:07 - use firebase right for pretty much all
122:09 - the back and you're good yeah this is
122:11 - this is something which is really sort
122:13 - of a mindset shift there is I don't
122:15 - actually even need a back-end here guys
122:17 - yeah we don't firebase is doing
122:19 - everything for us it's just a service
122:21 - that we use and we're using node modules
122:23 - to bring it in and actually like
122:24 - interact with it but there's no actually
122:26 - there's not a real back-end that we're
122:28 - so a traditional back-end that we're
122:31 - playing with there no yeah I mean this
122:33 - is actually live Harrison yeah so now we
122:39 - have the app this is so cool this one
122:42 - the login container so that's cool it's
122:45 - a login container and I'm going to put
122:47 - the buttons inside of it so all of this
122:50 - stuff shows when we aren't logged in so
122:52 - I'm gonna I've I have another button
122:56 - here which is gonna say sign in right
122:58 - and for this one I don't want to open
123:00 - the other model we have I'm gonna create
123:02 - a new sort of variable which and the new
123:04 - modal which is gonna be called
123:05 - let's just call it let's call it Const
123:09 - let's call it open sign-in and this is
123:13 - gonna be called set open sign-in oops
123:17 - it says mine is out of sync cause you
123:19 - would you're somebody wanna log back in
123:21 - yeah so I'm just reconnecting now give
123:25 - it one sec there we go I think I'm back
123:28 - so open yep nice so I can click that
123:32 - there we go we're back so open sign-in
123:36 - am i typing though go ahead give me one
123:42 - sec so don't save go to have but yes so
123:45 - you can see this funny somebody just
123:47 - said uh somebody said oh my god I was
123:50 - week one into node and planning to
123:53 - continue yeah you don't need to learn
123:55 - node you can just do this you know what
123:57 - I would recommend there's no harm in
124:00 - learning node because honestly
124:02 - everything you're gonna learn is
124:03 - transferable cuz it's JavaScript well I
124:06 - would recommend honestly like I said
124:08 - like I would recommend this jumping over
124:10 - to react and start coding with that
124:11 - because you're gonna get a result really
124:13 - quickly with react yeah as opposed yeah
124:17 - so we have this set open sign-in and
124:21 - this one we're gonna be initially false
124:23 - and what we're gonna do now is we're
124:25 - going to go down to the bottom
124:27 - oops nope up then go down to the bomb
124:29 - and we're I have that traditional button
124:33 - of sign-in hey we're gonna have set open
124:37 - sign-in so that was it says your name
124:40 - let me fix that it had two E's Oh oops
124:46 - there we go I think you need to follow
124:49 - now again because I'm gonna of sing yeah
124:51 - so now there we go nice so set open
124:55 - sign-in I just changed that here and
124:57 - this one we basically I don't want that
124:59 - to open the other modal we had right so
125:01 - you see this entire model so we can
125:03 - refactor this code but for the benefit
125:05 - of this tutorial I'm just gonna paste
125:07 - another modal here yeah and I'm just
125:09 - kind of change it up just for and make
125:12 - it just full of what we needed it here
125:13 - so I don't need to use the name because
125:16 - we only need an email and password when
125:17 - we log in right I'm gonna create a V
125:20 - says the way you guys are dealing with
125:22 - the question from the comments section
125:24 - is just insane it feels like we're
125:26 - getting a live classroom training
125:28 - session I love that I wanna see is like
125:32 - that's what we encourage questions if
125:34 - anything it just helps you guys get to
125:35 - know them more and it helps us direct
125:37 - the sort of session towards what
125:40 - everyone actually wants to learn as
125:41 - opposed to what we think yeah what's
125:43 - that nice so we have that and then we
125:47 - have sign-in so I need to do two things
125:49 - now I need to change the modal open to
125:53 - be determined by open sign-in and I need
125:56 - this so on close to say set open sign-in
126:00 - to be false so now we've just made a few
126:02 - changes all of the styling is the same
126:04 - guys and you can actually make this a
126:05 - component as well to prevent it having
126:08 - this big code twice but we're not going
126:10 - to do that now
126:11 - so I need to create the sign-in function
126:14 - so let's go over here and let's do const
126:17 - sign-in so if I'm sign-in equals
126:20 - take the van and it does this and then
126:23 - remember guys we need to do
126:25 - event.preventdefault
126:26 - so it doesn't do weird stuff and refresh
126:29 - right exactly Carlos says something
126:32 - important he says so in conclusion HTML
126:34 - CSS JavaScript react and firebase is
126:37 - everything we need right exactly that
126:41 - yeah so that's everything you need I
126:43 - would recommend you start with HTML CSS
126:45 - in JavaScript and then you proceed to
126:48 - learning react which kind of wraps those
126:50 - three fundamentals and then firebase is
126:53 - what's gonna power and give you a sort
126:55 - of a database allow you to host it
126:57 - online but that's a really good question
126:59 - so I think that clears up a lot of sort
127:01 - of doubt for a lot of people yes oh you
127:03 - need yeah yeah I mean even me just
127:06 - reading and I'm like oh yeah that's
127:07 - actually true that's it
127:08 - no no nothing it's very clear yeah
127:11 - pointing out that we do teach all of
127:14 - that inside the course pop in profit
127:17 - with JavaScript which is in the
127:18 - description yeah by the way I wanted to
127:21 - ask you Sonny what are we so we are done
127:24 - working with the firebase user
127:26 - authentication right yeah so what are we
127:29 - working what's what are we currently
127:31 - working on so right now we were done
127:35 - with the signup I'm just finishing off
127:37 - with the sign-in and we're one step away
127:40 - from being finished with the sign-in and
127:42 - then we'll be moving to actually posting
127:45 - on to did the timeline got it okay so
127:48 - I'll leave the title at the top user
127:51 - authentication for now yeah then once
127:54 - we're done with that we'll we'll move on
127:56 - yeah exactly yeah so now here instead we
127:59 - have auth but we say sign in with email
128:02 - and password so it's honestly it's
128:04 - ridiculously simple to use our
128:06 - authentication API you say you in the
128:09 - email you pass in a password which is in
128:11 - US state and I'm just gonna drop this to
128:13 - another line so it's quite easy to read
128:15 - so we're gonna do this
128:16 - and then we're gonna say sign in and
128:19 - remember it's always good practice to
128:20 - add a catch so that way if anything goes
128:22 - wrong so like if the username was wrong
128:24 - or something like that we're gonna have
128:26 - error and I'm we're just gonna alert it
128:28 - on the screen and say show me what the
128:30 - error message is right and what we
128:34 - should you guys is after we sign up
128:35 - after we sign in we obviously kind of
128:38 - don't want that modal to be open so
128:40 - we're gonna say set open to be foes and
128:42 - here we're gonna say set open sign in to
128:46 - be forced because we want the motor to
128:48 - close right you want it to close so the
128:52 - model that will pop up here you want it
128:54 - to close once you sign up yep exactly I
128:59 - got it okay alright so now if you do you
129:03 - remember the email address that you
129:04 - signed in with yes I do
129:07 - so if you click sign in hopefully okay
129:11 - that's good so now if we type in the
129:12 - email and password and then boom look at
129:20 - that nice Wow look at that and it just
129:24 - went away all by itself yep because we
129:26 - do conditional rendering which is
129:28 - awesome so now conditional user
129:30 - authentication guys we have full user
129:32 - authentication and we also capture the
129:35 - display name which we're gonna use to be
129:38 - we're gonna use it as a as a as a user
129:42 - name when we post things right so the
129:44 - next thing we're gonna be doing is we're
129:46 - gonna be working on firebase storage
129:49 - right so we completed firebase user
129:53 - authentication and the next thing we're
129:55 - gonna be doing is working on firebase
129:57 - storage and why that why why are we
129:59 - moving tonight is because now we
130:00 - actually want to have some kind of hey
130:07 - this is what happens when we finish
130:09 - something wait hold on I actually want
130:13 - to know if it uh if it played the sound
130:15 - for them I'm gonna take a look at it
130:18 - actually sound effect so let me actually
130:21 - I think I think it was on right yeah
130:26 - yeah yeah I think it went out awesome
130:29 - okay continue okay so now what we're
130:40 - gonna be doing is we're moving over to
130:41 - firebase storage right so there was a
130:45 - really handy
130:46 - [Music]
130:47 - react composed so we're gonna be just so
130:50 - just so what we write at the top we're
130:51 - gonna be now working on firebase like
130:53 - making storing posts in firebase yep so
130:59 - storing posts in firebase exactly
131:01 - throwing posts in five days yeah so this
131:11 - bit is a bit more intricate but it's oh
131:14 - really it really does pay off to know
131:16 - this right now so what we're gonna do
131:18 - now is we're gonna create a sort of it
131:22 - work it's called we're gonna call the
131:23 - component image upload right and what
131:26 - image upload is gonna be responsible for
131:28 - is it's basically gonna allow us so the
131:31 - end goal right now is to have at the
131:33 - bottom of our page well let's just do it
131:35 - at the top to make things simple right
131:36 - now yeah so it's very clear and visual
131:38 - so let's go to the top of the page and
131:40 - let's just do what we did before so
131:42 - we're gonna have some comment and we're
131:43 - gonna say I want to have so I want to
131:46 - have the following all right
131:48 - so I want to have a a caption input so I
131:53 - wanna have some kind of caption input I
131:55 - want to have a file picker so I can pick
131:58 - an image and then I want to have a post
132:01 - bun right okay so just yep got it
132:06 - so basically okay just so we can
132:09 - visualize it it's gonna be some kind of
132:11 - like input field and it's gonna have
132:14 - caption so okay I can write my caption
132:17 - here right it'll be something like right
132:19 - here okay cool I can visualize that then
132:22 - a file picker is just like how most file
132:24 - pickers are I just upload my file on it
132:27 - exactly okay
132:29 - and obviously is gonna have a post
132:30 - button like a button next to it to just
132:33 - you know click it and upload my file yep
132:36 - exactly that okay got it yeah
132:39 - so what we're gonna do now is rather
132:42 - than writing all of this code here it's
132:44 - always nice to sort of strip it outside
132:46 - of this right so we're gonna create if
132:48 - you can go ahead and create file and
132:50 - we're gonna call this one image upload
132:52 - right okay so if you go ahead and create
132:56 - a file so go into the yep just and we're
132:59 - gonna call it image upload
133:01 - yes and do you want it to be capitalized
133:04 - in the store yeah so I actually
133:06 - capitalize the start and then the the
133:08 - second one is also upload to be
133:10 - capitalized yep god yeah the reason why
133:13 - we capitalized is because all of the
133:16 - anything which you see capitalized in
133:18 - react in terms of files should be
133:20 - referring to a computer just so
133:22 - everybody knows visually what we're
133:24 - gonna be working on Sonny can you give
133:26 - us like just shoot over a screen shot
133:28 - maybe of like what it actually looks
133:31 - like just so it's easier because I know
133:33 - it's hard to imagine what we're gonna be
133:34 - building and I'll send you a thing so we
133:42 - could do it that way awesome that's
133:43 - that's perfect yeah just end rock and
133:45 - then just paste a link inside of Visual
133:48 - Studio code and I'll pick it up from
133:50 - here oh nice good good yeah let's do
133:53 - that
133:54 - so that's the Angra nice okay yeah so
133:59 - that should be running I think yeah so
134:01 - you should be able to see that and that
134:04 - should be my local why not mm-hmm did
134:09 - you turn we see a low cost mm yeah dope
134:12 - stuff so I was looking at one we want
134:15 - it's gonna take a little bit time I
134:17 - think so to load okay yeah so it should
134:22 - be working
134:23 - so no damn let me let me double check
134:28 - mine as well if you can even send me
134:30 - like a drop luring shot of just a
134:32 - caption thing that would be yeah rate
134:34 - let's do that so do that I said my drop
134:40 - is not showing up one second okay yeah
134:44 - my drop of this - okay my okay my anger
134:47 - crash now uh oh no it's all good it's
134:50 - it's here I can see it now as I said
134:53 - just joined that's awesome thank you for
134:56 - joining Joe I think they join a live
134:58 - stream probably right so let's go all
135:02 - the way to the bottom log into upload I
135:05 - see so I got a log in right now so let
135:08 - me go and hit this right over here
135:19 - there we go okay I'm logged in so that
135:23 - exact thing of the bomb is what we want
135:25 - yep this is what we're gonna be building
135:29 - by the way guys so yeah that's what
135:33 - we're trying to build right now so we
135:35 - can actually this thing right here so we
135:40 - can upload our files and images yeah
135:44 - exactly
135:45 - and that little thing at the top guys is
135:47 - a progress boss it'll show you the
135:48 - progress right here this guy over here
135:51 - so right now it's empty but then as soon
135:52 - as it starts like your file starts
135:54 - uploading it'll be like and it finishes
135:57 - that's it exactly
135:59 - awesome nice that's it I was a really
136:02 - good do that more yeah yeah yeah because
136:06 - we start what happens is like you start
136:08 - like we can visualize it cuz we've
136:11 - already created and we start explaining
136:12 - the code but I think everybody's
136:14 - following it's difficult for them
136:15 - because they don't like visual cue they
136:18 - don't have they don't know what we're
136:20 - gonna be building and so then they're
136:22 - less likely to follow yeah 100% I think
136:26 - we'll do that more if you guys found
136:27 - that useful just drop a comment and let
136:28 - us know yeah yeah all right so now an
136:32 - image upload so I don't know is it is it
136:33 - still following me I think maybe it's
136:35 - detached because we created a file right
136:37 - here yeah so now if I do our FCE with
136:40 - that snippet that we had earlier it's
136:42 - gonna create the image upload and what
136:44 - we want to do now is in here I'm just
136:48 - gonna draft out the rough things that we
136:50 - spoke about so inside of app remember we
136:51 - had this so I'm gonna basically just cut
136:53 - this and the aim is to basically just
136:55 - render out image upload here alright so
136:59 - we can render it out got it yes we say
137:03 - image upload from does does it also
137:09 - handle video upload or no so that's a
137:15 - very good question I think it's a really
137:20 - good question actually I think I want I
137:22 - want to say yes you can do that okay I
137:25 - haven't tried
137:26 - we could definitely we can maybe go
137:29 - through this another point also have a
137:31 - little Omega you will make a youtube
137:33 - clone one day you know yeah exactly
137:36 - obvious on coding fountain says yes very
137:38 - helpful nice I think this is happening
137:43 - because I've asked in an empty div so if
137:45 - I now do it yeah there we go so now what
137:48 - we can do is we can basically say so we
137:52 - render ABC at the top so I'm right now
137:54 - I'm just gonna show it at the top so
137:55 - it's gonna render up up everything right
137:56 - yeah and we will put it where it needs
137:59 - to be afterwards so the first thing we
138:02 - want to have is an input so we're gonna
138:03 - have an input there we go we have an
138:06 - input we have a file picker so the file
138:08 - picker what we want is something like
138:10 - this so we have an input type is file
138:14 - and that gives you all of the stuff you
138:16 - need your that when you see like select
138:18 - file and it comes up and you're natively
138:20 - in your browser yeah everything is
138:22 - inside of that alright so you have that
138:23 - and we need a function which handles
138:25 - when you actually saw when you click a
138:29 - file what happens when some kind of file
138:31 - and then we also need a bun so I'm gonna
138:34 - use material UI and I'm gonna say this
138:36 - is my button so I'm gonna say it's
138:38 - basically you mean when I click Choose
138:39 - file this thing happens yeah exactly
138:43 - yes when I click on when you click on
138:45 - open that will ping off the handle
138:48 - change right got it
138:50 - so we need a few things right now we
138:53 - need a piece of state to keep track of
138:55 - what we're typing inside of the caption
138:57 - so here I'm gonna say a placeholder is
138:59 - gonna just pretty much say placeholder
139:02 - enter a caption yep just enter a caption
139:06 - so like this one right there yep what we
139:17 - can do here is we can say Const we're
139:19 - just gonna stop some states videos a
139:21 - caption set caption that's just a
139:23 - standard we say use snaked right there
139:26 - and then the caption by default is gonna
139:28 - be empty so that way it will show the
139:30 - placeholder and then here we have to do
139:32 - you stay
139:38 - the most advanced coding tutorial on the
139:41 - planet yeah we're gonna hook it up to
139:47 - that and then what we need to do here is
139:49 - I'll check it over here see yep so we
139:51 - can say unchanged
139:52 - right so unchanged but as I type in now
139:55 - it's gonna fire off an event so every
139:58 - time and that's every single key press
140:00 - that you do on to the input code it's
140:01 - gonna fire from the event and then what
140:03 - we want to say is set the caption to e
140:06 - they're just gonna keep updating the
140:08 - caption right of caption variable on the
140:10 - fly I see exactly yep so that grabs the
140:13 - latest text and it just pops inside a
140:15 - caption so we always have the latest
140:17 - caption stored inside of row says this
140:20 - is my first time watching a coding live
140:22 - stream and this is an amazing idea I
140:25 - love it thanks and let us know what
140:28 - specifically let us know what
140:30 - specifically you like about it as well
140:31 - yeah definitely we'll just focus on them
140:34 - more next time nice yeah
140:36 - so we have the caption we also need a
140:40 - few other things we need so we're gonna
140:43 - have three more pieces of state we need
140:45 - the image so there's one for image it's
140:47 - gonna basically be no so that's gonna
140:49 - start with no we're gonna have one for
140:51 - the URL so actually we don't need this
140:53 - one right now and one for progress
140:55 - remember that progress bar that we
140:57 - showed that the progress bar is right
140:58 - here we have it right at the oh I'm
141:01 - actually realizing I'm blocking a lot of
141:03 - the view we are blocking a lot of the
141:07 - view for the people so I'll just do this
141:11 - so this I think is very visible for them
141:15 - so yeah
141:16 - progress bar is gonna be this one right
141:18 - there right and when you say image it
141:21 - will be this the choose file yeah
141:23 - exactly that and so is it's gonna be a
141:27 - path just a string right from your local
141:29 - computer it's not what it is yes exactly
141:32 - there's a weird sort of syntax but we
141:35 - just need to know how to write it
141:37 - initially and once we've done that it
141:39 - actually makes a lot more sense so I'm
141:40 - gonna copy that's over here and they can
141:42 - more we're gonna cool yeah so when we do
141:46 - input type is file that's when that
141:49 - little
141:49 - window pops up which says like select a
141:51 - file and when we click a file fires off
141:54 - handle change so we need to write a
141:56 - handle change and the way we do that is
141:58 - handle change fires of a book of what
142:02 - snippet here I shall explain it so
142:03 - handle changes the function it fires off
142:06 - an event yeah yeah now this is the sort
142:10 - of part that we need to focus on so what
142:11 - this is saying this little piece of code
142:13 - here is just saying get the file that
142:16 - you actually selected so get the first
142:18 - file that you suspected because
142:19 - sometimes you can click multiple files I
142:21 - see can get the first bar and then we're
142:24 - saying
142:24 - set your the image in state to that okay
142:27 - so like for example if I hit choose file
142:30 - and I hit but somehow I was able to hit
142:32 - both of them it should pick the first
142:37 - file yeah exactly so it just protects
142:40 - against that so that's why we do that
142:42 - okay all right
142:44 - and next do this just quickly fix these
142:46 - imports and hopefully we can show that
142:48 - in action so I'm just gonna import the
142:50 - material UI stuff so we've got this just
142:53 - go ahead and do that and then we've also
142:55 - got a handle upload so handle upload is
142:58 - a bit more of a complicated thing so we
143:00 - need to const handle upload i'm just
143:02 - gonna write the the very simple
143:06 - signature for it so handle upload and
143:08 - it's not gonna do anything anything for
143:10 - now but what we can see now is if we go
143:12 - over to our code we can see we've got
143:15 - enter a caption which works when we type
143:17 - in right you see at the top on the right
143:19 - yeah oh right there oh wow nice yeah see
143:23 - enter a caption as you choose file
143:25 - that's awesome and upload yeah and we go
143:29 - upload so right now upload doesn't
143:30 - actually do anything but if you click on
143:32 - choose file mm-hmm notice what happens
143:34 - now so let's tick on that and then you
143:36 - click on a file notice how it should say
143:39 - where it said no file chosen before it
143:41 - will now say oh is it right here
143:45 - yeah nice oh that's in my sky window is
143:49 - [ __ ] it yeah there we go nice so now
143:51 - we know that it has a reference to the
143:54 - image that we want to upload right yep
143:57 - so what we want to do now is basically
144:00 - have all of the logic
144:02 - volved in actually this is the salt pot
144:06 - that takes a lot more of like I love
144:08 - this part
144:08 - Feroze is like I like how this doesn't
144:10 - feel like a lecture and more like a
144:12 - discussion bros chatting while doing
144:15 - something informative and something we
144:17 - can learn from honestly what we aim for
144:20 - we want it to be more of a casual sort
144:23 - of code along as it was like you know
144:26 - writing notes and stuff I mean I've been
144:28 - like yeah go ahead go ahead
144:30 - well record it so like yeah you could
144:33 - take your time off to it and go at your
144:34 - own pace yeah what are you gonna say
144:37 - cause it I'm just gonna say like weep
144:39 - code for fun and we'll like code for
144:41 - like 12 hours straight
144:42 - and while joking around having fun
144:44 - making fun of each other so it's cool
144:46 - that we're like it why don't we just do
144:48 - this live yeah I know other see the
144:51 - stuff we've come up with and Bill is
144:53 - insane like and I think now we're really
144:55 - realizing like we should just be doing
144:57 - this live all the time yes so we have
145:05 - the handle upload right yeah so the
145:07 - first line of code that I'm gonna
145:08 - explain is how we actually push that to
145:11 - firebase so this is we need to import
145:14 - our storage module so remember we sell
145:16 - firebase config
145:17 - uh-huh we sell things we serve the
145:19 - storage and we are gonna need the DB in
145:21 - a sec so we'll come back to that so
145:22 - right here I see we have storage
145:24 - firebase that storage and so you are
145:27 - exporting that right here and then I I
145:30 - have access to it yep exactly yeah so
145:33 - then we have it there so now what we're
145:35 - gonna do is on a handle upload the lines
145:38 - so what I'm gonna do now is actually
145:40 - sure your first piece of code so this
145:42 - line is the first bit right so this line
145:45 - is basically saying get a reference
145:48 - right so access the storage in firebase
145:51 - get a reference to this photo so we're
145:53 - creating a new folder here so called
145:54 - images and we're storing everything
145:55 - inside of it image name is basically the
145:58 - file name that we selected so ever that
146:01 - follow-ups okay hold on hold on so just
146:05 - to be very clear what this image name is
146:07 - it's actually that right there exactly
146:13 - that all right and then we have dot put
146:17 - yeah so what we're doing is we're
146:18 - literally putting the image that you
146:20 - grabbed into that point right so it's
146:25 - literally that simple so but then the
146:26 - next part this is where the sort of more
146:29 - this is where the logic comes in so
146:30 - there's a big snippet of code here that
146:33 - I want to go through so what we need to
146:35 - do is we say upload tasks so upload
146:39 - tasks and then we need to basically
146:40 - listen to what's happening now so the
146:43 - way we do that as we say on alright and
146:46 - then we do open brackets and then the
146:48 - first part is we say so there's a very
146:50 - careful thing that we need to listen to
146:52 - which is called state changed right so
146:55 - we're saying one state changed
146:58 - give me a snapshot right so everything
147:00 - so as the uploads remember guys it's
147:02 - gonna take time to upload so it might
147:04 - take and even though if it's very quick
147:06 - that is a that's an asynchronous process
147:09 - so it doesn't happen immediately so what
147:11 - we want to do is we actually want to
147:12 - keep track of it so that we can tell the
147:14 - user how long is it gonna take how long
147:16 - have you got left should you go make a
147:19 - cup of tea or should you just carry on
147:20 - just wait for a little bit and sort of
147:22 - let it go right so this is where we
147:25 - write the progress function so this is
147:27 - where we have all the progress logic
147:28 - here
147:28 - so we're saying as it changes as it gets
147:31 - updated keep me like keep giving me
147:33 - snapshots of the progress right and what
147:37 - we want to do here this is just a piece
147:39 - of code I've written before which
147:40 - everyone can just pretty much copy line
147:42 - to line and what this does here is this
147:45 - like equation right here is gonna work
147:48 - out a number between 0 and 100 and it's
147:52 - gonna give you the exact sort of like a
147:54 - progress indicator rest from 0 to 100
147:57 - it's all it's gonna do have yeah yeah
148:00 - based on how much information has been
148:02 - sent across and then how much is left
148:06 - right yeah and then what we do we set
148:08 - the progress so that so then we set a
148:10 - progress number here from 0 to 200 so
148:12 - that logic really that entire piece of
148:14 - like this piece of code is just for this
148:18 - visual and here yeah that's all just for
148:22 - the visual so so very cool so if we
148:24 - don't need ok but we still don't have
148:26 - the functionality of the upload in yeah
148:29 - right yeah we don't yeah but it's coming
148:32 - inside of this on so this this whole
148:35 - sort of block right here uh-huh it's
148:38 - quite it's quite a big block of code
148:40 - that we're gonna write now ok guys the
148:41 - first part was the first party basically
148:44 - gets you the visual the perfect
148:47 - yeah the visuals the second part so a
148:49 - comma so the second sort of argument
148:54 - next is gonna be the error so you here
148:56 - you have the error so if anything went
148:58 - wrong during your upload this is where
149:02 - you basically complain about it so this
149:04 - is going to be known as your error
149:05 - function yeah so this is just how the
149:08 - firebase SDK the uploading SDK works
149:10 - right so here all I like to do is I like
149:13 - to do a console log and I error out
149:15 - because when you do this sort of stuff
149:17 - is typically not a user-friendly message
149:19 - that you you show so we just want to
149:21 - show it in the console as opposed to
149:23 - saying Allah and sort of coming up on
149:25 - the screen right but in our case just
149:27 - for now what we will do is I guess we
149:28 - could just use our arrow down message
149:31 - because we're this is more of a demo so
149:33 - we can just show but typically I would
149:34 - just console.log it yeah nice and then
149:37 - the final one is the complete function
149:40 - so this is when the upload completes
149:43 - mm-hmm what happened so this is the
149:45 - final part of the piece of the puzzle so
149:47 - we have the upload complete function so
149:50 - this is the final part which is complete
149:52 - right now here what we have is we
149:56 - basically need to do all of the logic
149:58 - and all of this sort of complicated
149:59 - stuff that we want to happen once we're
150:02 - done so here what we're gonna say is
150:05 - this is I'm gonna copy a snippet of code
150:08 - so here we have this block so we say
150:13 - storage doc go to the ref images so
150:16 - remember this one is a topical yeah yes
150:20 - you ref is and then we're gonna say go
150:23 - to the image name child and get me the
150:27 - download URL so that's really important
150:30 - right now because I think about what
150:31 - just happened right it just uploaded
150:34 - that image to firebase storage right
150:36 - then in order to sort of get that URL
150:39 - and do something with it we need to get
150:41 - the download you're
150:42 - that is been like so once it gets
150:44 - uploaded it gives us a download URL so
150:47 - we just need to go and grab it so that's
150:49 - how we grab so basically this alone is
150:52 - already doing the uploading this is just
150:55 - us over here getting it yeah this is
150:58 - then saying go and get a link that will
151:00 - allow us to so go and get a download
151:02 - link now so it's already uploaded but go
151:05 - and get me a downloading now so that way
151:06 - we can actually use that I'm sort of
151:09 - like in some kind of post something like
151:11 - that you see it so then we say dot then
151:15 - because everything went well we say get
151:17 - the URL and then what we want to say is
151:20 - do some stuff right so do some stuff
151:21 - with that URL and what we like to do
151:24 - here this is where all of the work comes
151:26 - together right we now want to basically
151:29 - post the image inside of the database so
151:33 - here is where we post the image inside
151:35 - of the database so here what I do is I
151:37 - say DB doc collection store ad so I say
151:41 - DB doc collections don't add and I
151:44 - basically so here I'm gonna add a post I
151:47 - am so remember when Kazi previously was
151:49 - inside the database and he was adding a
151:52 - bunch of things manually right and there
151:55 - each of those things were the posts that
151:56 - you see on the right yeah so now what
152:00 - we're gonna be doing is I'm gonna be
152:02 - basically there's a few things I need to
152:03 - pass in here so one thing I need to pass
152:05 - in is a quote a timestamp and what we
152:07 - want to use here guys is a timestamp
152:10 - that is based on the the server where
152:14 - our code is living because imagine the
152:16 - scenario right now so why is the
152:18 - timestamp useful it's gonna allow us to
152:20 - sort all the posts by the correct
152:21 - timings right now we have an implement
152:23 - in any sort of timestamp but we want to
152:25 - have all of the recent ones come to the
152:27 - top right yeah so what we want to do now
152:31 - is say firebase so firebase don't fire
152:35 - store so they saying basically what I'm
152:38 - writing right now is go and get the
152:41 - exact server timestamp so don't get the
152:44 - timestamp which is on the stuff in any
152:46 - any image we upload should basically the
152:49 - newest one should be like that at the
152:50 - top right and because we're using server
152:54 - time we're using the firebase
152:56 - is time so it regardless of where you
152:59 - are in the world this will get you one
153:01 - unified time exactly so regardless
153:05 - because cause he's in LA right now I'm
153:07 - in London right now yeah
153:08 - his time is gonna be different to my
153:10 - time so if we both use the server time
153:13 - Stan we're both gonna be consistent if I
153:16 - use my time and he use his time we're
153:17 - out of consistency easier yeah so that's
153:20 - the first part and the second part we
153:22 - want to do is the caption so remember we
153:25 - actually wrote the caption and we stored
153:26 - it inside of some state so we can do
153:28 - this caption the next part is the image
153:32 - URL right so remember the image URL is
153:35 - literally gonna be the download URL that
153:37 - we just got hold of right so we uploaded
153:41 - it then we got hold of it here and then
153:44 - we're just saying use that as your image
153:45 - URL so it's uploaded to firebase storage
153:47 - and then we're literally gonna put this
153:49 - inside of the database now so that think
153:51 - about what just happened it uploaded it
153:52 - to firebase storage yeah give us a
153:54 - download link and then we pushing that
153:57 - download link as part of a post nice so
154:00 - oh I see okay okay that makes sense yeah
154:03 - now there's one more part here right we
154:06 - need the user name the user name however
154:09 - we don't actually have at the moment we
154:11 - don't have it here we have it inside of
154:13 - apt or jas so what we're gonna do now is
154:16 - we're gonna go back to after j/s I think
154:19 - you need to follow me again cause II
154:20 - uh-huh okay so yeah so after Jess and
154:24 - then what we're gonna do now is we are
154:25 - gonna go over to the point where we have
154:29 - the image upload and inside of app DOJ's
154:32 - I have the user name right I have the
154:34 - user I have their details so at this
154:37 - point I'm gonna go to the user I'm gonna
154:41 - go to the user and I'm gonna say go
154:43 - ahead and get me the user so let me just
154:46 - double check this just to be sure that
154:48 - I'm doing this exactly right
154:49 - yeah so if you had an image upload so at
154:56 - this point yeah so we're gonna say user
154:59 - dot display name so remember we updated
155:02 - that with the the user name that they
155:05 - sort of signed up with right yeah so
155:06 - we're passing this as the user name to
155:08 - that
155:09 - to that component so now inside of image
155:12 - upload this is where the props usually
155:14 - comes in so I don't know oh yeah this is
155:16 - where the props comes in so what we can
155:18 - do now is I hide the structure right
155:19 - here and I just say all I need to do
155:24 - here is I need to say username so use a
155:26 - name username there we go right and
155:32 - right now - now - speaking up so cannot
155:38 - read property of this place we've got
155:39 - user display name let me just double
155:41 - check why oh yeah so we actually need to
155:43 - do a careful check here so right now we
155:45 - don't want to render image uploads we
155:47 - only render this whole module unless the
155:49 - users signed in because we're thinking
155:51 - about we're trying to access a property
155:52 - which might not even be there because
155:54 - they might be logged out right so all I
155:57 - need to do is I need to say user display
155:59 - name so user display name and then here
156:03 - what I can say is either
156:06 - so if did if the user that display name
156:08 - is present and we can do this to be then
156:11 - we can have it so then we can render the
156:13 - sort of form to submit something or if
156:16 - it's not there we can basically just put
156:18 - a h3 tag which says sorry you need to
156:21 - login sorry you need to login to upload
156:26 - ah so like this app right over here if I
156:29 - actually log out and a scroll all the
156:31 - way to the bottom
156:32 - it says log in which they cannot see
156:35 - right now so have to hide ourselves
156:36 - right there so it actually says login to
156:40 - upload exactly God yeah okay
156:43 - so that's why we need that but there's
156:46 - one more check we need to do initially
156:47 - even when the app loads user might be
156:50 - undefined so there's a very clever thing
156:52 - in JavaScript code optionals so here you
156:54 - can say optional and this protects you
156:56 - so it says if this is not there don't
157:00 - freak out and break it's just saying
157:02 - like what only sort of use this only
157:04 - apply this condition what this is that
157:06 - that is so clean like normally you have
157:08 - to write try-catch for this stuff yeah
157:11 - so you normally you need try-catch now
157:12 - you've got optional chaining so now if
157:14 - we click if we click Save we should get
157:17 - yeah now you see sorry you need to login
157:18 - so now what I want you to do is first
157:22 - years thing
157:22 - the logics we got image upload go back
157:25 - here you see we pass in the username now
157:28 - I remember we are destructuring here
157:30 - guys so don't miss that part and then we
157:33 - go back down here and we passed a
157:34 - username and so now we've got everything
157:36 - we actually need well it looks like
157:38 - we've got everything we need to get this
157:40 - working and all I need to do at the end
157:42 - of that is I don't want it to be stuck
157:44 - on a hundred percent progress so I'm
157:46 - gonna say set the progress after it's
157:48 - done back to zero so it kind of informs
157:50 - the user that you're done set the
157:52 - caption and set the image to no as well
157:55 - so we want to kind of reset all the user
157:57 - forms right ah got it so like it yeah so
157:59 - basically like once you're done just set
158:02 - it back to like how it started with like
158:04 - no file name no caption and yeah no path
158:09 - exactly died on and now what we want to
158:12 - do is the final piece is we want to add
158:16 - the progress indicator so here naturally
158:19 - there is a HTML element called progress
158:21 - I don't need to have this class name
158:24 - just yeah but we have progress and then
158:27 - we have value which is just 0 to 100 max
158:29 - is 100 so that's a good thing to have
158:31 - here and then yeah that's pretty much
158:34 - like the start I think so we can
158:35 - actually give this a try and if we've
158:37 - all done it and we've done everything
158:39 - right it should be all good so we want
158:40 - to sign in
158:49 - nice it's it's it's there now right at
158:53 - the top boom yeah so now if we enter a
158:57 - caption so we can style this afterwards
158:58 - but we we can pop that in there and we
159:01 - enter a caption saying whatever you want
159:03 - to do so yeah and let's click on up and
159:07 - hopefully we don't get an error oh look
159:09 - at that you did it and then pop it
159:12 - changed right and now oh it's right here
159:16 - that's right
159:18 - awesome right yeah that was awesome that
159:20 - actually worked
159:22 - yeah now notice how it didn't go to the
159:26 - top even though it had the correct time
159:28 - stuff because the other ones won't have
159:29 - time stamps right yes so that's one
159:32 - reason also we need to consider that we
159:35 - don't we didn't actually emotionally saw
159:37 - we didn't order by it yeah that's true
159:39 - yeah so what we can do now is what I'm
159:42 - going to do is I'm actually gonna clear
159:43 - the database because we've got some
159:44 - records in there which don't have time
159:45 - stamps right so don't clear maybe all of
159:48 - them just clear those ones right so
159:50 - let's clear just those we can do that
159:54 - yes this clear just the ones that don't
159:55 - have time stamps so this one actually
159:58 - has times times this one has time stamps
160:00 - this one does now I'm looking at my one
160:04 - yeah we set this up when yours yeah so
160:06 - yep how good was it okay is there okay
160:11 - this is it document okay okay and
160:16 - actually let's just look at it live
160:19 - because it'll show up it'll be deleting
160:21 - here so let's say this is a Sonny Sango
160:26 - one so let's delete this one boom gone
160:30 - and then let's delete this Instagram one
160:35 - yep and this is the only one we have
160:41 - with a timestamp exactly so now what
160:45 - we're gonna do is we go over to App js9
160:51 - 64 so over here and basically when we
160:54 - access when we basically while grabbing
160:57 - all of the posts to show on the screen
160:59 - before we do on snapshot
161:01 - you can literally do order by yeah so
161:03 - you can just in and you can do order by
161:05 - and the field that we want to order it
161:06 - by it's called times thumb the answer to
161:09 - that question by the way is yes it can
161:12 - be scaled up on a much larger scale for
161:15 - many users yeah so right out of the box
161:18 - guys it can support literally a million
161:22 - users if you if you want to deploy this
161:24 - and it's up and running it doesn't
161:26 - matter if you get 10 billion users
161:27 - Google you're gonna you're gonna have
161:29 - Google's capacity it's crazy right
161:33 - yeah I mean you might get billed for it
161:35 - but here you're gonna definitely it's
161:38 - definitely gonna work so time stopped
161:40 - descending I think isn't it yeah we can
161:43 - give it a try there we go so now your
161:47 - top ones are going to be the most recent
161:49 - so if we upload another picture
162:00 - and this upload and it's uploading we
162:06 - can i still indicator there and boom
162:13 - there we go that's awesome cause yeah I
162:18 - think you're muted it's so nice that is
162:23 - nice yeah nice right and you see guys
162:27 - that indicator gives you all that sort
162:29 - of reassurance as like something's not
162:31 - broken you're actually just waiting for
162:33 - it but if you didn't have that indicator
162:35 - you'd kind of be freaking out like oh my
162:37 - god it's not working or my codes broken
162:39 - yeah so it's really important thing to
162:41 - have yeah true nice so that's really
162:45 - clean so we have our authentication we
162:48 - have everything so so now we kind of
162:50 - just need to do the remainder of the
162:51 - styling right and so I'll get everything
162:53 - in where it needs to be so and so it
162:56 - looks like the app that we built earlier
162:58 - so first we're gonna start that image
163:01 - upload component because it looks
163:03 - horrible right now so we're gonna go
163:05 - here and get rid of this marker so
163:07 - remember guys mark is actually really
163:08 - good so I usually just add comments like
163:10 - that to sort of visualize it beforehand
163:13 - and even get a pen a like a pen and
163:15 - paper and do it that way and I'll help
163:16 - you out
163:17 - cuz let's go ahead and create an image
163:19 - upload CSS file so image upload CSS nice
163:27 - and then you might have to read follow
163:32 - yep and then now we're gonna do is we're
163:34 - gonna import that file so we can start
163:36 - styling and this is another benefit guys
163:39 - to doing component-based at work because
163:43 - you can pretty much just have your CSS
163:45 - isolated to that specific component
163:47 - which is really handy so here what we're
163:50 - gonna say is we want the div which
163:52 - contains everything we're gonna call
163:54 - that so let's call it class name and
163:57 - call it image upload so image upload
164:01 - there we go
164:02 - and basically one with videos and just
164:04 - for simplicity just for now I'm gonna
164:05 - make that lower case image upload and
164:07 - here I'm gonna get some styles so image
164:11 - oh there we go so it's very simple how
164:13 - we're gonna style this for now we're
164:14 - basically just gonna have I'm gonna go
164:18 - over to our image upload CSS and I'm
164:21 - gonna basically give it a image upload
164:23 - so image upload oops we kept it
164:28 - lowercase and Mario is saying Mari is
164:31 - saying new 2vs code and trying to get my
164:33 - setup to mirror this is this all default
164:35 - syntax highlighting yes
164:38 - so right now causes machine I believe is
164:40 - also syntax highlighting and once you
164:42 - stop project with create react up it's
164:44 - really good at actually setting up your
164:46 - environment with vs code I've noticed so
164:48 - everything should just be out the box I
164:50 - mean I would recommend something called
164:51 - prettier which is we're not using at the
164:53 - moment but pretty is really really good
164:56 - to sort of get get used to having yeah
165:00 - so and it just means that when you take
165:02 - saves you have to update you in
165:04 - preferences but if you click Save it
165:05 - will actually handle all the formatting
165:07 - for you which is really handy so here
165:09 - we're gonna say display flex and on the
165:12 - right as soon as I click Save notice how
165:13 - you're gonna see it change so you see
165:15 - everything went in by default into a row
165:17 - yeah yeah so we want it to be inside in
165:21 - a column so we're gonna say if X
165:23 - Direction oh look at that
165:24 - sunny oh nice that's the kind of
165:28 - comments I love yeah this tutorial is
165:31 - more helpful than paid ones nice that is
165:34 - awesome
165:36 - nice right so now what we're gonna do is
165:41 - we have flex Direction column width of
165:45 - 60% I want to say width of 60 percent
165:49 - sorry cuz I don't want it to kind of you
165:50 - see right now it's just going it's just
165:53 - touching everything on the sides it
165:54 - looks a bit ugly right so we went to 60
165:57 - percent and we'll just do it something
165:58 - like this so you see it doesn't take up
166:01 - everything and then in order to get it
166:02 - sent and in this case I'm gonna do
166:04 - something very simple when I say margin
166:06 - left is Auto and margin right is Auto so
166:10 - it's gonna determine the margins on the
166:11 - side automatically and that should send
166:14 - to the element all right yeah so you get
166:17 - that so what we're gonna do then just a
166:20 - sort of top that off is I'm gonna add a
166:21 - little bit of a margin
166:23 - on the top and bottom so margin-top I'm
166:26 - going to say 10 pixels and margin-bottom
166:30 - is gonna be 10 pixels as well so margin
166:32 - bottom is 10 pixels and now if we check
166:36 - it we should be able to see so let's
166:40 - have a look at your one so let's see can
166:45 - you see the app oh yeah there we go yeah
166:47 - so we've got that so 10 pixels 10 pixels
166:49 - so now it's looking a lot better
166:51 - right but what we want to do now is
166:53 - actually have that maybe even glued to
166:56 - the bottom I mean it might look better
166:58 - at the bottom so what we're gonna do now
167:01 - is have it at the bottom so we're gonna
167:02 - have position so I'm going to say
167:06 - position position fixed right fixed and
167:12 - this is gonna basically say it's gonna
167:13 - be fixed to the bottom of the page
167:16 - oh I don't know if I did this previously
167:18 - actually we might have done this
167:19 - slightly different because I think
167:21 - that's gonna break the look and feel of
167:23 - it right so can you just move the
167:25 - comments yeah yeah and then we can see
167:28 - it okay nice so you see it's sort of
167:32 - broken in a little bit and it's sort of
167:33 - like showing a bit weird now right yeah
167:35 - till there but it's just yet like acting
167:38 - a little funny yeah so for now what
167:40 - we're gonna do is we're gonna keep it up
167:42 - at the top yeah just for now just while
167:44 - we sort finish off the remainder of the
167:45 - styling because there's a few things
167:47 - that I wanted to sort of do before we
167:48 - get to that so if we go to image upload
167:51 - and let's just have this first year's
167:53 - position in the correct place yeah so
167:55 - right now let's go ahead and move that
167:59 - image upload to where it should be so it
168:01 - shouldn't be at the top of the page so
168:04 - for now let's just kind of put it at the
168:05 - bottom I guess for now so temporarily
168:09 - yeah so
168:12 - but that looks a little bit better now
168:14 - so we have it at the bottom of the page
168:16 - yeah but if you scroll down on my code
168:21 - on the oh yeah right there
168:23 - oh it's looking nice actually it's
168:24 - looking much better yes that looks much
168:27 - clean enough right and even the progress
168:29 - bar we can solve fix this out of here
168:31 - it's not to move our screen yeah so now
168:39 - what we need to do is we go over to West
168:44 - progress con image upload here so here
168:46 - we say class name let's just give this a
168:49 - quick sort of image upload progress and
168:52 - then here inside an image upload CSS I'm
168:54 - just gonna say go and target that and
168:57 - give the width of the progress bar to be
168:58 - a hundred percent inside of his
168:59 - container so that should then stretch
169:02 - the so if we go back to the bottom of
169:07 - the page you should be able to see I
169:08 - just moved us out of the way so we don't
169:10 - get in the way oh nice nice so what we
169:15 - do now is actually we can keep it there
169:16 - for now and I see it's quite clean down
169:18 - at the bottom and what we could say is
169:21 - background color give it a background
169:23 - color of white and give it a border top
169:25 - of one pixel solid great so it fits in
169:30 - really nicely to our theme so my gray so
169:33 - now if you check it out you should go to
169:35 - see obviously hasn't actually done it is
169:38 - the one that we wanted to have width of
169:40 - 60% okay we can change afterward we can
169:46 - finish out styling in a sec let's go
169:48 - ahead now and go to the top of the page
169:51 - so you see where we have sign up and
169:52 - sign in right yes doesn't the cleanest
169:55 - right it looks a bit so weird all the
169:58 - way we're here so I need an signed out
170:01 - oh so what are we trying to do we want
170:03 - to move this from here and move it like
170:07 - here in the header exactly we don't want
170:10 - it where it is at the moment we just
170:12 - want to inside the header right uh-huh
170:14 - so at the moment we have this cool piece
170:17 - of code over here called up header and
170:20 - what we want to do is basically have
170:22 - these login logout buttons just I'm
170:24 - gonna cut it
170:25 - I'm gonna put it inside the header but
170:27 - as you can imagine this is gonna cause
170:29 - some weird behavior because it's not
170:30 - stuck we haven't started we haven't
170:32 - prepared for that so now look and you
170:35 - see it just jump to the bottom of that
170:36 - yeah but the surrounding containers is
170:40 - called a pedo so the surrounding
170:42 - containers called a pedo so now with
170:44 - Flex box
170:45 - what we can do is we can go here and we
170:47 - can say display flex that's the first
170:50 - step and if you notice now it will go
170:53 - into a row nice it's right there it's in
170:56 - a row yeah which is really nice and then
170:59 - what we can say is we can say justify
171:01 - content space between right so we can
171:05 - space all the elements inside there
171:06 - between yeah all right which is already
171:09 - looking much cleaner right yeah the
171:12 - Instagram logo actually stretched a
171:14 - little bit less double check why so if
171:16 - we go to the header image yeah what we
171:18 - can do here is we can say Heather image
171:20 - and then an object that object contains
171:23 - the object object pic contain I know if
171:27 - we save that ah see yeah yeah so that's
171:31 - already looking really clean like that's
171:33 - actually looking really nice and
171:35 - everything sort of slick we can actually
171:37 - add this are we by the way are we done
171:39 - styling the image uploader we can update
171:43 - it we can say that we can change it for
171:45 - sure like we can no but are we done for
171:47 - now styling it yeah yeah we are
171:53 - yeah you can't we have to celebrate each
171:56 - thing we come yeah just can't just go on
172:00 - to the next it's too hard on yourself
172:03 - bro that was nice alright what's the
172:07 - next thing yeah we're working on right
172:09 - now so now I guess we just we're we're
172:12 - styling a little bit we're styling the
172:14 - webpage little bit okay so working so
172:17 - just styling at the moment you know
172:21 - starting a webpage so at this point what
172:23 - we're gonna do is we can get rid of
172:24 - where it says hello clipper programs
172:26 - just put Instagram come with react
172:27 - because it's like a sore thumb right at
172:30 - the moment so you can get rid of that
172:31 - and we can check it and we save that
172:33 - here is one question though rank says
172:37 - some a bit late but realize you guys
172:39 - created an authentication system with
172:41 - email and password
172:42 - however Instagram allows you to login
172:45 - with the username as well can we do that
172:47 - here yes so you can do that here I think
172:52 - you can it's a custom way you can do it
172:54 - so you can actually do any sort of
172:55 - authentication through firebase yeah but
172:58 - we're using the default ones and what I
173:00 - would recommend maybe in the FAQ in the
173:02 - next video something we do some
173:04 - indication the hacky way to do it in
173:06 - this case would just be to map the
173:08 - username and password or username and
173:11 - email to each other so then when they
173:13 - type in that specific user name it
173:15 - actually just replaces it secretly with
173:17 - their email and sends that email you see
173:21 - what I'm saying sunny yeah yeah we could
173:23 - do that well I mean yep okay yeah so by
173:28 - oh that's a Kuwait okay yeah we could do
173:33 - it that way there's that guy when it
173:35 - comes to this stuff there's a lot of
173:37 - ways to do all of this yeah so I would I
173:40 - would say there's there's many ways to
173:41 - get it right and sometimes like you
173:43 - could have but I would recommend like
173:45 - the reason why they sort of have an
173:47 - email and password approach is because
173:50 - those ones would just use name passwords
173:52 - you have to check a few things with
173:53 - where as an email say for example your
173:55 - user forgot their email address right
173:57 - oh no forgot their password then it's
174:00 - gonna be a case of having how do you
174:03 - send them a reset password email etc
174:06 - so that's why they saw them I need it
174:07 - like that quiet yeah sure you can
174:10 - definitely have it if you want to okay
174:12 - cool
174:12 - yeah let's just keep styling it and then
174:14 - then what's next will we just host it
174:17 - yeah
174:18 - so we're gonna style it we're gonna host
174:19 - there and then we could even show how we
174:22 - added that quick Instagram embed and
174:23 - then we can host it and I think we
174:25 - shouldn't take too long though yeah yeah
174:27 - nice so it's go to app post so we push
174:31 - this inside of here so I've just
174:32 - surrounded these are these posts that we
174:35 - have right here and I'm just gonna add a
174:37 - little bit of padding here so I'm gonna
174:38 - go here and I'm gonna go ahead and do
174:40 - hop oh and I'm gonna say padding let's
174:44 - just give it a 20 pixel padding and see
174:46 - how that looks so if we go ahead and do
174:48 - that you see that and they're already
174:49 - looks much nicer take it away
174:51 - just so we can visually me one second so
174:53 - it's basically right over here right
174:55 - it's adding that like padding right
174:56 - there in between each post exactly okay
175:00 - so if I take it away uh-huh ooh
175:03 - everything is too tight nice that looks
175:06 - a lot nice clean slick UI mm-hmm
175:11 - the next thing I want to do is
175:13 - essentially so previously and the demo
175:15 - that we showed we had this really nice
175:18 - slick looking sort of Instagram embed
175:21 - right yeah so that's like your very
175:23 - quick thing that we can add to this
175:25 - project so it's so just so everybody
175:27 - knows what we're talking about
175:29 - yep we're talking about this
175:31 - specifically on the right hand side
175:35 - right the Instagram embed right there
175:38 - yep it's yeah right this is what we're
175:53 - trying to build right now so what we
176:02 - wanna do is
176:04 - [Laughter]
176:15 - I'm sorry okay so what we need to do now
176:21 - is cause the view if you head over to
176:25 - type and react
176:27 - instead Instagram and react Instagram
176:32 - embed oh okay yeah this one right here
176:44 - [Laughter]
176:49 - all right so right here paste yeah and
176:56 - then at the bottom of the page it's
176:57 - really simple by the way to do this
176:59 - guy's so we need to go to the top of a
177:02 - page is do an import so we have this
177:05 - import and then what we need to do is
177:07 - actually just pop there so right now
177:09 - what I'm about to paste is just on there
177:12 - they actually have some demo code on
177:14 - that page so I'm gonna go to the bottom
177:17 - and I kind of wanted to come he's no
177:21 - good it's hard to keep that in Instagram
177:25 - embed and we're gonna have that next
177:28 - year the posts so over here so right
177:32 - yeah we'll have div should better just
177:37 - pop it in here so that and with that
177:40 - said so what I'm gonna do now is I'm
177:42 - gonna pop in an Instagram thing over
177:45 - there so let's go ahead and click on
177:49 - something one second boom boom boom just
177:52 - go ahead and grab this so this is a
177:53 - picture from my Instagram and now what
177:57 - we do is if we save and refresh this go
178:01 - back to our react up so cause yeah am i
178:08 - following you yeah react up on the right
178:16 - so go to the running one yep so now if
178:19 - you make it a bit bigger
178:21 - so make it a bit bigger and I think in
178:25 - my renders at the bottom of the page so
178:27 - if you go to the bomb if you refresh
178:32 - okay so you need to the NPM stop so I'll
178:35 - do a MPM stop so when we installed it we
178:39 - actually cut the terminal so we have to
178:41 - do mmm start again and that should get
178:43 - it running again in a second and what
178:47 - we're doing here guys is we're pulling
178:48 - in some code someone else's row for an
178:50 - Instagram embed and we're just pulling
178:52 - it into our into our web page so if you
178:55 - scroll down a bit more you are you meet
179:01 - fuzzy okay I think I think you might saw
179:17 - if you go to the so you see you guys
179:20 - it's popped up at the bomb so that's
179:22 - actually Instagram both so you just you
179:24 - just need this one go up a little bit I
179:29 - [Laughter]
179:33 - think you made Ghazi now if you go to
179:44 - the right so the actual react up yeah
179:48 - and then swipe up a little here this
179:54 - yeah so what we want to do here guys
180:02 - right now what's happening is because we
180:04 - have the app posts over here and then we
180:06 - have the Instagram embed is coming
180:08 - underneath it and we don't really want
180:10 - that to actually be the case instead
180:13 - what I want is I actually wanted it to
180:17 - come up next to it on the right so I'm
180:19 - just gonna check something now we've got
180:21 - posts and one way to do now is I'm gonna
180:23 - pop this hmm pop this into the app posts
180:28 - and then I'm gonna basically wrap so I'm
180:31 - gonna create to dibs right I'm gonna say
180:33 - one is app posts
180:35 - left so this is gonna be responsible for
180:37 - the stuff on the left and I'm gonna
180:38 - Chuck this in here and we just indent so
180:41 - if you have prettier guys this isn't an
180:43 - issue you actually just save and it
180:44 - handles this for you and we'll say div
180:49 - posts right getting it out of the
180:53 - different divs because you want the
180:55 - embed to be on the other side and then
180:58 - all of our posts would be on one side
181:01 - exactly yep so we're gonna use some
181:03 - flexbox rules but you have to put the
181:05 - children so now we're wrapping all the
181:06 - posts into one child so it's on the left
181:09 - and then all of the in the Instagram
181:11 - embed on the right and the way we do
181:13 - that now is I basically go ahead and let
181:17 - me just check some rules for real quick
181:19 - so now I need to basically go and update
181:23 - some CSS so I go to my app posts and you
181:26 - see right now I just have this right so
181:28 - right now we haven't got anything
181:29 - working as we want it so instead I just
181:31 - need to do display so just all in one
181:34 - place like one yeah straight there we go
181:39 - okay and now it's showing up so now I
181:41 - did display flex and that's fixed that
181:44 - and then the second thing I need to do
181:45 - is by default in a row so it put the two
181:47 - children in a row right which is really
181:49 - clean look at that guys it's really
181:51 - responsive everything works like we
181:52 - wanted to right but what did you justify
181:55 - content center so now if you make it a
181:58 - little bit bigger cause II owed or the
182:02 - app the app yeah okay make it a little
182:06 - bit bigger and look what happens guys so
182:08 - oh right sorry I don't Center right so
182:10 - if I find you actually that's pretty
182:12 - clean actually yeah that looks pretty
182:13 - clean actually because like now even if
182:16 - I'm full screen it shows up right here
182:18 - that's really clean actually yeah so
182:20 - what we could do then is we could just
182:22 - go ahead and target the right element so
182:26 - the post right and just give it a slight
182:28 - margin left of like let's just say like
182:31 - 20 pixels right or even even less maybe
182:34 - 10 and now you'll see well you see it's
182:37 - got a little gap so I think it needs a
182:38 - little bit of a bigger gap so you see on
182:41 - the the app now yep yeah we've got that
182:44 - little gap yeah yeah this this little
182:48 - gap right
182:49 - hear that oh whoops this little gap
182:51 - right here that wasn't there
182:52 - yeah so that's super clean right now
182:55 - right we have a really really nice UI
182:57 - everything is fully responsive and it
183:00 - works as we want it to so we actually
183:03 - have the image uploads at the bottom so
183:07 - let's just have a look at this now so
183:08 - we've got everything we kind of have
183:10 - initially the one thing we do we did
183:13 - want is we wanted it to be a case of we
183:18 - wanted it to be a case of that when you
183:20 - wait hold on we forgot about putting
183:22 - comments oh yeah oh yeah let's do that
183:26 - we got it
183:26 - we gotta add comments yeah so right now
183:29 - let's go to our post and yes what we
183:33 - need to do now to get that working is we
183:35 - go over to our post oh this is actually
183:37 - really key Yama says firebase is a
183:39 - service that allows you to create apps
183:41 - without needing a server exactly yeah
183:45 - exactly that that's actually a really
183:47 - good way of putting ice ice we're
183:51 - playing it yeah and that's want to see
183:52 - exactly what it is and and and and it
183:55 - also allows you to do yes a create apps
183:57 - without thinking of somebody I couldn't
183:59 - play about that's really nice yeah it's
184:02 - it's a weird give you but yeah go ahead
184:05 - okay it gives you a bunch of extra
184:07 - plugins that you could do that machine
184:08 - learning you can do a bunch of stuff
184:09 - using firebase which is really cool
184:11 - mm-hmm mm-hmm so what we're gonna do now
184:16 - is quickly add the comments so let's go
184:18 - ahead over to our function so here I'm
184:21 - gonna add a piece of state to keep track
184:23 - of them so we're gonna have a comments
184:25 - keep track of it and what I'm gonna do
184:28 - here is I'm gonna create a user fact
184:31 - right which is going to be used to
184:33 - populate the comments so what we're
184:35 - gonna do now is this is a snippet of
184:38 - code that I'm gonna do right now so I'm
184:39 - gonna say actually so we need to do two
184:43 - things right now we need to basically
184:44 - firstly have the in order to have
184:50 - comments on a specific post we need to
184:53 - have the an individual posts ID so that
184:57 - way we know which posts were actually
184:58 - looking at right so right now we passing
185:01 - the key by one
185:02 - I want to pass in a post ID as well
185:04 - because you shouldn't actually reference
185:06 - the key as a prop because what you're
185:08 - trying to do is you want to be able to
185:10 - get the specific ID for a post and then
185:13 - add a comment to that exactly so you can
185:16 - you see on the right it's good thing you
185:17 - what is up so every single document
185:19 - which is a post we're actually gonna
185:21 - internally have another collection on
185:23 - the right so you can you see the
185:24 - collection start collection on the right
185:26 - on the right yeah
185:29 - so there we have star collection on the
185:31 - right I think yeah starvation right and
185:33 - then what what we're gonna do there is
185:35 - inside of them again we're gonna have a
185:37 - collection called comments alright so in
185:41 - then we're gonna have a collection
185:42 - called comments and now what that's
185:44 - gonna do is we're basically gonna say so
185:46 - click on that and click on comments what
185:49 - we're gonna do here is so we passed in a
185:53 - post ID so yeah so here we're gonna have
185:56 - two things are gonna have text and a
185:57 - username right side of the post this is
186:02 - a collection inside of the post yep oh
186:05 - nice that's a clean way of doing it so
186:09 - and it's like all relationally connected
186:11 - right yep just gonna keep it just gonna
186:16 - store strings as the sort of username
186:18 - etcetera but so if I do promise to hit
186:20 - next yeah okay do that and then type in
186:25 - so this just add one so we'll say I
186:26 - actually have a different text on one of
186:29 - them and username the other one so do
186:32 - filled text and then the other one do
186:34 - you use name nice and then that's just
186:37 - too clever Kazi yeah and there we go so
186:41 - that we have a collection of comments
186:42 - inside of it so you can see it's
186:43 - actually really on easy to interpret
186:45 - about like how you store information
186:47 - here which is really clean right this is
186:50 - the coolest tutorial I have ever seen in
186:52 - my life that's it that's exactly what we
186:55 - we aim for guys that's exactly what we
186:57 - want to hear awesome just keep going
186:59 - nice so now we have a so we have the
187:05 - post ID so let's go back to image upload
187:07 - an image upload post yep and then here
187:11 - what we want to do is we passed through
187:13 - the posts ID because I was a prop
187:15 - and what we want to do here is basically
187:19 - have so upon loading I need to have a
187:23 - user fact right so I need Wu's effect
187:25 - and what I'm gonna have inside that use
187:27 - effect I'll explain here so I'm pasting
187:29 - a code and here I have so firstly I'm
187:33 - saying so ignore this top line for a
187:34 - second I'm saying if a post ID was
187:37 - passed through right and I'm saying
187:40 - unsubscribe so remember that thing what
187:42 - we did before unsubscribes of const
187:44 - unsubscribe mmm was DB and we're
187:48 - accessing the posts collection then by
187:50 - going to that post ID document we're
187:52 - going inside of its collections inside
187:55 - of its comments collection and then
187:56 - we're saying go get a snapshot listener
187:58 - for that snapshot listener for comments
188:04 - yep exhibit okay so anytime basically
188:07 - there is so just so we can visually show
188:10 - this a little bit so basically anytime
188:14 - there is a new comment added wherever
188:17 - posts so if I go inside of posts and we
188:20 - see so anytime there's a new comment
188:22 - added to thus like to a specific post
188:27 - yep got it so it's a listen it's a
188:30 - listener for this one specific post
188:32 - we're not necessarily listening to every
188:34 - single post listen to this specific post
188:36 - and all the common changes within it
188:38 - exactly it's actually like a nested list
188:44 - not yeah that's a nested exact list that
188:46 - I was looking at that's a nested loop
188:47 - because then that's what allows you the
188:49 - ability to like not refresh or listen to
188:51 - the whole page you can actually listen
188:53 - to the specific places yeah so can you
188:56 - guys see how like react hooks and like
188:59 - this form this sort of this sort of
189:01 - whole fundamental like State value and
189:04 - property that we use connected with
189:06 - firebase is just insane like the
189:08 - relationship between these two things
189:09 - they're just like they're made to be
189:12 - together but there's just not many
189:13 - tutorials on using it at all like I want
189:15 - to sequence here the best programming
189:17 - video ever wow dude
189:19 - that makes me so happy that's awesome
189:25 - I think your media coffee oh no I didn't
189:28 - say anything oh thanks I appreciate it
189:34 - yeah return unsubscribe and then what
189:38 - we're gonna do is we need to remember
189:40 - every time we use some kind of like
189:42 - variable inside that we need to include
189:44 - it as a dependency yeah so that way if
189:46 - that variable changes it refires this
189:48 - right yeah so that's basically gonna go
189:52 - ahead and fetch some comments now we
189:54 - need to basically make it look quite
189:56 - nice right so we need to do a few things
189:58 - now and we need to basically go ahead
190:00 - and add so let me go bring up the app so
190:03 - I can see that place so now we're gonna
190:04 - do is we're gonna go and add a comment
190:08 - field so the way I like to do it is I
190:10 - pretty much have a habit looking like
190:14 - this so I have a forum so underneath why
190:18 - is this gonna of sink so underneath what
190:20 - do you what are you working on right now
190:21 - just so everybody can be on the same
190:23 - page yeah so that's actually let's add
190:26 - it to that little text banner thing so
190:28 - what we're doing right now is adding a
190:30 - support for entering comments well um I
190:36 - think yeah add oh yeah we've already got
190:39 - yeah I've had that I've had that okay so
190:41 - yeah we're been working on adding
190:42 - comments to the Instagram post right yep
190:45 - exactly
190:46 - so firstly we need to import you stay so
190:49 - it's not broken so you stay yep there we
190:52 - go and then what we're gonna do is our
190:55 - act as well yeah and then DB as well so
191:01 - we were using the DBS we need to import
191:03 - DB from 4/5 s and there we go nice yep
191:12 - so now we've got this and what we need
191:14 - to do now is we go underneath where we
191:16 - have the caption and I'm basically just
191:19 - gonna put a form here so I'm gonna add a
191:21 - form right
191:22 - so I'm going to just break you down so
191:24 - I'm going to say the form so we're gonna
191:25 - have a form inside that form I'm gonna
191:29 - have two inputs I went I understand when
191:31 - I have one input which is the M which is
191:32 - the input that we have there's that the
191:35 - user is gonna be able to write inside of
191:37 - all right this is gonna have a class
191:39 - name of just post input it's gonna have
191:41 - a type of text placeholder add a comment
191:43 - at the value and a mean comment need to
191:47 - assign we need to create a piece of
191:49 - state right now to keep track of the
191:50 - individual comment that you're putting
191:52 - in right so it's singular because we're
191:56 - talking about the comment that they've
191:58 - just typed in so comment yeah yeah and
192:01 - then we say set comment and here we just
192:03 - do you state and initially that values
192:06 - blank so you show the placeholder and
192:08 - then here at the bottom we then have
192:11 - this right here so unchanged here it's
192:14 - basically just gonna update that state
192:16 - as we type in so if we save this now we
192:19 - should see at the underneath that
192:21 - underneath nice yeah we see I had a
192:24 - comment now what I wanna have is I want
192:26 - to have a button which says post right
192:29 - yeah so I'm gonna watch his post now so
192:32 - I'm gonna add this button this is gonna
192:33 - have a class name of post button so been
192:37 - naming and it's gonna be disabled if
192:39 - there is no comment - we're gonna
192:40 - disable it and then unclick yep
192:43 - hwigyeong's like we're gonna run a
192:44 - function called post comment alright so
192:47 - this is very sort of like similar to
192:49 - what we've done before so we're just
192:50 - adding a button here but when we click
192:52 - here I wanna fire off a function called
192:54 - post comment
192:55 - mm-hm so I'm gonna write that function
192:56 - so it doesn't error so post comment and
192:59 - that function is gonna be able to
193:01 - basically submit your comment in the
193:04 - database to that specific post exactly
193:08 - exactly that yeah so now if we open up
193:12 - react we should be able to see yep yeah
193:15 - we should go to see that we've got a
193:16 - post I am nice okay everything that's
193:18 - quite nice it's time to come together
193:20 - what we want to do now is also add a
193:22 - class name to form so this one and we
193:26 - can actually start making this look
193:28 - pretty nice so the first step we want to
193:29 - do in styling this post Oh CSS is
193:33 - actually have it so that
193:35 - it takes up the full width of the
193:37 - comment box right mm-hmm so I know to do
193:40 - that and to do that very easily we just
193:42 - go ahead into post op CSS and we do this
193:45 - we say pile oops
193:48 - post comment box so comment box and we
193:52 - do this display flex and I'm gonna give
193:54 - it a slight margin so that it's not too
193:56 - close to the top all right
193:58 - and then then what we need to do is
194:01 - remember we added two different we added
194:05 - two different classes post input and
194:07 - post bun all right so these two your
194:10 - post input and post button yeah now in
194:12 - Flex box whenever we have two children
194:14 - inside of a container what we can do is
194:17 - we can say post if we give each one a
194:20 - flex value what we're essentially saying
194:22 - is we're setting the precedent for how
194:24 - much space each one can take up so we're
194:26 - saying the input should take up most of
194:29 - the room mmm and in this case we could I
194:31 - say the button should take up as little
194:34 - room as it can because that's how we see
194:36 - it in Instagram right so now if I do oh
194:39 - I see nice so this one takes priority
194:42 - and a zero is like I'll take as little
194:45 - room as I possibly can exactly and then
194:49 - what I want to do is for the input I'm
194:51 - gonna add I'm gonna get rid of the
194:53 - border and I'm gonna add ten pixels
194:54 - padding no yes
194:56 - that looks cleaner that looks clean and
194:59 - then in in Instagram they actually do
195:02 - keep a top border so I could do this and
195:04 - I could basically do it like this
195:06 - nice all right and then on the button
195:09 - what we want to do is we want to get rid
195:11 - of all of the borders except for the top
195:12 - so I'm gonna add these two lines of code
195:14 - so I've just added those two so now we
195:18 - should only see the border like that you
195:21 - see that looks really nice yeah and then
195:25 - what I'm gonna do is I'm gonna change
195:27 - the color of the button to be whatever
195:29 - they have on Instagram so I found the
195:30 - blue earlier on but I'm just gonna pop
195:33 - that in there where are you I don't
195:34 - think it's following you now okay yeah
195:37 - so if you read follow I think I it's
195:40 - following you now I think oh yeah nice
195:43 - so yeah now it is so now I just added
195:47 - that so you can see there's a slight
195:49 - you write impost ya know which is nice
195:52 - and so all right there yeah oh yeah we
195:57 - started all nicely and everything works
195:59 - so now what we need to is actually post
196:01 - a comment right so the first thing
196:02 - before we do the posting the comment I
196:04 - actually want to list out the comments
196:06 - are currently there because right now we
196:07 - can't actually see remember you did add
196:09 - a comment but we can't see it mm-hmm all
196:12 - right so the comment goes between this
196:14 - gap here and we're gonna do this we're
196:15 - gonna say post so I'm just basically
196:18 - gonna put this here so I'm gonna say div
196:22 - oh it's warmer than that I don't need
196:24 - these two yeah so go ahead and do this
196:27 - and I'm gonna go ahead and pull this
196:29 - closer so we've got div post comments
196:32 - and also here so what the post comments
196:36 - and right now what I'm saying is I'm
196:37 - mapping through each comment and I'm
196:40 - just popping out a P tag and it's gonna
196:42 - have so this should actually be strong
196:44 - because strong is the bad one to use
196:45 - herbs strong and all we're doing here is
196:47 - we're getting a look do you remember the
196:49 - the fields inside the DB was username
196:51 - and text yeah it should say the username
196:55 - in bold and then it'll have the text
196:56 - next to them but we're just mapping
196:57 - through everything and again a comment
196:59 - and doing yeah like this a comment over
197:02 - here text and username exactly that
197:05 - yeah and now if we go back we should see
197:08 - if you scroll down oh nice Hey
197:11 - look at that yes just need to fix a
197:13 - little bit of styling now so if we go to
197:15 - post so CSS and we check out I believe I
197:19 - just need to add a little bit padding I
197:21 - think that's it so if I go here and I do
197:23 - padding of 20 pixels then I think it
197:27 - might have done it so I think 10 pixels
197:29 - might be enough we can have a look so 10
197:31 - pixels okay so we did 20 yep so 20 yeah
197:34 - boom there we go
197:35 - whoa nice right that is so lean what I
197:40 - need to do now is actually add in the
197:45 - ability to to post right so the way we
197:48 - do that is we go over here and I need to
197:50 - do event.preventdefault
197:53 - so I'm just gonna do
197:54 - event.preventdefault so event top when
197:58 - default and then what I'm gonna do is
198:02 - I'm gonna go in
198:02 - today in database so the route I need to
198:05 - get into is this one so it's gonna be
198:07 - DVD or collection posts when I go to the
198:11 - horse is gonna get you into here when
198:15 - you want to get into specific like post
198:18 - and then you want to get into comments
198:22 - and then you want to post your comment
198:25 - yeah exactly
198:27 - mm-hmm yeah so then we go ahead and we
198:31 - just need to add right you know we just
198:35 - need to do add and then what we do here
198:39 - is we say we just need to add in the the
198:42 - key to filled the key value pair so the
198:44 - first one is text I'm gonna say text is
198:46 - going to be what was inside of the
198:48 - comment state and username was basically
198:53 - so this again we come into our we come
198:54 - to a point where we need to think about
198:56 - what's happening here so the username
198:58 - you see we passed in here right but I
199:01 - need to basically when I'm pushing I
199:05 - don't need to get the post username I
199:07 - need to get the user who signed in yep
199:10 - all right so what we need to do here is
199:13 - we need to go to app and remember we
199:15 - store the user who signed in inside of
199:17 - user right yeah so I go down and I go
199:21 - over to the what is it the post yeah
199:26 - here post right yeah I need to pass them
199:29 - the user so I passed the user through
199:30 - here okay yeah it's not what we're doing
199:35 - is we're passing the signed in user so
199:37 - we pass in the signed in user as well
199:39 - nice because this is the username of the
199:43 - person who wrote the post and this is
199:45 - the user who signed in yep right and now
199:48 - here I need to do as I say user don't
199:50 - display name to get their display name
199:54 - yeah yeah and then after that why do as
199:58 - I say set comment and then I just do
200:01 - like squiggly bracket so he's gonna
200:03 - basically clear the box so he looks like
200:04 - you know like when you enter something
200:05 - it just Claire's right yep exactly
200:08 - so with that said so why now we're not
200:10 - actually we could upgrade this one
200:12 - second we could do timestamp you do
200:15 - times down and then here
200:16 - do firebase dot fast or nice nice nice
200:20 - nice nice server because that's one
200:24 - thing we didn't have before and then we
200:25 - can even then order it by comments
200:28 - exactly a nice so here with you order by
200:31 - time some I think we might need to get
200:33 - rid of that one comment that we did and
200:36 - then we I think we have the most recent
200:38 - ones at the top or maybe at the bomb or
200:41 - either way we can mess around mother so
200:44 - firebase is not defined so here we go
200:46 - import firebase from firemen's yeah
200:50 - because that's from the actual
200:51 - dependency dope and now if you go down
200:58 - you should be able to see like okay so
201:02 - it's not showing the one that we have
201:03 - because right now that didn't have a
201:05 - timestamp so I think we actually need to
201:07 - go ahead and remove that one from the DV
201:09 - because it's breaking because it's
201:10 - trying to sort it and it can't find the
201:12 - timestamp remove oh yeah yeah yeah the
201:16 - one we had yeah got it
201:17 - yeah there's today that one and then
201:19 - this just pushed some new comments in
201:21 - with timestamps manually
201:27 - yeah no no no so now right now it's all
201:30 - [ __ ] up so now we can actually use the
201:31 - app yeah so let's go over to react and
201:36 - let's just type in so are you signed in
201:38 - by the way I don't know yet okay so yeah
201:44 - so you're not signed in at the moment so
201:45 - we need to protect against that exact
201:48 - issue okay oh yeah
201:51 - Tess 23 at gmail.com yes and now you're
201:58 - signed in so you say hey this is a
202:00 - amazing post also let's just oh there's
202:06 - a tween experience nice right
202:13 - nice okay love that all right so that's
202:18 - that's awesome and that's working and
202:19 - the reason why it says test guys is
202:21 - because that was his username when we
202:23 - signed up with that account yeah let me
202:24 - actually sign up
202:37 - alright prick that's uh nice anger Vesta
202:40 - thank you very much yeah
202:41 - thanks wow I love how without even like
202:45 - I sat click sign in then I I click
202:48 - register then I fully registered then I
202:52 - came in and I comment not only did I not
202:55 - have to deal with going to multiple
202:57 - different pages and like rerouting and
203:00 - redirection but like everything happened
203:03 - without even a refresh that's pretty
203:05 - insane yeah it's insane right and this
203:08 - is such a clean user experience it's
203:11 - gonna be really nice this is gonna be no
203:13 - headache it's an awesome yeah and it's
203:16 - all real time so like it's the best
203:18 - experience that they could possibly get
203:20 - on the user side yeah so awesome so that
203:22 - works really nice so we have comments
203:24 - now I guess then the next step is we
203:30 - could do that little trick where we
203:31 - showed the animation or what you were
203:34 - choosing what animation for you know on
203:38 - the tutorial although so we actually
203:39 - don't have the avatar showing in the top
203:42 - and right now you see that the header
203:44 - doesn't follow us down uh-huh yeah so if
203:48 - we go over to apt ocss that's a short
203:50 - little hack to get that working so I
203:52 - think you have to follow me again yep so
203:58 - good Abdur CSS so where we go to app
203:59 - underscore underscore header hold on
204:02 - again this is a it's not it's for some
204:04 - reason you're an app side CSS right now
204:06 - yep okay all right sorry I was in the
204:09 - wrong I was in a different code yep so
204:11 - this one here yeah yeah yeah header
204:13 - right so right now what we need to do is
204:17 - it says the header the one that says
204:20 - Instagram and logout yeah that one if we
204:23 - do something called position sticky all
204:26 - right and then we say top zero know what
204:29 - it's gonna do it's gonna stick to the
204:31 - top so now if we refresh and we check
204:33 - this out I don't think we need to
204:35 - refresh so if you go down look at that
204:40 - that's really clean right what does it
204:43 - is it working can you see that the
204:46 - header is actually sticking to it oh the
204:48 - header the head
204:49 - yeah yeah it is there that is clean okay
204:51 - that's what we were talking about cool
204:52 - now the Henry yeah you can see some of
204:55 - the elements are kind of overlapping as
204:57 - you scroll so so the little avatar with
204:59 - our that's overlapping it so get around
205:01 - that we just do a Zed index of one
205:04 - yeah and that will fit yeah
205:07 - fix what Wow someone goes Fulani said
205:10 - can't believe I've been here for more
205:11 - than three hours awesome
205:12 - watch the whole way through nice that's
205:15 - awesome thank you for being with us
205:17 - Fulani appreciate you yeah that's
205:20 - amazing oh yeah
205:22 - so Crofton robot reminded us guys fixed
205:25 - to add a comment bug when you're not
205:26 - logged in that's really good so right
205:29 - now what we actually do is we don't
205:31 - actually account for when you're not
205:32 - logged in which is why that error came
205:34 - up that's really good that someone
205:36 - pointed that out
205:36 - nice yeah so let's go ahead and go to so
205:41 - what we did in the previous build was we
205:43 - said if there was no user we basically
205:48 - we only show this comment box if you
205:50 - logged in so we say user and and and we
205:53 - basically do it like this so I grab this
205:56 - and I just chuck it in here and then
205:58 - basically I make this indented like this
206:02 - okay there we go
206:05 - and then basically now what we're gonna
206:06 - do is if you're logged out so notice how
206:08 - he's got the comments he can comment
206:11 - right now but as soon as you click
206:12 - logout watch what happens to the comment
206:14 - boxes are nice are gone yeah they're
206:19 - completely gone right yeah and I think
206:23 - we're also doing that for the image
206:24 - upload we also say on the image upload I
206:26 - don't think we've starred that properly
206:28 - but if you go down it should say yeah so
206:33 - why no it says need to login to upload
206:34 - nice okay awesome
206:37 - so I guess right so what's the next step
206:40 - should we do I think at this point we're
206:43 - ready to push it to firebase yeah let's
206:47 - do it
206:47 - so now what we want to do is and also
206:51 - guys just a quick reminder so if it
206:52 - cause if you go ahead and click the
206:55 - little write so you see like when we
206:58 - pulled in that code for
207:00 - the Instagram embed it actually gives us
207:03 - a playable video and you can actually
207:05 - click on this story icon on the under oh
207:08 - yeah right yeah yeah and all of us
207:11 - functional and it's working so
207:13 - everything actually works when you do
207:14 - that so here we've got some people
207:16 - reshooting stories of everything that we
207:18 - done yesterday so that's pretty cool and
207:21 - everything works guys and that's really
207:24 - nice because it's lit so let's head back
207:38 - I love the way hold on this guy turns
207:41 - the camera around and that's that I love
207:44 - them that's awesome guys if you guys do
207:47 - that we love seeing that because it kind
207:49 - of just gives us if we can sometimes see
207:51 - like a hundred people three hundred
207:52 - people watching but when you do that it
207:54 - suddenly becomes real yeah up until then
207:57 - is just like it's not real it's just
207:59 - like numbers and we don't know like I
208:01 - mean it's cool we see your comments and
208:03 - we engage with you but it's still not
208:04 - it's just text message with your avatar
208:06 - next to it and that's kind of it but
208:09 - like when you go actually send a video
208:11 - on Instagram or whatever that's what
208:13 - makes it like actually real exactly
208:17 - exactly
208:20 - nice so the next step I guess is just
208:24 - deploy it yeah let's get this thing up
208:26 - in the air like okay so right now so
208:28 - let's see let's actually write that so
208:30 - working on deploying our Instagram app
208:39 - okay awesome so this is actually much
208:46 - easier than we would think and it's a
208:49 - really saw again it's just it's just a
208:50 - crazy powerful how this works nice I
208:55 - like that so final step nice so now what
209:02 - we're gonna do is let's head over to
209:05 - your terminal Kazi so if you open up a
209:07 - second terminal it might be easier
209:08 - mm-hmm oh we could stop the app I mean
209:11 - it doesn't doesn't really make it
209:13 - much difference okay so let me open I
209:16 - always know it's when we when we rebuild
209:18 - these apps we actually do it cleaner in
209:20 - the action tutorial it looks really
209:21 - clean right now yeah we do it better
209:23 - life
209:24 - because the pressure is on yeah yeah
209:26 - it's really nice and uh awesome so now
209:29 - we've got time to open so what we need
209:32 - to do now guys is if you're doing this
209:33 - fresh you need to do firebase login and
209:36 - so I think we should demonstrate that
209:39 - maybe so firebase log out first so I
209:43 - think you already logged in right now so
209:44 - yes I will just log out and this would
209:46 - be where you guys are at so when we
209:48 - initially set everything up you would
209:50 - have seen that there was a point where
209:52 - we had to do install and we had to
209:54 - install firebase tools
209:56 - globally so you're gonna have to do that
209:58 - in order to do this next steps and then
210:00 - you want to do firebase login yep and
210:06 - you just want to press Y and then it
210:10 - will pop up as a browser nice awesome
210:16 - and there you go you know redirect and
210:18 - no login so the next step is doing
210:20 - firebase in it alright and here what we
210:26 - do is a nice CLI pops up so we just need
210:28 - to go down with the arrow keys and press
210:30 - space on hosting and this bit guys you
210:34 - have to pay really close attention to so
210:36 - click on use an existing project and go
210:41 - to Instagram Chrome and here is the
210:44 - important part guys so this point you
210:46 - have to type in build right this is a
210:48 - react step nice this is a react step
210:51 - that you just you can't mess this one up
210:53 - it has to be built otherwise you're
210:55 - gonna run into a bunch of headache so
210:56 - this has to be built and then this hit
210:59 - enter and then the next question here
211:02 - you want to click on why so yes because
211:04 - we are configuring a single page at
211:07 - react is a single page app yeah and yeah
211:11 - we're pretty much done with everything
211:13 - guys and we're just moving this is our
211:15 - final step so just to reiterate we have
211:17 - done everything in this app already the
211:19 - ability to add comments upload images
211:23 - the styling the header the sticky header
211:27 - all of that is done user authentication
211:29 - is also done we're just on the final
211:31 - stuff to deploy this app so here's one
211:34 - for you guys let's keep it guys we
211:42 - appreciate it that was a real nice
211:43 - little session we had the yeah awesome
211:47 - so that's it so we initialized
211:49 - everything there and now what we want to
211:51 - do is there's two steps we need to do
211:53 - all right so we if we want MPM run build
211:57 - that's the first step we have to M what
211:59 - this is gonna do guys is when we one
212:01 - react okay I think it's I gotta be in
212:08 - Instagram clone yeah yeah that's right
212:11 - do I have to do the whole build I have
212:13 - to do the whole build again right should
212:20 - I delete the build I don't think you
212:24 - would've created it yeah it has created
212:27 - it it's not it's outside here oh oh yeah
212:32 - it's create an empty one yeah we can
212:34 - delete that and even the see outside
212:36 - firebase are seeing leave decay ignore
212:39 - firebase Jason maybe yeah remove the
212:42 - firebase yeah it won't break anything
212:45 - for now though it won't break anything
212:47 - for now so remove this yeah no you don't
212:52 - need to worry about that for now okay
212:54 - cool there's just CD into the photo and
212:56 - then we just restart the process and it
212:58 - will find the one that we're talking
212:59 - about yes we do firebase in it awesome
213:07 - we just do those steps again so we go
213:09 - down to hosting yep
213:15 - and that's to let me say build this step
213:19 - and then we say while you do that
213:22 - someone says one of the best tutorial
213:24 - program one of the best tutorial best
213:27 - programmers cheers to you guys
213:28 - thank you very much Michael gags awesome
213:32 - yep so now in NP remember guys what this
213:35 - does is it essentially just bundles the
213:39 - app in the most efficient way so it's
213:40 - gonna strip out all of the hot reloading
213:42 - all of those sort of extra things that
213:44 - we don't need in the production version
213:46 - so that way it's very fast it's very
213:48 - lightweight and it pushes all of that
213:51 - inside build um I don't think that's the
213:53 - one cause I think it's inside Instagram
213:55 - clone oh yeah my bad I deleted that one
213:59 - then if you click the little refresh if
214:02 - you click the little refresh button on
214:03 - the right you see that top right I'm
214:05 - still there
214:06 - weird there we go
214:09 - so there you go everything got built
214:12 - into that one right yeah right here huh
214:14 - that's it and you have to do that first
214:16 - guys otherwise and even if you change
214:18 - things you have to do that so next what
214:20 - you want to do is you want to run
214:22 - firebase deploy Thank You Sarge Enza
214:25 - thank you sergeant
214:26 - we mine the real name actually sergeant
214:28 - snow oh really yeah SWA J that's funny
214:34 - dude
214:35 - all right are we doing this or what yeah
214:39 - pastor bro this is the main sort of
214:41 - finale whoa specified public directory
214:48 - build does not exist okay so in that
214:50 - case let's delete the JSON based off
214:53 - yeah delete those ones cuz it's looking
214:56 - at them I'm assuming firebase are C as
214:57 - well yeah this to lead up yeah and I'll
215:02 - try it could not locate it v is so if
215:06 - you go into source source
215:10 - yep sauce oh I think what I think what
215:15 - it's done here is because we want in the
215:17 - correct thing to do 5/8 in there again
215:19 - now yeah I think it didn't add it in the
215:22 - right place yeah I think it went to the
215:24 - previous place right so the host thing
215:33 - there we go Instagram clone nice build
215:43 - override it yes yep and now we got the
215:50 - firebase or we got dog yeah we got
215:52 - everything here so if you guys do want
215:55 - to that issue don't freak out and panic
215:57 - just just literally go for the same
215:59 - steps because I guarantee some people
216:00 - watching it will actually run into that
216:02 - you know yep yep yep so these pads got
216:05 - messed up you know like this and this
216:07 - you know even probably this got messed
216:11 - up
216:11 - yeah so now what we need to do is
216:15 - literally firebase deploy and boy it
216:18 - will do guys is it literally takes that
216:20 - build photo the one that we just
216:21 - prepared and you see it has found 18
216:23 - files and guys it just deployed like it
216:26 - was that quick holy crap I am
216:31 - that's there all that hard work and it's
216:33 - literally just been deployed so let's
216:35 - double check
216:36 - oh okay so maybe that's strange
216:41 - okay so let's do that means that we
216:43 - didn't do our build properly so let's go
216:45 - ahead and do em p.m. Rob bill oh yeah
216:48 - maybe we didn't run yeah we I don't
216:50 - think we did the build right after it
216:51 - did it properly we didn't run the build
216:53 - again yeah so it hasn't actually done
216:56 - that Craig cuz I'm just double-checking
216:58 - we are shooting from the build folder
217:01 - yep and we have the build folder the see
217:05 - where it does it so so I'm deploying
217:07 - again but right now we have no build
217:11 - folder
217:11 - Kazi so it's right here that would do
217:15 - the refresh trick so you take that
217:16 - little refresh button uh-huh it's right
217:18 - here it's inside of Instagram clone out
217:27 - of sync or that's right here look it is
217:31 - it's up hey guys what is uh come on
217:36 - [Music]
217:38 - thank you thank you thank you guys we
217:41 - got you okay actually looks nicer than
217:48 - what we built first I like that yep and
217:51 - it's up so people can sign up you guys
217:53 - can use it actually right now yes you
217:56 - can go ahead to that URL and I'll go
217:58 - find the comments in YouTube all right
218:05 - so what's the deal we are we have yeah
218:11 - Crafton says it works he's pumped
218:13 - awesome
218:15 - all right so encoding fountain says
218:17 - fabulous nice all right so we just
218:21 - deployed the app look everyone's
218:24 - checking out to say WOW fantastic nice I
218:26 - love seeing everyone's reactions when it
218:28 - comes through to this point nice awesome
218:31 - yeah you guys can feel free to just go
218:33 - on our website and I'll play around with
218:35 - it oh yeah that's cool - yeah see their
218:39 - reactions that's actually awesome yeah
218:42 - and what's amazing guys is that that is
218:44 - literally
218:45 - that's completely scalable as well so
218:48 - that is a case of like even if a million
218:50 - users came onto this website right now
218:52 - we don't have to worry about scaling
218:54 - everything works from the get-go
218:55 - is using react it does efficiently yeah
218:58 - people are signing up they're like hey
219:00 - woohoo hot Feli peace 96 that is pretty
219:05 - awesome hey oh here we go nice fun fun
219:09 - yeah that's all I think we always forget
219:13 - to block yeah yeah please don't spam
219:18 - guys but okay awesome so I mean
219:21 - everything is covered we've built this
219:23 - complete app it's an Instagram clone
219:25 - just remember you guys have firebase
219:27 - authentication the database is already
219:29 - hosted it's real-time there's a two way
219:31 - sync it has I mean the only few things
219:35 - it doesn't have is like crud
219:36 - functionality but like on Instagram you
219:38 - don't have that like you cannot go and -
219:41 - well you can actually go and delete your
219:43 - all your things right and edit things so
219:45 - that would I guess if people want a part
219:47 - - we could build that in part - yeah we
219:52 - can make it yeah we can make it so that
219:54 - we could delete our own posts so we push
219:56 - yeah yeah delete your posts or edit your
219:58 - posts that you have so things like
220:00 - that's um that's something if you guys
220:02 - want we could do it but hopefully you
220:04 - guys have enjoyed what we have built in
220:06 - the last three to four hours hopefully
220:09 - you guys have had fun thank you guys so
220:12 - much for being a part of this and then
220:13 - giving us all your awesome comments -
220:16 - did you see somebody added a picture
220:18 - okay oh that is cute yeah I see that so
220:22 - nice that is awesome yeah we hope you
220:26 - guys enjoyed that and like we said like
220:27 - just drop comments let us know literally
220:30 - we we are happy to build what you guys
220:32 - are interested in and this was a nice
220:34 - little challenge for us it was a case of
220:35 - we just thought of it and we just went
220:37 - with it yeah I'm so yeah like any ideas
220:39 - just show us if you make us Instagram
220:42 - video telling us what your ideas we're
220:44 - probably just gonna pick that one person
220:46 - because most likely honestly out of
220:48 - everybody who watches hundreds of people
220:49 - watch one person actually sends a video
220:53 - or Instagram message so it's like we go
220:56 - with that person's go
220:57 - plan so it's like if they're like yeah
220:59 - you guys build this we're like okay
221:01 - we'll build an Instagram clone so if you
221:03 - guys reach out to us and you're like hey
221:05 - maybe Netflix clone next or a Twitter
221:07 - clone next or whatever then that's
221:09 - probably what we'll do but just make
221:11 - sure you guys yeah you know take an
221:14 - Instagram video and actually like send
221:16 - it to us yeah so just shoot an Instagram
221:19 - story tag me in cause the in the and
221:22 - that's how that's the easiest way for us
221:24 - to reach out and see what you guys are
221:26 - thinking see what you guys are feeling
221:28 - when it comes to this stuff also if you
221:30 - guys enjoyed that make sure you do check
221:32 - out the course because we have a little
221:34 - sale going on right now we're cozy yes
221:36 - we have a sale going on right now guys
221:38 - so you're gonna save a lot if you join
221:41 - now because we were doing the sale for
221:43 - 4th of July but you know our team has
221:46 - kind of been lazy and has hasn't updated
221:48 - it back to the full price so miss Dale
221:51 - is the sale is still probably on for
221:53 - today and then after today it's gonna be
221:55 - back up to a higher price so go to the
221:59 - link in the description right now and
222:00 - take advantage of the 4th of July sale
222:02 - and join the profit or JavaScript course
222:04 - where we're gonna be building all these
222:07 - projects and teaching you how to make an
222:08 - income with it
222:10 - awesome awesome
222:14 - ok love you guys take care and we'll see
222:17 - you in the next video peace guys also