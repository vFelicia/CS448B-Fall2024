00:00 - in this video we're going to be building
00:01 - the solidity stock prediction that with
00:04 - next.js we're going to be using infuro
00:07 - to build this app on the ethereum
00:09 - blockchain you're going to be able to
00:10 - make bats on whether a stock price will
00:13 - be going up or down with that said let's
00:15 - go ahead and get started all right let's
00:17 - get started as usual with the CLI tool
00:20 - so let's just run it email name and this
00:25 - is the solidity prediction dap so while
00:28 - it gets started usually if you're a sign
00:31 - up if you haven't done it already do
00:34 - that already create an account they are
00:36 - amazing
00:37 - and go ahead create a web 3 API just
00:40 - name it whatever you want to in this
00:42 - tutorial I'm gonna name it prediction
00:44 - dap
00:45 - and so there's your API key we're going
00:48 - to be using that later and then our CLI
00:50 - tool is about to finish so once it does
00:53 - it will open your vs code automatically
00:57 - for you so
00:59 - this is pretty much it this is your
01:01 - contacts file and let's move on to the
01:03 - next step
01:04 - okay so let's go ahead create our
01:07 - contract which is going to be
01:08 - stockprediction.sol
01:10 - and as usual we need our spdx license
01:13 - which is going to be MIT and the
01:16 - solidity version will be 0.8.0 and then
01:19 - let's go ahead start creating our
01:21 - contracts so initially we're just going
01:23 - to create all the states variables and
01:25 - structs that we're going to be using in
01:28 - this project so we're going to have an
01:30 - owner which is going to be address we're
01:33 - going to have a uint which will be the
01:36 - prediction start timer and obviously an
01:39 - end timer
01:40 - and we're going to have a current price
01:42 - and we're going to be using int instead
01:45 - of uint and that's because int can be
01:48 - negative
01:49 - and not just a positive
01:52 - now we're going to create our mapping
01:54 - we're going to be mapping addresses to
01:56 - ins that's going to be the bets
01:59 - and we're gonna we're gonna create an
02:01 - array of addresses and those will be the
02:04 - best and then another mapping when we're
02:06 - going to be mapping addresses to ewins
02:09 - and that will be the BET amount so
02:12 - basically what we're doing here with
02:13 - these beddings is the people who are
02:16 - betting we're gonna be mapping the
02:20 - ID of the bad Tech to these addresses
02:24 - and then the amount how much they betted
02:26 - will be also mapped to these addresses
02:30 - now let's go ahead and create a last
02:33 - check time
02:35 - and a is betting active variables as
02:39 - well the last one is going to be a Bool
02:41 - first one is going to be a uint then
02:43 - we're gonna also save the last winner
02:45 - and now we're gonna get on to make the
02:48 - struct so the first one is going to be
02:49 - the BET where we're going to be saving
02:51 - the better batteries address and the
02:54 - amount so it could be positive and
02:56 - negative as well and then the bad info
02:58 - again the address the amount or the
03:03 - better address the amount that amount
03:07 - and we're also going to create a
03:10 - Constructor
03:12 - so the owner initial is obviously going
03:14 - to be the message sender so whoever
03:15 - deploys the contract and then the
03:18 - prediction and time will be block
03:20 - timestamp block times 10 plus 5 minutes
03:23 - meaning after the contract is deployed
03:26 - you people have five minutes to bet on
03:29 - the app and then the is betting
03:32 - and then the batting batting by default
03:35 - is going to be false
03:37 - all right so that's it for now let's
03:39 - move on to the next step
03:41 - check
03:42 - okay so now we're gonna fetch all the
03:44 - bets that have current currently been
03:47 - made so we're gonna create a function
03:48 - get all bets it's gonna be a public
03:51 - function that will return a bat info
03:53 - array from the memory
03:56 - so we're gonna create a all back array
03:58 - that'll have a bat info struct
04:02 - and now we're gonna go through and loop
04:04 - through all the Batters so oh and we
04:08 - basically all we're gonna do is we're
04:09 - just gonna save all the attributes into
04:12 - all bats so what we're doing is for
04:15 - better amount and bat amount we're
04:18 - literally just grabbing all the data
04:20 - from every single bet and because we're
04:23 - later gonna be saving them that's how
04:25 - we're gonna be getting them so that
04:27 - being said let's go ahead and test it
04:29 - and
04:31 - the usual drill open up remix
04:35 - in your vs code and now what we're going
04:38 - to be doing is we're going to go ahead
04:39 - and deploy this contract now
04:42 - let's see what do we have
04:45 - for some reason it didn't deploy oh and
04:47 - that's because there is a
04:49 - typo on line number 10 so after fixing
04:53 - that let's see what we've got and we
04:55 - should get a empty array and that is
04:58 - perfect if you get that you are good to
05:00 - go
05:01 - Okay so
05:04 - now we're gonna make sure that users
05:06 - will be able to get started betting
05:08 - because if you remember by default the
05:11 - is betting active is false so
05:15 - let's go ahead and make a function and
05:17 - call it start prediction and it will
05:19 - have an argument that will be an INT
05:21 - which will be current price
05:24 - let's close that and it will be a public
05:26 - function so
05:28 - it will need to be the owner who starts
05:31 - it because obviously only the owner is
05:33 - supposed to start these bets and we're
05:36 - gonna set the current price to the
05:39 - current price that we pass in
05:42 - after that we're gonna go ahead and set
05:45 - the prediction start time to the block
05:48 - blocks current timestamp and the end
05:50 - time to whatever is five minutes after
05:53 - that
05:54 - so let's set that and after that we're
05:58 - going to set the is betting active to
06:00 - true
06:01 - now next up we're going to create a
06:03 - function which will be enter bet that
06:06 - will allow the users to make a
06:08 - prediction and so that's what we're
06:10 - going to be passing in it'll be a public
06:12 - payable function and will require that
06:15 - the current timestamp
06:17 - of the block is less than the prediction
06:21 - end time meaning
06:23 - the prediction has to be active
06:25 - otherwise we're going to send a error
06:28 - message
06:28 - now we also require that the user sends
06:31 - at least
06:33 - .0001 eth otherwise like it's just such
06:37 - a low amount of money that we don't take
06:39 - those bets seriously so that's a better
06:41 - amount and we're gonna save that to the
06:44 - message sender in the mapping and we're
06:47 - going to go ahead and push the better
06:50 - or better's address into the Bettors
06:54 - array and we're also going to save we're
06:57 - also going to map the value
07:00 - to the message sender's address so the
07:02 - current batters address
07:04 - and with that said let's move on to the
07:06 - next step
07:07 - alright so now we're gonna make a couple
07:10 - of helper functions that we'll be using
07:12 - later on so
07:14 - that's where we're going to be
07:15 - finalizing the prediction don't worry
07:16 - about that part we'll figure it out so
07:18 - help your functions
07:20 - we're going to have one that resets the
07:22 - last winner and
07:24 - that's all it's gonna do so it will be a
07:26 - public function and obviously the owner
07:29 - has to call this function and literally
07:32 - all it's going to do is it's gonna say
07:34 - last minute or equals address zero done
07:38 - all right next up we're gonna have an is
07:40 - prediction over a function that
07:42 - literally just checks whether the
07:44 - current block timestamp is more than the
07:46 - prediction end time meaning have we
07:49 - passed the end of the prediction and
07:52 - we'll return true or false based on
07:55 - whether it's true or not now we're going
07:57 - to also have one that Returns the pull
07:59 - amount which is literally just the
08:01 - balance of this current address
08:04 - and we're gonna have one that helps us
08:07 - find the absolute difference between two
08:10 - numbers so we're going to be passing
08:12 - into ins one of them X and Y and then
08:15 - we're gonna see which one is bigger or
08:17 - yeah bigger than the other or larger
08:19 - than the other and then if x is larger
08:22 - than x minus y if Y is larger then we're
08:26 - going to send back y minus X so
08:30 - that's literally it
08:32 - alright so let's finalize the prediction
08:35 - so we're gonna have a finalist
08:37 - prediction function which will take in
08:40 - the current price now
08:43 - we'll need to make sure that the block
08:45 - timestamp has to have or the
08:48 - when we finalize the prediction the
08:51 - block timestamp has to have already
08:52 - passed the prediction and time otherwise
08:56 - we will have to throw an error
08:58 - and we also want to make sure that the
09:00 - betting is active at this point because
09:03 - only active bettings can be deactivated
09:06 - if you're only saying
09:08 - now we're just going to initialize a
09:11 - couple of values here so just like in a
09:13 - regular sorting algorithm we're going to
09:15 - create a closest prediction a state
09:18 - which is just gonna be the first bet who
09:21 - cares and then we're gonna go to closest
09:23 - distance and we're gonna calculate it
09:26 - and we're gonna pass in the current
09:28 - price and the closest prediction in
09:30 - there and we're also going to set the
09:32 - winner now this is where the trick comes
09:35 - in because this is where we're going to
09:36 - Loop through all the best and we're
09:39 - gonna update the these closest
09:41 - prediction closest distance and winner
09:44 - based on whether the current distance or
09:48 - the current bets distance is less than
09:51 - the current closest distance so that's
09:54 - what we are doing here in this for Loop
09:56 - and then we're gonna update the winner
09:58 - as well
10:00 - you want to also make sure that the
10:02 - winner is always payable because you
10:04 - cannot reset it later you can but there
10:07 - are like complications with that which
10:09 - we don't want to go into right now after
10:11 - that we're gonna We want to make sure
10:13 - that the pool is not empty meaning at
10:16 - least there is one bat that has a valid
10:19 - value now after that we'll also make
10:22 - sure that the winner is not just an
10:24 - address zero
10:25 - and if those two are good to go then
10:28 - we're going to transfer the pool's
10:31 - balance and about everything in there to
10:34 - the winner and then we're basically
10:36 - going to update the last winner and then
10:38 - just reset everything so
10:40 - prediction start time prediction end
10:43 - time current price is betting active and
10:45 - everything we just go and reset it and
10:48 - we're gonna do the same thing with
10:49 - batters as well but we have to do it one
10:52 - by one so we gotta Loop through that and
10:55 - once that is done
10:57 - we're just gonna reset
10:59 - the Batters rate as well
11:02 - and that is finalizing the prediction
11:04 - let's move on to the next step
11:06 - all right so now we're gonna go ahead
11:08 - and deploy this contract so
11:11 - let's take a look at what the
11:14 - so let's take a look at what the first
11:15 - step will be so let's go ahead and just
11:18 - to connect to our inferior Network and
11:21 - the project should show up if you don't
11:23 - have it just sign into your infuro
11:25 - extension and you should be good to go
11:28 - now let's go ahead deploy again with the
11:31 - extension and then just select the girly
11:33 - Network that'll be the easiest and I
11:36 - believe the only one that's still
11:37 - working
11:38 - so let's see what do we got
11:40 - all right so now it says that in line 91
11:44 - there's a u in instead of a u in so
11:47 - let's fix that should be good try again
11:50 - okay now message value
11:53 - something's not okay there let's check
11:55 - it out let's see what do we got
11:58 - oh we gotta put in The Ether
12:00 - let's try again now the current price is
12:03 - not okay
12:04 - on line 61.
12:07 - it would be a great idea if we if we
12:10 - defined it so let's do that let's try
12:13 - again let's see if it finally works and
12:15 - it looks like there's a weird error
12:17 - going on
12:18 - so we actually took some time to figure
12:20 - it out and basically on infuria you
12:23 - shouldn't really put space in the
12:26 - project name because that could cause
12:27 - errors so let's just remove the space
12:30 - and then we should be good to go
12:32 - disconnect from it reconnect and it
12:34 - should be good and now if you deploy
12:38 - again it will go through and it will be
12:40 - perfect so
12:42 - once you're done there is your contract
12:45 - address and if you see that you're good
12:47 - to go that's it let's move on
12:50 - okay so if we're done
12:52 - deploying we're gonna go ahead and copy
12:55 - that address and then just paste it
12:58 - into our contract.js so that way it is
13:01 - updated
13:02 - and we should be good to go
13:06 - now one more thing what you want to do
13:08 - is go into your build contracts and then
13:10 - just copy the file over into your utils
13:13 - folder that's your API no need to worry
13:16 - about it it just helps you interact with
13:18 - the contract itself
13:20 - okay so let's start fetching those bets
13:23 - so let's just go ahead and spin up our
13:25 - app so this is how it looks like
13:27 - everything works metamask quality
13:29 - connects super nice changing wallets
13:31 - nice okay let's go into our context I
13:34 - have a couple of pre-made functions for
13:37 - you so you can just go ahead and fill
13:39 - those out or fill out the blanks and
13:41 - then you're good to go so inside of
13:43 - fetchpets there is a try catch function
13:46 - it'll start working in there so we're
13:48 - gonna go ahead and pull in the contract
13:50 - using the create contract object
13:52 - function that we already imported for
13:55 - your convenience
13:56 - so there it is super nice it already
13:59 - uses it it already uses the address that
14:02 - you just popped in there so that's cool
14:05 - and now we're gonna do is we're gonna
14:07 - say bets equals weight contract dot get
14:11 - bet so we're already using the contract
14:13 - that we just freshly deployed so that's
14:15 - nice
14:17 - and we're gonna say formatted bats and
14:20 - we're gonna Loop through all the bets
14:22 - and each bet what we're gonna return is
14:26 - we're gonna basically we're just gonna
14:28 - organize them into like objects so we're
14:31 - gonna get the address
14:33 - the amount in a string
14:36 - and we're gonna
14:38 - get the BET amount will have because
14:41 - it's a big number we'll have to format
14:43 - it into string
14:45 - so that we can convert it into eth once
14:49 - we converted it into eth we'll need to
14:51 - convert it to a number so that we can
14:54 - fix it and make sure that it only has
14:56 - two decimals so that's a little nasty
14:59 - just pause the video and then copy and
15:02 - now we're going to update the you state
15:05 - and we're just going to go ahead and
15:07 - console log it so that we can double
15:09 - check that it works and inside our use
15:13 - effect that is getting fired every time
15:15 - is betting active is being changed we're
15:18 - just gonna fetch the bets and that
15:20 - should be good so let's take a look at
15:22 - how it looks like so I'm going to open
15:24 - up my console and there it is there is
15:27 - the array that is empty so that means
15:29 - the uh
15:30 - the fetching works
15:33 - alright so now we're going to go ahead
15:35 - and fetch the owner and the pool so
15:38 - let's go ahead and start filling that
15:40 - out so usual let's create the contract
15:42 - and then the owner will be await
15:45 - contract dot owner and then we're gonna
15:47 - go ahead and just update the you state
15:50 - and then again we're going to run that
15:52 - function every time the is betting
15:55 - active is being updated
15:57 - we also want to go ahead and close the
15:59 - login let's go ahead test it out and
16:01 - there is the contract owner address
16:04 - which is because it's my wallet because
16:07 - I just deployed it all right let's move
16:09 - on to the next step which is fetch pool
16:12 - it's gonna be very again there is your
16:15 - function just import contract and then
16:17 - who will be contract that gap pool
16:19 - amount and then we're going to convert
16:21 - it to eth and then update the price so
16:24 - let's take a look at how that looks also
16:26 - you want to fire it off in the use
16:28 - effect
16:29 - and there should be your big number
16:33 - there should be your
16:35 - amount so with that said we are pretty
16:38 - much good for this step
16:40 - okay so now we're gonna do a little bit
16:43 - of a complicated stuff so there's this
16:46 - other use effect
16:48 - so basically what here we're going to be
16:50 - doing is we're going to run it every
16:51 - three seconds and we're just gonna check
16:53 - if the betting is over so let's just do
16:56 - that real quick so that's your function
16:59 - to check if the betting is over yet or
17:01 - not and if it is then we're gonna go
17:04 - ahead and grab the is over from the or
17:07 - the is prediction over from the contract
17:11 - and basically we're just gonna go ahead
17:13 - and
17:14 - reset the timer
17:16 - clear the timer and we're gonna go ahead
17:19 - and finalize the bedding stop everything
17:21 - where it's at and grab the latest winner
17:25 - that way we can start sending the money
17:28 - to to the winner so that should be
17:31 - pretty much good to go however if the
17:35 - betting is not over that's the part
17:37 - that's being written right now
17:39 - then we're gonna go ahead and reload
17:42 - this same exact functionality again and
17:45 - come back to it again in three seconds
17:47 - so that is pretty much all it is let's
17:50 - just add a couple of console logs just
17:52 - so we can make sure that everything is
17:55 - Gucci and we can see what's happening so
17:58 - we're gonna add checking status and all
17:59 - that stuff
18:00 - and there it is it shows up that we are
18:03 - checking the status now let's add one
18:05 - more thing let's just let's let's just
18:08 - console log the is active so we should
18:10 - see a bunch of falses every three
18:11 - seconds and there it is it shows up and
18:13 - it keeps updating so with that said
18:15 - let's move on
18:17 - okay so now we're gonna go ahead and
18:20 - implement the start prediction
18:24 - so
18:25 - usual grab the contract from the usual
18:28 - place and we're gonna have a another
18:30 - contract interaction so we're gonna call
18:33 - the start prediction function in there
18:35 - so
18:36 - we're gonna turn the coin coin price
18:38 - into way so we're gonna attach basically
18:41 - 18 decimals
18:43 - and set the gas limit to 80 000.
18:48 - now we're gonna go for and go over and
18:50 - get the receipt so the usual
18:52 - result.weight and console log that just
18:55 - to make sure the contract interaction
18:57 - went through and every time we start the
19:01 - prediction we want to go ahead and reset
19:04 - the last winner so we're gonna do that
19:06 - as well
19:07 - so let's go ahead and test it out
19:10 - and if you can see in a little bit I
19:13 - just hit the start betting button and
19:17 - the contract interaction is going
19:19 - through and
19:20 - confirm
19:22 - and now it's pending
19:24 - and it will finish in a little bit so
19:27 - let's see what do we got
19:29 - and there you go the betting betting
19:32 - right now is active
19:35 - and basically I'm not going to bore you
19:37 - with that but I was sitting around there
19:39 - for five minutes and as you can see at
19:42 - the end the betting is over so that
19:44 - seems to be working as well let's go
19:46 - ahead and now enter the BET okay so
19:49 - let's finalize the prediction right now
19:51 - so what we're gonna do is we're just
19:53 - gonna call the contract function that
19:56 - we've already written
19:57 - so we're going to say finalize betting
19:59 - or finalize prediction and then we're
20:02 - gonna have to pass in the current coin
20:06 - price so that the algorithm can decide
20:08 - who won and who didn't
20:11 - and obviously in a way so we're gonna
20:13 - set the gas limit to 200 000.
20:16 - so that's good
20:19 - and let's see what do we got so if
20:23 - everything is okay
20:25 - the automation or the app should pop
20:28 - open our metamask and as you can see
20:30 - there it is now we're gonna go ahead and
20:33 - hit confirm on it and so now it's just
20:36 - going through and the funds will be
20:39 - transferred in a second and we're gonna
20:40 - see in the con in the console how the
20:43 - betting is over
20:45 - and there it is now it says false so
20:48 - that means the betting is over that only
20:51 - means one thing that we have to now
20:53 - fetch the last winner
20:55 - and so we're gonna do that with the
20:57 - usual contract interaction and we're
20:59 - gonna say contract.last winner that will
21:02 - fetch it for us and then we're gonna
21:05 - set it to the U state so we're gonna
21:08 - truncate it so that way we don't see
21:11 - like the entire big address we're just
21:13 - seeing like the important part the
21:15 - beginning and the end
21:17 - and we're gonna run that function
21:19 - and that should in theory go through so
21:23 - let's go through the whole process again
21:25 - so I'm going to go ahead and start a new
21:28 - bedding
21:29 - hit confirm on it and it will get
21:32 - started in just a little bit
21:34 - now the batting is active so that's good
21:36 - let's make some bats here now let's use
21:39 - a different account and make another bet
21:41 - and let's see what happens
21:43 - so you want to make sure that when
21:45 - you're testing it your bet is different
21:47 - from two separate accounts so that's
21:50 - something important to keep in mind and
21:53 - now let's use the admin account again to
21:56 - finish the betting and it will pop open
21:58 - automatically we cut it out but
22:01 - basically we set it out and so there it
22:04 - is the funds will be confirmed if you
22:07 - can see the funds are sent and there it
22:10 - is in the middle the last winner is
22:13 - being updated so that is the app thank
22:16 - you so much for watching I hope you make
22:18 - a lot of views
22:20 - I hope you got a ton of value out of it
22:22 - and with that said I'll see you in the
22:24 - next one peace