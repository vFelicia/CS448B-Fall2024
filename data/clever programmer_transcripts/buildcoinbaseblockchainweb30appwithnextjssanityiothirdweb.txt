00:00 - in this video you'll build a coinbase
00:02 - blockchain web 3.0 app with nexjs you
00:06 - will style this app using styled
00:08 - components after you'll learn how to
00:10 - create and emit your very own tokens
00:12 - using the third web sdk we'll then add
00:15 - web 3.0 authentication so users need to
00:18 - log in using metamask we will use sanity
00:20 - io as our database where you'll store
00:22 - your freshly created tokens and include
00:24 - info about them including their usd
00:27 - price conversion and their logos will
00:29 - build the front end and update the
00:30 - portfolio balance and also add send and
00:33 - receive modals based on the data from
00:35 - sanity and the blockchain using third
00:37 - web you'll learn advanced skills like
00:39 - how to use grok with sanity's api to
00:42 - actually retrieve your data we'll then
00:44 - add the functionality to send and
00:46 - receive your tokens on the blockchain
00:48 - using the front end you just built with
00:50 - nexjs finally we'll deploy this app
00:53 - using versailles and host your app on
00:55 - the internet so are you ready let's do
00:57 - this
00:58 - [Music]
01:03 - with all of that said let's just get
01:05 - right into it and demo the app right now
01:07 - so here's my app now notice that i can't
01:10 - log in i have to actually connect my
01:11 - wallet boom i click that my meta mask
01:13 - pops up and i will hit next and connect
01:16 - once the connection is done you'll see
01:17 - that my app automatically opens up and
01:20 - retrieves all of my tokens and coins
01:22 - from my meta mask or my sanity database
01:26 - that i have but if you look here it's
01:27 - pulling my four bitcoin and my two
01:30 - ethereum and it's actually telling you
01:32 - exactly what my portfolio balance is now
01:35 - let's say i were to sell off one of my
01:37 - bitcoins well since one bitcoin is about
01:39 - forty thousand dollars you should expect
01:41 - my portfolio balance to drop by about
01:43 - forty thousand so let's go ahead and
01:45 - give that a try i'm gonna hit send and
01:47 - receive beautiful modal pops up and i
01:49 - will go ahead here and i'll i'll type in
01:52 - address and for this address i have
01:54 - actually created another account in my
01:57 - meta mask so i'll just go to that
01:59 - account and it's just called receiver
02:00 - coinbase i'm just using this to send
02:02 - coinbase to it okay or tokens to it i'll
02:04 - copy this and i'll paste that address
02:06 - right here and instead of ethereum and
02:08 - notice it actually pulled exactly how
02:10 - much ethereum and bitcoin i have and
02:13 - again this is pulling all of that from
02:14 - the blockchain right so boom all of this
02:17 - how freaking cool is that by the way
02:18 - like first of all i think it's so
02:20 - freaking exciting so now let's say i
02:22 - click bitcoin i go send one bitcoin to
02:25 - that address we'll hit continue and now
02:27 - watch this transfer in progress and once
02:29 - it's completed it will actually turn
02:31 - green let's give it a couple of seconds
02:33 - boom it was set successfully let's go to
02:36 - my meta mask and let's take a look and i
02:39 - have received the one bitcoin right
02:41 - going back to my bts coin base i only
02:45 - have three bitcoin left here because i
02:46 - sent one right and now when i actually
02:49 - hit refresh you'll see this go down by
02:51 - about forty thousand dollars let's give
02:53 - that a try wait for it wait for it and
02:56 - boom look at that guys how beautiful is
03:01 - that you just saw it drop from 170 000
03:03 - to 130 000 the whole blockchain is
03:06 - working this app right the tech stack
03:08 - like i've already told you it's built
03:10 - using next.js and it's just beautiful
03:12 - right here you can see wallet connected
03:14 - yeah and then if i go into my send and
03:16 - receive watch this you can actually hit
03:18 - receive right and it pops up your
03:21 - address where they should send it your
03:23 - wallet address and check this out i can
03:25 - choose bitcoin right and then i go and
03:27 - receive and all of a sudden now it says
03:29 - bitcoin right here and this qr code is
03:31 - actually functional so if you were to
03:33 - actually scan this qr code it will give
03:35 - you this exact address okay so you can
03:37 - actually pull out your phone right now
03:39 - if you wanted to right go ahead scan
03:41 - that and once you scan that it'll give
03:43 - you the exact address and you'll be able
03:45 - to send the bitcoin or ethereum uh there
03:48 - okay
03:49 - so that's the build this is the demo of
03:52 - of the app that you're building take a
03:54 - look at it right i can change which uh
03:57 - toggle i'm in here on the left hand side
03:59 - the balance looks super slick right if i
04:02 - go out of here you can see at the top i
04:05 - have my wallet connected once it
04:06 - connects it knows exactly which wallet
04:08 - it is just like coinbase i see my chart
04:11 - right here i see some assets down below
04:14 - right here right and then on the left
04:16 - hand side so really really looks slick
04:19 - looks exactly like coinbase and if
04:21 - you're excited about this this is the
04:23 - demo of the app and now we're actually
04:25 - gonna jump in and just start coding it
04:27 - up from scratch if you're ready i'm
04:28 - ready let's just jump right into it
04:32 - [Music]
04:36 - all right let's go ahead and create our
04:38 - next app so how we're gonna do this is
04:41 - i'm going to just go into my github
04:43 - folder you can choose to go wherever you
04:45 - want right and i'm going to initialize
04:46 - this app so i'm going to say npx create
04:49 - next app latest just like that and then
04:52 - just give it whatever you want to call
04:53 - it so for example for us we're going to
04:56 - call it coinbase blockchain out and then
04:59 - just hit enter now it's going to install
05:02 - react and next inside of it because
05:04 - remember next at the end of the day is
05:06 - built on top of react so you're using
05:08 - all of react's technology plus with some
05:10 - nice little sprinkles with next okay so
05:12 - don't worry this is not like it's
05:13 - something completely new it's still
05:15 - react at the end of the day so let's go
05:17 - inside of our project just like that so
05:19 - now i'm going to open up this app in my
05:22 - visual studio code just like this and
05:24 - what we're gonna do is i'm essentially
05:26 - going to run it and see if it actually
05:28 - shows up all right now we're gonna try
05:30 - running this app on our local host so
05:32 - i'm simply going to just do yarn dev
05:35 - here you could do npm run dev as well
05:38 - but that's the command whenever you want
05:39 - to run a next file let's take a look
05:41 - here and boom i'm seeing a bunch of next
05:45 - related stuff here all right now that
05:47 - our next app is created what we have to
05:49 - do is actually create our app insanity
05:52 - as well we gotta get sanity set up
05:54 - that's gonna be our backend that's gonna
05:55 - be our database that's where we're gonna
05:57 - store everything so let's go ahead and
05:59 - do that now i'm going to just open up
06:01 - i'm gonna do sanity.io so you can go to
06:04 - chrome just go to sanity.io and you
06:06 - should be good to go we will hit a login
06:09 - for you you're probably just going to
06:10 - need to create an account once you
06:12 - create an account hit create new project
06:14 - at the top here okay and it's going to
06:16 - give you this command right there this
06:18 - is the important command that you need
06:20 - now for you you don't have sanity
06:22 - installed so what you're going to need
06:24 - to do is first take this command here so
06:27 - let's go back and you're going to need
06:28 - to paste that command again and here's
06:30 - what you're going to need to do you're
06:31 - going to do sudo npm install and then
06:34 - you're gonna need to install it globally
06:36 - everywhere i'm not gonna hit install
06:38 - because i have it already installed but
06:40 - you should do that because um that
06:42 - command is gonna help you install this
06:44 - so uh that's the command there i just
06:46 - wasn't showing it earlier and now i'm
06:48 - showing it right there so type in that
06:50 - command you should be able to install
06:52 - sanity cli no problem once you've done
06:54 - that inside of our app here all right
06:57 - we're going to create a folder called
06:59 - studio so i'm going to hit new folder
07:00 - i'm gonna do studio and we're gonna cd
07:03 - inside of that folder so i'm gonna cd
07:05 - inside of studio and okay guys now when
07:07 - we're about to do sanity init make sure
07:10 - to do sanity init dash dash coupon
07:13 - clever programmer make sure you do that
07:17 - because once you do that it will make
07:19 - sure that you're getting the best plan
07:21 - that comes with 200 000 api requests 1
07:24 - million api cdn requests and 20
07:26 - gigabytes of bandwidth you're getting
07:28 - all of that for free so it's
07:30 - unbelievable make sure you use that so
07:32 - you can just keep building as many
07:33 - projects as you want now here i'm gonna
07:35 - say sanity net just like this okay we're
07:38 - gonna create a new project and what
07:40 - should we call this project right you
07:42 - can call it whatever you want i'm gonna
07:44 - call it
07:45 - uh coinbase you know final or coinbase
07:48 - blockchain app let's call it that and
07:50 - then i'm gonna hit enter to just go
07:53 - through with the default settings that
07:54 - it shares with us okay and then the
07:57 - project output path let's just hit enter
07:59 - you should be good and then for what
08:01 - schema you want just do clean project
08:04 - with no predefined schemas that's that's
08:07 - the option that we want to get started
08:08 - with now the installation process is
08:10 - taking place it's actually building your
08:12 - studio folder with the sanity files
08:15 - inside of it as you can see on the left
08:16 - hand side here all my files are now
08:18 - starting to show up right i can go
08:21 - inside of any of these i want but the
08:23 - only one that's really matter that are
08:25 - really important is this schemas file
08:27 - right here this is where you're gonna
08:28 - build your schema and that's where
08:30 - you're going to add your schema so i'm
08:32 - simply gonna go in here and i'm going to
08:34 - essentially copy paste my schema in here
08:37 - okay so let's go here one thing i do
08:39 - need to do is before i do any of that is
08:41 - in my git ignore i just want to go ahead
08:43 - and remove that slash and what that'll
08:45 - do is it will ignore not only this node
08:48 - module but this one as well because i
08:50 - don't want to be tracking all of those
08:52 - node modules there so here's my schema
08:54 - and i just need to update the schema
08:56 - with how i want my coin uh my token
08:59 - schema to look all right we'll build our
09:02 - schema out here and this is what it
09:04 - should look like i have um in my schema
09:07 - what i want to have is title coins the
09:10 - name for this will be coins and then the
09:13 - type is this will be a document
09:15 - everything inside of a sanity has this
09:18 - structure title name type title name
09:21 - type and this is going to be a repeating
09:22 - pattern that you're going to constantly
09:23 - keep seeing okay so now for this
09:25 - document we need to have fields so the
09:27 - fields will contain a bunch of things so
09:29 - the first field will be the name of the
09:32 - token so what is that token in this case
09:35 - we're just giving the title name the
09:36 - name of it is going to be name and the
09:38 - type is going to be string because i'm
09:39 - going to store it as string format the
09:41 - next thing i need to store it as is a
09:44 - symbol okay so what's the symbol so for
09:46 - example you might have ethereum the name
09:48 - it might be ethereum but the symbol will
09:50 - be eth right s or eth or whatever you
09:53 - guys want to call it the next thing i'm
09:55 - going to need is my contract address all
09:58 - right so title is this name is this uh
10:00 - it's going to be type string as well and
10:02 - then there's just two things i need
10:04 - after this i need the price so usd price
10:07 - so for example what's uh ethereum's usd
10:10 - conversion right 3 300 as of today 3 100
10:13 - as of today and what's bitcoins 41
10:16 - 600 something dollars as of today it
10:18 - might change depending on when you're
10:19 - watching the video and then of course
10:20 - you wanna have logo but logo the only
10:22 - thing that's different about logo is we
10:24 - wanna store that as an image this is
10:26 - your overall file this is what it should
10:29 - be looking like so make sure that you
10:31 - have you have something that looks
10:32 - exactly like this and this will be your
10:34 - schema now with this schema intact we
10:37 - should actually be able to do something
10:39 - like a sanity start and pretty soon
10:42 - we'll be able to actually see this so
10:44 - let's go ahead hit sanity start and
10:46 - let's wait for it to compile it's gonna
10:48 - whip up the sanity back-end slash
10:51 - database okay and why we're using sanity
10:53 - guys is sanity is just like the easiest
10:56 - database to use on the planet yet it
10:57 - scales big companies are powered by it
10:59 - like figma sonos and a lot of other big
11:02 - companies that run actually uh use it
11:05 - and they're endorsed by nike as well
11:07 - when i saw on their website so that's
11:09 - why we're using sanity and it's like
11:11 - point and click but it can be as
11:13 - scalable as you want it all right so now
11:15 - it's logging me in i just logged in with
11:17 - my github account and you can see i have
11:19 - coins right here right and coins is
11:22 - empty but based on that schema that we
11:24 - gave it when i actually create a coin
11:26 - watch what are the things what are the
11:28 - fields is gonna have so look at this
11:30 - name symbol yeah so like it's it's
11:33 - pretty fast right now as soon as i
11:35 - called it symbols with three s's you can
11:37 - see it just got updated in real time so
11:40 - super fast how that works and it's going
11:42 - to update and again update in real time
11:45 - so that's super fascinating contract
11:46 - address my usd price and since logo is
11:49 - an image it automatically makes it a
11:51 - easy drag and drop your image in here
11:54 - okay that's why that's working like that
11:56 - quick disclaimer if you don't have
11:58 - sanity io yet make sure you go and
12:01 - register for them they have a free plan
12:03 - you can use and add as many users as you
12:05 - want so let me just quickly show you
12:07 - that real quick so they got a couple of
12:08 - ways for you to get started on sanity i
12:10 - o you could hit get started or you could
12:12 - hit log in and then on here just hit
12:14 - create an account if you don't have an
12:16 - account yet right if you could see that
12:17 - at the bottom right there it's uh create
12:20 - an account and then when it create an
12:22 - account just and just sign up with
12:23 - either google github or email i use
12:26 - github so that's how i signed up so you
12:28 - can just sign up with github and then
12:30 - you should be good to go and that's
12:31 - really all so for now until we get the
12:34 - images and the logos what we're gonna do
12:36 - is i'm just gonna create ethereum here
12:38 - for example we'll call it eth and the
12:40 - price conversion for this is let's just
12:43 - say 3100 dollars or we can type in one
12:46 - eth to usd and that's the conversion
12:48 - that we get so we can just go ahead and
12:50 - add that in just like this okay i just
12:53 - like to kind of leave it like this it
12:54 - makes it simpler and then just hit
12:56 - publish so this is one thing that we've
12:59 - just added to our database and now i'm
13:01 - just going to add bitcoin btc and for
13:04 - the price i'm just going to say that
13:06 - because i think that's what it is today
13:08 - um all right so then we're going to
13:09 - scroll down and at the bottom we have uh
13:12 - go ahead and double check that all right
13:15 - and then we see this green button right
13:16 - here and i'm just going to hit publish
13:18 - on this and then we can just like this
13:20 - we can also add solana and then for this
13:23 - the symbol is going to be sold and for
13:25 - the price we can actually look that up
13:27 - so one solano to usd is about 141
13:30 - dollars so i'm just going to carry that
13:32 - over and pop that in right there and
13:34 - we're going to hit publish so there's
13:35 - just two pieces of information that we
13:37 - need one is contract address this we
13:40 - need to create our own solana and our
13:43 - own ethereum and our own bitcoin okay
13:45 - we're not going to be tapping into the
13:46 - existing ones so don't let that confuse
13:48 - you we're gonna be creating our own uh
13:50 - coins on the test network okay so we're
13:52 - not gonna be using the real ethereum
13:54 - real bitcoin real solana just yet so
13:57 - that's what we're waiting on the second
13:58 - thing we're waiting on is just the logos
14:00 - which is just these images and what
14:02 - we're gonna get them shortly and then
14:03 - once we get them we'll be good to go so
14:05 - one disclaimer i just want to say is
14:06 - this project does have a bunch of setup
14:09 - more than pretty much any project that
14:11 - we've ever done so just make sure you
14:13 - stick through that because once you get
14:15 - it right you're going to be in a good
14:17 - position to succeed it just takes some
14:19 - time to set up because you have to set
14:20 - up meta mask and sanity and third web
14:22 - there's a bunch of things we've got to
14:24 - set up but don't worry we'll set all of
14:25 - them up together okay so don't let that
14:27 - freak you out we'll go through it
14:29 - together and set it up one thing at a
14:31 - time all right so we're really just
14:32 - going to complete the entire sanity
14:34 - setup right before we move forward so
14:36 - what we want to do is kind of add the
14:39 - global level right so like let me just
14:42 - kind of back out of here for a second
14:43 - and i'll go back or actually you know
14:46 - what let's have sanity start running and
14:48 - let's have a third thing here and um
14:50 - what i want to essentially do is the
14:53 - following i want to install i'm going to
14:55 - do yarn add and we'll do sanity
14:58 - client okay we'll install this because
15:00 - we're going to need that because we want
15:02 - to be able to interact and use sanity on
15:04 - the front end so i'm going to install
15:05 - this package and there's one more
15:07 - package i need to install and instead of
15:09 - installing that later we're just gonna
15:11 - go ahead and install that right now as
15:13 - well so i'm gonna do yarn add and we're
15:15 - gonna do sandy slash image url this will
15:18 - allow us to like when i fetch the image
15:20 - here like the logo that package will
15:22 - allow me to turn that logo into an
15:24 - actual image instead of just a reference
15:26 - because in the start it just gives you a
15:28 - reference all right so now at the root
15:30 - level what i want to do is um i want to
15:34 - just do new folder we're going to call
15:36 - it lib and then inside of this lib
15:38 - folder we're going to create a new file
15:39 - and i'm going to say
15:41 - sanity.js okay and we're just going to
15:44 - import sanity client from sanity client
15:47 - and because this project is going to be
15:49 - pretty big i want to kind of move
15:52 - through the setups and the front end
15:54 - processes quickly so i might be like
15:56 - skipping past some of the code not that
15:58 - it's not going to show it i'm not going
15:59 - to show it to you i'm going to be moving
16:01 - past the front end part pretty quickly
16:03 - because i want to get to the more novel
16:04 - things like blockchain and then the back
16:06 - end part and spend more time on that
16:08 - okay so just kind of letting you know
16:10 - that as we just keep going through it
16:11 - all right so inside of this i got my
16:14 - sanity client now i'm going to just set
16:15 - that up and we're going to export cons
16:17 - client and we're going to say sanity
16:18 - client okay and then we're going to give
16:20 - it a project id now i need to go get the
16:23 - id for this project so what we're going
16:25 - to do is we're going to go to our
16:27 - sanity.io slash manage page right and on
16:30 - this page i'm going to go to coinbase
16:32 - blockchain app and then there is my
16:34 - project id i'm just going to copy that
16:36 - over and we're going to paste that in
16:39 - and then i'm going to say data set is
16:41 - production api version you need to give
16:43 - it a specific one otherwise sometimes it
16:46 - breaks or errors out and then we're
16:48 - going to go ahead and give it a token
16:50 - here so for the token what we're gonna
16:51 - do is inside of our manage i'm gonna go
16:54 - ahead to my api and i'm going to add api
16:57 - token hit editor and i'm just gonna say
16:59 - coinbase app just hit save and then it's
17:02 - gonna give me this token i'm going to
17:04 - simply go ahead and paste that in right
17:06 - here got that token and then we're just
17:08 - going to set the end use cdn and i'm
17:11 - just going to set that to false okay
17:13 - this will make sure that i'm always
17:14 - getting fresh data now in here in course
17:17 - origin i want to go ahead and enable
17:20 - localhost 3000 so that my app actually
17:24 - works and then once you deploy your app
17:26 - you're going to need to add your
17:27 - deployed apps url in here as well that
17:30 - way your app is authorized okay so
17:32 - that's what you want to do and make sure
17:33 - that you have this another thing we're
17:35 - going to need are our assets so let's
17:37 - make sure we go ahead and download them
17:40 - now so we i will have the this google
17:42 - drive folder linked in the video in the
17:45 - description so you guys can go ahead and
17:47 - get access to it so we're going to need
17:48 - code assets all right so i'm going to
17:50 - need this and i'm going to need this
17:52 - other one okay so what i'm going to do
17:54 - is go ahead and i'm going to download
17:56 - this folder so sanity assets is going to
17:58 - be the first thing that i download and
18:00 - then i need to download my code assets
18:02 - folder as well let's go ahead and
18:04 - download this as well so now i have both
18:07 - of them downloaded so now you can see
18:08 - code assets folder and sanity assets
18:11 - folder and the code assets folder we'll
18:14 - be using in a little bit but sanity
18:16 - assets is what we need right away and
18:18 - for sanity assets all i'm gonna be doing
18:20 - is i just need them for my sanity okay
18:23 - so i can go ahead and upload them on
18:25 - sanity so i'm just adding it here i'm
18:27 - using this app called yoink it allows me
18:29 - to kind of just put a placeholder there
18:31 - you don't need your ink okay but uh you
18:33 - just need access to those photos and now
18:35 - i'm gonna go to my points okay on my
18:37 - localhost three three three three slash
18:40 - slash coins i'm just going to upload the
18:41 - images so for solana i'm going to upload
18:44 - the solana image here and once that's
18:46 - done i'm just simply going to hit
18:48 - publish on that so you can see the salon
18:50 - image is now there now for bitcoin we're
18:52 - going to use the bitcoin image and
18:54 - simply going to hit publish on that and
18:56 - then we're gonna go on ethereum and use
18:58 - the eth image okay simply gonna go and
19:00 - hit publish on that and basically all of
19:03 - our images should be uploaded now the
19:05 - code assets folder we're gonna come back
19:07 - to later but just remember where you've
19:08 - downloaded it for now the next thing we
19:11 - need to set up is meta mask all right so
19:13 - now that we're on third web the first
19:15 - thing we need to do is make sure in our
19:17 - meta mask we have rankib test network
19:20 - ready to go that's the test network for
19:22 - ethereum so all i'm going to do is i'm
19:25 - going to hit my account icon okay and
19:27 - coinbase blockchain i'm going to hit
19:29 - settings go to advanced and then we're
19:31 - just going to go ahead and turn show
19:33 - test networks we're going to turn it on
19:35 - okay on now when i hit x and i go back
19:38 - and when i click here you'll see that i
19:40 - see a bunch of stuff including rankinb
19:43 - test network okay that's your ethereum
19:45 - test network so click that i have zero
19:48 - eth currently when you go into it you
19:50 - should have zero ether as well all right
19:51 - we're gonna go ahead click start here
19:54 - and uh we're gonna click get let's get
19:55 - started metamask i'm going to connect my
19:58 - meta mask to it it detects that i have
20:00 - zero eth let's hit continue let's hit
20:03 - the rinkeby test network testnet and
20:05 - let's do create first project now it's
20:07 - going to say i have insufficient funds
20:09 - so we're going to go ahead and click the
20:11 - link to get the funds this is me getting
20:14 - fake ethereum aka ethereum for my test
20:17 - network i do not need link so you can x
20:20 - that okay and i do need to put my
20:22 - account address because it's asking
20:24 - where do you want to receive that money
20:26 - where do you want to receive that
20:27 - ethereum so let's just paste that in
20:29 - let's hit i'm not a robot and we're
20:30 - going to hit send request so now we're
20:32 - waiting for confirmation it this should
20:34 - take about 10 to 20 seconds or maybe
20:37 - even less wow it just says request
20:38 - complete already that was fast let's go
20:41 - and boom we have 0.1 eth brilliant all
20:44 - right so now go back to third web
20:46 - because you should have a sufficient
20:48 - amount of eth so i'm going to hit
20:50 - refresh now it says i have 0.1 eth and
20:52 - i'm going to call this project coinbase
20:55 - clone or coinbase blockchain app all
20:58 - right let's hit create
21:00 - it's saying something about gas fees hit
21:02 - confirm authorize that and then we'll
21:05 - once we're in that's when we start
21:07 - making our tokens okay and third web
21:09 - makes it ridiculously easy to make your
21:12 - tokens and get everything set up for
21:14 - your project it's it's really amazing
21:16 - kind of what they've done to the whole
21:17 - blockchain space they really make this
21:19 - whole process super super easy so we're
21:21 - gonna click add module and i'm gonna
21:23 - pick token here okay and hit setup
21:25 - module and my first token just call it
21:28 - bitcoin okay let's call it b2 btc uh we
21:31 - could call a bitcoin 2.0 as well if we
21:34 - want just for fun okay bitcoin 2.0 you
21:37 - call it that or you can just leave it as
21:39 - is that's fine too and let's hit deploy
21:41 - module we don't need to upload the image
21:43 - here we can just kind of leave it as is
21:45 - that's fine let's hit confirm so of
21:47 - course you have to pay a little bit to
21:50 - mint and create these like oh you have
21:52 - to pay some gas fees to basically get
21:55 - these projects going and pretty soon
21:56 - this is going to be done we're going to
21:58 - repeat the process for ethereum as well
22:00 - okay so you see it just gave me a second
22:02 - notification second transaction i'm
22:05 - going to hit confirm it at that and then
22:06 - i'm going to repeat this process and
22:08 - next up i'm going to create let's just
22:10 - say soul and then i'm gonna create eth
22:13 - okay so i'm gonna do this process three
22:16 - separate times so my first one is done
22:18 - just hit confirm configuration at the
22:20 - bottom go back to the project and let's
22:22 - hit add module and repeat this process
22:24 - again hit token go bottom setup module
22:27 - we're going to say
22:29 - solana
22:30 - and here we're going to say sol it's a
22:32 - deploy module and then we're going to
22:34 - repeat that process okay now solana is
22:36 - done as well we're going to hit confirm
22:39 - configuration and we will go back to
22:41 - project we will add module and we will
22:43 - do one last one token let's go here
22:46 - ethereum and i will say eth this will be
22:50 - our created these are our tokens we're
22:52 - making you call it whatever you want i
22:54 - could have called it cpt like clever
22:55 - programmer tokens okay you can call it
22:58 - whatever you want these are your own
23:00 - tokens that you're making okay now we
23:03 - have ethereum is done as well all right
23:05 - so now what we're going to do is we're
23:07 - gonna give ourselves some tokens okay so
23:09 - in bitcoin let's mint a couple of
23:11 - bitcoin wouldn't it be nice if we had
23:13 - seven bitcoin okay so let's give
23:15 - ourselves seven bitcoin and let's
23:17 - confirm this uh transaction and the gas
23:20 - fees and everything that we might have
23:21 - to pay so this will give us seven
23:23 - bitcoin and in the start all of these
23:26 - will be owned by us as well aka you in
23:29 - this case and then we'll mint our we'll
23:32 - do the same process for ethereum and
23:34 - solana and we'll mint and we'll make
23:36 - sure that we own these okay so let's go
23:38 - here so like for example in bitcoin you
23:40 - can see seven owned by you okay let's go
23:42 - to solana and we will mint
23:44 - and let's meant um i have 50 solana we
23:48 - will do the same process with ethereum
23:50 - once this is done okay so solana is done
23:53 - let's go to ethereum and mint and for
23:56 - ethereum i will say let's say i have
23:58 - like 15 ethereum okay so let's just go
24:01 - through that and then we'll be done now
24:03 - that i'm done with this let's hit
24:05 - refresh to see how much ethereum i have
24:07 - okay let's go back actually and let's
24:09 - look at how much solana i have i have 50
24:11 - solana let's go to ethereum i have 50
24:13 - ethereum and let's go to bitcoin i have
24:15 - seven bitcoin so that's perfect all
24:17 - these ones are done and they have real
24:20 - contract addresses so if you go to
24:22 - rinkybee.etherscan.io
24:24 - and you paste that you will see that
24:27 - this contract address actually exists
24:29 - this is real and there is a creator of
24:33 - this right so who's the creator of the
24:34 - xerox three and you can see i am the
24:37 - creator of the xerox three cd so you
24:39 - know who the creator of this is which is
24:41 - pretty freaking cool you can see the
24:43 - contract creation and then you can see
24:45 - that
24:46 - there was something else that happened
24:48 - here as well three min minutes ago which
24:50 - was minting okay through mint that was
24:52 - the method and the first method was just
24:54 - pure creation that's this contract
24:56 - address right you could see probably for
24:59 - all of the ones that we've made you'll
25:01 - find them so here this fake solana that
25:03 - i just created if i search it by the
25:05 - contract address it should actually pull
25:07 - the fake solana right and here it goes
25:10 - creation by who how much
25:13 - minted everything if i go inside here i
25:16 - can see it says rankib test net
25:18 - transaction only and i can see that
25:21 - tokens were transferred from here to my
25:23 - account and there was about 50 solana
25:26 - that i received so in order to be able
25:29 - to get access to this inside of my meta
25:31 - mask what i need to do is grab these
25:33 - contract addresses and in my meta mask i
25:36 - need to actually import these tokens so
25:37 - hit import token paste it wait for it
25:40 - and the btc symbol should automatically
25:42 - pop up and notice that i have seven
25:44 - bitcoin or seven btc i can copy the
25:47 - solano one and do the same process here
25:50 - so i'm gonna hit import tokens paste
25:52 - should say sol and 50 soul indeed copy
25:55 - this uh import tokens paste so now i
25:59 - have solana ethe and bitcoin okay and
26:02 - clearly you can see this is the ether we
26:04 - have created right this is separate from
26:06 - this east okay this is our east now with
26:08 - all of that set up we're ready to
26:10 - actually move forward and um add this
26:13 - inside of our sanity as well okay so
26:15 - grab these contracts now and inside of
26:18 - our sanity we're gonna paste these
26:20 - addresses okay so let's go here and
26:21 - let's do this carefully so we get it
26:23 - right so i i'm gonna catch bitcoin and
26:26 - we'll add the bitcoin address here and
26:28 - hit publish we will capture solana we'll
26:30 - go to solana here paste that contract
26:33 - address and we will wait for this to
26:36 - load and then hit publish and then we
26:38 - will grab the ethereum contract address
26:41 - we'll go inside of ethereum paste the
26:43 - contract address go down here and hit
26:46 - publish so now our sanity is fully
26:48 - updated we got all the data that we
26:51 - needed to put in here and we'll
26:53 - essentially go from here one other thing
26:55 - i want to do since i'm going to be
26:56 - moving this money around between two
26:58 - different accounts let's open up our
27:00 - meta mask right now and uh let's go
27:03 - ahead and go to my second account that i
27:05 - created which is called receiver
27:06 - coinbase two and um let's go ahead and
27:10 - dismiss and then this one we're also
27:12 - going to start adding these tokens okay
27:14 - so i'm going to paste this this gives me
27:16 - the eth okay let's copy our solana one
27:19 - let's go back in here and we'll import
27:22 - will paste this gives me the soul okay
27:24 - let's copy this and let's paste this
27:27 - this will give us the btc so now we have
27:30 - two accounts that have these available
27:33 - so receiver coinbase and coinbase
27:35 - blockchain coinbase blockchain is the
27:36 - one that's connected to third web so
27:38 - let's go back to that one this is our
27:39 - main one right now with everything in
27:42 - here all right now what we want to do
27:43 - and this is the last part of the setup i
27:46 - promise once you're done with this okay
27:48 - you're pretty much done with the entire
27:50 - setup and i promise we're gonna be
27:52 - getting decoding soon okay i know this
27:55 - is definitely the biggest setup we've
27:56 - had of all the apps we've ever built a
27:58 - clever programmer trust me i get it but
28:00 - once this setup is done then it's going
28:02 - to be smooth sailing okay so just hang
28:04 - in there with me and uh last thing you
28:06 - want to do is let's grab our let's go to
28:09 - our wallet let's go to your main account
28:11 - here so for me it's a coinbase
28:12 - blockchain one and we're going to go
28:15 - ahead to account details and uh we're
28:18 - going to export private key okay i'm
28:20 - going to type in my password here and
28:22 - there it is it just gave me my private
28:26 - key for this account okay so i'm going
28:28 - to copy this key right here all right
28:30 - copy and i'm simply going to hit done
28:32 - and then i'm going to create a n file
28:35 - and let's just do next underscore public
28:38 - underscore meta mask private
28:41 - key or we can just do meta mask key and
28:44 - paste that
28:45 - so that is the one okay so this is my
28:49 - key and i have it right here next public
28:52 - metamask key and we should be good so in
28:55 - terms of the setup now we're pretty much
28:57 - done and now we're ready to start coding
29:00 - i'm super excited let's jump right into
29:02 - it
29:08 - all right so the first thing we're going
29:09 - to do is add authentication to our app
29:11 - so let's go ahead and do that now and
29:14 - this process is going to be pretty
29:16 - straightforward but let's just kind of
29:18 - walk through it together okay so i'm
29:21 - going to go to my app.js
29:24 - all right and that's going to be in
29:25 - pages underscore app.js is this file
29:28 - right here
29:29 - now what i want to do
29:30 - is i need to add in my third web
29:34 - okay so in order to do that i actually
29:36 - will need to
29:38 - write this line here and to make all of
29:41 - this work i'll actually need to install
29:43 - all of these dependencies
29:45 - so here according to third webs
29:46 - documentation what i need to do is i
29:48 - need to actually install all of these
29:50 - here so you can run this npm or this
29:53 - yarn one all right either one works
29:56 - so i'm simply going to copy that paste
29:58 - that we can install this one let's add
30:01 - one more things thing to this so this is
30:03 - how this has third web react and third
30:05 - web hooks what i also want is the third
30:08 - web sdk because we're going to need that
30:10 - later so let's go ahead and just do this
30:12 - way third web sdk and hit enter and now
30:16 - it's um going ahead and installing this
30:19 - okay just so you can kind of look at the
30:21 - line that i wrote
30:22 - up close
30:23 - that's what that looks like
30:26 - okay beautiful so now once this
30:29 - installation is going to take place
30:31 - we are ready to start using third web
30:34 - now the next thing i actually need to do
30:38 - is i need to basically add in the
30:40 - supported chains so for so here's a
30:43 - little bit about chains and you can see
30:44 - that for rinkybee the actual id that we
30:48 - need is a chain four
30:50 - i'm going to go ahead and get rid of
30:52 - that
30:54 - the next thing i need to do is i need to
30:55 - actually wrap this inside of my third
30:58 - web so for example
31:00 - i need to now close this with my third
31:03 - web provider just like that
31:06 - okay
31:07 - and i need to wrap this in a return so
31:10 - let's go here let's go there i don't
31:13 - need to semicolon
31:14 - and there we go so effectively what i've
31:16 - done right now is i'm wrapping the
31:18 - entire app in a third web
31:22 - login
31:24 - so that means that
31:26 - you know anything that i'm using here
31:28 - and i don't need to do return here by
31:30 - the way i can get rid of that return
31:32 - just like this so before
31:34 - on my app where i was like loading all
31:36 - the pages now all of the pages are going
31:38 - to be wrapped with this authentication
31:40 - so now globally i'll be able to access
31:43 - this authentication whether in my
31:44 - components or in my index.js or any
31:47 - other new pages that i actually make
31:51 - so now that i've wrapped the entire app
31:52 - in authentication what i need to do is
31:54 - update my index page
31:56 - and for my index page i'm going to keep
31:59 - it kind of simple but we're just going
32:01 - to do a couple of things here okay so i
32:04 - don't really need
32:06 - image and stuff like that and i actually
32:08 - also don't need styles
32:10 - i'm going to use a style component so
32:12 - let's go ahead and add that so let's do
32:15 - yarn add styled
32:18 - components
32:20 - like this okay and i'm going to hit
32:22 - enter again you could do npm that's fine
32:28 - simply gonna zoom out here okay so now i
32:31 - have style components okay so we're
32:33 - going to use style components for this i
32:36 - don't need next head here either style
32:39 - components okay and then the next thing
32:42 - that i really need is i need to make
32:44 - sure my hooks
32:46 - i have my third web hooks because that's
32:48 - what we're going to need in order to
32:50 - kind of provide that authentication
32:53 - okay outside of that let's go to this
32:56 - return and get rid of everything inside
32:58 - of here for now okay and i'll just leave
33:01 - it like a
33:02 - blank div kind of like this so if we
33:04 - were to go to our local host this will
33:06 - kind of you know have nothing on here as
33:08 - of now yep if i write hello here
33:12 - you will see
33:13 - that hello popping up right there
33:16 - okay so it's
33:18 - it's here but it's empty all right now
33:20 - the next thing i need to do is i'm going
33:22 - to say const address
33:25 - and then i get the address and the
33:27 - connect wallet
33:29 - from the use web3 so this is the web3 or
33:33 - third web hook
33:35 - that we have
33:36 - here and this will give us the address
33:39 - and the connect wallet and then i just
33:41 - need to basically create a simple page
33:44 - so i'll show you what that looks like
33:46 - and guys we're going to go through the
33:47 - front end because again i want to get
33:48 - through to the main app really soon okay
33:52 - so
33:53 - we're gonna go through it a little bit
33:54 - in a faster pace
33:56 - all right actually let's do it like this
33:58 - okay so i'm going to
34:01 - simply do the following so inside of
34:03 - this div
34:04 - i'm gonna say i'm gonna add a button
34:07 - okay and then for this button we'll just
34:10 - say
34:11 - connect wallet
34:15 - all right connect wallet
34:17 - and then i'm gonna say here on click
34:22 - connect wallet
34:24 - and we're going to do injected
34:28 - okay
34:30 - so let's give it a try and let's see
34:32 - what happens i'll hit connect wallet
34:36 - so all i had to do was make sure that my
34:38 - other wallets were disconnected so
34:40 - meaning like
34:41 - you know for example
34:43 - one of my other wallets was connected to
34:45 - localhost 3000 so i simply went ahead
34:47 - into it
34:48 - and i just went to connected sites and
34:50 - removed
34:52 - i removed uh localhost 3000 right so now
34:56 - coming back into my coinbase blockchain
34:58 - wallet if i hit connect wallet it pops
35:01 - up so clearly it seems like that it is
35:04 - uh working okay and now i can even add
35:08 - like a conditional that essentially
35:09 - checks whether this is working or not
35:11 - okay so let's go ahead and build our
35:14 - styling now and we will use that styling
35:17 - moving forward
35:19 - okay so i'm gonna have my wrapper here
35:22 - all right this entire thing is gonna be
35:24 - in a wrapper
35:25 - so let's do it this way and let's do
35:28 - that okay
35:30 - so now since inside of my wrapper you
35:32 - can see that it's kind of in the middle
35:34 - so that's great that's what we want
35:37 - the next thing we're gonna do is uh for
35:40 - wallet connect we're gonna give that a
35:42 - little bit styling so let's go ahead and
35:45 - do that now
35:48 - and for wallet connect what i'm gonna
35:51 - say is
35:52 - this here we're gonna go wallet connect
35:57 - all right and we're gonna wrap this
35:58 - button in wallet connect
36:01 - now let's create some styling for this
36:03 - button that we just created okay so
36:06 - let's go ahead and do that
36:08 - and instead of regular button i'm going
36:10 - to call this a button like this
36:13 - and like that
36:14 - okay so now it looks like a
36:16 - nice button
36:18 - again i'm not going to go too much into
36:20 - the css and styling because we have a
36:22 - bajillion videos where we're making
36:24 - front ends so feel free to watch those
36:26 - on
36:27 - the youtubes
36:29 - but i'll explain just a tiny bit on the
36:31 - styling side right and that's
36:33 - okay color is blue right
36:35 - we have our font color on there which is
36:39 - this black color that you're seeing
36:40 - right there
36:41 - font weight
36:43 - and then the font size right that's how
36:45 - we're getting the font size and padding
36:47 - is how we're getting this padding and
36:48 - then of course border radius which gives
36:50 - us those nice rounded corners
36:53 - okay and then on hover
36:55 - it turns into a pointer like that
36:58 - okay so when i click
37:00 - boom it pops up right there okay i'm not
37:02 - gonna connect just yet i'm just gonna
37:04 - finish up the styling on this
37:06 - all right and the next thing we need to
37:08 - do is add details
37:11 - and the details are just going to say
37:12 - right underneath that
37:14 - button it's going to say you need to be
37:15 - on chrome to be able to
37:18 - run this app so the details are going to
37:20 - look a little bit like this right
37:22 - underneath this button
37:24 - i'll add my details okay so you can see
37:26 - you need you need chrome to be able to
37:28 - run this app so if i full screen this
37:32 - right notice how everything is nice and
37:34 - centralized and when i go here
37:37 - it's still nice and centralized right so
37:39 - the styling is
37:41 - it's great it's perfect it's doing
37:43 - exactly what we needed to do
37:45 - all right and now what we need to do is
37:49 - create a conditional rendering which
37:51 - once you're logged in
37:53 - show something else and once you're not
37:55 - logged in show something else so if
37:57 - you're not logged in
37:59 - it should show you this
38:00 - but when you are logged in it should
38:02 - show you like the home page
38:06 - okay so let's go ahead and kind of
38:08 - create that so how am i going to say
38:10 - that is i'm going to say hey does the
38:11 - address exist
38:13 - if the address exists
38:15 - then i just want you to render h2 and i
38:18 - want you to just render the user's
38:20 - address for now
38:22 - all right and then if it doesn't exist
38:24 - then here's what i want to happen so i'm
38:26 - going to put these parentheses here i'm
38:29 - going to take this
38:31 - i'm going to take all of this code right
38:33 - there
38:34 - okay and
38:36 - paste that in here
38:37 - okay
38:38 - so if the address exists
38:41 - then show me what the address actually
38:42 - is otherwise show me this page so
38:44 - clearly it's detecting that the address
38:47 - doesn't exist that statement is false so
38:48 - it's showing me this right here so let's
38:51 - hit connect
38:52 - wallet and now let's actually connect
38:54 - let's see what happens
38:55 - and boom right when i connect it i can
38:57 - see that it's actually showing me my
39:00 - wallet address okay
39:02 - if i go inside here and i disconnect
39:05 - connected sites localhost disconnect
39:09 - boom you can see that it detects it so
39:10 - it's working
39:12 - perfectly all right now what we need to
39:15 - do is we need to create a dashboard all
39:17 - right so inside of these pages here i'm
39:20 - going to create a new file i'm just
39:22 - going to call it dashboard.js okay
39:25 - and then in dashboard i'm just going to
39:27 - hit rafce hit tab
39:30 - so those are my snippets i just kind of
39:31 - autocomplete this
39:33 - okay and now i have my dashboard
39:36 - and all i'm going to say here is you
39:38 - know i'm just going to in this div here
39:40 - i'm just going to say address
39:43 - let's destructure the address as a prop
39:46 - and then let's go back to our index.js
39:49 - and instead of this i'm actually going
39:51 - to say
39:52 - render my dashboard component
39:56 - right and i'm going to give it the
39:57 - address all right and make sure to
39:59 - import it from the top like this
40:02 - okay
40:04 - so now it should render my dashboard
40:05 - component once i log in hit next
40:08 - continue
40:09 - and there you go my dashboard component
40:11 - is now being rendered all right i'm
40:13 - gonna just disconnect this again so
40:15 - connected sites disconnect
40:19 - cool
40:20 - all right so now let's actually start
40:22 - working on our dashboard component and
40:24 - adding things to it actually i think
40:26 - it's better in this case to connect and
40:28 - stay here
40:30 - cool
40:31 - so now dashboard is going to have
40:34 - multiple things like if i actually look
40:36 - at the real one that we have right here
40:39 - the dashboard has multiple things that
40:41 - we're looking at here right for example
40:43 - we have this sidebar
40:45 - component
40:47 - we have this header component
40:51 - we have this portfolio chart component
40:54 - and then we have this portfolio
40:56 - component at the bottom
40:58 - okay and then we have some extra like
41:00 - earn some interest blah blah blah on
41:02 - this side
41:04 - okay
41:05 - so we can get started with multiple we
41:07 - could get started with header or
41:09 - sidebar i kind of usually like to start
41:11 - with the header
41:13 - okay so let's go ahead and get started
41:15 - with our header first
41:17 - all right so now that we want to build a
41:18 - header let's create a components folder
41:20 - at the root level so i'm going to say
41:22 - components like this
41:24 - inside of components i'm going to create
41:26 - a new file it's going to be called
41:27 - header.js i'm going to go in here and
41:30 - we're going to autocomplete this
41:33 - all right and for my header file
41:35 - i'm going to need a couple of stylings
41:37 - okay so let's create our wrapper styling
41:40 - we will create our
41:42 - title styling okay and i'm going to have
41:46 - a buttons container
41:48 - all right
41:50 - okay and why is that well because for
41:53 - title right i'm going to make assets
41:54 - look like this big
41:56 - assets
41:58 - right and then for buttons container i
41:59 - need to make sure that it's in a flex
42:01 - box so it's in row and not columns
42:06 - okay
42:06 - and then we're doing some calculations
42:08 - and stuff like that here so it takes up
42:11 - you know it's like responsive
42:13 - and it it takes up the right space okay
42:16 - so let's go put that back
42:19 - cool
42:20 - all right and then we want to have our
42:22 - button give it
42:24 - a styling as well
42:26 - and then that's it so these are the
42:27 - styled components that i want to
42:29 - essentially make for this
42:31 - and now we just want to essentially
42:33 - write the code
42:35 - let's start off with our button just so
42:37 - you can kind of see what that looks like
42:39 - okay so let's have our
42:40 - kind of buy and sell buttons
42:43 - so let's do this
42:45 - okay and let's make sure our header is
42:47 - actually showing up inside of our
42:49 - dashboard so i'm going to go in my
42:51 - dashboard
42:52 - and we will say
42:56 - here
42:59 - and we'll say
43:01 - header
43:04 - so let's just say header for now
43:07 - and let's see if it shows up
43:10 - okay it's saying styled is not defined
43:12 - so what i need to do is go in here and
43:14 - simply import that so import styled
43:18 - from
43:19 - style components
43:21 - and if you ever see my autocomplete
43:22 - being really really smart
43:24 - that's simply because
43:27 - i'm using github copilot as an extension
43:30 - so you can get that extension as well
43:32 - because you can see that my buy and sell
43:34 - button is here
43:36 - but we of course want it to be in the
43:37 - header so we'll we'll keep working on
43:38 - that
43:41 - now the other button that i will need is
43:44 - a send and receive button
43:46 - okay so let's go ahead and paste that
43:48 - right there now it's complaining of
43:49 - course because it needs to be in a
43:51 - wrapper so it needs to have a parent
43:55 - so let's do
43:57 - this
43:59 - so now you can see i have my send and
44:00 - receive and i'm getting this like little
44:02 - bar right here because in my wrapper
44:05 - i have that
44:06 - this is the border bottom if i remove
44:08 - this border bottom you see it goes away
44:10 - when i add it it's back there there we
44:12 - go
44:13 - okay so the buy and sell send and
44:15 - receive buttons are looking really
44:17 - really nice
44:19 - and now i need to actually build a
44:21 - buttons container and put them inside of
44:23 - the buttons container so this buttons
44:24 - container will make sure that they're in
44:26 - flex
44:27 - okay so let's go ahead and put that
44:30 - right there
44:31 - and let's put the end
44:33 - right below both of these buttons
44:35 - like this
44:37 - okay so now we have them in flexbox
44:42 - all right and then all i need to do is
44:44 - add
44:44 - title
44:45 - up here okay so let's do title
44:49 - and then inside of that title i'm going
44:51 - to say assets
44:54 - boom there you go so you can see
44:57 - how nicely it does it
45:00 - right it's automatically giving this a
45:03 - flex one that's why this is big and
45:05 - taking up for the title right title has
45:08 - flex one here
45:10 - that's why it's taking up the entire
45:11 - space
45:12 - if from title
45:15 - we take away the flex one
45:17 - you'll notice that
45:19 - they all kind of squish together like
45:21 - that but that's not what we want right
45:23 - we need it to be
45:24 - all the way there
45:26 - perfect so now our header is looking
45:28 - pretty good
45:29 - all right and let's keep on going all
45:32 - right so now all we need to do is really
45:34 - move this guy from here to the top okay
45:38 - and
45:39 - that's not gonna happen inside of header
45:41 - that needs to happen inside of our
45:43 - dashboard okay
45:45 - so what i need to do now is basically
45:47 - create a wrapper and a container okay so
45:51 - that's what they're gonna look like i
45:53 - got my wrapper right here
45:55 - okay this will wrap around the entire
45:58 - page and kind of give it some styling we
46:00 - of course need to do import styled
46:03 - from
46:04 - styled
46:05 - components like this hit refresh so
46:08 - the error goes away
46:10 - all right and you can see
46:13 - it's our page is looking alright so
46:16 - sometimes a page acts up funny what you
46:18 - need to do is just basically kill the
46:20 - server that you're running so ctrl c
46:22 - this is my sanity studio that i have
46:23 - running this is my next app that i have
46:26 - running okay so just ctrl c hit up and
46:28 - hit enter so yarn dev or npm run dev
46:32 - and that should like fix it up
46:34 - so now let's refresh
46:36 - and now it's looking the way it needs to
46:38 - be that's fine and now we're basically
46:40 - going to add a wrapper around this the
46:42 - one that we just created
46:44 - let's put that right there
46:46 - so let's full screen this so with the
46:47 - wrapper you can see it's
46:49 - looking nice now all i need to do
46:52 - is put it in a main container so let's
46:54 - go ahead and do that i'll do main
46:58 - whoops
46:59 - main container
47:04 - all right and then let's go ahead and
47:06 - pop that right there and boom there you
47:08 - go
47:09 - now it's showing up
47:11 - exactly where it needs to show up right
47:13 - at the top here
47:14 - and so this is looking good now let's go
47:16 - ahead and work and add the sidebar on
47:19 - the left hand side
47:21 - but actually before we add the sidebar
47:24 - let's go ahead and actually add that
47:25 - table with all of the coins inside of it
47:28 - i think that's a good one to add i think
47:30 - it makes our app fun
47:32 - to make this work we're gonna need to
47:34 - bring in our assets remember that i had
47:36 - you download earlier
47:38 - so we're going to need access to both of
47:40 - these code assets we're going to need
47:41 - our assets folder that has all of these
47:44 - tokens here
47:46 - and then we're going to need access to
47:48 - static as well
47:50 - so we're going to need both of these now
47:51 - so let's go ahead and bring them in
47:58 - add folders to workspace
48:03 - so actually remove those folders because
48:06 - it added it kind of in a funny way so
48:07 - we're just going to create our own
48:08 - folder called assets
48:11 - and in this assets folder we're going to
48:13 - go ahead and just copy all of those so
48:15 - i'm going to go into my downloads
48:17 - code assets assets and i'm just going to
48:19 - copy these
48:21 - all right and we're going to move that
48:23 - inside of our assets folder just like
48:25 - that
48:26 - and then we're going to create another
48:28 - folder
48:29 - and this is going to be called
48:30 - static
48:32 - all right and then in static
48:34 - we're going to do the similar thing and
48:36 - basically just
48:37 - move all of the static stuff in there
48:41 - these are kind of the predefined things
48:44 - so what's inside of these well i'll show
48:46 - you but essentially this is everything
48:48 - that's on the left hand side
48:51 - so essentially our sidebar items
48:54 - meaning uh if i go to my app
48:57 - it's this stuff here
48:58 - right so i have uh
49:02 - and pay and for you and learn and earn
49:05 - and notifications things like that so
49:07 - this is just like
49:09 - made already all right so you don't need
49:11 - to worry about it all you need to worry
49:12 - about is how you're going to get these
49:14 - icons to come up and that's pretty easy
49:16 - we just all we need to do to make that
49:19 - happen
49:21 - is simply just install the packages that
49:23 - are needed
49:24 - so the package that i clearly see we
49:26 - need here is this react icons package so
49:29 - i'm going to go ahead and say
49:31 - yarn
49:33 - add
49:34 - i'm going to say react icons
49:37 - just like that
49:38 - so let's go ahead and install that
49:42 - there's going to be a couple of other
49:43 - things we need to install but
49:45 - we can go ahead and do that later
49:47 - so this will give me all my icons and so
49:50 - my nav bar on the left hand side you
49:53 - know it's pretty close to ready to go
49:55 - because we have all the data we'll make
49:56 - this one pretty soon the thing that we
49:59 - want to work on now is this assets thing
50:02 - kind of here at the bottom all right so
50:04 - let's go ahead and get to work on that
50:06 - and for that to work we you just need to
50:08 - make sure that you have all your images
50:10 - right here with that said let's get to
50:13 - work
50:14 - let's also take a look at what's inside
50:16 - of our static folder so we have our nav
50:18 - items right this is everything that's
50:20 - going to be in our nav
50:21 - and then the other thing we actually
50:23 - have is coins right here
50:26 - so let's go to our coins
50:28 - so inside of coins right all i'm doing
50:31 - here is we're importing all of our logos
50:34 - so that's in our assets folder so i'm
50:36 - just importing all of them
50:38 - and then i'm just creating our coins so
50:40 - this is just static data here so i'm
50:42 - creating my coins how much of these
50:45 - coins i have
50:46 - what's the balance in there and then i'm
50:49 - putting uh bitcoin solana in there
50:51 - polygon in there ethereum just saying
50:54 - what's the balance right and that's how
50:57 - they're getting populated here based on
50:59 - the balance
51:01 - and you know what's going on here so
51:03 - balance what's how much do i how many do
51:06 - i have what's their usd value for
51:08 - example
51:10 - and you know what's the price of it
51:12 - what's the price change so this is just
51:15 - like the styling
51:16 - and over here what we're doing is just
51:18 - we're using data that we have hard coded
51:21 - okay so that's why i'm just giving you
51:22 - these files and you can just kind of use
51:24 - them that's what coins is
51:28 - let's go ahead and build our portfolio
51:30 - components we're going to go in here i'm
51:32 - going to say
51:34 - portfolio.js
51:36 - we'll make sure that we're importing
51:38 - this
51:39 - all right and then for this i'm going to
51:42 - do a couple of things so we're going to
51:44 - need obviously we need a wrapper
51:47 - because everything is going to go inside
51:48 - of that so let's create our wrapper
51:51 - and then inside of our wrapper we're
51:53 - gonna have content that's gonna kind of
51:55 - hold everything together nicely
51:58 - all right and then
52:00 - what i need
52:01 - is uh just a couple of things actually
52:03 - i'm going to need to style that
52:04 - portfolio table
52:07 - and then the table that we create we
52:08 - need to give it a certain styling in
52:10 - this case we just need to make sure that
52:11 - it has
52:12 - not that we just need to make sure that
52:14 - it has
52:15 - good width
52:18 - we are going to need to install the the
52:20 - table row
52:22 - all right so basically you know that's
52:24 - the whole table but then the table row
52:26 - styling is what's needed as well what
52:28 - each row will look like
52:29 - and
52:31 - and then we have the table item of
52:33 - course there's just a couple of things
52:35 - after that so we got table item
52:38 - and then we also want to make sure we
52:39 - have a divider so you see that divider
52:42 - right there we need access to that
52:46 - all right and then this is this is
52:48 - pretty much it as far as this is
52:50 - concerned
52:52 - now all we need to do is just just have
52:55 - one for title as well
52:57 - and that title is the one that says your
52:59 - assets on the right hand side here your
53:01 - assets that's the styling for that
53:04 - so we got all this now let's build our
53:06 - portfolio table so i'm going to go here
53:08 - and we will say
53:10 - portfolio
53:12 - table
53:15 - just like this
53:16 - and then inside of my portfolio table
53:20 - we're going to need table item so
53:23 - let's see if we created one for our
53:25 - table item
53:27 - we have so we're going to need our table
53:30 - item
53:31 - all right so i'm going to say table
53:34 - item
53:35 - and then in here i'm going to add my
53:38 - title and that's going to be your assets
53:41 - just like this
53:42 - now let's just make sure our portfolio
53:44 - component is showing up so we're going
53:46 - to go to our
53:48 - dashboard.js
53:50 - okay
53:51 - and actually we're not going to add it
53:52 - to our dashboard what we're going to do
53:54 - is we're going to create another
53:56 - component it's going to be called
53:57 - main.js
53:59 - main.js will
54:01 - contain everything that's in the main
54:04 - so we're going to add portfolio in there
54:07 - so let's go ahead and do that so first
54:09 - of all i'm just going to do rfce
54:11 - perfect
54:14 - and then inside of my main i'm going to
54:17 - do what i just said right so first of
54:19 - all
54:20 - we're just going to need to style a
54:22 - wrapper here for the main so i'm going
54:23 - to add some styling here
54:25 - and then inside of my main
54:28 - i need to use my wrapper
54:30 - and then inside of my wrapper i'm going
54:33 - to add my portfolio that i've created
54:37 - and this can be a self-closing tag
54:41 - there we go
54:43 - cool
54:45 - now let's go to our app
54:46 - and uh we will add main
54:50 - to our to our home page right so our
54:52 - home page is our dashboard.js
54:55 - so let's go to our dashboard
54:58 - dot js file which is in our pages
55:01 - and inside of here
55:03 - i'm going to add main right underneath
55:05 - the header but still inside of the main
55:07 - container so let's go main
55:09 - and let's hit enter so it auto completes
55:12 - it and auto imports it from here
55:16 - it's complaining it doesn't know what
55:17 - style this so let's go in main and add
55:20 - that's import style from styled
55:23 - components like this
55:25 - and let's hit refresh
55:28 - let's go to portfolio portfolio probably
55:31 - doesn't have it either so import styled
55:33 - from
55:35 - styled components
55:40 - perfect
55:42 - and let's go ahead and also put this
55:44 - inside of a wrapper so we're going to go
55:46 - ahead and because we did create our
55:48 - wrapper styling
55:49 - so let's put this all inside of a
55:51 - wrapper
55:52 - and there we go okay your assets is now
55:55 - kind of showing up but the reason why
55:56 - it's not showing up is i'm not like
55:58 - adding in the rows that i need to add
56:00 - right so let's go ahead and add those
56:02 - rows
56:03 - and so what we're going to do is
56:06 - let's put a divider here right
56:08 - underneath the table item i'm going to
56:10 - say divider
56:13 - and then under the divider we're going
56:14 - to now build our table
56:17 - okay
56:18 - inside of this table i'm gonna have
56:20 - table item again
56:22 - all right let's close out our table item
56:25 - and then inside of this table item i'm
56:28 - going to have our table row
56:31 - like this
56:32 - and then inside of this row we're going
56:34 - to say the following so we're just going
56:36 - to say
56:38 - name
56:40 - this is going to be balance this is
56:43 - going to be
56:44 - price
56:46 - this is going to be a location you
56:48 - should start to see this on the right
56:49 - hand side kind of pop up
56:53 - allocation
56:54 - and then we will have the last one
56:57 - but this last one we'll actually be just
56:59 - using this last one we'll be doing the
57:02 - following we're going to say bs three
57:05 - dots
57:06 - vertical
57:09 - and make this a self-closing tag and
57:12 - we'll just need to import this so just
57:15 - bs three dots vertical so going to the
57:17 - top and i'm just gonna say import
57:21 - bs three dots
57:24 - vertical from
57:25 - react icon bs okay so there we go we got
57:29 - the three dots showing up
57:32 - but you notice that all of this is like
57:34 - really close together that's not what we
57:36 - want we want it to have some separation
57:38 - in between them so i'm just going to do
57:40 - that with flex so we're going to say
57:43 - style
57:44 - let's say we'll give it a flex of 3
57:48 - we'll give this a flux of 2
57:52 - and then i'm going to repeat this
57:54 - process here
57:57 - for
57:58 - all of these and this will have a
58:00 - flex of one this will have flux of one
58:03 - and this will have a flux of zero
58:06 - okay
58:07 - all right so right underneath this table
58:09 - item now let's go ahead and add in our
58:12 - divider
58:14 - and then under this divider i'm just
58:16 - going to make a div and then here we'll
58:19 - actually now start forming showing our
58:22 - coins i'll do coins.map
58:24 - and this coins is coming from static
58:27 - coins all right so it's being imported
58:29 - from there just like that
58:32 - so in our coins.map i'm going to now say
58:36 - for each coin that you get
58:38 - do the following
58:40 - okay so i'm simply going to return it
58:43 - all right and then here i'm going to say
58:45 - create a div okay and then inside of
58:48 - this div
58:49 - end it
58:52 - inside of this div what i want you to do
58:54 - is
58:56 - create the coin
58:58 - and then give it a coin so we'll go
59:00 - ahead and make this component
59:05 - and then we're going to use a divider
59:11 - now before we go ahead and make that
59:12 - component let's just comment this out
59:14 - real quick and let's just say
59:16 - h2 and we'll just give it the
59:22 - can we try coin.name
59:26 - so at the very least now it's starting
59:28 - to show up in this this kind of table
59:31 - of course what we need to do is style
59:33 - this so
59:34 - we're going to go ahead and create our
59:37 - coin component now so let's go inside of
59:38 - components
59:40 - we'll go like this and we'll do coin.js
59:44 - okay
59:45 - inside of my coin component now i want
59:47 - to make sure that it looks nice so we're
59:49 - gonna
59:51 - add all the things that make it look
59:52 - nice all right so first things first
59:56 - let's import all the things we need
59:58 - so i'm going to need my style components
60:00 - i'm going to need to have this vertical
60:02 - dots here
60:03 - and then let's also use next image
60:05 - because it's highly optimized it's way
60:08 - better than using the regular image tag
60:11 - now for the styling let's go ahead and
60:14 - style this so i'm gonna create of course
60:17 - my let's do rf rafce
60:20 - and let's hit save so we have our coin
60:22 - we're exporting default
60:25 - let's go ahead and add in our wrapper so
60:28 - our wrapper is going to have a bunch of
60:29 - styling to make sure that it looks nice
60:33 - and then we have our name column so we
60:35 - need to add styling for our name column
60:37 - which is this one right there right the
60:39 - name
60:41 - we will need to add styling for our
60:45 - coin icon as well so let's do that
60:49 - boom there we go and then we will need
60:52 - some primary and secondary styling
60:57 - okay
60:58 - cool
60:59 - so what is this primary and secondary
61:01 - about well if i go to the final app
61:04 - you will see that this is primary text
61:06 - and this is secondary text
61:08 - right
61:09 - cool so we got our primary and our
61:10 - secondary and now let's start building
61:13 - out our coin so first things first we of
61:16 - course need a
61:18 - wrapper like this
61:21 - and then inside of our wrapper
61:24 - we're going to have a div
61:26 - inside of that div we will have another
61:28 - div
61:29 - we'll give this a style of flex 3
61:33 - like this
61:35 - and then inside of this div
61:37 - i want to do a couple of things
61:40 - so i want to have my
61:43 - name for the column
61:46 - okay
61:47 - and then inside of this i want to put my
61:49 - coin icon
61:52 - and in here i will have our image
61:55 - we'll give it a source of coin.logo
61:59 - and we'll give it alt of coin.name
62:04 - great let's close it out
62:07 - perfect and this coin will be getting
62:10 - and destructuring because we'll be
62:12 - passing in this coin from the coin
62:14 - component so
62:15 - in the
62:17 - dashboard you know from the dashboard or
62:19 - from wherever we're creating this we're
62:21 - going to be passing this information
62:22 - back
62:24 - cool so coin.name
62:27 - all right and let's just pass our coin
62:30 - let's just see what happens so far
62:32 - so let's go back to our portfolio
62:35 - and let's do this
62:38 - let's hit n and import coin so now it
62:41 - should import coin from coin
62:44 - and there we go
62:45 - we're starting to actually see it show
62:47 - up right it's not looking perfect just
62:50 - yet
62:51 - but it is starting to show up so that's
62:54 - a great sign
62:55 - okay
62:56 - cool
62:58 - all right let's go back to our coin
63:00 - component and let's keep building on top
63:02 - of our coin component so we got our coin
63:04 - icon then the next thing we need to do
63:07 - is create another div and then here i'm
63:10 - going to have a primary
63:13 - and then we're going to have a secondary
63:20 - secondary just like that
63:22 - and inside of my primary i'm going to
63:24 - put coin.name
63:27 - and in my secondary i'm going to put my
63:29 - coin dot sign
63:32 - there we go
63:35 - so now it's starting to look a little
63:37 - bit nicer
63:39 - we still have a couple of more things to
63:41 - add so let's keep going
63:43 - all right underneath this
63:45 - we're going to create another div
63:48 - like so
63:50 - and i'm going to give it a style of
63:54 - flex 2.
63:58 - and then in here i'm going to say
64:00 - primary
64:02 - we're going to add a this is going to be
64:05 - a dollar sign here just because we're
64:06 - going to show the dollars right after it
64:12 - like this
64:14 - okay so there we go
64:19 - so now we can see all of this
64:23 - cool
64:24 - that's the balance that you know we're
64:26 - just saying we have in usd
64:29 - and then the next thing i want to do
64:30 - right after this primary is we want to
64:32 - add a secondary right underneath it so
64:35 - i'll say secondary
64:39 - and we'll do coin dot balance
64:43 - coin
64:44 - and then we're gonna say coin dot sign
64:49 - so our table
64:50 - is starting to look really really nice
64:52 - and it's coming together it's coming
64:54 - together pretty fast
64:57 - so let's keep on going the next thing we
65:00 - need right underneath here
65:02 - is i'm going to create another div
65:05 - and we'll give it a flex
65:08 - one
65:12 - all right and then in this div i'm going
65:14 - to say primary
65:17 - we're going to do the same thing
65:20 - and except this time i'm going to say
65:21 - price usd
65:24 - there we go
65:26 - cool
65:27 - showing up
65:28 - nicely
65:29 - so that's looking good and now the next
65:31 - thing we need to do right underneath
65:33 - this primary let's create another div
65:37 - and we'll give it a style we'll say
65:39 - color is coin change
65:44 - so for some of them it might be color
65:45 - red right or color green
65:48 - and then we'll basically say
65:51 - if the change
65:53 - is uh less than zero
65:56 - then we're going to give this give it
65:57 - this red color
65:59 - otherwise we're going to give it this
66:01 - green color
66:02 - like that that's how we're gonna style
66:04 - these
66:06 - cool
66:08 - and then we're just gonna go ahead and
66:10 - write so we'll say
66:11 - coin.change if it's greater than zero
66:14 - [Music]
66:17 - then basically give me a plus sign
66:22 - okay
66:23 - so you see
66:24 - it's giving a plus sign only if the
66:26 - change is greater than zero some of them
66:28 - might not have a greater than zero
66:30 - change you can go and look in your
66:32 - you know static coins file
66:35 - so if you look for change here change
66:37 - right negative four percent that's why
66:39 - it doesn't have a plus sign here
66:41 - but maybe let's look at ethereum
66:44 - and ethereum has a positive change so
66:47 - you can see ethereum has a green plus
66:49 - sign right there great let's go back and
66:52 - pick that pick up where we left off and
66:54 - now i'm just going to say show me the
66:56 - coin change and then we'll put this
66:57 - percentage sign right next to it okay
67:00 - just like that
67:02 - coin change is now showing up
67:05 - and then what we need to do is let's go
67:07 - right here
67:09 - okay and then we'll do
67:11 - style of flex one
67:14 - all right and here i'm gonna set coin
67:16 - dot allocation
67:18 - we'll do percent
67:21 - how much allocation of our budget do we
67:23 - have in this
67:26 - okay and then close that div
67:29 - and then we'll create a new div
67:31 - this will have a style of flex zero
67:36 - and i'm gonna put my three vertical dots
67:39 - in
67:40 - there okay just like that
67:45 - cool
67:47 - okay
67:48 - so my table at this point my coin act my
67:52 - coin icon
67:54 - is is completed all right all my coins
67:57 - are showing up if i were to add another
67:59 - coin that would also show up fairly
68:00 - quickly right so if i go to my coins
68:02 - component
68:03 - and let's just say that
68:05 - we copy i don't know this uh ethereum
68:09 - from here
68:11 - and i paste that right there
68:14 - and we say you know instead of ethereum
68:16 - it's called uh cp
68:18 - token
68:20 - and it's cpt and logo yeah let's just
68:23 - have it use the ether logo
68:25 - and for balance we're gonna say we have
68:27 - 300
68:29 - uh
68:30 - dollars worth right and then balance
68:32 - coin let's say seven six
68:35 - price usd is nine
68:37 - change is
68:39 - 24 percent
68:41 - okay so if i were to go and open it up
68:43 - you can see the cpt
68:45 - cpt token showing up at the bottom
68:48 - okay
68:49 - so
68:50 - let's go ahead and um
68:53 - let's refresh this
68:56 - let's uh remove this for now
68:58 - okay and then go back to our app there
69:00 - we go okay
69:02 - so we just removed it we don't need that
69:04 - one now but you can see that our coin
69:06 - component is working right and even
69:08 - though it wasn't perfect but it like
69:10 - showed it and it actually built it out
69:13 - all right now what we should do is
69:15 - before we fix everything and kind of add
69:17 - proper spacing here and everything right
69:19 - like kind of how we have here
69:21 - let's go ahead and work on our sidebar
69:23 - component because i just want to quickly
69:25 - whip up everything then fix and optimize
69:28 - things right and then that way i just
69:30 - have the mvp going kind of as fast as
69:32 - possible
69:33 - so let's start working on the sidebar
69:35 - now
69:36 - so for the sidebar we're going to do it
69:38 - in a similar way i'm going to go inside
69:39 - of my components we're going to create a
69:41 - new file i'm going to call it side.js
69:43 - we're going to hit rafc e so it auto
69:46 - completes perfect all right now inside
69:49 - of sidebar let's go ahead and do
69:52 - the similar types of things that we were
69:53 - doing earlier
69:55 - okay
69:56 - i'm gonna add in my wrapper here okay
69:59 - and we're gonna basically add in the
70:01 - styling for the wrapper so i got my
70:02 - height for it how big i want the sidebar
70:05 - to be i wanted to take up you know
70:07 - pretty much my viewport height
70:09 - i want to have a certain border right to
70:12 - create this like separation right so for
70:14 - example
70:15 - right over here you see that all right
70:18 - so creating that and then i'm just
70:20 - calculating it to be
70:21 - you know basically just to the side and
70:24 - not take up the whole whole thing so to
70:26 - speak
70:28 - okay cool the next step what i need to
70:30 - do is i need to give it a padding so i'm
70:32 - going to give it that padding and then
70:34 - i'm just simply going to close this off
70:37 - like this
70:40 - cool
70:41 - all right
70:42 - so we've got this now i'm going to
70:44 - create my logo container
70:46 - all right
70:48 - so inside of here i'm just going to say
70:50 - margin
70:51 - 1.5
70:53 - okay and then we're going to close this
70:55 - off
70:58 - and after this let's go ahead and give
71:00 - it a logo okay logo we're going to give
71:02 - it a width object fit margin left
71:06 - so now it's going to just make sure that
71:07 - the logos look nice so these are these
71:11 - logos that we're talking about right
71:12 - here
71:14 - okay
71:16 - and then
71:17 - let's go ahead and do navs item
71:20 - container
71:22 - okay
71:23 - and so basically this is going to make
71:24 - sure that i'm hovering so each one has a
71:26 - container right here as you saw
71:29 - right and then when i hover over
71:31 - it turns into a pointer right there
71:35 - cool
71:37 - all right and then for each nav item
71:40 - i want a bunch of stuff to happen so i
71:42 - want to have it get the styling and the
71:44 - border radius so for example when i
71:46 - hover over
71:47 - you can see that there's a border radius
71:49 - around it i don't know if you can
71:51 - notice that but it's like pretty you
71:54 - know let me zoom in here you should be
71:56 - able to see it right there see that
71:57 - border radius
71:59 - all the way right there right so that's
72:00 - that styling
72:03 - cool
72:04 - okay
72:06 - and then the background color changes on
72:08 - hover right so this is what we want that
72:10 - functionality right there okay so that's
72:12 - why we added that line of code and then
72:14 - for the nav icon what i want to happen
72:16 - is when i hover over it
72:18 - right it has its own the nav icon has
72:20 - its own styling so for example if you
72:22 - notice it's slightly gray there's a
72:24 - background
72:26 - you know the border radius is to make
72:28 - the circle right there
72:30 - so that's why we're doing it like that
72:32 - and then we just make sure it's
72:33 - centralized so place items so display
72:36 - grid instead of display flags instead of
72:37 - justify content or align items we have
72:40 - place items okay because we're using
72:41 - grid
72:43 - cool
72:45 - all right so that's as far as the
72:47 - styling is concerned now we just go we
72:49 - need to go ahead and just create this so
72:51 - i'm going to go ahead and create my
72:53 - wrapper here
72:55 - okay my wrapper is going to create
72:56 - contain everything in there
72:58 - and then let's just add in a logo for
73:00 - now okay so we're going to do logo
73:02 - container and inside of this logo
73:05 - container we'll have our logo
73:08 - okay and then in this logo i'm going to
73:10 - have my image and it's going to be our
73:13 - coinbase logo
73:17 - okay
73:18 - and now for source we might run into
73:20 - problems so all we need to do is
73:22 - actually just import this from here
73:24 - and uh let's go and get our sidebar
73:29 - now showing up so let's go to our in
73:31 - terms of showing the sidebar let's go to
73:33 - our dashboard
73:36 - okay i think let's add the sidebar
73:39 - there so i'm gonna go to my dashboard
73:42 - and in here right underneath the wrapper
73:44 - here i'm gonna add in my sidebar so
73:45 - we'll do sidebar like this
73:48 - save
73:50 - and let's go to our app and let's see if
73:52 - it shows up okay
73:54 - every time i fall for this import styled
73:57 - from style components
74:01 - let's hit save let's refresh
74:04 - okay construct image please use new
74:07 - operator interesting so what's the
74:10 - oh because um i'm not
74:13 - pulling the image so we need to actually
74:14 - make sure we do that
74:17 - let's use the image right here from next
74:21 - and let's refresh again
74:25 - okay so our sidebar is now right there
74:29 - so that's perfect
74:31 - it's able to get its own space it's able
74:34 - to push the rest of this content out
74:37 - right so our sidebar is
74:40 - sort of working how we want it to be
74:42 - working okay so that's a
74:44 - that's a good sign
74:46 - zoom in here just a little bit okay so
74:48 - we got our sidebar
74:50 - cool now what we need to do is we need
74:52 - to add more stuff into our sidebar so
74:54 - let's go ahead and do that
74:57 - so in our sidebar
74:58 - i'm gonna go
75:01 - we'll create our nav items container
75:06 - all right and then i'm going to say then
75:08 - we're to loop through all of our nav
75:10 - items okay so where am i going to get
75:12 - these nav items from well i'm going to
75:14 - say import
75:16 - nav items
75:18 - from
75:19 - it's from our static folder that we have
75:23 - right there we go
75:27 - perfect
75:28 - can't resolve nav items
75:31 - let's check our static here
75:34 - and we do have nav items right there oh
75:37 - i misspelled static
75:39 - spell it correctly
75:42 - perfect
75:43 - great
75:44 - all right now the error makes sense so
75:46 - that's totally fine
75:50 - and we're going to map through here so
75:52 - i'm going to save
75:54 - i'm going to hit enter there
75:58 - okay and let's go here and i'm going to
75:59 - say nav items dot map
76:03 - and for each
76:04 - item i want to do the following i
76:07 - essentially want to
76:10 - create my nav item
76:12 - okay
76:13 - and we can give it a key as well
76:16 - [Music]
76:18 - so let's do this index
76:21 - and i can say key
76:24 - can just be the index and we can give it
76:27 - an on click
76:28 - so on click what i want to happen well
76:31 - actually let's give it on click in a
76:32 - second that will require us to add some
76:34 - state
76:35 - let's just do it without the state for
76:37 - now so we got our nav item right there
76:41 - and then i want to do nav icon we'll
76:44 - give it a style and for the style i'm
76:46 - gonna give it a color
76:49 - okay and again this is gonna this is
76:51 - gonna require us to be a little bit
76:53 - dynamic so let's
76:56 - leave this out for a second again
76:59 - because this is required state again
77:02 - all right and then in here
77:04 - i'm going to say item dot icon
77:10 - like this
77:12 - okay
77:13 - perfect let's hit refresh
77:17 - great
77:18 - great great great great great great so
77:20 - now
77:22 - our nav bar is showing up here
77:24 - just like how we just like how we wanted
77:27 - okay so that's a great sign
77:29 - now let's make sure we add the nav title
77:31 - as well so right under the nav icon
77:35 - what we want to do is
77:37 - add our title okay so this is our nav
77:40 - icon right underneath here let's go nav
77:43 - title
77:47 - okay and i'm going to say item
77:50 - dot title
77:53 - okay nav title is not defined
77:55 - no worries let's just go ahead and
77:58 - define it and we're gonna make it empty
78:00 - so i'm gonna say nav
78:02 - title
78:04 - okay and we're gonna go style div
78:07 - empty and let's go const
78:12 - okay
78:14 - now nav title should be defined
78:16 - perfect there you go so look at that
78:19 - when i hover over you get that effect
78:23 - right boom
78:24 - we got that hover effect
78:26 - right i got my table
78:28 - with all my assets right here
78:31 - i got my header showing up at the top
78:34 - there
78:35 - so
78:36 - the app is starting to look like how we
78:38 - want it to look like
78:40 - okay so this is a really good sign
78:43 - let's go back and
78:45 - start adding keep adding more things so
78:48 - i'm going to add you know the things on
78:50 - the side here
78:51 - i think that's some one of the things
78:52 - that we need to add and then we need to
78:53 - add the portfolio thing
78:55 - at the top right there okay so let's go
78:57 - ahead and add those now all right so one
78:59 - thing we need to do to really make sure
79:01 - that this looks great is let's wrap this
79:04 - in content
79:05 - once we do that this is gonna actually
79:07 - look a lot a lot better okay so let's go
79:10 - ahead
79:11 - this content styling that we had made
79:13 - earlier right so let's go and go content
79:16 - here
79:18 - all right and i'll go all the way down
79:21 - and right there i'll add it
79:23 - add it too
79:24 - and now if you look at this this looks
79:27 - definitely a lot better than it did
79:29 - all right one more thing i want to do
79:30 - here is i don't like the how these
79:34 - sidebars show up it's kind of ugly
79:36 - so you know and now there's like four
79:38 - sidebars you know scroll bar showing up
79:40 - so what we're gonna do is we're gonna go
79:43 - inside of our main
79:45 - and instead of making the overflow
79:47 - scroll i'm going to make it hidden
79:50 - so now
79:52 - the scroll bars for the table are gone
79:54 - right so they don't show up anywhere so
79:56 - that's good
79:57 - and then we'll try to see if we can make
79:59 - these scroll bars at the bottom
80:01 - disappear as well actually because
80:03 - that's not nice right when i go over i
80:05 - can see the rest like what the heck is
80:06 - that
80:07 - so we're gonna go to our dashboard.js
80:10 - and then inside of our dashboard i'm
80:12 - just gonna to the wrapper i'm just gonna
80:14 - add in overflow hidden
80:17 - and now it looks squeaky clean
80:19 - everything looks uh
80:21 - great that's
80:23 - that's the look that we are after
80:26 - now before we work on any more like big
80:29 - front end
80:30 - stuff you know for example there's a few
80:33 - things that we got to add i want to
80:34 - start adding in some third web and web3
80:38 - stuff as well so for example up here
80:41 - i want to say you know the wallet is
80:43 - connected and who it's connected to so i
80:46 - want to add that to the app just like
80:47 - how in our app right here
80:49 - i can see wallet connected and it tells
80:51 - me the address so let's go and work on
80:53 - that functionality real quick
80:56 - so let's create some styling now let's
80:58 - go inside of our header.js and we're
81:01 - going to start creating some styling for
81:03 - our buttons so
81:06 - we're for our wallet
81:08 - so our wallet link is going to have some
81:10 - styling so let's go and give it some
81:12 - styling right there and
81:14 - also
81:16 - so this styling over here is you know
81:18 - just
81:19 - this guy over here we're basically
81:21 - styling that guy right there
81:22 - we're going to give it a wallet link
81:26 - wallet link title is also gonna have
81:29 - some styling and that's that green color
81:31 - text that's gonna say your wallet is
81:33 - connected
81:34 - all right and then we're gonna get our
81:37 - wallet address we don't need to give
81:39 - this a color so let's remove that there
81:42 - and then pretty much we are
81:47 - you know good to go this is all our
81:48 - wallet related styling now all we need
81:51 - to do is inside of our buttons container
81:53 - we need to actually add our wallet so
81:56 - let's go ahead and let's do wallet link
81:59 - inside of this i'm going to go wallet
82:02 - link title
82:04 - and i'm going to say wallet connected
82:08 - and then right underneath here is we're
82:10 - going to have our wallet address
82:14 - all right and our wallet address is
82:16 - basically going to be our wallet address
82:18 - and i'm going to slice it just give me
82:20 - the first seven uh letters
82:23 - and then give me like three dot dot dots
82:26 - sort of situation here and then give me
82:30 - the rest so address dot slice 35
82:34 - there we go
82:35 - cool so let's take a look
82:37 - if it's adding that alright so it's
82:39 - having trouble with wallet.address
82:42 - and that might be because this is
82:43 - lowercase w
82:46 - and this wallet address we actually need
82:48 - to pass it through our prop so we're
82:50 - going to say wallet address and we're
82:52 - also going to say connect
82:54 - wallet like this
82:56 - so let's go back to our
83:00 - dashboard where are we giving the header
83:02 - so our header
83:03 - we're going to need to pass in the
83:05 - address to our header like so
83:08 - okay let's go back to our header
83:11 - all right a wallet address
83:15 - so we can say wallet
83:19 - address just like this give it the
83:21 - address
83:22 - it will destructure the wallet address
83:24 - and then use it so let's refresh
83:27 - and let's see what happens we're still
83:29 - getting an error
83:31 - and that's because i have another
83:32 - uppercase w here so this needs to be
83:34 - lowercase so let's go ahead and do this
83:38 - and let's refresh
83:41 - and there we go our wallet connected
83:44 - is showing up here
83:46 - and it shows us our first couple of
83:48 - strings and then after that it puts
83:50 - these three dots and then it shows us
83:51 - the rest okay that's pretty much what's
83:53 - happening here
83:55 - let's uh remove the space between the
83:57 - dots i'll normalize it
83:59 - make it look slightly better there we go
84:02 - and now these look similar
84:05 - okay perfect and it knows which wallet
84:07 - i'm connected to right you can see it's
84:09 - pulling that info right from there
84:12 - now let's see what happens if i log out
84:16 - so let's go connected sites let's remove
84:18 - localhost and log out
84:20 - i'm on the home page
84:23 - we're going to hit uh connect wallet
84:25 - once it lets us
84:27 - let's kill our server and let's start
84:29 - our server again
84:33 - there we go
84:34 - [Music]
84:37 - all right so it's asking to connect
84:38 - wallet so let's say i connect
84:41 - and i choose my coinbase blockchain one
84:44 - let's hit connect
84:46 - and there you go i'm in so you can see
84:49 - that authentication is actually working
84:52 - just as expected right it's pulling my
84:55 - wallet code right there now let's finish
84:58 - up our styling here real quick so for
85:00 - example when i choose it we want it to
85:02 - turn blue
85:04 - just like this how i choose this here it
85:05 - turns blue and it stays blue
85:08 - so for this you're going to need to
85:09 - actually keep track of state so let's go
85:11 - and update that real quick and what we
85:13 - need to do is we need to keep track of
85:14 - state so i'm going to paste this here
85:16 - and basically what i'm saying is hey
85:18 - the active icon and set active icon and
85:22 - then the default state is going to be
85:23 - whatever the initial title is because
85:27 - in the start i want assets to be blue
85:29 - that's essentially what it's saying so
85:30 - make the zeroth one
85:33 - blue
85:34 - and then we need to import u-state as
85:37 - well actually from react so let's go
85:39 - ahead and do that
85:40 - now we are using use state now we
85:43 - actually need to start using this this
85:45 - active icon and set active icon
85:48 - so we have our
85:50 - nav item now on click we need to do
85:53 - something to it so let's go on click
85:56 - and we're going to say set active icon
85:59 - to item.title
86:03 - and then the one more thing that we need
86:05 - to pass is the style property
86:08 - to our nav icon
86:10 - okay just like this so all i'm saying
86:13 - here is hey if the title is equal to the
86:16 - one that i just clicked like it the one
86:17 - that i clicked if that's the active one
86:20 - then just set it to blue that's all so
86:22 - click click click click click
86:25 - and it works
86:27 - so active icon
86:29 - when i click it
86:31 - if that's equal to the one that's
86:32 - written right here
86:34 - then make that blue
86:36 - there we go
86:38 - that's all that's required to make that
86:40 - happen just a few lines of code
86:43 - so now our sidebar is perfectly
86:46 - completed
86:47 - our table is pretty darn good to go and
86:50 - we have our wallet connected showing up
86:53 - looking really good now all i need to
86:54 - kind of add here
86:56 - is of course we need to bring this chart
86:58 - in
86:59 - and then on top of this chart we also
87:02 - need to
87:03 - build these on the side here so let's
87:05 - build these on the side here real quick
87:07 - and get these up and running
87:09 - so those are just promos right that's
87:12 - all they are so let's go ahead and bring
87:14 - those promos in
87:16 - i'm going to create a component here
87:18 - it's going to be called promos.js
87:22 - and then in mypromos.js
87:25 - i'm going to have a i'm going to do
87:27 - rafce
87:29 - complete that
87:30 - and then here i'm going to add in my
87:32 - styling all right so we're going to add
87:34 - in our wrapper
87:36 - we're going to give it some margin from
87:37 - the top and some padding right
87:39 - we're going to have how our offer card
87:41 - looks so that's the styling for that
87:44 - this title
87:46 - will be
87:48 - where it says yield earned that's that's
87:50 - going to be the title
87:54 - and then we need to have our style our
87:57 - description so that's just the font size
88:00 - we got our placeholder give it a flex
88:02 - one
88:04 - and then this is going to be our
88:05 - additional
88:09 - perfect
88:11 - okay
88:13 - cool
88:14 - all right so this is like anything i
88:16 - guess kind of at the bottom additional
88:18 - there okay
88:21 - cool so we are we're good with this
88:24 - now all we need to do is actually just
88:25 - put this together all right so i'm going
88:27 - to go ahead and go here and say wrapper
88:31 - all right and then inside of my wrapper
88:33 - i'm going to have my
88:35 - offer card
88:38 - and then in here i'll have my title so
88:40 - let me say yield
88:43 - earned
88:45 - so this is my offer card one
88:47 - and then we'll have our offer card two
88:49 - and this will say
88:53 - learn and earn
88:54 - just like that so we have our two cards
88:57 - now we need to make sure that these
88:58 - promos show up
89:02 - so where do we want these promos to show
89:04 - up
89:05 - we probably want to want them to show up
89:07 - in maine
89:09 - so let's go back to main
89:11 - and right underneath this portfolio i'm
89:14 - going to add this here chromos is not
89:16 - defined so
89:17 - make sure you import it like this
89:21 - let's hit refresh
89:23 - and styled is not defined which is the
89:26 - same freaking problem i fall for every
89:28 - single time so let's go ahead and add
89:30 - that in so i'm going to say import style
89:32 - from style components just like that all
89:35 - right so now it should bring it in
89:38 - perfect our cards are showing up
89:41 - looking exactly like expected
89:44 - and now all we need to do is just finish
89:47 - them up we need to just finish up the
89:49 - styling inside of them and adding
89:52 - adding stuff to it
89:54 - okay cool
89:55 - so
89:56 - here's what what i need to do i need to
89:58 - give it a description
90:01 - all right and that could be earn
90:05 - and on earn up to
90:08 - up to
90:09 - 2.84
90:11 - apy on your crypto right annual
90:13 - percentage
90:14 - whatever interest or whatever right
90:16 - description
90:17 - we're gonna have a placeholder right
90:20 - underneath that
90:22 - that's just to kind of give it some
90:23 - extra spacing and things like that
90:26 - and then i'm gonna give it an additional
90:28 - one so that's gonna be
90:31 - you'll you'll see so let's let's show
90:32 - you because i'll look better there we go
90:34 - so this is our additional right here
90:36 - 2.84 percent
90:38 - showing up right there right here boom
90:40 - and then the span tag knows how to style
90:42 - it inside of the span tag
90:45 - so if i go inside of our additional
90:46 - component you can see for the span tag
90:48 - we're saying hey style it like this
90:49 - override the color make it gray
90:52 - and then font size that
90:55 - beautiful
90:57 - perfect and then we need to fill out our
91:00 - learn and earn part so we're gonna go
91:02 - ahead and fill that out now
91:05 - earn up
91:06 - to
91:08 - okay
91:09 - same thing placeholder and then verify
91:12 - identity and we're giving it special
91:14 - blue
91:16 - and so when we go look there we go so
91:18 - now on our local host you can see
91:22 - uh this looks super solid all right now
91:25 - let's add in the balance chart
91:28 - that chart goes right here what i'm
91:30 - going to do is i'm just going to give
91:32 - you in a downloadable asset the chart so
91:34 - you don't have to kind of copy the file
91:36 - but it's all hard-coded data
91:39 - and we'll go ahead and build it so
91:41 - you'll be able to write it out
91:43 - and you can also just kind of download
91:45 - this file okay it's going to be called
91:47 - balance
91:48 - chart.js
91:49 - okay it's going to be a component like
91:51 - this
91:52 - and then inside of here
91:55 - we're going to do a couple of things so
91:57 - we're going to need to install this
91:59 - library right here so let's go ahead and
92:01 - install it so i'm going to say yarn add
92:04 - and we're going to do react chart js2
92:08 - all right and then we need to start
92:10 - building our chart so our chart is going
92:13 - to have lots of things so we're going to
92:15 - create this variable here called const
92:17 - data all right that's going to hold our
92:19 - chart and let's actually build our
92:22 - component first
92:24 - now i don't need to import react from
92:26 - react it's not necessary it's like
92:28 - optional you don't really need to do
92:29 - that
92:31 - so this is our balance chart
92:33 - let's build our wrapper which in this
92:35 - case is just going to be empty and then
92:39 - i'm going to put my wrapper right there
92:41 - let's end the wrapper here like so
92:45 - oh
92:47 - all right and then inside of this
92:48 - wrapper i'm going to add a line
92:52 - and that line is uh the line that you
92:53 - see
92:54 - in our completed app right here you see
92:56 - this app this line right there so we're
92:59 - just kind of hard coding that line again
93:01 - you can add it in that's an extra
93:03 - challenge for you but remember that then
93:05 - it's just going to make this app all
93:06 - front end base and we'll never get to
93:08 - the back end part right so
93:10 - some of this is just for
93:12 - kind of show making the app look great
93:15 - so let's add that line
93:18 - and then all we need to do is just
93:19 - create a data
93:21 - that will hold everything so i'm going
93:23 - to do const data here
93:25 - all right and then in this data i'm
93:26 - going to have two things i'm going to
93:27 - have labels
93:30 - and let's just leave that as an empty
93:31 - array and then we're going to have data
93:33 - sets and that's going to be an empty
93:34 - array all right so these are the two
93:37 - things that my data needs
93:40 - for my labels
93:41 - i'm going to have multiple labels so
93:44 - kind of like bunch of my months here so
93:46 - april may june july
93:49 - and then for my data sets i'm going to
93:51 - give it this object right here
93:54 - so fill is false line tension background
93:57 - color this is just to style that line
94:01 - what its
94:02 - point radius should be point hit radius
94:05 - all of that and then you just plop in
94:08 - just some dummy data in there that's it
94:10 - that creates our balance chart and then
94:12 - all we need to do is actually go ahead
94:14 - and use that balance chart so we're
94:16 - gonna go ahead in our portfolio
94:19 - and inside of our portfolio i'm going to
94:22 - import this we're going to import
94:24 - balance chart from
94:26 - balance chart
94:28 - and can't resolve chart dot js just had
94:32 - to kill the server and restart it so
94:34 - that's all i did here kill the server
94:36 - restarted it
94:37 - all right right here and uh looks like
94:39 - it is
94:41 - good to go
94:42 - so i imported it now now we just have to
94:46 - use it
94:48 - so all we need to do here is right under
94:50 - where i'm showing
94:54 - let's see where's a good place to add it
94:57 - for now let's just add it right above
95:00 - the portfolio table so i'll go right
95:02 - above the portfolio table
95:04 - and we'll add it right there let's see
95:06 - if it works for us
95:08 - so it's having errors here so let's go
95:11 - back to our balance chart
95:14 - and that's because
95:16 - we need to destructure here so we're
95:17 - going to destructure data and
95:19 - destructure
95:21 - options
95:27 - we just need to actually create options
95:30 - that's all we need to do so let's go
95:31 - right here right underneath this
95:33 - and we're gonna do const options
95:36 - and i'm gonna say plugins
95:39 - legend and then we're gonna say display
95:41 - false
95:44 - just like that
95:45 - and now options is defined
95:50 - alright so now one magical thing we have
95:52 - to do here is just go import chart from
95:56 - charges
95:57 - auto
95:58 - and even though we're not using it in
96:00 - our code
96:02 - it actually gets rid of that error we
96:04 - were having and
96:06 - there's our chart
96:07 - okay beautiful so now we're getting our
96:10 - chart
96:11 - and we need to add a couple of things
96:13 - there
96:15 - so we're going to go inside of our
96:16 - portfolio
96:19 - and we just need to create a couple more
96:20 - things so for example we need to create
96:22 - a chart styling
96:24 - so i'm going to go right here underneath
96:26 - the content
96:27 - and we need to create
96:29 - and style our chart
96:31 - put a border around it that's what one
96:33 - thing so this will put a
96:35 - border around it like this like a square
96:38 - kind of like how there's one around the
96:40 - data table the assets table
96:43 - the next thing we need to do is we're
96:46 - just going to make one for balance this
96:47 - is not really going to have any styling
96:50 - we're going to have the balance title
96:53 - and give it a
96:55 - specific color
96:56 - we're going to have a balance value as
96:59 - well
97:00 - so those are the stylings we need to
97:01 - create for this
97:03 - and now let's get to work on building
97:05 - these all right so on in the content i'm
97:07 - gonna have chart
97:09 - all right inside of that chart i'm gonna
97:11 - have a div
97:13 - and in here i'm gonna have
97:15 - my balance and inside of here
97:18 - we'll have our balance
97:20 - title
97:22 - and i'm going to say portfolio
97:24 - [Music]
97:25 - balance
97:27 - and then we're going to have our balance
97:30 - value
97:33 - and um
97:34 - we're going to give it a dollar sign
97:36 - here and then of course we're going to
97:38 - pull this from our wallet so we're going
97:39 - to say 2
97:41 - locale
97:41 - [Music]
97:43 - string
97:45 - and we'll make this in a second for now
97:49 - let's just put a random
97:51 - number like 46 000 for now so you can
97:54 - see
97:56 - it's showing the portfolio balance is
97:59 - showing up right there
98:01 - that's that's kind of the look that
98:02 - we're after
98:05 - and let's take our balance chart and put
98:07 - it inside of our chart so like this
98:11 - there we go look at that how nice that's
98:14 - looking right there we go so
98:17 - our front end here is pretty much
98:20 - pretty much done
98:23 - so one bug i noticed here already is
98:25 - when i try to scroll up and down
98:27 - right as i'm trying to scroll up and
98:29 - down
98:30 - it's not moving anywhere i'm stuck
98:33 - so what i'm going to do is i'm going to
98:35 - go inside of my main.js and in my main
98:39 - what i'm going to do is i'm going to do
98:41 - overflow
98:43 - y scroll so allow scrolling on the
98:45 - y-axis so here i can see it but that
98:48 - still looks ugly and i don't want to see
98:50 - the scroll bar
98:53 - so what i'm going to do is i'm going to
98:54 - say webkit
98:57 - scroll bar like that
99:00 - with the double dots and the start
99:03 - and i'm going to say display
99:06 - none
99:08 - and now let's see
99:09 - so see i can actually scroll up and down
99:12 - but there's no scroll bar
99:15 - so
99:16 - that's kind of the look that we're after
99:18 - right so that's
99:20 - exactly perfect
99:22 - great
99:23 - if i look at my chart here when i hover
99:25 - over look at that nice little 59 80 81
99:28 - right it shows it's super nice you can
99:30 - see the dips
99:32 - and if you want to customize this you
99:33 - know feel free to go ahead and customize
99:35 - it make it however you want
99:38 - and um we're now starting to get pretty
99:40 - close to all the
99:42 - amazing blockchain and javascript parts
99:45 - so get ready for that because that's
99:47 - about to start and the sanity and we're
99:49 - about to mix it all together this was a
99:51 - lot of the front end we're building so
99:53 - we're getting into it just stay with me
99:55 - all right now let's go to our sanity and
99:58 - get our because what we want to do is we
99:59 - want to get the entire balance that we
100:01 - have here so we're going to do is we're
100:03 - going to pull
100:04 - everything that we have insanity
100:06 - inside of our sanity database
100:09 - all right and i'm going to pull that and
100:12 - i'm going to pull
100:13 - and then what i'm going to do is i'm
100:15 - going to
100:17 - see that look that up in third web to
100:19 - see exactly
100:21 - you know for each of those tokens how
100:23 - much how much money do i have for each
100:25 - of those tokens so for example sanity
100:27 - you know gives me okay here is a bitcoin
100:30 - well then i look that up in third web
100:32 - and i go how much do i have
100:35 - in bitcoin third web tells me hey you
100:37 - have three bitcoin
100:39 - okay cool then i add a three then i go
100:41 - back to sanity and i go what's another
100:43 - token i have it goes you have eth and it
100:45 - goes and then i go to third web and i go
100:47 - how much of each do i have and it goes
100:49 - you have four eth so then i go three
100:51 - plus four
100:53 - then i do that process again i go sanity
100:56 - what's the next token i have solana okay
100:58 - great sanity goes and asks then we go
101:00 - and ask third web hey
101:03 - you know how much
101:05 - soul do i have and third web tells us in
101:08 - our wallet there's 150 soul
101:10 - okay great so then this is what we have
101:13 - right once we're done with this loop and
101:15 - iterating like that you go all right
101:18 - we have you know total of x amount and
101:21 - this is not we're not going to just
101:22 - store this because it's not in the same
101:24 - denomination so what we want to do is we
101:26 - will multiply this by usd it's a dollar
101:29 - value we'll multiply this by its
101:31 - corresponding usd and this by its
101:33 - corresponding usd conversion right so
101:35 - for example for seoul
101:37 - it's 136 dollars
101:39 - so 150 multiplied by 136 4
101:45 - thousand multiplied by
101:45 - dollars because eth three multiplied by
101:48 - forty one thousand dollars three bitcoin
101:51 - and then that equals as one big
101:54 - uh number so let's just say that's i
101:56 - don't know hundred and sixty thousand
101:58 - dollars i'm just making that up
102:00 - how much is 150 times let's see 130
102:05 - so our soul is worth about 20 grand
102:08 - i'm just doing this random math this is
102:10 - 40 times 3 so that's
102:13 - 120 k
102:15 - bitcoin and then
102:17 - 4 times 3 100 is 12 k
102:22 - right so all of this combined should be
102:24 - 120 plus 20 140 140 plus 12 is 100 about
102:28 - 152 all right so we want that balance to
102:31 - be updated like that
102:34 - that's essentially how we want to figure
102:35 - that out so that's where we're gonna
102:37 - have sanity and third web like
102:39 - communicate with each other back and
102:40 - forth
102:41 - so let's go to
102:43 - sanity
102:45 - all right and what i'm going to do is i
102:46 - need to create a query so i'm going to
102:48 - click vision
102:50 - all right so let's go inside of our
102:51 - vision
102:52 - and vision will allow us to create a
102:54 - nice query and this is what this query
102:56 - looks like so i wrote this here
103:00 - but we can also write it from scratch so
103:02 - let's delete
103:04 - let's delete this and
103:06 - i'll kind of have you walk through this
103:09 - together with me let's zoom in a little
103:11 - bit here so it's easier to read
103:13 - but we're using this language called
103:15 - grok and that's what's going to allow us
103:17 - to create this query so i'm just going
103:18 - to say
103:19 - give me where type is coins
103:23 - and then
103:24 - in there just give me the name
103:27 - so let's say i hit fetch
103:28 - and you will see that it just gave me
103:30 - back
103:31 - all of my coins and all of their names
103:34 - okay cool it's kind of like graphqli
103:36 - that's how you write graphql
103:38 - a little bit similar to this also give
103:40 - me the usd price
103:42 - let's make sure to put commas there
103:44 - because otherwise it'll choke
103:45 - so put commas
103:48 - now it's giving me the name of each and
103:50 - the usd price of each perfect that's
103:52 - exactly what we're looking for well give
103:54 - me the contract address while you're at
103:57 - it because that's going to be necessary
104:00 - cool so i got my contract address now
104:02 - give me the symbol and the logo as well
104:06 - alright so now i have the
104:09 - logo image which is this url
104:12 - i got my contract address i got that
104:15 - it's ethereum the symbol that it's eth
104:17 - and usd price and it's doing that giving
104:19 - it to me for all of them so i get back a
104:21 - result of three
104:24 - right and it's uh array of objects so
104:26 - very simple
104:28 - logical api kind of how all apis are
104:31 - right
104:33 - now what's important is for me to
104:35 - understand that
104:36 - all of this is just done in my ui or in
104:39 - my url
104:40 - so if now all i got to do is just copy
104:42 - this url and if i paste that url and hit
104:44 - enter
104:46 - boom look at that i get all my data back
104:49 - in 24 milliseconds so it's freaking fast
104:53 - right this is quick hit it enter and now
104:56 - i got it back in 22 seconds now i got in
104:58 - 17 milliseconds now 13 milliseconds
105:01 - so you can see that it's caching it and
105:04 - it's just making it faster and faster
105:06 - each time that i get it
105:07 - so
105:08 - that is all i need it's this url
105:11 - so let's go ahead back to our app
105:16 - and here's what we're going to do we're
105:17 - going to create a use effect hook
105:22 - and so i'm going to create my use effect
105:24 - hook let's import it
105:28 - all right and the dependency for this
105:30 - one is going to be an empty array so
105:34 - just nothing
105:36 - and i'm going to basically say
105:40 - this
105:43 - this is going to be a async function
105:48 - and here's what we're going to do so
105:50 - we'll do a try catch here so i'm just
105:52 - going to say const
105:54 - coins
105:55 - and we'll await
105:58 - fetch
105:59 - so double quote it
106:01 - just because there's a single quote
106:03 - inside of it
106:08 - perfect
106:10 - and of course we need a catch so i wrote
106:13 - my try and let's just do my catch
106:16 - and we'll just say
106:18 - catch
106:20 - error
106:23 - right and we'll just do console.log
106:26 - error
106:29 - like that
106:31 - and then once i fetch this all i need to
106:34 - do is go
106:36 - temp sanity token so these are our
106:38 - sanity tokens that we're getting
106:40 - and i'm gonna do await coins.json
106:46 - and once i have that then i just update
106:48 - my state so let's create a state
106:51 - variable that's gonna keep track of all
106:52 - of this so we're going to say consanity
106:55 - tokens
106:56 - set sanity tokens
107:00 - and i'm simply going to do use state
107:03 - and we'll start it off with an empty
107:05 - array
107:07 - you state is not defined so all good at
107:09 - the top we will import you state
107:13 - all right
107:14 - and now that we got this we just need to
107:16 - update the state so i'm just going to
107:18 - say set sanity tokens to
107:21 - tamsanitytokens.result
107:24 - you know why because we know that we
107:27 - when we run this query
107:30 - we have this array and it's called
107:32 - result
107:34 - all right so that's how we will get
107:36 - access to it by doing result
107:38 - let's zoom out a little bit
107:42 - cool
107:43 - and you know what while we're here let's
107:46 - console
107:47 - log temp sanity tokens so we can take a
107:51 - look at it
107:53 - and i will hit inspect
107:55 - we'll hit console
107:58 - and all we need to do is just run it so
108:01 - we will go here and we'll say get coins
108:06 - and make sure it returns unsubscribes
108:11 - cool
108:12 - let's hit refresh
108:17 - there we go look at that
108:19 - result
108:20 - boom
108:22 - we even know exactly what the query was
108:25 - and we got our result back
108:27 - okay so if i hide myself here
108:30 - you can see our result is right there
108:32 - and i can see each of these contract
108:34 - addresses right
108:35 - ethereum
108:37 - bitcoin
108:40 - solana so that was actually incredibly
108:43 - easy to use
108:44 - so that's freaking cool
108:47 - sanity is cool as hell that was really
108:50 - freaking cool it's really easy i mean
108:52 - what database do you know that's that
108:54 - easy to use it literally turns into
108:57 - i mean all we did was just an api
108:59 - request
109:01 - right and uh
109:03 - so easy and that api is deployed online
109:05 - so even if we had our studio off here
109:08 - that should technically still work
109:11 - and it did because i just tried it i
109:13 - tried turning the studio off here i shut
109:15 - down that server and i refreshed and it
109:17 - still worked
109:19 - so even without the studio running it
109:21 - works so it's freaking great
109:24 - awesome
109:25 - so now that we're getting our sanity
109:27 - tokens
109:29 - and before we continue further let's
109:31 - just make sure we have one more thing
109:33 - installed that we're going to need which
109:35 - is going to be ether so let's just do
109:36 - yarn add ethers
109:39 - this is going to be an important package
109:41 - that we need let's just make sure that
109:42 - we're spelling it right
109:44 - that's right and hit enter
109:47 - this is going to make sure that we're
109:49 - good to go in terms of the next steps
109:51 - that we're going to be doing
109:52 - now let's import ethers at the top here
109:56 - so we're gonna do import
109:59 - and i'm gonna say ethers
110:03 - i'll do from ethers
110:07 - like this
110:08 - and then also let's import third web sdk
110:11 - so i'm going to set third web sdk
110:14 - from third web sdk just like that
110:17 - because we're going to need all of these
110:19 - now
110:20 - all right now that we have third web sdk
110:22 - and ethers kind of added to this now
110:25 - what we're going to do is let's create
110:27 - the third web sdk
110:30 - and this is how we'll do it so let's go
110:32 - all over the top here
110:34 - and we'll just initialize it right here
110:37 - that's like our very first thing
110:39 - to just create our third web sdk now
110:42 - this key over here we just want to say
110:45 - metamask
110:48 - meta mask here let's go to our n file
110:51 - and what did we call it yes we did
110:54 - okay perfect so this creates our sdk
110:57 - that we can then use at any time
111:00 - okay perfect
111:02 - and this url here is going to be
111:04 - important just so you know where i got
111:06 - this url from
111:07 - go to your meta mask
111:10 - click
111:13 - this button right here go into settings
111:16 - inside of your settings go all the way
111:18 - down to networks
111:20 - go to rankib test network click that
111:22 - arrow
111:24 - and it will show you here you can see
111:27 - the chain id is four
111:29 - right and here's our ether scan
111:31 - and also it will show you your rpc url
111:35 - that you need so take that url
111:37 - paste that bad boy right there
111:39 - that's what you need to make this happen
111:42 - cool so we got this sdk
111:45 - up and running that's good
111:47 - now what we need to do
111:49 - is let's go ahead and update this
111:54 - ignore that real quick okay cool now all
111:57 - we need to do
111:59 - is make sure once we get it we look this
112:01 - up inside of our sanity tokens
112:04 - and we update it accordingly
112:06 - all right let's clean up this function
112:08 - quite a bit so here's what we're gonna
112:10 - do we need so sanity tokens
112:13 - there's just two things that we need to
112:15 - do we need to get
112:17 - sanity tokens
112:20 - and then we need to get third web
112:22 - tokens that's all we need to do
112:24 - so we need to keep track of the this
112:26 - state so we're going to say const
112:30 - and we'll set third web
112:32 - tokens and then we'll say set
112:35 - third web
112:38 - tokens
112:39 - and we'll do use state
112:42 - just like this
112:45 - okay
112:46 - great
112:47 - now
112:48 - that we have this happening here all we
112:51 - need to do
112:52 - is uh clean this part up a little bit so
112:54 - i'm gonna rename my function
112:57 - and i'm gonna call it get sanity and
112:59 - third web tokens because that's really
113:01 - what this is doing i'm gonna rename it
113:03 - here at the bottom as well
113:05 - and i'm gonna clean it up a lot so
113:08 - i'm going to
113:10 - get rid of this console log here i'm
113:11 - going to get rid of this catch here i'm
113:13 - going to get rid of this try here
113:16 - let's uh keep on trying to clean it up
113:18 - this dot result let's do the following
113:21 - i'm going to
113:22 - wrap this like this and just put a dot
113:24 - result there and as a matter of fact i
113:27 - can just call this sanity tokens because
113:29 - of the scope
113:31 - all right so this sanity tokens will
113:33 - not be the sanity tokens because it's
113:36 - out of the scope so let's just use that
113:38 - there okay so that variable is fine
113:42 - so now that we have set sanity tokens
113:45 - now all i need to do is actually set my
113:47 - third web token so here's what i need to
113:49 - do i'm going to do sanity
113:51 - tokens.map
113:53 - and
113:54 - all i'll do just so you can see it as
113:56 - well is we'll just do token.contract
113:58 - address so you can see what this gets us
114:02 - and you can see that each of the tokens
114:04 - contract address i'm actually getting
114:06 - right here at the bottom right as you
114:07 - can see
114:08 - so
114:09 - what i need to do is if i feed that to
114:11 - the sdk right so if i do sdk dot get
114:16 - token module
114:19 - the third web sdk you'll see that it'll
114:22 - help me actually get the token from
114:24 - third web
114:26 - right there so now instead of console
114:29 - logging it all i really need to do is
114:30 - return this
114:32 - as an array
114:34 - all right and all i need to do here is
114:36 - set
114:37 - uh third
114:39 - web tokens
114:41 - and wrap that in and save it
114:43 - so that's it so this is returning an
114:45 - array
114:47 - all right and in a second you'll see
114:49 - exactly what that looks like so let's
114:50 - just add our console log statements here
114:54 - one is going to show me sanity tokens
114:55 - one is going to show me third web tokens
114:58 - third web tokens right there
115:01 - should be
115:03 - being used
115:05 - all right so let's copy that let's paste
115:07 - that here just needed to have a capital
115:09 - w right there and at the bottom right
115:11 - you can actually see
115:13 - these values showing up so if i hide
115:15 - myself here
115:16 - you can see that i have sanity and it
115:19 - shows me clearly that i got three things
115:21 - from sanity three tokens and contract
115:23 - addresses one for ethereum one for
115:26 - bitcoin one for solana
115:29 - and then inside of third web here you
115:31 - can see it's showing me three token
115:33 - modules one two
115:35 - and three
115:37 - okay perfect that's exactly what we were
115:40 - after all right so what we should do is
115:42 - because we'll need access to these
115:44 - tokens kind of throughout the entire app
115:47 - let's lift our state up
115:49 - so instead of portfolio we're going to
115:52 - lift this up and move all of this to
115:54 - dashboard so let's go ahead and copy
115:56 - this let's go to dashboard
115:59 - paste that right there
116:01 - and we'll also copy this entire use
116:03 - effect hook with these console log
116:05 - statements and
116:07 - we'll paste them right here
116:10 - and then we will
116:12 - copy our
116:14 - basically cut actually can cut all of
116:16 - this
116:18 - and paste that here
116:20 - and cut your sdk go back
116:23 - paste your sdk right there
116:25 - and we don't need any of this in our
116:28 - portfolio our portfolio can stay clean
116:30 - just like this
116:31 - now it's complaining that use data is
116:33 - not defined so let's go to our dashboard
116:36 - and we'll need to define new state and
116:39 - use effect so let's go up at the top
116:40 - here and we'll say
116:42 - use state
116:45 - and then we'll also do use effect like
116:48 - this
116:49 - and let's refresh and hopefully it works
116:54 - and there we go
116:56 - and we're still getting our sanity and
116:59 - uh third web information all the way at
117:01 - the bottom
117:02 - i'll hide myself so you can see it
117:04 - perfect that's exactly what we're after
117:06 - so that looks great
117:09 - let's keep on rocking and rolling that's
117:11 - all we needed here
117:13 - now we need to just pass this
117:15 - information down so our header is going
117:17 - to need it and our main is going to need
117:19 - this so for a header we're already
117:21 - giving it the wallet address let's give
117:23 - it our sanity tokens as well sanity
117:27 - tokens
117:28 - and then let's go ahead and give it our
117:30 - third web
117:32 - tokens like so
117:33 - third web tokens
117:36 - and then let's go ahead and repeat this
117:39 - process for main
117:41 - so main gets these things and header
117:43 - gets these things
117:45 - so now those components have access to
117:47 - all this data
117:49 - now while we're inside of portfolio
117:50 - let's just go ahead and destructure this
117:52 - so i'm going to say third web
117:55 - tokens
117:56 - we will need our sanity tokens and we
117:59 - will need our wallet address
118:01 - right now let's just console log all of
118:03 - these things to see if we're actually
118:05 - getting them
118:07 - sanity
118:10 - let's go here sanity tokens
118:14 - and we'll say wallet address
118:18 - and let's make sure we're getting it so
118:20 - i'm gonna just put a
118:23 - gun emoji right there
118:24 - and see if we're getting this so
118:26 - currently it's sending it to us as
118:28 - undefined but we're gonna fix this soon
118:31 - all right so
118:32 - the reason why our portfolio doesn't
118:34 - have access to it yet is because only
118:36 - main and header have access to it so we
118:39 - have to go find where our portfolio is
118:40 - let's go to our main
118:42 - and from our main what we need to do is
118:45 - we need to destructure those so what i'm
118:47 - going to do is i'm just going to copy
118:48 - this from my portfolio here
118:51 - all right let's go to main
118:53 - paste that there
118:54 - cool
118:55 - and let's go to my dashboard
118:59 - and i'll copy all three of these let's
119:01 - go back to main
119:03 - and paste these right here
119:06 - so that's how that's gonna get access to
119:08 - it here you go wallet address
119:11 - cool
119:12 - now
119:13 - it looks like our portfolio is doing the
119:15 - thing so our portfolio is now
119:17 - sharing with us that third web tokens
119:21 - boom right there and we'll go to
119:23 - dashboard
119:24 - and we'll comment out these lines here
119:28 - just to make sure that it's coming from
119:31 - portfolio and it is as you can see
119:34 - it's coming from portfolio okay the gun
119:36 - emoji should show you that let me hide
119:38 - myself here you can see the gun emoji
119:41 - boom you can see the token modules
119:43 - coming from right here so it looks like
119:45 - things are connected we're passing the
119:47 - data back and forth
119:50 - and you know kind of if you could see it
119:52 - at a hierarchical level right dashboard
119:54 - we kind of have right here dashboard
119:58 - and then
119:59 - we have our
120:01 - child components right so here we have
120:03 - our other component which is
120:06 - this component right here i guess would
120:08 - be our
120:11 - main component right main.js
120:15 - and then after this one we have
120:20 - draw this out
120:22 - so we have our
120:24 - portfolio
120:26 - so this is why we have to do prop
120:28 - drilling and we have to pass
120:30 - the third web token from dashboard to
120:32 - main component
120:34 - right and so basically it looks like
120:35 - this it's like we have our three
120:38 - our tokens
120:39 - we gotta pass them from here and then we
120:41 - gotta pass the tokens
120:43 - from maine over to portfolio so it has
120:46 - this like
120:48 - detour multiple steps but it ultimately
120:51 - ends up getting down to portfolio that's
120:53 - the hierarchy we're looking at
120:56 - okay cool
120:57 - so now that we're getting access to this
121:00 - let's check it out right let's go to
121:02 - maine
121:08 - so one thing that third web tokens have
121:10 - is this balance of methods so for
121:12 - example i can do third web tokens
121:15 - right i can see all my tokens here and
121:18 - so each for each of these tokens i have
121:20 - this
121:21 - secret method that it's not showing here
121:23 - but it's the
121:25 - balance of
121:27 - and once we call that
121:29 - that allows us to kind of check what's
121:31 - the what's the balance of you know let's
121:34 - say aetherium that we actually have in
121:36 - our wallet
121:38 - so what i can do is the following we can
121:41 - do third web tokens and let's get the
121:43 - zeroth token because in this case that's
121:46 - i believe that's ethereum i could be
121:49 - wrong but
121:50 - in any case let's go ahead and check on
121:52 - third web zero nine x zero xe9 whatever
121:56 - yeah this is the ethereum
121:58 - one that we're getting
122:00 - so let's go back here zero xe9 yep
122:03 - so zero
122:06 - and
122:07 - we can do
122:08 - things like dot balance of and then i
122:11 - can put in my wallet address
122:13 - what this does is actually returns a
122:16 - promise
122:18 - so if i actually show you this returns a
122:20 - promise so what i'm going to do is i'm
122:22 - going to do dot then once you get this
122:25 - then grab the balance
122:28 - and let's just console log the balance
122:33 - there we go so you can see it's showing
122:35 - me that i'm getting ethereum
122:38 - and it's showing me
122:39 - exactly
122:42 - what the value is and what i have
122:44 - display value is 15. so what the 15
122:47 - means is that it's saying that i have
122:51 - 15 eth
122:52 - is what it's saying that i have
122:54 - so let's look inside
122:58 - and let's see and yes indeed you can
123:01 - actually verify that i have 15 eth so
123:04 - it's actually pulling that value
123:05 - correctly
123:08 - so let's go back and so what we want to
123:10 - do is we want to pull the display value
123:12 - so i'm going to go here and do dot
123:13 - display
123:15 - value just like this
123:17 - perfect so i'm getting 15 right there
123:20 - now i need this to be an integer so i
123:23 - can actually parse it as an int
123:26 - i mean i could be 15.0
123:29 - so that could be useful but i could just
123:31 - have it be an int as well and either one
123:34 - should work so what i can do is if i
123:36 - want to preserve the decimal nature is i
123:39 - could just do number
123:40 - that way it just puts it in a number
123:43 - instead of an integer and you can see
123:45 - that i get back a number here and then
123:48 - what i need to do is well if i want to
123:50 - update this guy right here
123:53 - right i need to be able to go through
123:55 - each of the currencies and repeat that
123:57 - process and add up the total so for
123:58 - example i need to convert all of these
124:01 - into usd so convert
124:05 - all of my
124:07 - money into usd okay or convert all of my
124:11 - tokens
124:12 - into a corresponding usd value
124:16 - so for example
124:17 - for eth what i would need to do
124:20 - is return this right and
124:23 - essentially just get back a number
124:26 - that's what i would need to do and what
124:27 - i mean by a number is i would need to
124:29 - take this number and multiply this
124:32 - actually by the eighth multiplier which
124:34 - would be multiplied by
124:37 - you know once i get the number i can
124:39 - multiply that by 3 100
124:41 - right and you get 46 000
124:46 - so
124:48 - that makes sense right if i take 15 eth
124:50 - multiply by 3 100 i get 46 000
124:54 - and if i hide myself here you can see
124:56 - the 40
124:58 - 6 000 showing up at the bottom right
125:00 - there
125:01 - okay perfect
125:03 - now all we need to do is repeat this
125:06 - process right for the second token so in
125:08 - this case it'd be token one
125:11 - and this would be
125:13 - let's say my
125:16 - you know bitcoin and bitcoin's value
125:19 - would be 41 642
125:23 - right so
125:24 - there it says i have 291
125:27 - 000
125:28 - in bitcoin
125:30 - let's double check that that actually is
125:32 - bitcoin and is not something else
125:35 - seven bitcoin multiplied by 41 000 is
125:38 - about 287 000 so
125:41 - it looks like we're getting the right
125:43 - number of 291 thousand right there
125:47 - and then if we were to get the last
125:48 - token which would be
125:50 - solana well that's valued at 136 dollars
125:54 - so that should give you back 6800
125:57 - and let's see how much of solana that we
126:00 - have on deck we have about 50 solana so
126:04 - 50 soul multiplied by 136 dollars 6800
126:08 - bucks so you know not much
126:11 - but it's something so all we need to do
126:14 - now is every single time we see it we
126:16 - just need to increment it so one thing i
126:18 - do want to do before we continue is the
126:20 - following and what i want to do is i
126:23 - want to create a price
126:26 - a
126:28 - your crypto price to a usd conversion
126:30 - like lookup table so let's go ahead and
126:32 - make that so i'm going to say const
126:36 - token to usd like this
126:38 - all right and then
126:40 - i'm simply going to say four
126:44 - token
126:45 - of sanity tokens
126:49 - all right this is like a modern for loop
126:52 - so
126:53 - use this one instead of dot four each
126:56 - and we will simply say token to usd
127:01 - and then we'll we'll do token.contract
127:04 - address
127:08 - and then we'll do token to usd price
127:11 - okay and wrap it in number
127:14 - that way you get a number back at the
127:16 - end of the day
127:17 - ignore the part below this we'll walk
127:19 - through that together
127:20 - and now let's uh console log this just
127:23 - so you can see that so we'll do token to
127:26 - usd so this is your lookup table that
127:28 - you're going to get
127:30 - and to solve this error all you need to
127:32 - do is just say const here
127:34 - for cons token of sanity tokens
127:37 - and you can see i have my lookup table
127:39 - right here this lookup table i know it
127:41 - looks confusing and weird
127:43 - but this is really just saying
127:45 - okay for the bitcoin contract address
127:48 - this is the usd price of it
127:52 - for the solana this is the usd price of
127:56 - it for
127:58 - ethereum this is the usd price of it
128:01 - so that's all that lookup table is doing
128:03 - we will use this lookup table later in
128:06 - order to
128:07 - do our price conversions and be able to
128:09 - multiply
128:11 - what like if we get seven ethereum right
128:12 - we need to multiply not by a hard coded
128:14 - 136 but thirty one hundred dollars
128:18 - all right so now what we wanna do is we
128:20 - wanna essentially total up all of the
128:22 - money right exactly like we've talked
128:24 - about so let's go ahead and do that
128:27 - so what i'm going to do is i'm going to
128:28 - create a new function we're going to
128:30 - call it calculate total balance
128:33 - all right and
128:35 - this is what it will be
128:37 - and then in calculate balance i will say
128:39 - total
128:40 - is equal to zero we are going to do for
128:44 - and um let's do const token
128:47 - of third web tokens so use this four
128:51 - of loop this is a modern way of doing it
128:53 - and this is better most of the times
128:55 - than four each
128:56 - so we're having whatever you want to use
128:58 - for each use four of
129:00 - and um it's gonna be pretty simple all
129:03 - right so we're going to make it pretty
129:04 - simple all we're going to say is we're
129:06 - going to say const balance
129:09 - is equal to and we will
129:12 - get the tokens balance of
129:15 - using our wallet address we need to put
129:16 - a wait because it's an asynchronous task
129:20 - we're going to make our function async
129:22 - like this and then we're going to say
129:25 - just increment total
129:26 - by
129:28 - whatever that display value is that we
129:31 - get
129:32 - and then what we want to do is with that
129:34 - display value
129:35 - is uh call the method number on it
129:38 - because it we get it as a string so we
129:40 - need to turn it into an actual number
129:42 - and then simply multiply that
129:46 - right here by token to usd
129:49 - all right and we're just going to give
129:50 - it the address
129:52 - and this will look up our
129:54 - table that we've created so for example
129:56 - if i show you console. table
129:59 - and we do token to usd
130:02 - you can see our table right here
130:05 - right there's our table
130:07 - those are those are all the values that
130:09 - our table has right so it's the contract
130:12 - address being mapped like i've talked
130:13 - about earlier
130:16 - and now let's just call it so let's
130:19 - return return
130:21 - total
130:23 - and now let's do
130:26 - calculate total balance
130:28 - and up here we'll do console log total
130:31 - like this
130:33 - and let's see what we get
130:35 - and boom right there 345 000 which makes
130:40 - total sense because if you take seven
130:41 - bitcoin that's about two hundred ninety
130:43 - one thousand dollars and then i had 15
130:46 - ethereum which is going to be thirty
130:48 - forty thousand dollars and then i had
130:50 - six thousand eight hundred dollars of
130:51 - solana if you add that all up that
130:54 - portfolio balance makes complete sense
130:57 - all we need to do is just carry around
131:00 - that number
131:01 - inside of our um
131:03 - in a state and that way we have access
131:05 - to it so i'm just going to say const
131:10 - okay we'll go here we're going to say
131:12 - const
131:14 - wallet
131:15 - balance set
131:17 - wallet
131:20 - wallet balance we'll start it at zero
131:23 - and then here instead of returning
131:26 - i'm just gonna do set
131:31 - to total like that
131:34 - and honestly i don't even need to return
131:36 - here in this case
131:38 - and then now
131:40 - all we need to do is actually call this
131:42 - function at some point so we want to
131:45 - make sure that we use our use effect
131:46 - hook here
131:47 - so we can do it up there or down here
131:50 - we'll say use effect
131:55 - do it like this
131:58 - and we'll bring this put it inside of
132:01 - the use effect here and then we'll just
132:03 - call it so i'll say calculate total
132:05 - balance
132:06 - just like that and we'll say return
132:12 - and let's just make sure that our
132:13 - console log
132:16 - works i'll do console log
132:18 - and we'll do total balance as total and
132:21 - we'll refresh
132:23 - and let's see if we actually get what
132:24 - we're looking for
132:26 - okay total balance says zero so let's
132:28 - see what the heck is going on there
132:30 - so this regular looking loop does not
132:33 - work inside of use effect properly so
132:35 - we're going to need to change that with
132:37 - something a little bit more advanced so
132:39 - i'm going to
132:40 - completely remove this
132:43 - and we're going to start from
132:45 - the start so i'm going to say cons
132:47 - calculate
132:50 - total balance async
132:52 - yeah we're going to do our usual async
132:56 - and then inside of here
132:58 - i'm actually going to do the following
133:00 - so i'm going to say total balance
133:03 - and this will await and this will be a
133:06 - promise not all
133:07 - and i'm going to do third web tokens
133:10 - and i'm going to do a map on this we're
133:12 - going to do async and for every token
133:15 - i want you to do the following
133:19 - get me the balance
133:20 - from that token
133:23 - based on the wallet address of the
133:25 - current user
133:26 - and then what i want you to do is return
133:29 - the balance display value
133:32 - and we're going to multiply
133:35 - and one thing you want to do is we want
133:36 - to wrap this into number so it is a
133:38 - number at the end of the day kind of
133:40 - like this
133:41 - and why it's wrapped in a promise.all is
133:44 - because this here
133:46 - will return an array of promises
133:49 - and then promise.all
133:51 - await promise.all will resolve all those
133:54 - promises and what's nice about this way
133:56 - of writing it
133:57 - is that it's very performant
133:59 - and it will run every it will
134:02 - essentially run in parallel
134:04 - it'll execute all of the things at the
134:06 - same exact time so
134:07 - it's essentially how you want your
134:09 - asynchronous code to be right and then
134:12 - the last thing
134:14 - we want to do here is we want to return
134:17 - the sum so first of all let's actually
134:19 - just give this a try
134:21 - so for this function here i'm just going
134:23 - to do console log and we'll do total
134:26 - balance
134:27 - like this
134:29 - and i'm sorry this should not be called
134:31 - calculate wallet balance it should be
134:32 - called calculate total balance like this
134:36 - let's take a look if that's running so
134:39 - we'll do calculate total balance and we
134:41 - will run this
134:44 - and i don't need to do this i'll just do
134:46 - that we don't even need to do that
134:48 - actually
134:49 - all right let's hit refresh
134:54 - let's see what happens
134:56 - this is not good balance this is balance
134:58 - of right here
135:00 - this token.balance of
135:02 - and notice what total balance is it's
135:07 - an array
135:08 - of
135:10 - all of our balances right in usd
135:13 - that's what this is so now all we need
135:15 - to do
135:17 - at the end of the day is just call
135:19 - reduce on this and sum it all up so for
135:21 - example
135:22 - console.log
135:25 - totalbalance.reduce
135:27 - and we'll call our accumulator on this
135:30 - accumulator
135:31 - right and
135:33 - our occur
135:36 - and then just sum it up
135:40 - and here's what we want
135:47 - the last argument is going to be this
135:49 - we're going to close all the parens
135:54 - and now you can see
135:58 - that it is summing it up correctly
136:00 - so just whenever you have to sum up an
136:03 - array always just use reduce and this
136:06 - line of code right here you can
136:07 - literally copy this dot reduce blah blah
136:10 - and copy and paste it another thing you
136:12 - could do is you could call it a b and
136:13 - just do a plus b
136:16 - it's like a recursive function and it
136:17 - just kind of like
136:20 - calls itself and uh this is the
136:22 - accumulator
136:23 - so and this is the second argument so
136:26 - reduce method
136:28 - give it two arguments return these two
136:31 - so the first thing is a function that it
136:33 - takes
136:34 - and reduce takes in a second thing which
136:36 - is um
136:38 - an accumulator and where you want the
136:39 - accumulator to start from the initial
136:41 - value so this is the equivalent of when
136:43 - you do like total equals zero all right
136:46 - so it's just accumulator
136:48 - so then this accumulator keeps adding to
136:50 - this and this curve is whatever is in
136:52 - the array so it's like the first time it
136:54 - loops through it goes
136:56 - zero plus that
136:59 - then acc becomes this value right here
137:03 - then it goes 20 then kerr
137:06 - you know goes from here
137:09 - curve goes from there and curve becomes
137:11 - this
137:12 - so then you add 20
137:14 - 291
137:16 - 000
137:18 - to
137:19 - that and then you do the same process
137:21 - and you add it to that and then at the
137:23 - end you just return that sum so
137:26 - that's what's happening here we're
137:27 - getting the final result now all i need
137:29 - to do here is simply
137:31 - instead of saying console.log i just
137:34 - need to set wallet balance
137:36 - to this so we're going to go ahead and
137:38 - do set wallet balance
137:40 - to that value and now all i'm going to
137:42 - do is i'm going to go down here it says
137:44 - walletbalance.localstring
137:47 - i'm just going to uncomment that out
137:49 - and i'm going to comment this
137:52 - and once i do that you can see that my
137:53 - portfolio balance is actually rendering
137:55 - correctly so let's go right there let's
137:57 - refresh
138:01 - and
138:04 - okay let's see what's happening
138:09 - all right one thing we need to do to
138:11 - make this work is what happens is not
138:13 - all of this information is loaded right
138:16 - when the page refreshes this information
138:18 - gets loaded later so what we're gonna do
138:21 - is say hey watch out for third web
138:24 - tokens
138:25 - and let's so let's hit refresh
138:30 - and now once the third web tokens get
138:33 - updated that gets updated right there as
138:34 - well we can add sanity in here as well
138:37 - that won't hurt
138:38 - it's just making sure it's looking for
138:39 - these getting updated so let's refresh
138:43 - and whenever sanity and third web tokens
138:45 - get updated
138:46 - boom it fires this off because remember
138:49 - if sanity is not ready
138:51 - and or third web tokens are not ready
138:53 - this isn't gonna work anyway so might as
138:56 - well have it wait on that and once those
138:58 - fire we should be good to go if that
139:00 - makes sense okay cool so with that said
139:03 - our portfolio balance is now being
139:05 - loaded up
139:06 - completely accurately using the data
139:09 - from the blockchain
139:10 - and so we're already doing some of the
139:13 - exciting part now we're about to move on
139:15 - to adding modals and making our send and
139:17 - receive functionality work which is
139:18 - really the crux of this app so with that
139:20 - said let's get right into that all right
139:23 - now let's get to work on building the
139:26 - modal i've changed my shirt and i'm
139:28 - ready to freaking go you like my you
139:30 - like my yellow shirt comment below if
139:32 - you love it let's keep on going
139:34 - all right so basically what i want to do
139:36 - when it comes to this is get started on
139:39 - my modal so
139:41 - we're going to just do a couple of
139:42 - things to make this happen so i'm going
139:44 - to paste this right here and then we'll
139:46 - walk through what i added so i'm gonna
139:48 - import my modal from react modal
139:51 - and we need to install that so we're
139:53 - gonna do yarn add react model just like
139:55 - that so that will start installing my
139:58 - react modal so this is all you need to
140:00 - yarn at or npm install
140:04 - i'm gonna use routing from next because
140:07 - why do i need routing well check it out
140:08 - when i hit send and receive here watch
140:11 - how that route changes and so that's
140:13 - what we're doing here you know we're not
140:15 - going to a different page because this
140:16 - is just a you know query parameter
140:19 - but when we do that that's how we're
140:21 - actually popping up and bringing up the
140:23 - model
140:24 - all right so that's what we need to do
140:26 - that's why we need the router
140:28 - we need this transfer model this is a
140:30 - component we're actually going to make
140:32 - we don't have this component yet so
140:34 - let's just go ahead and make that
140:36 - component to start stops complaining
140:38 - we'll hit new folder
140:40 - and we will say modal like this and
140:42 - inside of this model we're going to
140:44 - create a new file
140:45 - and this file is going to be called
140:47 - transfer modal dot js
140:50 - and in this file
140:53 - we're just going to go ahead and
140:54 - complete it like this
140:56 - all right
140:57 - and all i need to do is just put in a
140:59 - couple of things here so i'm going to
141:00 - keep this very very basic i'm going to
141:02 - keep this super super basic so all we're
141:04 - going to do here is we're going to just
141:06 - simply say return
141:08 - all right and then it's going to we're
141:10 - going to have a div inside here
141:12 - we're gonna do send
141:15 - and receive
141:17 - and we're gonna give it a text color of
141:19 - black so it can show up on a white
141:20 - background so we'll go
141:22 - black
141:23 - like that
141:24 - and then just copy that styling and then
141:27 - we'll paste it right here so send and
141:29 - receive that's all that's in here and
141:31 - we're done with this for now and it
141:33 - should stop complaining
141:35 - next thing we're going to do in order to
141:37 - make this model work
141:39 - is add this little mysterious line and
141:42 - this is to anchor tag it inside of any
141:45 - next a next js app if you want to make a
141:47 - modal work essentially you have to do
141:49 - that little hack there okay
141:52 - cool next up what we need is a router so
141:56 - i'm going to go right here and add my
141:58 - router this will allow me to pull
142:01 - you know information from
142:03 - the link changing
142:06 - and the thing that i need to do after
142:09 - this
142:10 - is simply build out my modal so i'm
142:13 - going to go down here
142:14 - right underneath my buttons container
142:16 - and i'm going to basically say modal
142:19 - all right and
142:21 - we're going to say is open because it
142:23 - modal has multiple parameters okay so
142:26 - for is open
142:27 - i'm going to say
142:30 - router
142:32 - dot query
142:33 - dot transfer
142:35 - and we'll just do this
142:38 - so it means if the query exists
142:41 - then open the modal otherwise don't open
142:43 - the model so watch this right if i hit
142:45 - send enter so on this final version of
142:47 - the app if i hit send and receive the
142:49 - query exists so it opens it but then as
142:51 - soon as i click off the query doesn't
142:53 - exist so it closes it
142:55 - so we're going to use the same trick
142:56 - here
142:58 - and and then on request close
143:01 - i'm just going to say route to the home
143:02 - page so that's how when you
143:05 - click it and you close it it goes away
143:08 - and what i need to also do is wrap this
143:11 - button inside of a link so the send and
143:13 - receive button needs to actually be a
143:15 - link that's how that works so we're
143:17 - gonna go ahead and we're gonna link this
143:20 - just like that
143:24 - and
143:25 - this link
143:27 - we will create a href on this so wrap
143:29 - this in the
143:30 - link
143:32 - and we'll create a href and our href
143:35 - will say the following
143:37 - transfer
143:39 - equals one
143:41 - just like that
143:44 - cool
143:45 - and in terms of the modal that's kind of
143:48 - all we're gonna it's all all we're gonna
143:50 - add there so now watch this right when i
143:52 - hit send and receive you can see that i
143:54 - have a modal actually popping up here
143:58 - right so it doesn't look that great yet
144:01 - but it is working it is popping up so
144:05 - that's a really good sign looks like
144:06 - something is working
144:08 - all right now what we need to do is
144:10 - inside of this model we need to render
144:13 - our transfer
144:15 - modal so i'm i'm going to say
144:17 - transfer
144:19 - modal
144:20 - like this and we're just going to close
144:21 - it off for now
144:22 - so it's just going to render whatever is
144:24 - inside of our transfer model in this
144:26 - case the send and receive buttons so
144:28 - let's go back here hit center
144:30 - and you can see that send and receive
144:32 - are showing up so perfect exactly what
144:35 - we were looking for
144:37 - now to make this look nice we're going
144:39 - to add in a little bit of styling so
144:42 - let's go ahead and do that so what i'm
144:44 - going to do is for my modal we're going
144:47 - to pass in
144:48 - we're going to give it some styling so
144:50 - that's what this is going to this is the
144:52 - next thing that we're going to do
144:54 - cool so let's go right here say cons
144:56 - custom styles
144:59 - all right
145:00 - and inside of these styles
145:03 - i'm gonna basically just add in a bunch
145:06 - of
145:06 - styling so here we go
145:09 - so what this styling will do you'll see
145:11 - in a second but let me actually show you
145:14 - first right and then explain
145:16 - how it works i think that'll make it
145:17 - easier for you to follow so we'll say
145:20 - style
145:21 - and they'll pass it custom styles just
145:23 - like that
145:25 - and now let's take a look at our modal
145:28 - and boom
145:29 - so what's happening is that it's
145:31 - creating a black modal
145:33 - and then it's adding it's also making
145:36 - the background
145:37 - black there so for example if i get rid
145:39 - of this let's take a look at it you can
145:42 - see my send and receive is showing up
145:45 - and this
145:47 - so you know that's why it's like that if
145:49 - i go to my transfer modal.js file and i
145:53 - get rid of my
145:55 - color black here and my style black that
145:59 - i have here and save it and we go back
146:02 - and i uncomment this out
146:04 - when we go here
146:06 - oh let's do this
146:08 - so my send and receive is still showing
146:10 - up
146:12 - all right so for now we're going to
146:13 - leave this background color here you'll
146:15 - see why later and then overlay
146:18 - background color right what this does is
146:19 - it gives us this nice little overlay so
146:21 - when i hit this
146:22 - instead of it showing up instead of it
146:25 - showing up like this in the background
146:27 - right like kind of this gray weird color
146:30 - we want that overlay color to be this
146:33 - nice dark color right so when i click
146:35 - that now that looks
146:37 - significantly nicer
146:40 - so that's the approach we want to take
146:41 - here and now what we can do is we can
146:43 - actually start building our transfer
146:45 - model so like what basically goes inside
146:47 - here
146:48 - is what we want to start building now
146:50 - and just to really quickly explain this
146:54 - this part here allows you to center the
146:56 - modal
146:58 - and add in the background overlay and
147:01 - also making the modal black
147:04 - that's effectively what that does
147:06 - going into our transfer modal what we
147:08 - need to do is we need to create a
147:10 - wrapper
147:12 - and of course it's going to complain
147:14 - about this so let's go ahead and add
147:16 - import
147:17 - styled
147:19 - from style components like this
147:24 - and so now
147:26 - it's not going to complain instead of a
147:28 - div we're going to wrap this inside of a
147:31 - wrapper now
147:33 - like so
147:35 - so now it looks much nicer as you can
147:37 - see
147:41 - next thing we're gonna need is we're
147:43 - going to need to create a selector
147:46 - all right so let's create the selector
147:49 - and what the selector will allow you to
147:51 - do is really center
147:53 - the text and the choices that we have in
147:55 - there right so for example when i go
147:57 - here we look and boom how did it do it
148:00 - well send and receive we're in a column
148:02 - so we just put in display flex so it
148:04 - made it a row right and then we put
148:06 - space between
148:08 - so then it evenly spaces them out
148:11 - justify content space evenly
148:13 - right and
148:15 - line item center so it centralizes it
148:17 - and we gave it a certain height
148:20 - cool
148:21 - next up what we're going to do is we're
148:23 - going to do it where if you go look at
148:26 - the main app
148:28 - notice that when i hover over receive
148:30 - right it turns a little gray and when i
148:32 - hover over them
148:33 - not only does it turn
148:35 - does it change color slightly but when i
148:38 - click
148:39 - the selected one becomes blue
148:41 - so we need to add that
148:44 - styling
148:46 - so what i'm going to do is we're going
148:47 - to grab our options that we're going to
148:49 - basically add our option styling so
148:52 - our option styling is going to be like
148:54 - this
148:55 - all right
148:56 - and this will make it so
148:58 - on hover there's actually a background
149:00 - color change that's happening so watch
149:03 - this when i click send and receive when
149:05 - i hover over
149:06 - it's a little hard to see right now so
149:08 - we're going to make it so it's easier to
149:10 - see and it actually works
149:13 - and
149:14 - i think what might help is actually
149:15 - adding up wrapping
149:17 - wrapping those in option so let's go
149:20 - ahead and do that now
149:21 - so let's go here and we'll go option
149:27 - and we want to add we want to wrap each
149:29 - of these in the option tag
149:34 - just like this
149:35 - so now
149:36 - send and receive you can see have better
149:39 - design and when i hover over them you
149:41 - can see the colors changing
149:44 - kind of a light to a light gray in the
149:46 - background so that's what we need
149:47 - now whichever one is a selected one we
149:50 - need that to state stay active so
149:52 - whenever i'm doing that i'm actually
149:53 - thinking of using state
149:55 - for that so
149:57 - let's go ahead and start with that
149:59 - so i'm going to create a state and it'll
150:01 - be called action so we're going to do
150:03 - set action
150:06 - and then we're going to use state send
150:09 - just like this
150:11 - and then we're going to do
150:14 - selected
150:15 - this token part we can actually do later
150:18 - let's just start off with action right
150:19 - now
150:20 - and then the next thing i need to do is
150:22 - basically add in a selected style and
150:24 - add in an unselected style so if i go
150:28 - here
150:29 - if you notice this is how the selected
150:31 - one looks and the unselected one has
150:33 - these borders around like this and when
150:35 - i select this the borders go away
150:38 - so that's that's how the selected and
150:40 - unselected are working there
150:43 - so all we need to do now is in our
150:46 - options we need to basically add a on
150:49 - click so inside of our options right
150:52 - here
150:53 - we're gonna add in first of all a style
150:56 - all right so if i give it a style
151:00 - and
151:01 - we say the following
151:04 - i can give it the selected style like
151:07 - hard-coded kind of in there
151:09 - and if i go back
151:12 - okay let's just fix that error so it
151:13 - says use state is not defined so i'm
151:15 - just going to go here and we'll say use
151:18 - state like that
151:21 - now
151:22 - send and receive and let's not make it
151:24 - an object let's actually just give it
151:26 - jsx because it's already an object so we
151:28 - don't need to have two squigglies here
151:31 - let's go and try that again and boom you
151:32 - notice
151:33 - that send is now blue
151:36 - and if we do the same thing here for
151:38 - this and we say unselected style
151:44 - you can see that receive has that border
151:47 - but when i click receive nothing is
151:48 - happening so this is where state will
151:50 - come in and this is where we will need
151:52 - to do on click things need to change
151:55 - so let's add an on click
151:58 - and what this on click will allow us to
152:00 - do
152:01 - is we will do set action
152:05 - to send
152:07 - that
152:09 - i will paste that here and for this one
152:11 - we will set action to can you guess
152:14 - receive
152:15 - so boom update the state to receive
152:18 - so now that on click should be working
152:21 - but we just need to make our style
152:23 - dynamic so how i'm going to do that i'm
152:25 - going to just say
152:26 - hey
152:27 - based on whatever action the user
152:29 - selected
152:30 - yeah if it's send
152:32 - then you can choose a selected style if
152:34 - it's not send then you can choose the
152:36 - unselected style for send
152:38 - and we're essentially going to do the
152:40 - same thing for receive except for the
152:42 - word re send we're going to say receive
152:48 - right there
152:51 - so that's how they're going to decide
152:54 - how they're going to be styled so
152:56 - now if i full screen this and we go
152:59 - boom look at that
153:01 - it just works it's so smooth and it
153:03 - works beautifully
153:06 - great
153:07 - so now that we're done with that let's
153:09 - go ahead and add a couple of more things
153:11 - to this next part we're going to build
153:13 - is really multiple modals so we've
153:16 - already built this modal but
153:18 - on send when you click send we need to
153:21 - render one type of modal here for one
153:24 - type of component here and when you hit
153:27 - receive we need to render another type
153:29 - of component here
153:31 - for example if i go here and i hit send
153:34 - send or receive
153:35 - notice that
153:37 - this is modal this is like one type of
153:39 - component this is another type of
153:41 - component and then watch
153:44 - i could actually click into this and
153:47 - this is a third type of component
153:49 - so there is like
153:51 - multiple things actually happening here
153:54 - all right so we need to build all of
153:57 - these
153:58 - and being able to write in here and then
154:00 - there's one more type of component when
154:01 - you start sending eth so for example if
154:05 - we grab and we pick a wallet address in
154:08 - this case i'll just go and try to send
154:09 - myself
154:10 - something
154:12 - in the final version of the app so i'll
154:14 - copy
154:15 - my address right there i'll say send it
154:17 - to that address
154:19 - and we will say send one each so
154:21 - currently my wallet as you can see has
154:24 - 15 fake eth right
154:27 - this this won't work because we're
154:29 - sending to a different contract address
154:30 - because it's a different app but that's
154:31 - fine so let's just keep going
154:33 - i'll hit continue on here and notice
154:35 - that now this is a different type of
154:37 - modal
154:38 - that says transfer in pros progress or a
154:41 - different type of component and this is
154:43 - yet another type of component so there's
154:45 - like
154:46 - multiple things that need to be rendered
154:48 - in there so we need to just go ahead and
154:50 - build those out
154:54 - so let's build like simple components
154:57 - for what happens if you click send
155:00 - or receive
155:02 - so
155:03 - one way we can do that is we can
155:05 - basically go
155:07 - we can say
155:09 - you know
155:10 - select
155:12 - modal
155:14 - and we can turn it into a function so i
155:16 - can basically say this
155:23 - all right and this
155:25 - it changes based on what the state is
155:28 - so here's what we're going to do right
155:30 - here right so we have our selected modal
155:33 - and it's going to take in the option or
155:35 - which like option you you're choosing
155:37 - right so for example the send option or
155:39 - the receive option or
155:42 - you know the coin option which option
155:44 - are you choosing and based on that that
155:46 - option to switch case
155:49 - based on the option it will render
155:50 - whichever modal you want
155:53 - or what you want that modal to render so
155:55 - for example that's how this is going to
155:57 - be working so let's go down here
156:00 - and i'll create a modal main styling
156:05 - so that's
156:06 - it just has some padding and flex of one
156:08 - so it's going to take up because we
156:10 - wanted to take up this entire space here
156:12 - and let's go back up and i'm simply
156:14 - going to say modal
156:17 - main
156:18 - like this
156:19 - and inside of modal main what i want to
156:21 - do is i want to now render something so
156:23 - for example let's just say i was
156:24 - rendering h2 and i said yo
156:27 - and notice that that's popping up right
156:29 - there
156:30 - perfect
156:32 - i want to change this from h to that to
156:35 - selected modal and whatever the action
156:37 - type is
156:38 - so by default the action type is send
156:41 - all right so that's why it's writing
156:44 - send
156:45 - now if i choose receive notice that it
156:47 - becomes receive
156:49 - okay
156:50 - so it looks like it's working correctly
156:52 - and my selected modal function is able
156:55 - to choose the modals correctly as well
156:57 - all right now here are the models that
156:59 - we need to render
157:01 - render
157:03 - all right this is going to be called the
157:05 - transfer
157:07 - we're going to call this one transfer
157:09 - transfer
157:12 - the next one we have is going to be
157:14 - called
157:15 - receive
157:17 - this is going to be the receive model so
157:18 - let's start working on our transfer
157:20 - model because this is the nicest one
157:21 - anywhere right it's the most important
157:23 - one anyway
157:25 - let's go ahead and do that
157:27 - so
157:27 - here i'm going to create a new inside of
157:30 - my modal folder
157:32 - we're going to create a new file here
157:34 - and i'm going to call it transfer
157:37 - dot js
157:40 - all right
157:42 - and let's just make it let's start it
157:44 - off with super simple and raf ce finish
157:47 - up the snippet
157:49 - and here i'm simply going to say
157:53 - yowza
157:56 - let's go back to our app
157:58 - and in case when the user hits send
158:01 - instead of this it should render
158:04 - transfer
158:08 - like that
158:10 - now
158:11 - hit import so it should import this from
158:13 - the top
158:14 - and there we go you see
158:16 - yowza
158:18 - if everything went right
158:20 - and it did
158:21 - i'm watching it i love you smash that
158:23 - like button by the way smash that break
158:25 - that like
158:26 - button okay cool so that's what we got
158:29 - here right we got this yowza showing up
158:32 - that's great because this uh transfer is
158:34 - working and we're gonna need to keep
158:36 - replacing these components because for
158:38 - for this we need to have multiple cases
158:40 - and we'll work on them later for now
158:41 - let's just work on our transfer alrighty
158:44 - so let's work on our styling first
158:45 - things first we're going to make a
158:47 - wrapper
158:49 - all right
158:50 - and we're going to
158:52 - import style components we're going to
158:54 - say styled from style components just
158:56 - like this
158:58 - refresh
158:59 - cool and of course we need to wrap this
159:02 - entire yowza
159:06 - in wrapper just like this
159:09 - okay great
159:11 - so thing number one done
159:14 - then what we need to do is basically add
159:17 - in you know things like two and
159:20 - additional fields so for example here
159:22 - you can see our two field and our pay
159:24 - with field all right so let's work on
159:27 - maybe our two field or in this area as
159:29 - well
159:30 - so let's work on our amounts component
159:32 - now or our amount styling so here let's
159:35 - go put amount it's going to be flex 1
159:37 - display flex and flex direction column
159:40 - why you may ask well because
159:43 - this is how it is right column
159:46 - otherwise this part would be right up
159:48 - here if it was not
159:51 - cool so
159:53 - amount is what we're going to need
159:55 - the other one we're going to need is our
159:56 - flex input container so let's go ahead
159:59 - and style that as well
160:02 - add the styling for that
160:04 - and we will need
160:06 - one more which is gonna be our flex
160:08 - input
160:10 - so i'm gonna let's add the styling for
160:12 - that
160:14 - all right and then we need one more and
160:17 - we'll break it down in just a second
160:19 - which is going to be warning
160:21 - there we go so we got our warning
160:24 - cool
160:25 - all right so we got all of the ones that
160:26 - we needed now just let's go build this
160:28 - out so i'm going to say
160:30 - in my i'm going to have my i'm going to
160:32 - delete this for now and here we're going
160:34 - to say amount
160:37 - i'm going to leave this modal right here
160:39 - so you can see it updating in real time
160:42 - as we keep adding things to it so we
160:44 - have amount inside of our amount we're
160:46 - going to have our flex input
160:49 - container like so
160:52 - inside of this container we're going to
160:54 - have our flex input
160:57 - and this will be a self-closing tag so
160:59 - we can do that
161:02 - and i'm going to give it a placeholder
161:04 - of zero
161:07 - like so so you can actually see it at
161:09 - the bottom right there the zero showing
161:11 - up
161:13 - we're going to say type is number
161:17 - and then we'll do value and we'll add an
161:20 - on change as well but we'll do that
161:22 - later for now we're going to leave this
161:25 - as is
161:26 - then right underneath this flex input
161:29 - what i want to add is i just want to add
161:32 - a span tag
161:37 - and this span tag will create
161:40 - contain the symbol so for example we
161:42 - could say eath there we go
161:44 - all right
161:46 - looks freaking beautiful let me hide
161:48 - myself here so you can see
161:51 - and you can see that it looks nice
161:53 - exactly
161:55 - exactly what we're going after here
161:57 - right so
161:58 - this is this is all looking good
162:01 - now right underneath this we want to add
162:03 - our warning amount so basically right
162:05 - underneath this i will simply add my
162:09 - warning component
162:10 - and in here i'm going to say amount is a
162:13 - required
162:14 - field
162:17 - cool
162:19 - all right and we're basically going to
162:20 - say color is if amount exists
162:25 - then what i want you to do is give it
162:28 - a different color which is that color
162:31 - right there
162:32 - we'll just hard code an amount in this
162:34 - case
162:35 - we'll just say something
162:37 - all right
162:38 - and the point of this is to show you
162:39 - that hey if
162:41 - i add in an amount then it won't show
162:44 - anything if i take away the amount
162:47 - then it will actually show amount is a
162:49 - required field you could also do
162:51 - conditional rendering as well of this
162:54 - entire thing
162:55 - so that's fine or you can just make the
162:57 - color go invisible
162:59 - and that's fine too both both can work
163:02 - this is just this empty string is just a
163:04 - placeholder for now for when we actually
163:07 - add in our amount and we can actually
163:08 - keep track of it right so for example
163:11 - what we would want to do here is say
163:13 - const
163:14 - amount
163:16 - right set amount
163:18 - and use state we'll start it at zero
163:23 - we'll import our use date
163:27 - and then on change for whatever you're
163:30 - putting into this i want to
163:32 - update my amount so value we're going to
163:34 - say is amount and then we're going to
163:36 - add an on change here that's basically
163:39 - going to say
163:42 - hey
163:42 - set amount to
163:45 - get the e the input whatever the they're
163:48 - putting in the event and we're going to
163:50 - do event.target.value
163:53 - that's going to update our amount
163:55 - and we should be good to go with that so
163:58 - i go here
163:59 - and i press one
164:01 - right and we can leave this blank
164:03 - actually
164:05 - so now there's nothing there i write in
164:08 - one or two it shows up okay now this
164:11 - hard-coded i can just change it with the
164:13 - actual amount
164:15 - so you can see my error from the bottom
164:17 - actually goes away when i have an amount
164:19 - and when i remove it now it says and my
164:21 - amount is a required field
164:24 - all right so we built the styling for
164:26 - this part here right this top part which
164:28 - is the amount part let's build the
164:30 - styling for this transfer form part like
164:33 - the form that we have here so let's go
164:35 - ahead and do that now
164:37 - so i'm gonna go and um grab that styling
164:41 - so we're gonna need just a couple of
164:42 - things here let's get a divider going
164:45 - because uh we're gonna need this to kind
164:47 - of add that little add some of these
164:49 - divider lines to just break it apart so
164:52 - let's have that
164:54 - and then i'm gonna need to have rows
164:56 - that can i can style
164:58 - so these are gonna be my rows that i add
165:00 - uh field name
165:02 - we're going to have that be styled
165:05 - and then let's add in styling for my
165:08 - icon here
165:09 - this is uh
165:11 - what type of styling am i looking for
165:13 - maybe for this icon right there
165:16 - and we don't need this margin here so
165:18 - let's get rid of that
165:20 - let's add in for
165:22 - the styling for recipient as well
165:25 - this styling is going to be for the
165:27 - inputs you can see that i'm doing
165:28 - style.input right there so this is
165:31 - referring to
165:32 - when you're putting in the address right
165:34 - there
165:36 - and yeah
165:37 - let's add in styling for our coin select
165:41 - list
165:42 - so let's go ahead and do that right
165:44 - there
165:44 - let's add in styling for
165:47 - so this is going to be the styling for
165:49 - like for example when i'm able to click
165:51 - that type of stuff so let's go back
165:53 - here
165:55 - let's add the styling for our coin
165:57 - name
166:01 - and then we're going to have our
166:02 - continue button
166:06 - there you go
166:07 - so this is going to be the styling for
166:09 - this continue button right here so when
166:11 - i hover over look how it turns into a
166:13 - pointer right so that styling is going
166:15 - to be there as well
166:17 - and now let's just go ahead and build
166:20 - build this out
166:22 - i'm going to go all the way to the top
166:23 - here and we got our amount and
166:25 - underneath our amount we're going to
166:26 - have our transfer form so let's go here
166:30 - we'll say transfer form
166:33 - and then inside of this transfer form
166:35 - we're gonna have our row
166:39 - and within this note row i'm gonna have
166:41 - my field name and we're gonna say two
166:43 - let's take a look
166:45 - we just need to go ahead and add styling
166:47 - for transfer form because right now it's
166:48 - saying hey i don't know what the heck
166:49 - you're talking about buddy so let's go
166:52 - ahead and do that so i'll do that right
166:54 - underneath this divider
166:56 - let's go ahead and add our transfer form
166:58 - so now it knows what that is and there
167:00 - you go now you're seeing this to field
167:03 - get populated
167:05 - okay right underneath this field name
167:08 - here let's add in our icon so i'm gonna
167:11 - basically say icon just like this
167:14 - and we're gonna do f a wallet like that
167:18 - and now it's gonna be like hey i don't
167:19 - know what this fa wallet thing is
167:21 - well what this is is it's from a react
167:24 - icon so you're going to say import fa
167:27 - wallet from
167:28 - react icon fa just like that and now if
167:32 - you notice
167:33 - right behind my face here
167:36 - you will see this icon right there
167:39 - so that's how
167:41 - that's being
167:43 - added
167:45 - cool
167:49 - just decided to move myself out of the
167:50 - way so you can see the modal better all
167:52 - right right underneath this icon i'm
167:54 - going to add in my recipient
168:00 - all right and this recipient can be a
168:02 - self-closing tag
168:04 - and
168:05 - for props we're going to give it a
168:07 - placeholder
168:08 - and placeholder just going to say
168:10 - address
168:11 - so you you can now see
168:14 - that address is showing up right there
168:18 - and so placeholder is of one thing i
168:21 - need let's add in a couple of more here
168:24 - so placeholder and i will also need to
168:26 - have a value but we'll add in value
168:29 - later once we can add it in dynamically
168:31 - so what we can do is we can actually
168:33 - just go ahead and create that right now
168:34 - so that's fine
168:35 - so i'm just going to say const value
168:38 - or sorry recipient
168:41 - set recipient
168:45 - you state
168:49 - okay
168:51 - and you can make this be
168:54 - blank here as a recipient
168:56 - alright so for the value we're going to
168:59 - say
169:03 - recipient
169:05 - and then on change
169:08 - we're just going to say this for e just
169:10 - set the recipient to whatever we have in
169:13 - here that's it
169:15 - cool
169:16 - awesome
169:17 - all right let's right underneath this
169:20 - row let's now put a divider so i'm going
169:23 - to go ahead and put a divider here
169:26 - cool so that added just a little tiny
169:28 - divider it's kind of hard to see
169:30 - actually but it just did a very subtle
169:32 - little tiny change all right let's uh
169:34 - work on our other row
169:36 - okay so we built our first row which was
169:38 - this field now let's work on our second
169:40 - row
169:43 - and the field name
169:45 - will be
169:46 - pay with
169:50 - and then we'll do coin select list
169:53 - so this will give us a list of coins to
169:55 - select from
169:57 - let's do
169:58 - coin select
170:00 - list i misspelled it earlier and inside
170:03 - of here
170:05 - we're gonna have icon
170:09 - and then in here i'm gonna use my image
170:11 - source
170:12 - and for this we're just gonna give it a
170:15 - image url and this will basically come
170:18 - from one of our coins
170:20 - so
170:21 - what i'm going to do is just comment
170:23 - this out for now
170:26 - and what i'm going to do is grab an
170:27 - image of brad pitt and hit copy image
170:30 - address and paste it right here in the
170:32 - source
170:33 - so once i do that
170:35 - you can see that my image is popping up
170:38 - right there later we'll use an image of
170:40 - a coin
170:41 - so for now we'll just leave it as that
170:44 - cool so what are you paying with
170:47 - all right so we got our icon and now
170:49 - right underneath our icon we need to
170:52 - actually put our coin name
170:54 - so in this camp case we can just say
170:56 - ethereum
170:58 - all right now of course we'll need to
171:00 - pull this dynamically in the future but
171:02 - for now this is fine
171:04 - and now right underneath the transfer
171:06 - form we will add in another row all
171:09 - right in this row we will add in our
171:10 - continue button so i'll say continue
171:14 - all right
171:15 - go like this we'll add the word continue
171:18 - and boom continue is now showing up
171:21 - right here we'll add in functionality to
171:24 - continue right so we actually hit it
171:26 - something real happens but for now
171:28 - this is totally fine this is perfectly
171:31 - fine and and good the last thing we need
171:33 - to add is what's the balance that you
171:35 - have for that right so here when i
171:36 - choose eth it tells me how much eat
171:38 - balance i have
171:39 - if i choose bitcoin it will tell me how
171:42 - much bitcoin balance i have
171:44 - right so we want to be able to put in
171:46 - this balance part so let's go ahead and
171:48 - do that here so
171:50 - we're going to basically create another
171:52 - row
171:55 - all right and then inside of this row
171:56 - i'm going to do balance title
172:00 - and for balance title in this case i
172:03 - will just hard code it to
172:05 - eth
172:07 - balance
172:08 - so if we go back to our app
172:11 - balance title
172:13 - it says it's not defined so we just need
172:15 - to add the styling for balance title
172:17 - that's not a problem at all
172:20 - we just didn't add that styling so in
172:22 - this case
172:23 - a balance title is going to be
172:26 - we're not really going to give it any
172:27 - styling so we're just going to do const
172:30 - balance title style div and just end it
172:33 - just so we can have something there and
172:35 - then we're going to do the same thing
172:36 - for balance so we're going to do balance
172:38 - style div just to really have just so
172:41 - that these divs have names
172:43 - but not necessarily any styling in this
172:45 - case
172:47 - so i got my balance title right here
172:53 - all right and now
172:54 - next to it what i want is really my
172:57 - balance so here i could do i have let's
173:00 - say zero point
173:01 - you know zero eth so i'm simply gonna to
173:04 - zero point
173:06 - or let's say
173:07 - 1.2
173:09 - right and we'll just say eth
173:11 - so i've hard coded all of this we will
173:14 - need to make all of this dynamic so
173:15 - we'll need to make this dynamic this
173:17 - dynamic this dynamic
173:19 - right now it's just hard coded but it's
173:22 - fine
173:23 - and now look at this right when i hit
173:24 - receive versus send look at how nice it
173:27 - is when i hit send
173:28 - right send is just packed with uh
173:31 - valuable info
173:33 - all right let's bring in the sanity
173:35 - token
173:36 - because i'm going to use that token to
173:38 - essentially
173:40 - build this image out here instead of
173:41 - using brad pitt's image right now so
173:44 - let's go to transfer modal
173:46 - and in my transfer model we're going to
173:48 - keep track of another state and it's
173:49 - going to be our selected token and we're
173:52 - gonna do set selected token
173:55 - and i'm just gonna use state and we're
173:57 - gonna use sanity tokens of zero
174:00 - now you're like hey where is this token
174:03 - coming from
174:05 - this token is going to be coming from
174:07 - where we're passing where we're using
174:09 - transfer modal so let's go ahead and
174:11 - look look where we are using transfer
174:13 - modal
174:14 - and in header.js it looks like we're
174:16 - using it right and inside of our
174:18 - header.js we're going to pass it that so
174:21 - we're going to say sanity
174:23 - tokens is going to be sanity tokens
174:26 - and let's look for our variable sanity
174:28 - tokens we don't have it here so again
174:31 - we're going to need to prop drill this
174:33 - one more time
174:34 - all right so
174:35 - where are we calling our header
174:37 - component so let's go there now
174:40 - all right so maybe let's go to our
174:44 - dashboard.js
174:46 - dashboard.js page
174:48 - we are calling our header component here
174:50 - and we are passing the sanity token so
174:52 - let's go back to our headers
174:54 - and pass down sanity tokens like this
174:58 - and now we're passing them over to our
175:01 - transfer model
175:04 - cool let's go to our transfer model now
175:07 - and destructure sanity tokens
175:12 - it's kind of annoying to prop drill that
175:14 - way right but that's what we need to do
175:16 - and if we console log
175:19 - this this is what you'll see console log
175:21 - sanity tokens
175:24 - and let's go take a look at the console
175:28 - and hopefully i'm out of the way so you
175:30 - guys can see the console console
175:32 - properly here's an array
175:34 - and this array has three contract
175:36 - addresses right and i click into one and
175:39 - you can see that my logo is sitting
175:41 - right over there and then what i need to
175:43 - do is actually use sanity's thing called
175:46 - image builder to actually build it out
175:48 - so in transfer modal we just need to
175:51 - pass it to our transfer so i'm going to
175:53 - say sanity tokens
175:55 - sanity tokens close it out let's go to
175:58 - our transfer modal and let's destructure
176:01 - sanity
176:03 - tokens as well we're actually better yet
176:06 - let's not call it sanity tokens let's
176:07 - call it the
176:09 - selected token
176:11 - selected token let's go back to our
176:14 - transfer model and in here let's call it
176:17 - selected
176:18 - token
176:19 - and selected token will just be sanity
176:22 - tokens
176:24 - will be the selected token right there
176:26 - okay so paste that
176:28 - because from transfer modal we will need
176:30 - to select our token as well and then as
176:33 - soon as we do that we need this to
176:34 - update so that's why we're calling it
176:35 - selected token
176:37 - cool let's go back to our transfer modal
176:39 - now
176:40 - let's also now console log our selected
176:43 - token and let's see what we see here
176:45 - selected token
176:48 - all right
176:50 - and
176:51 - right now selected token is undefined
176:54 - and that's because we need to actually
176:56 - wrap this up in our use effect
176:59 - so we're going to do use effect hook
177:02 - all right
177:05 - and
177:06 - we're going to wrap this do this
177:09 - and then in our use effect hook
177:12 - we're going to
177:14 - console.log our selected token
177:17 - let's import use effect here as well
177:22 - all right so now we're using our use
177:24 - effect hook
177:26 - and now what we're going to do is let's
177:28 - give our transfer access to a bunch of
177:30 - other things so for example our this
177:33 - will need access to our set action hook
177:35 - because we want to be able to change
177:37 - which action is currently active
177:39 - let's give this access to selected token
177:42 - which we've already done let's give it
177:44 - access to third web
177:46 - tokens as well
177:48 - and let's give it access to wallet
177:50 - address
177:52 - because transfer is going to need access
177:54 - to all of this information and now we're
177:55 - going to need to prop drill
177:57 - and send this information
178:00 - so let's get to work let's go to
178:01 - transfer modal
178:03 - and
178:04 - here
178:06 - right we don't need to give it selected
178:07 - token
178:08 - but for set action
178:11 - we need to say set action
178:15 - for third web token we need to say third
178:17 - web tokens
178:18 - and for wallet address
178:21 - address we need to say wallet address
178:24 - now let's see
178:26 - what we have access to transfer modal
178:28 - and we don't have access to all of those
178:29 - things so let's go ahead and i'm going
178:31 - to copy all of these from here so third
178:34 - web
178:36 - tokens
178:38 - i'm going to paste that right there so
178:40 - now we got our third web tokens and
178:42 - wallet address so transfer modal now is
178:45 - getting access to
178:47 - all the info that it needs
178:50 - and once it's destructuring it from
178:51 - there it's passing it down here to
178:54 - transfer modal now
178:57 - if we go to our header
179:00 - and this is where we're calling our
179:01 - transfer modal or transfer modal needs
179:04 - access to all of those props as well so
179:06 - it needs access to sanity tokens
179:09 - and we're giving it access sanity tokens
179:12 - it should also get access to third web
179:14 - tokens
179:15 - and so let's go ahead one layer back
179:20 - let's add in in inside of our header
179:23 - let's add in third
179:25 - web
179:26 - tokens because i'm already actually
179:28 - passing it through and from our header
179:31 - let's give
179:32 - this access to third web tokens is third
179:35 - web
179:37 - tokens
179:39 - all right and then our transfer modal
179:41 - will also need access to the wallet
179:43 - address so let's give it access to
179:44 - wallet address now i'm going to go into
179:46 - transfer modal
179:48 - now transfer modal should have access to
179:50 - all of these and transfer modal is now
179:51 - passing all that information over to our
179:55 - transfer
179:56 - so now our transfer has access to all of
179:58 - that
179:59 - perfect now
180:02 - selected token is working because it's
180:04 - sending i can see that right here at the
180:07 - bottom so if i put a little gun emoji
180:10 - or a flame emoji
180:14 - come on emoji work
180:16 - there we go
180:18 - you can see that this is working and
180:20 - it's showing up at the bottom right
180:22 - there
180:23 - and it's showing us exactly which token
180:25 - uh which token we have now if you're
180:28 - wondering hey why isn't it showing up
180:30 - for you like this you know the result at
180:32 - the bottom what you need to do here is
180:35 - you need to
180:36 - get off and go to the main page and then
180:38 - when you hit send and receive it will
180:40 - actually show up at the bottom so the
180:42 - trick to getting this model to work is
180:44 - you have to get here and then go to the
180:45 - modal you can't just directly
180:48 - go to that link it won't work so
180:50 - just something you need to know now
180:52 - every time i run it it does work so
180:54 - we're good
180:56 - all right now we need to get ready to
180:57 - build the image so in order to build the
180:59 - image you need to actually import these
181:03 - two things so image url builder from
181:05 - sanity slash image url if you haven't
181:08 - installed this live package i'd
181:11 - recommend you go and do that now so you
181:13 - could do yarn add
181:15 - sanity slash image url and just install
181:19 - it like that but i already have it
181:20 - installed
181:21 - and then you're gonna need to import
181:24 - client from lib slash sanity so here i
181:27 - have
181:28 - sanity.js
181:30 - and inside of here i have my client
181:34 - so that's what you'll need to do
181:36 - once you've done that now we're going to
181:38 - start actually building our image url
181:40 - all right now to build our image all we
181:42 - need to do is just say const url and
181:45 - we're going to we're going to now build
181:47 - our image so i'm going to
181:48 - basically say all of this right here
181:50 - except instead of width at the end here
181:52 - i'm going to say give me a url and now
181:55 - let's console log our url and boom you
181:58 - see that my image is right there
182:00 - and if i go and click it it will
182:02 - actually give me my image the ethereum
182:04 - image okay perfect that's exactly what
182:07 - we're looking for
182:10 - okay great and how this is working is
182:12 - how i'm building this url is i'm just
182:14 - saying hey go to the image url builder
182:18 - alright
182:19 - and then use that to build this
182:21 - and then we're going to do dot image on
182:22 - that give it the specific logo and then
182:25 - turn it into a url so normally just
182:27 - gives you a ref we're essentially
182:29 - turning that into a url and of course
182:32 - one other thing we need to add here is
182:33 - selected token
182:35 - why because whenever the selected token
182:38 - gets updated let's just say the user
182:40 - clicks here chooses a different token
182:43 - right when it updates boom fire my use
182:45 - effect hook and build this out again for
182:48 - me
182:48 - let's also keep track of the state here
182:50 - so i'm going to basically say const
182:53 - we'll say image
182:56 - you know
182:57 - you could say yeah image url set
183:01 - image url
183:03 - we'll say use state
183:05 - start it off with null
183:08 - and then once this happened we will say
183:10 - set
183:12 - image url to url just like this and now
183:15 - i don't need
183:17 - these anymore remember the hack when you
183:20 - wanna
183:21 - do this right refresh
183:23 - and you gotta start from the home page
183:26 - you got to basically get out of the
183:27 - modal so once you get out of the modal
183:29 - and then you hit send and receive
183:32 - now it should work
183:34 - so let's go all the way down here and
183:36 - instead of this hard-coded brad pitt
183:38 - thing
183:39 - we're gonna replace this and we're just
183:41 - gonna say image
183:43 - url just like that
183:46 - again let's go back to our home page
183:51 - and now it's there check it out
183:54 - we did it guys look at that how nice is
183:57 - that right we're now getting the
183:59 - freaking ethereum logo so if you enjoyed
184:02 - that smash that like button subscribe to
184:04 - the freaking channel so we can get this
184:06 - video out to everybody and help as many
184:08 - people as possible become developers in
184:11 - 2022 perfect
184:14 - another state we're going to keep track
184:16 - of is which token is active here so for
184:19 - example i can choose this or i can
184:20 - choose another one right so let's keep
184:23 - track of that state so i'm going to say
184:25 - const
184:26 - active
184:28 - third
184:29 - web token
184:31 - and we can do set active third web token
184:34 - and just leave it as blank here
184:38 - all right and then basically what i want
184:41 - to do is grab that token now another use
184:44 - effect that i actually want to add here
184:50 - is so that i can actually get
184:53 - the token that we have the selected
184:55 - token find it inside of my third web and
184:59 - then essentially match that
185:01 - because what i need is i need access to
185:03 - the third web token that's really what i
185:05 - need so let's go ahead and do that now
185:08 - so i'm gonna do this right here
185:10 - and inside of here i'm gonna say hey
185:13 - const active token so the active token
185:17 - how i want you to find it is go to third
185:20 - web tokens and find me this
185:22 - and here's how i want you to find it for
185:24 - the token
185:25 - the token i want you to find is where
185:27 - the token address is equal to the
185:29 - selected token
185:31 - dot address
185:33 - all right so that's what that looks like
185:34 - and then what i want you to do is just
185:36 - console log
185:38 - active
185:39 - token and we'll say haha just so we can
185:42 - like find it easily
185:44 - all right
185:45 - let's update this url
185:49 - all right let's go to our home page and
185:50 - then once we're on the home page then
185:52 - let's hit send and receive
185:55 - cool
185:56 - and we want this to actually get updated
185:59 - whenever third web tokens get activated
186:02 - or selected tokens get selected oh this
186:05 - needs to be contract
186:07 - address not regular address so that was
186:10 - the bug
186:11 - and there we go now we can actually find
186:14 - it right there
186:16 - it's pulling our module we're able to
186:19 - see it and if i hit the drop down menu
186:20 - here i can see all of the details
186:23 - and view inside of it so it actually
186:25 - pulled the token module so for example
186:27 - this might be ethereum let's say so it
186:29 - might have just pulled
186:31 - all the information for
186:32 - our ethereum token inside of our third
186:35 - web now all we need to do here instead
186:37 - of this console log is i need to
186:39 - basically say set set active third web
186:42 - token is to whatever that
186:45 - whatever that token is and everywhere we
186:48 - had hard-coded things like ethereum or
186:50 - eth balance we're actually going to use
186:52 - and replace that with selected token so
186:56 - for example here we can say selected
186:59 - token dot symbol
187:02 - all right and then that should
187:04 - essentially give us eth or in this case
187:07 - we don't want to say symbol we want to
187:09 - say name
187:10 - all right so now that'll give us
187:13 - ethereum that's perfect
187:15 - this is coming from the sanity database
187:17 - by the way
187:18 - and for each balance instead here i'm
187:21 - actually going to say selected token dot
187:24 - symbol
187:25 - and now it's pulling that from
187:28 - the database and now i'm going to remove
187:30 - this eth here so you'll notice it just
187:31 - says 1.2
187:33 - but we're going to copy this
187:36 - and paste that right there and so now
187:38 - you see that it says 1.2 eth perfect
187:42 - exactly
187:44 - um
187:44 - what we were looking for and we made it
187:46 - dynamic already another thing i want to
187:48 - do is i want to get this
187:51 - balance right there where it says 1.2
187:53 - because that
187:54 - still is hard coded so we want to uh
187:57 - basically get that balance and do it so
187:59 - i'm going to create another use effect
188:01 - click here
188:02 - all right and we're going to do it like
188:04 - this and the dependency for this is
188:05 - going to be our
188:07 - active third web token
188:10 - and the for the actual inside of it what
188:12 - i'm going to do is i'm going to say
188:13 - const get balance we're going to make a
188:16 - async
188:17 - function here
188:19 - and in here i'm going to say await the
188:22 - active
188:24 - third web
188:26 - token and we're going to do balance of
188:28 - and we're going to do wallet address
188:31 - and then we're going to set the balance
188:33 - to be whatever it is and of course it's
188:36 - not going to know what we're talking
188:37 - about so we're going to go here and say
188:38 - balance
188:41 - set balance
188:44 - and
188:45 - its initial state is just going to say
188:47 - fetching like this
188:50 - cool
188:51 - so we're going to get the balance
188:53 - and then what we're going to do is just
188:55 - write a if statement here and we're
188:56 - going to say if our active token
188:59 - exists then i want you to run this
189:01 - function get balance and run this
189:03 - function every time our active third web
189:06 - token changes our active third token the
189:09 - web token being this one that you select
189:11 - here
189:13 - okay
189:14 - cool
189:14 - so let's go and see if we're getting our
189:18 - balance so i'm going to hit inspect here
189:21 - and we're just going to console log this
189:23 - and uh in my console log
189:25 - right here let's just so console log
189:28 - balance dot balance.display value and
189:31 - let's see if we get anything
189:34 - and you can see that i'm actually
189:35 - getting back 15 and that's the exact
189:37 - amount of ethereum that i have in my
189:39 - third web
189:40 - so if i go here and i go to my theorem
189:42 - you can see i have 15 eth
189:45 - so
189:47 - that looks like it's working perfectly
189:50 - all right
189:51 - and let's remove that console log now
189:54 - now all we need to do is just update
189:56 - that dynamically so all we need to do is
189:59 - grab this balance here go all the way
190:01 - down and where we have that 1.2
190:03 - hard-coded we're just going to change
190:05 - that and write the word balance in there
190:08 - all right and now you can see that it's
190:09 - pulling from my balance that i have 15
190:12 - eth perfectly what we wanted
190:14 - the next thing we need to work on is now
190:17 - we're ready to just send the freaking
190:19 - money over
190:20 - all right there's this amazing method
190:23 - that third web has
190:24 - that allows you to send the money
190:28 - over all right so basically what you can
190:30 - do
190:30 - is there they have a method called dot
190:33 - transfer
190:34 - and it's just as easy as that using that
190:37 - you're able to send your
190:39 - money over to anybody so let's go ahead
190:41 - and create a function and it's going to
190:42 - be called
190:43 - send
190:44 - crypto
190:47 - okay
190:48 - and this is really where we get into the
190:50 - really nice parts and
190:52 - here's how it's going to work so you see
190:53 - it's already auto completing even though
190:55 - that's not what we're going to be
190:56 - writing but it was already kind of auto
190:58 - completing for us right
191:01 - and so what i'm going to type in here is
191:03 - i'm going to say
191:05 - let's just put a console log in here so
191:07 - we know this running it says sending
191:09 - crypto
191:11 - we'll write it like that and then we're
191:13 - just going to check if
191:14 - our active third web token exists and
191:17 - our amount is there and our recipient is
191:19 - there
191:21 - you know normally you would use
191:22 - something like formic or something like
191:23 - a form but this is just a super simple
191:25 - way of doing it
191:27 - and then essentially all we want to do
191:31 - is say
191:34 - you know our or our transaction in this
191:36 - case a transaction and we can just say
191:38 - wait active third web token dot transfer
191:41 - and in the transfer what we want to give
191:43 - it is our recipient address so this is
191:45 - going to be the
191:46 - wallet address that we're going to put
191:47 - for our recipient
191:48 - and what the amount actually is so in
191:52 - this case for
191:53 - the amount what we're going to say is
191:56 - amount dot
191:58 - to string
192:01 - dot can cat and here's a really weird
192:03 - part part about it
192:06 - we're gonna concatenate all these zeros
192:08 - in front of it
192:09 - all right
192:11 - so
192:12 - this part should throw you off a little
192:13 - bit it is confusing like why can't we
192:15 - just send regular amount
192:17 - so if we go here
192:20 - right and if i go in my ethereum our
192:21 - ethereum is 18 decimals
192:24 - so it requires that we send it with that
192:26 - many decimal places so we have 18 zeros
192:30 - that we follow that up with
192:33 - so that's that's why we're using this
192:35 - here
192:37 - and then
192:39 - what we're gonna do once we send it
192:42 - is we're gonna console.log our
192:44 - transaction
192:47 - all right and then we're going to set
192:48 - our action to be transferred
192:53 - so right now our action thing does not
192:56 - know what to do with transferred
192:58 - if we go to our where's our switch
193:00 - statement is it in our transfer modal
193:04 - yeah so we don't have a switch statement
193:05 - for transferred yet but we will create
193:07 - one
193:10 - so transferred
193:11 - and otherwise
193:16 - else we're gonna say we're gonna log an
193:18 - error and we're gonna say missing data
193:23 - so that's how
193:25 - that's gonna be working
193:26 - now all we need to do is attach that
193:29 - button send crypto or that function to
193:32 - our continue button and we should be
193:33 - good to go so i'm going to go inside of
193:35 - my continue
193:36 - and we're just going to say on click
193:40 - send
193:44 - crypto
193:46 - and i guess just to make this code
193:49 - cleaner
193:50 - amount is gonna be something that it
193:52 - takes in here
193:55 - all right
193:56 - and here we're going to give it our
193:58 - amount
193:59 - okay
194:00 - perfect that's just so the the code
194:02 - looks cleaner so send crypto amount
194:05 - and then let's also
194:06 - put give this function a recipient
194:08 - because this function really depends on
194:10 - two things how much is the amount and
194:11 - who are you sending it to
194:14 - and we're going to send the recipient
194:16 - here
194:18 - just like that so now this function
194:20 - looks cleaner functional not messing
194:22 - with global states
194:26 - cool so this should send our crypto so
194:29 - let's give it a try now so we're going
194:32 - to go here
194:33 - i'm going to go to my receiver address
194:37 - i'm going to copy my receiver wallet
194:39 - address we're going to paste it here
194:42 - let's try doing one eth and let's
194:44 - continue
194:45 - at the bottom you see it says sending
194:47 - crypto
194:52 - do we have anything for if it works if
194:55 - it works it's actually just gonna
194:56 - console log the transaction
194:58 - boom
195:00 - let's go
195:01 - we just sent some freaking crypto how
195:05 - cool was that
195:08 - that was freaking awesome so you see we
195:10 - just logged our transaction right there
195:13 - block cash
195:15 - blah blah blah how much how much was
195:16 - sent
195:17 - and if i look inside of my wallet
195:20 - you can see i have one eve
195:24 - oh my god you guys if that was sick
195:28 - smash that freaking like button break
195:31 - that freaking like button smash that
195:32 - like button break it
195:34 - and turn it blue and comment and let me
195:37 - know how freaking awesome was that
195:38 - because we just said their first
195:39 - blockchain transaction
195:41 - yo
195:43 - okay
195:45 - man i'm sorry i'm just so hyped about
195:47 - this this is freaking exciting
195:49 - all right so we got our transaction
195:51 - working and we got the eth i can't get
195:53 - over it we got the eth even though we
195:55 - built this app and i've seen this
195:57 - multiple times it's just so freaking
195:58 - exciting
196:00 - cool all right we're going to refresh
196:02 - this let's go to that transfer url
196:05 - remember to remove that and just go to
196:07 - localhost directly first then once you
196:10 - go to localhost directly and you wait
196:12 - for this to up a load you saw my
196:14 - portfolio balance even went lower
196:17 - oh my god you guys i think this is
196:21 - working this is so cool
196:23 - my portfolio balance i'm sure was like
196:25 - 345 thousand dollars let's try this
196:28 - again this was so much fun let's try
196:30 - this one more time and let's see if our
196:31 - portfolio balance drops by one eighth so
196:33 - it should drop about three thousand
196:34 - dollars
196:36 - and
196:37 - this should become three hundred and
196:38 - thirty nine thousand dollars let's give
196:39 - it a try so let's send over one eighth
196:41 - and look it even updated my balance here
196:43 - 14 eth let's look in our third web let's
196:46 - refresh
196:48 - oh look at that 15 ethan supply and we
196:51 - own 14
196:52 - but we're still a whale so that's nice
196:55 - all right let's do one eath right there
196:57 - let's put in the address
197:00 - let's hit continue
197:02 - and let's see what happens
197:04 - once this goes to the
197:06 - the other tab the receiver send tab
197:09 - we are good it means it worked
197:12 - send
197:13 - so it was sent
197:15 - and let's check our wallet
197:20 - let's check our other account right here
197:23 - to eth
197:25 - so
197:26 - freaking beautiful and now we'll refresh
197:30 - the app and we'll see if our balance is
197:32 - updated let's refresh
197:35 - whoa moment of truth
197:37 - yo
197:39 - how sick is that
197:41 - it updated our balance guys it's pulling
197:44 - our balance right from here dynamically
197:46 - and it is working
197:48 - just as expected so
197:50 - absolutely gorgeous
197:52 - amazing so we were able to send our
197:54 - crypto now let's make it so we can see
197:58 - multiple coins here and change which
198:00 - coin we want to choose also let's
198:03 - capitalize the letters send and receive
198:05 - here so
198:06 - in my transfer modal
198:09 - let's capitalize this r here
198:12 - all right and then let's capitalize this
198:14 - s here
198:16 - and with that
198:18 - we should be good to go our send and
198:20 - receive are looking great
198:22 - and now let's make our coin list over
198:24 - here so we can see more coins right
198:26 - there we'll build a component called
198:28 - coin selector so inside of my modal
198:32 - folder we're going to say coin
198:35 - selector.js
198:38 - and in here i'm going to import a couple
198:40 - of things i'm going to need so use state
198:42 - from re i will also need style
198:45 - components so let's go style components
198:48 - and then we'll need one more thing but
198:50 - for now we're we should be good so let's
198:52 - keep on going
198:54 - all right so we're gonna do const coin
198:56 - selector here
198:58 - all right whoops
199:05 - all right
199:08 - and what we can do here is actually just
199:10 - do raf c e so it it gives us this nice
199:14 - little nice little component we don't
199:16 - need to react so i can remove that and
199:18 - then we're going to destructure a bunch
199:19 - of things here so let's just break it
199:21 - off into a new line because we know
199:24 - we're going to be structuring a few
199:25 - things i'm going to set action
199:28 - we're going to need access to the
199:30 - selected token we're gonna need
199:33 - we're gonna need to be able to change
199:35 - the selected token
199:40 - i'm gonna need access to all of the
199:42 - tokens in our
199:44 - database and then our third web tokens
199:49 - and our wallet address so i'll need
199:51 - access to all of these things
199:54 - so let's just make sure our coinbase
199:56 - coin selector is working so for now i'm
199:58 - just going to say h2 and we'll say yo
200:02 - and let's just go ahead and add coin
200:04 - selector in the right place
200:10 - so in our transfer modal
200:13 - let's import it so we're going to say
200:15 - import
200:16 - coin selector
200:18 - from coin selector
200:22 - and then we're going to do when somebody
200:25 - selects if the action is select so for
200:28 - example on send
200:30 - do this on receive
200:33 - do this
200:34 - we want to create another case
200:36 - and this case is going to be case
200:40 - where we have select
200:44 - all right
200:46 - so what happens there so when this
200:48 - happens
200:49 - we need to return our coin selector
200:53 - make it a self-closing tag and we need
200:55 - to give it a bunch of things so we're
200:58 - going to give it set action
201:00 - we're going to give it a selected token
201:02 - we're going to give it the ability to
201:04 - set selected token we're going to give
201:05 - it sanity tokens we're going to get it
201:08 - give it third web tokens and we're gonna
201:10 - give it the wallet address github
201:12 - copilot is so freaking amazing it auto
201:14 - completes all that
201:17 - now let's go to our coin selector and
201:19 - let's just go yo
201:21 - and we will just say
201:23 - wallet address to really just make sure
201:25 - that it's there
201:27 - so let's go to our transfer
201:31 - and this is our transfer right here and
201:33 - we're going to say when you click this
201:35 - guy here we'll change the action
201:39 - so let's find that our coin select list
201:42 - and we're going to say on clicking this
201:46 - here's what's going to happen we're
201:48 - going to set action to be
201:50 - select just like that
201:53 - so let's click it
201:55 - and boom look at that
201:58 - our coin selector component is now
202:01 - running so send
202:03 - click that boom so it is connected
202:07 - now we just need to do a bunch of magic
202:09 - and load up all of the things that we
202:11 - need you know so all of the tokens and
202:13 - all of the stuff that we need so let's
202:15 - go ahead and build our wrapper so we
202:17 - just need to create some styling here
202:20 - wrapper is going to be pretty basic
202:21 - nothing in the styling of that
202:24 - we're going to need a title
202:26 - and then we're going to need our coin
202:27 - list so we're going to need to style our
202:29 - coin list perfect
202:33 - and now let's wrap this inside of a
202:36 - wrapper
202:39 - wrapper
202:41 - click it boom shows up nicely
202:44 - cool
202:46 - we're gonna replace this
202:49 - and instead put title here
202:52 - and in my title i'm gonna say select
202:54 - asset let's save that so prettier kicks
202:57 - in
202:58 - select asset right there
203:01 - and then we're going to give it a coin
203:02 - list
203:05 - so it's going to be a list of coins here
203:07 - and then i'm going to loop through and
203:08 - essentially give it every coin that we
203:11 - have so let's go through the sanity
203:13 - tokens here
203:15 - and then for each token
203:17 - i'm just gonna say
203:20 - hey you know return for now i'm just
203:22 - gonna do this so for each token do token
203:25 - dot let's say name
203:28 - let's see if that works
203:30 - beautiful look at that so we are getting
203:33 - each of our tokens to show up
203:36 - now of course we're gonna need to give
203:37 - this the ability you know to make it
203:40 - look nicer then we're also gonna need to
203:42 - add in things like
203:44 - on click what happens when you click
203:46 - these so let's go ahead and create a
203:48 - coin item component so that's
203:50 - essentially gonna just represent
203:52 - one coin
203:54 - so let's go create a new file and we're
203:56 - gonna call it coin item dot js
203:59 - and let's copy the code from our
204:02 - coin selector here a little bit so for
204:04 - example token
204:05 - and we need access to sanity tokens
204:07 - right so for our coin item
204:10 - we're probably going to need to give it
204:11 - a bunch of stuff and then that that it
204:14 - can then destructure on the back end
204:17 - meaning
204:18 - we're gonna remove all of this and
204:20 - replace it with coin item
204:23 - okay let's go inside of our coin item
204:25 - let's hit r a f c e hit save let's go
204:28 - back
204:29 - and now when i type in coin item and hit
204:31 - enter it should auto import from the top
204:33 - here
204:34 - all right and we'll make it a self
204:36 - closing tag
204:37 - and we're just gonna need to give it a
204:38 - bunch of things so we're going to give
204:40 - it
204:41 - a key so in this case for our key
204:45 - let's just extract the key from here so
204:47 - let's go index
204:50 - so for a key
204:52 - we'll say index
204:56 - token will be token
205:00 - sender in this case will be the
205:05 - wallet address
205:07 - so let's go wallet
205:09 - address
205:13 - our selected token
205:15 - is going to be selected token
205:18 - we're going to send it a set selected
205:20 - token hook we're going to get send it
205:23 - third web tokens
205:25 - and we need to send its sanity
205:30 - tokens just like this
205:33 - and last but not least we need to send
205:34 - it the action so we're going to do set
205:37 - action we're going to send it to set
205:38 - action hook so it can change the actions
205:40 - perfect
205:42 - let's go into our coin item now
205:45 - and let's destructure all of that inside
205:48 - of our coin item it's going to be a
205:50 - bunch of destruction required
205:53 - let's go right there
205:56 - and
205:58 - let's go boom so i'm destructing token
206:01 - sender set action selected token set
206:03 - selected token sanity tokens
206:06 - and let's do third web
206:08 - tokens
206:10 - just like this
206:12 - cool
206:13 - so this looks good now let's say that i
206:16 - wanted to show my sanity token for
206:18 - whatever reason i could go sanity tokens
206:21 - of zero
206:24 - and let's choose dot name
206:28 - and let's refresh this let's go
206:31 - localhost 3000
206:32 - and then we'll hit
206:36 - then we'll hit send and receive
206:38 - cool let's hit this ethereum and now you
206:40 - can see
206:41 - ethereum is showing up here right if i
206:43 - chose symbol
206:45 - you can see eats would show up if i did
206:47 - contract address
206:50 - contract address would show up there so
206:52 - this is clearly pulling from sanity all
206:55 - right
206:56 - great
206:57 - let's go ahead and add our styling for
206:59 - coin item there's going to be a bunch of
207:01 - styling that we're going to need for
207:02 - this so let's add the styling for a main
207:08 - let's remove all of this oh yeah style
207:11 - components is where we're getting the
207:13 - error from
207:14 - import style from style components let's
207:17 - do a full refresh on this
207:20 - and of course the app is going to break
207:22 - because we're going directly to that
207:23 - link so let's go to the home page first
207:25 - open up our send and receive
207:28 - open up this right there and put it on
207:30 - the side here
207:32 - cool
207:33 - let's get our let's get our styling for
207:36 - our icon
207:38 - so we're gonna get our styling for our
207:39 - icon
207:41 - let's get our name details
207:46 - which is not really going to have any
207:48 - styling we're going to need styling for
207:49 - our name
207:51 - balance is not going to need any styling
207:53 - and then whether it's selected or not
207:56 - we're gonna need a different styling for
207:58 - that
207:59 - okay
208:02 - cool
208:05 - beautiful so we have all our styling in
208:07 - place
208:08 - this will make sure the icon looks
208:10 - really nice
208:11 - all right so for example when i click
208:13 - here the icons show up nice here that's
208:15 - coming from all of the styling here and
208:18 - then we want to make sure it's all
208:19 - showing up in a row nicely like that so
208:22 - we have that as well
208:25 - now let's go ahead and build this out
208:29 - so i'm going to replace this with a
208:32 - wrapper here and we'll go wrapper
208:38 - that says wrapper is not defined let's
208:40 - go ahead and make sure we define our
208:42 - wrapper as well right above we'll put it
208:44 - right above main
208:46 - let's save
208:47 - let's go to
208:49 - localhost 3000 first
208:51 - kind of an annoying process i know but
208:53 - it's the process that works
208:55 - let's go right there
208:58 - so now all this information is showing
209:00 - up i don't need to put this right here
209:02 - anymore let's just leave that blank
209:06 - okay great so we got our wrapper
209:09 - now inside of our wrapper we're going to
209:11 - have our
209:12 - main
209:18 - inside of our main i'm going to have our
209:20 - icon
209:22 - and our icon
209:25 - is really just going to be our image
209:28 - url
209:30 - are we passing our image url from
209:31 - anywhere actually
209:34 - let's see
209:36 - no so we're going to need to actually
209:37 - build our image url and then send it
209:40 - so let's comment this out for now let's
209:43 - build a couple of states that we're
209:44 - going to need access to so let's go
209:46 - ahead and get a state for
209:49 - our balance
209:51 - we will get a state for our image url
209:55 - and we will need a and then that's
209:57 - essentially it when it comes to our
209:59 - state so that's that's mainly what we
210:01 - need then let's use a use effect hook
210:04 - because we'll need access to information
210:06 - on page render
210:09 - and we're going to basically do get
210:11 - balance
210:13 - i'm going to recreate that function get
210:15 - balance we'll say sync
210:18 - and we're going to say let active third
210:21 - web
210:22 - token
210:24 - so we'll just create that there
210:27 - and then what we're going to do is we're
210:28 - going to loop through this so i'm going
210:30 - to take my third web tokens
210:36 - and i'm going to do dom map through them
210:43 - and i'm going to say if
210:50 - my token my bad my token. address
210:56 - so let's rename this to be third
211:00 - uh web token here so if my third web
211:03 - token
211:05 - address is equal to
211:08 - my sanity token
211:10 - so
211:11 - this over here is really just this token
211:13 - here is your sanity token so we're gonna
211:15 - say is equal to
211:18 - token.contract address
211:22 - so if there's a match between third web
211:23 - and sanity
211:25 - then i want the following to happen
211:28 - i want my active third web token
211:32 - to become
211:33 - the third web token
211:35 - all right let's go to our local host
211:37 - again
211:39 - and then we'll hit send and receive
211:43 - cool we're having some errors use data
211:44 - is not defined so let's define new state
211:47 - we don't need this let's remove that
211:51 - and let's go here and we're going to say
211:53 - you state just like this okay cool
211:56 - now let's start our app again
211:59 - let's go to localhost 3000
212:01 - let's hit send and receive and let's
212:03 - click this
212:04 - use effect is also not defined so let's
212:06 - go ahead and define use effect
212:15 - okay let's go to our home page
212:19 - let's click send and receive let's click
212:21 - this okay cool now you can see when i'm
212:24 - hovering
212:25 - right it's it's detecting there's three
212:27 - things here
212:29 - so something is happening
212:31 - it's detecting that there's three coins
212:33 - here one two
212:34 - three so
212:36 - we're in luck
212:38 - means good things are happening all
212:40 - right all we need to do now is just get
212:42 - it to show those coins that we're
212:44 - retrieving
212:45 - now let's just get the balance of that
212:47 - coin so i'm going to say const balance a
212:49 - weight active third web token this one
212:51 - right here
212:52 - get the balance of
212:54 - and sender is whoever sent the whoever
212:56 - sending the money or in this case it's
212:58 - just a wallet address
213:00 - it's just your wallet address
213:02 - and then at the end we're just gonna say
213:04 - a return await
213:06 - and we will set
213:09 - uh set balance
213:12 - to be display.value and we'll split it
213:15 - and do this right there and
213:20 - don't need that many parentheses
213:23 - cool
213:24 - so
213:25 - that's one of the functions that we
213:26 - needed to make we're going to go ahead
213:28 - and make another function
213:31 - and this will help us build our url so
213:33 - we'll do
213:35 - get image url
213:40 - all right and we will do the following
213:43 - so i'm going to say image url is and we
213:45 - have done this before
213:47 - so
213:48 - this is um
213:51 - not completely new stuff
213:53 - let's just make sure we import some of
213:56 - the things that we're going to need
213:58 - all right so let's go ahead and import
214:00 - these guys here because i'm going to
214:02 - need my image url builder from sanity
214:04 - i'm going to need my
214:07 - client from sanity and i'm going to need
214:09 - my f8 check
214:10 - re it's a react icon so it's a icon that
214:13 - i'm going to need soon enough so we're
214:15 - going to go here
214:16 - and we're simply going to say
214:19 - image url builder give it our sanity
214:22 - client
214:26 - and then we'll say dot image dot token
214:29 - logo
214:30 - and we'll do url so it'll build out
214:34 - it'll build out that image that we need
214:37 - and then we'll just say set
214:39 - image
214:40 - url
214:42 - to image url
214:45 - perfect
214:46 - and now all we're going to do is run
214:48 - those functions so let's go here
214:51 - let's give it a dependency of empty no
214:53 - dependencies and let's just run our
214:55 - functions so these are the two functions
214:57 - that we created cool and then those
214:59 - functions automatically update the value
215:01 - for balance and image url
215:03 - so
215:05 - now
215:07 - i can actually uncomment this
215:11 - and here we can actually say image url
215:16 - boom look at that that was nice huh
215:19 - we're getting the first image the second
215:21 - image and the third image
215:23 - so and i hover over right it's showing
215:26 - it
215:26 - so perfect
215:27 - it's doing what it needs to do
215:29 - now for the wrapper what i want to do is
215:31 - i want to give it a styling
215:34 - and we'll say the background color here
215:37 - will be based on selected token.name
215:44 - and
215:45 - if that matches then this is the color
215:48 - we want to give it
215:53 - cool
215:54 - so this means this is the selected token
215:57 - so because for example if i go here
215:59 - ethereum is our selected token so when i
216:01 - go back
216:02 - or when i go here it remains our
216:04 - selected token in this case
216:07 - bitcoin is my selected token so you see
216:09 - that color remains behind bitcoin so
216:11 - that's why we're adding that part
216:15 - now we just need to give it a on click
216:17 - on what happens when you click it so
216:20 - we're going to say when you click it
216:24 - we're going to do set selected token
216:26 - it's going to be token and set action is
216:29 - going to be send
216:33 - so it's going to send us back to the
216:35 - original send screen when i pick it so
216:38 - let's just give it a try let's pick one
216:39 - of these boom when i pick ethereum it
216:41 - just sends me back let's pick bitcoin
216:44 - and look at that it even updated this
216:46 - with bitcoin yo
216:48 - that is nice
216:50 - when i go here pixellana it has updated
216:52 - with that with that with solana
216:54 - and uh it has fetched my eth correctly
216:57 - let's see if it fetches my bitcoin it
216:59 - fetched my bitcoin correctly let's see
217:02 - if it fetches my solana and it fetched
217:04 - my solana correctly yo this is crazy
217:08 - right that's crazy now we're just gonna
217:10 - need to update this too because this is
217:12 - hard-coded and we need to make this
217:13 - dynamic as well
217:15 - so let's try this let's go to our
217:17 - transfer.js file
217:19 - right and let's go down here and where
217:21 - it says eth if you change this to
217:23 - whatever it should show up there
217:26 - and let's see if we can change this to
217:28 - be selected
217:30 - token
217:31 - and
217:33 - what what's what are we trying to read
217:35 - from here it's going to be selected
217:36 - token
217:37 - dot
217:39 - symbol
217:41 - now simply go to localhost 3000 again
217:46 - and then open the modal
217:49 - all right so now it says eth here let's
217:51 - see if i change this it says btc
217:54 - let's go
217:56 - let's change this soul wow
217:59 - wow
218:02 - and let's see if it works i have no
218:03 - freaking idea
218:07 - so sending it to some address is this
218:09 - the right address let's go to my
218:11 - receiver 0 3 f f that is it let's see if
218:14 - we send it to soul what happens let's
218:16 - hit continue
218:18 - i don't know if it's going to work or
218:19 - not fingers crossed
218:21 - waiting waiting
218:23 - waiting five seconds four seconds three
218:26 - seconds two seconds
218:29 - did it crash
218:30 - let's see what happened
218:32 - oh it worked
218:34 - let's go
218:36 - that is wild let's go right here and i
218:40 - can see that i have two soul
218:43 - yo this is this is exciting this is so
218:46 - exciting this makes me so freaking happy
218:48 - thank you third web for making my life
218:51 - so easy
218:53 - wow that's nice
218:55 - so looks like i mean literally almost
218:58 - the entire thing is working there are a
218:59 - couple of things that we need to add
219:01 - like for example the receive tab i mean
219:03 - this is not over yet right so let's go
219:06 - back to our coin item component and
219:09 - let's go make sure that we finish that
219:12 - out
219:13 - all right so we have our main and we
219:15 - have our icon that's great right
219:17 - underneath our icon let's add in our
219:20 - name details so we're going to go name
219:22 - details
219:25 - all right and inside of these details
219:26 - i'm going to go name
219:28 - and we're going to give it token.name
219:31 - just like this
219:32 - and here we're going to give it a symbol
219:37 - and then that's just going to be the
219:39 - token symbol
219:41 - so let's go do that
219:44 - is it showing up token.symbol
219:48 - i'm not sure why the token that symbol
219:50 - is not showing up but we'll look into
219:51 - that maybe we need to style our
219:54 - symbol class or something
219:57 - oh we don't have a symbol class
219:59 - so that's probably it
220:03 - there we go and it's showing up i was
220:06 - like where is it i couldn't see it
220:08 - hopefully you can see that look at that
220:10 - oh
220:11 - looks juicy look at that
220:15 - okay beautiful
220:17 - so we got
220:19 - we got our symbol showing up now what we
220:21 - need to do is
220:23 - right underneath the main
220:25 - we got to get our balance to start
220:27 - showing up too so let's go balance and
220:30 - we'll go token
220:32 - dot symbol
220:34 - oh yo it's pulling my actual balance
220:38 - look at that 48 soul
220:41 - 7 soul 13 eth
220:44 - it's pulling the actual
220:46 - balance for each
220:48 - man this is absolutely beautiful
220:51 - last piece of the puzzle that i need
220:53 - here is do you notice how this is
220:55 - selected it has this blue check mark
220:57 - next to it right and ethereum doesn't
221:00 - this is our deployed version we need to
221:02 - add that to our app
221:04 - so what we're going to do is right
221:06 - underneath
221:07 - balance
221:08 - we're going to create is selected
221:11 - like this
221:13 - and insider is selected all i'm going to
221:15 - say is i'm going to say hey selected
221:18 - token.contract
221:22 - address if that's equal to the current
221:24 - active token that we have selected
221:27 - contract address
221:31 - then what i want you to do in that case
221:36 - is
221:38 - give me my check
221:42 - give me my little check
221:46 - so let's go here let's see
221:49 - our check is not showing up so let's
221:52 - just go oh yeah what we need to do is
221:54 - give it a boolean here this is going to
221:56 - be a true or false here so let's go and
221:58 - wrap this in a boolean
222:06 - cool
222:08 - it's selected
222:10 - do we have the styling for selected yes
222:13 - we do what's going on here misspelling
222:16 - is what's going on here r d needed
222:18 - another d right there
222:21 - once i added that you can see boom it's
222:24 - the selected one so let's go back here
222:26 - pick uh we'll pick uh something
222:28 - different i'll pick bitcoin
222:30 - and when we go back look we know bitcoin
222:32 - is selected let's pick ethereum let's go
222:35 - back now we know ethereum is selected so
222:37 - our is selected component is working
222:39 - perfectly we can change coins
222:42 - and we can send however much solana we
222:45 - want or how much eth we want or how much
222:47 - bitcoin we want
222:49 - and it's working for everything so guys
222:52 - we are able to send and receive
222:56 - i mean this is incredible we're able to
222:58 - send money around to anybody that we
223:00 - want right that is powerful that is big
223:04 - big big point of why we use the
223:05 - blockchain and if you can integrate that
223:07 - functionality within your app i mean
223:09 - that really makes you stand out i mean
223:11 - imagine putting this on your portfolio
223:13 - and then going after
223:14 - you know web 3 front end related jobs
223:17 - you will stand head and shoulders above
223:19 - so many other people
223:21 - so it's all very exciting now what we
223:24 - need to do is it looks like this
223:26 - component is pretty much done right i
223:28 - think it's completely done actually so
223:30 - we're done with this component coin item
223:32 - and coin item lists and all of that
223:34 - uh now what we need to do is what
223:37 - happens when you hit you know really
223:39 - just a few things left what happens
223:42 - right when a person hits continue right
223:44 - because currently we just kind of sit
223:46 - there and it's awkward and
223:48 - you're like is it sent yet like what the
223:51 - hell is happening right
223:53 - so we want to make sure that state
223:57 - is is accounted for one thing we want to
223:59 - do is we want to have a state trans like
224:02 - a transferred state so what should show
224:04 - up after we've transferred
224:06 - so we're going to go ahead and update
224:08 - that and then we need a state for what
224:11 - to show when the transf when it's
224:13 - transfer ring so let's do action and
224:16 - we'll do transfer ring no we don't need
224:18 - three dots there we can just make it
224:20 - transferring like this so now we have
224:22 - one state for at one action another
224:24 - action
224:25 - and let's go to our
224:27 - transfer modal that figures out which
224:30 - modal to do
224:31 - so now we have select but we also have
224:34 - transfer ring so let's go here and we'll
224:37 - do case
224:39 - and we'll say
224:41 - transferring
224:43 - and we'll go like this and we'll say
224:45 - return
224:47 - and we'll go
224:49 - transferring
224:51 - so there's that state
224:52 - and then we'll have a state for
224:55 - transferred and for this we will say
224:58 - transferred
224:59 - okay transfer
225:02 - complete or something and we can
225:04 - literally style this to be like color
225:07 - green
225:09 - so this is a very simple example here
225:11 - now if i paste my address let's go
225:14 - choose a soul send one soul paste my
225:17 - address here
225:18 - and let's hit continue so now you can
225:20 - see it's saying transferring so now it
225:22 - actually shows us that it's in some
225:24 - pending state what we can do is add a
225:26 - nice loader or something like that to
225:28 - make it look nice that's up to you if
225:30 - you want to do that
225:31 - and then we see transfer complete right
225:33 - here now of course you want to center it
225:36 - and do all of that and you know what i
225:38 - like adding loaders so let's go ahead
225:41 - and add a loader so we'll go to react
225:44 - loader spinner i think this should be
225:48 - fairly easy to use looks simple enough
225:50 - and we can use this
225:52 - and it's also really easy to use so
225:54 - let's simply go ahead and download this
225:58 - so i'm gonna do yarn add
226:01 - react loader spinner
226:04 - and we're gonna paste that right here
226:07 - oh yarn add react loader spinner i'll
226:10 - just type it in
226:12 - so that'll install it now it's telling
226:14 - me i should add this command to the main
226:17 - app.js file so let's go to our
226:20 - underscore app.js file and let's add a
226:23 - global level add
226:25 - that so it imports that so our entire
226:27 - app has access to it
226:29 - and then i'm going to do copy that line
226:32 - let's go to our transfer modal
226:35 - actually where do we need it to render
226:38 - yeah i guess i could have it we could
226:39 - have it render right here so
226:42 - we're gonna do this and instead of audio
226:44 - i'm gonna do tail spin
226:47 - because i kind of like tailspin if you
226:48 - go right here tailspin looks like a nice
226:51 - normal looking loader right there
226:54 - so let's stick with that
226:57 - and let's copy this
227:00 - and in the transferring state
227:03 - we're going to make a
227:07 - div right here
227:09 - i'll go
227:10 - div
227:14 - transferring h2 and then maybe right
227:16 - underneath the h2 we could have our
227:19 - audio loader in this case it's going to
227:21 - be tail spin
227:23 - loader loading
227:25 - and so hopefully that works let's take a
227:27 - look
227:28 - send
227:30 - one soul
227:33 - paste the address let's send it and
227:35 - there we go our loader is showing up so
227:38 - now the user knows that it's actually
227:41 - sending the money
227:43 - right
227:45 - so they can
227:47 - wait there happily so that was pretty
227:49 - easy to add the loader
227:51 - not too difficult we kind of flew
227:52 - through that
227:53 - and you know give
227:55 - and just you know that was like real
227:56 - time that wasn't even we didn't even
227:58 - have notes on that we hadn't coded that
228:00 - before we figured that out on the fly
228:02 - together so
228:03 - if you enjoyed that give some love smash
228:05 - the like button
228:07 - and by the way just want to say if any
228:09 - at any time if the javascript or
228:11 - anything like that and this is getting
228:12 - too tough guys check out our course
228:15 - profit with react go join that course
228:18 - because
228:20 - in that course you'll master the
228:21 - javascript the react parts of it so then
228:24 - you can actually build this with us and
228:26 - really understand it at a fundamental
228:28 - level right so if that's a skill you
228:30 - want to build i would highly recommend
228:31 - click the link below and join of course
228:33 - profit with react you'll get so much
228:35 - training and you'll be able to make
228:37 - projects like these left and right so
228:39 - definitely check that out awesome
228:43 - so we got our
228:44 - spinner spinning we're very happy about
228:47 - that we have a transfer complete state
228:50 - now we can make it look a little bit
228:51 - nicer and how i can make it look a
228:53 - little bit nicer
228:54 - i can style my div
228:57 - and inside of this div
228:59 - i can just drop some styling like this
229:01 - this will help me centralize everything
229:05 - all right and then we'll do the same
229:07 - thing
229:08 - similar thing
229:09 - with our
229:11 - transferred
229:13 - one so what i'm going to do here is
229:17 - we'll
229:18 - delete this completely i'll put a div
229:21 - we'll add in some styling for this div
229:24 - and i'm going to give it the word
229:27 - we're just going to add transfer
229:29 - complete in here
229:30 - okay we don't need that space there
229:33 - transfer complete perfect so you see how
229:35 - it's like nice and centralized
229:37 - and then for transferring what we're
229:40 - going to say is transfer in progress
229:44 - just like that
229:45 - so let's give that a try let's paste our
229:48 - wallet address here where we're sending
229:50 - it let's hit continue and you can see
229:52 - transfer in progress
229:54 - showing up nicely if i make this say h2
229:58 - for example
229:59 - let's go ahead and make that an h2 and
230:02 - uh
230:05 - yeah that's cool so let's give that a
230:07 - try now
230:08 - let's hit send uh
230:14 - okay cool looks nice and big easily
230:16 - visible oh i'm blurry
230:18 - cool we're back so our transfer in
230:21 - progress is working it shows up visibly
230:24 - and what i can do is it's right now
230:27 - display flex so you can remove the
230:29 - display flex right i can actually do
230:31 - flex flex
230:33 - and then we can actually do flex
230:34 - direction column so
230:36 - flex direction
230:41 - column like that
230:44 - put that behind it let's try sending it
230:46 - one more time boom
230:49 - paste the address
230:51 - send
230:52 - and now it looks much better and
230:54 - everything looks easy to see
230:57 - and color here
230:59 - we can give it that same blue
231:01 - that we kind of pass around everywhere
231:03 - in this app so let's look for that blue
231:06 - and it's this one right here so well i'm
231:08 - just going to copy that blue because i
231:09 - kind of like it
231:10 - and we'll make that the color right
231:12 - there so let's try sending one sole
231:14 - again to that address here
231:18 - and now you see that nice blue loader
231:22 - going we know the transfer is in
231:24 - progress
231:25 - and as soon as it takes place
231:27 - you know we it's confirmed with us
231:30 - you know if we wanted to get even
231:32 - fancier you could probably plug into the
231:34 - ether scan api and show the exact ether
231:37 - scan loader so it can actually show you
231:39 - exactly what percentage of the
231:40 - transaction is complete so
231:42 - that could be a fancy feature you could
231:44 - add
231:46 - and then you know the last really the
231:49 - last bit of it
231:50 - if we want to actually do that
231:52 - the last bit of it is really just um
231:55 - making this receive one look much better
231:58 - so let's work on our receive component
232:00 - so that will look like
232:03 - here's the final version
232:04 - and so the qr code is there ethereum is
232:07 - showing up etherdress and the ability to
232:10 - copy it to so you can hit copy right
232:12 - there
232:14 - so let's work on
232:17 - that functionality right now
232:19 - so we will make a new file here we will
232:22 - call it
232:24 - receive asking you she'll receive that
232:27 - js
232:28 - all right and i'm going to do the same
232:30 - thing we will do in my receive i'm going
232:33 - to just do rfce
232:35 - to autocomplete stuff
232:37 - and now i'm going to need access to a
232:38 - bunch of things so i definitely need use
232:41 - state
232:42 - and use effect here
232:46 - i'm going to need my styled components
232:49 - and
232:50 - we will need
232:53 - a couple of icons
232:57 - and then we're going to need a image
232:59 - builder from sanity as well so all of
233:02 - these imports are going to be necessary
233:04 - for this
233:06 - we're going to need two states
233:09 - that we're going to need to keep track
233:10 - of
233:11 - so what was copied
233:13 - and then of course our image url
233:18 - we'll need a u image url builder okay so
233:22 - let's go ahead and do that and we don't
233:24 - need
233:25 - asset and ref we can just leave it like
233:28 - selected token logo.url that should be
233:30 - good enough
233:33 - i do not need builder right there we
233:35 - just need to select the token
233:38 - receive will destructure three props
233:42 - and we will send it these three props as
233:45 - well
233:45 - let's go to our transfer model
233:48 - and where we have receive we need to
233:50 - actually call our receive component here
233:53 - so we're going to say return
233:56 - right and we're going to go receive
233:59 - and close it off like this
234:02 - cool so our receive component is now
234:04 - imported and we need to give receive we
234:07 - need to give receive a couple of things
234:09 - here
234:10 - the receiver is going to need our
234:13 - set action it's going to need selected
234:16 - token and it's going to need the wallet
234:17 - address
234:18 - let's go back into receive so we're
234:20 - giving it all those pieces of
234:22 - information that's good we're building
234:24 - our image right there inside of receive
234:26 - that's perfect that's all the
234:28 - kind of complex javascript component of
234:31 - it after that is just styling
234:34 - so let's go ahead and create the styling
234:37 - for our wrapper
234:38 - let's create the styling for our
234:42 - content
234:43 - let's create the styling for our qr
234:46 - container
234:47 - we'll create the styling for our divider
234:51 - we'll need to have styling for our row
234:55 - we will need styling for our
234:58 - icon
235:01 - we will need styling for our coin select
235:03 - list our coin name so quite a quite a
235:06 - few things we will need styling for
235:09 - and we will need styling for title
235:13 - we will need styling for our address
235:17 - and we will need styling for our copy
235:19 - button to when we hover over it it
235:21 - should turn into like a mouse
235:24 - or like a clicky pointer thing
235:26 - cool so now there's a bunch of styling
235:29 - now all we need to do is actually just
235:31 - build it out build out the front end all
235:34 - right so
235:35 - this over here is going to be wrapper
235:38 - wrapper
235:39 - and inside of our wrapper we're going to
235:41 - have our content
235:46 - inside of our content i'm going to have
235:49 - our qr container
235:52 - inside of our compa container we're
235:54 - going to have an image okay and uh
235:58 - this image you can write this down with
236:00 - me
236:02 - this image is going to be
236:05 - we're gonna hit the qr server api
236:10 - and it allows us to create a qr code on
236:13 - the fly which is super nice and the size
236:15 - we're going to give it is 250 by 250
236:18 - and then for the data we're actually
236:20 - going to give it our wallet address
236:22 - that's it that is it it's so easy to use
236:25 - a qr code
236:27 - just use this api
236:30 - give it the data that you need to give
236:31 - it and then whenever somebody actually
236:33 - takes a photo of it or scans it you
236:36 - don't need this period here i believe
236:38 - you can remove
236:39 - you can remove that that's supposed to
236:41 - be a slash
236:43 - and um i can actually copy that and
236:46 - paste it so just in case i'm making any
236:48 - silly mistakes here which i am because i
236:50 - didn't put an equal sign there so now
236:52 - it's perfect
236:53 - equal sign right there data is equal to
236:54 - wallet address so whatever you put
236:56 - inside of the data the qr code when you
236:59 - scan it with your phone will give you so
237:00 - it's that easy
237:03 - all right now underneath
237:05 - actually why don't we just show this for
237:08 - now before we continue further and let's
237:11 - just see what we have so far
237:13 - so let's go to our modal let's hit
237:15 - receive
237:16 - all right builder is having problems
237:18 - like what the heck is builder no worries
237:21 - all builder is is this
237:25 - pass this give it clients and that's
237:27 - that's builder that's it
237:29 - okay
237:30 - cool no worries go to localhost 3000
237:34 - and then you're gonna hit uh send and
237:36 - receive
237:37 - all right then hit receive and ta-da our
237:40 - qr code is showing up and if you
237:42 - actually took out your phone and scanned
237:44 - it you will get my exact wallet address
237:47 - that i have right there
237:50 - okay
237:51 - perfect great
237:53 - now what we need to do is i want to put
237:56 - a
237:57 - divider
238:00 - here so i'll put a divider underneath
238:02 - this
238:03 - and then
238:04 - underneath that we'll build our rows so
238:06 - we'll do a coin select list
238:09 - and then we're going to do the similar
238:10 - type of coin select list it's going to
238:12 - be a self closing tag
238:15 - oh actually no let's not make it a
238:17 - self-closing tag let's do it like this
238:22 - all right inside of our coin select list
238:24 - i'm going to have my
238:26 - icon
238:28 - and for image we're just going to say
238:31 - image url
238:35 - image url
238:38 - like this
238:40 - and the image url of course is none in
238:43 - the start we set it here so
238:45 - you know this this will break make sure
238:48 - you go to localhost 3000 and then come
238:50 - back to it and we'll build it
238:53 - let's go right there hit receive
238:55 - and there we go our image is uh showing
238:57 - up at the bottom
239:00 - so that's perfect
239:02 - exactly what we're going for
239:04 - underneath the icon of course we're
239:06 - going to need to give it a coin
239:08 - name
239:09 - and we're going to do selected
239:11 - token.name
239:12 - [Music]
239:14 - all right so there we go we got our
239:17 - name coming through
239:19 - and then we're gonna do another divider
239:24 - that is a self-closing tag and we're
239:26 - gonna do another row
239:28 - in this row we're gonna have a div
239:31 - we're gonna put a title and title is
239:33 - going to be selected token dot symbol
239:38 - and we're going to say address
239:43 - like so
239:46 - okay underneath this we're going to put
239:48 - the address and we're going to put the
239:50 - wallet address there perfect
239:53 - and then underneath
239:54 - that what we're going to do is we're
239:56 - going to add a copy button
240:01 - copy
240:02 - button
240:05 - all right and on this what we need to do
240:07 - is we need to give it an on click so
240:08 - we're going to say on click
240:12 - all right here's what needs to happen
240:14 - we're going to do
240:14 - navigator.clipboard.write
240:18 - text
240:20 - wallet address
240:23 - i'm going to do set copied to true so
240:26 - once copy this to true what we need to
240:28 - do is
240:30 - notice how in my deployed app when i
240:32 - go here and i hit copy this turns into a
240:34 - tick mark right that's why we're
240:37 - actually keeping uh track of the state
240:39 - if the copied is true or not because if
240:41 - it is true then we just make the
240:43 - tick mark go green
240:45 - and that's exactly what we're gonna do
240:48 - so
240:48 - right underneath right before our copy
240:50 - button finishes i'm just going to paste
240:52 - that right there and basically it's
240:54 - going to say is copy true if it is then
240:58 - show me the check mark
241:00 - otherwise show me the by copy so for
241:03 - example if you look at it now you see
241:04 - the buy copy the two copy things
241:07 - and when i click it it's gonna turn look
241:09 - at that how nice right
241:12 - send receive
241:14 - click it and it's copied man
241:16 - that is slick
241:18 - that is so slick
241:20 - so
241:23 - guys
241:25 - with that said
241:27 - i mean look at this right watch this i'm
241:29 - gonna pick
241:30 - solana let's open this whole thing up
241:34 - let's go boom
241:35 - let's pick let's go
241:37 - seoul
241:39 - and i will send one soul and we will not
241:42 - my own address but a different address
241:44 - let's just double check the address that
241:46 - i'm sending to is correct
241:49 - coinbase receiver
241:51 - copy paste
241:54 - so one soul and i'm going to hit
241:55 - continue and now i'm just going to sit
241:57 - and receive
241:59 - and let's see when it sends if it
242:00 - automatically pushes me back
242:03 - because if it's doing a good job it
242:04 - should automatically push me back so
242:07 - let's see what happens
242:08 - waiting
242:09 - waiting
242:13 - i don't actually know if that's gonna
242:14 - work or not
242:17 - oh nice it pushed me back to transfer
242:20 - complete actually it did it let's try
242:22 - sending another soul
242:24 - transfer in progress look at how nice
242:26 - that flow looks right and notice my
242:29 - balance
242:30 - you know as soon as that's done and i
242:32 - actually refresh you'll see my balance
242:35 - will be updated
242:38 - so freaking cool
242:44 - go here
242:46 - refresh
242:49 - my balance just changed
242:51 - let's send one
242:54 - bitcoin paste my address
242:58 - one bitcoin
242:59 - and my this should change my like 40 000
243:01 - so this should drop into 200 000
243:03 - something
243:05 - let's hit it waiting waiting waiting
243:07 - five four three
243:09 - two one
243:11 - sometimes it takes longer
243:13 - complete
243:15 - let's hit refresh
243:19 - let's go
243:21 - we just sent over 40 000
243:25 - worth of bitcoin let's go inside of our
243:27 - wallet and you'll see i have one bitcoin
243:29 - right here let's go inside of our
243:33 - main account
243:34 - and you see six btc 39 sold 13 eth let's
243:38 - open up send and receive
243:40 - and click here and look at that
243:42 - 13 6 and 39 sold
243:45 - pick one of them automatically updates
243:48 - bitcoin balance 6 btc btc right here
243:52 - right go here i can copy it choose shows
243:55 - bitcoin go here pixellana
243:58 - so solana soul address
244:00 - copy
244:01 - right like look at how incredible the
244:04 - overall experience of this app is right
244:06 - like wow what a freaking
244:08 - wonderful app and it just works
244:12 - you know
244:13 - every single time and just does it so
244:15 - damn well
244:17 - right
244:18 - so there you guys go i hope that you got
244:21 - a lot of value out of it i hope
244:23 - that you enjoyed this and that this
244:26 - actually brought you value
244:28 - you know the reason why we use this
244:30 - stack guys is because
244:32 - this stack is the best possible stack
244:35 - for this type of application we have a
244:37 - super powerful database
244:39 - that is easy to use with point click
244:41 - like sanity but then it's so freaking
244:44 - powerful
244:45 - right that's the type of database we
244:47 - would want to use so we got that
244:49 - we're using third web for
244:52 - interfacing with all our blockchain and
244:53 - all the sdk stuff
244:56 - right that's how we're able to get all
244:57 - this powerful stuff here then we're
244:59 - using next.js for front end and style
245:01 - components
245:02 - just and then metamask is authenticating
245:04 - the app so i mean you have the most
245:06 - modern bleeding edge tech stack that is
245:08 - phenomenal
245:10 - and yeah this is a brilliant freaking
245:12 - application so guys
245:16 - all right you thought you were done but
245:18 - we're not done yet we just have one last
245:20 - step which is to take our application
245:24 - and deploy it online to the interwebs so
245:28 - let's go ahead and do that one website i
245:31 - really love is called versailles.com
245:33 - make sure you just sign up here and you
245:35 - have an account here and then once you
245:37 - have that
245:38 - really all you need to do is the
245:40 - following so we're gonna go in my
245:41 - command line right here and i'm just
245:43 - gonna do yarn build you could do npm run
245:46 - build or whatever
245:48 - and hopefully it doesn't crash here
245:50 - oh it did i'm gonna just do something
245:52 - really awful they have a way to just
245:55 - ignore all all your linting errors
245:58 - because right now it's really just
246:00 - linting problem so the dirty dirty thing
246:02 - we're gonna do let's go to our next
246:05 - config.js file and we're gonna just
246:07 - paste this and we're gonna basically say
246:09 - ignore lint during builds so let's do
246:12 - yarn build one more time
246:15 - and let's see what happens if it works
246:18 - looks like it's building so that's a
246:19 - good sign
246:21 - all right and in the meantime while it's
246:23 - doing that i already know where i'm
246:24 - going to run into errors once i try to
246:26 - deploy it so let's try to circumvent
246:29 - that beforehand so one is um
246:32 - from my
246:34 - public and my private keys so my keys so
246:36 - let's go to versailles
246:39 - let's create a new project
246:41 - let's yeah that's fine let's create a
246:43 - new project
246:45 - and import git repositories
246:49 - all right let's not do that let's just
246:50 - put let's try to push this project and
246:52 - let's see what happens excuse the
246:54 - snoring in the back that's my little
246:55 - elephant english bulldog sleeping
246:58 - but we're gonna rock and roll anyway so
247:01 - one thing i'm just gonna upgrade update
247:04 - because we're having these problems with
247:05 - deploying and it kept not deploying and
247:08 - so the hack that i found to deploy this
247:11 - is the following
247:14 - we're gonna copy everything inside of
247:16 - here or i'm gonna i'm gonna basically
247:17 - remove everything inside of there and
247:19 - paste this and
247:20 - what this does is is go hey does the
247:22 - wallet address exist if it does exist
247:25 - then show me the wallet pretty much the
247:27 - code that we had
247:28 - the only difference here is this will
247:30 - also render a button that will say hey
247:32 - connect the wallet so that's the only
247:34 - difference here that's all and
247:36 - apparently it bypasses the weird error
247:38 - we were having so i don't care we are
247:41 - fine let's try it now let's do yarn
247:43 - build
247:44 - and let's see hopefully fingers crossed
247:46 - that it actually builds and uh
247:49 - goes right it goes through
247:52 - once that happens
247:54 - once this happens we're just going to
247:56 - type in versel
247:57 - on vercell it says setup and deploy it
247:59 - we're going to hit enter and say yes
248:01 - i'm going to pick clever programmer you
248:03 - can choose whatever you want
248:04 - it's asking
248:05 - link to an existing project i'm going to
248:07 - say no and hit enter it's going to say
248:09 - what's your project's name i'm just
248:11 - going to say coinbase blockchain app
248:13 - because i misspelled it initially it's a
248:16 - coinbase blockchain app like that in
248:18 - which directory is your code located
248:20 - it's located right over here so i'm just
248:22 - going to hit enter
248:26 - it came on blurry
248:28 - do you want to overwrite settings no
248:30 - and now it's just deploying it that's
248:32 - all
248:33 - so let's go ahead and update the private
248:35 - keys for this project i got this project
248:37 - right here i'm going to go to settings
248:39 - going to go to environment variables
248:40 - right there
248:42 - and in the environment variables let's
248:44 - scroll down here
248:46 - let's put this here and let's put the
248:49 - link there and i'm going to say use this
248:51 - for production preview and development
248:53 - that is totally fine
248:55 - and hit add
248:56 - so now that private key is there so our
248:59 - deployed version won't break as a result
249:01 - of that so that's good
249:03 - all right and it's currently deploying
249:05 - this app the next thing we need to do is
249:08 - add in the ability for origins so let's
249:11 - go inside
249:13 - desk in our sanity io on localhost 3333.
249:17 - if you've closed this just make sure you
249:18 - go hit start
249:20 - oh wait not desk we need to just go to
249:22 - the regular sanity
249:24 - i o so let's go to that
249:27 - i'm gonna just go sanity io
249:30 - i'm gonna hit login
249:32 - all right i'm gonna go to my
249:35 - block coinbase blockchain app
249:38 - and inside of here i'm gonna hit api
249:40 - and we're going to add in our origin so
249:43 - i'll show you what our origin is going
249:45 - to be
249:47 - wherever this app deploys
249:52 - that's the origin that i'm going to add
249:53 - to our cores
249:55 - okay so this app just got deployed so
249:57 - this is the production link so we're
249:58 - going to copy the production link
250:00 - and we're going to paste that right
250:02 - there
250:03 - so now that's saved in course
250:05 - and is there a preview link that he gave
250:07 - me
250:08 - doesn't really look like it so let's go
250:10 - ahead and check
250:12 - yo guys what the heck this is in our
250:15 - production it's showing up
250:18 - all right i'm excited i'm hella hyped
250:20 - let's see if this works connect wallet
250:24 - let's go ahead and choose this wallet
250:26 - right here that i built initially let's
250:28 - hit connect
250:30 - yo
250:31 - it's showing up let's zoom out here
250:35 - look at that our app is showing up
250:39 - right i'll put myself in the corner here
250:45 - it's getting my exact balance let's hit
250:47 - send and receive let's uh go here solana
250:52 - 0x3ff
250:54 - and let's send to sol
250:56 - so i should go down from 39
250:58 - and uh this should also become 295 000
251:02 - maybe or or this should become close to
251:05 - zero here
251:06 - and let's hit continue transfer in
251:09 - progress
251:13 - waiting three
251:15 - two
251:16 - one will it work this is on the deployed
251:18 - version
251:20 - yo it freaking worked
251:23 - how amazing is that
251:26 - this app worked fantastic it's
251:29 - absolutely what we're looking for
251:31 - yeah i mean honestly absolutely
251:32 - brilliant the only
251:34 - uh bad part about this app so far is it
251:37 - is only connecting to my wallet so if
251:40 - you wanted to use it you would need to
251:41 - connect it to your wallet you need to
251:44 - export your key and what i'm talking
251:46 - about here is
251:47 - inside of settings environment variables
251:50 - you're going to need to essentially
251:52 - add in your key once you add in your
251:54 - private key your app is good to go let's
251:57 - refresh this let's see if it works
252:00 - yep i'm down to 188 so my balance has uh
252:04 - updated let's go check my soul now i'll
252:07 - sol you can see it says 37 soul so the
252:11 - deployed
252:12 - version is working you'll be able to use
252:15 - my app but i'm sure that i'll be out of
252:18 - this pretty soon so
252:20 - as long as you're watching this if this
252:21 - link is up great go to check out the app
252:24 - see what you think but i'm pretty sure
252:26 - that at some point this will either
252:27 - crash or shut down or
252:29 - so many people will use it that there
252:31 - will be no money left in the fake wallet
252:33 - that i created
252:34 - okay
252:35 - awesome so there you go
252:38 - all right just a recap of how amazing
252:41 - this was
252:42 - we built this app using nexus for the
252:45 - front end
252:46 - we added freaking sanity for the back
252:49 - end we added style components for
252:51 - styling we added third web to handle the
252:54 - blockchain parts we added metamask
252:57 - authentication to the app we took
253:00 - versailles and we deployed this app for
253:03 - sale right we hosted this online
253:06 - and everybody can use it and this is a
253:08 - blockchain web 3.0 coinbase build that
253:11 - just looks freaking phenomenal so with
253:14 - that said if you've enjoyed this video
253:16 - smash the like button go check out
253:18 - sanity go check out third web if you
253:20 - haven't yet and if you need to upgrade
253:24 - your coding skills or react skills or
253:26 - your javascript skills or whatever make
253:28 - sure to join and check out profit with
253:30 - react it'll be in the link below with
253:32 - that said i love your beautiful face
253:34 - this is kazi this was a huge freaking
253:37 - build guys i can't believe we did it and
253:40 - we crushed it i love your beautiful face
253:43 - and as always i'll see you
253:46 - in the next video
253:51 - [Music]
254:08 - you