00:00 - hey guys how's it going in the last
00:02 - video we talked about four loops in this
00:04 - video I want to cover wild loops while
00:06 - loops are not used a ton in especially
00:12 - in Python but they're very important and
00:14 - let's talk about them because once you
00:16 - start to understand the concepts of
00:18 - while loop then it's for loops
00:21 - essentially let you write it in a
00:24 - shortcut but one thing that's nice about
00:26 - while loops just to give you guys a
00:29 - little intuition of when to use while
00:31 - loops and for loops generally you want
00:33 - to use while loops for things that you
00:35 - don't know about when they're going to
00:36 - end how long they can run for and you
00:39 - want to use for loops for things that
00:40 - you know how long it's going to take for
00:42 - example if you want me to do push-ups
00:43 - and you don't know how long I'm going to
00:45 - get tired you want to say something like
00:47 - while not tired
00:48 - keep doing push-ups okay and then that
00:51 - way while loop just keeps running until
00:53 - the person is tired and then once the
00:55 - person is tired it stops for loops you
00:58 - would you need to specify a range so you
01:01 - would say do 20 push-ups and then you
01:04 - can stop so you would use a for loop for
01:05 - that okay while loops you don't know
01:07 - something for loops are better if you
01:10 - know something okay but I'm gonna right
01:12 - now show you a while loop that mimics a
01:14 - for loop okay so I want something to
01:17 - happen hundred times and then I want it
01:20 - to stop or something okay so let's just
01:22 - start with a simple example that counts
01:24 - so let's say I want to do okay so let's
01:28 - start off with this I want to say my
01:30 - count is zero I start off with something
01:32 - that is at zero and then it keeps
01:34 - printing something up by one so I'll say
01:38 - how long do I want to run for okay let
01:42 - me add at the top here in the while loop
01:44 - notes for you guys again I'm using
01:47 - repple dot I T so then when I'm done
01:51 - making these videos I can actually post
01:53 - a link so you guys can actually go
01:55 - through the notes yourself so I'll put
01:56 - all these notes I'll a granade these
01:58 - notes and put it in the links below and
02:01 - then you guys can just use them okay so
02:05 - while and then some condition
02:09 - and then if that condition is true true
02:15 - then then body right or then this and
02:22 - then it keeps looping okay
02:26 - it keeps looping back and forth but once
02:29 - it's out of it when the condition is
02:31 - false then it ends so it's like an if
02:32 - statement but it keeps happening over
02:34 - and over again so if you want if
02:35 - statement to keep asking some question
02:37 - that's how you should think of a loop
02:38 - all right so I'm going to say and
02:41 - remember just so you know condition
02:46 - example would be like five is less than
02:51 - six this evaluates to true or false okay
02:57 - so this evaluates to true right five is
03:01 - less than six another example would be
03:05 - another example would be six is greater
03:08 - than five or let's make it so it's like
03:12 - this this evaluates to false so
03:15 - conditions are everything that at the
03:17 - end of the day evaluates to true or
03:18 - false so if you took this condition and
03:21 - put it in here write this for loop this
03:26 - while loop will like run forever because
03:28 - it'll always say five is less than six
03:31 - all right now let's keep going while
03:35 - count is less than how many times would
03:38 - we want to run let's say want to run a
03:40 - hundred times then I want to print what
03:45 - the count is and what else do I want to
03:48 - do if this statement says 0 is less than
03:51 - 100 it'll come down here and it will
03:54 - print out right so for example in the
03:57 - start I made count to be 0 so if I do
03:59 - this and put 0 for account as your
04:02 - account here it's going to print that
04:03 - out to the screen and then what's going
04:07 - to happen once it's done printing it out
04:09 - to the screen
04:11 - we are going to go back to this loop and
04:14 - is going to ask is going to put
04:17 - condition here again right or yeah sorry
04:20 - count is going to put College
04:21 - we're going to have count here is going
04:23 - to check this statement again and again
04:26 - we're going to have zero four count is
04:28 - going to ask the question is your less
04:30 - than 100 it's going to evaluate to true
04:33 - then it's going to execute this part of
04:35 - the code which says print 0 because
04:37 - count is zero and it's going to print
04:39 - out zero again then it's going to go
04:41 - back to the condition is going to check
04:44 - if count is less than 100 since count is
04:48 - zero again it's going to go back here
04:50 - it's going to set print zero okay now
04:54 - I'm gonna run it and watch what happens
04:56 - I'm gonna stop it and I think I might
05:00 - have crashed my computer haha hey there
05:04 - huh
05:05 - so my computer just kind of crashed
05:07 - pretty bad but hopefully that gives you
05:10 - a little sense of what happens
05:11 - I should have friend this in my terminal
05:13 - but yeah it took it like ten minutes to
05:15 - come back and I had to rewrite the notes
05:17 - and everything so let's go back so this
05:21 - is a problem called infinite loops where
05:24 - you write something or it doesn't match
05:26 - the condition like this thing if it
05:29 - doesn't ever turn false your loop is
05:31 - wrong okay if that thing doesn't turn
05:35 - false your loop is wrong alright because
05:39 - that means that your loop is going to
05:41 - run forever
05:42 - unless you put in this thing called
05:44 - break but I don't want you to do that
05:46 - generally that implies poor logic so
05:51 - let's just keep going through this
05:53 - alright so we want this to turn false at
05:58 - some point and we don't want to keep
05:59 - printing out 0 every time right so what
06:01 - should we do if we leave this at 0 it's
06:04 - this right if I leave this at 0 this
06:07 - whole thing is going to evaluate to
06:08 - false if this is and as I'm sorry I'm
06:13 - sorry this is if this is going to
06:15 - evaluate to true every time ok it's
06:17 - going to value to true every single time
06:19 - because 0 is less than 100 now it's
06:24 - going to keep saying true and the loop
06:25 - is going to keep running if I change
06:28 - this to 5 this thing is going to
06:30 - evaluate still to true if I change this
06:33 - to 9
06:34 - II this whole thing is still going to
06:36 - evaluate to true what happens if I
06:40 - change it to 99 still evaluates to true
06:43 - now what happens if I change to 100 this
06:48 - part of the code the value is to a false
06:50 - and we are done with the body of the
06:54 - we're done with the loop and therefore
06:56 - we don't execute the body of the while
06:59 - loop okay if I needed to add something
07:01 - else in my notes for the while loops is
07:04 - this go back to while loop right I would
07:08 - if this condition is true then do this
07:11 - and then go back to the to top of while
07:13 - loop okay so we want this thing to turn
07:19 - false at some point here's how we're
07:21 - going to do it okay I'm going to say
07:26 - count is equal to count plus 1 so I'm
07:29 - just going to add 1 to count every
07:31 - single time how you read this is that
07:33 - what count new count is what count
07:38 - previously was plus 1 so the first time
07:41 - we go through the loop count is 0 it
07:44 - prints out 0 out to the screen then it
07:47 - prints out then count then what it does
07:50 - is it says count is equal to accomplice
07:52 - 1 so it says count is 0 plus 1 so the
07:57 - new count is now 1 okay then it goes
08:00 - here and it goes ok is 1 less than 100
08:03 - yes it is
08:04 - so it prints out 1 then it goes here and
08:06 - this really says count count is equal to
08:09 - calm plus 1 so it says 1 plus 1 is 2
08:13 - then it makes this guy too
08:15 - right then it goes while 2 is less than
08:18 - 100 print out 2 and what it says here is
08:22 - count plus 1 count is now 2 so 2 plus 1
08:26 - you get 3 3 and while count is less than
08:30 - 100 count plus 1 then count turns to 3
08:36 - and this part turns to 3 it prints out 3
08:41 - this part turns to 3 you get 4 and then
08:44 - ultimately when it gets to 100 it stops
08:46 - so let's just print this out and let's
08:51 - run it
08:53 - and you can see it went from zero all
08:58 - the way to 99 and then it stopped now
09:02 - what if we wanted to do something
09:03 - fancier right what if we wanted to do
09:06 - something where it goes from 100 up to 1
09:09 - and then instead of printing out 0 it
09:10 - prints
09:11 - blast off so I want you to try that
09:14 - challenge and I'm going to go ahead and
09:17 - do that right now so you can pause the
09:20 - video try it yourself and then watch
09:22 - this part I'm going to do this stuff in
09:26 - my terminal because I don't want stuff
09:30 - to freeze because it's really annoying
09:32 - and then I have to redo the whole thing
09:33 - again when it freezes on rebel IT so but
09:38 - I will put all of these notes for you
09:40 - guys at the end of the day so if I do a
09:43 - while loop right so let's try it from
09:46 - you go from 100 all the way to 1 and
09:48 - then it stops first thing I want to do
09:51 - is since I want to print out from 100 I
09:53 - don't want count to start off from 0 I
09:55 - want the count to start off from 100
09:58 - another thing I have to keep in mind is
10:00 - instead of incrementing I have to
10:02 - decrement so I have to account for my
10:04 - comparison operator flipping as well so
10:07 - I'm going to do while count is greater
10:10 - than 0 right then do something so I'll
10:14 - say well count is greater than 0 print
10:17 - count and I want to do count is equal to
10:21 - count minus 1 now let's give it a try
10:24 - and you can see that it prints all the
10:26 - way up to 1 and then it stops so that's
10:28 - good ok now I want to write a statement
10:32 - where once it's 0 it prints off
10:34 - blast-off so let's write those lines of
10:37 - code again so I'm going to say this I
10:40 - want to say this guy I want to say do
10:44 - this and then decrement but I want to do
10:48 - something special this time I want to
10:50 - say if
10:52 - count let's just type it up again while
10:58 - count is greater than zero if count
11:02 - equal equals zero I want you to print
11:05 - see if you can catch they're in this
11:08 - logic but print blast off otherwise I
11:18 - want you to do what I want you to print
11:25 - count right and I want you to decrement
11:30 - regardless of anything so I want you to
11:33 - do count minus one so this part is not
11:36 - in that if else block because I want
11:38 - this part to happen no matter what we do
11:40 - okay so I could either put it in my if
11:43 - block and in my else block or I can just
11:46 - choose to put it outside and that's what
11:48 - I've chosen to do and you can see it
11:50 - grows from one hundred to one and then
11:53 - it prints why doesn't it print blast-off
11:58 - hmm that's weird
12:00 - right what's the logic there that it's
12:04 - not printing blast-off well let's think
12:07 - about it we have this situation here
12:10 - right we have this greater than sign
12:15 - here so the only way the body of the
12:18 - while loop runs is if this condition
12:20 - evaluates to true well what does this
12:22 - condition evaluate to in this case it's
12:27 - when count is zero it this whole part
12:29 - evaluates to false right when count is
12:32 - zero that part evaluates to false if
12:35 - that part evaluates to false the while
12:37 - the body of the while loop does not run
12:39 - so when our count becomes zero after it
12:43 - gets decremented on this line then count
12:46 - zero greater than zero returns false
12:49 - which means that this if condition
12:51 - doesn't run therefore the blast off
12:54 - never runs so we want to make sure that
12:56 - when count is zero the body of the loop
12:58 - should run this part should run it
13:02 - should print blast off and after that it
13:05 - should
13:05 - not run again so here's one addition
13:09 - that we need to make to our code okay so
13:12 - let's go back and type count is this
13:16 - right the only addition that we need the
13:19 - only thing that we need to add to our
13:20 - code is May account is greater than or
13:22 - equal to 100 okay and then everything
13:27 - else we can keep it the same if count
13:29 - zero then I want you to print blast-off
13:33 - else I want you to print out what count
13:37 - is and then I want you to decrement
13:40 - count regardless right I want you to
13:43 - decrement count regardless of the
13:45 - situation let's run this and you can see
13:48 - that it goes let me make it bigger
13:50 - something for you guys and you can see
13:53 - it goes from 100 all the way or sorry
13:55 - 100 all the way down to one and then
13:58 - ultimately it says blast-off okay
14:01 - so hopefully this gives you a little bit
14:02 - of a better idea of how while loops run
14:05 - the codes will be down below thank you
14:08 - guys for watching I'll see you in the
14:09 - next video