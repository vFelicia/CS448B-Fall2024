00:00 - rock paper scissors shoot
00:02 - did i get you if i gotcha all right guys
00:04 - so in this video we're going to be
00:06 - building the rock paper scissors app
00:08 - with vanilla javascript beautiful plain
00:12 - simple if you want to code this along
00:13 - with me make sure to click the link
00:15 - below and fork this ripple only if you
00:18 - fork this ruffle you can actually code
00:19 - it along with me why because html and
00:21 - styling is already done you're only
00:23 - going to be working on the javascript
00:25 - part so if you want access to the html
00:26 - css file already the only way to do that
00:28 - is click the link below and fork it and
00:30 - then you'll have access to the app all
00:34 - you have to do is just like code the
00:35 - javascript parts and you should be good
00:37 - to go now right before we actually get
00:39 - started make sure to smash the like
00:40 - button because we want this video to go
00:42 - out to as many people as possible if you
00:44 - don't know me i'm rafa qazi the ceo and
00:46 - founder of clever programmer i've been
00:47 - coding for almost 10 years now and i've
00:49 - helped millions of people become
00:51 - developers with that said let's jump
00:53 - right into the video alright i hope
00:55 - you're excited we're now going to work
00:57 - on the rock paper scissors app perfect
01:00 - okay this is
01:02 - you starting from scratch and now let's
01:04 - just walk through kind of what
01:05 - everything is so let's start off with
01:07 - index.html what's going on in here it's
01:09 - a very simple file with only a few lines
01:11 - of actual code all right some of the
01:14 - code is
01:15 - you know just doc type html html like
01:18 - whatever right that's default
01:20 - html files come with that a couple of
01:22 - lines of code here
01:24 - and uh you're gonna need to know the
01:27 - player score certain div ids because
01:29 - you're gonna need to access them so for
01:30 - example this button has a value remember
01:33 - when we did red green and yellow when we
01:35 - did that color app our buttons had a
01:37 - value red it had a value green it had a
01:40 - value whatever so when you clicked it
01:42 - you're able to retrieve its value
01:44 - that's why that exercise is going to be
01:45 - val helpful to you here no pun intended
01:48 - valuable for you
01:50 - so
01:51 - this is uh that's those buttons you're
01:54 - gonna need to know these classes so
01:55 - familiarize yourself with this
01:57 - index.html because from the javascript
02:00 - side you're gonna need to detect when
02:02 - somebody clicks this button and you're
02:04 - gonna need to be able to refer to these
02:06 - specific buttons you're gonna need to be
02:08 - able to refer
02:09 - to you know the specific
02:12 - things and then right on there
02:14 - okay so for example
02:17 - when the player's score shows up maybe
02:18 - that's a player's score div when
02:21 - the hands show up meaning the computer
02:22 - hands or the user hands they should show
02:24 - up here and by hand it's like computer
02:26 - choice or player choice the result of
02:28 - the game whether you won or lost that
02:30 - should show up here as well okay um
02:32 - obviously above that
02:34 - red button right of course it should
02:36 - show like above there so it should show
02:38 - like here
02:39 - end game button you're going to need
02:40 - this id as well and this script here
02:43 - just means that
02:44 - this index.html
02:46 - here
02:48 - is linked with this uh
02:50 - javascript sheet
02:52 - okay meaning if you ever want if you
02:54 - ever change the name here make sure you
02:56 - go and also change the name here and
02:58 - make sure they both match
03:00 - okay cool but i would recommend you
03:02 - don't change anything because once
03:04 - you're done with your entire code you
03:06 - should copy your working code and paste
03:09 - it back inside of the script okay your
03:12 - and the only file you need to change is
03:14 - a script file okay awesome
03:16 - now let's walk through this project step
03:19 - by step we're not going to solve it
03:21 - right now but i'm going to give it to
03:23 - you as an exercise but we need to just
03:24 - kind of go over some stuff
03:27 - okay
03:28 - so
03:29 - this project will have a couple of
03:30 - functions that you need to implement
03:32 - all right here we go
03:34 - so if you look at this there's only
03:36 - one
03:38 - two
03:38 - three
03:40 - four and five
03:41 - there are only five functions that you
03:43 - need to implement the code shouldn't be
03:45 - like longer than 100 lines it should be
03:47 - less than that probably around 70ish
03:49 - lines without comments
03:51 - and
03:52 - that's what you need to work on okay
03:53 - it's five functions one two three four
03:57 - five six actually sorry six functions
03:59 - you need to work on six functions now
04:01 - with each function there's going to be
04:03 - some documentation telling you what this
04:06 - function should do how to run this
04:08 - function and what it should return okay
04:11 - and then there's gonna be some other
04:12 - notes sometimes if and you know within
04:14 - the function as well so for example
04:16 - let's walk through computer choice
04:18 - well this function computer choice get
04:21 - computer choice randomly selects between
04:23 - rock paper scissors and returns that
04:25 - string so that should be pretty
04:26 - self-explanatory what that function
04:28 - should do every time i call it here's an
04:30 - example of me calling it get computer
04:32 - choice and here's an example of it
04:34 - returning a random string rock here's
04:36 - another example of me calling it and it
04:38 - returning a random string scissors
04:41 - this function has no
04:43 - arguments
04:44 - okay zero arguments nada so you won't
04:47 - need to add in or take away arguments
04:49 - the arguments are already
04:51 - there
04:52 - for you to help you out here's another
04:54 - function you're gonna need to implement
04:55 - the get result function
04:57 - okay this is going to compare player
05:00 - choice and computer choice and it will
05:02 - return the score accordingly meaning
05:05 - here's an example where the human wins
05:07 - aka you win against the computer when
05:09 - you call get result and you pass it rock
05:11 - and scissors so this is the player
05:13 - choice and this is a computer choice so
05:15 - when you give it rock and scissors
05:18 - who wins is it the human or
05:21 - the bot that wins this case the human
05:23 - wins so then it should return a score of
05:25 - one here's an example of a human losing
05:27 - you call the get result function you
05:29 - pass a scissors four player and you pass
05:31 - it rock for the computer
05:33 - and it returns negative one because rock
05:36 - beats scissors and then here's another
05:37 - example of human draws
05:40 - where
05:41 - you pick rock for the human and rock for
05:44 - the computer and the score should be
05:46 - zero okay so those are examples of how
05:48 - to call this function what it should
05:50 - return should return a number
05:52 - and the two arguments that it has okay
05:55 - this function is probably going to be
05:56 - one of the most difficult ones for you
05:58 - to implement and uh here
06:01 - i i have even other notes for you to
06:03 - make it easier so for example when
06:05 - you're implementing this you're gonna
06:06 - need to have you're gonna need to do a
06:08 - lot of if else if else conditions okay
06:11 - because you're gonna need to check if
06:13 - the
06:14 - player picks rock and the computer picks
06:17 - rock then what happens okay
06:19 - so you're gonna need to write the code
06:21 - here it says all situations where human
06:24 - draws set score to zero
06:26 - so in order to write this well this
06:28 - should be pretty easy because once the
06:30 - only situation it's a draw so you could
06:32 - say if a rock goes against a rock that's
06:35 - a draw if a scissor goes against the
06:37 - scissors that's a draw if a
06:39 - that will take you forever or you could
06:41 - just say hey if player choice and
06:42 - computer joints match that's a draw so
06:45 - you could do it like that all right um
06:48 - so that should take care of all of your
06:49 - draw conditions then here are your other
06:52 - conditions so this is where all
06:54 - situations where human wins you should
06:56 - set the score to one so you're going to
06:58 - use a bunch of else if's here and this
07:01 - is a situation where you will define all
07:03 - situations where a human wins so a human
07:05 - will win if
07:07 - human pigs you know
07:09 - rock against scissors a human will win
07:11 - if the human picks scissors against
07:14 - paper a human will win if a human picks
07:17 - paper against rock
07:19 - so those are all the winning conditions
07:21 - go here and then all the losing
07:23 - conditions you can be pretty clever
07:25 - about it and you don't even actually
07:26 - have to define them because you could
07:27 - just say else human loses okay so these
07:30 - comments are there to help you kind of
07:32 - simplify the logic for you a little bit
07:34 - and then just return the score make sure
07:36 - you don't forget to return the score i'm
07:38 - going to toggle this function and close
07:39 - it then you have the show result
07:41 - function okay this function is also
07:44 - going to be a little bit advanced and
07:45 - this one
07:47 - this function here get result is heavy
07:49 - on if else conditions show result is
07:52 - going to be heavy on dom manipulation
07:53 - okay so show result is how you're going
07:55 - to draw on screen and show stuff for
07:57 - example if i go to the solution version
08:00 - when i click here
08:02 - show result is a function that's doing
08:05 - you know human chose rock computer chose
08:07 - paper you lose
08:09 - and then giving a score of negative one
08:11 - and then drawing drawing it out here
08:13 - okay so that's the show result function
08:15 - so get result will calculate who won
08:18 - show result will then output that the
08:21 - human computer choice the human choice
08:23 - the current score all of that stuff onto
08:25 - the screen so show result updates the
08:27 - dom to you win or you lose or it's a
08:30 - draw based on the score also shows
08:31 - player choice versus computer choice
08:34 - okay
08:35 - now
08:37 - here
08:39 - um you can see it takes in three
08:41 - arguments okay the score player choice
08:43 - computer choice so it needs that in
08:45 - three pieces of information and uh hint
08:48 - on a negative on a score of negative one
08:50 - you should do result dot inner text you
08:52 - lose why because oops if i go back here
08:56 - i have a div called result right so make
08:59 - sure you get this div by using get
09:02 - element
09:03 - document.getelementbyid get this div
09:05 - right store in a variable called result
09:08 - and then you could do result that inner
09:09 - text and change its value to you lose so
09:13 - that's what i said don't forget to grab
09:14 - the div with the result id so this is
09:16 - just a hint on how to like do one of
09:18 - them you're going to need to do multiple
09:20 - divs here then you have on click
09:23 - rock paper scissors so this is where
09:26 - what should happen when the user clicks
09:29 - well right when the user clicks you need
09:31 - to think about what happens so this
09:32 - function should calculate who won and
09:34 - show it on the screen so to give you a
09:36 - hint this function should call upon our
09:40 - get result function
09:41 - and our show result function
09:43 - that's kind of it
09:45 - okay that's what this function will do
09:47 - all right and then we have our play game
09:49 - function this is going to be a really
09:50 - important function
09:52 - the name is a little misleading and i'll
09:54 - kind of explain why
09:56 - but here's what it should do
09:57 - make the rps rps means rock paper
10:00 - scissors so anywhere you see rps it
10:02 - means rocker processors so make the rps
10:04 - buttons actively listen for a click and
10:06 - do something once a click is detected so
10:09 - that's what the function of
10:11 - play game is so all it does is just
10:13 - listening here okay it attaches
10:15 - listeners to these
10:17 - and once you click here it should run
10:20 - this function right there when i click
10:22 - here it should run that function right
10:24 - there and of course we pass in the
10:26 - player choice so
10:28 - if i let's say choose rock
10:31 - yeah and
10:32 - i click that then it calls on click rps
10:36 - and then it passes in rock as the player
10:38 - choice
10:40 - it and then vice versa if i choose any
10:42 - of these other ones and then on click
10:44 - rps knows what to do so i have all the
10:47 - notes here for you right so you make
10:49 - sure to use query selector to select all
10:51 - rps buttons
10:52 - right and then i have even step by step
10:54 - on how you can do it loop through the
10:56 - buttons using a for each loop add a
10:58 - click event listener to each button
11:01 - and uh this is
11:03 - you know
11:04 - um we can say add an on click and this
11:06 - is something that we did already with
11:08 - our
11:09 - color app okay remember we had to add
11:10 - event listeners on click to each update
11:13 - each button's on click properties to
11:16 - basically listen for a click and then
11:18 - call another function so refer to that
11:21 - red green yellow square app that we did
11:24 - okay cool so that's what play game is
11:25 - going to be
11:26 - and then um you know and then make sure
11:29 - that in there in play game you also add
11:32 - a listener to this button too so
11:34 - basically in play game all you're really
11:36 - doing is you're just updating the on
11:37 - click properties of each of these okay
11:40 - that's kind of kind of what happens
11:41 - there and uh last
11:44 - end game end game is just gonna be a
11:46 - function that clears all the text on the
11:49 - dom so if i go here and i hit this it
11:51 - just clears all the text so it takes all
11:53 - the values that you had initially set
11:56 - sets them to empty string or empties
11:58 - them out okay so i hope that you know i
12:01 - i really believe that you'll be able to
12:04 - do this we've done
12:06 - every single every exercise everything
12:08 - that we've done up until this point
12:09 - preps you for this project there
12:11 - shouldn't be any concepts that are new
12:14 - while putting them together is going to
12:16 - be harder and then there's going to be
12:17 - certain things that are for sure going
12:19 - to be challenging so
12:21 - do don't be upset or frustrated if you
12:24 - don't get this honestly i don't expect
12:26 - you to be able to get it you'd have to
12:27 - be really really freaking hyper smart to
12:29 - get this on your first try when i used
12:31 - to do these projects i never got this
12:34 - these types of projects on my own like
12:36 - right away in the start i would give it
12:38 - my best i would come close but it
12:40 - wouldn't be working and then i would
12:41 - actually look at the real code and then
12:43 - i would go ah okay then i would try it
12:45 - again but i would give it an honest try
12:48 - so make sure that you do give it an
12:50 - honest try and try your hardest before
12:52 - you come and look at the solutions and
12:54 - the concepts you know they'll be covered
12:56 - are like for loops dom manipulation
12:58 - variables conditionals template literals
13:00 - event listeners higher order functions
13:02 - and
13:03 - math.random stuff okay so um
13:06 - i think you're gonna have a lot of fun
13:07 - with this and really give it a try and
13:10 - then pretty soon we're gonna walk
13:12 - through and build this together okay so
13:14 - the next uh step will be us actually
13:17 - walking through the entire solution
13:18 - together but for now you should stop
13:20 - take a break and try to build this by
13:21 - yourself
13:22 - all right see you soon all right let's
13:25 - go through and code up
13:27 - rock paper scissors together let's go
13:31 - so let's go and do this step by step all
13:34 - right and we're going to walk through
13:35 - and do every single thing together so
13:38 - this get computer choice function over
13:40 - here remember we made this function that
13:42 - allowed us to get a random item from an
13:44 - array right fruit item we're gonna use
13:47 - very similar logic to that so uh let's
13:50 - go and say
13:52 - and i'm coding this live together with
13:53 - you so if i get stuck in any of these
13:55 - parts it's live
13:56 - yes i've coded it up before but now
13:58 - we're doing it from scratch so we're
14:00 - gonna get so here are the rps choices
14:03 - okay so we have rock we have paper
14:06 - and we have scissors
14:08 - these are the three choices that that
14:11 - are universally available to us right
14:14 - and now i'm going to just say
14:17 - and let's capitalize this r
14:20 - p
14:22 - s
14:22 - okay
14:23 - and now we're going to say we're going
14:25 - to randomly select one so random
14:28 - um choice
14:30 - okay and then here i'm going to do
14:34 - math.random all right and um
14:37 - we're going to multiply that by 3. just
14:39 - hardcode 3 in there because we only have
14:41 - three choices so this will make sure
14:42 - that it gets the number between zero one
14:45 - zero and three okay
14:47 - and then we're going to call mata floor
14:49 - on this so remember because math.random
14:52 - is always going to give you some
14:55 - like
14:56 - crazy number zero point eight four four
14:58 - four four four something right but when
15:00 - you floor it it'll just
15:02 - remove all the decimal places and then
15:04 - round it down so now this should give us
15:06 - zero one and two perfect that's exactly
15:08 - what we're looking for and then all we
15:10 - wanna do
15:12 - is
15:13 - let's let's actually call this random
15:15 - number and then we're going to do uh rps
15:19 - choice
15:20 - pass in the random number and that's it
15:22 - we should just return that okay so
15:24 - return random number so if this function
15:28 - let's see if this function is good to go
15:30 - and if it's working okay so i'm gonna go
15:32 - ahead and call this here and we're gonna
15:34 - say console.log actually here's even a
15:36 - cooler way of testing this
15:38 - so let's just copy this function right
15:40 - over here copy paste it in
15:42 - hit enter
15:44 - all right so basically what all we've
15:45 - done is we took this function and pasted
15:48 - the definition inside of our console and
15:50 - now let's just call computer choice
15:53 - let's call it again let's call it again
15:55 - let's call it again and you can see that
15:57 - every time it gives us a random choice
16:00 - rock paper scissors
16:02 - everything is random okay
16:04 - so this function is working correctly
16:07 - okay so i think that's great now let's
16:08 - move on to the next function
16:10 - this is going to be a little bit of a
16:12 - harder function
16:13 - right this is the get result and it's
16:15 - going to compute the score so based on
16:17 - the score that we give it it's going to
16:19 - say whether you won or you lost so now
16:22 - what are all the situations where a
16:24 - human draws
16:25 - this one over here is simple
16:27 - we're going to say if player choice is
16:30 - you know equal to computer choice
16:32 - well in that case we're just going to
16:34 - return a score of actually
16:38 - let's have a variable here here called
16:40 - score
16:41 - and we're going to basically just say
16:43 - score equals
16:45 - 0. these are all of our draws situations
16:47 - so now all of our drawing situations are
16:49 - handled
16:50 - now we have our else ifs
16:52 - that we're going to start okay so else
16:54 - if actually let's do it this way
16:58 - we're going to say elsif so now we're
17:00 - going to have a bunch of
17:02 - elsifs so what are the situations where
17:05 - a human will win so let's pick a
17:07 - situation where a human will win if a
17:10 - human chooses rock
17:11 - then let's pick a situation where a
17:13 - human will win where they pick paper and
17:15 - then let's pick a situation where a
17:17 - human will win if a human picks scissors
17:20 - okay so those are the three different
17:21 - situations so let's give it a try
17:23 - so we're going to say
17:25 - if player choice
17:28 - is
17:28 - rock
17:30 - and and uh make sure to always have
17:34 - everything in title case like this
17:36 - because if you use lower r somewhere for
17:38 - rock and capital r somewhere else your
17:40 - entire app is going to break okay so
17:43 - just be consistent with uh this
17:46 - spelling here everywhere all right let's
17:48 - go here and let's give it a try it's a
17:51 - computer
17:52 - choice so rock will beat scissors
17:57 - so this is situation one where a human
18:00 - wins now let's try another let's see
18:02 - another situation here
18:03 - okay so i'm gonna copy this
18:06 - and paste this here right so these are
18:09 - now we're making all the situations
18:11 - where a human wins
18:12 - and we're going to set the score
18:14 - to 1 in this case
18:16 - now we're going to have another elsif so
18:18 - i'm just going to copy this and paste
18:19 - that
18:21 - okay and uh let's also let's actually
18:24 - copy i'm going to copy
18:26 - this entire thing and paste it again
18:28 - copy this entire thing and paste it
18:29 - again so in the situation of rock and
18:32 - then we need to handle a situation of
18:33 - paper and then we need to handle
18:34 - situation of scissors so paper
18:37 - if a human chooses paper well what would
18:40 - the computer need to choose in order for
18:42 - the human to win
18:44 - let's think that think about that right
18:46 - so if i chose paper well paper beats
18:50 - rock
18:52 - so then we're going to pick rock here
18:55 - and then scissors beats paper so we're
18:57 - going to put paper here
18:59 - so now we've defined all of the
19:01 - conditions where a human wins so we're
19:03 - done with that
19:05 - and then the last thing we actually just
19:06 - need to do
19:07 - is define a situation where a human
19:10 - loses so
19:11 - what we need to do here
19:13 - is just say else
19:16 - score is
19:18 - negative one
19:19 - okay so now everything else is a
19:21 - situation where it's reversed where the
19:23 - computer wins
19:25 - but we can we can be really smart and
19:28 - cheeky and just say else here okay
19:30 - otherwise you would have to do a bunch
19:32 - of elsif's and then you would have to
19:34 - basically reverse this
19:36 - and put all the choices where computer
19:38 - wins and manually define each one of
19:41 - them but if you do it this way you don't
19:43 - have to define each one of them right
19:45 - and then at the end all we need to do
19:48 - thanks to this note this node is pretty
19:50 - much giving away the exact line of code
19:52 - you need to write
19:53 - make sure to return the score
19:56 - okay
19:57 - return the score now let's take this
19:59 - function and see if we can copy this and
20:01 - let's see if we can paste this function
20:03 - in the
20:04 - command line we pasted it and let's call
20:07 - our function get result
20:09 - and i'm going to
20:11 - give it a player choice of rock and then
20:13 - the computer will be scissors and let's
20:15 - see what happens
20:16 - and we get one is that true does rock
20:19 - beat scissors yes it does so we get back
20:21 - one well what happens if both are rock
20:25 - zero so that's perfect
20:27 - uh let's try let's try all these test
20:29 - cases right to rock scissors
20:31 - we tried rock rock now let's try
20:33 - scissors rock and we should lose
20:38 - scissors
20:39 - comma
20:40 - rock put make sure to put those quotes
20:42 - and let's run it
20:44 - and indeed we do lose so all of these
20:47 - test cases that we have written here
20:49 - right check out what we have written out
20:51 - here
20:52 - so this function is gucci this function
20:56 - is doing what it's supposed to be doing
20:57 - so we're good on the get result function
21:00 - okay so i think
21:01 - we're good with that so we finished get
21:03 - computer choice
21:05 - we finished get result okay now let's go
21:08 - through some of our
21:10 - um other functions that we're gonna be
21:13 - uh doing as well okay so let's let's go
21:16 - to our next function show result
21:19 - well before we do this
21:22 - before we just like do
21:24 - show result kind of in one go
21:26 - let's just attach our listeners first
21:29 - because that's going to be the most
21:30 - important thing because if if i was
21:31 - making this app the first thing i would
21:33 - do is add listeners because if i don't
21:34 - add listeners
21:36 - i'm never going to be able to see really
21:37 - anything happen
21:39 - so let's go ahead and add listeners so
21:40 - loop through the buttons using a for
21:42 - each loop okay so let's do that but
21:44 - first what i need to do use query
21:46 - selector to select all rps buttons
21:48 - so let's do it
21:50 - rps buttons i'm going to set document
21:53 - dot
21:55 - query
21:56 - selector all
21:58 - and we're going to pass it
22:00 - rps buttons let's go to our html file
22:05 - and if you see here we have rps button
22:08 - class right class rps button class rps
22:10 - button so it's not plural it's singular
22:14 - and let's just see if we can actually
22:16 - console log this out so let's go ahead
22:18 - and console log
22:20 - rps button
22:22 - okay
22:23 - and uh here we are calling the play game
22:26 - function so if i hit run everything
22:28 - should run
22:30 - and there we go we're seeing that we're
22:32 - getting three html button elements which
22:34 - is exactly what we expected
22:36 - right
22:37 - and now you can either manually attach a
22:40 - listener to each one of them so you
22:41 - could do rps buttons
22:44 - you know zero
22:45 - dot on click and we could say
22:49 - um you know just
22:52 - console log the
22:55 - uh the value we could do that
22:59 - rps button zero
23:02 - right and then you can just do that
23:03 - value so this is like this would be a
23:05 - way of hard coding it but that's not
23:07 - what we want to do so when we click rock
23:08 - it does detect that we're clicking rock
23:10 - when i click paper it doesn't work when
23:12 - i click scissors nothing works right so
23:14 - let's go ahead and now do what the
23:17 - instructions say here so it says use a
23:19 - loop to
23:20 - go through them so i'm going to say rps
23:22 - buttons dot
23:23 - for each so that will allow me to loop
23:26 - and for each button
23:28 - okay rps button
23:32 - i'm going to do something so for each
23:35 - rps button we're going to add an event
23:37 - listener so let's go ahead and do that
23:39 - now
23:41 - for each button
23:43 - on click
23:44 - we're basically going to say hey every
23:46 - time i click you
23:48 - i want you to call the on click rps
23:51 - function
23:53 - okay
23:54 - and then step four is make sure to pass
23:55 - the currently selected rps button as an
23:57 - argument
23:59 - okay
24:00 - so or the currently selected
24:02 - so basically if i click this
24:05 - then i need to pass this to on click rps
24:08 - okay so let's go ahead and do that
24:11 - so i'm going to basically pass it the
24:12 - value of that so we're going to say rps
24:14 - button dot value so loop through the
24:17 - buttons
24:18 - go through them and then for each button
24:21 - give it this function
24:24 - okay
24:25 - and now if i hit so if i hit run here
24:28 - and i click nothing is going to happen
24:29 - right now
24:30 - but let's go to our on click function
24:32 - and here i'm just going to say
24:33 - console.log
24:36 - and we're just going to say console.log
24:37 - playerchoice
24:40 - so let's hit run
24:42 - let's hit
24:43 - and now you can see every time i click
24:45 - rock it prints it out
24:47 - when i click paper it prints it out when
24:49 - i click scissors it prints it out as
24:51 - well
24:54 - so now the rps button
24:56 - loop is doing what i wanted to do
24:59 - and i'm going to just remove all of
25:01 - these notes because i don't need them
25:02 - anymore
25:04 - because we just essentially did all of
25:06 - this that it was asking
25:09 - okay
25:10 - and
25:12 - yeah so play again button is done
25:14 - on click is detecting the click so that
25:17 - is good now what i can do with the on
25:19 - click
25:20 - is
25:21 - we have the computer choice already
25:23 - ready to go right and we already have
25:26 - the get result function so we can pretty
25:27 - much play rock paper scissors at least
25:29 - in the command line like we're we're
25:31 - pretty much done with rock paper
25:32 - scissors here
25:33 - so
25:34 - i'm going to basically say
25:36 - con let's get computer choice
25:38 - get comp choice
25:41 - or computer
25:44 - choice
25:45 - and we're going to call that computer
25:46 - choice function so let's try it
25:49 - get computer
25:51 - choice
25:52 - and let's just console log our computer
25:55 - choice
25:56 - okay
25:58 - so now we should have and uh what we'll
26:00 - do is put it as an object so then it'll
26:03 - tell us like what's the computer choice
26:05 - and what's the player choice let's run
26:06 - this and click and you can see player
26:09 - choice is rock and computer choice is
26:11 - scissors i'll click again
26:13 - this time player choice is raw computer
26:15 - choice is paper i'll click
26:18 - here
26:20 - i click this one right now so it says
26:21 - our choice was paper computer's choice
26:23 - was rock so our get computer choice
26:26 - function is working correctly that's
26:29 - really good
26:30 - okay
26:31 - well
26:32 - now since we have player choice and
26:34 - computer choice guess what we don't even
26:37 - need to see how this get result function
26:40 - works
26:40 - we just need to call it now baby and
26:42 - have it return the score that's it
26:45 - so
26:46 - let's go and do con score and we're
26:48 - going to just say get result
26:51 - and we're going to pass it the player
26:52 - choice
26:54 - but make sure you pass it in the right
26:55 - order and we're going to pass it the
26:56 - computer choice
26:59 - all right
27:00 - and then we're just going to console log
27:03 - the score
27:04 - here okay and uh make sure to just put
27:08 - it as an object so it just looks nice
27:10 - let's hit run boom look at that player
27:12 - choices rock computer choices paper and
27:14 - the score is negative one meaning we
27:16 - lost right because paper beats rock
27:20 - let's run it again we chose paper
27:22 - computer chose rock paper beats rock so
27:24 - we won this time let's choose scissors
27:27 - and we lost because we chose scissors
27:30 - and the computer chose rock and we lost
27:32 - let's try scissors again and we won
27:34 - because we chose scissors the computer
27:36 - chose paper and the score is positive
27:39 - one meaning that we won
27:42 - okay fantastic so guys the whole thing
27:46 - is working you guys this is really
27:48 - really exciting now the only things that
27:51 - are left are we need to keep track of
27:54 - the overall score of the game so every
27:57 - time the score updates we need to
27:59 - actually keep track of that score and
28:01 - increment it now what we could do is we
28:03 - could actually create a object to
28:06 - actually keep track of both of those
28:08 - scores and we could put that object all
28:09 - the way at the top why are we putting it
28:11 - all the way at the top
28:13 - so every single function can have access
28:16 - to it because it's like a database okay
28:18 - so
28:19 - it will have all our scores we'll say
28:21 - const
28:23 - uh scores okay and then this will have
28:27 - a computer score okay and it'll start
28:30 - off with zero and then it'll have player
28:32 - score and that will start off with zero
28:35 - let's give it a more descriptive name
28:36 - and let's call it total score
28:39 - okay
28:39 - so this will be the total and we will
28:42 - update it depending on you know whether
28:45 - the computer wins or the player wins
28:48 - right or the human ones
28:50 - um and where will we do this well what
28:53 - we can actually do is we can do this
28:55 - inside of our get result function
28:58 - okay
28:59 - so we can actually update this object
29:01 - right over here directly
29:04 - so inside of our
29:06 - get result function
29:08 - you could pass it
29:10 - the total score
29:12 - right and then we could actually do that
29:14 - update that so i'm going to give it i'm
29:16 - going to say total score
29:18 - let's pass it in
29:24 - i changed my mind let's not do it in
29:25 - there because this function is very pure
29:28 - let's not pollute it
29:30 - with other
29:31 - things and this happens very commonly
29:33 - you know as a developer you go back and
29:34 - forth a lot because it's normal to kind
29:36 - of go back and forth
29:38 - and then decide you know what i'm going
29:39 - to keep my leave my code clean because
29:41 - then otherwise this function's going to
29:42 - have too many dependencies and it's
29:43 - going to be kind of annoying so let's
29:44 - leave that as is
29:47 - we're going to update this total score
29:49 - after we get it right so let's say that
29:52 - i on click i get the computer choice i
29:56 - get the score
29:58 - well then i update the score based off
30:00 - of that
30:01 - okay
30:02 - so
30:03 - i'm gonna basically go and say
30:05 - get the total score
30:08 - and we're gonna grab the
30:11 - uh we're gonna grab the player
30:14 - score
30:16 - and we're gonna increment it by whatever
30:19 - score
30:20 - whatever whatever we get as the score
30:23 - okay so this way for now we'll just keep
30:25 - track of the player score you don't
30:27 - really need to keep track of the
30:28 - computer score
30:30 - i will leave that to you to implement as
30:33 - a
30:34 - challenge okay but for now
30:37 - we'll just keep track of the player
30:39 - score and increment the player score
30:42 - okay
30:43 - and then let's console log
30:45 - total score
30:47 - and now let's play this game
30:49 - so rock
30:51 - so player scores negative one let's play
30:53 - rock again
30:54 - so now this time we won right so last
30:56 - game we lost
30:57 - player score became negative one
31:00 - this game we won all right now all
31:02 - that's left to do is updating the dom to
31:05 - actually show you one or you lost or you
31:08 - drew
31:09 - so let's go to our show result function
31:11 - this is where we're going to be doing
31:13 - dom manipulation right
31:14 - is we have a couple of different
31:16 - scenarios we have a scenario where
31:19 - we could say we lost right so
31:24 - if
31:25 - score
31:27 - is
31:28 - negative one
31:32 - then do something
31:34 - else if
31:35 - score is
31:38 - zero
31:39 - then do something right
31:41 - else if
31:42 - score
31:44 - is one
31:45 - or we could just say else
31:48 - do something right so in this case
31:52 - if we
31:53 - want then what we want to say is
31:56 - you or sorry you lose
31:59 - okay in this situation we would want to
32:01 - say you drew or
32:05 - it's a tie or something right so let's
32:07 - put double quotes and now we'll say it's
32:09 - a tie
32:12 - and here we can say
32:16 - u
32:17 - 1.
32:19 - now we need to do something with these
32:21 - strings because right now we're not
32:22 - telling the computer to do anything
32:24 - right so we're going to create
32:27 - uh we're gonna get the divs so let's get
32:30 - the resultive
32:32 - and this is gonna be we're gonna get
32:34 - this by doing
32:37 - document dot get element by id
32:42 - and i believe the id is called result
32:44 - let's go take a look and we have result
32:46 - here
32:47 - okay we have result
32:49 - we have player hands and then we have
32:51 - player score
32:53 - okay hands and then player score
32:57 - okay let's go back
33:03 - hands div is going to be
33:05 - document.getelementbyid
33:07 - and we're going to do hands and i
33:10 - believe
33:11 - this div player score we're also going
33:13 - to need that so let's go const
33:17 - player score div
33:20 - document i get element
33:23 - id
33:25 - player score okay just like that in the
33:28 - in a case where we lose right what we
33:31 - actually want to do is we want to say
33:32 - result div dot inner
33:35 - text
33:36 - i want to set that to you lose
33:39 - and then we're going to do the same
33:40 - thing here and the same thing here
33:44 - okay
33:45 - so let's see
33:47 - what happens
33:49 - now let's give it a try so i'll run this
33:53 - we win
33:55 - and i'm not seeing anything yet so let's
33:57 - go and debug what the problem is so
34:00 - resultive let's make sure that this
34:02 - resultive is
34:03 - the actual div that we want so i'm going
34:05 - to console.log or
34:07 - actually we i don't think we're calling
34:09 - the function show result anywhere
34:13 - so let's go ahead and work on that now
34:16 - so remember
34:18 - on click rps what it should do is
34:19 - calculate who won and show it on screen
34:22 - right so
34:23 - line 74 calculates who won
34:26 - right then we update the leader the
34:28 - total score
34:31 - and then we want to show on the screen
34:34 - who won so let's go ahead and do that
34:36 - now
34:37 - i'll do it at the bottom here
34:39 - and we'll call our show result function
34:42 - and it has a couple of arguments and you
34:44 - can see it's telling us it has the
34:45 - argument of
34:50 - score
34:52 - what other arguments do we have let's go
34:54 - check
34:55 - let's go check player choice and
34:57 - computer choice
34:59 - so we're going to give it the player
35:00 - choice
35:02 - and then we're going to give it the
35:03 - computer choice
35:08 - there we go player choice
35:10 - computer choice
35:13 - okay
35:14 - that's um
35:16 - that's effectively it that's all what we
35:18 - need to do here so let's give it a try
35:20 - now run it
35:21 - boom and it says you lose and it that's
35:24 - is that true that we lost right we got a
35:26 - score of negative one let's try again
35:28 - you won
35:29 - and now look it says
35:31 - um the score is one so i win and then
35:34 - the total overall game score right the
35:36 - total score
35:38 - it says is zero player score is zero now
35:41 - because we won
35:42 - and now it's a tie so everything remains
35:44 - 0 0 0. let's run again i lost it goes
35:48 - back down to negative 1.
35:51 - all right now i won a bunch of times
35:57 - dang my score is just getting worse and
35:59 - worse
36:00 - okay all good so our score is
36:02 - working the way that we want it to work
36:04 - right
36:06 - so what we want to do next
36:09 - is at the end we also want to update the
36:13 - scores
36:15 - okay
36:16 - so let's go ahead and do that so let's
36:18 - update the score div now so or actually
36:21 - let's do hands first because that's
36:22 - really important
36:24 - so we're going to say hands div
36:28 - dot inner
36:30 - text
36:32 - right and it's whatever the choices are
36:34 - that the player choice and computer
36:36 - choice so i'm going to say
36:38 - player choice
36:41 - versus
36:44 - computer choice
36:47 - okay let's run this and let's see what
36:49 - happens rock versus scissors
36:51 - paper versus rock
36:53 - scissors versus rock
36:55 - okay so that's working but it's not
36:57 - really easy to tell which one is the
36:58 - human choice and which one is a bot
37:00 - choice what i'm going to do is i'm just
37:01 - going to put an emoji here and an emoji
37:03 - there
37:04 - so here i'm just going to make a person
37:07 - emoji
37:08 - and then for this i'm just gonna make a
37:12 - robot emoji
37:13 - let's run this
37:15 - now when i click you can see that it
37:17 - shows a robot emoji uh human emoji and a
37:20 - robot emoji
37:22 - right
37:23 - and then all we need to do is just make
37:25 - sure that the score
37:27 - shows up
37:29 - like
37:30 - here right score score should show up
37:33 - there
37:34 - so let's go ahead and do that now
37:36 - and i'm gonna
37:37 - [Music]
37:39 - access the player
37:41 - score div
37:44 - and grab its inner text
37:48 - right and then we're just gonna get the
37:51 - total score
37:56 - and we're gonna set that total score to
37:59 - [Music]
38:03 - yeah that's actually it i don't even
38:05 - think we have to do anything the total
38:07 - score should just be this and we should
38:09 - be good so let's run this now
38:12 - this
38:13 - so it's bringing the total score as an
38:15 - object because it is an object so we
38:16 - actually just want the player choice
38:19 - score so player score
38:22 - let's run it
38:24 - oops undefined so why is that undefined
38:27 - let's see player player score not player
38:30 - choice run
38:33 - boom negative one boom negative two
38:39 - right if you want to make this
38:41 - fancier or whatever you could put this
38:44 - side of template literals and you could
38:46 - say your score or something something
38:48 - along those lines if you wanted to write
38:50 - you could say your score
38:52 - say one two zero one
38:56 - whatever and there you go
38:58 - now let's open this up in a
39:00 - full tab
39:03 - right and let's take a look at this
39:04 - let's play this game click
39:08 - rock versus rocket to tie click again
39:10 - rock versus scissors you won
39:13 - rock versus rock it's a tie
39:15 - i picked rock computer picked paper i
39:18 - lost right and my score is being updated
39:20 - automatically let's just play a ton of
39:22 - games and let's see what happens
39:24 - all right we're getting on a
39:26 - oh we lost a lot of games there
39:30 - right so there we go so the computer is
39:32 - doing a good job and uh but but we beat
39:35 - the computer right that's what matters
39:37 - we wanted the end
39:40 - so let's go back and now if i hit the
39:43 - red nothing happens so we just have to
39:45 - make the red button work
39:47 - so first
39:49 - let's do the following so we're going to
39:51 - say
39:53 - const
39:55 - endgame button
39:57 - and we're gonna say
39:58 - document.getelementsbyd
40:02 - and i think it's end game button if i'm
40:04 - not mistaken so let's go back
40:06 - let's look and i have a button i gave it
40:09 - id of endgame button so let's go back
40:11 - here and we're going to say endgame
40:12 - button just like this
40:15 - all right and we just need to
40:17 - connect it so we gotta go
40:20 - [Music]
40:22 - endgame button
40:24 - dot on click
40:26 - and on click we just want to run our
40:29 - endgame function that's it
40:32 - okay and in our endgame function what
40:34 - needs to happen is it should just clear
40:36 - all the score so in our endgame function
40:39 - we're going to grab our total score
40:42 - okay let's actually pass a total score
40:45 - total score right here
40:48 - that's just to signify that we're
40:49 - passing it the total score okay so we're
40:51 - signifying that we're passing this
40:52 - that's why we're making a dependency
40:55 - and we're getting the total score
40:57 - because the global variable that the
40:59 - whole our entire app has access to this
41:01 - total score
41:03 - okay
41:04 - so this function is going to take total
41:05 - score
41:07 - and it's going to set the total score of
41:10 - the player score
41:15 - to zero
41:17 - and then we're also going to set the
41:19 - computer score to zero here
41:24 - and we're also going to
41:26 - just erase everything that we see on the
41:28 - dom
41:29 - okay so let's go ahead and grab our
41:33 - all of our divs i'm going to copy them
41:34 - from here
41:36 - i'm going to paste these divs here
41:39 - and then
41:41 - we're going to grab their inner text and
41:43 - set it to
41:47 - empty
41:48 - right and then we're gonna do that for
41:51 - both of the other divs so paste paste
41:54 - double click copy double click paste
41:56 - double click copy double click paste
41:59 - and that should make everything empty so
42:01 - i think this should be good for the
42:03 - endgame function so let's go ahead and
42:05 - try this run it
42:07 - play play play play hit the red button
42:09 - and everything clears up run run run run
42:11 - hit end
42:14 - and you can see that everything is
42:16 - working
42:19 - okay
42:21 - perfect so there you go this is your
42:24 - entire app right let's go and try it
42:27 - the entire app is working hit the red
42:29 - button it stops starts again
42:33 - okay so the challenge for you is see if
42:35 - you could add
42:36 - player score
42:38 - player score and then computer score
42:41 - and see if you can see if both of those
42:43 - get updated as you play the game
42:46 - right that would probably be the best
42:48 - version of this app if you can make that
42:50 - work that'd be really nice
42:54 - and with that said we're essentially
42:55 - done with this so all you got to do now
42:57 - is try copying all of the code here so
43:00 - command a command c or ctrl a and ctrl c
43:04 - go back to the exercises
43:06 - that you know the
43:08 - where you were working on this
43:09 - javascript course rebel so go back to
43:11 - that
43:12 - and then go to this exercise
43:14 - folder go to script.js right
43:17 - and see what happens if you paste your
43:20 - entire code over this okay so if you
43:22 - paste your code over this
43:24 - and you hit run
43:26 - and you go to
43:28 - rock paper scissors project exercises
43:31 - your game should run
43:36 - okay just like that so i'm going to
43:37 - command z and undo all of this
43:42 - all right
43:43 - there we go
43:46 - so you should be able to paste it in
43:47 - here and i recommend that you do so then
43:49 - you have this
43:51 - fully working
43:53 - okay and then if you want to delete all
43:55 - the comments you can from this to kind
43:57 - of make it make it a lot cleaner
44:00 - but
44:01 - at this point right the whole thing is
44:04 - you you've done pretty much the whole
44:05 - thing i'm going to remove all these
44:06 - console logs
44:08 - from here just so you could see this in
44:10 - an easy
44:11 - easy to see way
44:14 - like this on click function you'll
44:16 - realize is the main function right it's
44:19 - the entire
44:20 - kind of game logic that happens
44:23 - that happens here
44:26 - and
44:28 - we get the computer choice
44:31 - we already have the player choice
44:34 - we compute the result based on player
44:36 - choice and computer choice
44:38 - we update the scoreboard
44:42 - and then we show that score on the
44:44 - screen
44:47 - so this is like the main logic of the
44:49 - game right this is where your main main
44:51 - main logic is happening
44:54 - so i hope that this totally made sense
44:56 - you understood every single step by step
44:59 - parts of this
45:01 - and this was a lot of fun for me to show
45:03 - you i hope it was fun for you to
45:05 - actually learn this and you enjoyed it
45:08 - but that said i love your beautiful face
45:10 - and i'll see you
45:11 - shortly
45:13 - that was a lot i hope you enjoyed
45:14 - watching that video and learning more
45:18 - about javascript smash the like button
45:20 - if you haven't already make sure to
45:21 - subscribe to the channel because this is
45:23 - a channel where we help you become an
45:25 - incredible developer i love your
45:27 - beautiful face and as always i'll see
45:29 - you in the next video