00:00 - if you're a programmer there's a high
00:01 - chance you came across a article about
00:04 - programming and you read it on
00:06 - medium.com medium is a very popular
00:08 - platform for all writers to blog and
00:11 - lots of programmers are using it to
00:13 - actually write and blog on there now if
00:15 - you're using medium or you enjoy the
00:17 - experience of reading it and using it
00:20 - well guess what today we're actually
00:21 - going to build it with javascript and
00:24 - next js from scratch we're going to add
00:27 - a database with firebase so then you can
00:29 - actually store your articles and i know
00:31 - that this has been done a couple of
00:33 - times and people have made a video on
00:35 - medium but this is gonna be different
00:37 - because we're gonna be doing it together
00:38 - and we're gonna be breaking it down step
00:41 - by step until you have your very own
00:43 - medium app completed and deployed to the
00:46 - internet from scratch and i believe that
00:48 - this will have the best possible
00:49 - explanation so if you're excited smash
00:52 - that like button hit the subscribe
00:53 - button if you want to become the best
00:55 - developer in the world and hey if you
00:58 - don't know me i'm rafikaze i'm the ceo
01:00 - and founder of clever programmer i've
01:01 - been coding for nearly a decade and i've
01:04 - helped millions of people learn how to
01:06 - code now with all of that said here's
01:08 - how this is gonna work i have created a
01:09 - starter template for you to get started
01:12 - and that'll give you all the assets and
01:13 - the images and the logos that you'll
01:15 - need access to so you don't have to
01:16 - worry about anything and you'll be able
01:17 - to code on an online ide with me and
01:20 - alongside me so in order to do that just
01:23 - go to
01:25 - dot join.replay.com slash cp dash medium
01:28 - that's the url is going to be very
01:29 - important so click that link in the
01:31 - description below and this is completely
01:33 - free it doesn't cost you anything click
01:34 - that link in the description below and
01:36 - just hit fork disrupt once you fork it
01:38 - you can actually go ahead and then make
01:40 - your own edits and write your own code
01:43 - if you don't fork it you won't be able
01:44 - to actually follow along with me so make
01:46 - sure you go ahead and do that right now
01:48 - and then we'll actually just code this
01:49 - together all right here's the demo of
01:52 - the medium build that we're gonna be
01:54 - doing with next js so for example i can
01:58 - come into my app and i can hit sign in
02:01 - right over here and once i hit sign in
02:04 - watch what happens so i'm gonna hit it
02:06 - right now
02:07 - and boom look at that that just popped
02:09 - up and plus look at me i'm in the screen
02:11 - that's so cool magic of green screen i'm
02:14 - gonna choose quasi at
02:15 - cleverprogrammer.com
02:17 - it logs me in and now it changes this
02:19 - over here and it says see that up there
02:22 - somewhere up there boom so i can
02:25 - actually even write now i can choose
02:26 - which article i want to go ahead and
02:28 - read all of these articles are actually
02:30 - stored in your firebase so this is an
02:33 - actual database they're not just stored
02:36 - nowhere so i click into it and you can
02:39 - actually read your article and we're
02:41 - pulling this straight from your database
02:43 - so if i go over here if i hide myself
02:46 - here you can see that on the right hand
02:48 - side we have the little ads popping up
02:51 - which is really nice
02:52 - and let's go back
02:54 - to a page and then let's go to this page
02:57 - right boom i have my article popping up
03:00 - and there are a couple of other cool
03:02 - things happening too if you actually pay
03:03 - attention i have my article here i got
03:06 - my headline i have the banner photo that
03:10 - shows up
03:11 - and then in medium at the top where i'll
03:13 - say things like hey you have a five
03:15 - minute read let's do this we have a nice
03:18 - sidebar nice fancy sidebar on the left
03:21 - hand side right over here we got a
03:24 - search bar
03:26 - on the right hand side right over here
03:28 - and there you have it okay and the other
03:31 - thing we can do is of course we can
03:33 - actually write articles in here all
03:36 - right so i'm gonna click now you can
03:38 - actually go ahead and put a title we'll
03:40 - say how to make money coding
03:43 - learn how to code and make money in 2022
03:48 - for banner image i actually like this
03:51 - cali haldon image right over here so i'm
03:54 - going to go ahead right click it and
03:56 - copy image address
03:57 - copy image address right there boom
04:00 - let's copy it and let's come back
04:03 - right here and paste this glory we'll
04:05 - say coding estimated time length let's
04:07 - just a seven minute read and then we'll
04:09 - just put some dummy stuff in here it's
04:10 - going to say this is an article
04:13 - worth reading all right let's hit submit
04:16 - and i'm gonna go ahead and refresh this
04:19 - page and now watch what happens as i
04:21 - scroll down i actually see my article
04:24 - that says how to make money coding it's
04:26 - showing up at the bottom right here i
04:28 - can click into it and then it actually
04:30 - redirects me to this article page i can
04:33 - read the article
04:34 - and there you have it so that is
04:38 - what you're going to be building i hope
04:40 - that you're excited with that said
04:42 - we're now going to get ahead and get
04:44 - started coding
04:46 - now if you want to build this with me
04:48 - make sure to go ahead to this url
04:51 - and click fork rupple and once again
04:54 - this url that i'm talking about right is
04:58 - join.replay.com
05:00 - slash cp
05:02 - dash medium once you go there
05:05 - you can just simply do fork grapple and
05:08 - the point and the benefit of this is all
05:11 - the assets logos and everything will
05:13 - just be handed to you plus you can
05:15 - actually just code a nexus app on this
05:19 - online rupple and it will also
05:22 - deploy it for you so you can just code
05:23 - along with me right here without even
05:26 - needing to open up vs code or whatever
05:29 - text editor or coding editor that you
05:31 - use so simply go ahead and click fork
05:33 - this it'll ask you to create an account
05:36 - so go ahead and choose your own account
05:39 - whichever account you have and then once
05:41 - you're done forking it will bring you to
05:43 - a page that looks like this and this
05:46 - page should only have three things
05:49 - index.js file which is completely empty
05:51 - there's no line of code in here this is
05:54 - a node.js repl okay so if you write node
05:57 - code it will work in here and you should
05:59 - have an assets folder along with the
06:01 - static folder now let's go ahead and
06:03 - let's take a look and what's in asset
06:05 - and static here are the things these are
06:07 - the fonts we're going to need access to
06:10 - so they're right here for your
06:12 - convenience you don't have to go
06:13 - anywhere and download anything
06:14 - and then there are all this
06:17 - images for your convenience okay so
06:21 - make sure to click the link below
06:23 - go to join.replay.com
06:26 - cp medium it's completely free and then
06:30 - go ahead and fork this and then you'll
06:31 - have access to all of this awesome
06:34 - so now that we have this we can actually
06:36 - just get started from scratch so we're
06:40 - gonna need to create a next.js app and
06:44 - then we're gonna actually need to
06:45 - install tailwind as well so let's get
06:47 - started with creating a next.js app make
06:49 - sure to go ahead and choose shell so
06:52 - let's go to the shell all right and now
06:54 - that we're here we're going to say yarn
06:56 - create
06:58 - next app and hit enter and this will
07:01 - install next the next app for you now
07:03 - i'll say what's your project name my
07:06 - project name is going to be medium
07:08 - cp all right and then we're just going
07:11 - to hit enter just cool and what's cool
07:13 - about replit is you can pull your code
07:15 - very easily out of here you can also
07:17 - sync your code github so you will have
07:19 - version control capabilities and all you
07:22 - have to do for that is just go on this
07:23 - left-hand side and so you can push your
07:25 - code go to your other editor pull your
07:28 - code and get access to everything okay i
07:30 - just like it because everything is just
07:32 - up and running here anytime even if you
07:34 - want to come back you can get access to
07:36 - everything that's here all right all
07:38 - right i'm going to bring myself up here
07:40 - just so
07:41 - if there's anything important going on
07:42 - at the bottom i don't want you to miss
07:44 - out but all that's happening right now
07:46 - is we're just going and finishing our
07:48 - install all right so we're now going to
07:50 - do is just move your assets folder into
07:52 - your medium cp and move your static
07:54 - folder into your medium cp and have all
07:58 - your folders in one place okay and then
08:01 - index.js we won't really be needing it
08:04 - for too long so what we can just do with
08:07 - our index
08:09 - js here is we can actually pretty safely
08:12 - just get rid of it so just click here
08:14 - delete boom so now you should just have
08:17 - a pretty clean project called medium cp
08:20 - and this should have
08:22 - these this file structure right over
08:24 - here
08:25 - now let's go ahead and run this app and
08:28 - let's see if
08:30 - it's live so all we have to do in our
08:32 - shell make sure you're in the right
08:34 - folder with medium cp and i'm gonna just
08:36 - go ahead and do yarn dev now once i do
08:39 - that it should actually whip up a server
08:41 - and it should host it on port 3000 and
08:45 - i'm going to go ahead and drag this down
08:47 - so i can see it
08:49 - and there you go okay i already have
08:52 - this app it's up and running and it's
08:54 - showing up now what's cool about replit
08:58 - is that everything that you make is
09:00 - already deployed so if i click this open
09:03 - in a new tab right this open in a new
09:06 - tab right over here it'll just open in a
09:09 - new tab and this app is a deployed
09:12 - version which is so freaking cool like
09:15 - it's live you could show it to anybody
09:16 - and so the entire time you're working on
09:18 - your app it's live
09:20 - the entire time all right now what we
09:23 - want to do with this app is we want to
09:26 - go ahead and make sure that we have
09:28 - tailwind working so what we're going to
09:31 - do is first things first we're going to
09:32 - remove everything inside of this return
09:35 - statement and i'm going to just replace
09:37 - it with an h1 and we'll say woohoo
09:41 - all right there we go so that's all it
09:43 - should say and i'm going to remove
09:45 - everything at the top so basically my
09:47 - index digest should be very simple one
09:50 - function and then it should just say
09:51 - woohoo that's it okay and that's what
09:53 - we're seeing on the screen right there
09:55 - now
09:56 - we want to install tailwind so the right
09:58 - way to do it is
10:00 - go to the tailwind guide install
10:02 - tailwind css with nexus you could just
10:04 - google this and it'll bring you to this
10:05 - exact page step one is creating your
10:08 - project which we've already done so we
10:10 - can skip that step let's go to step two
10:13 - we need to actually install tailwind so
10:16 - let's copy this line right over here
10:17 - because we need taylor and css post css
10:20 - and then auto prefixer okay those are
10:22 - the three things that we actually need
10:24 - so let's go back let's go into our shell
10:28 - and i'm gonna go ahead and paste this
10:31 - okay cool and it looks like that we were
10:34 - successfully able to install that so
10:36 - this is now installed now what we need
10:38 - to do is we need to be we need to
10:41 - generate a tailwind config.js js file
10:44 - and a postcss config.js file how we're
10:47 - going to do that is we're going to copy
10:48 - this line right here and come right here
10:51 - and paste it okay let's hit enter and
10:53 - now we should have two files generated
10:55 - so we have post cs and tailwind config
10:59 - both of these are created okay let's go
11:01 - back
11:02 - now we're going to need to configure our
11:03 - template paths so we tell it where to
11:06 - look for
11:07 - tailwind code and we tell it hey look
11:11 - for tailwind code inside of pages and
11:13 - inside of the components folder and it
11:16 - and the extension should be anything
11:18 - that ends with a js extension or a
11:20 - typescript extension or a x
11:23 - so we can copy this content portion
11:26 - go back into our tailwind config and
11:29 - just replace this content portion right
11:31 - over here that's effectively
11:33 - pretty much it now the next thing that
11:36 - we need to do step four is we need to
11:38 - copy
11:39 - all of these right here and we actually
11:41 - need to add it to our globals.css
11:44 - so let's go into our
11:47 - styles right over here
11:49 - go into our styles let's go into our
11:50 - globals and let's add it all the way to
11:53 - the top just like that we're gonna
11:55 - scroll down you can skip step five and
11:57 - let's go to step six we're going to copy
12:00 - this line right over here and let's go
12:03 - back into our index.js and let's replace
12:07 - our h1 with that line okay
12:10 - and this should test and see if our
12:13 - tailwind css is actually running because
12:15 - this is actual tailwind css so what i'm
12:17 - going to go ahead and do here is make
12:19 - sure to do yarn dev so we act our server
12:21 - starts running let's check and boom look
12:24 - at that
12:25 - we have our next app up and running and
12:29 - we have our tailwind css up and running
12:32 - this is perfect if you've made it to
12:34 - this point now we're gonna go ahead and
12:36 - build on top of this all right now we're
12:39 - going to go ahead and work on the header
12:42 - so what i want to do is i want to just
12:44 - remove
12:45 - i guess i could actually just keep this
12:47 - for a second here nah i changed my mind
12:49 - let's remove it we don't need this so
12:51 - i'm going to go ahead and remove this
12:53 - and let's make a div okay and the first
12:57 - div i'm going to have i'm going to give
12:59 - it a class name
13:00 - of styles.wrapper and don't worry right
13:03 - now if you're like hey where's
13:04 - styles.wrapper we'll make this
13:06 - afterwards for now we're just making a
13:08 - div here okay styles is not defined so
13:11 - let's go ahead and just define style so
13:12 - i'm just going to go ahead and say con
13:14 - styles and we'll make it an empty object
13:17 - okay wrapper does not wrapper property
13:19 - does not exist yet so
13:22 - this is going to be
13:23 - a div now inside of this div the wrapper
13:26 - div what i want to do is i want to have
13:28 - a content div so i'm going to go ahead
13:30 - and copy this i'm going to paste this
13:32 - i'm going gonna replace this with
13:34 - content and anytime you hear that sound
13:37 - my apologies just ignore that sound
13:39 - that's just to keep me focused on making
13:41 - content for your beautiful face and
13:44 - let's end this div all right
13:46 - and then inside of this content div
13:49 - right here we wanna have a logo
13:52 - container okay so i'm gonna go ahead and
13:54 - do div
13:55 - and we're gonna say class name and we're
13:58 - gonna do
13:59 - logo container okay there we go just so
14:02 - you can follow along what we're doing
14:04 - right now is we're just building this
14:07 - header right over here yeah so this
14:10 - header has if we go completely around
14:13 - all the way right this is our wrapper
14:16 - now within the wrapper we're going to
14:18 - have additional stuff so within the
14:19 - wrapper we have our content is going to
14:21 - be another box right here okay and then
14:24 - within our content we're going to have
14:26 - our logo container and our logo
14:28 - container might be this guy right here
14:29 - that just contains the logo okay and
14:32 - then we might have
14:33 - like where this stuff is going to go
14:35 - okay it's like a navigation menu so this
14:38 - is going to be we're going to call this
14:39 - our banner nav and then this one over
14:42 - here
14:42 - called our logo container okay so this
14:45 - is like the underlying html structure
14:47 - that we're trying to build cool so let's
14:49 - go back now to what we're doing and one
14:53 - thing we're going to do is we're just
14:54 - going to make sure real quick that what
14:57 - we're building right now is actually
14:59 - showing up in our
15:01 - home page okay we just want this
15:03 - component that we're building right now
15:05 - this thing we want to actually separate
15:06 - it out as a component and
15:09 - build it separately outside of this so
15:13 - we're going to go ahead and
15:15 - just completely cut this right now okay
15:17 - and what i want to do is i'm going to
15:19 - make a new folder at the
15:22 - app level and we're going to call this
15:24 - folder components just like this all
15:26 - right so you have components now inside
15:28 - of components i want to add a file and i
15:30 - want to call it header
15:33 - header.js okay now in my header.js file
15:37 - i want to create my component here and i
15:40 - want to call it header so i'm going to
15:41 - say const header just like this okay
15:45 - let's keep it empty for now and at the
15:47 - end i want us to export default header
15:50 - just like that okay cool so because this
15:53 - is the component that we're exporting
15:54 - right now within this component i want
15:58 - to go ahead and do return and then paste
16:00 - all the stuff that we had written
16:02 - earlier okay so now header is a separate
16:05 - component now inside of this logo
16:08 - container for now i'm just going to
16:10 - write i'm going to say h1 and we're just
16:13 - going to say hello all i want to do is
16:15 - see that this header component is
16:17 - actually showing up on our screen so
16:20 - let's go inside of our pages and we're
16:22 - going to import this and we're going to
16:24 - say let's go all the way at the top and
16:27 - here basically what i'm going to do is
16:28 - import header from component slash
16:32 - header okay and now
16:34 - let's simply use our header component
16:37 - okay and let's just see what happens and
16:39 - if we get any errors and i know our
16:41 - styles files gonna complain so let's go
16:44 - back to components let's go to header
16:47 - and let's just add the styles above
16:50 - right there so that way we don't really
16:52 - get into any errors it already knows
16:54 - that styles is an object okay so it
16:57 - seems like our server died at the bottom
16:59 - so what we want to do is we just want to
17:02 - run our server again so i'm going to go
17:05 - ahead and just say
17:07 - yarndev okay if that's not working make
17:10 - sure to just go cd into medium
17:13 - cp and then do yarndev okay and now our
17:17 - server should be up and running perfect
17:20 - okay so you can actually see that hello
17:22 - is showing up that means that we've
17:24 - connected our components to our pages
17:26 - folder and we're able to actually create
17:28 - a component import it and actually see
17:31 - what we're doing okay now what i don't
17:34 - want is i don't want to just say hello
17:35 - here i actually want the logo so what
17:38 - i'm going to do is a couple of things
17:40 - first
17:41 - let's import image from next image so
17:44 - i'm going to go all the way at the top
17:45 - here and we're going to say import image
17:48 - from and i'm going to say next image
17:50 - just like this okay and we'll get access
17:53 - to that image down here i'm going to go
17:56 - ahead and say image and we can make this
17:59 - a self-closing tag so i can just close
18:01 - it like this and then our image is going
18:03 - to have a few properties okay so image
18:06 - is going to have a class name and we're
18:08 - going to give it a style all these
18:09 - styles don't worry we're going to give
18:11 - these styles later for now we're going
18:12 - to leave it empty and we're going to say
18:14 - source logo okay and we're going to get
18:18 - we're going to need to import our logo
18:19 - as well so in our static we have this
18:21 - logo right here all right this logo
18:24 - boom so we're going to get access to
18:26 - this logo this is a transparent logo
18:28 - which is really nice let's go back to
18:31 - pages let's go back to components
18:33 - my apologies and inside of our
18:35 - components
18:36 - we're going to say import logo
18:39 - from and we'll give it a path of where
18:42 - to import it from
18:43 - logo.png just like that all right now
18:46 - it'll actually be able to import it and
18:49 - you can see that the medium logo is now
18:51 - showing up now let's go ahead and give
18:53 - it a certain size so it's not completely
18:57 - going crazy all right so i'm going to go
18:59 - ahead and say height and we'll give it a
19:01 - height of 40. we'll give it a width of
19:04 - 200. okay so now it's a nice
19:08 - smaller logo
19:10 - and if we open this app up completely
19:13 - you can see that it's showing up right
19:14 - there which is perfectly fine that's
19:17 - kind of what we're looking for so the
19:19 - logo container part is done now the next
19:21 - part that we actually want to have is
19:23 - our banner nav part that we talked about
19:26 - earlier our banner nav part will have
19:29 - all of these things right there my
19:31 - apologies as my girlfriend calling my
19:33 - dog has this
19:35 - thing which
19:36 - they're worried it's like a cancerous
19:38 - tumor or whatever so they're working on
19:40 - like they're doing a biopsy so we were
19:43 - just handling that i don't know why you
19:45 - need to know that but there you go now
19:47 - you know okay breaking the fourth welder
19:49 - hi you hi nice to see you there okay
19:51 - let's get back to it so this is going to
19:54 - be our banner nav yeah so let's go ahead
19:57 - and create that now so right underneath
20:00 - this image make sure that that
20:02 - logo container div is closed we're going
20:04 - to go underneath that and i'm going to
20:07 - create a new div and then the class name
20:09 - here will be styles.banner
20:12 - nav okay and we're going to make it a
20:16 - div and i'm going to say our story
20:20 - so i'm going to say our story and then
20:22 - the next thing we're going to have it
20:24 - say is membership because if you go to
20:26 - this one right here right it says our
20:28 - story then it says membership then it's
20:30 - a sign in and then it says get started
20:32 - so we're going to add all of that
20:34 - membership
20:35 - and let's go and we're gonna say
20:37 - sign in and then we're gonna go ahead
20:40 - and say
20:41 - get started all right so now we have all
20:45 - of the things that we see right there
20:47 - now of course we haven't styled any of
20:49 - this which is why it looks
20:51 - funky and doesn't look the way that we
20:53 - want it to look but this is this is
20:55 - really it for now this is essentially
20:57 - our nav bar let's go to this version
21:00 - right here now of course we need to like
21:02 - use flexbox and do all of those things
21:04 - so then it
21:06 - actually puts it as you know a proper
21:09 - nav bar so let's go ahead and start
21:12 - using some styles now all right so in
21:14 - our styles let's
21:17 - start off with styling our
21:20 - wrapper okay or actually let's start off
21:22 - with the logo container first okay let's
21:24 - start off with our logo container and
21:26 - we're gonna go ahead and say it's a flex
21:29 - item center and we're gonna go flex
21:31 - start on this okay let's create another
21:33 - one and this one is going to be our
21:36 - wrapper
21:37 - so let's style our entire wrapper let's
21:41 - put commas here okay so go ahead and
21:43 - wrap her
21:44 - and for my wrapper i'm going to justify
21:47 - it to be at the center it's also going
21:50 - to be a flex
21:52 - it's going to be flexbox enabled okay so
21:55 - if you take a look at it now if i
21:57 - refresh
21:58 - you can see that it's centered right
22:00 - here we're going to give it a gap of 10
22:03 - and then what we want to do is a padding
22:06 - of 5 and we can give it a background
22:09 - color and you can also give specific
22:12 - colors in tailwind so if you want to
22:13 - give like specific colors you can do
22:16 - this trick so you can do dash bracket
22:19 - and give a specific color so now it got
22:22 - that like orange so starting to look
22:24 - more like what we want so our wrapper is
22:27 - styled now we need to style our content
22:30 - okay
22:31 - now for our content let's go ahead and
22:33 - make it oops let's put a comma right
22:35 - here so it doesn't break let's go max on
22:38 - the width here and then i'm going to say
22:41 - flex 1 we'll make it flex enabled so
22:44 - it's starting to look much better now
22:46 - much better and now it's trying to look
22:48 - like what we want it to look like we're
22:50 - going to justify in between so there's a
22:52 - lot of space between the logo and that
22:56 - text so there you go you can see
22:58 - logo and the text has a plenty of space
23:01 - down so justify between and then just
23:03 - give a gap of 10. so you can see boom
23:06 - right there boom our logo is right there
23:09 - okay let's go back we have our logo
23:11 - container now we need just a few more
23:14 - things so we need to actually style our
23:16 - logo we're going to make it so when you
23:18 - hover over it it's going to be a cursor
23:20 - pointer and then we want to make it
23:23 - object contained
23:24 - that'll make sure that the quality of
23:26 - that image is
23:27 - sharp so when you do object contain
23:30 - regardless of what you do with the size
23:32 - of the logo it will keep it pixel
23:34 - perfect so before it was looking a
23:36 - little squished now it looks pixel
23:38 - perfect so if we look at the finished
23:40 - app and we look at our app we go back to
23:42 - the finished app starting to look
23:44 - similar just that this is not in a row
23:47 - and so to enable things and put them in
23:49 - a row we usually have to use something
23:51 - called flex
23:52 - so let's go ahead and let's do that so
23:54 - i'm going to say banner nav let's enable
23:57 - flex and right when we enable flex
23:59 - you'll notice it's trying to look much
24:01 - better now and starts looking these nav
24:04 - bars actually start to look quite
24:06 - quite similar now okay so flex
24:10 - and then we're going to make sure and
24:12 - say cursor pointers when you hover over
24:14 - any of them it becomes a cursor we're
24:16 - going to centralize the items and then
24:18 - we're gonna give a space between each so
24:21 - there we go so we have a space of five
24:24 - right there and if i hover over you see
24:26 - it becomes a pointer like it's a button
24:28 - that you could click great so our banner
24:31 - nav has made significant pro progress
24:35 - and now what we need is an accented
24:37 - button so accented button okay let's go
24:40 - ahead and go background black and let's
24:43 - add this button on get started so get
24:45 - started we'll have class name and we're
24:48 - going to say styles dot accented button
24:51 - just like that okay so just because i
24:54 - added just a black
24:56 - background
24:57 - i mean it's going to make it kind of
24:58 - invisible to see for now so what we need
25:01 - to do is actually make the text white so
25:03 - we can see
25:04 - the text and now let's add some padding
25:08 - vertically on the y-axis so there's some
25:11 - more space
25:12 - and we will add some
25:14 - padding on the x-axis so there's like
25:17 - more space within the button okay and
25:20 - last but not least we're going to go
25:22 - ahead and round it so now if i look at
25:24 - it
25:25 - it looks nice and rounded yeah so this
25:27 - looks very very nice now our nav bar
25:31 - our headers
25:32 - are looking pretty much exactly the same
25:35 - right our headers look identical the
25:38 - next thing that we will work on is we'll
25:40 - work on adding the banner
25:44 - and these divider like lines that you
25:46 - can see these black divider lines
25:49 - so we'll go ahead and add that next
25:53 - all right now that we added the header
25:55 - the next thing we want to do is we want
25:57 - to go ahead and add the banner for this
26:00 - app so if i go here i'm looking at the
26:02 - banner the banner looks
26:05 - very clean it looks very nice
26:08 - and in my mind it's a separate component
26:10 - because when i see this
26:12 - i see
26:13 - banner.js
26:15 - so it's going to be its own component so
26:17 - let's go ahead to our app and create a
26:20 - new file and we'll call it banner.js
26:23 - okay
26:24 - we're gonna const banner and i'll just
26:27 - say return and we're gonna say h1 banner
26:30 - for now and we'll go ahead and export
26:33 - default banner and let's go back to our
26:36 - other file our index.js file and let's
26:41 - go ahead and import let's remove this
26:44 - line styles we don't need it let's
26:46 - import
26:47 - not
26:48 - header
26:49 - but rather we're going to go ahead and
26:51 - import
26:52 - banner okay and make sure that you say
26:55 - banner right there okay so now what we
26:58 - can actually do
27:00 - is go ahead and paste this but just
27:02 - replace that with banner so now we have
27:04 - two components here we have a header
27:07 - component and we have a banner component
27:09 - now this error that we're getting over
27:11 - here this error is basically saying hey
27:14 - we need something that wraps up we need
27:16 - a parent these are just children these
27:19 - are just little children right they're
27:21 - running around on their own butt naked
27:23 - confused lost running out on the street
27:26 - so we need a parent and we can have a
27:28 - parent div or you could have a parent
27:30 - div that's actually even empty and
27:33 - if you click this button right over here
27:35 - it will actually format all the code for
27:38 - you so let's go ahead boom so now we can
27:41 - see that our banner is
27:44 - showing up okay you can go back here and
27:46 - take a look at it as well
27:48 - now let's go ahead and actually code up
27:50 - our banner or you can just command click
27:52 - it and it'll actually take you to that
27:54 - file that's another cool feature so
27:56 - let's go ahead and remove we don't need
27:59 - this h actually we can leave this to be
28:01 - h1 and i'm going to change this with
28:04 - stay
28:05 - curious there we go all right so now we
28:08 - have a h1 that says stay curious right
28:11 - there now we need to style this so with
28:15 - tailwind what's nice is you could also
28:16 - just inline style it if it's which looks
28:20 - very which is very easy to do and we can
28:23 - actually just go ahead and give it
28:25 - max width so it could take up a lot of
28:27 - space and then i'm going to go ahead and
28:30 - give it a text size of 6 rem so it's
28:33 - going to be pretty big text and then for
28:35 - font i want to give it medium
28:38 - serif there we go
28:40 - medium
28:41 - serif i did not spell serif correctly
28:44 - okay and if at any point we don't have
28:47 - any of these fonts we can very easily go
28:50 - ahead and add them now in
28:52 - tailwind css so a couple of things right
28:55 - we already have assets and assets we
28:58 - already have
28:59 - these fonts right over here we have
29:01 - charter italic and we have charter
29:03 - regular.tff
29:05 - so i'm going to do a little trick and
29:07 - what i want to do is inside of this
29:09 - theme i want to add another property and
29:13 - so we have extend as one property right
29:15 - we're going to add another one and i'm
29:16 - going to call this
29:18 - font family and within font family i'm
29:21 - going to create new property and we're
29:22 - going to call it sans okay so we have a
29:26 - bunch of these properties now i'm not
29:29 - gonna write every single one of them by
29:31 - hand because that'll take too much time
29:33 - so i'll just
29:34 - copy paste these three properties that
29:37 - will also give you access to as well
29:39 - let's put a comma right there so it
29:40 - stops erroring paste boom so all i've
29:43 - done is i've pasted sans property serif
29:46 - property and mono property so those are
29:48 - the three things
29:50 - i added okay and sans has its own things
29:53 - serif has his own fonts and mono has its
29:56 - own fonts now if you are like hey i
29:59 - don't want to sit down and pause the
30:00 - video and write this that's okay in the
30:02 - description below
30:04 - we will go ahead and link the
30:06 - in the youtube video right we'll link
30:08 - the final project as a reply so you can
30:11 - go ahead the final solution of the
30:13 - project and you can also just fork that
30:15 - and then you're going to get access to
30:17 - this completed final version and you can
30:19 - copy this file and paste it over your
30:22 - tailwind.config.js
30:24 - or you can just manually write these 20
30:26 - 30 lines it's not too bad honestly all
30:29 - right and then the next things that we
30:31 - just need are we need let's go right
30:34 - underneath here and i'm going to say
30:36 - medium
30:37 - serif
30:38 - italic and then we're going to say
30:40 - charter italic and then we're going to
30:43 - go medium serif
30:45 - and we'll just go
30:46 - charter okay just like that
30:49 - so that's really all that we need here
30:52 - and now our server should start running
30:54 - our server is having some errors let's
30:56 - take a look at what's going on so one
30:58 - thing we can always try whenever our
31:00 - server is giving errors like these oh
31:02 - did we actually wrap from font family
31:05 - yes yeah we did we closed it so whenever
31:08 - errors like this just close your server
31:10 - so just hit ctrl c all right and then
31:13 - what you can do whoops
31:15 - is just hit up and then you can just do
31:18 - yarn dev okay let me hit ctrl c and i'm
31:20 - just going to do yarn dev so just
31:22 - restart your server if your server is
31:24 - ever giving you problems just do that
31:26 - that should take care of it all right
31:28 - perfect so now if we actually look at
31:31 - our fonts
31:32 - now our fonts actually look very similar
31:35 - to the font that we're going to have
31:38 - in the final version of the app so our
31:40 - fonts are actually looking very similar
31:41 - stay curious stay curious so that was a
31:44 - little trick to be able to just get the
31:47 - nice fonts in one go all right so there
31:50 - we go we got the font okay if you didn't
31:52 - get the font honestly it's not that big
31:54 - a deal you could just build the rest of
31:56 - the app which is the font that you do
31:57 - have
31:58 - not that crazy but how i know that the
32:01 - font has updated is the s's now have
32:03 - that little hook type of thing and the
32:05 - c's as well right and the use so that's
32:08 - really the main main difference okay
32:11 - cool so next up what we're actually
32:14 - going to do is we're going to write a
32:16 - new line underneath this and this is
32:19 - going to be an h3 okay let's make sure
32:21 - we end it let's uh put everything inside
32:24 - of a div so we have a parent and this
32:27 - div and um really what we're doing here
32:30 - inside of this
32:31 - is if we go to the final version we have
32:33 - discover stories thinking and expertise
32:35 - from writers on any topic so i'm going
32:37 - to copy that text we're going to go
32:39 - inside of this h3 and i'm just going to
32:41 - go ahead and paste it inside of this h3
32:43 - now if we go to our app it says it right
32:46 - there but what i want to do is i want to
32:47 - style this and i'm going to do inline
32:49 - styling here and what i want to say is
32:51 - just say make the text
32:52 - large all right so let's go back and now
32:55 - the text is
32:56 - larger than it was before boom just keep
32:59 - this here for now so everything is
33:00 - bigger for you to look at okay so that
33:03 - takes care of our text now what are
33:06 - other things that we actually need to
33:07 - add we need to add where it says start
33:10 - reading so right underneath this h3 i'm
33:13 - going to add a or sorry let's keep it in
33:16 - the same div i'll add a button and on
33:19 - this button i will say start reading so
33:21 - now you should actually see a button
33:23 - right here it doesn't really have any
33:25 - styling yet but it is a button because
33:27 - when i hover over it my mouse gets a
33:29 - pointer the styling that i want to
33:31 - actually give it is the same styling
33:33 - that i gave my accented button okay so
33:37 - what we can do is
33:39 - we can let's create a new styles right
33:41 - here so i'm going to say con styles and
33:43 - we'll create accented button and it'll
33:45 - be the same accident button that we had
33:48 - in our other file so
33:50 - let's simply go back to our header.js
33:52 - file so i'm going to go back to our
33:54 - header.js and sometimes if this happens
33:56 - with your replit where it takes a very
33:58 - long time to load either just wait so if
34:02 - you wait like 20 30 seconds or whatever
34:04 - it'll fix itself or what i recommend is
34:07 - you highlight all of your code and copy
34:09 - it that way if you hit refresh and you
34:12 - lose all your data you can come back and
34:15 - just paste it back in that file so
34:18 - there's really two ways that you can go
34:20 - about this all right so i'm going to go
34:21 - into our header file and let's copy our
34:24 - accented button let's come back to
34:26 - banner and i'm just going to paste that
34:28 - accented button right over here so i'm
34:30 - going to say classname
34:32 - equals styles dot accented button
34:37 - that's where we're getting the style
34:38 - from and let's go look at it and now we
34:40 - can actually see that it says start
34:42 - reading looks pretty good now we wanna
34:46 - give it some more styling right so for
34:48 - example we want like this guy and this
34:51 - guy right here to have some spacing so
34:54 - let's go ahead and do that so what i'm
34:56 - going to do is this div that we have
34:59 - right outside of our
35:02 - like really the content that we have
35:05 - content that we have let's go ahead and
35:07 - go class name and we'll do some inline
35:09 - styling and i'll say space and let's
35:11 - give y5 so you can see that i'm giving
35:14 - vertical five space in between each of
35:17 - these elements right the h1 tag this guy
35:21 - right here and then our start reading
35:23 - button so now it has some breathing room
35:26 - but what we need to do is we also need
35:28 - to be able to add this like background
35:30 - image
35:31 - and um yeah so how do we do that now
35:34 - let's create another div because what i
35:36 - want to do is i also want to have an
35:38 - image so we created a div for this guy
35:41 - but now i want to create a div
35:43 - for both of these guys right like the
35:46 - whole thing so that's going to be our
35:47 - content div so let's go here i'll say
35:50 - div let's go all the way down i will go
35:53 - like that
35:54 - we don't need the end tag just do slash
35:56 - right here let's make it pretty and i'm
35:59 - gonna call this
36:01 - styles.content okay because that's where
36:05 - my content is gonna go okay now inside
36:09 - of this content div let's add our image
36:11 - so i'm going to say image okay and we
36:13 - need to import image so i'm going to say
36:15 - import
36:16 - image from next slash image okay and i
36:20 - always have this habit of copying
36:22 - everything because
36:24 - that way if you need access to it
36:26 - something crashes you can always go back
36:28 - and get access to it we're gonna make it
36:30 - a self-closing tag and we need to give
36:33 - our image tag our image component some
36:35 - properties so source we're gonna give it
36:38 - logo.source okay and where are we gonna
36:41 - get the logo from we're basically gonna
36:43 - say import
36:44 - logo from and really what we're getting
36:47 - here is the banner okay so we're gonna
36:49 - say hey get it from staticbanner.png
36:55 - and
36:56 - we're getting some errors now must use
36:58 - width and height so fine let's add a
37:01 - width and we'll say width is 500 and
37:04 - we'll say height is 400 okay so now we
37:07 - added width and height let's see if it
37:09 - shows up
37:10 - yes it does
37:12 - refresh
37:13 - great
37:14 - our image is
37:15 - showing up right over here we want this
37:18 - image to show up here cool so our image
37:21 - is doing its thing
37:22 - now let's style our image so
37:25 - i'm going to go ahead and style it we're
37:27 - going to give it a height of 32 okay i'm
37:30 - going to
37:32 - do a inline flex on it okay and then
37:35 - what i want to do is make sure i do
37:37 - object contain and really object contain
37:40 - will just make sure that the resolution
37:41 - of this is really high so it's not
37:44 - disproportion and then i just want to do
37:46 - flex one on this okay so we're going to
37:48 - leave this right here now you're
37:51 - probably wondering hey this is still not
37:52 - getting styled it's because we need to
37:54 - actually style our content div as well
37:56 - we haven't done that so let's go at the
37:58 - top and
37:59 - create a styling first i'm going to say
38:01 - content and for our content we're going
38:03 - to go max
38:05 - we're going to give it a big max for our
38:08 - content and then we're going to give it
38:09 - flex 1 and everything inside of it we're
38:11 - going to give it flex so that way this
38:14 - image boom pops up to the right hand
38:16 - side just like it
38:18 - did
38:18 - right now
38:19 - okay what other things do we need we're
38:22 - going to need to make sure that we
38:24 - center everything because this is too
38:26 - close to the top so we're going to move
38:28 - it down
38:30 - and then another thing we need to do is
38:31 - make sure that there's an equal spacing
38:33 - between these two so we're going to go
38:34 - ahead and say
38:36 - justify
38:37 - between okay so that's just going to
38:39 - make sure that there's like boom proper
38:41 - spacing between them so this is the
38:43 - content now the last one that we need to
38:45 - add really is the wrapper outside of all
38:48 - of that okay so the wrapper outside of
38:50 - that so let's go ahead create another
38:52 - div let's go all the way down and we're
38:56 - gonna close that div okay and then this
38:58 - div we're gonna give it a class name
39:00 - we're going to say styles.wrapper then
39:02 - we're just going to create a new
39:03 - property here we're going to say wrapper
39:06 - and we're going to give it a max of
39:09 - 10
39:10 - and make it flex okay
39:12 - now we're going to style that wrapper
39:14 - and once we start styling that wrapper
39:15 - you'll see that these things will start
39:17 - to come together nicely okay so we're
39:19 - going to give it a max height now we
39:21 - want to do item center and we'll also do
39:25 - justify center so justify center
39:28 - should do
39:29 - what we wanted to do okay so let's take
39:32 - a look here okay
39:33 - styles.wrapper okay and let's go ahead
39:37 - and add some color on here too so what
39:40 - i'm going to say is i'm just going to
39:41 - say background and we're going to give
39:43 - it a color i'm going to say
39:45 - fcc017 this is a specific orange that we
39:48 - actually need so there we go we now got
39:50 - that orange in the back i'm going to say
39:54 - border
39:55 - y
39:56 - okay so now we have a little bit of a
39:58 - border action going on okay so you saw
40:01 - that it added that little border right
40:02 - there okay so let's go ahead and do that
40:05 - border y
40:06 - and then we're gonna say border black so
40:09 - that way we can make it black boom just
40:12 - like that so now we have borders
40:14 - on the y axis right now over here on
40:17 - line 14 where we give space between the
40:20 - y's let's add some padding on the x-axis
40:24 - and what the padding will really do is
40:26 - it will just
40:28 - and add a pad right here and what that
40:30 - will do for the content is it'll force
40:32 - it to push in it'll force it to go this
40:34 - way okay so content will come in
40:37 - together so i'm going to say padding of
40:39 - 10 okay and that will bring our content
40:42 - together and then i'm just going to say
40:43 - flex of i want a flex of three here okay
40:48 - great so now
40:50 - this is looking more like the final
40:52 - version that we have right if we had the
40:54 - final version and 200 percent these look
40:57 - very similar as you can see so that's
40:59 - really good this is really the look that
41:01 - we're going for so this is totally fine
41:03 - so at this point our
41:05 - header
41:06 - and our banner
41:08 - is completely done all right now what we
41:10 - want to do is let's make
41:13 - these component this component right
41:15 - over here this component right here we
41:18 - will be calling this card.js
41:21 - all right that's the component we're
41:23 - gonna make so let's go ahead and
41:25 - get to it so i'm gonna go in here
41:28 - we will make a new file this will be
41:31 - called postcard yes just like that okay
41:34 - and postcard js there's a lot of dynamic
41:38 - stuff that's happening we're gonna start
41:40 - with the non-dynamic parts right now
41:42 - we're just gonna hard code everything
41:44 - and then afterwards we're gonna make it
41:47 - dynamic so first thing we're just gonna
41:49 - do is we're just gonna go ahead and say
41:51 - const postcard all right
41:54 - and
41:55 - make sure to return and then in this
41:57 - return i will just add an h1 i'll say
42:00 - hello and at the bottom here i'm going
42:01 - to say export the default postcard and
42:04 - now let's go into our index.js
42:08 - and let's import a postcard card okay
42:12 - and let's go ahead here and we're gonna
42:15 - say postcard just like this and let's
42:18 - make sure that postcard hello or
42:19 - whatever we wrote does actually show up
42:22 - underneath here if it doesn't
42:24 - that's the problem okay now one reason
42:27 - it's possible it's not yeah why is it
42:29 - actually not showing let's see let's
42:31 - write it a bunch of times let's make a
42:34 - div here
42:36 - and let's go ahead and paste this a few
42:38 - times in there and let's make it pretty
42:40 - okay still not showing up ah because our
42:45 - server died for whatever reason not sure
42:47 - why that happens but our server is dead
42:49 - so let's go ahead and rerun our server
42:52 - so let's
42:54 - make sure we're in the right folders
42:55 - medium cp and then let's go ahead and
42:58 - let's do yarndev all right
43:00 - now let's go take a look let's refresh
43:03 - and if our server is running correctly
43:05 - yup we see hello here
43:08 - about five times now we don't need this
43:11 - to say hello instead what we need to do
43:14 - is we needed to say a couple of things
43:16 - we needed to say the author's name okay
43:20 - so we're going to have a author
43:22 - container so let's go ahead and actually
43:24 - start even putting this in styles
43:27 - okay so i'm gonna have a author
43:29 - container okay what else am i gonna have
43:31 - i'm gonna have an author container
43:32 - that's gonna contain this then i'm gonna
43:34 - have an author image container that's
43:36 - gonna contain the image okay author
43:39 - image container let's just leave it
43:42 - empty for now let's leave all of these
43:44 - empty or just let's make it a tilde
43:46 - instead of
43:48 - quotes okay unavailable interesting
43:51 - let's hit refresh
43:52 - boom there we go it's back
43:54 - all right
43:55 - then we're also going to have this
43:58 - post details right so post details might
44:01 - be
44:01 - all of the details that we have here all
44:03 - right so if we actually look at this
44:05 - component right over here okay on the
44:07 - left hand side are all of our post
44:11 - details that this we're gonna call this
44:13 - post details okay that's this is gonna
44:16 - be probably the class name i imagine
44:19 - okay right there it's to be the class
44:21 - name and then the class name of this is
44:24 - going to be different all right but for
44:26 - now that's what's important to know so
44:28 - this is what when i say post details
44:30 - this is what i'm referring to okay let's
44:31 - go ahead and remove that let's go back
44:33 - to our app
44:34 - and let's go and
44:37 - add styling for this post details and
44:40 - give it some styling put a little comma
44:42 - here cool okay let's refresh make sure
44:46 - app is up and running alright let's go
44:48 - ahead and get started with some of this
44:51 - stuff so we need images right we need
44:54 - the author image for now we'll just use
44:58 - like a medium logo or something as an
45:00 - author image so how did we get the logo
45:03 - it's simply like this so we're just
45:05 - going to use that so let's import it all
45:07 - the way at the top so we're going to use
45:09 - that we'll also need access to image so
45:11 - remember whenever we need access to
45:13 - image we say import image from next
45:16 - slash
45:16 - image so we're gonna need access to
45:18 - image as well
45:19 - and instead of having this h1 here i'm
45:22 - going to have an image and it's gonna be
45:24 - a self closing tag and then we're gonna
45:27 - give this image some property okay and
45:29 - the properties that i'm gonna give it
45:31 - are i'm going to say sources logo and
45:34 - then
45:35 - class name okay we're going to go ahead
45:37 - and do
45:38 - another style which is going to be the
45:40 - styling of the author's image so let's
45:42 - create another style right here we'll
45:44 - call it author image so i'll do
45:47 - styles.author image just like that okay
45:51 - and let's see boom like that entire logo
45:55 - is showing up as the author image okay
45:57 - now of course we're gonna need to make
45:59 - it a lot smaller because right now it's
46:01 - massive it's like way too big we don't
46:04 - really want it looking this big because
46:05 - that'd be silly if somebody came to your
46:07 - site and was like what the hell's wrong
46:08 - with you why does your stuff look like
46:10 - this get rid of it let's go height and
46:12 - let's make it 40 40. so now it's gonna
46:14 - actually make it a lot smaller as you
46:16 - can see right now of course it looks
46:18 - squished and doesn't really look how you
46:20 - want it to look but this is fine for now
46:23 - if i zoom in looks pretty darn squish
46:25 - right there but that's okay it's normal
46:27 - okay for now it's okay all right so
46:30 - that's our
46:31 - author image
46:32 - now when we have our author image we
46:34 - need to have the author name right next
46:37 - to it as well so let's go ahead and do
46:40 - that okay so we're this image we need to
46:43 - make sure that we actually put it in our
46:45 - author image container so i'm going to
46:47 - call this i'm going to say class name
46:49 - i'm going to go ahead and say
46:51 - styles.author
46:52 - image container okay because that's our
46:55 - image okay let's wrap this whole thing
46:58 - up into a author so let's go ahead and
47:01 - let's go
47:03 - class name and i'm gonna say
47:04 - styles.author
47:06 - container okay so this is the container
47:10 - that contains all the stuff about the
47:12 - okay let's go ahead and format it now
47:15 - within this author container let's go
47:18 - down here we're gonna go ahead and add
47:20 - the author name okay so i'm gonna say
47:23 - div and we'll say class name and i'm
47:26 - going to say styles dot
47:29 - author
47:30 - styles.author name so we're going to
47:32 - style the author name as well so let's
47:34 - put that at the top
47:35 - and just leave it blank for now because
47:38 - we're going to be styling this soon
47:39 - enough and for the author name i'm just
47:42 - going to say rafikaze for now you can
47:44 - say
47:45 - whatever you want whatever your name is
47:47 - so you should see a logo let me move
47:50 - that's out of the way so on the left
47:52 - hand side you should see a logo and you
47:54 - should see a name okay that's those are
47:56 - the things that are containing the
47:58 - author details right now now the next
48:00 - thing that we need to add is of course
48:02 - this title
48:04 - but let's go ahead and style our author
48:06 - stuff so at least that looks somewhat
48:09 - reasonable so let's go and style our
48:12 - author name okay and for our author name
48:14 - it's going to be very simple we're just
48:15 - going to say font semi-bold so if you
48:18 - look at this font now it just became
48:20 - semi-bold that's exactly like how this
48:22 - one is so our font as far as we're
48:24 - considered with the font that's good and
48:26 - we now need to make our images these
48:27 - circular images so let's work on our
48:30 - author image style so we're going to say
48:33 - object cover okay and then what we want
48:36 - to do
48:37 - is we want to give it that little
48:39 - skiller style so we're going to give the
48:40 - circular style to the image container
48:42 - rather than the image itself so for the
48:45 - container i'm going to say grid and i'll
48:47 - place items in the center
48:49 - and then we'll give it rounded full
48:52 - and we'll say hey make sure to hide the
48:54 - overflow we'll give it a certain height
48:57 - and then we'll give it a certain width
49:00 - okay and now if we go look you can see
49:03 - that it's like this killer medium image
49:05 - this is probably not the best image
49:08 - to have here that like logo that we have
49:11 - but it does the trick for now so that's
49:13 - the image right there and that's our
49:15 - font now what we want it to be is we
49:17 - want it to be side by side like this but
49:20 - if you look at ours it's not side by
49:22 - side the image is above and then the
49:26 - text is underneath and that's not what
49:28 - we want we want the text to be side by
49:30 - side so what we can do now is we can
49:34 - add that to the author container so i
49:36 - can actually just say hey give me flex
49:40 - and then we'll have a certain gap okay
49:42 - and then let's go back and you can see
49:45 - boom right there
49:46 - we added flex so now we have the author
49:49 - stuff showing up like the way that we
49:51 - wanted to show up that's good so the
49:53 - other stuff is showing up good the next
49:55 - thing that i want now the doctor stuff
49:58 - is done i want the title of the article
50:01 - so
50:02 - let's go ahead and work on the title of
50:05 - the article okay now if i look at the
50:07 - styling of this
50:08 - to me this styling looks like we have
50:11 - bold font and then we have large
50:14 - we also have like font that's large so
50:17 - we can actually just go ahead and create
50:18 - the styling right now
50:20 - so let's go ahead here and i'm gonna say
50:22 - title okay and for my title i'm just
50:26 - gonna say font bold and we're gonna make
50:28 - it to excel okay now we need to actually
50:32 - write this title so where will this
50:33 - title go
50:35 - this title will most likely go
50:37 - underneath our author container okay so
50:40 - once we're outside of our author
50:41 - container but still inside of our post
50:44 - details that's where we'll go so let's
50:46 - wrap this entire thing inside of a class
50:49 - name and we'll call this styles.post
50:51 - details okay and let's end the div
50:54 - right here okay let's do this boom so
50:58 - author is going to go within this
51:00 - now i can write an h1 or sorry not
51:02 - author but the title at my apologies
51:04 - okay the title and within this h1 i can
51:07 - say hey give me the
51:09 - title style and for the title we can
51:12 - write the title that's right here seven
51:14 - free tools that will make you more
51:15 - productive so let's paste that in 2022
51:19 - let's take a look
51:21 - seven free tools that'll make you more
51:22 - productive so now
51:24 - the fonts look similar and that's good
51:27 - now i need this other style right here
51:30 - productivity is a skill that can be
51:32 - learned now when i look at that looks
51:34 - like there isn't any much styling
51:37 - besides that there is a certain color
51:40 - and that color is like this grayish
51:42 - color so all we need to do is
51:45 - for this briefing right so this is where
51:47 - we'll just call this thing briefing
51:49 - right over here so for that briefing
51:51 - sorry let's go back
51:53 - for that briefing right here we're going
51:54 - to give it this light grayish color so
51:57 - let's go back i'll say briefing and that
52:00 - light grayish color is
52:03 - and we'll go seven eight seven eight
52:05 - seven eight seven eight just like that
52:07 - that's our briefing so now let's go and
52:09 - write that brief right underneath that
52:11 - h1 so we're going to have a div
52:14 - and we'll give it his styles.briefing
52:18 - and we'll simply say whatever's in the
52:20 - briefing so i will go and copy this
52:22 - productivity is a skill that can be
52:24 - learned copied paste okay cool you can
52:28 - see the final version of the app by the
52:29 - way by going to this exact url okay or
52:33 - you can go to that final solution reply
52:36 - that we have fork that and then you can
52:39 - like
52:39 - have your own deployed final working app
52:42 - and you can just be seeing the final
52:44 - version and then build it from scratch
52:46 - okay so there you go productivity is a
52:49 - skill that can be learned so that's
52:51 - showing up and now all we need is this
52:53 - thing at the bottom okay so this is
52:55 - right underneath the brief and this is
52:57 - these are the we'll call these like the
53:00 - article details these will be the
53:02 - article details and these article
53:04 - details right here will have a we'll
53:06 - give it we'll put it in a details
53:08 - container so it'll be inside of a
53:10 - details container i know that's really
53:12 - hard to see because that happened to be
53:13 - yellow so i'll just put that here it's
53:15 - gonna be inside of a details container
53:17 - and then we're gonna have a span tag
53:20 - that's gonna be article
53:22 - details and that's what we will style
53:24 - okay so we'll style all of this okay so
53:28 - we'll have your
53:30 - how many minutes is the read the date
53:33 - the what is this productivity or what's
53:35 - the tag that's going to be double and
53:38 - visible right there cool so let's go
53:41 - ahead and add that in now so i'm going
53:43 - to need my details container just blank
53:47 - and then i'm going article great okay
53:50 - and let's leave this blank for now so
53:52 - let's go down and where is this going to
53:54 - be this is going to be most likely
53:57 - inside of post details but outside of
54:00 - like author container and everything so
54:02 - it's gonna be right now the outermost
54:05 - div
54:06 - and we'll go ahead and start putting
54:08 - those details in so i'm going to say i'm
54:11 - going to create a span tag here and
54:14 - within the span tag i'll simply just
54:16 - write the date so let's just say
54:18 - june 15 and to put that dot i did option
54:21 - and eight
54:23 - on my keyboard but if you need the dot
54:25 - you can also just try to copy it from
54:27 - here because it's right there or try to
54:29 - see how you can do it on windows i'm not
54:31 - sure how you do in windows but on mac
54:32 - it's option eight so june 15th so you
54:35 - can see that it says june 15th right
54:37 - here so we go june 15th and i'll say
54:39 - five men read and i'll put another one
54:41 - of these dots five men read and i'll say
54:44 - productivity
54:46 - boom okay so i have all of those things
54:49 - there and now let's look i have them in
54:51 - my
54:52 - in my app now not just the final version
54:54 - but my hat has that now and now we
54:57 - actually need to style it so what i
54:59 - imagine is probably it's going to be
55:01 - some small font it's going to be like a
55:04 - gray color this is probably going to
55:06 - have a background color behind it with
55:08 - the border radius so i'm already like
55:10 - picturing in my mind the styling because
55:13 - front-end developers it's very important
55:14 - to visualize and imagine what it's going
55:17 - to look like and imagine kind of the
55:19 - code or what the logic behind it before
55:22 - you start coding because then it's going
55:23 - to make your life simpler okay so let's
55:26 - go ahead and do the styling for that
55:28 - let's also put productive in its own
55:31 - span tag because it's going to need a
55:33 - different style than all the other guys
55:36 - okay and for the productive span tag
55:40 - we're going to just call it we're going
55:42 - to say class name and i'm going to say
55:44 - styles.cory gory okay just like that so
55:48 - now we can actually go ahead and create
55:51 - a category class
55:52 - and like i said it's probably gonna have
55:54 - some kind of background color so let's
55:56 - go ahead and give category a background
55:58 - color of
56:00 - that like grayish thing the grayish
56:02 - color we're gonna give it
56:04 - some padding and then we're gonna make
56:07 - it rounded full so now if we go look our
56:09 - productivity is looking very similar to
56:12 - the other productivity right the final
56:13 - version great now we have pretty much
56:16 - all of these in a span tag and let's go
56:18 - look at the name of that span tag we
56:21 - have we don't have a class name for the
56:23 - topmost span tag so let's go and make
56:25 - sure we give it us we give it a name so
56:28 - i'm going to call this we're gonna call
56:30 - it
56:31 - styles.article details okay and now we
56:35 - need to style our article details so for
56:37 - article details we're gonna give it a
56:40 - margin
56:41 - vertical margin of two and then we're
56:43 - going to give it a text size of that
56:46 - right there okay let's go and check so
56:49 - basically we give it a smaller text size
56:51 - so now it's looking
56:53 - good and we're going to need to make it
56:55 - a little bit gray so since we have this
56:59 - so we have this div right over here with
57:01 - the title and everything we need to
57:02 - actually put we need to put all of this
57:05 - article detail stuff in a details
57:08 - container okay so let's go and make a
57:11 - div we'll say class name
57:14 - styles dot details container and we're
57:17 - gonna put this
57:18 - entire thing inside of that div let's
57:20 - make it pretty okay beautiful now
57:22 - details container we're gonna go ahead
57:24 - and give it a style and once we style
57:26 - this everything is going to look
57:28 - perfect okay so let's make sure that we
57:31 - have this flex we're gonna go item
57:33 - center so that'll centralize these items
57:36 - vertically okay then we'll go justify
57:39 - between so there is enough spacing
57:41 - between all of them okay so we got
57:44 - justify between going on here and then
57:46 - we're gonna give it a text color so
57:49 - let's close that the text color is going
57:51 - to be 7 8 seven eight
57:54 - seven eight okay and that's gonna be
57:56 - that
57:57 - light hint of a gray and there we go
58:00 - okay so now it's starting to look very
58:02 - similar right pretty much the whole
58:04 - thing is good to go the only thing we
58:06 - really need is a bookmark and so if we
58:09 - want to get the bookmark we can get that
58:11 - from react icons and install react icons
58:16 - okay let's look at and let's see what's
58:18 - the easiest way to install react icons
58:20 - so when i looked it up i get this npm we
58:23 - can also just do yarn
58:25 - yarn add react dash icons okay just like
58:28 - this so i'm gonna copy this let's go
58:29 - back and let's exit so let's do control
58:32 - c so we get out of our
58:35 - little mode okay and now i'm gonna paste
58:37 - that so we're gonna do yarn add react
58:39 - icon so we'll add the icons basically
58:42 - okay and then we'll be able to get
58:44 - access to them and then we'll simply
58:45 - just import the react icons and why
58:48 - we're trying to do this is so we could
58:50 - have this bookmark right over here okay
58:53 - that's the only reason okay so it's
58:55 - gonna take a second to install let's
58:56 - wait for the install to finish okay so
58:58 - the installation has finished now we can
59:01 - use
59:02 - react icons and i need the bookmark so
59:05 - i'm going to say import if i bookmark
59:08 - and we'll save from react icons and
59:12 - slash fi this is the bookmark that i
59:14 - need let's go all the way down and this
59:16 - bookmark i'm going to add it in its own
59:19 - span tag so right underneath here okay
59:23 - within
59:24 - the post details or the article yeah
59:27 - details container we'll put this within
59:29 - the details container and i'm going to
59:31 - add a span tag okay and the style of
59:34 - this will be bookmark container so we'll
59:36 - style this in a second container all
59:39 - right and then within these span tags
59:41 - what i'm going to say is
59:43 - we're going to add the bookmark and
59:45 - we're going to give it a class name and
59:46 - we'll just style it in line so i'm going
59:48 - to say height of 5
59:49 - and width of 5
59:51 - and that's it just end it for me please
59:54 - okay let's go look
59:56 - and pretty soon once we style it we
59:58 - should have our bookmark actually
60:01 - showing up so let's go
60:03 - and get our bookmark working okay so
60:06 - we're going to go ahead and style this
60:07 - now in bookmark container so i'm going
60:09 - to copy this bookmark container let's go
60:12 - here and paste it all right so for my
60:15 - bookmark container i really just need
60:17 - cursor pointer i don't really need
60:19 - anything else cursor pointer okay and
60:22 - now we need to actually run our app okay
60:25 - so we need to run that so make sure to
60:27 - do yarn dev okay once you install
60:30 - everything and now
60:31 - the server will start running and we'll
60:34 - be able to see the update so if the
60:35 - bookmark if you have the bookmark that
60:37 - bookmark should show up so you can see
60:40 - that i actually have a bookmark but it's
60:42 - all the way if i zoom out you can see
60:44 - it's like
60:45 - right there
60:47 - like you see that it's to the left of me
60:49 - it's weird huh it's right there so that
60:52 - bookmark is all the way at the end how
60:55 - we're going to solve for that is once we
60:57 - add this image thing so what we want to
61:00 - do is probably add a container around it
61:02 - then push these things
61:04 - in so they're right here
61:06 - and then once we get this image
61:08 - it'll push the bookmark all the way
61:11 - here okay so once we like make our boxes
61:14 - and containers and then we push the
61:16 - image that'll move the bookmark in so
61:19 - for now
61:20 - it's looking really good i got the post
61:22 - details or whatever it's called article
61:24 - details we're pretty much done with the
61:26 - article details now all we need is we
61:29 - need that image to show up on the right
61:31 - hand side and then we need to actually
61:32 - start containing it because right now
61:34 - just running all the way across and we
61:37 - need to put all of these in a container
61:39 - so now we're going to get outside of the
61:41 - post details right so we can't we're not
61:43 - going to be putting this inside of the
61:45 - post details that wouldn't or actually
61:47 - sorry my bad
61:49 - yeah so like i had said earlier pose
61:51 - details
61:52 - was this part right this whole part is
61:55 - post details so this image is actually
61:57 - going to be outside of post details all
62:00 - right so let's
62:02 - at this point what we need to do is we
62:03 - actually need to make a wrapper so let's
62:05 - make a div all right and we're going to
62:07 - say class name and i'm going to say
62:09 - styles.wrapper here all right and then
62:12 - let's wrap this entire thing in that
62:14 - wrapper so i'll say div okay let's hit
62:17 - that prettier so it formats it and
62:19 - inside of that wrapper
62:21 - i'm gonna go ahead and
62:23 - add our image okay so we're gonna say
62:26 - div here and then inside of this div
62:28 - we're gonna have our thumbnail container
62:31 - all right boom there we go or sorry this
62:34 - div actually right here
62:36 - and i'm gonna go ahead and say class
62:38 - name is going to be
62:40 - styles.thumbnail container so we're
62:42 - gonna can we're gonna create that
62:43 - thumbnail container okay so that's gonna
62:45 - be that image container we're gonna
62:47 - style that and now let's go ahead and
62:50 - put
62:51 - the image okay so this image for we're
62:55 - gonna get some image from at a later
62:57 - point right now let's just use the
62:59 - medium image but later we'll use
63:02 - different images so i'm going to say
63:04 - height is 100 width is 100 and then
63:09 - source is just logo for now okay so you
63:13 - can see that image is actually showing
63:14 - up at the bottom right there
63:17 - now what we need to do is we need to
63:19 - make sure the thumbnail container has
63:21 - the proper styling but more importantly
63:23 - we need to also make sure the wrapper
63:24 - has proper styling so let's go ahead and
63:28 - create our wrapper and let's give it
63:30 - proper styling so then everything is in
63:33 - flex mode so like literally if i even
63:36 - just write flex here that should do some
63:38 - of the trick so boom the medium showed
63:40 - up right the bookmark is showing up
63:41 - right here so it's already starting to
63:43 - look good but we have a couple of things
63:45 - to do so we're going to give it a max
63:46 - width of 46 a.m okay so then that way
63:50 - the width will never increase above this
63:53 - all right we're going to give it a
63:55 - height
63:55 - of 10
63:57 - rem so we're making sure that it has a
64:00 - set width and a set height okay and
64:03 - let's center the items
64:05 - and this will again remember vertically
64:08 - center so you saw it just gave a littles
64:10 - and then once we have more articles
64:12 - they'll all look really nice and then
64:14 - i'm going to give a gap of one
64:17 - rem okay and then cursor pointer okay so
64:22 - this is pretty good for now we got our
64:24 - wrapper we got the whole thing coming
64:27 - along really well basically starting to
64:30 - look really nice and this like big
64:32 - container will add that later okay but
64:34 - for now you can see that we got these
64:36 - articles showing up we have the image
64:39 - showing up just like how we want we can
64:41 - it looks like we can click in on it and
64:43 - if we had more of these guys so here
64:46 - post details so starting from post
64:48 - details all the way to the end div this
64:52 - is just one post that i've selected if i
64:55 - paste this
64:56 - now it'll actually start to look like we
64:58 - have two posts right just like that so
65:01 - you can see that component that we've
65:03 - made is a very nice component and then
65:06 - we'll be able to actually repeat that
65:08 - component afterwards
65:10 - over and over again now
65:12 - a few things that we haven't styled is
65:14 - we haven't styled our post details so
65:18 - let's go ahead and make sure that we
65:20 - style our post details okay so for our
65:22 - post details we're going to give it a
65:24 - certain flex so we're going to give it a
65:26 - flex of 2.5 we're going to make it flex
65:29 - enabled and we're going to say hey go
65:31 - into columns all right and now the
65:33 - benefit of that benefit of making it be
65:37 - in columns is you'll see that if i
65:39 - actually make that post again so let's
65:41 - say highlight all the way from post
65:43 - details and i just start going down and
65:47 - i highlight all the way to this div and
65:48 - if i post another one oops okay so let's
65:51 - leave that let's go back
65:54 - so our app doesn't crash for now we'll
65:56 - do all that fancy stuff later okay for
65:58 - now let's just keep our app running so
66:00 - our postcard component now our postcard
66:03 - component is essentially completed at
66:05 - this point okay it doesn't look perfect
66:08 - but it's
66:09 - good to go now all we need to do is just
66:12 - add padding on the right hand side and
66:14 - padding on the left hand side
66:15 - so that
66:17 - we can push it towards the middle
66:19 - but outside of that
66:20 - it looks really good and we can add
66:24 - multiple articles as well okay so in
66:27 - terms of the postcard component before
66:29 - making a dynamic where we can pull the
66:31 - data from a database for now this looks
66:35 - so you've made really good progress so
66:36 - far
66:37 - we have our postcard component pretty
66:40 - much ready to go now remember we need to
66:42 - style it and make it so we can actually
66:45 - see it in the right way so we needed to
66:47 - come into the screen and not be squished
66:51 - all the way to the left hand side like
66:52 - this where we're going to do that is
66:54 - actually our index.js i'm going to hit
66:56 - command p here you can hit ctrl p and
66:58 - i'm just going to go to my index.js you
67:00 - could navigate to it too but i just like
67:02 - hitting the shortcuts so for our
67:04 - postcard we're actually going to give it
67:06 - just a little bit of styling okay so
67:09 - then that way we can actually see
67:12 - what everything will look like postcard
67:14 - will be
67:15 - wrapped in a couple of divs so that it
67:18 - could get the styling that it needs okay
67:20 - so first thing we're actually gonna do
67:22 - is i'm gonna put in a div
67:24 - and this div we're gonna give it a class
67:26 - name of styles.post
67:29 - list because remember postcard we're
67:31 - going to have multiple postcards right
67:33 - we're not just usually going to have one
67:35 - postcard at any given time we're going
67:36 - to have multiple so let's go ahead and
67:39 - put multiple postcards here so that we
67:41 - can actually see them all at the same
67:43 - time and if your app for whatever reason
67:46 - is not running just all you have to do
67:48 - make sure is you can kill your server
67:51 - and then you can just start your server
67:52 - again right ctrl c and then just do yarn
67:55 - dev so i'm going to do that now now i'm
67:57 - getting an error that says hey styles is
67:59 - not defined no problem we're just going
68:01 - to go ahead and define styles and we'll
68:04 - make it empty for now okay cool
68:07 - now let's go ahead and refresh and let's
68:09 - see what happens
68:11 - great so we have three posts showing up
68:13 - so this is a really good start okay and
68:15 - they're showing up the right way now
68:18 - this div that we created here let's go
68:20 - ahead and create styling for it so i'm
68:22 - gonna do post list and the styling that
68:24 - we're going to give post lists is we're
68:26 - going to enable flex and we're going to
68:28 - make it flex column i'm going to give a
68:30 - gap of 3 padding of 2
68:33 - and then we're going to make it we're
68:34 - going to give it some break points so
68:37 - that it could actually work on mobile
68:38 - devices as well so i'm going to say grid
68:41 - and calls 2 then we're going to give it
68:44 - a medium gap of 6
68:46 - and we're going to give it another break
68:48 - point right here and grid calls three
68:52 - all right so now until when we're
68:54 - telling it hey what how it should behave
68:56 - when the screen size
68:58 - changes so when the screen size changes
69:01 - we're telling it what it needs to do so
69:03 - now if i change screen sizes here you
69:05 - can see that it automatically adjusts to
69:08 - the screen sizes and fits right in the
69:11 - screen
69:11 - just like the way that we would expect
69:13 - it to so that's a really good sign so
69:16 - now that we're done with post list we
69:18 - need to take this and we actually need
69:20 - to wrap it in a container so we're going
69:22 - to go ahead and do that let's put a div
69:25 - that ends here i'm going to say class
69:27 - name and we're going to say
69:28 - styles.container
69:30 - let's prettify it then let's give a
69:33 - container so for container i'm gonna
69:36 - have a
69:37 - oh let's put a comma up at the top
69:40 - right here comma for cont and then put a
69:42 - comma right here so we don't forget
69:44 - max i'm gonna max with it okay i'm gonna
69:47 - give it a huge max width and then we're
69:49 - gonna say flex one so that way we can
69:52 - add more things inside of this container
69:54 - so we've made it we've given it a big
69:56 - width so that way if we want to add in
69:58 - like if we look at the final version
70:00 - here we don't really have anything else
70:02 - but this is still helpful to give it
70:04 - that big container okay so let's go down
70:08 - and now what we want to do is we want to
70:09 - wrap this container
70:11 - inside of main so we're going to do that
70:14 - now create a div and we're going to give
70:16 - it a class name
70:18 - of styles dot main okay and make sure
70:21 - that this div ends right over here the
70:24 - whole thing should wrap in there just
70:26 - like that all right now
70:28 - for main
70:29 - where we're gonna say hey flex and then
70:32 - just make it justify
70:34 - center so let's take a look there we go
70:37 - so now
70:39 - this the final one and our one are
70:41 - starting to look a lot more similar yeah
70:44 - that's definitely a good thing that
70:46 - we've done there now what we want to do
70:48 - is we want to also add a wrapper so this
70:51 - outermost div that we have instead of
70:54 - making it blank we can actually make it
70:56 - a div and we'll give it a class name of
70:59 - styles.wrapper
71:00 - and let's make sure we end this div at
71:02 - the bottom it's pretty fine it's as easy
71:04 - to see and for wrapper
71:07 - we're just gonna say
71:09 - we're gonna make it auto okay so we're
71:11 - gonna give it
71:13 - margin on the x axis and we're just
71:15 - gonna auto that perfect okay so now
71:19 - we have these two that look very similar
71:21 - so this is a really good place for us to
71:23 - be so at this point if we're looking at
71:26 - this we're done with the first page this
71:28 - is our app this is the final app to look
71:31 - very similar
71:33 - so in my mind honestly we're done with
71:36 - the first page the only thing i can
71:38 - imagine that we have to work on right
71:40 - now is
71:41 - if i go into this page right here we
71:44 - need to now work on this page so this
71:46 - page is going to have multiple
71:47 - components so taking a look at this
71:50 - right here these are the three
71:51 - components we're going to be building
71:53 - this over here
71:54 - is going to be our like sidebar
71:57 - or we can call it readers nav so it's
72:00 - going to be that
72:01 - this middle component right over here
72:04 - we're going to call it article main okay
72:06 - article main.js and then
72:10 - on the right hand side right here this
72:13 - will be think of it this as our um
72:16 - another main component that we're going
72:17 - to build and this is going to be our
72:18 - recommendations okay we'll call this
72:21 - yeah like literally recommendations a js
72:24 - just like that so these are the three
72:26 - components that we're now going to
72:28 - actually build and so with that said
72:31 - let's get to work all right these are
72:33 - the three components we're gonna start
72:34 - working on the first one we'll start
72:36 - working on with is the reader's nav so
72:40 - let's start with that component first
72:42 - and then we'll work our way up to the
72:44 - other components let's go back to our
72:46 - app and of course what we need to
72:48 - actually add in before we can even start
72:51 - working on this page right is we need to
72:54 - add the ability to be able to route to
72:57 - different pages because now we have to
72:58 - create a whole new page so the very
73:00 - first thing we're going to do is
73:02 - actually add routes to our app okay so
73:05 - let's start creating a route so the
73:06 - first thing i'm going to do is i'm just
73:08 - going to create a
73:09 - link all right so for example
73:12 - let's go to our component that we made
73:14 - postcard now remember postcard should be
73:17 - like a clickable link so for example if
73:18 - i click here it should take me somewhere
73:21 - right so this entire postcard right here
73:24 - is a link so what do i need to do i need
73:27 - to go to my postcard and this entire
73:29 - thing i actually need to wrap it in link
73:32 - okay and wow i did not know replied
73:36 - could auto import that is so cool so yes
73:38 - we're getting link from next link that
73:41 - is right and then we're gonna end this
73:43 - entire thing by ending it with link just
73:46 - like that now let's prettify it so it
73:48 - looks good beautiful okay
73:50 - so now we have a link but what do we
73:53 - need to do our link actually needs hey
73:56 - where do you want me to send you right
73:58 - so it needs an href so for the href
74:01 - here's where i'm going to have them go
74:02 - i'm going to have them go to post and
74:04 - then whatever the post id is but in this
74:07 - case we're just going to hard code the
74:09 - id
74:10 - to let's just say b123 okay for now it's
74:13 - gonna be a hard coded id so we're gonna
74:15 - leave it like that just one two three
74:18 - okay that's where i want them to go when
74:20 - users click so let's go ahead to our app
74:23 - and let's refresh let's make sure it's
74:25 - still running and let's click a link
74:28 - okay now that i clicked the link you
74:29 - could see that it tried to take me to
74:31 - post one two three right it tried to
74:34 - take me to post one two three
74:36 - however
74:37 - that page does not exist that's what it
74:39 - says 404 this page could not be found so
74:43 - now what do we need to do well what we
74:44 - need to do is we actually need to create
74:46 - this route and create that page and
74:50 - they make it very easy with next to be
74:52 - able to create these routes okay so i'm
74:54 - going to show you how to do that now so
74:56 - we're going to create something where
74:57 - you can go slash post 123 first thing we
75:00 - need to actually do is we need to just
75:03 - create a
75:05 - inside of our pages just create a new
75:06 - folder and just call it post inside of
75:10 - post okay we're going to create a new
75:12 - file and i'm going to call this file
75:16 - slug dot js make sure to put the
75:19 - brackets that's very important and that
75:21 - those brackets are telling those
75:24 - brackets right there are telling your
75:25 - computer that this is going to be a
75:28 - dynamic link right this is going to be a
75:30 - dynamic slug this is not going to
75:32 - literally say the word slug is going to
75:34 - be something like you know 1 2 3 or
75:37 - whatever okay whatever the user wants to
75:39 - put in it's gonna be some dynamic slug
75:41 - and now let's zoom out okay and now
75:43 - we're actually going to you know put
75:45 - something on this page and make sure
75:47 - that that gets displayed okay so this
75:49 - one is going to be called our post so
75:51 - i'm going to say const post all right
75:53 - we're going to leave this we're just
75:54 - going to say return
75:56 - h1
75:57 - post page
75:59 - okay
76:00 - and then we're going to export default
76:03 - post idea here is very simple which is
76:06 - if i navigate to that slug it should
76:08 - just show me this page right over here
76:10 - okay that's really it so let's give this
76:13 - a try and let's see if this works so i'm
76:15 - going to go back and i'm going to hit
76:18 - click boom look at that so the routing
76:21 - is already working we didn't have to use
76:23 - router
76:24 - we didn't have to like add in react
76:27 - router or do any of that crap that we
76:29 - normally have to do this was like
76:31 - incredibly simple and we were able to do
76:33 - it all in just one go right like we just
76:37 - come to this page and then this page
76:38 - oops sorry we just are able to come to
76:40 - this page and then this page just simply
76:42 - renders so that's very clean now that
76:45 - we've added routing to our app what
76:47 - we're gonna do next is really just you
76:49 - know actually start creating those
76:51 - components that we're talking about
76:52 - components such as this reader's nav the
76:56 - article main and then the
76:57 - recommendations on the right-hand side
77:00 - okay so let's start with the reader's
77:01 - nav right here first
77:04 - so what we're going to do is let's just
77:06 - pop in and i'm just going to say
77:09 - readers
77:10 - nav okay and close it and then i will
77:14 - say
77:15 - import readers
77:17 - nav from
77:19 - and then we're just going to need to
77:20 - give it
77:22 - where it's at so i'm going to say
77:24 - components
77:25 - slash readers nav just like that this h1
77:29 - we don't need it anymore and
77:32 - we're going to create this component
77:34 - inside of our components inside of our
77:35 - components you can if you want to like
77:38 - keep this really clean you could even
77:39 - actually create a new folder where you
77:41 - put all your article related components
77:44 - in there but for now we'll keep it
77:46 - simple and we'll just say add file this
77:48 - will be
77:49 - readersnav.js okay and then in this
77:52 - reader's nav remember we're going to
77:54 - just do readers nav
77:56 - make sure that we export this
78:00 - export default readers okay so we're
78:03 - going to export this and we're simply
78:05 - going to say return and i'm just going
78:07 - to say h1 and i'll say readers nav so
78:10 - now when we navigate to that page it
78:14 - should actually just read out reader's
78:16 - nav post one two three now i can really
78:18 - navigate to any url okay i don't need it
78:21 - to be post one two three i can go to
78:23 - post post i can go to post malone if i
78:27 - want and it'll still read me reader's
78:29 - nav so right now as of now that slug
78:32 - route that's dynamic so it expects it
78:35 - expects slash post because that's what
78:37 - we named the folder and then for this
78:40 - it's just a dynamic slug so this part
78:42 - could be really anything all right cool
78:44 - cool so now that we have readers nav
78:46 - here we can actually start building
78:48 - reader's nav okay so for readers nav
78:51 - we're going to need a bunch of logos we
78:53 - should get access to them now and just
78:57 - so we can actually go a little bit
78:59 - faster on this
79:01 - i'm going to paste some of these right
79:03 - here because these are just logos that
79:05 - you're going to need access to okay
79:06 - icons and logos so we're going to need a
79:08 - small logo we're going to need a
79:11 - outline home logo we're going to need a
79:14 - fi bell
79:15 - bookmarks article line and a pencil
79:17 - square okay because those are all the
79:20 - things all the icons that go on this
79:22 - left hand side cool
79:24 - and make sure you have react dash icons
79:26 - installed if you don't you could install
79:28 - it right now using their packages or you
79:31 - could just install it in the command
79:32 - line in the shell and just do yarn add
79:36 - and then boom add it we're gonna need uh
79:38 - image we have a causing image as well so
79:41 - we're gonna get access to that too so
79:43 - i'll just do import quasi from static
79:46 - kazi okay and then
79:48 - last two things we're going to need
79:49 - access to is we're going to need access
79:51 - to be able to add an image so i'm going
79:54 - to say from next slash image and then
79:56 - i'll also need to be able to
79:59 - have routing access from here so we're
80:01 - going to say from next slash link
80:03 - perfect so with the reader's nav that's
80:06 - kind of it so far let's start with
80:09 - adding our images okay so i'm going to
80:11 - go ahead and instead of this h1 right
80:13 - here i'm going to go ahead and remove it
80:16 - and we're simply going to add an image
80:18 - that's going to be a self-closing tag
80:20 - and the image source is going to be our
80:22 - small logo and that's really it so let's
80:24 - go ahead and let's take a look at this
80:26 - page and let's see if it's showing us
80:28 - anything so our small logo is looking
80:31 - pretty freaking massive right now and
80:33 - sometimes that happens because we
80:35 - haven't styled it so once we style our
80:38 - logos
80:39 - it'll look fine okay so that's because
80:41 - we got to put it in our logo container
80:43 - so what we're going to do is we're going
80:45 - to make a div and we're going to say
80:47 - class name and i'm going to say
80:49 - styles.logo container okay and we're
80:52 - going to wrap this div inside of that
80:55 - all right and now what we can do
80:58 - is go ahead and create styles so i'm
81:00 - going to say
81:01 - cons styles and we can say logo
81:04 - container whoops logo container put a
81:07 - comma here and for our logo container
81:10 - we're simply going to go
81:12 - cursor pointer okay so our logo
81:14 - container is going to be relatively
81:16 - simple another thing that we actually
81:18 - need to wrap this in is a link so when
81:20 - we actually click any of these
81:23 - icons they should just take us back to
81:25 - they should take us back to the home so
81:27 - just so you can understand what we're
81:28 - doing right now we're trying to build
81:30 - this part of the navbar and when you
81:32 - click this it takes you back home so all
81:34 - we want to do is we want to go here wrap
81:36 - it in link and i want to say
81:39 - href and i'm going to give it a very
81:41 - simple href of hey just take me home and
81:43 - we're gonna finish wrapping it
81:45 - and link right there okay and then this
81:48 - entire thing is gonna be wrapped in a
81:51 - wrapper so class name and i'll say
81:53 - styles.wrapper
81:55 - and then we'll end the div
81:56 - right here boom let's do this okay now
81:59 - let's go ahead and style our wrapper as
82:02 - well so for our wrapper i'm going to
82:04 - give it a width of 5 rem we're going to
82:08 - make sure that the height runs along the
82:10 - entire screen we're gonna enable flex
82:12 - and make it flex column let's justify
82:15 - the wrapper in between
82:18 - and i want my items to be in the center
82:20 - and with the padding of one rim okay all
82:24 - right there we go so now
82:26 - you can see that it's looking closer to
82:28 - the final version and it looks nice so
82:31 - we got our wrapper and we have our logo
82:34 - container and that's really helping
82:36 - the icon you know become like a smaller
82:39 - sized icon okay now underneath this link
82:42 - we're going to create an icons container
82:45 - so i'm going to say div we're going to
82:47 - give it a class name of
82:50 - styles.icons container and then inside
82:52 - of this div right here we're gonna add
82:55 - in all of our icons so we'll add our
82:58 - outline home we'll add our bell we'll
83:01 - add our
83:02 - bookmarks i'll add our article line
83:06 - we're going to add a divider and then
83:08 - we're going to add the pencil square so
83:10 - now if we go here you can see boom all
83:13 - of our icons are actually showing up so
83:16 - far so good boom everything is showing
83:18 - up all right i just changed the screen
83:20 - up a little bit so you can see the code
83:22 - a lot easier and now i can even be huge
83:25 - and we can code together okay but i'm
83:28 - not gonna do that
83:29 - perfect so
83:30 - we have our icons container now
83:32 - obviously we have to style our icons
83:35 - container which is why they all look a
83:37 - little bit funny so let's go ahead and
83:39 - create the styling for our icons
83:41 - container so i'm going to say icons
83:42 - container let's make sure to put a comma
83:44 - right there so it doesn't error out
83:47 - we'll give it flex 1 we'll give it flex
83:50 - and flex column okay and now you can
83:52 - already see that because of flex column
83:55 - right they're going up and down instead
83:56 - of side to side i want to justify
84:00 - center it okay and uh now that
84:03 - vertically
84:04 - centers it that's what justify center
84:06 - does we're gonna give it a gap of 1.4
84:10 - rem
84:11 - and there you go that added a nice
84:13 - little gap between each my text i want
84:16 - to make it a little bit large okay so
84:19 - these icons look nice and big and then i
84:21 - want to make them gray right so that's
84:24 - going to be our
84:25 - seven eight seven eight seven eight
84:27 - seven seven eight seven eight seven
84:29 - eight that's that okay now they're like
84:32 - gray so the nav bar is coming together
84:35 - pretty nice right that's i had it at 250
84:38 - which is why it was looking kind of
84:39 - ridiculous but if i have at 175 percent
84:43 - this looks more like our final version
84:46 - of the app okay i'll put our final
84:47 - version of the app right here so that
84:49 - way we could see
84:51 - roughly what it looks like okay i've
84:53 - just made it a lot smaller so we can see
84:55 - the whole thing at once okay so our
84:57 - icons container that looks good all
84:59 - right so far we made good progress on
85:01 - this all we need here is a profile image
85:04 - container all the way at the bottom if
85:06 - you could see that so we're gonna go
85:08 - ahead and do that so what i want to do
85:12 - is i want to create a new div right over
85:14 - here and i'm going to say div and then
85:17 - we'll say class name and i'm going to
85:19 - say profile image container okay it's
85:22 - going to be a profile image container
85:24 - now within this we'll add in an image
85:27 - let's make it a self-closing tag
85:30 - and then the will will give this image
85:32 - certain properties okay so this image
85:34 - will have class name and the styles will
85:37 - be profile image so we'll create these
85:39 - styles don't worry these two right here
85:41 - and the divider style because we haven't
85:43 - made that yet
85:44 - source will be quasi because we already
85:46 - got access to that and that's really it
85:49 - so let's go back up let's create the
85:51 - style for our divider because we hadn't
85:53 - done that
85:54 - let's put a comma right there
85:56 - now you can see that my image is already
85:58 - showing up okay let's style the divider
86:02 - divider is gonna be very simple it's
86:03 - just gonna have a border like a like a
86:05 - little black border so it's right there
86:08 - very easy to see then underneath the
86:10 - divider what we want to do is we want to
86:12 - add our profile image container so let's
86:14 - go let's let's style the image first so
86:16 - let's go profile image and we're simply
86:18 - going to say object cover and this will
86:21 - make it make sure that it's like pixel
86:23 - like very good
86:25 - looks good and it fits in the middle and
86:27 - then i'm going to set profile image
86:29 - container
86:30 - all right let's put a comma right here
86:32 - and now profile image container we're
86:34 - going to give it a width of 2.4 ram okay
86:38 - so now basically like that image is
86:41 - smaller profile image container yep so
86:43 - that image is now smaller we're going to
86:46 - give it a height same height okay
86:48 - because we want it to be like a square
86:50 - great and then we want to make sure that
86:52 - it's rounded full so it's going to now
86:55 - make it like a circular image okay
86:58 - profile image container div
87:00 - and that div just ends right there
87:03 - perfect
87:04 - okay and then the other things we want
87:05 - to do is we want to say hey overflow on
87:08 - this bad boy let's
87:10 - hide it okay and then we're going to
87:12 - place items in the center cool so there
87:15 - you go now you can see that image
87:17 - actually looks
87:18 - very good like oops it's not what i
87:21 - meant to do
87:22 - apologies let's go back here let's do
87:25 - that
87:26 - all i was trying to do is show you guys
87:27 - that image so you can see that that
87:29 - image looks very very good now let's
87:32 - zoom out with that said our reader's nav
87:35 - is essentially done right if we look at
87:38 - this reader's nav and our reader's nav
87:40 - they look pretty darn similar they
87:42 - actually look exactly the same so reader
87:44 - nav is done the next thing we're going
87:46 - to work on is this recommendations
87:48 - component so let's go ahead and work on
87:50 - that and then the last thing we're going
87:52 - to work on is this one because that's
87:53 - the big boy so we're going to get the
87:55 - big boy at the end all right let's get
87:57 - to work on recommendations so the first
87:58 - thing i'm going to do obviously is make
88:00 - a new component it's going to be called
88:02 - recommendations.js
88:04 - and we're just going to get that
88:05 - recommendations component to show up so
88:07 - let's go inside of our
88:10 - pages and let's go into post and slug
88:13 - and here i just want that component to
88:16 - show up that i just created
88:17 - recommendations okay so i'm going to say
88:19 - recommendations end it and we're also
88:22 - going to import it okay so let's go and
88:24 - say import
88:26 - recommendations from components
88:28 - recommendations okay just like that
88:31 - and then all this is complaining about
88:33 - here is it just needs to be wrapped up
88:35 - in a div so let's wrap this up in a div
88:37 - cool now let's go to our recommendations
88:39 - component and we're just going to say
88:42 - cons recommendations
88:44 - and i'll say return and we'll just
88:47 - return
88:48 - recommendations okay so that's all we'll
88:50 - say and also export default
88:53 - recommendations so this is just making a
88:56 - connection between the components and
88:58 - the files and making sure that things
89:00 - are going in the right place all right
89:03 - so let's see if that is showing up
89:06 - anywhere so the server is loading right
89:09 - now is what the logo is telling me so
89:11 - let's go ahead and see because if
89:13 - sometimes it doesn't load it means your
89:14 - server is having problems i'm going to
89:15 - drag this
89:17 - here and see what's happening so it says
89:18 - it's waking up right now okay no worries
89:21 - so let's just cd into medium cp and then
89:24 - let's just do yarn dev okay and now that
89:28 - now basically i've woken it up okay so
89:30 - if that ever happens just do that and
89:33 - then you should be good to go all right
89:35 - we're gonna call this the
89:37 - youtube
89:38 - cpu youtube medium with nexus and i
89:42 - don't need this note on this rebel
89:45 - perfect this is going to be the final
89:46 - version all right this will be the link
89:49 - that will drop for you guys in the
89:51 - youtube description so you can get
89:52 - access to it all right for some reason
89:54 - it crashed again so we're just gonna cd
89:56 - into medium and then do yarn def just
89:58 - always make sure to cd into medium and
90:00 - then it should be good to go and now
90:02 - that i've done it it should be working
90:03 - now and let's wait for it to refresh
90:07 - okay it's refreshing great now for
90:10 - whatever reason our recommendations
90:12 - hasn't shown up yet so let's take a look
90:14 - what's happening so here's what the
90:16 - problem is our recommendation is
90:17 - actually showing up but it's showing up
90:19 - all at the bottom here so that's why
90:21 - it's actually really hard to see it so
90:23 - we need to make sure that the
90:24 - recommendations goes
90:26 - in the right place so let's go to our
90:28 - slug here and let's take this div and
90:31 - turn it into
90:32 - we're gonna say styles dot content all
90:35 - right and i will go here okay that's
90:38 - weird okay let's go con styles
90:41 - and for my styles on this one i'm going
90:44 - to say
90:45 - content we'll just make it flex so there
90:47 - we go all we're saying is hey you're
90:49 - gonna show
90:51 - hey post page you're gonna have a few
90:53 - components like readers now
90:55 - recommendations and then article main
90:57 - each of these components just show them
90:59 - using flex meaning they should read from
91:02 - left to right instead of top down like a
91:06 - column that's all that's why
91:08 - recommendations just popped up here we
91:09 - just needed to enable flex with the flex
91:11 - enabled now they're good to go where
91:14 - recommendations is good great
91:16 - recommendations we'll take in an author
91:18 - but we'll work on that later for now
91:20 - let's just continue working on the front
91:23 - end part of our recommendations
91:24 - component for our recommendations we're
91:26 - going to need access a couple of logos
91:28 - and icons so we're going to need access
91:30 - to an image so because we need to get
91:33 - images from next we're going to need
91:35 - access to a ai outline search we're
91:39 - going to need access to email unread
91:41 - replit logo tutorial image
91:44 - cp logo and cause e logo and then the js
91:47 - logo so these are all the things we're
91:49 - gonna need access to and remember if you
91:52 - fork this replica we were supposed to
91:54 - when you started this tutorial you can
91:56 - always go in the link in the description
91:58 - click the rebel that says
92:00 - medium starter and fork it you'll have
92:02 - access
92:03 - to all of these logos because in your
92:06 - static you should have all of them js
92:09 - logo right here you have your quasi
92:12 - right there you have replit logo right
92:15 - there you should have access to all of
92:17 - this stuff now
92:19 - if i look at this final version you can
92:21 - see on the right hand side i hide myself
92:23 - you can see the replit logo you can see
92:26 - the tutorial logo and then you can see
92:28 - at the bottom the javascript logo so
92:31 - let's bring myself back that's why we
92:32 - need access to all of them and now
92:35 - what other things that we need to notice
92:38 - about this we have get unlimited access
92:40 - so
92:41 - that's a button and then we have a
92:43 - search bar so we're going to start with
92:45 - creating this button then we're going to
92:47 - create this search bar right here then
92:49 - we need to put this image then rozzy and
92:51 - followers
92:52 - these two buttons right here and then
92:54 - this part okay so
92:57 - now let's go ahead and do that i'm gonna
93:00 - just move it right over here so we can
93:01 - see more of it beautiful all right so
93:04 - we're gonna create a div
93:06 - and then within this div i'm going to
93:09 - call this my wrapper okay we'll say
93:11 - class name
93:13 - and we'll say styles dot wrapper okay
93:16 - and inside of this div we're gonna have
93:18 - another div and we'll give it a class
93:21 - name of
93:23 - styles.accentedbutton this is where our
93:25 - get unlimited access button is going to
93:27 - go so i'm going to say get unlimited
93:29 - access and do it just like this all
93:31 - right
93:32 - and let's take a look let's define
93:34 - styles because that's what it's
93:35 - complaining about right now so let's go
93:37 - and define it and we're going to say
93:39 - that we have a wrapper
93:42 - and we might as well just style our
93:43 - wrapper right now so our wrapper is
93:45 - going to have is going to be take over
93:48 - the entire screen height wise we're
93:51 - going to give it a minimum width of 10
93:54 - rim we'll give it a max width of 30 ram
93:57 - we'll give it a flex of 1.2 and then
94:00 - we'll give it a padding of 2 ram all
94:03 - right so get unlimited access let's go
94:06 - back to our pages and slug and all i
94:09 - want to do is add
94:11 - like a dummy component or whatever in
94:13 - the middle so we can just say div for
94:15 - now like a self-closing div okay so that
94:18 - way we can represent that we have three
94:20 - components let's go div and i will say
94:23 - article
94:24 - main will go here and let's end the
94:27 - stiff okay so this is representing that
94:30 - we have three components great
94:32 - make it smaller all right so let's go
94:34 - back into our recommendations
94:36 - we can hit command p and go
94:38 - recommendations or just manually go to
94:41 - it either one works fine okay so we have
94:45 - our wrapper and we have our accented
94:46 - button we have to obviously style our
94:49 - accented button so we're going to go
94:50 - ahead and give it a styling and then for
94:52 - the styling for the accented button it's
94:54 - going to be the same styling how we had
94:56 - earlier so justify
94:59 - center for this one we're going to give
95:01 - the text small make sure the background
95:03 - is black text is white and there's
95:06 - margin
95:07 - on the y-axis and then we're going to
95:09 - add some padding on the y-axis and we'll
95:12 - say here make sure that the rounded is
95:14 - full so it's fully rounded so now that's
95:17 - our get unlimited access button okay
95:20 - great so
95:21 - looks alright so far next up what we're
95:24 - going to add we're going to add the
95:26 - search bar
95:27 - so let's go here i'm going to close this
95:29 - so you have more room to see and for
95:32 - this we're going to give it a class name
95:33 - i'll say styles.searchbar
95:36 - okay and then within this div
95:38 - we're going to go ahead and put ai
95:40 - outline search that's the icon that we
95:43 - actually got access to earlier so you
95:45 - can see that we have the search icon
95:47 - showing up now let's take in an input as
95:50 - well right there and the input is going
95:53 - to have a class name of styles.search
95:56 - input which we will create later so
95:58 - don't worry it'll have a placeholder of
96:01 - search and the type of this is going to
96:04 - be text okay so now you can see that we
96:07 - can write in here so we need to style
96:09 - search bar and search so let's style
96:12 - search bar first so for search bar i'm
96:14 - going to go ahead and say
96:16 - make it flex of course make item center
96:20 - will give a gap of 0.6 rem a height of
96:25 - 2.6 rem make sure it'll have a border
96:28 - we'll give it a padding of one rim and
96:31 - we'll make sure that it's rounded fully
96:34 - okay so now you can see that the search
96:36 - bar is starting to look better right
96:38 - looks actually really freaking good
96:40 - especially in full screen
96:42 - input
96:43 - is looking pretty ugly so let's go ahead
96:46 - and fix that so i'm going to go ahead
96:48 - and say search input let's put a comma
96:51 - right here so it doesn't complain all
96:52 - right so for search input let's put a
96:54 - comma right there as well i'm going to
96:56 - say hey make sure that there's no border
96:58 - that alone will make it really good make
97:01 - sure there's no outline remove any
97:03 - background and give it a full width so
97:06 - now
97:07 - search input looks really nice there we
97:10 - go so just a little bit of styling and
97:12 - you can see how that
97:14 - just really gives it a refined taste it
97:16 - makes the app
97:18 - sync essentially okay
97:20 - now what we need to do is we need to add
97:22 - the author image so then our author
97:24 - shows up because that's the next thing
97:25 - remember if i go here we have the author
97:28 - image and then we have some author title
97:30 - and we have how many followers the
97:32 - author has so let's go ahead and add
97:34 - that image and we're going to add that
97:36 - image inside of the wrapper
97:38 - so let's go down here
97:40 - and time to add our image now this image
97:43 - will need to be contained so we want to
97:45 - have a couple of things actually first
97:47 - we want to have a
97:49 - author container that will contain
97:51 - everything regarding the author now
97:54 - within that
97:55 - we're going to have my apologies we're
97:58 - going to have
97:59 - author image container profile image
98:03 - container a mouthful but this way we can
98:07 - be very clear about what we're actually
98:09 - building and this will have an image we
98:12 - can close it off
98:14 - and this image that we're going to have
98:16 - is we can just use the quasi image for
98:19 - now so let's just use that
98:21 - hard code it and you can see that i'm
98:23 - showing up right there we'll give it a
98:26 - height of width of 100 and we'll also
98:29 - give it a height of 100
98:33 - so now it's looking a little bit better
98:35 - now we just need to go ahead and style
98:37 - these so let's create styles for author
98:39 - container and we'll also need to create
98:41 - a styling for author profile image
98:43 - container
98:44 - so let's do that
98:46 - all right so as far as my profile image
98:49 - container is concerned i'm going to give
98:52 - it a height of 5 rem we're going to give
98:55 - it a width of 5 ram we're going to make
98:59 - sure it's rounded full and we're going
99:01 - to hide the overflow on it so there we
99:03 - go so now the image is looking good now
99:05 - we need to take care of the author
99:07 - container and all we really need to do
99:08 - is just give it a margin from the top
99:11 - so it doesn't really touch that search
99:13 - bar and it just pops down below just
99:15 - like that there we go so
99:18 - it's starting to look a lot more like
99:20 - this
99:21 - right so our component is starting to
99:22 - look a lot better now what we need is of
99:25 - course the title so the it's going to go
99:27 - inside of our author container but
99:29 - obviously not in our image container so
99:32 - let's get outside of this container
99:34 - right here we're going to create a div
99:36 - and we're going to say hey for styles i
99:40 - want you to style it like author name
99:42 - and i'm just going to say rafika
99:44 - and if it has simple styling you can
99:46 - also obviously style it inline if you
99:49 - really want to really up to you i like
99:52 - how i style it because the only reason i
99:54 - like styling it this way is because your
99:57 - code remains very organized and you can
99:59 - see what the heck this is oh it's the
100:01 - author name and you get it this is
100:03 - styling for the author name when you
100:05 - just have a bunch of tailwind css right
100:07 - here in line for me that makes the code
100:09 - pretty unreadable and i have no idea
100:11 - like what's going on like i like seeing
100:13 - that search bar i like seeing it's a
100:15 - search input makes the code very
100:16 - readable so i like this way of doing it
100:19 - so let's go ahead and we're going to go
100:20 - author name and for the author name
100:23 - styling we're gonna make the font semi
100:25 - bold give margin bottom just slight
100:28 - margin bottom and slide margin top more
100:31 - than slide we're giving it a one margin
100:33 - top okay and after the title what we
100:36 - need is we just need the followers so
100:39 - i'm going to go ahead and i'm going to
100:40 - say div
100:41 - and here we're going to give it is
100:43 - styles dot author following and it's
100:46 - just going to say the number of
100:47 - followers so for now let's say whatever
100:50 - i'm just gonna hard code some number
100:53 - okay and author following we'll need to
100:55 - create styling for this as well and for
100:57 - the author following styling it's just
101:00 - gonna be text and it's gonna be like
101:02 - that gray text that we always use okay
101:06 - so now if i full screen this you can see
101:10 - zero followers one million followers
101:13 - will make the f's lower case so it
101:15 - really looks like the actual medium one
101:18 - zero follow one million followers cool
101:20 - now we're going to need those green
101:22 - buttons
101:23 - right underneath this okay and the green
101:25 - buttons are they are still part of the
101:28 - author container i imagine so let those
101:30 - let's put those buttons right underneath
101:33 - that bad boy okay so i'm going to go
101:36 - ahead create a div and this div is going
101:38 - to be we're going to say class name and
101:41 - styles.author actions
101:43 - and inside of here we're gonna have a
101:46 - button button okay and this button is
101:49 - gonna have a class name of action button
101:53 - and then we'll repeat this button again
101:55 - action button and this but the second
101:58 - button is going to have a component
101:59 - inside of it and it's going to be a
102:01 - self-closing component it's not going to
102:03 - be a button it's going to be email
102:05 - unread icon that we want to use okay so
102:08 - it should show up you can see the email
102:11 - unread icon is right there and then the
102:14 - first action button here will say follow
102:16 - okay so now we have two buttons now all
102:19 - we need to do is obviously we need to go
102:21 - ahead and style author actions and we
102:24 - need to style author buttons so let's go
102:26 - ahead and style author actions i'm going
102:28 - to make them flex enabled we'll give it
102:31 - a gap
102:32 - of
102:33 - 0.6 rem and then we'll give it some
102:36 - marginal of one room there we go okay
102:40 - and now time to style our action button
102:44 - so i'm going to copy this
102:45 - ignore that sound i apologize that's so
102:47 - i can focus
102:49 - let's go ahead and bring that down
102:51 - action button to my action button
102:54 - we'll have a background color all right
102:58 - let's go one a eight nine one seven so
103:01 - now we have a green color behind our
103:03 - action button we'll make the text white
103:06 - we'll make sure that it's rounded so now
103:08 - i'll look cleaner we have to add some
103:12 - padding to it so let's go
103:14 - add some padding in each direction so
103:17 - that's padding horizontal and py is
103:19 - padding vertical and we'll make the text
103:22 - small so it looks very clean
103:24 - okay so you can see that these
103:27 - components are now starting to look very
103:29 - similar now we just need this part more
103:31 - for medium and the rest of it that goes
103:33 - underneath so now
103:35 - at this point i believe that we're
103:36 - pretty much done with everything that
103:38 - goes inside of our author container and
103:40 - we're gonna basically get outside of our
103:43 - author container and now we're gonna
103:44 - make our recommendation container so if
103:47 - we look at our author container it
103:49 - starts right over here if i scroll down
103:51 - and it ends right over here so we're
103:53 - going to get outside of this and make a
103:55 - new div and this one is going to be
103:59 - styles.recommendation container all
104:01 - right and then inside of this
104:03 - recommendation container we can actually
104:05 - say things like more from medium so i'm
104:07 - going to give it a class name and we'll
104:09 - say styles that type more from medium
104:14 - and honestly that one doesn't even look
104:15 - like it needs too much styling because
104:17 - it looks just like this so sometimes
104:20 - we'll give them class lamps just so it's
104:22 - readable without even really the need to
104:25 - style it or do anything with it we'll
104:27 - create another div and this one will be
104:31 - articles container so this will contain
104:33 - the articles that we want to show
104:36 - so for the articles
104:37 - normally what we would do is we would
104:39 - loop through and show each article but
104:41 - for now we're just going to show the
104:43 - article okay we're just going to hard
104:44 - code it in so i'm going to say image
104:47 - and for the image let's just use what do
104:50 - we have we have the js logo in here so
104:53 - let's just use the js logo for now do we
104:55 - have the js logo ah it's capital s yes
104:58 - let's go capital s
105:00 - gs logo and let's give it
105:02 - a let's give it a couple of things so
105:04 - it's going to need yeah for articles
105:07 - container yep js logo and then right
105:10 - above the js logo so let's give it a
105:12 - height of 100 and a width of 100 and
105:16 - let's add another image and that'll be
105:18 - the image of the author so i'll just
105:20 - hard code quasi here okay great so if i
105:24 - look at the final version here we have
105:26 - the author image okay or the author
105:28 - image right here the title of the author
105:31 - and then that image over here on the
105:33 - right hand side right behind me the
105:36 - image of the actual article so this
105:39 - image we're going to wrap it inside of
105:42 - another class name and this class name
105:44 - is going to be a long one so let's just
105:46 - close the author image first and this is
105:49 - going to be we're going to say
105:51 - styles.recommendation author profile
105:54 - image container so very long name but
105:57 - don't let that scare you this is just
105:59 - styling for this guy right here so let's
106:03 - go ahead and create that styling profile
106:05 - image container
106:07 - and then we're going to say
106:09 - give me rounded full with overflow
106:12 - hidden and let's make it pretty small
106:15 - 1.4 rim and then width give me 1.4 rim
106:20 - and that's really it okay so that's now
106:23 - you can see it's a very small little
106:25 - thing right so that's where the
106:27 - recommendation
106:29 - for or the profile image is going to go
106:31 - now we also need to have another wrapper
106:34 - outside of that
106:35 - let's prettify it real quick where is it
106:38 - how do i purify it huh that's weird it
106:41 - just took away the thing to purify the
106:44 - code okay odd we'll just pretend like
106:46 - that never happened hey okay so let's go
106:49 - down here and we're gonna wrap this bad
106:52 - boy up and the class name here is going
106:56 - to be
106:57 - styles.recommendation author
106:59 - container and this is everything related
107:02 - to the author is going to go inside of
107:04 - that div okay so i'm going to do this so
107:07 - you can visually see this okay so
107:10 - everything related to the author is
107:11 - going to go inside of this div and then
107:13 - image container and i imagine the title
107:16 - of the author the title graphic is your
107:18 - clever programmer is going to go there
107:20 - too cool recommendation often container
107:23 - and then what we need is to put the name
107:26 - of the author so underneath this image
107:29 - we need to
107:30 - go ahead
107:32 - and create a new div and this div will
107:35 - have the class name
107:37 - of styles.recommendation
107:39 - author
107:40 - name and here we're just going to put
107:42 - the name of the author so i'll just say
107:43 - rafikaze okay and we're going to go
107:46 - ahead and style this guy recommendation
107:50 - author name so this one is going to have
107:52 - for recommendation author
107:54 - name we're just going to say
107:56 - text is going to be small
107:59 - so that's all the styling that we need
108:00 - for that
108:01 - and then recommendation author container
108:04 - i believe that we never created styling
108:06 - for this so
108:08 - let's go ahead and create the styling
108:10 - for that and for this we're going to say
108:12 - it's going to be flex we're going to
108:14 - make the items in the center and for the
108:17 - gap we're going to give it a 0.6 rem
108:20 - great so now if i full screen it this is
108:22 - what it's looking so far making good
108:24 - progress now we just got to make sure
108:26 - that we can have the article title show
108:28 - up as well so
108:30 - articles we have this articles container
108:32 - now we need to add the article inside of
108:35 - the article container okay so that's
108:38 - going to be or the that's going to be
108:39 - the recommendation title so let's create
108:42 - another div right underneath
108:44 - this one and let's see if these guys can
108:47 - go on the same div because that would be
108:49 - easier to read okay perfect let's create
108:52 - another div right here and this div is
108:54 - simply going to styles dot and we're
108:57 - going to say recommendation title so
108:59 - it's going to be the title of the
109:00 - recommended article
109:02 - and so for now we'll just copy this
109:06 - article name or let's copy another
109:08 - article name like for example the
109:09 - ultimate course beginners by clever
109:12 - programmer and we'll just pop that title
109:15 - right in there okay everything is hard
109:17 - coded for now the ultimate course for
109:19 - javascript beginners okay and now for
109:22 - recommendation title do we have that
109:25 - styled no we don't so let's go ahead and
109:27 - style it so for a recommendation title
109:30 - the styling is going to be pretty simple
109:32 - we're just going to make the font bold
109:34 - okay that way the font like really pops
109:37 - out all right what we need next is we
109:40 - need a recommendation thumbnail
109:42 - container and that we're actually gonna
109:45 - put outside of everything else okay so
109:47 - imagine it like this imagine this part
109:50 - right here as the articles container and
109:53 - then this part here it's gonna be on its
109:55 - own which is right behind me this part
109:58 - right here so we're still going to put
110:00 - it inside of the articles container but
110:02 - outside of anything to do with the
110:04 - author okay so if i go down right over
110:08 - here
110:09 - we can put it right within this
110:12 - right there where that logo is as well
110:14 - so this logo will be wrapped in
110:17 - recommendation thumbnail container so
110:19 - i'm going to say class name let's make
110:21 - sure that we close the div out first
110:23 - boom i'm going to say styles dot
110:26 - recommendation thumbnail
110:28 - container and then for the image we are
110:32 - going to style that as well so for the
110:34 - image i'm going to say class name it's
110:36 - going to be styles styles.recommendation
110:38 - thumbnail okay that's going to be the
110:40 - styling now let's go ahead and style
110:42 - recommendation thumbnail container and
110:44 - inside of recommendation thumbnail
110:46 - container i'm going to give it a flex 1
110:49 - item center we're going to center we're
110:52 - going to justify it
110:54 - in the center we're going to give it a
110:56 - height of 4 ram and a whoops height of
111:00 - 4 ram and a width of 4 ram okay so now
111:05 - it's looking much better and then we're
111:07 - gonna go ahead and style our
111:09 - recommendation thumbnail as well so
111:12 - let's go ahead and style that and for
111:14 - our recommendation thumbnail all we're
111:16 - gonna say is object cover that's it okay
111:19 - we're done with that and now you're like
111:22 - looking at it you're like wait this
111:23 - looks weird all we need to play around
111:25 - with now is really the wrappers right
111:27 - and the wrapper we wrap it and we just
111:29 - say hey flex and then this will pop up
111:32 - over here to the right so let's work on
111:34 - our wrappers now or containers whatever
111:36 - you want to really call them but i'm
111:38 - just calling them wrappers for short all
111:40 - right so we have our articles container
111:42 - but that is actually going to have a
111:43 - couple of things inside of that okay so
111:47 - we're gonna
111:48 - wrap everything up in
111:50 - let's go class name i'm gonna say
111:53 - styles.article
111:55 - content wrapper okay and then we're
111:58 - gonna have another div that we're gonna
112:00 - do but first let's go ahead and cut this
112:03 - out and put this div in the right spot
112:05 - that's gonna be very important so this
112:07 - article content wrapper is gonna pretty
112:09 - much wrap up the entire thing so we can
112:12 - put that really anywhere we want just at
112:14 - the end okay and then within this
112:16 - article content wrapper we're going to
112:18 - have article content okay so let's go
112:21 - class name and we're going to say
112:22 - styles.article oh i misspelled this full
112:25 - content and we're going to say article
112:27 - content okay and that's gonna wrap
112:30 - everything that has to do with the
112:32 - article so that's not going to do
112:34 - the recommendation thumbnail okay so
112:36 - let's put that div right over here all
112:39 - right now let's go ahead and style our
112:40 - article content wrapper so i'm going to
112:43 - go here
112:44 - and we're going to style it so for my
112:46 - article content wrapper
112:48 - the styling is going to be fairly simple
112:50 - and what i'm going to do is i'm just
112:52 - going to say hey flex item center we're
112:55 - going to justify it
112:57 - in between make sure that the cursor
112:59 - turns into a pointer when i hover over
113:01 - it and let's give it a vertical margin
113:03 - of
113:04 - one room okay there starting to look a
113:06 - little bit better
113:08 - don't worry we'll get that image back to
113:10 - in just a second now the next thing that
113:12 - we have to style is we styled our word
113:16 - where'd it go we styled our article
113:19 - wrapper right we styled our article
113:22 - content wrapper now we need to style our
113:24 - article content so let's copy this let's
113:27 - go
113:27 - here and for article content we're
113:30 - simply just going to give it a flex of
113:32 - four there we go and now we can see this
113:36 - guy right over here we can see the title
113:38 - and we can see the image
113:40 - all right so it took me like 30 minutes
113:42 - to find the freaking bug of why this is
113:45 - looking
113:46 - like this and i was like what is going
113:48 - on i didn't make it like this why does
113:50 - it look like garbage
113:52 - because what's supposed to happen right
113:54 - is
113:55 - the title should go above or sorry the
113:58 - author info should go above and the
113:59 - title info should go below if you look
114:02 - at this
114:02 - the author info and the title are in the
114:04 - same line just like what is going on
114:07 - took a while but then i realized that i
114:09 - took
114:10 - author container information and i
114:12 - wrapped it around even the
114:14 - recommendation title so i'm not supposed
114:16 - to wrap this around there so let's just
114:18 - cut this line and move it up until it
114:22 - just wraps the author info so this
114:24 - should just be wrapping the author info
114:26 - and once you do that
114:28 - this should become clean as a whistle
114:31 - clean as a whistle okay and now this
114:34 - component that we have is called
114:35 - recommendations and recommendations can
114:38 - take in info like the author okay so you
114:41 - can we can actually make the author
114:43 - dynamic already if we wanted to we could
114:46 - make it where when we get back to author
114:48 - we can get the image from the author all
114:50 - of that okay but this destructuring is
114:53 - going to come handy later not right this
114:56 - second but this will be super useful
114:58 - because when we're calling this
114:59 - component we can pass the name of the
115:00 - author and then everywhere i'll just
115:03 - pull it in there where we will get the
115:05 - author info from including the name and
115:08 - the image is actually from when the user
115:11 - signs up with firebase and logs into the
115:14 - application upon the authentication of
115:16 - the user
115:17 - we can extract their info thanks to
115:20 - firebase so there you go our
115:22 - recommendations is pretty much done if
115:24 - you want to go ahead and test it you can
115:27 - go to which page should be good so i
115:29 - think we'll go to our po slug so let's
115:33 - go to our slug page and if you want to
115:35 - test recommendations you can we can copy
115:37 - these recommendations and paste them a
115:39 - few times and then if i look here you'll
115:42 - be able to see these recommendations
115:43 - this is the entire recommendations
115:45 - component that's not what we wanted we
115:47 - just want this article thing right here
115:48 - to show up multiple times so
115:50 - once we can actually extract data from
115:52 - firebase what we'll do simply is this
115:54 - entire part will wrap it up in a for
115:56 - loop and then we'll just loop through it
115:59 - and then it'll show like each article
116:01 - okay like a recommended article so all
116:04 - good for now
116:06 - we are done with recommendations front
116:09 - end and we can move on and do other
116:12 - things in our life
116:13 - all right so now the next thing we want
116:14 - to work on is our article main
116:18 - which is this bad boy right over here so
116:22 - let's go ahead and create a new
116:24 - component inside of our components and
116:27 - i'm going to call it article
116:29 - main.js just like that all right now
116:32 - that i have this component we're simply
116:34 - just going to go ahead and say call
116:36 - article
116:37 - main okay and this is going to
116:40 - return and i'm just going to say
116:43 - h1 article main for now
116:46 - and then we're just going to go ahead
116:48 - and export default article main just
116:51 - like that now we're going to go back to
116:53 - our recommendations
116:55 - sorry not recommendations we're going to
116:57 - go back to our pages and inside of our
117:00 - pages we're going to go inside of slug
117:03 - and this here will replace with
117:07 - article
117:08 - main now we're gonna get an error that's
117:10 - fine just replace here article main and
117:14 - it will import it in just a second okay
117:16 - great now it should say article main
117:18 - right there let's go back
117:20 - to article main beautiful okay now we're
117:22 - gonna start working on our article main
117:24 - so let's
117:26 - start speeding up through some of the
117:27 - styling because a little bit of it is
117:29 - getting repetitive so wrapper we're
117:32 - gonna have a wrapper for this and for
117:34 - the wrapper we're gonna say hey give me
117:37 - item center justify it in the center
117:40 - okay and then i want a flex of three
117:44 - border left
117:46 - and a border let's wrap
117:49 - that in
117:50 - our class name of styles.wrapper just
117:54 - like this let's go ahead and make sure
117:55 - it's looking good okay there we go now
117:58 - article main is taking up really good
118:00 - space and you can see what the wrapper
118:01 - is looking like and what the wrapper is
118:02 - doing now we're gonna wrap it up one
118:05 - more time inside of
118:07 - content and our content is going to say
118:10 - hey take up the height of the screen
118:12 - make sure make sure that there is a
118:15 - scroll on overflow and make sure that
118:18 - there's a padding of two
118:20 - ram so i'm going to add another div
118:22 - right here we're going to give it a
118:23 - class name
118:26 - styles.content and we're going to wrap
118:28 - this around the whole thing as well
118:31 - there we go okay so there we have
118:33 - article main and we have our content and
118:36 - there's a scroll bar so now if we have
118:39 - to scroll up and down for articles we
118:41 - can actually see where to scroll like
118:44 - here if there's an article we can see
118:47 - the scroll bar so we can scroll up it
118:48 - now all right now over here we can call
118:51 - this article header or post header and
118:54 - whatever you want so let's go
118:56 - back to our post and
118:59 - on my apologies let's stay in article
119:01 - main and we'll add a post header so
119:05 - let's go ahead and do that i can remove
119:06 - this for now and we're just going to go
119:08 - ahead and say div
119:09 - and i'm going to say class name and
119:11 - we'll say styles dot
119:15 - post header container okay so this is
119:18 - going to be the container and then
119:20 - inside of this container we're going to
119:22 - have a couple of other containers so
119:24 - we're going to have
119:25 - class name
119:27 - styles.author container
119:29 - and then
119:30 - within that
119:32 - we're going to have
119:33 - div
119:34 - class name and we're going to do
119:37 - styles.author profile image container
119:41 - just like that all right and the idea
119:44 - here is
119:45 - we have our post header container and
119:47 - then we have our author container and
119:50 - then we have our author profile image
119:52 - container
119:53 - right so that's where all the containers
119:55 - are coming from now within that image
119:58 - container we're gonna add in our image
120:00 - so we're gonna go image just like this
120:03 - and we need to import it from next so
120:05 - import image from next image and for the
120:08 - image right now we're gonna give it some
120:10 - properties and i'll say class name is
120:13 - going to be styles.image
120:16 - source is just going to be copy for now
120:18 - oh we have to import quasi so let's go
120:21 - to
120:21 - recommendations because i believe that's
120:23 - where we had imported quasi let's copy
120:26 - this let's go back to
120:29 - our article main and simply import quasi
120:32 - there okay and give it a width of 100
120:36 - and a height of 100. all right so we see
120:39 - quasi image
120:41 - showing up okay good good now
120:44 - we need to get outside of that image
120:46 - container because we're done
120:48 - dealing with this part right here let's
120:50 - go down and in the author container
120:53 - we're going to go ahead and actually go
120:55 - and create class name and we're going to
120:57 - say styles and we'll give you the style
120:59 - called column and inside of this column
121:02 - we are going to
121:04 - have our author name okay so here we're
121:06 - just going to say rafikaze okay and then
121:09 - underneath that
121:11 - we're going to have our
121:13 - post detail so we're going to say
121:14 - style.post details and then for the post
121:18 - details
121:19 - i'm going to let me close this here
121:21 - we're gonna have a span tag because it's
121:23 - gonna be in one i'm just gonna say june
121:26 - 15th
121:28 - and we'll give it a
121:30 - read so we'll say seven men read and
121:33 - we'll give it another span tag here and
121:37 - we will give it an icon so this span tag
121:40 - will have a style of all these styles
121:43 - that listen button okay and then within
121:45 - the span tag itself go right there we're
121:48 - going to put an icon and this is going
121:50 - to be ai fill play
121:53 - circle icon and it's just going to say
121:55 - the word listen next to it because what
121:57 - we're creating here is that listen
121:59 - button right there
122:00 - so the play icon plus
122:03 - where it says listen all right now we
122:04 - need to import this of course so we're
122:07 - going to go ahead and import this from
122:09 - the top so i'm going to say import
122:11 - and we'll say ai fill
122:14 - place circle
122:16 - from react dash icon slash ai just like
122:20 - that okay let's go back and you can see
122:23 - that our icon is now showing up okay
122:25 - very good let's keep on going with this
122:28 - now the next thing we need is obviously
122:30 - we need the social
122:32 - stuff to show up so this stuff right
122:34 - over here and before we do that let's
122:37 - style everything that we have here so
122:39 - far so we've styled our wrapper and
122:42 - content now let's style our post header
122:45 - container and for the post header
122:47 - container the styling that i want is i
122:49 - want it to have flex i'm going to say
122:51 - have justify between we're going to put
122:53 - the items in the center and then margin
122:56 - top is going to be
122:58 - 2.2 and then margin bottom will give it
123:01 - a 1.2
123:03 - ram okay all right there we go good the
123:06 - next thing that we actually need here is
123:08 - we need to style our author containers
123:11 - so let's
123:12 - do that okay so for author container
123:14 - we're gonna have a flex and then we're
123:17 - gonna say gap of one rim okay there we
123:19 - go so we got a nice little gap
123:22 - and it's starting to look better
123:23 - starting to look more like this one over
123:25 - here you got your picture on the left
123:27 - hand side the name on the right hand
123:29 - side and then the title and everything
123:31 - all right after author container we need
123:33 - to style our author profile image
123:36 - container so we're going to style our
123:38 - image right over here so let's give it a
123:41 - height of 3 ram we will give it a width
123:45 - of 3 ram a grid i'm going to center it
123:48 - and we're going to say rounded full and
123:50 - we're going to say overflow hidden let's
123:52 - take a look
123:53 - okay our app crashed and if that ever
123:56 - happens just you can always go back or
123:59 - refresh
124:00 - and that should do the trick so let's
124:02 - click one of these articles should bring
124:05 - us here perfect so now our image is
124:07 - looking circular let's close this okay
124:10 - now we need to style this image because
124:13 - we have this image class so let's go
124:15 - ahead and do that and for image all i
124:18 - really need to do is i don't even need
124:20 - to really style it anywhere else we can
124:22 - just style it right here and i just want
124:24 - to say for my image i want to say object
124:27 - cover so just that's it okay there and
124:32 - then we need to style our column so
124:34 - let's go ahead and style our column boom
124:37 - boom okay for a column we need to have
124:40 - flex 1 flex make sure it's flex column
124:43 - and then we're going to say justify
124:44 - center all right now it's looking a lot
124:47 - better and then let's work on the post
124:50 - details and style them as well so we're
124:52 - going to start our post details suppose
124:55 - details contains pretty much our you
124:58 - know the date the time the length and
125:02 - whatever else so let's go ahead
125:04 - style our post details i'm going to do
125:06 - this
125:07 - okay and for post details the styling
125:09 - that i actually want to give it is make
125:11 - sure we have flex
125:12 - a gap of
125:14 - 0.2 rem and then text is going to be
125:16 - that gray text i'm going to say 7 8
125:18 - eight seven eight seven eight awesome
125:21 - all right and then
125:23 - last thing that we need to style for now
125:25 - is that listen button so that actually
125:27 - looks
125:28 - green and looks how we want it to look
125:31 - so for the listen button we're going to
125:33 - enable flex i'm going to say give a gap
125:36 - of one rem
125:37 - we will oh i apologize for listen button
125:40 - we won't do that we'll do flex
125:42 - and then we'll say item center
125:45 - will give a gap of only 0.2 rem okay and
125:49 - then we'll say text and for the text we
125:52 - will go
125:53 - 188917
125:56 - all right so it's going to give it that
125:57 - like greenish text because that
126:00 - scrolling thing looks ugly right now
126:02 - let's just remove it we can always add
126:04 - it to the content afterwards because
126:07 - without it it looks way cleaner yeah so
126:10 - let's just keep that removed for now now
126:12 - outside of getting outside of our author
126:15 - container so if i just look down right
126:17 - here
126:19 - line 38 is where i get out of my author
126:22 - container so getting out of my author
126:23 - container i do need to add information
126:26 - about the socials so we're going to go
126:28 - ahead and we're gonna do div i will say
126:30 - class name
126:32 - styles oops let's go styles.socials
126:35 - and then within these socials we're
126:38 - gonna add in all of our social icons
126:40 - okay so let's go ahead and import all of
126:43 - the social icons that we actually need
126:45 - first so here we're going to need to
126:47 - import
126:48 - our twitter logo we're going to need our
126:51 - facebook logo linkedin
126:53 - outline link and a bookmark link and
126:56 - then a horizontal
126:58 - link okay so
127:00 - we need
127:01 - this guy
127:02 - link a bookmark link and then the
127:04 - horizontal like bots all right so now
127:07 - that we've imported them we need to
127:09 - actually be able to use them and so
127:11 - we're going to be using all of these
127:12 - inside of our socials okay so inside of
127:15 - our socials i want to just say hey io
127:18 - logo
127:19 - twitter all right we're going to go fa
127:22 - facebook wow i can actually even import
127:24 - that's super cool but we're just gonna
127:27 - do this
127:28 - we need gr linked we need
127:31 - outline link
127:33 - and then we need a div here that's self
127:35 - closing actually it'll have a class name
127:38 - of styles.space we'll create the styling
127:40 - for this afterwards hold on this is a
127:43 - self-closing div
127:45 - cells that space okay close that
127:48 - squiggly there that's what i forgot to
127:49 - do last time let's get our bookmarks and
127:52 - then let's get our horizontal
127:55 - collapsible dots so let's style socials
127:58 - and let's style space so i will do
128:00 - socials
128:01 - and we'll go like this
128:04 - and we'll do space
128:06 - now for styling socials we need to make
128:09 - sure that we have flex enabled right
128:11 - because look at them right now they're
128:13 - on top of each other that's silly that's
128:15 - not what we want so let's go flex that
128:18 - already will take care of that problem
128:21 - and then we're gonna give a gap of one
128:23 - rem between each
128:25 - will give a gray text so we'll do the
128:28 - seven eight seven eight seven eight and
128:30 - then we'll make sure that the cursor or
128:32 - cursor is pointer when i hover over it
128:35 - so now it's looking way better yeah like
128:38 - when you hover over it look at that
128:40 - looks really clean the reason why listen
128:43 - is for not form it needs to be inline
128:46 - but it's like getting on a new line all
128:49 - we have to do here is we're closing the
128:51 - span tags here so let's actually close
128:53 - the first span tag first and then we can
128:56 - actually close the second span tag after
128:59 - and once we can do that listen will
129:01 - actually fall into its line meaning
129:05 - this should be its own span tag and then
129:07 - this should be its own span tag not they
129:10 - shouldn't be within each other okay so
129:13 - there we go so that should take care of
129:15 - listen now
129:17 - we've set up
129:18 - socials we've done the styling for
129:20 - socials completely now we just need to
129:23 - style space
129:24 - so let's go to space and we're going to
129:26 - say
129:27 - give me a width of 0.5 rem so that just
129:30 - added a little space right there
129:33 - okay and then
129:35 - after
129:36 - after space
129:37 - now we have the article main container
129:40 - right so this is going to be the main
129:42 - container where the article is actually
129:44 - going to go so we're going to need this
129:46 - boom container and that's going to
129:48 - contain all right so imagine this we
129:50 - have this article container and then
129:52 - within that
129:53 - we're going to have a banner container
129:55 - so this will be a
129:57 - banner container all right and then
130:00 - underneath that we'll have the
130:02 - underneath that we'll just have the
130:04 - actual article so that will have the
130:06 - article text and everything okay so
130:08 - let's go ahead and create our article
130:10 - container div now and article main
130:13 - container is actually going to be
130:15 - outside of our post header
130:17 - container as well
130:19 - so let's scroll all the way down all the
130:22 - way down and on line 55 56 it ends and
130:25 - this is where we're going to create it
130:27 - so we're going to go
130:28 - class name i'm going to say
130:29 - styles.article
130:31 - main container all right and then within
130:34 - that we will have
130:36 - our banner so i'm going to say class
130:38 - name and we're going to say files dot
130:41 - banner container okay and then within
130:43 - the banner container we will have the
130:46 - image that we're looking for okay so we
130:49 - need a banner image which is like we're
130:52 - gonna need a big image now
130:54 - i've used a banner image already in one
130:56 - of our components earlier so
130:59 - let's just reuse that so from banner
131:02 - boom let's go back
131:04 - to our article main.js and at the top
131:08 - let's paste this
131:09 - and instead of saying logo we'll say
131:11 - banner import banner from banner all
131:13 - right let's go all the way down and
131:15 - we'll have the self-closing image
131:18 - and for the source we'll say banner for
131:21 - the
131:22 - height we'll give it 100 and for the
131:25 - width we'll give it 100 and the style
131:28 - this will have so we'll say class name
131:31 - and we'll say styles.image
131:33 - okay and then we'll simply go ahead and
131:36 - so this will just inherit the style that
131:38 - we've already created for image so this
131:40 - will just reuse it okay so there we go
131:43 - it's showing up now let's go and style
131:46 - our
131:47 - banner container and then our article
131:49 - main container so let's go here and for
131:52 - our banner container the styling that i
131:54 - want to go with is i'm going to give it
131:57 - a height of 18
131:59 - rem okay this is going to make the
132:01 - height pretty big
132:02 - and i want to go with full so i want it
132:05 - to be like as wide as as it possibly can
132:09 - be all right and then i want to go grid
132:12 - center i want to hide the overflow and
132:15 - then we want to give a margin bottom of
132:18 - to rem so there we go now we got an
132:20 - actual banner image
132:22 - going okay next up we're gonna style our
132:26 - article main container so let's go ahead
132:28 - and get to work in our article main
132:30 - container and for article main container
132:32 - i'm to give it a flex i'm going to make
132:34 - sure it's flex column and then we're
132:35 - going to give it a gap of one room all
132:38 - right there we go so now these are
132:40 - starting to actually look good we just
132:42 - have to also create our image class our
132:45 - image class is really just object cover
132:47 - so let's go ahead and do that now image
132:49 - is just
132:50 - object cover okay that's it so now our
132:54 - image should look better all right so
132:57 - rumplet this will happen from time to
132:59 - time it goes to sleep so just remember
133:02 - because i was like why is it not
133:04 - changing anything so let's go here and
133:06 - let's go yarn dev
133:08 - and now we should be
133:10 - now we should be actually good to go so
133:12 - if i go in here we refresh this let's
133:15 - wait for it all right so here's how we
133:18 - can get this to be
133:19 - full width well it's very simple we just
133:22 - have to tell the computer hey go into
133:24 - full width all right so just go to
133:27 - content and just type in full width okay
133:31 - and that will push it out and your
133:34 - article main is going to start looking
133:36 - way way way better right obviously we
133:38 - need a better image but this image is
133:39 - okay for now now the next thing we
133:41 - actually need is we need to actually
133:43 - start working on the
133:45 - you know the actual body of the article
133:48 - body yeti so how we're going to do that
133:51 - is
133:52 - underneath our banner container so
133:56 - banner container and right over here and
133:59 - right underneath this
134:00 - we're going to make an h1 and it's going
134:03 - to have a class name and we'll say
134:05 - styles.title
134:06 - okay and we're simply going to just
134:08 - write the title of the article
134:11 - so in the final version it's this right
134:14 - there so i'm going to post that right
134:16 - here seven free tools that'll make you
134:18 - more productive in 2021 and then we're
134:20 - gonna add h4 underneath that and the h4
134:24 - will have a class name and we're going
134:26 - to say styles.subtitle
134:29 - okay and then subtitle will have a div
134:34 - and that div will have
134:36 - this will this is not going to have any
134:38 - styles is this we'll say
134:41 - name of the person so say rafikaze so
134:43 - let's look at the final version right
134:45 - rafikaze and then you got the date so
134:47 - let's go ahead and put our dates we're
134:49 - gonna say june 15 2022 just like that
134:52 - june 15 comma 2022 productivity is a
134:55 - skill that can be learned and then you
134:57 - have the entire body of the article all
134:59 - right so let's go ahead and
135:02 - add in the entire body of our article
135:04 - before we add in the body body of our
135:06 - article we're gonna just add in the
135:08 - quick brief so i'm gonna say right here
135:10 - and we'll add in our brief okay so right
135:14 - now i'm just gonna write the word brief
135:15 - next to it and boom go back and i'll
135:19 - just paste our brief okay productivity
135:21 - is a skill that can be learned and then
135:24 - we'll have our entire article and our
135:26 - entire article will be right underneath
135:28 - this h4 and we'll say class name and
135:31 - we'll say styles dot article text
135:34 - article text and then we'll just put the
135:37 - article text okay so for now
135:40 - i'm going to just copy this
135:42 - and paste it over here to represent
135:44 - that's an article okay let's look at our
135:46 - app boom
135:48 - looking nice now all we have to do here
135:51 - all we have to do here is we just have
135:53 - to go and style this so let's go ahead
135:56 - and style everything so for example
135:58 - title we need to go ahead and style that
136:01 - so let's go add title here and for title
136:04 - we're going to keep it simple we're just
136:06 - going to say hey give me font bold and
136:08 - make it very large so we're going to set
136:10 - text 3xl so that'll take care of our
136:13 - title okay
136:14 - now let's do
136:16 - get 3xl there we go it's big it just
136:19 - took a second so we got our title now we
136:22 - need to style our subtitle and for our
136:25 - subtitle i'm going to say font medium
136:27 - serif
136:28 - italic and then for text i'm going to
136:31 - say 1.4 rem
136:32 - and we're going to give it
136:35 - a 2 9 2 9 2 9. there we go so we got our
136:38 - text looking different for the brief or
136:41 - the subtitle and then here we're going
136:43 - to say article text and then for my
136:46 - article text i will have font
136:49 - medium serif we'll do the same thing all
136:52 - right it's just not going to be italic
136:54 - so we can actually just go ahead and
136:56 - copy this
136:58 - and simply paste that right over here
137:00 - there we go okay now we got our text
137:02 - showing up so look at that our article
137:04 - main is looking good our recommendations
137:07 - are looking great our
137:09 - sidebar is looking awesome right now
137:12 - like the last piece of the puzzle really
137:14 - is to make the data
137:16 - dynamic i mean that's kind of that's
137:19 - kind of really it so if we can make the
137:21 - data dynamic then
137:23 - we're good okay let's just see if
137:25 - there's anything else left to finish so
137:27 - we're going to
137:29 - look here
137:30 - there's not much left to finish honestly
137:32 - because we can scroll up and down here
137:34 - right i can scroll up and down on this
137:36 - article on the right hand side we have
137:38 - our
137:39 - followers and buttons and suggestions
137:42 - more from medium on the left hand side
137:44 - we have our nav bar so in terms of like
137:46 - the front end honestly with majority of
137:48 - the front end we're completely done now
137:51 - all we need to do is connect our
137:53 - firebase at a database and then be able
137:56 - to actually pull all this data from our
137:58 - database so with that said that's what
138:00 - we're going to work on next one thing i
138:02 - just want to do before we continue with
138:04 - adding firebase is i just want to make
138:06 - it the recommended posts actually show
138:09 - all the recommended posts
138:10 - or like more so at least it looks kind
138:12 - of nice so we're going to go ahead and
138:14 - create an array of recommended posts
138:17 - array of objects rather so we're
138:19 - basically going to say let's go into
138:22 - recommendations first recommendations
138:24 - and underneath here i'm going to add in
138:25 - like some static data so i'm going to
138:27 - say recommended posts
138:29 - just like that
138:30 - and it will be an array and i will say
138:33 - title
138:34 - we'll say what can you do with
138:37 - replit okay and we'll for image i'm
138:40 - going to use the replit logo okay
138:43 - hopefully we've imported this at the top
138:45 - already yep we have and then we have the
138:47 - tutorial image as well so replit logo
138:50 - and then the author
138:53 - is going to be name
138:54 - clever programmer for this one and then
138:58 - image is going to be cp then we're going
139:01 - to take this guy we're going to put a
139:03 - comma comma right here okay and then
139:06 - we're gonna paste it again and paste it
139:09 - again so we should have three
139:11 - different ones okay this the second one
139:14 - is gonna be the title is gonna be the
139:15 - ultimate javascript developer course for
139:18 - beginners the image is going to be the
139:20 - tutorial image
139:22 - and then name is going to be rafikaze
139:25 - and then the image is going to be quasi
139:27 - okay and then the last one is going to
139:30 - be how to become a developer in 2022 and
139:34 - this is going to have the js logo name
139:37 - is going to be clever programmer and
139:39 - we're going to leave this as cp logo
139:41 - okay cool so recommended post now we're
139:43 - going to turn this into a little bit of
139:45 - dynamic data meaning we're just going to
139:48 - write a simple loop and we're going to
139:49 - loop through this so article mean
139:52 - where's the article main container let's
139:53 - look for it
139:54 - article content wrapper rather it's
139:57 - article content wrapper okay so this is
139:59 - where our loop will start so we'll go
140:00 - through recommended posts dot map and
140:04 - for each post
140:06 - we'll do the following okay and then
140:08 - we're gonna wrap up this entire thing
140:11 - all of this up so where does article
140:13 - content wrapper end article content
140:16 - wrapper ends right there so we're gonna
140:18 - wrap that bad boy up
140:20 - with that that so we'll close this and
140:24 - that okay that's why we have paren paren
140:27 - and then a squiggly okay so now all of
140:29 - this stuff here is going to be looping
140:30 - through all right now everywhere we
140:32 - actually need access to so this should
140:34 - give us three articles basically because
140:37 - it's looping through three times for now
140:40 - because we only have three things in
140:41 - that array all right let's close this
140:44 - out so you can see that we're getting on
140:46 - the right hand side we're getting three
140:48 - articles and all of them recommended
140:49 - articles and all of them are js logo now
140:52 - what we want to do is we want to
140:54 - actually get that specific post title
140:57 - and name and everything so we're going
140:59 - to go post dot
141:00 - author dot name post.author
141:05 - post.author.name like that okay and that
141:08 - should get us the actual author name so
141:09 - you can see clever programmer rafikaze
141:11 - clever programmer right so author names
141:13 - are correct and then here
141:16 - this is the title so we're just going to
141:19 - do
141:20 - post.title and then here is going to be
141:24 - post
141:25 - dot image okay suppose dot image let's
141:29 - take a look boom there we go actually
141:32 - that's the wrong place to put the post
141:34 - image because that's where the author
141:35 - image actually goes so we're gonna go
141:37 - and say author dot image and then this
141:40 - right over here we're gonna instead of a
141:42 - hard-coded js logo i'm gonna say
141:44 - post dot image okay and now let's look
141:47 - at it and boom look at that the right
141:50 - hand side is looking clean now looks
141:54 - super right that looks awesome we got
141:57 - the js logo we got all the titles
141:59 - showing we got everybody showing so now
142:01 - our our recommendations look a lot more
142:03 - complete so that makes me happy now we
142:06 - can actually continue with the firebase
142:08 - stuff and then add all the database
142:09 - stuff all right let's go ahead and sign
142:12 - up for firebase so what you can do
142:15 - simply is just go firebase.com and uh if
142:20 - you haven't created an account ever go
142:22 - ahead and create an account for them and
142:24 - what i do is i'm just gonna go into this
142:26 - right here and then simply just click go
142:29 - to console okay hit go to console and
142:32 - then it should bring you here now we're
142:34 - just gonna add project and we're just
142:35 - going to say
142:36 - whoops we're going to write the project
142:38 - name and we're just going to say medium
142:41 - clone
142:42 - replit okay
142:43 - yep okay hit continue and um yeah we
142:46 - don't need to include analytics if you
142:48 - want you can just say include analytics
142:51 - but i don't really care for it right for
142:54 - this app so if i don't need it i'm just
142:56 - going to disable it okay but it doesn't
142:58 - really matter either way whichever
143:00 - option you choose is totally fine so
143:02 - we're just going to wait for this to
143:03 - finish up and then once it finishes up
143:05 - we are
143:07 - we'll need access to the web but for now
143:09 - all we'll do is we'll go into build and
143:12 - we'll just click firestore database so
143:14 - we're going to create a new like
143:16 - database that goes along with this okay
143:18 - and simply hit create database right
143:21 - there okay i'll zoom in so it's like
143:23 - clearer to see
143:24 - hopefully and we'll just go in and yeah
143:27 - we'll just start our app in production
143:29 - mode normally that's not a good idea for
143:31 - this app it's just for dummy purposes
143:34 - and we're building it for ourselves so
143:36 - it's totally fine let's put it in
143:37 - production mode and it'll be great for
143:39 - your portfolio as well so it's going to
143:41 - provision this cloud firestore and then
143:43 - once that's done you can actually we can
143:45 - go ahead into that database and we can
143:47 - actually start adding data in there and
143:49 - then we can actually go ahead and also
143:51 - retrieve that data so we're going to
143:52 - start a collection here and this
143:54 - collection we're simply going to call it
143:56 - articles okay we're going to give it an
143:58 - auto id and articles will have a couple
144:01 - of fields we'll have author we will have
144:05 - banner image which will just be a string
144:08 - yeah and
144:09 - author will be a string we will have
144:12 - body which will be a string we will have
144:14 - brief
144:15 - which will also be a string we will have
144:18 - category which will be a string and
144:21 - we'll have post length which
144:23 - will be a string and then we'll have
144:26 - posted
144:27 - on and this will be a actual date
144:30 - time stamp okay and so like we can
144:32 - choose when this article was posted so
144:34 - let's pour post it on saturday at
144:37 - i don't know
144:38 - whatever that's the time it was posted
144:40 - on perfect and then we'll have one more
144:43 - field and we'll call this title great
144:46 - now we need to actually give these
144:48 - values so for author i'm going to give
144:50 - it a value of kazeacleverprogrammer.com
144:53 - just an email for banner image you could
144:56 - choose whatever image you want but i'm
144:58 - just gonna choose this image you can
145:00 - literally google any image and just pop
145:02 - that here okay i had an image already
145:04 - saved to my clipboard so i'm just using
145:06 - that for body
145:08 - we can add in
145:10 - whatever we want i added in that entire
145:12 - article thing that we had in replit so
145:15 - if you want to get access to that you
145:17 - can go ahead and just like wherever we
145:19 - had that article let me go back i think
145:22 - an article main just grab this
145:24 - copy this come back here and just paste
145:27 - that body right there for
145:29 - brief
145:30 - we're gonna go ahead and say hey
145:32 - productivity
145:33 - is a skill that can be learned category
145:37 - we'll just say it's productivity post
145:40 - length we'll say it's five post links
145:42 - really just means how long does it take
145:43 - to read so we're basically just saying
145:45 - it takes five minutes to read and then
145:47 - for the title you know this is the seven
145:49 - free
145:50 - tools to help you make product become
145:52 - productive and twitter sound free tools
145:54 - that will make you more productive in
145:56 - 2022. you could call the title whatever
145:58 - you want okay
146:00 - and now we just hit save on this
146:03 - so it was not allowing me to save for
146:04 - whatever reason but i just deleted this
146:06 - g
146:07 - added it back and now it's allowing me
146:09 - to save so hopefully if it was causing
146:12 - the same problem that's how you can
146:13 - overcome that so let's hit save and
146:15 - that's one
146:17 - juicy meaty article saved okay we can
146:21 - also add in users so we'll start another
146:23 - collection we'll call it users and then
146:25 - inside of our users collection we'll
146:28 - create an auto id and the fields that
146:31 - we'll need okay this is to mimic what a
146:32 - user will be like in our database once
146:35 - we have them for now we'll just hard
146:36 - code it and we'll basically say hey i'll
146:39 - have a user with that email you could
146:41 - put your email if you want the email
146:43 - will just be a string we'll have a
146:44 - follower account which will be in number
146:47 - and we'll just set it to zero for now
146:49 - and we'll have a field for
146:52 - image url so this will be the image of
146:55 - the user okay i have
146:58 - my image already
146:59 - but again you can go to google grab any
147:02 - image okay and put it here so for
147:04 - example you could do leonardo dicaprio
147:06 - right and then just go to images
147:09 - you can right click copy image address
147:11 - and you can just paste that here that'll
147:13 - work too all right so we got our image
147:15 - url and then we'll put our name and for
147:18 - a name we'll say rafa qazi great oops
147:21 - what did i just do i deleted something
147:23 - crap didn't i delete one oh yeah
147:25 - follower account all right this will be
147:28 - a number and we'll say zero
147:30 - okay let's hit or let's give a specific
147:32 - number let's just say
147:34 - 273
147:37 - 000. all right so now we got email we
147:40 - got follower account we got image url
147:42 - and name so we got all of these things
147:44 - so this will represent what our database
147:46 - will look like in its final version
147:48 - except the only new thing that our
147:50 - database will really have is we'll also
147:53 - we'll have more
147:54 - documents inside of articles and we'll
147:56 - have more documents inside of users okay
147:59 - and how firebase works is you have a
148:02 - collection inside of that collection you
148:04 - have documents and inside of that you
148:06 - have like inside of that document that
148:08 - document is made up of multiple fields
148:11 - okay so you can add a field in there all
148:13 - right so
148:15 - pretty simple what we're trying to
148:17 - create is relatively simple now that we
148:19 - have all of this set up what we do need
148:21 - to do is go and get our configuration
148:23 - information so we can actually set this
148:26 - bad boy up otherwise we won't be able to
148:28 - use it okay so yes
148:30 - i don't need it for hosting we'll
148:32 - register the app medium
148:34 - cp replit register app doesn't really
148:37 - matter what you call it and then it's
148:39 - going to give us information about the
148:41 - sdk and how we can actually use it okay
148:44 - so
148:44 - let's go ahead and
148:47 - grab all of this info we're going to
148:50 - need that so hit copy and then we're
148:52 - also going to need to install firebase
148:54 - so those are two important things now
148:56 - we're going to go back it said npm
148:58 - install firebase right so we're going to
149:00 - go back here we're going to open up our
149:03 - command line we're going to kill our
149:04 - terminal with control c and we're just
149:06 - going to do npm install firebase so we
149:10 - want to make sure that we have firebase
149:12 - installed okay and then we're going to
149:14 - need to put the firebase configurations
149:17 - in the right place so let's go ahead and
149:21 - get that all of that set up so here in
149:24 - our main inside of this medium cp right
149:28 - inside of this main folder right here
149:30 - click in we're going to add a new file
149:32 - we'll call this firebase.js
149:34 - okay and firebase.js will pretty much
149:37 - look like that file that we just copied
149:39 - with our configurations so let's paste
149:42 - that here for now and then we're going
149:44 - to fix it so i'm just going to do
149:46 - yarndev again so my server starts
149:49 - running and then i'm going to close this
149:50 - out okay so we need access to our api
149:53 - key auth domain project id storage
149:55 - bucket messaging sender id app id
149:58 - perfect that's good
150:00 - and then what we're going to need is we
150:02 - have our initialize app and we're going
150:04 - to need a couple of more things here so
150:06 - i'm going to say import we're going to
150:07 - say get auth because we're going to
150:09 - need to do authentication as well so
150:12 - we're going to say from
150:13 - firebase
150:14 - auth then we're going to say import
150:17 - google
150:18 - auth provider from firebase auth that's
150:21 - exactly right just like that okay and
150:24 - then we're gonna say import
150:26 - fire get fire store import get firestore
150:30 - from and then we're gonna do from
150:32 - firebase
150:33 - slash firestore okay
150:36 - and remove that at sign we don't need
150:38 - that okay there we go oops fire store
150:42 - misspelled it perfect all right now this
150:45 - is looking clean and the last thing we
150:47 - want to do is we got our const app and
150:51 - we're going to get our auth we're going
150:53 - to say get auth
150:55 - and pass it the app we're also going to
150:57 - get our provider and we're going to say
150:59 - new google
151:01 - provider and this is in it this is a
151:03 - class right so that's why you say new
151:05 - and then we're going to say cons db get
151:08 - firestore
151:10 - app okay and then last but not least
151:12 - we're going to export all of this so
151:14 - we're going to say provider db so we can
151:17 - have access to all this information
151:19 - outside of just this file right that's
151:22 - why we need this so we can pass the
151:23 - database around or the provider around
151:26 - now since we're using google provider we
151:29 - do need to enable google provider from
151:31 - our firebase so let's go into
151:34 - project let's click this icon right
151:36 - there so now you should see all of this
151:38 - stuff let's go into build and let's
151:40 - click authentication inside of
151:42 - authentication let's hit get started and
151:45 - then inside of this get started we're
151:46 - going to add additional providers like
151:48 - google and we'll hit enable and put
151:52 - whatever email you want great all right
151:55 - and now all we want to do is just make
151:56 - sure that we have our authorized domains
151:59 - so for example this here we want to
152:02 - authorize this entire domain so i'm
152:04 - going to copy this entire url of
152:06 - repple.co and just add it there okay you
152:09 - don't need the https part
152:11 - you don't need that slash at the end
152:14 - okay and then you can just hit add so
152:16 - now this domain here is authorized that
152:19 - way if i'm adding authentication it will
152:22 - work here so with that said guys our
152:25 - firebase is now set up and now that it's
152:28 - set up we are ready to do some magic
152:30 - with it so i hope you're excited but now
152:32 - we're ready to actually start pulling
152:34 - data and doing fancy stuff with it all
152:36 - right now we're going to go ahead and
152:38 - create a context and context is a
152:41 - library that you get with react that
152:43 - makes it easy for you to like instead of
152:45 - having to prop drill you get all the
152:47 - data in one place so we'll just get
152:49 - we'll pull all the user data we'll put
152:51 - in our context file and then we'll have
152:52 - access to it we can use it anywhere so
152:55 - let's create a new folder at the global
152:57 - level at the medium cp level so we're
152:59 - going to go ahead and say add folder i'm
153:02 - going to call this folder context and
153:04 - inside of this context folder
153:06 - i'm going to add a file and it's going
153:08 - to be called
153:09 - medium
153:11 - context.js all right now we want to do
153:14 - export const
153:16 - medium context and we're going to
153:18 - basically say create
153:20 - context now obviously to create context
153:23 - we need to actually import that so we're
153:25 - going to say
153:26 - create
153:27 - context and we're going to say from
153:30 - react and to make the code more legible
153:34 - let's just say const and then at the end
153:36 - we'll say export and then we can say
153:39 - medium context and then we're going to
153:41 - need to export other things as well so
153:43 - for
153:43 - now let's just say medium context and
153:46 - then the other thing we'll need to
153:47 - export is a provider so let's go ahead
153:49 - and create a
153:51 - medium
153:52 - provider okay and then for the provider
153:55 - it's going to take in children okay and
153:58 - let's go like this
154:00 - okay now
154:01 - this is where we're going to get all of
154:03 - our users and our posts so i'm just
154:05 - going to go ahead and say
154:06 - all users set all users all right
154:10 - and we're going to go here and say use
154:12 - is going to be an empty array okay and
154:15 - then we're going to do the same thing
154:17 - but except we're going to say all posts
154:19 - and we're going to say set
154:21 - all posts okay we could just say users
154:24 - and set users as well instead of all
154:26 - users everywhere because speakers just
154:28 - say set users and we could say posts and
154:31 - then we can just say set post okay we'll
154:34 - ask send there so we just assume that
154:36 - it's plural all right
154:38 - so that's good for now and what we want
154:42 - to do is we want to have a use effect
154:44 - hook inside of here so basically
154:46 - anytime that the page loads or this
154:49 - provider gets called and this provider
154:50 - is really going to get called only once
154:52 - like when the page loads because we're
154:54 - going to give it and so once this
154:56 - happens we want this use effect hook to
154:59 - run so let's go use effect right react
155:02 - and like import use effect as well
155:04 - because we're going to need that and
155:06 - then what i'm basically going to say
155:08 - and let's also make sure that we end
155:11 - this use effect with the dependency of a
155:13 - user so when there is a user okay for
155:17 - now
155:18 - we'll just leave this blank okay for now
155:20 - we'll just leave this blank and what we
155:22 - want to do here is
155:24 - we want to get access to all of our
155:26 - users okay so here
155:28 - oh and i'm going to basically say so
155:31 - we're going to leave that array empty so
155:33 - i'm just going to say array but i'm not
155:34 - going to give it a dependency array so
155:36 - basically it'll only work just one time
155:39 - and i'm going to make a function that
155:40 - will get
155:41 - user so let's say get
155:43 - users and this will be asic and then
155:46 - we're going to say cons
155:48 - query snapshot so we're going to get a
155:50 - snapshot from firebase and i'm going to
155:52 - say await the docs
155:54 - and then this collection thing here you
155:56 - remember we exported it out so we can
155:58 - actually import all this stuff now so we
156:01 - can go ahead and say hey import okay
156:04 - collection
156:06 - get docs set doc and doc because we're
156:08 - gonna need access to all of them from
156:11 - firebase
156:12 - firestore so there we go now we'll be
156:14 - able to get access to all of this so
156:16 - we're gonna await we're gonna get the
156:18 - collection and the collection is a
156:21 - function that takes in a database so
156:23 - which database you want to give it so
156:25 - we'll also need to import our database
156:27 - from firebase so let's go ahead and do
156:29 - that now so i'm going to say import
156:31 - db
156:32 - from
156:33 - firestore or firebase sorry our file
156:35 - that we created firebase so we're going
156:37 - to give it that database and then we're
156:39 - going to say hey look for the users
156:41 - collection and basically this will get
156:43 - all of the users
156:45 - from that user's collection now once we
156:47 - get all of that what we need to do is we
156:49 - need to actually like query
156:51 - appshot.docs.map
156:53 - and then we're just going to say doc and
156:55 - let's just say if we want to do
156:57 - console.doc okay so for now we'll just
157:00 - keep this really simple we'll add more
157:03 - to it later but we need to export medium
157:05 - context and then we also need to export
157:08 - medium provider so our provider and our
157:11 - context all right so a couple of things
157:13 - let's make sure this use effect it can't
157:15 - be outside of the body of a component so
157:18 - let's make sure we cut this and we put
157:20 - this inside of our medium provider okay
157:22 - so we're going to put that right there
157:24 - right here okay
157:26 - and then the last thing we want to do
157:28 - let's prettify this
157:30 - the last thing we want to do is medium
157:32 - provider should return and it should
157:34 - return the following it should return
157:37 - medium
157:38 - contacts divider all right and then
157:42 - we're going to give it a pretty right
157:44 - here
157:44 - and it's going to be value and so it's
157:47 - going to return a value and the value
157:49 - that we're going to have at return is
157:51 - going to be posts and users for now okay
157:55 - so these posts and then these users for
157:58 - now okay great and then last thing we
158:01 - want is we want to give the children as
158:04 - well then we want to end this medium
158:06 - context.provider so looking at this
158:08 - makes it look a little bit simpler so
158:10 - we're returning a context provider now
158:13 - what we want to do is we want to wrap
158:14 - our entire app up in this provider so
158:17 - let's go back up to pages let's go to
158:20 - our app and we're going to app wrap this
158:22 - entire app so i'm going to say and we're
158:24 - going to get our medium provider and
158:26 - we're going to get that from our context
158:28 - and we're going to grab our medium
158:30 - context and where it says return this
158:33 - component page props that's our entire
158:35 - app but we're going to wrap this app in
158:37 - medium provider and so now our entire
158:40 - app will have access to this medium
158:43 - provider okay so when i say component
158:46 - yep medium provider component page props
158:49 - there we go unreachable code detected so
158:52 - what's the problem here okay let's keep
158:55 - going regardless of this error oh yes
158:58 - return we want to have parentheses here
159:00 - and then we want to close this return
159:03 - just like that now let's prettify it
159:05 - okay beautiful so that's what your my
159:07 - app your app.js should be looking like
159:09 - okay so we've wrapped the entire app in
159:11 - this context that means our entire app
159:13 - will have access to this context right
159:15 - here okay and let's give it a try let's
159:18 - see if we're actually able to get this
159:20 - data let's make sure we run this
159:22 - function here so i'm going to say get
159:25 - users okay so we just have to make sure
159:27 - that we call that function all right and
159:29 - then in our index.js we can actually use
159:32 - this
159:33 - so in order to use this we want to
159:35 - actually import a couple of things i'm
159:37 - going to say import
159:38 - use context so this hook allows us to
159:41 - actually use the context and we're going
159:43 - to say context medium context and we
159:47 - will also say import medium context or
159:50 - sorry this we can say medium context
159:53 - actually here medium context and then
159:55 - this one here use context that just
159:58 - actually comes from react so we can say
160:00 - import use context from react so that
160:02 - should allow us to actually use
160:05 - all of the data from our firebase that's
160:08 - what's happening here okay so
160:10 - let's go down and i'm just going to say
160:14 - destructure posts and use contacts
160:17 - medium
160:19 - okay and then let's just console log
160:22 - posts
160:23 - and see what's happening all right so
160:25 - that's it so far
160:27 - let's make sure we cd into our app and
160:30 - then yarn dev that bad boy okay perfect
160:33 - and let's look inside of our app right
160:35 - here we should have stuff happening wait
160:38 - we have an error ah use date is not
160:40 - defined okay so let's go back to our
160:44 - medium context and let's import use
160:48 - state and then let's come back to our
160:50 - index.js that should take care of there
160:53 - firebase missing or insufficient
160:56 - permissions interesting we did give it
161:00 - all of the permissions it needed so not
161:02 - sure what's happening there
161:04 - let's try refreshing our app let's see
161:08 - if that does anything
161:09 - missing or insufficient permissions all
161:12 - right so why that's actually happening
161:13 - is because in our firebase we have it to
161:16 - where the rule is that
161:18 - we're not allowing to write so let's go
161:20 - ahead and go to our
161:22 - firebase database firestore database
161:24 - let's go to rules and then inside of our
161:26 - rules go right here and then just change
161:29 - this to true so that just means that
161:32 - allow us to write to this database okay
161:34 - this is not that safe because that means
161:36 - pretty much anybody can write to the
161:37 - database but it's okay for now so
161:40 - let's refresh our app and let's see what
161:42 - happens okay great all right so the app
161:45 - is compiling let's see if we're getting
161:47 - any inspect element data in console okay
161:51 - we're not getting the data yet let's put
161:53 - a little fire emoji so we can actually
161:56 - see that this is showing up so save this
162:00 - oh yeah let's make sure we go back to
162:02 - our home so i'm in my home now and i
162:05 - don't actually get back any data as you
162:07 - can see and probably why that's
162:08 - happening is that we haven't actually
162:11 - loaded the data that fast so we need to
162:14 - actually be able to
162:16 - get the data and then actually load it
162:18 - up all right so here's what we got to do
162:21 - so we're actually getting back our data
162:23 - we're just not getting it in the right
162:26 - form so what you want to do is where it
162:29 - says query shot doc or console login doc
162:32 - just do doc dot data okay and then now
162:35 - when you actually refresh your app and
162:37 - run it you'll notice that we're actually
162:40 - pulling the data so it's getting us
162:43 - the actual user so we have a user right
162:46 - here rafikaze
162:48 - cleverprogrammer.com we have their image
162:50 - url and a follower account of 273
162:53 - thousand and you can see that it's
162:55 - actually pulling this
162:56 - right from our firebase right 273 000
163:00 - image url name everything basically this
163:03 - is
163:04 - now working okay we're actually pulling
163:06 - the data so that's how easy it is to get
163:09 - the user data now what we want to do is
163:10 - we want to actually store it in our
163:12 - state so what i'm going to do is i'm
163:14 - just going to say
163:15 - before we actually store it in state i
163:17 - want to get the actual data that i'm
163:19 - looking for so for the user i want to
163:22 - get a couple of more things i want to
163:23 - get
163:24 - the doc id okay so let's go here i don't
163:28 - just want to console.log something okay
163:30 - what i want to do is i want to actually
163:32 - return an object and this object id is
163:35 - going to be doc.id
163:37 - and for data let's destructure this and
163:40 - we're going to get the actual user data
163:43 - okay and that's going to just put it in
163:45 - this variable it's going to set that
163:47 - this as the value of this key okay so
163:51 - data is going to be an object and then
163:52 - we're going to return that now what i
163:54 - want to do is i want to set all users to
163:56 - this so i'm going to do that users okay
164:00 - and then wrap that bad boy up so now
164:02 - we're going to set those users okay and
164:05 - let's go back to our index.js
164:08 - now let's change this with users and
164:10 - let's go like this all right
164:13 - so here we have that fire emoji and then
164:16 - here we can actually see all of our
164:17 - users i'm blocking this a little bit i'm
164:21 - aware so we can see all of our users
164:23 - here okay since we're going to be doing
164:26 - firebase stuff
164:27 - i can
164:28 - safely put myself in the middle of the
164:30 - screen here so yeah so let's go and
164:32 - let's add another
164:34 - record right so let's go boom we will
164:37 - add another user so let's go add
164:39 - document auto id
164:41 - and let's just copy all of this can i
164:44 - duplicate this
164:45 - no it doesn't let you duplicate i don't
164:47 - think so so email follower account image
164:50 - url so i'm going to copy the image url
164:53 - and then let's just go so auto id
164:55 - email
164:56 - [Music]
164:57 - davidcleverprogrammer.com image url is
165:00 - gonna be this so same image as me
165:03 - follower count
165:04 - is gonna be
165:06 - i don't know 2300
165:09 - and let's save him and then of course he
165:11 - needs a name as well so we're going to
165:13 - add a field and i'll send name and we'll
165:14 - say david kosey all right so we have two
165:17 - users here now let's go back to our app
165:20 - let's refresh and this should actually
165:23 - spit out two users there we go we can
165:26 - see that we're actually getting back to
165:28 - users now let's click them and we can
165:31 - see information about user number one
165:33 - and then when i hide this we can
165:34 - actually see information about user
165:36 - number two as well and we have the data
165:39 - and we have david riccosi and we have
165:41 - his name and everything okay so far so
165:44 - good we're able to store the user
165:46 - information in context and then we're
165:48 - able to retrieve that context and then
165:50 - it really simplifies our code allows us
165:53 - to use all this information now what we
165:54 - want to do is we want to actually get
165:56 - information about our post so let's go
165:59 - ahead and get all of the information
166:00 - about our post so i'm going to go back
166:02 - to our medium context and in our medium
166:04 - context we're going to pull all that
166:07 - information all that juicy information
166:09 - about the post right so we have the get
166:12 - users function this runs
166:14 - this function runs when there's like a
166:17 - user detected or a user changes okay so
166:22 - we're gonna add the dependency array
166:24 - after we add authentication in let's go
166:27 - here okay let's add another use effect
166:29 - hook and we're going to add an use
166:30 - effect hook and this one is this
166:33 - function is going to be called get posts
166:35 - cons get posts and it's going to be
166:37 - async function and we're going to get a
166:41 - snapshot we're going to await the docs
166:44 - i'm going to say get docs and i'm going
166:46 - to say collection db and this time it's
166:49 - going to be articles okay so this will
166:52 - get the snapshot of all of the articles
166:54 - and then what we're gonna do is we're
166:56 - gonna say query shot snapshot
166:59 - dot docs dot map and let's go ahead and
167:03 - say let's just console
167:05 - dog.data so we can actually see that
167:08 - we're getting back and we'll also give
167:10 - it an empty array and let's call this
167:12 - function now so let's say get post just
167:14 - like this okay so now we should actually
167:18 - also see posts getting printed out as
167:20 - well
167:21 - and not just users so let's refresh our
167:25 - app and see if we get all of our
167:27 - articles so at the bottom you can
167:29 - actually see we're getting back all of
167:30 - our articles okay i only have one
167:33 - article right now so we're getting back
167:35 - that article right we get the timestamp
167:37 - field we get the post length we get the
167:40 - banner image we get the author
167:42 - everything that's inside of our database
167:44 - if i go to my articles here
167:46 - you can see
167:47 - body if i go to the body it matches if i
167:51 - click the body it goes on it's a long
167:53 - string it's a long line so
167:56 - this is working we're able to get all of
167:58 - the posts now what we want to do is we
168:00 - don't just want to console console.log
168:01 - this we want to actually do more with it
168:03 - so i'm going to go ahead and say return
168:06 - and we're going to return an object and
168:08 - id is going to be doc.id and then data
168:11 - is going to be the following so we're
168:13 - going to body is going to be doc dot
168:16 - data dot body and then brief gonna be
168:19 - doc dot data dot brief
168:22 - and then we're gonna have category to
168:24 - save your time i'm just going to paste
168:27 - all of this here so you can see this
168:30 - boom right there okay it's pretty quiet
168:32 - so we got post length banner image title
168:35 - comments posted on author
168:38 - that allows us to pull all of the
168:40 - information out of this all right we're
168:42 - not really even going to be using
168:44 - comments so let's comment that out
168:46 - because we don't have comments but if we
168:48 - do need to add them later we can
168:50 - obviously always come back and do that
168:52 - so that's what we're going to be
168:53 - returning here and all we want to do is
168:56 - we want to just set posts to that so we
168:58 - want to make sure that we save this in
169:00 - our state and we have access to post now
169:03 - so let's go back to our index.js we
169:05 - don't need access to users here we
169:07 - actually just need access to posts here
169:09 - so let's say posts with the fire emoji
169:13 - and let's go back and let's look and
169:16 - boom there we go we have the data id
169:19 - and then we have everything else
169:22 - as well so let's go back
169:24 - to context id yep id and data we have it
169:28 - all
169:29 - we have it all
169:30 - all right so that's pretty much all we
169:32 - need access to
169:33 - let's go back i apologize that's my
169:35 - bulldog barking we're gonna try to
169:37 - ignore her she hates the ambulance so
169:39 - when the ambulance goes by she will keep
169:41 - barking at it forever so that's it we're
169:43 - getting access to our posts as well all
169:46 - right now that we're actually able to
169:47 - retrieve all the data from our posts
169:50 - what we need to do is just simply
169:52 - replace everything here from everything
169:55 - that's coming from our database okay so
169:57 - like this author the author image this
170:00 - that boom everything so what we're gonna
170:03 - do is in our index file we're gonna grab
170:06 - access to all posts like we're doing
170:08 - here and then for our postcard we're
170:11 - actually going to loop here inside of
170:13 - our post list
170:15 - and i'm just gonna say
170:17 - posts dot map okay and we're gonna just
170:21 - put post like that and we're gonna open
170:24 - this and then we're gonna close this on
170:26 - here yeah one more great okay beautiful
170:30 - so since we only have one post right now
170:32 - we should only get one article that's
170:35 - exactly what i expected and postcard
170:38 - we're actually going to hand it our post
170:41 - and for the key is just going to be
170:43 - post.id okay and then let's go to our
170:46 - postcard component and inside of our
170:49 - postcard component we're actually going
170:50 - to use this information so let's go
170:53 - okay so inside of our postcard component
170:55 - let's get access to this information so
170:57 - we're going to just say post
170:59 - and the path of this is actually just
171:01 - going to be
171:02 - post dot id okay whatever the id of that
171:06 - post is that's going to be the slug
171:08 - so let's click this post now and let's
171:10 - see what happens where it takes us
171:12 - take a look at that
171:13 - that slug 5 t s e k whatever
171:17 - if you look in articles you can see that
171:19 - article has that so this is cool like
171:23 - we're already getting the data and we're
171:25 - able to go to that page and retrieve it
171:27 - from firebase this is awesome we're
171:30 - getting all the information we need now
171:32 - we're gonna need access to the author
171:35 - data
171:36 - as well but that again we're gonna get
171:40 - that we can get that information later
171:42 - okay if i go to my post right now
171:44 - actually we have that information inside
171:46 - of our post right let's go look at our
171:48 - articles we have that information
171:51 - articles
171:52 - dot that specific article and dot author
171:55 - and boom we get the information we need
171:57 - so
171:58 - post.data.author will actually get it
172:00 - for us
172:01 - okay for this image right here that i'm
172:04 - using the logo we're going to remove
172:06 - that logo and for the source instead
172:10 - what we're going to say is i'm going to
172:12 - author
172:13 - data dot image url not author data my my
172:17 - apologies a post dot data and i can say
172:21 - dot yeah post that data or let's see how
172:24 - it's stored in the record so in the
172:26 - record we have i have the banner image
172:29 - let's actually grab this author's data
172:32 - specifically first so what i'm going to
172:34 - do is let's come here and i'm going to
172:35 - say const author data this is set author
172:39 - data and we're going to say use state is
172:41 - null okay and i'm gonna now write my use
172:44 - effect hook
172:45 - this will change based on if there's a
172:48 - post or not okay and in here we're gonna
172:52 - say we're gonna write a function for get
172:55 - author data and it's going to be an
172:57 - async function and we're going to set
173:00 - the author data to the data that we get
173:02 - we'll await
173:03 - and then i'll await get doc doc
173:06 - go into the users
173:08 - go into that author and then grab that
173:11 - data okay so basically what we're doing
173:14 - is we're getting the author and then
173:16 - we're grabbing that author's data all
173:20 - data related to that author okay so then
173:22 - it's going to give us that specific
173:24 - user's information and then we can
173:26 - actually get the photo of that specific
173:28 - user great
173:30 - now we just need to import all this
173:31 - stuff since we don't have access to it
173:33 - so we're going to say
173:35 - we're going to add a bunch of import
173:36 - statements here so let's say import
173:39 - from firebase from dot dot slash
173:42 - firebase the file that we wrote and then
173:44 - we're also going to import
173:46 - our doc and then we're gonna get the
173:48 - dock from
173:50 - firebase firestore all right so now we
173:53 - have our db
173:55 - right and then we have access to dock
173:57 - and get doc that's it now we just need
173:59 - to call this function get author data
174:03 - just like this all right and what's
174:05 - there here weight has no impact on this
174:09 - type of expression interesting great can
174:13 - we
174:14 - do this
174:15 - wait that's that should be good okay
174:18 - call get author data and then i should
174:20 - have access to author data okay and then
174:23 - we should be able to do maybe something
174:24 - like
174:25 - author data dot
174:28 - name users.name
174:30 - so let's see
174:32 - let's see what happens now in our app so
174:34 - let's go back to the home page
174:36 - cd medium and then let's do yarn dev
174:40 - great and let's go back to our home page
174:43 - sometimes it just sleeps and you just
174:44 - got to wake it up and refresh it use
174:46 - state is not defined so let's import you
174:48 - state import
174:50 - use state use effect from react let's
174:55 - look at it now cannot read properties of
174:58 - null author data dot name is it author
175:01 - data dot data dot name is that what it
175:04 - is
175:05 - author data we'll say author data dot
175:08 - name let's make it optional chaining so
175:09 - if it exists great if it doesn't exist
175:12 - then it doesn't freak out and that's
175:14 - complaining about the image source
175:17 - image is missing required src property
175:20 - so we have the property actually there
175:22 - for the image so let's do
175:25 - author data dot image url just like that
175:28 - and let's see what happens now let's
175:30 - refresh cannot read properties of null
175:35 - reading image url let's see what the
175:37 - error here is just going to make it
175:40 - dependent on nothing for now let's make
175:42 - it dependent on nothing all right now
175:44 - while this author thing gives us
175:46 - problems let's at least get all the data
175:48 - from the post first then we should be
175:49 - good for now i'm just going to change
175:52 - this to logo so we don't have an error
175:54 - there anymore so boom our app should be
175:57 - up and running okay now to say this is
175:59 - not a function cool so we're just going
176:01 - to wrap this away in parentheses and
176:04 - then once we get back some result which
176:08 - is actually just going to be a dock then
176:09 - we can call doc.data on it okay so dog
176:12 - gets us the specific reference to the
176:14 - doc and then getdock actually retrieves
176:16 - it so let's go here
176:19 - all right
176:20 - uh so we're awaiting this i'm getting
176:22 - this cool now i want to go down and i
176:25 - want to start getting all that
176:27 - juicy post data okay so for example this
176:31 - here is going to be post
176:32 - dot data dot title of the post so if we
176:36 - go to our base what articles we got
176:39 - title yes we have title great and let's
176:43 - put this in squigglies because otherwise
176:45 - it's literally gonna say posted
176:46 - data.title that's not what we want boom
176:49 - look at that we're pulling this
176:51 - information from our firebase now let's
176:54 - go ahead and change this to
176:56 - post.data.brief
176:59 - and we should be good with that a brief
177:03 - beautiful okay and that's actually
177:05 - pulling from firebase as well now this
177:07 - part here is june 15th here where we
177:10 - have it hard coded we need this to be a
177:12 - date so let's go ahead on a new line and
177:15 - let's get to work on this so i'm
177:18 - actually going to say new and we're
177:20 - going to do some javascript here so i'm
177:23 - going to say new date and get me the
177:26 - date it was posted on and we're going to
177:28 - convert that to two locale string and
177:30 - we're going to make it us and then we're
177:33 - going to say for day make it numeric
177:35 - okay and for a month make it short okay
177:40 - let's hit that so it pretty fize it
177:43 - there we go so that's how our date
177:45 - should be so you can see we're actually
177:47 - now pulling july 1st the date that we
177:50 - actually put inside of our firebase
177:52 - for
177:53 - five min read the length we're gonna
177:55 - pull this length
177:57 - post.data.length i believe or post
178:00 - length post link so it should be like
178:02 - however many minutes read it was that we
178:05 - said okay all right let's put a space
178:07 - there so there's a little space after
178:09 - five minute read and then where it says
178:10 - productivity let's pull that from
178:13 - post.data.category
178:16 - okay we're done with that awesome we
178:19 - have a thumbnail container here all
178:21 - right we never created the styling for
178:23 - our thumbnail container so let's go
178:24 - ahead and do that now thumbnail
178:26 - container is gonna have very simple
178:28 - styling thumbnail container and just
178:30 - gonna have a flex of one all right great
178:33 - and for our thumbnail container we're
178:35 - going to give it the articles we're
178:38 - going to give it the image all right so
178:40 - let's go ahead and say
178:42 - post.data.banner image let's see if it
178:45 - pulls it all right we're getting some
178:47 - error that says hey
178:49 - that domain you need to add it to your
178:53 - domains inside of your
178:56 - next config.js so you need to actually
178:59 - authorize this domain but i'll show you
179:00 - a little trick what you can actually do
179:03 - is there's this nice little thing called
179:06 - cloudenary.com audinary.com
179:12 - okay
179:13 - and you can pass it different links and
179:16 - it can actually fetch it for you okay
179:18 - and it has this demo link and the demo
179:21 - link is this i'll show you right now so
179:24 - we're gonna remove all of this
179:26 - and we'll put tildes and i'll put the
179:27 - demo link so it's
179:29 - rez.cloudmary.com demo slash image slash
179:32 - fetch and now at the end of this
179:35 - i can just say data post
179:37 - dot data dot banner image and now this
179:40 - res
179:41 - cloudinary.com we can go inside of our
179:44 - next config
179:45 - file and we can just allow this domain
179:48 - so let's go here we're going to do
179:51 - images and we're going to go ahead and
179:53 - say domains i'm going to add
179:56 - res.cloudanary.com that way every single
179:58 - image will just come from the same
180:00 - domain cloudnary.com doesn't matter
180:03 - whatever other domain we have okay so
180:06 - nice little trick that we can actually
180:08 - do all right now let's go back and
180:10 - refresh and our image should show up
180:13 - soon
180:14 - says oh so whenever you make changes to
180:16 - your config file you'll need to kill
180:19 - your server and then you'll need to
180:21 - start your server again so let's restart
180:24 - our server and then let's refresh our
180:26 - app and let's see if it works this time
180:29 - all right there we go now our app is
180:31 - working and we're actually pulling that
180:33 - image
180:34 - from our
180:36 - firebase
180:37 - okay that's perfect that's very good so
180:39 - if we change that image that image would
180:41 - change so let's for example go to our
180:43 - firebase and let's change a few things
180:45 - so let's say productivity is a skill we
180:48 - can change that to hakuna
180:51 - matata right let's hit update
180:54 - and let's go back
180:55 - let's refresh
180:57 - and you'll see it'll say hakuna matata
180:59 - okay so clearly it's extracting all of
181:02 - this from our database that proves it
181:05 - we'll change this image and then we'll
181:07 - add the author name afterwards but for
181:10 - now that's how we retrieve our postcard
181:13 - data okay and for every single post that
181:17 - we have we just loop through and we show
181:20 - that post so now let's go ahead and
181:23 - let's make another post so that way we
181:24 - can see another article so i'm going to
181:26 - go ahead and just copy
181:28 - let's say another image so i'm going to
181:30 - go ahead and add document we'll auto id
181:33 - it and we will say title is
181:36 - top 5 programming languages to learn in
181:40 - 2022 we will say
181:43 - banner image is this so i just got
181:46 - another image and i just pasted it okay
181:49 - and then we'll say body is i'll copy the
181:52 - body put it here okay and then for brief
181:56 - i will say here the
181:58 - best five programming languages you'll
182:01 - need to learn in 2022 category i'll say
182:04 - the for this is coding post length here
182:08 - is seven and we'll make this a number
182:11 - seven and then posted on will be a
182:15 - timestamp and let's just say it was
182:18 - posted on july 19th then we'll say yep
182:22 - that's it let's hit save so now we got
182:24 - another article we got two articles here
182:27 - is there anything that this article is
182:28 - missing author it's missing author so
182:31 - let's go author i'll say boom all right
182:34 - let's go back let's refresh and it
182:36 - should show us two articles there we go
182:39 - look at that
182:41 - isn't that beautiful we're pulling from
182:43 - our database everything works we're able
182:45 - to actually read the articles right so
182:47 - in terms of
182:48 - using firebase to read posts on our home
182:51 - page we're able to do that so
182:53 - congratulations if you got this far all
182:56 - right before we continue on to another
182:58 - part let's just fix this bug that we had
183:01 - yesterday which was we
183:03 - don't have
183:04 - my yet my yesterday you're probably
183:06 - either watching it right now or it's
183:08 - weeks past i don't know what pace you're
183:10 - going at but i'm proud of you that you
183:12 - got to this part so we had this name
183:15 - here right we want our name to show up
183:17 - here but it's not showing up so what's
183:18 - the problem the problem that's actually
183:21 - happening is if we go to our code base
183:23 - is asking for an email right here
183:26 - and it actually looks in a particular
183:28 - field type called email so i'm going to
183:30 - first of all just run our server so
183:32 - we're going to cd into medium oh let me
183:34 - make myself much smaller there we go all
183:37 - right so we're going to cd into medium
183:39 - cp our main folder and then i'm just
183:40 - going to do yarndev and now it's going
183:42 - to start all right so the problem that
183:44 - was happening
183:46 - is we forgot to make our field a
183:49 - email field so in our users this field
183:53 - here
183:54 - let's edit it and its type is
183:58 - my apologies what i mean to say is
184:01 - this id here actually the id of the user
184:04 - actually needs to be an email okay so
184:07 - this id let's see if we can actually
184:09 - change this id ah looks like we can't
184:11 - change the existing id i can filter it
184:15 - but it seems like i cannot change the id
184:18 - okay so let's add a new document it
184:21 - should pretty much be the same as that
184:23 - one and for the id i'm gonna put an
184:25 - email as the idea okay so we're gonna
184:27 - say cleverprogrammer
184:29 - email is gonna be that let's add a field
184:32 - and we're gonna have follower account
184:35 - it's going to be
184:37 - let's say 273 000. i'm going to add the
184:39 - same image that i added earlier you can
184:42 - add whatever image you want okay so
184:44 - we're going to say image url
184:46 - and then we're going to add our last
184:48 - field which is going to be name so name
184:51 - then we're going to say rafa kazi okay
184:54 - so just the id is kazee
184:56 - cleverprogrammer.com let's hit save on
184:58 - that and this other one that we had i'm
185:00 - going to go ahead and delete this so
185:02 - delete this document and i will also go
185:04 - ahead and delete this document as well
185:06 - so now we have two documents deleted we
185:08 - just have the quasi
185:10 - cleverprogrammer.com document showing up
185:13 - okay now let's take a look and see if
185:15 - our code is doing the right thing so i'm
185:18 - gonna go ahead and take this line and
185:20 - also console log it so we're gonna do
185:22 - console log and then just paste that in
185:26 - and i'm gonna give it a little uh
185:28 - firefighter emoji so it pops out to me
185:32 - let's go back to our app let's hit
185:34 - inspect and let's see if it's showing up
185:37 - firefighter emoji is not showing up yet
185:38 - let's refresh our app and let's see if
185:41 - our firefighter emoji pops up our
185:44 - firefighter emoji is still not popping
185:47 - up where does it pop up it pops up on
185:49 - the postcard so it should actually pop
185:52 - up on this
185:53 - page right here we need to go to our
185:55 - home page so make sure that when you're
185:58 - on that article page make sure to click
185:59 - the home button because we're supposed
186:01 - to be on our home so when you go to our
186:02 - home page now let's see if the
186:04 - firefighter emoji shows up yes the
186:06 - firefighter emoji as you can see at the
186:08 - bottom right here it does indeed show up
186:11 - let me see if i can make this bigger so
186:14 - you could see it better this is pretty
186:16 - huge on my screen we can see this
186:18 - inspect and there we go firefighter
186:21 - emoji is showing up and our user is now
186:23 - showing up so now we actually have
186:25 - access to our user data we just needed
186:27 - to make the id of the author their email
186:30 - so then we could actually look them up
186:32 - so now we have effectively stored author
186:34 - data and now we can actually retrieve
186:37 - the
186:37 - authordata.name so if we actually go
186:39 - back to our app
186:41 - you can see that now it says rafikaze
186:43 - right here for the author for the
186:45 - article
186:46 - right so now we're actually pulling the
186:49 - author data correctly okay beautiful
186:52 - now we can also pull the actual author
186:54 - image so i can actually say author data
186:57 - dot image l okay now we're gonna get an
187:00 - error that's gonna say hey
187:02 - this domain is not inside of your next
187:05 - config so we won't actually be able to
187:07 - show it it's not configured under images
187:10 - in your next.config what we actually
187:12 - want to do is i'm simply going to go
187:14 - ahead and add that
187:17 - cloudinary link before it so we're going
187:19 - to add this before it
187:21 - let's just put it in a this guy first
187:25 - let's put a tilde at the end of it let's
187:27 - put a tilde at the start of it and now
187:29 - let's paste that link there we go okay
187:31 - let's prettify this there so now i have
187:35 - this cloudantery link and that is
187:37 - properly put in place
187:39 - now it's saying hey i can't read
187:41 - property of null so
187:44 - let's put a question mark here and let's
187:46 - see if that solves our problem yep it
187:48 - does there we go so now we're actually
187:51 - pulling the image from the actual author
187:54 - from our firebase
187:56 - later we'll allow users to be
187:59 - authenticated with firebase and then
188:01 - we'll pull the data from google itself
188:03 - so there we go that particular bug that
188:06 - we had with the author not showing up on
188:08 - the postcard now that is solved all
188:10 - right now our article main this page
188:13 - right over here is going to need a
188:15 - couple of pieces of information this
188:17 - component right here right article main
188:20 - the first piece of information is going
188:21 - to need it's going to need access to the
188:23 - author data so we're going to need
188:25 - access to
188:26 - author data and then the or like just
188:29 - author right and the next thing that we
188:30 - actually need access to
188:32 - is the post itself okay so we need
188:35 - access to two pieces of this component
188:38 - needs access to two pieces of data so
188:40 - let's do this let's go back to our post
188:43 - our article main component rather and
188:46 - we'll give it access to those two pieces
188:48 - of data okay so it's going to get a post
188:50 - and it's going to get an author now
188:52 - obviously since we're destructuring this
188:55 - we need to when we call article main we
188:57 - have to make sure that we're passing the
188:59 - article main component this data that it
189:02 - actually requires now for article main
189:04 - um we're most likely calling it in our
189:06 - post page the slug page that we made so
189:10 - let's go ahead to our slug page and i
189:12 - can see that i have article main here
189:14 - but i'm not passing it anything so i
189:17 - will need to actually pass that post and
189:19 - i'll also need to pass it author okay
189:23 - now
189:25 - we are not actually getting that data so
189:27 - post is not defined and author is not
189:29 - defined which is actually accurate so
189:30 - what the heck is going on we actually
189:32 - need to get access to all of that
189:34 - information okay so let's get access to
189:37 - that info now
189:39 - so what we're going to do is i'm going
189:40 - to say const and we'll say posts and
189:43 - users and we'll
189:46 - deconstruct it and destructure it from
189:49 - our
189:50 - use context library and we'll get our
189:52 - medium context okay now medium context
189:56 - will have to import it so basically i'm
189:58 - going to say import
189:59 - medium context
190:02 - from and then we got to tell it where
190:04 - from so we'll say context not readers
190:07 - nav but medium context just like that
190:10 - all right so now we're actually using
190:12 - use context and this
190:15 - and that'll allow us to get access to
190:17 - posts and users all right it says that
190:21 - we don't have medium context is not
190:24 - defined interesting but the capital m so
190:27 - that should fix it just takes a second
190:30 - all right now we need to get access to
190:33 - everything right so we have posts here
190:36 - and we actually need to get access to
190:39 - our specific post we need to go ahead
190:41 - and find the post that we're looking for
190:43 - when we click and what we want to do how
190:46 - do we want to find the post here's how i
190:47 - want to find the post so let me go ahead
190:49 - and just cut this out for now just so i
190:51 - can explain if i'm on this page right
190:54 - here how will i find the post what i
190:56 - need to do is actually i need to look
190:57 - for that post id through the url in
191:01 - order to get the data from this url
191:03 - right over here we need to actually use
191:06 - router okay so let's go ahead and i'm
191:09 - going to say import
191:10 - and we're going to say use router and
191:13 - we'll say from next router let's pretty
191:17 - much this so everything looks prettier
191:19 - beautiful now that i have
191:21 - all of this info
191:22 - we need to actually be able to
191:25 - search for this okay and when are we
191:27 - going to search for this we're going to
191:28 - fire off a use effect hook on this page
191:32 - so that we can actually pull retrieve
191:34 - this information okay so we're going to
191:35 - say use effect let's actually import it
191:38 - as well so a wraplet allows us to do
191:40 - that so let's just go ahead and import
191:42 - so it automatically imported use effect
191:45 - and then we will say that it'll have a
191:47 - dependency of nothing for now and we'll
191:49 - just make a little check hey if posts if
191:52 - their length is zero then i just want
191:55 - you to return and not do anything okay
191:57 - so this is going to be we call this
191:59 - our guard clause okay but if there is
192:03 - something to be done well then what i
192:05 - want you to do is actually find it so
192:07 - we're going to say post
192:08 - dot find and we're going to look
192:12 - for that specific post so i'm going to
192:14 - say where the post id
192:16 - is equal to whatever the slug is inside
192:20 - of our router okay now we have to make
192:22 - sure that we're actually using our
192:24 - router
192:25 - so we're going to go here and just say
192:27 - const router is use router
192:30 - and just to show you what router query
192:32 - slug will give us we'll console log this
192:36 - so you can see and we'll put a little
192:38 - gun emoji next to it so you can spot it
192:41 - easily in the console log
192:43 - let's save and let's hit inspect okay
192:46 - let's go to console and let's refresh
192:49 - this page and let's see if that
192:51 - shows us what we're looking for so it
192:53 - should really pull
192:54 - the data from the url and it should spit
192:57 - it out at the bottom our reply did not
192:59 - respond which means it's probably asleep
193:02 - so let's go back whoops
193:04 - and we'll cd into medium and we'll do
193:07 - yarn dev okay let's refresh here and
193:10 - let's see if it brings us to
193:13 - what we're looking for
193:14 - and you can see that it's actually
193:15 - pulling that from the route so now all
193:18 - we're saying is hey within posts find
193:21 - the post where the id matches whatever
193:24 - we pass in the slug in the route so this
193:27 - will get us access to our specific post
193:30 - okay and then what we all we want to do
193:32 - is we want to just say hey set post to
193:35 - that okay and we'll create a state
193:38 - variable and we'll call it post and set
193:42 - post okay and then we will say use date
193:45 - will be
193:46 - empty brackets just like that so now
193:48 - we'll be able to set our post to
193:50 - whatever that post is okay and then we
193:52 - can actually pass this particular post
193:55 - now i can actually say post
193:57 - pass the post to article main should be
194:00 - able to pass it now use state is not
194:02 - defined that's not a problem just create
194:04 - a use state hook import it rather and
194:07 - then the use state hook should show up
194:09 - no problem i'll move myself down a
194:11 - little bit
194:12 - okay so now that we're setting the post
194:14 - we're passing the post over to our
194:16 - article main now the only other thing
194:19 - that we actually need to get is we need
194:20 - to actually get the author as well so
194:22 - we're going to say author and we're
194:24 - going to say set author and i'll simply
194:26 - say hey we're going to set this
194:29 - state right here okay this author and
194:32 - this
194:33 - author right here we're going to just
194:34 - set it to an empty array for now okay
194:37 - that's going to be the default and
194:39 - let's get our author as well and how
194:42 - will we get our author let's see what
194:44 - our users is currently okay so inside of
194:47 - this use effect hook let's just write a
194:49 - little console log and we'll say users
194:51 - and i just want to see
194:53 - who our users are or what it shows for
194:55 - users right now so let's refresh okay
194:58 - and let's hit inspect so we can keep an
195:00 - eye on users and i'll full screen this
195:03 - so you can see it easier let's go back a
195:06 - page and then let's come back into it
195:08 - all right so for users i can actually
195:10 - see that i have a clever programmer here
195:13 - of user number one with the following
195:15 - data the user count email all of that
195:18 - good stuff and then we can add other
195:20 - users in here as well so i can add user
195:23 - two user three doesn't whatever it's
195:25 - pulling straight from our database okay
195:27 - so we have users and now to actually set
195:30 - the author for this post what we want to
195:32 - do is we want to take a look at the
195:33 - article and for this article we want to
195:36 - see who this article's author is and
195:39 - once we find that author we want to go
195:41 - inside of our
195:43 - users database imagine this is
195:45 - articles like collection right and then
195:47 - this is users collection so we want to
195:49 - do is we're going to go okay who's the
195:50 - author once we find the author's emails
195:53 - more specifically this is the author
195:54 - email once we find that we want to look
195:57 - for that user inside of our users
195:59 - database and then find that particular
196:02 - author and get access to that author and
196:04 - all of their
196:05 - respective data okay so we pull the
196:08 - information from here first and then we
196:10 - cross reference it in there we pull all
196:12 - the information okay so it's almost like
196:14 - an inner join in sql if it's like an
196:16 - inner join on that particular email
196:19 - address and then we match it and we get
196:20 - all the data so let's do that now so i
196:23 - want to basically say hey users dot find
196:26 - where user.id is going to be that email
196:29 - matches that particular post author okay
196:33 - and let's go ahead and console log this
196:36 - so we can actually see
196:38 - some data back let's refresh this
196:40 - let's get out of this page and go back
196:42 - to that page and let's click into it
196:44 - let's see if we get an error property
196:46 - undefined of reading
196:48 - author okay
196:50 - so what's the error here let's just put
196:53 - a few question marks here and then for
196:56 - this console log let's put another emoji
197:00 - like
197:01 - money face or something just so we can
197:02 - see it there we go so now we're getting
197:05 - that money face and we can see that
197:06 - manifest emoji right and we're getting
197:08 - access to that specific object the user
197:12 - and the user's id is clever programmer
197:14 - and then we're getting access to their
197:16 - data as well and their data is email
197:18 - follower account image url name all of
197:20 - that good stuff okay instead of a
197:23 - console log what we want to do instead
197:25 - is we don't want to use console.log here
197:28 - we just want to say set user or set
197:30 - author rather set author so that'll set
197:33 - who the current author is and then we'll
197:35 - pass that author over to our articles
197:37 - component so we'll say author just like
197:40 - that okay so passing it post and we're
197:42 - passing it author and now we have access
197:46 - to all of that data and we don't need
197:48 - these console logs let's also prettify
197:50 - it a little bit and don't need that many
197:52 - empty lines in between okay so our code
197:55 - is looking much cleaner now looks really
197:57 - clean we have access to post and the
198:00 - author so let's go back to article main
198:03 - now let's just console log and see if
198:06 - we're getting back access to post an
198:08 - author and for the emoji this time we'll
198:11 - make a cookie okay let's go back to our
198:13 - home page and let's go back to the
198:15 - article we have access to post but we
198:18 - don't have access to author that's
198:20 - interesting
198:21 - that's interesting so let's see what's
198:22 - happening let's go back
198:24 - so we are setting the post and we are
198:26 - setting the author and then i'm passing
198:28 - the author to article main all right so
198:31 - here's where the bug lies the bug lies
198:34 - in the fact that when we're getting this
198:37 - data
198:38 - author isn't available yet and so then
198:40 - we send the undefined author so let's go
198:43 - back to our slug okay this is where the
198:45 - problem is happening so we're getting
198:47 - the post but then we're also getting the
198:49 - author at the same time and before the
198:52 - post data has been updated you can't get
198:55 - that posts data because it hasn't been
198:59 - updated yet so what we want to do is we
199:02 - want to make post a dependency of this
199:05 - use effect hook so basically this use
199:08 - effect will run once when this app loads
199:11 - so it will set the post but this will be
199:14 - undefined at that point and then once
199:17 - the post gets updated it will notice
199:19 - that the post got updated and then it
199:20 - will run one more time and this time we
199:23 - are able to actually set the author
199:25 - because the post does exist and we can
199:28 - go and get that post data okay and we
199:31 - can have this question mark and that's
199:33 - just optional chaining and what this
199:35 - will stop your app from crashing which
199:37 - is super annoying when that happens all
199:39 - right so
199:40 - let's go ahead let's go back
199:43 - let's click
199:44 - into it and now you can see that we're
199:46 - actually getting our posts and we're
199:48 - getting the data oh sorry we're getting
199:50 - our post and we're getting the author
199:52 - data and we're getting our cookie so
199:54 - we're actually getting back we have
199:57 - access to all the information that we
199:58 - need now now let's go to and make sure
200:00 - you're sending it to your article main
200:02 - component but now let's go to our
200:03 - article main component now we have
200:05 - access to posts and author and so let's
200:08 - go ahead and change this to the author
200:10 - name so i'm going to go ahead and say
200:12 - author
200:14 - dot data dot name and let's put a
200:16 - question mark here okay
200:19 - all right let's go back a page let's go
200:21 - back into that page right here
200:23 - okay it's having trouble so let's see
200:25 - what the problem is so when we get
200:28 - let's take a look at our author
200:30 - data and what that looks like so let's
200:32 - look at our cookie oh our cookie is
200:34 - undefined now
200:35 - interesting let's put a question mark
200:37 - here for author 2 and i'll just write
200:40 - the word haha right there so we can like
200:41 - really see what's going on okay and i'm
200:45 - gonna navigate to our home page okay our
200:47 - rebel fell asleep so let's go ahead and
200:50 - open it go into medium and then we'll do
200:52 - yarn dev okay now our apple is starting
200:55 - up again so i'll start up in just a
200:57 - second okay let's refresh now okay it's
201:00 - up okay and let's click into one of
201:03 - these articles boom and now we're
201:06 - actually getting back the data right it
201:08 - says rafikaze and we're pulling this
201:11 - straight from firebase so i don't need
201:13 - to say haha anymore i can actually just
201:15 - remove that because we're actually
201:17 - getting the right person and then if i
201:20 - look inside of my article has certain
201:22 - pieces of information like for example i
201:24 - have article.data.body
201:27 - so we can replace this entire thing with
201:29 - body so i'm going to go ahead and do
201:30 - that boom let's go all the way over here
201:33 - let's remove all of this cut it and
201:36 - we're going to say post.data
201:38 - and let's just put question marks
201:41 - so our app doesn't crash let's go back
201:44 - let's go back here go back in here and
201:47 - you can see that our body is now showing
201:49 - up correctly and if i go to our articles
201:52 - and we can change that body if we want
201:54 - so let's go to this and it says
201:59 - new body okay and i'll put an emoji like
202:02 - that ta-da all right let's go back
202:05 - and let's hit this let's go back to this
202:07 - article
202:08 - interesting it not it did not change the
202:10 - body yet let's see what's
202:13 - the holdup let's close this out
202:15 - there we go we're now getting the new
202:18 - body okay so the body has been updated
202:20 - and it's showing up right over here and
202:22 - it's pulling straight from our database
202:24 - if you see that like little s over there
202:26 - we can go ahead and fix that that's not
202:28 - gonna be a problem let's see where we
202:30 - wrote listen and i just added an s there
202:32 - by mistake so let's just remove that and
202:35 - now that s will go away and now it looks
202:36 - like a regular button alright so we're
202:38 - pulling the body and now we need to make
202:40 - sure that we pull our brief as well and
202:43 - we don't need to actually write brief
202:44 - there anymore that was just so we could
202:47 - have a little placeholder
202:48 - so let's go to brief and we're going to
202:50 - replace this with
202:52 - post let's go post dot data dot brief
202:57 - okay that should take care of it
202:59 - here we're gonna have the author name so
203:02 - we're gonna go ahead and go
203:04 - we're gonna go
203:05 - author data
203:07 - dot name okay now we're getting the
203:09 - author name and then for the author type
203:12 - for the title of the article let's go
203:14 - ahead and say post
203:16 - dot data dot article or sorry that title
203:20 - my bad title let's put a question mark
203:22 - here as well and let's go back let's
203:24 - click boom we're pulling the article now
203:27 - from
203:28 - the firebase and to make sure that the
203:30 - art the title is correct
203:32 - correctly pulling from firebase let's
203:34 - just say 2023 instead of 2022. let's go
203:38 - back come back in here still says 2022
203:41 - let's refresh our app because sometimes
203:42 - it caches it and so it might not pull
203:44 - from the database a bunch of stuff
203:46 - actually stop showing up in our app so
203:49 - let's see what's happening let's refresh
203:51 - again
203:52 - and then if it's still causing problems
203:53 - we can always just go back and come back
203:55 - into our app so let's click it there we
203:57 - go okay so now it's actually pulling the
204:00 - data correctly and it says
204:02 - 2023 and it's pulling the brief as well
204:05 - hakuna matata because that's what we had
204:07 - written in our firebase and the last
204:09 - thing is of course we need to make the
204:11 - dates more readable
204:13 - now to make the dates more readable i'm
204:15 - going to remove the 2022 and i will also
204:17 - remove the june 15th we'll just put a
204:19 - comma here and an empty space and let's
204:23 - go down here and we'll write out our new
204:25 - date so we'll say new date and it'll be
204:27 - the date of the post okay and we'll say
204:30 - posted on will two locale
204:33 - string this in us okay en us and then
204:38 - inside of this locale string okay just
204:40 - put a comma here it will take in two
204:43 - arguments and the second argument that
204:46 - we'll give it i'm not sure why it puts
204:48 - it
204:49 - so far away interesting all right the
204:52 - second argument we're gonna give it is
204:53 - hey for the day make sure that it's
204:55 - numeric not exactly sure why it's doing
204:58 - that oh it's an object so let's go ahead
205:02 - and do this
205:03 - now let's open that bad boy up okay days
205:06 - numeric
205:07 - month will be short
205:09 - and then our year will also be a numeric
205:13 - all right there what's the error that
205:15 - we're having here
205:17 - the error is that we have to close this
205:19 - guy first because it's an object right
205:21 - so we close that
205:23 - object first and then we close
205:25 - the rest of the stuff right behind it
205:27 - okay great
205:29 - so
205:30 - let's prettify this it looks better all
205:32 - right let's go back let's click into it
205:35 - and now you can see that it's showing
205:37 - the date and the year and it's doing it
205:39 - in a really clean way so day numeric
205:42 - month short and year numeric will
205:44 - achieve this trick for you and you can
205:46 - call it on a date date class has a
205:49 - method to locale string you just call
205:50 - that on it and you should be good to go
205:52 - now we need this part by listen over
205:55 - here to pull from essentially show that
205:58 - same date thing so let's go ahead and do
205:59 - that and then we can go all the way to
206:01 - the part where we have june 15th hard
206:04 - coded so right there on line 49 i have
206:06 - june 15th hard-coded i'm just going to
206:09 - paste that
206:10 - and we don't need the year so i'll
206:12 - delete the year we'll format the code so
206:14 - it looks pretty and there we go now
206:16 - we're getting july 1st right over here
206:18 - seven minute read we need to also pull
206:21 - that data because it's the post length
206:23 - so we can just say post dot data dot
206:26 - post length and let's put a question
206:29 - mark here so we can pull that post
206:31 - length and now you can see it's pulling
206:32 - from our firebase it says five minute
206:34 - read and with that said
206:36 - now we can actually be we're essentially
206:39 - done with our article right like we're
206:41 - pulling the data it says july 19 2022
206:44 - july 19th it's a seven minute read if i
206:46 - were to change any of this if i were to
206:48 - change like even the category shows up
206:50 - correctly right if we go back to the
206:52 - home page you can see it says
206:53 - productivity and here it says coding and
206:56 - if i want to change any of this data and
206:58 - we want to say hey this is really 2023
207:02 - update this
207:03 - and for this other article instead of
207:05 - hakuna matata being the brief the brief
207:07 - should actually be
207:09 - these
207:10 - are amazing
207:12 - seven tools all right so now we go back
207:14 - to our app we refresh
207:17 - and you can see it says these are
207:18 - amazing seven tools everything is
207:20 - updated automatically five minute read
207:22 - seven minute read and if i click into
207:24 - any of these
207:26 - you will see that it will actually show
207:27 - that boom boom 2023 it updated it and
207:31 - these are seven amazing tools okay let's
207:34 - go to top five programming languages
207:36 - right did we update this top five
207:38 - programming languages let's go we
207:39 - updated the brief yes so let's if we go
207:42 - back and we go to the brief you can see
207:44 - the brief sorry for top five you can see
207:46 - the brief says hey 2023 right there all
207:50 - right with that said we are able to pull
207:53 - all of the information from an article
207:55 - and our article main is this component
207:59 - is now working perfectly the front end
208:00 - of this component is completed and the
208:03 - back end of article main.js is now
208:06 - completed as well so we're actually done
208:08 - with that beautiful sound that just
208:10 - played we're done with our article main
208:12 - component and now let's get to adding
208:15 - the functionality for the user so the
208:18 - user can actually add in their own data
208:20 - so if i go to the completed version of
208:22 - the app i can actually hit
208:24 - sign in so we need to add an auth so
208:27 - that's actually the first thing we need
208:28 - to do so let's work on adding auth and
208:30 - then once the user actually signs in
208:32 - they can actually click and then they
208:34 - can actually write a post so this will
208:36 - actually store all of the information in
208:39 - firebase and then we can actually
208:40 - retrieve the data from there and show
208:42 - the users posts
208:44 - so now let's go ahead work on the
208:46 - authentication functionality all right
208:48 - let's get to work on adding user
208:50 - authentication
208:52 - so
208:53 - if you haven't done this part yet just
208:55 - make sure you go to your firebase
208:58 - and make sure you have authentication
208:59 - enabled so let's go to our
209:00 - authentication make sure that you have
209:03 - it enabled okay
209:05 - and then you make sure you have the
209:06 - google provider enabled okay these are
209:09 - going to be important things that we're
209:11 - going to need let's get back to our code
209:14 - all right so first thing we need to do
209:16 - is go into our context because that's
209:18 - where we're actually going to assign the
209:20 - users that's we're going to create the
209:22 - methods to sign in and handle user auth
209:25 - and then we'll actually use we'll pass
209:27 - this around and use this in other in
209:30 - other files okay so
209:32 - what we need to do here is we need to
209:35 - import a couple of things here so we
209:37 - need to import auth and we need to
209:39 - import provider okay and since we're
209:42 - importing these from firebase we can
209:44 - just
209:45 - basically cut this here
209:48 - and we can paste it in there okay and
209:51 - get rid of this so auth and provider
209:54 - now let's go ahead and write a function
209:56 - that does that so const we're going to
209:58 - say handle
209:59 - handle user
210:01 - auth okay and we'll make this async
210:04 - and what this function will do is it
210:06 - will
210:07 - sign in with pop-up
210:10 - so let's get that from firebase as well
210:12 - so here
210:14 - where they go
210:15 - should have added it automatically but
210:17 - let's just add it ourselves so we're
210:19 - gonna go ahead and add it manual so
210:20 - we're gonna say imp sign in with pop up
210:24 - okay and we'll save from
210:27 - and we will basically say hey from
210:30 - firebase slash
210:31 - auth
210:32 - all right because we need access to the
210:34 - sign in with pop-up
210:36 - now
210:37 - this is the thing just so you understand
210:39 - what we're trying to build is this
210:41 - functionality when we let me log out
210:43 - here real quick the function i'm trying
210:45 - to build is watch what happens when i
210:47 - hit sign in when i hit sign in you can
210:49 - see that this pop-up comes right that's
210:51 - what we're trying to build so then we
210:53 - can pick our email let's go back so
210:55 - we're going to say sign in with pop-up
210:57 - and this is a function and this function
210:59 - is going to take in your auth and it's
211:02 - going to take in provider so we have
211:04 - google provider right
211:05 - boom there we go we have auth and
211:07 - provider and we can also await this
211:09 - because this is a async function
211:12 - and then once we await this we can
211:14 - actually console.log and just see what
211:16 - we get here
211:17 - for now
211:18 - okay
211:19 - and for this console log let's add in a
211:24 - banana okay so i can see that it's this
211:26 - one right over here and then we'll make
211:28 - sure that this handle user auth function
211:30 - we
211:31 - pass this around as well because we're
211:32 - gonna need access to this
211:35 - in other places okay so this handle user
211:37 - auth function that we created now let's
211:40 - go to our home page
211:42 - which is going to be
211:44 - we can go to our header actually so what
211:46 - we want to do is we want to go to our
211:47 - header component we want to say when
211:49 - somebody clicks this button sign in
211:52 - let me hide myself of course i'm always
211:55 - in the way this is really annoying all
211:57 - right
211:58 - so when somebody clicks that sign in
212:00 - button
212:01 - right here make sure to do the bring the
212:04 - pop-up up so we can see this so i'm
212:07 - gonna go ahead to my
212:10 - sign in button and then the sign in
212:12 - button right over here when we click it
212:14 - is actually gonna pop that thing up once
212:16 - we click it so
212:18 - let's first destructure and get access
212:20 - to everything so we're gonna in our
212:22 - header we're gonna need access to the
212:24 - contact so i'm gonna say cons get me the
212:27 - user and get me
212:28 - handle user auth
212:30 - no user yet let's just do handle user
212:32 - auth and i'll say use context okay and
212:36 - make sure to import context use context
212:38 - at the top from react
212:40 - and then we'll get medium context now
212:42 - medium context will have to manually
212:44 - import so we'll say import
212:46 - medium oops let's do import medium
212:50 - context
212:52 - from and then we'll say contact slash
212:55 - medium context
212:57 - okay and then if you want to make it
212:58 - look pretty just hit that right there
213:01 - my rupple just died so i'm going to go
213:03 - ahead and go cd medium and then i'll do
213:05 - yarn dev so now my rubble should start
213:08 - again
213:09 - and it's saying it's starting on port
213:10 - 3001 interesting
213:13 - okay
213:14 - that is fine
213:16 - all right so now let's add an on click
213:18 - functionality for this function and then
213:20 - we'll just say handle
213:22 - user auth
213:24 - so basically i just want this function
213:26 - over here to run
213:28 - when i click sign in
213:30 - okay
213:31 - so let's go ahead and give it a try
213:34 - sign in
213:36 - let's make sure our app is running first
213:38 - of all so cd medium
213:40 - then we'll do yarn dev
213:42 - that'll get our app up and running let's
213:44 - make sure we're not getting any weird
213:45 - errors or anything like that let's
213:46 - refresh
213:48 - okay
213:49 - earlier i was getting an error and if
213:50 - you guys ever get this error which was
213:52 - like if you look down here my storage
213:55 - was getting full and so if your storage
213:56 - gets full your app will crash with some
213:59 - weird bizarre looking error so what you
214:01 - want to do in that case is you want to
214:04 - simply delete your node modules and just
214:06 - like reinstall your stuff again so you
214:08 - can just delete your node modules
214:09 - package right and your package.lock and
214:12 - your yarn.lock and then you can just do
214:14 - yarn or npm and it'll install or yarn ad
214:17 - or yarn install or whatever and it'll
214:18 - install
214:19 - everything for you
214:21 - all right so i got this handle user odds
214:23 - function connected to my sign in so
214:26 - let's see if that works now i'm going to
214:28 - hit sign in
214:29 - and boom it just popped up now we're
214:32 - getting an error that says unauthorized
214:34 - domain so my domain here changed
214:37 - so i'm going to copy this
214:39 - and we're going to go back
214:40 - let's go into our
214:42 - sign in method and let's add another
214:44 - domain so let's add this domain right
214:46 - here
214:47 - and we don't need this https part and we
214:50 - don't need that part either okay let's
214:51 - hit add
214:52 - and that should take care of it let's
214:54 - sit back on this app and let's give it
214:56 - another try
214:58 - all right so we're gonna go ahead
215:01 - and go to the home page
215:03 - and then let's give it a try all right
215:05 - let's hit sign in now and boom look at
215:08 - that it opens up and if i do cause
215:10 - cleverprogrammer.com
215:12 - let's see if anything happens so handle
215:16 - user auth
215:17 - i in my
215:18 - where this handle user auth function is
215:20 - defined alright let's go back to our
215:24 - context or medium context inside of our
215:27 - medium context this handle user odds
215:29 - function i had said sign in with pop-up
215:32 - give it auth and provider and then just
215:33 - put a little soccer ball there too
215:36 - in case that we are indeed printing this
215:38 - out so let's go down here and you can
215:40 - see we're getting all kinds of data
215:42 - about our
215:44 - user right boom we have display name we
215:46 - have email we're getting all of the user
215:49 - data that we actually need from firebase
215:52 - now there's a bunch of extraneous data
215:54 - that we don't really care about like for
215:55 - example i don't care about operation
215:57 - type and provider id and token response
215:59 - i just care about the user
216:01 - so
216:02 - we're gonna go into our medium context
216:06 - and inside of here
216:08 - let's just get access to our
216:10 - user okay so i'm going to go ahead and
216:12 - say we're going to await this
216:14 - right this is going to be our results so
216:16 - let's go const
216:18 - user data is this let's go ahead and put
216:21 - that there
216:22 - and then
216:23 - if we want to get the user specifically
216:26 - i can just simply say
216:27 - user data
216:29 - or let's go here and we'll say const
216:31 - user is userdata.you
216:34 - okay so that should get us just the user
216:37 - and then we can use that user
216:39 - over here okay and if we have you yeah
216:41 - that's fine we should be fine if we're
216:43 - using user here and let's take a look
216:46 - let's click this let's click sign in
216:49 - let's choose kazia cleverprogrammer.com
216:51 - again and let's see what happens
216:53 - so i did this and now i'm just getting
216:55 - information about the user which is
216:57 - perfect which is what exactly what we
216:59 - wanted
217:00 - and we have our access token and we have
217:02 - our display name and we have our email
217:04 - we have email verified so all the
217:06 - information about the user is now stored
217:09 - now we're going to create a function
217:10 - that allows us to store our user inside
217:13 - of our database so i'm going to
217:14 - basically say cons add user to firebase
217:18 - and this will be an async function and
217:20 - it'll take in a user
217:22 - and what this function will do is we're
217:25 - going to
217:26 - get our user
217:28 - so
217:28 - users and we're gonna pass in the user's
217:31 - email whichever user logged in and this
217:35 - dock right here we're going to create a
217:38 - dock out of this we're gonna say set
217:40 - dock actually let's make sure we've
217:42 - imported set dock at the top yes we have
217:45 - okay so we're going to set this dock
217:47 - right here
217:48 - and then what we're going to do
217:50 - is set dock is a function and then
217:53 - they'll take in an object okay and we'll
217:56 - close
217:56 - this function out right here
217:59 - and set dog function will take an email
218:01 - we'll give it the user email
218:03 - and it'll take a name and we'll say
218:05 - user.displayname
218:07 - image url for imageurl we're just going
218:09 - to say user.photo your and follower
218:13 - account we'll just hard code it to be
218:15 - zero for now okay so when we add user to
218:17 - the database their follower account at
218:19 - that point will just be added as zero
218:21 - okay
218:22 - so what handle auth should actually do
218:25 - is it should set the user okay and then
218:29 - it should actually should set the user
218:32 - and then it should what's it called save
218:33 - the user inside of our database i won't
218:36 - call this variable user here because i
218:38 - think this is going to conflict with
218:40 - something so let's get rid of this
218:42 - variable user here and let's go all the
218:44 - way at the top and here i'm going to say
218:46 - const and set user okay
218:49 - so this will be like our current user
218:52 - so let's if we want to be really clear
218:54 - let's just say current set current user
218:57 - okay this is just very clear it's like
218:59 - the logged in user
219:01 - use state
219:02 - and we'll leave the use date
219:05 - just null for now okay and then
219:09 - here we're gonna set our current user
219:13 - to be
219:14 - that to be the user okay so that's okay
219:17 - actually we can bring that back i
219:19 - apologize we're going a little bit back
219:20 - and forth on it but it's fine so
219:22 - for current user we'll pass it the user
219:25 - that just logged in okay so we're going
219:27 - to set the current user and then the
219:29 - next thing we're actually going to do
219:30 - we're going to save the user okay so
219:33 - we're going to save the user so how
219:35 - we're going to save the user is we'll
219:36 - just call this function add user to
219:38 - firebase and we will go here and we'll
219:41 - pass it the user
219:43 - or current user okay we're going to say
219:45 - current user and this will allow us to
219:48 - add this user to the firebase because
219:49 - where this function is going to run and
219:51 - it's just going to say hey
219:52 - the id that i want you to use is the
219:54 - user email
219:56 - and then
219:57 - what i want you to do with this user is
219:59 - give them an email okay give them a name
220:01 - give them an image and give them a
220:03 - follower account and pull all this
220:04 - information out from the current logged
220:06 - in user
220:07 - okay and then the last thing you want to
220:08 - do
220:09 - is we want to pass in the user okay
220:12 - current user so this state right here
220:15 - current user we want to pass it into our
220:16 - context because we want access to our
220:18 - current user pretty much at any given
220:20 - time we need to know who the logged in
220:22 - user is at all times okay now the next
220:24 - thing i want to do is you want to make
220:25 - sure that if i hit sign in
220:28 - and once i do sign in
220:30 - it needs to change from sign in and
220:32 - actually needs to say something else
220:34 - instead so we need to do essentially
220:37 - what we call conditional rendering okay
220:40 - we just ran into a little bit of an
220:41 - error here cannot read property of user
220:44 - so let's see what the error here is
220:47 - user.email so current user is what we
220:49 - want so let's get current user and set
220:51 - that right there okay handle user will
220:53 - set the current user boom so let's try
220:55 - it again let's hit sign in
220:57 - and let's go ahead and choose this email
221:00 - and now we shouldn't have an error
221:01 - anymore yep no error perfect everything
221:04 - worked as expected and let's go to our
221:06 - firebase if everything worked correctly
221:09 - we should have had a new user enter our
221:11 - database so let's go to users and we can
221:14 - see boomkazyacleverprogrammer.com
221:16 - was added okay if i choose another
221:20 - account let's see if that works so let's
221:22 - say sign in
221:23 - and let me choose rafikaze1 gmail.com
221:27 - and let's see if that works
221:28 - let's go back to our database let's
221:30 - refresh
221:31 - and let's see if any new users were
221:34 - added okay
221:35 - no new users were added as of now let's
221:38 - see what's the error that's happening
221:40 - okay we're getting the doc we're getting
221:42 - the data and we're saving that user add
221:46 - user to firebase current user add user
221:50 - to firebase
221:52 - maybe we need to give it just the
221:55 - user data and not the current user
221:58 - so we need to actually just give it the
222:00 - user right here userdata.user so let's
222:03 - try this again let's give this a good
222:07 - old college try so i'm going to hit sign
222:09 - in and we're going to go ahead and
222:11 - choose rafikaze1 at gmail.com let's take
222:14 - a look boom it was created and it was
222:16 - created on the fly so that was nice and
222:20 - if i sign in again with another email
222:22 - let's say caustastic that should get
222:24 - created soon no
222:27 - what was the error do we have an error
222:28 - at least
222:29 - inspect
222:31 - console
222:32 - i don't see any errors let's refresh
222:35 - let's try it one more time and let's see
222:37 - if that works
222:38 - it updated this email with kazia chest
222:42 - test and so it did work
222:44 - but not exactly how we wanted it to work
222:48 - nope let's go back
222:50 - sign in let's sign in again with
222:52 - rafakaze1 at gmail.com
222:54 - oh sorry i'm signing into the wrong app
222:56 - that's the completed one profit continue
222:58 - one is gmail.com is the issue let's go
223:01 - ahead and
223:02 - property of null
223:05 - okay so since we're getting the user
223:07 - let's try using just the user and just
223:09 - use user.email and let's see
223:12 - what happens over here once we use
223:14 - user.email so i'm going to sign in and
223:16 - let's choose this one again rafakasy1
223:18 - gmail.com we had no errors and email was
223:22 - set up correctly
223:23 - so let's try signing in now with kazia
223:26 - chest tastic again this is my chess
223:28 - youtube account and
223:30 - email there we go we got kazia's
223:32 - chest-tastic right there and cause you
223:34 - chest-tastic right here beautiful so now
223:38 - our code our app is working okay so we
223:41 - got our handle user method
223:44 - plugged in and now we're adding the user
223:46 - to firebase and so in terms of the
223:48 - firebase parts honestly we're pretty
223:51 - much
223:52 - done because now we have authentication
223:54 - enabled in our app what we just need to
223:56 - do is add a little bit of conditional
223:58 - rendering here
224:00 - so that once we click this it doesn't
224:02 - keep saying sign in so let's go to the
224:04 - front end let's go to our header okay
224:07 - wait that's weird where did it take me
224:10 - header there we go
224:11 - all right
224:12 - and in our header we're going to fix
224:14 - this problem okay so
224:16 - in our real app it actually says and
224:18 - then this changes from get started to
224:21 - get unlimited access
224:23 - so we just need to do conditional
224:25 - rendering on that so how we're gonna do
224:27 - this conditional rendering is we need to
224:29 - check if the user is logged in so let's
224:32 - go we're in our header so check if the
224:34 - user is logged in so if the user is
224:36 - logged in then we need stuff to happen
224:38 - okay so let's say the user is logged in
224:41 - and i'll go down here and we'll close
224:43 - this off okay
224:45 - and this will be our
224:47 - one statement and then we'll also have
224:49 - our or statement okay and so this is our
224:52 - first statement so we need to wrap this
224:54 - in parentheses and then we'll have an or
224:57 - statement
224:58 - okay
224:59 - and that'll also be wrapped up in
225:02 - parentheses okay i'm going to wrap that
225:04 - up in parentheses and for now
225:06 - we'll just add a
225:09 - empty div
225:10 - in here okay so if the user is logged in
225:13 - then all of this stuff should happen so
225:15 - here we're gonna say current user okay
225:18 - and let's deconstruct our current user
225:21 - here so we have access to him
225:23 - or her the user itself so if the user is
225:27 - logged in
225:28 - then i want you to show
225:30 - all of
225:32 - certain type of stuff okay so what i'm
225:34 - going to do here is i'm going to copy
225:35 - this exact thing and i'm going to paste
225:37 - this exact thing right here i'm going to
225:39 - replace it so if the user is signed in
225:42 - then i want to
225:44 - change that button to actually say write
225:48 - and the styling of it i want it to be
225:51 - this okay and i don't need it to have an
225:53 - on click functionality anymore so i
225:55 - needed to actually say and i don't need
225:57 - to have a
225:58 - on click functionality okay
226:00 - and then this should say get
226:03 - unlimited
226:05 - access
226:06 - okay so this is if the user is signed in
226:08 - and if the user isn't signed in then
226:10 - this is what should happen so let's
226:12 - prettify this
226:13 - and let's take a look let's hit sign in
226:16 - we're gonna go ahead and do this
226:18 - all right let's take a look and now boom
226:20 - look at that conditional rendering took
226:22 - place and now it says write and get
226:23 - unlimited access okay so
226:26 - our conditional rendering is working
226:28 - we're getting the data and we even have
226:30 - authentication built into our apps if
226:32 - you got to this part congratulations
226:34 - you're absolutely crushing it now just
226:37 - for the last and final part we're just
226:39 - going to add a modal that allows us to
226:41 - add data back into our firebase and then
226:45 - we're pretty much done all right so now
226:47 - we're going to work on adding a modal
226:49 - like the thing behind me okay it's like
226:51 - a model
226:52 - all right if you click it
226:54 - boom it like closes and then when you
226:56 - click it again
226:58 - boom it opens and that's the model that
227:00 - we're trying to build if i go over to
227:03 - our screen over here
227:04 - and we click this and we go
227:07 - to our actual app if i hit this modal
227:10 - pops up it's not the most beautiful
227:11 - looking model you've probably seen
227:13 - better looking models we went on we
227:14 - don't want to spend a million hours
227:16 - making this app so if you want to style
227:17 - it feel free to style it but the more
227:20 - important thing is how to actually make
227:21 - it so when you click this
227:23 - modal actually pops up and when you
227:24 - click away it goes away and when you
227:26 - click it there's a dark gray like it's
227:28 - dark there's overlay
227:30 - so that's what we're going to build now
227:33 - so going up at the top we're going to
227:35 - need to do a few things we're going to
227:36 - have to do import modal from react modal
227:39 - and you already know what this means
227:41 - because we're seeing a library that we
227:43 - haven't seen before that means most
227:45 - likely we'll need to install it so let's
227:48 - go here
227:49 - let's control c out of this bad boy and
227:52 - we're going to say yarn add react dash
227:54 - modal okay because we're going to need
227:56 - that and so
227:57 - once that finishes installing then we're
228:00 - ready to
228:02 - actually add the modal
228:03 - and do other nicer things with it so
228:05 - let's actually keep going i'm going to
228:07 - say modal set app element this is
228:10 - something you have to do in
228:12 - next okay so it's like a little config
228:14 - thing that you have to do but
228:16 - we're done with that okay that's it just
228:17 - took one line now we need to actually
228:19 - give it some style so we're gonna just
228:21 - say custom styles
228:23 - and for content i'm gonna say hey give
228:26 - me top 50
228:29 - and for left i want left to be 50 as
228:33 - well
228:34 - i want right to be auto
228:36 - and this will allow us to centralize the
228:38 - modal okay we're going to give it auto
228:41 - we're going to transform it and we're
228:43 - going to say hey translate negative 50
228:45 - percent
228:46 - negative 50
228:48 - we will give a background color and the
228:51 - background color will just be white
228:54 - padding
228:55 - we don't need to give it any padding we
228:56 - can leave it as zero and for a border we
228:59 - can say none
229:01 - now one more thing that we actually need
229:02 - to do for this right is we need to give
229:05 - it an overlay so let's go ahead and say
229:07 - overlay and i'm going to give it a
229:10 - background color
229:11 - and we're going to give it a background
229:13 - color of like dark so that dark color
229:16 - you saw but not fully black so this will
229:18 - have a little bit of opacity here as
229:20 - well to it and we're done okay so we're
229:23 - done creating the custom style for the
229:25 - modal and now we just need to actually
229:27 - call this modal and open it up i know
229:29 - it's installing right now so it's
229:31 - install is gonna take some time but
229:32 - that's okay
229:33 - let it keep installing and then all the
229:36 - way at the bottom here we're gonna open
229:38 - this modal
229:40 - okay
229:41 - and then inside of this modal we're
229:43 - gonna have some properties okay so let's
229:46 - go right here and the property is gonna
229:48 - be is open okay and for is open we're
229:50 - going to say
229:52 - if that's true or false so let's just
229:54 - say let's hard code true for now
229:56 - and then on request
229:58 - close
229:59 - we'll just say hey on the router i want
230:02 - you to push
230:04 - okay so i'll show you what this does
230:06 - because we'll need to add a bit of
230:07 - routing to this
230:09 - there we go
230:10 - and then the next thing we're going to
230:11 - need is for styles we're going to say
230:12 - custom styles just like this
230:15 - okay
230:16 - so that's basically what will bring the
230:19 - modal up
230:21 - now
230:22 - now one more trick that we need to do
230:24 - is
230:25 - let's go ahead and run this app first
230:28 - let's go cd medium and let's go yarn dev
230:31 - and let's see if a modal actually comes
230:33 - up or not let's open this up
230:36 - okay hopefully it'll start running soon
230:38 - and we'll restart okay or refresh let's
230:42 - refresh this one as well and let's see
230:44 - what happens
230:45 - let's see if we get an error or if it's
230:47 - actually working all right so for
230:49 - closing for now all i want to do is i'm
230:52 - going to replace the replace the router
230:55 - dot push that we initially had because
230:57 - router.push is not a thing yet i'm just
231:00 - going to say close okay so i'm just
231:02 - gonna say hey just console log it for me
231:05 - please
231:06 - and then we'll go look in the console
231:07 - and see if
231:08 - see if we're attempting close right to
231:10 - close it's showing close so that's
231:12 - really good sign now what i want to do
231:15 - is we want to add a div in here so we
231:17 - can actually see stuff so i can say
231:20 - i am writing in the modal okay
231:23 - and there we go now we're actually
231:25 - seeing the modal right here and if i
231:27 - click into it notice that the close
231:30 - doesn't get detected it's not actually
231:32 - requesting a close but when you click
231:33 - anywhere outside of the modal it
231:35 - actually requests a close and you can
231:37 - see it's requesting the close okay
231:40 - so
231:41 - we're gonna go ahead and make this more
231:43 - dynamic
231:44 - in a second
231:45 - so what we need to do
231:47 - is we need to make this modal toggleable
231:51 - so when i click sign in or when i click
231:53 - right
231:54 - the modal pops up and i can see it right
231:57 - away so what i want to do is add router
232:00 - so we're going to go right here and i'm
232:02 - going to say const router and we're
232:04 - going to say use router okay and we're
232:07 - going to import it from next so it
232:08 - should be imported right there
232:10 - great and
232:12 - then what i want to do with this router
232:15 - is
232:16 - on that button on on it what i want to
232:18 - say is i want to wrap right into a link
232:22 - okay and make sure that we have link
232:23 - imported at the top so
232:25 - link from next link just like that
232:28 - all right and we're going to wrap this
232:30 - right inside of this link right here
232:32 - let's prettify it so it looks better
232:34 - and the href of this is simply going to
232:38 - be
232:39 - question mark add new equals one all
232:42 - right that's it
232:44 - and when this
232:45 - when we click this what i want to do is
232:47 - i want to toggle this to open up so i'm
232:50 - going to say bool we're going to
232:51 - basically say here hey router dot query
232:54 - dot so if add new if this is open and it
232:58 - has a one it will evaluate to true if
233:00 - it's not open and doesn't have a one
233:03 - next to it this will evaluate to false
233:05 - so it's either gonna evaluate to true or
233:07 - false and to enforce that what we're
233:09 - going to do
233:10 - is we're going to call boolean okay so
233:12 - if it
233:13 - gets this query parameter for add new
233:17 - it's going to get the value 1 right here
233:19 - it's going to replace this with 1. if
233:21 - this is 1 it's going to evaluate to true
233:24 - right if it's not one's going to
233:25 - evaluate to false let's check
233:27 - boolean 1 true boolean 0 false and if
233:31 - there's also nothing boolean
233:34 - null or undefined that'll also give
233:37 - false so that's exactly what we're
233:38 - looking for that's really good so it's
233:40 - open is going to depend on whether this
233:42 - is showing up or not okay and
233:45 - yeah that's essentially it so let's take
233:47 - a look now at this so we're going to go
233:50 - ahead and hit sign in
233:52 - and we're going to go ahead and sign in
233:54 - with causey cleverprogrammer.com now
233:56 - that we've signed in i'm going to click
233:58 - right and boom look at that the modal
234:00 - just opened up now when i click away it
234:02 - doesn't close so we need it to actually
234:06 - close
234:07 - so how we're actually going to do that
234:08 - is we're going to just push a path
234:11 - because if you notice when i click and
234:13 - open the modal it actually adds this
234:15 - path add new so if we actually change
234:17 - this path the model is going to close
234:20 - and how i can change the path is i can
234:22 - simply just go to the router
234:25 - and i can push the home path
234:28 - so now
234:29 - if i click away it closes because i
234:31 - changed the path if i change this path
234:34 - here to add new equals one
234:37 - right you'll see that the modal will
234:38 - open up if i change it to add zero
234:42 - the modal will
234:44 - will still open up because it exists add
234:46 - new path actually exists if add new path
234:50 - does not exist at all then the modal
234:52 - will close so my apologies i explained
234:54 - incorrectly earlier
234:56 - it's
234:57 - actually detecting if add new exists so
234:59 - if add new exists then it'll actually
235:02 - evaluate to true and if it doesn't exist
235:04 - then it will just essentially evaluate
235:06 - to false all right so we can actually go
235:09 - ahead and see what it is too so we can
235:10 - say console.log and i can say
235:12 - router.query.org new so we can actually
235:16 - see what that looks like so i can click
235:18 - we can go add
235:20 - new equals to right and if your console
235:23 - logged out that should pop up maybe it
235:26 - doesn't pop up
235:28 - we need it to maybe pop up on the
235:31 - time that it's clicked all right so now
235:33 - we're actually able to open and close
235:36 - the modal sign in and once i sign in
235:40 - i click the modal i click right and it
235:43 - opens and when i click away it closes
235:45 - click it opens click away it closes all
235:47 - right so what we're going to do here is
235:50 - the upload model okay or we'll call it
235:52 - the post modal
235:54 - that model right here we will turn it
235:56 - into a component okay so let's go ahead
235:59 - let's create a new component and we'll
236:01 - add a new file
236:03 - and we will call this file post
236:05 - component so let's go here add file post
236:08 - now post component postmodal.js
236:11 - all right and we'll say post modal
236:14 - okay and we'll just give it return
236:17 - i'm going to give it a div and the div
236:19 - is going to say modal
236:21 - and then here we're going to say export
236:23 - default
236:24 - post modal
236:26 - and if we go back to our file that we
236:29 - just had open which was i believe header
236:33 - inside of header i'm going to replace
236:35 - this here with
236:37 - post modal component make it
236:39 - self-closing
236:41 - and let's also import it so i'm going to
236:43 - say
236:44 - i'm going to say import
236:46 - post modal from
236:49 - and i can say
236:51 - import postmodal from post modal okay so
236:55 - there we go that should import it now
236:57 - when i click it
236:59 - let's click sign in first because we
237:00 - have to get to the right so sign in
237:03 - now that we're authenticated let's click
237:05 - and you can see that it's actually
237:07 - saying modal all right now we're going
237:09 - to need to work on this component okay
237:12 - so we're going to work on this upload or
237:14 - this postmodel component
237:16 - and make sure it has everything that we
237:18 - need
237:19 - okay so let's go ahead and take care of
237:22 - the styling for this so we're going to
237:24 - say con styles and i'm going to move to
237:27 - the styles a little bit faster on this
237:29 - one
237:30 - okay so for the styling i can add in a
237:33 - wrapper okay and let's go ahead and this
237:36 - div
237:37 - right here we're gonna make this div our
237:40 - wrapper div all right so we can just say
237:43 - div class name and we can say
237:45 - styles.wrap okay and let's keep this
237:49 - open so we can see it as we style it now
237:52 - for this wrapper i'm gonna go ahead and
237:54 - say hey take width of 70 rem
237:58 - alright i want you to so you can see
238:00 - that it just got bigger like way bigger
238:03 - right we'll take height of 50 ram
238:06 - all right so now you can see that this
238:09 - is a
238:10 - much bigger modal
238:12 - all right we're going to say hey become
238:14 - flex we're going to make a flex column
238:16 - and we'll do justify start i item center
238:20 - so vertically aligned and horizontally
238:22 - aligned okay it's not horizontally
238:23 - aligned or vertically aligned but
238:25 - horizontally aligned item center
238:27 - and then we will give a gap of one rim
238:32 - padding of one rim
238:34 - and font will be medium serif and then
238:38 - we'll give it an overflow scroll and hey
238:41 - you can actually scroll on this thing up
238:43 - and down all right cool so we're done
238:45 - with the wrapper part of it
238:47 - okay
238:48 - now
238:49 - inside of this wrapper we're going to
238:52 - have
238:53 - a title okay so we're going to say class
238:55 - name and we're going to do styles.title
238:58 - and we're just going to say
239:00 - add a post
239:01 - okay or
239:02 - create a new post
239:05 - and let's go ahead and style this i'm
239:07 - going to say title
239:08 - title is going to have just some margin
239:11 - from the top
239:12 - we'll make the font bold and we'll make
239:14 - the text size larger
239:17 - there we go create a new post
239:19 - all right
239:20 - and now here under div we'll give it a
239:23 - class name of styles.smallfield
239:27 - and then in the small field we'll have a
239:30 - span tag and this span tag will have a
239:33 - classname of styles.field title
239:36 - and we'll just say title here okay and
239:39 - then it will also have
239:40 - another span tag and this will have a
239:44 - class name
239:45 - of styles.inputcontainer
239:48 - and this span tag will actually have an
239:51 - input inside of it
239:53 - okay we'll just make it a self-closing
239:55 - and let's give it a few properties so
239:57 - we're going to say class name is
239:59 - styles.input field
240:01 - type is going to be text
240:04 - value is going to be
240:06 - title okay and we'll keep track of all
240:08 - of this stuff too i'll comment it out
240:10 - for now and then we're gonna add an on
240:13 - change as well to this for now let's
240:14 - just actually create the front end part
240:16 - of this
240:17 - okay so we have a title
240:19 - and then i can actually write
240:21 - but this doesn't look
240:23 - that great so let's go ahead and start
240:25 - styling
240:26 - our small field first
240:28 - so let's style this
240:31 - okay so the styling of this small field
240:34 - will be ill-tick full width will be flex
240:37 - we'll justify in between and we'll have
240:40 - a gap of one rem
240:42 - okay
240:43 - now let's see
240:44 - there we go so now the input is all over
240:46 - here title is over here okay
240:48 - and we'll style it further so this is
240:51 - small field now let's do
240:53 - let's style our field
240:55 - title right so our field title we're
240:58 - going to say flex 1 and then we're just
241:00 - going to say text end
241:02 - and then we're gonna style our
241:04 - input
241:05 - container
241:07 - okay and for our input container we're
241:08 - gonna give it a flex of five we're gonna
241:11 - give it a height
241:13 - and for the border two and then border
241:15 - color is gonna be that gray color that
241:17 - we always added so there we go now we
241:19 - can actually write in here
241:21 - okay and then we need to style our input
241:24 - field so i'm going to say input field
241:26 - and we're going to give it a full width
241:29 - border of 0 outline none and background
241:33 - transparent
241:34 - so now i can write throughout this
241:36 - entire thing
241:38 - and it's not just that small little
241:39 - field okay so our title
241:42 - is now done okay
241:44 - and let's go ahead outside of our title
241:48 - okay so i'm going to get outside of this
241:50 - span here
241:51 - and outside of this div here and we're
241:53 - going to create another small field
241:55 - so div
241:57 - the idea will of the next one is
241:59 - actually going to be pretty similar so
242:01 - it's going to be a small field it's
242:02 - going to have a field title it's going
242:04 - to have an input container a field so
242:06 - what we can actually do is we can just
242:08 - copy from the small field portion and
242:11 - then we can just paste it again
242:13 - and that gives us a new line and then we
242:15 - can just keep pasting it again and again
242:17 - and it'll just keep giving us new ones
242:18 - okay so let's go ahead down here paste
242:21 - it let's go down here and paste it let's
242:23 - go down here paste it let's go down here
242:25 - and paste it and we're gonna need a
242:26 - couple of them so let's hit sign into
242:28 - this is our final app right the
242:30 - completed app so let's click here
242:32 - and let's click right and one two three
242:35 - four five so five of those are what we
242:38 - need okay so we went one too many so
242:40 - let's just remove one we need one two
242:43 - three four five okay so five of those we
242:45 - need so one is going to be title the
242:47 - next one is going to be brief
242:49 - all right so let's just go to the next
242:51 - one it's going to be brief
242:53 - and then the next one is going to be
242:55 - banner image url
242:57 - banner image url and then it's going to
242:59 - be category category and then is going
243:01 - to be estimated read length in minutes
243:04 - okay now if we go to hours pretty much
243:07 - the same thing yeah
243:09 - and the last one we're going to need is
243:11 - going to be like a bigger text box
243:14 - okay so how we can actually do that
243:17 - is pretty much do the same exact thing
243:20 - except we're going to change our input
243:22 - with just a text area so i'm going to go
243:24 - here and paste let's copy this small
243:26 - field
243:27 - again and let's paste it and this we're
243:29 - going to just replace that with text
243:31 - area okay all lower case
243:33 - so now we have text area
243:36 - okay and what we're going to call this
243:38 - is going to be article
243:39 - text so let's go back
243:42 - i'm going to just write article text
243:44 - here
243:45 - boom
243:46 - showing up and the class name for this
243:49 - input field body and then we'll give it
243:52 - rows as well so we'll say rows are going
243:54 - to be 12. all right so now we can boom
243:57 - right up on just stuff here
244:00 - now we need to actually keep track of
244:02 - bunch of state variables okay so
244:06 - let's go all the way to the top
244:09 - in our app and we're going to keep track
244:10 - of all these state variables okay so
244:12 - we're going to need access to also the
244:14 - user as well so we're going to say user
244:16 - and we're going to get this from use
244:19 - context all right and we'll grab it
244:22 - from the medium context now we'll have
244:24 - to import a few of these things of
244:26 - course so we're gonna have to say import
244:28 - use context from react we're gonna have
244:31 - to say import
244:33 - media contact from
244:36 - contact slash
244:37 - medium contacts and yep so this is it's
244:42 - pretty good so that gets us access to
244:43 - the user and now we need to keep track
244:45 - of state so let's go ahead and import
244:46 - that too so we're going to say import
244:48 - use state
244:50 - and let's do use context let's remove
244:53 - this and we're going to say from react
244:55 - okay let's format our code let's move
244:58 - these lines up all right so now we need
245:01 - a bunch of state variables
245:03 - okay
245:04 - so let's keep track of them now i'm
245:06 - going to say const title
245:08 - set
245:09 - title and i'm just going to paste these
245:11 - because it's going to be pretty
245:14 - repetitive what we're gonna be putting
245:16 - here
245:17 - so title
245:18 - brief category post link banner image
245:21 - body so i'm basically
245:23 - all of these guys if i open up the modal
245:26 - all of these guys
245:27 - right here so every single field will
245:30 - need to actually keep track of it in a
245:31 - state variable and we're doing that
245:34 - right here okay
245:36 - now what we need to do is we need to
245:37 - create a function okay and this function
245:41 - we're going to create is going to be
245:42 - const we're going to say add post to
245:45 - firebase okay our database
245:48 - and it's going to be async it's going to
245:50 - take in an event and we're just going to
245:52 - do event.prevent default
245:54 - so when we submit our form we don't want
245:56 - to refresh anything
245:58 - and now we need access to our database
246:00 - okay so i'm going to go ahead and i'm
246:01 - going to say import
246:03 - say collection add doc and server
246:07 - timestamp
246:08 - from firebase
246:10 - firestore because we're going to add a
246:12 - timestamp to the post
246:14 - and then we're going to get access to
246:16 - our database from
246:18 - firebase okay let's purify it
246:21 - all right let's go down and then i'm
246:24 - going to await and i'll say add doc and
246:28 - we're going to get
246:29 - the collection okay
246:31 - articles so this is the collection that
246:33 - we're going to be adding our doc to
246:35 - that's essentially what we're saying
246:37 - and then this add doc function will take
246:39 - in
246:40 - an object okay so what's the doc where
246:42 - are you adding it so we're going to be
246:43 - adding it to our collection and then
246:46 - what exactly are you going to be adding
246:48 - so we're going to be adding our banner
246:50 - image this is going to be
246:52 - banner image
246:53 - we're going to be adding our body
246:56 - and that's going to be body we're going
246:58 - to be adding our category all of these
247:00 - state variables right here we're going
247:02 - to be adding our brief that's going to
247:04 - just be our brief we're going to be
247:05 - adding posted
247:07 - on and this is going to be server
247:09 - timestamp
247:11 - we will be doing our post length this
247:14 - will be
247:15 - post length and we just want to make
247:17 - sure that it's a number and then title
247:19 - is going to be title and author will be
247:21 - user dot email okay so the user will be
247:24 - pulling in from context
247:27 - okay and i believe we call it current
247:30 - user so we'll actually be pulling in
247:33 - currentuser.email okay maybe even a
247:35 - better name would have been logged in
247:37 - user so maybe you should name it that
247:39 - okay
247:40 - so we're done with this at this function
247:43 - right here and now all we need to do is
247:45 - we need to make it so when we actually
247:47 - update these fields we need to make sure
247:49 - that we're actually keep storing this in
247:52 - the state the banner image or whatever
247:54 - okay so let's go ahead and now do that
247:57 - so the value here is going to be title
248:01 - and then on change event is going to be
248:04 - we're going to set title and we're just
248:06 - going to say event.target.value
248:08 - and we're pretty much going to repeat
248:10 - this process for every single field
248:12 - we're just basically going to paste this
248:15 - everywhere so let's go down here let's
248:16 - put that right there and just change
248:19 - this word to brief so i'm going to copy
248:22 - we're going to go brief we're going to
248:23 - copy this
248:25 - and we're just going to say set
248:28 - brief
248:29 - all right so we could see here we have
248:32 - set brief and then we're going to repeat
248:34 - that process just again and again we're
248:36 - just going to keep doing that again and
248:37 - again so now let's do that for this
248:39 - field banner image url and then this one
248:42 - is going to be banner image
248:44 - banner image
248:45 - and then this part is gonna say set
248:48 - banner image
248:49 - okay
248:50 - let's repeat this part
248:52 - ignore my barking dog she's a wild one
248:56 - we're gonna keep going all right so
248:58 - categories what we're looking for
249:00 - so category and we're going to set
249:02 - categories let's go down here
249:05 - and it's going to say category and then
249:07 - we're going to set category okay with a
249:10 - capital c
249:11 - and i believe banner image is going to
249:13 - be with the capital e
249:15 - so you can't just copy paste everything
249:17 - all right value category okay let's go
249:20 - down here estimated
249:22 - estimated time so where's that post
249:24 - length all right let's go all the way
249:26 - down and we're going to do post length
249:29 - and here we're going to say set post
249:32 - length with a capital p
249:34 - and copy this one last time paste it
249:37 - here and then we have article text which
249:40 - i believe we're just calling it body
249:42 - so let's go down all the way let's call
249:44 - it body and we're just going to say set
249:47 - body with the capital b
249:49 - and that should be it and now we just
249:51 - need to basically add a button where
249:54 - when we click it
249:55 - it shows us everything that we need to
249:58 - it actually submits this right so we're
250:00 - going to say button and then the text on
250:02 - this button is just going to say submit
250:04 - and we're going to say hey on click i
250:07 - want you to run my ad to firebase
250:10 - function
250:11 - that's what i want you to do on click
250:12 - what's the error here
250:14 - oh yeah i gotta say equals okay so we're
250:17 - gonna add to firebase we're gonna run
250:18 - that function
250:19 - the button should be submit and then we
250:21 - need to give it a class name and for
250:23 - class name we're going to do accented
250:26 - button okay
250:27 - and if we don't have that we're just
250:29 - going to create that styling for it
250:31 - we're going to say
250:32 - accented button
250:34 - and this styling is going to be similar
250:36 - to the one that we've used a couple of
250:38 - times here so we're just gonna say
250:40 - background black
250:42 - text white padding vertical two
250:45 - padding horizontal four and make it
250:48 - rounded so it's fully rounded okay
250:50 - beautiful there we go so there you have
250:52 - it you got title brief banner image all
250:54 - of this and when i actually hit submit
250:56 - it will post that in our database so if
250:58 - we've done everything perfectly
251:01 - then we should have no problems with
251:03 - this i'm going to copy that image we're
251:05 - going to go here for title
251:07 - i'm going to say biz for brief bazooka
251:10 - the zuka
251:12 - for image i'm going to paste that image
251:14 - category bazooka estimated time length
251:17 - is going to be 10 minutes
251:18 - i love hookahs and we're gonna put a
251:21 - heart here and then hit submit and let's
251:23 - see it's gonna break
251:25 - all right can't read the current user's
251:28 - email so the question is the current
251:30 - user logged in and the second question
251:32 - is
251:33 - did we call current did we call it a
251:35 - current user in our medium context
251:38 - so let's go to our medium context file
251:42 - in context
251:43 - and let's see
251:45 - yes we did call it a current user so
251:47 - we're good there
251:48 - let's go back
251:49 - into our components
251:51 - post modal component should have called
251:53 - it post malone and current user right
251:57 - we're getting access to that so now
251:59 - let's try this let's get out of here and
252:02 - let's make sure we sign in first so
252:04 - let's sign in
252:06 - right
252:07 - now that we've signed in it should have
252:09 - access to that so let's just do all of
252:11 - this again bazooka
252:13 - zuckerman
252:14 - is the image
252:17 - bazooka category 10 minutes i love
252:21 - bazookas heart sign boom paste submit
252:25 - and let's see if we get an error this
252:27 - time
252:28 - okay inspect
252:30 - what is happening now
252:32 - submit
252:33 - oh i submitted it too many times okay
252:36 - let's see
252:37 - there we go i submitted it and you can
252:40 - actually see
252:41 - author i love bazookas bazooka man
252:44 - bazooka here's the image for that post
252:46 - title image there we go i ended up
252:48 - actually posting it three times let's go
252:50 - back and here we go
252:53 - all of those articles that we just
252:55 - posted are now showing up how beautiful
252:59 - is that that is amazing you did it you
253:02 - got yourself here you should be very
253:03 - proud of yourself for actually getting
253:05 - this done and now you can actually click
253:08 - into it and it shows you
253:09 - everything about your bazookas great job
253:12 - if you got this far
253:14 - you've absolutely
253:16 - crushed it this was an absolutely insane
253:19 - project you did so much if we actually
253:22 - go through this app there's so much that
253:25 - you've done you built the medium header
253:28 - you built the banner you built this
253:31 - postcard
253:32 - components
253:34 - you've made it dynamic where when you
253:35 - sign in there's actual authentication
253:38 - there's conditional rendering once i log
253:40 - in
253:41 - it actually changes it to and it says
253:44 - right
253:45 - and then i can actually i'm reading from
253:47 - a database and i'm able to actually
253:50 - write to the database as well
253:52 - and yes you can make this model a lot
253:54 - prettier and make this better and you
253:56 - can keep taking this app further and
253:57 - further but for now this is a medium
254:00 - clone and you should be very proud of
254:01 - yourself for actually getting to this
254:03 - part and building this all with next js
254:07 - so congratulations if you got this far
254:09 - make sure you smash the like button this
254:10 - video goes out to as many people as
254:12 - possible and as always i love your
254:14 - beautiful face this is qazi and i'll see
254:17 - you
254:18 - in the next video