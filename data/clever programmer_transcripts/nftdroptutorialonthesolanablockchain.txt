00:00 - in this video you guys are going to be
00:01 - making your very first nft collection on
00:04 - the Solana blockchain not only that but
00:07 - these nfts you can use your own custom
00:09 - images and your own personal attributes
00:11 - and it's going to be made simple because
00:13 - you're going to be using Solana candy
00:15 - machine from there I'll show you guys
00:17 - how to price your nfts and when do you
00:19 - want them to be revealed if you want a
00:21 - delayed reveal and you'll also get this
00:23 - sick front end while I'll show you guys
00:24 - how to make the mint functionality so
00:27 - that means users can buy the real nfts
00:30 - that you're creating and again as a
00:33 - disclaimer we're going to be using
00:33 - Solana monkey business as practice right
00:36 - these aren't real Salon monkey business
00:38 - nfts so be sure to make your very own
00:41 - and let's get started all right so this
00:44 - is the app that we're going to be
00:45 - building today it is a real nft
00:48 - collection with three items right and
00:51 - it's pretty simple all you do is connect
00:53 - your Phantom wallet and make sure you
00:55 - have some Solana and the process uh I
00:59 - already bought all the nfts for this
01:01 - collection but all you have to do is
01:02 - click this button and it's conditionally
01:04 - rendered so that it's gonna say mint but
01:07 - when it's sold out it will change to
01:09 - sold out and I'll update you know the
01:11 - minted items and the cost to zero and
01:13 - let's show you guys that this is a real
01:15 - nft because if I go to my collection
01:18 - look at that I have a Solana Monkey
01:21 - Business 1001 it's the one right here as
01:24 - you can see and again just a disclaimer
01:26 - this isn't a real Solano Monkey Business
01:28 - nft right over here but this just to
01:31 - Showcase uh that you can make whatever
01:34 - nfts that you want so let me show you
01:36 - how to get started and that's awesome so
01:39 - how do you get started with our app we
01:40 - have something that's going to make it
01:42 - super simple for you guys all you have
01:44 - to do is type in npx at cleverprogrammer
01:47 - and for you make sure you say at latest
01:49 - so that you have the latest version with
01:52 - all the builds that are up to date so go
01:54 - ahead and hit enter and you should see
01:56 - something like enter your email address
01:57 - which I'll do right here
02:01 - your name I'll put Lance Toledo and what
02:04 - project would you like to initialize so
02:06 - we have tons of tons of projects that
02:08 - you guys can do and get started and add
02:10 - to your own portfolio right but what
02:13 - we're going to do today is of course the
02:14 - Solana nft drop so hit Solana nft drop
02:17 - hit enter and wait just a moment because
02:21 - it might take a while to run some
02:22 - Scripts
02:24 - and once it's done it's going to open a
02:26 - new vs code for you and I'll jump right
02:28 - in when that's done all right so at this
02:31 - point you should have your repo
02:33 - downloaded using our CLI tool and you
02:36 - should see all these files here these
02:38 - are your starter files what you need to
02:40 - do next is we need to sign up for quick
02:42 - note so go ahead and open your browser
02:44 - like so and click on the link in the
02:46 - description to get your free account
02:50 - awesome so if you don't know quick note
02:52 - is a blockchain development platform
02:55 - that gives us things like an RPC
02:57 - endpoint which helps us connect directly
02:59 - to the Solana blockchain so let's go
03:02 - ahead and create a free account by
03:04 - clicking this button and once you do
03:06 - that and verify your email you should
03:08 - see something like this screen right
03:11 - here so let's make that bigger
03:13 - you know what just for you guys I'll
03:15 - even archive my old endpoint
03:17 - I understand the consequences archive
03:22 - endpoint to make it sure that you guys
03:24 - see the same screen so after you verify
03:26 - your email you should see start by
03:28 - creating an endpoint go ahead and click
03:30 - that
03:31 - and as you can see there's multiple
03:32 - different change that quick note
03:33 - supports uh from ethereum to polygon to
03:37 - bitcoin and what we want to do is Solana
03:39 - right here as you can see so click on
03:41 - Solana
03:42 - another key thing that you should note
03:44 - is that there's three different networks
03:46 - that we can work on with Solana it's the
03:47 - mainnet which is the real deal this is
03:50 - real money that you're using real Soul
03:52 - there's the test net and then there's
03:53 - the devnet as you can guess we're
03:55 - probably going to use the devnet so
03:57 - let's click on devnet hit continue on
03:59 - the bottom right here
04:00 - and once you do that you're going to see
04:01 - some add-ons nft fudge tool or across
04:04 - nft mint API we don't need that today
04:06 - let's go ahead and click create endpoint
04:11 - once that's done you should see a screen
04:13 - like this what we need to care about is
04:15 - this HTTP provider so go ahead and click
04:18 - this copy button and don't copy anything
04:20 - else if you lose it we'll come back to
04:21 - it
04:23 - so that's how you sign up okay so the
04:25 - very next thing we're going to do is we
04:26 - need to get set up with our Solana
04:28 - wallet so if you've done ethereum
04:31 - projects before you guys probably use
04:33 - metamask the equivalent that we're using
04:35 - today is something called Phantom wallet
04:38 - so Phantom is our wallet of choice as if
04:40 - I click on this tab right here you can
04:42 - see me open the wallet so if you already
04:44 - have Phantom skip ahead a little bit in
04:46 - the video to see what the next step is
04:48 - if you don't have Phantom all you need
04:50 - to do is go to a new tab and just say
04:52 - Phantom Chrome extension right so I'm
04:56 - using Google Chrome and if you click on
04:58 - this
04:59 - go ahead and click download here it says
05:02 - remove from chrome because I already
05:03 - have it so click download and make sure
05:06 - you save your mnemonic and sit don't
05:08 - share that with anybody by the way and
05:10 - make sure you create your wallet another
05:13 - thing that you're probably going going
05:14 - to have to do is click on Phantom go
05:17 - ahead and click on
05:20 - not that right here the icon and if you
05:24 - scroll you can go to developer settings
05:28 - and change the network to devnet because
05:31 - remember we're working on the devnet guy
05:33 - so make sure you click the devnet button
05:35 - and use that Network so once that's done
05:38 - you're all set up with Phantom and we're
05:40 - good to go so let me ask this out
05:41 - awesome so with that said I don't think
05:43 - we ever checked out the CLI starter file
05:46 - so go ahead and switch tabs to your vs
05:49 - code and we can do and make this a lot
05:52 - smaller and you know what let's bring
05:54 - this guy on this side so we can see him
05:57 - too
05:58 - and there we go cool so what you want to
06:01 - do is press command J or Ctrl J if
06:04 - you're on Windows and you should be on
06:06 - the CLI starter branch of this repo and
06:09 - all I have to do is say yarn
06:12 - to make sure you install all the modules
06:14 - which you should already have and just
06:16 - do yarn tab
06:19 - once you do yarn Dev
06:22 - you should be able to type in localhost
06:25 - 3000 and let's see what this looks like
06:27 - boom okay there's our app right cool and
06:30 - there's two modes if you go like this
06:32 - you can see that it's not salon and
06:34 - Monkey Business right we got crabs we
06:36 - have crabs instead of monkeys our goal
06:38 - today is to show you guys how to make
06:40 - your very own nft drop and fix these
06:43 - crabs and turn them into Solana Monkey
06:45 - Business nfts and remember they're not
06:48 - real Salon Monkey Business nfts they're
06:50 - just used to Showcase how to do that so
06:54 - you guys ready let's go ahead and get
06:56 - started all right so one of the first
06:58 - things you're going to notice is this
07:00 - connect wallet button right it doesn't
07:02 - work right we need to make use of our
07:05 - Phantom wallet and connect this exact
07:07 - wallet right if you look at this it says
07:09 - a tkz I should see that right here if
07:12 - you guys remember the demo so what I'm
07:15 - going to do now is show you guys how to
07:16 - set up your Phantom mod so the first
07:18 - thing we're going to need to do is let's
07:19 - understand how our app works
07:23 - so we can go over to my handy dandy
07:26 - whiteboard and let's understand how
07:29 - react components work so you can imagine
07:32 - components or your HTML or your divs as
07:36 - a parent child relationship so what I
07:39 - mean by parent child relationship is if
07:40 - you open up Pages you go to app.js this
07:43 - is your exact nft app right just
07:47 - completely blank this is what represents
07:49 - it right here okay this is app.js
07:52 - and let me fix this for a second for you
07:55 - guys
07:56 - poop okay
07:58 - what I want to do is show you guys
08:00 - and represent the app like so and if you
08:02 - already understand how to do this feel
08:04 - free to skip ahead a little bit it's
08:05 - where I start making the wallet
08:07 - connection but the first thing I don't
08:08 - have to do is understand that the parent
08:10 - is this app.js component right here
08:14 - Okay cool so once you understand that
08:16 - you can see that it's returning
08:18 - component but what's this right this
08:21 - component is actually your index.js
08:24 - right and then your index.js right which
08:27 - you're calling home
08:28 - is returning something called main so
08:30 - what do you think would happen right so
08:31 - the childhood app oops
08:34 - with the back child of app
08:37 - is actually a component
08:39 - called
08:40 - index .js right and index is returning
08:44 - main right oops keep doing that
08:51 - so it's returning main so let's put that
08:53 - here as well
08:54 - so it's returning me
08:56 - and what is Maine then so what would
08:59 - happen if I comment out main so am I
09:01 - still running this if I do
09:03 - this see boom We Lost main right it's
09:06 - gonna fail to compile because this
09:09 - entire page that we're seeing right here
09:11 - is the main component so let's go to the
09:13 - main component then Okay cool so now I
09:16 - see familiar uh HTML react components
09:20 - that look and make sense right so let's
09:22 - say we have something called header here
09:26 - let's go ahead and comment that up as
09:28 - you can see header is gone right and
09:30 - also the connect wallet button so keep
09:31 - that in mind all right we could easily
09:33 - remove the header it's gone we lost the
09:35 - connect multiple so we place it back
09:37 - it's there so how many children does the
09:41 - main.js have
09:43 - right it has one two three four
09:47 - five
09:49 - six right six components as its child
09:52 - right so we're only going to draw one
09:54 - two three four four actually we're gonna
09:57 - draw one two two of them all right so
09:59 - the main things that you want to know
10:01 - or look at is
10:04 - this arrow and this Arrow because this
10:08 - left arrow is going to be the header
10:10 - component and this right arrow is going
10:14 - to represent the nft display right why
10:18 - am i showing you this well because since
10:21 - you didn't build this from scratch you
10:22 - might not know where everything is so if
10:24 - I ask you guys where the hell can I edit
10:27 - this connect wallet button which
10:28 - component am I going to look The Entity
10:30 - display or am I going to look in the
10:31 - header three two one good job you said
10:35 - header I'm sure you said header right so
10:37 - if you said header that means you have
10:38 - to look in here because this holds the
10:42 - connect wallet button so if you
10:43 - understand that we should be good to go
10:45 - awesome so now that you understand the
10:48 - parent-child relationship of our current
10:50 - APP or you just skip the head because
10:52 - you're a freaking genius let's figure
10:53 - out where to work on the connect wallet
10:57 - uh button so the first thing we're going
10:59 - to do is head over to your index.js
11:05 - okay and once you're in your
11:08 - index.js we need to import a couple of
11:11 - things because we're going to use our
11:13 - endpoint right to have our wallet
11:17 - connect to the blockchain right so first
11:19 - we need to add and provide a couple
11:21 - things for this index let's provide
11:23 - those providers so the first I'm going
11:25 - to do is import
11:27 - yeah so come up to the top here and we
11:29 - can go ahead and import all of that
11:32 - stuff under here so we can say import
11:34 - this one's going to be called connection
11:38 - provider right and you're going to get
11:40 - it from Solana wallet adapter react this
11:43 - is a module or a package that you should
11:46 - already have if you use our CLI tool to
11:49 - do this right so if you look at our
11:50 - package.json there it is at Solana
11:53 - wallet adapter react right all the
11:56 - modules that you need for this app
11:57 - should be downloaded if you did the CLI
11:58 - tool which is why it's great so coming
12:00 - back to this and you know what we can go
12:03 - ahead and save and let's just zoom in so
12:06 - you can see the better how's that guys
12:07 - awesome and we go back up one cool so we
12:10 - got the connection provider and we also
12:12 - need another provider and this one's
12:13 - going to be called the wallet provider
12:17 - right because you also got to provide
12:18 - the wallet with our connection
12:20 - awesome so the next thing uh we want to
12:23 - add is the wallet modal provider if you
12:25 - ever saw me click on the Phantom wallet
12:27 - button right here or the connect wallet
12:29 - button a little modal comes up with all
12:31 - the available wallets right Isn't that
12:32 - cool right they give that for you so if
12:34 - you don't want to make that yourself
12:35 - save you some time by saying wallet
12:39 - modal
12:40 - provider okay and I'm gonna press tab
12:43 - because you're going to get this from
12:45 - Solana wallet adapter react UI right not
12:48 - just react react UI cool so that's the
12:51 - modal provider and now the fun part is
12:54 - you need to import what wallets are
12:56 - using all right so what wallet are we
12:58 - using guys did you forget it is Phantom
13:01 - wallet adapter right so there's a couple
13:04 - different other wallets but we're using
13:06 - Phantom so whatever walls you use add
13:09 - them right here so
13:10 - Soul flare whatever you like so from
13:13 - here just say salana wallet adapter
13:16 - wallets right because that's from that
13:18 - package and then from there we can get
13:20 - some CSS because remember how you saw
13:22 - it's that nice blue
13:24 - um color right we can give it the CSS
13:26 - you need you don't have to stop a button
13:28 - if you just do import uh quotes at
13:32 - Solana wallet adapter react UI slash uh
13:37 - Styles dot CSS I believe
13:39 - and I'll show you what happens if you
13:41 - don't have this so cool once that's done
13:43 - you should have everything you need for
13:47 - uh the connection of the wallet right
13:49 - here so the next thing we need to do is
13:51 - we need to set a couple States so let's
13:53 - set up this state it's called mounted so
13:55 - if you ever use the use State hook we're
13:58 - going to be using that now so
14:00 - we're going to set it up use State like
14:03 - so and our state is going to be called
14:06 - mounted and set mounted all right cool
14:11 - and then from there we can set the
14:13 - default state which you can put right
14:15 - here false
14:16 - okay so if I were to console log mounted
14:21 - it would actually be false because this
14:23 - is the initial state right here if you
14:25 - wanted to start at zero start at zero
14:26 - like this make sense
14:28 - that's our quick refresher so we have
14:30 - console log mounted uh what we need to
14:32 - do next is let's set up our wallet so we
14:35 - can set up all the wallets we have here
14:37 - by making a variable called wallets
14:40 - right
14:41 - technically I only have one but this is
14:43 - how I want to set it up so that you can
14:45 - add whatever you want
14:47 - so you can say constant wallets equals
14:50 - use memo right so we'll use memo is kind
14:54 - of like use effect and it's only going
14:56 - to return once without re-rendering the
14:59 - whole page so that's why we're using it
15:00 - and what we can do is set up an
15:03 - anonymous function like so
15:05 - and this can be an array and in this
15:08 - array you're going to put all the wallet
15:11 - adapters you want so let's put Phantom
15:13 - we can say new Phantom wallet adapter
15:16 - parentheses like so
15:18 - and comma and put this empty module
15:21 - right here and then from there that's it
15:24 - we set up our wallets all right we're
15:26 - going to use this in a second next thing
15:28 - we need to set up is uh we need to set
15:31 - up the snooze effect to fix that SSR
15:33 - error with next.js so in order to fix
15:37 - SSR error
15:40 - with next right so this one's not really
15:43 - related to Solana just make sure that
15:46 - you have this to remove any of those
15:48 - weird errors so let's just write a used
15:50 - effect
15:51 - and
15:52 - set up an empty
15:54 - Anonymous function there and inside here
15:57 - all we're going to do is just set
15:58 - mounted to True right and here comma
16:04 - empty module right so if you didn't use
16:06 - use effect use effect is going to run at
16:08 - three different points in the
16:10 - component's life cycle when I first load
16:12 - the page bam use effect is running this
16:14 - command okay when the component updates
16:17 - right so if anything changes I click a
16:19 - button or mint it's going to run it
16:20 - again all right set mounted true
16:23 - and when you remove a component or
16:25 - delete a component set mounted true
16:27 - that's when let's use effect runs but
16:28 - here's the catch right if you do this
16:31 - empty module here
16:33 - without putting anything in it's just
16:34 - going to run once
16:36 - so we only want this to happen once cool
16:39 - so after that's done
16:41 - we can go ahead and put in all of the
16:43 - providers we have on this page so we
16:46 - have a couple providers the first thing
16:47 - you want to do is add a connection
16:48 - provider like so
16:51 - and what we can do take that Main
16:54 - sandwich him in between like so
16:58 - Okay cool so we added our connection
17:01 - not done yet though we should add our
17:03 - wallet provider so let's add a wallet
17:05 - provider as well if you're wondering if
17:07 - you're lost you're like Lance what is he
17:08 - what are you doing it's all coming from
17:10 - here we set up all the Imports already
17:12 - so don't stress don't stress we got this
17:14 - so put in the wallet provider let's put
17:17 - in the main insides as well
17:21 - cool so we got that and last but not
17:24 - least we need to get this guy in here
17:26 - the modal itself so let's type in the
17:28 - wallet modal provider and you put that
17:30 - inside here
17:31 - wallet model provider
17:37 - of course we're going to bring Main
17:40 - inside there
17:41 - so it should look something like this
17:43 - take a moment pause if you need to go
17:45 - back if you're lost but I'm Gonna Keep
17:47 - it going guys so the first thing that we
17:49 - need to do is I saved and you can see we
17:51 - need to put an end point right so let's
17:54 - add our endpoint or our connection so if
17:57 - you press command b or control B
17:59 - the key thing here is our constant so
18:02 - click on constant.js and you'll see your
18:05 - RPC endpoint here so this is what we're
18:07 - going to use so we're going to use our
18:08 - RPC endpoint go ahead and click remember
18:12 - that thing you copied we're going back
18:13 - to that I'm going to hit copy again but
18:15 - if you have it saved still go ahead and
18:17 - replace
18:19 - this metaplex devnet to
18:22 - your unique endpoint like so mine's
18:25 - called empty white Friday not sure what
18:27 - that means but that's my endpoint okay
18:29 - so I want to save that
18:32 - and you're gonna still see this error
18:34 - because now we have to provide that
18:36 - input right I'm doing this on purpose so
18:38 - you can see that what you need to do is
18:40 - that this takes in some props you can
18:42 - call it end point
18:45 - and set it equal to
18:47 - the RPC endpoint right so look at
18:50 - closely we're exporting this so you can
18:52 - actually just import that so if you look
18:54 - we're already importing it right here so
18:56 - I set it up thank me later
18:58 - right can I get a thank you Lance
18:59 - awesome thank you all right so like I
19:03 - was saying we can put our PC endpoint
19:05 - here and this is our direct link and now
19:07 - we have a different error which is good
19:09 - so now I can't read properties of
19:11 - undefined reading filter oh another
19:13 - thing that we need to do uh this is just
19:16 - best practice in config put equals
19:19 - object and say commitment
19:24 - confirmed to start pre-flight checks is
19:27 - what we could call it so hit save and
19:29 - then we still got the error because what
19:31 - we need to do is in our wallet provider
19:33 - let's go ahead and put in all the
19:36 - wallets so we can say wallets equals
19:39 - this it's going to take in all of the
19:42 - wallet adapters so let's say wallets
19:45 - okay another cool thing to have is
19:47 - something called auto connect because if
19:50 - you already have your Phantom connected
19:52 - it will automatically connect right it's
19:54 - kind of obvious right thanks Lance so
19:56 - let's go ahead and keep moving we're
19:58 - going to do the wallet model provider
20:00 - and another key thing that we want to do
20:02 - here is writing some conditional
20:05 - rendering so if we can say mounted right
20:08 - which is our state which should be true
20:11 - and Main
20:13 - like so
20:15 - like this boom okay so when mounted and
20:19 - main component exists
20:21 - you know we can load it
20:24 - cool so we're gonna save
20:26 - boom no more errors all right so now you
20:28 - shouldn't see the screen I hope you were
20:30 - able to understand that because that is
20:33 - the index.js part now the easy part how
20:36 - can we turn this button to the nice
20:38 - lovely Phantom uh connection button that
20:41 - we saw so press Ctrl B and let's head
20:43 - over to the component that holds this so
20:45 - quick question where can I find the
20:48 - connect wallet button three two one nice
20:52 - job you said header so let's go to
20:54 - header index.js of the header and you
20:57 - can see right all the stuff here The
20:59 - Styling you don't have to get
21:00 - overwhelmed all right let's scroll down
21:02 - look at some comments and look at this
21:04 - the wallet connect button goes here so
21:08 - what you need to do is go to the top
21:10 - and say import wallet uh multi
21:14 - multi button right here
21:16 - you can see the suggestion click it and
21:19 - it's going to Auto Import it for you
21:21 - wallet multi button from Solana wallet
21:23 - adapter react UI Red Save and let's
21:27 - remove this hideous button right and
21:30 - replace it with the component of the
21:32 - wallet multi button like so hit save
21:37 - what did I tell you guys look at that
21:38 - you see this right here let's maximize
21:40 - this and let's zoom in as well
21:43 - boom all right you see this connect
21:45 - button let's click on it
21:47 - Auto connected right because I already
21:49 - have my wall I can disconnect right I
21:51 - can go to a different wallet right look
21:54 - how easy that was so this one is 4au
21:56 - connect
21:59 - or are you there we go so let's just
22:01 - disconnect it and I'm going to go back
22:03 - to my normal wallet but I hope you guys
22:05 - liked that and understand how to connect
22:08 - your wallet to your front-end
22:10 - application
22:11 - so on to the contract okay so now for
22:14 - the moment that you've been waiting for
22:16 - if you click this video you want to
22:17 - learn how to make your own nft drop on
22:21 - the Solana blockchain right so what we
22:23 - need to do is let's go ahead and make a
22:25 - new tab and we're going to head over to
22:27 - beta.soul
22:29 - PG dot IO so click on this and you
22:33 - should see this screen right here so if
22:35 - you don't know Seoul PG is Solana
22:38 - playground it lets you create smart
22:40 - contracts build deploy and even test all
22:44 - of these programs from right here and
22:46 - now guess what they have Solana nft
22:49 - support they support Megaplex so that's
22:53 - what we're going to be using metaplex is
22:54 - what helps us create all these nfts a
22:57 - lot easier and we're going to use their
22:58 - tool called candy machine so the first
23:01 - thing you're going to do is click on
23:02 - this plus icon right here click and the
23:05 - project name you can call it I don't
23:06 - know nft Dash drop
23:09 - and you can
23:11 - click on anchor rust so also you can see
23:15 - that there's now python support for
23:16 - Solana so if you want to see our other
23:18 - video on that it should be in the link
23:21 - on the recommended browser go ahead and
23:23 - search for it anyways we're clicking
23:24 - anchor rust right now so click on that
23:26 - hit create
23:27 - oh already exists we can do uh nft
23:31 - Solana and then hit create
23:35 - boom so should see something like this
23:37 - still the same what we need to do now is
23:40 - go into the CLI tool right here right
23:44 - bring it back up and just write Solana
23:47 - or sorry sugar
23:49 - create Dash config this is the very
23:52 - first step it's going to use something
23:54 - called sugar and create the config for
23:56 - our app boom okay so now you're going to
23:59 - see a couple different questions how
24:01 - many nfts will you have in your candy
24:03 - machine uh you can just do three put as
24:07 - many as you want I'm gonna put three
24:09 - what is the symbol of your collection so
24:11 - this is like the abbreviation of your
24:14 - nft collection like I said we're making
24:15 - the Solana Monkey Business clone so our
24:18 - symbol is SMB
24:21 - uh seller fee basis points this is
24:25 - basically the fee that you have uh how
24:28 - much percentage you get after you mint
24:31 - the nft so say someone you mentioned nft
24:33 - then you sell it how much percentage
24:34 - does the owner get you can set it up
24:36 - like so so if I write 500 times this but
24:40 - the percentage times 100 you get this so
24:42 - this is technically five percent so you
24:44 - can say that uh do you want to use
24:46 - sequential mint index we can say no how
24:49 - many Creator wallets you have so let's
24:50 - say uh you can have four people that you
24:53 - made this nft drop with you can put all
24:56 - the wallets here I only have one just me
24:58 - let's just do one and now the Creator
25:01 - wallet address one so now you can take
25:03 - this wallet address from Solana
25:04 - playground and paste that in there like
25:08 - so
25:09 - cool so how much percentage does each
25:11 - Creator get like somebody is the artist
25:12 - maybe you want to give them a share they
25:15 - can get 50 and then you get 50. right
25:17 - but it must all the shares must add up
25:19 - to a hundred so since we're the only
25:21 - Creator we're gonna do 100.
25:24 - you can leave this empty hit enter and
25:26 - do you want your nfts to remain mutable
25:27 - meaning that they can change you can say
25:30 - yes
25:31 - and Bam look at that so now this thing
25:33 - should pop up other metaplex candy
25:35 - machine
25:36 - config.js Json
25:38 - cool and this is what we should see
25:40 - right now the next step that we need to
25:42 - do is we need to upload our assets to
25:45 - our candy machine so we can do sugar
25:47 - upload and we should see this here so if
25:49 - you already have your asset sets up
25:51 - assets set up go ahead and drop those
25:54 - files if you don't let me show you guys
25:56 - how to make your very own assets
25:58 - all right so you want to learn how to
25:59 - create your own assets for your nft drop
26:01 - all you have to do is this right what we
26:04 - need to do is
26:06 - if you're ever lost at all go ahead and
26:09 - search up the metaplex documentation
26:11 - right they already wrote a nice guide
26:13 - for you guys it's basically everything
26:15 - I'm talking about but in a little bit
26:16 - more detail and in written form right so
26:19 - we've already created a config what we
26:21 - need to look at is this one it's called
26:22 - preparing your assets and what you need
26:25 - to know is that you need a PNG file and
26:27 - a DOT Json file and these two have to
26:30 - like map together right let me show you
26:33 - what I mean so I actually provided you
26:34 - with that Json file so if I make this
26:37 - just a little bit bigger command B you
26:39 - can see this assets folder right here
26:40 - right click on it click on xero.json and
26:43 - there you go we have studious crab
26:46 - number one is the name and if you scroll
26:48 - down right here the URI is the zero dot
26:52 - PNG all right that's the image also
26:54 - shows 0.png as the image as well and
26:56 - what's the zero.pngland it's the studio
26:58 - scrub right here and that's also what's
27:01 - being rendered
27:02 - on the app studious crap yeah
27:05 - so the easy part for you is that we just
27:08 - have to edit this Json file before we
27:10 - update it yeah okay so if that makes
27:12 - sense this is what we're going to be
27:13 - doing next so what you need to know is
27:16 - if you want your own uh sample
27:18 - collection if you scroll to the bottom
27:20 - click on this right here it'll give you
27:22 - a sample Json file with all the assets
27:25 - just like what I gave you but since you
27:27 - already have it let's keep it going so
27:29 - it's easy enough we just need the PNG
27:31 - files and the information uh if you
27:34 - don't want to make a Solana Monkey
27:36 - Business clone go ahead and customize it
27:38 - with your very own assets right so let's
27:40 - go to Solana
27:43 - monkey
27:44 - business okay
27:47 - and we can go to openc or magic Eden
27:50 - let's go to openc and look at this these
27:52 - are all the SMB nfts we can do something
27:55 - really cool we can go from Price high to
27:57 - low
27:58 - right so this is from high highest price
28:01 - of Solana to lowest price so let's go
28:04 - ahead and click on this guy with the
28:07 - backwards hat this is SMB number 10. and
28:09 - we can actually do a side by side here
28:12 - so let's do this Ctrl B
28:15 - how are we doing awesome
28:17 - so all we have to do is Click copy SMB
28:22 - number 10 and replace this right here
28:25 - all right so that's the name and
28:26 - remember that symbol that we did at the
28:28 - beginning when we created the config
28:29 - make sure it's the exact same we're also
28:31 - get an error so do SMB and the
28:33 - description here you can customize it I
28:36 - just like to do
28:37 - this on the Solana blockchain copy that
28:41 - and that is your description
28:45 - make it whatever you want image should
28:47 - be the same name except dot PNG which
28:50 - will update later
28:52 - uh the next thing you should see here is
28:54 - attributes these are the attributes of
28:56 - your nft so let's look at the attributes
28:59 - of this studious crowd right accessory
29:01 - lamp trait type chair red books blue
29:04 - right what we want to copy is these
29:07 - right each nft can have their own
29:09 - properties and uh depending on the trait
29:12 - it might be more rare and that that is
29:14 - what uh gives it the value so if you
29:16 - look this one is
29:19 - the What's called the ears is none 79 of
29:22 - these uh saloni Monkey Business clones I
29:25 - mean nfts have this trait so it's common
29:27 - let's see a non-common right purple
29:29 - backwards hat right that's not common
29:32 - that that's only seven percent or three
29:34 - percent actually that have the hat so
29:37 - that's how you know that this one is
29:38 - really expensive so what you can do is
29:41 - change those trade types right so if you
29:42 - do trade type
29:43 - we can say hat and then we could see if
29:46 - the value of I believe it's purple
29:49 - purple backwards
29:51 - does it show me
29:53 - purple backwards
29:55 - purple backwards cap that's the name so
29:57 - let's type that purple
29:59 - backwards
30:01 - okay
30:02 - okay and then we can do other stuff like
30:05 - uh
30:08 - type
30:09 - the type
30:11 - is purple
30:14 - it's a purple monkey
30:16 - and let's see clothes
30:19 - let's do these three and this is green
30:21 - smoking apparently green smoke smoke
30:26 - okay cool and the properties you keep
30:29 - that the same right because it's going
30:30 - to be a PNG file hit save and now if you
30:34 - look this is our new zero.json but the
30:37 - image is still the crap right we want to
30:38 - use our image so this is the part where
30:40 - you get your own image or you copy this
30:43 - image right here and again not the Real
30:45 - Solana Monkey Business this is
30:46 - technically a clone to show you guys how
30:49 - to use it
30:50 - so go ahead and to get the PNG version
30:53 - of this image I'm going to copy image
30:55 - address
30:56 - and I'm going to
30:57 - actually no we can actually paste it or
30:59 - open image in a new tab it's easier and
31:02 - you're going to see if you save this
31:03 - it's not going to be the right format so
31:05 - under format right here
31:07 - change this to PNG
31:09 - right and hit enter
31:11 - there might be other ways to do this but
31:12 - if I hit save image as you're going to
31:15 - see that it's a
31:16 - PNG image right so you're going to see
31:20 - the other ones that we have here go
31:21 - ahead and click the zero one because if
31:24 - you hit save we want to replace that
31:26 - studious crab right so hit save
31:29 - X this out and if you look on here click
31:32 - zero PNG no more studious card we have
31:34 - Solani Monkey Business number 10. all
31:37 - right cool
31:38 - and with all the properties as well
31:41 - so going back to this
31:44 - uh let's get capital P purple let's do
31:47 - this for the next two items but if you
31:49 - get this idea go ahead and customize
31:51 - this to how you want skip ahead if you
31:53 - understand this or just follow along see
31:55 - how we do okay so next one we want to
31:58 - get one.json the second nft the studio
32:01 - scribe number two we don't want the
32:03 - studious crab we want another one let's
32:06 - get this guy with the headphones this
32:09 - looks cool so this is SMB
32:12 - number a thousand and one so I'm gonna
32:14 - erase this and we'll blam SMB 1001.
32:18 - description
32:20 - I can copy this
32:23 - nope copy this paste save
32:27 - and image to keep this the same and now
32:30 - for the traits we believe we did hat
32:33 - hat and they have pink headset
32:37 - pink
32:39 - head set
32:42 - and accessory we didn't have that we had
32:45 - I think we did type type
32:48 - we did
32:49 - just dark
32:50 - Dark Monkey and then for the clothes
32:54 - they actually have none so clothes
32:58 - no this monkey has no clothes so save
33:01 - that and there you go so now we can do
33:03 - this open image a new tab
33:06 - uh we want to go to the format
33:09 - and change this to PNG if you have
33:12 - another way of getting the PNG version
33:13 - just feel free to do that I do save
33:16 - image as here
33:17 - click on one save
33:19 - boom
33:21 - cool so we have that saved you can
33:22 - double check by looking at the one.png
33:25 - there we go monkey hit bones and now we
33:28 - can go to 2.json or our third
33:31 - SMB I'm gonna head back on this
33:34 - and let's do which one you guys want to
33:37 - do
33:37 - let's do Mohawk monkey
33:40 - Okay cool so oh it's actually the next
33:43 - one over this is a thousand and two so
33:45 - let's go ahead and click thousand and
33:46 - two oh and don't forget to change the
33:48 - symbol like I said SMB
33:50 - on one.json SMB on two dutches
33:54 - okay awesome now description
34:00 - we know the drill by now
34:03 - paste save and now the types we saw we
34:07 - did
34:08 - hat
34:09 - the Hat on this
34:11 - is
34:13 - red Punk hair that's what it's called
34:15 - red Punk here
34:16 - yeah so
34:18 - cool
34:19 - and then we did
34:22 - uh type
34:25 - type is purple another purple monkey
34:28 - and clothes
34:33 - this one is beige smoking big
34:38 - beige smoking
34:41 - so hit save let's get this image
34:46 - format
34:51 - PNG
34:53 - save images
34:55 - two
34:56 - and hit save
34:59 - cool and if you didn't know I'm actually
35:00 - saving it to this file directly to this
35:03 - folder directly so if I click on this
35:04 - you'll see that it's already there so I
35:06 - don't have to move stuff around right uh
35:09 - it might not end up in your folder go
35:11 - ahead and take all the ones you
35:12 - downloaded and move it to this assets
35:14 - folder
35:15 - you got it cool uh the next thing I
35:18 - noticed is the collection dot Json right
35:21 - so there needs to be another file for
35:23 - the collection itself right so if you
35:26 - look
35:27 - the collection.png this is it says
35:30 - numbers collection we want the Solana
35:32 - monkey business logo right here so here
35:36 - let's edit that Json file
35:39 - and if you look it says crab collection
35:40 - it should just be SMB make sure it has
35:43 - the same symbol
35:45 - uh we can go back here and copy that
35:48 - description
35:52 - and for this collection.png no
35:55 - attributes but the properties and files
35:58 - should be like so now I gotta get the
36:00 - image so I think we can get the Solana
36:02 - monkey business logo
36:06 - if I go here
36:08 - and save this one right here this could
36:10 - be our collection logo or you can use
36:12 - whatever you want as long as it
36:13 - represents the collection and I'll keep
36:15 - it the same name hit save
36:18 - and if I look
36:19 - bam that's our collection item so this
36:22 - is the collection itself the item and
36:25 - inside this collection uh is all of
36:28 - these nfts right so that's why you need
36:31 - to have this Json file so keep that in
36:32 - mind
36:33 - awesome so now that we have all of that
36:35 - let's go ahead and
36:37 - get that folder so we can go to file we
36:40 - can go to all of our projects uh I
36:44 - believe mine is in here
36:46 - go to the assets and we could just copy
36:48 - all of this go to wherever your folder
36:50 - is and drag it over here and upload
36:52 - those assets
36:53 - okay so I'm imported eight files so if
36:56 - you did uh three
36:58 - nfts there should be a fourth one which
37:00 - is your collection and since there's a
37:03 - Json for every PNG you should have eight
37:06 - so think about how much you have double
37:08 - it that's how much files used to have so
37:10 - hit continue and
37:12 - it should be uploading and if you didn't
37:13 - know all these images are getting
37:15 - uploaded to are we
37:18 - if you don't know what RV is it is a
37:21 - decentralized storage Network right uh
37:25 - if you don't know let's go to my
37:26 - handy-dandy notebook or you can think of
37:29 - the Solana blockchain whoops as this
37:33 - block right here right this giant
37:36 - Solana blockchain all right
37:40 - this um what's it called candy machine
37:42 - it lives on the blockchain so this is
37:45 - our candy machine
37:47 - right
37:48 - imagine if I had like 12 nfts with
37:51 - pictures and everything and putting it
37:54 - on this chain right so this is my
37:55 - pictures the nft the metadata right
37:58 - every time you add something to the
38:01 - salon of blockchain you have to pay for
38:03 - the space that's there right you're
38:05 - gonna pay what's we call like rent right
38:06 - and if you put actual images which can
38:09 - be very big very small right it's going
38:12 - to take up a lot of space and it's going
38:14 - to be very expensive so it's what we do
38:17 - instead is we store right
38:21 - this is your nft
38:23 - and we store what we call a reference
38:27 - to your image right
38:28 - a reference a pointer
38:31 - to the image right the nft image itself
38:35 - right and that pointer
38:37 - is going to point us to
38:41 - our weave which is its own decentralized
38:44 - storage Network which has the image
38:47 - okay so what we're doing here
38:51 - in a salon playground is we're uploading
38:52 - all those files metadata images to are
38:56 - we and that's what we're referencing
38:58 - later and you can see it in the config
38:59 - in a second so if this is successful
39:01 - uploading we can look at the cache.json
39:04 - over here
39:06 - click on that and you can see there's an
39:09 - image hash there's an image link and it
39:11 - goes directly to our weave itself right
39:13 - I can click on this and you can see this
39:16 - is ourweave.net and it's going to take
39:17 - me here and it should load a Json file
39:20 - or the image itself so this is where it
39:22 - lives on our web it's actually on the
39:24 - chain
39:25 - okay of are we
39:27 - cool and it's reference here so notice
39:29 - how the image itself isn't in the the
39:32 - candy machine that's one thing to note
39:34 - but if you look all the information we
39:36 - have is here right uh the one thing
39:39 - we're missing is that our candy machine
39:42 - doesn't exist on the Solana blockchain
39:44 - yet technically oops
39:47 - technically it's right here it's in
39:49 - limbo it's in Seoul PG still right so we
39:51 - need to do is come back here
39:54 - and go ahead and do sugar deploy
39:59 - all right so now it's going to create
40:01 - our collection of nfts and deploy it on
40:05 - to the Solana blockchain so visually
40:07 - speaking we just technically uh did this
40:10 - put it on the Solana blockchain
40:12 - okay
40:13 - so
40:14 - you can see the deployment was
40:16 - successful if you ran into any errors at
40:18 - all it's probably your file so maybe you
40:21 - forgot to check if you have the right
40:22 - symbols for each of the entities and
40:25 - remember to have your collection notice
40:26 - how it's minus one on this one
40:29 - okay so now the deployment's successful
40:31 - and you can see this candy machine uh
40:33 - what's called candy machine public key
40:36 - this is the address technically of where
40:38 - your candy machine lives on the salon of
40:40 - blockchain so cool a lot of things that
40:43 - I'm speaking here that you're probably
40:45 - like I have no idea what he's saying but
40:47 - if you just keep you know watching this
40:49 - video and over and over again or keep
40:50 - working with the Solana blockchain it'll
40:52 - start to make sense so this is the
40:53 - public key of the candy machine
40:56 - basically the address of where it lives
40:58 - and the next thing you can do is add a
41:01 - candy guard right so this is where you
41:03 - can put the pricing on things which
41:04 - should make this fun
41:06 - so we could do is uh head over to here
41:09 - and let's click on one of my tabs on
41:11 - docs it's called sugar for candy machine
41:13 - B3 all right search this up on Google
41:15 - for metaplex and you can find the
41:18 - available guard so if you didn't know
41:20 - let's go down to here
41:23 - cards can be used to define
41:26 - um things about our collection so what I
41:28 - mean by that is
41:31 - we can define a
41:33 - start date and an end date so notice
41:35 - this end date here this is going to say
41:37 - like hey after uh December 24 you can't
41:41 - mint any more nfts so this is what you
41:43 - need to add to your cash right here you
41:47 - gotta add that to the actually config
41:49 - you're going to add the end date right
41:51 - here
41:52 - okay
41:54 - same thing with for example the bot text
41:56 - so if you don't know what bot tax means
41:59 - people use utilize Bots to buy all and
42:02 - mint all the nfts before normal humans
42:04 - can buy that themselves so it'll just be
42:06 - sold out and they just resell it for
42:08 - absorbent amount right so this bot tax
42:11 - guard will charge a penalty for invalid
42:13 - transactions so that's another good
42:15 - thing to have and I think we can use the
42:18 - default guards right here so go ahead go
42:20 - to this part of the screen copy this
42:22 - guards all the way up to this uh curly
42:26 - bracket so I'm going to say copy let's
42:28 - go back to not that one to our
42:32 - I think oh
42:33 - so on a playground and then highlight up
42:36 - to the guards quotes paste and there we
42:38 - go this is the default example that they
42:41 - have so what what kind of guards do we
42:42 - have guys let's take a look we have butt
42:45 - text right we have a start date and we
42:48 - have soul payment right the thing with
42:51 - sole payment it doesn't even have to be
42:52 - sold that we pay with uh you can use
42:54 - usdc as well which is just the US
42:57 - Standard dollar coin essentially
43:00 - anyways for sole payment you can say how
43:03 - much each nft cost we can say 0.5 right
43:06 - these are really cheap because they're
43:08 - not real so they're gonna cost 0.5 so uh
43:12 - the start date is here right to 2022
43:15 - because it's in the past so that means
43:17 - this is when you can start buying it if
43:19 - I were to make this date even later
43:21 - let's say 2024 then you can only mint it
43:25 - when that date comes makes sense so any
43:27 - customizations you want to do at all go
43:30 - ahead and look at all of these guards
43:33 - and make sure you add them all right
43:35 - there's a lot of different things you
43:36 - could do like token gating nft gating
43:39 - you can even do so let's say you know
43:40 - any other nft to even mint this next set
43:43 - you could do something like that so have
43:45 - fun with it play around test it but
43:47 - we're gonna go very basic to get you
43:49 - guys started so go ahead and write sugar
43:53 - guard add to add all the things you
43:56 - added on the config
43:59 - so initializing a candy guard it's
44:01 - wrapping boom so now if you look
44:07 - uh I think it's in the cache
44:09 - now candy guard now has its own public
44:12 - key right here so this is the PK which
44:15 - I'll call it for the candy guard
44:16 - okay
44:18 - uh one thing you need to know is this
44:20 - go back to your config.json and go back
44:23 - to sole payment there's something I
44:24 - forgot to mention so each nft that we
44:27 - have is going to cost 0.5 Sole and the
44:30 - destination where is that Soul going you
44:33 - need to set right otherwise this is a
44:34 - wallet address another PK so let's say I
44:38 - open up my Phantom
44:40 - and I want every person who mints in nft
44:44 - they pay 0.5 so I want it to go to
44:47 - somebody so let's make
44:50 - uh that go to qazi my qazi wallet here
44:53 - so what we can do is copy that address
44:56 - and paste it here all right and actually
44:59 - let's make this more expensive so it's
45:01 - more visual let's say it's cost one soul
45:03 - all right so it's going to cost one
45:06 - still for each nft and now that we uh
45:09 - updated this we need to write sugar
45:11 - guard update
45:15 - so now we're updating the config and
45:17 - there we go so now our candy machine
45:20 - should be up to date the new payment the
45:22 - new price is one the destination for the
45:25 - payment will go to my Kazi wallet okay
45:27 - so we're giving Kazi some money for
45:29 - every entity we meant so I'm sure he'll
45:31 - be happy with that let's go to the next
45:34 - step now all right so we set up our
45:36 - candy machine now you might be wondering
45:38 - if you're new how do I get some soul
45:40 - right this Coswell already has 6.9 sold
45:44 - to it how can I give myself some Solana
45:47 - so I'm gonna go back to wallet number
45:48 - one
45:49 - and in wallet number one I have three
45:50 - Soul how do we get more if you go to a
45:53 - new tab we go to something called
45:55 - soulfosset.com and there's other stuff
45:58 - like this but what we could do is get
46:01 - free Solana devnet tokens to our wallet
46:04 - so we have to do is click on your
46:05 - Phantom copy your wallet address or your
46:09 - wallet PK paste it and airdrop to Seoul
46:13 - to the devnet right
46:15 - and okay there's error but uh usually
46:17 - this is how you can get Solana for your
46:19 - wallet okay so make sure to do that a
46:23 - couple times it might have an error if
46:24 - you click it too much which I just did
46:26 - recently that's why we got error so give
46:28 - it some time
46:30 - Okay cool so now you guys know how to
46:31 - get um some Solana should have a couple
46:34 - of soul in your wallets because remember
46:36 - each of these costs one
46:38 - and now what we need to do is this
46:41 - all right go ahead to your uh cache.json
46:45 - and what we need is our candy machine
46:47 - address so go ahead
46:50 - copy this candy machine address right
46:52 - here
46:53 - and let's go back to our app
46:56 - right which is this and go to our utils
47:00 - and in our utils go to constants and one
47:03 - thing I remember is remember the candy
47:05 - machine ID
47:06 - this is where you're going to put your
47:07 - candy machine ID right so mine the one I
47:12 - copied and we can just
47:14 - paste it like so I'm on the FK thing so
47:16 - save
47:17 - uh Ctrl B and there you go we have our
47:20 - candy machine ID and it's exported so
47:22 - that we can use it in just a second here
47:25 - so let's go ahead and set up our candy
47:26 - machine on our front end all right so if
47:29 - you made it this far we are about to set
47:31 - up our candy machine to our front end so
47:35 - just to recap we are using something
47:36 - called metaplex which makes it easy to
47:39 - make your nfts and Collections and
47:42 - specifically candy machine which is a
47:44 - tool to set up your assets and to host
47:47 - your collection Okay cool so the first
47:50 - thing that we're gonna need to do after
47:51 - you put your candy machine public key
47:54 - here is let's head over to main okay so
47:58 - if we go to
48:00 - our main component
48:03 - under public or under pages and then
48:06 - Main
48:07 - you're going to notice our app right and
48:09 - then if you look at something called nft
48:12 - display that's where you're seeing our
48:15 - application right here right this is
48:18 - what's showing the nfts if you want to
48:20 - see your own nfts this is what you're
48:23 - going to do so go to your Solana
48:25 - playground
48:26 - and remember your cash dot Json all
48:30 - right we can take this cache.json and
48:33 - iterate through it and get the image
48:35 - link right so what we could do is
48:37 - literally just copy this object right
48:38 - here uh hit copy and to make it easier
48:41 - let's do something like this
48:44 - uh
48:47 - actually now we can make this full
48:49 - screen still
48:51 - all right so let's take that object
48:53 - go back to vs code
48:54 - and what we could do is go to
48:57 - where we're getting this data so if you
48:59 - look at nft display
49:03 - under index we are getting data from
49:06 - sample right what we want is data
49:13 - .js right so we want to change this
49:15 - stuff so let's go ahead and change this
49:17 - object with this object and if we hit
49:20 - save uh it's not gonna change right away
49:24 - right because we have to change this
49:25 - later on but let's go ahead and add the
49:27 - rest of the object so I'm going to get
49:29 - the next one which is this right here
49:33 - I'm gonna get the next one
49:36 - and the last one is the collection but
49:38 - we don't need that because we're not
49:39 - displaying that picture right there cool
49:42 - so we got all of those and updated our
49:44 - data.js and now we can go to their nft
49:47 - display
49:49 - I'm going to send a sample we need data
49:53 - so now when I hit save take a look
49:55 - we go back to Solana Monkey Business and
49:58 - there it is there are our nfts all three
50:00 - of them they look really cool like so so
50:04 - these are our smbs let's hit connect and
50:07 - we're connected and now we just need to
50:09 - know how to Mint them and how much nfts
50:12 - do we have like well I want to see how
50:13 - much are remaining how many are minted
50:16 - and how much do they each cost right
50:18 - don't you want to see that so we're
50:20 - going to set that up right now
50:22 - okay first step that you need to do you
50:24 - need to head over to
50:27 - your main component once again
50:30 - So Paid Pages Main and here we go now
50:34 - that you're here we need to import a
50:36 - couple different things so what we want
50:39 - to import
50:40 - is
50:42 - something like this we're going to
50:43 - import a lot of things from metaplex so
50:45 - we can say from at metaplex
50:48 - foundation.js because remember we're
50:50 - using metaplex as our tool to make this
50:52 - easier right so what we want to get from
50:54 - metaplex is a guest identity we want to
50:58 - get metaplex itself meta Plex we also
51:02 - want to get a wallet adapter identity
51:06 - and we're going to use pretty much all
51:08 - the things that we're importing right
51:09 - here okay and while we're here let's
51:11 - import a couple different things that
51:13 - will make sense later kind of like how
51:14 - we did last time so let's import
51:18 - see object lamp ports per Soul so if you
51:23 - didn't know lamp ports is like a smaller
51:25 - unit of Soul all right so think of it
51:27 - like a dollar if you break up a dollar
51:29 - you get cents a bunch of Lan ports makes
51:31 - one Soul so let's get lampard's personal
51:35 - and we also want to import a couple
51:37 - things from Solana wall adapter again so
51:40 - let's get um
51:41 - use oops use anchor wallet tab there you
51:46 - go and there's a used connection I
51:48 - believe so use connection
51:51 - okay cool
51:53 - and
51:54 - we also want to be using our candy
51:56 - machine ID so let's go ahead and import
51:58 - that say import
52:00 - candy machine ID from utils
52:05 - okay nice and there's our Styles and we
52:08 - can set up a state so we already
52:10 - imported use date so we're good to go so
52:13 - let's make one so this one's gonna be a
52:14 - state for our metaplex so we can say
52:16 - equals use State oops use state
52:21 - and our state is going to be
52:23 - metaplex comma set metaplex okay cool
52:29 - and you can set the default initial
52:31 - state to nothing for now because what
52:32 - we're going to do is set up our metaplex
52:34 - right so how do we set up metaplex guys
52:36 - well the first thing you want to do is
52:39 - let's get some connections ready for
52:41 - later as well let's get const connection
52:44 - from news connection
52:46 - not from uh you want to say equals
52:48 - because the hook use connection and you
52:52 - also want to get const wallet from use
52:57 - anchor wallet
52:59 - cool so store this in a variable awesome
53:03 - all right so back to what I was saying
53:04 - about the use effect so let's make a use
53:05 - effect you can say use effect
53:09 - like so
53:11 - Arrow function and we're already set up
53:13 - so in this use effect all I want to do
53:16 - is set metaplex
53:19 - okay but now here's the part how do we
53:21 - set up metaplex inside this state right
53:23 - we're changing this state from nothing
53:25 - to something right so what I want to
53:29 - change it to is
53:31 - metaplex right where we're getting this
53:33 - we are getting this from
53:35 - our import
53:37 - and there's some built-in functions or
53:39 - methods here one of them is dot make
53:42 - so dot make and we pass in a connection
53:45 - so we say connection
53:47 - and then we say dot use
53:49 - parentheses and what the connection you
53:52 - want to use well wallets well we want to
53:53 - say some conditional rendering so if
53:56 - wallet exists use the wallet adapter
54:00 - identity
54:01 - right from here
54:03 - come back down
54:05 - and pass in the wallet and type that
54:08 - identity
54:09 - if not we'll use the guest identity
54:13 - okay
54:14 - and that's gonna be our metaplex right
54:16 - so if I were to console log metaplex
54:19 - let's see what we get oops
54:25 - here is our magic box
54:29 - not that
54:33 - so let's refresh this
54:36 - let's see what comes up
54:38 - oh is this even running
54:39 - okay it's running
54:43 - back to console awesome so I loaded a
54:46 - couple times that's fine
54:49 - yeah it's constantly re-rendering and
54:52 - the reason why it's re-rendering right
54:54 - is because we did not put a dependency
54:57 - module here so this needs a dependency
54:58 - module and we can make it depend on the
55:02 - connection and the wallet so it will
55:05 - only render once
55:07 - or when the connection or wallet is
55:09 - changed so now you won't see the
55:10 - infinite render so let's refresh it
55:13 - cool so it's like live debugging right
55:15 - here
55:17 - awesome
55:18 - cool so yep you should only see it twice
55:21 - because we're about to see another time
55:22 - when we connect cool so this is our
55:25 - connection metaplex and when I open that
55:27 - metaplex object you can see
55:30 - Auction House candy machines candy
55:32 - machines V2 right uh you can do dot RPC
55:36 - we can do dot storage so there's a lot
55:39 - of different things you can do with
55:40 - candy machine but I'll show you guys
55:42 - what we what we would want specifically
55:44 - so we're going to use metaplex for
55:45 - something else all right so we don't
55:47 - need that
55:48 - so let's go ahead and erase
55:51 - and let's set up one more use effect
55:53 - right let's so we set our metaplex
55:55 - object here and then now let's use that
55:57 - metaplex object to get what we want
56:01 - so what I want to do is set up my uh
56:06 - state right for my candy machine
56:08 - and update it
56:11 - uh
56:13 - every few seconds all right so how can I
56:17 - set up my state and update it without
56:19 - calling the function over and over again
56:21 - all right this is where use effect comes
56:23 - in so let's make another one
56:24 - let's say use effect
56:28 - Arrow
56:30 - cool so in my use effect all right we
56:33 - can set up some edge cases I like to
56:35 - call it so if we say if
56:38 - metaplex
56:40 - return right what does this mean it just
56:42 - basically means if there's no metaplex
56:44 - right this doesn't work for whatever
56:46 - whatever reason then this isn't going to
56:48 - run we're just going to return right
56:50 - just leave because there's no metaplex
56:51 - okay that's called an edge case
56:54 - so if that's the case that's fine but
56:56 - now what do we want to do we want to set
56:59 - up my state and update all right so
57:01 - let's set up let's call it update so
57:03 - we'll say const update state or this is
57:06 - me making a function
57:07 - and we'll put in a function like so and
57:11 - it's important that this is a
57:12 - synchronous so make it asynchronous
57:15 - and once you make an asynchronous go
57:17 - inside
57:18 - between the curly brackets and let's set
57:20 - up H for I
57:22 - catch
57:24 - okay
57:25 - because it wants you to essentially do a
57:27 - promise and try whatever I write in here
57:30 - if it fails for whatever reason it's
57:32 - going to hit this catch so let's set up
57:34 - the catch it's pretty simple we can do
57:36 - an E like that like that and then we can
57:39 - say
57:40 - console dot blog e right
57:44 - cool
57:46 - then we can even uh
57:49 - we can even say toast that air right if
57:52 - you don't know what toast is it's
57:53 - basically notifications that are built
57:55 - in using the packages and you can say uh
57:58 - something
57:59 - went wrong yeah error has occurred
58:04 - so you should see a little pop-up
58:05 - automatically thanks to toast then error
58:07 - has a code if any of these things fail
58:09 - right here
58:11 - okay now
58:13 - we want to set up a couple different
58:15 - states when we update state right we
58:17 - gotta tell them what states are we
58:18 - updating right so what states are we
58:20 - updating that's a great question we're
58:22 - gonna go up here and we're gonna make a
58:24 - couple things we can say const
58:27 - candy state
58:30 - all right this is the state of my candy
58:31 - machine set candy state
58:35 - set that equal to U stick
58:39 - okay
58:40 - set up another one
58:42 - this one's going to be called candy
58:44 - state error right so we can put a nice
58:46 - you take the error and put it inside a
58:49 - nice error message and display that on
58:51 - our front end
58:52 - okay okay the set candy state
58:57 - it's equal to use state
59:01 - awesome so if anything goes wrong we'll
59:02 - be able to display it we can also say a
59:05 - loading State const candy state loading
59:10 - and set candy state loading
59:16 - and set this to True by default
59:19 - and then we could do a transaction error
59:22 - as well so we could say TX error this is
59:25 - these are also these last few are
59:26 - optional but it's good to have if you
59:29 - want to play with it so whatever
59:31 - equals use state
59:35 - I feel like there's something in my
59:36 - throat anyways let's keep it going
59:39 - let's do a TX loading and set TX loading
59:45 - all right so you can have a nice loading
59:46 - screen if you use utilize this as well
59:49 - uh but we're just gonna have a message
59:50 - that says something and this one by
59:52 - default is false
59:55 - all right
59:57 - um last but not least we also want to
59:59 - set our nft so const
60:02 - nfts
60:03 - and we're only really going to use set
60:05 - nfts here
60:08 - okay
60:12 - set this to an empty array
60:15 - cool so that should be all our states
60:20 - so now to our function so go back to
60:22 - your update State function and we're
60:23 - going to start writing into the try so
60:25 - inside the try we're going to say con
60:27 - state right it's a variable is equal to
60:30 - a weight right we're going to wait till
60:32 - we run this Command right here whatever
60:35 - it is so this variable is equal to
60:39 - await metaplex or using metaplex and if
60:42 - you remember
60:43 - metaplex has metaplex candy machines all
60:47 - right we're going to use that so we're
60:48 - going to use metaplex
60:50 - and then I'm just going to format it
60:51 - right here Dot
60:53 - candy
60:54 - machines
60:56 - right and then you can do another dot
60:58 - for chaining it dot find a buy address I
61:02 - Believe by address
61:04 - okay and what is the address of our
61:08 - candy machine right and we can pull it
61:10 - up like so so make an object in here and
61:12 - say address
61:14 - key and the value is our candy machine
61:17 - ID so put that in there boys and girls
61:19 - we can say candy
61:22 - machine ID
61:24 - okay so what's happening here we are
61:25 - trying to set up our state we are
61:27 - getting metaplex getting the candy
61:29 - machines finding the specific one with
61:32 - this address
61:33 - make sense
61:36 - cool so now
61:37 - if that makes sense to you we can set
61:41 - this state because now after this is
61:43 - done if it's successful we have a state
61:46 - fair we can say State here
61:48 - um if it fails it's going to go into the
61:50 - error until this moment wrong so now I
61:52 - can say state after this line but what
61:54 - we need to do next is set our state so
61:56 - we can say set candy state that's what
61:58 - we made that earlier for and pass in
62:01 - state
62:05 - okay now what is state right so let's
62:08 - console log it
62:11 - state
62:12 - this is our state
62:16 - our candy state specifically so let's
62:18 - save that
62:20 - oh state is not the one
62:22 - sorry it should be candy state
62:32 - let's see can we get it
62:46 - um
62:47 - cannot read properties of null so we're
62:50 - into our first error
62:53 - and so it's undefined this is our state
62:56 - which means there's an error somewhere
62:58 - cannot read properties of null reading
62:59 - query
63:01 - let's go back to our code
63:03 - caves still says undefined so let me
63:06 - just check here
63:08 - um oh I know why see how this update
63:11 - state is uh grayed out it's because we
63:15 - forgot to freaking call it right so This
63:17 - Is Us creating the function but we never
63:19 - called the function so let's go ahead
63:20 - and call the function update State and
63:23 - we also should put a dependency module
63:25 - so it doesn't keep re-running over and
63:27 - over again so let's say
63:28 - now there it is we got it so now we have
63:31 - our candy machine state right so if you
63:35 - see this object this model right here
63:36 - and all of our information is here so
63:38 - look at items do you see this guys items
63:41 - so if I do console on candy state let me
63:45 - just put some space between here candy
63:46 - state DOT items all right let's see what
63:49 - happens
63:51 - look at that we see an array of three
63:53 - things where have we seen that before
63:54 - right we have the first index of our SMB
63:59 - number 10 and the URI so this is our
64:01 - access to our nfts so we need this okay
64:04 - so what we can do now
64:08 - all right is set our nfts so now that
64:12 - you know what this is all right let's
64:13 - fix our update State and add some more
64:15 - things so we have set candidate we can
64:18 - also do set nfts right and then we can
64:22 - set it to State DOT items right and we
64:25 - can also set candy state error to no
64:29 - right because if it's in our try if it
64:31 - made it this far there shouldn't be any
64:33 - error oops there we go awesome
64:38 - so hit save and we can also add a
64:41 - finally here
64:42 - right and if it finally loads we can set
64:45 - candy loading state to true or to fall
64:49 - sorry because it's not loading
64:52 - okay
64:53 - cool
64:55 - so I think it's true by default
64:58 - so this is true by default but now we
65:00 - can set it to false right it's our flag
65:02 - that's done loading if we do toast dot
65:06 - success we can say uh updated
65:10 - state
65:12 - all right cool I remember I said how I
65:14 - wanted to update it every few seconds
65:16 - all right so what we could do
65:20 - is set up something like this so let's
65:22 - put metaplex here so it's only going to
65:24 - run once and whenever metaplex changes
65:26 - for whatever reason
65:28 - and also we can say refresh
65:33 - state every usette state every 30
65:38 - seconds okay so we can say const
65:42 - interval ID is equal to
65:46 - set interval
65:49 - and in that set interval we can have a
65:52 - function that every interval update the
65:55 - state this is what we want to run and
65:57 - put a comma here for how long you want
66:00 - it to run and if I say 30 underscore
66:03 - zero zero zero that should be 30 seconds
66:06 - on the timer okay and then from here we
66:09 - can say return we want to clear this
66:11 - interval
66:13 - and by doing a clear interval then we
66:16 - could do interval
66:18 - interval ID
66:20 - so that's how you clear it
66:23 - we can do oh sorry to return the
66:26 - function itself
66:31 - cool so like I said if you want to do
66:33 - anything with the nfts at all right you
66:37 - can say nfts and that's your array of
66:39 - nfts right so we don't have to do
66:42 - anything with that specifically what we
66:44 - want to do next is set up our what's it
66:47 - called if you saw the demo you saw how
66:49 - many nfcs were remaining we want to do
66:51 - that I want to show our sold out stuff
66:54 - let's do that say cons sold out
66:59 - and sold out
67:02 - is just going to let us know if all the
67:04 - nfts are sold out and this is going to
67:07 - equal candy state
67:09 - all right
67:10 - if it exists that's what this question
67:11 - mark is for
67:13 - dot items remaining
67:18 - dot eqn zero right so can't remember how
67:22 - we added candy state items uh we can
67:25 - also do candystate dot items remaining
67:28 - and that eqn is equal so if the items
67:31 - remaining is equal to zero this is going
67:34 - to return true
67:36 - if it's not it's going to return false
67:39 - so that's what we're setting up here
67:42 - I think I spelled it correctly and after
67:43 - that we can do const
67:45 - sole amount all right we can have a
67:48 - variable that tells us how much each of
67:50 - our nfts cost and if you remember how
67:52 - much does it cost
67:53 - just one Uno all right so candy estate
67:56 - again question mark and question mark if
67:59 - I don't put this question mark here it's
68:01 - going to say dot undefined right because
68:03 - it's not going to question mark it so if
68:05 - this exists
68:06 - candy guard
68:08 - which if there is a candy guard again
68:10 - that's why I put in question mark cards
68:14 - all right question mark if it's there
68:17 - dot Soul payment right so if you look
68:19 - carefully it's looking into our candy
68:22 - guards and specifically checking the
68:25 - sole payment and that's going to return
68:26 - to us a number
68:28 - that we want right
68:30 - so if that exists if there is a sole
68:32 - payment then show me that show me the
68:35 - payment candy state DOT candy guards
68:41 - candy guards can guard
68:44 - oops dot guards
68:47 - dot sole payment dot Lan ports right now
68:52 - we have to convert it that two number
68:55 - yeah so let me have to press enter for
68:57 - this one enter so I can look it like
68:59 - that that two number
69:00 - all right so let's just break that down
69:02 - so I'm looking at my candy state looking
69:03 - into the guards looking into the sole
69:05 - payment
69:06 - which should be one and it's going to
69:08 - give us it only shows us in lamp ports
69:10 - all right remember the the smaller unit
69:12 - of soul and then put a two number right
69:15 - so we can have it something readable for
69:17 - us divided by lamp ports per soul
69:21 - and that should give us the right amount
69:25 - and then if you can say or no
69:28 - okay so this is either going to give us
69:30 - another uh State essentially
69:37 - go and add this semicolon here
69:41 - add that semicolon there and you should
69:42 - be good to go okay
69:45 - so
69:46 - that's our sole amount our sold out
69:50 - foreign
69:53 - okay
69:56 - something off about this shouldn't be
69:59 - oh sorry guys this should be question
70:02 - mark Dot candygard
70:04 - and now we shouldn't see an error okay
70:06 - cool yep it should be great I like so if
70:08 - you did that you're good to go
70:11 - um now the next part
70:13 - is we want to put our candy mistakes uh
70:16 - candy machine States here so let's go
70:19 - ahead and do that
70:24 - all right so if you're here we're going
70:26 - to set up our candy machine States and
70:29 - set up a lot of conditional running so
70:31 - be prepared so the first thing that I
70:32 - want you guys to look at is this set up
70:34 - the curly brackets like so
70:37 - and you're just going to write uh
70:39 - loading right the candy state loading
70:43 - okay so this is our loading State I
70:46 - remember if we look scroll up candy
70:47 - state loading is set to True which means
70:49 - something is loading right and if we say
70:53 - conditional rendering here
70:55 - I guess question mark
70:57 - what that means is we want something
70:59 - else to load so if candy state loading
71:01 - is true then load this
71:05 - HTML which is going to be just a div
71:08 - let's get the closing bit in there and
71:10 - it's just going to say loading
71:12 - all right if it goes well you'd only see
71:14 - this for a second if it takes long
71:15 - you're going to see this loading text
71:17 - for a while right so what you want to do
71:20 - after this is colon because this is the
71:21 - else part of a conditional of a ternary
71:24 - operator
71:25 - so we can say candy state error
71:30 - because if it's not loading there's a
71:32 - candy state error
71:33 - so if that's true we can set up another
71:35 - conditional rendering you see my so why
71:37 - that's kind of confusing so
71:39 - candidate loading is true load this div
71:42 - if not load this ternary statement all
71:47 - right so what's this ternary statement
71:49 - if Candy's State error is true
71:52 - then load this div
71:56 - and this div is just going to have the
71:57 - candy state error that we have
72:02 - cool so when do we see this div if candy
72:05 - state error is true
72:07 - okay what if it's not true
72:10 - what if there is no candy stator then we
72:13 - should see
72:14 - the whole thing right so we should see
72:16 - the candy state then because there's no
72:18 - error
72:20 - and and
72:22 - so so
72:25 - two things have to be true candy state
72:27 - and this so we're gonna see two things
72:31 - um now we can have a div here
72:34 - closing did
72:36 - and this is where the majority of our
72:38 - text is going to be so we can say
72:41 - another div here
72:43 - foreign
72:46 - we can say total
72:48 - items right because I want to tell you
72:50 - guys how many items do we have in our
72:52 - nft collection so we can write
72:56 - is a variable here by saying some jsx so
72:59 - we can say candy state again
73:02 - and how do I see the total amount of
73:04 - available items you're just going to do
73:06 - Dot and just write items
73:09 - available because we did items remaining
73:12 - before we can do items available
73:14 - dot to string so that we can read it
73:18 - okay let's hit save
73:21 - look at that so for you if everything
73:23 - works successfully we see total items is
73:26 - three and there is three nfts here as
73:28 - you can see so that's good total items
73:30 - is three all right but there's more
73:33 - what if I want to see the total minted
73:36 - uh items
73:39 - okay how would we do that so let me
73:41 - close that div
73:42 - well you would forget your candy state
73:44 - again so candy state right but now how
73:47 - do we get it you do Dot
73:49 - items minted and you might be wondering
73:51 - Lance how did you know all this well if
73:53 - you just console log candy state take a
73:55 - look in the console and see all the
73:57 - different things you can do just test it
73:59 - or read a documentation or follow this
74:01 - tutorial right a lot of different
74:03 - options different ways to learn do dot
74:05 - to string so it's in a nice format that
74:07 - it can read so let's save this minted
74:10 - items zero so this makes sense right
74:11 - because how many times have we mint an
74:13 - nft
74:14 - zero right unless you skip the head then
74:16 - you're achieved so back to this we could
74:19 - do div and we could go uh closing div
74:24 - awesome and in between this what do we
74:27 - want to do next we want to do remaining
74:29 - items so this one should be familiar
74:32 - we have to do candy state DOT items
74:37 - remaining right it's pretty obvious got
74:40 - two string
74:43 - and there's so total items three minted
74:46 - item zero remaining items three
74:48 - there you go
74:50 - cool so we closed that div off and is
74:53 - there anything else that we should do
74:54 - yeah there's a couple different things
74:56 - uh one thing I want to do is let's talk
74:59 - about the solar mount right so if there
75:01 - is a sole amount if there's not then
75:03 - it's not going to show up
75:05 - uh then
75:09 - we can say div
75:12 - closing div
75:14 - you can show the cost here say the cost
75:18 - is
75:19 - this
75:21 - soul
75:23 - amount
75:24 - space
75:25 - so
75:28 - yeah cost one so there you go
75:32 - and how did I know is one because in our
75:36 - Solana candy machine it has access to
75:38 - all this information
75:39 - Okay cool so cost one soul
75:42 - right it's going to change depending on
75:43 - what you put here
75:45 - uh the next one
75:47 - we can put the TX there so if any point
75:50 - you get an error we can set up this dip
75:54 - so we could say TX error
75:56 - and div closing div
76:03 - and we're just going to write t x error
76:06 - so if anything goes wrong with the
76:07 - transaction we're making use of this
76:10 - state right here right we're not setting
76:12 - anything just yet but when we do when we
76:14 - make the mint function
76:21 - okay next div
76:25 - closing div
76:28 - right this div this one's for the mint
76:30 - button
76:31 - so I just made a div I'm going to give
76:33 - it a class name actually class name
76:37 - and we're going to use styles styles dot
76:41 - button container because this is going
76:43 - to contain our mint button and you just
76:46 - have to say button like so
76:49 - and give this a class name class name
76:54 - dials dot mint button
76:57 - okay and under that we can give it a
77:00 - couple things so on this button itself
77:02 - it has to have it on click which we'll
77:04 - do in just in a sec it doesn't have it
77:07 - just yet but
77:09 - hmm actually start mint for now
77:13 - oh I just remembered something we should
77:16 - so let's start mint for now right
77:20 - so this is good you can even leave it
77:21 - just as this it just says mint and if
77:23 - you click it it should allow us to Mint
77:25 - an nft but uh what if all your nfts are
77:28 - sold out we can turn this mint button
77:30 - into a sold out uh sign right we can do
77:33 - that by erasing mint
77:35 - putting curly brackets and misuse are
77:37 - sold out variable and if that is true if
77:41 - sold out is true right remember we made
77:43 - that variable to check
77:44 - so if items remaining is equal to zero
77:46 - if that's true
77:48 - then
77:49 - it's going to say sold out
77:52 - right
77:53 - and then or
77:55 - TX loading
77:58 - if loading is true then put loading
78:02 - right our button will say loading if the
78:03 - transaction is loading
78:06 - um otherwise
78:08 - if it's not sold out and if it's not
78:10 - loading show me the mint put which it
78:12 - should when I switch here there you go
78:15 - same thing but you know getting a lot of
78:17 - functionality out of this condition so
78:19 - that's why we set it up uh way back when
78:22 - cool so now we have a dynamic mint
78:25 - button and from there that's pretty much
78:28 - it so we just need the functionality to
78:30 - Mint these nfts so let's go ahead and
78:33 - work on that all right so we are in the
78:35 - home stretch now let's learn how to Mint
78:37 - nfts when I click this button the first
78:40 - thing that you want to do is let's make
78:42 - the mint function so scroll up to all
78:46 - the way here right before the sold above
78:49 - the sold amounts and let's go ahead and
78:52 - make a mint function so let's just say
78:54 - const mint is equal to async Anonymous
78:57 - function the reason why I'm making this
78:59 - asynchronous is because we need to make
79:01 - a call to metaplex to Mint this specific
79:05 - nft so let's go ahead and do our Edge
79:08 - case remember what our Edge case is guys
79:10 - it's if metaplex does not exist then we
79:13 - just return
79:15 - right and you should spell metaplex
79:19 - correctly boom so if meniflex doesn't
79:21 - exist return
79:23 - um in the meantime we're gonna set Trend
79:26 - TX loading to true because during this
79:30 - time of minting this should be true and
79:32 - we can also set TX error
79:35 - to know for now right
79:38 - cool so once you do that now for the
79:40 - actual functionality we'll do a try
79:42 - catch again
79:44 - and I'll set up my catch
79:47 - and if there is any sort of error we can
79:50 - just cancel out so it says console log e
79:53 - and we can do a toast dot error and just
79:57 - say uh mint failed right I mean you also
80:01 - want to set up our like show our error
80:03 - by saying set the x error to E
80:07 - Dot message I believe yeah you don't
80:09 - message
80:10 - cool so that means if you go back to
80:12 - here it'll show us underneath the soul
80:14 - the transaction error that happened
80:17 - so I mean hopefully we don't see it but
80:19 - if we need to like debug that's I'm glad
80:21 - it's going to be there
80:23 - okay and in this try catch we want to
80:26 - say const mint result it's a variable
80:30 - that is equal to weight and here comes
80:33 - metaplex again metaplex dot candy
80:36 - machine
80:37 - candy machine
80:39 - uh s parentheses dot mint so candy
80:43 - machine has its own Min function in
80:45 - order to create it from scratch and we
80:47 - put parentheses curly bracket like so
80:49 - inside here you have to put some
80:52 - property so you can say candy
80:55 - oops candy machine colon object
81:01 - and then address oops address
81:07 - colon candy
81:10 - state that address so that's how you get
81:11 - the address of the candy machine can you
81:13 - state the address the next thing you
81:15 - want is the collection
81:17 - mint address
81:20 - oh don't forget to put a comma here
81:22 - and for that you need candy state oops
81:26 - candy state again and say dot collection
81:31 - mint address
81:32 - all right so I can see the pattern here
81:33 - so you can say uh the candy guard
81:37 - is
81:38 - a candy state DOT
81:41 - can you guess it candy guard
81:44 - put comma here
81:46 - comma here and that's actually it uh we
81:50 - do need to put a comma here and then say
81:52 - collection
81:54 - update Authority
81:58 - make sure you spell it right and say
82:00 - candystate dot Authority address
82:04 - Authority
82:05 - can you state Authority address okay
82:09 - comma there and then the last part is
82:12 - group
82:13 - is no
82:16 - all right that looks good to me
82:18 - uh we can also
82:21 - console log
82:22 - the mint result
82:29 - mint result in an object and we can also
82:33 - say toast that success well we don't say
82:35 - toast that success here we can actually
82:37 - say finally and then do the
82:39 - toast.success
82:43 - so what we could do in the finally is
82:45 - set TX loading back to false because now
82:49 - it's done loading and we can also do a
82:52 - toast dot success here and say
82:55 - um minted
82:57 - nft so let's save that and now we made
83:00 - the function we got to call the function
83:02 - down below so if we scroll down
83:05 - where is our button we can add the on
83:08 - click now so we can say on click
83:10 - equals
83:12 - object
83:14 - object and then write mint for the main
83:17 - function so when we click it the mint
83:18 - function will run we also want to
83:21 - disable this button
83:24 - and when do you want to disable it well
83:25 - I only want to disable it when there's
83:27 - no wallet
83:29 - or let me zoom out for a second
83:34 - uh if the TX is loading right so we
83:36 - can't just Spam The Mint button
83:39 - um can also
83:42 - make it disabled when it's sold out so
83:44 - when we have the sold out sign you can't
83:46 - really click on it just kind of just
83:47 - it's kind of just there
83:49 - so it's disabled during that and with
83:52 - that cross our fingers hopefully this
83:54 - works so let's switch to the main app
83:57 - okay we're in the main app select wallet
83:59 - Phantom
84:01 - uh are we connected
84:03 - oh enter my password
84:05 - boom okay so now we connect updated
84:08 - State let's hit mint
84:10 - loading
84:12 - let's go approve transaction so remember
84:15 - two things my qazi wallet is getting the
84:18 - money so you had six Soul so after we
84:21 - lose one Soul Kazi should have seven if
84:23 - this works properly so let's hit approve
84:28 - let's go mint in an nft we did it boys
84:31 - and girls and if you look uh remaining
84:33 - items it's still three but remember our
84:36 - timer every 30 seconds it's gonna say
84:38 - updated State and now look at that total
84:40 - items three still minted items one
84:42 - remaining items two and the cost still
84:45 - one sold so there you go we successfully
84:47 - minted an nft but now we're not done yet
84:50 - because if you click Phantom
84:52 - you go to your wallet let's check on
84:55 - qazi so if I go to qazi he has seven
84:58 - Souls so that means I just mentioned an
85:00 - nft and somebody profited qazi got one
85:03 - extra soul from me and for our troubles
85:06 - if you go back to your wallet wallet
85:08 - number one click on these four squares
85:11 - right here
85:12 - you can see my old crab collection but
85:15 - look at this we got Solana Monkey
85:18 - Business 1001 in our collection with the
85:22 - description we wrote and the properties
85:24 - that we wrote to so this is it this is a
85:26 - real nft in your wallet if you made it
85:28 - to this point in the video hopefully you
85:30 - can make your own nft collection that
85:33 - you could put out there hey and maybe
85:34 - you can make tons of Solana with this so
85:38 - hope you guys enjoyed the video let me
85:40 - know drop the comment down below if you
85:41 - want to see a more detailed release like
85:43 - a delayed reveal and just drop in the
85:45 - comments I'll see you guys in the next
85:46 - video peace