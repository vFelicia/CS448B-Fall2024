00:00 - okay so here's the problem we have a
00:01 - coding channel with almost a million
00:03 - subscribers
00:05 - and we have a bunch of content creators
00:07 - and we want to get
00:08 - new content creators on there i want to
00:11 - be able to
00:11 - pick commissions of a thousand dollars
00:16 - per 100 000 views per content creator
00:19 - however
00:20 - it's not really easy to track who's
00:22 - making the videos
00:24 - look at all of this we have over 500
00:27 - videos on this channel so
00:28 - how do we go and identify which video is
00:31 - whose
00:32 - and how much commission do they get if
00:34 - daniel
00:35 - all of his videos rack up a hundred
00:37 - thousand views she should get paid a
00:39 - thousand dollars and same thing with the
00:40 - other people but if we have to manually
00:43 - do all this work with
00:44 - 500 videos that's gonna take forever
00:48 - but knowing that we're all developers in
00:50 - this house i can't help but think
00:52 - gosh there must be a better way
00:56 - so today is a saturday and i thought hey
00:58 - what better way to spend a saturday
01:00 - than coming up with a solution to this
01:02 - problem
01:03 - [Music]
01:07 - now there are many ways i can go about
01:09 - solving this problem but honestly one of
01:11 - the first ways that's coming to my mind
01:13 - is maybe i can whip up an app
01:17 - because i can't think of any better way
01:19 - to spend my saturday
01:22 - now for this app i'm thinking we're
01:24 - gonna need a couple of things
01:26 - for example the first thing that comes
01:28 - to my mind is hey let's just throw
01:30 - react.js
01:31 - at it to build the app the other things
01:34 - that i'm thinking
01:35 - are maybe i'm gonna use a youtube api
01:39 - and with that i'm going to pull all the
01:41 - data
01:42 - from our youtube channel straight into
01:44 - this app now something
01:46 - fancy that i would like to implement
01:48 - though i don't know how
01:50 - realistic it would be to use this in
01:52 - this use case but i am thinking
01:55 - hey what's the common thing that we do
01:57 - see
01:58 - that's there and if you look the every
02:01 - video of daniel's
02:02 - has his face on the thumbnail every
02:04 - video of nas has his face on the
02:06 - thumbnail
02:07 - and every video of me has my face on the
02:10 - thumbnail
02:11 - so i'm thinking maybe we can throw some
02:12 - machine learning algorithms at this like
02:14 - a facial recognition
02:16 - to classify which video is whose so then
02:18 - they can get their commission
02:20 - based on that and then after that i
02:22 - don't know i'm kind of stuck
02:24 - myself but i'm thinking i can use
02:27 - firebase if i need to store that data
02:29 - somewhere but as of now honestly i'm
02:31 - thinking
02:32 - react.js from my front end youtube api
02:35 - also to pull all the data and outside of
02:38 - that
02:39 - i mean that's really it now we're also
02:41 - going to need to
02:42 - classify the videos between
02:46 - which videos are nozzes which videos are
02:49 - daniels which videos are mine and maybe
02:51 - i might have to use firebase for that
02:53 - we're just gonna figure that out as we
02:55 - go and i'm just gonna document this here
02:57 - with you
02:58 - and we'll see how much progress we make
03:00 - and maybe by the end of this day i'll
03:01 - fail
03:02 - maybe by the end of this day i'll
03:03 - succeed it's 5 p.m right now on a
03:05 - saturday
03:06 - so let's just freaking go and see what
03:07 - we can do
03:18 - all right so what i'm deciding to do is
03:20 - i'm i kind of spent about 30 minutes to
03:23 - an hour researching between
03:24 - using youtube api or something else
03:28 - and i want to go the route of using
03:30 - youtube api eventually but
03:32 - there's gonna be a ton of boilerplate
03:34 - code required for that so i went through
03:36 - and i looked up and saw if i could use
03:39 - people's already built projects because
03:40 - i hate doing tons of boilerplate code
03:43 - from scratch
03:43 - and there are a couple of projects i
03:45 - came across on github that i could
03:46 - potentially use but i decided right now
03:49 - to hold off and
03:50 - kind of create a mvp like a minimum
03:52 - viable product just so i can get up and
03:54 - running like today
03:56 - rather than tomorrow or the day after
03:57 - that so i'm pausing on grabbing the
04:00 - youtube api for now instead i'm going to
04:02 - make this app
04:02 - work with air table why because it's
04:05 - going to be much easier
04:06 - airtable already comes with a database
04:08 - built in so that's going to avoid me
04:10 - having to use firebase for now so
04:13 - airtable kind of gives
04:14 - me a back-end on the fly and it has an
04:16 - api built in
04:17 - so i'll very easily be able to use air
04:20 - table api with my react.js
04:22 - app show all the data work on the front
04:24 - end make sure
04:25 - things are how i want them to be make
04:27 - sure the app is something that i like
04:29 - and then start going the route of making
04:31 - it more robust and starting to use the
04:33 - youtube api
04:34 - and eventually maybe even firebase
04:42 - [Music]
04:45 - so good news it's 6 15 p.m and so far
04:49 - i'm able to pull the data from the air
04:51 - table
04:52 - and now let's see how i can actually use
04:54 - it but that's awesome
04:56 - luckily for us airtable has a package
04:59 - that you can install
05:00 - with uh npm so i did npm or yarn add
05:03 - airtable
05:04 - and we got in our project and then they
05:07 - give you the code their documentation is
05:08 - very helpful so i just need my api my
05:10 - base key
05:11 - i also followed a tutorial from
05:13 - codestacker so thank you for your
05:15 - tutorial
05:16 - uh this was very helpful to actually
05:18 - follow for my project so
05:20 - thanks i saw the use effect took it was
05:22 - a smart usage of it so
05:24 - using use effect we're able to retrieve
05:26 - all of the data every time our app
05:28 - refreshes or
05:29 - the page loads and now i'm gonna be in
05:31 - the process of using use state to store
05:33 - that so then i can actually
05:35 - display it on the html of my website so
05:38 - let's code that up now so shout out code
05:40 - stacker
05:41 - thank you for this video that was really
05:43 - valuable able to actually
05:45 - get the data and using the use effect
05:47 - hook i'm able to retrieve it so far
05:49 - and i think i'm going to use you state
05:52 - hook
05:53 - to keep track of the state and then
05:55 - display that data through my html
05:58 - so then you can actually see it on the
05:59 - web page so let's go and code that up
06:02 - right now
06:07 - [Music]
06:14 - all right so far it's pretty cool my app
06:17 - can actually pull data completely
06:20 - actually from air table let me grab my
06:22 - table and for example on the right hand
06:25 - side
06:25 - all my videos are sorted by views
06:29 - okay just look from here the disney and
06:31 - the garbage developers one
06:32 - i change my air table here right let's
06:35 - say change it to
06:36 - be um based on which videos got the top
06:40 - sure let's say comments right watch what
06:42 - happens when i hit refresh
06:43 - now it's sorting it by comments though i
06:45 - haven't added comments there so that's a
06:47 - little confusing but look at let's just
06:48 - sort it by views
06:49 - worst videos first okay so let's do that
06:52 - now if i hit refresh
06:53 - boom it's pulling that so 3800 views 8
06:56 - 300 views 17 000 views 32 000 views
06:59 - and so on it's actually looking pretty
07:02 - freaking good and doing a good job so
07:04 - right now it's 7 p.m
07:05 - i'm two hours into my development i mean
07:07 - my front end skills are
07:09 - usually trash but i'm very pleasantly
07:12 - surprised by
07:14 - the fact that i was able to put this
07:15 - thing together you know i try to model
07:17 - the actual
07:18 - youtube studio app and i would say this
07:21 - app right now has a pretty similar feel
07:23 - to the actual youtube studio
07:25 - app but now i want to work on a couple
07:27 - of different things like for example
07:29 - what i would really like to have
07:30 - is right up at the top here i would love
07:33 - to see
07:34 - my total views for the week or the
07:36 - entire month
07:37 - and that kind of gives me a kick in the
07:39 - ass to go right and maybe if i have a
07:42 - goal
07:42 - of like let's say i want to hit 100 000
07:44 - views this week then maybe there's like
07:46 - a little horizontal bar
07:47 - that might tell me hey you've completed
07:49 - like 75
07:50 - of that goal keep going with like a
07:52 - little green color that like pops out
07:55 - the other thing i'm thinking of maybe i
07:56 - want to use like react has this great
07:58 - library called
07:59 - react toast notifications so i might i
08:01 - might want to use that
08:03 - where when i achieve something like the
08:05 - toast notifications pop
08:06 - up or like confetti pops up on the
08:08 - screen but i want to keep it clean and
08:10 - like
08:10 - really minimalistic don't want to add
08:12 - too many things to it because
08:13 - it's going to start looking tacky i'm
08:15 - going to keep it minimalistic but
08:16 - something that i can use that drives me
08:18 - to make
08:19 - more content on youtube build better
08:21 - things and it excites me every day when
08:23 - i look at it that's really the goal
08:25 - so next up the next feature i'm gonna
08:27 - add to this is
08:28 - for example do you see how i have 10 000
08:30 - views here 130 so what i'm going to do
08:33 - is i want to see all the views comments
08:36 - thumbs up thumbs down or at least like
08:39 - views comments
08:40 - and maybe something else kind of like
08:42 - this okay and i want to do that for
08:44 - all the other videos okay so i'm going
08:46 - to work on that now one thing i still
08:48 - complete i don't understand is why it's
08:50 - completely
08:51 - trash on my mobile device on the
08:54 - computer mobile
08:55 - mode it looks perfectly fine but on my
08:58 - phone it it looks like trash
09:10 - [Music]
09:16 - all right so right about at this point
09:18 - our app
09:19 - is actually showing the views the
09:23 - amount of subscribers we got from that
09:25 - video and the comments that video
09:27 - generated for engagement
09:28 - i think views is good but i think
09:30 - subscribers is a really strong indicator
09:33 - of truly what is creating brand loyalty
09:36 - and of course engagement is also really
09:38 - really good because like for example
09:40 - this garbage developers video that i
09:41 - made
09:42 - it is very controversial right how it is
09:45 - and how i speak in it and it's very
09:47 - polarizing right so that's why
09:49 - i think the engagement on that is really
09:50 - high on this one i asked
09:52 - people to leave a comment on channel
09:55 - update i was talking about something
09:57 - very personal
09:58 - and i was very vulnerable in that video
10:00 - so this gives me a really good pulse but
10:02 - if i look at this
10:03 - it has the most amount of views in the
10:05 - shortest amount of time
10:07 - i very quickly see man we we need to be
10:09 - going more of the builds route and
10:11 - dropping more bills on the channel
10:13 - and also right at about this point i
10:16 - just committed my code it is currently 7
10:18 - 20 p.m we are two hours and 20 minutes
10:21 - into our session today so i hope you're
10:23 - having fun
10:23 - i sure am right now it is a private repo
10:27 - and one of the big reasons is because i
10:29 - didn't want to figure out the headache
10:30 - with how to add environment variables
10:32 - in react js there is a process to do
10:35 - that but i'm gonna do that
10:36 - later for now i'm just using my um
10:40 - api keys openly in this code so that's
10:42 - why i had to make it private for now all
10:44 - right boys
10:44 - so quick update still working on the app
10:47 - 7 48
10:48 - pm 2 hours 48 minutes into the session
10:50 - this is what we have so
10:52 - far i have how many views subscribers
10:55 - comments and then also compared to other
10:58 - videos how's this video
11:00 - doing and if it's doing 2x or greater
11:02 - then i'm also throwing in the fire emoji
11:04 - otherwise it's just like
11:06 - straight up you know flat now one thing
11:08 - that was happening was when i was trying
11:10 - to deploy this to versal
11:11 - i was getting an error i don't know
11:13 - maybe one of you might get that error
11:15 - one day or
11:16 - i might get that error later in the
11:18 - future because i know i've
11:19 - had that error in the past how i
11:22 - circumvented that
11:23 - is by doing this so in my build command
11:26 - because it gave me an error with like
11:27 - travis
11:28 - so i just said hey set the c ci to false
11:31 - and then just do npm run build
11:33 - and also in my environment variables i
11:35 - set ci to false
11:37 - false as in this and ci as in ci
11:40 - all caps i got it from a blog post from
11:42 - dev.2 so if you find this helpful
11:44 - this might actually help you in case you
11:46 - were trying to deploy something other
11:47 - than that i'm just gonna
11:48 - get straight back to it
12:02 - i also just made right now i just made
12:04 - my app a little bit more
12:06 - uh error prone so yeah or a little bit
12:09 - more robust
12:10 - because before it would just break if
12:12 - the multiplier wasn't there
12:14 - so right now if a video does not have a
12:17 - multiplier
12:18 - it will instead of breaking let's do
12:20 - that that's good
12:22 - if i go back if i don't have a thumbnail
12:26 - and a refresh it doesn't completely
12:28 - break it just goes
12:30 - uh and gives me like an empty uh
12:33 - thumbnail
12:33 - and the reason why that's happening is
12:35 - um i'm just doing this little check
12:37 - right there
12:38 - okay so that makes sure that that's
12:40 - happening
12:41 - and then yeah and then i've added a
12:42 - bunch of these uh operators your
12:44 - question mark so if it doesn't exist
12:47 - it will not go into the subs so like for
12:49 - example if this one does not have subs
12:52 - if i remove the subs for next gs and
12:54 - gatsby one
12:55 - and i hit refresh it just goes empty on
12:57 - this thing actually let's see if it
12:59 - gives an error
13:00 - it wouldn't have given an error anyway
13:01 - so i guess these question marks are not
13:03 - that helpful let's hit refresh because i
13:05 - think it sends back
13:07 - null anyway so i think that makes it
13:09 - fine it's just that here i do have to do
13:11 - this because
13:12 - it says it cannot read the zeroth
13:14 - property of something that
13:16 - is undefined right so that's why that's
13:19 - there okay let's refresh
13:21 - all things here i've centered aligned
13:23 - everything so it's all centered and nice
13:24 - it still looks like crap on mobile
13:27 - you know that's the only real like
13:29 - bummer right now
13:30 - because i'm trying to deploy it when i
13:31 - go to bed i won't actually be able to
13:33 - use
13:34 - the app from my phone see how it feels
13:36 - right that's the only kind of annoying
13:38 - part
13:38 - other than that i mean it's looking
13:40 - really really good it looks like
13:41 - something i would use
13:42 - just i got to get it working on mobile
13:44 - because on mobile is still
13:45 - all types of mess up there's some bug in
13:47 - my css i don't know what it is
13:49 - if you guys if any one of you is good in
13:52 - css and you can help me find it that'd
13:53 - be great so i'll just share my code here
13:55 - that's my index.css file and then i have
13:58 - my app.css file
14:00 - right there okay this is the entire file
14:02 - so you can pause it and check it and
14:04 - then the last thing
14:06 - this is pretty much my entire the main
14:09 - things that i'm using
14:10 - if you could find the error and help me
14:12 - and drop it in the comments below
14:14 - that would be freaking awesome because
14:16 - then i can move on the next day and
14:17 - start working on this app and making it
14:19 - better and better
14:20 - but other than that i think what i want
14:21 - to do now is add like total views
14:24 - although at the top so i can really
14:26 - easily see how many views i'm at i think
14:28 - that's going to be a pretty exciting
14:29 - thing so let's work on that now
14:36 - [Music]
14:40 - all right so that was actually pretty
14:42 - cool i just sat here and worked on
14:44 - something
14:45 - super dope so i'm now able to get total
14:48 - views
14:49 - you can see up here how this is actually
14:52 - happening
14:52 - i am just getting all of the
14:56 - view view records or whatever right that
14:59 - are in my error table
15:00 - and then i'm just calling reduce on that
15:02 - and reducing it basically summing it up
15:04 - this is a cool way of using reduce
15:06 - there's a lot of functional programming
15:08 - principles that are happening here
15:10 - so if you're a beginner intermediate to
15:13 - javascript definitely start using this
15:14 - because people will use tons of for
15:16 - loops and stuff
15:17 - but this is really really cool right i'm
15:19 - mapping and map
15:20 - returns to me an array with all of the
15:22 - numbers so essentially i get back an
15:24 - array of numbers
15:25 - this is a really good um stack overflow
15:27 - answer that you guys can use too i'm
15:29 - getting an array of numbers
15:30 - with this here so this gives me like all
15:33 - the views of
15:34 - uh the views of each video okay and then
15:37 - i'm just calling reduce like this and
15:39 - that
15:39 - essentially gives me back the sum the
15:41 - cumulative value
15:42 - boom like there so reduce is really cool
15:46 - big time functional programming uh
15:48 - benefits that you get from it okay just
15:49 - thought i'd share that
16:07 - another thing i actually want to do is i
16:10 - want to
16:11 - get all the videos from this current
16:14 - month
16:14 - and rack up all of those views so for
16:17 - example now when i refresh
16:19 - you'll notice that it's a 77 000 views
16:22 - which is actually
16:24 - adding up 52 000 plus 17 000
16:27 - plus 8329 and you'll see why
16:30 - pure javascript skills are actually
16:33 - needed because
16:34 - if we didn't have them we wouldn't even
16:36 - be able to do basic stuff
16:38 - like this that one line is really really
16:40 - sweet
16:41 - if you look here set total views i'm
16:43 - using react
16:45 - use state right use state hook the use
16:47 - date is right there
16:48 - and i'm doing set total views boom and
16:51 - what's cool about that
16:53 - is react essentially waits for airtable
16:56 - to give the data back
16:58 - once airtable gives the data back that's
17:00 - when it dynamically
17:02 - updates the app right over there this is
17:04 - pretty cool so far i mean honestly i'm
17:06 - really excited it's 8 36 p.m
17:08 - and the progress has really really been
17:11 - phenomenal so far
17:12 - like that already just knowing that
17:14 - number this month i'm like wow i'm at 77
17:16 - 000 views how can i get to a hundred
17:18 - thousand views right like but
17:20 - unfortunately april is now over
17:22 - and the way that i made that happen is
17:24 - an air table like kind of
17:25 - like created a filter that just
17:27 - constricts me to these specific dates of
17:30 - april right
17:30 - now for may where am i at well currently
17:34 - for may i'm actually at zero right so
17:36 - i'm going to
17:37 - let me duplicate this i'm going to
17:39 - rename this to
17:40 - may results may videos for my filter
17:43 - i'll just do
17:44 - is on may first on or
17:48 - on or after and it's on or before
17:52 - may 31st cool so we got our may filter
17:56 - set up if i try to use this may videos
18:00 - one
18:00 - the unfortunate thing that's going to be
18:02 - happening is none of those are going to
18:05 - show because there's nothing yet so i'll
18:06 - wait until i publish a
18:08 - video in may and then i'll do that but
18:10 - my goal is to get the results
18:12 - up right because uh looking at this
18:15 - result
18:16 - is uh not very inspiring right because
18:19 - it's 77
18:20 - 000 views but i want to get to 100 000
18:22 - so disney plus build is
18:24 - kicking ass i'm gonna drop probably
18:27 - in what's the other one i think we're
18:29 - working on clubhouse clubhouse is going
18:30 - to be freaking sick as well
18:32 - honestly the app is looking really
18:33 - really cool and it looks very functional
18:36 - but i'm going to make that 77 000 just a
18:38 - little cleaner
18:40 - and probably more like something that
18:43 - stands out a little bit more
18:45 - here's just a cool tip i have this div
18:48 - right here
18:49 - and i have two images one two and that
18:52 - div
18:52 - so i grabbed the emit so i grabbed the
18:55 - direct
18:56 - child image i grabbed the second child
18:58 - just that
18:59 - and i give it a margin of uh left four
19:01 - so it moved it away from that logo
19:03 - closer to that number so for example if
19:06 - i remove this
19:07 - watch where it goes boom so really pro
19:10 - tip
19:11 - use it and enjoy
19:26 - wow i am so excited right now
19:29 - like my friend and skills are i was
19:31 - just telling my girlfriend this and this
19:33 - app
19:33 - is starting to look good like i'm
19:36 - actually excited about this
19:37 - and one thing huge shout out to my boy
19:40 - lem
19:40 - who works with us at cleverprogrammer
19:42 - and he's actually a designer at our boot
19:44 - camp full stack mastery boot camp that
19:46 - we launched and
19:47 - um i hadn't given the image a height i'd
19:50 - given it a width but i hadn't given it a
19:52 - height that's what was causing the big
19:54 - problems on mobile so finally the mobile
19:57 - version is starting to actually look
19:58 - like something before it was just
20:00 - looking hideous
20:01 - i mean now that i've fixed the image put
20:04 - an image height on here
20:05 - it has kind of like messed up some of
20:07 - the other stuff so
20:08 - i'm gonna fix it i'm gonna get back to
20:10 - working on it but
20:12 - this is amazing progress it's 9 p.m we
20:14 - are about
20:15 - four three hours in i think three hours
20:17 - in or four hours in i lost track
20:20 - but we're about four hours into this and
20:22 - this is looking
20:23 - amazing i'm impressed by my own
20:26 - front-end
20:26 - newly found front-end skills because i'm
20:29 - working on these clones with for you
20:30 - guys
20:31 - man i'm so excited like i'm reaching new
20:33 - levels as a developer that i had not
20:35 - reached before
20:36 - so like this is exciting and to be able
20:38 - to put together something and i know
20:39 - we're gonna be using it one day also
20:41 - this is really exciting um
20:43 - i added commissions so we have views at
20:46 - the top
20:47 - and then right underneath that we got
20:48 - commission so this is gonna be sick i'm
20:50 - excited i'm gonna keep going
20:52 - for now
21:06 - all right check it out this is where
21:07 - we're at so far we got the views and we
21:09 - got how much commission that person is
21:11 - going to make this is just like random
21:12 - numbers right now
21:13 - if i hit refresh watch how that counts
21:16 - up like that and uh
21:17 - amazing library i found is called uh
21:20 - react
21:20 - count up and look at how easy look at
21:23 - how easy that is
21:24 - go to 723 and take 1.7 seconds
21:27 - and all you have to do to install it is
21:30 - yarn add
21:31 - react count up or do npm install react
21:34 - count up so
21:34 - the app right now is looking really good
21:36 - it's completely mobile responsive looks
21:38 - great on the desktop i'm having a lot of
21:40 - fun
21:40 - 9 23 p.m i might stop soon actually
21:44 - wow this was an incredibly fun session
21:47 - i'm so glad that i did this
21:49 - the app is looking so freaking good
21:52 - watch that count up so if you're a
21:55 - person who's using this
21:56 - you can see that commission come through
21:58 - the next
21:59 - few things i think i'm going to work on
22:01 - is i'm going to add
22:02 - a progress bar that's going to be cool
22:05 - so like uh
22:06 - you know content creator like daniel or
22:08 - nas can see
22:09 - where they're at and how far they might
22:12 - be from their
22:13 - commission goals i also want to give it
22:15 - an arcade type of feel
22:17 - where it kind of feels like this 8-bit
22:20 - pixelated
22:21 - arcade game and then you have these
22:23 - gamification
22:24 - gamified like icons and badges you
22:26 - unlock so level one level two
22:28 - and you know you get new rank so in the
22:31 - start you're a private on youtube and
22:33 - then you
22:34 - are you know something else on youtube
22:35 - and then you're a colonel and then
22:37 - you're a sergeant and then maybe
22:38 - legendary and i think it would be really
22:40 - cool and they'll
22:41 - gamify content creation because content
22:44 - creation is a hard thing
22:45 - but if you have something fun like this
22:46 - that's kind of addictive and you're like
22:48 - man
22:48 - when i make videos i can see that bar
22:50 - fill up i can see myself
22:52 - leveling up i can unlock a new badge
22:55 - that everybody else can see everybody
22:56 - else gets a notification that like
22:58 - daniel just unlocked this
22:59 - i mean see each other's progress and
23:02 - where they're at
23:03 - and maybe even chat from here so maybe
23:05 - we can add a functionality to chat
23:07 - whoever is live on this app you can chat
23:08 - with each other or maybe a drop in audio
23:10 - or something i don't know yet
23:11 - but so far i love the ui it's so
23:14 - freaking simple
23:15 - the total views are at the top you have
23:17 - the commission right below it i mean
23:19 - it's so simple and elegant and i think
23:22 - friendly user friendly i'm four hours
23:24 - into my session
23:26 - and time just flew by it's 9 39 p.m i
23:29 - want to be doing this a lot more often i
23:30 - had a ton of fun i don't even know where
23:32 - the time went
23:33 - this is phenomenal progress i mean we
23:35 - have a full-on
23:36 - crud functionality right we can create
23:38 - read update and delete stuff
23:40 - we have a beautiful gorgeous front end
23:43 - we're pulling straight from air table
23:45 - we're using react.js we're using
23:47 - a couple of cool libraries that we
23:49 - decided to add in here
23:50 - this was so much fun i i didn't know
23:53 - whether we were going to make any
23:54 - progress or if we were going to fail
23:55 - we're going to suck and this was going
23:57 - made a ton of progress
23:58 - we are making headway this is just day
24:01 - one of this app
24:02 - i'll keep you updated on what happens
24:04 - day two three four five
24:05 - and so forth so thank you so much for
24:07 - watching if you enjoyed this video
24:08 - definitely smash that like button
24:10 - subscribe to the channel and let me know
24:11 - what you think about this app
24:13 - and uh let me know if you have any
24:14 - recommendations or suggestions
24:16 - of what i should add to it how maybe i
24:18 - can gamify it in a more entertaining
24:20 - and in a fun way and uh just let me know
24:24 - if you also enjoyed this video so i'm
24:26 - looking forward to hearing some feedback
24:27 - from you this is it this is your boy
24:29 - cozzy i love your beautiful face and
24:30 - i'll see you
24:31 - in the next video i'm looking forward to
24:34 - hearing some feedback from you this is
24:35 - it this is your boy cozzy i love your
24:37 - beautiful face and i'll see you
24:39 - in the next video
24:57 - you