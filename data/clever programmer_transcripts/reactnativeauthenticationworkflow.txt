00:00 - What's up guys.
00:00 - This is Qazi from cleverprogrammer.com.
00:02 - Today.
00:02 - I want to talk about the react native
authentication workflow that I implemented
00:07 - in my new app that we're building.
00:10 - I took a poll a few days ago and I
asked you guys, which app did you
00:13 - guys want to see us build next?
00:16 - And at the end, Instagram
destroyed everything else.
00:20 - So I started working with my team and we
started whipping up the Instagram clone.
00:24 - First of all, get excited.
00:25 - Cause that's going to be
the next fricking build.
00:27 - The thing that's really exciting to me
has been this authentication workflow.
00:30 - I was trying to figure out how to make
this authentication really fricking
00:34 - clean and how can we make it really good?
00:36 - So there were multiple ways we could have.
00:38 - So, for example, we conditionally render
that home screen based on if you're
00:41 - logged in or not conditionally rendering,
basically, you know, what does that mean?
00:44 - It's basically like I will check
on the home screen if the user
00:47 - is logged in and then show him
all the, or her, all this stuff.
00:51 - If they're not logged in, then
either say, please log in or.
00:55 - Navigate them back to the login screen.
00:57 - And that's, to my knowledge, a
pretty normal way of doing it.
01:00 - A lot of developers, I do do it that way. 
01:01 - Right.
01:02 - Then this is what we started realizing.
01:03 - If we're going to do it, this conditional
rendering, where then we're going to have
01:05 - to manually do it and every single screen.
01:08 - So wherever we want it to
essentially show stuff who would
01:11 - need this conditional rendering.
01:12 - And we're like, man, this seems like
it's not following the dry principle.
01:15 - Right?
01:15 - Like, don't repeat yourself,
don't repeat yourselves.
01:19 - So I thought, how could we make this
authentication work flow better?
01:22 - And so I started scouring the internet.
01:24 - And, um, I wasn't able to
really find super helpful stuff.
01:28 - A lot of people would just
doing conditional rendering
01:29 - on each of the screens.
01:30 - And then nobody was really
showing how to wrap the entire
01:35 - app inside of authentication.
01:36 - And then I came across this amazing
article and he was talking about
01:41 - how you can implement authentication
workflow, where essentially at the
01:45 - global level, where you put your route
navigation in react native, at that
01:49 - point, you want to wrap it right?
01:51 - And you want to add a Firebase
authentication listener
01:54 - to it at the global level.
01:56 - And then what he was doing, he was
building a sign in stack and then he was
01:59 - building essentially a signed out stack.
02:01 - And I was like, oh, this is genius.
02:03 - So we took that idea and we're like,
that is such a clean way of doing it.
02:06 - Essentially.
02:07 - It's going to be.
02:08 - If you're logged in, you will be given
the sign and stock at the global level,
02:13 - meaning that like your stack won't even
contain the login and registered screen.
02:17 - So there's a possible for
you to have access to them.
02:19 - Just to describe to you what
sign-in stack is, right?
02:20 - Scion stack has access to all
the screens the users should
02:23 - have when they're signing.
02:25 - The signed out stack has two screens, the
login screen, and you register screen.
02:29 - So you create these two.
02:31 - Because the other way of doing the
conditional rendering or some security
02:34 - issues too, or some weird bugs can happen.
02:36 - Right.
02:37 - But at this level, they won't
even have access into our screen
02:40 - stack who these screens at all.
02:42 - And I thought this was such
a genius way of doing it.
02:45 - Another benefit to this was I was
running into this other problem, right?
02:48 - The older way of doing it, how we
were doing it earlier, if you log
02:51 - in the problem was that if you
refresh your app, it would like
02:55 - start you back from the login.
02:56 - Right.
02:57 - And so the other solutions would be,
oh, because you just use local storage.
03:00 - Oh yeah.
03:00 - React native just has async storage.
03:02 - It just, is this, just use that It's not
necessarily, if you do it the right way,
03:06 - the right way is so fricking clean that
none of this crap is necessary at all.
03:10 - Firebase has this really nice listener.
03:12 - You know, you basically do like
Firebase.auth() and then you
03:15 - want to do .onAuthStateChanged().
03:17 - And this is a listener that Firebase
gives you and it's detecting any
03:22 - time your authentication changes,
meaning anytime the user logs in
03:26 - or signs out and it's listening.
03:28 - So if we wrap the entire app at
a global level in this listener,
03:33 - it'll always be listening no
matter what screen they're on.
03:35 - And then here's what.
03:36 - If a user is locked in, give me the sign.
03:38 - Did stack.
03:39 - Otherwise give me the signed out stack.
03:41 - It is so freaking beautiful.
03:43 - It was so fun writing this if, and
then statement, because it's literally
03:47 - like you created two universes.
03:49 - If you're signed in stack
and you're signed out stack
03:50 - create these whole two worlds.
03:52 - And depending on if this or that you
put them in a whole new world, right.
03:55 - If the user is signed in,
put them in this signed.
03:58 - And that's all they have access to.
04:00 - Or if they're side out, put them into
science, out stack world, and that's a
04:03 - whole universe in itself that they're
in and then they can't get out of it.
04:06 - Right.
04:06 - So, so secure.
04:08 - And then here's the other benefits of it.
04:09 - And this is what I love the most.
04:11 - So usually in react native, when
you do navigation dot, navigate, or
04:15 - whatever, you'd navigate to a screen,
you're able to like swipe back.
04:19 - To the previous screen, but
that's not what I wanted my app.
04:21 - I don't want my app to
have that experience.
04:23 - Right.
04:23 - It wouldn't be so annoying if you actually
logged into Instagram or you swipe left.
04:26 - And instead of taking you to like,
you know, stories or something,
04:29 - it took you back to the login.
04:30 - Like how would that make sense?
04:31 - You just logged in.
04:32 - It shouldn't even let you go back to it.
04:34 - And so with this new way of doing
it, you don't even have access to
04:37 - the login or register screen anymore.
04:39 - So as soon as you log in, boom,
now you're just in this whole new.
04:43 - And if you try to swipe back, you
can't experience a, so much smoother.
04:47 - These are the security
so much smoother, man.
04:50 - It is so freaking nice, but
that was such a clean thing.
04:53 - I'm really excited about showing
guys this build when we drop it soon.
04:57 - I think that for a lot of people
they'll have the super clean.
05:01 - Of wrapping their entire up in
this type of authentication.
05:05 - And I really hope it provides a lot
of you guys with a lot of value.
05:08 - So that's it guys hope you
enjoyed this video smash that like
05:11 - button scrapped to this channel.
05:12 - You know, if you want to
watch it incredible build.
05:14 - I did Uber eats clones while you're
waiting, but other than that, love
05:17 - your face and I'll see you then.