00:00 - and let's get things started all right
00:04 - loud and clear this cl stream is clear
00:06 - amazing awesome
00:07 - let's get it started so uh
00:10 - today we are as you guys remember
00:13 - yesterday i was live with qazi
00:15 - and we dropped down a airtable form down
00:18 - below in the description you guys can
00:19 - see it right now as well
00:21 - uh where you can request something
00:24 - whatever you want
00:25 - us to build for you and that's literally
00:28 - what's gonna happen today
00:30 - so i took a look so so i've taken a look
00:33 - at it
00:34 - and actually i picked one that i think
00:36 - would be
00:37 - an amazing thing uh for us to build here
00:41 - right now and that is
00:44 - actually going to be a redox um
00:49 - redux user authentication service or
00:51 - actually user authentication service
00:53 - with redux and we will just save the
00:55 - login data so basically a session
00:57 - management
00:58 - if we can say and there is something
01:00 - wrong with the
01:01 - uh stream because it's not streaming at
01:04 - the right place
01:06 - so okay now now we are getting there
01:09 - okay
01:11 - all right i'll wait a little bit because
01:14 - things are getting together finally
01:17 - um okay pranav says i really needed it
01:21 - amazing we have 20 people live i will
01:24 - wait
01:25 - a just a tad uh so everybody can get
01:28 - on we had some sort of technical stuff
01:30 - happening
01:31 - uh in the background with uh all this
01:35 - streaming fanciness so
01:38 - excuse me for that but we are live the
01:41 - clever programmer family never stops
01:44 - and we will get going in just a minute
01:47 - uh so this project this is not about the
01:51 - looks this is not about how it will
01:53 - turn out at the end honestly we will
01:55 - have two buttons
01:57 - and all the other stuff is going to be
01:59 - technical and
02:00 - seriously focused on redux and by the
02:03 - way
02:04 - uh if you guys want to
02:07 - we can do a q a session later on on
02:10 - clubhouse so
02:11 - actually feel free to join us on
02:13 - clubhouse every single day
02:15 - at 8 00 p.m no 8 a.m pacific
02:18 - time on clubhouse it is called coffee
02:21 - with developers by clever programmer
02:23 - we are going live there every single day
02:25 - answering your questions
02:27 - so make sure to ch uh check in there
02:31 - so we have ver uh we have a few viewers
02:34 - already
02:35 - amazing welcome everybody and
02:38 - i think we can soon get started are you
02:41 - guys excited let me know in the chat
02:43 - and punch that like button like
02:46 - like that so let me know if you guys are
02:49 - interested
02:50 - in today's session so we can get
02:53 - started all right uh
02:57 - what is this all but i don't know
02:59 - anything about redux i am a flutter
03:01 - developer
03:02 - so redox is actually a state management
03:05 - thing
03:05 - uh state management tool for um
03:10 - dang those went together okay like that
03:15 - so uh redux is actually a state
03:17 - management tool for react
03:19 - so this is more for uh web development
03:22 - purposes
03:23 - but you are welcome here and whenever
03:26 - you are
03:27 - uh developing the web
03:30 - feel free to use redux all right
03:34 - okay everybody is interested amazing i
03:37 - see all the comments coming in
03:39 - yes all right let's get this
03:44 - started
03:48 - is redux similar to context api
03:52 - so in the core level it is similar but
03:55 - uh it's so much easier to use especially
03:58 - with this
03:58 - uh library that i'm about to show how to
04:01 - use with
04:03 - so be sure to make get excited about
04:06 - that
04:06 - because this is super beginner friendly
04:08 - anybody can learn it
04:10 - but i'm here to teach you so you don't
04:13 - have to waste your time
04:14 - on it it kind of took me a good two
04:16 - hours to figure it out but
04:18 - yeah okay everybody is interested
04:21 - amazing i see
04:22 - the chat is blowing up so that's good
04:27 - and all right
04:31 - guys please make sure not to spam the
04:33 - chat because i will just ban you
04:35 - i don't like getting it cluttered
04:39 - all right so with that said i will go
04:42 - ahead share my screen
04:44 - and okay it should be live and we're
04:47 - good
04:48 - okay we got we got mozart in the house
04:51 - dope
04:52 - all right so you guys see this is the
04:55 - folder that i
04:56 - will be working in and i have a terminal
04:59 - open
04:59 - i hope this is actually easy to read for
05:02 - you guys and i don't know if you like
05:04 - the music in the background
05:06 - but anyways uh this is what
05:09 - we will be uh this is where we will
05:11 - start you uh
05:12 - start building this redux thing so one
05:15 - thing
05:16 - that i want to share with you is how
05:19 - easy a redux application is
05:22 - so you just want to go ahead type in
05:24 - just like if it was a
05:25 - create react app we will do the exact
05:28 - same thing so we will type in npx
05:30 - create react app
05:34 - space dot because i want this to be in
05:36 - that specific folder where i'm at
05:38 - right now and i would just
05:41 - hit dash dash template and redux
05:45 - and that's it it will go ahead and
05:48 - create a redux up for us
05:50 - so that's super easy let's wait for it
05:53 - just a little
05:54 - uh right now i am actually using yarn
05:57 - most people use npm for their package
06:00 - management it's
06:01 - there is not too much of a difference uh
06:04 - basically yarn is so much faster
06:06 - that i highly recommend everybody goes
06:07 - ahead and uses that
06:09 - instead of npm so that's just a little
06:12 - thing
06:13 - and amana please let me know if there is
06:16 - some sort of
06:17 - issues and by the way huge shout out to
06:20 - omanath
06:21 - he is in the background and making sure
06:23 - everything is working perfectly
06:25 - and we are on actually a call uh so he
06:28 - can let me know
06:29 - if something's up so give a huge
06:33 - applause for him
06:34 - [Applause]
06:40 - all right amazing
06:43 - okay we got some positive vibes in the
06:45 - comments
06:46 - let's go that's amazing to see all right
06:49 - do you have to do anything like npmi
06:51 - g redux for begin nope not at all not at
06:54 - all
06:55 - uh this will know its thing you don't
06:57 - have to install anything beforehand
07:00 - um so that's all you have to do npx
07:04 - create react app
07:06 - uh dash dash template redux that's all
07:09 - you need to do
07:10 - all right amazing
07:14 - let me go ahead and quickly drink a bit
07:24 - all right yeah i'm on nothing day in the
07:27 - comments
07:28 - let's go all right amazing
07:31 - so what we will do like this is this is
07:34 - all we all we got like
07:35 - i think it's pretty uh like you guys
07:37 - know this
07:38 - this is how you build a reactor if you
07:40 - haven't worked with the react
07:42 - this might be a kind of like a next
07:44 - level for you but don't worry about that
07:46 - uh we have all the content for react on
07:49 - this
07:49 - uh channel and we will actually drop
07:52 - a react for beginners um
07:57 - type of sort of um
08:00 - content but and please
08:03 - please make sure that only communicate
08:07 - in english in the chat because
08:10 - yeah and we got this question is redux
08:14 - the same
08:15 - to react or what no it's not it's
08:17 - actually an extension to
08:19 - uh react so you know hooks
08:22 - right you know you state right
08:25 - you will start using redux once the
08:29 - uh once the use state is not good enough
08:31 - right
08:32 - so what i want you guys to understand
08:36 - is let me actually go ahead and do this
08:40 - and this all right so
08:44 - uh
08:47 - hold on a second
08:50 - what i will do is i i'll just start uh
08:54 - drawing some stuff here so you know
08:57 - we got this whole application going on
09:00 - over here
09:02 - actually let's go ahead and move
09:03 - everything away from this window
09:06 - so we got the whole application
09:08 - happening on
09:09 - uh on this side right and
09:13 - we have the app
09:16 - component on the top right
09:20 - so that's the app and down here we may
09:23 - we might have some sort of uh
09:25 - log in component i'm just throwing
09:28 - random stuff there
09:30 - we also have say uh
09:33 - cart if it was some sort of e-commerce
09:36 - application and we also have a product
09:40 - or something let's just stick with the
09:43 - uh
09:44 - components let's just stick with the
09:45 - e-commerce maybe here there is a
09:48 - checkout
09:49 - check out so you see like this is how a
09:52 - react app actually does work like
09:54 - we have all these levels and all these
09:56 - components and they
09:58 - uh they go like this
10:02 - but um so and the way you work with
10:06 - props is you can go
10:08 - from from here from app and go to login
10:11 - go to cart go to products go
10:13 - and actually go to checkout by going to
10:16 - cart and then check out right so you can
10:18 - drill these props down there this is
10:20 - something what we call
10:21 - prop drilling and you can do that right
10:25 - and with some hacks you can even go
10:28 - the other way so you can pass props
10:31 - up a level but there is no way that you
10:34 - can
10:35 - uh pass props on the same level
10:38 - and for that uh some people
10:42 - actually created the redux and that is
10:45 - actually a bubble
10:46 - around the application okay some sort of
10:49 - think of it like as a data layer right
10:52 - it's basically a data layer which
10:55 - contains all the global
10:57 - props pretty much global states right so
11:00 - that that's how you should be thinking
11:02 - about redux
11:04 - all right with that out of the way
11:08 - uh everything okay amanda
11:14 - okay hold on bro
11:17 - you got unmuted okay
11:21 - so is redox very important for react.js
11:23 - and react native developers
11:27 - it is not very very important but it is
11:29 - important so
11:31 - you need to be able to work with it
11:34 - and that's pretty much it all right so
11:37 - that said i'm going to go ahead and go
11:40 - back to
11:41 - the application so i already created the
11:44 - app
11:44 - and now i'm just going to open up a vs
11:46 - code in here
11:48 - so that's what we will be working with
11:53 - and i don't actually want to go
11:56 - crazy on the styling because it's more
11:58 - about just understanding the concept of
12:01 - redux
12:02 - um so
12:06 - that's that's something that happens
12:08 - okay
12:11 - all right i'm just gonna zoom in a
12:14 - little
12:16 - and nope we are not going to use any
12:19 - kind of
12:20 - map space or nothing like that
12:24 - we're just building a super simple how
12:27 - to get started with redux application
12:29 - and that's all okay
12:31 - all right it's clear amazing uh
12:37 - all right cool benefits of redux
12:41 - the benefit is that you can get a job
12:43 - mostly like there is so many more
12:45 - uh state management tool that is
12:47 - actually better than redux and even the
12:49 - creator of redux says you shouldn't
12:51 - always use
12:52 - it so right now it's on the
12:55 - on the top of the hype curve so
12:58 - the biggest benefit is that you can get
13:01 - a job
13:01 - in an easier way all right
13:06 - hey let's go
13:09 - so pytech solutions requested that
13:12 - today's video is brought to you by pytax
13:14 - solutions because
13:15 - he was the one who actually requested
13:18 - this topic so give
13:20 - a huge applause for him
13:22 - [Applause]
13:27 - alright with that said
13:29 - [Music]
13:33 - with that said let's take a look at how
13:35 - this application looks like
13:37 - and i'm just going to say yarn start
13:41 - to open up a safari tab
13:46 - because if you're not using safari what
13:48 - are you doing
13:49 - right guys let me know who is a safari
13:53 - guy here
13:55 - it can be only me it can be only me let
13:57 - me know who is a safari guy
14:02 - right so opening up the wii is code here
14:05 - we go
14:06 - or what is it safari
14:16 - is not me okay so this is what we get
14:20 - this is
14:21 - pretty familiar this is kind of how the
14:23 - react app looks like
14:25 - it's just there is this uh incrementer
14:28 - stuff
14:29 - and add the amount and i could even add
14:31 - 20
14:32 - and then that's how it works
14:36 - i'm an overall and chrome guy oh my god
14:39 - nobody uses safari how
14:42 - that's bad guys use safari uh okay
14:46 - so that's how the base redux app works
14:49 - i will just remove everything uh in here
14:52 - down below
14:53 - uh below this thing and we will just
14:55 - have one button
14:57 - uh at a time that we'll know if we are
14:59 - logging in or logging out
15:01 - that's all so we'll actually go hard on
15:04 - understanding
15:05 - how redux works because that's why we
15:07 - came here for
15:09 - all right with that said let's go into
15:12 - we as
15:12 - code
15:17 - and what i will do is
15:20 - so you see that inside of there we got
15:23 - all these new stuff so there is the app
15:25 - folder and features and counter folder
15:28 - all this stuff
15:28 - we don't need any of these so let's
15:31 - remove all the counter stuff
15:33 - this is actually the one that that
15:36 - increments these items so but we
15:40 - we're not gonna worry about that we're
15:41 - gonna build it from scratch
15:43 - and inside of the store we just remove
15:46 - these two
15:48 - and that's it so uh
15:51 - going back to the app.js
15:56 - what we have here is a bunch of stuff so
16:00 - what we will remove everything here
16:02 - these contour stuff and all that
16:04 - so we don't need any of those so let's
16:07 - remove
16:08 - that and everything down
16:11 - here like that
16:15 - oops i left this pan and we should be
16:18 - good to go yes
16:20 - let's take a look at the chat if there
16:23 - is something going on
16:25 - react redux app looks more interesting
16:27 - than the react up that's actually
16:28 - correct
16:29 - that that's so correct all right
16:36 - got 70 people in the house that's
16:37 - amazing and let's
16:39 - actually continue so
16:42 - step number one uh let's actually
16:46 - understand what we will do we will have
16:48 - two buttons based on if we have a user
16:50 - logged in or not
16:51 - the other one is going to be shown
16:53 - obviously
16:55 - um so that that's pretty much what we
16:58 - will do
16:58 - and one of them is going to sign in and
17:00 - then pass the
17:02 - uh logged in users data into redux and
17:05 - the other one is actually going to
17:07 - sign out the user so that's pretty much
17:09 - it we will have
17:11 - two functions that will take care of all
17:13 - these things
17:15 - did my camera freeze oh boy
17:21 - dang come on
17:25 - hold on a second
17:34 - all right
17:38 - okay
17:42 - and let's take let's see if i can bring
17:45 - it back
17:46 - somehow or maybe not
17:49 - all right camera built-in
17:56 - okay we got one camera that's not the
17:59 - one that i want to
18:00 - come on hold on a second
18:09 - [Music]
18:10 - that's a shame
18:15 - that's a huge shame
18:19 - all right let's see okay
18:23 - my camera is back tang
18:26 - okay that was crazy
18:30 - yeah okay all right we should be good to
18:34 - go
18:36 - okay so that said
18:40 - uh let's go ahead and continue
18:44 - carrying on where we left off hi
18:46 - everybody who's joining
18:48 - we are going to be building some sort of
18:50 - super simple redux app
18:51 - and the user authentication so that said
18:55 - uh let's actually understand what's
18:57 - gonna happen
18:59 - first let's go ahead and add the
19:00 - authentication and then we will go ahead
19:03 - and mess with all the
19:04 - uh stuff all the other stuff all right
19:08 - so uh going to firebase
19:11 - because obviously we will use firebase
19:13 - for this purpose
19:15 - uh okay
19:19 - and in here i'll just go into console
19:23 - on the top right corner
19:26 - and going in uh i already have this
19:30 - project
19:31 - all three docs because that's that's how
19:33 - i prepared for this one but i will just
19:35 - go ahead and say auth
19:36 - redux and say live
19:39 - so that's what i will do i'll create i'm
19:41 - creating a new project
19:43 - for this one i don't need any of the
19:46 - google authentication and stuff so
19:48 - let's not worry about
21:08 - hello can you guys hear me
21:11 - what the
21:15 - come on
21:18 - everything is coming together okay now
21:20 - you should be here hearing me
21:22 - okay done
21:26 - okay now come on where did you guys
21:29 - okay where uh where was it left off man
21:32 - up help me out
21:40 - okay so
21:44 - coming back into firebase uh
21:47 - so we will link a web application like i
21:50 - tried to say
21:52 - but didn't work so i will click
21:55 - this very button right over here so i'm
21:59 - gonna go ahead and
22:01 - go back to the name part all right
22:04 - going back to the name part add new
22:06 - project which was
22:07 - which you know what i'll just do the
22:09 - whole thing again i'll just do it again
22:12 - all right i will just give it a name uh
22:15 - i'm calling it
22:16 - off redox and live
22:19 - and now i'm just gonna add a two because
22:21 - it's the second one
22:24 - uh yeah all right
22:27 - and there is no need for google auth
22:29 - google analytics
22:31 - and any of that kind of stuff so we will
22:33 - just not worry about
22:34 - that all right dope
22:40 - okay are you guys following me everybody
22:43 - is
22:43 - okay yes i will be
22:46 - make a firebase tutorial for react.js
22:49 - developer that's
22:50 - something i was talking about probably
22:52 - when i was muted
22:53 - for some reason uh so yes i will
22:57 - make a firebase tutorial for react.js
22:59 - developers
23:00 - i think i will drop it as a separate
23:03 - video not a live session because there
23:05 - is just so much things
23:07 - that i i prefer to have that in one
23:10 - video and you guys can go ahead and
23:11 - watch that
23:12 - but i will be in the chat the whole time
23:15 - answering
23:16 - all your questions and then making a
23:19 - clubhouse session or some kind of q a
23:21 - session so
23:22 - you guys can actually ask your questions
23:25 - regarding that video
23:26 - so right now i'm gonna go ahead hit that
23:29 - button
23:30 - over there which will be a web
23:33 - application adding button and by the way
23:35 - guys
23:36 - it would mean the world to me if you
23:39 - could go ahead
23:40 - and just give that like button a smash
23:43 - so that it looks
23:44 - blue because then this video will go out
23:47 - there
23:48 - and it just helps out the uh helps
23:51 - us out and we know that it is a good
23:53 - content that we produce
23:55 - so if you could do that i would be super
23:58 - uh thankful for that
23:59 - all right let's continue
24:03 - plus by the way smashing the like button
24:05 - is the best way to become a developer
24:07 - just throwing it out there all right
24:09 - next up
24:11 - uh i'm gonna name it here again
24:14 - i need to name this uh the application
24:16 - that i will
24:18 - um that i will create yo
24:21 - what's up authoriba dope by the way i
24:24 - thought it was a
24:25 - student inside of our course profit with
24:27 - javascript so
24:28 - and we just had today a q a session call
24:32 - and he was there so by the way if you
24:33 - guys are interested in that
24:35 - make sure to check that course out all
24:38 - right
24:39 - so i will call this off redux
24:42 - and live and i
24:45 - also set up firebase hosting but we will
24:47 - not host it today
24:51 - if i could give a thousand i will
24:55 - that's amazing all right
24:58 - yes can we use mer can we use martin
25:00 - stack for firebase like fern
25:02 - replace mongodb to firebase i mean
25:06 - there is not too much point of
25:10 - being full stack if you're using some
25:11 - sort of serverless stuff
25:13 - so i wouldn't really recommend you can
25:15 - totally do that
25:16 - you can 100 do that
25:20 - all right so going down here
25:23 - once i added my application uh i have
25:25 - this config
25:26 - and that's what you need to copy going
25:29 - back to our vs code
25:32 - let's just create a firebase.js file
25:36 - and that's where we pretty much want to
25:39 - paste that
25:40 - now before we go any further uh i want
25:43 - to
25:43 - install the dependencies so the npm
25:47 - packages so what i will say is yarn
25:49 - add firebase and firebase
25:52 - tools for perfect
25:56 - compatibility so
26:00 - all right so this is something that you
26:04 - need to do and i got thirsty again
26:19 - right now making a typing speed
26:22 - multiplier game
26:23 - using mirn and socket io
26:26 - i will show you the complete amazing yes
26:29 - 100 show me amazing
26:32 - all right so this will do its stuff uh
26:36 - for a little
26:37 - but in that time i'll just reorganize my
26:41 - windows
26:43 - [Music]
26:48 - so you guys can already see that it is
26:49 - actually
26:51 - so you're why why yarn is so much better
26:53 - uh
26:54 - kai when you're editing this please clip
26:56 - this one out so why
26:57 - your why is yarn so much better
27:00 - yarn actually installs uh several
27:03 - packages at the same time that makes it
27:06 - so much faster so that's something that
27:07 - you want to
27:08 - keep in mind when you're debating
27:10 - between
27:11 - using yarn or using npm so that's
27:14 - something uh
27:15 - you guys want to keep it up hey let's go
27:18 - we got our first donation from
27:22 - yosam i'm not sure if i'm saying your
27:25 - name correctly
27:27 - thank you so much really appreciate it
27:30 - so
27:30 - yeah let's go ahead and now import
27:34 - firebase and let's continue working
27:38 - and we obviously imported from firebase
27:45 - a rsi awesome
27:48 - so and now uh we just want to set up
27:53 - all the authentication stuff so we
27:57 - we pretty much not do not do anything we
28:00 - will just go ahead and set
28:01 - everything up and don't be sorry about
28:04 - how much you donate
28:05 - anything you do for us that actually the
28:08 - fact that you're here
28:09 - with us is is such an amazing feeling
28:12 - for us
28:12 - so you don't have to we really
28:15 - appreciate
28:16 - every single penny you guys donate so
28:18 - whatever
28:19 - yeah don't worry about that at all
28:22 - all right next up let's create a
28:25 - firebase app instant
28:27 - instance we thank you for being here and
28:30 - helping us out all right so what we do
28:34 - is a we will create a firebase app right
28:37 - and that's going to be a firebase
28:39 - initialize app and we will just throw in
28:42 - all the config files right
28:46 - that we grab from here so once again
28:49 - go back to firebase grab the snippet of
28:51 - code
28:52 - create a new file called firebase.js
28:56 - import firebase add in the config
28:59 - snippet
28:59 - and then just go ahead and create a
29:01 - firebase app using the
29:03 - firebase.initialize app
29:04 - method or function or whatever it is
29:08 - and then throw in firebase config all
29:10 - right
29:11 - make sense let's go
29:17 - okay with that said we need two more
29:19 - things to be exported
29:21 - one of them being auth and provider
29:26 - these are actually going to be uh our
29:28 - google authentication backend right
29:31 - so what we will do is we're just gonna
29:34 - like the user the usual way const
29:37 - auth equals firebase.off
29:41 - and it's a function amazing once again
29:44 - and we will have the provider which is
29:47 - going to be a new firebase
29:50 - auth and it's a google auth provider
29:55 - okay so that's what we will make and
29:58 - guys
29:59 - if you are uh if you guys want to go
30:01 - dive uh
30:02 - go deep into this amana please drop the
30:06 - pwj link in the chat make sure to go
30:09 - ahead check that course out because we
30:11 - do
30:11 - it every day you can ask us questions
30:15 - we have coaching calls we have all this
30:16 - kind of stuff so make sure to
30:18 - check in
30:22 - all right
30:25 - are you going to use google auth or
30:26 - email password i'm going to use google
30:28 - all
30:29 - it's much better plus by the way
30:32 - email password is not secure anymore i
30:35 - mean nobody considers it secure anymore
30:38 - um so that's something you want to avoid
30:42 - all right and we will just go ahead and
30:44 - export both
30:45 - off and the provider okay
30:48 - that's sad we're pretty much good on the
30:51 - firebase side
30:53 - one thing we need to we still need to do
30:56 - is go
30:56 - back to firebase and then just turn on
30:59 - the back end that's
31:01 - that's all so what would you just go
31:03 - ahead click get started
31:05 - it will go ahead and show you this
31:07 - screen
31:08 - and once you're in google you just want
31:10 - to hit enable
31:12 - add your email address and save
31:16 - and you're good
31:19 - that's it you just turn on your back end
31:23 - simple as that
31:28 - all right
31:32 - so uh we are good on that side
31:37 - and now what we want to do is go into
31:39 - features
31:40 - and creating new files so what i want to
31:43 - do
31:44 - is add a user slice and this is where
31:47 - redux will come in okay so now make sure
31:51 - to pay close attention
31:52 - because we are getting into redux so far
31:55 - everything
31:56 - is something that we've already done on
31:59 - this channel so you guys can watch it
32:01 - several times
32:02 - uh even me explaining it or causing
32:06 - explaining it
32:07 - so we have this sort of content on this
32:09 - channel
32:10 - so now we are getting into the new stuff
32:14 - all right so in here before we actually
32:17 - get started
32:20 - uh whenever david is writing on vs code
32:26 - i'm not sure okay going back here so
32:29 - what
32:30 - now now it's time to pause because if
32:33 - you guys don't
32:34 - have the es7 snippets you will be lost
32:38 - okay now is the time to go ahead and
32:40 - install that thing
32:42 - i will have a separate video explaining
32:44 - all the best extensions
32:46 - uh for vs code in that you guys can go
32:49 - ahead and download
32:50 - in 2021 it will be dropping in a few
32:53 - days
32:54 - so make sure to check that out too
32:57 - because i'm going to
32:59 - talk about it in depth uh why is it
33:01 - important but you want to
33:03 - go ahead and search for es7
33:06 - and then download this extension
33:10 - you need this you will get lost without
33:12 - this one all right
33:14 - so considering you've already done that
33:18 - uh i would just type in
33:21 - rx slice boom
33:24 - that's it that's how we are setting up
33:28 - redux
33:29 - once again if you don't have that
33:31 - extension
33:32 - you cannot do this you want to uh
33:35 - you want to have that extension so once
33:38 - again es7
33:39 - react redux graphql snippets
33:43 - you need this one okay
33:52 - all right uh hola martello
33:56 - amazing okay so now i show i've shown
34:00 - you
34:00 - uh twice how to install that so make
34:02 - sure to have it
34:03 - and once again you want to type in rx
34:07 - slice and just hit return that's all
34:11 - that's how we set up a something called
34:14 - a slice
34:15 - a slice in actually redux is
34:19 - is a piece of state uh which handles
34:22 - several variables and makes them global
34:24 - so a slice
34:26 - is the most important part that you can
34:29 - have
34:29 - in redux you need this all right
34:34 - going back here let's actually
34:36 - understand what's going on
34:39 - and dope
34:43 - all right so once again so what we want
34:46 - to do here is just
34:48 - give it a name of user right over here
34:51 - just give it
34:52 - user because it is the user slice
34:55 - and it actually does this weird sort of
34:58 - indentation
35:00 - which theme am i using it's a good one
35:05 - make sure to watch the video when i'm
35:07 - talking about the uh
35:09 - extensions because that is where i am
35:11 - talking about this theme as well
35:13 - nope it's not the material it's by far
35:16 - not the material one
35:18 - i'm avoiding material
35:22 - all right i'm not gonna talk about which
35:25 - theme i'm using
35:26 - make sure to watch that video too
35:31 - all right so over here
35:34 - uh we would just add two pieces
35:37 - of state inside of the initial state one
35:40 - of them being
35:41 - user name which is going to be
35:44 - null for the first time as a initial
35:46 - state
35:47 - and the other one is going to be user
35:50 - email
35:51 - which again is going to be null okay
36:01 - all right let's nope not
36:05 - not dracula neither dracula
36:11 - okay that's a good one i thought about
36:13 - thanks i'll take a look at
36:14 - uh recoil
36:18 - okay so this
36:21 - might already be a little bit of a
36:23 - little bit confusing so
36:25 - i will just do this i will add a comment
36:28 - and
36:29 - just and i'll just go ahead and create a
36:31 - brand new
36:32 - uh use state just how we did the old
36:35 - days okay
36:36 - nope it's not the dracula theme by far
36:39 - not the dracula
36:42 - so this is how a normal state
36:45 - used to look like right so user name
36:50 - and set user name
36:54 - equals use state
36:57 - and something okay so notice the pattern
37:01 - okay notice the pattern what's happening
37:03 - here
37:05 - uh we are defining the initial state
37:08 - this is the initial state
37:09 - in a in a regular
37:13 - u state this is the this is the initial
37:16 - state
37:17 - that's what ha that's what goes there
37:18 - okay
37:20 - super easy
37:24 - nah this is a better one than andromeda
37:28 - okay so this is how uh this is what
37:31 - happens here okay
37:33 - i'll just i'll just show around which
37:35 - one is uh
37:36 - like which part of the redux slice is
37:39 - which part of a normal use stays
37:41 - considering like you guys already know
37:43 - uh the normal use state so i just want
37:45 - to give some sort of
37:47 - uh ease that out
37:50 - is the difference out all right so in
37:52 - the reducer
37:53 - we will actually create two functions
37:56 - that will
37:57 - handle all our user activity one of them
38:00 - is going to be
38:01 - set active user right
38:05 - and that will have the state and an
38:08 - action
38:12 - nope not even work done not even one
38:14 - dark
38:15 - pro nope not at all
38:23 - okay and in here
38:26 - uh what i will do is just state that
38:30 - user name is equal to
38:33 - action dot payload
38:37 - the username
38:41 - okay so what's happening here because
38:43 - now it's getting confusing
38:45 - and you know what i'll i'll make it a
38:46 - little bit more confusing so
38:48 - state the user email equals
38:51 - action dot payload
38:54 - the user email okay
39:02 - i gotta go sleep because it's too late
39:04 - see you in another stream
39:05 - yes see you see you soon see you soon
39:07 - bye-bye
39:10 - all right so what i will do now
39:13 - once i'm plugging back my headphones
39:28 - so now this one is actually going to go
39:30 - ahead and give
39:31 - the value in here okay so this
39:34 - is the set username and set email part
39:37 - of these states okay
39:41 - especially this line of code is this one
39:43 - okay
39:44 - i hope this is actually understandable
39:47 - how i'm
39:48 - um how i'm trying to explain it make
39:50 - sure let me know in the chat
39:52 - if if it is uh because actually uh this
39:56 - sort of analogical thinking helped me a
39:59 - ton
39:59 - understanding how redux works so i just
40:01 - want to help you guys with that
40:03 - and
40:04 - [Music]
40:07 - and once we are signing the user out
40:10 - we will have the set user logout state
40:13 - and it will have the it will just set
40:16 - everything to knock okay
40:27 - so let me know guys if it is a if it was
40:30 - a good explanation
40:31 - how how i explained it so uh so we have
40:34 - once again the initial state which is
40:36 - defined over here
40:38 - boom and we also have
40:41 - this line of code which is the set
40:43 - username
40:44 - the only difference is going to be
40:45 - global and again
40:48 - here is the set user logout state okay
40:51 - we got the like
40:53 - so that's good
40:59 - all right and
41:02 - so once again let me know uh if you guys
41:06 - understand it
41:07 - and if everything is cool so let's
41:09 - continue
41:16 - and now what you need to do okay so so
41:18 - we have these sort of actions
41:20 - this is actually an action okay and the
41:23 - action
41:23 - is going to contain that
41:26 - internal setting function okay
41:30 - so in order for uh to work with these
41:33 - setter functions
41:34 - we will need to uh actually
41:38 - export them and yeah
41:42 - so let's do that right now so i'll just
41:44 - go ahead copy this one
41:46 - paste it copy that one
41:49 - paste that here and we
41:53 - should be good to go
41:58 - which theme i will have another video
41:59 - explaining a ton of these extensions
42:02 - make sure to watch that and you will
42:03 - know which theme
42:06 - so now that i have those exported uh i
42:09 - can go ahead and use them in other
42:11 - components okay two more things we need
42:15 - to
42:16 - uh make happen in here is actually
42:19 - this part of the state okay
42:22 - so if you have used already use state
42:24 - you know what this part is
42:26 - this part is the one that returns the
42:28 - actual value of that specific state okay
42:32 - so that will be a super easy one as easy
42:35 - as exporting
42:37 - a exporting a const
42:40 - which is going to be select user name
42:44 - and that will go ahead and use the state
42:49 - and just grab the user's state
42:53 - and the username from that specific
42:57 - state
42:58 - okay so that's how this
43:02 - this one works and
43:05 - this select this this line of code will
43:08 - be responsible
43:09 - for that piece of uh
43:13 - that piece of the code so let's do the
43:16 - exact same thing
43:17 - with the user email yes
43:20 - i will explain user slice one time more
43:23 - okay
43:24 - so once again uh we have all this stuff
43:28 - and we have the normal use date okay
43:33 - so how does the normal use state how is
43:35 - the normal use state build up
43:36 - actually i'll add the other one as well
43:39 - so we have
43:40 - user email and
43:44 - set user email
43:47 - equals use state
43:52 - no
44:00 - so we have these two uh specific
44:03 - use states right this is how you would
44:05 - do in a normal way
44:07 - with the use state but because we are
44:09 - using redux
44:11 - we will do it the redux way that's why
44:13 - we have to have this
44:15 - user slice something that actually takes
44:17 - care of all these manipulations and all
44:20 - that kind of stuff
44:21 - so this has an access
44:25 - an access function that is actually
44:27 - peeking into the state
44:28 - and grabs out the value right and we
44:31 - also have a setter function that does
44:33 - the same
44:33 - but it actually manipulates the value
44:37 - and we have this initial value thing so
44:39 - it's like declaring the variable
44:42 - and just giving it a value right away
44:47 - so next up so that that's what happens
44:50 - in here okay so that's
44:51 - this part next up we will
44:54 - def uh define how we want this
44:57 - to happen it's just pretty much just
45:00 - defining that
45:01 - specific function so what we do is we
45:04 - have the set
45:05 - active user as a action okay
45:09 - and inside of there we would just mutate
45:11 - the username okay
45:13 - we will just give it a new value it's
45:16 - like saying uh
45:18 - set user name
45:21 - and give in the action.payload
45:26 - it's the exact same thing down here but
45:29 - when we call this function
45:31 - both of these lines run
45:34 - and all we need to do let all we have
45:38 - left to do
45:39 - is this piece which is actually going to
45:41 - be responsible
45:42 - for shooting in and grabbing the value
45:44 - back and just returning the value
45:46 - and that is going to be the select
45:48 - username guys uh
45:52 - at this point i want everybody to go
45:54 - ahead and just
45:55 - copy it and then just have this uh these
45:59 - this code with them and from now on we
46:01 - will use redux a ton
46:03 - more times so you will have plenty of
46:06 - time to understand it all right
46:08 - so we have user slice and now going back
46:10 - to app.js
46:13 - uh we will go ahead and
46:16 - import all the stuff that we have
46:19 - prepared for now
46:22 - so first we will have to import
46:26 - the auth and then the provider
46:29 - from firebase right
46:33 - because that's what will be responsible
46:35 - for
46:36 - um authenticating the user
46:40 - next up we will be importing something
46:43 - called
46:44 - use dispatch
46:48 - and use selector
46:52 - from the react relocks library
46:57 - and that's what we will that's what
46:58 - we'll take care of
47:01 - actually right giving a new value to the
47:03 - specific state
47:05 - and grabbing back that specific
47:08 - like reading that value that states
47:11 - value okay
47:15 - and now because we have exported all
47:18 - these stuff we definitely need to import
47:20 - them
47:21 - and that's how we will be able to access
47:23 - it over here and
47:24 - whichever component you want to go ahead
47:26 - and access
47:27 - that specific slice you will need to
47:30 - import those
47:37 - so let's import
47:40 - so we have a set active
47:44 - user we will set user
47:48 - logout state select
47:52 - username or user email first
47:58 - and we will import it from
48:04 - features and user slice
48:12 - all right dope
48:16 - so once again we have declared all this
48:19 - stuff
48:20 - this one is responsible for giving a new
48:22 - value to that specific state
48:25 - this one as well we're just defining
48:27 - some sort of how
48:28 - how we should be uh working with that we
48:31 - are giving an exact value
48:33 - over here which is going to be null
48:35 - because at this point the user has
48:37 - already logged out
48:39 - at this point we are uh reading the
48:41 - value of that specific state and in here
48:44 - we are passing in whatever we want to
48:46 - set
48:47 - it as a value and obviously at the point
48:50 - of declaration
48:51 - we need to uh
48:55 - give it an initial state so that's what
48:57 - happened
48:58 - there dope uh going back to the app.js
49:02 - file uh
49:08 - we will do a few different things so
49:12 - on the javascript part of the component
49:15 - we will just go ahead and say const
49:19 - dispatch equals
49:23 - use dispatch
49:27 - that's it that's a tool that we are
49:29 - going to be using to
49:30 - set a new value to that specific state
49:33 - that we will be manipulating
49:35 - all right
49:40 - and then now we will need to
49:44 - uh save in a variable uh
49:47 - of those we need to read
49:51 - out the state the current state of both
49:55 - states
49:56 - into a variable so that for that
49:59 - we will have a user
50:03 - username which is going to be
50:07 - you which is which we will use use
50:09 - selector for
50:10 - and we will just go ahead and select the
50:13 - name
50:14 - and we will do the same for the user
50:16 - email
50:19 - that will be use selector
50:22 - oops use selector
50:26 - and for that we will be saying select
50:29 - user email
50:33 - hey what's up muhammed
50:37 - so with that said now
50:41 - we will be handling the user
50:44 - authentication
50:46 - uh based on what's happening so
50:49 - for that we will have a
50:52 - conditional rendering going on over here
50:54 - so if there is a username
50:57 - right so the initial state remember
51:00 - it is a null so it's obviously false
51:02 - right now
51:04 - but at that point uh we want to have a
51:07 - button
51:09 - uh in two in the true part which is
51:12 - going to be sign out so if
51:13 - there is a username which there is not
51:16 - at this moment
51:18 - then we want to have a button which will
51:20 - click
51:21 - which will fire off a function
51:24 - on click which is going to be handle
51:27 - sign out
51:31 - next up we will also have a
51:34 - another button i mean
51:38 - button come on
51:45 - yeah so whenever we will have an
51:48 - other button which is going to be the
51:51 - sign in button
51:54 - and on click that will
51:57 - fire off the handle
52:01 - sign in function
52:04 - so those two we need to declare right
52:07 - now
52:08 - so we will have a const handle
52:12 - handle sign in that will do something
52:19 - let's just actually write out everything
52:22 - beforehand so we can go ahead
52:24 - and work with that after all all right
52:27 - and once that's done we will
52:31 - make a new one which is going to be
52:33 - handle
52:34 - sign out
52:38 - and that will do another stuff so notice
52:41 - we've already imported
52:42 - uh this stuff right here
52:48 - can you record the live for references
52:50 - yes we oh
52:51 - by the way this is actually being
52:53 - recorded at this moment
52:55 - and we have a we have an amazing
52:58 - video editor at our team who's a
53:00 - professional
53:02 - and he is going to chop up this whole
53:04 - thing so
53:05 - no worries we will upload this again in
53:08 - a shorter much shorter version
53:10 - without all the audience engagement so
53:12 - no worries we will
53:14 - have a structured super short version
53:17 - right now we're just hanging out having
53:19 - some fun having some good time
53:21 - i am ready to accept any kind of
53:25 - suggestion moving forward so yeah this
53:28 - is a feel good session
53:30 - we are uh building some stuff here but
53:32 - that's all
53:33 - yes we will have a stripped out version
53:36 - a shorter version
53:37 - uh for the youtube channel
53:41 - so back to the build we will
53:44 - let's actually handle the sign out first
53:48 - so it is actually going to be auth
53:52 - dot sign out
53:56 - and the then
54:02 - that then uh we will be just dispatching
54:07 - and we will say set user
54:11 - logout state right
54:14 - so this is what happens all right so
54:18 - what happens here first auth dot sign
54:20 - out this is firebase okay
54:22 - this is when we will terminate the user
54:25 - session
54:26 - uh of being logged in this at this point
54:29 - the user is not logged in anymore
54:31 - but we still need to handle it in our
54:34 - application right
54:35 - so for that we use something called
54:39 - dispatch
54:39 - which is a tool that we use to
54:43 - kind of like shoot in redux it's a weird
54:46 - way to say it but
54:47 - that's what it is it's more like
54:49 - dispatching into redux and just letting
54:52 - the global say no no hey
54:54 - the user is already out it would be good
54:57 - to set back
54:58 - everything to null right so we will run
55:02 - these two lines of code
55:03 - that's what will happen all right
55:06 - and that will empty out the active user
55:09 - state
55:10 - so that's good at that point
55:15 - and next up once we are cool with that
55:20 - uh we might as well want to go ahead and
55:22 - catch some sort of errors that might
55:24 - happen
55:25 - so we will say catch oh my god
55:28 - yeah microsoft visual studio by the way
55:30 - guys
55:31 - does anybody know any other kind of
55:34 - text editor that is better than vs code
55:38 - and has all these extensions because i
55:40 - want to
55:41 - i want to move away from using vs code
55:43 - honestly
55:45 - so whatever so catch we want to go ahead
55:48 - and catch
55:49 - any kind of errors that we might see
55:53 - so for that uh we will just add an elder
55:56 - alert yes and we will
56:01 - want to display the error message
56:18 - all right
56:22 - that's not okay down answer
56:26 - i want i want to leave vs code honestly
56:29 - all right so in case there is some sort
56:32 - of error
56:34 - uh then we will just display
56:39 - bro come on
56:57 - dang
57:02 - okay
57:08 - uh errors as comments oh you mean
57:12 - this one yeah uh so this is actually
57:16 - once again will be covered in my top
57:19 - 10 vs code extensions
57:23 - let's build the name top 10 vs code
57:25 - extensions
57:26 - in 2021 that will help you become
57:29 - a better developer i have a video coming
57:33 - up but this one is actually air lens
57:35 - so make sure go ahead check it out but i
57:38 - will have it
57:39 - i'll show around how is it working and
57:42 - all that stuff so
57:43 - stay tuned for that dope so we have the
57:46 - sign out
57:47 - already done and now we want to make
57:51 - sure that the user can actually log in
57:54 - as well so what we will do is just
57:57 - off dot sign in
58:00 - with sign in
58:04 - with pop-up
58:07 - because we like the pop-up come on
58:10 - notepad plus plus really
58:12 - dude okay provider
58:16 - so we what happens here is that the
58:19 - we are telling the firebase
58:21 - authentication service that pop
58:23 - up a new window and just use the
58:25 - specific provider that we just
58:27 - created which is in this case is going
58:30 - to be google
58:31 - okay that's all and
58:34 - then then
58:38 - uh we will obviously have a some sort of
58:41 - result
58:42 - right in case it is
58:45 - uh in case everything's working
58:50 - and next up now this
58:53 - is again a moment when we want to kind
58:56 - of like
58:57 - take a look into and peek into redux and
58:59 - just manipulate a specific state
59:02 - um that's when we will say once again
59:06 - dispatch set active user
59:10 - and we will just throw in name email
59:13 - and that's it actually uh i think we
59:15 - want to throw any user
59:17 - name and user
59:21 - email okay because that's what we are
59:23 - waiting for
59:24 - right over here so once again the
59:27 - username is going to be
59:28 - set the action payload username and that
59:31 - is
59:32 - and actually this is the action payload
59:35 - okay
59:35 - so whatever we are passing in is
59:37 - actually the payload
59:39 - uh sometimes these sort of props are
59:42 - being called payload especially at this
59:45 - point
59:47 - so amazing we have that done and now we
59:50 - should be
59:51 - actually able to have a working
59:54 - application which is uh
59:59 - not the best user experience but is
60:01 - something
60:02 - all right something's up not a problem
60:06 - uh yeah
60:10 - so the last thing before um
60:16 - before we can actually make it work
60:19 - is we need to go into store.js so
60:23 - store.js
60:24 - is the file that takes care of all the
60:27 - pro
60:28 - all these global states and just has
60:30 - them in a centralized
60:32 - place okay so for that uh
60:35 - to actually make sure that it is here
60:40 - let me just go ahead and say user
60:42 - reducer
60:43 - right that's going to be from imported
60:47 - from
60:48 - a folder above in features
60:53 - in user slides okay so that's going to
60:56 - be
60:56 - this snippet of code because actually
60:59 - redux is a pain in the ass to set up
61:02 - but with this specific library
61:06 - everything is so much easier but this
61:09 - one
61:10 - interacts with redux so we need to
61:13 - import everything
61:14 - in here and we will have a reducer which
61:17 - is going to be
61:18 - the user and we will just pass
61:21 - in the user reducer
61:25 - all right with that said let's take a
61:28 - peek how it is
61:30 - and there we go there we have our uh
61:33 - sign in button so that looks good so far
61:37 - if i go ahead and click that it actually
61:39 - pops up my new window
61:41 - which is going to be active right now
61:45 - and now if i can just go ahead and
61:49 - log in that's amazing we are
61:52 - good and right now it actually shows
61:56 - sign out so that is actually something
61:58 - that indicates that we already have
62:00 - uh the value saved now let's take a look
62:03 - at uh
62:05 - let's take a look at it using
62:08 - google chrome because guys
62:11 - even though i hate chrome chrome has so
62:14 - many battery extensions once again
62:16 - just like vs go so again uh let's go to
62:20 - localhost
62:24 - and we should be good and guys
62:27 - we have five minutes left uh sort of
62:31 - of this stream so now stick till the end
62:34 - and we should be done very very soon
62:38 - so i'm just gonna go hit inspect and if
62:41 - you have
62:42 - the redux developer
62:45 - extension for chrome then this is what
62:48 - will pop up
62:49 - if i go ahead and hit sign in
62:54 - wait a little
63:00 - and go ahead sign in with my uh user
63:08 - come on i'm not sure what my password is
63:15 - okay good and we'll just sign him with
63:18 - that one
63:18 - right so you see here that the set
63:22 - active user this is what happens
63:24 - the username is going to be rewritten
63:26 - from null to david rakozy okay
63:29 - don't use this email to email me i will
63:32 - be mad
63:34 - and if i go ahead and hit sign out then
63:37 - it sets the logout state
63:38 - and it goes back to sign in and
63:42 - everything is gonna be set back to naw
63:45 - now
63:45 - guys i will have this video
63:48 - chopped up by a professional video
63:51 - editor
63:52 - in our team and will be uploaded again
63:55 - as a normal video to this sp this very
63:59 - channel
64:00 - so make sure to stick around for that uh
64:02 - we will be dropping it tomorrow the day
64:04 - after tomorrow sometimes around that
64:07 - but we will have a summarize a so much
64:10 - faster version of it
64:11 - this specific video so and under
64:14 - that one i will have a github repository
64:18 - linking to this specific project and
64:20 - guys let me know now in the chat
64:22 - if you guys have any sort of questions
64:25 - regarding this project
64:27 - because now i will be waiting a little
64:29 - and answering any kind of questions you
64:31 - might
64:32 - have so make sure to drop them in the
64:34 - chat right now
64:36 - because i will be answering those
64:38 - questions
64:41 - all right and
64:46 - so make sure drop your questions drop
64:49 - anything that you
64:51 - drop any kind of questions that you
64:53 - might have frank smith
64:55 - says thank you thank you so much for
64:57 - sticking around for so long by the way
65:00 - if somebody watch the whole thing just
65:02 - drop a
65:06 - drop a snail emoji okay
65:09 - just let me know if if you watch the
65:12 - whole hour
65:13 - and everything happening here okay
65:17 - just let me know i can't wait for the
65:20 - recording because i came late all good
65:22 - bro olga
65:22 - actually you can watch this one as well
65:26 - uh yes i will explain use dispatch in
65:29 - just a second
65:30 - so you can watch this one as well right
65:32 - after i sign
65:33 - off and
65:37 - so you don't have to wait for the
65:38 - recording okay the recording is only
65:41 - going to be good if you want to use it
65:42 - as a
65:43 - later reference or later as a
65:46 - explanation or something
65:47 - okay so frank smith uh asked can you
65:50 - explain
65:50 - use dispatch a little bit so imagine
65:53 - this
65:53 - okay deepak say sendings two snails guys
65:56 - drop a snail emoji
65:59 - if you watch the whole thing so use this
66:02 - patch
66:03 - uh it's kind of like the communication
66:06 - tunnel
66:07 - between redux and your application okay
66:11 - so when you are giving a new value
66:15 - to that specific state you will use this
66:17 - patch
66:19 - to push that uh
66:22 - push that actual value in the state okay
66:26 - does it make sense let me know um
66:30 - it's kind of like tr uh passing in as a
66:33 - prop
66:35 - so there is two different way so there
66:37 - is two ways that you can
66:39 - look into the uh uh the state
66:43 - one of them has only read permission
66:46 - that's the use selector
66:48 - and the other one has write permission
66:50 - only
66:51 - so that doesn't that so use this patch
66:54 - you don't use it
66:55 - to read whatever the value of that state
66:58 - is
66:59 - but for use selector you only use it to
67:02 - read that specific
67:03 - value okay all right
67:08 - amazing thank you so much sam codes says
67:10 - love the
67:11 - love the work great great content
67:14 - amazing thank you so much for sticking
67:16 - around
67:18 - all right i only sewed two snails that
67:20 - means nobody was here at the beginning
67:22 - that's that's problem all right with
67:25 - that said guys thank you so much for
67:26 - sticking here
67:28 - and watching this thing i really hope
67:30 - you enjoyed
67:31 - please let me know in the comment now
67:34 - down below
67:34 - now no more i'm not going to read any
67:37 - more of the chat
67:38 - let me know in the comments down below
67:41 - how you liked it
67:42 - and uh
67:46 - what you guys want us to build next also
67:49 - there is a link
67:50 - an airtable link in the description
67:52 - where you can
67:53 - request us build something for you
67:55 - today's video was actually brought to
67:58 - you by
67:58 - somebody uh in the chat who
68:01 - already uh asked for this content
68:05 - so we made it you guys can see that we
68:08 - we build what you want and what you want
68:11 - to see
68:12 - so with that said thank you so much for
68:13 - joining this is david from
68:15 - cleverprogrammer
68:17 - and i'll see you in the next video
68:20 - peace out