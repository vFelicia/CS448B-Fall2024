00:00 - hey guys what's up this is Cosley from
00:02 - clever programmer calm where you learn
00:04 - to code smarter so here we are finally
00:08 - finishing up our rock-paper-scissors
00:11 - thank God I can say it correctly finally
00:14 - I'm so sorry I've been calling a
00:16 - tic-tac-toe the whole time I don't know
00:18 - why I keep clicking that but hopefully
00:20 - this entire video I'll say
00:22 - rock-paper-scissors and if I say take
00:24 - tact oh I'm probably talking about
00:25 - rock-paper-scissors so with that
00:27 - disclaimer out of the way let's go ahead
00:30 - and talk about the solution of
00:32 - rock-paper-scissors
00:33 - hopefully you guys got to try it and
00:36 - yeah so let's just get right to it
00:40 - so here we have the game open and I have
00:43 - the solutions here for you guys now
00:47 - having the solution here for you guys is
00:49 - great but what I want to do is I want to
00:51 - walk you through it one step at a time
00:54 - okay so let's go ahead and walk through
00:58 - it
00:59 - alright choice to number so if you did
01:03 - the previous problem that you send bolt
01:05 - video that I made which is essentially
01:08 - you get a person and you have to number
01:10 - them and which place they get so if I
01:12 - give usain you give me back one if I
01:14 - give you me you give me two gives you
01:16 - cause you give me back three right so
01:19 - let's apply that same thing directly
01:21 - here so given a choice we want to
01:25 - convert it to a number okay so let's say
01:28 - that we were given a choice woops sorry
01:31 - about that
01:34 - okay so let's say we were given a choice
01:37 - like Rock you want to give me back zero
01:40 - for given paper you want to give me back
01:42 - one now certainly you can say if
01:46 - choice equal equal Rock right choices
01:50 - coming from here which is the function
01:53 - and if choice equal equal Rock then
01:56 - return zero you can certainly do that
01:58 - but a better way to do it is since we
02:02 - know we have a relationship between two
02:03 - things we can use the key value pair
02:06 - technique so the way that I would write
02:08 - the solution is I would say RPS
02:12 - and I would say if it's rock give me
02:16 - zero if it's
02:18 - paper
02:20 - can't type
02:23 - paper
02:25 - goodness alright here we go and if it's
02:28 - scissors give me back to all right and
02:32 - then what we want to do is you want to
02:34 - say return our PS dictionary and index
02:37 - it by the choice passed in so for
02:40 - example if choice is rock it goes to
02:43 - this dictionary
02:45 - RPS dictionary it indexes it by rock so
02:48 - it goes and looks at this key and it
02:50 - returns a corresponding value so this
02:52 - whole thing evaluates to zero
02:54 - okay so that's essentially the idea and
02:57 - since we're declaring a variable right
02:59 - here and then using it right down below
03:02 - and
03:02 - it's we don't really need to define that
03:06 - as a variable we can just put it here
03:08 - directly but just for reading purposes
03:10 - and making it easier for you guys to
03:12 - look at I'll leave that up there no
03:14 - problem
03:16 - again I can I can do the same technique
03:19 - for this one
03:22 - instead of having a bunch of if else if
03:25 - type of conditions we can have this
03:27 - scenario here and
03:29 - I want to reverse the keys and values
03:32 - here
03:51 - okay so if you give me zero you give you
03:56 - get back Rach if you give me one you get
03:58 - back paper if you give me - you get back
04:00 - scissors so that's essentially what we
04:03 - do what we're doing here and this
04:05 - function expects a number between zero
04:07 - and two including zero in two so
04:11 - this is pretty straightforward it will
04:14 - evaluate to the rock paper or scissors
04:16 - okay this is why the function is called
04:19 - number two choice it takes a number and
04:21 - converts it to a choice all right how do
04:23 - we randomly generate the computer choice
04:27 - well that's
04:29 - you know thanks to the random module
04:32 - that we imported here we can use that to
04:34 - actually do this problem we can say
04:36 - return random nut choice and random the
04:41 - choice takes in some input like this
04:43 - like a list so we can go rock paper and
04:48 - scissors
04:50 - now make sure your spelling is correct
04:52 - everywhere because if you are not
04:54 - consistent with your spelling of
04:55 - scissors or rock or paper your program
04:58 - might not work because it's expecting
05:01 - specifically those things right if I
05:03 - open up a terminal and I go and open up
05:05 - Python here
05:07 - and we checked what that does right so
05:10 - let's do import random and
05:12 - let's do a random choice and pass it a
05:17 - list of things like a
05:20 - B and C let's see what it does and let's
05:25 - keep running it
05:28 - so hopefully you're getting the idea
05:31 - that it randomly picks something it's
05:33 - not just picking one thing it's randomly
05:35 - picking between those three choices so
05:37 - just like that you want to do
05:39 - rock-paper-scissors because when the
05:40 - computer is playing he's randomly
05:42 - picking between rock paper and scissors
05:43 - right
05:45 - so this is a simple one-line solution
05:48 - now this is where the meat of the
05:50 - project is
05:53 - and this part is pretty tedious because
05:56 - you have to write a lot of if-else
05:58 - if-else if-else type of conditions I'm
06:01 - going to show you a cool way to bypass
06:03 - that okay so i have example code here
06:06 - for you and this should be pretty
06:07 - self-explanatory
06:08 - okay if so you pass this function human
06:12 - choice and computer choice if human
06:15 - choice choice was rock and computer
06:17 - choice was paper well then paper beats
06:20 - rock and you increment computer score by
06:22 - one the reason why we're saying global
06:25 - variable is because we want to specify
06:28 - we're using these variables here outside
06:32 - of the functions and those are the ones
06:34 - we want to increment okay those are the
06:36 - ones we want to change if you don't do
06:40 - the global variable thing and then you
06:42 - change that you're only going to change
06:45 - the computer score within the function
06:47 - but once you leave the function it's
06:50 - going to be the same so for example if I
06:53 - don't use global and I do this computer
06:55 - score plus equals 1 inside of the
06:57 - function it might computer score might
07:01 - be one okay computer score
07:06 - might be one inside of the function but
07:09 - when you like go outside of the function
07:11 - and you print computer score it'll say
07:14 - zero okay so by saying global we're
07:19 - saying hey that's the exact variable we
07:21 - want to use and if I change it I know
07:23 - what I'm doing I want to change it
07:25 - everywhere okay generally you want to
07:28 - avoid using Global's but for now I want
07:31 - you guys to be you know just use
07:33 - Global's it's fine
07:36 - the reason why I say you want to avoid
07:38 - that is because then you can have like
07:40 - if you have really big pieces of code
07:42 - with thousands of lines or hundreds of
07:44 - lines you don't want global to be
07:48 - changing like between two functions like
07:50 - between if you have to three different
07:52 - functions if
07:54 - they're changing it if they all have
07:57 - access to the same variable they might
07:59 - be changing it in a way you don't want
08:00 - so you might want to give all of the
08:03 - functions its own separate variable so
08:05 - don't like have a collision with each
08:07 - other okay that's kind of the reason
08:09 - so okay that's a little bit behind
08:13 - choice result um and what it takes in as
08:16 - inputs and how we can use that but
08:19 - instead of coming up with a lot of
08:21 - if-else statements here's a nice little
08:24 - solution that we can do so essentially
08:28 - we can say hey if
08:31 - human choice
08:33 - um
08:35 - this it's a weird trick so sometimes I
08:38 - have to see if I can remember it as well
08:40 - if you take the difference between human
08:43 - choice and the computer choice and
08:47 - this is where the choice to number
08:51 - functions come in handy because what we
08:54 - want to do is we want to take their
08:55 - numerical difference you can't take a
08:57 - difference of strings right you can't do
08:59 - hello or 'rock here - paper you can't do
09:05 - that so we want to make sure that these
09:07 - are numbers how can we do that we can
09:10 - say
09:11 - human
09:13 - number is equal to
09:17 - let's call our function
09:20 - choice to number function and since we
09:24 - already have the human choice we can
09:25 - just pass it in that human choice and
09:27 - I'll return it has a number so for
09:30 - example if the human was Rach it'll get
09:34 - thrown into the choice to number
09:35 - function and they'll convert it
09:37 - correctly and so this whole thing will
09:39 - evaluate to zero
09:41 - okay so let's leave it like that and
09:44 - we're going to say computer number is
09:47 - equal to choice to number function and
09:50 - give it the computer choice
09:56 - okay pretty simple
10:00 - so we have the computer number human
10:02 - number now we can take the difference we
10:04 - can say human number - computer number
10:12 - and if there and if you take their
10:17 - difference and you modulo 8 by 3 and you
10:20 - get back 1 if you mod something by 3
10:24 - you'll create a world where the only
10:26 - possible numbers are 0 1 & 2 okay so for
10:31 - example just to play us some times
10:33 - playing around with this group is a very
10:35 - good idea instead of doing all this
10:37 - theoretical knowledge sometimes just
10:39 - play around with it so like let's do
10:41 - 0 mod 3 let's do 1 mod 3 let's do 2 mod
10:47 - 3 let's do 3 mod 3 let's do 4 mod 3
10:52 - let's do 101 mod
10:55 - 3 let's do some random number mod 3 and
11:02 - as you can see here the only numbers
11:04 - that we're getting are 0 1 & 2 you're
11:07 - creating a world of only 0 1 and two
11:09 - numbers so modulo lets you wrap things
11:12 - around which is kind of nice because
11:14 - we only have we have rock paper and
11:17 - scissors so we want to be able to go 0 1
11:20 - 2 0 being rock one being paper to being
11:23 - scissors and then the next one the next
11:27 - number we want
11:28 - instead of it being 3 which is not in
11:31 - our list we want it to be 0 again so we
11:34 - want it to essentially be like 0 1 2 0 1
11:37 - 2 0 1 & 2 so 0 corresponds to rock one
11:43 - corresponds to paper this corresponds to
11:44 - scissors then this corresponds to rock
11:47 - this to paper dista scissors okay this
11:49 - ensures that we never get a number that
11:51 - doesn't map to one of our existing
11:53 - things ok like essentially what we don't
11:57 - want is this because when it tries to
12:00 - look up 3 & 4 & 5 & 6 it won't get
12:03 - anything in our database or dictionary
12:05 - that we have
12:07 - so we're going to say take the
12:08 - difference and mod it by 3 we know for
12:11 - sure that we're going to get some number
12:12 - like 0 1 or 2 if the number is 1 then
12:16 - computer wins so basically what we say
12:20 - is computer score plus equals 1 or you
12:24 - can write x listed Li like computer
12:27 - underscore +1
12:30 - um
12:32 - we can say
12:35 - else human score
12:39 - is equal to human score plus or plus 1
12:45 - and we need to have one last condition
12:50 - that would be if what if they have the
12:52 - same choice so if human number is the
12:58 - same as the computer
13:00 - number then maybe we just want to print
13:03 - tie and do nothing else
13:06 - okay like we want it we don't want to
13:08 - increment any scores we don't want to do
13:10 - anything we just want to print tie
13:12 - that's it
13:14 - okay so
13:18 - yeah all right so this trick is a little
13:21 - weird but essentially what it allows you
13:24 - to do is it takes care of all the
13:26 - possible scenarios instead of you having
13:28 - to write nine different conditions or
13:31 - six different conditions I think it
13:33 - would be six because you have three so
13:34 - three factorial so instead of writing
13:36 - six different possible situations like
13:39 - rock versus paper paper versus scissors
13:42 - scissors versus rock in writing all
13:45 - those if elsif conditions this allows
13:47 - you to write like capture it all in just
13:50 - these three lines
13:52 - the logic IFI put some notes here at the
13:56 - bottom so you can kind of understand how
13:57 - the logic of it works okay so let's say
14:00 - that
14:01 - zero is rock one is paper and two
14:05 - scissors if
14:06 - you do Rock - scissors mod three and
14:10 - check if it's equal to one essentially
14:12 - what happens is Rock is zero scissors is
14:14 - to 0-2 evaluates to negative 2 negative
14:18 - 2 mod 3 gives you back um a 1 as you can
14:26 - see here on this left hand side okay so
14:29 - if I did
14:30 - negative
14:33 - to mod three you get back a one okay and
14:37 - one equals one so it goes rock wins and
14:41 - it's true rock would win even if you
14:44 - just visually look at it then we have
14:47 - the scenario with paper versus scissors
14:49 - so paper is won and or
14:54 - actually this should be it should say
14:56 - scissors here and I'm sorry
14:58 - so paper versus scissors so you have one
15:02 - minus two right paper is one scissors is
15:05 - two as you can see here 1 minus 2 mod
15:08 - three let's check if it gives us one two
15:10 - equal signs mean check if it's equal to
15:13 - 1
15:14 - then 1 minus 2
15:18 - that gives us a negative
15:21 - one
15:23 - right this gives us a negative 1 we mod
15:28 - it by 3 and negative 1 mod 3 gives us 2
15:32 - we check if 2 equals 1 since 2 does not
15:35 - equal 1 we give the win to the other
15:38 - side so we give the win to the
15:40 - right-hand side in this case the right
15:43 - hand side is computer and the left hand
15:46 - side is the human choice okay so if the
15:52 - mod is ever equal to
15:55 - 1 then essentially what we're saying is
15:59 - that the human wins and if the mod is
16:03 - not equal to 1 then we can say that the
16:05 - computer wins ok let me just check this
16:08 - against my solution code that I have
16:13 - and yeah that's kind of what it says it
16:16 - goes hey if it's equal to 1 the computer
16:18 - wins otherwise the human wins ok so
16:22 - let's go back up here this looks good
16:25 - this looks good and
16:29 - yeah I think most of the code here looks
16:34 - good
16:35 - now let's first test our code let's run
16:39 - this guy here
16:43 - what's the error Oh
16:45 - Lu would pass in number right because
16:48 - that's our argument now
16:51 - okay so we passed all the test cases
16:53 - let's see if the game runs
16:56 - okay you picked paper the computer
16:59 - picked rock so you win perfect we both
17:02 - pick rock so it was a tie let's do
17:04 - scissors um
17:09 - yep scissors beats paper
17:13 - okay so there you guys go the game is
17:17 - now working I have shared the link with
17:20 - you guys so you can actually go play it
17:22 - there and if you wanna try again now to
17:26 - try to solve it after looking at my
17:28 - solution see if you can now try to solve
17:30 - it out looking at the solution so I'll
17:32 - have the
17:33 - project out the problem there for you
17:37 - guys so you guys can actually try the
17:39 - problem on your own and I'll also have
17:41 - the solution there for you guys and you
17:43 - guys can just hit save at the top left
17:46 - here and then it'll give you a link and
17:49 - you guys can just share that link with
17:51 - anybody that you want and so then you
17:53 - can share this with your friends family
17:55 - whoever okay guys hopefully that
17:58 - explains it you guys had fun doing rock
18:00 - papers and scissors and the next project
18:03 - what I would like to do is build a text
18:07 - messaging app so we'll have an app which
18:10 - can send out texts to other phones
18:13 - alright alright guys take care have a
18:16 - good one I'll see you guys in the next
18:18 - video