00:00 - let's check out what we are going to do
00:02 - what's up guys
00:03 - so this is the app we're going to be
00:04 - building i'll just let this demo running
00:06 - so what we got here
00:07 - is uh some urban city driving some guy
00:10 - on a motorcycle there's some cars and
00:11 - pedestrians these guys are about to get
00:12 - hit
00:13 - and yeah as you can see the pedestrians
00:15 - are outlined in yellow and the car is in
00:17 - red and blue
00:18 - so yep this oregon building you guys are
00:20 - python super excited as you can see here
00:21 - the cars in the background
00:23 - uh some girls crossing the street here
00:25 - it's it's doing a decent job it's not
00:26 - perfect but
00:27 - you know it's good enough so this is
00:29 - some epi guys this is some
00:30 - tesla [ __ ] right here i'm not kidding
00:32 - i'm gonna take a take a look at this
00:33 - right
00:33 - it's able to detect pedestrians it is
00:35 - able to detect cars
00:37 - which is just crazy right i mean it's
00:40 - like imagine basically you know you got
00:41 - your new tesla right and you have to
00:43 - figure out you know what cars in front
00:44 - of you right
00:45 - you need to figure out when to stop you
00:46 - need to figure out when to go this is a
00:48 - system that something that tesla would
00:50 - build
00:51 - for their cars like who is up
00:54 - to build a system like that guys huh
00:56 - tesla autopilot man elon we're coming
00:58 - for you
00:59 - guys elon exactly we're building our own
01:01 - startup company
01:02 - to compete with you elon there we go
01:04 - that's how we're doing it
01:06 - i mean that's interesting that's the
01:08 - hope that's the hope
01:09 - exactly exactly so guys yeah it's like i
01:12 - said who's excited
01:13 - who's excited to build this drop that in
01:15 - the comments below this is an
01:16 - epic system again we are building an ai
01:20 - for detecting what detecting pedestrians
01:22 - and
01:23 - cars yeah with bikes and tracking
01:26 - exactly pedestrian car tracking and this
01:28 - is what this is beginner friendly right
01:29 - this is beginner friendly
01:31 - yeah beginner friendly the app is not
01:32 - hard at all if you're a beginner you
01:33 - should be able to follow along pretty
01:35 - easily
01:35 - uh we're gonna be using python and
01:37 - opencv so opencv
01:39 - is an open source computer vision uh
01:41 - library
01:42 - so that's it just python opencv and that
01:44 - should get this entire app finished yep
01:46 - guys now before we get going guys so
01:48 - here's what i want you to do i want you
01:49 - to make sure
01:50 - that we defeat the youtube algorithm
01:52 - system help us
01:53 - defeat the ai of youtube by smashing the
01:56 - like button
01:57 - subscribing to this youtube channel and
01:59 - of course
02:00 - of course sharing the video is that
02:02 - right yep
02:03 - yep that's it so if you want to see more
02:05 - stuff like this in your in your feed
02:07 - then help the youtube algorithm like
02:08 - this video and then youtube will show
02:10 - you more coding stuff
02:11 - and that's what you want right so yeah
02:12 - definitely do that yeah
02:14 - guys i mean look look how cool this this
02:15 - is such an awesome tutorial look at this
02:17 - guys
02:18 - it's just like it's making boxes around
02:20 - the actual cars
02:21 - and right and it's able to detect them
02:23 - like in real time we're talking like
02:26 - split seconds we're talking milliseconds
02:30 - this is i mean maybe not milliseconds
02:32 - like it's pretty good it's not quite
02:33 - really seconds i mean i mean
02:34 - i mean life is happening really fast
02:36 - right so it needs to detect really fast
02:37 - right
02:38 - yeah it's good like even like pretty
02:40 - like you can like see that pedestrian
02:41 - the distance
02:42 - for a split second at least yeah but
02:44 - yeah i'll just let this demo keep
02:45 - running it's pretty dope
02:48 - um
02:51 - oh by the way guys if you're interested
02:52 - if you guys like coding and um i mean
02:55 - assume you guys are because you're
02:56 - watching this video then here at
02:57 - cleverprogrammer we
02:58 - um what we do is we teach people how to
03:00 - become developers like we teach them how
03:01 - to make a living from coding pretty much
03:03 - so we have we offer courses we have a
03:05 - python course called profit with python
03:07 - that gives you a whole 15-week roadmap
03:09 - of becoming a big beginner to expert
03:11 - and landing your first job or client
03:12 - with python so um check that out
03:14 - if not feel free to watch the free
03:16 - content on youtube this is this video is
03:17 - free and we also have a free training if
03:19 - you want checked out too in the
03:20 - description they're both down there
03:21 - yeah other than that yeah that's that's
03:23 - really good
03:24 - masterclass training in the description
03:26 - below if you want to check that out and
03:27 - one thing i really want to mention we
03:29 - we recently had a really an amazing
03:31 - store for my students
03:32 - how about you tell this aaron huh oh
03:34 - yeah yeah this morning so
03:35 - or this morning or yesterday morning i
03:37 - think yesterday uh we had a student
03:39 - land a ninety thousand dollar a year a
03:41 - jo um ninety five
03:42 - ninety ninety thousand dollar a year job
03:45 - uh so the story is she she lost her job
03:47 - due to covid she enrolled in her course
03:49 - she got a 45 000
03:51 - a year job um through by being on the
03:53 - course lost that job and then a couple
03:55 - days later just happened just just
03:56 - yesterday she got a call
03:58 - randomly um for a job offer for 90k so
04:01 - twice as much
04:02 - really awesome there but just shows that
04:03 - yeah we do get our students results but
04:05 - check it out um other than that let's
04:07 - get into the code not because that's
04:08 - what we've got here
04:09 - do it guys who's excited who's excited
04:11 - to build an ai system like this
04:13 - drop that in the comment below and we're
04:14 - going to be doing this together guys
04:16 - we're going to learn this together
04:17 - so make sure to smash the like button
04:19 - subscribe and let's get into it aaron
04:21 - heck yeah man okay so um
04:25 - yep i think it's been going on long
04:26 - enough let me just cut this and
04:28 - clear my terminal and let's go to a
04:31 - presentation so
04:32 - i just want to give you guys a quick
04:33 - quick presentation a little bit of
04:35 - context before we actually start coding
04:36 - if you want to skip this and just skip
04:38 - right to the code feel free to jump to
04:40 - the time stamp the link will be in
04:41 - description uh this will take like five
04:42 - or ten minutes it's fine
04:43 - i'm just explaining um how the algorithm
04:45 - works and stuff so let's get started so
04:47 - car tracking with python
04:49 - okay uh with a couple cute little emojis
04:52 - there
04:53 - so first of all we're only using
04:55 - computer vision so you guys might have
04:56 - seen
04:57 - some self-driving cars that have like
04:58 - this weird radar thing on the roof of
05:00 - the car and
05:00 - like spins and stuff it's like
05:01 - completely like the google one like the
05:03 - google one
05:04 - yeah like the google one and i mean
05:05 - that's like using lasers and radar and
05:08 - stuff and it kind of sucks
05:09 - uh but we're not doing that we're only
05:11 - using computer vision because that's how
05:12 - human works you just use your eyeballs
05:13 - you don't have like a laser sensor
05:15 - okay so only computer vision yeah and
05:18 - the reason we're doing that
05:19 - the reason we're doing that is because
05:20 - ilama says so okay elon musk
05:22 - he's a he's uh my dad i coined him as my
05:25 - daddy daddy elon
05:27 - but i'll show you sure sure okay sure
05:29 - computer science only
05:30 - and damn
05:36 - tesla stock is up tesla stock is up so
05:38 - yeah this this worked
05:39 - guys don't smoke though would not
05:41 - encourage smoking okay
05:43 - yeah none of us smoke anything exactly
05:46 - exactly
05:47 - uh anyways so yeah this is the little
05:50 - article that i found there's actually a
05:51 - video of elon saying it he's kind of
05:52 - curt about it he's like anyone using
05:54 - lidar is doomed and pretty much the
05:56 - reason for that is it's bulky
05:58 - it's expensive it's not effective and
06:00 - humans can do it with just her eyes so a
06:01 - car can too
06:02 - okay so we're gonna be using computer
06:04 - vision just like this and not
06:06 - like this all right beautiful beautiful
06:08 - that's really it so let's explain how
06:10 - this works okay
06:11 - yeah let's do it man i'm very curious
06:13 - ooh the slide didn't load
06:15 - oh there you go interesting okay let's
06:17 - keep going all right so
06:18 - let me get rid of this zoom thing is in
06:20 - the way all right so step one so how
06:22 - does this actually work
06:24 - good question this is gone one second
06:27 - guys
06:27 - there we go what happened there that's
06:30 - all right guys that's okay
06:32 - we got we got we got you know there we
06:35 - go
06:39 - but anyways so step one is to get a
06:42 - a bunch of car images so what's supposed
06:44 - to be here is actually this image but in
06:46 - color
06:47 - okay so just pretend that that's there
06:48 - so step one get a bunch of car images
06:50 - that look like this
06:51 - step two you want to make them all black
06:53 - and white so that's what it'll look like
06:55 - and the reason we do that i believe nazi
06:57 - asked earlier is because
06:58 - when it's black and white it just makes
07:00 - the algorithm faster because there's
07:01 - less data you don't have to worry about
07:02 - color data it's just
07:04 - relationships and you can still tell
07:05 - that it's a car even though it's black
07:06 - and white
07:07 - am i right that's that's not that that
07:09 - is true they can still take a lot of
07:10 - things but yeah i mean
07:12 - yeah and if you have rgb color right so
07:14 - you have to have colors i'm guessing
07:15 - it's going to take a lot longer to
07:17 - process because it's just so much more
07:18 - data
07:19 - in there and so we kind of kind of scrap
07:20 - that and be like nope no we don't do
07:22 - that
07:22 - initially enough actually if you look
07:24 - deeper i think tesla does the same thing
07:26 - so tesla when they actually go ahead and
07:28 - process their videos they process
07:30 - their you know their video that comes to
07:32 - cameras they turn that
07:34 - into black and white guys and we are
07:37 - doing the exact same thing
07:38 - like how epic is that you know
07:42 - yeah i think so i mean yeah it's the
07:44 - first step you've got to turn black and
07:45 - white because it makes things faster and
07:47 - tesla's all about being fast
07:48 - but and then step three once we have the
07:51 - um all the images in black and white
07:53 - like you get a bunch of car images make
07:54 - them black and white just like tesla
07:56 - then you're able to detect and track
07:58 - cars all right
07:59 - and basically the same thing pedestrians
08:01 - but i'm just using cars as the example
08:02 - here
08:03 - yeah so that's kind of the brief
08:04 - explanation of how it works like overall
08:07 - i'm gonna go into a little bit more
08:08 - detail here for some context and then
08:10 - we'll get into the code shortly
08:12 - so so how does the computer train the
08:13 - algorithm like how does it go from this
08:15 - to knowing what a car is in each of
08:17 - these images how come it didn't put the
08:19 - red
08:19 - like square like over here where it was
08:21 - incorrect it's actually correcting all
08:22 - of these
08:23 - yeah how does it do that so very good
08:25 - question
08:26 - yeah i mean the computer algorithm
08:28 - behind it we're just going to explain it
08:29 - um
08:30 - in simple terms for people to understand
08:31 - so very simple we use these
08:33 - so these little box shape things are
08:35 - called a hard features
08:36 - and pretty much what they are are like
08:38 - little building blocks like little lego
08:40 - blocks that you can
08:41 - you can use to define um something and
08:44 - that doesn't make any sense but on the
08:45 - next slide i'll show you how it works so
08:48 - pretty much we just do this let me zoom
08:50 - here so i can show you guys
08:52 - so as you can see this is a picture of a
08:53 - car here okay a rear end view
08:55 - and as you can see this little window is
08:58 - is like a dark patch right and this
09:01 - little thing down here
09:02 - is a little bit lighter like this area
09:04 - is lighter and then again the shadow is
09:06 - a little bit darker
09:06 - so what we can actually do is we can
09:08 - take one of these hard features like we
09:09 - have right here
09:10 - this one um like this one but inverted
09:13 - and we can actually say that this kind
09:16 - of matches
09:17 - right over here because it's kind of
09:18 - darker up here and lighter down here
09:20 - so we can say that this heart feature
09:22 - matches this location on a car
09:24 - better than it would match here where
09:26 - it's just flat or flat green
09:28 - up here okay so right and the way it
09:30 - does that is it just takes all of the
09:32 - pixels it just takes all the pixels in
09:33 - that black square and adds them up
09:35 - and then all the pixels in this white
09:36 - square and adds them up to one number
09:38 - which is just like a
09:39 - um the way to really boil down like to a
09:42 - single number how dark or how light that
09:44 - entire box
09:45 - as a whole is and then you can compare
09:47 - those two numbers to be like if those
09:48 - two numbers are far enough away from
09:50 - each other
09:50 - you can be like okay this this rectangle
09:52 - is a lot darker than this rectangle
09:54 - or this rectangle is a lot lighter than
09:56 - this rectangle and that's what
09:58 - is essentially what's happening here
09:59 - because this rectangle is so so it
10:01 - almost creates like a shape it almost
10:02 - creates like a shape basically because
10:03 - if it basically if it knows right
10:05 - darker up top white at the bottom and
10:07 - then i can continue on doing with that
10:08 - it creates like a shape and it remembers
10:11 - that shape basically right
10:13 - it'll just find that this match is
10:15 - pretty good when you're training the
10:16 - data and you're like okay
10:17 - this heart feature of this size kind of
10:20 - matches the car
10:21 - pretty good right okay and then we can
10:23 - also say likewise like i said there's a
10:25 - shadow down here
10:26 - um and this one's a little bit bigger
10:27 - and there's a white strip you can kind
10:28 - of say that this
10:30 - heart feature would match down here
10:31 - because if you cover the shadow it's
10:32 - kind of darker on the shadow and lighter
10:34 - on the bumper
10:35 - so you can actually see that this is
10:36 - also a good match for a car
10:38 - and then these two in um added together
10:41 - you can actually see that
10:42 - this dark window and the bumper and then
10:44 - this dark shadow and the bumper are kind
10:46 - of like these two hard features together
10:48 - kind of define a car even better than
10:49 - any of them by themselves
10:51 - yeah so you guys want to take a look at
10:52 - the shadow at the shuttle below and if
10:54 - you look if you look at all the other
10:55 - cars guys
10:56 - they have a shadow below as well right
10:58 - so that's kind of how it kind of starts
11:00 - to recognize that
11:01 - so that that honestly is so interesting
11:03 - like guys who's like
11:04 - who's who's excited to learn something
11:06 - like this because honestly applying
11:08 - this into your real world into your life
11:11 - is so extremely important
11:12 - mainly because like like you know with
11:14 - tesla with gm with all these companies
11:17 - if they are going towards this they are
11:19 - going towards other autopilot
11:21 - so just imagine right so just imagine
11:24 - the amount of jobs that this will create
11:28 - right like it's just jobs with python
11:30 - with machine learning that's going to
11:32 - create in the future in the coming
11:33 - future
11:34 - and already is is insane bro
11:37 - yeah yeah the uber uber's going out of
11:38 - business man like said that there's
11:40 - going to be robo taxi soon
11:42 - so i might already said this but if
11:43 - you're if you're an uber driver you're
11:44 - going to lose your job so you should
11:46 - probably become a programmer instead
11:47 - because then you can
11:48 - program the cars instead of driveway
11:49 - exactly exactly profit with podcast like
11:51 - in the description
11:52 - it's maybe 10 years max and then your
11:53 - job is done so
11:56 - well okay we don't know about that but
11:58 - let's not be
11:59 - let's not be so harsh but let's continue
12:00 - on bro i got faith in elon man like what
12:02 - are you doing
12:04 - my daddy don't do that bro end this
12:06 - stream right now
12:08 - but anyways so that's how it works the
12:10 - idea is these two har features match
12:12 - nicely for a car
12:13 - um and you can chain like thousands of
12:16 - these together
12:16 - and all added up all of those hard
12:18 - features added up will kind of match to
12:20 - what a car is so these are just two
12:22 - examples
12:23 - and same thing works for detecting
12:25 - pedestrians so i'll show that next
12:27 - okay okay let's go to the next slide
12:30 - real quick
12:32 - so yeah the same exact idea with
12:33 - pedestrians you get a bunch of images
12:35 - okay of pedestrians you make them all
12:37 - black and white you want to run
12:39 - all of these hard features over all
12:40 - these images to find which ones match in
12:42 - which locations
12:43 - and then eventually you'll train it
12:44 - enough for it to be able to detect
12:46 - actual pedestrians
12:47 - so for example like if you look at this
12:48 - pedestrian here then maybe this hard
12:51 - feature will be really good like if you
12:52 - took this hard feature and stretched it
12:53 - taller
12:54 - and put it over you can kind of say that
12:55 - like maybe here is like a darker
12:58 - person or here is a darker person darker
13:00 - person darker person
13:01 - um and then you have the white the
13:03 - lighter areas on the sides okay
13:05 - so you can kind of use that that's kind
13:06 - of a good match also you can see her
13:08 - her pants are very dark here they're
13:10 - basically like dark blue or black or
13:11 - something
13:12 - you could say that this heart feature if
13:13 - it was a little bit stretched taller too
13:14 - and skinnier
13:15 - then you can say okay this our feature
13:17 - matches good and same here because
13:18 - usually people are wearing pants and
13:20 - shirts of different colors so you could
13:21 - say that that also matches a human
13:23 - yeah a pedestrian so and so and so again
13:26 - it basically it
13:27 - almost like creates a shape again you
13:28 - know it creates it uses all those black
13:30 - and white boxes it counts them in
13:31 - and it creates a shape and knows okay so
13:33 - if this this kind of a shape
13:34 - matches right this kind of shape is
13:37 - created it matches a human
13:38 - this kind of a shape is created it
13:40 - matches a car or it matches a pedestrian
13:43 - right so that is the interface what
13:44 - about that
13:46 - can yeah you know or or an apple i don't
13:48 - know
13:49 - whatever you want anything anything you
13:51 - know
13:52 - yeah distinguishing apples from pears
13:55 - like that's a little bit trickier and
13:56 - then you probably need to keep the color
13:58 - in there at that point but i mean this
13:59 - is just a generalized
14:00 - explanation of course you there's always
14:02 - a trade-off of accuracy and speed
14:04 - so yeah um it takes a lot more work to
14:06 - distinguish an apple from a pair than it
14:08 - does
14:08 - from a human to a car because they're
14:10 - just very different things sure that
14:11 - sure that sweet man all right let's
14:13 - continue on yep that's it so let's just
14:15 - jump into the code let's code it up
14:17 - hey let's go guys we're probably like
14:20 - 12 15 minutes in but um again time
14:23 - stamps in the description if you
14:24 - re-watch stuff or see
14:25 - anything yeah but let's get into the
14:27 - code okay guys
14:29 - are we still live in us we're all good
14:32 - we're all good we're all good we're all
14:33 - good let's continue on guys who's pumped
14:35 - to build
14:35 - who's pumped to build an ai system like
14:37 - this who's pumped to build an is system
14:39 - for a car
14:40 - and pedestrian tracking i'll jump put in
14:42 - the comments below and
14:44 - we're going to get started right now
14:49 - all right guys so i got the code up here
14:50 - and running this is what was running the
14:52 - the demo code it's actually not that
14:54 - long
14:54 - as you can see it's just a few lines all
14:56 - this here
14:57 - was doing all of that it was taking in
14:59 - the image um not the image
15:01 - it was taking in the um the video
15:04 - of the the guy the dash cam and the
15:06 - pedestrians and it was finding
15:07 - everything detecting everything and
15:08 - displaying it to the screen that's all
15:10 - happening right here
15:11 - right okay okay so let's just jump into
15:13 - it we're going to start with just an
15:14 - image and then we'll go to video a
15:16 - second
15:17 - um but yeah feel free to follow along so
15:18 - if you guys don't have vs code you're
15:20 - going to want to download vs code
15:21 - um you're probably going to want to
15:22 - pause this video and download it because
15:24 - i'm going to be going a little bit
15:24 - faster
15:25 - but download vs code get it all set up
15:27 - and
15:28 - that's it next what you're going to want
15:30 - to do is you're going to want to
15:32 - create a python file um you can call
15:34 - whatever you want but i call it car and
15:36 - pedestrian tracking dot pi
15:37 - okay this is the one i had before i'm
15:39 - just going to be copying pasting code
15:41 - um over to show you guys how it works i
15:42 - don't want to have to type it out it's
15:44 - the same thing pretty much
15:45 - but you want to start here okay next
15:48 - thing you want to do
15:49 - is install opencv so you can do that
15:52 - through the command
15:53 - pip install opencv dash python
15:56 - okay and if that doesn't work then try
15:59 - running
15:59 - pip install the same thing but just add
16:01 - headless at the end
16:02 - okay there might be an issue there one
16:05 - of those should work if you're running
16:07 - on a mac or linux computer if using
16:09 - linux you're probably already a badass
16:10 - programmer so you don't even need to
16:12 - you need to know this stuff but again
16:13 - you can just do a google search like how
16:15 - to how to install opencv
16:16 - on your computer if if these don't work
16:18 - you're going to kind of have to figure
16:19 - it out yourself because
16:20 - i can't help with every error but like i
16:23 - said
16:24 - we're we're about to cost 100 likes so
16:26 - let's keep liking the video guys about
16:28 - to cost 100 likes
16:29 - like the video let's and let's continue
16:31 - on
16:33 - yeah uh where was i
16:37 - uh yeah oh yeah install opencv so once
16:40 - you have that installed
16:41 - you should be good okay um the way you
16:42 - can the way you can test that is you can
16:44 - just put python
16:46 - okay and you have your little python of
16:47 - arm here in your terminal
16:49 - and um oh if you know what this is this
16:50 - is terminal so you want to go
16:52 - you can do command space on mac and then
16:55 - this little spotlight thing pops up and
16:56 - type in terminal
16:57 - and just hit enter and then it'll pop
16:58 - this up and this kind of tells you
17:01 - um gives you access to your computer so
17:02 - if you type in python then you can do
17:04 - stuff like
17:05 - hello okay yeah
17:08 - and then it'll print hello whatever says
17:10 - there or you know nice nice nice nice
17:13 - daddy oh my god
17:17 - elon is not your dad bro come on man
17:21 - you look very different
17:22 - [Laughter]
17:26 - no no no don't even think about it don't
17:28 - even think about it no no
17:30 - back on track so to make sure you have
17:31 - opencv installed you can just import
17:33 - cv2 which is short for computer vision
17:36 - too
17:36 - and if you hit enter then you this will
17:38 - happen nothing will happen it'll be fine
17:40 - if you get an error it means it
17:41 - installed incorrectly
17:42 - so just make sure that when you run this
17:44 - it just goes to the next line there's
17:46 - nothing happens that means it's
17:47 - installed correctly then you're good
17:48 - to get out of python you can
17:51 - just do control d and it'll go back here
17:53 - and i'm just going to type clear
17:55 - so that we're back to the terminal uh
17:57 - but once you have opencv installed and
17:59 - you have your python
18:00 - file created and you have it open in vs
18:02 - code we are ready to start coding okay
18:04 - okay
18:05 - so now guys guys looks like edwin edwin
18:08 - just gave us a one euro super chat edwin
18:11 - thanks so much
18:12 - appreciated and let's continue on yeah
18:15 - i think my lunch now right now i know
18:17 - right i know
18:19 - anyways so let's just start with a
18:20 - simple um
18:23 - code completed so this is little thing i
18:25 - like to do i put this print statement at
18:26 - the end of my program so that i know
18:28 - if it prints that the whole program
18:29 - completed without any errors
18:31 - so let's just run this first so this is
18:33 - the first thing that i'm going to run
18:34 - go to the terminal make sure you are in
18:37 - your desktop
18:38 - so pwd stands for present working
18:41 - directory and as you can see i'm on my
18:42 - desktop if you're not
18:43 - then um like if you're not if i'm not my
18:47 - desktop let's say i just i'm at my
18:48 - user's user file then you want to put in
18:50 - cd
18:51 - which is change directory and then just
18:52 - type desktop just like that with a
18:54 - capital d
18:55 - okay and then once i do that
18:58 - then i am in desktop okay then once
19:00 - you're in desktop that's where i have my
19:02 - files housed
19:03 - or if it's on if you're if you have all
19:04 - your files housed in a folder then you
19:06 - got to go there instead of desktop but
19:07 - for me i just have it on desktop right
19:08 - here
19:09 - that's that that's a messy messy file
19:11 - structure bro but anyway
19:14 - i'm just teaching them how to code like
19:16 - i don't know how to keep my computer
19:17 - organized this is free free content you
19:18 - know all right all right all right okay
19:20 - five five this is aaron's dream rogue
19:21 - off the stream knives
19:26 - anyway so let's run this code so the way
19:30 - we do that
19:31 - is we just write python because this is
19:33 - a python program
19:34 - and then we want to run
19:38 - um car i think i gotta put dashes
19:42 - car there we go so car and pedestrian
19:46 - tracking dot pi
19:47 - okay these little slashes into space
19:49 - because it's kind of silly when it when
19:50 - there's actual spaces like i had
19:52 - underscores the other file but
19:53 - ignore that yeah and the way by the way
19:56 - and the way aaron was able to get that
19:57 - is he simply started with so
19:59 - he typed in car and then he pressed tab
20:01 - right away right so he pressed tab
20:03 - and that's basically right away it
20:04 - autofill because you know we got
20:06 - autofill and
20:07 - yeah it tried to auto find any any files
20:09 - that has car at the beginning and then
20:10 - it gives you all the options
20:12 - exactly um you can just type it all the
20:14 - way out maybe just use underscores
20:15 - because then it gets rid of this nasty
20:16 - complicated thing with this stuff if you
20:18 - just use underscores and all your file
20:19 - names and you can just type out this
20:21 - exact thing and then you won't have all
20:22 - this weird stuff
20:23 - it'll just look like it'll look like
20:27 - like that yeah okay exactly it looks
20:30 - nicer
20:30 - but uh this video will just use this
20:33 - okay that's fine so when i run this
20:35 - because it says code completed then we
20:36 - should see code completed pop
20:38 - up here and voila it does
20:41 - so that that okay uncompromisingly
20:44 - because there's just a print statement
20:45 - but like i said when you're running
20:47 - opencv you want to run
20:49 - import cv2 make sure you save and if we
20:52 - run this now
20:53 - then and this prints out we know that
20:54 - this is working correctly if this
20:55 - doesn't print out
20:57 - that means there's an error here
20:58 - importing and then we'll see it but i
20:59 - mean i think it's going to work
21:01 - so you can press the up arrow key to
21:02 - repeat your last command
21:04 - and just hit enter again and as you can
21:06 - see no errors
21:07 - so that's it our program has been
21:10 - completed thank you very much no
21:11 - no i'm kidding
21:19 - all right so let's start with just
21:22 - detecting
21:22 - uh cars and images all right so i have a
21:24 - little mini program up here let me just
21:26 - comment this out
21:27 - it's a comment out in python you can
21:30 - just use triple quotations like that and
21:31 - everything
21:32 - everything between will be commented out
21:34 - and
21:36 - these
21:41 - there we go save this
21:44 - and here we go so it's even shorter for
21:46 - just an image but we're going to go
21:47 - through all of them one by one
21:48 - and explain how it works okay so let's
21:51 - start with
21:52 - this all right so first thing we're
21:55 - going to do is we're going to want to
21:58 - decide on an image of course if we're
21:59 - going to be detecting cars we need an
22:01 - image that has a car in it to detect
22:03 - okay so i just have an image on my
22:05 - desktop called car image.jpg
22:07 - right here car image.jpg the same one
22:10 - that was in the slides i was using i
22:11 - just cropped it out yeah
22:12 - the same exact image and we literally
22:14 - and we literally and we literally got
22:15 - guys we literally just got these images
22:17 - from the internet so don't think it's
22:18 - anything special it's just an
22:19 - image from the internet and we're yeah
22:20 - yeah yeah yeah yeah yeah yeah i'm
22:21 - actually using in this
22:22 - in this tutorial the links to the
22:24 - youtube videos i stole them from
22:26 - are in the description so credit to
22:27 - those people the guy on the motorcycle
22:29 - he has like two million subscribers for
22:30 - riding his motorcycle around cities and
22:32 - like revving his engine at hot chicks
22:33 - like it's pretty cool
22:35 - but all right all right okay i use a
22:37 - video from him and that's where i get it
22:39 - from so this isn't spoofed
22:40 - i'll go check it out there you can also
22:41 - use a youtube downloader to get the
22:43 - videos yourself
22:44 - if you wanna use the same videos then by
22:45 - all means do it so this is the car
22:47 - image.jpg
22:48 - okay right here and
22:52 - um that's it so the image file we have
22:53 - is just car image.jpg
22:55 - very simple okay and let's just run this
22:57 - this is called unit testing every time
22:59 - you write a new line of code or like a
23:00 - different
23:01 - um different group of code i'm a little
23:04 - bit ocd and psychotic and do it every
23:06 - single line i run it to make sure code
23:07 - completed prints because if it doesn't
23:09 - that means the line i just added screwed
23:11 - something up
23:12 - right okay okay called unit testing
23:14 - because you want to test every single
23:15 - unit of change in your code
23:17 - right um even you can be redundant even
23:19 - if it's like as simple as
23:20 - oh i deleted something like you maybe
23:22 - you thought you deleted the d but you
23:23 - actually deleted this
23:24 - that's gonna screw you it's gonna it's
23:26 - gonna break the code true
23:28 - um but yeah pretty self-explanatory
23:30 - that's the
23:31 - importing the image there second thing
23:33 - is we're gonna want some way to be able
23:35 - to
23:36 - detect and track cars okay and
23:38 - pedestrians well let's just start with
23:40 - just cars
23:41 - okay so let's start here so these are
23:44 - um our image we put in some comments
23:46 - because comments are good
23:47 - it's good coding practice and our
23:50 - pre-trained
23:52 - car classifier okay so this is a little
23:55 - bit
23:56 - wordy but all it is is like i said when
23:59 - you
23:59 - when you train the algorithm with the
24:01 - hard features and you have a big
24:02 - list of hard features that defines a car
24:04 - when they're all added up like the dark
24:05 - boxes and the light boxes all of those
24:07 - added up define what a car is like it
24:09 - kind of captures the
24:10 - pattern of what a car looks like on it
24:11 - in an image or in a frame of the video
24:14 - then you encapsulate all of those
24:16 - numbers and heart features
24:17 - in a file an xml file so
24:21 - um i think
24:25 - yeah so what this looks like i can
24:27 - actually open it right here
24:28 - okay i'll take a look if i just open
24:29 - this up then this is what it looks like
24:31 - so cartesian
24:32 - xml so all this is this is the result of
24:35 - training the algorithm this is what the
24:37 - algorithm at the end spit out after you
24:38 - put in thousands of images
24:40 - oh by the way i totally forgot the car
24:43 - images the data set that
24:44 - that i stole sorry guys
24:47 - we borrowed the hey i got it we bought
24:49 - it gonna die on the stream
24:52 - you got some water you gotta get it okay
24:54 - what's up
24:56 - get some water you know yeah i got some
24:58 - right here actually so okay i'm going to
25:00 - drink while i'm talking
25:01 - all right cool cool
25:06 - should be awesome conquering hiccups
25:09 - okay
25:09 - anyways all right so we're not actually
25:11 - going to train the algorithm ourselves
25:13 - on this
25:13 - on this video that takes way too long
25:15 - because like it takes like like a long
25:17 - time for a human to learn and build a
25:18 - habit it takes a long time for a baby to
25:20 - understand what a car and a pedestrian
25:21 - is
25:22 - the same way it takes a long time for a
25:23 - computer to learn what a car is because
25:25 - you have to give it
25:26 - thousands of images and run all the
25:28 - thousands of heart features at every
25:29 - location of every size of every
25:31 - orientation until you eventually decide
25:33 - on the hard features that match nicely
25:34 - for a car
25:35 - and then once you have all of those then
25:37 - you're good to go but the
25:38 - end result is pretty much this okay so
25:42 - this is just like some encoding i
25:43 - actually don't know how this works
25:44 - exactly
25:45 - it's just the xml xml encoding is what
25:48 - they use but the idea is you can
25:50 - generate one of these files
25:51 - um and it has all the numbers like these
25:53 - numbers are like different coordinates
25:54 - and different colors and different
25:56 - thresholds of like okay is this a hard
25:57 - feature is this good enough it needs to
25:59 - be
25:59 - above this number below this number and
26:01 - it just goes through the entire list of
26:02 - thousands and thousands
26:04 - and thousands
26:10 - oh
26:19 - yeah guys cause he called me i don't
26:20 - know if you guys can hear one second
26:22 - guys
26:39 - oh we got another donation dope
26:45 - got it yeah i'm not in the chat guys i
26:48 - think we overlooked that but somebody
26:50 - somebody uh donated uh are we still live
26:53 - nos
26:53 - yeah we're live of course all right yeah
26:55 - let's keep going let's give up there's
26:56 - no
26:56 - no i was just i was just talking with
26:58 - kazakhstan we were like you know
27:00 - yeah yeah yeah all right guys we're back
27:02 - on track somebody else donated i think
27:04 - we missed them the chat because we're
27:05 - focused on the code so we overlook that
27:06 - but don's
27:07 - keep an eye so whoever that was i don't
27:10 - know their name
27:11 - but i appreciate that very appreciate
27:13 - that appreciate the gesture
27:15 - and where was that yeah so the so this
27:17 - is a long list of hard features it's
27:19 - going to go through all of these and if
27:21 - the image
27:22 - passes all of these you can say okay
27:24 - yeah this is a car
27:25 - awesome or like a little patch of an
27:27 - image if the little patch passes through
27:29 - all these and it's
27:30 - it's a yes all the way through and it it
27:32 - counts as a car if not it's not a car
27:34 - and then that's how we know where they
27:36 - are so
27:37 - you're going to need to specify this
27:39 - file because this is what's going to
27:40 - tell us what a car is and what a car
27:42 - isn't
27:42 - and the link to this file is actually in
27:44 - the description so you can just go
27:45 - download this it's just a url just go
27:47 - file save as you can download this
27:49 - um it's actually just called car.xml but
27:51 - i added the
27:52 - detector for for the video so
27:55 - download that okay that's explanation of
27:57 - that a lot of explanation for one line
27:58 - of code but i don't just want to be like
27:59 - hey just download the
28:01 - work like nah i'm gonna explain i'm
28:02 - gonna explain how it works so they have
28:03 - an overall
28:04 - whole understanding that's the proper
28:06 - way to do stuff okay we're actually
28:08 - programmers i mean we're lazy half the
28:10 - time but it's fine
28:12 - um all right so moving on um now the
28:16 - next thing we're going to want to do
28:17 - is we're actually going to want to
28:20 - create an image within the opencv format
28:23 - so this here of course this is actually
28:25 - just a string okay car image is just a
28:27 - string
28:27 - in python but we want to give it to
28:29 - opencd remember cv2
28:31 - and actually read the image so that
28:33 - opencv can actually use it correctly
28:35 - okay so all we're going to do is we're
28:36 - going to call opencv.imageread
28:40 - and pop in the image file the name of
28:41 - the image file which is just car
28:43 - image.jpg
28:44 - again car image.jpg right here so we're
28:46 - reading this in
28:47 - our program and from there we have it in
28:51 - here image so that image is actually now
28:52 - in this variable here in our program
28:54 - okay
28:54 - so why don't we just show uh i believe
28:57 - so the image image image read file
28:59 - imagery file basically like takes in the
29:01 - image and all the and it processes it as
29:02 - like data
29:03 - is that what it does right yep so it
29:05 - just read it it just reads in all the
29:06 - pixel data from that image file
29:08 - and then reads it into some double um
29:11 - multi-dimensional array so you know like
29:13 - a big array a double array of an array
29:15 - of arrays so that every pixel has its
29:17 - own data and then it's just all encoded
29:19 - into this one variable here
29:20 - image right right right gotcha gotcha
29:22 - and now what we're going to do is we're
29:23 - actually just going to
29:25 - this is not a face detector this is a
29:27 - car detector
29:28 - okay we're going to display this image
29:30 - so there is a
29:33 - um we're also going to need this just
29:36 - once
29:36 - guys so so these two lines of code that
29:38 - we're currently working on we got the
29:40 - image in our program
29:41 - next we're going to need to show the
29:43 - image so opencv
29:44 - has a a function or method called image
29:47 - show
29:48 - and the first thing is the name of the
29:50 - window so the name of the window like
29:51 - here is car and pedestrian tracking.pi
29:53 - that's what will pop up there and then
29:54 - the actual image won't show
29:56 - okay okay that shows up and then
29:59 - in opencv this basically just means
30:02 - display so
30:03 - opencv.weightkey you need to you need to
30:05 - run this line of code so that it
30:07 - actually displays
30:08 - otherwise it'll display for a split
30:09 - second basically one frame
30:11 - so like a literally a split second then
30:12 - it'll disappear
30:14 - but this says wait until you hit a key
30:16 - before it disappears so it kind of like
30:18 - this displays for a millisecond but this
30:20 - makes it pause and so you need okay okay
30:22 - okay okay it's kind of just like display
30:24 - by the way by the way i just want to say
30:25 - thanks to
30:26 - lars lars donate looks like a euro as
30:28 - well so appreciate that man
30:29 - and we got sony pete guys we got so many
30:31 - people in the comments between abdullah
30:32 - between kristen between checks between
30:34 - kant
30:34 - usa usma vicky right joshua so many of
30:38 - you guys amazing and
30:40 - so excited in the comments i'm excited
30:42 - that we have such
30:43 - such a great community man literally so
30:46 - yeah i just wanted to mention that
30:47 - because you know so many amazing people
30:48 - that's
30:49 - yeah well let's go ahead and continue on
30:52 - awesome you guys so let's just run this
30:55 - code now
30:55 - all right so again we imported opencv we
30:57 - got the image file we have our car
30:59 - classifier
31:00 - we import the image okay okay
31:03 - um and i just want to show you the image
31:05 - now real quick okay to prove that the
31:06 - image is actually showing up and is
31:07 - within our python program
31:09 - so this will actually pop up a little
31:10 - window with the image and that's it it's
31:13 - not detecting anything yet it's just
31:14 - going to show the actual image
31:16 - so boom right there as you can see this
31:18 - is clever programmer car detector
31:19 - and that's the image right okay okay and
31:22 - remember this this title
31:24 - is from here okay so that's that
31:28 - all right now let's just quit out of
31:29 - this so it's waiting for a key press if
31:31 - i hit space
31:32 - bar or any key it'll just quit out and
31:34 - now we can continue on all right
31:36 - okay so so now we're going to be coding
31:38 - in here because
31:39 - of course at the end we want to make
31:40 - sure we're displaying the image at the
31:42 - end
31:43 - um but now we have our image in our file
31:45 - okay so now that we have the image and
31:46 - we have a classifier
31:48 - how do we actually find where the car is
31:50 - in that image because
31:52 - i mean there's a car here there's a car
31:53 - here there's a car all down here
31:55 - i mean granted these are half cars so it
31:57 - might not detect these i don't think it
31:58 - will
31:59 - but these full cars it definitely will
32:01 - okay
32:03 - well kazzy's calling again
32:06 - hey what's up quasi
32:10 - livestream is dead
32:14 - is dead
32:19 - uh no you're not mute
32:23 - no it's running is it is it stream up
32:25 - guys in the comments can you guys it's
32:27 - running it should be running guys right
32:28 - it's running you guys hear us
32:32 - it's working yeah it's all good guys
32:33 - always good got it
32:36 - it's all good it's working now all right
32:39 - we don't want another
32:40 - dead livestream you know you guys it's
32:42 - terrible because it keeps getting cut
32:43 - off but yeah yeah
32:44 - i think we're good right i think we're
32:45 - good yeah we're good we're good we're
32:46 - good we're good man we're good we're
32:47 - good
32:47 - anyways so this is the image that's
32:50 - going to be read in
32:51 - and from here we want to be able to
32:54 - classify
32:55 - that this right here is a car so it's
32:57 - like if we pass this little rectangle of
32:59 - the image
33:00 - through that whole xml file and if it
33:02 - gets all the way to the end it's like
33:03 - okay cool this
33:04 - square counts as a car and this square
33:07 - does not count as a car
33:08 - okay okay that's what we're doing so the
33:11 - next step to do
33:12 - is to actually create our classifier so
33:14 - that's pretty simple that's just this
33:15 - line right here
33:16 - let me show you guys a copy and paste
33:18 - this and
33:19 - we want to create our car classifier so
33:22 - all it is
33:22 - is we run this function opencv
33:26 - dot cascade classifier because again we
33:28 - are running a har
33:29 - cascade algorithm that's why it's called
33:31 - cascade because there's a cascade a long
33:33 - list
33:33 - a long chain of our features that we're
33:35 - going to run it through and
33:37 - classifier is just classifying something
33:39 - as a car or classifying it as a
33:41 - pedestrian or classifying it as a face
33:43 - or an apple or whatever but in this case
33:44 - a car and
33:47 - the classifier file is what we just
33:49 - specified the xml file file so we just
33:52 - pop that into here and so opencv we're
33:54 - just going to create a classifier
33:56 - from that file and then we're just going
33:57 - to call it color tracker because
33:59 - once you have a car tracker now we can
34:00 - apply this card tracker to this image
34:02 - and we can actually find where in this
34:05 - image if there
34:06 - is a car or not so here there's a bunch
34:07 - but it might only it might only detect a
34:09 - few
34:10 - but that's the idea okay so we're in an
34:11 - image we have a car tracker now we just
34:13 - want to apply this car tracker to the
34:14 - image
34:15 - and then spit out the rectangles okay
34:16 - right so
34:18 - let's move on um i mean again
34:21 - this doesn't show anything we just have
34:22 - the car tracker created if i displayed
34:24 - it it's just going to be the image again
34:25 - so i'm going to move on
34:27 - like i said in our presentation we do
34:28 - want to convert it to black and white
34:30 - though first
34:31 - so let's just do that next and the
34:33 - reason for this is because it speeds up
34:34 - the algorithm makes it essentially three
34:36 - times as fast because instead of three
34:37 - colors rgb
34:39 - we can just focus on black and white
34:40 - that's it so you're simply converting
34:42 - basically from
34:43 - from color to to to to black and white
34:47 - yep okay question if you guys wanna
34:50 - why don't why don't you do why don't you
34:51 - do that before you classify is my
34:53 - question
34:53 - like why don't you do that before the
34:55 - classifier i mean you're just creating
34:56 - it
34:57 - yeah we can shuffle this up it doesn't
34:58 - really matter it doesn't matter okay
35:00 - yeah doesn't matter i mean this might
35:01 - make more sense because you have the
35:02 - image then then you change it to black
35:04 - and white
35:04 - and then create the classifier gotcha
35:08 - i mean we could even do this you know we
35:09 - could like keep away or different so
35:11 - like we've got an image here
35:13 - yeah and then we read in the image and
35:14 - then we change it to black and white
35:16 - and then we get a classifier and then we
35:18 - create the classifier and then but the
35:20 - point is what we want is we want to have
35:22 - this uh classifier and this a black and
35:25 - white image ready so once we have both
35:27 - of these
35:28 - we can do this in any order then we can
35:30 - pair these together and actually get the
35:31 - images
35:32 - okay nice so i mean i guess i'm going to
35:34 - put it back here because
35:35 - i like keeping all of the static stuff
35:37 - together because these can change like
35:39 - you can change the file very easily here
35:41 - or the file very easily here just by
35:42 - changing this and all this code remains
35:44 - unchanged right all right so
35:47 - here's we got somebody asking how can i
35:49 - how can i donate oh my gosh some of you
35:50 - guys are asking how can i donate dang i
35:52 - really appreciate that guys
35:53 - that is so awesome my paypal is
35:57 - my my venmo my only fans like i got
35:59 - everything
36:00 - just paid all of that you know yeah my
36:02 - snapchat
36:06 - no um i actually don't know how you can
36:08 - do that do you know nas
36:09 - i don't know i think kaz is got it cause
36:11 - he's got it he's got taken care of oh
36:12 - it's good
36:13 - yeah cool yeah or we can hook you up
36:15 - with something maybe there's something
36:16 - uh a itch like a fighter course
36:18 - something i don't know yeah yeah
36:19 - it's something up who knows anyways back
36:22 - to the code you guys so once you have
36:23 - the image right in you want to change it
36:25 - to black and white
36:26 - like we said because it speeds up the
36:27 - algorithm and you can still you can
36:28 - still tell what a car is and what a car
36:30 - isn't in black and white images so it's
36:31 - totally fine
36:32 - um you want all the improvements you you
36:34 - can have there's always a trade-off of
36:35 - speed and accuracy pretty much in
36:37 - everything in life
36:38 - um so algorithms are no different so you
36:40 - kind of want to change
36:41 - like again like an apple and a pair if
36:43 - you go black and white it's going to be
36:44 - much harder to distinguish the
36:45 - difference
36:46 - um but the car and a human very easy to
36:49 - distinguish
36:50 - okay right yeah yeah that's true the way
36:52 - we do that is opencv
36:54 - you just there's a function called
36:56 - convert color so all you're going to do
36:58 - is this allows you to
36:59 - to convert color to black and white it
37:02 - allows you to convert black and white to
37:03 - color
37:04 - and there's all different kind of color
37:05 - encodings i'm not going to get into
37:07 - crazy details but the point is
37:08 - this allows you to convert the color
37:10 - stuff of an image to whatever you want i
37:12 - could even make it all red like have
37:13 - only the red channel it'll look really
37:15 - red
37:15 - and stuff like that all right so i'm not
37:18 - going to demonstrate that here
37:20 - um well let me see actually
37:24 - now i don't i don't want to go down that
37:25 - rabbit hole um the but
37:27 - yeah the point is you can you can
37:29 - convert any the color of any image so
37:31 - we're going to feed in the regular color
37:32 - image here
37:33 - and then all we're going to do is we're
37:34 - going to say we want to go from color
37:36 - from bgr to gray so bgr is just rgb
37:41 - backwards
37:42 - in openc and opencv
37:45 - rgb rgb is like you know the color of a
37:48 - pixel everybody should know that
37:49 - if you don't now you do um then
37:53 - they just use it backwards so it's bgr a
37:54 - little bit confusing i don't know what
37:56 - that's so weird that's that's so weird
37:57 - like
37:57 - about yeah it's like this like but wait
37:59 - if you didn't know if you
38:00 - guys didn't know rgb it's red green and
38:03 - blue those are the three main colors
38:04 - that all the other colors are made up of
38:06 - if you didn't know that so yeah that's
38:08 - that's something interesting for you
38:10 - yeah yeah each pixel has a r a red a
38:13 - green and a blue light
38:14 - and then it just like makes the
38:15 - brightness of those three different
38:17 - levels and the combination of those
38:18 - three levels can make any color pretty
38:20 - much
38:20 - if they're all max it's white if they're
38:22 - all off it's black
38:24 - okay for rgb but for gray it's just one
38:27 - number
38:27 - there's no there's no three channels
38:29 - it's just oh is it zero to like a
38:31 - hundred or something
38:32 - yeah yeah yeah yeah okay from zero to
38:33 - 100 like what's the brightness
38:35 - that's all it is so we're just
38:36 - converting rgb to gray
38:38 - and uh once we have that i just call it
38:40 - black and white because why not
38:42 - um now we can actually display this
38:45 - black and white image
38:46 - so let's take this and in our image show
38:48 - down here which was showing the color
38:49 - image before
38:50 - let's just change this to the black and
38:51 - white image and of course we need this
38:53 - to display for longer than millisecond
38:55 - and this should actually give us the
38:56 - black and white image okay so let's just
38:58 - run the same thing again again your up
38:59 - arrow
39:00 - key will allow you to go to the last
39:02 - command you ran in your terminal
39:03 - hit enter and voila we have a black
39:07 - oh my gosh okay interesting guys give
39:09 - give some air
39:10 - give us aaron some round of applause in
39:12 - the comments below
39:15 - i ran six lines of code you know i've
39:17 - been coding for eight years
39:18 - and we converted an image to a black and
39:20 - white image that's what we just did
39:22 - this is all i learned in eight years
39:23 - guys exactly
39:26 - all eight years in college eight years
39:28 - in college you know
39:29 - it's a grad school pursuing masters and
39:33 - everything um anyways so that's the
39:36 - black and white image so now that we
39:38 - have the black and white image we can
39:39 - actually apply
39:40 - the card classifier to that image and
39:43 - then we can get the
39:45 - um the the car um in the image out
39:49 - okay yeah so next thing we're going to
39:51 - want to do is actually detect where the
39:53 - cars are in the image
39:55 - so let's run that next okay okay
40:01 - so i'm gonna got it are you trying to
40:02 - figure out what line or line to write
40:04 - this on
40:05 - no no i just kind of want to like
40:06 - segment like files shut up
40:15 - guys well guys drop in the comments
40:17 - below what what line should
40:19 - should aaron write write the piece of
40:22 - code
40:37 - we'll see we'll see we'll see one day
40:39 - one day
40:41 - anyways uh yeah so the way you
40:44 - you detect things in opencv is once you
40:47 - have a classifier object
40:48 - okay a car tracker you can apply this to
40:51 - an image
40:52 - so all we're going to do is we're going
40:53 - to say car tracker
40:55 - and we want to detect multi-scale so
40:57 - what that means is detect cars of any
40:59 - size
41:00 - of any scale okay so we're going to
41:02 - detect cars
41:03 - it doesn't matter if the car is big or
41:05 - small
41:06 - it's going to detect it matter what or
41:08 - even if it was even bigger it'll detect
41:10 - that too
41:11 - okay got it got it got it got it so wait
41:13 - some of you guys some
41:14 - you guys guys what other editor is this
41:16 - guy this is using vs code guys okay
41:19 - these go so like just download this code
41:20 - is the the most
41:22 - the most important one you'll ever use
41:23 - as a developer so yeah
41:25 - it looks like wait who is this
41:30 - so yeah just download that you should be
41:32 - good
41:35 - yep oh by the way um if you guys want to
41:38 - have the
41:39 - the the documentation for opencv um i'll
41:42 - link that's linked in description too so
41:43 - you can check all these files because
41:45 - there's a lot of cool little things you
41:46 - can tweak
41:46 - i'm not gonna go over all them
41:48 - extensively i'm just getting the app
41:49 - done
41:50 - uh but detect multiscale there's cool
41:51 - things you can add on to the end to kind
41:53 - of like tweak the algorithm to make it
41:55 - perform better or worse yeah that's
41:57 - linked in the description i'll just show
41:58 - it right here though
41:59 - detect multiscale so this is
42:01 - documentation again link in description
42:02 - just
42:03 - click there it'll zoom in guys yeah cool
42:06 - cool link in bio link in description
42:10 - i'm used to that you know i know i know
42:12 - you [ __ ]
42:13 - dirty millennial okay listen awesome
42:15 - let's just let's just let's focus on the
42:17 - work here okay
42:19 - [Laughter]
42:21 - like i don't like those no boring videos
42:23 - boring live streams
42:25 - anyways so um yeah detect multi-scale so
42:28 - of course you take the image in first
42:30 - which is what we were doing here we're
42:31 - just passing in
42:32 - just a black and white image but then
42:34 - there's other stuff you can add on
42:35 - there's all this cool stuff reject level
42:36 - scale factor minimum neighbors you can
42:38 - read all the details here if you're
42:39 - interested but you don't need it for the
42:40 - app to work
42:41 - i'm not using it so that's really it so
42:44 - detect multi-scale
42:45 - you just plug in the black and white
42:46 - image with the car tracker that we got
42:48 - again
42:49 - from this xml file which was trained
42:51 - with the images
42:52 - and the hard features so that's the
42:53 - whole entire holistic view
42:55 - and once we apply this tracker to this
42:58 - black and white image
42:59 - it'll pick out all the places in that
43:01 - image where there's a square that
43:02 - contains a car and it'll give us the
43:04 - coordinates of all of those cars
43:06 - okay okay so why don't we just print
43:08 - this out
43:09 - and see what the hell is in cars okay
43:12 - okay guys this is getting interesting
43:14 - guys this is getting really interesting
43:16 - all right let's see
43:16 - let's see let's run it and boom
43:20 - so again the black and white image is
43:21 - popping up because i still have these
43:23 - two lines of code down here running okay
43:24 - but okay that i printed out cars so all
43:27 - cars is
43:29 - just the numbers yes relative to that
43:32 - really
43:33 - yeah i mean uh i guess it's only taken
43:36 - two cars in this we'll see exactly where
43:37 - they are
43:38 - in a bit i already know at the time
43:39 - because i ran this before but it detects
43:41 - this big car in front
43:42 - and this little car on the right reason
43:44 - being is because these are all half cars
43:45 - so it's not quite smart enough to get
43:47 - the half car
43:48 - well actually actually actually that's a
43:49 - good question guys guys which cars do
43:50 - you think it will actually detect let us
43:51 - know in the comments below like
43:53 - okay man yeah i know you give it away
43:56 - but like
43:56 - this is come on bro gotta not give it
44:00 - away so easily you know
44:02 - but easy mode i mean like it's
44:04 - impossible to predict bro like not even
44:06 - us you just run the program and see what
44:07 - happens
44:08 - like come on yeah but uh yeah but
44:10 - anyways so yeah it's gonna detect this
44:12 - one
44:12 - and this one okay so there's only two
44:14 - spoiler
44:16 - but these are the two these are the two
44:17 - cars so these are just the coordinates
44:19 - of where
44:19 - the car is it just kind of like defines
44:21 - the square that's all it's doing
44:23 - okay so there's two cars one car here
44:26 - one car here if there's ten cars
44:28 - like in the video stream there's gonna
44:29 - be like ten of these in here instead of
44:31 - just two
44:32 - right all right so that's really it uh
44:35 - let's go back
44:36 - and now all we need to do is once we
44:38 - have these coordinates we just print out
44:40 - we just want to draw a rectangle around
44:41 - that car so we can actually see it
44:43 - because we know where it is we just
44:44 - can't see it because there's no
44:46 - rectangle drawn on the image yet wait
44:47 - so those so those numbers were actually
44:49 - rectangles is what you're saying
44:51 - yeah they kind of define the coordinates
44:53 - oh this is guys
44:55 - yes this one yeah interesting okay okay
44:58 - okay
44:59 - okay okay okay the top left point the
45:01 - top left point of the
45:03 - of the rectangle and this is the width
45:05 - the height see it's the same because
45:06 - it's the square
45:07 - this is the height it's the square yeah
45:09 - yeah that's all interesting
45:10 - okay okay okay gotcha gotcha gotcha
45:12 - gotcha yeah applause for that this is
45:14 - really cool stuff
45:17 - you guys don't hear you aaron you don't
45:18 - hear the sound of the chat here you know
45:21 - i'm in the chat i'm in the chat aaron
45:22 - you don't have you don't have the center
45:23 - fox but we have some amazing sound
45:24 - effects going on in the background just
45:25 - so you know
45:27 - it's amazing sound effects yep yep yep
45:29 - yep you'll you'll see it later don't
45:30 - worry
45:31 - we'll see you later oh in the stream
45:33 - okay i thought i thought that was like
45:34 - you know
45:35 - it was like dying outside in my
45:37 - background but there's nothing happening
45:38 - bro
45:39 - yeah awesome all right anyway
45:42 - yeah so this is just like because
45:43 - they're squares by default um we're
45:45 - detecting things within a square so this
45:46 - is the width and height of the square
45:48 - because it's the same number within
45:49 - height square and then this is the left
45:51 - the top left point in the image of where
45:53 - it is so from here we can be like okay
45:54 - this is the top left point
45:55 - and i just draw a square of these
45:57 - dimensions at that point
45:59 - going down to the right and that's
46:01 - actually where the
46:02 - um the car is in the image so there's
46:04 - two in this one
46:06 - okay so we have top left point and width
46:08 - and height okay if you guys watched the
46:10 - face detection video a couple weeks ago
46:12 - very similar we're just detecting
46:13 - different things and applying it
46:14 - differently
46:14 - but um same idea okay got it
46:18 - um so guys who's ready who's ready to
46:21 - see some squares and detection squares
46:23 - huh who's ready
46:24 - you guys ready you guys ready drop in
46:26 - the comment below and
46:28 - aaron let's see it let's see it bro got
46:31 - it
46:31 - all right you guys so
46:35 - um okay it's gonna be what's up e
46:38 - uh bgr so this is actually wrong let me
46:41 - okay let me explain this i just copied
46:42 - and pasted
46:43 - um actually let's get rid of this for
46:46 - now i don't wanna okay ignore this loop
46:47 - for now
46:48 - actually let me just get it straight up
46:49 - delete it because i wanna explain it
46:50 - line by line all right all right all
46:52 - right
46:53 - oops let's go logan hey so
46:56 - here we go here is the
46:59 - um the line to draw a rectangle so
47:02 - opencv allows you to draw a rectangle on
47:04 - any image
47:05 - very straightforward and simple so it's
47:07 - just called dot rectangle so opencv
47:09 - opencv.rectangle
47:10 - and then it's like okay what rectangle
47:12 - of what size what color
47:13 - what thickness and where do you want to
47:15 - draw that rectangle so this is all these
47:17 - specifications here and of course we
47:18 - have that data within cars
47:20 - so if we have the data in there then we
47:21 - can just print it out here okay
47:23 - but where you get the x and the y those
47:25 - are the question where is the x and y
47:27 - coming from
47:28 - uh from here so we're gonna get that
47:30 - data out of here so remember okay okay
47:31 - remember we have these here so this is
47:33 - gonna be x it's gonna be y y it's gonna
47:35 - be width and this is gonna be height
47:39 - and then from there we can just x y and
47:41 - then x plus width and
47:42 - y plus height and then this is the color
47:45 - this is the color of the
47:46 - rectangle and this is the thickness of
47:48 - the rectangle oh that makes so much
47:50 - sense now guys that's actually
47:51 - that's not that's not that's not so bad
47:52 - at all guys you get this like drop down
47:54 - below do you get that like
47:56 - it's actually not bad you're simply
47:57 - drawing a rectangle with x y coordinates
47:59 - and you're saying here's the height and
48:00 - here's the width
48:01 - like that is pretty pretty interesting
48:03 - and it's actually not that bad
48:05 - to understand as well you can do it like
48:07 - we can do it
48:08 - you can do it too trust me if they watch
48:10 - their face to text yourself this is very
48:12 - similar they'll probably breathe
48:13 - through this right now i'm just watching
48:14 - us bigger which is awesome exactly
48:16 - but that was that one was that one was
48:18 - with kazi you know so it's a little bit
48:19 - hard to make fun of him to make
48:21 - you know yeah he's more of a challenge
48:24 - anyways um so let's just actually prove
48:26 - that this is
48:27 - is working so we're gonna want to unpack
48:30 - um
48:32 - uh this so in cars it was actually an
48:34 - array right so there's an array here
48:37 - and then within the array there's two
48:39 - arrays within the array so let's just
48:40 - grab out these two arrays
48:41 - okay okay so this is going to be array
48:44 - at index zero
48:45 - and this is gonna be arrayed index one
48:47 - okay because there's two elements in
48:48 - this
48:48 - and then there's a list of numbers in
48:49 - there okay so all we're gonna
48:51 - do is say um
48:56 - i guess cars at zero so this would be
49:00 - car one okay okay and the white white
49:03 - car is zero white car
49:04 - let's just ignore the um let's just
49:06 - ignore the the second car for now okay
49:08 - okay so car one equals cars
49:10 - zero so if we print out if we print out
49:13 - car one uh
49:16 - car one just like that let's go
49:19 - here run it again as you can see we have
49:22 - just the first car so 375
49:23 - 375 that's what we're looking for and
49:27 - from there
49:28 - we just want to get the
49:31 - um x y within height so what we're going
49:34 - to say is we're going to unpack this i'm
49:36 - going to unpack this
49:37 - this this list here and say this is
49:40 - x this is y this is width and this is
49:44 - height
49:44 - okay okay see you guys you're still with
49:47 - us guys
49:48 - guys give us a thumbs up if you're still
49:49 - with us this is kind of like it's all
49:51 - coming together
49:52 - it is honestly not that difficult give
49:54 - us a thumbs up if you're still with us
49:55 - and aaron let's go let's go ahead and
49:57 - start seeing you know the result of all
49:58 - this
49:59 - hell yeah so um all we're doing here is
50:02 - we're unpacking this
50:03 - okay so car one again is this these four
50:06 - numbers and we just want to pack these
50:07 - four numbers into these four variables x
50:09 - y
50:09 - and height okay and then from here now
50:12 - this code should work so x and y
50:14 - is the top left point okay okay we have
50:16 - the we have the image you want to put it
50:17 - on the color image
50:18 - not the black and white image when we
50:20 - want to color on the color image
50:21 - um and then put the top left point x y
50:24 - and then the bottom left the bottom
50:26 - right point which is going to be x plus
50:28 - width and y
50:29 - plus height okay that's how the math
50:31 - works
50:32 - um and then from there this is just
50:34 - going to be uh should be red color
50:36 - so bgr remember instead of rgb so b so
50:39 - blue is zero
50:41 - g green is zero but red is maximum 255
50:44 - is the highest value you can have so
50:45 - we're creating a rad
50:46 - rectangle basically that's it yeah a red
50:48 - rectangle of thickness two
50:50 - two pixels thick on this image at this
50:53 - top left point and this bottom right
50:55 - point
50:55 - that's all it is because that's all the
50:56 - rectangle is it's two points thanks and
50:58 - then you just
50:59 - rectangle between those two points okay
51:01 - so let's run this and see what the heck
51:02 - happens
51:04 - guys ready actually nothing's gonna
51:05 - happen
51:19 - so we drew it on the color image not on
51:21 - the black and white image but we're
51:22 - still displaying the black and white
51:24 - image so let's just display the color
51:26 - image which has the rectangle drawn on
51:27 - it now
51:28 - okay so now it should work so again
51:33 - and enter and
51:39 - [Music]
51:48 - i got the perfect gift for it look at
51:50 - that oh look at that oh look at that you
51:51 - got you don't see it aaron but trust me
51:53 - we see it it's hilarious
51:54 - look at my code yo but i'm appreciating
51:56 - funny or something i'm making very much
51:58 - fun of aaron guys
51:59 - give aaron a thumbs up in the comments
52:00 - guys this is so epic look at this we
52:02 - already
52:03 - did we just detected we actually just
52:05 - detected
52:06 - a one car like how crazy is that with
52:09 - how many lines of code directly
52:11 - directly in front of you uh i don't know
52:12 - one two three four
52:14 - five six seven eight nine ten eleven
52:17 - twelve thirteen lines of code
52:19 - fourteen lines of code guys bro learn to
52:22 - count
52:22 - man you'll count okay you learn how to
52:24 - count okay i'll i can't find
52:26 - plus one fifteen minus one alrighty guys
52:30 - yeah that's just as
52:30 - epic stuff so okay we got one rectangle
52:33 - now my question is how do we get the
52:34 - second rectangle
52:35 - if you guys know how to do that drop
52:36 - down the comments below and a lot of you
52:38 - guys are
52:39 - a lot of you guys are like whoa let's go
52:41 - we got abdullah in the house we got
52:43 - harsha like yeah we got logan whoa
52:46 - we got oh man you guys are pumped for
52:48 - this look at that you guys are pumped i
52:50 - love it if you don't
52:51 - like this when this stream is done
52:53 - definitely go check out the face
52:54 - detection too because it's
52:55 - similar but it's a different application
52:56 - it's pretty damn cool
52:58 - yeah yeah yeah that's sweet for car and
53:01 - pedestrians
53:02 - all right so let's let's see let's see
53:03 - how do we go ahead and actually like
53:05 - get into the second car yeah okay cool
53:08 - well first of all why don't we just
53:09 - change this because this is a very easy
53:11 - change
53:11 - we're currently looking at the first car
53:13 - why don't we just get the second car
53:14 - instead by changing
53:16 - so here instead of grabbing this first
53:18 - car we just grab the second car and
53:19 - let's just draw the rectangle around
53:21 - that
53:21 - so we simply do that by just changing
53:23 - this to grab the second car instead of
53:24 - the first car
53:25 - so second car right and let's change the
53:28 - two just to be
53:30 - clean about and that there should just
53:32 - change all of this to the second car
53:33 - instead
53:34 - and we'll display it to the screen so
53:36 - let's just
53:37 - run it let's see it ready
53:49 - we're going pretty slow but uh it's
53:51 - actually it's actually funny
53:52 - bro i'm not kidding abdullah abdullah is
53:54 - like in the comments like
53:56 - damn aaron and nas seem like siblings
53:58 - fighting
53:59 - yeah pretty much i mean like we spend
54:01 - pretty much every day together working
54:02 - on stuff all the time coding
54:03 - like we practically live together it's
54:05 - kind of annoying yeah i know i'm i'm
54:08 - annoying
54:12 - let's continue on we're here to learn
54:14 - right let's go yeah yeah
54:16 - yeah um so there that's the second car
54:18 - and like i said
54:19 - in this in this uh image this trained
54:22 - classifier is only good enough to train
54:24 - to like identify full-on cars from the
54:26 - back like this
54:27 - these half cars you can't actually get
54:29 - them but actually if you trained
54:32 - um something to detect half cars like
54:33 - the right half of a car
54:35 - or the left half of a car you could
54:36 - actually find a way to detect all of
54:38 - these as well but you have to train it
54:39 - even further yeah
54:40 - and so on or like the bottom half of a
54:42 - car you know something's being but right
54:43 - now like
54:44 - this pattern is what we're is what we're
54:46 - checking is the
54:47 - the full a full back of a car right
54:50 - church so
54:51 - now the point is all we want to do is
54:53 - instead of manually going through the
54:55 - array like this we just want to loop
54:56 - through all of them
54:57 - and draw every rectangle on the image
54:59 - for every car that we find
55:01 - okay so that's that's what i had before
55:03 - i'm just going to have
55:04 - a a loop and this is going to make it
55:07 - super super simple
55:08 - so let's just start from scratch i'm
55:11 - leaving this here for reference but just
55:12 - ignore just pretend we deleted all this
55:14 - okay so what we're going to do is just
55:16 - like in cars so in cars which is an
55:18 - array of
55:19 - an array of arrays we want to
55:22 - or is it an array of arrays we want to
55:24 - iterate through every sub-array so we're
55:25 - going to iterate through this first one
55:27 - and the second one and the third and
55:28 - fourth and fifth if there's any of those
55:30 - so basically we're saying um in cars you
55:33 - want to
55:33 - take out the x y and the width and the
55:36 - height of every one
55:37 - of every list in there so actually i
55:39 - think if i just if i copy and paste this
55:41 - it'll be a little bit clearer
55:42 - yeah yeah so i think
55:46 - and i think and i think sorry let's cut
55:47 - you off so like so one important thing
55:49 - guys to mention one one important thing
55:50 - guys to mention is the way that this is
55:51 - works the way
55:52 - the whole xy wh right this right here is
55:56 - an interpolation like a
55:58 - interpolation or there's a special name
55:59 - for it where basically it will take
56:01 - the object that's in cars right it will
56:03 - loop for that and it will basically grab
56:05 - the x y the width and the height out of
56:08 - those numbers
56:09 - right so it will abstract those numbers
56:12 - from those different places
56:13 - and so that is actually in python right
56:15 - i think i'm not sure it's called
56:16 - interpolation but
56:17 - what it is but you're getting super
56:20 - confusing but
56:21 - no no no but but it's important because
56:23 - they're like okay where's this x y w h
56:25 - coming from
56:26 - right but because here's the thing it's
56:27 - looping through one single object so
56:29 - that maybe i can do like a screen brush
56:30 - right on show screen brush
56:32 - if i can do it so yeah right there right
56:34 - so this is the first object right so
56:36 - this first object is going to be
56:38 - on here right in here and it's going to
56:40 - map to the x
56:41 - to here the y to here the w to here
56:45 - and the age to here and there you don't
56:47 - see it but i'm drawing basically on your
56:48 - screen
56:48 - so yeah yeah yeah so yeah that's that's
56:51 - the really cool part about python and
56:52 - javascript actually does this too
56:54 - but i just want to explain that and so
56:56 - you guys know but anyways yeah let's
56:57 - keep going
56:59 - awesome yeah yeah i have the stream up
57:01 - on my phone looks like it's still live
57:02 - yeah we're good we're good number one
57:04 - the bottom right that's we've got 300
57:05 - people in the house
57:07 - yo wait wait wait wait wait wait wait
57:08 - wait wait wait wait wait wait wait wait
57:08 - wait wait wait wait wait wait wait wait
57:08 - wait wait wait wait wait wait wait wait
57:08 - wait wait wait wait wait wait wait wait
57:08 - wait wait wait wait wait wait wait wait
57:08 - wait wait wait wait wait wait wait wait
57:08 - wait wait wait wait wait wait wait wait
57:08 - wait wait wait wait wait wait wait wait
57:08 - wait wait wait wait wait wait wait wait
57:08 - wait wait wait wait wait wait wait wait
57:08 - wait wait wait wait wait wait wait wait
57:08 - wait wait wait wait wait wait wait wait
57:08 - wait wait wait which way are you that
57:09 - way can i punch you
57:13 - wait i think i can wait wait wait wait
57:16 - there we go
57:17 - go there you go hold on hold on hold on
57:19 - hold on ready punch hold on
57:21 - no no no no no no no beat him up
57:26 - man i wish i wish i wish
57:29 - i wish we could like yeah yeah yeah i
57:31 - wish this was like a real you know
57:33 - maybe he could punch you yeah that'd be
57:35 - good and then you want to get in the
57:36 - cage bro
57:37 - let's go man i'm ready i'm ready i'm
57:40 - ready man i'm ready
57:41 - have you seen the fight club have you
57:43 - seen warrior with tom hardy
57:45 - steve is like please punch him steve was
57:46 - like please punch him
57:47 - [Laughter]
57:50 - wait punch who punches the question [ __ ]
57:53 - each other bro they want to see us in a
57:55 - ring it's like logan paul in the ksi
57:57 - guys who wants to see a live call who
58:00 - wants to see a live call like that
58:03 - or conor mcgregor in uh mayweather we
58:05 - can do it like that yeah
58:06 - but yeah let's let's keep going we're
58:08 - here we're here to let's keep going bro
58:10 - yeah anyway so this is like the longest
58:12 - explanation of a loop ever
58:14 - yeah yeah yeah let's do it we're having
58:16 - fun you guys
58:17 - i mean we're having fun um so yeah we're
58:20 - to loop over all these
58:22 - and then within each of these we're just
58:23 - going to unpack the x y w
58:25 - and h okay so that's all that's
58:27 - happening there and once we have x y w
58:28 - and h we just want to draw
58:30 - all of those rectangles
58:33 - on the screen we can get rid of this
58:35 - hard-coded so we're going to iterate
58:37 - through every
58:38 - um pair of coordinates in that list
58:40 - we're going to get all of them and then
58:41 - it's just the same exact line of code
58:42 - here we're just going to draw every
58:44 - rectangle
58:45 - on the um screen but actually what i
58:47 - want to do is um
58:51 - a screw it that's fine what nothing
58:54 - nothing there was a little little flavor
58:55 - styling thing i was going to do but i'll
58:56 - do it later let's just so right here
58:58 - this should work so if we run this this
59:00 - will actually loop through both cars
59:02 - and draw both rectangles both both
59:04 - squares
59:05 - so why don't we just save this and give
59:07 - this a run
59:08 - um but so we just
59:12 - give this a run up arrow and hit enter
59:16 - and tada boom
59:18 - [Music]
59:21 - then we know the width and the height
59:23 - and then we with the width and the
59:24 - height and this point we can
59:26 - calculate this point so it's just boom
59:28 - boom red
59:29 - pixel width boom boom red two pixel
59:32 - width
59:32 - and damn that's it and that's it guys
59:35 - video
59:36 - and that's it and then for videos you
59:37 - just want to do this for every single
59:39 - frame of the video over and over
59:41 - guys guys if we just did this for we
59:43 - just did this for a picture
59:45 - guys who's pumped to see this for a
59:47 - video
59:48 - drop that in the comment below aaron are
59:50 - you ready are you ready to show this in
59:52 - the video because i'll be epic
59:53 - i get up all night coding and i just i'm
59:55 - kind of like bored you know
59:56 - but uh
60:00 - stuff is awesome like i'm going to send
60:02 - this video to eli musk if you like adopt
60:03 - me
60:04 - please you know like uh you know like
60:06 - big bang theory yeah howard howard
60:08 - everyone yeah yeah that's basically but
60:10 - you know pay me money pay me money i
60:11 - just i just did this for you you're
60:12 - welcome
60:13 - you know you're welcome yeah yeah or
60:16 - maybe he'll hire me who knows i mean
60:18 - maybe one day i'm not sure i'm not sure
60:20 - about it i don't know i don't know why
60:21 - you'll hire but aaron but anyways yeah
60:25 - i'll be a convenient mma fighter like
60:27 - joe rogan and then i'll have elon musk's
60:28 - smoke beat on my podcast
60:29 - oh man abdullah abdullah abdullah was
60:32 - like i put all my bets on nas thank you
60:33 - abdullah
60:35 - oh really all it's unknowns
60:38 - bro i think knowledge would be too
60:41 - scared to hit i think that's what
60:42 - happened
60:43 - to too scared not sure about that i'm
60:45 - not sure about that
60:49 - whatever whatever okay okay all right
60:51 - let's continue on let's see
60:52 - let's go now that we have it done for
60:54 - one image now it's as simple as getting
60:57 - it into a loop
60:58 - okay all right so um i have that here
61:01 - it's pretty simple to add it the only
61:03 - difference is you have to read
61:04 - a video in instead of a
61:09 - a video in instead of an image so let's
61:10 - go up here and actually change that
61:12 - so instead of image it's going to be
61:15 - a video um video okay
61:20 - so i have a video on my on my desktop
61:24 - called tesla dash cam accident so this
61:26 - is actually real dash cam footage from a
61:28 - real tesla
61:29 - that was running autopilot and avoided
61:31 - an accident okay so let's just
61:33 - i'm here tesla dash cam accident okay
61:36 - okay
61:40 - okay and this is just this is just a
61:42 - very biscuit you got from somewhere but
61:43 - like from youtube i think right
61:45 - in the description yeah it's in the
61:46 - description yeah yeah i got you [ __ ]
61:48 - like
61:48 - self-driving tesla so as you can see
61:50 - this tesla almost
61:51 - it like auto drove and like got out of
61:53 - the lane and safely did that so we're
61:55 - gonna be protecting all these cars in
61:56 - this video okay it's almost over
61:58 - so that's it that's the car i have i
62:00 - trimmed it to that just that little clip
62:02 - um but that's the first clip of the
62:03 - video in the description if you go check
62:04 - it out
62:05 - okay so that's first thing so instead of
62:07 - an image we just wanted a video
62:09 - okay and um from there so all the video
62:13 - is is just a bunch of images
62:15 - so we can just grab out each frame of
62:17 - this video and just apply the same thing
62:19 - as we did to this image to every frame
62:21 - and then display the rectangles on every
62:23 - frame and just loop forever until
62:24 - yeah okay so let's do that okay so i'm
62:26 - really interested to see how this one
62:27 - this actually works out okay cool cool
62:29 - yeah um i'm gonna
62:33 - hey what's up caesar caesar in the house
62:35 - hey what's up
62:40 - copy paste it you know oh yeah that's
62:42 - the best best way especially the code
62:44 - guys i always just copy and paste don't
62:45 - ever don't ever create your own code i'm
62:48 - kidding by the way
62:49 - i'm kidding fine so
62:52 - um yeah i'm just taking a peek here so
62:54 - yeah we need a while loop and everything
62:55 - so
62:56 - well i'll type out this one because it's
62:57 - because it's short this is the first
62:58 - line of code i'm actually coding on the
63:00 - stream i copy and pasted everything up
63:01 - to this point
63:03 - okay okay pretty much what we're going
63:05 - to want to do is we're going to want to
63:06 - have a while loop
63:08 - okay not caps supposed to be locked and
63:10 - we just wanted to run forever
63:12 - okay because the video might be if
63:13 - you're driving a car you don't know how
63:15 - long the video is going to be
63:16 - like a real self-driving car so you just
63:17 - want it to run forever and then at some
63:19 - point when the car is turned off or like
63:21 - it reaches its destination you could be
63:22 - like okay turn this to false and then
63:24 - it'll stop reading
63:25 - it'll stop reading um stuff from the
63:27 - camera so we're just this is just going
63:29 - to run forever
63:30 - so that's the first step now within here
63:32 - we want to
63:33 - run this same logic on every frame so
63:36 - again we had an image here but instead
63:37 - of an image we want to get a frame from
63:39 - the video
63:40 - so we're actually not going to read an
63:41 - image we're going to be reading a frame
63:43 - from a video
63:44 - and that's what this thing here is so
63:46 - let's just copy and paste
63:48 - this okay okay
63:51 - uh let's see it's indented properly
63:55 - so the way we do that is okay run
63:58 - forever until car stops or something
64:02 - or crashes okay
64:05 - yeah um yeah there we go
64:12 - until what the car crashes oh i don't
64:13 - get sued by tesla
64:17 - but yeah so there's in in um
64:20 - an open cv uh once we have the video
64:22 - here okay we have
64:23 - it's called video capture so see opencv
64:25 - 2 dot video capture and the name of the
64:28 - the file then you can just uh run this
64:31 - and we can just run read
64:32 - so all this will do is it'll read one
64:34 - frame from the video
64:36 - okay and that's a function part of it's
64:38 - a function part of cv
64:41 - okay interesting okay so once you've got
64:43 - another video capture object
64:45 - here called video then you can call dot
64:47 - read
64:48 - on that video capture object which is
64:50 - just the video so you're just gonna read
64:52 - you're gonna read a single frame from
64:54 - this video okay and then once it reads a
64:56 - single frame it keeps track of it so
64:57 - when it when you call this the second
64:59 - time it gets the second frame
65:00 - when you call this a third time it gets
65:01 - the third frame again
65:03 - through all the groups and that's how
65:04 - this is implemented and uh what it
65:07 - returns is it actually returns two
65:08 - values
65:09 - so the first value is if the read was
65:11 - successful or not
65:12 - it might be might be actually keep this
65:14 - in parentheses
65:15 - yeah if the read was successful or not
65:18 - and then the second
65:19 - the second value is if the frame is the
65:21 - actual frame so like this frame
65:23 - is actually the image which is just
65:24 - going to be the same as this
65:26 - so this frame here is actually what we
65:28 - want instead of in instead of using
65:30 - image and reading an image in
65:31 - we're reading a frame from this video
65:33 - got it got it got it so we got the frame
65:35 - here
65:35 - and then this here is if the frame was
65:37 - read successfully so we definitely want
65:38 - to have good code
65:40 - and make sure that there wasn't errors
65:41 - before we try to display it
65:43 - yeah okay and the way and the way i see
65:44 - it is like this biscuit this video that
65:45 - read
65:46 - basically returns an array which we
65:49 - simply basically map the first
65:50 - portion so no when you call it a tuple a
65:53 - tuple it's called
65:55 - no it's a tuple right it's a tuple yeah
65:58 - a tuple a tuple returns a tuple until we
66:01 - map the first
66:02 - the okay fine fine fine fine fine fine
66:06 - because fine it's tuple because we map
66:08 - the first part of the tuple to here and
66:10 - then the second part of the tuple is
66:11 - going to map to here
66:12 - now we don't actually see this you know
66:14 - but in the background that's actually
66:15 - what happened so i just want to make
66:16 - sure that
66:16 - you guys understand this but yeah
66:18 - anyways let's keep going it's the same
66:19 - thing as here we're unlocking a four
66:21 - pole here
66:23 - i mean it's just a four a four variable
66:25 - two four
66:26 - four a fourth ball i can't even say that
66:29 - probably 100
66:32 - we're unpacking these four variables out
66:33 - of this array same thing we're packing
66:35 - these two values out of this array
66:37 - okay okay okay and this array is a frame
66:39 - which is itself an array
66:40 - it's an image and then this is a boolean
66:43 - yes or no
66:44 - yo is in the house yo what's up all
66:46 - right guys what's up quasi
66:49 - all right so next what you want to do is
66:51 - of course
66:52 - i'll just type this one out what you
66:53 - want to do is you only want to
66:55 - handle this frame if it was successful
66:57 - so you want to make sure
66:58 - you're checking so here we'll call this
67:01 - safe coding
67:04 - use protected you guys um
67:09 - save coding
67:13 - was successful i mean i there's a little
67:15 - option
67:16 - live stream it's like is this video made
67:17 - for kids i was like uh
67:19 - no i turned that i turned that option on
67:22 - hard
67:23 - so if there's any kids here you're not
67:24 - supposed to be here okay you're supposed
67:26 - to
67:26 - um this guy can still
67:29 - still learn it's fine but but yeah so
67:32 - here if if read is successful
67:34 - yeah then you won't operate on this
67:36 - frame okay so i'm just going to copy
67:37 - paste the rest because
67:38 - okay so
67:42 - um so if the read was successful okay
67:45 - only then do you want to continue so
67:46 - then at that point we'll get the frame
67:48 - which is here and then we'll convert the
67:49 - grayscale
67:50 - okay because if you um if you if the
67:53 - frame didn't read
67:54 - correctly okay if this returns false
67:57 - because the frame is broken
67:58 - you can't actually call this on this
68:01 - next step is this needs to be a valid
68:02 - frame for it to be converted to
68:04 - grayscale so if this is an invalid frame
68:06 - because the read
68:06 - like screwed up then you just want to
68:08 - skip this and just break out the loop
68:10 - okay all right just when would it ever
68:14 - be
68:15 - a non invalid frame
68:18 - when the last frame of a video it'll
68:20 - automatically end video by itself
68:22 - automatically
68:23 - okay okay if you air out or if you
68:26 - manually say hey
68:27 - stop this video yeah but wait guys we're
68:29 - completely late guys we're
68:30 - completely kidding about the kids thing
68:32 - if you're a kid it's okay to say a lot
68:34 - of you guys like oh my kid i'm a kid and
68:35 - i'm a kid i'm a kid i'm a kid you know
68:37 - i'm like
68:37 - guys it's okay we're completely joking
68:39 - about this stuff
68:40 - guys i mean it's it's already forgotten
68:44 - at this point
68:44 - yeah yeah welcome kids welcome to woody
68:46 - wonka's chocolate factory oh god
68:49 - all right let's that's let's keep it
68:50 - let's continue
68:52 - um oh man hi mom
68:58 - so where are we at yes gonna break out
68:59 - so once we have the grayscale grayscaled
69:01 - frame here the same idea of
69:03 - an image and black and white we can
69:05 - actually change this to black
69:06 - i'll just keep it grayscale that's the
69:08 - proper term instead of black and white
69:10 - then we have a grayscaled frame from
69:12 - here okay
69:13 - okay and why don't we just um display
69:17 - that
69:17 - so okay let's see it actually um
69:21 - let's comment all of this out
69:24 - because it's gonna it's gonna break
69:26 - something okay okay okay
69:28 - and and let's just
69:32 - this is not going to do anything because
69:34 - it's not displaying anything so we do
69:35 - need the display code again
69:38 - okay remember the display code want to
69:40 - display the current frame
69:42 - um in this case it'll be scaled frame
69:43 - instead of image
69:45 - okay instead of image it'll be
69:46 - grayscaled frame
69:48 - and it'll only get here if the frame was
69:50 - successful remember that you guys
69:51 - because else we break out of this while
69:52 - loop and then we don't even get to this
69:54 - code so it avoids
69:55 - the errors let me ask you a question let
69:57 - me ask you a question we have logan
69:58 - actually asked the question
69:59 - would it be better to would be better to
70:02 - only
70:02 - what would it be better to only use
70:04 - every other frame for speed
70:09 - yeah yeah you could do that of course
70:12 - you would have a little bit lowered
70:13 - um quality you could even lower the
70:15 - resolution of each frame to go even
70:17 - faster because just because the
70:18 - resolution of an image is halved
70:20 - like if this was kind of blurry you as a
70:22 - human could still tell this is a car
70:23 - if it was super blurry you could
70:25 - probably still tell it's kind of like a
70:26 - car you could kind of make it out you're
70:27 - like okay this is a highway
70:29 - and a car so there's many things you can
70:30 - do to speed it up you can down scale it
70:33 - um actually i'll touch on quick if you
70:35 - go to detect multi-scale
70:36 - that's the scale factor actually be like
70:38 - okay blur this image a little bit to
70:40 - make it faster
70:41 - you can like increase factor oh
70:44 - interesting okay that's
70:45 - yeah that was good i think that was
70:46 - that's a good question
70:48 - yeah like if you have 4k footage it's
70:49 - going to be kind of like really hard to
70:51 - run
70:51 - all the algorithms but if you scale it
70:53 - down to like scale 4k down to like 360
70:55 - pixels 360p or 480p
70:57 - it'll be a lot faster and it might still
70:59 - work so
71:00 - that's probably and that's probably what
71:03 - tesla does as well right because they
71:04 - probably scale down the image so that
71:06 - they can process it much faster
71:07 - right because you can't pass it right
71:10 - yeah yeah
71:10 - yeah there's some trade-off between
71:12 - having accuracy with high resolution
71:14 - images and also speed because
71:16 - when you're driving a real car you need
71:17 - to have real like real-time feedback
71:20 - so they go as high as as high as the
71:23 - accuracy can be
71:24 - while keeping it real time because speed
71:26 - is speed and accuracy are both important
71:28 - it's like oh this car is going to hit me
71:29 - and then two hours later
71:31 - you don't turn you know you're still
71:32 - getting forgetting yeah yeah yeah you
71:34 - got to turn
71:35 - like like video yeah just like
71:38 - playing like this guy crashing before
71:41 - remember like
71:42 - like tesla here it sees this and as soon
71:44 - as he comes
71:45 - over he's interesting it's quick it's
71:47 - really cool yeah it's like instantaneous
71:49 - so there's a trade-off of accuracy and
71:51 - speed there yeah yeah
71:52 - okay cool sweet all right sweet moving
71:54 - on
71:56 - so uh from here we're gonna display the
71:58 - gray scaled frame
71:59 - and then of course you need to have um
72:02 - this because
72:02 - this will just uh display for a split
72:05 - second and then disappear so we want it
72:06 - to stay on the frame the current frame
72:08 - and this actually tells us to stay on
72:10 - the frame for one second or one
72:11 - millisecond or something like that
72:12 - okay and then and then it'll loop up and
72:14 - show the second frame it'll
72:16 - read the frame it will if it's
72:18 - successful it'll turn it gray
72:20 - and then it'll display it the gray the
72:22 - gray skilled frame and then it'll wait a
72:23 - second one millisecond and repeat and
72:25 - it'll do this for every single time
72:26 - so this is basically you're not you're
72:28 - not creating a video
72:30 - no no i'm not creating a video okay you
72:33 - are
72:34 - so this is going to be a black and white
72:35 - version of that same video
72:37 - god the video okay okay okay okay i get
72:39 - it i get it okay okay okay
72:40 - okay uh-huh you know what is right no i
72:43 - don't know what blue is
72:44 - is it red all right
72:47 - i have to kill every joke bro like it
72:49 - turns unfunny when you say it
72:52 - anyways hey boom hey look at that
72:56 - oh this is like it's like sped up why is
72:58 - it so sped up because
72:59 - because we changed the grayscale so it
73:01 - can compute it faster
73:04 - oh okay okay okay okay interesting so
73:06 - it's going faster
73:07 - and this is the whole video the video is
73:09 - going and then when the video ends it
73:11 - automatically closes
73:12 - guys do you understand like in trouble
73:14 - cosplay do you understand how this even
73:16 - like displaying that specific video
73:18 - right because like i mean look like drop
73:20 - in the comments below if you understand
73:21 - like the way
73:22 - this is working right the way i
73:24 - understand it personally the way i
73:26 - understand it personally
73:27 - is literally right if we have the way i
73:29 - see it is like yes we have a video
73:30 - right we have a video right here what we
73:32 - literally do after that point
73:34 - is we literally we unpack the video and
73:37 - we go through
73:38 - frame by frame and then we output
73:41 - that frame again to create yet another
73:44 - basically video
73:45 - it's just at this time we added the
73:47 - video simply because
73:49 - we change it to grayscale so every
73:50 - single frame as you guys know every
73:52 - video right is creative
73:53 - it's created with frames right what we
73:56 - do is literally take that frame
73:58 - we convert it to grayscale and then we
73:59 - show it again and again
74:01 - you went from video to another video
74:04 - except
74:04 - this time it is grayscale so i just
74:07 - thought it was really interesting if you
74:08 - know what i'm talking about like
74:09 - drop in the comments below because
74:10 - that's just that's mind-blowing to me
74:11 - you know
74:13 - yeah what he said yeah what i said
74:15 - [Laughter]
74:18 - all right guys so we have the gray
74:20 - skilled images here in a loop and it's
74:21 - properly looping through every frame of
74:23 - the video
74:24 - now all we need to do is run the
74:26 - detection code again
74:27 - and then from there once we have the
74:30 - detection code we can draw the
74:31 - rectangles again on the colored image
74:32 - and then display the colored image the
74:34 - colored frame instead of the grayscale
74:36 - frame
74:36 - and interesting that pretty much does it
74:38 - and then at that point that we also want
74:39 - to introduce pedestrians
74:40 - and use different kinds of videos with
74:42 - both and mix them together but that's
74:43 - the last step
74:44 - so yeah yeah let's go with that next so
74:46 - the next thing is once we have our
74:48 - grayscaled frame
74:49 - we want to run the car classifier on it
74:51 - remember we have our
74:54 - our i don't even have it it's
74:57 - uh i deleted it didn't i what cart
74:59 - tracker
75:00 - so let's get this back okay so let's get
75:03 - our car classifier back
75:05 - and paste it up here once we have the
75:07 - classifier file then you want to feed
75:09 - that into cascade
75:10 - classifier and we have a car tracker now
75:11 - so this is the pre-trained data that we
75:13 - downloaded from this file
75:15 - okay now with this car tracker
75:18 - we can do the same thing we can just go
75:20 - down here and copy paste the code
75:21 - because
75:22 - laziness these types of cars
75:26 - especially i mean yo copy and paste as
75:29 - much as you can because
75:30 - what's the point of typing it out like
75:31 - you want to you're going to make a
75:33 - problem sure
75:33 - like the same time so this is literally
75:35 - cutting the stream length in half and we
75:37 - can fill it up with jokes
75:38 - yeah yeah okay okay okay so now we want
75:41 - to detect all the cars in this current
75:43 - frame
75:44 - so again um we have our car tracker up
75:46 - here
75:47 - auto highlights for us and then again we
75:49 - want to detect
75:51 - all of our cars regardless of the scale
75:53 - of the
75:54 - of the um car match and then what we're
75:57 - feeding in
75:57 - is the grayscaled frame okay because
76:00 - this is the current frame in black and
76:02 - white
76:02 - and black and white is much faster okay
76:04 - okay okay and if any and if you just
76:06 - just so you know guys like
76:08 - when we say frame a frame is simply not
76:09 - only motion a frame is simply just a
76:12 - still image
76:13 - it's just a image from the video right
76:16 - that's why it's able to detect the car
76:17 - so it's not actually moving
76:19 - it's just one image right that's the
76:21 - interesting part about it right we took
76:22 - the image out
76:23 - so yeah let's let's let's keep going and
76:25 - that's how we were able to detect
76:27 - right multiple detect those cards in
76:29 - there
76:30 - hell yeah what he said yeah what i said
76:34 - what he said
76:35 - [Laughter]
76:38 - hey no no no not hitting me
76:41 - let's take it outside okay we'll take it
76:43 - outside next time getting back to l.a
76:45 - i'm after this corona things done i'm
76:46 - back in
77:01 - yeah you can cough at your own pace
77:02 - cough at your own plows you know
77:04 - don't don't cough here don't cough in
77:05 - that way this is the stupidest dream
77:07 - ever
77:08 - but whatever um
77:11 - we paid like two dollars right like
77:12 - people have donated to us i know
77:14 - we made two euros we can go get coffee
77:17 - you can get the dollar coffee for
77:18 - mcdonald's
77:19 - hey let's go let's go anyway so
77:22 - yeah we have the cars here and again
77:24 - remember this is an array of a bunch of
77:26 - different coordinates of the cars
77:27 - so why don't we actually print out um
77:30 - print that out so let's print out cars
77:32 - and each time for each frame you're
77:34 - gonna see a
77:34 - bunch of different stuff print out
77:36 - because every frame there's multiple
77:37 - cars
77:37 - so you're gonna see a bunch of stuff
77:39 - printed on the terminal forever because
77:40 - it's a it's a loop
77:42 - so let's actually run this
77:45 - okay and as you can see
77:49 - wow that's a lot of cars detected in
77:51 - each frame we just haven't drawn them on
77:53 - the
77:54 - video yet you can see them all getting
77:55 - spit out here you know top left point
77:57 - bottom right point the width and the
77:59 - height that's insane
78:00 - obviously the width and the height is
78:02 - always the same that's
78:03 - insane by default and then you get and
78:06 - you can see some of them and you can see
78:07 - some of them don't even have a car
78:09 - yeah some of the yeah they don't have
78:10 - cars correctly but there is no car
78:13 - in that frame and it just skips it and
78:15 - then once it gets to the end
78:17 - um this when there's no frames left this
78:19 - actually becomes false because
78:21 - it can't read anymore so this actually
78:22 - does error out so it actually does get
78:24 - to this break statement on the last
78:25 - frame of the video and that's what
78:27 - you're seeing gotcha
78:28 - happens okay and then and then it gets
78:30 - to the code completed never
78:31 - got it that's why it's good to have this
78:33 - because you can kind of see
78:35 - got it there dope
78:38 - so now last step is just drawing the
78:39 - rectangles on the colored image just the
78:41 - same
78:41 - with the image okay so pretty simple uh
78:44 - we don't need
78:44 - print carbs anymore um
78:48 - and of course on the copper paste master
78:52 - of course two um
78:58 - yeah this one right i think so
79:06 - rectangles
79:09 - there we go so
79:12 - uh pretty much this should work now only
79:15 - only error
79:16 - is that this image is not an image it
79:18 - should be actually
79:20 - uh frame should not be image because
79:22 - we're not doing images anymore we're
79:24 - doing frames so we just pop frame in
79:25 - there
79:26 - so it'll iterate over every single car
79:28 - it finds in each frame
79:29 - and then it'll just draw a rectangle
79:31 - around that car on that current frame
79:33 - again with a red color and a two
79:35 - thickness
79:36 - got it got it
79:40 - so let's just run this and see what
79:41 - happens it's from this big guys ready
79:43 - you guys ready for this
79:44 - you guys ready all right let's see what
79:46 - happens actually okay
79:51 - uh it is not working and oh no oh
79:54 - man oh no oh no bueno this is not good
79:56 - no good it's not good
79:57 - no good no good reason is we are still
80:00 - displaying the grayscale image
80:02 - we actually display the frame because we
80:04 - drew the rectangle on the
80:05 - frame so okay okay little bug there
80:08 - actually you guys see that did you guys
80:09 - get that did you guys get that
80:10 - i hope you did yeah because it was black
80:13 - and like when i ran it i'll run it again
80:15 - okay it was oh okay so now it's working
80:19 - oh hold on hold on you guys are you guys
80:21 - ready you guys ready you're ready for
80:23 - this
80:23 - you ready for this it's black and white
80:25 - no come on
80:27 - cuz when i ran it yep still black and
80:29 - white okay because it says gray skilled
80:30 - frame here but if we're
80:31 - explaining the colored frame which has
80:33 - the squares
80:35 - drawn on it then i can save this and
80:37 - display the frame so let's go
80:40 - um back here this is normal frames right
80:42 - now
80:44 - clear again okay now now we're
80:46 - displaying the colored image
80:48 - with the rectangles drawn on each frame
80:50 - over and over and over again okay
80:53 - because you want to make sure that
80:54 - you're drawing and
80:57 - all right you ready ready hey let's go
81:01 - oh but i mean hey it's not random you
81:04 - can tell that it's more correct than it
81:05 - is incorrect
81:07 - like it's not just random words all over
81:08 - the image it's fairly
81:10 - it's pretty damn accurate like we think
81:11 - about it this is like amazing accuracy
81:13 - that's not nearly good enough for like
81:15 - real world scenarios and cars but you're
81:17 - we're 80 there
81:18 - bro that is insane this is some magic
81:20 - guys seriously like
81:21 - this is some magical stuff how
81:24 - how pumped are you to see this or to
81:26 - even build something like this
81:28 - especially the fact that we just built
81:30 - this like guys we literally just built
81:31 - this in like what and how many and
81:33 - what i mean in an hour an hour and a
81:34 - half and two or maybe holy [ __ ]
81:37 - i mean holy [ __ ] bro chill out guys i
81:40 - only okay i only have i only have one
81:42 - gift to show
81:43 - to show how i think we we feel like
81:46 - right now
81:46 - are you ready ready to see this i'm
81:48 - sorry aaron you don't see this but they
81:50 - will see this
81:50 - so only one only one way
81:54 - only this way oh yeah peace out peace
81:57 - out guys this is how we do it
81:59 - all right let me check this drop in the
82:01 - comments guys for some
82:03 - you'll see it it's going to be a small
82:05 - delay but that's all right
82:10 - who is that you're some random random
82:13 - [ __ ] girl in the crowd that's fine
82:15 - bro this is hilarious
82:17 - logan logan's like this is awesome
82:20 - really this is epic we got logan
82:23 - wow i mean we haven't even gone to
82:26 - pedestrians yet how do we how do we
82:27 - detect pedestrians and cars in the city
82:29 - oh wait so we haven't got the
82:30 - pedestrians yet
82:32 - no not real we haven't even touched that
82:33 - yet we still got to download that
82:35 - classifier and get that running and you
82:36 - have to scan
82:37 - across every frame from both of them
82:39 - yeah so that we can detect pedestrians
82:40 - and cars
82:41 - okay you can also you could train them
82:43 - for anything like you could train
82:45 - to detect nas you know um in videos and
82:48 - stuff if you want
82:48 - to that's important who would want to do
82:50 - that
82:56 - but what i'm going to do is i also want
82:57 - to show you some other videos so i
82:59 - actually have a bunch here
83:00 - okay let's see um i have a couple other
83:03 - videos that i pulled out from youtube
83:04 - this is all from the same video
83:06 - linked in the description there's like
83:07 - it's like within the first three or four
83:09 - all three of these clips are in that
83:10 - video i skipped some of them because it
83:11 - was like dark and rainy
83:13 - and it wasn't performing that well but i
83:15 - mean this is pretty good performance for
83:16 - stuff you downloaded off the internet of
83:18 - course if you trained your own hardcast
83:19 - classifier
83:20 - extensively and you let it run for like
83:22 - three weeks and you traded it
83:24 - then that have really really really good
83:26 - results but these are just ones i just
83:28 - downloaded off the internet
83:29 - like like i said like the car data set
83:31 - this was created by people like caltech
83:33 - the california institute of technology
83:35 - um but these cars all look old so this
83:37 - must have been done in the freaking 80s
83:38 - you know so like this is old data
83:40 - um that we're using but they did use
83:42 - this to train heart their hard cascade
83:43 - but we could go out and take our own
83:45 - thousands of images but i mean i'm not
83:46 - gonna do that sorry guys okay
83:48 - yeah yeah that's too much work that's
83:49 - too much work why why we define the
83:51 - wheel but it's already defined for you
83:52 - you know
83:54 - yeah yeah you know it's like use use a
83:56 - library because it exists
83:57 - but hey we got robert robin donated
84:00 - a hundred i don't know what might that i
84:02 - don't know what money that is 100
84:04 - you're not euro something i don't know
84:05 - how much money that is it's like robin
84:07 - yeah anyways 100 something thank you
84:10 - robin appreciate it
84:14 - what was his name robin robin yeah
84:17 - appreciate that rob
84:18 - yep appreciate that now
84:22 - um let's continue on so the next step
84:25 - would be
84:26 - um oh yeah i was gonna show the other
84:28 - videos so let's just change up this
84:30 - video
84:30 - so this one this one is actually one
84:32 - where um
84:34 - the tesla self-driving car actually can
84:37 - detected and avoided a tumbleweed so it
84:39 - was a huge thing on the road
84:40 - and it actually avoids it so let's run
84:42 - this footage
84:44 - so this happens here okay it's running
84:45 - in color and then boom
84:47 - tumbleweed where and it just dodged it
84:50 - bro you missed it i missed it oh man
84:53 - oh there it is there it is oh dang
84:56 - so that is insane yeah and an actual
85:00 - video the guy's talking and then
85:01 - somebody behind him actually hits it so
85:03 - i don't know but hopefully they're okay
85:04 - but it's just a tumbleweed it'll damage
85:06 - your car but unless they swerve they
85:07 - might cause an accident but if they just
85:09 - hit it it should be
85:11 - fine i hope and uh yep so that's that's
85:14 - another video from that clip
85:16 - and then here's another one i just
85:17 - pulled this off like randomly off the
85:18 - internet i just did tesla
85:20 - dash cam footage and i just found this
85:21 - video and then here this last one
85:24 - um is some highway footage also from
85:26 - that same clip so feel free to go watch
85:27 - that same clip
85:29 - that's insane damn guys how cool is
85:33 - that like how cool is that the fact that
85:36 - we just created a system
85:37 - that you know i mean i would say tesla
85:39 - like i mean obviously it's not perfect
85:41 - right
85:41 - but but the gist of it and that now you
85:43 - understand kind of how it works
85:46 - i want to point that out see how this is
85:47 - constantly saying it's a car because
85:49 - think about that there's a dark window
85:51 - the light bumper the dark shadow so it
85:54 - keeps mistaking this for a car because
85:56 - it has that same profile remember
85:58 - the heart feature of light and dark and
86:01 - light
86:01 - and then light and dark remember yeah
86:04 - from
86:04 - here so this matches these
86:08 - things this thing kind of looks like
86:10 - this because there's a dark window a
86:11 - light bumper and a dark shadow
86:13 - underneath the car
86:14 - see dark window light bumper and a
86:15 - shadow underneath the car
86:17 - so that's why it is it's miss
86:19 - misclassifying this
86:20 - so false that's why it's not a perfect
86:22 - system right it needs a lot more
86:24 - classification basically for this
86:26 - yeah i mean if you ran it super
86:27 - extensively you could you could detect
86:29 - every single car in the single image
86:30 - perfectly but it would take forever to
86:32 - run it wouldn't be running that fast
86:33 - that makes sense that makes sense
86:35 - okay cool and so that's it so these
86:38 - these clips are in the description um
86:40 - you're gonna have to download the
86:41 - youtube video yourself
86:43 - and then trim it trim out the the clips
86:46 - but you can definitely do that and then
86:47 - just name it whatever you want
86:48 - it's an mp4 file so make sure you
86:50 - download the video got it got it got it
86:52 - that's really it so i had those three um
86:55 - examples
86:56 - okay and one thing i did forget the show
86:58 - is
86:59 - uh yeah that's okay it's too late i
87:01 - already showed them the image thing yeah
87:04 - uh with the with that video so what
87:06 - should we do now so what what's the next
87:07 - step aaron
87:09 - well why don't we
87:13 - detect this the thing i started off with
87:15 - the demo where there's cars and
87:16 - pedestrians
87:17 - okay both in the same video i don't know
87:19 - if you guys can hear that
87:21 - but
87:24 - okay but yeah this is the original
87:27 - footage i showed
87:28 - so now we want to actually introduce
87:30 - pedestrians as well all right let's do
87:32 - it bro we got cars next thing is
87:33 - pedestrians then we got cats and dogs
87:36 - no okay we're just going to do
87:37 - pedestrians i think yeah pedestrians so
87:40 - yeah
87:40 - who's popping you could do cats and dogs
87:42 - next time but i mean i think
87:42 - self-driving cars is cooler
87:44 - yeah maybe next time maybe next time but
87:46 - yeah if you're pumped to see that let's
87:47 - get into it
87:48 - actually drop in the comments below too
87:50 - drop the comments below
87:51 - yeah so what we're going to want to do
87:54 - is
87:55 - we are going to want to actually
87:56 - download another
87:58 - um classifier okay okay so we have a
88:00 - card classifier and that's what's doing
88:02 - all the work for our car classifier
88:04 - but we're also going to want a
88:05 - classifier for pedestrians and have both
88:07 - of them running
88:08 - okay okay so how we do that is
88:11 - we're just simply going to download
88:12 - another pedestrian classifier so again
88:14 - the link is in the description
88:15 - this one is actually um supplied to us
88:17 - from opencv by default there is a hard
88:19 - cascade file xml file again
88:21 - called our cascade full body right here
88:23 - on my desktop
88:24 - open this up so it's the same exact
88:27 - thing again it has the
88:28 - all these crazy numbers and it goes on
88:30 - for thousands and thousands of har
88:32 - features
88:33 - um and it filters through all of it but
88:35 - this series of heart features
88:37 - kind of matches up with what a
88:38 - pedestrian would look like whether
88:39 - they're standing or walking
88:41 - or running or whatever or even like on a
88:43 - scooter they would still co they would
88:44 - still be able to
88:46 - detect it yeah yeah so a bunch you can
88:48 - see it goes on forever and it takes
88:49 - forever to train this and actually
88:50 - generate these correct numbers
88:52 - just capturing the relationship in the
88:53 - patterns evil uh
88:55 - aval evil aval is like wow this is
88:58 - amazing
89:00 - wow oh robin robin just donated another
89:04 - 200 i think it's called v dollars i
89:06 - don't know what it's called
89:07 - but another 200 dang i don't know what
89:11 - vlogs are but it sounds like a lot
89:12 - thank you robin appreciate it
89:16 - oh wait actually he actually asked a
89:18 - question he asked a question actually
89:19 - his question was and i can't i can't put
89:21 - up on the screen because i don't have a
89:22 - for example
89:23 - for some reason actually show up on ecam
89:25 - but his question was
89:27 - if a different ide is used well speed
89:30 - and accuracy get impacted and output
89:34 - a different ide yeah no
89:37 - no reason being is this ide is just a
89:40 - code editor it just makes the color it
89:42 - makes the colors nice and makes strings
89:43 - orange it makes comments in green it
89:45 - does all that nice stuff
89:46 - but when you're running code from the
89:47 - terminal it's literally just getting
89:49 - this raw text file this raw python file
89:51 - which is just a text file that has
89:52 - python code in it
89:54 - and then it runs that python code so
89:55 - like i could even open up this python
89:57 - code
89:57 - i could open it in text edit okay got it
90:00 - like this is the code for running in vs
90:02 - code so it doesn't matter what you're
90:04 - using to edit it
90:04 - it's just running this raw text code
90:06 - it's just translating this to
90:08 - ones and zeros that the computer
90:09 - understands so actually what's running
90:11 - all that stuff is literally just this
90:12 - text file this text file is
90:14 - generating all of this this tracking so
90:16 - it's reading the file name
90:18 - getting all the stuff it's making the
90:19 - classifier i mean you kind of can't see
90:22 - but like yeah so to answer yes so to
90:24 - answer your question quickly
90:25 - no will not biscuit would not matter it
90:27 - will not impact any processing or
90:28 - anything like that at all
90:30 - zero yeah yeah zero sweet
90:35 - and um yeah so let's just move on to
90:37 - pedestrians okay
90:38 - so i have a video here a dash cam of
90:40 - dash cam pedestrians which is
90:43 - this video a lot of pedestrians here
90:45 - there's not so many cars because i want
90:46 - to show this first
90:48 - okay okay okay
90:51 - and what we're gonna have to do is we're
90:52 - gonna have to actually get the
90:55 - um pedestrian classifier as well so
90:59 - actually let's just uh grab this
91:03 - okay and paste this here okay
91:06 - so classifier file is car detector
91:09 - relation this should be called
91:10 - car tracker so actually let's change
91:12 - that so it's only popping up here and
91:14 - here
91:15 - but let's change this to car tracker all
91:17 - right okay
91:19 - car tracker so now it's a little bit
91:21 - clear that this is a car tracker
91:24 - and um well actually
91:28 - what we have two different trackers
91:30 - right one is a car tracker and then wait
91:32 - so yeah yeah i uh
91:36 - screwed it up a little bit so we should
91:37 - actually no no this is car tracker down
91:39 - here
91:40 - so this should be car tracker file oops
91:43 - and this should be car tracker file okay
91:45 - okay so ignore this
91:46 - let me just delete it because it might
91:47 - be confusing so let me grow that for now
91:50 - so what i did was i changed this name
91:52 - to car tracker file to be a little bit
91:53 - more descriptive with the name and then
91:55 - again we're just popping this car
91:56 - tracker file
91:57 - into here to get the classic cast fire
91:59 - which create
92:00 - gives us our car tracker now let's
92:02 - repeat these two lines of code but for
92:04 - pedestrians
92:05 - okay so for us it's going to be
92:09 - pedestrian file tracker
92:12 - no pedestrian tracker file equals this
92:15 - okay so it's the same thing as this line
92:17 - but here for pedestrians
92:19 - okay we have a different xml file for
92:20 - cars a different xml file for
92:22 - for pedestrians and let me just comment
92:25 - this again
92:27 - and actually i think it'll be better to
92:29 - keep these together so our
92:31 - our pre-trained cats are pre-trained car
92:34 - and pedestrian
92:38 - classifiers with an s okay so we have
92:40 - both of them here
92:42 - and now we can have our pedestrian
92:45 - tracker
92:46 - so this would actually be this is where
92:49 - we actually well actually i don't even
92:50 - have to do it i can just copy and paste
92:52 - this here
92:52 - the cascade classifier okay
92:56 - so pedestrian track is going to be this
92:58 - i'll just type it out this time
92:59 - so cv2 and cascade
93:03 - classifier and it auto completes for me
93:06 - and then from here
93:07 - then you want to get the pedestrian
93:09 - tracker file and paste that in here
93:11 - so that should make sense we did it once
93:13 - for car car file car tracker now we have
93:16 - pedestrian file and pedestrian tracker
93:19 - all right so we have both
93:22 - now that we have both all we want to do
93:24 - is detect both and every frame and draw
93:26 - rectangles around both in every frame
93:28 - very straightforward so the thing we're
93:30 - going to want to do is
93:32 - um of course for every every
93:35 - frame we want to run the loop we want to
93:37 - read the frame that doesn't change
93:38 - but um and then we create it we change
93:41 - it to grayscale okay that doesn't change
93:42 - either once we have the grayscale image
93:44 - then we want to detect cars and
93:47 - pedestrians
93:48 - okay see that we're only detecting cars
93:51 - right now but
93:52 - we want to detect cars and pedestrians
93:54 - so that would be
93:56 - something like this okay pedestrians
93:58 - equals pedestrian tracker
94:00 - okay pedestrian tracker dot
94:04 - again detect multi-scale because you
94:06 - want to detect pedestrians of all scales
94:07 - in all sizes
94:09 - and we're just going to in the gray
94:11 - scale frame
94:12 - so this is just exactly the same code as
94:14 - for cars we're just using a different
94:16 - classifier
94:16 - okay which means it's going to give us
94:18 - different coordinates different squares
94:20 - of different um of different
94:24 - um which we'll call it what do you mean
94:26 - they have different squares
94:28 - different squares for like pedestrians
94:29 - and stuff like that yeah i get i get it
94:30 - yeah
94:31 - yeah so this is a bunch a list of cars
94:33 - and this is listed pedestrians that's
94:35 - all it is okay
94:36 - yeah okay um
94:40 - so if you guys if you guys yeah so if
94:42 - you guys don't know it's basically yeah
94:43 - we got pedestrians so we're attacking
94:44 - different pedestrians we're using one
94:46 - classifier for pedestrians right
94:47 - and then we're using another cluster for
94:49 - a classifier for cars right
94:51 - and that's that again is detect what
94:54 - that is detected through
94:55 - where through here well i don't think if
94:58 - you can [ __ ] draw but yeah you can
94:59 - see one for car tracker
95:01 - and another one for pedestrian tracker
95:03 - so that is really cool okay all right
95:05 - let's keep going let's keep going
95:07 - yeah and once we have these then we can
95:09 - just repeat the same exact process
95:11 - with the rectangles for drawing the
95:12 - pedestrians that we do for
95:14 - drawing the cars so it's literally the
95:17 - same exact thing
95:18 - i'm just going to draw the pedestrians
95:20 - in yellow instead of red
95:22 - okay and that's really it
95:26 - okay that's it that's it yeah oh man
95:30 - all right so all right okay pasted it
95:32 - the only difference is
95:33 - um for cars you want to iterate through
95:35 - all the cars again for those points then
95:37 - you want to draw
95:38 - on the current frame the current color
95:39 - frame top left point
95:41 - top bottom right of the top left point
95:43 - the bottom right point
95:45 - and make it red with thickness of two
95:48 - now for the pedestrians
95:49 - we want to again we can just reuse the
95:51 - same variables of x y w and h because at
95:53 - this point we're done with them so we
95:54 - can just overwrite them
95:56 - x y w h and pedestrians so again this is
95:59 - a list
96:00 - its own list of pedestrians then we want
96:02 - to draw a rectangle
96:03 - again on the colored frame top left
96:05 - point bottom right point
96:07 - this time we want to do yellow so this
96:08 - is the color for yellow so
96:10 - if um the green and the red are maxed
96:12 - out it becomes yellow i don't know
96:14 - and again guys it's not it's not so much
96:16 - about like you know
96:18 - red green like we simply just pick those
96:20 - colors because you know because why not
96:21 - you just pick the random colors
96:22 - right but you can pick any color you
96:24 - want right that's those zeros
96:27 - yeah this would be white so everything
96:29 - you can pretty much you can pretty much
96:30 - change it to anything you want
96:32 - yeah unimportant detail i mean to be
96:35 - honest
96:35 - in on tesla when they're doing
96:37 - self-driving cars they don't even bother
96:38 - drawing the rectangles around the car
96:40 - because from this point they just know
96:42 - where the car is and the car doesn't
96:44 - need to see it
96:45 - i mean the car already does see the
96:47 - other cars or the pedestrians
96:48 - with this data it doesn't actually need
96:50 - to draw a rectangle no the rectangles
96:52 - are just for humans
96:53 - so yeah on this okay look look look in
96:55 - life logan in the live stream man look
96:57 - at
96:57 - logan appreciate your freaking energy
96:59 - bro logan says like i love this live
97:01 - stream this is so much helpful
97:03 - much nicer way to expose myself to open
97:05 - cv with this
97:06 - then arena communication you know yeah
97:09 - yeah
97:10 - apple apple is like aaron you're
97:12 - crushing it buddy keep it up
97:13 - bro you're crushing it bro what watch
97:16 - our video and our jokes
97:18 - yeah let's just let's just read this
97:20 - through the live stream you know
97:21 - that's all we do that's what we do this
97:24 - is the communication
97:25 - classifier colon colon detect
97:26 - multi-scale detects objects of different
97:29 - sizes of the input image the detected
97:31 - objects are returned as a list of
97:32 - rectangles i mean this is exactly what
97:34 - we're saying
97:34 - right it's just it sounds very nerdy you
97:37 - detect
97:38 - objects in our case cars and pedestrians
97:40 - of different sizes because it's
97:41 - multi-scale
97:42 - okay the input images are framed yeah
97:44 - yeah the detected objects are returned
97:46 - as a list of
97:47 - rectangle points and let me just draw
97:49 - them so
97:50 - that's it all right let's do let's see
97:52 - man i'm so
97:53 - excited to see this let's go we're going
97:55 - to see a bunch of pedestrians because
97:57 - the video we're using
97:58 - okay there is there is a bunch of
98:01 - pedestrians but not many very many cars
98:03 - like i think there's like one car here
98:04 - but
98:05 - all these pedestrians will all get um
98:07 - get identified okay
98:09 - so let's just go for it all right
98:16 - wait did i delete something ready ready
98:18 - where'd you delete oh i deleted the
98:20 - whole loop
98:22 - oops i was like yeah
98:25 - did it not work no no i didn't i deleted
98:28 - a bunch of the code i just typed out and
98:29 - then i didn't even run it yet but
98:30 - i caught myself okay okay okay all right
98:33 - let's just do this nastiness
98:34 - all right let's run the python file so
98:38 - car and pedestrian tracking dot pod
98:41 - and boom oh [ __ ] see it's
98:44 - oh deep down taking the pedestrians
98:47 - guys holy moly
98:51 - hey guys this is a wow okay okay
98:55 - holy [ __ ] wait so wait okay this is just
98:57 - pedestrians right now
98:58 - you guys ready check this out how cool
99:00 - is that how cool is that guys drop that
99:02 - in the comment below
99:03 - that is sweet oh man
99:07 - that is amazing all right so
99:11 - wow is that it that is that
99:15 - that's pretty much it what i want to do
99:17 - is i want to add a little bit of flavor
99:18 - to something
99:19 - and then add a couple other um
99:20 - safekeeping things that we're going to
99:22 - go over
99:22 - all right and then add a little bit of
99:24 - style and then and then run it on some
99:26 - new videos and then that will conclude
99:27 - it
99:28 - pretty much pretty consistent that's
99:30 - that's my face right there guys that
99:32 - that is that this right here is probably
99:33 - your face right now i'm kidding i'm not
99:34 - kidding
99:35 - like like make that face right now and
99:37 - as you're watching the video make that
99:38 - face right now you know the place i'm
99:40 - talking about
99:41 - oh okay with a chance of meatballs is
99:44 - that is that
99:45 - okay yeah exactly um bro didn't you grow
99:48 - up when they came out you were like 12
99:49 - when it came out
99:50 - hey this is still an awesome movie bro
99:53 - yeah who doesn't watch that
99:54 - come on come on man incredibles is
99:56 - better sure come on
99:58 - man what people are like this is what i
100:00 - want to do
100:01 - guys what i want to do is um i don't
100:04 - know about you guys but in the thumbnail
100:05 - of this live stream
100:06 - i had like a little quirky styling thing
100:09 - where for the cars it was red and blue
100:11 - and then for pedestrians it was just
100:12 - yellow
100:13 - so i just want to chuck that in so all i
100:14 - did was i'm just drawing two rectangles
100:16 - here
100:16 - instead just you know for a little bit
100:19 - of flavor
100:20 - and just pop that in so i actually for
100:22 - each car
100:23 - i actually draw two rectangles one red
100:24 - rectangle and one blue rectangle so this
100:26 - is the word
100:27 - what's the reason what's the reason for
100:28 - that i'm just curious just because you
100:29 - want to be fancy
100:30 - yeah i just want to be fancy real quick
100:32 - okay fine i mean so all i did was i just
100:34 - drew rectangle
100:35 - here with the red channel max everything
100:37 - else closed and the blue channel here
100:39 - 255 enclosed but i offset it by one and
100:41 - two pixels a little bit so you can see
100:43 - it changing you know
100:44 - this is like this is completely useless
100:46 - code it's just for a little bit of
100:47 - you know front-end development but when
100:50 - you run it
100:51 - you can see i mean there's not that many
100:52 - cars here but you can see whenever a car
100:54 - pops up there's a little bit of blue as
100:55 - well as oh man
100:58 - a little bit of freaking put that image
101:00 - in the center put the video in the
101:00 - center
101:02 - oh never mind just keep going never mind
101:04 - just keep going you're fine you're fine
101:07 - like that guys how cool is that
101:12 - how cool is that oh you got like
101:15 - okay that that that makes me excited bro
101:17 - honestly all right
101:19 - [ __ ] all right i don't know let's calm
101:21 - down
101:22 - i love this ai stuff i used to i
101:25 - actually guys actually interesting
101:26 - enough i
101:26 - i used to do ai stuff as well for a
101:28 - company but we did we did a yeah so
101:30 - interestingly enough
101:30 - i'll just tell you a really quick story
101:32 - i i did ai for
101:35 - i did ai for um
101:38 - for actually detecting signatures
101:40 - detecting fake signatures
101:42 - so we used a similar we also used lpnc
101:44 - as well and we detected if signatures
101:46 - were fake
101:47 - or they were real and we had i'm not
101:49 - kidding we had signatures from like
101:50 - thousands and thousands of like images
101:53 - and we would be able to detect like if
101:54 - the images was like real or not by the
101:56 - way
101:56 - i don't really know robin robin
101:58 - seriously holy moly
102:00 - thanks again donated 400 400
102:03 - v v something v dollars i don't even
102:06 - know
102:06 - i don't know robin you're the best thank
102:08 - you appreciate it
102:09 - what was appreciating donations you know
102:12 - oh man
102:13 - yeah yeah but anyways fire yeah that
102:16 - wasn't a fire he's like
102:17 - robin's like yo let's go we just hit the
102:20 - goal
102:21 - [Laughter]
102:23 - all right we're almost done you guys
102:24 - just a couple more things and we can run
102:26 - on some extra videos and then we can
102:27 - just let it run
102:28 - and yeah that'll complete the app you
102:31 - guys
102:32 - yeah so uh last things i want to do are
102:35 - actually um when you're running the the
102:38 - video
102:38 - i want to be able to actually quit the
102:40 - the window
102:42 - um with the key so guys there's a robin
102:44 - donated right there i appreciate it bro
102:46 - right there you guys can see it yeah
102:48 - there we go
102:49 - hey all right let's continue on by the
102:52 - way i don't see you
102:53 - do i see you no i don't see you
102:57 - oh there we go there now i see you there
102:59 - you are now there you go
103:00 - all right am i good no you're good
103:02 - you're good keep going keep going okay
103:04 - got it yeah so here on the code i'm just
103:06 - gonna copy and paste in a little
103:08 - um housekeeping here so if the q key is
103:11 - pressed
103:12 - q for quit then i want to break out of
103:14 - this loop which means it'll
103:16 - abort the uh video stream
103:19 - like whenever you type that key so the
103:22 - key for a lowercase q and uppercase q
103:23 - are 81 and 113.
103:25 - you can learn look that up online every
103:27 - letter and every keyboard
103:29 - button has its own number and you can
103:30 - just find it with a google search you
103:32 - just be like lowercase q and uppercase q
103:33 - what are the numbers
103:34 - you just put that in and um once you
103:38 - have these numbers then if either of
103:39 - those are pressed if key equals
103:41 - um that or that then it will just break
103:43 - out and we'll just stop okay
103:44 - and the key is automatically whatever
103:46 - you press from wait key because
103:48 - it's waiting for a key you see what i
103:49 - mean and so if it's waiting for a key
103:52 - and you press q automatically it goes to
103:53 - the next one and then
103:55 - key becomes q and it'll it'll match
103:58 - and that's really it cool okay last
104:00 - thing is you want to release the video
104:01 - capture
104:03 - so wait what is the release why release
104:05 - what
104:06 - so um video here our video is the video
104:10 - capture object
104:11 - that we got from our video file all
104:13 - right and it's it's constantly reading a
104:15 - file
104:16 - okay and so video is constantly reading
104:19 - a file
104:19 - so when we're done doing it we just want
104:21 - to release reading of the file so it's
104:22 - just like
104:23 - so it's like it's like it's like okay
104:24 - stream of data coming in
104:26 - it's like you stop basically stopping
104:27 - the file you're good that's insane
104:30 - yeah okay it says we're done reading
104:31 - this file just release all resources
104:34 - from trying to read this file so we're
104:35 - done okay that's really it's just a
104:37 - clean up like a memory management thing
104:38 - yeah yeah and that's really it you guys
104:42 - um good i don't think i missed it
104:54 - i'm excited to see some videos bro let's
104:56 - do it yeah let's
104:58 - go here and let's run it again
105:02 - oh your name is ready hey guys
105:07 - oh there is an error here it says key is
105:09 - not defined because
105:10 - you guys know what the key is you guys
105:12 - know what the problem is drop in the
105:13 - comment below you guys huh
105:14 - i think i know i know what it is do you
105:16 - know aaron
105:18 - yep of course i do not
105:22 - are you sure you do i'm not sure i'm not
105:23 - sure about that so
105:25 - yeah the problem is that this key
105:26 - variable doesn't actually exist
105:28 - and the problem for that the reason for
105:30 - that is we didn't actually set that
105:31 - equal to here so this
105:33 - does wait for a key to be pressed but it
105:34 - never captures that so we got to capture
105:36 - it in key
105:37 - and now when key is pressed then it
105:39 - should work okay
105:41 - back here let's just clear this out so
105:43 - it's nice and clean
105:45 - run it again and there we go
105:48 - so it's going hey okay if i press the
105:52 - q key it should quit quit sweet okay
105:55 - cool cool cool all right
105:59 - damn guys this is crazy guys this is
106:02 - amazing holy [ __ ]
106:03 - like we just created a system that
106:06 - detects pedestrians and cars
106:08 - within you know an hour two hours
106:12 - with some training data that's it then
106:13 - we didn't create
106:15 - we just bought it we did we borrowed it
106:17 - yeah we bought i mean okay
106:18 - you can download all this off the
106:19 - internet like you can download xml files
106:22 - for anything you probably download xml
106:23 - file for a cat for a dog
106:25 - for a water bottle for a football um or
106:29 - anything
106:30 - you can download somebody else probably
106:31 - somewhere on the planet has
106:33 - trained a hard cascade file for you
106:35 - somewhere and uploaded it somewhere you
106:37 - can probably download it and you could
106:38 - probably use it
106:39 - and do a very similar thing depending on
106:40 - how well they trained it
106:42 - and of course you can train your own too
106:44 - if you want to go that route i'm sure
106:46 - that exists on google how to do that but
106:47 - that's a much longer process you have to
106:49 - find all your own data
106:51 - yeah cool cool your own images guys so
106:53 - let's
106:54 - let's give you some more videos what has
106:55 - we got yeah so we have
106:58 - a couple more all right um
107:04 - so that was just that was that was like
107:05 - a pedestrian heavy let's run it again
107:07 - this was a very pedestrian heavy video
107:09 - okay lots of pedestrians so what do you
107:12 - guys see
107:12 - what do you guys see you guys see just a
107:13 - lot of pedestrians walking right and
107:15 - it's able to detect those systems
107:16 - and if you think about it right what
107:18 - would a system do you can now
107:20 - since you cannot detect something you
107:22 - basically can now tell a system hey
107:23 - you know if you detected it stop stop
107:25 - the car or hey
107:26 - you know stop anything you want so
107:28 - that's kind of why this stuff works
107:29 - really well you know what i mean
107:31 - yup
107:35 - so let's just do this okay so another
107:38 - another video file i have is dash cam
107:39 - cards and pedestrians because it has a
107:41 - little bit more mix of both
107:43 - this is actually the video file that i
107:45 - um showed you at the beginning okay so
107:47 - how long is this video
107:51 - all right okay that's a different video
107:53 - it's like four minutes long
107:54 - all right um so let's go and let's just
107:57 - let it run
107:58 - so this is the video i showed you at the
107:59 - beginning oh
108:01 - man that's cool damn guys give us some
108:04 - fire in the comments guys
108:08 - that is cool all right look at this
108:09 - guy's walking
108:11 - what is that you see how it's able to
108:12 - detect that like little pothole at the
108:14 - bottom i thought that was interesting
108:16 - yeah it's not perfect but yeah of course
108:19 - it's better than
108:21 - nothing better than random much better
108:23 - than regular
108:26 - and there we go you guys if you can see
108:28 - it looks a little bit slower because
108:29 - it's doing double compute power
108:31 - yeah yeah you see so you can think about
108:33 - it for tesla like a real self-driving
108:35 - car
108:35 - think about it it has to detect
108:37 - pedestrians it has to detect cars
108:39 - it has to detect signs all different
108:41 - kinds of signs speed limits stop signs
108:43 - has to take traffic lights
108:45 - has to detect different night time and
108:47 - daytime things
108:48 - have to detect um rainy conditions and
108:50 - non-rated conditions
108:51 - it has to actually send those values to
108:54 - the car to break or turn accordingly
108:55 - there's so much going on
108:56 - so this is just scraping the surface
108:58 - this is pretty cool but this is just the
108:59 - very very surface of what actually
109:01 - of what's actually going on i mean in
109:03 - general honestly in general it's like
109:04 - it's it's crazy right because the amount
109:06 - of data that it has to process
109:08 - right in terms of pixels right in terms
109:10 - of in terms of how fast it has to do it
109:12 - as well
109:13 - it's insane but you can see what's real
109:15 - like i think guys what's really
109:17 - interesting and hold on actually no
109:18 - let's let's keep watching the video as
109:20 - you guys can see right the really
109:21 - interesting part is like the fact that
109:24 - the relationship part is like all we
109:26 - simply did is
109:27 - if we would divide a problem right into
109:30 - different little into
109:32 - certain little parts right into into
109:33 - small little parts right which is how do
109:35 - we divide this up like
109:36 - drop in the comments below how do we
109:38 - divide up this huge problem which is
109:39 - we wanted to detect right we want to
109:41 - detect like
109:43 - you know pedestrians and cars in the
109:44 - video
109:46 - how do we divide that well first is we
109:49 - found a lot of training data that's part
109:50 - one
109:51 - right two right we basically we first
109:54 - did training we trained uh we first did
109:57 - testing
109:58 - on the pictures individual individual
110:00 - pictures right
110:01 - individual pictures and then what
110:03 - happened is once we got the pictures
110:05 - right we were able to bring in a video
110:08 - we were able to take certain pictures
110:10 - right every single frame
110:12 - from that video and the next thing you
110:15 - know
110:15 - we're able to display it back to the
110:17 - user so but if i'm
110:18 - dividing this up into three or four
110:21 - different parts
110:22 - you literally just able are able to
110:24 - solve this humongous
110:26 - issue not an issue but this this crazy
110:28 - epic
110:29 - you know thing in an hour or two
110:34 - do you guys see that yeah just drop that
110:36 - in the comment below if you agree with
110:37 - me like seriously because that is to me
110:39 - is insane
110:40 - you know a lot of people think that this
110:41 - is this is crazy stuff but you know
110:43 - honestly you just you know just some
110:45 - work and you're good
110:47 - am i right yeah man look at it go
110:51 - go there i think it's slow motion yeah
110:53 - yeah
110:54 - i mean it's detecting that sign wrong
110:56 - but it's getting the girl it's getting
110:57 - some of the cars in the back yeah yeah
110:58 - right there right there
110:59 - screens a little bit yeah yeah
111:02 - there's ways to optimize this you can be
111:04 - like okay if there's like two if there's
111:06 - two
111:07 - um rectangles in the general same area
111:09 - twice in a row you can kind of be like
111:11 - okay there's a higher chance this
111:12 - actually is a pedestrian it's not just a
111:14 - random
111:14 - thing a random detection so hold on i
111:17 - want to ask you a question so
111:18 - somebody asked a question actually
111:19 - george asked the question how can i get
111:21 - this
111:22 - source code uh if i can take a look at
111:25 - it please so i can take a look at it
111:26 - uh i'll post it in the in the
111:28 - description i'll like upload it to like
111:30 - a riplet or something or
111:31 - it then you can download the code if you
111:34 - didn't type it out yourself with us
111:37 - yeah granted it won't work in riplet
111:38 - like you're gonna have to download
111:40 - opencv
111:41 - the opencv package within riplet itself
111:43 - and run it there
111:44 - but you can just get the i'm just gonna
111:45 - post it there for like code reasons and
111:47 - you can just copy paste it to your own
111:48 - visual studio code
111:49 - yeah wait but can we just put host on
111:51 - github or no
111:53 - you could do that too yeah right
111:56 - that's it yeah either or github's
111:58 - probably the proper way to do it but
112:00 - riplet fanboy so yeah we'll post it to
112:03 - github how's that
112:04 - that's the proper way to do it post the
112:06 - game you can download the code from
112:07 - there
112:08 - exactly exactly exactly so guys how sick
112:11 - was this
112:12 - how sick was that to create such an
112:15 - insane
112:16 - python tutorial such as saying python
112:18 - program
112:19 - aaron i think it's pretty dope i'm just
112:23 - like admiring the the work about other
112:25 - people admiring your work
112:27 - okay don't get too cocky bro don't get
112:28 - too cocky on this you know it's just
112:30 - like you know i said i'm admiring the
112:31 - work that other people have done bro
112:32 - that's the opportunity
112:33 - okay okay okay i thought i said admiring
112:35 - my work you know
112:37 - open your ears i mean what i wrote like
112:38 - 20 lines of code it's pretty badass but
112:40 - i mean
112:41 - you know yeah yeah i didn't do all the
112:44 - training the training that's the hardest
112:45 - part
112:46 - yeah yeah but that that to me is insane
112:48 - so yeah but awesome job guys
112:50 - guys give aaron a give aaron a round of
112:52 - applause in the comments
112:53 - right he worked on this for all of us i
112:56 - was
112:57 - you know i was partially involved in the
112:58 - code i was just like you know okay
113:00 - look at this wow holy crap he's getting
113:03 - these
113:04 - pedestrians super accurately it's like
113:07 - stop stop stop stop you know there's
113:08 - pedestrians in front
113:09 - yeah yeah yeah and then the bigger the
113:13 - bigger the rectangle the closer it is
113:14 - you know you can do stuff like that like
113:16 - if there's a big rectangle you can tell
113:17 - that the thing is close to you
113:18 - yeah yeah look at that that's insane
113:20 - that's cool
113:23 - that is so cool okay this one's not
113:25 - working at all
113:26 - this one's terrible it's like it's like
113:28 - i think it's just too many people man
113:30 - probably yeah there's too much
113:32 - information confused with crowds and
113:33 - stuff
113:34 - yeah if you had just people walking like
113:36 - on a white sand beach just a single
113:38 - person walking it would track it almost
113:39 - perfectly but just because there's so
113:41 - much noise and stuff
113:42 - it's not quite perfect yeah yeah
113:46 - but dude this this motorcycle driver is
113:48 - like freaking
113:50 - he's trying to run people over you know
113:52 - people are like
113:54 - how are you going his name is royal
113:56 - jordanian
113:57 - so maybe yeah something yeah i mean i
113:59 - never i found him this morning because
114:01 - i needed this video but he feels like 2
114:03 - million subs it's ridiculous
114:04 - oh wow for riding his motorcycle he just
114:08 - rides his motorcycle and he records it
114:09 - is that it
114:10 - i guess so i mean he probably talks
114:12 - about his motorcycle and stuff too i
114:13 - don't i didn't really look at his
114:14 - channel
114:15 - evil evil evil is like evil evil i'm not
114:18 - i don't know how to say that evil was
114:19 - like
114:20 - aaron do a project with me
114:23 - whoa look at this truck i got that truck
114:25 - hard did you hear me
114:26 - did you hear me everyone yo it's getting
114:28 - it's getting the the cars in the
114:30 - advertisement that's funny
114:31 - where all the up top yeah
114:34 - are those even cars oh they're not even
114:36 - cars i don't know their cars
114:38 - yeah i mean guys obviously it's not
114:39 - perfect right this is not perfect
114:42 - yeah but still it's insane it's more
114:45 - right than it is wrong
114:47 - yeah that's that's a monumental task
114:51 - yeah hey guys let me ask you a question
114:53 - like what else
114:54 - let me say question what else would you
114:56 - like us to see like what else would you
114:58 - like us to do in terms of
114:59 - you know ai or face detection anything
115:02 - that you want us to do like let us know
115:04 - the
115:04 - drop it in the comments below right
115:05 - because we read your comments right so
115:07 - we have
115:08 - great ideas for you know what to come
115:09 - next before we have great ideas of what
115:11 - you guys
115:12 - want from us right we read those
115:13 - comments i am not kidding
115:15 - so if you got any suggestions right if
115:17 - you got any suggestions on what to do
115:19 - yeah just drop in the comments below
115:21 - we'll take a look at it
115:22 - and then aaron is just going to take a
115:24 - crack at it you know and then create
115:25 - something amazing right there
115:28 - am i amazing bro i mean you know just
115:31 - whip it up yes i'm amazing
115:33 - like one-fourth amazing one-fourth
115:35 - amazing
115:36 - yep and boom cool projects
115:39 - any cool ideas you guys have for
115:41 - projects going forward related to
115:42 - python and any kind of artificial
115:44 - intelligence then drop it in the
115:46 - comments too then we can consider it
115:47 - maybe we'll make something
115:48 - maybe we'll use opencv again maybe we'll
115:50 - use something else or else
115:52 - something else something somebody said
115:54 - so we have said
115:55 - idol said idols idol said to detect
115:58 - numbers
115:59 - okay we could do that actually detecting
116:01 - numbers like one two yeah you could you
116:02 - could detect
116:03 - you could yeah you could detect um
116:06 - numbers on a page like if you had a
116:07 - piece of paper
116:08 - okay you had opencv you could you could
116:10 - technically um scan that and then find
116:12 - out
116:13 - like all of the places where there's
116:14 - words like that's actually how pdfs
116:16 - are able to like scan the numbers and
116:19 - letters in it and like auto populate all
116:20 - the numbers in
116:21 - the numbers and letters is through scan
116:24 - it doesn't use i don't think it uses
116:25 - hard cascades it uses something
116:27 - different
116:28 - but um yeah same principle you can
116:30 - detect different letters and shapes on a
116:32 - piece of paper
116:32 - same exact principle what about somebody
116:35 - said
116:36 - somebody said sprush sparsh sparsh
116:39 - asked uh age detection i'm not sure if
116:41 - we can do that
116:42 - that that's a little bit harder
116:43 - protection yeah i mean in theory it's
116:45 - possible like if you had
116:47 - if you had like facial recognition you
116:48 - know how facebook can can recognize your
116:50 - face and be like oh this is
116:52 - causey this is nas this is area tag your
116:55 - friend automatically
116:56 - if it can recognize an actual
116:57 - independent face it can easily recognize
116:59 - old versus young
117:01 - um so yeah you could but you would take
117:04 - more training you would need you would
117:05 - need a lot of
117:06 - picture of old people and a lot of
117:07 - picture pictures of a lot of young
117:09 - people
117:10 - and to distinguish between those yeah
117:12 - that's true but
117:13 - i think it's like when you get to like
117:15 - you know when you're 20s or 30s it's
117:16 - really hard to get the exact age like
117:18 - if it can get an exact age it could be
117:20 - like it could be like old
117:22 - middle-aged child infant you could just
117:23 - split it into four groups you know
117:25 - infant yeah kid middle-aged adult
117:28 - and yeah elder senior citizen you could
117:30 - have like those four that's close that's
117:31 - true
117:32 - so guys if you want us to do like an age
117:33 - detection system that would be actually
117:35 - interesting
117:36 - i'm gonna make it an age-attacked air
117:37 - and they'll probably say like 50 you
117:38 - know or something
117:39 - yeah the thing with that is i don't know
117:40 - if that exists on the internet we might
117:41 - have to train our own
117:43 - hard cascades and there's other
117:44 - algorithms hardcast i'm sure there is
117:46 - the algorithm used for this
117:47 - um but maybe we had we had someone say
117:50 - hold on
117:50 - it's it zak said face expression
117:53 - detection
117:54 - oh like like smile sad like
117:58 - mad you know be like no man i'm like you
118:01 - smile you know
118:02 - yeah we could do a smile detection or
118:04 - smile the thing i'd be interested
118:05 - it's like smiling or not smiling because
118:08 - let's just keep it simple
118:10 - smiling versus not smiling faces
118:13 - you could have like a little people you
118:14 - could say like smile on top yeah that's
118:16 - not a bad idea we can look into it so
118:18 - guys anything else would you want us to
118:21 - create a face expression
118:22 - system a smile detector a smile will
118:25 - find a small detector system
118:26 - yeah you know because because that way
118:27 - if you guys don't smile you know we
118:28 - could i don't know we detect some points
118:30 - you know
118:33 - you like points for me i don't know i
118:34 - don't know how but we did we would
118:35 - detect deduct points
118:36 - if you guys would smile so yeah sweet i
118:39 - think that's pretty much it bro right
118:41 - we're good yeah that's it so again if
118:44 - you guys are interested in coding more
118:46 - and actually making a living from it if
118:47 - you're not currently doing that if
118:49 - you're
118:50 - uber driver working at a retail or fast
118:52 - food place or something like that
118:53 - yup um we offer courses here at
118:56 - cleverprogrammer to help you learn how
118:57 - to do that so
118:58 - we teach you a bunch of different
118:59 - projects in python
119:01 - and how to actually monetize those
119:03 - skills so there's a 15-week program
119:06 - um hosted by uh qazi
119:09 - and um our other python expert jacob
119:12 - yep and then also there's a little bit
119:14 - of me in there we're gonna add in
119:16 - um some stuff in there at some point and
119:19 - uh we all teach python and how to
119:20 - actually use python to make a living
119:22 - from it
119:23 - so if you're interested in that then
119:24 - definitely give it a click in the
119:25 - description there's a
119:26 - free three-part master class and also um
119:29 - the actual course is there so you can
119:30 - check out both
119:31 - um if not then yeah just keep watching
119:33 - us on youtube and thanks for watching
119:34 - you guys
119:35 - yeah sweet guys and i just want to say
119:37 - guys is it just one one small thing guys
119:39 - if you're interested like i said with
119:41 - the profit with python you get amazing
119:42 - success coaches you get you know you get
119:44 - to learn how to make a live
119:45 - a killing with python right so it's not
119:47 - just about teaching you skills right but
119:49 - it's also teaching you about how to
119:50 - actually make
119:51 - money from that because that's the most
119:52 - important thing that you know you're
119:53 - going to get from a course
119:54 - right we get weekly training calls
119:57 - literally
119:58 - every single week you get a coaching
119:59 - call from a developer who knows his
120:02 - stuff
120:03 - right you have an amazing community who
120:04 - loves each other and you have an amazing
120:06 - facebook community at the same time
120:08 - so yeah if you're interested in you know
120:10 - becoming a python developer or learning
120:11 - python
120:12 - and just making a killing with python
120:14 - where do they go aaron
120:17 - they can go to the link in the
120:19 - description and take it out there
120:21 - profit with python profit on course
120:25 - and then there's also a free three-part
120:27 - master class it gives you a little bit
120:29 - more information about making money as a
120:30 - python developer
120:31 - you can check that out it's just about
120:33 - like the opportunity there is and stuff
120:34 - and
120:35 - there's some activities in there you can
120:36 - check it out and then you can join the
120:38 - course after if you want or something
120:40 - like that
120:40 - but exactly yep that options there for
120:42 - those who are interested
120:43 - for those who are not um yeah come back
120:46 - for the small detector next
120:47 - yeah the small detector all right guys
120:50 - awesome guys
120:51 - this was amazing this was so much fun
120:53 - guys oh hold on
120:54 - something evil said my heart my evil
120:56 - says my heart is
120:57 - python my heart is played my heart is
121:01 - python yes
121:02 - what about javascript bro what about
121:04 - javascript
121:05 - javascript cool too you guys you guys
121:07 - you guys are not you know
121:08 - not cool anyways but sweet
121:11 - awesome guys in that case i think we're
121:13 - done here hope you guys
121:15 - have a great day if you guys have well i
121:17 - don't know i hope you guys have a great
121:18 - day
121:19 - and other than that we will see you
121:22 - in the next video right aaron
121:26 - yep next time yeah probably probably
121:28 - tomorrow right
121:29 - yeah probably tomorrow schedule for
121:30 - tomorrow yeah i think so awesome guys
121:33 - stay tuned
121:34 - stay tuned and have a great day guys
121:36 - let's go