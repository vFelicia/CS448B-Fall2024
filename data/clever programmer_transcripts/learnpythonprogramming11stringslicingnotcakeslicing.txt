00:00 - - There my beautiful children,
00:01 - in this video we're gonna
talk about string slicing.
00:04 - What is string slicing?
00:06 - We're not talking about cake
slicing, so let's get started.
00:09 - Well a string as you remember
00:11 - was that thing in the green here,
00:13 - but that's just really specific
00:15 - to the IDE that we're using,
00:17 - if you're using any other text
editor it's not necessarily
00:19 - gonna be green.
00:20 - So the string is just something in quotes.
00:22 - Either it's single quotes or double quotes
00:24 - as long as it's consistent,
00:27 - Can't have a single quote
ending with a double quote.
00:30 - They gotta match.
00:32 - Okay.
00:34 - So we have to match with the quotes,
00:37 - that's your string, right.
00:39 - So what we want to do now
is slice those strings.
00:43 - Well, what does that mean?
00:46 - Imagine I gave you an email address.
00:48 - Email is equal to, I don't know,
00:52 - rafeh at gmail dot com,
00:56 - something like that.
00:57 - Well, a common thing that
people have to do when they
01:00 - are getting this data back is,
01:03 - well, this is the username or something,
01:08 - this part is the gmail thing,
01:13 - and then this is the dot com part, right.
01:16 - So like, let's say we just
want the domain or whatever,
01:19 - and here we simply want like the username.
01:22 - So how would we do that?
01:24 - Well, we can use a little
bit of string slicing.
01:27 - So let's just start with a simple example.
01:29 - Let's take hello, and let's
say we want to get the first
01:32 - Let's take hello, and let's
say we want to get the first
01:35 - letter from hello, we
wanna get just the H.
01:38 - Well, how you do it is you
index by opening a bracket,
01:42 - and closing a square bracket.
01:44 - And if I do zero, it'll get me
01:48 - the first letter of that, okay.
01:51 - So H in this case is zero, right.
01:53 - So H in this case is zero, right.
01:55 - The E is one, in Python most
of the things start from zero.
01:59 - So we go all the way up to this O here,
02:02 - which is a four, okay.
02:07 - So we take this hello and
02:12 - whoops
02:13 - let's take this hello
and let's simply do a 1,
02:16 - let's take this hello
and let's simply do a 1,
02:19 - and that'll give me the E, okay.
02:21 - Now another thing I want to
show you guys in string slicing,
02:24 - besides doing, okay that index,
02:27 - right, this passing in the index one,
02:31 - will give me the second letter.
02:32 - What if we want to do something cooler
02:33 - like get a chunk of code?
02:36 - Well, how indexing works
is it's start, colon stop.
02:39 - Well, how indexing works
is it's start, colon stop.
02:43 - Okay, colon stop.
02:46 - So what you can do is you can say hello.
02:49 - Oh, I keep doing that.
02:51 - Hello, and you can say start
from zero, and end at two.
02:54 - Hello, and you can say start
from zero, and end at two.
02:57 - Not including two, but end at two.
03:01 - So include zero, but
don't include the two.
03:04 - Which means that you really
get the zeroth str um
03:07 - zeroth index
03:09 - and the first index.
03:11 - Right, so whatever the letter
is at the zeroth index,
03:13 - and whatever the letter
is at the first index.
03:16 - So in this case we'll get an H E, okay.
03:21 - How you can read this is just,
03:22 - give me the first two
letters, that's how I read it.
03:25 - So you can just say give
me the first two letters.
03:28 - Now when you're starting off from zero,
03:30 - by default index starts at zero.
03:33 - So if you don't actually say this at all,
03:35 - and you just remove the zero,
03:36 - you're gonna get back H E, okay.
03:41 - Everything that I'm showing you guys here,
03:44 - play around with it, okay?
03:45 - Don't just sit here and watch my videos.
03:48 - I don't want you to be a passive learner,
03:49 - please, please actively do this with me.
03:52 - please, please actively do this with me.
03:55 - Or pause my video and do this.
03:56 - I want you to spend more time doing
03:58 - and less time looking at it, okay.
04:00 - Because it seems really simple
when you're watching it,
04:03 - but if you don't put it
into action and do things
04:05 - that make sense to you,
04:07 - if you don't turn it into a
game for yourself where you're
04:10 - doing something, you know like
04:11 - you making fun little stupid projects,
04:14 - using what I'm showing you,
04:17 - you're not gonna be able to remember it.
04:19 - That's really what my
problem with Codecademy is,
04:22 - a lot of people go through Codecademy,
04:24 - but the problem that
ends up happening is that
04:27 - they just go through it
at a really fast pace
04:30 - and they don't really have much
04:31 - projects that they get to do there,
04:33 - and not a lot of stuff that
they get to do on their own,
04:36 - so the most common complaint
you hear from people
04:39 - who take the Codecademy
course will be like,
04:41 - "It was great, I took the whole thing!"
04:42 - But, yeah, right now, I can't
write a single line of code,
04:46 - okay, so it's not impressive the higher
04:49 - you are in really abstract levels
04:51 - introduction to classes,
04:52 - "Oh yeah, I know all about function,
04:54 - I'm in introduction to classes."
04:55 - Write a function.
04:57 - Write a function that
takes in three inputs
04:58 - and does dadada, print
something out and sort in order.
05:02 - "Pfft, I don't know how to
do that, I'm totally lost."
05:05 - Right.
05:06 - Don't be one of those people,
05:07 - make sure you build strong fundamentals,
05:09 - and your coding level is
functional at all times, right.
05:13 - So even if I'm teaching
you really basic stuff,
05:15 - make sure you can do something with it.
05:17 - That's the only way you'll get better
05:19 - and make sure you have fun while doing it.
05:21 - Anyway, let's get back to it.
05:22 - So, hello, right.
05:26 - Make up your own strings and break them up
05:28 - and see what you can make up
from what I have shown you here
05:31 - and experiment, what if I change the end,
05:35 - what if I change the stop part of it,
05:37 - and what if I change the start part of it,
05:39 - what if I don't put anything
in the stop part, what happens?
05:41 - So let's try that.
05:42 - So hello and let's put in
nothing, for both parts,
05:46 - So hello and let's put in
nothing, for both parts,
05:48 - let's see what happens.
05:49 - You just get the whole string, by default,
05:52 - it starts from zero and by default
05:53 - it ends at the last index.
05:57 - Okay, so, it's the same
thing as saying zero
06:01 - to if you count it up, zero,
one, two, three, four, right?
06:05 - to if you count it up, zero,
one, two, three, four, right?
06:06 - O is four, so I'll say four
here, that will not give me it
06:07 - O is four, so I'll say four
here, that will not give me it
06:10 - I have to say five.
06:13 - Right, because it will
not include the four,
06:16 - if I say four in will go up
to but won't include the four.
06:19 - For example,
06:21 - see?
06:22 - So we have to do five, okay?
06:26 - So that helps us get to
the end of the string.
06:30 - Now what if I wanna get
the last letter from hello?
06:33 - Or anything, if I wanna
get the last letter,
06:36 - I can do something like this.
06:39 - Negative.
06:41 - Okay, I can also slice
by a negative number.
06:45 - So if I wanna get hell from hello,
06:47 - I can do hello and I can say go from zero
06:50 - I can do hello and I can say go from zero
06:55 - and let's try see what happens
if I put negative one here.
07:00 - Right?
07:01 - So another way I.
07:02 - Basically, what I'm saying is,
07:04 - start from the zeroth part go up to
07:09 - the last part but not
including the last part,
07:12 - so that gave me hell.
07:14 - Another way to write it is
by putting a four here, okay.
07:17 - Another way to write it is
by putting a four here, okay.
07:21 - Another way to write it
is not having a zero here.
07:23 - Another way to write this
is not having a zero here.
07:26 - That all gives you hell.
07:27 - So you see, play around with all those.
07:29 - I'm gonna now show you another thing
07:32 - that you can slice with and
that'll also blow your mind.
07:36 - Slicing is very important,
it's a very common procedure,
07:40 - so it's pretty go to learn it because,
07:42 - let's say you are trying to make an app
07:45 - which goes on craigslist and pulls
07:47 - a lot of data from craigslist,
07:49 - so like pull up ads, so that ads, like
07:51 - you might get the data
back in a string form.
07:54 - So you might get something like,
07:56 - XBOX 360 pricing is,
08:02 - it's price is $10 and
08:05 - that's stupid, it's not $10, right,
08:07 - you might get it for $150 nowadays,
08:11 - 2016 the value of it has
significantly dropped,
08:15 - and then let's say it
says the condition type,
08:18 - so the condition type is new, right.
08:22 - So this is the
08:26 - data that you'd get from craigslist.
08:28 - Well, if you were writing
up script or python code
08:31 - Well, if you were writing
up script or python code
08:34 - that would pull that information
08:36 - and then make sense out of it for you
08:39 - and like write it to an actual excel file,
08:42 - so like you want it to, you
know, essentially do something
08:46 - cool where it opens up
a excel and writes to it
08:50 - and you want it to like have,
08:53 - you know, product,
08:55 - price,
08:58 - and condition, right,
09:00 - and in product you'd want XBOX 360,
09:04 - in price you'd want 150
09:07 - and in condition you'd want new, right.
09:11 - How would pull that data cleanly
09:13 - so it doesn't put XBOX 360,
150, new all in one place?
09:17 - so it doesn't put XBOX 360,
150, new all in one place?
09:21 - Right?
09:21 - So for that you need to be able
to do string slicing, okay.
09:25 - So for that you need to be able
to do string slicing, okay.
09:28 - So for instance, you might say,
09:31 - console or product,
right, or console product
09:35 - is equal to, you know, find
me the first pipe, right.
09:39 - is equal to, you know, find
me the first pipe, right.
09:42 - So like let's say we have this
guy here, there is a method
09:45 - So like let's say we have this
guy here, there is a method
09:48 - you can do on data which is called index.
09:51 - you can do on data which is called index.
09:54 - So let's find the index of pipe.
10:00 - It tells me that pipe is at index nine,
10:02 - so zero, one, two, three, four,
10:06 - five, six, seven, eight, nine.
10:10 - Which means that if I
index the string data
10:15 - and I do nine, It'll
give me back the pipe.
10:19 - So what that tells me
is that to get XBOX 360,
10:22 - I need to go from the
start of that string,
10:26 - all the way up to the first pipe,
10:28 - that should get me the product.
10:30 - So I can say product is equal to data
10:33 - from the start I don't
need to say zero, right?
10:36 - I can say from the start to
10:41 - take the data dot index of the pipe.
10:48 - Now if I show you product, boom.
10:51 - Look at that, we got XBOX 360.
10:54 - And so now I can write
that product to the file,
10:57 - teach you guys how to
read and write to files.
10:59 - Okay so then what tt will do
is that it'll actually write
11:02 - XBOX 360 in here for you, automagically.
11:06 - Now, understand the
power and implications,
11:09 - "Well, why can't I just
do that by hand?" Right?
11:11 - That might be a question.
11:12 - What if it was a hundred
thousand products?
11:14 - Can't do it by hand, good luck, right?
11:17 - What if a million products
that you were trying
11:19 - to search from and find the best price
11:21 - using your craigslist bot.
11:24 - That's where programming comes in, okay?
11:26 - It's very important to understand
how programming in here
11:29 - ties together and how it's more powerful
11:32 - than you trying to do this on your own.
11:35 - So that's really the power
of string slicing, okay?
11:39 - To break this line down
for you a little bit more,
11:42 - data, colon, that's just
saying start from zero,
11:46 - and then I'm saying
data dot index of pipe,
11:49 - what does that part evaluate to, right?
11:51 - Dot index is a method that you
can use on data, that's, okay
11:55 - Dot index is a method that you
can use on data, that's, okay
11:57 - which just gives you something
that's you're looking for,
12:00 - you pass it into the
function, right, that function
12:02 - or that method index
takes in one argument.
12:06 - So what does this whole part
evaluate to in our case?
12:09 - This part evaluates to a nine.
12:12 - Right, this whole part
data do index, right?
12:16 - Evaluates to nine, so if I
do data zero through nine,
12:20 - you can see that I just
get XBOX 360, the same way.
12:23 - Nine tells me up to but not
including the pipe, okay.
12:26 - Nine tells me up to but not
including the pipe, okay.
12:29 - So that's how we got the XBOX 360 part,
12:33 - how would you get the 150?
12:35 - You would kind of do the same
way to get the price, okay.
12:39 - You would kind of do the same
way to get the price, okay.
12:40 - But you would say instead of
starting to look from here,
12:45 - because then it'll find
this pipe right here,
12:47 - right, this one.
12:48 - You wanna find this pipe now.
12:51 - So you want to actually
start your string search
12:55 - from this location or this
location that I'm highlighting.
12:59 - And then you wanna search
all the way up to this pipe
13:03 - and stop there and get whatever
13:06 - is in between these two pipes, okay?
13:09 - So that's something I
want you guys to try,
13:12 - paste your code below
for how you might get
13:15 - the price and the condition, okay.
13:18 - That would be a fun
thing for you guys to do.
13:22 - I'm gonna keep moving on
13:23 - and talk a little bit more about string,
13:26 - string slicing, cause there is still
13:28 - a little bit more to it.
13:29 - So
13:32 - and again I want to keep
practicing all this,
13:34 - cause otherwise this
is gonna overwhelm you,
13:37 - all this knowledge.
13:40 - So let's say that I have
13:44 - I can do start, stop and
here is another method
13:46 - I can do start, stop and
here is another method
13:48 - to blow your mind, step.
13:50 - So how many steps do wanna take
when I'm reading something.
13:54 - Okay.
13:55 - So like let's say, I have this string,
13:59 - "Hi how are you doing, it
is very nice to meet you."
14:02 - "Hi how are you doing, it
is very nice to meet you."
14:07 - I wanna make sure I'm consistent so not
14:10 - double quote single quote and um
14:14 - you know, let's just store
that in some variable greeting.
14:17 - Okay.
14:18 - So if I say greeting so you
can see the whole string,
14:22 - so what I can do is take
greeting, say start at zero,
14:28 - stop at, I don't know, negative one,
14:31 - so like all the way at the end,
14:33 - and then I want you to.
14:37 - Basically it'll go up to O, right?
14:40 - Because it's up to like,
14:41 - or sorry, it'll go up to the U part
14:44 - but not this period right here.
14:47 - Sorry.
14:48 - I just, it won't let me
highlight that period.
14:52 - It won't go up to that period, okay.
14:54 - It'll go up to U, because it's up to
14:56 - but not including the period.
14:58 - Sorry, I keep saying that
a lot but I do know that
15:01 - when you're starting to
learn python or programming,
15:04 - those things you'll forget a lot.
15:06 - So I'm sorry if I'm reiterating
15:07 - that fact over and over again.
15:09 - Alright so we start from zero,
we go up to the u, right?
15:11 - Alright so we start from zero,
we go up to the u, right?
15:14 - We go from here all the way to here,
15:17 - and then we wanna step, so instead of a,
15:23 - for example, taking, I don't know,
15:26 - reading every single one of these,
15:28 - we can read every other letter.
15:30 - So I can say instead of stepping
by one which is default,
15:33 - if I do one here you'll see,
15:36 - this is pretty much the same
string without the period.
15:39 - And if I do nothing here, you'll
see the same thing, right,
15:42 - And if I do nothing here, you'll
see the same thing, right,
15:44 - cause that's a default.
15:46 - And if I do step by two,
this is basically saying
15:47 - And if I do step by two,
this is basically saying
15:50 - give me every other letter.
15:54 - Okay?
15:55 - So think about maybe creating
a game, gibberish game
15:59 - that takes in a string as
in a like it's a function
16:02 - called gibberish, takes in
a string and it just gibberi
16:05 - called gibberish, takes in
a string and it just gibberi
16:07 - gibberish-izes it,
16:11 - okay, it just like jumbles it up.
16:14 - And if I do three here, you
can see it stepping by three,
16:19 - alright.
16:20 - So pretty weird, but also
cool at the same time,
16:23 - So pretty weird, but also
cool at the same time,
16:26 - and
16:29 - another thing that I wanna ask
you guys as a practice to do
16:33 - before I end this video is
say I had the string hello,
16:40 - I gave you the string,
how would you reverse it?
16:45 - Okay.
16:46 - I want, if I gave you hello, I want back,
16:50 - olleh.
16:52 - Or if I gave you olleh,
16:57 - you should give me back hello.
16:59 - Okay.
17:01 - So hopefully, that blew up
your mind on string slicing,
17:04 - So hopefully, that blew up
your mind on string slicing,
17:06 - I'll try to put some exercises
on clever programmer dot com,
17:10 - so if you haven't already
go enroll in to the school
17:13 - so if you haven't already
go enroll in to the school
17:16 - and there'll be exercises
and extra resources
17:19 - that you can use to get help.
17:21 - Also there are others in the
community who can help you.
17:24 - Okay.
17:25 - So good place to go for help,
17:27 - but if you're watching on
YouTube that's totally fine,
17:29 - comment in the YouTube section below
17:31 - and I will personally try to help you out,
17:34 - other than that I'll see
you guys in the next video.