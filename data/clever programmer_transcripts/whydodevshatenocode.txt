00:00 - why do developers hate no code tools
00:04 - like seriously I don't get it every time
00:07 - I tell my audience a clever programmer
00:09 - about no code tools my YouTube video
00:12 - just like the views just tank every
00:14 - single time and I never really
00:17 - understood why I just thought it was
00:18 - because the developers are not
00:20 - interested or maybe they just don't care
00:23 - because I genuinely use a lot of no code
00:25 - tools in my
00:28 - daytoday and again I don't know what
00:31 - your opinion is on this but most
00:32 - developers just freak out I mean even on
00:34 - LinkedIn I made this post and everybody
00:36 - just starts freaking out here I have yet
00:39 - to find a codeless solution that has the
00:42 - same functionality documentation or
00:44 - support of coded Solutions the problem
00:47 - usually leads from reducing
00:49 - anything and my response was like not
00:52 - Cod less I mean using no code tools to
00:55 - help you and only writing code where
00:56 - needed and the the LinkedIn post post
01:00 - blew up because I don't get any like I
01:03 - get one like on my LinkedIn post I get
01:04 - nothing so for me to get 117 reactions
01:08 - and 16 15,000 Impressions is blowing up
01:12 - and I feel like I hit a nerve and lots
01:14 - of software developers are chiming in on
01:16 - it and giving me their own take and
01:18 - there's a lot going on it's like a war
01:20 - out here but I feel like none of them
01:23 - really changed my mind on anything what
01:26 - I say is coding is a tool to help you
01:28 - get the job done
01:30 - don't get married to the code I love it
01:32 - I enjoy it but it's a tool to get the
01:36 - end result done so if you could do it
01:38 - faster easier
01:40 - quicker cheaper why wouldn't you do that
01:43 - especially if you're trying to build
01:44 - your own project or your SAS and you're
01:47 - trying to prototype an idea together go
01:50 - no code as much as possible now again
01:52 - when I say no code I understand the
01:55 - complete no code tools a lot of them are
01:57 - trash and are garbage I get it I
02:00 - understand that okay I'm talking about
02:02 - like let me see if I can make a like a
02:04 - little board here for you and show it to
02:06 - you right so if you go complete no code
02:08 - like bubble it's like you want to vomit
02:11 - and it's disgusting okay I I tried
02:13 - bubble and it's horrible it's just such
02:15 - a awful and their UI is like so trash
02:18 - that's not what I mean like recently I
02:20 - was building this app where a user can
02:23 - upload a long form video and then they
02:26 - get short form Clips back right so they
02:28 - get short form
02:30 - videos back like bunch of them right so
02:32 - I'll just visualize it for you here and
02:34 - they and like imagine they just put one
02:36 - big video and they get like multiple
02:38 - short form Clips out of it okay that's
02:41 - the idea you just upload and then you
02:42 - get this thing now for the front end I
02:45 - have this juicy next UI okay I have a
02:51 - beauti I have Firebase working so it
02:54 - gives a really nice and awesome
02:56 - experience I have some other cool text
02:59 - stack that I'm using but this is like
03:01 - the rough idea right so my front end is
03:03 - react next um if you don't know what
03:05 - next is it's like similar to react right
03:10 - and this is my front end that I'm
03:12 - working with but trying to manage the
03:15 - logic and all of that stuff and you know
03:17 - for what I needed to do it needed to do
03:19 - a lot of things for example my app needs
03:21 - to go and first take your video that you
03:24 - put in and it needs to transcribe that
03:26 - video and so it needs to get the text
03:27 - out of that video that's step one
03:30 - right um actually Step One is uploading
03:33 - so you have to be able to upload your
03:36 - video right so how are you going to
03:38 - upload this video well for that I need
03:40 - to use some kind of storage so for that
03:42 - I'm like okay I'll store it in Google um
03:45 - Google Firebase right so I'm using
03:47 - Firebase to store it okay what's the
03:50 - next step well then I need to transcribe
03:52 - it so I can get the words so then I can
03:55 - send the words over to our AI our open
03:59 - AI Chad GPT
04:00 - bot for it to like then find me good
04:05 - clippable moments
04:06 - Etc now in order to do all of that
04:11 - stuff it's so annoying to have to debug
04:14 - in like a command line and it's such a
04:16 - pain in the ass and it will take you
04:17 - months extra of all the work that I'm
04:20 - doing and I just use the no code
04:23 - platform for the back end because it's
04:26 - going to take about 30 minutes
04:27 - regardless of what Tex stack you use
04:29 - this process generally takes 30 minutes
04:31 - or longer uh if you're doing it through
04:34 - the web that's why even if you look at
04:36 - tools like Opus Pro or anything like
04:38 - that they they take a while so the
04:40 - process is going to take time so there's
04:42 - no reason for me to like code this thing
04:44 - up so then what happens is my user just
04:45 - goes and I have like this crazy backend
04:47 - workflow where we get the footage then
04:50 - we transcribe it then we make meaning
04:52 - out of it then I send it to like a AI
04:54 - tool that like crops the video and does
04:56 - all the magic and then we do all kinds
04:58 - of crazy stuff with it right I do my
05:00 - prompt engineering and
05:01 - everything it would be an absolute
05:04 -  nightmare trying to do this with
05:06 - just pure code because debugging would
05:08 - be trash like when I get somebody who
05:11 - has a problem to try to debug it I would
05:14 - have to have these crazy debug traces
05:16 - that would be such a pain and I have set
05:18 - up some debug traces and stuff but again
05:20 - it's so much time whereas some of these
05:23 - online no code tools like specifically
05:25 - what I was using for this was pipe dream
05:27 - there's other ones too like n8n and
05:29 - stuff but for what I wanted was pip
05:31 - dream and it was fantastic because it
05:33 - combines no code and it gives you the
05:35 - most power to code meaning like you can
05:37 - install packages and like Code full
05:39 - JavaScript Code full
05:42 - Python and so anything that could be
05:45 - Point click automated slash builtin
05:48 - interfaces with debugging is done I
05:50 - don't have to do any of like the grunt
05:52 - work the typist work that a lot of
05:53 - developers like to do like if you just
05:56 - love writing
05:57 - code okay look if you you're against
06:00 - somebody else and both of your job is to
06:02 - like build a tool that solves problems
06:06 - and you're just hellbent on writing
06:08 - every single line of code from scratch
06:10 - and the other person is writing code
06:12 - from scratch plus using any tools that
06:14 - they can find to speed up their process
06:16 - they're going to be 10 20 times faster
06:17 - than you at that point you're not a
06:20 - developer you're you're a typist and if
06:23 - you want to be a typist then by all
06:25 - means be a stenographer don't be a
06:28 - developer I think your job as a
06:30 - developer is to find unique problems new
06:33 - problems solve them why are you wasting
06:36 - time solving problems that have already
06:38 - been solved it's a waste of time solve
06:40 - new problems if you want to get practice
06:43 - go on lead
06:45 - code but your
06:47 - job is to solve new problems that's what
06:50 - we do as developers any problems that
06:52 - are solved use existing tools move the
06:55 - world forward
06:56 - faster right recreating tools solutions
06:59 - from scratch is just a waste of time and
07:01 - so I have this really complicated
07:03 - project with a really complex workflow
07:05 - it's so easy to maintain the code is so
07:07 - readable primarily because it's on a no
07:09 - code platform okay and it it just it's
07:12 - so smooth and easy to go through it
07:15 - whereas had I written everything from
07:17 - scratch for any developer that I bring
07:19 - on it would be million times harder for
07:20 - them to understand what the hell my code
07:21 - is doing it would take them so long and
07:23 - yes I get it once this app is performant
07:26 - and I have millions of users and I'm
07:28 - making millions of a month yes move it
07:32 - from pip dream if you need to if you see
07:33 - a performance difference to purely just
07:35 - next and on your own back end purely
07:39 - some whatever backend you want to write
07:41 - move it to Planet scale move it to super
07:43 - base whatever you want to do move it to
07:44 - Pure
07:47 - code but why is everybody so hellbent I
07:50 - just don't understand and anytime I've
07:52 - talked about anything related to no code
07:54 - I just get the craziest lashback every
07:57 - developer just loses their mind and at
07:59 - this at this point I don't give a
08:01 - I'm just telling you what works for me
08:02 - how I'm able to build app so fast and
08:04 - literally make stuff that a team of 20
08:07 - developers who will just literally ruin
08:09 - your life charging you1 to
08:12 - $300,000 I'm building it on my own
08:15 - within a month that would take a team of
08:17 - developers four to five
08:20 - months that's all that's all that's why
08:23 - I'm sharing it with you do whatever you
08:25 - want with
08:26 - it don't shoot the messenger try it on
08:29 - on your own use tools that give you
08:32 - coding plus the ability to no code and
08:34 - again when I say no code don't piss
08:36 - yourself okay just hold it in hold your
08:40 - bladder real quick for me okay
08:42 - understand what I'm
08:45 - saying no
08:47 - code doesn't mean you never write line
08:50 - of code it just means you combine no
08:53 - code tools with coding
08:55 - tools and you use coding only for true
08:59 - and unique problems and use the rest to
09:02 - get up and running quickly and I think
09:03 - whenever you have a MVP you should
09:06 - always try to find a way to do it with
09:08 - as little code as possible one there's
09:12 - going to be way less bugs two it's going
09:14 - to be way easier to
09:16 - maintain which is let's be real what
09:18 - your most of your time is going to be
09:20 - spent on when it comes to software three
09:22 - is going to cost you way less four
09:24 - you're going to do it way faster right
09:27 - so there's so many benefits could keep
09:29 - going on and on but I would say
09:31 - prototype and build fast especially if
09:34 - you're trying to build a SAS always
09:35 - start off with this people are literally
09:37 - making hundreds of thousands a month
09:38 - with like low code SAS right so maybe I
09:41 - maybe I should say I'm a proponent of
09:43 - low code okay that's what I'm proponent
09:45 - of that's I think my favorite new genre
09:49 - that I'm heading into and if you guys
09:51 - want let me know maybe I can start
09:52 - making low code tutorials but I just
09:55 - feel like I get slaughtered on Clever
09:56 - programmer anytime I talk about anything
09:58 - that doesn't have to do with just insane
09:59 - amount of
10:00 - coding um it's almost like a fetish of
10:03 - some of the people like developers like
10:05 - they just they just go crazy having to
10:08 - code and maybe they just get a lot of
10:10 - joy out of it and I do too I just also
10:12 - get joy out of like finished products
10:15 - things shipped and users using my
10:17 - services and products me making money
10:19 - out of the products that I'm using me
10:21 - not charging my client $100,000 for when
10:25 - I can build them a tool for five grand
10:27 - or 10 grand and then they want to keep
10:29 - working with me over and over again
10:31 - because I'm faster than a lot of the
10:34 - other players because I'm using tools
10:36 - that already exist to help me solve the
10:38 - existing problems and I put my brain
10:41 - this thing that I have very limited of
10:43 - because I probably have a few brain
10:44 - cells but I have limited time and energy
10:47 - and this thing that's a Powerhouse in
10:49 - here I try to only put it to use on
10:53 - unique problems I think that's the job
10:55 - of any software developer I think the
10:57 - reason why a lot of us get good is
10:59 - because we want to be as lazy as
11:01 - possible and we want to solve things
11:02 - once so I think if you're a true
11:04 - developer you try to solve things only
11:06 - once you don't try to repeat yourself
11:08 - dry which is one of the core principles
11:09 - of software development and I think if
11:11 - you take it further you know you can
11:13 - call it whatever else you want um you
11:17 - know don't repeat solutions that already
11:20 - exist use existing Solutions that's my
11:23 - message let me know in the comments
11:26 - whether you hate on me or whether you
11:29 - love on this idea curious to hear let's
11:32 - have a talk I love your face and I'll
11:34 - see you in the next video
11:36 - peace