00:00 - we're live we're live my friend hope you
00:02 - guys
00:03 - are doing amazing this is the day
00:06 - four of the challenge part three we're
00:08 - not going part three
00:10 - and we're going to get started right
00:12 - right away hope you guys are pumped are
00:14 - you
00:14 - i am super pumped i'm super excited to
00:16 - be here because today we're gonna be
00:18 - wrapping up the slack clone so you can
00:21 - deploy it
00:22 - now you have something to add to your
00:23 - portfolio exactly exactly so get ready
00:26 - get pumped sit down sit your butt seats
00:29 - down
00:30 - butt scooch it in like you know make it
00:32 - you know and then then
00:34 - and then we're gonna get ready right
00:36 - away so guys
00:38 - what is up we are currently at 200
00:40 - people watching and you guys are awesome
00:42 - and we love you all so much
00:43 - so all right what's gonna happen day
00:45 - four day three was amazing bro
00:47 - i think day three was just great day
00:48 - three was off the charts and day four
00:51 - is only gonna get better it's gonna get
00:53 - better so let's check it out okay few
00:55 - things
00:55 - all right let's finish build this leg
00:58 - clone let's go
01:00 - oh that's the last part we'll finish it
01:02 - up we will host
01:04 - this slack clone guys for you we'll just
01:06 - get started
01:07 - all right so are you ready yes or no
01:09 - drop it in the comments below
01:11 - and let's go through the flow oh [ __ ]
01:13 - that rhyme bro oh my god
01:14 - oh maybe that's still and even that ryan
01:16 - oh [ __ ] let go
01:18 - all right so turn on turn off your uh
01:20 - phones as you guys know at this point
01:21 - this is the most important thing
01:22 - right throw them out but we always say
01:24 - we're not liable if you throw them out
01:25 - because if you break them that's your
01:27 - fault not ours i'm sorry
01:29 - right it's a simple it's a simple
01:31 - exactly if you guys can focus
01:32 - you're gonna be able to follow along and
01:34 - just a quick reminder
01:36 - today is gonna be a lot of fun we're
01:38 - gonna learn a lot of things
01:39 - so make sure to tag us on instagram as
01:42 - you're learning
01:43 - take a picture send us a message we are
01:45 - happy to see the communities engaged
01:47 - we're happy to see your guys amazing
01:49 - projects
01:50 - i want to see you guys your projects
01:51 - right this is how you guys get our
01:53 - attention
01:54 - this is how you get potentially guys get
01:56 - selected for a prize
01:58 - for the 15k prize of the full stack
02:01 - mastery bootcamp the best bootcamp out
02:04 - there
02:04 - in the world period that's it stuff done
02:07 - okay day three was amazing like we said
02:09 - 6k views right
02:10 - pretty cool um 400
02:14 - live viewers oh my god you guys killed
02:16 - it a hundred plus homework submissions
02:18 - let's go
02:19 - think about this man a hundred people
02:21 - creating a slack clone 100 people
02:24 - like 100 lives that are being changed
02:26 - 100 lives that are being changed no
02:28 - scratch that almost 6k views almost 6
02:31 - 000 plus lives being changed
02:33 - but let's be honest the ones whose real
02:35 - lives are going to change are the ones
02:36 - who actually put in the work yes
02:38 - yes six people they're getting there but
02:40 - the 100
02:41 - are the ones that are going to crush and
02:42 - the 400 live they're also getting even
02:44 - closer we have some of your homework
02:46 - just like you're actually practicing and
02:48 - doing and developing skills
02:50 - and if you do do it a big bear will come
02:51 - in just oh never mind
02:54 - i don't know what he said let's go
02:57 - i back up now is 100 doesn't matter what
02:59 - he says let's take a look at some cool
03:00 - homework submissions okay awesome
03:02 - so george oh wow look at this he's got
03:04 - the dark mode up in here
03:06 - and he is making it look sick look at
03:08 - this christmas whoa
03:09 - that's like a blue moon those icons was
03:12 - like oh
03:14 - and he put the icons right there man
03:16 - that's good
03:17 - yes dude
03:21 - oh no no no no
03:24 - wait no no wait how does that you also
03:26 - had a hover effect what is this how does
03:28 - how is this aside oh what do you see
03:32 - this
03:32 - i don't know but she's got emojis
03:36 - let's get emojis right here guys that's
03:38 - pretty amazing look at that you she's
03:39 - got the challenge now i did say she i
03:41 - don't know if
03:42 - noula is a girl guy named i'm not sure
03:44 - so but
03:49 - [Music]
03:53 - bro we need some people to show us how
03:56 - to code holy moly we're not doing it
03:58 - good bro
03:59 - yo ours sucks we need to learn
04:02 - yo hey hit us up so we can hire you guys
04:04 - as coaches because you guys are way
04:05 - better than that yes
04:06 - of course obviously guys so so we have
04:08 - two live projects as well whose are we
04:10 - checking whoa
04:11 - yo whoa let's go does that actually work
04:19 - well i know i know i know create a
04:21 - channel for him
04:23 - okay
04:26 - was here what's here yo okay
04:30 - let's go dude daniel fern good job bro
04:34 - nice job
04:35 - it's amazing nice job what about the
04:36 - other live products
04:39 - helena is that how you say it probably
04:40 - thanks helena let me see
04:44 - let's see oh
04:47 - that's interesting let's see drop
04:50 - another one here as well
04:52 - let's see so hold on if i do this
04:57 - another one hello hello this is like our
04:59 - graffiti marks
05:00 - hello no this is that car this is like
05:02 - our signature
05:03 - whoa oh wait this is a dark mode oh
05:07 - that's cool guys give us a round of
05:09 - applause for all these amazing people
05:12 - in the chat just be like yo yo yo what
05:14 - is up amazing job
05:15 - guys if you are doing this this is how
05:17 - you stand out this is how
05:18 - you win the prize like i said guys by
05:20 - doing these amazing projects and really
05:22 - showcasing what you can do
05:24 - doing the extra going the extra mile
05:26 - going the extra step just going hardcore
05:28 - at it and you know what and just like
05:30 - challenging yourself
05:31 - exactly because when you do that when
05:33 - you add those extra features that's
05:35 - actually you
05:36 - learning how to implement all these
05:38 - different things so
05:39 - great job to everyone the round of
05:41 - applause and we hope to see you guys
05:43 - keep on crushing these awesome projects
05:45 - so here's here's what we're doing for
05:46 - this challenge you guys know the slack
05:47 - clone on how to talk about it too much
05:49 - and
05:49 - don't forget about the prizes full stack
05:51 - mastery third
05:52 - second place all the courses it's
05:54 - amazing third place who's pumped
05:56 - to get into full stack mastery boot camp
05:58 - if you win let's go
06:00 - guys this is the best bootcamp out there
06:02 - in the world i am not here to get around
06:04 - hands down and we
06:06 - started this and we are making an epic
06:08 - so many success stories so many people
06:10 - who are loving it
06:11 - it's been a while okay be positive as
06:13 - you guys know
06:14 - in order to win be positive engage in
06:16 - the chat but don't spam of course
06:18 - very important if you spam we'll throw
06:19 - you out it's as simple as that i don't
06:21 - like to play with people who spam
06:23 - or who are negative right and that's not
06:25 - part of my life
06:26 - so participate all five days be present
06:28 - of course also
06:30 - also very very important so okay make
06:33 - sure that you do all the homeworks right
06:34 - there
06:35 - and make the full project and if you
06:36 - have extra features that's a bonus so
06:38 - ah yes always a bonus exactly i just saw
06:41 - like projects get even cooler you get to
06:43 - learn a lot more things by adding these
06:44 - awesome features and
06:45 - bonuses yes make sure so make sure you
06:47 - do the bonus because you don't
06:48 - i mean just i mean what i was saying the
06:51 - wrong thing yeah
06:55 - make the features get the bonus cookies
06:56 - so let's go yeah so exactly
06:58 - so if you are ready if you're here to
07:00 - play all out go
07:01 - comment below just so we know you're
07:04 - serious
07:05 - exactly exactly because if you're not
07:06 - serious what are you doing yeah
07:08 - what are you doing i don't know what are
07:09 - you doing daniel i'm serious so i'm
07:12 - doing
07:12 - this i'm doing this i'm doing this with
07:14 - none now they're doing it for me
07:16 - okay agenda today guys really simple day
07:18 - four did you know
07:20 - today we're building the login
07:21 - functionality part one real-time chat
07:23 - application so today we'll be able to
07:25 - actually
07:26 - chat live and we'll give you the link
07:28 - where you can chat with us yo
07:30 - maybe we'll see we'll see that might be
07:33 - scary part yeah maybe we sent this to
07:34 - like one or two people made more than
07:36 - two people
07:36 - yeah what's up so wrap up the slack
07:39 - clone all clean up everything's gonna
07:40 - happen today guys
07:42 - and then tomorrow day five as you know
07:44 - roadmap to become a six-figure developer
07:45 - 11 pc so make sure you stick around make
07:47 - sure you come up there
07:48 - that's really important day we'll tell
07:51 - you exactly the steps and how to get
07:53 - started from zero to become a full stack
07:55 - developer
07:56 - there's a lot of guys this is where a
07:57 - lot of people mess up
07:59 - so we're here to unmess it up exactly
08:01 - because guys you know we already talked
08:02 - about the opportunity as a developer
08:04 - we're helping you learn and develop
08:06 - those skills as a developer and then
08:07 - next we're going to tell you about what
08:08 - that looks like for you what that road
08:10 - map is to get six figures and finally on
08:12 - day six
08:13 - surprise ah we still will not give you
08:16 - details until we get closer to the date
08:18 - but just stay tuned for something
08:20 - showtime guys who's ready let's go
08:22 - pop in the comments guys let's go ahead
08:23 - and hit the like button right now okay
08:25 - hit that like button to get started
08:27 - really quickly
08:28 - because we're gonna get started right
08:29 - now so let's go ahead and get to
08:31 - 200 likes and if you if we get to 200
08:33 - likes
08:34 - do you think we can get started then i
08:36 - mean we could get started before but if
08:37 - we get to 200 likes
08:38 - 200 likes and we get started bro no no i
08:41 - set my limits
08:42 - i said my limits bro oh my gosh invite
08:44 - your friends guys
08:45 - about your friends because if you don't
08:47 - if you don't i'm sorry we're not going
08:48 - to get started so
08:49 - make sure you like subscribe all the
08:52 - things okay
08:53 - very important if you're not on your js
08:54 - challenge what are you still doing click
08:56 - the link below to join guys
08:57 - that's the only way you'll be considered
08:59 - for the
09:00 - uh for the what for the prize so
09:04 - of course very important let's get to
09:05 - 100 200 103 likes you see that right
09:07 - there 103 likes
09:08 - and look at this guys before we get
09:09 - started here's what we are building
09:11 - today
09:12 - our goal is to get to this section you
09:13 - see how we have clever programmer day
09:14 - three day
09:15 - cp this guy's actually is coming from a
09:18 - database
09:19 - right so for example i can say hello
09:22 - daniel
09:23 - you know daniel not only that you're
09:26 - actually
09:26 - logged in as rafi yes i'm also oh check
09:28 - this out guys i can log out so let me i
09:30 - will click on this icon right here
09:32 - i will log out oh look at that i will
09:34 - click sign in
09:36 - right right here sign in with google
09:38 - give it one second
09:42 - sign in sunday stuff just takes a while
09:44 - for it to all fall to work
09:46 - i will select my email look at this guys
09:48 - how sick is this
09:50 - and that's it i'm in and all your data
09:52 - is stored in the database so you get the
09:54 - chats that you already had in your in
09:55 - your
09:56 - your logo is here the name is here
10:00 - your chats are all here you have
10:03 - different channels
10:04 - everything guys this is actual slack
10:06 - clone and
10:07 - it looks sick and i for example say yo
10:10 - daniel daniel is not cool
10:12 - no then he's not see i'm sorry bro what
10:15 - a lie
10:15 - i'm sorry and other people can be
10:17 - chatting here so i can give this to
10:18 - daniel and i should daniel can go ahead
10:20 - and business and for a crazy part we're
10:22 - going to we're going to host this live
10:24 - guys
10:25 - host it live on firebase so you can go
10:27 - ahead and share it with your friends
10:29 - with your family and be like yo check
10:30 - out what i got you got this no you don't
10:32 - but i got it
10:34 - exactly five more likes left and we'll
10:36 - get started
10:37 - oh five more likes we'll get started
10:39 - let's go do guys five
10:41 - four three two
10:50 - come on guys two two
10:54 - you know guys come on two two two two
10:56 - two
10:58 - and
11:01 - we are 200 likes let's go this is how
11:05 - we get it done
11:08 - all right are you ready for this
11:12 - all right so
11:18 - yo we just got twenty dollars what
11:21 - christian europe please death
11:34 - oh my god christian thank you so much
11:36 - let me show it to you here
11:37 - show it to everyone man chris 20 yo
11:41 - that's a canadian that's canadian i
11:42 - don't care man that's awesome let's go
11:45 - i probably said yesterday 20 bucks to
11:46 - dance wrong
11:49 - oh christian thank you so much for the
11:51 - donation i hope
11:52 - i went all out on that dance for you so
11:54 - that it was worth it for you
11:56 - we appreciate you guys we appreciate the
11:58 - support all the time we got to 200 likes
12:00 - nas
12:00 - let's get started man that's it so dive
12:02 - into it all right open up your laptops
12:04 - open up the code right because we
12:06 - are not getting into code so the first
12:07 - thing that we need to do guys is pretty
12:08 - simple this is the project that we left
12:10 - off
12:10 - from yesterday right right here right we
12:13 - have the channels on the left hand side
12:14 - okay
12:15 - okay right here we have things like
12:18 - right this main chat right here there's
12:20 - a chat
12:20 - box let's make this a little bit less
12:21 - loud right there this main chat box
12:23 - right here
12:24 - and we have a chat input right here
12:25 - right so a lot of things already set up
12:27 - but
12:28 - a lot of today is going to be a lot of
12:30 - javascript and react to yes so a lot is
12:32 - going to be
12:32 - the behind the scenes nitty gritty
12:34 - that's what's going to happen today okay
12:37 - all right so let's kind of work on the
12:38 - login and to do the login right a few
12:40 - things need to happen
12:42 - first for it to fully fully fully work
12:44 - now real quick now before we dive in i
12:46 - do want to remind you guys
12:47 - this will get a little more intense
12:49 - because we're going to dive deeper into
12:51 - firebase we're gonna be doing a lot of
12:53 - different things nas will explain it
12:54 - every step of the way but if you do get
12:56 - lost or if you do get left behind
12:58 - don't worry at all just keep watching
13:00 - keep learning
13:01 - see nas create this magic because you
13:03 - can always go back
13:04 - to the replay we'll be posting it right
13:06 - away and you can then go through and
13:08 - wrap it up for yourself
13:09 - always always always so let's think
13:11 - about this okay for the login what
13:13 - we do we need to do well a few things
13:15 - okay let's think about how we want to
13:17 - even for example
13:18 - do the login okay if you look at the
13:20 - current route okay the current route is
13:22 - pretty simple we have route to the room
13:23 - or we have route to login now
13:25 - we don't necessarily want that what we
13:27 - want is you want to be able to
13:29 - show the room we we want to get into the
13:32 - room only once
13:33 - the user exists you see what i mean so
13:36 - only if we logged in if the user is
13:38 - there
13:38 - right basically we know of what the user
13:40 - is that only then do we log in
13:42 - so here's what we do i will go ahead and
13:44 - i will create a state here called
13:46 - a state here called users i'll say const
13:48 - user
13:50 - user can you guys see this right make
13:52 - this a little bit larger or now what do
13:53 - you think
13:54 - yeah i will have here const user
13:58 - user comma set user so what does this
14:01 - will do this will be
14:02 - where our user gets stored understood
14:05 - good
14:06 - so and here we'll say use state use
14:09 - state
14:10 - okay state right here
14:13 - and for now we'll just say nothing for
14:15 - now we'll just say you stay to nothing
14:16 - okay
14:17 - so we're going to initialize the value
14:19 - to nothing from it initially make sense
14:20 - makes it good
14:21 - okay cool now what's going to happen
14:24 - we're going to check
14:25 - if the user exists or not and depending
14:28 - on that
14:29 - will set the login page so look at this
14:32 - inside the router
14:33 - inside the router look at this so here's
14:34 - what we'll do
14:36 - we will check if the user exists i will
14:38 - go ahead and open up my brackets
14:40 - and just like you can do in javascript i
14:41 - will say if user
14:43 - but i'm going to say if not user mini if
14:45 - there is no user
14:46 - if there is no user what what's going to
14:49 - happen
14:49 - is a pretty simple process it's like if
14:51 - there is no user
14:53 - i will go ahead and display the login
14:55 - page
14:56 - like so otherwise here's what i'll do
14:59 - otherwise i will do everything else um
15:02 - so if the user is not logged in because
15:05 - there is no user
15:06 - we want to take them and redirect them
15:07 - to the login page to make them log
15:09 - in exactly because there's not any
15:11 - information we can show them until they
15:12 - log in after exactly so this right here
15:14 - as you can see
15:14 - this is saying hey if there is no user
15:17 - this question mark is like a shortcut
15:18 - for an if and l statement okay
15:20 - if there is no user then we log in they
15:22 - will go to the login page
15:23 - however if they use a user then we go to
15:26 - this room page does that make sense
15:28 - okay cool so let's try that right now so
15:29 - i'm gonna save this
15:31 - and you can see right wait this look at
15:32 - this it took away straight to login page
15:34 - because why
15:35 - because there is no user signed in
15:37 - there's no user signed in
15:38 - exactly so let's go to the login page
15:40 - and let's work on the login page itself
15:42 - so i'm going to go
15:43 - i'm going to say login.js and everybody
15:46 - you guys should be doing at the same
15:47 - time as well
15:48 - logan.js right here and in the log in
15:51 - the gs a few things are going to happen
15:52 - number one of course
15:54 - is let's make sure that we have the
15:55 - container right just so we have a style
15:56 - components
15:57 - we'll have container right here so
15:59 - container container
16:01 - container boom right there and it's
16:03 - gonna also be closed out with a
16:05 - container as well
16:08 - oh container boom right there okay it's
16:10 - going to close that out oh and so you
16:12 - can see of course we have an issue with
16:14 - container not defined because we need to
16:16 - add a
16:17 - styled tool look at this guy know what
16:20 - he's talking about
16:22 - i've just seen noz do it so many times
16:25 - osmosis you know yeah import styled
16:30 - from what tell me tell me
16:33 - the styled components oh come on bro you
16:36 - knew that bro come on
16:38 - i know i forgot that i know and i also
16:41 - misspelled styled as well
16:43 - right so don't misspell this kind of
16:44 - stuff guys okay all right so i'm gonna
16:46 - say const container
16:48 - is equal to styled that div for now
16:52 - cool inside is this look at that now we
16:54 - have the login this is the one okay
16:56 - inside this div guys what's going to
16:57 - happen is we're going to give it a
16:59 - positioned
17:00 - position kind of like a full on full on
17:02 - height that's the first thing that's
17:02 - going to happen
17:03 - but inside there we're going to have the
17:05 - content so kind of like how we had here
17:07 - let me take you back here right you have
17:09 - this div this right here
17:11 - let me just show you this is the
17:13 - container
17:14 - this is going to be the content now
17:16 - we'll have an image we'll have some each
17:17 - one and then we'll have a button it's a
17:19 - pretty simple process you want to see
17:20 - yep yeah okay all right let's go back to
17:22 - this all right so right here inside here
17:24 - we'll do content
17:26 - content content like so
17:29 - content voila close that out and then
17:32 - inside the content a few things are
17:33 - going to happen
17:34 - we will have an image that's part one
17:36 - and then we'll have a h1 tag and so
17:38 - forth so let's create an image
17:39 - and here we'll say we'll have slack
17:41 - slack image
17:44 - slack image let me see
17:47 - slack image and this is just going to be
17:50 - the remember how we said people like
17:52 - hey do you use only.div or do you use
17:54 - anything else
17:55 - well check this out guys this is the
17:56 - really cool part about you know the
17:58 - whole part with style components okay i
18:00 - can actually
18:01 - use an image as part of a style
18:03 - component look at this
18:05 - here's what i'll do i'll do this and i
18:07 - will say
18:08 - and for the slack image i will actually
18:10 - call it a component
18:12 - construct const slack
18:16 - image right there is equal to styled
18:19 - that image see without the image so i'm
18:22 - actually creating an
18:22 - image using style components see right
18:25 - there next thing for content let's go
18:26 - ahead and make that as
18:27 - also stuck so content so const
18:30 - content is equal to styled.div as well
18:35 - but there boom boom right there okay so
18:38 - that should still work
18:38 - of course there's nothing else at this
18:40 - point now let's go ahead and get the
18:41 - source so slack image
18:42 - every image has what a source exactly
18:47 - so let's get the link so to get guys the
18:49 - source of image
18:50 - the slack so we'll say slack logo here
18:54 - let's go to images select logo let's do
18:56 - like transparent logo
18:58 - i think this one will work well right
19:00 - there copy image address there you go no
19:02 - problem
19:03 - let's go back to our react app let's
19:06 - give this one a
19:07 - a boom see eng right there so if i save
19:10 - this now
19:12 - okay let's go and refresh this if i save
19:15 - this
19:15 - it is not showing up anything and
19:18 - there's a i think
19:19 - there's a reason because i said image is
19:20 - not image it should be people actually
19:22 - were calling it out on this yeah thank
19:24 - you i just showed this
19:24 - oh look at this bro jack
19:28 - that is jacked i agree with that bro and
19:31 - by jack which would be
19:32 - huge yeah so let's work on the container
19:35 - first the containers we know is going to
19:36 - be
19:37 - one so we'll say the container is going
19:38 - to be remember how we said the container
19:40 - is going to be the full
19:41 - the full width of like this is the
19:42 - container correct so the width is
19:44 - the width is going to be of this
19:45 - container with
19:47 - oh width of 100
19:50 - okay and the height is going to be what
19:53 - daniel
19:54 - what is 100 as well actually 100 vh
19:58 - 100 vertical high remember that guys
19:59 - it's very important 100v means 100
20:01 - vertical 100
20:03 - is hard to define because that depends
20:06 - on the parent
20:07 - and i mean if the parent is only 50
20:09 - pixels a hundred percent of 50 pixels
20:11 - what
20:12 - do you pick the pixels right so that's
20:14 - what doesn't make sense so height is
20:15 - going to be 100 vh
20:17 - right here save that and now the
20:19 - container is 100
20:20 - now granted that still does not really
20:22 - change much but that's okay we'll set a
20:24 - background color to faf8f8 like so
20:27 - by the way someone asked can you add
20:29 - that source link
20:30 - into the style component which one
20:33 - so you know how the slack image source
20:35 - this link
20:36 - can we bring that into the style
20:38 - component or does it have to be
20:40 - on the component when you have it up
20:41 - here you wanna you wanna it will have to
20:43 - be here
20:43 - okay yes it has to be here so because
20:45 - the image now all these attributes that
20:47 - a normal image has
20:49 - it inherits it you see what i mean
20:52 - those aren't styling those are parts of
20:54 - styling that's not like the css that's
20:56 - the actual html
20:57 - exactly that component that's why it
20:58 - doesn't go in the bottom got this bro
21:01 - let's go okay cool so we have not the
21:03 - background color of course there's
21:05 - nothing nothing too crazy about this
21:06 - let's go ahead and do now let's now
21:09 - create the content the contents can be
21:10 - pretty simple right the
21:11 - the content of this one is going to be
21:14 - i'm trying to think of what to do for
21:17 - the content
21:18 - um okay here's what we'll do we'll make
21:21 - the slack image actually
21:22 - select slack image will give this like
21:24 - image a height
21:26 - of 100 pixels there
21:30 - okay now the 100 pixels okay so that's
21:32 - now that that which is great okay
21:34 - and the content is now going to be the
21:37 - white background so we'll say background
21:39 - color
21:41 - background color white
21:45 - white right there right there background
21:48 - white
21:49 - see this okay so you can see the content
21:52 - is right here you see this right here
21:53 - that's the content you see how it's like
21:55 - the image is here and the content
21:56 - uh div is here and this is the gray
21:58 - container you see that right there right
22:00 - there
22:00 - so here's what's going to happen now for
22:02 - this to properly work what we will do
22:04 - is simply go ahead and we'll make this
22:06 - display grid
22:09 - we can display flex actually display
22:10 - flex
22:12 - flex guys right there okay right there
22:15 - you see and now
22:16 - what we'll do to make it horizontally
22:18 - line what do we do
22:20 - horizontally is that the item or is that
22:21 - the justified
22:24 - justify content vertically
22:27 - guys you guys need to learn you guys
22:28 - made to memorize this to ver to
22:29 - horizontally align the center
22:31 - see look at that now this content is
22:33 - horizontally lined but you see how it
22:34 - stretches out
22:36 - you see how this white stretched out
22:37 - yeah you can fix that you know how
22:40 - by doing align items align items
22:44 - item center center boom boom right there
22:48 - oh you see now this whole thing is just
22:51 - kind of here you see
22:52 - this gray area is the container this
22:54 - white area
22:55 - is the content and then simply just
22:57 - wraps the logo for now
22:58 - nice yes so to not wrap it now do not
23:01 - have it just wrapped local this will do
23:02 - we'll give this container actually a
23:04 - padding of uh
23:06 - actually a content will give that
23:08 - content actually a padding of 100 pixels
23:10 - look at this 100 pixels boom
23:14 - oh you see that much better look at this
23:15 - you see yes now it has
23:17 - some nice spacing there exactly exactly
23:20 - we will also go ahead and give it a nice
23:21 - border radius to make it some
23:22 - like a little bit just uh you know a
23:24 - little bit nice curvature because we
23:26 - like hers bro right
23:27 - we love curves yeah like smooth
23:30 - smoothies
23:30 - no i actually crazy enough you know why
23:33 - people like curves in terms of like
23:35 - um uh you know like apps and so forth
23:38 - because we ourselves are people we're
23:40 - curved like like
23:42 - we have no jagged edges like we as
23:44 - people and so this is why we relate
23:45 - to nice curves in terms of like when we
23:48 - see
23:48 - a laptop or a computer or when we see
23:50 - anything right there's no jacket edge
23:53 - jacket edges yeah that's something that
23:55 - uh that is the
23:56 - the head of design at apple said that's
23:58 - crazy yeah that's crazy
24:00 - and i know curve everything guys no
24:02 - nothing straight nothing straight
24:04 - nothing whatsoever streets curse
24:07 - everything
24:08 - okay also let's make a small box shut us
24:10 - we'll add a box to the shadow to the
24:11 - content right here
24:12 - this is the box shuttle guys it's a
24:14 - pretty pretty i know this is a big
24:17 - big one but it's okay don't worry about
24:18 - it here box shadow
24:20 - you can just copy this guys for yourself
24:21 - right here box show zero one pixel three
24:24 - pixels rgb
24:25 - uh this is the box hey there we go there
24:27 - you go this is the box you see
24:28 - so starting to look pretty good once you
24:29 - say so it looks really i know it looks
24:32 - looks sexy okay cool
24:35 - next up what we need to do guys is the
24:37 - following
24:38 - let's go ahead and h1 tag in here so
24:40 - we'll do this
24:41 - and we'll say and before we do that nas
24:42 - can you quickly copy and paste this link
24:45 - into the youtube comment section just
24:46 - because we're asking some people if they
24:47 - could get it just like
24:48 - uh the image link so by the way guys
24:51 - this is something where you could go to
24:52 - google and find a similar one it doesn't
24:54 - have to be the exact
24:55 - copy to to listen to you the the yeah
24:58 - you can send it to me and put it over
24:59 - here um
25:01 - depends on where slack is uh where is
25:03 - slack i have no idea just just press on
25:05 - select button
25:07 - which type button yeah just open up
25:09 - slack there you go
25:11 - send it to me oh let's go
25:14 - okay oh my gosh where's daniel right
25:16 - right above david
25:19 - david's already there bro yeah right
25:21 - there
25:23 - all right guys here only for you guys
25:26 - only for you guys only for you guys okay
25:29 - only for you guys okay
25:31 - cool so yeah boom awesome so we got that
25:34 - that's the image you guys got hopefully
25:35 - that's
25:36 - that will fix that let's go ahead and
25:37 - create each one now element
25:39 - and sedation will say we'll go sign into
25:40 - slack sign
25:42 - sign in slack
25:46 - send this slack okay sign in to slack so
25:49 - we got that portion okay that's amazing
25:51 - oh look at that oh that looks good that
25:53 - looks great now of course it looks
25:54 - hideous because it's also not
25:56 - centered so we can fix that how do we
25:58 - fix that just if i got it
26:00 - oh let's go
26:00 - [Music]
26:04 - leave me hanging bro i know i'm trying
26:06 - to do like 10 things
26:07 - [Laughter]
26:10 - so now inside the content we'll go
26:12 - display flex and in this one as well so
26:14 - we'll say
26:14 - display flex flex as well and we'll say
26:18 - justify what happened here
26:21 - justify content to find content actually
26:25 - we'll do
26:28 - let me see um we'll say flex direction
26:31 - column x so it will
26:32 - make the flex direction column because
26:33 - right now you can see this is a row you
26:35 - see it goes
26:35 - this by row from here to here you see
26:37 - that we want to be stacked on time
26:39 - exactly
26:39 - so we'll say flex direction column and
26:42 - look and look at the difference
26:44 - boom i know don't worry about it we're
26:46 - getting there
26:47 - don't worry then we'll do is we'll say
26:49 - justify content
26:51 - center content
26:55 - center right there okay center it right
26:57 - there now this is center now okay
26:59 - and we'll do online items items
27:03 - center as well oh you see that's
27:06 - actually fixed
27:06 - so line item center actually what that
27:08 - does is you know how we said
27:09 - line items vertically aligns it remember
27:11 - that well for
27:13 - column hold on i know i don't want to
27:14 - say i know but for column
27:16 - for column it's actually a horizontal
27:19 - line items do you get it
27:21 - you get it bro you get it it switches
27:23 - probably
27:24 - it's like a switch it's a little
27:26 - confusing but that's dope
27:28 - now by the way guys lure this
27:32 - lord ten dollars
27:36 - ah let's go lourdes we know lord she was
27:39 - actually in the react.js workshop i hope
27:40 - i think that's the lord is
27:41 - what you're talking about maybe maybe
27:43 - maybe i know but she said may the force
27:45 - be with you cp lunares thank you so much
27:48 - i appreciate your donation we greatly
27:50 - appreciate it and we also hope the force
27:51 - is with you
27:52 - as well yes always always all right
27:55 - let's make sure the first is with us
27:56 - in this in this javascript and this day
27:59 - four
28:00 - day part three of the slack clone wait
28:03 - did you just get another one yo on
28:05 - what's up bro
28:07 - i did another one oh my god are you
28:10 - serious right now
28:11 - what is this on thank you so much by the
28:14 - way shout out to
28:15 - guys 300 likes we'll do a dance we
28:17 - already got
28:19 - bro come on we got a code thank you on
28:22 - thank you
28:23 - there so much we greatly appreciate it
28:26 - okay so signing slack let's now create
28:28 - next thing you want to do is create a
28:29 - button to sign in alright so let's go do
28:31 - this
28:32 - i'm going to sign in button sign in
28:35 - button boom right there okay and the
28:38 - sign in button will say
28:39 - sign in
28:42 - with google
28:46 - okay now that was going to happen it's
28:48 - pretty simple on the signing button with
28:56 - google
29:02 - hey
29:06 - that was for all the donations that we
29:08 - just got a while ago we have to make up
29:09 - for
29:09 - things exactly all right so on the
29:12 - sign-in button
29:13 - let's go ahead and make the assignment
29:14 - button much much much more prettier
29:16 - because right now so anybody's undefined
29:17 - so of course we'll define it where we'll
29:19 - design it
29:19 - below so say const sign in button
29:22 - is equal to styled dot look at this now
29:25 - it's not div
29:26 - button see so now we're actually adding
29:30 - styling components to different types of
29:33 - tags
29:34 - yes you can see now now this is just a
29:35 - simple div but we'll make it look just
29:37 - epic
29:38 - will make it look so good that you'll be
29:39 - like oh my god i want this
29:41 - i think we just got one more oh my gosh
29:43 - oh my gosh
29:47 - thank you so much he says you guys are
29:49 - awesome with a 10
29:50 - donation thank you yeah i think the more
29:52 - we dance the more they like it
29:54 - i don't know i know we just need to keep
29:55 - dancing oh no we need a code guys we
29:57 - need a code we can't dance forever
29:59 - but thank you so much man we greatly
30:01 - appreciate it awesome so let's go ahead
30:02 - for the button let's go ahead and make
30:04 - add a little bit of a margin to the top
30:06 - kind of because i like that
30:07 - and let's go ahead and put it to the
30:08 - right hand side so we can make this
30:10 - really simple
30:10 - all right margin top wait is that daniel
30:14 - who's
30:14 - who who's who who made the donation um
30:17 - this was iorinde ojo okay gotcha okay so
30:20 - marcia 50 pixels will push this button a
30:22 - little bit out you can see here so now
30:23 - pushes it a little bit out
30:25 - we'll also do a background color we'll
30:27 - do a background
30:28 - right here background color right there
30:32 - color like so okay for this background
30:34 - color pretty simple guys this is the
30:36 - color we want to use
30:37 - for now it's a pretty cool color it's
30:39 - kind of just kind of like uh this uh
30:41 - here let me show you
30:42 - boom see it's a green color right here
30:45 - okay next up let's go ahead and do
30:47 - uh the text color white so we'll say
30:48 - color that's that will change the text
30:50 - color guys
30:51 - text color white beautiful okay so
30:53 - that's much better
30:54 - now it still looks hideous as you can
30:56 - see would you agree with that one
30:58 - yes disgusting right now disgusting
31:01 - so we'll do his will do also you see
31:04 - this border right here that we have
31:05 - around we'll remove that border by
31:06 - saying border none
31:08 - border none okay cool save that
31:11 - awesome next step let's go ahead and do
31:13 - this we'll say height of this thing is
31:15 - going to be
31:15 - height of 40 pixels
31:19 - of 40 pixels boom save that oh
31:22 - let's go and that's going to give it a
31:24 - border radius of 4 pixels bro
31:26 - because we want smooth smooth
31:29 - it's always about smooth
31:38 - okay next up uh let's go let's look at
31:40 - that that looks much better now let's
31:42 - make a cursor pointer to make sure it's
31:44 - a
31:45 - dash cursor is going to be pointer for
31:47 - this one okay cool
31:49 - as you can see i can hover over it it
31:50 - becomes a core cursor pointer beautiful
31:52 - nice and then what's going to happen i'm
31:54 - going to let's do a font size
31:56 - a font size if
31:59 - one size of 15 pixels boom
32:03 - done look at that see now we have
32:04 - ourselves a button that's pretty cool
32:06 - let's go ahead and also add you see how
32:08 - we have the margin top 50 pixels
32:10 - let's also add a margin to this logo
32:12 - right here so it's a little bit spaced
32:14 - out you see that right there yeah yeah
32:15 - oh do you think we should leave it like
32:16 - this actually i kind of like i mean
32:17 - obviously it looks clean but if you want
32:18 - to clean up a little more actually no i
32:20 - like it like this
32:20 - it looks good to me you guys you guys
32:22 - like it give me a thumbs up in the chat
32:23 - guys if you guys like it like that drop
32:24 - a fire
32:25 - drop a [ __ ] it drop drop it all drop
32:28 - trouble like it's hot
32:29 - drop drop drop drop it like it's
32:33 - okay sorry so so okay guys
32:36 - so we now have the sign in functionality
32:40 - but it's not
32:41 - functional just yet guys because now we
32:43 - have to go up to firebase
32:45 - and actually enable it check this one
32:47 - out okay
32:49 - let's all go here but we are 322 people
32:51 - watching right now and we are
32:53 - almost 300 likes let's go you guys are
32:56 - just so
32:56 - good let's go ahead and make sure we
32:58 - share this guy's video
33:00 - oh okay who can share this video on
33:02 - facebook i want to see it oh
33:03 - a facebook share uh-huh whoa shut up
33:06 - facebook guys i want to see you guys
33:07 - share on facebook bonus points for you
33:09 - bonus points bonus yes
33:11 - yes always okay why did you put that one
33:13 - back in
33:14 - bro
33:15 - [Laughter]
33:18 - all right moving on so here's here is
33:21 - our database okay
33:24 - to enable authentication guys with our
33:26 - database
33:27 - as you know we already enable firebase
33:29 - firebase just in
33:30 - general correct this is firebase right
33:31 - here correct right here
33:33 - now to enable to enable what do we try
33:37 - to enable here bro
33:38 - firebase sign in authentication you go
33:41 - to authenticate authentication
33:43 - okay go here that's the first step okay
33:46 - at that point get started there we go
33:49 - okay now hold it okay
33:52 - pay really close attention okay
33:56 - we will go to google right here click on
33:59 - google
34:00 - click on enable below here
34:04 - select the email this is the project and
34:06 - click save
34:08 - well done see that right there that's
34:10 - done okay so we have that that's being
34:12 - done
34:13 - that's being completed right now okay
34:14 - cool cool cool so now we have the slack
34:16 - now we have google enabled now how do we
34:19 - now use it we have users right here this
34:21 - is where google
34:22 - google will actually save the users that
34:23 - log into our app
34:25 - nice got it nice to fully fully
34:29 - make this work with google we need to go
34:31 - back to our firebase.js guys right here
34:34 - okay all right let's do that and as you
34:37 - can see guys we make sure to hit the
34:39 - firebase config from you
34:40 - uh because from the last time you guys
34:42 - stole it from us
34:43 - and so we hit that firebase config
34:48 - to make sure we're proud of you guys for
34:49 - being hackers but
34:51 - yes but it was it was no bueno no but no
34:54 - no bueno so
34:55 - what's gonna happen is we now need to
34:58 - enable authentication in a firebase
34:59 - config as well
35:01 - to do that we'll do const auth okay
35:04 - off is equal to what is equal to
35:07 - firebase.also say firebase
35:10 - dot auth
35:14 - firebase.off okay okay
35:17 - cool save that awesome then what's going
35:20 - to happen guys
35:21 - is we need to go ahead and provide a
35:23 - provider so it's a cons
35:24 - provider and the provider is what is it
35:26 - google provider is a facebook
35:28 - provider that's what it's asking for
35:30 - okay makes sense makes sense
35:31 - good so provider is equal to new
35:35 - firebase right there
35:38 - dot off dot off
35:42 - newfound.google
35:44 - right here google no google
35:48 - off no auth provider right here
35:53 - see that right there well let me show i
35:56 - actually
35:56 - make sure i have it fully correct so i'm
35:58 - going to do that right there so it's a
35:59 - new firebase product not mew as a meal
36:03 - meal meal that's funny
36:06 - people are calling you out over here
36:08 - really
36:10 - the mew i love it that's funny
36:14 - okay so we've got the provider this is
36:16 - the google provider guys
36:17 - this right here is the authentication
36:18 - which will allow us to sign in which
36:20 - will allow us to use the google auth
36:22 - sign in
36:23 - now we need to be able to use it and
36:25 - export it so we'll do like this we'll do
36:26 - export
36:27 - and we'll do export and we'll say export
36:30 - auth
36:30 - provider so say export auth
36:34 - comma provider awesome does that make
36:37 - sense you see that right there yep
36:39 - cool let's make sure we put that kind of
36:40 - above here i want to make sure it's up
36:42 - top here
36:42 - cool all right save that awesome so we
36:46 - have the firebase config
36:47 - that's the only thing we need to do to
36:49 - configure our firebase comprende i'm
36:52 - running completely good
36:53 - okay now let's go back
36:56 - to login.gs and this is where our login
36:59 - will actually fully
37:01 - work so now okay let's create a sign in
37:04 - function in here in the login here
37:05 - let me go ahead and move this all right
37:08 - and here let me go back to our react app
37:11 - again again
37:12 - it's fine don't worry about this at all
37:14 - no problem whatsoever okay
37:16 - okay let's do const sign in
37:20 - is equal to what is equal to what
37:24 - it's a function okay great let's go and
37:26 - import
37:27 - author product from firebase so we'll
37:28 - say import
37:31 - import off right there like so we need
37:33 - to import it off like this
37:35 - and by the way since you see nas
37:37 - importing someone literally asked
37:39 - why are we exporting as objects and the
37:42 - reason is so that we can import them
37:44 - into other components like nods is
37:46 - literally doing in line three right now
37:49 - yes this is why well here's why i
37:51 - actually know why okay why
37:53 - here's why because
37:57 - well what is this no what you do
38:00 - no it's all good now so here
38:04 - the reason we're doing this this is kind
38:05 - of allows us to export multiple things
38:07 - um right so this will also act for
38:09 - example i can export
38:10 - auth and provider otherwise i'll just
38:12 - ask for one thing
38:14 - but an object like this allows mama to
38:17 - export this and this as well makes sense
38:19 - and then now we could use it throughout
38:21 - other places in the code
38:22 - exactly that's what pretty much the
38:23 - whole goal okay cool
38:25 - let's go back to our what where we were
38:28 - log in
38:28 - you were importing stuff cool
38:32 - okay and from you to import from
38:35 - firebase guys
38:37 - from firebase and here we'll do dot
38:40 - firebase hey we got another donation
38:51 - thank you so much for speaking nas
38:53 - terminology he really appreciates that
38:56 - everybody's just the comprendent now
38:58 - where's that even start in the workshop
39:00 - yeah that's in the workshop yeah that
39:01 - was funny that was funny i love that
39:03 - part
39:03 - okay so cool we have the sign in we
39:06 - imported our
39:07 - auth firebase provider that's all good
39:10 - now here is how we use it
39:12 - pay really close attention now guys okay
39:15 - really close attention check this out
39:18 - right we will do off and we'll say off
39:21 - dot
39:22 - sign in sign in
39:26 - with pop-up right here with pop-up
39:30 - and we'll provide the provider so our
39:32 - provider is actually the google provider
39:33 - which
39:34 - we enable remember that yep that was a
39:36 - good part would you enable so we'll say
39:37 - provider
39:39 - provider right here and then what's
39:41 - going to happen is this gives us a
39:43 - promise and i'll promise i did not
39:44 - explain this too much but i promise it's
39:46 - like almost like
39:48 - it's like a handshake it's like hey bro
39:49 - does that give me a handshake hey
39:51 - i will give you some data later on i
39:53 - promise you okay it's a promise got it
39:55 - taking them too long it's a promise
39:56 - i better get that data i want that data
39:59 - so this is what's going to happen i will
40:01 - say that then that then is when you
40:03 - accept the promise
40:04 - when i give you the actual data so that
40:06 - then i will say
40:08 - like this that allowed a little up but
40:09 - then this gives a function in the
40:11 - promise i said i get the data called the
40:13 - result
40:14 - and this result is actually going to the
40:16 - data of the user guys
40:18 - that's the cool part here's what i'll do
40:20 - i will do console.log
40:22 - console.log log now say result
40:25 - result.user just for you guys to see
40:28 - okay resolve that user okay cool let's
40:31 - let's go ahead and make sure we catch
40:32 - just to make sure cache also is like
40:34 - let's say that i did not give you
40:36 - the data and something some error
40:38 - happened so you broke you'll be catching
40:39 - i broke my promise i'm sorry bro i'm
40:41 - sorry oh my gosh
40:42 - i'm good at breaking promises all right
40:43 - cool so just to emphasize
40:46 - the promise is that nas is going to give
40:48 - me some data in the later date it's
40:49 - going to take him some time to find it
40:51 - the then is if he does bring me the data
40:54 - what is it and the catch is if he had an
40:57 - error trying to get the data for me
40:59 - correct so here we'll do error right
41:02 - and then here alert what alert error dot
41:05 - message
41:06 - right here that message now but here in
41:08 - the sign in this is where we will
41:10 - actually sign in so now how does that
41:12 - work out well that works out but
41:13 - simply just us clicking on the unclick
41:15 - function here's what we'll do
41:16 - we'll say on the sign in button we'll
41:18 - say on click
41:20 - on click okay we'll do like this
41:24 - data we'll say sign
41:27 - in and so what's going to happen is an
41:29 - on click
41:30 - of the sign in button we will go ahead
41:32 - and call
41:34 - this sign in function does that make
41:36 - sense
41:40 - all right let's go and save this ready
41:42 - for this bro
41:43 - oh hold on
41:50 - [Music]
41:57 - let's say for example right there's an
41:59 - example okay look at this let's go
42:01 - inspect
42:02 - element now now nothing happened of
42:03 - course because that was a purpose right
42:05 - but but now we have some data look at
42:08 - this
42:08 - this my friends is data about
42:11 - qazi wow you see that's a lot of data
42:14 - that's a lot of data i'm not trying to
42:15 - deal with this i'm not sure
42:16 - you know but you can see here we have
42:18 - rafikaze is the name
42:20 - we have cleverprogrammer.com right here
42:22 - and we also have really important
42:24 - portion which we have what
42:25 - which is the photo where's our photo
42:27 - right photo url right there
42:28 - the photo url of kazi look at this guys
42:32 - how sick is that
42:35 - that is pretty we get everything we need
42:37 - from the profile so that we can use that
42:39 - data exactly in our application
42:41 - so let's now go ahead and save this guys
42:42 - remember how the photo url the one we're
42:44 - going to use is we will use the photo
42:46 - url
42:46 - and we will also use display name from
42:49 - kaza right here you see
42:50 - that's the only thing we'll use let's do
42:52 - that now let's go
42:53 - when we sign in let's create a new user
42:55 - we'll say const
42:57 - new user is equal to okay and we'll say
43:00 - we'll make an object and we'll say name
43:03 - is equal to what
43:04 - result that what what does it tell me
43:08 - uh is this user dot display
43:12 - i was gonna say display name but display
43:14 - name right there comma
43:15 - and let's also give it a photo url so
43:18 - we'll say photo
43:20 - we say result result.user
43:23 - dot url the photo
43:26 - photo url look at this and that is it
43:29 - and so now i can actually go ahead and
43:31 - console log the new user let's
43:32 - try it one more time we'll say new user
43:35 - okay so the new user
43:36 - save that sign in with google okay one
43:38 - more time classic club pokemon
43:41 - inspect down button on this one console
43:45 - oh oh let's go
43:48 - oh look at this beautiful you see that
43:51 - everybody
43:52 - let me go ahead and zoom in on this so
43:53 - you guys see it zoom in look at this
43:55 - look at this bro so god
43:58 - so good hey okay good so okay
44:02 - now with that what do we do with this
44:04 - user that's the big question guys okay
44:06 - that is the big question with this new
44:08 - user we now need to save that user in
44:10 - the state
44:12 - okay no i was gonna say what is the
44:14 - state but
44:15 - so the state estate guys is like let's
44:17 - say we have a component right in our
44:19 - case we have a state
44:20 - that is for example the app correct for
44:23 - the app
44:24 - we need to save and every single
44:25 - component has its own state kind of like
44:27 - so it has its own kind of little state
44:29 - right here right state
44:31 - and it's kind of like a database data
44:33 - right here
44:34 - and so can happen is literally i can go
44:36 - ahead and i can create one element
44:38 - another element and it will remember
44:40 - that state or remember that data
44:42 - so our goal is to be able to add
44:46 - a user to this like a to our first to
44:48 - the state so we can remember who the
44:50 - actor is
44:51 - now we can remember who the user is okay
44:53 - let's do that right now
44:54 - what's going to happen is i will go back
44:56 - to my app.js guys app.js right here
44:59 - and what another one
45:12 - holy moly man whoa
45:16 - guys we're gonna code not dance what do
45:18 - we do now
45:20 - i mean hold on let's let's wait for the
45:22 - beat to drop okay we're going to wait
45:24 - for the beat to drop this way
45:25 - yeah yeah we'll wait for the beat the
45:27 - job okay when they drop they're going to
45:28 - dance for you guys
45:30 - okay the next date guys is thirty
45:32 - dollars to dance okay
45:33 - thirty dollars that's it so us dollars
45:35 - we gotta increase the price now
45:37 - thirty us dollars okay
45:41 - oh my god who are you bro i was bad bro
45:44 - i'm trying to code here so look we have
45:47 - the user now you see this user is in the
45:49 - app state
45:50 - everybody everybody understand this it
45:52 - is currently in the app state right here
45:54 - see it's kind of like what i'm talking
45:56 - about here right that's where the goal
45:57 - is to put that user state this say user
45:59 - is actually here make sense how do we
46:02 - put the user well the site user function
46:04 - is what actually sets the user okay
46:06 - what's going to happen is you will pass
46:09 - it
46:09 - up okay all right fine
46:16 - [Music]
46:26 - right
46:28 - oh my god bro yeah i go so hard to
46:31 - actually get out of my chair
46:32 - just for you guys oh my gosh that's
46:36 - funny bro so i interrupted you you were
46:37 - explaining
46:39 - yes um yes i state okay yes so um
46:43 - so we pass it now the site user function
46:45 - we pass as a user function into login
46:48 - and we'll say say user look at this
46:49 - this is where it's so cool you can pass
46:51 - in functions to write different
46:52 - components
46:53 - like i say say user is equal to set user
46:56 - right here
46:57 - save that okay okay what should happen
46:59 - then we will we can
47:00 - use this set user function inside
47:03 - login.js like so and we can accept it by
47:07 - using use something called props
47:09 - props you see that right there props are
47:11 - like parameters for functions
47:13 - okay and in here now we'll do this we'll
47:16 - say props
47:17 - props dot what that set
47:21 - user right there and we'll pass in the
47:23 - new user
47:24 - oh let's go look at this and so what's
47:28 - going to happen
47:28 - is whenever we log in we're going to
47:31 - pass in
47:31 - a new user to the state of the app
47:34 - we will now have that state and you will
47:36 - see that what's
47:38 - going to happen is if you go to app.js
47:41 - this user will now be here and so if i
47:43 - do console.log user
47:45 - simply console.log i'll log
47:48 - okay we'll say user in app user in app
47:51 - state okay and we'll do comma comma user
47:55 - right there just so you guys see it just
47:58 - so you guys see it right here
47:59 - let me go ahead and i will remove this i
48:01 - don't need this path right now just
48:03 - let's remove this path for temporarily
48:05 - guys okay remove this path for now
48:08 - remove that don't need that for now okay
48:12 - okay we got that we got that that's all
48:14 - good and look at this
48:16 - i want you to pay attention now i will
48:18 - save everything file
48:19 - save all okay file save all you ready
48:22 - for this bro
48:23 - refresh this oh sign in with google oh
48:26 - okay
48:27 - what's going to happen now sign up with
48:28 - google then we will go ahead and sign in
48:31 - with actual google
48:32 - classiclarvpro.com okay good
48:40 - let's go you see what happened here
48:43 - now we inspect element let's go to
48:44 - console
48:46 - look at this guys user and app initially
48:49 - when we started when we had when we were
48:51 - on the login page right
48:52 - user in app state was undefined this is
48:54 - why the login page was displayed okay
48:56 - this is why the login page was displayed
48:58 - but then because we set the user we set
49:01 - the user
49:02 - by using using the site user function
49:05 - guys function
49:06 - okay we went ahead and now the in app
49:08 - state
49:09 - this now has a name and look at this a
49:12 - name
49:12 - and a photo and this is where all of
49:14 - this now actually
49:16 - lives inside the state so now we can
49:18 - access it we could change it if we ever
49:20 - need to but that data is there
49:22 - whenever we're in the application
49:23 - correct how
49:26 - guys this is the beauty of react and
49:28 - just the beauty of javascript the beauty
49:30 - of coding i love it so much
49:32 - beautiful i love it so much anyways okay
49:36 - let's close this up so look at that we
49:38 - got that now what's gonna happen is we
49:39 - can actually use this user object okay
49:41 - we can use this user object anywhere you
49:43 - want pretty much bro
49:45 - we got the user object we can now use it
49:47 - okay okay let's go ahead and
49:48 - save this we can use this user object
49:50 - you know where where
49:52 - we'll check this out where we can use
49:54 - this user object actually inside the
49:56 - header you see
49:56 - how we have this name nazari here yeah
49:58 - who's that guy let's that's that's this
50:00 - cool guy
50:01 - oh oh yeah that guy was correct guys
50:03 - cutting
50:05 - right so the user object let me go ahead
50:07 - and close this part out okay
50:10 - we can replace the desire with the
50:11 - actual user data
50:13 - let's go back to where let's go back to
50:15 - header right here
50:16 - let me go ahead and go back to header
50:18 - okay and what's going to happen is we
50:19 - will passing user now
50:21 - into the header like so again we're
50:24 - passing so much data throughout
50:25 - all these components make sense let's go
50:27 - to the header
50:29 - okay header and remember how we had the
50:31 - header name and so forth
50:32 - what we could do now is look at this we
50:34 - can say header we can say props
50:36 - props and in here we'll say props
50:41 - right there props dot name
50:44 - look at that props that name okay
50:48 - and of course if we were uh i need to
50:51 - refresh this hold on
50:52 - props that name actually i'll props the
50:54 - user that name props the user
50:56 - user dot name oh
51:00 - let's go look at that it says rafa kazi
51:02 - right here
51:03 - beautiful because that's the actual user
51:05 - that's lost that's the actual use that's
51:06 - logged in
51:07 - wow now we're getting somewhere guys
51:09 - give us some fire down below guys how
51:11 - cool is this this if you're students for
51:13 - the first time
51:13 - this is the beauty of coding right you
51:16 - have so many possibilities abilities
51:18 - it's insane
51:19 - so good you got this you got this if you
51:21 - develop these skills you'll be able to
51:22 - code
51:23 - yes if not like gnaws you'll be able to
51:25 - code better than that
51:26 - but it's going to take a lot of time
51:27 - because nas has been coding for a long
51:28 - time yes
51:29 - so look at this rafikaze now it says
51:31 - here okay great but here's the cool
51:32 - thing i want you to learn something
51:33 - called this is called destructuring okay
51:35 - i can actually structure this props and
51:37 - i can actually get the user out of this
51:38 - process by using using something like
51:40 - like this i will do for example
51:41 - object right here user like this
51:45 - user so just this is called
51:47 - destructuring guys i can go ahead
51:48 - basically take out
51:50 - the user from props imagine if this was
51:52 - a parameter right
51:53 - i can do structure using this and then
51:55 - now the user is kind of like here
51:56 - makes sense and now at this point i do
51:59 - not need this
52:00 - props i just need to use it now at this
52:01 - point and that's it and we're still got
52:03 - rafikaze so i want to introduce this new
52:05 - kind of topic to you all right beautiful
52:08 - all right that is all said and done
52:11 - what's next bro
52:12 - next is let's go ahead and change this
52:14 - image when you have this image right
52:15 - here this image source
52:16 - we can also change this using this using
52:19 - for example
52:19 - user user let me go back to uh where's
52:23 - my header here
52:29 - we'll have user here user
52:32 - user user dot photo boom
52:36 - so now hey look at that that's the user
52:39 - photo of that
52:40 - person crispy clean man that's cool
52:42 - right yep
52:43 - that's cool i love that okay all right
52:46 - we got that now of course one thing we
52:47 - need to make sure
52:48 - is that sometimes the user form might
52:50 - not exist guys right this user photo
52:51 - might not exist exactly
52:53 - so we need to check to make sure that
52:55 - user photo exists so we'll do
52:56 - user photo if user photo exists then
52:58 - we'll use the user photo
53:00 - like so otherwise otherwise we'll use a
53:03 - static image that's just simply this
53:05 - image right here
53:06 - i'm gonna give it to you i'll give it to
53:08 - you right now
53:09 - this image right here so otherwise we'll
53:12 - use this static
53:13 - static image right there that's pretty
53:15 - much it okay and this image if you want
53:16 - it i can give it to you if you want to
53:18 - go ahead and pass it down
53:19 - i'll pass it to you bro i'll pass it to
53:21 - you
53:24 - let's go this is the static image right
53:26 - here okay okay
53:27 - so then we'll go ahead and make and make
53:29 - sure you guys got it okay let's go ahead
53:30 - and say this because sometimes you might
53:31 - not have a photo that's that's just
53:33 - pretty much the reason why
53:34 - all right refresh this okay now here's
53:37 - another issue now
53:38 - here's another issue you see every time
53:39 - we need to sign in with google look at
53:41 - this sign in with google
53:44 - true kaiser cloud programmer okay great
53:46 - that's also all good and done
53:48 - and the reason why every time i refresh
53:50 - you see it takes me back to the login
53:52 - page why do you think that's the case
53:53 - guys
53:54 - why do you think that's the case it's
53:56 - because
53:57 - because yes we save an estate but the
53:59 - state gets refreshed every single time
54:02 - that we refresh the page so we need to
54:05 - have
54:05 - something where we could store the user
54:07 - for a period of time like perhaps
54:10 - a session yeah
54:13 - maybe a local store or local storage
54:17 - so what's going to happen is now we get
54:19 - into something called local storage
54:20 - local storage is kind of like
54:22 - storage for your browser for
54:25 - your website this comes directly with
54:29 - your browser chrome safari anything and
54:32 - we can access it
54:33 - from our website as well check this out
54:36 - so
54:37 - let me go ahead and just show to you
54:38 - what i mean by local storage
54:40 - we'll say local storage storage
54:43 - react.js there so session storage and
54:47 - local storage
54:48 - and the way you do local storage guys
54:50 - right here the way to local store is
54:51 - pretty simple so i just do local storage
54:53 - okay the way this local storage is the
54:56 - following
54:56 - you see i can create a local storage
54:59 - item
54:59 - i can get a local storage item i can
55:02 - remove a local storage item or i can
55:04 - fully clear it
55:05 - it's kind of like a brain it remembers
55:07 - kind of who you are
55:09 - forever until you clear it make sense
55:12 - exactly so
55:12 - we can utilize that when we log in let's
55:15 - think about this okay
55:16 - and when we log in so let me go ahead
55:18 - and do this all right let me go back to
55:20 - uh login.js
55:24 - you know you see how we say the set item
55:25 - we can use this local storage set item
55:27 - let's go ahead and do this
55:29 - we d we set the user but we also also
55:32 - are going to i'm going to login.js let's
55:35 - go to login just
55:36 - but you also will set the item so here's
55:38 - what i'll do inside here i will say
55:40 - local storage that say item
55:41 - and i will say user user
55:45 - now we cannot just say new user like
55:47 - this guys
55:48 - new user like this this will not work
55:50 - right here
55:51 - because why because because local
55:54 - storage accepts string it accepts
55:56 - json string so what we need to do is to
55:59 - do json
56:01 - json does stringify
56:04 - and we pass in this whole new user boom
56:06 - right there and so now this new user
56:08 - which is an object
56:09 - initially in javascript will go ahead
56:11 - convert it be converted to a string
56:13 - using javascript
56:14 - just json.stringify and it will be saved
56:16 - in
56:17 - local storage check this out and and
56:20 - someone asked is local storage the same
56:21 - thing as a cookie
56:23 - no it's not no it's not cookie is
56:25 - different a cookie is basically for a
56:27 - session a cookie
56:28 - is kind of like uh it's um it's
56:32 - it's similar it's similar yes it is
56:34 - similar but it's two different
56:35 - technologies in terms of how we save
56:37 - data
56:37 - cookie is very much used with the server
56:39 - so for example when you have a server
56:41 - it's like when you have a back end when
56:42 - you have a back-end server you
56:44 - have a cookie that kind of communicates
56:45 - between the server and the front-end
56:47 - okay
56:47 - local storage is mainly just kind of
56:49 - saving data for the browser nothing has
56:51 - to do with the back-end whatsoever
56:52 - that's what the cookie is and that's
56:53 - local storage is perfect yeah
56:56 - okay cool all right let's go ahead and
56:57 - go back to our app which is which one
56:59 - which one it's this one right here okay
57:01 - good all right now if i log in if i log
57:04 - in guys check this out
57:05 - if i log in sign in with google okay
57:07 - let's do this
57:08 - oh let's go back to here so i know
57:10 - google i will do kaziklarpur.com
57:14 - look at this okay i'm signed in but if i
57:15 - inspect element i go to look at this i
57:18 - want you to go to
57:19 - application go to local storage and look
57:22 - at this hold on hold on hold on
57:24 - oh let's go look at this bro look
57:28 - oh there it is the user is right here um
57:31 - inside that local storage you see local
57:33 - storage name avakazi photo
57:35 - and now that we have this here someone
57:36 - actually has a great question they said
57:38 - does the local storage die after the app
57:40 - closes or the user logs off
57:42 - or how does this work no it does not die
57:44 - when you when you close the browser
57:45 - whoa guys and that's why we have in
57:47 - local storage because we want to make
57:48 - sure we keep the user logged in
57:50 - until they decide to log off yes exactly
57:53 - the log out on the log on portion when
57:55 - we click log out that's when we destroy
57:56 - local storage
57:57 - okay make sense all right so let's go
57:59 - check this out so we have local storage
58:00 - that's cool
58:01 - let's now of course if i refresh though
58:03 - it still goes back because again
58:05 - with silicon storage but we're not using
58:06 - it correctly so let's now go to
58:09 - app.js right here okay inside app.js
58:12 - here's what's going to happen we'll say
58:14 - user say user
58:15 - this right here inside whatever you put
58:16 - in here this is the default value
58:19 - default value that's default value when
58:22 - the app starts okay
58:24 - well what we can do guys what we can do
58:27 - is
58:27 - let's go ahead and go to app.js here
58:29 - what we can do is i can actually get
58:31 - my local storage i can do local storage
58:34 - local storage okay git item
58:37 - because we set the item before git item
58:39 - and we'll say
58:40 - here we'll say user back user right
58:42 - there
58:43 - but again we cannot just do user because
58:45 - again this is a string right here when i
58:47 - do
58:47 - get item it gives me a string i need to
58:50 - parse it and convert it into an object
58:52 - so here's what i'll do i'll do you
58:54 - remember how you adjacent that stringify
58:55 - now we'll do json.parse to go the
58:57 - opposite way
58:58 - so is that we convert from a string to
59:01 - an object
59:02 - exactly boom boom right there save that
59:05 - awesome save that boom and now check
59:08 - this out okay check this out really
59:10 - really quickly
59:11 - just disadvarse now it's going to store
59:14 - the user inside here
59:16 - and actually what's going to happen is
59:18 - if i refresh it actually should not take
59:20 - me back
59:20 - perfect so now it recognizes that
59:22 - rafikaze is logged in
59:24 - oh let's see look at that it does not
59:26 - take me back
59:28 - but once you log out let me go hi hold
59:30 - on so it's like here here here
59:32 - if i go to console you see here then
59:34 - where is it
59:36 - i don't have i don't have the console
59:37 - here but it's because of the fact that
59:40 - the user is still there right and we
59:42 - simply set it
59:44 - inside here when we refresh the page
59:48 - right the state might be gone but local
59:50 - storage
59:51 - is now gone local storage is still there
59:54 - okay
59:54 - so just keep that in mind all right now
59:57 - the question becomes is how do we log
59:58 - out that part two now is
59:59 - how do we log out well the logo function
60:02 - will become from here when i click this
60:04 - button
60:04 - i want to be able to log out that's
60:05 - going to happen okay make sense yep
60:07 - yes let's do that right now okay to
60:10 - create the logout function again pretty
60:11 - simple step
60:12 - i will go to my header let's do a header
60:18 - header in here as well okay and what's
60:21 - going to happen
60:21 - is in the header on the click of this i
60:24 - will have a sign out function
60:26 - on the click of the header okay now
60:28 - again what i will do is i will do
60:30 - what's going to happen i'm going to pass
60:32 - in the sign off function sign out
60:34 - function into the header and i will use
60:35 - it i will say
60:37 - unclick unclick of the button
60:40 - is equal to right here and i will say
60:43 - unclick
60:44 - sign out right there
60:47 - and now we'll go back to app.js and i
60:48 - will pass in the button of course
60:51 - there okay
60:54 - and now if we go to app.js so again this
60:57 - function will be clocked clicked
60:58 - on if i go ahead and if i just kind of
61:01 - use your image
61:02 - this uses the image right here this is
61:04 - directly connected to this guys just so
61:06 - you know okay
61:07 - make sense content yep good good awesome
61:10 - all right
61:10 - next up let's go ahead and go to app.js
61:13 - beautiful
61:14 - and now inside this app.js we will pass
61:17 - in a sign off function to the header
61:19 - because that's what we're using remember
61:20 - that yep
61:20 - all right let's pass in the sign up
61:22 - function in the header
61:26 - we'll say sign out sign out
61:29 - is equal to what some kind of a sign
61:32 - out function that we have which we have
61:34 - not created just yet so we will we will
61:36 - do
61:36 - is we will have here we'll say const
61:40 - sign out is equal to what
61:43 - is equal to the following
61:49 - that's how we code apparently if you
61:51 - just say gibberish the group comes
61:54 - all is gibberish it's always your fish
61:55 - that's what mom says actually mom says
61:56 - whatever you're what are you writing
61:57 - you're some gibberish just [ __ ]
61:59 - literally when you're coding yeah yeah
62:01 - yeah yeah
62:03 - literally he's like i understand what
62:04 - you're writing you're some gibberish i'm
62:05 - sorry
62:06 - she's like no comprehend no comprendo
62:08 - that's for sure
62:14 - okay cool cool awesome you guys are
62:17 - amazing we are almost at 400 likes let's
62:19 - go can we get to 400 bro
62:22 - how much what did we get to the last
62:23 - time how many likes did we get to the
62:24 - last time 600
62:25 - 700 i forgot already it might have been
62:28 - 600 oh my god so let's get to 400 likes
62:30 - let's go
62:30 - you guys and we'll dance of course we'll
62:32 - dance
62:36 - nothing bad about that okay so on the
62:39 - sign up function now to do sign again
62:40 - we're going to use the
62:41 - auth from that's going to come from
62:42 - database so we'll do provider auth
62:44 - provider so we're going to copy this
62:46 - same thing is going to happen here we'll
62:48 - say off provider just how did off to
62:50 - sign in
62:51 - we'll use off to sign out okay well here
62:54 - here we'll have
62:54 - auth dot will say sign out
62:58 - sign out like so okay and then we'll do
63:02 - that then so that
63:03 - again is a promise when it's successful
63:04 - to sign out okay
63:07 - i'll make a function inside this
63:09 - function i will go ahead and do the
63:10 - following i will do the
63:11 - two things one is i will set user
63:14 - to null why do you know why daniel
63:18 - yes because we don't want in our
63:20 - database or in our local storage
63:22 - anymore yes in the state so site user
63:24 - will only change it in the state right
63:26 - here
63:27 - but now we want to delete it in local
63:28 - storage too so let's delete that so
63:30 - we'll say local storage
63:32 - local storage dot what that what
63:35 - remove item user
63:39 - done save that you see now it's going to
63:42 - remove the user from local storage it's
63:44 - going to remove the user from
63:46 - what from where it's going to remove the
63:48 - user from uh let me show you
63:49 - go to motherboard user from the state as
63:51 - well and now it should actually take us
63:53 - back to login page
63:54 - because you know why because here we say
63:57 - if the user does not exist where do we
63:59 - go
64:00 - login you see that's the whole goal so
64:03 - i'm going to go and save this
64:04 - you ready for this bro i'm ready um okay
64:07 - let's also make sure this cursor is
64:08 - also uh make this button a cursor
64:10 - pointer let me go back to header
64:12 - dot js we'll make the user image right
64:15 - here a cursor pointer so i'm going to go
64:17 - scroll all the way down
64:18 - okay we'll make this cursor pointer
64:20 - because to make it a button
64:22 - cursor pointer
64:25 - save that and now are you ready for this
64:28 - bro do it
64:29 - are you ready guys for this are you
64:33 - ready somebody says smash that like
64:36 - button so many times you guys can hear
64:37 - it
64:38 - we're currently holy [ __ ] i still
64:39 - haven't smashed a like button let me
64:40 - smash that [ __ ]
64:41 - it was good 362 likes come on let's go
64:46 - okay guys really quickly now now if i go
64:49 - ahead and if i
64:50 - log out look at this i will click this
64:54 - oh look at this bro it's not back
64:58 - it's not back to login page because we
64:59 - removed the user from the session that
65:01 - is beautiful
65:01 - and all i gotta do is i gotta sign in
65:03 - again to bring the user back into the
65:05 - session
65:06 - i will sign in and we do this again
65:11 - send it one more time let's go ahead and
65:12 - do this close declutter programmer
65:14 - uh no this right here oh
65:19 - how cool is that bro what happens if you
65:20 - log in with a different email
65:22 - instead of the quasi-clear programmer
65:25 - you want to test it out
65:26 - let's see it we could we should have an
65:28 - empty chat technically you should
65:29 - i mean no no no no no no the chat oh
65:31 - yeah the chats are the same
65:33 - but there should be a different person
65:34 - but maybe a different interpreter thank
65:35 - you try frankie
65:36 - huh frankie should we try frankie yeah
65:39 - let's try frankie
65:40 - sorry frankie oh frankie lacone is right
65:44 - here
65:45 - you see this so this works yes works
65:47 - guys this works so now currently
65:48 - we're franklin guys everybody give a
65:50 - shout out to frankie like an amazing guy
65:52 - who
65:52 - is behind the scenes doing so many
65:54 - amazing stuff he's literally not behind
65:56 - this he's just behind the scenes
65:59 - yes so that is so so cool man i am
66:03 - actually really really really
66:04 - pumped away are we all good with the
66:05 - with the thing the live call wait we're
66:07 - 60 bucks donations bro
66:08 - wow now we get two coffees thank you
66:12 - guys so
66:12 - yeah i know there's some expensive
66:14 - coffees man
66:17 - oh my amazing amazing cool all right
66:20 - we've got the login functionality we got
66:21 - the logo personally
66:22 - tell us let us know comments guys if
66:24 - you're still pumped with us if you're
66:26 - still with us right now
66:27 - and if you're coding if you want to go
66:29 - on and see the next thing and of course
66:31 - to go on we want to make sure we see 400
66:32 - likes because if we don't see 400 likes
66:34 - we don't go on i'm sorry
66:36 - hey sorry i thought it wasn't gonna be
66:38 - that loud
66:40 - all right let's go ahead and get to this
66:41 - all right quickly we've got the login
66:43 - we've got the log
66:44 - out now the big question becomes
66:48 - this it actually becomes this chat right
66:51 - here
66:52 - okay okay is we now should be able to
66:55 - switch different chats because currently
66:56 - we're only one charcoal clever clever
66:58 - right we should be able to get different
67:00 - chats based on where we are we want to
67:02 - be
67:03 - because you want to go to different
67:04 - rooms like testing or team nas and
67:06 - daniel right okay
67:07 - okay for sure for sure so to make this
67:10 - work a few things kind of need to happen
67:13 - um by the way so let's think about this
67:17 - one is i need to be able to get one chat
67:19 - or i actually need we need to be able to
67:21 - link
67:21 - these channels right here these channels
67:24 - to different chats
67:26 - you see these how do we link them pretty
67:28 - simple let's go back to our sidebar
67:31 - sidebar okay let's go to our sidebar
67:34 - here
67:34 - oh not here save that go to a sidebar
67:38 - okay sidebar the sidebar has what the
67:41 - channels right here
67:43 - to go ahead and link them we're going to
67:45 - create a function called go to channel
67:46 - let's do this right here
67:48 - so we'll say const go to channel right
67:51 - there
67:52 - okay go to channel okay good
67:56 - go to channel and what's going to happen
67:57 - now is we're going to pass in an id into
68:00 - this channel
68:01 - okay watch this with this i will say if
68:04 - id exists as if we pass an id of the
68:07 - channel
68:09 - we will go ahead and do this something
68:10 - something called history so
68:13 - in um in
68:16 - the what's it called in the react router
68:19 - dom
68:22 - router dom we have some something called
68:24 - history guys
68:26 - dumb history history right there
68:30 - the history object the history object
68:32 - guys is what allows us history object
68:35 - is what allows us to be able to actually
68:37 - basically go from one page
68:39 - go from one page to another page to
68:41 - another page and so forth that's what
68:43 - kind of how react kind of allows us to
68:44 - do that now there's multiple ways to do
68:46 - it
68:46 - this is one no this is our way that
68:47 - we're going to do this today okay
68:49 - so let's do this right now let's go back
68:51 - to here
68:52 - okay good good good we'll do we'll use
68:55 - the history from react router down so
68:57 - we'll say
68:57 - import import let's see
69:01 - import import
69:04 - use history
69:07 - use history from
69:10 - we'll say react dash router
69:14 - dash dom boom right there
69:18 - react react broader down okay and then
69:20 - what we'll do is we'll say history
69:22 - we'll say here we'll say we'll say const
69:25 - it's just so initialize the history
69:26 - we'll get the history
69:27 - cons history is history is equal to
69:31 - use history use
69:34 - history right there okay boom okay cool
69:38 - then we'll say the following we'll say
69:39 - the following we'll say history.push
69:42 - history.push dot
69:45 - push right there instead push and we'll
69:47 - give it a
69:49 - a link now how are we going to get them
69:52 - like explain to me
69:53 - daniel well we want to uniquely identify
69:57 - these channels yes how um well if i
69:59 - remember correctly i think in the
70:01 - firebase database
70:03 - you have some sort of unique identifier
70:04 - for these channels correct so if we go
70:06 - look at our database you see we have
70:08 - an actual by the way i don't know if you
70:09 - guys see but we actually have two
70:11 - different people now inside the
70:12 - authentication
70:13 - side of firebase which is pretty cool
70:15 - but yeah you can see we have multiple
70:16 - people who have signed in
70:18 - yeah that's pretty cool right awesome
70:19 - awesome so if we now go to our fire
70:22 - store
70:22 - okay go to firestore you have all these
70:25 - rooms and you can see all these unique
70:26 - ideas these are ideas of rooms
70:28 - so we can identify each room by its
70:30 - individual id
70:31 - you see now to make that work with react
70:35 - with our page what's going to happen is
70:37 - we're going to
70:38 - we're going to take them to in a room so
70:41 - we'll say
70:42 - room we'll go dash room
70:45 - dash and we'll provide the id of the
70:48 - room like so
70:49 - now the way this works is similar to
70:50 - like any other for example like
70:53 - kind of like you know i have a url right
70:54 - here says material icons you see here
70:56 - for example right material icons
70:58 - right it's a url with a unique
71:00 - identifier unique key to that page
71:02 - same thing is going to happen here okay
71:05 - this is going to happen with this room
71:06 - make sense
71:07 - yep cool now check this out so we'll
71:10 - take him to this room id right here
71:12 - this room id and now we need to call
71:14 - this go to channel function from
71:16 - somewhere
71:16 - how well that's going to happen when we
71:19 - go to the channel so if we go to channel
71:22 - we'll say on click on click right here
71:25 - no not
71:26 - add channel unclick we'll actually go
71:28 - ahead and do the following we'll say
71:30 - unclick
71:31 - choo choo choo choo okay and
71:34 - we'll call the function go to channel
71:38 - i'm gonna make sure i get it right so go
71:40 - to channel
71:41 - go to channel guys right there and click
71:44 - go to channel
71:46 - and what are we going to pass into the
71:47 - go to channel function
71:49 - should we pass in the id yes because the
71:52 - item
71:53 - we get the name but we also get the id
71:55 - so we'll say item
71:56 - dot id right here and now we have
72:00 - basically we can create this url that's
72:02 - going to be unique so that we know what
72:04 - channel we're talking about
72:05 - exactly comprende good so let's think
72:08 - about this okay
72:09 - if i go ahead and i will go ahead and
72:11 - i'll console log the id for you guys so
72:13 - i'll say console.log.log
72:16 - that log id right there okay okay d
72:20 - good all right so we got that let's save
72:22 - that next up let's go and inspect
72:24 - element
72:26 - let's do console okay and if i now click
72:29 - for example clever programmer
72:30 - boom you see it's changed the url right
72:33 - here you see this url
72:34 - with the id of clever programmer and we
72:37 - have the id that we get inside the go to
72:38 - channel function
72:40 - boom right there now of course nothing
72:42 - really changes here
72:44 - because why it's all static right now
72:46 - it's all static right now of course
72:47 - that's not rafikaze
72:49 - it's not rafael well who was her name
72:50 - amanda what was her name i don't know
72:52 - amanda something
72:53 - yeah amanda amanda the
72:57 - the the slack the slack clone uh
73:00 - presenter presenter presenter i think i
73:02 - like that the genius the genius
73:04 - exactly so now of course now we need to
73:06 - go back to the routes let's go back to
73:08 - other gs guys
73:09 - and inside the routes to see how we
73:10 - currently accept the room well
73:12 - this is where we need to be a little bit
73:13 - smarter now if we go to app.js
73:16 - okay we need to be able to accept the
73:18 - room with the id so we'll say like this
73:20 - will say
73:20 - slash and we'll say we expect to get
73:23 - back
73:23 - a channel id channel id
73:26 - right here okay and that will allow us
73:29 - to make this chat
73:30 - company okay
73:34 - we got that now however if we do not
73:36 - have a channel id meaning we just go
73:38 - straight to some kind of random into a
73:40 - a a to what's it called to a uh a
73:44 - a root url mm-hmm what shall we do maybe
73:46 - we should tell them that hey you need to
73:48 - select the channel
73:49 - or if you don't have anything create a
73:51 - channel yes so
73:53 - we'll do it we'll do route we'll do
73:54 - route and we'll say the path for the
73:56 - route is going to be let's say the route
73:57 - so path is escape the root if they go to
74:00 - simply just a root
74:01 - url right here we'll say here what we'll
74:03 - say select
74:04 - or create channel select or
74:08 - create or create
74:12 - channel now by the way this is something
74:14 - that nas i don't know if you've
74:16 - remembered to mention yesterday but
74:18 - whenever you have your routes which one
74:20 - has to be the last one
74:22 - the last one always has to be the route
74:23 - always because initially
74:25 - we will check whichever one is kind of
74:28 - like
74:29 - uh abides by the rule whichever one fits
74:31 - the rule so will this one fit will
74:33 - someone else put
74:34 - and the root is always the last one
74:35 - because the rule the rule will kind of
74:37 - fit everything
74:38 - i mean make sense okay good so we got
74:41 - that now if we go to our chat look at
74:42 - this if i go
74:43 - you see this is still good you see the
74:45 - rule is still good right
74:46 - but if i go ahead and let's say i go
74:48 - ahead and just simply go to
74:50 - room right here if i go to the
74:53 - room boom see it says select or
74:56 - create channel guys select or create
74:58 - channel and so i simply go to clutter
75:00 - programmer
75:00 - and boom now i'm on the channel and boom
75:03 - different channel different different
75:05 - different different
75:06 - and that's it that's it that's it that's
75:08 - it
75:16 - good okay good so guys well wait guys
75:19 - hope you're doing it well i hope you're
75:20 - going doing great let's go ahead and get
75:21 - to 400 likes be according to 376 likes
75:24 - while we eat the months while we eat
75:26 - some gummy bears okay let's make sure we
75:28 - get those 2 400 400 likes bro
75:31 - not sponsored these are the snacks oh
75:33 - yeah we're not sponsored let me show you
75:34 - the back
75:36 - they only have nutrition facts bro i
75:38 - don't know
75:40 - so
75:44 - hold on
75:47 - so a little bit of explanation guys to
75:50 - you
75:51 - while we drink so let's get some water
75:52 - okay
75:57 - beautiful
76:02 - okay now at this point really quickly
76:06 - let's go ahead and change something when
76:07 - we're going to click on the channel we
76:09 - should be in different channel would you
76:10 - agree with me outside
76:11 - yes yes so let's go do this if i now go
76:16 - to chat.js you see this chat
76:19 - the channel name is actually here so how
76:21 - do we change that bro
76:23 - we need to pass it in as a prop correct
76:25 - but also
76:26 - we need to create a function called get
76:28 - channel
76:30 - i'll do this what's this we'll say const
76:33 - get channel
76:37 - is equal to what guys 400 likes and we
76:39 - will go ahead and dance come on 381
76:41 - likes come on let's go
76:43 - let's get to 390. like that button right
76:46 - there come on guys you know smash that
76:47 - like button defeat the youtube algorithm
76:49 - you guys
76:49 - we're delivering a ton of value we are
76:51 - working so hard me and dan this guy this
76:53 - guy's almost dying we're almost dying
76:55 - i'm done but i'm doing it for you guys
76:56 - i'm here for you guys
76:59 - so let's go ahead and smash that like
77:00 - button we are working all so hard to
77:01 - make sure that we provide this to you
77:03 - because
77:03 - we want to teach you to the best
77:05 - possible way out there right
77:07 - you want to be the best the best
77:09 - community out there
77:10 - and we are the best community out there
77:11 - at this point so that's going to hold
77:13 - the goal
77:13 - awesome let's go ahead okay cool cool
77:15 - cool so get channel
77:17 - what's going to happen get channel is we
77:19 - will go ahead and use a database to get
77:20 - the channel information about it but
77:23 - so we'll say this we'll say this what's
77:24 - up db the collection
77:27 - now of course need to actually import
77:28 - the b so we need to say import db from
77:30 - where
77:31 - from where our db file which is firebase
77:35 - all right so we'll say from firebase so
77:36 - say dot dot slash we'll say firebase and
77:38 - again the reason why
77:39 - we said is because chat is inside
77:42 - components right here
77:44 - and the firebase is actually outside of
77:46 - components firebase file is actually
77:47 - inside
77:48 - outside the component so dot dot is like
77:50 - hey go outside the components folder
77:53 - and then go inside here does that make
77:54 - sense cool
77:56 - all right so that that will give us the
77:57 - db also db.collection
78:00 - right here and we'll get the rooms
78:02 - collection remember how i said the
78:03 - collection was like a notebook
78:04 - okay collection rooms to
78:08 - do rooms right here rooms okay
78:11 - and inside there we'll give it provided
78:13 - a room id
78:14 - dock some id but of course we don't have
78:18 - the id
78:18 - where because where's the id is it in
78:21 - the database
78:22 - it's in the url oh it's in the url the
78:25 - id is actually in the url
78:27 - so what react butter does for us is we
78:30 - actually can get 30 so say let's for
78:32 - example channel id
78:34 - look at this guys we'll say channel id
78:37 - is equal to is equal to pay attention
78:39 - here real quickly
78:41 - use params params
78:44 - now where does this come from this comes
78:47 - from
78:47 - react router dom use prem so i'll go
78:49 - ahead and copy this here
78:52 - it comes from regular dom use params
78:55 - it's a function that comes with react to
78:57 - router dom
78:58 - which we'll go ahead and look at the the
79:02 - the id here okay look at the id
79:05 - here and because if we go to
79:08 - app.js we define this to be channel id
79:12 - it will directly map this right here
79:15 - this string
79:17 - to the channel id variable like look at
79:19 - that you see right there
79:21 - and so now if we go to right there if we
79:24 - go to chat.gs
79:26 - we can use that we can say get parameter
79:28 - channel id because we know we mapped it
79:30 - correctly
79:31 - all right good and now we can say
79:34 - channel id channel id cool
79:37 - and then we'll say oh that's good
79:45 - you good some reason it's just not it
79:47 - kind of does not show up somebody
79:49 - okay so doc dot on snapshot dot on
79:52 - snapshot
79:53 - okay basically a picture of the current
79:56 - channel so it's kind of like it's taking
79:57 - like a
79:57 - it's like it's kind of like taking a
80:00 - snapshot of the current channel id
80:02 - of the current channel and then what's
80:04 - going to happen is we will
80:05 - very simply just go ahead and we'll get
80:08 - the data so we'll say on snapshot we'll
80:09 - get the snapshot right here
80:13 - we'll get snapshot
80:16 - snap shot boom right there
80:21 - snapshot snapshot
80:24 - and we'll now do is we'll now set the
80:26 - channel data but how do we set the
80:28 - general data well for one we can do
80:29 - console.log
80:30 - let's see this for now we'll say
80:32 - console.log
80:35 - here we'll say the following we'll say
80:37 - console.log
80:38 - snapshot snapshot
80:42 - dot data check this out guys
80:45 - okay now okay let's do console.log
80:49 - let's do and let's do get channel here
80:52 - get let's go ahead and call this
80:54 - function actually we'll call this
80:55 - function
80:56 - all right so look at this now this we
80:58 - have the channel id let's go ahead and
80:59 - right click inspect download this
81:01 - console and what do we have oh we have
81:04 - an
81:04 - object and look at this here's a channel
81:06 - goona
81:08 - why do we name it
81:09 - [Music]
81:11 - do we need that and if i change it now
81:14 - look at this if i change it now we have
81:16 - travel you see
81:18 - team nas team nas and daniel
81:23 - what i'm just driving because i'm i
81:25 - don't remember those channels i don't
81:26 - remember
81:26 - them either honestly i don't know why
81:28 - you think someone's back in there
81:30 - i don't know whatever programmer is in
81:32 - the other one of course as well okay
81:34 - guys that's the really cool part about
81:36 - this so that's what happened right
81:38 - you can channel but of course now what
81:39 - needs to happen is we need to go ahead
81:41 - and
81:42 - call the get channel function whenever
81:44 - we do what whenever we go ahead and
81:46 - actually just simply
81:47 - change the channel id so what we do is
81:50 - we use something called use effect
81:52 - we do comma let's use user effect
81:56 - use effect effect right there use effect
81:59 - okay
82:00 - and inside here was to do this was i use
82:02 - effect
82:03 - use effect okay this is a function and
82:06 - the way it's going to work is pretty
82:07 - simple guys check this out
82:09 - okay what's going to happen is we will
82:13 - now
82:14 - change the channel id
82:17 - so this will listen for changes in the
82:21 - channel id
82:22 - of the params whenever the param of the
82:24 - channel id
82:25 - changes meaning we click on a different
82:27 - channel so now this changes
82:29 - boom it's going to fire whatever
82:30 - whatever you put in here that's
82:32 - that's the really really kind of like
82:34 - like this this is why use effect is
82:36 - so important like
82:39 - so important super duper okay
82:43 - cool all right inside here is the user
82:45 - effect of course whenever we change the
82:47 - channel id
82:48 - we will do the get channel function
82:51 - digital function okay and i'll just go
82:54 - ahead and do this and i will do
82:55 - let's inspect element cool cool cool
82:58 - cool
82:58 - all right object this is the object
83:00 - wheels get channel if i go ahead and
83:01 - click team
83:02 - daniel oh let's go oh testing ooh
83:06 - challenge guys how cool is that okay
83:09 - that's awesome
83:10 - next up we now need to use that data the
83:13 - snapshot data somehow well we can use
83:15 - use state so we'll say cons
83:18 - channel and we'll save the data inside
83:20 - the state
83:22 - i'll say set channel say channel okay
83:25 - and we'll make it equal to use
83:28 - state state and of course we need to
83:31 - import state so it's going to use state
83:33 - and we'll import state in here so we'll
83:34 - say comma
83:36 - use state guys use state okay
83:39 - comprende good all right and inside here
83:42 - now
83:42 - whenever we get the data instead of
83:44 - doing console.log we'll do
83:46 - set channel set channel snapshot.data
83:51 - boom right there and now this chat.js
83:54 - component will have what daniel the data
83:57 - the data it will have the channel state
84:00 - right here the channel that we set in
84:02 - here you see and we can use that now
84:05 - by doing it go hashtag instead of doing
84:07 - clever we say
84:09 - channel now what name name
84:13 - so now guys are you ready for this bro
84:15 - yes do it dude
84:18 - look at that travel react
84:21 - testing guna gonna i think it's gonna
84:25 - dude
84:25 - travel all right look at this you see it
84:28 - changes
84:29 - based on what on whatever the url
84:32 - is guys and what we select let's get us
84:35 - to 400 likes for this
84:37 - amazing edition of a feature guys
84:40 - we are currently at 395 likes can we get
84:43 - to 300
84:44 - 400 bro i think so i think we can
84:47 - i'm uh what oh we lost
84:51 - like oh come on guys someone's messing
84:54 - with us
84:55 - got it 396 okay 26 398 guys 398 ready
84:59 - wait wait wait for this ready for this
85:00 - bro
85:00 - thank you guys so much oh and we are at
85:03 - thank you
85:05 - so much for the 400 400 let's go
85:08 - 400 likes that is what i'm talking about
85:11 - i know i'm gonna i'm gonna drop it right
85:13 - later on we'll drop it later on
85:14 - later on later on later on okay cool
85:16 - what are snapshot
85:17 - for great questions so a snapshot right
85:21 - here so let's go back to uh
85:23 - here a snapshot is how we get the data
85:26 - of this channel individually okay
85:28 - snapshot is basically saying on this on
85:30 - the picture kind of like um
85:33 - snapchat is almost like do we have the
85:35 - book
85:36 - the piece of paper no we don't okay
85:38 - snapchat is like let's say you had that
85:40 - book right
85:40 - you had that book guys okay i took a
85:43 - picture of that book
85:44 - i took a picture of that book and it has
85:46 - the data of the current
85:48 - date and time okay has that data that's
85:51 - a snapshot
85:52 - a snapshot basically is the data of
85:55 - that channel that's it that's all it is
85:59 - the data of that channel and whenever
86:01 - the thing is why the reason why you say
86:03 - on snapchat is because
86:04 - whenever the snapshot changes meaning we
86:07 - maybe
86:08 - we modify something whenever it changes
86:11 - we actually will go ahead
86:12 - and this be called again and the set
86:14 - channel will be modified as well
86:16 - you see that yep cool so that hopefully
86:19 - explains a little bit about the about
86:21 - the channel okay cool
86:22 - all right now we got the channel we are
86:24 - currently going through all the
86:25 - different channels but what
86:26 - but what's the big thing that's missing
86:28 - bro we're still missing
86:29 - all of the conversations from a channel
86:31 - the messages right here
86:33 - the messages this is the big part this
86:36 - is the
86:36 - the big thing this is the the main
86:39 - portion of the slack
86:40 - the meat the meat the potatoes the
86:43 - potatoes
86:44 - and we need to make it work okay you
86:46 - ready
86:47 - okay i'm ready okay so let's get to
86:50 - messages guys right now
86:52 - all right for the messages let's go back
86:54 - to firebase
86:55 - and here's the thing every single the
86:57 - way we're going to save a message is
86:59 - pretty simple
87:00 - every single channel in here is so you
87:01 - have a scene fire in firebase you see
87:03 - that right there testing guna testing
87:05 - right there and so forth
87:06 - we will go ahead and do for every
87:08 - channel we'll have a collection called
87:09 - messages okay so let's do this we'll
87:12 - start collection we'll say messages
87:14 - messages collection that's right here
87:17 - okay cool
87:18 - next and inside here every message now
87:20 - inside the messages collection every
87:22 - message will now have some sort of data
87:25 - well look at this it will have things
87:26 - like for example let me go ahead and
87:28 - share this
87:29 - with you it will have things like for
87:31 - example text
87:33 - text so this is for example let's say
87:35 - text
87:36 - message that's the value okay it will
87:39 - have a field like for example
87:41 - well a user so let's say for example
87:43 - this is a rafikazee
87:48 - it will also have something like a user
87:50 - image so it's a user image
87:52 - right here user image and that may be an
87:54 - image so for example
87:56 - an image of qazi might be let's say this
87:58 - is frankie let's go back to here we'll
88:00 - right click on this we'll copy image
88:01 - address
88:03 - and we'll pay to put into here okay
88:05 - sorry frankie rafikaze is going to be
88:07 - frankie
88:08 - so that's fine and then what we'll do is
88:10 - we'll have a timestamp so do timestamp
88:12 - is
88:12 - when somebody added this specific
88:15 - that specific thing understand yes
88:20 - [Music]
88:25 - oh okay next up
88:28 - thank you for the 400 yes thank you so
88:30 - much so
88:32 - timestamp and the timestamp is actually
88:34 - going to be a timestamp value right here
88:35 - guys so this out timestamp value
88:37 - let's do it today so we'll go ahead and
88:39 - select it today as well and we'll just
88:40 - save okay
88:42 - and you can see that now this react
88:44 - challenge
88:45 - uh collection uh channel now has a
88:47 - collection of messages inside of it
88:49 - where every message there's a list of
88:51 - messages are going to be saved in here
88:52 - you see yep yes okay good now the
88:56 - question because is
88:57 - our first goal right now is to get the
88:59 - messages
89:00 - how do we make that work well let's go
89:02 - back to our react application
89:04 - let's go back to our right here chat
89:07 - and let's create a function called what
89:10 - called get messages
89:12 - so what we'll do is we'll just if you
89:13 - have a get channel we'll say const
89:15 - get messages right here is ecotool
89:19 - function
89:21 - boom okay get messages and then
89:25 - sorry come on let me get the water once
89:27 - i can guess
89:30 - inside here now we'll use the db that
89:33 - collection to get a message so here's
89:34 - what we'll do
89:35 - we'll do db the collection just like we
89:37 - did before give you the collection rooms
89:39 - okay we'll select the individual
89:42 - room so we'll say dot dock
89:45 - and we'll here we'll do channel id just
89:48 - how we've done it before
89:49 - channel id you see that right there yes
89:51 - channel id okay
89:52 - now within that room channel we have
89:56 - more what the chat more chats so we have
89:59 - more now collection so we'll say dot
90:01 - collection
90:03 - right it's like almost like having a
90:05 - book within a book
90:06 - you see what i mean it's like a book
90:07 - within a book so you're getting one book
90:10 - which is the rooms
90:11 - then getting another book called
90:12 - messages within that book you see
90:14 - so let's try that that collection and
90:17 - now we'll say here we'll say
90:18 - messages messages
90:21 - and this will and then we'll order the
90:23 - messages order by so say order
90:25 - by order by time step ascending
90:28 - so we'll go from the the last one to the
90:31 - newest one so we'll say
90:32 - we'll do order by we'll say time stamp
90:37 - comma and we'll say ascending asc
90:40 - okay and again here we're going to use
90:42 - the on snapshot portion we'll say on
90:44 - snapshot
90:45 - boom just how did for every single one
90:48 - boom boom boom boom boom boom boom
90:50 - we'll have the snapshot in here order by
90:53 - that order by that order by dot on
90:57 - snapshot
90:58 - snap shot right here snapshot right here
91:01 - beautiful
91:02 - okay and with this one this is what we
91:05 - now
91:06 - will go ahead and just save the messages
91:09 - now where will we save the messages bro
91:14 - where we say oh gotcha gotcha in the
91:17 - snapshot.data
91:18 - yes that's where we get the data but how
91:20 - are we going to save this data in the
91:21 - state
91:22 - or in the component oh we're going to
91:24 - put in the state exactly
91:27 - i give you the answer bro so i'll say
91:30 - cons let's tell them bro comments right
91:31 - here
91:32 - we'll say messages messages comma
91:35 - set messages so again we'll say the
91:37 - messages in the state okay
91:39 - is equal to what is equal to use state
91:42 - and we'll initialize it with
91:43 - just an empty array okay initialize
91:46 - that's a default value okay
91:47 - and whenever we go ahead and now on the
91:49 - snapshot we'll do the following we'll
91:51 - say
91:52 - send messages set messages
91:57 - messages actually let's go ahead and do
91:58 - this we'll say let let
92:00 - messages is equal to snapshot
92:05 - dot docs dot map and the map is again is
92:08 - going to loop through every single
92:09 - message
92:10 - okay and we'll go ahead and get a doc
92:13 - right there doc doc and will return to
92:16 - us
92:17 - doc dot data so doctor data about that
92:20 - message makes sense comprehending yes
92:21 - good that will be the message and what's
92:23 - going to happen now we do send messages
92:26 - you will now pass it into the state
92:28 - right here so we'll say messages
92:30 - oh right there okay and now when we the
92:33 - question becomes is
92:34 - where do we call this get messages
92:36 - function what do you think
92:38 - you get messages function is going to be
92:40 - called whenever we go into the channel
92:42 - we want to get the messages so we could
92:43 - display them
92:44 - yes exactly so here whenever you see how
92:48 - whenever we change the
92:49 - channel channel id well we get the
92:52 - channel
92:52 - why not get the messages as well hey
92:56 - so we go ahead and we'll do we get get
92:58 - messages
93:00 - right here we save that portion in the
93:04 - get messages function
93:05 - boom save that and now if we go to here
93:07 - let's go ahead and do do
93:08 - refresh and we have a name of
93:13 - undefined let's see so canary property
93:15 - name of
93:16 - undefined that could be interesting for
93:17 - some reason let me see
93:19 - name name name channel name
93:23 - let's remove this for now
93:27 - okay that's fine that's fine so color
93:29 - programmer
93:30 - so let me see so get channel
93:34 - get messages that's fine
93:38 - let me try one more time channel that
93:39 - name
93:43 - channel set channel function inside here
93:47 - okay do it one more time all right that
93:51 - works i think there's a glitch or
93:52 - something i think there might be money
93:53 - but glitch or something like that maybe
93:54 - we forgot to reload
93:55 - i'm not sure but anyways so look at this
93:58 - now of course
93:58 - we now had the messages so if i go ahead
94:00 - and console log let's go into
94:02 - console.log
94:04 - the log messages guys messages
94:08 - what's going to happen because all the
94:10 - messages i will do right click and we'll
94:11 - do inspect them on here
94:13 - okay console look array of zero no
94:16 - messages here but if i
94:17 - go to clever programmer oh you see well
94:20 - now send no messages
94:22 - why do we have a message by the way
94:23 - which one we haven't made any messages
94:25 - we did react challenge
94:26 - oh okay look at that right there let's
94:28 - go
94:29 - you see that right there timestamp text
94:31 - messages the message that we
94:33 - sent and the user image bro how sick is
94:36 - that
94:36 - everything we need everything we need
94:38 - now so we got these messages in here
94:41 - okay great
94:42 - now to show them in here all we do is we
94:45 - loop through them man
94:46 - yeah because we already set up the
94:48 - component to take it on and make it
94:49 - pretty like that let's go ahead and look
94:51 - for them so we got the messages right
94:52 - here
94:53 - in the bottom of the chat let's go and
94:55 - loop through them and actually show them
94:56 - so here's what i'll do
94:57 - in the message content where do we have
94:59 - the message content right here message
95:00 - container
95:01 - yeah mr container i will go ahead and do
95:03 - this i will create a function i'll not
95:05 - function but i will say
95:06 - if the messages if there are messages so
95:08 - say message.length
95:10 - is greater than zero zero okay
95:13 - and so this is actually a shortcut guys
95:16 - we'll do messages the map
95:20 - we're going to loop through every single
95:22 - message right here
95:25 - okay and then that's weird no no no no
95:28 - this is weird remember how we did the
95:30 - one chat message
95:31 - this is where we now go ahead and use
95:33 - the chat message
95:36 - you see how we had that static check
95:38 - message but now we use that chat message
95:40 - when we loop through every single
95:41 - message so here we'll save data
95:44 - yeah of course we're going to use the
95:45 - index here for a second here but by the
95:47 - way
95:47 - do you understand what this means
95:51 - this means right here the first part
95:54 - this portion right here
95:56 - basically you want to make sure that
95:58 - there's actually
95:59 - messages inside of this mesh message
96:02 - list correct and then from there you're
96:03 - going to start to iterate through all of
96:05 - those
96:06 - correct make create chat message
96:08 - components from that correct
96:09 - the way this works guys is pretty simple
96:12 - when
96:12 - basically what this end is kind of
96:14 - almost like um if
96:16 - saying is if this is true then we
96:18 - execute this basically
96:20 - that's what this is going it's like a
96:21 - shortcut okay so basically if the length
96:23 - of messages is greater than zero meaning
96:25 - we have messages
96:26 - then we will loop through them and
96:28 - actually show them make sense
96:30 - otherwise we won't show them at all okay
96:32 - cool so the chat message now of course
96:34 - if i save this okay if i save this
96:36 - granted nothing pretty much i'm gonna do
96:38 - this again
96:40 - oh come on every single time
96:44 - come on channel that name i think it's
96:46 - because
96:47 - get channel
96:50 - let me see channel oh i know why because
96:52 - i need to do this guys
96:54 - if i say you do is say channel
96:58 - because it needs to exist yes there you
97:00 - go there
97:02 - cool because sometimes it's called the
97:03 - risk condition sometimes the channel
97:05 - does not exist yet but you know it loads
97:06 - kind of later on that's the whole goal
97:08 - that's why
97:09 - so look at this we have now this if i go
97:10 - to travel you see this it doesn't exist
97:12 - but a photograph challenge exists
97:14 - because
97:14 - that's where one of those messages are
97:16 - but it's just the problem is what is the
97:18 - problem now
97:19 - it's not displaying what we want to
97:20 - display still displaying the old
97:22 - static information exactly well this is
97:24 - where we can pass
97:26 - in the props of that data so remember
97:28 - what did the data have well the data had
97:30 - a few things well if you go to
97:31 - data data had text and so forth so we'll
97:34 - do do we'll do this we'll say text is
97:36 - equal to
97:37 - data what text okay
97:41 - then we have what image name i think
97:44 - right then we have user or name
97:46 - go go into the we have user so we'll say
97:50 - name is equal to
97:51 - data dot what user
97:55 - next we have what image say image
97:58 - is equal to what data dot
98:02 - user image user image okay cool and the
98:05 - last one is which one
98:07 - time time stamp so say time
98:10 - time stamp is equal to what
98:14 - data
98:17 - [Laughter]
98:23 - he's working very hard you know so data
98:25 - timestamp
98:26 - okay and we pass all those into the chat
98:28 - message you see so chat message right
98:30 - there
98:31 - cool how do we you know get that from
98:32 - here daniel well since they're props
98:35 - we got a little prop guy there but we'll
98:38 - unfold the props
98:40 - like this yeah
98:43 - so here we'll say what do we say text
98:45 - come what
98:47 - name comma what image image come
98:50 - what time time stem
99:01 - all right all right so now we get the
99:04 - time
99:05 - stamp right there time step okay and now
99:08 - we can replace
99:09 - this stuff like this so it's now rafael
99:11 - khanzi look at this bro
99:13 - change this to name coffee rossi what
99:15 - what i mean
99:17 - put that name in there which one where i
99:20 - was messing around
99:21 - it's not rafikaze i was like it's coffee
99:24 - rust
99:30 - the text now goes here guys should this
99:31 - out text now goes here
99:34 - and look at this by the way if we go and
99:36 - look at this right now
99:37 - oh let's go rafa costa coffee rossi
99:41 - and a text message that's the message
99:42 - that we put in where in the database
99:45 - oh right there bro
99:48 - right there that's so beautiful
99:51 - okay let's now go ahead and change this
99:53 - image right here
99:55 - we'll change this image to also now
99:56 - contain what to contain uh
99:58 - the image url the image url so let me
100:00 - cut i think so
100:01 - image image so we'll say here jsx
100:06 - i'll say image image as well so let's go
100:09 - ahead and refresh this
100:10 - oh
100:15 - let's go that is amazing okay cool
100:19 - next up what's going to happen now let's
100:20 - go ahead and change this time step
100:21 - that's the only thing i need to do
100:23 - so channel message one second hold on
100:25 - message wait maybe i'm a little confused
100:27 - what shouldn't that be the rafikaze
100:29 - image no because we set it
100:31 - manually inside okay we we yeah yeah
100:34 - yeah yeah that's why that's why all
100:35 - right so yeah but we probably should
100:36 - change it later on okay for now
100:38 - frankie frankie could be kazi for now
100:40 - yes temporarily okay
100:41 - i think he will find so here's we'll do
100:44 - we'll use this time set the one we'll
100:45 - use this time to is pretty simple we'll
100:46 - do like this
100:48 - we'll we'll do a new date okay
100:51 - and we'll do no not like this we'll do a
100:53 - new date
100:55 - like this or is the function a new date
100:58 - that's the function that kind of comes
101:00 - with javascript
101:01 - no date not new data and then we'll do a
101:03 - timestamp we'll pass in a timestamp
101:06 - right here and we'll do the dot to date
101:09 - to convert to a date because right now
101:11 - it's just a string and we'll do
101:13 - to date and
101:17 - actually let me see i think that's
101:18 - pretty much it let me see
101:20 - if i save that
101:24 - all work all work oh my god
101:28 - oh my god if you meant order collection
101:31 - the thing is said
101:32 - send messages they'll react child i
101:34 - think has to do something with the date
101:36 - you see this date right here
101:38 - so time step dot to date i think i need
101:40 - to convert it to a ut
101:41 - let me think about this
101:45 - let's see dot 2 utc
101:49 - string
101:53 - there we go so this made it into an
101:56 - object
101:56 - but we need to convert to a string like
101:58 - this right here see gotcha
102:00 - come printing so we got that look at
102:02 - this we have all this
102:03 - we have the master so now if i go ahead
102:05 - and add a new message here let's go
102:07 - let's say if i change a message here
102:10 - say yo ready update
102:14 - cafe rossi oh let's go
102:18 - guys that is awesome that is sick
102:22 - holy moly we are so close to being done
102:24 - to fully finishing
102:25 - oh oh frank in the house right here come
102:28 - on frankie
102:30 - also good to see him oh yeah hold on
102:32 - just let me get these two
102:33 - okay what up everybody hold up
102:38 - okay cool so no
102:42 - guys who is bomb with us who's ready
102:45 - to find to create the last
102:48 - portion of the slack thumb drop it down
102:50 - the comments below
102:54 - and we'll get it done you ready bro yes
102:56 - yes what are we doing
102:57 - i know you're telling me we are gonna
102:59 - crush this slack club
103:02 - and that's not the right way to do it no
103:04 - so
103:05 - guys the last part that we need to do
103:09 - is very simple all of this works right
103:11 - here
103:13 - okay the last part is actually the input
103:17 - we now need to be able to allow
103:20 - everybody's like we already know let's
103:21 - go
103:22 - we now need need to be able to
103:25 - to what send a message
103:29 - that's it that's the main goal now okay
103:31 - so let's go and send the message are you
103:32 - ready for this bro
103:33 - i oh um
103:39 - [Music]
103:50 - hey dude my neck is sword
103:55 - it's your fault but not mine
103:59 - all right guys all right let's go get in
104:02 - by get into it here
104:03 - all right so we get the text message in
104:04 - here that's amazing that's all awesome
104:07 - um now let's go back to the chat
104:10 - this is where now we will go ahead and
104:12 - actually and actually control
104:14 - how we submit and how we send a message
104:16 - to the chat okay
104:18 - if we go to the chat input right here
104:21 - let's go to chat input that's a chat
104:26 - the chat has a form okay the chat form
104:29 - when you click submit we need to go
104:30 - ahead and actually send the
104:31 - send data to to our database okay now
104:34 - what's going to happen is if you go back
104:36 - to chat.js we can actually do that by
104:37 - creating a function called what
104:42 - what was the question i was reading the
104:44 - comments over here send a message so we
104:46 - need to create a function called
104:47 - bad student bad student fast student
104:49 - daniel guys everybody called daniel best
104:51 - student
104:54 - all right so send message is the
104:55 - function that we will create now at this
104:57 - point all right
104:58 - this send message function will pretty
105:00 - simple simple it will take an input of
105:02 - text
105:03 - in text okay text right here ah
105:06 - no not this text right here so text is
105:08 - what we will get okay cool
105:10 - text right here awesome inside this text
105:14 - okay look at this inside this text what
105:16 - we will do is we will add this to db
105:18 - the collection of images so here's what
105:19 - we'll do if
105:21 - it will say this if channel is so
105:24 - currently if we are currently at channel
105:25 - so if channel id
105:26 - exists okay if channel id channel id
105:30 - okay good then we will go ahead and add
105:32 - the what's
105:33 - called the uh the text so let's kind of
105:35 - first thing we want to do is
105:36 - create something called a payload a
105:38 - payload is what you will
105:39 - kind of like um i know how you have a
105:41 - payload for a trailer
105:42 - right it's like a it's some you know
105:44 - it's a box where it might be or a rocket
105:46 - a rocket
105:46 - okay fine all right rockets have
105:48 - payloads that you send to fuel pillar
105:50 - right
105:50 - fuel well we also have a payload we will
105:53 - send back to database
105:54 - and that payload guys is actually the
105:55 - data of the text message
105:58 - so let's do this we'll go ahead and say
106:00 - the following
106:01 - it could remove this
106:05 - all right if channel id will say let
106:08 - payload
106:10 - is equal to an object in our case audio
106:13 - will have a few things the first one is
106:14 - going to have a text so the text is the
106:16 - actual text we'll say text
106:17 - and we're going to pass in the text that
106:19 - we pass in from the send message
106:21 - function
106:21 - but there okay so this right here will
106:24 - come in from here
106:25 - okay cool next up we'll do user we'll
106:28 - say user
106:30 - is equal to how do we get the user now
106:33 - um we will pass in the user we're
106:36 - passing the user where
106:37 - but the user is currently inside where
106:39 - the app.js
106:41 - inside here we need to pass in the user
106:44 - back to chat as well so if we go ahead
106:48 - go to chat you see we'll say user
106:51 - is equal to user
106:54 - right there see now if i go to
106:58 - chad.js okay yes
107:01 - and i will accept the user as a prop and
107:03 - i will i'll go ahead and i will
107:05 - unbind it so i'll say user right here i
107:08 - can also i can
107:09 - now also inside here where is it
107:12 - say user user.what
107:16 - name i think right or user and username
107:20 - that's what we did right let me go check
107:23 - it check it out to make sure it's all
107:24 - good let me share let's go to login
107:27 - yeah user dot name right there user dot
107:30 - name that's something we want to use
107:31 - correct
107:32 - let's go to chat.yes good user dot name
107:36 - that's going to use
107:37 - and then for the photo image for the
107:39 - user image
107:41 - image image we'll say user
107:44 - that what folder image photo photo name
107:48 - correct so we'll create that payload
107:52 - and the last thing to do is we need to
107:53 - create a timestamp so timestamp
107:56 - timestamp is the time of when we will go
107:58 - ahead and edit the database
108:00 - now the way we do this is actually you
108:01 - see some using fires to fire base
108:04 - what's going to happen is go ahead let's
108:05 - go ahead and import firebase we'll say
108:06 - import
108:08 - import firebase from
108:13 - from where firestore
108:16 - from firebase right here ah
108:20 - firebase right here okay
108:23 - cool let me see uh and it's by the token
108:27 - oh that's fine oh timestamp because why
108:31 - and what's going to happen is you will
108:32 - use the firebase firestore timestamp
108:34 - let's do firebase
108:36 - dot firestore dot
108:39 - timestamp right there dot now
108:43 - this is a time set that comes directly
108:44 - from firebase so if i go ahead and do
108:46 - this let's say firebase
108:47 - firebase uh timestamp
108:50 - right there right there see
108:54 - this gives us a way to actually get let
108:57 - me see this one
109:02 - let me show it to you i want to show it
109:03 - to you here for a second for one second
109:05 - right there firebase that fires up the
109:07 - time step the timestamp represents a
109:09 - point in time independent of any time
109:10 - zone or calendar
109:12 - represented as seconds and fractions of
109:13 - a second or 90 seconds in utc
109:16 - that's why it's so important got it
109:17 - perfect cool and that's exactly what
109:19 - we're going to use
109:20 - so comma in here comma and that's what
109:22 - we will pass so let's do console.log
109:26 - the log and we'll do send message
109:29 - so uh the payload so payload is what we
109:32 - will pass in
109:33 - now check this out guys let me show you
109:35 - with this payload how do we now save
109:37 - this payload to database
109:40 - we have to uh save it to the collections
109:43 - so we will do db
109:44 - dot collection and we'll give it what
109:49 - rooms collection and then we have to get
109:51 - the chat we have to pass in the channel
109:54 - yeah so we have dog correct oh damn look
109:56 - at that bro
110:00 - oh come on i gotta hide it from you
110:06 - that what collection collections okay
110:10 - of what of messages right
110:13 - of messages right there of messages and
110:16 - this is where we now
110:17 - add the pillow do that add the what
110:21 - payload right there payload
110:25 - pay load and that's it and that is
110:28 - pretty much it we add the pillow and
110:30 - that is it my friend
110:31 - got it going right there boom that is it
110:35 - so you be the collection of rooms like
110:36 - dog channel id
110:37 - collection messages so basically we're
110:39 - getting the rooms
110:40 - we're getting the current channel we're
110:43 - getting the messages from the current
110:45 - channel
110:46 - and we're adding a new text a new
110:48 - message to that payload
110:50 - to that channel make sense beautiful
110:52 - good all right now the question becomes
110:54 - is
110:54 - how do we call this function where
111:00 - where we're gonna call it whenever we do
111:03 - the on submit
111:04 - hey let's go you see you can throw a
111:07 - payload exactly
111:08 - exactly now we call and submit inside
111:11 - the chat input
111:12 - that means that inside the chat input we
111:14 - actually need to call the send message
111:15 - function
111:16 - so we'll pass in that function inside
111:17 - here so send message
111:19 - is equal to send a message i'll pass it
111:22 - a function into the component itself
111:24 - i will go to chat input in the chat
111:26 - input i will accept
111:28 - that component or that function by
111:30 - saying send message
111:33 - and now look at this this is where
111:36 - guys we are so close you have no idea
111:38 - like literally like almost like five
111:40 - minutes away from fully finishing this
111:42 - application man i'm not kidding
111:44 - this is exciting it's exciting man this
111:46 - is exciting just comes in
111:48 - like funny clicks we have all these
111:50 - between the css the html
111:52 - and it finally comes together to this
111:54 - point
111:55 - right now all right let's watch this
111:57 - really quickly all right
111:59 - so i am pumped
112:02 - all right if we go ahead and go to check
112:04 - input
112:06 - right there i will create a function
112:08 - here called send
112:10 - consent this function is pretty simple
112:13 - this function will be called by the
112:15 - button itself right here
112:17 - right there okay the button itself the
112:20 - send button is what we'll call when i
112:22 - unclick when i do unclick
112:24 - of this button okay on this button
112:27 - what's going to happen is pretty simple
112:30 - i will say
112:30 - unclick and i will say send send it
112:34 - send it send it now the button by
112:37 - default actually passes
112:38 - in what passes in the event like this
112:42 - this event will actually refresh the
112:44 - page and we do not want that to happen
112:47 - okay so so we want to do we will do e
112:50 - dot prevent default to prevent the
112:52 - refresh of the page right there
112:54 - and this is where we go ahead and do
112:56 - send message
112:58 - we call the send message that we get
112:59 - from the chat
113:01 - right here now the question becomes is
113:04 - what do we pass in
113:05 - what text do we pass in would it be the
113:08 - text from the payload
113:12 - yes well yes and no
113:16 - this is where we have to keep track guys
113:18 - i don't know just daniel this guy just
113:20 - like you know he's like he's feeding but
113:21 - you know i don't know
113:22 - so look
113:26 - so this is where we need to keep track
113:28 - of our input
113:29 - again i'm going to create a state called
113:31 - const input
113:33 - input input set input right here
113:37 - input this will allow us to keep track
113:40 - of what we're currently typing
113:41 - look at this let's say use state and for
113:44 - now i will say nothing
113:45 - i will say it's an empty string then
113:48 - what's going to happen
113:49 - is unchanged what happens here you state
113:51 - oh you said i defined you need to import
113:53 - it here
113:54 - so you state
113:58 - we'll say user state you state
114:02 - okay brando why not all good oh good oh
114:04 - good oh god you stay
114:05 - awesome and what's going to happen now
114:08 - at this point
114:09 - is is pretty simple is we will now go
114:12 - ahead
114:13 - and we will on the change of the input
114:16 - whenever we type
114:17 - we'll do unchange on change
114:21 - what are you laughing at [ __ ] the
114:23 - comments
114:24 - but i pay attention i love it
114:28 - dude i think i already failed man how do
114:30 - you feel bro
114:34 - oh my god unchanged we'll pass on the e
114:37 - that's so that's what happens when we
114:38 - get input
114:41 - okay we'll pass in the e right here e
114:43 - right here
114:46 - and we'll d we'll set the input here
114:48 - because why daniel
114:49 - because it's on the event no
114:56 - guys what do you think daniel deserves
114:58 - for this give it a b
115:00 - c d e d or f in terms of great guys let
115:03 - me know but then but then grade me on my
115:06 - djing and dancing skills and i'll be
115:08 - happy i'll be happy let's grade him on
115:10 - this
115:11 - on his skills oh my god it's funny
115:15 - so here we'll do this okay we'll see
115:17 - you've got the answer right there bro
115:22 - set input right and this is where here's
115:24 - the thing
115:25 - on the change right the input itself has
115:27 - an e value this is called an event
115:29 - and the event contains something called
115:31 - e dot target
115:33 - that value right there right there you
115:35 - take that value
115:36 - and so we will do is we will change this
115:38 - input right here
115:40 - every single time that we change the
115:42 - input
115:43 - as we type make sense yep good good good
115:45 - i'm i'm curious so
115:47 - what people are saying yeah people are
115:48 - backing me up they're like don't bully
115:49 - him let's go
115:50 - okay thank you so much i appreciate that
115:52 - come on guys
115:54 - come on you guys are way too nice to him
115:56 - no no no
115:57 - no no but i did get lots of d's and f's
116:00 - yeah but it's all good some people give
116:02 - me a for both so i appreciate that
116:06 - awesome so when we send a message now
116:09 - all we simply do bro look at this bro
116:12 - see that's it because we're here we
116:15 - change the input
116:17 - right here you see as we type and then
116:20 - we send the message we simply now send
116:21 - it
116:22 - and that is pretty much it now of course
116:25 - if the input does not exist we'll say
116:26 - this if not if there's no input it
116:28 - basically if the text is nothing
116:30 - we'll say return basically we stop fully
116:33 - we stop fully
116:34 - but here the send message input let me
116:36 - just call it that message function make
116:37 - sense
116:38 - make sense okay good good good good now
116:40 - the last thing we need to do guys is
116:42 - pretty simply simple okay we need to
116:45 - call this
116:46 - right here send button we need to make
116:48 - this a submit button
116:49 - here why because we want to send it when
116:53 - someone submits and presses the button
116:55 - no oh man
116:59 - no because the submit button is what
117:03 - will allow us to hit the
117:04 - enter here's the thing when you make a
117:06 - type of submit button
117:08 - it will also it will also call it when
117:10 - you hit enter
117:11 - that's the big difference here okay so i
117:14 - will have her type
117:15 - is equal to equal to what submit
117:19 - in here submit guys okay
117:22 - submit okay now i was thinking about
117:24 - this okay so let's go ahead and refresh
117:26 - this
117:29 - okay and this is the button right here
117:31 - tab submit now of course
117:33 - if we go to send button we actually need
117:35 - to call it
117:36 - a button so instead of a there needs to
117:38 - be a button
117:40 - button okay now see how
117:43 - you see how it became a button let's
117:44 - remove the hideous border around it
117:46 - border
117:47 - none thank god okay good okay good
117:53 - so look we have the unclick we have the
117:56 - set input
117:58 - bro we're almost ready i think it's time
118:01 - to send it i think it's time
118:02 - excited time to send let's go thanks
118:04 - edison i think it's time i think it's
118:06 - time it's time
118:06 - it's time let's go let's go so look guys
118:10 - are you ready for this bro i am ready so
118:13 - guys what's going to happen
118:14 - we will go ahead we will hit here
118:17 - as you click submit as you click submit
118:20 - as you click
118:21 - send it will call this send
118:24 - function right here this send function
118:26 - you see this
118:28 - function will prevent default meaning it
118:30 - will not go it will not refresh the page
118:32 - it will then call the send message
118:33 - function with the input that provided
118:35 - okay
118:36 - then the in some message function will
118:37 - go actually back
118:39 - up right here because that's where we
118:40 - pass it in it will go back up to the
118:42 - app.js
118:43 - actually now the chat.js check the gs
118:46 - because where
118:47 - the same other send message is actually
118:49 - here it will be called then where
118:51 - inside here and here we'll save it where
118:57 - in the payload as ready
119:00 - let's go so at this point refresh
119:04 - hit enter let's
119:07 - go ready
119:11 - oh [ __ ]
119:14 - all right timestamp of undefined
119:18 - oh my gosh oh my god i know i know damn
119:20 - it so much ah
119:22 - okay we're close we're close don't worry
119:23 - we're close this is a small hiccup okay
119:26 - no nothing nothing with have it comes
119:28 - easy sometimes okay so that's okay
119:30 - so we'll go to let me see go to chat ah
119:34 - what happened what just happened
119:42 - oh i hit it hold on oh my gosh oh my god
119:46 - indeed hold on hold on i got this guys
119:47 - f3 brother hold on
119:49 - what is f3
119:53 - oh it's gone oh man
119:56 - did you close it did i close it actually
119:59 - ah we're so close come on open integrate
120:01 - turn that's fine
120:02 - oh man no it's here it's working it's
120:04 - working and no it's working it's just
120:06 - because it's closed
120:07 - oh no it's there let's go oh my gosh
120:10 - that was close guys
120:12 - that was close that was insane okay cool
120:13 - so here's what we'll do here's what
120:15 - we'll do i'm going to go
120:16 - i will go to my chat gs check the gs
120:20 - okay i'll look at my firebase firestore
120:25 - i think i know why that's the case i
120:27 - think it's because the chat
120:28 - actually let me see oh because i need to
120:32 - import firebase from firebase
120:34 - module that's why firebase module that's
120:37 - why
120:37 - ah right guys are you ready now
120:40 - on the drop of the drop ready ready
120:44 - ready i think it'll work
120:47 - i think it'll win this time ready
120:50 - and three two
120:59 - [Music]
121:06 - it worked man it works let's go
121:10 - we're liking this franken he doesn't
121:11 - even know it
121:13 - [Music]
121:16 - [Laughter]
121:23 - that's me i'm the guy in the display
121:25 - picture guys oh that's the frankie guy
121:27 - right there
121:28 - that's so oh oh [ __ ] it is you bro
121:30 - [Laughter]
121:33 - okay cool guys okay awesome so does this
121:36 - hit naz
121:37 - no it's not it holy [ __ ] okay it's not
121:39 - that sorry
121:40 - but we're almost there almost there guys
121:42 - okay almost there so here
121:43 - we've got the messages guys if you are
121:45 - still with me let's go
121:46 - if you are excited for what's happening
121:49 - here
121:50 - let us know in the comments below give
121:52 - us a thumbs up give us a
121:54 - fire give us a rocket emoji if you have
121:56 - to if you can
121:58 - now one last thing i want to do i want
122:00 - to go to chat input
122:02 - after i go ahead and type something out
122:03 - i want to refresh it i want to go
122:05 - take it back to its original state so
122:06 - we'll say send message input and the
122:08 - last thing is going to be
122:09 - then that set input to nothing
122:12 - it's nothing right there because i want
122:14 - to refresh what i was in here i'm going
122:15 - to refresh it back to its normal state
122:16 - okay so for example here it makes sense
122:17 - hello right i hit enter you see now it
122:20 - doesn't refresh it but i need to refresh
122:22 - it so we'll go ahead and refresh this
122:25 - refresh it here let me see let me see
122:29 - give us some time to to think
122:33 - come on come on come on come on come on
122:35 - come on hey there we go beautiful
122:37 - hello yo it
122:40 - is not refreshed just yet for some
122:41 - reason why is that because i think
122:43 - because if we go to missy
122:45 - uh chat input let me see i had the issue
122:48 - before actually
122:50 - oh i know why because now i need to make
122:53 - this input the value
122:54 - of the input so say value is equal to
122:58 - input right here so whatever the value
123:01 - of this input
123:02 - that's it's being controlled by that's
123:04 - what could control the value of this
123:05 - input so now if i go ahead and say
123:07 - uh i am here
123:10 - i'm here oh look at that
123:18 - oh but you see an issue now whoa whoa
123:20 - whoa whoa
123:21 - oh what are you doing you see nation now
123:23 - though yeah i see biggest issue
123:25 - you see how now this is actually
123:27 - expanding everything you see that right
123:28 - there
123:29 - so we need to stop that from expanding
123:31 - what do we do in that case
123:32 - we're gonna have to use a flexbox oh
123:36 - yes we will but actually it's pretty
123:38 - much done for us guys look at this
123:39 - the only thing we need to do is check
123:41 - this out if i go to chat input
123:43 - chat.gs which is here let me go contr
123:46 - remove this
123:48 - all i gotta say guys because we have the
123:50 - auto
123:51 - i gotta give this a height of zero
123:54 - it's a little bit weird to understand
123:56 - why this is happening
123:58 - but if i do min height zero i'm going to
124:00 - refresh this
124:04 - whoa where'd it go oh there it is oh no
124:05 - did not work so it did not work oh man
124:07 - that's not good
124:08 - okay so to do that let me just think
124:10 - about this here so chat
124:12 - oh actually i know why so chat right
124:15 - here
124:15 - i have to go to message container okay
124:18 - then i have to set give the message
124:20 - container i have to give it a display
124:21 - flex that's gonna do this i'll do this
124:22 - we'll say display flex
124:24 - boom display flex okay
124:28 - we'll say what we'll say flex direction
124:30 - flex direction column
124:33 - direction column column
124:37 - and then what's going to happen is we'll
124:38 - give it an overflow y
124:41 - wow it can overflow and we get a little
124:43 - scrolling scrolling exactly
124:45 - and there we go wait no that does not
124:48 - work
124:49 - damn it fudge what are we missing here
124:53 - um we're missing something here flash
124:55 - direction column overflow y scroll
125:00 - main height of zero that's exactly what
125:02 - i have in there
125:05 - main content min height and height of
125:08 - zero
125:12 - let me see let's think about this so
125:14 - what is preventing this from doing that
125:15 - i'm just curious huh
125:16 - is it max height or min no it's min
125:18 - height of zero
125:21 - but i think most importantly it might
125:23 - because of the be the fact
125:25 - off let me think about this
125:30 - display flags that's so good that's no
125:32 - problem here
125:33 - great below 64 ottoman content that's
125:35 - fine here min
125:36 - height of zero that's fine as well
125:39 - [Music]
125:42 - do you think maybe because we need to
125:43 - set okay i think i know why in that case
125:45 - i think because as they would have the
125:46 - gs i need to go here
125:49 - yeah let's go to here
125:53 - app.gs inside here this is where the
125:55 - difference becomes instead of auto
125:58 - we actually need to give it a uh it's
126:00 - it's kind of like one fr
126:04 - four well one for real one for real yeah
126:07 - so we have
126:08 - min max zero
126:12 - comma one f4
126:16 - right there see whoa so this is a little
126:19 - bit odd
126:20 - it's a little bit odd the way this kind
126:21 - of works it what what
126:24 - scroll all the way down brother
126:29 - what the heck who did this yo let's go
126:33 - wait how i told you not to show it i did
126:36 - not show the damn firebase thing
126:40 - we got from no come on
126:44 - man yo jake chyna you got us man
126:48 - no oh my god
126:52 - what i could i hate the thing
126:56 - guys all right
126:59 - all right this is good what about the
127:00 - other channels just that channel
127:02 - how bro i don't understand how
127:07 - i literally don't understand how that's
127:08 - possible
127:10 - i don't know how it's possible bro oh
127:13 - you gave it away somewhere man i know
127:15 - it's so funny guys
127:16 - anyways guys so look min max zero one of
127:20 - our basically this is the same ski
127:21 - it's saying that right here this is
127:23 - called one free space
127:24 - so this right here saying that take up
127:26 - only one the maximum you want to take up
127:28 - is the minimum will take up is zero the
127:31 - maximum you can take up is just one free
127:33 - space does that make sense
127:34 - because before when auto auto it kind of
127:37 - changes up what right here so auto
127:39 - uh when you do auto here it actually it
127:41 - actually kind of uh makes it to where um
127:44 - it fills up however much the content
127:46 - fills up
127:47 - but free space only fills up the free
127:49 - space however
127:51 - the free space is you see what i mean so
127:53 - if there's only this much free space
127:55 - it will fill up this free space it will
127:56 - not fill up the content oh man
127:59 - look at this bro loves you i mean
128:02 - technically we know who it is right
128:03 - because i mean thank you check china
128:04 - yeah yeah
128:05 - china i appreciate you appreciate it but
128:07 - j china please do not spam anymore
128:09 - appreciate if you love us please don't
128:10 - spam
128:11 - i don't know how you got this id i don't
128:13 - know how you got access to this but this
128:14 - is not
128:15 - i dude i don't know man but do not
128:18 - understand when your mother loves you
128:20 - how is this possible
128:22 - bro anyways guys so at this point we are
128:26 - pretty much
128:26 - done guys we have finished our app
128:30 - it is a doing everything you possibly
128:32 - can i can say
128:33 - yo jack china yo yo we can
128:36 - jake china get in the react challenge
128:39 - and let's have a conversation
128:40 - yo jake how are this you talk to us now
128:42 - guys this
128:43 - is the real life uh chat that we're
128:47 - talking about before exactly guys
128:48 - exactly
128:49 - so jay-chan is like hey gentlemen it
128:51 - loves you okay now go back to the react
128:53 - one where we were talking
128:54 - this one can you make it to where it
128:56 - goes to the bottom by the way uh
128:58 - not yet okay oh he just he just
129:00 - continuously say oh he just made more
129:02 - channels hey channel how many how many
129:03 - how many
129:05 - plenty is there's plenty of love and
129:07 - what's going on we love the love brother
129:09 - appreciate it man i know should we share
129:10 - this link bro should we okay
129:11 - so guys that's it pretty much the last
129:13 - thing we need to do is pretty simple and
129:15 - that's gonna do is you need to host
129:16 - this data this uh this uh application
129:20 - okay
129:20 - so you want to host it so you could
129:21 - share with your friends everyone can
129:23 - jump in and log in and start chatting
129:25 - correct
129:25 - i will actually go ahead and stop the
129:27 - writing oh okay
129:29 - oh come on jake china did you delete
129:31 - everything
129:32 - hold on there's only one way i can stop
129:34 - this bro all right let's
129:36 - only want i can stop this all right jake
129:38 - ruined the fun for everyone
129:39 - thank you jake we're gonna share with
129:40 - everybody but not anymore publish
129:44 - god damn why why
129:48 - all right so oh man look what he did no
129:54 - i stopped it too i think you did that
129:56 - before you stopped it are you serious
129:58 - yeah um it's all good man let's just
130:00 - keep moving let's keep moving jake
130:02 - said stop it that's it okay so
130:05 - cool guys so we got that specific
130:07 - portion as you can see jake channel
130:08 - loves
130:09 - us which is amazing uh thank you so much
130:10 - jake chyna um
130:14 - thank you for the love and everything
130:16 - [Laughter]
130:22 - all right last thing guys is firebase
130:25 - firebase hosting let's do this right now
130:27 - let's go to data
130:28 - let's go to hosting in here okay let's
130:32 - go to get started okay this tells us
130:34 - exactly what we go ahead and need to do
130:37 - pretty simple process here okay
130:39 - if we go ahead and go to our firebase
130:41 - let's go ahead and open up a new
130:42 - terminal
130:43 - and we'll do the following because i'm
130:45 - really currently logged in i will do
130:47 - command k to clear this out i will do
130:48 - firebase log out for myself you don't
130:50 - have to do this right now but do
130:51 - firebase log out
130:53 - log out log out so you don't do this
130:57 - this is only for me because i'm already
130:58 - logged in i will now do firebase
131:00 - log in that's what you need to do
131:02 - firebase login
131:04 - okay i'll offer yes i'll say yes okay
131:06 - good
131:07 - i'll go to the login page this will take
131:09 - you to login page or firebase which is
131:10 - pretty simple
131:14 - okay i will say kaziklarpro.com right
131:17 - here
131:19 - okay i'll click allow and that's it now
131:22 - we are logged in okay good so this is
131:24 - now we are logged in
131:25 - now this what we need to do is we do
131:26 - firebase init so we'll say firebase
131:30 - firebase init that's it
131:34 - okay cool inside firebase name we do
131:37 - our goal is to do hosting so we'll say
131:38 - hosting so press space in the hosting
131:40 - section
131:41 - and press enter okay use an existing
131:43 - project
131:44 - and now your goal is to find an existing
131:46 - project we have i think the one that we
131:48 - currently have is going to be
131:50 - a which one it's going to be a slack
131:52 - clone challenge let me see
131:54 - can we find it select clone challenge
131:56 - this one right here slack clone
131:57 - challenge say this one
131:59 - and click now instead of doing public
132:01 - directory you see at the bottom
132:02 - we will do build directory build
132:06 - click yes click uh
132:09 - no for this one we don't need this and
132:11 - that's it so we're almost there now at
132:13 - this point
132:14 - almost almost there guys check this out
132:16 - now what i want to do is the following
132:18 - i want to go ahead and i'll do um npm
132:22 - npm run build to create a build of our
132:24 - of our application npm run build
132:27 - what this will do is it will take all of
132:29 - our react.js content it will take all
132:31 - this react gs right here all this js
132:33 - folder
132:34 - all this sidebar data everything at the
132:36 - gs and it will put it all into the build
132:39 - photo in here
132:40 - and it will make it all into like one
132:42 - big compiled
132:43 - compiled um kind of like compiled um and
132:46 - minified
132:48 - build application it will have
132:50 - index.html and it will have all the
132:52 - javascript needed so check this out
132:54 - well let's go ahead and doing this look
132:56 - at this i want to show it to you so
132:58 - create the build and here's what
132:59 - happened it created index.html here
133:02 - right here see it created index.html
133:04 - here and you can see how it's very much
133:06 - minified
133:07 - that's what happens when you do npr on
133:08 - build and i created all these javascript
133:10 - files look at this now you can't
133:11 - understand that because again it's all
133:13 - magnified it's all just gonna
133:14 - gibberish right but what happens is
133:17 - the actual code the actual browser
133:19 - understands it fully no problem
133:21 - that's the big difference you see so
133:23 - look at this and now all we do
133:25 - all we do now is pretty simple and once
133:28 - we've done the build we do now firebase
133:29 - right for this bro
133:30 - let's do it deploy [ __ ]
133:34 - all the way and that's it
133:37 - now we deployed the function are you
133:38 - guys ready to see the deployment version
133:41 - but once we deploy i feel like people
133:42 - are just gonna go there and they're just
133:43 - gonna spam the whole thing
133:44 - all right we'll shut it down five is
133:48 - deploy
133:48 - copy this lac clone challenge web app
133:50 - and look at this bro
133:52 - ready bro a a a ready
133:56 - oh firebase hosting set up complete
133:58 - you'll see you'll see this because your
133:59 - host is set up
134:01 - didn't i do it do this though um maybe i
134:03 - should refresh one more time
134:05 - one more time one more time one more
134:08 - time
134:09 - let me see slack clone
134:13 - open uh just to set up another sent to
134:16 - go build something i did firebase upload
134:18 - what do you mean
134:21 - project console says wait for five
134:23 - minutes bro
134:24 - five minutes that's a long time that's a
134:26 - long time we don't have five minutes
134:27 - ain't got no five minutes to wait
134:29 - we move too fast here move so fast so
134:32 - fast i'll do five buzzer plug again
134:34 - firebase deploy
134:38 - hard refresh command f5
134:46 - doesn't like it i'm curious why
134:53 - homework maybe
135:01 - actually i think i know why
135:06 - cyclone challenge
135:10 - that cloud challenge um
135:13 - is hosting it's like what's on the web
135:15 - app okay it's fine
135:19 - that seems to be good
135:23 - i'm very curious but that's not working
135:24 - but that's okay
135:26 - that's fine
135:30 - all right we'll make it home for you
135:31 - guys okay we'll show you guys how to go
135:33 - and deploy it
135:35 - in the video no problem that was on
135:37 - purpose yeah i'm not sure if that's the
135:38 - case but
135:39 - sometimes it happens that way for some
135:40 - reason i don't know why
135:43 - i mean i mean we can do five minutes
135:45 - basically we can try it one more time
135:46 - let's see
135:48 - firebase is that because i did the right
135:51 - if i removed this right thing the
135:53 - firestore
135:54 - no that would not be it that was not
135:56 - because of that potentially
135:57 - i don't know no let me see it deployed
136:00 - for some people dude
136:01 - it did romney said it deployed for me
136:04 - maybe maybe it's annoying because we
136:06 - switched the
136:08 - the what i'm deployed let me see
136:12 - freaking jake china
136:16 - let's see let's see let's see let's see
136:17 - if i just deploy it happens sometimes
136:19 - i've i've had it happen before for some
136:21 - reason where it just kind of does not
136:22 - do fibers in it again
136:26 - i will do hosting one more time just
136:27 - because i want to ah no
136:29 - fibers in it with their
136:32 - firebase hosting tata let's do
136:36 - uh build
136:41 - what i wanted to put a fire emoji
136:44 - yeah but i put the and the r and the ice
136:47 - triple fry and it's french fries instead
136:51 - oh my god really that's funny that's
136:54 - funny so npm run build one more time
136:59 - yeah some people are saying after they
137:00 - waited a little bit yeah
137:02 - automatically just have to wait a little
137:04 - bit well we could start to take on some
137:06 - questions while we wait and we could try
137:07 - again like a couple so guys at this
137:08 - point let's take a question
137:09 - any questions you have guys because guys
137:11 - pretty much at this point we have
137:12 - finished the app
137:14 - it looks sick it looks amazing oh and
137:17 - then firebase deploy
137:26 - okay let's do one more time
137:34 - ah no it's not we got a quick question
137:36 - now
137:37 - yes what's the question when build and
137:39 - deployed
137:40 - will the hosted codes database have test
137:44 - data that you typed in during the code
137:46 - development phase
137:47 - what does that mean basically the stuff
137:51 - jake china stuff will that be the
137:52 - deployed version yes it will
137:54 - because it's all targeting this database
137:56 - yes yes yes yes yes
137:58 - daniel safer just giving excuses about
138:00 - the emoji he's so too hungry right now
138:02 - no i'm eating all these nuts over here
138:04 - man yeah yeah so this will guys yes
138:06 - we'll have the data that's correct yes
138:10 - all right any any more questions guys
138:12 - any more questions let's see
138:14 - okay doing the build process are no
138:17 - modules included in the build package
138:19 - yes everything is included guys
138:20 - when you include when you build
138:22 - everything right it includes the null
138:24 - modules it
138:25 - includes your your code from from you
138:27 - know from
138:29 - the one that you wrote right it has to
138:30 - include everything because otherwise it
138:31 - just wouldn't work otherwise you know
138:33 - what i mean
138:34 - okay nice can we add animations to our
138:39 - buttons hover effect
138:40 - of course you can make that homework you
138:42 - guys got this
138:43 - you're the developer you can do whatever
138:45 - you want to customize it however you
138:46 - want it
138:47 - okay deadline homework when is that
138:51 - oh what's the next step for the homework
138:53 - more customization or what yes
138:54 - so next step is pretty simple guys for
138:57 - the home right now guys okay
139:00 - for the homework here's what you need me
139:02 - to do okay
139:03 - for the homework let me go and do this
139:06 - okay here's the homework for
139:10 - today okay homework
139:15 - homework right here okay homework number
139:18 - one
139:19 - complete the app the slack lower app
139:23 - clone app that's part one okay okay
139:26 - part two part two is the following
139:30 - you need to go ahead and uh
139:34 - right and upload it and upload it upload
139:37 - it to
139:38 - to airtable we will provide the air
139:39 - table there a table
139:42 - okay this can be your homework okay and
139:44 - then finally
139:45 - part three is you will need you need to
139:47 - give us
139:48 - a testimonial for how this
139:52 - day how this challenge went for you
139:55 - again guys speaking about the prizes the
139:57 - more you engage
139:59 - and the more you do the homework the
140:01 - more it increases your chances of
140:02 - getting one of those special prizes the
140:04 - link provided
140:05 - link provided in the post in post
140:08 - okay in post also very important make
140:11 - sure to
140:12 - post a screenshot post a screenshot
140:15 - of your app app on discord
140:19 - and facebook right tag us
140:22 - again this will be in the under under
140:24 - the homework post
140:28 - homework post right there make sense
140:31 - that is pretty much it so guys go ahead
140:33 - and
140:33 - screenshot this right now squeeze this
140:35 - right now so you guys can go ahead and
140:36 - remember this exactly
140:38 - screenshot it right now you guys have
140:40 - five seconds to screenshot it
140:42 - and of course and that's pretty much it
140:43 - feel the completed slack homes whatever
140:44 - you guys got
140:46 - oh my god bro we're not sponsored by
140:49 - them so we're not going to show
140:50 - the brand but this shit's good
140:55 - at this point guys that's pretty much it
140:57 - so guys
141:00 - what steve's correcting you oh no
141:04 - thank you steve um thank you oh you
141:07 - shall say give shout out to me
141:08 - there you go hey i usually there we go
141:10 - all right
141:12 - two seconds of fame we're over
141:15 - guys okay guys very important guys so
141:18 - tomorrow tomorrow okay we will be
141:21 - talking about
141:22 - how to make a hundred thousand dollar
141:24 - developer don't miss out so really
141:26 - important guys for you tomorrow okay
141:28 - so the homework for tomorrow of course
141:29 - one more thing is i want to add
141:31 - is set a timer for tomorrow
141:35 - an alarm right now everybody right now
141:37 - if you are currently in the call
141:39 - set an alarm 4 11
141:43 - for 11 am pst this is very important
141:47 - guys very important if you do not come
141:48 - tomorrow
141:49 - you will not be included for the price
141:51 - it's as simple as that
141:53 - you have to be tomorrow at 11 a.m pst we
141:56 - will be talking about
141:57 - how to go ahead how you can make a
142:00 - hundred thousand dollars
142:01 - as a regular developer do not miss out
142:04 - on this everybody understand give it to
142:05 - me
142:06 - right now down below in the comments say
142:07 - that i made an alarm
142:09 - i set an alarm everybody right now i set
142:12 - an alarm
142:13 - put it down in the gut we just got a uh
142:15 - what's it called
142:16 - let's go ah china thanks so much
142:19 - thanks donnie nothing daniel that was
142:21 - fun i like how she said danny
142:23 - she's a danny hey let's go awesome
142:26 - awesome sweetie thank you so much for
142:27 - that and yes
142:28 - to add on to those i mean you guys
142:29 - already have your portfolio you guys
142:30 - already have an amazing slack
142:32 - clone you're customizing going great now
142:35 - you need
142:36 - the road map set that alarm for 11 a.m
142:39 - psc because this roadmap is going to
142:40 - help you to get
142:42 - to six figures okay awesome
142:45 - okay awesome sweet so that is am amazing
142:47 - guys on that pretty much do you guys
142:49 - have any questions guys
142:50 - so of course we need to go ahead and
142:51 - make sure that your project is up there
142:53 - so
142:53 - one thing we'll send you is make sure to
142:55 - deploy your project we'll send you a
142:56 - small instruction on how to deploy
142:58 - for some reason does not work for us i'm
142:59 - not sure why did not work for us
143:01 - i still don't understand it maybe it
143:03 - works now
143:05 - no does not work still that's weird
143:08 - weird weird weird weird weird i don't
143:10 - know why i don't know why is it because
143:12 - hosting
143:13 - ah it's a bit if you want to keep
143:15 - looking into it and then if there's a
143:17 - question that pops up yeah what's the
143:18 - question yeah oh
143:19 - not yet hold on i'm telling these guys
143:21 - question please
143:24 - cause this it says here three files
143:26 - that's why that's like very small files
143:28 - there's nothing there should be a lot
143:31 - more files
143:33 - hmm oh i know why bro
143:38 - yo dixon thank you so much we just got
143:40 - another 10 dollar
143:42 - donation no way yep no comment so no
143:45 - shout outs there but thank you so much
143:47 - and thank you so much appreciate it man
143:48 - we are now at almost 80 bucks can we get
143:50 - to 100 bucks donations bro
143:53 - like that was our goal from last time
143:55 - guys guys i mean if you can
143:57 - if not no no worries whatsoever but
143:59 - it'll be amazing
144:00 - to get to 100 donation that'll be just
144:02 - so sick i'll be
144:03 - i'll be pumped for that so amandev asked
144:06 - did you change your mind concerning the
144:08 - dark
144:09 - switch button no did not change my mind
144:12 - i think it's still a great option
144:14 - 100 so i actually i guys i think i know
144:18 - why our firebase did not work
144:19 - why because because here's the thing
144:23 - we built oh we made a build folder
144:25 - inside here inside source file
144:27 - because i was inside the source when i
144:29 - did fibers deploy
144:31 - look at this i need to do cd dot dot
144:33 - slash look at this this now will this
144:35 - this will work no problem
144:36 - i now do this okay got it this makes
144:39 - sense now okay cool
144:40 - i now do firebase.init dot
144:43 - init okay five is that in it
144:47 - okay that's fine hosting this will now
144:49 - work guys hosting ah
144:51 - should one more time that init
144:54 - this now will work 100 i know it yo so
144:57 - while not doing this
144:58 - shout out to kp whitefield we got
145:00 - another five dollar donation
145:02 - no way this is crazy man like everything
145:04 - that's good
145:05 - way too generous thank you guys so much
145:07 - we really 81
145:09 - 82 dollars bro wow don't forget you guys
145:12 - have so much because day four of all the
145:13 - value we got
145:14 - for you guys day five is gonna be even
145:16 - crazier because now we're gonna bring
145:18 - everything together giving you the road
145:20 - map to becoming a sixth
145:21 - bigger developer and make sure to smash
145:23 - that like button for the app
145:25 - that's going to go live right now smash
145:28 - that like button right now because we're
145:29 - going to do it go through it so okay
145:30 - so let's go do this for now slack
145:33 - challenge let me see i'm going to look
145:34 - for the slack challenge that's that's
145:36 - slack along challenge okay
145:38 - okay cool do you want to use the not
145:39 - only use the build directory
145:42 - uh configure it as a single page app yes
145:46 - correct i'm gonna build deployment no
145:50 - overwrite no good now we do check this
145:54 - out now we do firebase
145:56 - deploy and now this should work bro
146:01 - now you're ready let's do it
146:05 - now this should work look i found 18
146:06 - files now there we go you guys ready for
146:08 - this bro
146:10 - now this should work guys this my
146:13 - friends now should work guys
146:15 - smash that like button for the app to go
146:18 - live
146:18 - are you ready command v
146:22 - and we have ah
146:25 - come on no no no that is not right hold
146:28 - on
146:29 - no this should work
146:34 - that's what i'm talking about now the
146:36 - link does not work fully but still
146:37 - this works so sign it with google
146:40 - let's do it right now kaiser clever
146:43 - programmer
146:45 - that's amazing and we are now inside
146:49 - china as always and look there's people
146:51 - already like test one zero zero let's go
146:54 - ah man we're about to close this off
146:55 - really quickly i feel like it's gonna go
146:57 - very bad in a second here
146:59 - let's go is that where's our buddy
147:00 - where's everybody guys
147:02 - who yo everyone go to the clever
147:05 - programmer chat
147:06 - go to the next hello hello hold on hello
147:09 - yo what is up guys hey guys we got cafe
147:13 - rozzy in the house
147:15 - that's me that's me
147:18 - oh my god let's go that's amazing
147:21 - oh man am i pumped i'm pumped yo yo yo
147:24 - yo yo
147:25 - how are you how are you hey
147:29 - hey oh my god oh my god
147:32 - look at this guys look at this smash
147:34 - that like button guys
147:36 - to 500 likes oh somebody just deleted
147:38 - everything
147:39 - bro no never mind never mind never mind
147:42 - i just
147:47 - holy moly cp is the best thank you are
147:50 - you going towards
147:51 - another challenge yes we definitely will
147:53 - guys we definitely will host on the
147:55 - challenge nice one hello world guys
147:57 - why is this keep refreshing like this
148:00 - china's face
148:02 - i don't get it i don't get it guys all
148:05 - right guys
148:07 - all right uh we'll use it because we we
148:09 - need to go ahead and sign out
148:11 - sign out of uh actual the actual
148:14 - firebase as well
148:15 - of the actual fiber so it was a
148:17 - two-sided thing yeah ayesha thanks so
148:19 - much you guys did a great job i
148:20 - appreciate you appreciate you very much
148:22 - very very much whoa
148:24 - whoa whoa whoa whoa comprende comprende
148:26 - hi nas and daniel hello
148:28 - awesome guys that's pretty much it for
148:30 - our app
148:31 - as you can see we made it live of course
148:33 - so that's part of your homework to make
148:34 - it alive guys oh wow you even did this
148:36 - one too holy moly
148:37 - all right that's it guys in that case if
148:40 - you have any questions let us know but
148:41 - we'll see you tomorrow guys eleven pc
148:44 - how to make 100k
148:45 - as a react.js developer very important
148:48 - do not miss out on that one
148:49 - eleven pst if you join that let me know
148:52 - in the comments below
148:53 - on that smash that like button and
148:55 - subscribe more videos
148:56 - like i said creating a creative alarm on
148:59 - that that's pretty much it guys is that
149:00 - it
149:01 - so guys you just heard the man 11 am pst
149:05 - set that alarm we will see you to create
149:07 - that six figure developer roadmap
149:09 - for you yes you don't want to miss out
149:12 - so
149:13 - have yourself an amazing day and we will
149:15 - see you when
149:17 - tomorrow at 11 a.m tomorrow at 11 am pst
149:21 - let's go this is one fun this is a fun
149:24 - challenge
149:25 - let's get going let's go let's go
149:29 - [Music]
149:35 - oh
149:38 - [Music]