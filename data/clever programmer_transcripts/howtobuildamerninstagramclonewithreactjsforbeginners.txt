00:00 - what's up
00:01 - [Music]
00:04 - there we go now we're live
00:08 - what's going on guys welcome to another
00:12 - build today what we're going to be doing
00:15 - is going through
00:16 - a previous build that we've done so the
00:18 - instagram clone
00:19 - and we're going to be showing you guys
00:20 - how to go ahead and transform
00:23 - the instagram clone to a complete man
00:26 - stack build
00:27 - right and it's going to be real time
00:28 - everything is also going to be working
00:31 - in the way that you would expect it to
00:32 - be working i'm just going to go ahead
00:34 - and show you guys a run through
00:35 - of the app but before we get started i'm
00:38 - here today
00:39 - with your boy
00:42 - david how's it going guys um i'm papa
00:45 - marin
00:46 - as probably you already know and i'm
00:49 - gonna be helping you guys
00:50 - make the react with firebase build uh
00:54 - become a full mern stack build right
00:56 - exactly
00:57 - exactly guys now we are super excited
01:01 - for today's build
01:02 - we actually went ahead and whoa the
01:04 - numbers just spiked up we got 255 people
01:06 - already on nice
01:07 - let's go ahead and see who's here we got
01:09 - priyanshu what's up dude
01:10 - he is now inside the course he's
01:12 - actually a 13 year old awesome coda
01:15 - uh what's up guys we see stephen we've
01:17 - got a few faces in here we've got
01:20 - a kz says jay sean and justin bieber
01:24 - that's funny dude right now guys
01:28 - let's go ahead and run you through what
01:29 - we're going to be doing today okay so
01:30 - for those of you who don't know what
01:32 - mirn is
01:32 - man stands for mongodb express react
01:36 - and no js right that's right
01:39 - yeah yes that's for those right so
01:42 - what we've done previously guys is we
01:44 - went ahead and showed you
01:45 - how to build a dope instagram clone now
01:48 - this instagram clone if i just make it a
01:50 - bit more visible
01:51 - this instagram clone was a fully
01:53 - functional
01:54 - um app so we pretty much showed you how
01:56 - to do this this was built using react
01:58 - and we used firebase to host the back
02:00 - end right so this is exactly what we
02:02 - built last time and you can find this
02:04 - on the youtube channel and we pretty
02:06 - much go ahead and show you guys how to
02:07 - build everything
02:08 - so let's go ahead and test it out
02:10 - quickly so what you would do is you
02:11 - would add a caption so here let's just
02:12 - go and say
02:13 - yo what is going on guys
02:17 - and then let me go ahead and check oh
02:19 - nice little super chat from somath
02:21 - thank you so much dude oh sam thank you
02:23 - i appreciate that dude
02:24 - let's go ahead and choose a file let's
02:26 - go ahead and upload something
02:28 - um boom boom boom i'm gonna go ahead and
02:31 - pick
02:32 - the i've got a picture of the cat i mean
02:35 - i don't don't even ask i don't even know
02:36 - how i've got that picture what is this
02:38 - what's this one
02:39 - okay let's just just play it safe and go
02:40 - with the cat okay
02:42 - so then you go ahead and click on the
02:44 - upload button
02:45 - and then you can see it goes ahead
02:47 - uploads it and we get a nice animation
02:48 - and boom
02:49 - we have a cap all right so everything
02:51 - works on the right hand side we have
02:53 - this lovely little widget and this is
02:54 - actually
02:54 - pulling from my instagram account so we
02:57 - just hit 13k
02:58 - followers thank you so much guys that is
03:01 - amazing the support
03:02 - you guys continue to bring and also if
03:04 - you join profit javascript welcome
03:06 - to the course the course is currently on
03:09 - its final week of doors open
03:11 - if you're interested the links in the
03:12 - description but guys
03:14 - let's jump into today's build right so
03:17 - today's build
03:18 - we are focusing heavily on the
03:21 - adaptation
03:22 - of a reactant firebase app to a man
03:25 - stack build right so we're going to
03:26 - pretty much show you guys how to
03:27 - transform the app that
03:28 - we have right here over into a month
03:31 - stack build and we're going to use what
03:33 - what tech are we going to be using today
03:34 - david
03:38 - so we're going to be using node.js uh
03:41 - for the backend with express.js for the
03:44 - server
03:45 - we will be using mongodb to store or
03:48 - out they or all our data and posts and
03:51 - stuff like that
03:52 - okay
03:55 - and how do we make a road time
03:59 - and we will be making it real time using
04:01 - pusher uh
04:02 - it's something we already showed you
04:04 - guys on this channel
04:05 - but we will be using it again and more
04:08 - dope okay nice so whoever
04:12 - has done the previous build guys the
04:14 - instagram build if you've done it
04:16 - awesome stuff
04:16 - right so like you can go ahead and use
04:18 - your code so you can actually have an
04:20 - adapted sort of instagram build if you
04:22 - haven't done it
04:23 - i've actually gone ahead and included
04:24 - that link in the description of the
04:26 - uh of the youtube link so what you can
04:29 - do is you can go over to
04:30 - that link so i'm going to go ahead and
04:31 - pull it over you can see we've got this
04:33 - man
04:34 - instagram build and pretty much what
04:36 - we've done is we've put the code in here
04:38 - for you so what you need to do is you
04:39 - can get hit code
04:40 - do this go into your terminal
04:43 - right you can open up a terminal go
04:45 - ahead and type in git clone
04:47 - paste it right that's going to allow you
04:50 - to paste this
04:50 - into your uh like into a photo directory
04:53 - and then you can pretty much go ahead
04:55 - and use the uh use the code base so you
04:59 - would get this as a starting point right
05:00 - you should be able to get all of this as
05:02 - a starting point
05:02 - all you need to do is do npm install to
05:04 - go ahead and install everything
05:06 - and then do npm start and then the whole
05:08 - thing will start running okay
05:09 - so you'll get this as your starting
05:11 - point right so this
05:12 - is currently don't get confused guys
05:14 - this is currently a fully
05:16 - functional react app right it's a fully
05:19 - functional react app it's using firebase
05:21 - to power everything now we're going to
05:22 - show you today
05:23 - how to go ahead and power the entire
05:24 - thing like we said
05:26 - with the man stack right so it's going
05:27 - to be a man build that we're focusing on
05:29 - today
05:30 - everything is going to be pretty much
05:31 - all around the man stack so we're going
05:32 - to show you guys how to incorporate a
05:34 - node.js back in
05:35 - i'm going to show you guys how to go
05:36 - ahead and use mongodb and then we're
05:38 - going to show you guys how to go ahead
05:40 - and use pusher
05:41 - to make it real time so that way we
05:43 - still get this very nice functionality
05:45 - so when
05:46 - you go ahead and upload an image it goes
05:48 - ahead and and pushes it into mongodb
05:50 - and then you can see that in real time
05:52 - over here okay now if you're excited for
05:54 - that
05:55 - smash the thumbs up button let us know
05:57 - in the chat right now
05:58 - because this is going to be a fun build
06:00 - today it's going to be a bit of
06:01 - debugging it's going to be a bit of
06:03 - different things but we want to get that
06:04 - momentum back on youtube guys for you
06:06 - guys we know that you guys love this
06:08 - content
06:09 - we're not going anywhere and we're going
06:10 - to go ahead and carry on bringing the
06:12 - fire for you guys
06:13 - so david anything before we get started
06:15 - that you want to say
06:17 - you said pretty much everything um i'm
06:20 - super excited dude
06:21 - oh nice and we got another donation
06:24 - before we started
06:24 - whoa thank you so much um
06:28 - it says smiling face with oh oh yeah
06:30 - it's like a smiling face with
06:31 - the red eyes we can't see it sometimes
06:33 - on the super chat so we've got loads of
06:34 - people saying mr talks again let's go
06:37 - awesome stuff right now uh elias
06:40 - just popped in the question he goes hi
06:42 - what should i do react.js localhost is
06:43 - not loading
06:44 - um try refresh is the best bet sometimes
06:47 - it just takes a little bit of a refresh
06:49 - to go ahead and kick start things but
06:52 - um this one says abbay thank you so much
06:54 - for that donation
06:55 - yeah so guys if it's not working please
06:58 - do not spam that chat otherwise i will
07:00 - time you out so
07:01 - sorry about that um yeah if it's not
07:03 - working guys i mean like literally all
07:04 - you need to do is npm install
07:06 - and then do an npm start and everything
07:08 - will start working for you okay
07:10 - now if it doesn't work for you literally
07:12 - what i said before
07:13 - don't worry if the data is not loading
07:14 - because what we're actually going to be
07:15 - doing is transferring it all over to a
07:17 - man stack back end okay
07:19 - which means that that's where
07:20 - everything's going to be pulled from so
07:22 - don't stress okay as long you've got the
07:24 - code you can pretty much go ahead
07:26 - and start from that point so the code is
07:29 - in the description go ahead get clone it
07:32 - right now
07:33 - and you can pretty much go ahead and get
07:34 - that started priyancho says how about
07:36 - some react native builds
07:37 - yes we've got some regulatory bills
07:39 - coming so that'll be some fun stuff
07:40 - right
07:41 - like um that'll be some super fun stuff
07:44 - uh david
07:45 - can jump on those builds with me david
07:46 - you have to code it in react native
07:49 - uh i actually used it once okay but i
07:52 - would be super
07:52 - interested in that yeah yeah let's do it
07:55 - yeah be awesome right definitely
07:56 - so it'll be some fun stuff we can go
07:58 - ahead and do that and guys before we get
08:00 - started
08:00 - quick shout out right so before
08:03 - we get into this lovely big build today
08:06 - i want to just shout out to this is the
08:08 - final week that we have profit with
08:10 - javascript open
08:11 - and then we close the doors right so
08:13 - link is in the description
08:14 - you can check that out also the code
08:16 - link is in the description so
08:18 - don't go ahead and rebuild this just
08:20 - literally copy that code
08:21 - and then you can pretty much go along
08:23 - with us right so
08:25 - guys before we get started smash that
08:27 - thumbs up button and let's get this
08:29 - video out to many people
08:30 - as we can and let's get this thing
08:33 - pumped up
08:34 - nice the cp fam dropped in
08:37 - hard whoa the team never stops
08:40 - delivering real value if you thought we
08:42 - brought the value the last few months
08:43 - wait until you see what we have in store
08:44 - for the next few months of epic builds
08:46 - right here on youtube
08:47 - exactly guys we are going to keep
08:49 - bringing the fire if you thought it was
08:51 - hot before when we done those builds
08:53 - when we done all those
08:54 - crazy clones that we had the netflix the
08:56 - tinder we had tick tock everything
08:58 - which actually hit over 400 000 views
09:02 - which
09:02 - is mind-blowing like on some of these
09:04 - videos right so 300 000 views on some of
09:06 - them
09:07 - um it's insane guys we're gonna keep on
09:09 - bringing that heat so
09:11 - all i'm gonna say is get used to
09:13 - drinking that coffee
09:14 - get that energy up right make sure
09:16 - you've got your water nearby
09:18 - and let's go ahead and jump into today's
09:20 - build let's do it guys
09:22 - you ready david go yep let's do it let's
09:25 - do it
09:26 - okay so starting point not the cap
09:29 - hit the code right once you get that
09:32 - code uh
09:33 - imported in you're going to reach at
09:34 - this point right so you're going to have
09:35 - some stuff
09:36 - over here right you're going to have
09:37 - your files over here now what i want you
09:40 - to do
09:40 - is pretty much go ahead open up a
09:42 - terminal right so i'm going to go ahead
09:43 - and make this a bit bigger because i
09:44 - guess
09:45 - this is tiny for you guys right now um
09:48 - where is my code um david do you mind
09:52 - sending me over
09:53 - i will send you a live share link right
09:55 - now and you can pretty much
09:56 - but i haven't got your so i think you're
09:58 - going to need to live share
09:59 - the code that you had previously as well
10:03 - uh humidity oh
10:06 - yeah just a moment yeah
10:09 - um okay one sec guys
10:15 - we got a nice lovely donation from sumid
10:18 - thank you sami
10:19 - oh yeah i've got your code here dude
10:20 - nice okay
10:22 - okay so so let me go ahead and pull up
10:24 - some meat thank you dude
10:26 - appreciate that he says i started my new
10:28 - job today hey let's go man
10:31 - nice hi samit was actually in he's been
10:34 - watching quite a lot of these um
10:36 - these builds he was actually part of the
10:37 - challenge and the guy's crazy man like
10:40 - he was followed along and he pretty much
10:41 - landed a job and uh yeah awesome stuff
10:45 - man and i hope your first day went well
10:47 - that is that's sick that's what this
10:48 - community is about guys
10:50 - that's dope so someone that says you're
10:52 - the best thing you learned a lot from
10:54 - you guys
10:54 - remember it's not just me guys it's
10:56 - literally team cp
10:57 - we all pulled together to make this
10:59 - stuff possible so appreciate you dude
11:01 - scythe thank you so much you guys wish i
11:03 - could afford pwj what i would say
11:05 - there is a payment plan yeah there's
11:06 - payment plans there's like there's a lot
11:08 - of things offered right now
11:10 - make sure whatever it needs whatever you
11:11 - need to do to be able to get in
11:13 - or literally if you can't afford it just
11:15 - make the most of the free youtube
11:16 - content that we drop
11:17 - right that's what i would say honestly
11:19 - you can you can grow so far
11:20 - with just that so make sure you you can
11:22 - pretty much learn from that
11:24 - make some money with that and then
11:25 - you'll be able to get in the course
11:26 - that's my way that's my
11:28 - opinion on it right that's correct right
11:30 - let's do this
11:31 - so we currently this is the code that
11:33 - you're going to have right now once it
11:35 - loads up what i want you guys to do is
11:36 - i'm just going to create
11:38 - can you send me a live share first yep
11:40 - so
11:47 - yeah guys so what's happening at the
11:48 - moment is that sunny is sending me
11:51 - a live share uh that's that's an
11:54 - extension i was talking about
11:56 - uh in one of the videos last week
12:00 - it's basically allowing us to work
12:02 - together
12:03 - yeah exactly so it means we me and david
12:05 - can work together in real time
12:07 - just how you see me and cause you do it
12:09 - um pretty much like it's like a google
12:10 - doc
12:11 - but we're coding right so it's real time
12:13 - code editing together
12:15 - now you should be able to see this make
12:17 - sure you're in the correct directory so
12:18 - like if
12:18 - for example you were here you're gonna
12:20 - make sure you do cd and then go into
12:22 - your correct directory so in this case
12:23 - i've called it this
12:25 - and then when you you can do ls to make
12:26 - sure that you see all the files you
12:28 - should be able to see all of this stuff
12:29 - right when you do ls
12:31 - now i want you to do npm install now
12:33 - that will go ahead and install
12:35 - all the dependencies once you've copied
12:36 - the code so again anyone who's joined
12:39 - just like recently make sure you go
12:41 - ahead and clone the code so that you can
12:43 - go along with us
12:44 - and code along with us in today's
12:46 - session okay it's going to be really
12:47 - important for you guys to save a bunch
12:49 - of time and be able to
12:50 - be able to actually keep up with us so
12:52 - uh nikhil says hey so is this a
12:54 - continuation of the previous build yes
12:56 - exactly so we showed you guys how to
12:58 - build instagram previously
13:00 - now we're going to go ahead and show you
13:01 - guys how to power it with the man stack
13:03 - okay
13:05 - um yeah right nice
13:08 - okay so i somebody says it's it's a bit
13:11 - unclear to be able to see
13:12 - what's on the screen right now to be
13:13 - honest i think this is pretty big enough
13:15 - at this point i think this i think i
13:17 - mean let me know guys but i think you
13:18 - guys can pretty much see
13:19 - all the code right now um and also i
13:22 - have
13:23 - i wanna address i wanna address this one
13:25 - somebody said man is better of course
13:28 - i kindly disagree right
13:31 - i kind of disagree on what we bring the
13:33 - man stack builds because it's very
13:34 - valuable a lot of people ask for it
13:36 - guys i'm telling you right now if i had
13:37 - to choose firebase i would choose
13:39 - firebase every time
13:40 - right honestly i would choose firebase
13:42 - either as well
13:43 - yeah exactly right like is in dude like
13:46 - it's just no-brainer for me like the
13:47 - setup everything is so much
13:49 - cleaner like why would you i mean
13:51 - there's no point in just
13:52 - you know making it extra complicated
13:55 - niraj says
13:56 - can i get a job in mnc in india as a
13:58 - fresh using man
13:59 - uh not underst i can't understand your
14:01 - question properly dude but what i will
14:02 - say is
14:03 - yes you can get a job with the man stack
14:05 - so very simply yes
14:06 - okay let's go ahead and jump in dude
14:09 - okay
14:10 - so somebody says zoom in a little bit
14:11 - please i think
14:13 - uh i think that might do okay
14:16 - so yeah once you've got this up and
14:18 - running what you're gonna do is mpmi and
14:19 - then you're gonna do npm start
14:21 - and then npm start will go ahead spin
14:23 - the app up right
14:24 - that means on your local host so right
14:28 - now i'm running it already so i'm going
14:29 - to go ahead and run it on localhost
14:31 - 3001 and you can see here
14:35 - you should be able to get the app up and
14:36 - running so it will say starting a
14:38 - development server
14:39 - once it gets up and running then it's
14:41 - all good so
14:42 - there you go you should reach this point
14:44 - okay now once you see this stuff you're
14:46 - a very good
14:47 - point somebody says can firebase handle
14:49 - big projects okay dude
14:50 - if you consider it this way do you think
14:52 - apps like uber
14:53 - are big projects like uh
14:56 - huge apps use use firebase okay so that
14:59 - will answer your question
15:01 - um
15:05 - now exactly dude exactly uh we also got
15:07 - another one hey
15:08 - sonny say you rock feeling pumped that's
15:10 - the energy dude
15:12 - obey tewari we want more of this energy
15:15 - um
15:16 - leroy says i can feel sunny's focus and
15:18 - energy through the screen
15:19 - hey let's go dude we had a bit of a rest
15:21 - now we're back
15:22 - right uh because he says it's only just
15:24 - a little bit more zoom
15:26 - okay it's looking great however i think
15:28 - on the phone it will be smaller
15:29 - with slower intense speed it will look
15:31 - too okay dope right so let's go
15:33 - we'll make it a little bit bigger for
15:34 - you guys i think this is pretty
15:37 - good right now so this is this is a lot
15:39 - better
15:40 - and you guys should be able to see this
15:42 - and it's quite quite big at the moment
15:44 - so what we can do now guys is once
15:47 - you've got this running
15:48 - i like to open up a second terminal for
15:50 - any other work that you need to do right
15:52 - so if we look at our folder structure i
15:54 - want you guys to pay attention to one
15:55 - thing
15:56 - right now we have man instagram and i've
15:58 - just called it my instagram david right
16:00 - and this is our front end build
16:01 - now the backend build i'm just gonna go
16:04 - ahead and create that photo right now
16:05 - okay so i'm gonna go ahead and create
16:07 - and say man
16:09 - back end back in oh man instagram back
16:12 - end
16:13 - right so this is the back end that we're
16:16 - going to build right so it's going to be
16:17 - a backing so right now of course it's
16:18 - empty
16:19 - so david let's go ahead and actually set
16:21 - this up right
16:23 - so okay in order to get this set up
16:26 - how do i what do we actually need to
16:28 - type in um
16:30 - so first up we need to initialize our
16:32 - node package
16:33 - uh we can do that by npm in it
16:37 - i need to be in that photo right uh that
16:39 - is correct that is correct
16:41 - yes okay so i'm gonna go into the
16:42 - backend folder and now you can you guys
16:44 - can see over here
16:45 - it says my instagram back in right so
16:48 - i'll make that super
16:50 - big right now so you can you guys can
16:52 - see now
16:54 - i am in oops let's go ahead and unfreeze
16:56 - there we go i am in this folder right
16:58 - here
16:59 - okay so we're inside this photo right
17:02 - there
17:03 - now what's what's going on david now we
17:06 - need to
17:07 - uh type in npm init okay we'll go ahead
17:10 - and create our
17:11 - uh note package okay it's gonna throw a
17:14 - couple of questions
17:15 - uh we can just basically most of them we
17:18 - can just uh hit return and go
17:20 - go on okay so enter oh sorry the
17:24 - the name cannot contain leading or
17:25 - trailing okay so in this case i could
17:27 - just say instagram
17:29 - oh man back end
17:33 - oh name can only okay so it's just gonna
17:36 - go ahead and do instagram
17:38 - i think you need to add um dash in
17:41 - between
17:43 - insta kaziko's never have spaces in your
17:46 - fire names huh yeah i wasn't i do i knew
17:49 - it
17:50 - i knew when i wrote it i was like [ __ ]
17:51 - i'm going to get some slack for that
17:53 - yeah there you go instagram dash i never
17:55 - do that i it was a wonder
17:57 - it's a one time thing guys don't kill me
18:01 - this is a good example for the wrong
18:03 - example exactly
18:05 - i did that on purpose guys you see
18:08 - that's what you gotta be like definitely
18:10 - [Music]
18:12 - you know all right let's carry on
18:15 - so now okay we can go ahead and hit
18:17 - enter on this right here
18:18 - okay so we can just enter uh until until
18:22 - the entry point
18:23 - uh pops up you need to change that to
18:25 - server.js
18:27 - it's not like um not like a necessary
18:30 - thing but it's more like a naming
18:32 - convention stuff
18:33 - yeah it's nicer the way it and the way
18:35 - it is right now
18:37 - and let's go and i think you can go
18:39 - ahead and hit returns
18:40 - uh all the way down yeah so guys david
18:43 - was saying here is it
18:44 - by default it's index.js for the for the
18:47 - sort of server that we're running
18:48 - uh it's more declarative it's more
18:50 - simple if you just write server.js okay
18:51 - i mean it's down to preference but
18:53 - whatever you do here just make sure that
18:55 - you this is going to be consistent
18:56 - throughout so in this case we're going
18:57 - to say server js is our entry point
19:00 - uh test command enter enter enter enter
19:02 - and uh
19:03 - is this okay yeah perfectly and
19:05 - perfectly
19:07 - just yeah that's it um and i think you
19:10 - want to go ahead and initialize git
19:12 - version control as well
19:13 - okay oh yeah and that actually popped in
19:15 - our package.json file that's correct
19:18 - nice so now we got this beautiful photo
19:20 - right
19:21 - yeah okay dope so now
19:25 - how do i initialize get uh you just need
19:28 - to type and get in it
19:31 - yeah done now you should see if you guys
19:33 - are using zs oh my zsh
19:35 - comes up really nice so if you guys
19:37 - aren't actually using that quick
19:39 - pro tip right go ahead and download this
19:42 - right now
19:42 - okay so oh my zsh and this thing is like
19:46 - it's so sick man like it tells you
19:49 - pretty much
19:50 - it makes it very very simple for you to
19:51 - know if you're in the correct directory
19:53 - like a lot of the time
19:54 - especially when being like kazu or me
19:55 - and david are coding and stuff we find
19:57 - ourselves
19:58 - constantly kind of in the wrong
19:59 - directory right now here
20:01 - yeah i know immediately i'm in the wrong
20:03 - one because it's not a git repo
20:04 - right as soon as i go back into it so cd
20:07 - my instagram
20:08 - back end then you can see now it says
20:11 - get master so we're on the git master
20:13 - branch it's very very clear it's going
20:14 - to help you out when you're coding okay
20:16 - yeah i will close the terminal once we
20:18 - start coding guys i'll keep that very
20:19 - dynamic don't worry
20:21 - okay now david um what's next let's
20:24 - create the server
20:25 - so next actually no no no uh
20:29 - let's actually import all the
20:30 - dependencies that we will be using
20:32 - okay uh we will need the terminal for
20:35 - that
20:36 - as well so if you can just type in npm
20:39 - install express
20:42 - mongoose and
20:46 - course and we will be also using
20:49 - pusher okay is that everything
20:54 - i think so so and then what you can do
20:56 - and guys
20:57 - if you didn't know it's a little trick
20:58 - you can actually go ahead and do
21:00 - just a space between them and it will
21:03 - actually go ahead and import them right
21:05 - yeah exactly exactly right this is a
21:08 - good question by the way david just want
21:09 - to pop it up
21:10 - so sydney says uh question i want to
21:12 - focus on learning either react
21:14 - i think that means react firebase or man
21:16 - what would the most
21:17 - viable stack right now be in industry
21:19 - okay my
21:20 - my advice on this is going to be pretty
21:23 - much
21:24 - for industry potentially man i'd say for
21:28 - landing a job potentially man is going
21:30 - to be more
21:30 - sort of useful i guess right but that's
21:33 - correct or
21:34 - personal projects 100 react firebase
21:38 - every time i would choose react firebase
21:40 - but the reality is is that inside of
21:42 - uh commercial bills and stuff like that
21:44 - the demand for men is a lot higher than
21:46 - the demand for firebase at the moment
21:48 - right now firebase is so damn powerful i
21:51 - trust it i believe in that
21:52 - i'm a big supporter of it google support
21:54 - this video
21:58 - sponsor us yeah i see google sponsored
22:00 - you in the chat
22:01 - yeah so um go ahead and yeah i mean
22:03 - that's my take on it david what should i
22:05 - what's your answer on that
22:09 - what's your take on that david to hold
22:11 - on first
22:13 - so my take on that is that first up
22:16 - i would definitely go with react and
22:18 - firebase that will
22:19 - give you the most um result
22:23 - in the least amount of time right
22:27 - and once you're comfortable with that i
22:30 - would go for mern
22:31 - uh definitely but if you would like to
22:34 - stay on the front end
22:35 - side of things uh you will be fine with
22:38 - the
22:39 - and firebase yeah exactly yeah exactly
22:42 - 100
22:43 - and to be honest dude like do both you
22:45 - know like like do both like i would say
22:47 - start with direct firebase it's fun or
22:48 - it's easy to get started with it and
22:50 - then pretty much like if you need to
22:51 - do it as you enjoy it right don't do it
22:53 - just based on demand like do what you
22:55 - enjoy and the rest will come
22:56 - right that's my advice now uh this is
22:59 - pretty cool
23:00 - uh untrickish verma says wow saying love
23:03 - your videos i recently got a job because
23:04 - your clones
23:05 - my css skills are boosted and literally
23:07 - i built five clones damn dude
23:09 - instagram facebook spotify and
23:12 - whatsapp let's just let's just take a
23:14 - moment for that dude like
23:16 - that is like he deserves a round of
23:18 - applause for that stuff man
23:19 - that's dope so and then he goes yep
23:23 - actually uh drop drop me or
23:26 - sunny oh wrong direction drop me or
23:29 - sunny
23:30 - uh dm on instagram uh with the proof of
23:33 - your
23:33 - uh job and we will add you on the
23:35 - counter yeah
23:36 - is that right yeah so if you did get a
23:38 - job or anyone gets a job
23:40 - let us know send the dm to either
23:42 - instagram account
23:43 - over here or just give us a follow as
23:45 - well if you haven't and then pretty much
23:46 - we can go ahead and add you to that
23:48 - counter of 5000 developers by
23:50 - 2020 so that is dope thank you so much
23:53 - and i'm so glad that you find value in
23:54 - this stuff
23:55 - uh sydney replied he says so it's
23:56 - basically comes down to want a project
23:58 - or
23:58 - running quick go with react native
24:01 - firebase and man for bigger purchases
24:02 - landing job
24:03 - yeah honestly dude just do it based on
24:06 - like react firebase it's gonna be a lot
24:07 - more fun it's gonna help you actually
24:08 - get used to that sort of stack
24:10 - um and then man is a good way to sort of
24:12 - move from there so
24:13 - i would do it that in that way
24:14 - manavarora thank you for the donation
24:17 - and let's get on with it so future code
24:21 - sunny right on the [ __ ]
24:22 - nice elizabeth in the shower in the
24:24 - house
24:25 - awesome i need to book a coaching
24:27 - session she's she's going crazy she's
24:29 - actually an insane developer
24:31 - and she's crushing it right now um yeah
24:34 - so
24:35 - leroy says kazi said a discord build
24:38 - coming soon 100
24:39 - yes we have a disco clown coming soon
24:42 - uh we also have an imessage clone coming
24:44 - soon guys let me know in the chat right
24:46 - now smash the thumbs up button if an
24:48 - imessage clone sounds pretty juicy like
24:50 - i think imessageclone will be sick like
24:53 - i i really think it'll be pretty sick
24:54 - man like
24:55 - that'll be fun to do yeah and we're
24:58 - going to be using react and firebase
25:00 - for that one so stay tuned
25:03 - it's going to be like are we aren't we
25:06 - going to you do it in murren as well
25:08 - yeah yeah we will see you know
25:13 - don't tell apple we are not building it
25:14 - in swift i know exactly
25:17 - all right guys so here we have
25:18 - package.json so now
25:20 - let's go ahead and we've got our stuff
25:22 - right here we've installed the
25:23 - dependencies you see
25:25 - that's correct three packages and and
25:26 - it's done right now
25:28 - let's go ahead and create that server
25:30 - dot js
25:32 - right so yeah but don't just go into
25:34 - that just yet
25:35 - uh we have still some stuff to do in
25:38 - package.json
25:39 - okay so if we go
25:43 - up here under a main and we just go
25:46 - ahead and
25:46 - type uh type in type and
25:49 - module okay uh that's pretty much gonna
25:53 - enable
25:53 - us that we will be able to build a
25:57 - better thing in es6 right and another
26:00 - thing
26:00 - we will need to add is the start script
26:03 - which will be used by heroku
26:08 - to start up our uh app
26:11 - uh when when we actually deploy it right
26:13 - okay we'll start
26:15 - and we would type in node uh dash dash
26:18 - experience
26:20 - oh yeah oh oh sorry sorry let's do nodes
26:22 - have it done yes yeah
26:24 - it's just my computer that needs it for
26:27 - some reason
26:28 - okay yeah and i think that's pretty much
26:33 - it for package.json i'm going to add
26:35 - this start script in
26:37 - add them type module in and then we're
26:39 - good
26:40 - this will add the es6 features this is
26:42 - going to be needed when we deploy this
26:43 - to heroku
26:44 - okay whoa by the way birthday coming
26:48 - soon
26:48 - happy birthday uh thank you i think he's
26:51 - he's talking about me
26:53 - because my birthday is coming at the end
26:54 - of the month the 27th thank you dude
26:57 - oh nice appreciate that appreciate that
26:59 - nice
27:00 - um so
27:03 - [Music]
27:04 - oh nice somebody said one guy recently
27:07 - found robo 3t as a database workbench oh
27:09 - sure have a look at that dude thank you
27:10 - um okay now let's carry on so
27:14 - server.js what are we doing correct
27:18 - so we first import all our stuff uh
27:21 - we will need to import um
27:24 - mongoose course uh and express and all
27:28 - these dependencies and then
27:32 - we will we will need to import uh pusher
27:35 - as well
27:37 - which we will be using a bit later but
27:39 - just in case it's nice that we
27:41 - have it already okay
27:46 - uh next up actually let's create our
27:48 - structure of uh
27:49 - let's create a structure of our uh app
27:52 - um
27:53 - so we will have an app config right
27:56 - yeah we will have some
28:00 - middlewares yep and we will have db
28:04 - config as well
28:06 - so this is a good tactic guys just mark
28:08 - out what you're doing just like we're
28:09 - doing the react builds
28:10 - just want to go ahead and mark it out
28:11 - with a comment that will help you out
28:14 - exactly and it's just easier for you to
28:16 - see
28:17 - what's up uh we will also have api
28:20 - routes
28:20 - yep and last but not least
28:24 - we will have the listener okay listening
28:27 - part
28:29 - so with that done i think we can go
28:31 - ahead and
28:32 - uh create our first api endpoint are you
28:35 - pumped
28:35 - let's do it david are you pumped
28:39 - i am david said that's so calm he's like
28:41 - are you pumped
28:41 - [Laughter]
28:43 - we were pumped dude let's go guys smash
28:46 - the thumbs up button get this video up
28:48 - to as many people as we can okay and
28:51 - let's get started and if you haven't
28:52 - already
28:53 - code is in the description okay so make
28:55 - sure you go and check it out
28:57 - right so app config what we're doing
28:58 - here app config
29:00 - let's first create our instance of
29:03 - app so const app
29:07 - and equals express
29:12 - just like that and that pretty much uh
29:15 - prepared our application uh so it's now
29:18 - it's already an instance
29:20 - but we will need to add the port
29:24 - uh for later on and that's where our
29:27 - application is going to be actually
29:29 - listening for all our requests and stuff
29:32 - like that
29:32 - okay so we will need to say
29:36 - process dot environment
29:42 - and oh no there is a port first
29:45 - just like this and we need to add two of
29:48 - these
29:49 - standing lines okay and
29:52 - basically a port so i i'll just add
29:54 - 8080.
29:56 - um that's pretty much it development
29:59 - server
30:00 - side i think okay uh with that done
30:05 - before we forget it uh like we always do
30:08 - or i always do we need to add the
30:11 - middlewares
30:13 - which will enable us to process
30:16 - json files and we we
30:20 - will have all the course headers right
30:23 - yep it's going to be working nicely
30:27 - uh and for our very first api
30:30 - endpoint we will just use like a health
30:33 - check thing
30:34 - it's pretty much not going to be uh
30:37 - doing too much thing
30:39 - it will just send a hello world
30:42 - once we call the application right so
30:44 - whenever the application receives
30:47 - a request on the route
30:50 - it will set the result status to 200
30:53 - which means okay
30:55 - and it's going to send back hello world
30:58 - now with that done uh there's one more
31:01 - thing left to do
31:03 - before we can start our very first api
31:07 - and that is adding the listener okay and
31:10 - we can do it
31:11 - in just here uh does it actually
31:14 - highlight on yours
31:15 - yeah it does um
31:18 - so we would just say that listen on the
31:20 - port that we
31:21 - uh up here defined and
31:24 - once you're done once you did that just
31:27 - console log
31:28 - uh uh where you're listening right with
31:30 - a couple of screen uh string
31:32 - concatenation
31:34 - that will be pretty much it uh for the
31:36 - first api
31:38 - and we can just test it out i think okay
31:41 - let's do it dude
31:42 - so this is pretty much what you guys
31:43 - need as a bare bones
31:45 - server right so this is basically saying
31:47 - we don't need to be
31:48 - a we've got middlewares this is
31:50 - basically just going to pass everything
31:51 - as json which goes in and out of the
31:53 - server think of it that way
31:54 - cause is uh something which handles
31:56 - something called headers
31:58 - so it's like a security middleware this
32:00 - is going to determine which port we
32:01 - actually run
32:02 - our app on so in this case it's going to
32:04 - be if we set a port locally or it's
32:06 - going to be aea by default
32:08 - and then here it's basically a test
32:10 - group so you can get different types of
32:12 - uh
32:12 - rest api requests you over here we're
32:14 - making a get request
32:16 - to the base url we're saying okay if if
32:19 - everything's good then say
32:20 - 200 which means okay and send back a
32:22 - hello world and then we're basically
32:24 - starting up our server
32:25 - and this is how we go ahead and do it
32:27 - okay so that's dope
32:29 - and now let me go ahead and make sure my
32:32 - chat is on doing this up there we go
32:33 - nice
32:34 - so okay what are we doing now with that
32:37 - done
32:38 - uh we will need to use our terminal once
32:40 - again okay
32:41 - and you can just type in nodemon
32:44 - server.js
32:46 - and whoa nodemon
32:49 - [Music]
32:50 - server.js
32:52 - that's correct nice and that starts up
32:55 - our server
32:57 - yeah and you should get to this point
32:59 - now this is very good right now what i
33:01 - would say at this point is grab this
33:03 - just copy paste it to your browser and
33:06 - if it says
33:07 - hello world you're good to go
33:13 - here we go nice
33:17 - there we go happy happy days let's carry
33:20 - on
33:22 - so if you get to this guys then that's
33:23 - dope right and what i would say is also
33:25 - test it out if you don't believe us you
33:26 - think oh my god they're lying
33:28 - for whatever reason i know how some of
33:30 - you guys are go ahead and do hello world
33:32 - one two three
33:33 - and then refresh boom right so it's a
33:36 - server it's running on localhost aea
33:39 - okay so everything works um
33:43 - nice so now what we're gonna do is
33:46 - what dave now now we what we're gonna do
33:49 - is
33:49 - uh i think we can start uh setting up
33:52 - our database
33:53 - what you say let's do it dude okay
33:57 - so let's head over to mongodb.com okay
34:00 - so we're going to mongodb.com
34:03 - that's correct and it's actually a free
34:06 - no sql database so anybody can go ahead
34:09 - and
34:09 - start using it for completely free uh i
34:12 - think sony you have already an account
34:13 - so you can just go ahead and log in
34:15 - yeah i do i think i have it on this one
34:19 - so once you get to this screen you're
34:21 - going to have a little bit of a
34:22 - different setup page right it's going to
34:24 - say like you want to create your first
34:25 - project or whatever it is
34:27 - now what we have to do at this point is
34:29 - i'm just going to go here
34:30 - we're working on tindercon last i'm
34:31 - going to click on new project
34:33 - right so when you create an account it
34:35 - actually will pop up and say you want to
34:37 - create a new project so you can click
34:38 - that one or if you get to this page
34:40 - then make sure you go ahead and just
34:42 - click on new project here
34:43 - uh also just one highlight and the kill
34:45 - says did so many clones with your help
34:47 - sonny fingers crossed soon i'll get that
34:49 - freelancing contract 100
34:51 - dude the amount of people that have got
34:53 - freelancing contracts off these clones
34:55 - is
34:55 - ridiculous like frank ramos just
34:59 - man 170k 170 000
35:02 - contract with sonos like mind blowing
35:04 - stuff let's carry on dude
35:07 - yeah yeah so on this screen you pretty
35:09 - much just have to name your project
35:11 - that's a no-brainer you can just zoom on
35:14 - instagram
35:15 - i think uh let's add the dash in between
35:18 - just so it's not gonna get confused
35:22 - okay uh
35:26 - smash the thumbs up button guys destroy
35:30 - it
35:30 - yeah and you can just go ahead and
35:33 - create a project without adding any more
35:35 - members
35:36 - nice um yeah
35:39 - okay okay so with that done it's gonna
35:42 - be
35:43 - taking a couple of minutes to uh oh no
35:45 - no we we have to first build our cluster
35:48 - i forgot about that
35:49 - so you have to build your cluster when
35:51 - your project is ready
35:53 - and the cluster is actually the server
35:55 - that will run
35:56 - your database right let's go and just go
36:00 - with the free version
36:01 - that will be completely enough
36:05 - [Laughter]
36:08 - ali hassan we like you dude
36:11 - thank you for watching exactly nice
36:14 - let's carry on so we're
36:15 - going to click on that free tier unless
36:16 - you want to pay i mean it's up to you
36:18 - guys i don't want to pay him click on
36:19 - free
36:20 - uh aws you can leave all this stuff by
36:23 - default we don't really need to change
36:24 - any of this that's correct and you can
36:26 - just go ahead and create a cluster
36:29 - um and that's pretty much it
36:32 - for now nice oh dude edwin says thanks
36:36 - for the great work guys i will try
36:37 - deploying this to microsoft to zero both
36:38 - the back end and front end after the
36:40 - build
36:40 - dude if you do that right and it works
36:44 - please like send over a video because
36:45 - we're always trying to bring on
36:47 - developers who can bring
36:48 - value to any other developer right which
36:50 - means if you can do that
36:51 - that's pretty cool right a lot of people
36:52 - want to know about azure right if you
36:54 - can go ahead and actually send a video
36:56 - into us so like
36:57 - hit me and david up on our instagrams
36:58 - and you can pretty much go ahead and
36:59 - send it through that
37:01 - and literally we are never against
37:04 - bringing on developers to go ahead and
37:05 - teach something valuable
37:08 - to the community to everyone else so if
37:10 - you're not to the point of zoo
37:11 - good stuff we can maybe bring that on
37:13 - the channel
37:14 - that's cool okay um
37:19 - yeah it's going to take a little while
37:21 - while it finishes up so we can go to
37:23 - pusher.com
37:24 - okay and guys this is another reason why
37:26 - i like firebase this
37:27 - this [ __ ] takes ages
37:31 - seriously like firebase will be done by
37:33 - now david
37:38 - yeah yeah so let's go to pusher.com
37:43 - i think you have an account there as
37:45 - well already
37:46 - yep um you can just go ahead sign in
37:50 - um yeah but so what we will be using
37:54 - pusher for
37:55 - is pretty much just making mongodb real
37:58 - time
37:59 - because mongodb itself it's not it's not
38:03 - real time at all
38:04 - yeah so we will just be using another
38:06 - tool
38:08 - and on the left hand side you want to go
38:11 - to
38:12 - channel channels and manage okay
38:15 - uh yep and on the top right
38:19 - there should be an ad
38:22 - oh create app yeah yeah sydney samia
38:26 - says
38:27 - i think i have my answer now
38:30 - yeah you see this crazy sound no
38:34 - yeah mirn is so much cooler huh yeah
38:37 - also guys i just want to say um somebody
38:39 - said how can i learn github that's
38:40 - actually a really good
38:41 - comment um more than happy to actually
38:44 - drop an entire youtube video on github
38:46 - i think that'll be really useful smash
38:48 - the thumbs up button if you want to see
38:50 - that
38:50 - let us know and drop it in the comments
38:52 - as well um also thank you viraj for that
38:55 - lovely donation
38:56 - cheers dude all right david let's carry
38:58 - on yeah sorry
39:00 - okay uh so you can go ahead and hit
39:03 - create app
39:04 - boom and
39:07 - just name it somehow or instagram oh
39:10 - damn or something
39:11 - let's do hunky instagram
39:14 - let's do it
39:18 - god damn it
39:19 - [Laughter]
39:21 - okay all right yeah uh
39:25 - you want to select a cluster whichever
39:27 - you prefer
39:28 - okay um we can go with any
39:31 - and yeah island is good uh
39:35 - and you can just select the front end
39:38 - which will be
39:38 - react right yep and the back end is
39:42 - going to be nodejs
39:44 - and that's actually important because
39:47 - pusher
39:48 - gives you the initial code right yep
39:51 - let's go and create the app because that
39:54 - was pretty much setting up pusher
39:56 - don't okay so guys
39:59 - just to clear this up by the way uh
40:01 - pusher is essentially what it's gonna
40:03 - allow us to once we've got everything
40:05 - built up
40:05 - and sort of like working pusher is gonna
40:07 - be that middle man
40:08 - who allows all that real-time
40:10 - communication to happen between our
40:11 - front end and our back end
40:12 - so it's kind of like a guy that sits in
40:14 - the middle and just passes things across
40:16 - like the front end of the back end so
40:17 - it's real time right think of it in the
40:19 - simplest way
40:20 - it's just something which sits in the
40:22 - middle between our front end and back
40:24 - end
40:25 - and it allows everything to stay
40:26 - real-time and allow everything to be
40:28 - just as you saw it when we demoed it in
40:30 - the beginning it's gonna allow that same
40:32 - functionality okay
40:33 - that's correct it's just gonna watch
40:35 - what happens and if something happens
40:38 - it's gonna trigger everything once again
40:40 - yep and
40:42 - it's gonna like make the whole thing
40:44 - real time right
40:45 - yep oh okay what's next david
40:49 - okay so next up um i think we can go
40:53 - back to mango db
40:54 - i think the cluster is already built up
40:56 - oh [ __ ] okay
40:57 - they finally finished
41:04 - oh [ __ ] nice dude ruin that just says
41:06 - damn it was going to go to sleep but got
41:08 - the notification now i'm going to spend
41:09 - the whole night watching your crazy
41:11 - content
41:11 - see you save it and stay on the zoom
41:13 - call oh nice he's in the course
41:15 - welcome dude and i will see you in
41:16 - tomorrow's coaching call
41:18 - i'm actually going to go ahead and
41:19 - broadcast that on youtube so you guys
41:20 - can go ahead and see
41:21 - or get a taster session as to what is
41:24 - inside a proper javascript so
41:26 - awesome stuff i will see you there dude
41:28 - that's amazing
41:29 - okay definitely okay oh this is good
41:31 - dude yeah
41:32 - sydney summit so so pusher is like the
41:34 - on snapshot part of firebase that's
41:35 - really nice
41:37 - um actually it's not oh so
41:41 - snapshot is is actually more like the
41:44 - change stream of uh mongodb
41:48 - yeah and we need to trigger pusher
41:52 - when the change stream change stream
41:54 - goes off
41:55 - into english in english yes dude it's
41:58 - like on snapshot okay
42:00 - like it is a little bit more fine green
42:02 - but yes it's like the only snapshot
42:04 - right i mean there's there's more
42:05 - complex to to it but in in a very nice
42:08 - simple nutshell
42:09 - yes in nature yeah
42:13 - okay okay so now we just need to create
42:16 - a
42:17 - database user and uh set the network
42:20 - access
42:20 - on the left hand side so let's go with
42:22 - the database access
42:24 - uh just add the new database user yo
42:28 - that's right um you can just go ahead
42:31 - and like
42:32 - name it however you want to okay
42:36 - like let's go with admin maybe i don't
42:39 - know
42:39 - i think admin is bad elon musk
42:42 - okay uh and you wanna
42:46 - you wanna generate and uh uh seek your
42:49 - password
42:50 - [Laughter]
42:51 - all right so to generate secure guys you
42:53 - wanna make sure you copy this right copy
42:54 - this and throw it and you're
42:56 - in you're safe okay yeah yeah you will
42:59 - not be able to
43:00 - see it again um and
43:03 - with that done you can just go ahead and
43:05 - create uh the user
43:07 - so you're gonna smash this add user
43:09 - button just like you smash the thumbs up
43:12 - carry on david okay
43:15 - uh and then now let's go to network
43:17 - access
43:18 - boom dude five dollar donation by salmon
43:23 - whoa five dollar canadian thank you dude
43:26 - what does he say so he says i'm a huge
43:30 - fan of this channel
43:31 - but kazi's insta post earlier was
43:33 - completely wrong burger app
43:36 - selling your course course but yeah
43:39 - okay guys i'm gonna i'm gonna clear this
43:42 - one right up
43:43 - right guys chill out
43:46 - okay like chill out nobody's degrading
43:49 - anyone nobody's doing anything
43:51 - but and you just can't be so soft okay
43:54 - like everything's fine everything's good
43:56 - like nobody's degrading anyone or
43:58 - anything we respect all the developers
44:00 - if anyone
44:01 - is pushing content to help someone else
44:04 - then we respect them
44:05 - okay anyone who drops negative comments
44:07 - like that
44:08 - you know like dude i appreciate the
44:10 - donation but i don't appreciate the
44:12 - negativity
44:13 - so let's keep it let's keep it
44:15 - optimistic on this channel
44:16 - let's go okay
44:20 - um so let's head to network access um
44:26 - and just add an ip address and we will
44:28 - be allowing anybody
44:30 - um to write and read our database you
44:33 - can just go ahead and allow
44:35 - access from anywhere that's correct
44:38 - and just confirm
44:41 - um oh yeah yeah it's like a huge huge
44:45 - disclaimer
44:46 - yeah do not want to do this when you're
44:49 - working with clients
44:51 - yeah right this is not a production
44:53 - friendly
44:54 - um way of doing things yeah the way you
44:58 - would do it you won't want to add like a
45:00 - you know something which is um like a
45:02 - safe ip address like your ip address or
45:05 - something like that okay
45:06 - make sure you go ahead and do something
45:07 - like that rather than making it
45:08 - accessible from anywhere
45:09 - now uh something i want to say is start
45:12 - a code somebody said
45:15 - in the description oh not on facebook
45:18 - uh actually okay so if you're on
45:20 - facebook and watching
45:22 - then please hop over to youtube the
45:24 - starter code is in the description sorry
45:25 - about that yeah i completely
45:27 - didn't realize that and i said sunny is
45:30 - on top of his humor tonight yeah let's
45:31 - go dude
45:37 - um all right let's go ahead and click
45:39 - confirm
45:40 - and now this allows everyone access to
45:42 - everything so
45:43 - pretty much at that point you can say
45:44 - goodbye to security
45:46 - and jake so good i mean that's pretty
45:50 - much
45:50 - true yeah i mean it's true like i mean
45:52 - for demos and stuff it's fine guys and
45:54 - especially when you're building your
45:55 - stuff don't get like too
45:57 - caught up with this stuff you know like
45:58 - make sure you just just build it
46:01 - yeah and just go for results over
46:02 - perfection dude i once had somebody here
46:05 - who was like oh i created an app right
46:07 - and it does like some
46:08 - some cool stuff and i was like oh well
46:09 - done that's awesome it's like yeah yeah
46:11 - yeah i spent
46:12 - ages on the security and i was like
46:15 - dude nobody's gonna hack your app like
46:19 - unless you've led these mark zuckerberg
46:20 - or you're making crazy money no one's
46:22 - gonna touch your app don't worry
46:23 - it's fine so like don't worry guys yeah
46:28 - yeah folks for personal projects it's
46:30 - completely unnecessary
46:32 - exactly yeah sunny is always good in it
46:35 - right
46:36 - thank you dude okay now let's go back to
46:39 - clusters and actually
46:40 - do connect to our database okay
46:44 - okay uh you can just hit uh connect on
46:48 - the left hand side of the cluster
46:50 - okay and that's gonna pop up something
46:54 - and with the uh connect your application
46:57 - button
46:58 - um you will be receiving a
47:02 - huge huge string right okay you want to
47:04 - copy that
47:06 - um so this huge thing right that's
47:10 - correct
47:10 - and notice that there are two uh
47:13 - properties
47:14 - highlighted with green one of them is
47:16 - going to be the
47:18 - password which you hopefully already
47:21 - saved to somewhere
47:22 - safe and the other one is going to be
47:24 - the database name which we will be hard
47:27 - coding into this link
47:29 - yeah yeah um so that's pretty much it
47:33 - so let's go a copy and let's go back to
47:35 - our
47:37 - db config so right here
47:40 - i like this comment i like this coin it
47:41 - says nuts
47:44 - dude proudly
47:48 - proudly nuts dude like
47:52 - those are the ones that run [ __ ] now
47:54 - dude like elon musk is running
47:56 - the entire bloody planet on his own
48:00 - jeff bezos pretty much runs all of us so
48:04 - those two rule the world exactly right
48:07 - all right so let's go to db config
48:10 - and oh yeah
48:14 - uh you will be adding the uh connection
48:17 - url
48:18 - right you just want to paste what we had
48:21 - in there guys
48:22 - and then you have those two things that
48:23 - david spoke about he had a password
48:25 - and the db name so the first one i
48:28 - actually copied it earlier so i'm going
48:30 - to go ahead and pop it in
48:31 - it's this one right here that's the
48:34 - password that we saw
48:36 - and i'm just gonna rename the database
48:38 - which will be
48:39 - in insta db so
48:43 - this one this one guys is actually the
48:45 - name that is going to create the db4
48:48 - okay so this is very important
48:49 - to make sure that you don't just type in
48:51 - some gibberish there like make it
48:52 - something which actually makes a lot of
48:54 - sense okay exactly
48:56 - exactly that's right and now let's go
48:58 - and connect to our database
49:01 - using mongoose and we can just go ahead
49:03 - and type in
49:05 - mongoose.connect
49:08 - i think it's uh showing up yeah there is
49:12 - it
49:13 - let's just add the connection url yeah
49:17 - and we need to pass in a couple of
49:20 - properties
49:21 - which i actually had them on clipboard
49:24 - but
49:25 - these are it's because mongoose is still
49:28 - under development and
49:30 - this is how in the current version we
49:32 - need to pass in a couple of stuff
49:34 - awesome um so yeah that's pretty much uh
49:38 - nice that was setting up the database
49:40 - right you got a lovely comment here from
49:42 - libro he says david you are killing it
49:43 - too mongodb can be such a pain and
49:45 - thanks to simplifying it so much
49:47 - oh thank you so much dude i'm actually
49:50 - planning on dropping
49:51 - some uh like written content uh if
49:54 - you're interested drop in the comment
49:56 - oh nice thank you dude yeah yeah nice
49:59 - um yeah let's do it dude so what's next
50:03 - this is what we we use to create to that
50:05 - that mongodb
50:06 - instance exactly uh and actually we want
50:09 - to see
50:10 - uh because it's going to be crucial this
50:12 - time
50:13 - that we need to see when the database is
50:16 - actually connected
50:17 - okay so we want to go ahead and type in
50:21 - uh still in db config so mongoose dog
50:26 - connection
50:26 - okay um
50:30 - and once and we will add the
50:35 - uh property as open
50:38 - yep so it's pretty much like reading
50:41 - english
50:42 - so once the mongoose connection is open
50:46 - we want to fire off a function
50:49 - right okay um and we can just add like a
50:55 - simple
50:55 - error function and first up let's just
50:58 - console.log
50:59 - uh that db is connected just like this
51:03 - so uh so i think if you
51:07 - run the application once again uh with
51:10 - the terminal
51:10 - it will actually show the db connection
51:14 - um yes it's up so now what we can do
51:18 - guys is go ahead and shut this
51:20 - oh i need to save the file you see it
51:22 - starts yeah it restarts everything it
51:24 - says listening on localhost and
51:25 - boom says db connected now if it freaked
51:29 - out at that point
51:30 - just leave your computer and just walk
51:32 - away i'm joking
51:33 - just just just check the code again and
51:37 - you know what's up with you today
51:41 - you know it's a good way to keep the
51:42 - energy up you know so
51:44 - at this point guys you should see db
51:46 - connected and it and if you don't then
51:48 - just make sure you go back through the
51:49 - steps
51:50 - try not to lose hope at that point yeah
51:54 - that's right that's right okay um
51:59 - now let's go ahead and actually create
52:03 - the api endpoints that we will be
52:06 - uh using to store our images comments
52:10 - and all that kind of stuff in our
52:12 - database right yep let's do that
52:14 - before we do a quick shout out to sydney
52:16 - says are you guys keeping everything in
52:17 - one server file for the purpose of
52:19 - tutorial yes
52:20 - this is exactly why we do that and also
52:22 - for this one again
52:24 - it's the purpose of tutorial we we there
52:26 - are ways obviously you should split
52:27 - things up into separate files to make it
52:29 - like
52:29 - more like you have roots database you
52:31 - have some kind of structure for a
52:32 - tutorial though
52:33 - i mean if we go ahead and do all of that
52:35 - it's going to extend the build by a huge
52:36 - amount so
52:37 - that's what we're doing exactly yeah
52:39 - yeah go for it
52:40 - okay let's go uh down to
52:44 - api routes okay now here
52:48 - we first we need to upload some image
52:51 - and then uh be able to return it
52:54 - okay uh so first thing first
52:58 - we will need to add a post endpoint
53:02 - uh which will be responsible for
53:04 - uploading
53:05 - uh our images so let's just actually at
53:07 - the endpoint of
53:08 - upload yeah to keep
53:11 - things very very simple um
53:15 - and it will fire up so what happens here
53:19 - is that when you call this api
53:22 - this api endpoint uh with a post method
53:26 - it's going to fire off a function which
53:28 - will need to have
53:30 - two parameters which are request and
53:33 - response
53:35 - and those will be responsible for
53:38 - uh saving our stuff into the into our
53:41 - mongodb
53:42 - right oh you have printer on
53:45 - right yeah okay um
53:49 - but let's stop here for a little while
53:51 - and add
53:52 - a new file which we will be using
53:56 - to uh define the data structure
53:59 - okay so new file which will allow us to
54:03 - define the data structure we call it
54:05 - what a model right
54:07 - um yeah i i would just go and call it db
54:10 - model okay um db model.js
54:14 - and if you're following me i don't know
54:17 - if you're following me so you just
54:18 - created
54:19 - this file right yeah that's correct
54:21 - that's correct
54:22 - so okay and let's actually import
54:26 - mongoose here as well
54:30 - uh from mongoose of course
54:35 - yep and we will just simply need to
54:38 - create
54:41 - a an instance right so cons
54:44 - instance
54:48 - and we will be creating a
55:02 - oh damn it okay david
55:05 - david froze a little bit um so he says
55:08 - what we would do here guys is create a
55:11 - instance
55:12 - okay so this would say let's go ahead
55:15 - and check it out
55:16 - mine isn't actually loading up as well
55:17 - god damn it um okay
55:20 - so let me go ahead and pull up the code
55:22 - myself in case we have a connection
55:23 - issue okay
55:24 - so can you guys hear me by the way
55:28 - if you can let me know um otherwise
55:32 - everyone just dropped some fire in the
55:34 - chat be like oh my god everything's
55:36 - broken
55:37 - uh can you guys still hear me
55:40 - i'm not sure
55:47 - um okay where is the code
55:51 - [Laughter]
55:53 - somebody wrote david david's on that
55:57 - staring contest
55:58 - oh damn it we lost david [ __ ]
56:03 - all right i'm gonna go ahead and get the
56:05 - code and we can
56:06 - don't worry guys we can save the day
56:08 - david's
56:10 - laptop he's actually getting a new
56:11 - laptop tomorrow
56:13 - so he shouldn't have that issue from
56:15 - tomorrow onwards
56:17 - so that should be okay from the moment
56:19 - um i'm just pulling up the code myself
56:21 - guys
56:23 - because we actually prepped this before
56:26 - but
56:26 - let's just give it a sec okay so of
56:29 - people can hear all right now guys while
56:30 - i set this up
56:31 - go ahead and feel free to fire up a
56:33 - question if you want
56:34 - let me know fire off questions um
56:39 - so many people think david he is
56:41 - bluffing he's staring at you
56:42 - just imagine that guys like
56:46 - just david frozen staring you know oh
56:49 - right now i'm just pulling up the code
56:53 - right now
56:54 - um this is by the way
56:58 - how i quickly pull up code if you guys
56:59 - are wondering so
57:01 - what you can do is if you've got a new
57:02 - sort of oh
57:05 - david is calling
57:09 - have you got david okay
57:12 - [Music]
57:16 - okay david's back everyone smash the
57:19 - thumbs up button for david hey
57:22 - david is the instance guys
57:25 - david david got stuck in a circular loop
57:30 - yeah okay okay let me first reconnect to
57:33 - the live share and i think you need to
57:35 - do that too because
57:36 - yeah it said you left it oh sorry guys
57:40 - sometimes my connection just drops i'm
57:42 - actually going ahead and gonna go ahead
57:44 - and create um
57:46 - uh i'm gonna open up the code on my
57:48 - local as well
57:50 - so let me go ahead and do this boom
57:57 - ah this one is how far did i go
58:01 - um i mean just before you
58:04 - one sec code insiders boom okay
58:08 - got the code up nice now guys what i
58:11 - want to say
58:11 - is uh i saw a good question here
58:14 - somebody just said
58:16 - um
58:17 - [Music]
58:19 - okay david answer this might be a good
58:21 - question for you by elizabeth
58:23 - um i can't see your scream god damn it
58:27 - demo gods you get really good at
58:29 - multitasking when all this stuff goes
58:31 - wrong
58:33 - right okay i'm still a little unclear as
58:36 - to why you do not need to hide your
58:38 - mango db
58:39 - in a dot environment uh it's just for
58:42 - the purpose of this
58:44 - um of this tutorial so normally you
58:48 - definitely need to
58:49 - hide every single thing into your dot m
58:52 - file
58:53 - um but it's just this time when we're
58:56 - doing the tutorial
58:58 - right yeah so we don't really
59:01 - work and mess with the security part of
59:04 - stuff
59:06 - we just want to keep it super simple for
59:09 - you
59:10 - yeah so uh exactly so anything when it
59:12 - comes to environment files and stuff
59:14 - like that
59:15 - again there is better practices for this
59:17 - stuff it's because we're pretty much
59:18 - trying to fit this into a live stream so
59:21 - elizabeth i can pretty much teach you a
59:22 - lot of security stuff on our course
59:23 - separately or in the coaching course
59:25 - inside of pwj uh we can pretty much go
59:27 - over that
59:28 - so awesome question now uh simon says is
59:31 - this course understandable if you're
59:32 - doing react for the first time and if
59:34 - you know angular.js
59:35 - yeah so uh even if you're a complete
59:38 - beginner guys
59:39 - yeah pwj profit javascript link in the
59:42 - description
59:42 - is available for anyone who has
59:46 - zero experience encoding right so like
59:48 - you don't need to have coded before
59:49 - even if you've just heard of coding you
59:52 - don't even know where to begin
59:53 - that's uh that's what why we built it we
59:55 - built it so it's got a
59:56 - jacked community like everyone is insane
59:58 - energy inside the
60:00 - your success coach we have everyone we
60:01 - hold your hand with coaching calls
60:03 - pretty much
60:04 - we'll take you from a complete beginner
60:05 - to absolutely crushing it like david
60:07 - um and you can probably let me actually
60:09 - tell you this
60:11 - i joined without like almost any coding
60:15 - experience
60:16 - yeah how much did i take it before
60:20 - um like a month yeah
60:24 - and and it wasn't actually actually it
60:26 - was in college so that kind of doesn't
60:28 - count
60:30 - if you know what i mean yeah exactly
60:34 - yeah in college it doesn't really have
60:36 - the same hit you know
60:37 - like that's what i found um yeah
60:40 - i think i have your david the code that
60:42 - you sent me before by the way
60:43 - is that the code that we're using today
60:46 - yes it is
60:46 - okay let's go so now guys what we're
60:50 - going to do is
60:50 - inside of db model where we have cons
60:53 - instance we're going to go ahead and
60:54 - basically just
60:55 - go ahead and copy this code in and we'll
60:57 - break this code down for you
60:58 - okay so what this is saying is we're
61:01 - creating a schema
61:03 - for every single document that we're
61:05 - pushing into the db
61:06 - i think you're not showing your screen
61:08 - right now oh okay yes
61:09 - i'm not sharing yeah there you go
61:12 - somebody wrote david is in a staring
61:14 - contest when you froze
61:17 - um and i'm not in you're
61:22 - um or you're actually bidding it in on
61:24 - your local
61:26 - um yeah yeah what's happening yeah i'm
61:29 - building your local yeah
61:31 - okay okay so now we have a content since
61:34 - a mongoose dot schema and then we've got
61:36 - cap
61:36 - so this is basically the structure of
61:38 - each document right
61:39 - so in the in a sql database in nosql
61:42 - database or you have this structure you
61:43 - have
61:43 - collection which is um essentially an
61:46 - array of documents right
61:48 - and then inside of that you can have
61:49 - another collection and yeah that has an
61:52 - array of documents and so forth and this
61:54 - and it goes on and on and on right now
61:57 - actually you want to
61:58 - change the image to a string
62:02 - wait what wait yeah yeah okay so this is
62:06 - now a string
62:07 - right just like yeah
62:10 - okay don't because it's going to be uh
62:13 - yeah
62:14 - exactly um so
62:18 - now what we're to do um
62:21 - is it possible to use sql with react yes
62:23 - and
62:24 - also dude keep the comments clean
62:26 - otherwise block
62:29 - um okay so yeah this is going to be a
62:31 - structure for every sort of
62:33 - piece of information they're going to
62:34 - push inside the database right now once
62:36 - you've got this we need to actually
62:37 - export this into a collection right so
62:39 - what we're going to do here
62:40 - is go ahead and say export default
62:42 - mongoose.model
62:44 - and this is the collection name so
62:46 - imagine this is what a post will look
62:47 - like
62:48 - and this is the collection that each
62:49 - post goes inside of right
62:51 - now we're going to export it as um
62:54 - instance
62:55 - instance this should be instance so
62:58 - we're going to export it as
62:59 - this and basically this will allow us to
63:01 - go ahead and use it inside the server.js
63:03 - file
63:03 - okay that's correct right
63:07 - okay um actually you want to change the
63:11 - the uh change to capital s
63:14 - um oh for the image strings yeah yeah
63:17 - and now we're good to go uh back to
63:20 - server.js
63:21 - file by the way nice let's go
63:24 - okay um so now in the
63:28 - upload uh you can pretty much go ahead
63:31 - and like save
63:32 - um whatever comes in
63:36 - as a request body you want to save that
63:38 - into a variable
63:40 - right okay if you're my in my live
63:42 - session
63:43 - on you nope i said you joined
63:47 - um oh yeah you're in
63:51 - am i i see you david who is this david
63:56 - should i go ahead and get this guy guys
63:58 - someone is in the coding session
63:59 - and their name is david and it's not our
64:01 - david
64:03 - i just typed in hello who
64:06 - the hell is david
64:11 - i just typed in hello to your code where
64:14 - uh to the upload um upload api
64:18 - like no just there david you're getting
64:21 - kicked
64:21 - i'm sorry okay i've been removed okay i
64:25 - just got the
64:26 - notification yeah
64:29 - so now i'm gonna do is send you
64:33 - a new one yup go ahead and join in that
64:36 - one
64:37 - oh okay david your mic's echoing out man
64:44 - okay i think it's because the
64:47 - sound goes from my headphones to the
64:49 - microphone
64:50 - okay um is it all good now guys
64:58 - hopefully okay
65:01 - joining again let's try it
65:06 - yep okay
65:09 - uh while i'm joining that's actually uh
65:12 - sonny you can go ahead
65:13 - and uh add the stuff in there
65:16 - so let's first create a
65:19 - simple variable like const uh
65:23 - db post okay so now
65:26 - we're gonna go ahead and say const um
65:30 - we're looking for the upload endpoint so
65:33 - [Music]
65:35 - yeah it's uh line 31 really
65:39 - yup wait um yeah not on r1
65:43 - no i'm saying in the actual code right
65:49 - okay yeah so so we've got an upload
65:51 - endpoint
65:52 - right and that's on and what i'm going
65:54 - to do is we want to strip we're going to
65:55 - get the body and we're going to get a
65:56 - file
65:57 - from it right no no no no no
66:00 - we want to uh get the body we will be
66:04 - sending everything as a string okay
66:07 - so you want to go ahead and just create
66:09 - a simple um
66:11 - david i've sent you a link just jump in
66:14 - um i'm jumping i'm jumping yeah then we
66:17 - can carry on like that that'd be awesome
66:28 - from joining yeah
66:32 - so everyone let's try this one twice
66:37 - all right so give us a second guys let
66:41 - it load up
66:55 - okay yeah it's you see me inside
67:00 - um can you see inside the code
67:04 - uh not yet it's still loading okay
67:12 - right
67:15 - so david what we're trying to build here
67:17 - right let's just explain it to everyone
67:19 - okay
67:19 - yeah yeah we're trying to build api post
67:21 - and in our code we had api post upload
67:23 - in here we're just gonna say forward
67:24 - slash upload
67:25 - right and then correct we've got a
67:28 - request and a result
67:30 - right and then what we're saying is we
67:31 - want to actually go ahead and strip
67:33 - out some information from the the
67:36 - request
67:36 - whatever we send uh with the request
67:40 - yeah and with this with that information
67:43 - we want to go ahead and create a new
67:46 - document
67:46 - in our database right that's
67:49 - pretty much it because it just sent me a
67:52 - funny message
67:56 - on um
68:00 - it still says you blocked me blocked you
68:04 - yeah um okay
68:09 - and what are they saying david unticked
68:13 - okay um uh david this is carry on so
68:16 - we've got the database object
68:17 - so i'm going to go ahead and guys what
68:19 - you need to do is we're going to
68:19 - basically create a database object we're
68:21 - going to strip it from the body right so
68:22 - what was we're doing here correct
68:24 - we're creating an object and then we're
68:26 - saying um that's not a code
68:28 - uh you're going to create a simple const
68:31 - um
68:32 - okay and and um
68:35 - yep and you want you want to strip out
68:38 - the whole request body
68:39 - right and
68:41 - [Music]
68:44 - then you can go ahead and
68:47 - uh with the body yeah um
68:50 - let's actually first import um
68:54 - the database structure that we created
68:56 - uh from the model file
68:58 - okay and you wanna go ahead
69:01 - and just import it up top
69:06 - okay
69:11 - and yeah that is correct and don't
69:15 - forget to add
69:16 - js at the end uh because it's es6
69:20 - okay okay and you want to go
69:23 - down and say db model dot create
69:29 - and pass in whatever uh
69:32 - pass passing the body no no not db.
69:35 - model just simply db model which you
69:37 - just imported
69:37 - yeah dot create uh and
69:41 - pass in the body okay
69:46 - and it will have a callback function
69:48 - with
69:49 - an error or data
69:54 - as a parameter that's correct
69:57 - and you want to add an if gate
70:01 - all right if if statement and if there
70:03 - is an error
70:04 - uh we want to set the response status to
70:07 - 500
70:09 - and send back uh the error
70:14 - oh yeah wristband status 500 and send
70:18 - error um
70:21 - okay and if there is no error you want
70:24 - to just go ahead and set
70:25 - the response status 201
70:28 - and send back the data that we just
70:31 - stripped out
70:32 - from this creation okay and that
70:35 - actually should be able to uh save
70:39 - a post okay uh and
70:43 - because we are using that in
70:46 - in uh we will be uh destructuring the
70:50 - image file
70:52 - on the front end to phase 64 code
70:55 - this will allow us to save it as a
70:58 - string
70:58 - okay with that done uh let's actually
71:01 - create a
71:02 - get endpoint as well because we have to
71:06 - actually
71:06 - re render out this stuff to the screen
71:10 - so let's go ahead and create app.get
71:14 - okay so wait where are we doing that
71:17 - um we're creating an uh no no uh outside
71:20 - it's uh it's going to be another
71:22 - uh endpoint okay so we're going to say
71:25 - app.gap
71:28 - yep we will say app.cat uh let's
71:31 - actually just
71:32 - say sync as endpoint
71:36 - what's up nothing nevermind
71:40 - async and then wait so what's this
71:43 - endpoint
71:43 - no no no no uh the endpoint was sync
71:46 - yeah
71:48 - yep wait why are we gonna
71:52 - get called sync
71:55 - because we use that to synchronize data
71:58 - between the database and the front end
72:00 - okay and it's going to fire off another
72:04 - function
72:05 - with the request and the response
72:07 - parameter
72:08 - okay so um
72:16 - just like up above uh request response
72:20 - and yep yep that fires up the function
72:25 - uh which will go ahead and find
72:28 - all the uh stuff for us so you're gonna
72:31 - just add two squiggly braces and in
72:33 - between you wanna say
72:35 - uh db model dot find yeah
72:39 - and inside of there
72:42 - uh just another uh pair of brackets
72:45 - yeah no not quote
72:48 - bracket or okay yeah yeah and just error
72:53 - and data because we could actually
72:55 - define
72:56 - what do we want to search for okay
72:59 - uh but since we want everything to be
73:02 - rendered out we will just uh
73:05 - go this way and you can copy paste the
73:07 - if gate from the
73:08 - um post endpoint yeah
73:12 - and there is one thing you will need to
73:16 - uh you you need to
73:19 - you need to watch out and that's the
73:21 - response status uh
73:23 - on the second time okay you want to go
73:25 - ahead and set that to 200 actually
73:27 - okay okay
73:30 - and that should be able to uh
73:33 - retrieve all the data from the database
73:36 - right yep
73:37 - okay do we want to actually go ahead and
73:40 - save something
73:41 - into it with uh
73:44 - using the front-end code or let's just
73:47 - keep on
73:47 - with the back end um dude you tell me
73:52 - um let's go to and build it
73:56 - on the front end okay so here we have
73:59 - the front end
74:00 - stuff right it's running over here so
74:02 - let's go ahead and pull up our terminal
74:04 - on this right here
74:07 - yep that's correct yeah
74:12 - okay um and wherever you have the
74:15 - image upload dot js file that's what we
74:18 - will be using right now
74:21 - um
74:25 - and on the front end we actually need to
74:27 - import
74:28 - a new package uh we will need to go
74:32 - ahead and import
74:34 - the image file to base64
74:37 - uh exif um package
74:40 - okay it's actually it's going to allow
74:43 - us to
74:44 - uh destructure the image into base64
74:47 - code
74:48 - okay so give me one sec
74:52 - um okay i don't have i don't have the
74:55 - latest code so
74:57 - what we're doing uh just go ahead and
74:59 - type in npm uh
75:00 - or actually npm install that thing uh i
75:03 - just sent the joe over
75:08 - on the front side yeah where have you
75:11 - sent that
75:12 - uh slack okay i think what might be
75:15 - better dude if you just zip your code
75:17 - and send it
75:18 - oh yeah you don't have it nope
75:22 - okay one moment okay um
75:28 - just uh just one moment
75:32 - [Music]
75:36 - and
75:43 - i gotta get rid of the node modules
75:45 - first yep
75:48 - so guys we're gonna go ahead and install
75:50 - this right as we're to say
75:52 - make it simple you guys go back here and
75:56 - say
75:56 - control c and with npm i
75:59 - image file to base64 exif
76:02 - right that's correct
76:07 - and that is going to um make
76:11 - an actual string a long long string from
76:14 - our uh image well once we upload it
76:20 - okay yeah i'm still deleting no modules
76:24 - at the moment uh but actually you can go
76:27 - ahead and create
76:28 - a new uh state we definitely need to
76:32 - i mean i think in this case dude what we
76:34 - should do is rather than doing it this
76:36 - way
76:36 - right what might be an easier approach
76:39 - is guys you
76:40 - you already have this code right you
76:42 - already have this code
76:43 - you can adapt this to actually pull from
76:45 - your firebase by swapping out your
76:46 - firebase.js with your config
76:49 - right now once you have your config
76:52 - all you need to do is actually go to
76:53 - firebase go to the project settings
76:55 - change this out for your configuration
76:57 - file
76:58 - um that's very easy to go ahead and get
77:01 - right
77:01 - now what we can do is we can go back
77:04 - here and then what we can do is whenever
77:06 - you upload the image right
77:08 - you actually upload it to firebase you
77:11 - get the url back
77:12 - in this file image upload right so this
77:15 - will go ahead and actually upload
77:16 - something to firebase and it'll give you
77:17 - the image url now david we can make an
77:20 - axios request here
77:21 - to post and that would actually be a
77:23 - very simple way of doing it
77:25 - let's go that way okay that's
77:28 - that's actually correct um
77:31 - yeah let's go that way okay uh so once
77:34 - we got that you are back
77:36 - um you just wanna uh
77:39 - pass it in the body yeah
77:45 - what's happening now so we're talking
77:46 - about server.js so we're talking about
77:47 - image upload no no uh we want to stay
77:50 - in the image upload um
77:53 - and and let's let's prepare
77:56 - the axios okay first so guys what you
78:00 - need to do is go ahead and create an
78:01 - axios
78:02 - file so axios.js
78:10 - okay now here what you're gonna do is
78:12 - you need to install axios so you need to
78:14 - make sure you go ahead and do
78:15 - um npm i exhale so make sure you're in
78:18 - the correct folder when you do all this
78:19 - stuff
78:20 - right so
78:23 - axios is gonna allow you to go ahead and
78:25 - install everything that we need
78:26 - and then what we can do is we can go
78:28 - ahead and
78:30 - open up our axials and basically we need
78:34 - to do here is the import axials from
78:38 - axios
78:42 - uh also guys i'm going to moderate the
78:44 - chat in a second i'm blocking
78:45 - a ton of you because do not spam that
78:48 - chat man
78:49 - like rishu anand like that's not coded
78:53 - so you're blocked abhishek chaudhary
78:56 - you're blocked hey guys come on keep
78:59 - that chat clean
79:00 - like simple as you know
79:05 - otherwise like it's super annoying when
79:08 - we have to like
79:08 - babysit and do stuff like that like
79:11 - because it is babysitting so
79:12 - i'm just going to block you so here we
79:14 - go right
79:17 - now what we're going to do is import
79:18 - axios from axios and then here what we
79:20 - say is const
79:22 - instance equals axios
79:26 - dot create okay now what we're going to
79:28 - do here is we're going to go ahead and
79:30 - say base url
79:31 - right and this goes ahead and sets up
79:36 - um okay
79:39 - and now this goes ahead and actually we
79:41 - can set a base url at this point so here
79:43 - we're going to say http
79:45 - we're going to use our localhost so
79:47 - we're going to say um just local
79:49 - host am i running on 88e right
79:52 - yes that's correct then we say export
79:54 - default
79:56 - instance like so
80:00 - okay so go ahead and save it
80:04 - and then what we're going to go ahead
80:06 - and do is
80:08 - we are going to go go ahead and
80:11 - [Music]
80:12 - go back to our image upload now we have
80:14 - axios prepared
80:17 - okay so to import it we can go ahead and
80:19 - say import
80:20 - we can say axios so we can just say
80:23 - axios
80:24 - from and you're going to import from our
80:26 - local axios so i see a lot of people
80:28 - make this mistake you don't import it
80:29 - from here but instead you actually end
80:32 - up importing it from this one we're not
80:33 - doing that we're importing it from our
80:34 - local
80:35 - okay um so now
80:38 - david what's next so what's next is you
80:42 - actually want to go ahead and create
80:44 - your axios
80:45 - post request okay um
80:49 - you just want to go ahead and like uh
80:54 - so here yeah yeah and at the url
80:58 - in the body and the user that is
81:00 - actually logged in
81:02 - we need to pass in those two properties
81:04 - right okay because this is the upload
81:06 - right here right
81:09 - yeah and of course you will need to add
81:12 - the caption as well
81:13 - okay yeah so let's go ahead and make it
81:15 - super clear for them so
81:16 - it's going to be post and it's going to
81:18 - be forward slash upload
81:21 - and then here we pass in data because
81:23 - it's a post request
81:25 - and then what we do is inside of here
81:27 - you want to mask
81:28 - your db model so this right here so this
81:32 - is pretty much our db model so i'm going
81:33 - to go ahead and pop this on the side
81:35 - so here's the database model i'm going
81:37 - to move us down here
81:38 - and now what you can see is when we have
81:41 - image upload.js
81:43 - now what we can see is
81:46 - um
81:52 - and also guys i see those people asking
81:54 - about what is profitable javascript
81:56 - is the course that we offer uh link is
81:58 - in the description
81:59 - it's only available for this week and
82:01 - then we close the doors
82:02 - um it has a ton of coaching calls and
82:05 - value that you guys will benefit from
82:07 - and that is going to be something
82:08 - massive which will go ahead and
82:10 - literally change your career so um now
82:13 - guys
82:15 - also i see people saying like price this
82:17 - price that guys i just wanna i don't
82:18 - wanna focus on negative comments but i
82:19 - do wanna say one thing
82:21 - like if you think that's expensive and
82:23 - you think that's like not investing in
82:24 - your future
82:25 - then guys i have one thing to say to you
82:27 - good luck trying to get to a six figure
82:28 - salary okay like you have to invest in
82:30 - yourself
82:31 - me and kazi we literally will spend like
82:33 - thousands on our personal development
82:34 - if there's anyone like i guarantee if
82:36 - you ask the same question to someone and
82:37 - you say
82:38 - all right here's would you pay a hundred
82:39 - dollars on a night out or something like
82:41 - that they'd have no problem looking cool
82:43 - on a night out
82:44 - right invest in yourself stop
82:46 - complaining
82:47 - and let's carry on seriously
82:50 - there's too many like there's too many
82:52 - people who get like you know like caught
82:53 - up on that stuff like
82:55 - it's fine if it's but don't spread the
82:57 - negativity around the community okay
82:58 - keep it positive and there's no room for
83:00 - that [ __ ] so
83:02 - now um okay so now what we're going to
83:05 - do is
83:06 - we're going to go ahead and upload so we
83:08 - actually have the po
83:10 - the caption the user we have as the user
83:14 - name
83:15 - right it's the username yep yep so we
83:17 - have the caption we have the username we
83:19 - have the image itself and we have
83:21 - comments but i don't think we're going
83:22 - to be pushing comments right now are we
83:24 - so
83:24 - previously we were pushing to firebase
83:27 - over here
83:28 - now um here and also guys one quick
83:31 - question is
83:31 - so many people ask like how did you get
83:33 - good at coding how did you get good at
83:34 - this and that
83:35 - guy's like we invested in ourselves like
83:38 - that that was
83:39 - pretty simple you know like it didn't
83:40 - take like i didn't wake up one morning
83:42 - and i was like oh
83:43 - react react papa react like no
83:47 - you know like it takes a lot of work
83:48 - like seriously
83:50 - reality check let's go right now
83:53 - upload so here we're gonna say caption
83:55 - we're gonna pass in the caption
83:58 - here i'm gonna say uh user is the
84:00 - username
84:01 - because that's what we pass it in as
84:04 - correct
84:05 - here i'm going to say image is just the
84:08 - image
84:09 - oh no image is the url because this is
84:12 - the one that comes back from firebase
84:14 - after we upload it
84:16 - and then we're going to say comments i
84:18 - don't think we upload the comments
84:19 - uh we don't upload comments you can just
84:22 - uh leave that
84:23 - uh full empty it's not going to cause
84:25 - any problems
84:26 - yeah okay done
84:30 - okay um so
84:33 - with that done actually i think you can
84:36 - go ahead and
84:36 - uh check it out online okay or or
84:39 - actually live
84:41 - right how it goes let's go ahead and see
84:43 - what happens now so we go back to our
84:45 - code let's go back to our react app
84:47 - and let's go ahead and whoa let's zoom
84:49 - out of that okay so now it can't be
84:51 - reached so we need to go ahead and do
84:53 - um bring it up and say npm stop boom
84:56 - save it and then what we're gonna do
85:00 - and i actually really like this comment
85:01 - i appreciate this comment so suddenly
85:03 - says
85:03 - if anything they're asking too little
85:05 - money for the amount of value they gave
85:06 - honestly
85:07 - i couldn't agree more dude the fact that
85:10 - we
85:10 - are able to provide what the level of
85:12 - what we provide
85:14 - at the price range that is i'm telling
85:16 - you now guys if you get it for anything
85:18 - less than a thousand dollars
85:19 - you're absolutely stealing from us like
85:22 - as in it's literally a case if you're
85:23 - staying for us like
85:25 - you're getting a bargain trust me when i
85:26 - say people will pay like thousands and
85:28 - thousands to go to university but
85:30 - freak out over a simple course you know
85:32 - like
85:33 - exactly and also no one's holding your
85:35 - gun to your head guys like it's all
85:37 - we we drop free content on youtube it's
85:39 - all free you know like everything's good
85:41 - right look awesome okay
85:45 - now why is it so zoomed in oh wow okay
85:48 - there you go so guys now what we can do
85:52 - is let's go ahead and open up our
85:53 - inspector
85:56 - let's go ahead and go back here we're
85:57 - going to go ahead and say login
86:00 - and here just i think that'll be oh damn
86:03 - it
86:03 - let's go sign up yeah
86:08 - sonny
86:11 - let's just do abc abc abc register
86:17 - and oh man damn it trust that to be in
86:21 - use
86:22 - register all right there you go
86:26 - now what we should be in so if i refresh
86:29 - we should be logged in yep there we are
86:31 - logged in
86:31 - so now if i go ahead and type in like a
86:33 - test caption
86:35 - right now we're not actually logging
86:38 - anything out to be honest
86:39 - here we do a post request so what i'm
86:41 - going to do guys is
86:42 - we're actually running the server on the
86:45 - second
86:45 - over here right so what we can do is
86:48 - let's go ahead pull this over here for a
86:49 - sec
86:50 - and i'm just going to pull this to the
86:52 - right hand side pull this to the left
86:53 - hand side
86:54 - i'm going to close this for a second and
86:56 - now whenever i upload a picture so i'm
86:58 - going to upload that same picture of the
86:59 - cat
87:00 - okay yeah i'm going to go open
87:03 - now as soon as i hit upload some db
87:05 - stuff should happen
87:06 - okay so i may error out i may freak out
87:08 - we don't know but let's go ahead and
87:10 - click upload
87:11 - so upload and okay so we uploaded to
87:14 - firebase
87:15 - actually we are not actually console
87:16 - logging anything i don't think
87:18 - um but david that should have pushed
87:20 - into the db right
87:22 - hopefully it should have yeah so yeah
87:25 - actually if you refresh it it should
87:27 - show
87:28 - uh if it's in there uh but we're not
87:31 - pulling
87:32 - from the we're not actually pulling
87:35 - on our front end oh that's right yeah oh
87:37 - that's right
87:38 - okay let's check the database let's go
87:41 - inside and to check the db what we do is
87:43 - um we go to collections
87:48 - yep and inside of there you should be
87:51 - seeing
87:52 - your um collection name
87:57 - right now we should see we've got
88:00 - comments test caption sanger and we've
88:02 - got the firebase url hey that's dope
88:04 - okay that's it that's awesome good right
88:07 - so now what we can do guys is uh also if
88:11 - also
88:12 - damn thank you dude five pound donation
88:14 - another masterpiece from the cp
88:16 - fam let's go dude i love that energy
88:19 - that is insane thanks dude and akashi i
88:22 - dare you to make the whole internet
88:24 - done bring it dude
88:27 - challenge accepted um okay so that's
88:30 - awesome
88:31 - we now have things pushed into db so
88:34 - next
88:34 - challenge is to we're not actually going
88:37 - to go and hook up the comments and stuff
88:38 - today we'll go ahead and do it with the
88:39 - posts instead
88:41 - we'll do the post we'll make it road
88:42 - time with pusher and then we'll get
88:44 - everything working on that front
88:46 - and it'll be some homework for you guys
88:47 - to go ahead and hook up the comments
88:49 - okay so okay so let's go
88:52 - to pusher now okay um
88:56 - and let's actually copy the
88:59 - back end code okay so i might push it
89:02 - right now
89:03 - we've got some yep and just uh scroll
89:05 - down
89:06 - a lot a lot more down yeah because first
89:09 - it goes with the front end
89:10 - but the middle one that's the one uh the
89:13 - bar pusher
89:14 - equals new pusher that's the one that
89:17 - you want to copy
89:19 - okay okay and just go back to the
89:23 - uh code all right so here i'm going to
89:25 - copy this right
89:27 - yep that's correct i got it uh the
89:29 - trigger one that is not necessary
89:33 - but okay well we we will use that later
89:35 - which one
89:36 - okay this this just yeah okay
89:40 - and then i'm gonna go ahead and get rid
89:42 - of this one as well so
89:43 - thank you so much iodelli uh as well
89:45 - very much for that two pound donation
89:47 - thanks dude thanks dude yeah
89:51 - uh let's actually go to app config now
89:54 - yep in in the server.js file sorry
89:58 - um and we will need
90:02 - to paste yeah exactly and just go ahead
90:05 - and paste it
90:06 - okay um the first first line is not
90:09 - going to be needed
90:10 - uh we have already done that over there
90:13 - exactly
90:14 - uh let's actually change the var to a
90:17 - const
90:18 - that's correct and that pretty much uh
90:21 - sets up our pressure connection
90:27 - oh yeah don't ever use war yeah i don't
90:30 - ever use it
90:31 - god dammit
90:35 - okay there we go so now
90:38 - if that if that helped you remember it
90:40 - then smash the thumbs up button
90:42 - okay now you see we've got cons pushing
90:46 - this is our basic our push of
90:47 - credentials right here okay
90:48 - exactly one more thing you want to
90:50 - change is uh in the last row
90:52 - uh it says encrypted but you want to
90:54 - change that to
90:55 - use tls um
90:58 - that's just uh one little thing with
91:00 - capital t's
91:02 - no no no not the true uh the encrypted
91:04 - part
91:06 - so you you want to change the whole uh
91:08 - let's delete the whole line
91:10 - and just type in yeah use tls uh
91:13 - one word and all capital with the tls
91:19 - yep and yeah
91:22 - that should be uh good okay okay
91:27 - so now what's next now what's next
91:31 - is we need to set up our change stream
91:34 - so
91:34 - let's go down where you uh console log
91:36 - when the
91:37 - database is connected okay
91:43 - okay yeah
91:46 - yeah yep and now you want to go ahead
91:50 - and type in uh
91:53 - we need i think i have it here so we
91:55 - need to go ahead and do
91:57 - constant change stream equals mongoose
91:59 - connection
92:00 - the collection that we made was posts so
92:02 - you guys can see that inside of
92:04 - the db over here so this is actually
92:06 - posts you see it posts there we go
92:09 - so we're not lying then we say watch
92:11 - right now watch is basically going to
92:13 - create like a real-time watcher on it
92:14 - and then what we need to say
92:15 - is whenever something changes on that
92:18 - right so if anything happens if some
92:20 - information goes inside
92:22 - we're going to basically go ahead and
92:23 - trigger off like a a callback function
92:26 - and the way we do that is we say change
92:27 - stream dot on
92:29 - and then you say on change and then
92:32 - whenever a change comes in we get that
92:34 - change
92:35 - and we fire off some some code right so
92:38 - at this point you go crazy
92:39 - okay i'm joking
92:41 - [Laughter]
92:42 - and now at this point what you can say
92:44 - is you can you can basically console log
92:45 - at this point if you want to
92:47 - you could like at this point just have
92:49 - some just um
92:50 - say change stream triggered change some
92:53 - stuff and then
92:54 - console.logs change end of change right
92:56 - so
92:57 - at this point i'll make it very simple
92:59 - and just say change
93:02 - was change triggered on pusher
93:07 - and then the change will log out and
93:08 - then you can see end of change right so
93:10 - it's just kind of handy
93:11 - now david i see we've got two types of
93:14 - operation change are we only doing the
93:15 - insert here
93:16 - uh we will be only doing the insert uh
93:19 - because we're not doing the command
93:20 - section right okay so
93:22 - first we will be just using the first
93:24 - one
93:25 - uh and you're actually
93:31 - oh no statement so let's type in if
93:33 - change the operation type
93:35 - okay when a bit robotic all right if
93:38 - change
93:39 - dot operation type if change operation
93:42 - type yep
93:42 - uh if it is if it equals to insert
93:46 - okay uh you either want a console log
93:48 - something where you don't
93:50 - uh but definitely what you want to do is
93:53 - save uh the change the full document
93:56 - into a post details um
94:00 - uh uh variable okay so to put it very
94:04 - simply guys
94:05 - the that change that comes in on that
94:07 - change stream right has a different as
94:09 - a type of type right so if we hover over
94:11 - you can see it's got different types
94:12 - it's got insert replace
94:13 - update to the bunch of them we're going
94:15 - to check if it's insert
94:16 - we're just going to console.log and at
94:18 - this point we're going to basically
94:18 - trigger the upload right as if we're
94:20 - going to do some upload stuff
94:22 - so what i would say is here we need to
94:24 - get
94:25 - the change itself has something inside
94:27 - of it called a full document
94:28 - so we're just going to refer to that as
94:30 - the post details right
94:32 - yeah full document is pretty much what
94:34 - was actually
94:35 - uh inserted into the database right
94:38 - with that done uh let's type in
94:40 - push.trigger
94:42 - and now we need to yeah we need to add a
94:46 - post
94:47 - and we will be defining an event
94:50 - which will be inserted okay
94:54 - um so okay so we can say inside
94:58 - inserted that's going to be our even
95:01 - uh it's still yeah it's instiller
95:04 - yeah that's correct and that's where you
95:07 - want to strip
95:08 - out the data uh that you want to uh
95:12 - like upload to pusher and what's the
95:16 - um real-time part of the things right
95:19 - yeah
95:20 - so this is where you want to just add
95:24 - user postdetails.user and
95:28 - you want to strip out the post
95:30 - details.caption
95:32 - and if you want to make like just like
95:35 - last time
95:36 - with the whatsapp clone you want to
95:38 - strip out the
95:40 - image as well
95:47 - done that's that's right
95:50 - and let's actually add the else branch
95:55 - okay so it doesn't like crash the whole
95:58 - application
95:59 - so else uh just console log error
96:02 - triggering
96:03 - pusher that's pretty much that wouldn't
96:06 - be the else i guess but um
96:09 - wouldn't it be okay i mean okay
96:12 - because it could be a different type of
96:14 - change request that comes in
96:16 - yeah yeah but since we're doing just
96:18 - this part
96:19 - uh so you have to prepare your front and
96:23 - your back end
96:24 - as well um but that kind of that can go
96:27 - as well i think something more like this
96:29 - unknown trigger from pusher
96:30 - or something you know yeah yeah okay
96:34 - and now let's go back to our front end
96:37 - where we are
96:38 - um
96:42 - by sydney he said would destructuring
96:44 - the post details make the code faster
96:46 - um no so it's not about it wouldn't make
96:48 - it faster it would make it more i guess
96:49 - es6
96:50 - you could use definitely structure it
96:52 - would make it maybe more readable
96:53 - um depending on how you want to do it
96:55 - but may it doesn't really affect the
96:57 - speed as much
96:58 - yeah okay
97:01 - um now you want to go back to wherever
97:05 - uh you fetch the data from my
97:08 - firebase okay and just get rid of that
97:13 - um so what where are you talking so i
97:16 - think it's posts.js
97:18 - or maybe even app.js
97:21 - um we're gonna find it first yeah it's
97:24 - pose.js
97:25 - okay so in post.js we have this use
97:27 - effect right now this user effect right
97:29 - here you can see what it's doing
97:31 - is it's saying go ahead
97:34 - and grab this is the comments this is
97:37 - not the one we want this is not the one
97:38 - we want we want
97:41 - this is for every single post we
97:43 - actually render out the posts
97:46 - here this is where we get the posts
97:50 - oh okay okay so now guys you can see
97:52 - we've got the db collection posts order
97:54 - by timestamp on snapshot
97:56 - right so on remember on snapchat is
97:58 - basically what we're
97:59 - essentially changing right um
98:03 - to to become man friendly think of it
98:05 - that way so
98:06 - david what are we adding here so you can
98:09 - just go ahead and
98:10 - get rid of all the firebase stuff and
98:12 - instead
98:13 - we will be adding an axios uh target
98:17 - function okay we can keep it in the use
98:20 - effect
98:21 - um yeah so and so i'm gonna get rid of
98:24 - this
98:26 - yeah yeah uh and actually just
98:30 - uh name somehow the function that's
98:33 - gonna be the easiest uh so let's just
98:35 - name and let's just give it a name so
98:36 - let's type in sync data
98:38 - and that's the function that we wanna
98:41 - or we can yep
98:45 - yeah uh let's go in axios.gap
98:49 - all right yep and
98:52 - this is where the endpoint goes which is
98:54 - i believe it's sync or something like
98:56 - that
98:57 - yep so inside our server.js we had this
99:01 - one over here so this is where we're
99:02 - doing it and this basically gets back
99:03 - all the information
99:06 - yeah yeah yeah and that then um
99:10 - we will receive a response which we
99:13 - uh want to either console.log or not
99:16 - okay um
99:19 - but anyways we definitely want to map
99:22 - through it okay so response.data.map
99:28 - so we want we want to go inside of
99:30 - response
99:31 - and there is the data that's the one
99:34 - that we want to
99:36 - loop through and we will receive an item
99:40 - and we want to create our own
99:43 - uh use state which will contain all the
99:47 - fetched images
99:48 - because there is like lots of things
99:50 - going on
99:51 - what's up you mean the posts
99:54 - oh that's correct yeah so the posts over
99:57 - here so here now what we can do is we
99:59 - can say
99:59 - go through everything and we actually
100:02 - want to do set posts like this right
100:06 - yeah that's correct and then what we're
100:08 - mapping here is we're
100:10 - we're getting the data and what how are
100:12 - we grabbing it
100:13 - so you want to strip out every single uh
100:16 - relatable
100:17 - item so like id you want to grab the
100:20 - image
100:21 - you want to grab the caption and this
100:24 - time we are not doing the comments but
100:26 - normally you would want to grab that as
100:28 - well
100:28 - and like put that into like uh simple
100:31 - json
100:32 - uh objects right yeah i mean the easiest
100:35 - way to to check this guys is you the
100:36 - console log the response on the use
100:38 - effect
100:39 - and then what we do is axios is not
100:41 - defined so we need to actually go ahead
100:42 - and import this
100:43 - so we need to go ahead and go up here
100:45 - and say import
100:47 - axios from our local axios
100:51 - like this save it and then uh what we
100:53 - can do is we go
100:54 - back to our code to here and now if you
100:57 - go ahead and
100:58 - okay f12 you should be able to see it
101:01 - says
101:03 - on app dot js where is it app.js
101:06 - line 50 so no was it 950
101:10 - yeah no line 72 so here we should see
101:13 - now
101:15 - 1972 we get the array back right so over
101:17 - here
101:18 - so this is this array that right here is
101:21 - pretty much
101:22 - i'm going to make that a little bit
101:22 - bigger and there we go so you guys can
101:25 - see a little bit bigger so here we've
101:27 - got the data
101:28 - right inside now you can see each item
101:30 - has all this information right
101:32 - so what we want to do at this point is
101:33 - pretty much grab that data
101:35 - and pop it in our variable so what we
101:38 - can do is we can say set posts
101:40 - and all we need is this we don't
101:41 - actually need to do a map we can go
101:43 - ahead and say response.data
101:45 - and then we can go that way too you can
101:46 - say console.log
101:49 - down here and you can just say um posts
101:53 - are posts
101:56 - right and then here what you can do is
101:58 - this is a asynchronous
102:00 - uh core right here so the way you should
102:02 - do these is you should actually make
102:04 - this a function
102:06 - uh which is async right
102:09 - um anything which is async you should
102:13 - always do like this you should actually
102:14 - have
102:15 - fetch posts like this
102:19 - and then here when we have this you need
102:21 - to await
102:22 - and this will actually abide by the
102:24 - rules of react and
102:25 - and it will fetch it in the correct way
102:27 - otherwise it doesn't abide by everything
102:29 - correctly
102:31 - and it does some weird stuff with
102:32 - rendering if you don't do that
102:34 - okay so now we go ahead and it says kind
102:37 - of reproperty
102:38 - username of undefined
102:41 - so um
102:45 - this is happening
102:49 - let's go ahead and just double check
102:51 - something so sync them response
102:53 - why are we getting the username now uh i
102:56 - think it's above
102:57 - when you're authenticating the user
103:10 - this is strange why are we getting this
103:12 - now of all times um
103:14 - let me go ahead and just hit the log out
103:20 - okay so now guys you can see we've got
103:22 - the posts so the data did come back
103:24 - everything worked in that sense but
103:25 - could not already properly have
103:27 - undefined
103:28 - radio map app
103:32 - user name okay so this is why because
103:34 - right now guys
103:35 - it's looping through we're passing these
103:38 - posts
103:38 - down right so there's a map so here
103:41 - post.map
103:42 - now this is not username anymore
103:44 - remember in the database we set it to
103:46 - user
103:47 - so post is now post.user so we need to
103:50 - make sure we change that otherwise it's
103:51 - going to freak out
103:53 - it says that it can't use a username so
103:56 - it's going to happen again because
103:59 - inside of our posts
104:01 - let's go ahead and check out so down
104:02 - here we've got data we've got data dot
104:05 - user
104:06 - so the data user is correct but in here
104:09 - we've got the user user post.user
104:13 - user okay then we've got posts
104:16 - dot anywhere else
104:27 - where else we're using posts that should
104:34 - be it
104:36 - so in here now you can see posts are and
104:39 - you've got each of the posts
104:41 - you should have post.user right so it's
104:44 - still freaking out for some reason
104:46 - so cannot read property user of
104:48 - undefined now
104:49 - so post dot user so let's see why
104:52 - it says that so we're going to array an
104:54 - object
104:55 - saying loop through it now what i'd like
104:58 - to do here is what you can do is just
105:00 - kind of stress test it and say
105:03 - rather than this you can actually go
105:04 - ahead and say console.log now i'll just
105:06 - say posts
105:08 - dot for each post
105:12 - console.log post
105:18 - and this will actually go ahead and
105:19 - debug the debug step okay
105:22 - so now when we refresh it says posts are
105:28 - but you see like it says post it shows
105:30 - us then we go down it says
105:31 - user is you can already property user
105:34 - undefined app.js
105:37 - post.userpost.caption strange so we do
105:40 - have user in there
105:42 - but we need to go ahead and check so
105:46 - kind of replace the user postpost okay
105:49 - here's why we're actually destructuring
105:52 - so we're not actually getting it this is
105:53 - really bad okay so here we should say
105:56 - and the idea in the post itself okay so
106:01 - oh okay i see what's going on so now
106:03 - here what we can do is we can actually
106:04 - make this post
106:06 - and then what we can do is here it
106:07 - wouldn't be post id anymore the key is
106:09 - actually different now
106:11 - the key is this one so if we go back
106:13 - into data
106:14 - you guys can see it's underscore id so
106:17 - post
106:21 - dot underscore id this is key as
106:25 - post top underscore id
106:29 - and then the username is post.user
106:33 - and then yes now we have everything and
106:35 - then image is no longer this it'll be
106:36 - post or image
106:38 - there you go by the time thank you so
106:41 - much for
106:41 - smb plays for the lovely donation and
106:45 - go crush your job yeah awesome stuff
106:49 - dude a massive
106:50 - we love it when that stuff when everyone
106:53 - gets a job and stuff like that that's
106:54 - awesome
106:55 - um somebody said you need to destruct
106:57 - user as well uh i don't think so
106:59 - i don't think so i said idm post before
107:01 - there we go
107:02 - boom we have a cat hey look at that we
107:04 - have the [ __ ] cat yes
107:05 - let's go
107:08 - [Applause]
107:14 - right so there we go happy days
107:20 - now guys what we can see is um
107:23 - and also for that debugging effort i
107:25 - think you should smash the damn thumbs
107:27 - up button because that was an awesome
107:28 - demonstration of actual some debugging
107:30 - and play
107:31 - sort of figured out nice
107:35 - let's go frank frank goes it's a great
107:37 - instagram build let's go
107:39 - awesome stuff dude thank you for being
107:41 - here
107:42 - frank always comes in swinging
107:45 - right now we've got that done david
107:48 - what's next
107:50 - okay um we need to hook up
107:53 - the pusher on the front end as well okay
107:56 - so let's actually install a package
107:59 - which
108:00 - uh which is called pusher.js okay so i'm
108:04 - gonna go ahead and do
108:05 - yeah just simple mpm install so i'm
108:08 - gonna
108:09 - go ahead and pop a new second terminal
108:11 - npm install
108:13 - yup that's correct js
108:17 - exactly and while it's running
108:20 - uh you can go back to pusha.com
108:24 - to grab our initial data
108:28 - or actually code
108:32 - and yeah uh you want to have
108:35 - the uh yeah that's correct done
108:40 - okay and just copy paste replace the
108:43 - voice to const um
108:46 - you want to actually strip it into a use
108:48 - effect uh somewhere in the beginning
108:50 - okay so firstly we need to get we've
108:53 - audience
108:53 - imported pusher and then basically what
108:56 - we're going to do is we're going to go
108:56 - ahead
108:57 - so this actually went ahead and finished
108:59 - installing so i can go ahead and close
109:00 - the terminal
109:01 - down here let's go ahead and create a
109:03 - new use effect
109:05 - so right now we can clean this up after
109:08 - let's get rid of some code but
109:10 - let's keep it simple okay use effect
109:14 - and then do a callback function i'm
109:16 - going to have some code inside there and
109:18 - then the dependencies are going to be
109:19 - empty at the moment
109:20 - and then we're going to go inside here
109:21 - we're going to say variable pushups we
109:23 - don't like var
109:24 - we have change that to const all right
109:28 - and then this is our id for pusher the
109:30 - cluster is eu
109:31 - and here correct we have cons channel
109:34 - equals pusher.subscriber it's not going
109:35 - to be in my channel is it david
109:37 - it's going to be posts exactly
109:40 - and the my event under that
109:43 - uh that's going to be uh inserted
109:47 - inserted now just to show them david
109:50 - because i think this
109:50 - is really handy if we go to server.js
109:52 - and we show them you remember here guys
109:54 - we actually went ahead and this
109:56 - is the collection posts or like the sort
109:57 - of pusher event that we're listening to
109:59 - post
110:00 - and the inserted action right so it
110:02 - triggers at the back end
110:04 - and then on pusher it's listening and
110:06 - it's subscribing to that collection it's
110:08 - called
110:08 - something called a pub sub model that's
110:11 - basically what it's using
110:12 - uh when we do this so it's publishing on
110:14 - the back end every time something
110:16 - changes and then on the front end we're
110:17 - subscribing
110:18 - and you have this pub sub method that's
110:20 - right
110:22 - such a good name pub sub google also
110:26 - offer this as well
110:27 - um and if you haven't already checked
110:28 - out firebase then
110:31 - what the hell are you doing
110:36 - can you live without firebase exactly
110:38 - five
110:39 - goddamn awesome i swear to god google if
110:41 - you watch this sponsor us
110:43 - thank you let's carry on i think
110:46 - i think devin is getting a job at google
110:49 - oh yeah devin get us in man
110:50 - get firebase to sponsor like i don't
110:53 - know make
110:54 - make them like super firebase
110:57 - instances or something
110:58 - [Laughter]
111:00 - do some fun [ __ ] yeah right okay okay
111:04 - uh let's actually delete uh line 77
111:07 - we do not need any kind of alert or
111:10 - something oh yeah yep
111:13 - and you just want to go ahead and sync
111:16 - uh the data once again
111:17 - like uh do
111:21 - uh i think i think you need to move
111:24 - whatever yeah do that same fetch
111:28 - oh i see so what we should do actually
111:29 - at this point is move this function
111:32 - outside
111:34 - we use it here so we fetch the post in
111:36 - the initial load of the page
111:38 - correct and then in here when we get the
111:40 - data back every time
111:41 - we're going to go ahead and refetch just
111:44 - refresh
111:44 - um david that's not actually true i
111:47 - don't think
111:49 - so i mean okay we'll do this first but
111:51 - i'll show you i mean i
111:52 - have a feeling we could also do
111:53 - something else
111:56 - so here what we're saying is every time
111:58 - we get an inserted event it needs to
111:59 - to go ahead and re-fetch the entire
112:01 - database right
112:04 - but what you can yep what you could do
112:06 - here is actually do console.log data
112:09 - data received and then go ahead and do
112:11 - data
112:13 - and you can you can actually push that
112:14 - into the current uh
112:16 - state and that will stop you from having
112:19 - to do that sort of
112:20 - re-fetching of the entire database ever
112:22 - over and over again
112:26 - um we can do that it keeps the
112:29 - performance um
112:30 - it's going to keep your performance uh a
112:32 - lot better which is going to be handy
112:34 - but
112:34 - for now anyway let's test it out dude
112:36 - let's go ahead and see it says pusher is
112:38 - not defined so everything's working
112:39 - joking um import
112:44 - so if you're like me and sometimes you
112:46 - get lazy go to the end of pusher
112:48 - press command push oh damn it didn't
112:50 - work
112:53 - i need like some sad music you know like
112:55 - when that stuff doesn't work like and i
112:58 - have to type my own
112:59 - import it's like sometimes
113:03 - you just have to so sad i have to just
113:06 - do the hard stuff you know
113:12 - [Music]
113:15 - smash the thumbs up button guys thank
113:17 - you smash it
113:21 - let's go nice okay
113:26 - we basically went ahead and added that
113:29 - code in so now it should be saving
113:31 - and oh man we've gotta look at those
113:34 - three things
113:35 - if it's working so hey
113:46 - [Laughter]
113:48 - i think i didn't add that did you add
113:49 - that david no
113:52 - it definitely was you because last time
113:54 - you were the one who
113:56 - changed some stuff yeah so let me go
113:59 - ahead and save this image thank you have
114:00 - you ever done that
114:03 - like you don't have that image already
114:05 - i'm going to re-upload it now
114:06 - so i'm going to say this is dope right
114:08 - this is
114:09 - dope all right i'm going to go ahead
114:12 - choose file
114:13 - and i'm going to find that picture that
114:15 - somebody actually uploaded that's
114:16 - awesome
114:18 - yeah and i click upload now everything
114:19 - might just blow up on me but let's just
114:21 - give it a try
114:22 - upload and then boom so it went ahead
114:26 - posted it and it actually
114:29 - okay so there we go so it actually did
114:31 - work i actually did work but
114:33 - the reason why i didn't come in order
114:35 - right it's because we don't have time
114:36 - stamps
114:37 - right so it's the only difference here
114:39 - that we don't have timestamps
114:40 - so timestamps is the reason why you're
114:42 - not seeing in descending order
114:44 - so what you could do is you could simply
114:46 - add timestamps when you do this stuff
114:48 - but if i go ahead and just type this and
114:50 - say this
114:51 - is not broken right so it actually does
114:54 - work and let's just do a huge kitten
114:56 - again
114:56 - like or something but you know what let
114:58 - me see if i got another picture let me
114:59 - go ahead and just move this off
115:00 - elon musk uh actually yes i do have elon
115:04 - i mean if you don't have a picture of
115:06 - elon what are you doing
115:08 - what are you doing yeah what the hell is
115:10 - going on man all right so
115:12 - i've got elon gonna click upload
115:15 - and we can see elon is now here
115:20 - right and you see guys i'm not
115:22 - refreshing okay so this stuff is working
115:24 - like
115:24 - this is insane
115:28 - to the brain oh
115:32 - god damn smash the thumbs up button i
115:33 - thought that was pretty sick
115:34 - [Laughter]
115:37 - all right now we're going to add the
115:38 - second cat who's ready for this guys
115:41 - let's go ahead and click open and upload
115:44 - and then let's see it should say we
115:46 - should see some huge [ __ ] cat
115:48 - right
115:48 - no hey there we go
115:52 - hey you see like this is real time right
115:55 - it's actually working
115:56 - it's refreshing when the data comes in
115:59 - um and that's awesome
116:00 - like i think that's pretty cool david um
116:02 - i think that's pretty much the
116:04 - that's using pusher right yeah that's
116:07 - pretty much the build
116:08 - uh actually homework for everybody to
116:11 - find a way how to add the comment with
116:14 - the knowledge
116:15 - we just gave you yeah you can go ahead
116:18 - and like
116:19 - whenever something gets
116:23 - oh [ __ ] okay maybe wait oh my god dude
116:27 - you know what it's doing right now
116:29 - wow it's combining
116:34 - it's combined this is insane this is
116:36 - this was totally planned
116:38 - right i mean honestly i need to stop the
116:40 - music for a sec that's
116:42 - insane guys we're actually combining
116:44 - firebase
116:46 - with um so right now what's actually
116:49 - happened here
116:50 - and oh man i have to show this wait this
116:52 - is um i don't know if i've got the
116:54 - firebase up and running i mean i might
116:55 - do
116:56 - let me go ahead and check it um
116:59 - that's so sick man so it froze a little
117:03 - yeah so basically what's happening guys
117:05 - is we have these images
117:06 - right now and then are being uploaded
117:08 - right so this is being uploaded to
117:10 - mongodb
117:11 - and if i go ahead and type in like this
117:12 - is awesome
117:14 - and then we just post right so added a
117:16 - comment right now add the comment now
117:18 - but that comment is obviously going to
117:19 - stay like it's not going to just
117:20 - disappear
117:21 - um and i just want to check if i go into
117:25 - comments
117:26 - and let me see if abc
117:30 - okay let's just try this that one's like
117:32 - testing i'll show you guys what i'm
117:33 - looking at it's mining
117:34 - oh my god damn dude it actually is okay
117:38 - so remember guys we actually went ahead
117:40 - and created this
117:41 - before on firebase right so this is
117:44 - insane and this is pretty cool and i
117:46 - think everyone should destroy the damn
117:48 - thumbs up button for what we're
117:49 - about to show you right now okay so the
117:51 - comments
117:52 - are actually working so this is being
117:54 - every time we upload an
117:55 - image it's getting uploaded to um
117:59 - to firebase right so it's not no sorry
118:01 - it's getting uploaded to mongodb
118:03 - right then is getting triggered off it's
118:06 - firing off like
118:08 - a real-time sort of pub sub listener
118:10 - which means that it refreshes the page
118:12 - right so that's awesome and then react
118:13 - re-renders it re-enters the page
118:17 - now what we unintentionally did because
118:19 - the code is so brilliant
118:22 - is right now say we got this like um
118:24 - let's go ahead and check where we've got
118:25 - a comment here so we've got abc
118:27 - testing right now if i go ahead and type
118:29 - in because we've got the ids from
118:31 - mongodb
118:32 - what it's doing is we didn't actually
118:33 - remove the code
118:35 - from here so if i go ahead and do this
118:38 - is insane and it works
118:41 - guys watch this on the right yeah watch
118:44 - this on the right
118:44 - it's actually so this is from mongodb
118:47 - being rendered on react
118:48 - using pusher to stay real time and then
118:50 - on the right hand side we've got
118:52 - firebase which is also being fed into
118:53 - the comment section to power it
118:55 - post boom
119:02 - is sick man that is so thick oh man
119:05 - okay guys that was totally intentional
119:07 - yeah
119:09 - that was how did you prepare for this
119:11 - that was awesome man and i think that
119:13 - that actually will go ahead and show you
119:15 - guys that you can use both you can use
119:16 - mongodb and firebase and that's a that's
119:18 - a
119:19 - real-time example there guys of showing
119:21 - you that it works right
119:23 - [Music]
119:24 - sorry i just saw a comment akashi says
119:26 - clever programmer be like
119:28 - hippity-hoppity big companies code is
119:30 - now my property
119:32 - exactly sydney says perfect ship it i
119:35 - couldn't agree more dude i think that's
119:36 - production ready
119:37 - i mean like look at that cat's face like
119:39 - i think that cat is like that cat's like
119:41 - yeah this [ __ ]
119:42 - this is insane dude like sydney's like
119:45 - yo
119:45 - just this is the [ __ ] cat man
119:47 - [Laughter]
119:49 - dude i think that was awesome guys let
119:51 - us know in the chat right now if you
119:53 - enjoyed that session
119:55 - um we actually overcame a lot of
119:57 - obstacles to get that to you guys so
119:58 - that was insane
119:59 - awesome work from david go ahead and
120:02 - give it up for david
120:03 - and if you guys aren't following david
120:04 - oops wrong way make sure you go
120:06 - make sure you go and follow him check
120:07 - him out on socials um
120:10 - david anything to say about what we did
120:12 - today
120:13 - um huge give up for sonny definitely
120:16 - because he was crushing it as well uh
120:19 - he's being super busy
120:21 - on the team side uh so let's give it up
120:24 - for him too
120:25 - and i think you already have a lot of
120:28 - followers but definitely somebody
120:30 - [Laughter]
120:33 - and otherwise i guys hope you
120:36 - enjoy the build and let me know if you
120:39 - have any questions
120:41 - literally shoot some questions last
120:42 - second guys uh also if you haven't
120:44 - already
120:45 - we appreciate if you just smash the
120:46 - thumbs up button it always helps the
120:48 - video get out
120:48 - remember if you need to uh actually go
120:51 - ahead and start this or use join later
120:53 - remember the code starting point is in
120:55 - the description so you can actually go
120:56 - ahead download that
120:58 - and then take a running chance at
121:00 - copying along with us
121:01 - and remember also if you do that then
121:04 - make sure you actually go ahead and swap
121:06 - out your firebase
121:08 - for the um our firebase.js for your
121:11 - firebase.js so that way
121:12 - you can actually go ahead and see on the
121:15 - backend and then you could also deploy
121:17 - it to
121:17 - um to to your your endpoint right to
121:20 - hero cool
121:23 - now we did we've shown in a few other
121:25 - builds about how you can deploy to
121:26 - heroku so i think we're not going to
121:27 - show in this build
121:29 - um but i think that was awesome i think
121:31 - like everyone enjoyed it we have
121:33 - we have a lot of people we said hop
121:34 - reaching says totally enjoyed that mohit
121:36 - says amazing session
121:38 - adash it was an amazing build um
121:41 - uh harper is saying that's a good
121:43 - question so you said can we do amazon
121:44 - man stack with [ __ ]
121:45 - node and js damn dude that that amazon
121:48 - build is actually really jacked we can
121:49 - definitely do that
121:50 - yeah we do that no hell yeah why not we
121:53 - can go ahead and do that uh
121:54 - ayodele says sunny the coding model
121:56 - thank you thank you so much
121:58 - david's got the hair for it man
122:00 - [Laughter]
122:03 - dopamine beatbox says i will send the
122:05 - instagram dm to you guys okay
122:06 - go for it definitely you think says good
122:08 - job boys thank you
122:10 - thank you fluchako kevin attivone says
122:12 - amazing session
122:13 - future code aka elizabeth says love that
122:16 - you're all in different countries
122:17 - perfect example how we can collaborate
122:19 - or work with people all over the world
122:20 - in real time yes
122:21 - i was actually saying this is correct
122:23 - yeah i was saying this to nars yesterday
122:25 - as well like
122:26 - we were on the phone yesterday and i was
122:27 - driving back from my girlfriend's house
122:29 - and
122:29 - and now has called me and we're just
122:31 - talking for an hour
122:32 - and it's insane like we we we're doing
122:35 - stuff
122:35 - across the world and it's it's
122:38 - with people like like i've never met
122:40 - david in person i've never met kazzy
122:42 - even in person or any other team
122:44 - and yet we are transforming lives right
122:47 - and like you guys are a part of that
122:49 - this whole community is what makes it
122:51 - possible um
122:52 - so like we just want to say a massive
122:54 - thank you for you guys
122:56 - watching and being here because without
122:57 - you guys it wouldn't be
122:59 - possible okay and also frank hey
123:02 - love that barry smith instagram clone
123:05 - yes
123:06 - that's awesome dude um we got viewers in
123:09 - indonesia i love this dude like this is
123:10 - a really nice sort of
123:12 - ending to the video like there's a lot
123:13 - of people dropping some love now
123:15 - guys i also want to shout and say if
123:18 - you're if you haven't
123:19 - seen profit with javascript or you don't
123:21 - know what it is
123:22 - it's a course that we offer and
123:25 - basically we pretty much have
123:27 - uh 15 coaching uh 15 modules inside
123:29 - there which will take you from an
123:30 - absolute beginner all the way to
123:32 - an experienced developer damn sydney
123:34 - smith just dropped dude
123:36 - and you watched the entire stream i
123:38 - appreciate you did
123:39 - 10 euro super chat thanks again agent
123:42 - have a great day fam thank you so much
123:43 - for tuning in bro honestly i really
123:46 - really appreciate that
123:47 - um yeah and guys like i was saying we
123:50 - pretty much have
123:51 - a i have an awesome awesome community
123:54 - inside of our uh our
123:57 - course called profit with javascript and
124:00 - basically
124:00 - yeah we only have the doors let's
124:02 - actually show them this lack yeah we
124:04 - show them we have a
124:05 - buzzing community exactly andrilla
124:09 - uh i can't pronounce the last thing but
124:10 - it says awesome builds i learned a lot
124:11 - from these live tutorials best teachers
124:12 - indeed thank you so much
124:14 - um yeah so two things i want to show you
124:16 - guys so firstly
124:17 - here's the actual course um let me go
124:20 - ahead and
124:20 - make it full screen so link is in the
124:22 - description for profit with javascript
124:24 - it's only going to be available for one
124:26 - more week and then we close the doors
124:28 - and then we're not sure when we're
124:29 - actually going to open it up again so
124:30 - even if you haven't seen this before go
124:32 - ahead check out the page
124:33 - uh give this video a watch we put a lot
124:35 - of time and effort into making this
124:36 - awesome video
124:38 - so we've got 15 training modules
124:40 - javascript success coaches so
124:41 - you're going to get a bunch of video
124:44 - feedback
124:44 - on every single one of your assignments
124:46 - so it doesn't matter if you get stuck
124:49 - it doesn't matter if you get caught up
124:51 - on a piece of work or you don't
124:52 - understand a different principle
124:53 - then all you need to go ahead and do is
124:55 - go ahead and hit one of your success
124:56 - coaches
124:57 - and we also have a bunch of weekly
125:00 - coaching calls
125:00 - so we actually just dropped the um we
125:04 - actually went ahead and dropped the
125:05 - timetable for this
125:07 - week for the uh oh yeah and it wasn't
125:09 - for the coaching course actually it was
125:10 - for the um
125:11 - and it was for the coaching no that was
125:13 - a fun one for the coaching call yeah so
125:14 - actually
125:15 - it was up right here i think yeah so
125:18 - this is the schedule for
125:19 - this week's coaching course so we
125:21 - actually keep it very proactive guys and
125:23 - here you can see pretty much
125:24 - um this is what we have for this week so
125:26 - we've got like tuesday with me
125:28 - so tomorrow and i'm actually going to be
125:30 - bringing everyone on youtube so that you
125:31 - guys can actually get a taster session
125:33 - okay which would be awesome wednesday we
125:36 - have back to basics with david and
125:37 - amanda
125:37 - thursday we have nars with javascript
125:39 - saturday we have the basics with the
125:41 - success coaches so
125:42 - you see this is every week right now a
125:46 - lot of people
125:46 - are complaining about prices and things
125:47 - like that guys we bring that to you
125:49 - with that single price right which is
125:51 - insane of value
125:53 - okay like it's really really insane
125:54 - value that we're able to bring that to
125:56 - you guys
125:56 - um i want to go ahead and show you guys
125:58 - the community that we offer inside of
126:00 - the course
126:01 - so i'm going to go ahead and actually go
126:02 - ahead and check and go to
126:05 - profit with javascript there we go and
126:09 - let me go ahead and close this and now
126:11 - guys you can see that we actually have
126:13 - just uh around 2 000 members inside this
126:17 - community
126:18 - so at the top over here you can see it's
126:20 - 2 000
126:21 - members okay which is absolutely
126:24 - mind-blowing and the community is
126:27 - absolutely on fire
126:28 - like you can see there's just it's just
126:30 - always buzzing inside of here guys
126:32 - like we have videos being dropped 24 7.
126:35 - there's always someone interested or
126:37 - somebody
126:37 - asking for help or and the guys this is
126:40 - not like stack overflow right like this
126:42 - is just living proof like it's a living
126:44 - breathing product the thing is
126:45 - constantly evolving
126:47 - like if you ever get stuck you can be
126:49 - sure that somebody is going to answer
126:51 - your question or get back to you
126:53 - and also i just saw a little bit
126:57 - up there uh somebody dropped the link
126:59 - which had uh we are hiring
127:01 - uh in there oh yeah so like literally
127:05 - like
127:05 - people come here and post their jobs
127:08 - yeah and and i've seen several business
127:10 - owners
127:12 - who come here and like guys who is ready
127:14 - for
127:15 - uh for starting up a company and stuff
127:17 - like that
127:18 - so yeah exactly guys
127:21 - actually there's actually been people
127:23 - who who approach us and say like hey i'm
127:25 - looking for developers and we just
127:26 - pretty much we we
127:27 - work with people and we pretty much can
127:29 - put out their their ads and
127:31 - we've had students land jobs inside of
127:33 - pwj pretty much
127:34 - so many students have landed jobs it's
127:36 - insane we've got jen who landed
127:39 - literally lost her job due to covet
127:41 - doubled her salary
127:42 - from i think she went from like 35k to
127:44 - like uh
127:46 - 17. no no no she she almost had 50k
127:49 - and she went up to 100. yeah i think it
127:52 - was like 95k
127:54 - she got afterwards which is 99 insane
127:56 - but with with the all the all the equity
127:58 - and all those kind of bonus and stuff
128:00 - like that
128:01 - it went beyond 100k yeah which is just
128:04 - mind-blowing guys like
128:05 - really really mind-blowing stuff and
128:06 - it's all like proof in the pudding right
128:08 - like it's not made up
128:09 - like this is the community you're gonna
128:11 - have um tomorrow
128:13 - we have the react coaching call so i'm
128:15 - gonna be leading that tomorrow
128:17 - and this is like again you have
128:20 - different chats you have a chat
128:21 - completely dedicated to react
128:23 - you have profit with javascript um there
128:25 - is another course we have for profit
128:27 - python that is another course that you
128:28 - guys can get part of
128:29 - but um beyond that guys like and look
128:32 - you can see frank
128:33 - is actually coming from the build today
128:36 - it says awesome instagram man build
128:38 - today so you can go and hit that fire
128:40 - over there um thank you so much frank
128:42 - and yeah you guys can go ahead and check
128:44 - it out like
128:45 - um also please don't spam the chat i can
128:47 - see some people just
128:48 - typing in like one word at a time but
128:50 - yeah guys if you want to go ahead and
128:52 - join
128:52 - then the link is in the description here
128:55 - is the
128:55 - final sort of shout out to it it's
128:57 - pretty much we've got the weekly
128:58 - coaching course
128:59 - exclusive slack community we just showed
129:01 - you and guys what we do is we teach you
129:03 - all of that right
129:04 - and then we teach you how to make money
129:05 - from it because a lot of you guys want
129:06 - to learn coding to actually go ahead and
129:08 - make money right we don't want to sort
129:09 - of make it just to play around and play
129:11 - games
129:11 - we actually want to make some money from
129:12 - it and change our lives right everyone
129:14 - wants to go ahead and change their lives
129:16 - now i see a lot of people saying maybe
129:18 - some people don't sign up because they
129:19 - don't speak english well
129:20 - david honestly i think even you can
129:23 - vouch for me here that like
129:24 - how many international students do we
129:26 - have
129:29 - i think a lot
129:33 - philippines uh sri lanka um
129:37 - we got from romania we got from all over
129:40 - europe
129:41 - uh we got from south america dude
129:44 - we're we're an international yeah
129:48 - class exactly like there is no language
129:51 - limitations
129:52 - on on this post guys like seriously no
129:54 - language limitations um
129:56 - here's some of the apps that we will go
129:57 - ahead and build inside the course so a
129:59 - lot of the apps that you've seen some of
130:01 - them
130:01 - we're going to more depth inside the
130:03 - course we teach you all these
130:05 - technologies all this awesome stuff
130:06 - we're going to go ahead and dive
130:08 - in inside proper javascript and then
130:10 - you've got the awesome coaches inside so
130:11 - you've got all the success coaches
130:12 - you've got kazee you've got
130:14 - nars you've got myself and and you've
130:17 - got the amazing david who
130:19 - you can see today and then guys like
130:21 - here are some of the the
130:23 - here is where the proof comes in the
130:24 - point so frank actually was on today's
130:26 - session
130:26 - he landed a six-figure job from sonos
130:28 - which is amazing which is why he's
130:30 - donating a hundred dollars
130:31 - like and it's just proof like guys like
130:33 - honestly like it's insane stuff
130:34 - this is jen who we mentioned earlier she
130:37 - made twice which
130:38 - what she said about before so 90k year
130:40 - job so insane stuff
130:42 - and um nazari actually got a contract
130:44 - for 110 000
130:46 - exactly yeah guys it's just it's just
130:48 - mind-blowing honestly and if you don't
130:49 - believe us go ahead and go and check out
130:50 - the the page for yourself
130:52 - and um it's more than just a course it's
130:55 - honestly a family
130:56 - and we do offer a payment plan so you
130:59 - guys can go scroll down here and you can
131:00 - see like there is a payment plan option
131:01 - so you can split the payments up
131:03 - and all you need to do is go ahead and
131:04 - join but the doors close
131:07 - in just a few days the 26th of september
131:11 - those doors are closing guys
131:12 - now what i would recommend my personal
131:14 - advice make just come out
131:16 - try it out you've got 30 days to go
131:17 - ahead give it a shot
131:19 - and on the 29th day if you still are not
131:22 - happy
131:23 - you can get your money back but what i
131:24 - will say guys and this is a warning to
131:26 - everyone
131:27 - if you don't grab it in the by the 26th
131:30 - of september
131:31 - and it closes the doors closed you don't
131:33 - get to even try
131:35 - profit with javascript so if you've got
131:39 - two
131:39 - options right you've got a chance to try
131:42 - something out which
131:43 - may i mean like i'm telling you it will
131:45 - change your life but like in
131:47 - in if you're skeptical if you put in
131:48 - your hard work yeah if you put in the
131:50 - hard work and sort of combine it with
131:51 - the course
131:52 - it's going to change your entire life
131:54 - right now
131:55 - you could you could take that leap right
131:58 - and you can try it for
131:59 - for 30 days but the course closes in six
132:02 - days so i think five days so by the 26th
132:03 - of september the entry closes right
132:06 - now you can either risk that and you can
132:08 - go for it and then say
132:10 - in 29 days you can pretty much go ahead
132:12 - and see
132:14 - you can pretty much go ahead and see and
132:15 - if you're not happy guys get your money
132:17 - back it's completely there's no risk
132:18 - like i said
132:19 - it's a 30-day money-back guarantee but
132:21 - if you don't
132:22 - and let's say you okay you just think oh
132:24 - yeah i'll wait until next time
132:26 - guys i'm telling you now the cost is
132:27 - going to keep going up in price like
132:29 - like i said before is something which we
132:31 - massively undervalue in fact
132:33 - and um yeah like i'm telling you now
132:36 - like if you
132:37 - on the fence now then you're just if you
132:39 - want to really make your dreams down
132:41 - come true
132:42 - invest in yourself and make it happen
132:45 - right
132:45 - like if you look up to people like
132:47 - myself like david like kazi like nars
132:50 - everyone on the team like everyone got
132:52 - to where they're at because of
132:53 - really really hard work and just being
132:55 - genuine
132:56 - right which is why we all found each
132:58 - other and we made a genuine product
133:01 - right we made a genuine course that can
133:03 - actually change people's lives
133:04 - and that's why we've got the traction
133:06 - and love and that's why we're the one
133:08 - we're literally the fastest growing
133:09 - youtube channel coding youtube channel
133:12 - on youtube right now right that's why
133:14 - we're flying past everyone else that's
133:15 - why the family on cp
133:17 - uh the cp farm is insane and
133:20 - we will be getting so much at some point
133:22 - like we have to do that
133:23 - cp fam is such a sick like brand you
133:26 - know
133:26 - like um yeah yeah yeah but guys beyond
133:29 - that i think let's wrap up here david
133:31 - that was an awesome session dude and
133:34 - let's go ahead and call it a day there
133:36 - uh anything else you want to say david
133:39 - you saw pretty much everything
133:41 - so oh guys
133:44 - it's like button and if you want to keep
133:47 - receiving this awesomeness see you
133:48 - inside the course
133:50 - drop me a dm and i'm happy to help you
133:52 - exactly guys
133:53 - make sure you go ahead and check out
133:55 - profit javascript link in the
133:56 - description
133:58 - and yeah we will see you inside the
134:00 - course
134:01 - make the right decision exactly right
134:03 - guys we hope you enjoyed today
134:04 - smash the thumbs up button if you did
134:06 - and as always guys
134:08 - i am sunny this is david
134:11 - and we will see you in
134:14 - the next in the next video video
134:17 - peace out guys see you in the next one
134:20 - tomorrow
134:21 - by the way we've got another video
134:23 - dropping tomorrow
134:25 - so make sure you go ahead and check it
134:26 - out and yeah
134:38 - peace
134:40 - [Music]
134:43 - you