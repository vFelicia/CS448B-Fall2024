00:01 - now quite often when you want to raise
00:04 - an event we also want to send some data
00:06 - about that event for example in our
00:10 - lager module when we log a message
00:12 - perhaps our remote login service will
00:15 - generate an ID for that message perhaps
00:18 - we want to return that ID to the client
00:21 - or it may give us a URL to access that
00:24 - log message directly so here when
00:27 - raising an event we can add additional
00:29 - arguments which we refer to as event
00:32 - arguments so we can add an ID like one
00:36 - and we can add a URL but as you can see
00:41 - these magic values here are a little bit
00:43 - confusing if you want to send multiple
00:45 - values about an event it's a better
00:48 - practice to encapsulate those values
00:51 - inside an object so here we have an
00:55 - object we give it a couple of properties
00:57 - like ID we set it to ID of this message
01:00 - that is logged and another property URL
01:04 - like this
01:05 - okay so we're referring to this object
01:08 - as event argument now when registering a
01:13 - listener here this callback function is
01:16 - actual listener can also receive this
01:20 - event argument so here we add a
01:22 - parameter called org you can call it
01:26 - anything the name doesn't matter but by
01:28 - convention we often use arc or some
01:31 - people use e to refer to the event or
01:34 - event art whatever you prefer is
01:37 - perfectly fine so here we have art now
01:40 - let's log it on the console very simple
01:45 - let's run this application so note okay
01:50 - look listen are called and here's our
01:53 - event arc and with this technique we can
01:56 - pass data about the event that just
01:58 - happened
02:00 - now one last thing to make this code a
02:02 - little bit simpler in es6 or equal
02:06 - script six we have this feature called
02:07 - arrow function with an arrow function we
02:12 - can get rid of this function keyword so
02:15 - here we have the arguments and after
02:18 - that we have the body of that function
02:19 - now to separate the two we use an arrow
02:24 - and that's why we call this arrow
02:25 - function you can see this syntax is a
02:27 - little bit simpler and a lot of people
02:29 - prefer to use arrow functions in es6 now
02:33 - here's a simple exercise for you let's
02:35 - imagine in our lager module just before
02:38 - calling our remote service to log the
02:41 - message we're going to raise an event
02:44 - called logging and while raising this
02:48 - event we also want to send some data and
02:52 - it's the message that we're going to
02:54 - lock so what I want you to do is to use
02:57 - what you have learned in this lecture
02:59 - and raise and handle is logging event
03:02 - it's a very simple exercise I just want
03:04 - you to get used to this syntax
03:08 - hi guys its mosh here thank you for
03:11 - watching my node tutorial I just wanted
03:13 - to let you know that this video you've
03:15 - been watching is part of my complete
03:17 - note course where you will learn
03:19 - everything about node from the basic to
03:21 - the advanced topics if you're serious
03:23 - about learning node I highly recommend
03:25 - you to enroll in my node course because
03:27 - this is much faster than jumping from
03:29 - one tutorial to another it saves you
03:31 - time plus you're going to get a lot of
03:33 - exercises that will prepare you for the
03:36 - real work and also at the end of the
03:38 - course you'll receive a certificate of
03:40 - completion that you can provide your
03:42 - current or future employer so if you
03:45 - want to enroll click on the link in the
03:47 - video description I hope to see you in
03:48 - the course