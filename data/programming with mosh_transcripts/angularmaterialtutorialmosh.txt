00:00 - [Music]
00:01 - in this section we're going to look at
00:03 - angular material which is a collection
00:05 - of components and give our applications
00:08 - a modern look and feel more specifically
00:11 - you're going to learn how to work with
00:13 - various kinds of components such as form
00:15 - controls icons dialog boxes progress
00:18 - spinners tooltips and so on you're going
00:21 - to learn how to use the pre-built themes
00:23 - as well as create a custom theme you're
00:26 - also going to learn how to use angular
00:28 - materials typography and create custom
00:31 - typography for your applications this
00:34 - section is fairly long so it's best to
00:36 - watch it over a few sessions now let's
00:40 - get started
00:44 - so what is angular material angular
00:47 - material is a library of reusable and
00:50 - high-quality UI components that are
00:52 - built with angular and typescript these
00:55 - components are internationalized so
00:58 - users with different languages can use
01:00 - them they have a clean and simple API
01:02 - they are well tested with unit and
01:05 - integration tests they're customizable
01:07 - they're very fast and have minimal
01:09 - performance overhead and they are almost
01:12 - well documented so let me show you a few
01:15 - examples of these components in action
01:17 - if you head over to material dot angular
01:20 - io you can see the home page for angular
01:23 - material here under components you can
01:26 - see we have various kinds of components
01:28 - we have form controls like radio buttons
01:32 - checkboxes and so on we have navigation
01:35 - component like toolbars menus we have
01:38 - layout components like lists cars grids
01:41 - we've got buns indicators and icons
01:44 - pop-ups and models and data table so let
01:49 - me show you a few of these in action the
01:52 - first one I want to show you is under
01:54 - form controls so here let's go to this
01:58 - check box so here on the examples tab
02:02 - you can see these check boxes and radio
02:05 - buttons in action so these check boxes
02:08 - have the same API as the native check
02:11 - boxes we have used so far but you can
02:13 - see they look very pretty and they also
02:16 - have some nice animation see that so
02:20 - very nice now we can easily add these to
02:24 - our applications by using angular
02:26 - material let's take a look at another
02:29 - example so back to the components page
02:32 - this time I'm going to show you a model
02:35 - so under pop-ups and models let's take a
02:39 - look at a dialog once again under the
02:43 - examples tab so here we have a button
02:46 - launch dialog and when we click this we
02:50 - get a dialog with a nice animation one
02:52 - more time see it has a very nice
02:55 - animation
02:57 - a question that you might have is that
02:59 - we already have the concept of dialogues
03:02 - in bootstrap so why should we use this
03:05 - dialogue in angular material well
03:08 - bootstrap and angular material as you
03:10 - know there are two different libraries
03:12 - built by different teams bootstrap was
03:15 - built a few years ago using plain old
03:17 - JavaScript and it has nothing to do with
03:19 - angular
03:20 - so all that javascript code that we have
03:22 - in bootstrap libraries we cannot easily
03:25 - use them in our angular applications we
03:27 - need to create custom directives or
03:29 - custom components and do some magic in
03:31 - order to use those components angular
03:34 - material on the other hand is built
03:36 - specifically for angular applications so
03:39 - we don't have to do anything magical we
03:41 - can simply import a module and use
03:43 - angular material components just like
03:46 - how we use our custom components also in
03:49 - terms of the a statics bootstrap has a
03:52 - different design language all the
03:54 - bootstrap components have a different
03:56 - look and feel
03:57 - whereas the angular material is based on
04:00 - the material design which is a visual
04:02 - language developed by Google in 2014
04:05 - this is the same language that you see
04:07 - in Google+ in Android and many other
04:10 - applications so to answer your question
04:12 - you can use bootstrap you can use
04:15 - angular material or you can use both
04:17 - angular material is still new it doesn't
04:20 - have all the components that we have in
04:22 - bootstrap so if you want to build an
04:24 - application with a complex user
04:26 - interface chances are some of the
04:28 - components that you need may not
04:30 - currently be part of angular material so
04:33 - then you might have to use bootstrap but
04:35 - as I told you before because we cannot
04:37 - use bootstrap javascript easily in our
04:39 - angular applications we have to use
04:41 - third-party components that are based on
04:44 - bootstrap and that means our application
04:46 - is going to have a lot of dependencies
04:48 - to libraries built by others and these
04:51 - libraries can break at any time so
04:54 - that's why I personally prefer angular
04:56 - material because all these components
04:59 - are built with the same list of quality
05:01 - standards they have a common API they're
05:03 - well tested and we can easily use them
05:05 - in our angular applications so enough
05:08 - theory next we're going to install
05:10 - angular meteor
05:11 - in our project
05:16 - in this lecture I'm going to show you
05:18 - how to install angular material now
05:21 - before we get started I just want to let
05:23 - you know that you don't have to memorize
05:24 - any of these steps I'm going to show you
05:26 - in this lecture
05:27 - all of these are perfectly documented
05:30 - but you might find it easier to watch
05:31 - the video first and then look at the
05:33 - documentation so in the future you can
05:36 - always go to material that angular that
05:39 - I own under this guide page you'll find
05:43 - this guide getting started and this
05:46 - shows you all the steps that you need to
05:48 - follow in order to add angular material
05:51 - to a project so now let me show you
05:53 - these steps in action first in the
05:57 - terminal just like the previous sections
05:59 - I'm going to create a new project using
06:01 - angular CLI so ng new material - demo
06:08 - all right beautiful
06:09 - now let's go to this folder material -
06:13 - demo here we need to install a couple of
06:15 - node packages so NPM install - - same
06:21 - the first one is angular slash CD k and
06:25 - this stands for component development
06:29 - kit this component development kit is
06:31 - one of the dependencies of angular
06:34 - material and it's basically a library
06:36 - that allows you to build awesome
06:38 - components for the web but without
06:40 - adopting the material design visual
06:43 - language so if you want to build every
06:45 - usable data table that doesn't
06:47 - necessarily have a material design
06:49 - visual language you can build it with C
06:52 - TK in an agnostic way so this is the
06:56 - first dependency we need to install and
06:57 - the second one is the actual angular
07:00 - material package so at angular slash
07:04 - material so these are the essential
07:07 - packages that we need to install now
07:10 - optionally we can install a couple more
07:12 - packages one is for adding animations
07:15 - the other is for gesture so if you want
07:18 - to have those nice animations also
07:20 - install at angular slash animations and
07:25 - finally in order to add gesture support
07:28 - you need to install
07:30 - hammer Jas so hammer Jas
07:34 - so hammer Jas is a powerful library that
07:38 - allows you to add gesture support to
07:40 - your pages for example you may tap with
07:42 - your finger or swipe or rotate and so on
07:46 - now once again this is an optional
07:48 - dependency but I recommend you to add it
07:50 - to your application to make it more
07:52 - accessible right now let's install these
07:55 - dependencies alright so the first step
07:59 - was to install these dependencies next
08:02 - we need to include a theme so let's go
08:04 - to visual studio code here under node
08:08 - modules under at angular you can find
08:13 - the material folder and here we have
08:17 - these pre-built themes so we have a
08:20 - bunch of themes there beautiful
08:22 - the one I'm gonna use is in Diigo - pink
08:25 - but you might use any other that you
08:26 - prefer so let's go to styles that's CSS
08:31 - we need to import a theme just the same
08:35 - way we imported bootstrap before so hat
08:38 - import and here we add the relative path
08:41 - from node modules so start with a tilde
08:45 - at angular slash material slash
08:49 - pre-built
08:51 - - themes slash in Diigo - pink dot CSS
08:59 - make sure to spell it properly otherwise
09:01 - it's not gonna work so this was our
09:04 - second step and now the final step we
09:08 - need to go to app dot module here if you
09:12 - want to add animation support you need
09:14 - to import browser animations module
09:17 - otherwise you need to import no op
09:20 - animations module so let me show you so
09:23 - if you previously installed angular
09:26 - animations you need to import browser
09:30 - animations module from at angular slash
09:37 - platform
09:39 - - browser slash animations
09:43 - okay so this is the implementation of
09:46 - the animations module in a browser now
09:50 - if you don't want to have animations
09:52 - instead of browser animations module you
09:54 - need to import no op animations module
09:57 - so I'm going to select this line
09:59 - duplicate and change this module to no
10:04 - up animations module so now we need to
10:08 - import one of these modules into our ng
10:11 - module so here in the imports array I'm
10:14 - gonna add browser animations module so
10:19 - these are the three steps that we need
10:21 - to follow in order to install angular
10:23 - material now to make sure that we have
10:25 - installed angular material properly
10:27 - let's go ahead and add a checkbox to our
10:30 - app component so let's go to app dot
10:36 - HTML I'm going to delete all the mark-up
10:39 - here and add a checkbox so that's MD -
10:43 - checkbox now let's give it a label
10:47 - subscribe to news letter so in angular
10:52 - material we have a custom component for
10:55 - rendering a checkbox and this MD -
10:58 - checkbox is the selector for that
11:00 - component now back in the terminal we
11:05 - need to serve this application okay it's
11:10 - ready so back in the browser we get a
11:13 - blank screen so let's take a look at the
11:15 - console we see a familiar error MD -
11:21 - checkbox is not a known element because
11:25 - we have used a custom component but we
11:27 - have not imported this component into
11:29 - our app module so let's go to app that
11:33 - module every component in angular
11:37 - material is defined in a separate module
11:40 - so we need to go on the top import this
11:43 - module here and then add it to the
11:45 - import array of our ng module but how do
11:49 - we know what module a component is
11:51 - defining very easy we go to material
11:55 - that angular that
11:56 - components form controls checkbox now
12:02 - under API you can see the name of the
12:06 - module in which this component is
12:08 - defined so this component is defined in
12:11 - MD checkbox module I'm gonna simply copy
12:14 - this line back here paste it
12:19 - let's reformat it okay and finally add
12:24 - it to the imports array MD checkbox
12:29 - module save back in the browser
12:32 - alright now we have a beautiful modern
12:34 - check box with animation so over the
12:39 - rest of this section we're going to
12:40 - explore each of these components in more
12:42 - detail
12:48 - alright now let's continue with this
12:50 - checkbox we added in the last lecture so
12:52 - this checkbox component in angular
12:54 - material implements a very similar API
12:58 - to the native checkbox we have in html5
13:01 - for example in html5 in order to add a
13:05 - checkbox we need to use input with a
13:09 - type checkbox okay now here we have a
13:14 - bunch of attributes like checked we can
13:17 - set it to checked you have value you
13:21 - have to change event and so on so our
13:24 - custom checkbox in angular material also
13:27 - has these properties so once again if
13:31 - you go back to the documentation for
13:33 - this component under the api's tab we
13:36 - can find all the properties implemented
13:39 - in this component so here under
13:41 - directives we can see the name of our
13:42 - component that is MD checkbox and below
13:47 - that we have a table with the list of
13:49 - all the input and output properties now
13:53 - there is not enough time to go through
13:54 - each of these properties and it's really
13:56 - pointless so I want to show you a few
13:59 - key properties that you're going to use
14:01 - in a lot of real-world applications so
14:04 - right here I'm gonna delete its native
14:07 - html5 checkbox now here's our MD
14:13 - checkbox here we can set the value
14:16 - exactly the same way of a native
14:19 - checkbox or we can use property binding
14:22 - combined days to a field or a property
14:26 - in our component similarly we have the
14:30 - checked property we can set this to
14:32 - checked to check this by default let's
14:35 - have a look back in the browser so now
14:39 - our checkbox is checked by default or we
14:42 - can use property binding and binds to a
14:45 - field or property in our component so
14:48 - let's go to app that component here I'm
14:53 - going to define a field called is
14:54 - checked and set it to true now back in
14:58 - the template
15:00 - I can bind this check property to is
15:03 - checked same back in the browser so we
15:09 - can see is checked by default we also
15:12 - have the change event that we can
15:14 - subscribe to so let's plan this to
15:17 - unchanged method in our component and
15:21 - here we can pass the event object now
15:24 - let's go ahead and implement this method
15:27 - in our component so back here I'm gonna
15:34 - add this unchanged method and for now
15:38 - simply lock something in the console
15:41 - back in the browser so click this now
15:47 - look at the console so this is our event
15:50 - object it has two properties source
15:53 - which references our MD checkbox class
15:56 - and checked so here's our MD checkbox
16:02 - you can see all these properties
16:04 - implemented in this component now let's
16:08 - say we have some content here let's say
16:10 - we have a div and this checkbox acts as
16:13 - a toggle to show or hide that div for
16:17 - example we can change this label to show
16:20 - details here I'm gonna add a div and in
16:26 - this tip we're going to have some
16:28 - details okay now when the checkbox is
16:31 - checked this div should be visible so
16:34 - here we can use ng if now here in this
16:39 - expression we need to reference our
16:41 - checkbox so we can simply give it a
16:44 - template variable let's call this show
16:47 - details and here we can reference show
16:52 - details dot checked property okay so
16:57 - back in the browser okay you can see our
17:00 - details div is initially visible if I
17:04 - uncheck this it's gone so this is how we
17:09 - work with angular material check boxes
17:16 - another component that is very similar
17:18 - to a checkbox is the radio button so I
17:21 - can angular material website under
17:24 - components page let's go to form
17:26 - controls and look at this radio button
17:31 - so as a quick tip whenever you want to
17:33 - work with a component look at this
17:35 - overview tab here you should see a very
17:39 - simple example of using that component
17:41 - so here's our radio button now if you
17:45 - click this view source you can see the
17:48 - mark-up that you need to write to render
17:50 - this component so here we have two
17:52 - elements MD radio group and MD radio
17:56 - button so we can put all these radio
17:59 - buttons inside a group and in that group
18:01 - only one radio button will be selectable
18:04 - and of course we can have multiple
18:06 - groups on a web page
18:08 - so back in vs code I'm gonna delete this
18:12 - checkbox here instead we need MD - radio
18:17 - - group and inside this we need two
18:20 - radio buttons MD - radio - button times
18:25 - - beautiful now here we can give each
18:30 - bun a label like male and female I can
18:35 - give them a value they can hard code the
18:38 - value here or use property binding
18:41 - syntax and bind this to a field or
18:43 - property in our component similarly I'm
18:48 - gonna set a value here you also have all
18:51 - those properties you learned about in
18:53 - the last lecture so we have checked we
18:57 - can hard code this here or use property
19:00 - binding and bind this to is checked
19:05 - filled in our component save back in the
19:09 - browser we got a blank screen so let's
19:13 - take a look at the console now this
19:16 - error is a little bit distracting it
19:18 - says can't bind to check since it is an
19:22 - unknown property of MD radio button
19:25 - unfortunately the errors in angular
19:27 - material are still a little bit image
19:29 - sure so what's going on here back in the
19:34 - coat I'm gonna temporarily delete this
19:39 - bit of code SAVE back in the browser we
19:44 - don't have any errors anymore but if you
19:46 - look at the web page you don't see the
19:49 - radio buttons the reason for this is
19:51 - because we didn't import the module for
19:55 - this radio button now technically I
19:58 - expect to see an error like MD Radio
20:01 - group is not a known element but we
20:04 - don't get that error it turns out that
20:06 - there is something common between the
20:08 - checkbox and the radio modules so
20:11 - because in app module we imported this
20:16 - MD checkbox module we don't get that
20:19 - error saying that this radio group or
20:21 - radio button is not unknown element if I
20:25 - comment this out see what happens
20:27 - back in the browser okay now we got a
20:30 - blank screen and if you look in the
20:32 - console you see the error I was talking
20:36 - about
20:36 - so MD radio button is not a known
20:39 - element so here's the lesson whenever
20:42 - you want to use a component make sure to
20:45 - import its module first so back in the
20:49 - documentation for the radio button look
20:51 - at the API tab here is the module that
20:55 - we need to import MD radio module so I
20:59 - can app module I'm gonna import another
21:03 - module from angular slash material that
21:07 - is MD radio module and then let's add a
21:13 - line break here okay
21:15 - so then in the imports array you're
21:19 - gonna have the checkbox module and the
21:23 - radio module now something I need to
21:25 - clarify here in this demo I'm not using
21:28 - a checkbox so technically we should not
21:30 - import this MD checkbox module but I'm
21:34 - deliberately leaving this here because
21:36 - later I want to show you a technique to
21:39 - refactor our code so we imported our
21:42 - radio mode
21:43 - now back in the browser these are our
21:46 - beautiful radio buttons so now I can app
21:53 - component I was gonna use this property
21:55 - binding here to automatically check the
21:58 - female radio button let's test this back
22:02 - in the browser so we can see female is
22:05 - checked by default now if you look at
22:07 - the documentation for this radio button
22:11 - here you can see the MD radio group
22:14 - class or MD radio group component here
22:18 - we have an input property called value
22:21 - so we can set the value of the group and
22:23 - this will automatically check the radio
22:26 - button with that value for example back
22:30 - here I'm gonna remove it's checked
22:33 - property so the value of the female
22:36 - radio button is zero I can set the value
22:40 - of the group to zero and this will
22:44 - automatically check the female radio
22:46 - button and once again the female radio
22:49 - button is checked so you can see these
22:52 - components in angular material are very
22:54 - easy to use
23:00 - all right now let me show you how to
23:01 - render a drop-down list so once again on
23:04 - an angular material website under the
23:07 - components page let's go to form
23:09 - controls and then select just like
23:15 - always we go to the API tab first and
23:18 - find the module in which this component
23:21 - is defined so it's MD select module so
23:25 - before going any further let's import
23:28 - this module into our app module so here
23:31 - in the imports array I'm gonna add MD
23:34 - select module and then import this with
23:39 - my auto import plug-in okay good now
23:43 - back in the documentation let's go to
23:47 - the overview tab and look at an example
23:50 - or the basic markup we need to render a
23:52 - drop down list so here we have two new
23:57 - elements one is MD - select and the
24:00 - other is MD - option these elements are
24:04 - very similar to the native select and
24:07 - option elements we have in html5
24:10 - so back in app that component that HTML
24:13 - let's add a native html5 drop down list
24:16 - and then converted to an angular
24:19 - material drop down list so we had select
24:22 - and inside this we need one or more
24:25 - options now we don't need the name and
24:29 - ID attribute and here this option we
24:33 - want to render aid based on a list based
24:35 - on an array of items so let's go to our
24:39 - app dot component I'm gonna delete all
24:42 - the code here and declare an array of
24:46 - colors like this each color is an object
24:50 - with two properties ID and name so we've
24:56 - got red and then green and blue and of
25:02 - course that's change these IDs beautiful
25:05 - so I can a template
25:10 - here we're gonna apply the ng4 directive
25:13 - to repeat these options so let color of
25:18 - colors now for the value I'm going to
25:21 - use the property binding syntax and bind
25:24 - this to color that ID and here we can
25:28 - render the label so color the name so
25:32 - this is our native html5 drop-down list
25:35 - back in the browser we get this ugly
25:40 - really traditional looking drop-down
25:42 - list we can do better so let's convert
25:45 - this to an angular material drop-down
25:47 - list back here all we have to do is to
25:52 - prefix these elements with MD - so I put
25:56 - the cursor here command + D on mac or
25:58 - control-d on windows to trigger multi
26:02 - cursor editing so come on addy the first
26:05 - select is selected one more time now
26:08 - both select elements are selected so we
26:11 - type MD - select and press escape now
26:16 - one more time this time I'm gonna rename
26:18 - option so command on D one more time and
26:23 - then type md - option save back in the
26:29 - browser and now we have these modern
26:32 - drop-down lists
26:34 - that's much better now if you want to
26:37 - pre select one of the items here you
26:40 - need to use the ng model directive so
26:44 - back here I'm going to apply ng model
26:48 - directive on our MD select element entry
26:52 - model and bind this to let's say a field
26:57 - called
26:57 - color like an app that component I'm
27:02 - gonna define this color field here and
27:05 - set it to two
27:07 - so I want green to be selected by
27:09 - default now if you go back in the
27:11 - browser we're going to see an error so
27:14 - we have a blank screen let's take a look
27:16 - at the console alright can't bind to ng
27:20 - model since it is an unknown property of
27:23 - MD
27:24 - select you have seen this error earlier
27:26 - in the course the reason for this is
27:28 - because
27:29 - ng-model directive is defined in the
27:32 - forms module and because this is a
27:34 - brand-new angular project we have not
27:36 - imported the forms module so back in app
27:40 - module in the imports array I'm gonna
27:43 - add forms module save and back in the
27:48 - browser all right now you can see green
27:52 - is selected by default so to convert a
27:56 - native html5 drop-down list so an
27:58 - angular material one all we have to do
28:01 - is to prefix these elements with MD dash
28:08 - in this lecture I'm gonna show you how
28:10 - to work with angular material input
28:13 - controls so I can angular material
28:16 - website and the components page let's go
28:18 - to form controls and then input just
28:23 - like always first we start with the API
28:26 - tab to find the module so this component
28:30 - is defined in MD input module now back
28:34 - in our app module in the imports array
28:37 - I'm gonna import MD input module and
28:41 - then import this with my auto import
28:44 - plug-in okay now back in the
28:48 - documentation let's go to the overview
28:51 - tab I look at a sample example so this
28:56 - is how the input controls of angular
28:59 - material look like instead of having to
29:01 - label before an input field we have a
29:04 - placeholder that is currently on top of
29:06 - the input field so if I delete sushi
29:09 - here look the placeholder is now bigger
29:13 - and more visible and when we click it it
29:16 - kind of jumps to the top so this is a
29:19 - very nice modern effect that you have
29:21 - probably seen and a lot of applications
29:23 - out there now let's take a look at the
29:25 - markup so here we have a new element
29:29 - that is MD input container and inside
29:33 - this element we have a native html5
29:36 - input element now this input element has
29:39 - a directive that is MD input now you
29:43 - might ask why we need a container here
29:45 - the reason for this is because in
29:48 - angular material we have a few other
29:50 - elements here for example we can have a
29:53 - hint below each input field we can have
29:56 - a prefix suffix
29:58 - we can have error messages so we put all
30:00 - these inside a container so how can we
30:05 - ask oh let's go to our app component at
30:07 - HTML I'm gonna delete all this and start
30:11 - with MD input container here it is an
30:17 - input of type text
30:20 - and you should decorate this with Md
30:25 - input directive we should also give it a
30:28 - placeholder so a placeholder let's say
30:33 - username well back in the browser so
30:38 - this is what we get okay
30:41 - now let's take this to the next level we
30:45 - can have a hint below this input field
30:46 - so we have a new element that is MD hint
30:50 - and here we can say something like type
30:53 - a unique username back in the browser
30:57 - and this is our hint okay we can also
31:04 - add a suffix here for example as a day
31:07 - his span and here we can have something
31:09 - like at domain.com so imagine in this
31:13 - form the user is going to select a
31:15 - username and this username combined with
31:18 - at domain.com is gonna make up their
31:20 - email address now here we can apply a
31:24 - directive and this span that is MD
31:27 - suffix let's take a look so here's our
31:32 - suffix we can add wash that hamid ani at
31:35 - domain.com we can also have a prefix so
31:40 - i'm gonna duplicate this line and change
31:43 - md suffix to md prefix and here we can
31:47 - have something like admin dot now back
31:51 - in the browser so we have admin dot
31:54 - marsh - hamid ani at domain.com
31:58 - so this suffix is always there we cannot
32:01 - delete it okay and we can also add error
32:04 - messages here so let's make this input
32:07 - field required and then here I'm gonna
32:12 - add another element that is MD - error
32:17 - previously in a section about template
32:20 - driven forms we used a div with a couple
32:23 - of bootstrap classes to render an error
32:25 - we used alert and alert - danger but
32:29 - here when using angular material we use
32:31 - MD - error and by the way
32:34 - make sure not to use bootstrap classes
32:36 - here for example earlier when we built
32:39 - our forums we always added this form
32:42 - - control class to our input fields you
32:45 - should not add this here because this
32:47 - will mess up with the appearance of your
32:49 - angular material components ok so you
32:52 - should either use bootstrap or angular
32:55 - material when you're building a form so
32:58 - let's delete this so I added this
33:02 - required attribute to our input field
33:05 - here and here inside MD - error element
33:09 - I'm going to add an error message the
33:11 - user name field is required now let's
33:14 - see what happens so back in the browser
33:18 - note this asterisk here this indicates
33:21 - that this field is required I'm going to
33:24 - click it the asterisk turns red however
33:28 - when I tab away we don't see the error
33:31 - message because we have not applied the
33:33 - ngmodel directive on this input field so
33:36 - there is no form control to keep track
33:39 - of the validity of this input field
33:41 - under the hood so here's our input field
33:46 - I'm gonna apply the ng model directive
33:51 - and also as a requirement we should give
33:55 - each input field a name this is when we
33:58 - are building template driven forms
34:00 - remember that so let's call this user
34:03 - name now with these angular is going to
34:07 - create a form control object and
34:09 - associated with this input field and
34:11 - this form control will keep track of the
34:14 - validity of this input field so let's
34:16 - see this in action
34:17 - I put the focus here and then tab away
34:21 - and here's our error message beautiful
34:24 - so this is how we work with input fields
34:27 - in angular material we can give our
34:29 - input fields a hint a suffix and prefix
34:33 - one or more error messages and by the
34:36 - way here we want to render this error
34:38 - message only if the field has an error
34:41 - so technically
34:45 - should have something like ng if we set
34:48 - this to first we need to declare a
34:50 - template variable so let's call this
34:54 - username and send it to ng model now
34:59 - with this variable we can see if our
35:01 - input field as an error or not
35:04 - so ng if username dot invalid and user
35:10 - name dot errors dot required and with
35:15 - this we can have multiple errors of
35:17 - different kind exactly the same way we
35:20 - implemented error handling in the
35:22 - template driven form section the only
35:25 - difference is in the marker so instead
35:27 - of using divs with bootstrap classes
35:30 - you're using angular material elements
35:32 - okay so this is all about input fields
35:39 - hi thank you for watching my angular
35:41 - tutorial if you enjoyed this video
35:43 - please like it and share it with others
35:45 - also you can subscribe to my channel for
35:48 - free new videos every week this video is
35:51 - part of my complete angular course with
35:54 - almost 30 hours of high quality content
35:56 - where you learn everything about angular
35:59 - from the basic to the advanced topics
36:01 - all in one course so you don't have to
36:03 - jump from one tutorial to another in
36:05 - case you're interested you can get this
36:07 - course with a big discount using the
36:09 - link in the video description and if not
36:11 - that's perfectly fine continue watching
36:13 - as the next section is coming up