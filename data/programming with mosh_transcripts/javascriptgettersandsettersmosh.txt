00:03 - in this lecture we're going to look at a
00:04 - special kind of methods in objects
00:07 - called getters and setters so let's
00:10 - imagine we have a person object with two
00:14 - properties first name set this to marche
00:18 - and last name set this to a Madani now
00:23 - somewhere in our application we want to
00:26 - display a person's full name so we have
00:28 - to do something like this consult a lot
00:31 - we can either get the person that first
00:33 - name concatenated with space and then
00:36 - last name or a better way as I told you
00:39 - before is to use a template literal so
00:42 - we use the back tick and then we add a
00:45 - couple of arguments here so here's the
00:47 - first one the argument is person that
00:50 - first name now we have a space and here
00:53 - is the second argument person dot last
00:55 - name
00:56 - however the problem with this approach
00:58 - is that maybe there are multiple places
01:01 - in our application where we want to
01:03 - display someone's full name with the
01:05 - current implementation we'll have to
01:06 - repeat this template literal in multiple
01:09 - places a better approach is to define a
01:12 - method in this object call it full name
01:15 - and move this expression right there and
01:18 - then whenever we want to display a
01:20 - person's full name we simply call that
01:22 - method so we can add another key value
01:25 - pair full name but we set the value to a
01:28 - function or as I told you before in es6
01:32 - we have a shorter syntax to add a method
01:35 - to an object so instead of adding it as
01:37 - a key value pair we can add it as a
01:40 - function without the function keyword so
01:43 - if you want to define a function outside
01:45 - of an object what do we do we add
01:48 - function the name of the function
01:49 - parentheses and curly braces however
01:52 - when we need to add this inside of an
01:55 - object we just drop the function keyword
01:57 - so you can see this new syntax is
01:59 - shorter and cleaner than the older
02:02 - syntax okay so here's our full-name
02:04 - method we simply return this expression
02:09 - here so I'm gonna cut this and move it
02:12 - here now with this new implementation
02:14 - every time we need to
02:16 - by someone spooling would simply call
02:18 - person dot full name save the changes we
02:22 - get Marsh comma daddy beautiful however
02:25 - there are a couple of problems with this
02:27 - approach the first problem is that this
02:30 - is read only in other words we cannot
02:33 - set a person's full name from the
02:36 - outside it would be nice if we could do
02:39 - this and then the first name and last
02:43 - name properties would be automatically
02:44 - set based on what we pass here the other
02:48 - issue is that I don't like to call this
02:51 - like a method it would be nicer if you
02:54 - could treat this as a property so we
02:56 - could drop the parentheses like this so
03:00 - how do we do this
03:00 - well that's where getters and setters
03:03 - come in the picture we use getters to
03:07 - access properties in an object and
03:09 - setters to change or mutate them so in
03:15 - this object we should add a getter and
03:18 - with that Gator we can read this
03:19 - person's full name like a property and
03:22 - with the setter we can set it from the
03:24 - outside so here is how it works
03:26 - we prefix this method with a get keyword
03:29 - and now this method is a getter so we
03:33 - can access the full name like a property
03:35 - on line 15
03:36 - let me temporarily comment out this line
03:40 - save the changes you can see our program
03:43 - is still working beautiful so this is
03:45 - our getter now to be able to set this
03:48 - from the outside we need to add a setter
03:50 - a setter is very similar so we add the
03:54 - set keyword the name of the property or
03:57 - method and then code block however this
04:01 - method needs a parameter we can call it
04:04 - value or anything and the value of this
04:06 - parameter would be what we have on the
04:09 - right side of the assignment operator so
04:12 - here let's assume that value is a valid
04:14 - string we need to split that string by a
04:17 - space take the parts and set the first
04:20 - name and last name properties so value
04:25 - we call the split method of strings you
04:28 - want to split it by a space
04:30 - this will return an array we can call
04:33 - that parts now we can set the first name
04:38 - two parts of zero a last name two part
04:43 - of one and finally instead of logging
04:47 - the person's full name let's just log
04:49 - the person object so initially we set
04:53 - the first name and last name to Muhammad
04:54 - Ani
04:54 - now with this new property which is
04:57 - actually a setter we're changing the
04:59 - name to John Smith save the changes
05:02 - here's our personal object you can see
05:04 - first name and last name properties are
05:07 - updated
05:07 - also note that full name its value is
05:11 - dot dot dot sometimes when you're
05:14 - logging objects in the console you may
05:16 - see properties with this kind of value
05:18 - as we can see from the tooltip this is a
05:21 - getter in order to read the manual you
05:23 - need to click here and now this method
05:26 - is executed and the result is returned
05:29 - in the console so this is the benefit of
05:32 - getters and setters in the next lecture
05:35 - we're going to look at error handling
05:40 - hi guys thank you for watching my
05:42 - javascript tutorial this tutorial is
05:44 - part of my JavaScript course where you
05:47 - learn all the essential JavaScript
05:49 - features that every web and mobile
05:51 - application developer must know if
05:53 - you're an absolute beginner or have some
05:55 - experience in JavaScript and are looking
05:57 - for a fun and in-depth course that
05:59 - teaches you the fundamentals of
06:01 - JavaScript this course is for you this
06:03 - course is also packed with tons of
06:05 - exercises that help you master what you
06:07 - learned in the course in fact many of
06:09 - these exercises are questions that come
06:12 - up in technical programming interviews
06:14 - so if you're pursuing a job as a
06:16 - front-end or a back-end developer or if
06:19 - you simply want to have a more in-depth
06:21 - understanding of JavaScript I highly
06:23 - encourage you to enroll in the course
06:25 - for a limited time you can get this
06:27 - course with a discount using the link in
06:29 - the video description click the link to
06:31 - find out more about the course and
06:33 - enroll