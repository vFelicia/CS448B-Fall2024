00:00 - I got this question on this channel hey
00:01 - msh I'm 30 and I was planning to start a
00:04 - career as a programmer do you think this
00:06 - is wise comment question a lot of people
00:08 - are worried that AI is going to replace
00:11 - software Engineers so is coding still
00:13 - worth learning in 2024 well depends who
00:16 - you ask if you ask certain folks the
00:19 - ones who always seem miserable and say
00:21 - everything is going to collapse they
00:22 - will say no coding has no future but
00:25 - I've got a different take backed up by
00:27 - real world numbers in this video I'm
00:29 - sharing data that shows the continued
00:31 - demand for software Engineers so to
00:34 - understand where we are now and what the
00:36 - future will look like for software
00:38 - engineers make sure to watch this video
00:40 - to the end first I want to be
00:42 - transparent I've been creating coding
00:43 - courses for the past 10 years and in
00:46 - that time I've been lucky enough to
00:47 - teach millions of people how to code and
00:50 - launch their careers in Tech so yes you
00:52 - could say I have a vested interest in
00:54 - this field but I want to assure you that
00:56 - this isn't a sales pitch it's about
00:59 - helping you make make an informed
01:00 - decision I want you to hear both side of
01:03 - the story and decide for yourself what
01:05 - you believe at the end of the day it's
01:07 - your decision whether you want to learn
01:08 - coding or not and even if you want to
01:10 - you don't even have to buy my courses or
01:12 - learn from me there are thousands of
01:14 - great options out there so yeah there is
01:16 - a lot of fear about AI replacing coders
01:19 - headlines scream about robots taking
01:21 - over jobs and it can be overwhelming but
01:24 - the truth is AI is not going to take
01:26 - your job instead it's the person who
01:28 - knows how to work with AI that will
01:30 - steal your job the reality is software
01:33 - engineering is not going away at least
01:35 - not anytime soon don't just take my word
01:37 - for it here's some data to back it up
01:40 - the United States Bureau of Labor
01:42 - Statistics often called the BLS is a
01:44 - government agency that tracks job growth
01:47 - across the country on their website you
01:49 - can see that the employment for software
01:51 - developers is expected to grow by 26%
01:55 - from 2022 to 2031 the average across all
01:59 - occupations is 3% so that's a strong
02:02 - indication that software engineering is
02:04 - here to stay but it'll most likely
02:06 - transform and that's what we will
02:07 - explore in this
02:08 - [Music]
02:10 - video to better understand the impact of
02:13 - AI on software engineering let's take a
02:16 - minute and talk about the history of
02:18 - programming in the early days of
02:20 - computing programmers wrote code in a
02:22 - way that only computers understood long
02:25 - strings of zeros and ones it was
02:27 - incredibly tedious they had to keep
02:29 - track of of exactly where each piece of
02:32 - data and code was stored in the
02:34 - computer's memory and to do that they
02:36 - had to manually calculate memory
02:38 - addresses and make sure that different
02:40 - parts of the program didn't override
02:42 - each other compilers came to solve this
02:44 - problem with a compiler we can program
02:47 - in a human readable language like C++
02:50 - without worrying about how that code
02:52 - should eventually get converted to zeros
02:54 - and ones and where it will get stored in
02:56 - the memory that's the job of a compiler
02:59 - now here here's a fact compilers didn't
03:01 - replace programmers they made them more
03:03 - efficient and the result of that the
03:05 - amazing websites and apps we have today
03:08 - that no one could even imagine in the
03:09 - past these days billions of people can
03:12 - communicate in real time AI will likely
03:14 - do the same in the future we'll be able
03:16 - to delegate routine and repetitive
03:18 - coding tasks to AI so we can focus on
03:21 - complex problem solving design and
03:24 - Innovation this will allow us to build
03:26 - more sophisticated software that most
03:28 - people can't even imagine today but even
03:31 - then just because AI can generate code
03:33 - doesn't mean we can or we should
03:35 - delegate the entire coding aspect of
03:38 - software development to AI because AI
03:40 - generated code has a lower quality and
03:43 - humans still need to review and refine
03:45 - it before using it in production in fact
03:48 - there's a study to support this they
03:50 - collected 153 million change lines of
03:53 - code between January 2020 and December
03:56 - 2023 and they found disconcerting trends
03:59 - for maintenance ability and listen to
04:01 - their prediction for 2024 Cod churn
04:04 - which means the percentage of lines that
04:06 - are reverted or updated less than 2
04:08 - weeks after being authored is projected
04:11 - to double in 2024 so yes we can produce
04:15 - more code in less time with AI but more
04:17 - doesn't equal better humans should
04:20 - always review and refine AI generated
04:22 - code for quality and security before
04:25 - deploying it to production and that
04:27 - means all the coding skills as software
04:29 - engineer currently has will continue to
04:31 - stay relevant in the future you will
04:33 - still need the knowledge of data
04:35 - structures algorithms programming
04:37 - languages and their tricky parts tools
04:40 - and Frameworks you still need to have
04:41 - all that knowledge to be able to review
04:44 - and refine the AI generated code you'll
04:46 - just spend less time typing it so anyone
04:49 - telling you that you can use natural
04:51 - language to build software without
04:54 - understanding anything about coding is
04:55 - out of touch with the reality of
04:57 - software engineering sure you can make a
04:59 - dummy app but not the kind of software
05:02 - that runs our banks Airlines Healthcare
05:04 - the kind of software our life depends on
05:07 - we can't let a Code Monkey talk to a
05:09 - chat bot in plain English and get that
05:11 - software built at least not anytime soon
05:14 - in the future we'll probably spend more
05:16 - time designing new features and products
05:18 - with AI instead of writing boilerplate
05:21 - code we'll likely delegate aspects of
05:23 - coding to AI but this doesn't mean we
05:25 - don't need to learn to code think of it
05:27 - like a skilled architect using blue
05:29 - prints the architect doesn't need to
05:31 - handra the whole blueprint themselves
05:34 - but they still need to understand those
05:35 - blueprints in detail make sure
05:37 - everything works as designed and give
05:39 - clear instructions for those building
05:41 - the final structure as a software
05:44 - engineer you will always need to
05:46 - understand the code review what AI
05:47 - generates and refine it either by hand
05:50 - or by guiding the AI to improve also
05:53 - keep in mind that coding is only one
05:55 - part of a software engineer's job we
05:57 - often spend most of our time talking to
05:59 - people understanding requirements
06:01 - writing stories discussing software
06:03 - architecture and so on AI cannot help
06:06 - with that aspect of our work it can only
06:08 - boost our programming productivity but
06:10 - not necessarily the overall productivity
06:13 - in fact another study by McKenzie found
06:15 - that for highly complex tasks developers
06:18 - saw less than a 10% Improvement in their
06:21 - speed so as we can see here AI helped
06:23 - the most with documentation and code
06:26 - generation to some extent but moving on
06:28 - to refactoring the the Improvement
06:30 - dropped to 20% and for highly complex
06:32 - tasks it was less than 10% and this
06:35 - happens when the coding task involves
06:38 - something the developer isn't already
06:39 - familiar with so if anyone tells you
06:42 - that software Engineers will be obsolete
06:44 - in 5 years they're either ignorant or
06:46 - trying to sell you something in fact
06:48 - some argue that the role of software
06:51 - Engineers may become more valuable as
06:53 - they will be needed to develop manage
06:55 - and maintain these AI systems they need
06:58 - to understand all the complex of
07:00 - building software and use AI to boost
07:02 - their productivity now some are worried
07:04 - that one senior engineer can simply use
07:07 - Ai and replace many Engineers
07:09 - essentially leaving no job opportunities
07:12 - for juniors but again that's a fallacy
07:15 - because in reality the time savings you
07:17 - get from AI is not as great as you are
07:19 - promised anyone who has used AI to
07:21 - generate code knows that it takes effort
07:24 - to get the right prompts for usable
07:26 - results and the Cod still needs
07:27 - polishing so it's not like like one
07:29 - engineer will suddenly have so much free
07:32 - time to do the job of many people now
07:34 - you might say but MOS that's the current
07:37 - state of AI look AI is rapidly advancing
07:40 - and in a year or two it will be able to
07:42 - build software just like a human well in
07:45 - theory yes AI is advancing and one day
07:48 - it may even reach and surpass human
07:50 - intelligence but in theory theory and
07:52 - practice are the same in practice
07:54 - they're not the reality is while
07:56 - machines may be able to handle
07:58 - repetitive and routine tasks human
08:01 - creativity and expertise will still be
08:03 - necessary for developing complex
08:05 - Solutions and strategies I strongly
08:07 - believe software engineering is going to
08:09 - be extremely important over the next
08:11 - several decades I don't think it's going
08:13 - away but I do think it's going to change
08:16 - in the future we'll have to learn how to
08:18 - input the right prompt into our AI tools
08:20 - to get the expected result it's not an
08:22 - easy skill to develop it requires
08:24 - problem solving capability as well as
08:26 - knowledge of languages and tools so
08:29 - here's the bottom line if you have
08:30 - already made up your mind and don't want
08:32 - to invest your time in software
08:33 - engineering that's perfectly fine Follow
08:36 - Your Passion but if you like building
08:37 - things with code if the idea of shaping
08:40 - the future with technology gets you
08:42 - excited don't let negativity and fear
08:44 - hold your back software Powers our world
08:47 - and that won't change anytime soon yes
08:49 - the tools will evolve but the true skill
08:51 - lies in learning and adapting the future
08:54 - software engineer needs today's coding
08:56 - skills and an understanding of how to
08:58 - use AI effectively the output of AI is
09:01 - only as good as the instructions you
09:03 - give it think about it programmers must
09:06 - work directly with zeros and once
09:08 - today's web developers need to know HTML
09:11 - CSS Tailwind JavaScript typescript react
09:15 - nextjs git automated testing and so much
09:18 - more my prediction is that the future
09:20 - brings even more complexity demanding
09:23 - more knowledge and adaptability from
09:25 - software Engineers if you found this
09:27 - video helpful please give it a like And
09:30 - subscribe for more useful coding advice