00:01 - alright now let's add a new module to
00:04 - this application so I'm gonna add a new
00:07 - file logger dot J s let's imagine we're
00:12 - going to create a module for login
00:14 - messages and we're gonna reuse this
00:16 - module in various parts of this
00:18 - application or potentially in other
00:19 - applications so loggernet j s now in
00:24 - this module let's imagine that we're
00:26 - going to use one of those remote logging
00:29 - services for login our messages so there
00:32 - are websites out there there provide
00:34 - logging as a service they give us a URL
00:37 - and we can send an HTTP request to that
00:39 - URL to log messages in the cloud so here
00:43 - I'm gonna declare a variable like URL
00:49 - and set it to something like this HTTP
00:51 - my lager dot io / lock and of course I'm
00:56 - making this up it may not be a true
00:58 - service out there but let's imagine in
01:00 - this implementation we're going to send
01:02 - an HTTP request to this endpoint to this
01:05 - URL now we also need a function called
01:10 - log that takes a message and in this
01:15 - function we're going to send an HTTP
01:17 - request however to keep things simple
01:20 - here we just want to focus on the
01:22 - modularity we don't want to get
01:23 - distracted with all the details of
01:25 - sending HTTP requests so for now I just
01:28 - want to log this message on the console
01:31 - so console that log message okay
01:37 - now this variable and this log function
01:42 - they're both scoped to this module
01:44 - they're private they're not visible from
01:47 - the outside however in after j/s which
01:51 - is our main module we want to use this
01:54 - logger module so we should be able to
01:57 - access this log function we should be
02:00 - able to call it from the app module so
02:02 - we need to make this public we need to
02:04 - make it visible from the outside
02:07 - now in the last lecture you saw this
02:09 - module object one of the properties we
02:12 - have here is exports you can see this
02:15 - property is set to an empty object
02:18 - anything that we add to this object will
02:21 - be exported from this module and it will
02:23 - be available outside of this module so
02:27 - back in our lager module I'm gonna set
02:30 - module dot exports dot log so I'm adding
02:35 - a method called log to this exports
02:39 - object and simply setting it to this log
02:43 - function we have defined here okay in
02:47 - other words the object that we're
02:48 - exporting here has a single method
02:51 - called log now similarly
02:53 - if you want to export this URL we could
02:56 - do something like this so module that
03:00 - exports that URL we set it to URL and of
03:04 - course we could change the name that is
03:06 - exported to the outside for example
03:08 - internally we may call this variable URL
03:11 - but when we export it we may call it
03:15 - endpoint okay now in this case we don't
03:21 - need to export this URL variable because
03:25 - this is purely implementation detail so
03:28 - in real world applications every module
03:30 - might have several variables and
03:32 - functions we only want to export a
03:34 - subset of these members to the outside
03:37 - because we want to keep this module easy
03:39 - to use let me give you a metaphor think
03:42 - of a DVD player a DVD player has a few
03:46 - buttons on the outside and these are the
03:48 - buttons or objects that we interact with
03:50 - so these objects represent the public
03:53 - interface of a DVD player okay but
03:57 - inside the box there are lots of other
03:59 - objects or complex objects we don't need
04:01 - to know anything about these objects
04:03 - their implementation data and they can
04:06 - change significantly from one model to
04:08 - another but what we see on the outside
04:10 - is almost stable or static across
04:14 - different models so in our logger module
04:17 - this URL is implementation detail
04:20 - modules don't need to know anything
04:22 - about this they only need to call the
04:24 - log function so we export these make it
04:27 - public but keep the URL private so I'm
04:30 - gonna delete this last line okay so
04:34 - we're done with our logger module now we
04:36 - need to load this module and use it
04:38 - inside app j/s
04:43 - hi guys its mosh here thank you for
04:46 - watching my node tutorial I just wanted
04:48 - to let you know that this video you've
04:50 - been watching is part of my complete
04:52 - note course where you will learn
04:53 - everything about node from the basic to
04:55 - the advanced topics if you're serious
04:57 - about learning node I highly recommend
05:00 - you to enroll in my node course because
05:02 - this is much faster than jumping from
05:04 - one tutorial to another it saves you
05:06 - time plus you're going to get a lot of
05:08 - exercises that will prepare you for the
05:10 - real work and also at the end of the
05:12 - course you'll receive a certificate of
05:15 - completion that you can provide your
05:17 - current or future employer so if you
05:20 - want to enroll click on the link in the
05:21 - video description I hope to see you in
05:23 - the course