00:03 - another very useful and powerful method
00:05 - we have in modern JavaScript is the map
00:08 - meta with this method we can map each
00:11 - item in an array to something else so
00:15 - falling from the example in the last
00:17 - lecture we have an array of positive
00:19 - numbers let's say you want to construct
00:22 - some HTML markup using the elements in
00:25 - this array so recall filtered that map
00:28 - and once again we need to pass a
00:31 - callback function here this function
00:34 - just like the function that we passed to
00:36 - the filter method can have three
00:37 - parameters value index and array so in
00:41 - this case again we're gonna work only
00:43 - with the value so we can pass a function
00:46 - or an error function so we get a number
00:48 - and then we're gonna map this to some
00:52 - HTML markup so we can add a string in an
00:57 - opening list item element then we add
01:00 - the number and finally the closing list
01:04 - item element so with this markup we can
01:07 - display each number using a bullet point
01:09 - of course we need to put these inside of
01:12 - a UL element and I'm gonna show you that
01:14 - in a second so let's see the result of
01:17 - the map method I'm gonna store the
01:20 - result in a constant called items and
01:23 - now let's display this on the console so
01:27 - you can see each number is now mapped to
01:30 - a string that's our list item so now we
01:33 - have an array of strings we can use the
01:36 - join method that you learn about earlier
01:38 - to join the elements of this array and
01:40 - create your string so constant H HTML we
01:44 - studied two items to join and then
01:48 - display this on the console now instead
01:52 - of an array we have a string note that
01:54 - by default comma is used as the
01:56 - separator we don't want to have comma in
01:59 - our HTML markup we just want to combine
02:01 - these using an empty character like this
02:05 - save the changes now comma is gone the
02:09 - only bit that is remaining is the UL
02:11 - element so
02:14 - a very simple implementation would be
02:17 - like this we add QL then concatenated
02:22 - with all these items and finally another
02:26 - you I'll save the changes and here's our
02:31 - HTML markup to display all these numbers
02:34 - using bullet points now later in the
02:37 - course
02:37 - I will show you a more elegant way to
02:38 - implement the same thing all I want you
02:41 - to take away from this lecture is that
02:43 - we can use the map method to map each
02:46 - element in an array into something else
02:49 - now in this example we are mapping these
02:51 - numbers to strings but you can also map
02:54 - them to objects let me show you another
02:56 - example so I'm going to delete this HTML
03:00 - let's expand this a little bit more so
03:03 - instead of mapping a number to your
03:05 - string let's say we want to map them to
03:08 - an object so here I'm gonna define an
03:10 - object in this object we're gonna have a
03:13 - value property and you want to set that
03:16 - to this number and finally we want to
03:19 - return this object let's look at the
03:21 - result
03:24 - oops I made a mistake I deleted the HTML
03:28 - constant and that's why we get this
03:29 - error HTML is not defined so let's
03:33 - display the items constant now here is
03:37 - the result of our map we mapped each
03:40 - number to an object with a value
03:43 - property okay it's very useful when
03:45 - building real-world applications now let
03:48 - me show you something tricky here there
03:50 - are a callback function we are declaring
03:52 - this constant and then returning it
03:55 - technically we don't need to declare
03:57 - this as a separate constant we can
03:59 - simply put the return keyword here and
04:02 - return this object because we're not
04:05 - working with that constant with an
04:07 - object constant okay so save the changes
04:10 - we still get the same result now earlier
04:13 - I told you that in your arrow function
04:16 - if you have a single line of code and
04:18 - you're returning a value you can exclude
04:20 - the return keyword as well as the curly
04:23 - braces so let's do that and see what
04:25 - happens so remove the return keyword and
04:29 - the curly braces then put everything on
04:32 - one line like this now if we save the
04:37 - changes we don't get the same result we
04:40 - get an array of three undefined elements
04:43 - the reason for this is that by default
04:46 - these curly braces in an error function
04:48 - represent a code block so when the
04:51 - JavaScript engine tries to parse this
04:54 - error function it thinks here we're
04:57 - defining a code block as opposed to an
04:59 - object to return so if you're returning
05:02 - an object you need to put that object in
05:06 - parentheses like this so we put this
05:10 - object in parentheses and with this our
05:12 - JavaScript engine will not look at this
05:14 - as a code block now save the changes now
05:18 - once again we get three objects and one
05:22 - last thing before we finish this lecture
05:24 - so you have noticed that both the filter
05:27 - and the map method return and neo array
05:31 - they don't modify the original array
05:33 - okay now these methods are chainable
05:36 - which means we can
05:38 - call them one after another in a chain
05:41 - so in this case this filtered constant
05:45 - is only used here we haven't used this
05:47 - anywhere else in the code so we don't
05:49 - have to explicitly store the result of
05:52 - this statement inside a separate
05:56 - constant we can get rid of this we call
06:00 - the filter method now we don't want to
06:02 - have a semicolon here because we are not
06:04 - going to terminate this statement
06:05 - instead we're going to immediately call
06:08 - the map method on the result that is
06:12 - returned from this statement okay so I'm
06:16 - gonna copy our map method here this is
06:22 - what we call chaining so we're calling
06:25 - one method that method returns some
06:27 - result
06:28 - now we're immediately calling the map
06:30 - method on that result now in chaining
06:33 - multiple methods by convention we put
06:36 - each method call on a separate line and
06:38 - this makes our code cleaner have a look
06:40 - so numbers that filter and then that map
06:47 - and so on and finally we store the
06:50 - result in the items that's a better and
06:54 - cleaner code save the changes we still
06:58 - get the same result right now note that
07:01 - here because the map method is returning
07:04 - a new array again we can call the filter
07:07 - or the map method on that array so here
07:09 - we can call the filter one more time we
07:13 - get an object and maybe we want to get
07:15 - objects with value greater than one see
07:19 - what happens now in the result we have
07:22 - only two objects in our array objects
07:25 - with value two and three and again we
07:27 - can call the map method and maybe map
07:31 - each object to a number so we read the
07:35 - value property and return it save the
07:38 - changes now we have an array of two
07:40 - numbers so this is the power of chaining
07:44 - these methods
07:49 - hi guys thank you for watching my
07:51 - javascript tutorial this tutorial is
07:53 - part of my JavaScript course where you
07:56 - learn all the essential JavaScript
07:58 - features that every web and mobile
08:00 - application developer must know if
08:02 - you're an absolute beginner or have some
08:04 - experience in JavaScript and are looking
08:06 - for a fun and in-depth course that
08:08 - teaches you the fundamentals of
08:10 - JavaScript this course is for you this
08:12 - course is also packed with tons of
08:14 - exercises that help you master what you
08:16 - learned in the course in fact many of
08:18 - these exercises are questions that come
08:21 - up in technical programming interviews
08:23 - so if you're pursuing a job as a
08:25 - front-end or a back-end developer or if
08:28 - you simply want to have a more in-depth
08:30 - understanding of JavaScript I highly
08:32 - encourage you to enroll in the course
08:34 - for a limited time you can get this
08:36 - course with a discount using the link in
08:38 - the video description click the link to
08:40 - find out more about the course and
08:42 - enroll