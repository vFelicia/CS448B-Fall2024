hey how's it going everybody it's your bro here hope you're doing well and in this video I'm gonna teach you guys all about Jay Laird pains in Java so you can do cool stuff like this such as stack components on a GUI frame so let's get into it before you reach the end of this video make sure to LIKE comment and subscribe so that we together can challenge and defeat the mighty YouTube algorithm everyone I'm gonna be teaching you guys about the J layered pain what this is is that this is a swing container that provides a third dimension for positioning components so think of it like the depth or the Z index so this is very similar to a J panel except we can also specify different layers on the J layered pain we can have components be stacked on top of one another or underneath so let's begin by creating an instance of the J Laird pain so what we're gonna do here is just type in J Laird pain we need a name for this pain so we'll call this just Laird pain with a lowercase L equals nu J Laird pain now we're also going to need a J frame set up and we've done this in previous videos so if you need a jframe feel free to pause the video and type all this in so make sure that the layout manager is set to null now what we're gonna do with this Laird pain is actually add this to our J frame but first we're going to set the bounds for this so we're going to type in the name of our jailers pain dot set bounds and then I would recommend just picking the same dimensions for your J frame or you can pick a different size but I think for this example we should have it be the same so I'm going to set this where X is zero and Y is zero so this will begin the top left corner I want this to be 500 pixels for the width and 500 for the height now what we're gonna do is actually add this Laird pain to our jframe and I'll do that right underneath where we instantiate this J frame so frame dot add blared pain so now we have a layered pain attached to our J frame and now we can add components to our layered pain here so let's take a look to see what we have so far here is our J frame it is 500 by 500 and there is an invisible there to pain attached to here so we'll actually need to add some components so we can see this in action so we'll need to add some maybe J labels or some other components to this I like J labels so let's add those so J label and we'll call this label label one equals nu J label and we're going to take label 1 and set this to opaque set opaque true so we can actually see this and let's add a background color so label 1 dot set background and then we'll place the words color dot red and since we're not using a layout manager we're going to set the balance for this label on our layered pin so label 1 dot set bounds and we'll have this label begin where X is 50 Y is 50 and for the dimensions this will be 200 by 200 alright so let's do the same thing and we can just copy these and make maybe two more labels so we'll have label 1 label 2 and label 3 but make sure to change it here as well so you'll want these also to be their respective labels so label 2 or this paragraph here and then label 3 for everything here let's change the second label to be maybe green the third one to maybe blue and we'll also change the bounce so I'll have the second one begin where X is 100 and Y is 100 and then for a label 3 I'll have this begin where X is 150 and Y is 150 so what we need to do next is actually add all of these labels to our layered pin so let's do that after we instantiate our layered paint so we can add that right here type in the name of your lair deep in dot ad and the name of the component that you want to add so let's add a label one and let's do the same thing for each of these components so do the same thing for label two and label three so let's run this and see what we have so far now label one is our red box so the first component by default that is added to your layered pane will appear on the top the next one will be underneath and so on and so forth with that pattern so we can actually change the order in which these are stacked on top of each other and with layered panes there's actually a name for each layer here's a visual alright everyone well here's a visual of all the layers within aj layered pane so each of these layers actually has a specific name and you can specify which layer in which you want to add a component and when these are all stacked on top of each other it adds some depth to a program so it appears that visuals are stacked on top of each other now you don't have to remember all these names there's actually a shortcut I'm gonna show you guys in just a moment but let's begin just by adding two components to our default layer and maybe one to our drag layer so let's head back to our program and try that so with label 1 and label 2 what we're gonna do is that if we want to add this to the bottom layer which is the drag layer we're going to add the component followed by a comma then type in J layered Payan dot it can actually pick the layers from here so the bottom one was default so let's see if we can find that default layer so let's copy this and add this to label 2 then let's take label 3 and add this to the top layer which was dragged so I have an extra comma there let me fix that okay so that was drag layer which is right here so when we run this the blue box is actually going to appear at the top and the rest are at the bottom so there's actually a shortcut for because let's be honest we're not going to remember all the different layer names and their order so what we can do in place of typing J Laird pay and dot then pick a layer what you can do is just add a number and there's an Associated number with each layer let's say we want the base layer that is zero but we need to do one more thing just besides place a number here we need to use the wrapper class so type in integer dot value of and then place the layer number so if you want this at the bottom we could just place layer zero so just type in number zero and let's add label three on top of that so we can just copy this and say integer dot value of one and then let's place the green box at the very top so we'll say integer dot value of two you could also pick a higher number here as well so what ends up happening now is that our green box is at the very top so the higher the number the higher the placement is when you stack these on top of each other so that's really the basics of jail layered pains you add components to a J layered pen specify the layered number or by name and then add the layered pain to your frame or other container so if you'd like a copy of all this code I'll post this in the comments down below and well yeah that's the basics of using J layered pains in Java hey you yeah I'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro