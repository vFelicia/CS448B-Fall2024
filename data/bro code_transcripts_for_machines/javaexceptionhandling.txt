hey how's it going everybody it's you bro hope you're doing well and in this video i'm going to teach you guys how we can handle exceptions in java so sit back relax and enjoy the show make sure you like comment and subscribe one like equals one prayer for the youtube algorithm all right guys and gals let's talk about exceptions these are events that occur during the execution of a program that disrupt the normal flow of instructions think of these as unexpected events that occur that will stop your program like if you divide by zero that's referred to as an arithmetic exception and that will stop your program we would like some way to gracefully handle these exceptions and continue on with the set instructions and ignore that exception so let's say we would like to create a program where we divide two numbers and display the result so let's write a program like that so first let's create a scanner scanner scanner equals new scanner within the constructor we're going to say system dot in and we'll create a prompt to enter a number in let's say a whole number enter a pull number two divide let's store this within a variable called int x into x equals scanner dot next int and let's create a second variable called y we'll divide x by y enter a whole number to divide by and we'll store this within variable y and we'll say and z equals x divided by y and we will print the results to the console window system.out.printline let's say result plus z and that should be good okay let's intentionally divide a number by zero enter a whole number to divide five divided by zero boom exception now our console window states exception and thread main and this is the type of exception that we encountered we encountered an arithmetic exception because we divided a number by zero at line eighteen int z equals x divided by y so one way in which we can handle these exceptions and prevent our program from being interrupted is to surround any dangerous code within a try block so we type try outside of the dangerous code and surround all of the dangerous code within a set of curly braces and i'm just going to indent all of this so we're going to try all of this code if we encounter an exception we're going to perform whatever is within our catch block which we will follow this with catch parentheses and then a set of curly braces so we're going to list the type of exception we would like to catch within the parentheses of our catch block so let's attempt to catch an arithmetic exception arithmetic exception and then we'll call this exception e alright so if we encounter an arithmetic exception we're going to instead stop what we're doing within this try block and perform whatever is within our catch block so let's print a message instead you can't divide by zero idiot and let's try this again enter a whole number to divide five divided by zero you can't divide by zero idiot so you can see that our program was not interrupted because we caught the arithmetic exception that we encountered and we instead performed whatever code is within the catch block so here's another type of exception that we might run into what if somebody doesn't enter in a number let's say we enter in a whole number to divide like 5 and we decide to divide by the number pizza well now we encountered an input mismatch exception we can also catch that as well and we can do that within another catch block so this time we'll attempt to catch an input mismatch exception and i'm just going to copy this because i do not feel like typing it input mismatch exception e and let's print something please enter a number omfg and you might have to import something too apparently okay let's try this again enter a whole number to divide let's divide five by pizza again please enter a number omfg so there is a catch block that will catch all exceptions but it's kind of considered lazy to use by itself it's exception e and this will catch basically all exceptions but it's considered good practice to catch and handle individual exceptions and then you can add this in as a last resort if you forget a certain type of exception that you want to catch so a common thing that people will write when they use exception e is something went wrong but it's better to address and handle specific exceptions though so as a last resort we'll just add catch exception e at the very end in case there's anything that we do not anticipate there is one more type of block it's called a finally block a finally block will always execute whether or not we catch an exception so let's add that at the very end finally and then a set of curly braces so just to test this let's print a simple message such as this will always print and then i'll show you some uses later so let's take this seriously for once enter a whole number to divide 5 divided by 1 and we get the result and we still execute whatever is within the finally block now this time let's try and cause an exception enter a whole number two divide five divided by the number pizza we encountered and handled an exception and we still executed whatever is within the finale block now a good use of the finally block is to close any open scanners or files that might be open so let's type in the name of the scanner dot close but we'll need to move the scanner outside the try block because our finally block does not recognize it there we go all right so the finally block is a good thing to add to close any scanners or files that might be open that's all what an exception is it's an event that occurs during the execution of a program that disrupts the normal flow of instructions any code that is considered dangerous you can surround with a try block we can try this code if we encounter any exceptions we have catch blocks that can catch specific exceptions or basically all exceptions and handle them and then lastly you can add a finally block if there's any open scanners or files that you want to close or if there's anything else you want to do before you move on with the rest of the program so that's the basics of exceptions in java if you would like a copy of all this code i will post all of this in the comments down below but yeah that's an introduction to exceptions in java hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you