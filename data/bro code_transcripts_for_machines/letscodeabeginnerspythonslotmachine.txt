hey everybody in today's video we're going to create a beginners slot machine program using python this Project's meant for beginners so let's get started when creating a project I like to break up that project into different sections then tackle them one at a time so with the slot machine what are some of the different functions we'll need well we'll need to spin a row we'll Define a function to spin row as a placeholder I'll write pass we'll return to this function later we need to display or print the row print row if somebody gets matching symbols on the slot machine we need to give them a payout we'll create a function to get payout in this function we'll calculate what that payout is going to be but again we'll get to that later we'll write the majority of our code within a main function at the end of this program I will add the if statement of if Dunder name is equal to a string of Dunder main then we will call the main function which drives our code this program can be imported or stand alone it is good practice to add this if statement a majority of the code we're going to write is going to be within our main function So within our main function let's declare the variables we'll need throughout this program we will need a starting balance which I will just name same balance we will start with 100 as in $100 we'll need to display some sort of Welcome message let's print something we will print welcome to Let's name our game python slots just for some flavor I'm going to add some text decoration just a bunch of asterisks I think it'll look cool but you don't have to Let's display our symbols we're going to use use symbols I'll add some emojis we'll use emojis in this program in place of images if you're on Windows you can hold down the window key plus semicolon let's add a cherry you typically see a lot of fruit in slot machines a watermelon a lemon there's also a lot of bells for some reason but we'll add those and a star let me just align everything let's do a test run welcome to python slots let me make one adjustment okay I'm happy with that so after our welcome message message we'll continue playing this game while our balance is greater than zero while we still have money we can continue playing we will print I'll use an F string current balance colon space I'll add a placeholder pick a unit of currency I'll pick American dollars then we will display the users's balance we will prompt the user to enter in their bet which we will assign to a variable of bet so input place your bet amount let's do a test run welcome to python slots current balance $100 place your bet amount we won't deduce the BET amount from the balance quite yet I just want to be sure that we can enter in something $1 good $10 $1 what if somebody types in a word like pizza we need to prevent that input and correct it we'll check if take our bet use the is digit method is our bet a digit if somebody types in a word like pizza we need to tell them that's not valid so this will return true if our bet is a digit but we're going to use the not not logical operator if our bet is not a digit then do this we will print please enter a valid number followed by the continue keyword the continue keyword will skip the current iteration of this Loop and start from the beginning Let's test it place your bet amount pizza please enter a valid number we have our current balance again place your bet amount I'll type in one okay we did not get that message of please enter a valid number this bet of $1 is valid so if our bet is a digit we'll convert it to be an integer using typ casting because when you accept user input it's a string it has the string data type let's reassign our bet typ cast our bet as an integer then we will check to see if our bet is greater than our balance people can't bet money that they don't have if the bet is greater than the current balance if bet is greater than balance we will print this message instead in sufficient funds then continue if somebody tries to bet negative money or no money we'll add this statement if bet is less than or equal to zero we will print bet must be greater than zero and continue if all these checks pass if our bet is not a digit if our bet is greater than our balance or if our bet is greater than zero we will take our original balance minus equals our bet to subtract it let's do a test run place your bet amount pizza please enter a valid number I will bet1 kajillion dollars insufficient funds yeah no kidding 0 bet must be greater than zero what about $1 our bet should be subtracted from our balance let's try 10 we are now down to 899 let's bet $90 insufficient funds 89 and that has appeared to work once we subtract our bet from our balance we will call the function to spin row this function is going to return a list which we will assign to be row row will be a list using the spin row function we have to generate three random symbols then return them within a list we'll work on the spin row function next within our spin row function we will declare a list of symbols add your symbols but these Need to Be Strings make sure they're all comma separated there we go this is where list comprehensions can come in if you don't know what a list comprehension is here's an alternative we will declare an empty list of results this is an empty list we need a for Loop to generate three random symbols we could say for symbol in range three this for Loop will iterate three times during each iteration let's take our empty list of results use the append method we will append a random. choice among our symbols so we need to import the random module we'll do so at the top import random we're telling the random module to pick a random Choice from this list of symbols then we will append them to our empty list of results after we escape the for Loop we will return our results it's a list now a much better option is to use a list comprehension here's how it's going to be a lot more concise we will return a list within the list we will write a list comprehension for every let's say symbol in range three there is no condition what do we want to return during each iteration access the random module use the choice method then pass in our symbols symbol isn't used in this example what you may see people do is use an underscore as a placeholder basically what we're saying is for every iteration in range three return a random symbol that's all we need for the spin row function going back we have our list of row afterwards I am going to print it to test it print row and we should have three random symbols after making a bet all right it looks like it's working we'll make a few changes though instead of printing our row I'm going to print the word spinning I will add a new line character just to give us some space like after this work of spinning then we will call the print row function we'll pass in one argument our row that's returned to us after we spin the row so going to our print row function we need to set up one parameter our row that we receive it's going to be a list one easy way to print the elements of a list is that we can print pick some sort of separator for each item in the list for example I'll just print a space with strings there are builtin methods we will use the join method then pass in our list or other iterable basically what we're saying using the join method we're going to take our iterable in this case our list join each element by a space a space character here's the result we have three symbols you could join them by a different character I'll add a vertical bar and to your beted amount $1 now we have a vertical bar between each of these symbols we could include more than one character I'll add a space before and after this vertical bar just to space things out I think that looks a lot better and you don't have to but I'm going to add some text decoration before and after I'll add a bunch of asterisks let's see what we're working with not bad so every time we make a bet we get a new set of symbols now what if all three symbols match we need to calculate a payout and give it to the user because well they won so after we print our row we will call the get payout function but we will pass in our row it's a list and our bet how much did we bet we will be returned with a payout which we will add to our balance let's go to the get payout function we're sending two arguments to our get payout function a row and a bet we have to check to see if each element in our row is all the same is it all the same character we can do that with an if statement if our row at index of zero that's going to be the first symbol is equal to row at index one that's the second symbol is equal to row at the second index and that's the third symbol if all three symbols match we have to return the BET multiplied within our if statement we will add another if statement I will check to see if our row at index zero is equal to our first symbol of cherry be sure to place it within quotes because it's a string now the reason I'm only checking if row at index zero is a Cherry Emoji all these symbols are going to be the same if we're within this if statement all of these symbols are going to match we only need to check one of them it could be zero one or two but I'll just add zero they're all going to be the same regardless if somebody has all cherries we will return their bet times three or some other amount you can make the payouts higher or lower else if row at index zero is equal to a watermelon then we will return their bet Time 4 so watermelons are worth more than cherries else if row at index zero is equal to a lemon we will return their bet Time 5 else if row at index zero is equal to a bell let's give them times 10 return bet time 10 else if row at index0 is equal to a star that's worth the most we will return their bet times 20 make sure we're not within our if statement anymore if all three symbols don't match within our list we don't want to give the user anything they lost that spin we will return zero that's all we need for the get payout function scrolling back down after receiving a payout it's returned to us from this function we'll check to see if our payout is greater than zero that means they want to spin I will print I'll use an F string you one I'll add a placeholder precede this with a unit of currency I'll use dollars we'll display the payout else if they did not receive a payout that means they lost that spin we will print sorry you lost this round then take our balance this is our original balance plus equals our payout in most cases the payout is going to be zero but if the user wins something we will add that to the balance okay let's do a test run I will bet $1 sorry you lost this round and my current balance is 99 let's bet again I'll just keep on doing this until I win we're going to lose more times than what we win okay see I got all Bells it says you won $10 once somebody runs out of money we want to stop them from playing or if they would like to exit we'll create a variable of play again we will accept some user input do you want to spin again we'll add y for yes /n for no if our variable of play again does not equal a character of capital Y then we will break to break out of this Loop let's do a test run enter your bet amount I'll just bet a dollar do you want to spin again if I type in anything besides a capital Y we will exit I will type in no then we exit and to your bet amount I'll bet a dollar if somebody were to type in a lowercase y that doesn't register we'll make it uppercase by following our input with the upper method to make it uppercase place your bet a dollar hey I won I won $3 do you want to play again I'll type in a lowercase y yes I would like to play again but I did not hold shift in order to make this a capital Y that will still register and our current balance is $12 we're ahead currently place your bet amount I'll bet $10 we lost this round I will press n because I don't want to play again then we exit so at the end of our program I will print I'll use an FST string game over your final balance is I'll add a placeholder pick a unit of currency I'll pick dollars display our balance then I'll just add some text decoration before and after to make it all look nice okay let's let's play this one last time enter your bet amount I'll bet a dollar sorry you lost this round do you want to spin again yes I do I will bet $5 you lost spin again yes I will bet 10 20 again I'll bet 20 I keep losing I'm running out of money guys hey I won $10 though do you want to spin again no game over your final balance is $13 that's why you shouldn't gamble you tend to lose more money than what you gain all right everybody so that is a slot machine program you can write using python