hey how's it going everybody it's bro here hope you're doing well and in this video I'm going to be teaching you guys how to create your own custom exceptions also known as userdefined exceptions there is a previous video called exception handling in this playlist so make sure you've seen that one before moving on to this video and at the end of this video we're going to be creating a project where we will verify somebody's edge for some sort of like fake membership and if they are under a certain age then what happens is that our custom exception will be thrown so that's it let's get started before you reach the end of this video make sure to LIKE comment and subscribe so that we together can challenge and defeat the mighty YouTube algorithm hey welcome back everyone so for this video I'm going to teach you guys how to create your own custom exceptions also known as userdefined exceptions so there's a video in this playlist called exception handling or something like that so you want to be sure to watch that before you watch in this video so just as a reminder an exception is an event after execution that disrupts the normal flow of a program so a few examples we've covered in the past where arithmetic exceptions if somebody divides by 0 for instance or an array index out of bounds exception and then file not found exception if we're working with files and we can't locate a file so we can create our own custom exceptions that can handle something very specific for our programs so a few ideas that I thought of where maybe like a duplicate email exception if somebody's signing up for an account and they're registering with an email and we do a database query and then that email already exists we can create a duplicate email exception to let the user know that that email already exists or maybe if somebody's paying with a credit card and they enter in invalid information we could create an exception called invalid credit exception I'm just making these names up by the way they're not actually exceptions but they're descriptive of what they can do and then one that we'll be working on for this project is age exception where maybe if somebody signing up for a membership or something online and if they're under a certain age we can throw a age exception and that'll let the user know that hey you're not old enough to sign up for this membership so that's just a few examples of custom exceptions that we can make there's all tons of different exceptions that you could do for very specific situations so let's get started what we're going to do is to create a new class so if you're using eclipse go to file new and then class and then we will call this the name of whatever exception we want so I'm just going to call this age exception and then we'll click finish now you're going to want your custom exception class to extends the exception class so this exception class is going to be the parent class for the child age exception or whatever else you called this class so we're going to set up the constructor for age exception so we're going to type in age exception parentheses and we're actually going to set up a parameter maybe a string and we'll call this message so if this exception is thrown we're actually going to display a message such as you're not old enough to sign up for this membership or something like that so within the constructor for your age exception class or whatever else you called this you're going to call the super constructor class so super and then we're going to send a message to here to actually take care of this message and that's it that's all we have to do for this class so just a quick summary of what we did here this age exception class if this exception is thrown we're going to pass a message that says something like you are not old enough to sign up and we're immediately going to take this message that's passed in and send it to the super constructor for the exception class and that's going to handle exceptions like it normally would so that's all that this class does we're going to do everything else within our main class then so let's accept some user input let's set up a scanner and we're going to ask the user for what their edges so we'll set up a scanner first we'll just say scanner and we'll call the skin equals new scanner system dot in and then we'll need to import something so make sure you have this import and then we'll create a prompt and we will have the user enter their edge so enter your edge and we'll place this within a variable and we'll call this edge so int age equals scan dot next int okay the next step we're actually going to create a method to check our edge so we'll call this method check edge and we're going to pass in the edge variable so with this check edge we're going to surround this with a try block and we're going to catch exception e and then we'll just print out a message so system dot out dot print line a problem occurred and then it's going to list what exception was thrown so we'll just say plus e which is the exception object now we need to create a method called check edge so it actually does something now outside of your main method we're going to create another method so this is going to be a static method it's void it won't return anything and it's called check edge and it's going to have one parameter set up it's going to accept an integer and we'll call it edge now we're going to have this method throws age exception and then we need a set of curly braces now with our check age method that throws age exception we're going to list the condition which will throw it new age exception so what we'll check is that if age is less than 18 then we're going to throw new age exception so if age is less than 18 what we're going to do is throw new than the name of the exception here so age exception in this case and then we'll pass in a message because we have it set up so this accepts a message as a parameter so maybe we'll add a new line character plus a message such as you must be 18 or older to sign up so if they're not less than 18 they're either 18 or greater than so maybe we'll put an else statement that says system dot out dot print line you are now signed up and that's it let's run this enter your age let's say that I'm 18 years old so that's the minimum requirement and it says you are now signed up so since we used this check edge method and our age was not less than 18 we used this else statement and no exception was thrown then now let's try it again so enter your age let's say that we're 12 years old trying to sign up and it says a problem occurred and it lists the exception that we have the age exception that we made and you can see that it occurs here it just does a print line of a problem occurred and it displays the exception object and here it throws the new age exception and it displays our custom message that we want to display to the user or it says you must be 18 or older to sign up so that's basically custom exceptions also known as userdefined exceptions so you'll create a custom exception for something specific in your own program and then you'll probably want to have a custom method that will throw that specific exception and within that your method that throws at that custom exception what you'll do is usually list some sort of criteria or condition where that exception is thrown or not thrown depending on how you want to write your program but yeah that's the basics of userdefined exceptions so if you would like a copy of all this code I'll post it in the comments down below and your assignment is to create a method that throws some sort of custom exception you made and then post it in the comments down below but yeah that's the basics of userdefined exceptions in Java hey you yeah I'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro