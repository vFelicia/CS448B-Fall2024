hey everybody in this topic i'm going to show you how we can pass a struct to a function in c plus suppose we have a struct the identifier of the struct will be cars then we'll create some members related to cars how about a model standard string model a year interior then a color standard string color then let's go ahead and create two car structs how about car car one car car two then we'll assign the members car one dot model pick a model of a card that you like then a year and a color let's do the same thing with card two car two dot model car two dot year car two dot color let's pick some different data that'll work suppose we have a function to display the members of a car void how about print car we're printing the members we'll need some parameters the data type of what we're passing in are car structs so we'll list that as the data type then some nickname for the argument that we receive how about just car then i will display the members standard output car dot model should probably add a new line too then do the same thing with year and color car.ear car.color let's test this by printing car 1 print car 1 we will pass the name of a struct as an argument then i think we're just missing a function declaration so if you're missing that be sure to add that there now let's run this okay here's our car mustang 2023 and the color's red now with structs they're passed by value rather than pass by reference if we pass a struct as an argument what we're doing is creating a copy of the original struct to demonstrate that let's display the address of car 1 before and within the function standard output address of operator car1 i'll add a new line then let's do that within the function too the parameter name is car not car one there so let's try that so these addresses are different when we pass the struct to a function the function will create a copy of it it's passed by value we're displaying the members of the copy rather than the original if you need to work with the original struct you can use the address of operator we're passing a reference to the original car struct then be sure to change that within the function declaration as well so let's take a look at the addresses now yeah these addresses are the same car 2 is feeling pretty lonely so let's print car 2 as well print car pass in car 2 as an argument to this function so we should have car 1 and car 2. this time let's change one of the members within a function let's create a function to paint car paint it a different color paint car there will be two arguments an address to a car as well as a color which will be of the string data type be sure to add a function declaration if you're missing it then within this function we will take our car dot color equals the new color that we receive now before we print our cars let's paint them a different color paint car we have two arguments this time a car struct and a new color let's paint our mustang silver then let's paint cartoon maybe gold then let's display this okay our mustang is now silver and our corvette is now gold so if we didn't use the addressov operator when painting our car let me show you what happens our cars are still the original colors red and blue what we did within this function is that we created a copy of our car strucks and changed the color of the copies rather than the originals so if you need to make any changes to the original you would want to use the address of operator so that's how to pass structs to functions you can pass by value which can be expensive or you can pass by reference your assignment if you choose to do so is to post a function that accepts a struct as an argument and that's how to pass structs to functions in c plus