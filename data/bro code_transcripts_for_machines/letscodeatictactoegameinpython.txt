hey what's going on everybody it's bro hope you're doing well and in this video i'm going to show you all how we can code a basic game of tictactoe using python so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running all right ladies and gentlemen let's create a game of tictactoe to begin we'll need to import tkinter as well as random and let's begin by defining all of the different functions that we'll need let's define a function named next turn for the time being we'll just write pass we'll fill this in later on we'll need a function named check winner a function named empty spaces to check if there are any empty spaces left and lastly a function named new game that will launch a new game for us okay we have our four functions now let's create a window let's create a window window equals tk and at the end of our program we need to use window dot main loop and when we run this we should have just a small basic window let's set the title window dot title let's set this to tick tack toe we'll need a list of players players equals x comma o and with the way that we're writing this program we can swap these symbols with a different character for example we could say dollar sign is playing against the at symbol too but i'll demonstrate that later let's keep it as x and o for now now we need to select a random player to begin player equals random dot choice and pass in our list of players now we'll need nine buttons i'm going to create a 2d list of buttons named buttons and this will be the first row this will be the second row for the time being i'm just going to initialize these with zero for everything and put these all within a list so we have a 2d list named buttons and to better visualize this i'm going to place each row on a new line so that's what our board is going to look like we have a 2d list named buttons we'll need a label to display whose turn it is label equals label i'll set the text equal to player plus the word turn and i'll set the font to font equals pick whatever font that you want and i am going to pack this label label dot pack and set the side equal to top and let's run this just to test it okay looks like it's x's turn let's try it again oh stern okay that's fine for now let's create a reset button reset underscore button equals button i'll set the text equal to restart it's going to be a restart button or reset button pick a font maybe i'll set the size to 20 and we'll need a command command equals new game when we click on this button it's going to call this new game function for us and we need to pack this button reset button dot pack and i will set the side equal to top okay let's see if that appears alright so we have our turn order a label that will display whose turn it is as well as our reset button now we'll need to create all of the buttons to add to our 2d list named buttons but i'm going to place these all within a frame frame equals frame we're adding our frame to our window and i'm going to pack this frame frame dot pack now we'll take our 2d list of buttons and add a button to each spot and i think the best way to do this would be to use nested for loops we'll have an outer for loop in charge of the rows four row in range three remember we only have three rows and three columns the inner for loop will be in charge of the columns four column and range three and inside the inner for loop we're going to create a new button we'll say buttons at index row and column we have two indexes because we have a 2d list so buttons at row whatever column whatever depending on what iteration we are within our for loops we'll create a new button and we'll set the text oh first add this to the frame almost forgot about that we're adding our buttons to our frame and adding the frame to the window now we'll set the text equal to a blank set of quotes because we don't want any text we'll set the font i'll just copy what we have here for label for a width let's say five and a height let's say two i'm going to hit enter just to move down to the next line because we still have a few more things to fill in okay we'll need a command command equals and i'm going to set this equal to a lambda function so we need some arguments actually i think i'll pass in some keyword arguments row equals row and column equals column then our expression is next turn and we will pass in row and column now we also need to add our buttons to our frame buttons at index of row and column we'll use the grid function for this grid row equals row and column equals column and it's always a good idea to test your program after making any major changes so we should have our label our reset button and our grid of buttons now that the main body of our program is complete let's head to the next turn function and remember that we're passing in row and column as arguments so we need to set up those parameters within the next turn function bro and column and the first line within here we would like access to our player so let's say global player so that we have access to it and we're first going to check to see if the button that we click on is empty so buttons at index of row and index of column to access the text of a button just add a third index operator and type in text if the text of our button that we click is equal to a set of quotes that means it's empty and when we call check winner winner winner chicken dinner and it's false there is no winner then we will fill in that button with our player our player's character whatever it is x or o or whatever we decide so within here let's check to see if player is equal to players at index zero that is our first player and remember that we created a list of players and we're planning on swapping these later we could say like if player is equal to x but that would make our program less flexible if we want to pick like a different character instead of an x so if player is equal to player at index 0 whatever symbol is there then we are going to take buttons at index of row index of column take our text and set it equal to our player and we should check to see if there's a winner after filling in this button if check winner and we still need to fill in this function returns false then we will switch players player equals players at index of 1 and label dot config text equals players at index 1 plus the word turn so what we did here is that we're checking to see if after placing our text of our player on that button that we click if there is no winner then we're going to swap players player equals our next player and we're configuring our label so that it displays the next player's turn players at index 1 turn now what if there is a winner let's say else if check winner is true then we will take our label dot config and set the text equal to players at index 0 plus the word wins now let's add another else if statement else if there's a tie let's say check winner is equal to the word tie because we are already using false and true then let's change our label and i'm just going to copy this text equals the word tie okay so let's create an else block so that goes right here so if it's not player one's turn player at index zero then it's our other player's turn player at index of one so oh then so we just need to mostly just copy this text and change a few things around so i'm going to copy all this and within here let's set player equals players at index 0 then players at index 0's turn players at index 1 wins and that is it now our next turn function is now complete let's head down to the check winner function and we need to check all of the different win conditions and return it true if somebody won false if there is yet no winner and the word tie if it's a tie so let's check all of the horizontal win conditions so we can do this using a for loop for row in range three we need to check the text of each button in each row if buttons at index of row and column index of 0 we'll use the index operator to check the text is equal to the next button in our row so i will copy this and change zero to one check to see if that is equal to buttons at index of row index of two and i'm going to check to see if this is all not equal let me move this a little bit to a space so if that is the case that means somebody won so if all of these buttons are the same and they are not equal to an empty space that means they're all the same so let's return true that means that somebody won now we need to check the vertical win conditions if anybody has the same character all the way down a single column this next for loop is going to be four column in range three for the first button this will be button at index of zero and column then 1 and column let me just paste that and 2 and column now we need to check the diagonal win conditions so if buttons at index 0 0 that's the top left corner if the text of that button is equal to buttons at indexes of 1 one is equal to the indexes of button two two and if all of this does not equal an empty space then return true so there is a winner and we have one last win condition to check that is the other diagonal win condition so we just need to change some of these indexes around so we have zero two one one and two zero i'm going to change this statement to an else if statement now we need to check to see if there's any spaces remaining else if we will call the empty spaces function which we have yet to fill in if this returns false then we will return the word tie and lastly else else there is no winner and no tie so we will return false and that is it for the check winner function let's test this so this doesn't account for a tie quite yet but we can fill in some of these spaces looks like x wins and we can no longer fill in buttons and we cannot start a new game quite yet either within the empty spaces function let's create a local variable named spaces and set the sql to nine whenever we call this function for row in range three and we'll create a nested for loop for column in range three we will check the text of each button if buttons at indexes of row and column and we will check the text to see if it's not equal to an empty space if that is the case spaces minus equals one then we'll write an if statement if spaces as in spaces remaining is equal to zero that means we will return false and there are no spaces left else we will return true okay let's test it so this time i'm trying to get a tie yep looks like it's a tie this next part's optional but i would like to change the color of each button for the winning combination so within our check winner function underneath the first win condition i'm going to take buttons at index of row and index of zero use the config method and set the background color equal to let's say green and i'm going to repeat this process for the other buttons within this win condition so that is row zero row one and row two i'll copy all of this paste it and switch some of these around so these should all be matching so zero and column one and column and two in column okay so we have zero zero one one and two two and one more zero two one one and two zero now when we have a winning combination the color of the buttons involved in that combination are going to change to green now if there's a tie let's change all of the buttons to let's say yellow so i'm going to write nested for loops for this four row in range 3 4 column in range 3 take our buttons at row and column and change the background color to yellow or some other color of your choosing so if there's a tie they should all be yellow i'm trying not to win here it's actually more complex than what i thought yep it looks like it's all a tie and the last thing that we need to do is to fill in the new game function so that we can begin a new game so let's say global player we would like access to our player from inside this function and set player equal to a new random choice random dot choice and pass in our list of players and we will change our label label dot config and set the text equal to player plus the word turn and we also need to reset all of our buttons for row in range three for column in range three buttons at index of row and index of column dot config text equals a set of quotes so it's empty and we'll change the background color fact was previously so the default color for buttons is actually hexadecimal f 0 f 0 f so this function will begin a new game for us and let's test it to be sure i'm going to start a new game reset reset i'll actually try and win this time and reset okay so it looks like the new game function is working now another thing that you can do too is that you can change the players around let's say we would like to play as dollar sign and at sign so this program is flexible enough so that you can change the icons of the players all right everybody so that's a basic game of tictactoe for python if you would like a copy of this code i will post all of this to the comment section down below but yeah that's how to code a basic game of tictactoe for python hey you yeah i'm talking to you if you learned something new then help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you