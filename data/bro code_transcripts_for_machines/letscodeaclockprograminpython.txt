hey what's going on everybody bro here hope you're doing well and in this video i'm going to teach you guys how we can create a clock program in python so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running all right my fellow bros in this video we're going to be creating a clock gui program so we'll need a few imports from tk enter import everything and from time import everything as well we'll need a window window equals tk followed by window.main loop and in this program we're going to be creating three separate labels one for the time another for the day of the week and another for the date so let's begin with just displaying the time and work on the day of the week and the date later so let's create a label for the time called time label equals label we're adding this to the window and let's set the font because we can i'm going to choose maybe ariel and then a size of 50 so that this is somewhat large i'm going to change the foreground color that is the font color and i will pick a hex value of green so that is zero zero f zero zero but feel free to pick whatever color you want and i'm also going to set the background color and you can pick a hex value or a color name i'm just going to say black and then i am going to pack this label time label dot pack now we're going to call a function and we'll call this update and we'll define what this does after every second has passed we will use a recursive function to keep on updating the time every one second or so so let's define what this function does def update there is a function within the time module called strf time which we can use to return the current time and format it however we want so we're going to actually place this within a string variable and we'll call this time string and this function is strf time i'm actually going to go to python's website just to give you an example of how this works here we are on python's website and this is the strf time function and this converts a tuple representing a time as returned by gm time or local time to a string as specified by the format arguments so when we call this function we can pass in directives as arguments based on what we want to display if we want to display the current time there is a few directives that we can pass in so let's say that we want a 12hour clock as represented by a decimal number between 1 and 12 well we would pass in percent i as an argument if we want the minutes that would be right here percent m and if we want the seconds that is percent s so we're going to pass in these directives as if they are arguments so within this function we'll pass in those format specifiers or directives so i want percent i followed by percent m and percent s all right uh but these also have to be within quotes so don't forget that because i just did okay this will display the current time oh then we also have to update our time label so time label dot config text equals our time string because remember that this returns a string of text text equals time string so this will display the current time and right now it is six in the morning or so however we just get one long jumbled number so it would be a good idea if we separated some of these numbers so within our strf time function i'm just going to add some colons to separate these values and this will display the current time it is currently 6 46 in the morning let's add am or pm to the end of this so the directive for that is percent lowercase p 6 46 am now how do we update this label every one second to reflect the current time well that's a good question and i'm glad you asked it so we're going to use the time labels after function we pass in a delay and then a function that we want to call after that delay so let's say we want to call this function update every 1000 milliseconds or one second so we'll pass in the delay as an argument 1000 milliseconds and the function that we want to call and we're going to perform what is known as a recursive function we're going to call a function within itself so after 1000 seconds we're going to call update again and it's going to repeat the process it's going to return the time and format that time and update our label with the new time so what ends up happening now is that our clock is going to update every 1000 milliseconds now let's add a few other labels let's say the day of the week i'm going to copy what we have here and let's rename this as day label but i probably don't want this to be the same size for the font let's say ink free because i like that font and a size of maybe 25 and i'll get rid of the coloring it's the same process as before really so let's replace time string with day string the directive for strf time to display the day of the week is percent a and we're going to replace time label with day label text equals day string and this will display the day of the week and it is currently wednesday and if we want to display the current date we can create a label and we'll call this date label and i'll make the font slightly bigger maybe 30. we'll copy what we have for our day string and rename this as date string so we have a few options for the date i want to display the name of the month the day and then the year so that would be percent capital b percent lowercase d i'm going to add a comma to separate the day and the year and percent capital y and then i want to set the text of my date label to my date string so that this will now display the current date there's just one quick change that i think we should make right now we have three different labels a time label a day label and a date label and right now we're using the after function of the time label so since we have all of these different labels i think we should replace time label with our window because our window has an after function as well so that after 1000 milliseconds has passed we can update the time the day of the week and the date all right so that's the basics of creating a simple clock program in python if you want a copy of all this code i'll post all of this in the comments down below but yeah that's the basics of creating a clock in python hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you