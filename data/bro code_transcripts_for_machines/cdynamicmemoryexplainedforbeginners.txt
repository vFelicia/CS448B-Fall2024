hey everybody we finally made it to dynamic memory dynamic memory is memory that is allocated after the program is already compiled and running to allocate dynamic memory we use this new keyword it's an operator it allows us to allocate memory in the heap rather than the stack it's useful when we don't know how much memory we'll need it makes our programs more flexible especially when accepting user input because we have no idea what the user is going to type in here's an example we'll start with a basic integer variable but we'll allocate memory in the heap rather than the stack by using that new keyword i'll create a pointer int the reference operator p num now it's good practice when you declare a pointer but don't assign it right away to give it a value of null meaning no value to allocate memory in the heap rather than the stack i'll take my pointer set the sql to use the new operator then a data type i'll use up enough space in the heap for one integer the new operator will return an address we're storing that address within pnum because it's a pointer it's pointing to a memory location where we're going to store an integer later on in your program whenever you would like to store a value we can use the dereference operator our pointer then assign some value like 21 i don't know just for fun i'm going to display the address that's stored within the pointer address p num then i'll add a new line as well as the value value dereference operator p num our pointer is storing this address and at this address in the heap that address contains this value 21. now it's very good practice if not expected whenever you use the new operator you'll also want to use the delete operator when you're no longer using that memory space so at the end of this program or earlier if you choose we will delete our pointer delete p num we're freeing up the memory at this address if you don't you may cause a memory leak and it's best to avoid that whenever you use the new operator you probably should be using the delete operator someplace within your program here's another example we're going to dynamically create an array let's create an array of grades char then we'll need a pointer the reference operator p grades set this equal to null if we're not going to assign this pointer right away then to dynamically create an array we will take our pointer set the sql to new the data type char if this is an array we add a set of straight brackets within the straight brackets we will list a size if i have five grades to enter in i would type in five but if we already know the size of the array before we even run the program we might as well do that normally like create a normal array there's no point to allocating memory dynamically we would want to do that when we don't know what the size is going to be so i propose we ask for some user input let's say int size we'll create a prompt standard output how many grades to enter in standard input size will dynamically allocate enough memory in the heap depending on how many grades the user has to enter in i'll just create a for loop so that we will ask the user to enter in some grades and i equals zero i will continue this as long as i is less than size increment i by one standard output enter grade number i plus 1 because i will be 0 to begin with and i'm just going to add colon space afterwards standard input p grades that's our pointer now we can either add plus i or use those straight brackets at index of i either way let's display all of the grades and i equals zero i is less than size i plus plus standard output p grades at index of i i'll separate each with the space and remember if we no longer need this array we should delete it to prevent a memory leak if we have to delete an array we'll add a set of straight brackets after delete then our pointer p grades and let's try it how many grades to enter in so we don't know what the user is going to type let's say six grades enter grade one a b c d f a and here are the grades so that's why dynamic memory is useful it's memory that is allocated after the program is already compiled and running we use the new operator to allocate memory in the heap rather than the stack it's useful when we don't know how much memory we will need it makes our programs more flexible especially when accepting user input so that is an introduction to dynamic memory we'll have more practice with this in the future so don't worry if you would like a copy of the code that we worked on i'll post that in the comments section down below and well yeah that's an introduction to dynamic memory in c plus plus