yo what's going on everybody it's bro hope you're doing well and in this video i'm going to demonstrate the tree view control in java fx so sit back relax and enjoy the show okay tree views a tree view is a control that displays hierarchical data in a treelike structure so this control is found underneath the controls drop down menu just drag and drop it place it anywhere and i'm going to give this tree view a unique id let's call it tree view now when we select tree items from our tree view we still need to populate our tree view but we would like to invoke a method whenever we select an item so underneath the code drop down menu go all the way down to on context menu requested and we can call a method when we select an item so we'll need to place a method name here and here on mouse clicked now that will take care of setting up our tree view control however we still need to populate our tree view with data and this data is known as tree items and these tree items will be arranged in a hierarchical structure so let's save and then head to our controller class as always refresh your fxml document and we need to declare a select item method so let's do so within our controller class public void select item okay and let's run it currently we just have an empty tree view with no data within it so we need to populate our tree view with data and possibly one of the best places to write that code would be within our initialize method but we need to implement the initializable interface so controller implements initializable interface and be sure to add any unimplemented methods and i'm just going to move this to the top because i like it at the top okay let's use some fxml injection to inject our tree view private tree view tree view at this point we need to create tree items to add to our tree view let's begin with a root item so let's declare a tree item and we're going to list a generic data type of strings if you're working with files you'll probably list files here but let's just work with strings because they're easy so let's call this tree item root item equals new tree item and we are going to pass in the text of this tree item let's say files like it's some sort of big directory of some sort okay then we need to add this root item this tree item to our tree view and let's take care of that near the bottom so at the bottom we'll type tree view dot set root and pass in a tree item we will pass in our root item now when we run this we should have our tree item within our tree of view of files now here's the plan we're going to create more tree items and add these tree items as children to our root item maybe think of these like branches if files is the root we'll have a root branches and then leaves so let's create more tree items i'm just going to copy this to save some time and paste it let's create a branch item i'll call this branch item one and what type of file should we have let's say we're working with pictures let's create maybe two more branches so branch item one two and three these will be kind of like different folders so we have a folder for pictures how about videos and music now we need to add all of these branches to our root item and here's how type the name of your root item dot get children followed by dot add or add all and we will pass in branch item one two and three now after running this within our files tree item we have pictures videos and music but why stop there these children can have their own children so let's create more tree items so let's copy all these and paste them let's call these leaf item then give them a number so one through six would be good okay so within pictures let's say we have picture one and picture two within videos we could have video one and video two and within music music one music two now we need to add these leaf items to each branch item so it's kind of the same process as before really okay we have branch item one two and three okay within branch item one let's add leaf item one and two and we can get rid of that okay within branch item two we'll have leaf item three and four then within branch item three leaf item 5 and 6. and that should be good for this example so we're adding a bunch of leaves to our branches and adding the branches to our root it kind of resembles a tree that analogy so let's try it so we have files then pictures videos and music now when i select one of these tree items we will invoke this select item method but we need to get the current value of the tree item that we select here's how we'll declare a tree item to store the current tree item that we select so type tree item list your generic type that you're working with we're just working with strings for this example let's call this item equals tree view dot get selection model followed by dot get selected item so whatever item that you select we will store within item and let's display the value system.out.printline item dot get value method now there's one issue that we're going to run into now here's the problem if i was to navigate through my tree view by clicking these arrows we will encounter a null pointer exception however if i was to click on these tree items this will work as intended we will get the current value of each tree item that we select now the reason that we ran into a null pointer exception is because when we select these arrows we are still invoking the select item method after invoking the select item method if there's no item to get we will store null with an item then by calling the get value method of item this will cause a null pointer exception so let's check to see if item does not equal null with an if statement before calling the get value method so let's write an if statement if item does not equal no then we will call the get value method of item and let's try it again now if i was to navigate through this tree view we do not run into that null pointer exception and we can select each tree item from our tree view and get the current value stored within you can also add icons to each of these tree items i'll just show you one for files but you can copy the process for the rest so within my source folder i have this png file named folder icon and it's about 25 by 25 pixels so you'll need something small now when you construct a tree item you can also pass in an argument for a new image view so after we create files let's pass in a new image view and then within the constructor of our new image view i will pass in a new image and list the file name or the file path this is folder icon dot png next to this tree item i have the intended image that i would like to use so to add an image to a tree item when you construct your tree item you can pass in a new image view then an image then the file name or the file path here's one last trick for you all so to initially hide this root item and display each of these children we can use the set show root method of tree view so type treeview dot set show root and we can pass in false now when we display this tree view the root item is hidden and all of its children are instead displayed so that's another option available to you too well everybody that is the tree view control it is a control that displays hierarchical data in a treelike structure if you would like a copy of all this code i will post this to the comment section down below but yeah that is the treeview control in javafx