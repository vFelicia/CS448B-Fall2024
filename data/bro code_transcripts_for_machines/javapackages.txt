how's it going everybody it's bro here hope you're doing well and in this video I'm going to be teaching you guys about packages in Java so sit back relax and enjoy the show if you find this video helpful please remember to Like comment and subscribe your support will help keep this channel running have you ever wondered what we're doing exactly whenever we added import to the top of our program well today is your lucky day because we're going to uncover this mystery so a package is a bundle of related files that we can use in our programs so with our main class I have this class within our default package now we can create another package within our project folder so let's create a package let's say tools so we're going to right click and we are going to create new package and I'm going to call this tools maybe it contains some useful tools that we can use and click finish so now within my source folder I have a package called tools and what we can do with this package is that we can actually add some classes or other files to this package so I'm going to create a new class and I'll call this class maybe tool box and click finish all right so we have this class called it toolbox and notice that at the top of this program it says package tools so if I actually were to take this out it's actually going to yell at us and we'll have an error basically because there's an expected package so if you have some class or files in another package that's not your default package you'll probably need to specify what package it's in at the top however if you're working within the default package you actually don't need to do this now that we have our tools package created let's create an instance of this toolbox class so within my main class I'm going to type in the name of the class so that's tool box and let's call this toolbox with a lowercase T equals new tool box okay so you can see that we have a problem and it says that toolbox cannot be resolved to a type that's because we need to import this package tools so it's kind of like what we do with any other imports type in import than the name of the package which is tools then we can import either everything or something specific so let's import this toolbox class so tool box semicolon and you can see that that error went away and we can now create an instance of this toolbox class that's located within our tools package now in past lessons whenever we imported a package for example icons related to Java X's graphical user interface of swing what we've been doing is importing a package within our JRE system library and this is something that we had downloaded during Lesson one when we installed the JDK the Java development kit so let's actually explore this JRE system library and see if we can find this file related to icons so it was import Java X dot swing daikons so that's located within our JRE system library and it's within this jar file called Java desktop and there should be a package for Java X dot swing located right here so here are all the related files for Java X dot swing and icons should be right here so let's actually take a look at this this is more specifically an interface so this is everything that is written for the icon class the icon interface so there's not really much here there's a few methods and a bunch of notes by the developers so whenever we import something at least in past lessons we've been importing these packages from the JRE system library located within our project folder so that's the basics of packages in Java if you want a copy of this code well really there's not much here but I'll post this in the comments anyways well yeah that's the basics of packages in Java hey you yeah I'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro