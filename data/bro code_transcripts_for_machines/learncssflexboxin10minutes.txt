hey what's going on everybody in this topic I'm gonna give you an introduction to using flexbox in CSS in about 10 minutes or so why don't you go ahead and sit back relax and enjoy the show all right let's jump in everybody we have a little bit of setup to do we'll create a development with the class of container within our container class we'll create a few developments we'll create four these will be boxes for the class I will set that to be box the first inner development will have an ID of box one the inner text will be one let's copy our inner development pasted three times for a total of four change box 1 to box two for the next element then three then four and that's all we need for our HTML file let's go to our style sheet we'll style our boxes we will select the Box class I'll set the width to be 150 pixels same thing goes with the height let's change the background colors we'll begin with the ID of box one I will set the background color to be something red I'll use hsl values because I like them let's go with that then let's color box two box two let's make that yellow box three will be green then box four will be blue let's change the font size real quick font size 8 em then text align Center I'll add a border radius just to round the corners border radius 15 pixels and that is all the setup we'll need we are ready to begin with our container class we can Flex all of the elements within this container meaning all of these inner div elements so we'll take our container class dot container then set the display property to be Flex you can see that the positioning of these elements has already changed by default the flex Direction property is set to row you can see that there's no apparent change when I refresh the page for a row but in reverse order we can set Flex direction to be row reverse so now one is on the right hand side followed by two three then four to arrange these elements within a column we can set Flex direction to be column or even column reverse then at the bottom we have one then two three then four so that's Flex Direction let's delete the flex Direction property then we have the justify content property justify content sets the alignment on the main axis think of the xaxis by default it's Flex start there's no apparent change flex and would justify the content at the end see we're beginning with four then three two and one when we had Flex Direction set to row reverse it was one two three four but in this case it's four three two one then there's Center if you need to Center align these elements on the main axis we can place the extra space evenly between each of these elements by setting justify content to space between and if I were to expand this page the space between them is increasing you also have space around the area outside of these elements is also included now with space around then we have space evenly all right and that is the Justified content property we can justify elements on the main axis then there's the cross axis think of it as the yaxis up and down what we'll need to do in this example is expand our container just to show you the size of the container I will add a border to The Container class border 10 pixels solid black here's my current container I will increase the height of the container let's set the height to be 90 viewport height units so this is the total size of my container now ninety percent of the height of the web page what we'll use now is the Align items property which is used for the cross access align Dash items the default is flex start there's no change flex and we'll place these elements at the bottom of our container then there's Center align item Center that will place them in the middle of the Cross axis then there's Baseline so with Baseline the text is going to be aligned they're all the same size though we can't really notice the difference with box one let me change the font size font size 1 em you can see that the number one is aligned with the rest of the characters so if I were to increase the font size you can see that they're still aligned but let's eliminate that font size property let's delete our align items property we'll need more elements let's cop BR4 inner developments paste them we should have a total of eight one two three four one two three four you can see that these items are getting squished now they're all being compressed we can set the flex wrap property so with our container I will set the flex wrap property to be wrap these elements will now wrap if there's not enough space if I were to expand the size of my container there's now enough room but if we run out of room they'll be pushed down further down the page by default Flex wrap is no wrap otherwise there's rap reverse now they're in reverse order let's use flex wrap now Flex wrap is used along with another property named align content align content if I were to set align content to be Flex start all of that space between the first row and the second is now gone then there's Flex end Center space evenly then space between use any combination of properties that I've demonstrated let's keep Flex wrap as wrap but I'll use flex start you can also add a gap between the rows and the columns between each of these elements let's set a column Gap column Dash Gap to be one em that adds a gap between each of the columns for the rows that would be row Gap I'll set that to be 1em you can also use pixels as well so here's 2 em 3 let's delete our Gap properties all right let's also delete the extra four boxes that we have we're also going to get rid of the flex wrapped property as well as align content there's also the Align self property that can be applied to single elements so with box one I will set a line self to be start that's the default this element will be aligned at the top of our container if I were to change line self to be Center this single element is aligned in the center of my container on the cross axis then we have end that will align at the bottom the Align self property can be applied to any of these elements let's do that with number two line Dash self at the start there is no change Center end okay let's delete the Align self property we can use order to change the order of these elements with box one I will set the order to be one that will place number one at the end negative one would be the beginning which it normally is already with box 2 I'll set the order to be one that will place two at the end but if I set it to be negative one it's now at the beginning all right everybody so that is a quick introduction to flexbox there is a lot to talk about and that is all the time that I have for this topic and well that's an introduction to flexbox in CSS