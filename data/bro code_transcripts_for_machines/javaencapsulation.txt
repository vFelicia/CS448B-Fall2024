hey what's going on everybody it's your bro hope you're doing well and in this video i'm going to teach you guys about encapsulation in java so sit back relax and enjoy the show make sure you like comment and subscribe one like equals one prayer for the youtube algorithm let's talk about encapsulation this is the concept of attributes of a class being hidden or private they can be accessed only through special methods called getters and setters and you really should make attributes private if you don't have a reason to make them public or protected in this tutorial series i don't just for learning purposes i want to make things as less complicated as possible so i tend to not use encapsulation but for your own programs you probably should just to add a layer of security so i have an additional class for this example called car let's make some private variables so let's say we would like a make a model and ear so i want to make these private so that only this class can access them so private string make private string model and private int year let's also set up the constructor of the class while we're here so the parameters are make model and here string make string model and int here and when we construct a car we'll just say this dot make equals make this dot model equals model and this dot year equals year now let's attempt to construct a car object so car car equals new car what kinds of arguments do we want to pass in we need a make a model and a year so for this car let's say that this is a chevrolet for the next argument maybe a camaro and a year 2021 is good so this will work just fine what would happen if we attempt to access one of these private members like the make the model into year let's find out so system.out.printline i'm going to attempt to print the cars make and let's see what happens well there's a problem the field car.make is not visible that's because this is private all of these variables are private so they are hidden only this class has access to these members make model and year so what can we do to retrieve the value of one of these variables we can use a getter method so that is a special method found within the class that contains these private members that will send the make the model or the year whatever variable you're working with to whatever class is calling that method so we're going to create a getter method for each of our variables that are private make model and year so let's begin with make so this is going to be a separate method it's going to be public the return type is a string and we will call this get then the name of the variable make and all we're doing is returning the make and that's it let's repeat the process for model and year so public string get model return whatever our model is and lastly this is returning an integer and this is get year return year and in order to access one of these attributes one of these variables we need to use the appropriate getter method so instead of accessing this attribute directly we're going to use one of these methods get and we have make model and year so let's get the make of this car and it's going to return chevrolet so it's as if we're asking this class nicely can we pretty please get the make the model or the year of your car so that's one way in which you can access a private attribute you use a getter method and then you can call that method from anywhere basically since we made this public and if you need to retrieve the other private variables of this class you just use the appropriate get method so let's say we want the model so car dot get model and the year car dot get year so this will retrieve all of the private variables of our car object chevrolet camaro the year is 2021 so now how can we change the private attributes of an object well we can use what's called a setter method this time let's attempt to change the year of this car car.year and we'll change this from 2021 to 2022 well the issue that occurs is that the field card.year is not visible since we set this to private so we would need to create a method called a setter to set the year of this card the make the model and the year it's kind of like what we did with our getter methods but these are called setters so let's create a setter method for the make the model and the year so that we can call this method to change one of these values so this is public the return type is void we're not returning anything and we'll call this set and then the name of each variable that you're working with so let's create a setter for the make and we do need one parameter whatever our make is so if we call the set make method we have to pass in a new argument so string make this dot make equals make and actually since we're setting the make here within a setter method we no longer need this line what we could do is call the set make method within the constructor now so this dot set make and we have to pass in our make and let's repeat the steps for model and your set model this will take a string model this dot model equals model and we no longer need to set that within the constructor we'll just call this dot set model and pass in our model and lastly we have the year public void set year this has one integer parameter int year this dot year equals year and we can just call that method this dot set year and pass in our year and now if we need to change one of these values we can use the center method car dot set year and we'll pass in a year like 2022 and then let's display all of these values using our getter methods and now our car is a 2022 chevrolet camaro well that's the basics of encapsulation all we're really doing is making the attributes of our class private so that they cannot be directly accessed from elsewhere within our program if you need to retrieve one of these values you can use a getter method if you need to change or set one of these values you can use a setter method so that you can indirectly either get or set these values and other classes do not have direct access to these values so if you'd like a copy of all this code i will post everything in the comments down below but yeah that's the basics of encapsulation in java hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you