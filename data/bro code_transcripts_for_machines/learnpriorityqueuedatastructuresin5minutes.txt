hey yeah everybody it's you bro hope you're doing well and in this video we're going to discuss priority queues in computer science so sit back relax and enjoy the show hey uh what's going on everybody so priority queues a priority queue is a fifo data structure first in first out however a major difference with priority queues is that before we start polling and serving elements we put them in some sort of order higher priority elements are served first before elements with lower priority so here's an example let's say that we have some student gpas and we'll place them all within a queue and then a priority queue and take a look at the differences so let's create a queue the data type is q and we are going to insert some doubles some gpas i'll name this queue equals new now queues are actually interfaces and we can't implement them directly so we need to use a class that utilizes the queue interface one that i know of is a linked list then finish instantiating it now to add data to a queue we use the offer method q dot offer and then pass in a gpa let's make sure that these are not in order uh how about a 3.0 then the next student has a let's say 2.5 then a 4.0 1.5 and 2.0 okay now let's display the elements of our queue one easy way in which we can do that is to use a while loop and this is our condition we'll continue this while not logical operator q dot is empty method while our q is not empty pull each element and display it so within a print line statement let's use hue dot poll to display and remove each element beginning with the first one and then working our way to the end so this will display the elements within my queue so these are in first come first serve order whatever element we were offered first we are serving that element first if an element was added last well then it's served last so that's a standard queue now with a priority queue we're going to arrange them in some sort of order before we actually pull these elements so let's change our linked list to a priority queue and run this again and let's take a look at the differences okay these are all in order now so if we're working with numbers like doubles these are arranged in ascending order beginning with the smallest element let's pretend that these are grade point averages gpas why might we want to put these in order let's say whatever student performed the worst gets two hours of free tutoring whichever student performed second worst gets one hour of free tutoring and third gets half an hour free tutoring now if you need these in descending order well there's one change that we're going to make within the constructor we can pass in a comparator but that's a little advanced for us and we haven't discussed that yet so there is a default comparator that we can use found within collections collections dot reverse order method so these elements will be in reverse order then in this example let's say that whichever student has the best gpa will receive i don't know a gold medal like the olympics and the second best student will receive a silver medal then a bronze medal and then every student after that i guess will receive nothing but that's okay though they got some free tutoring in the last example okay now let's change the data type let's say that these are now strings and let's put these in standard order so let's change these two strings maybe this student has a b this one has a c a f and what are we missing d if we have a priority queue of strings well then these elements will be in alphabetical order so if we need these in reverse alphabetical order again we can pass in a comparator and then one that we can use is from collections collections dot reverse order and these elements within our priority queue are now within reverse alphabetical order so yeah that's a priority queue think of it like a queue however we first sort these elements based on a certain priority we will pull and serve the elements with the highest priorities first and work our way to elements with lower priority so yeah that's a priority queue if you would like a copy of this code i'll post this to the comment section down below and well yeah those are priority queues in computer science