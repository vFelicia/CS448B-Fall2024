hey what's going on everybody it's your bro here hope you're doing well and in this video i'm going to teach you guys all about combo boxes in java so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running all right all you wonderful people let's discuss j combo boxes this is a gui component that combines a button or editable field and a drop down list we can create a drop down list and select one of a few different items so before we begin here's my setup i have two classes a main class that contains my main method and then a myframe class which extends jframe and implements the actionlistener interface and then within the main class i just created an instance of my frame so within this my frame class i have a constructor this dot set default close operation jframe max and on close we're using a new flow layout and we're going to finish this with this dot pack and this dot set visible set to true this is the standard procedure for us that we've been doing for this gui tutorial series and then we also have an action performed method that will respond to certain events now let's create a j combo box i'm going to place that here so let's first declare this that is j combo box and we will call this combo box equals new j combo box now we have our combo box but we need to populate this combo box with a listing of different options that the user can select so when we construct this j combo box we can pass into the constructor an array of reference data types these can be objects or they can be primitive data types but you have to use the wrapper class let's say that we want a drop down menu of animals and a user can select one of these so a string is actually a reference data type but it has to be an array so we'll create a string array called animals and let's fill this array with some animal names so let's say dog and then cat and then baby bird so with this array of animals we can pass this into our constructor when we create our j combo box and then lastly we just need to add this combo box to the frame so this dot add and we are adding our combo box and then when we run this we have a drop down menu a combo box and we can select one of these items however it currently doesn't do anything so within the action performed method we need to fill in a few things and actually whenever we select one of these items it's actually triggering an event so within the action performed method we will create an if statement if e dot get source is equal to our combo box then what we're going to do well we can do one of a few things but first this action performed method does not recognize our combo box that's because we declared this combo box within the constructor so it's local we need to turn this global by declaring this outside of the constructor so j combo box combo box and we do not need to declare this twice since we're declaring this combo box within the class everything within the class now recognizes this so our action performed method now recognizes this combo box so if our combo box does something then what we could do is get the current selected item so let's type in the name of the combo box combo box dot get selected item and then i'll just print this so let's put this within a print line statement so system.out.printline i'm going to copy this and paste it system.out.printline combobox.getselecteditem however we need to add an action listener to this combo box because it still doesn't return what we want basically so we need to add an action listener to this combo box so let's add that here combo box dot add action listener since this class is implementing the action listener interface we can just pass in this and this will work just fine then so then whenever we select an item from this j combo box it's going to trigger an event and get the current selected item so let's say we want a dog well we have a dog cat and then bird another method that functions similarly to get selected item is get selected index so for now i'm just going to copy this and i'm going to turn this into a comment so we can ignore it and then we're going to use the get selected index method instead so combobox.get index and this will return the index of what we select so this always begins with index zero so dog would be zero it prints zero bird would be two and then cat would be one here's a few helpful methods that you might find useful for combo boxes and in order to use these methods we type in the name of the combo box dot and here's a bunch of the different methods available to you let's begin with set editable and we can set this to true and what this does is that when we set the editability to true we can actually type in something to look for so let's say that i want to select cat i can just simply type in cat or i can select it from this drop down menu and it returns that item that we selected let's go over a few others so we can actually get the item count so that is combo box dot get item count and then we'll need to display this so let's put this within a print line statement so system.out.printline combobox.getitemcount and this prints the current amount of items which is three we can also add an item later so combo box dot add item so we need to pass in an object a reference data type let's pass in a string maybe a horse so with add item this will add an item to the end of this so now we have dog cat bird horse we can also insert something at a certain index so combo box dot insert item at we need an item and an index let's say we want pig for the first item at index zero so let's pass in a string that says pig and then an index zero so this should be at the beginning now however it's not currently selected see pig is at the top but dog was selected so we can actually set the selected item at a certain index when this runs so in order to do that it's combo box dot set selected index and you pass in an index so if i were to set this to zero it's always going to select index zero when this first so now our item pig is now selected because we have set selected index set to zero and our item pig is now set to zero we can also remove it item two so let's turn these into a comment just to ignore these so combo box dot remove item and let's say we want to remove our cat because our cat ran away but don't worry he'll come back so now we only have dog and bird we can also remove items at a certain index so combo box dot remove item at let's say zero so whatever item is at index zero it's going to remove that this time our dog ran away he went to go chase the mailman so we only have a cat and a bird and i have one more for you guys so combo box dot remove all items and this will clear our combo box so that there is nothing within here so this could probably be useful for something if you need to reset it one thing that you should remember is that with these j combo boxes we need to pass in an array of reference data types for example if we attempted to pass in an array of integers well since this is a primitive data type this actually wouldn't work let's say we're attempting to store the numbers one two and three and add these to our j combo box so in order to do something like this we would have to use the wrapper class version of this so for integer it is integer with a capital i and you spell it fully if this were double instead of lowercase double this would be capital double because this is the wrapper class version of a double so just make sure that you're using wrapper classes if you need to store a primitive data type within an array all right so that's the basics of combo boxes in java if you want a copy of all this code i'll post all of this in the comments down below but yeah that's the basics of combo boxes in java hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you