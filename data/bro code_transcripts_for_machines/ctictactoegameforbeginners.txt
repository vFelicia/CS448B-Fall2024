hey guys in this topic we're going to create a game of tictactoe we'll be working with random numbers you may or may not need to include this header file include c time we'll add some function declarations then some definitions void draw board there will be one parameter a pointer to an array named spaces spaces will be a onedimensional array that will keep track of all the markers like what spots are taken what spots are occupied player move the parameters will be a pointer to spaces and char player computer move a pointer to spaces char computer check winner a pointer to spaces char player and char computer then lastly check tie and all we need is a pointer to our array spaces oh uh check winner and check tie will both return a boolean value okay let's add some function declarations so after the main function let's paste these we do need to return some value for check winner and check tie because there is a return type just for now as a placeholder i'm going to return zero but we'll change that later let's head to the main function and declare everything that we'll need a character array named spaces the size will be nine nine spaces we'll have nine elements each contains an empty space one two three four five six seven eight nine good char player pick a character that you'd like to be you could do x or something else char computer pick a character for the computer let's begin with o boolean running i'll set the sequel to true when we begin our game we will immediately invoke the drawboard function then pass in our array so remember when we pass an array to a function it decays into a pointer so we don't need to create a pointer for this array within the drawboard function we will display a grid so let's write something like this standard output i'll add five spaces one two three four five then a vertical bar five spaces again one two three four five vertical bar one two three four five then a new line okay let's copy this line right in the middle i'm going to add one of the elements of our array spaces so right about there spaces at index zero i'm going to copy this section of code right in the middle between the two vertical bars i'll paste what we copied spaces at index one then again right in the middle paste what you have spaces at index two this time we'll create a horizontal bar let's copy this we'll replace the spaces with underscores so right about there okay let's see what we have okay yeah something like this we'll have a player or the computer right in the center so let's copy this line on top paste it underneath copy this line that displays elements of our array paste it underneath but change the element numbers three four five and we'll copy this line paste it underneath let's double check to see what we have okay we're getting somewhere let's copy this line paste it copy one of these lines where we display the elements of the array paste it underneath so we are missing elements six seven eight let's copy one of these empty lines paste it underneath uh then before and after we display this grid i'll just display a new line standard output new line and let's do that after okay let's see what we have yeah not too bad there's our grid of nine spaces okay that is the drawboard function we can close out of this we're done with it when we invoke the drawboard function we will pass in our array which decays to a pointer and then prints our board let's add a while loop after the drawboard function while our condition is running running is set to true initially when we exit out of the game we'll set running to be false the first thing that we'll do is invoke the player move function player move but we need to pass in our array spaces as well as a player player then let's fill in the player move function okay player move i'll create a local variable named number the user will enter in a number between one and nine depending on what space they'd like to occupy with their marker i'll create a do while loop do while the condition will be not number is greater than zero or not number is less than eight the user can only enter in a number between zero and eight those numbers correspond to the elements of our array elements with indices zero through 8. within the do while loop will ask for some user input standard output enter a spot to place a marker one through nine whatever the user types in we'll just subtract one because the user doesn't know that arrays start with zero supposedly standard input number so the user will enter in a number between one and nine then we will decrement the number by one because the array starts with zero if spaces at index of number whatever the user types in is equal to an empty space if that space isn't occupied we'll add that marker to that spot spaces at index of number equals the player's marker then we'd like to break out of this while loop so after the player moves let's draw the board again to reflect any changes okay enter a spot to place a marker how about one yeah there's our marker let's try it again how about nine yep and we are in the last spot the bottom right corner let's enter in a number that's outside of this range like 100 enter a spot to place a marker uh negative one okay so we're limited to the numbers one through nine even if i were to type zero we still can't uh so let's try something in the middle that would be one two three four five yeah and there's our marker i'm just gonna add a colon then a space okay and that is the player move function we can close out of this function let's work on the computer move function next within the while loop let's invoke that function pass in our spaces array as well as whatever character the computer is then we will draw the board again right after just update it within the computer move function we'll create a local variable named number we'll need a seed to generate a random number s rand within the parentheses invoke the time function pass in zero or null and we should be able to generate some random numbers so i'm going to create a while loop while the condition will be true i would like to generate a random number between 0 through 8. we'll take number set the sequel to rand function modulus 9. number will be random between 0 and 8 technically if we pick a spot number that is occupied already we'll need to reroll a random number if spaces at index of number is equal to an empty space we'll take spaces at index of number set the sql to the computer's marker then break out of this while loop let's test this function after we pick a spot the computer will pick a spot too yep so the computer picked a spot right in the middle let's try it one more time i'll pick the spot in the middle again so that would be five and our computer picked spot number two cool let's close out of the computer move function after the player moves then we draw the board again we will check a winner i'll use an if statement within the condition of the if statement we will invoke the check winner function the check winner function returns a boolean value so that's why we're placing it within the if statement but we need to pass in a couple arguments our spaces the player and the computer if there's a winner if this evaluates to be true we will set running equal to false and we will break let's add this if statement to after the computer moves too okay let's fill in the check winner function so right down here we'll need to check all of the different win conditions there are several normally i would use a switch but it's going to get very complicated especially for beginners i think just to make this easier we'll use a bunch of if and else if statements within the first condition of the if statement we'll check to see if the first row all has matching characters so we can do that by saying spaces at index of zero is equal to spaces at index of one and spaces at index of one is equal to spaces at index of two if all three characters in the first row are the same that means that somebody won i'm going to use the ternary operator here we have to determine who won the player or the computer let's check to see if the first index spaces at index 0 is equal to the player's marker ternary operator like we're asking a question if the player occupies the first row then we'll print standard output u win otherwise standard output you lose then i'm just gonna add a new line here and here okay there's one more thing we have to do with this condition and i'll explain that so let's run this i'll pick spot number nine you lose the reason that we lost is that we're checking to see if the first row all has the same characters they're technically all empty spaces so our program thinks that somebody won because all of these characters match there are three empty spaces i'm going to amend this if statement we'll want to ensure that none of the spaces are empty and really we only need to check the first space i'll make this amendment spaces at index of zero does not equal an empty space and all these other conditions if you'd like to keep this more organized you can always surround some of these conditions with parentheses i think it's more legible that way let's try that again just to be sure that it's working i'll pick something in the middle okay yeah so the computer doesn't win automatically if there's three empty spaces in the first row okay so that is the first win condition let's copy this condition i'll add else if now we'll check the second row if space is at index 3 is not equal to an empty space and spaces at index 3 is equal to spaces at index 4 and spaces at index 4 is equal to spaces at index five then does spaces at index three equal the player okay so that is row two let's copy and paste that else if statement then we'll need to check the last row space is at index six six is six equal to seven and is seven equal to eight so these conditions will check all of the rows then we'll need columns let's copy one of these else if statements paste it so we have zero zero is zero equal to three and is three equal to six okay now time for the second column spaces at index one one right here as well is one equal to four and is four equal to seven copy this again paste it then we have the third column two two is two equal to five and is 5 equal to 8. okay now the diagonals spaces at 0 zero is zero equal to four and is four equal to eight then the last diagonal space is at index two two is two equal to four and is four equal to six if there's no win conditions we'll have an else statement we will return false then all we have to do at the end of this function is to return true somebody won okay so let's test this i'll try and win with the first row one two three you win this time i'm gonna try and lose one two four seven whoops seven's taken uh eight there we go you lose we can close out of the check winner function we know that it's working then we just need to check to see if there's a tie if there's no more spaces available within the main function after our if statements we'll add else if we'll invoke the check tie function pass in our spaces check tie returns a boolean value if it's true we will set running to be false then break then add that after the computer move section two so right here then let's fill in this function within the check tie function we'll iterate over the elements of our array spaces we'll use a for loop four and i equals zero we'll continue this as long as i is less than nine because there's a total size of nine spaces increment i by one if spaces at index of i is equal to an empty space that means we can continue return false they're still empty spaces if we iterate over our array and there's no empty spaces well then we'll display standard output it's a tie i'll add a new line then we will return true and we can get rid of that okay so let's close out of this check tie function then after we exit our game outside of this while loop let's display a message standard output thanks for playing all right and that's everything let's run this i'm gonna try and get a tie this time one two six seven eight it's a tie thanks for playing all right everybody that is a game of tictactoe for beginners if you would like a copy of this code i'll post this in the comments section down below and well yeah that's a game of tictactoe using c plus plus