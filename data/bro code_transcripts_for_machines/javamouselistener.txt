hey how's it going everybody it's you bro here hope you're doing well and in this video i'm going to teach you guys how the mouse listener interface works in java so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running okay let's get started people i have two classes i have a class called main and it contains an instance of my other class that is called my frame my frame extends jframe and within the constructor for my frame i have four lines of code this dot set default close operation j frame x and on close i have a size of 500 by 500 i am using no layout manager this dot set layout is set to null and lastly this dot set visible is set to true one of the few ways in which we can use a mouse listener interface is to have the definition of your class implements the mouse listener interface so according to the description for the mouse listener interface this listener interface is used for receiving interesting mouse events such as a press release click enter and exit on a component so since we're implementing an interface we need to add any unimplemented methods and for mouse listeners there are five methods mouse clicked mouse pressed mouse released mouse entered and mouse exited so let me give you a quick description for each of these i've added a short description for each of these methods let's begin with mouse pressed mouse pressed is invoked when a mouse button has been pressed on a component so if you hold down a mouse button it's going to execute mouse pressed mouse released is invoked when a mouse button has been released over a component mouse clicked is invoked when the mouse button has been clicked pressed and released on a component mouse entered is invoked when the mouse enters the area of a component and mouse exited is invoked when the mouse exits the area of a component so let's apply a mouse listener to a label so we will create a jlabel jlabel label we'll declare it outside of the constructor and instantiate it within the constructor so let's create a label label equals new j label and since we're using no layout manager let's set the balance for the label label dot set bounds we'll place this in the top left corner and we'll make the width 100 and the height 100 and let's color this red so label dot set background color dot red and in order for the background to actually appear we have to label dot set opaque and set this to true and lastly we need to add this label to the frame this dot add label and now we should have a red square at the top left corner of our frame now we're going to apply a mouse listener to this component to our label so we type in the name of the component that we want to add a mouse listener to label dot add mouse listener and since we're implementing the mouse listener interface we can just pass in this now this label can respond to different mouse events so let's do a simple print line so let's begin with mouse clicked system.out.printline you clicked the mouse now i'm clicking within the frame but we did not apply the mouse listener to the frame we applied it to the label if i begin clicking within the label it performs it invokes our mouse clicked method now we have mouse pressed that is if we hold down one of the mouse buttons so i'm going to system that out to print line you pressed the mouse this time i'm going to hold down the left mouse button you pressed the mouse and then it doesn't do anything if you release so this also applies to the right mouse button and to the center mouse button if you have one the scroll wheel all right we're going to print line you released the mouse this is only invoked once you release one of the buttons so i'm going to hold down the left mouse button then i'm going to release in three two one go you release the mouse and then we also have entered and exited you entered let's say the component so i'm not going to click i'm just going to enter the component and then it says you entered the component and then we have exited you exited the component so i'm going to enter and then leave enter and then leave again so you can see that there are different mouse events let's make one more change to this label let's change the color of the label after we perform one of these methods so let's begin with mouse pressed let's say after you press on this component you press the mouse over the component will set the background to a different color and for this color let's say yellow color dot yellow so i'm going to press and then the background color is now yellow and let's say when we release we'll have this become a different color like green so i'm going to hold down it's currently yellow and then when i release it's going to be green and we'll have mouse entered let's change this to blue and then when we exit we'll change it back to red i suppose color dot red now i'm going to enter the area it's blue and then leave enter again it's blue again and now it's red again if i were to click and release it's green and then when i exit it goes back to red here's a what if situation what if we applied our mouse listener to the frame instead of just the label so let's replace label with this and see what happens now if we were to enter the area of the frame itself now this responds to our mouse events that happen and you can see that the color of the label is changing too and if i were to click within the frame it's going to change the color of our label as well so where you apply or where you add the mouse listener too actually makes a big difference if you were to apply the mouse listener to the entire frame then the entire frame is going to respond to these separate mouse events so that's just something to keep in mind so here's a small project that i thought we could work on we're going to apply a label or set the icon of the label to one of a few images depending on which mouse event occurs i have four images this one is called smile this one is nervous pain and dizzy the icon is going to change for the label depending on which mouse event occurs which method is called so if you need some images feel free to pause the video to download some so i have four images smile nervous pain and dizzy i'm going to declare these outside the constructor and within the constructor i'm going to instantiate these i made a few changes to our frame that you should be aware of for the layout i'm using a new flow layout followed by this dot pack and this dot set location relative to null this will have your frame appear in the middle of your computer screen it's not crucial but it's helpful and i sometimes forget to add this so we need to instantiate these image icons so we have smile equals new image icon and we can list the file path or the file name if it's within your project folder since these are within my project folder i can just list the file name so for smile this is smile.png and then i have nervous pain and dizzy so i'm going to follow the same steps for those as well so we have nervous equals new image icon nervous.png followed by pain and lastly dizzy now for our label i'm going to set the icon to smile right away so that will be basically the default label dot set icon and i'm going to set this to smile and we need to add this label to the frame this dot add what are we adding we're adding our label but before we compile and run this i need to instantiate my label because i forgot to do so label equals new j label and then we also need to add a mouse listener and let's add the mouse listener to the label label dot add mouse listener i suppose you can do the frame too that would work label dot add mouse listener and now we should have our smiley face which we do now we're going to change the icon of the label based on which mouse event occurs so we can actually copy this line of code where we set the icon and let's say when we enter the area of the label this is going to change or be set to our nervous image because we're in our faces personal space he's kind of nervous and then if we were to exit he'll go back to smiling so let's try it so he's fine right now but if we enter his personal space he's getting really nervous and cautious of us but if we were to leave and move the cursor outside of the label he's just fine now let's do pressed and released so if we were to click on him he's going to be in pain kind of like we hurt him and if we release the mouse we'll say he's dizzy because he doesn't know what just happened all right we're going to enter the area he's nervous now he's smiling now he's nervous again we're going to click and hold down the mouse and he's in pain because we're hurting him and then if we were to release he's just dizzy but if we were to leave this area he goes back to smiling all right everybody well that's the basics of the mouse listener interface in java if you want a copy of all this code i'll post all of this in the comments down below but yeah that's how the mouse listener interface works in java hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you