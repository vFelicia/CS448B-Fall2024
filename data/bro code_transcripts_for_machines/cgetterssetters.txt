all right we have a lot to talk about today getters and setters but before i explain what these are let me explain the situation we have a class car and we have one field within our car class speed so when we construct a car object we need to pass in something for the speed maybe this is miles per hour kilometers per hour doesn't really matter so let's say that somebody takes our car object and changes the speed to like whatever this number is 100 million actually let's make that a billion how can we prevent people from doing this because currently our car is going way too fast so one way in which we could do that is to change this field from public to private but then we can't access it at all another way is to set up getters and setters and this adds security to our program via this concept called encapsulation so we need to first set up a property for this field the property name is the same as the field name except it's capital so type public if you're returning something list the data type then speed and then let's make this capital then add a set of curly braces a property combines the aspects of both fields and methods and it shares the same name with the field so it's kind of like something in between a field and a method and it contains accessors a get and set accessor now to first assign a value we'll need to change our constructor instead of assigning the field speed we will assign the property speed so this has a capital s let's create a get accessor first when we would like to get the value of speed whatever is contained within speed we will use this get accessor so type get curly braces and we will return speed and then we'll need to assign this with the set accessor then make sure you have that semicolon at the end so by using this get accessor this will read whatever values within our field then we'll need a set accessor if we would like this to be writable set curly braces so what we'll do here is set speed equal to value so value is kind of like a parameter properties combine the aspects of both fields and methods so when we assign a value to speed well then this value is going to be this so it's kind of like an argument and a parameter and within our set accessor we can actually set up like some code or some rules or something so if somebody attempts to change the speed we could write an if statement like if value is greater than let's say 500 then we will limit this let's change speed equal to 500 then else speed equals value now car.speed is inaccessible due to its protection level so we need to access instead of the field the properties so that's speed with a capital s and then if we're going to display the value of speed we'll access the property instead of the field so if we attempt to set our speed equal to 1 billion well we will access this set accessor and then it's going to be limited to 500 then so if we attempt to change our speed to 1 billion it will be limited to 500 and then we can still display the value and access it because by having a getter and setter this is both readable and writable so yeah those are getters and setters they are accessors found within a property a property combines the aspect of both fields and methods and if you have a private field you can also set up a property that has getters and setters for more security so yeah those are getters and setters in c sharp