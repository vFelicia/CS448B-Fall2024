hey everybody welcome back so in today's video we're going to discuss constructors a constructor is a special method within a class that is automatically called when an object is instantiated it's useful for assigning values to attributes as arguments before when we were assigning attributes to an object we would say for example car one dot make equals forward the constructor we can do that automatically here's an example this time let's create a student class class student i'll add a public access modifier what attributes should students have how about a name standard string name int age double gpa sounds good to me then if i need to create a student object i would type the name of the class student a unique identifier for this specific object let's say student1 then to assign some of the attributes right away i could use a constructor we do have a constructor that is automatically called behind the scenes but we could explicitly set one up the constructor has the same name as the class in this case student add a set of parentheses add a set of curly braces think of this as a function we can set up parameters when we instantiate a student object we will automatically call this function the constructor then pass arguments let's set up some parameters we have standard string name int age double gpa then when i instantiate a student object i will add a set of parentheses after the object name then pass in my arguments let me just zoom in real quick okay in order to instantiate a student object we need to pass in a name an age and a gpa so for the first student student one's name will be spongebob his age will be i don't know how old spongebob is let's say he's 25. spongebob's gpa will be a solid 3.2 when we instantiate our student object we will pass these values as arguments to the constructor now to assign these attributes with these parameters we first need to select these attributes in this example i gave them the same name just to remove ambiguity if i'm referring to these attributes i will type this then an arrow name equals the name of the parameter name this name equals my name parameter this arrow age equals my age parameter this arrow gpa equals my gpa so now let's test this i will display student one's name age and gpa standard output student1 dot name add a new line then we have age then gpa okay we got spongebob he's 25 years old his gpa is 3.2 so you can see that we don't need to necessarily add these values to these attributes manually you can do that automatically with the constructor so another way in which you may see this constructor set up is with the parameter names being different from the attribute names perhaps instead of name age and gpa let's say x y then z if the attribute names are different from the parameter names you don't need the this keyword you could say name equals x age equals y gpa equals z and this would work too if you prefer this way of doing things you can do that uh just my own personal preference i like to use the this keyword and then keep my parameters the same but that's just me you do you let's create a couple more students and it's kind of nice because we can reuse this constructor let's create student two student student two student two will be patrick i don't know how old patrick is let's say patrick is 40. uh patrick's gpa will be 1.5 okay to test this let's display student twos and name age and gpa okay we got patrick he's 40 years old gpa is 1.5 one last student student student three student three will be sandy sandy is uh how about 21 years old and sandy's gpa is a perfect 4.0 okay now we'll display student three's name age gpa okay we got sandy her age is 21 gpa is for well 4.0 let's do one last example just to reinforce our understanding of constructors let's create an entirely new class let's go back to our car class i'm going to get rid of all this so we need a class class car set of curly braces add a semicolon to the end i will add a public axis modifier in the last topic we decided that cars had four attributes a make standard string make a model standard string model int year standard string color now we'll create a constructor for our car objects it has the same name as the class name car set of parenthesis set of curly braces we can set up some parameters we have make model year and color i think i'm just going to copy this to save time you can rename these if you want but i like to keep them the same then i will assign this arrow make equals make this arrow model equals model this arrow year equals year this arrow color equals color when we create a car object we'll need to pass in these arguments i will create car car 1 add a set of parentheses pass in my arguments a make model year and color i'll create a chevy corvette the year will be 2022 the color is blue i'm going to display the attributes standard output car 1 dot make i'll add a new line then i will display the model year then color model year color car one is a chevy corvette the year is 2022 the color is blue let's create a second car car car two car two will be a ford mustang the year will be 2023 the color will be red i will display cartoons attributes we have a forward mustang the year is 2023 the color is red so yeah that's a constructor everybody a constructor is a special method that is automatically called when an object is instantiated it's useful for assigning values to attributes as arguments when you create an object from a class add a set of parentheses then add your arguments within the constructor you can assign those arguments to the attributes of that class in the next topic we'll cover overloaded constructors if you're looking for some additional practice in the comments section down below post a class that contains a constructor and well yeah those are constructors in c plus plus