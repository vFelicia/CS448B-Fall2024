oh yeah the return keyword now the return keyword returns data back to the place where a method is invoked so let's create a method to multiply two numbers together something simple so when we declare a method we'll have to make sure that we do it outside of our main method so right here so we will say static void and we will name this method multiply and we'll need to pass in two numbers as arguments let's say that the data type will be double double x and double y okay now we would like to multiply these two numbers together and we will store them within double variable z double z equals x times y now to return data back to the place where it's invoked we can use this return keyword and what kind of data would we like to return let's return whatever z is now there's one change that we need to make we need to replace this void keyword with the data type of what we're returning exactly so since we're returning a double we'll change void to double if you're not returning anything you can just keep that keyword as void now we can use this multiply method to well multiply two numbers together so let's write a program where we will ask a user for some user input multiply two numbers together then return the result and display it so let's accept some user input and first we should probably declare the variables that we'll need double x double y and double let's call this result and we will ask the user to enter in number one and then assign x equal and we'll need to convert the user's input to a double because it's always a string when we accept user input x equals convert dot to double then out of side of parenthesis within the parenthesis console dot read line and we'll do the same thing for variable y enter in number two and then change x to y now if we need to assign results a value we can use this multiply method so type multiply add a set of parentheses to invoke it but we'll need to pass two matching arguments because we have two parameters set up we need to pass in two double values or variables so we will pass x and y as arguments to this method multiply so this return keyword will return whatever z is back to the spot in where this method is invoked and we will store the result within this variable named result and then we should probably display it let's display result and well that's it let's try it enter in number one have you always wondered what pi times 420 is well we're about to find out it is 1 318 so yeah that is the return keyword it returns data back to the place where a method is invoked and if you would like you can actually shorten this even further we don't necessarily need to store the result within you know a new variable we could just say return x times y and that would work the same too that is the return keyword it returns data back to the place where a method is invoked if you're able to give this video a thumbs up leave a random comment down below and well yeah that's the return keyword in c sharp