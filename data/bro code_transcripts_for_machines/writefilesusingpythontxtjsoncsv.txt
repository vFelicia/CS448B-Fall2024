hey what's going on everybody in today's video I'm going to show you how we can write and output files using python we'll cover plain text Json and CSV files but we'll start with plain text because it's the easiest suppose we have some data that we would like to Output I'll create a variable of text Data think of a food you like I will output I like pizza for convenience we'll create a variable a file path this can be a relative file file path or an absolute file path within this file path we'll need a name for this file I will name this output then include the file extension this will be a txt file a plain text file this is a relative file path when I generate this file it will be within the same project folder as my main python file to create a file we'll write the following with open function pass in our file path and a character of w to write as file and for now I'll write pass there's a few things going on here with is a statement it's used to wrap a block of code to execute if we open a file the width statement will also close that file when we're done with it so we don't need to manually close files when you open a file it is good practice to close it because if you don't you may run into unexpected Behavior the width statement takes care of that for you the open function will return a file object the first parameter is the file path the second parameter is the mode w Is Right X will also write if this file doesn't exist if it already does exist we'll receive an error A is for append to append a file and R is to read but we'll take care of reading in the next video so we will stick with W to write a file the open function returns the file object the first argument is the file the second argument is the mode you can set these to be keyword arguments if it's easier for you to read when the open function returns a file object for us we're using the as keyword to give it a name as file it's kind of like we're instantiating a file object file equals file file is the name of the file object to write to this file we're going to take take our file object use the builtin write method then pass in our text Data then when this is done I'm going to print a confirmation message I'll use an F string let's say text file I'll add our file path place it within single quotes was created let's see what happens text file output. txt was created and here's that file I like pizza we also have the capability of setting an absolute file path let's say I would like to Output this file to my desktop I would just need that location let me just get the location from one of these folders by going to properties I will copy this location this is the location to my desktop but for you it's probably going to be different then I will paste the absolute file path a backs slash is an escape sequence within a string we either could use double backs slashes or a forward slash now let's see if this outputs to my desktop text file here's the file path was created and here's that file it's a plain text file and it says I like pizza so when working with the file path it can be a relative file path or an absolute file path all right now for our text Data there are different modes as well W is for write if we use x we'll write a file if that file doesn't already exist in this case it does on my desktop we already have a file named output and it's a plain text file so when I run this with the mode of X we get a file exists error that file already exists we could catch this exception so that our program isn't interrupted I will copy the name of this error I will place my code within a tri block we will try this code and catch any exceptions except file exists error if this file already exists let's take a different course of action let's print that file already exists so now when I run this again our program isn't interrupted we receive this message that file already exists if I were to delete that file byebye then run this again well we create a new file text file that absolute file path was created and here it is again now for the mode there's also a a to append any new data will be appended to that file we get I like pizza I like pizza when a pending data if you would like that data on a new line we can add a new line character W will overwrite a file so we're back to the original when a pending either before or after we write our Text data we could add a new line character let's say let's do that before new line plus our text Data here's the output again we're appending not writing I like pizza I like pizza our second sentence is on a new line let's run this a couple times we should have several lines now let's work with a collection let's say we have a list of employees we'll pick some employees at the Crusty Crab so we have Eugene I guess he is technically the manager I don't know if that counts as an employee Squidward SpongeBob and Patrick Patrick worked at the K Crusty Crab in one episode he counts then we'll have to be sure we're writing our employees this is what's going to happen we have a type error write argument must be a string not a list in order for us to write each item within a list we'll need to iterate over it using some sort of loop we can't write a list or any other collection directly here's what we'll change for every employee in our collection of employees we're iterating over something that is iterable we will access our file object use the right method then write each employee here's the result we get one long string of each item in this list if you prefer after writing each employee we could add a new line character after and here's the output we get each item in our list on a new line or rather than a new line character we could use a space this would output all the employees but space them out now we'll be outputting a Json file in summary a Json file is made of key value pairs for our data let's say we have a dictionary of employee a dictionary is of key value pairs will have a name of SpongeBob SpongeBob's age will be 30 his job his position is that he is a cook so this is the data I would like to Output I'll keep the file path the same we'll change the file extension tojson we will need the help of the Json module let's let's be sure to import that import Json within our width block we'll make the following change we're going to access our Json module use the dump method the dump method will convert our dictionary to a Json string to Output it so we have to pass in our Json data of employee our file as the second argument then for a confirmation message let's print Jon file was created here's the result Json file at this location was created and here's my Json file I'll go to properties we'll confirm it is a Json file it is and I'll open it here's the result now you could add indentation after each key value pair here's how after our second argument our file we can pass in a keyword argument of indent for each key value Pair by how many spaces do we want to indent each let's say four and let's take a look I think that's more readable we're indenting each key value Pair by four spaces so that is a Json file it's a collection of key value pairs a dictionary or anything that uses key value pairs is a great candidate to be output to to a Json file all right now we're going to work with CSV files CSV means comma separated values CSV files are pretty common with a spreadsheet of data like an Excel spreadsheet we will create a 2d data structure of employees this will be a list of lists let's add four we'll need the help of the CSV module import CSV think of our 2D data structure as a table of rows and columns so for the first row I will add name comma age comma job the second row will have a name of SpongeBob age 30 job cook for the next row we'll have have Patrick Patrick will be 37 what is Patrick's job I don't know he's unemployed then we'll have Sandy Sandy will be 27 Sandy is a scientist okay now with our file path the file extension is going to be a CSV file comma separated values within the context of our width block we're going to create a writer object to write to a file writer equals access the CSV module use the writer method of that module then pass in our file writer is an object it provides methods for writing data to a CSV file and then we'll print a confirmation message of CSV file was created here here's the output currently we have a CSV file I'll go to properties to confirm it well we have no output we have to iterate over all the rows in our 2D collection we'll write the following for every Row in our data of employees we'll take our writer object use the right row method and pass in that row that we're iterating over now let's take a look that's better however the writer method gives us a new line after each row so if we would like to prevent that when we open this file I will set the keyword argument of new line equal to no characters an empty string let's take a look again yeah that's much better so this is a CSV file it's made of comma separated values all right everybody so that is an introduction to writing files using python