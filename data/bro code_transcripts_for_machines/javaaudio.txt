how's it going everybody it's your bro hope you're doing well and in this video i'm going to teach you guys how we can create an audio player in java so sit back relax and enjoy the show make sure you like comment and subscribe one like equals one prayer for the youtube algorithm for this project we're going to be using the package javax.sound.sampled however this is not compatible with mp3 files but it is compatible with wav files so make sure that you have a wav file that you want to use i'll direct you to a resource to get some audio files if you need a sample audio file i would recommend youtube's audio library and you can do a quick google search to find this and click the first link and then you can search for any song or sound effect that you need and to download a song just click this download button and then once you have your song downloaded it's probably going to be an mp3 file look up a wav file converter and click any one of these links and then you can begin the process of converting your mp3 file to a wav audio file once you have downloaded your wav file i would recommend copying it go to your project folder and then paste it so within my project folder i now have this wav audio file called level up with that out of the way we can begin our first step is to include this import at the top import javax.sound.sampled and we will import everything related to this package our next step is to create a file file file equals new file parentheses semicolon within the constructor of my file i'm going to list my file name and or the file path since my wav file is within my projects folder i only have to list the file name and the name of my wav file is level underscore up dot wave so be sure to include the extension at the m2 if you have one so i'm going to include some imports as we go along our next step is to create an audio input stream audio input stream i will call this audio stream for short equals audio system dot get audio input stream and place your file as an argument to this method now we will either need to surround this with a try and catch block or add a throws declaration just to make this more readable i'm going to add a throws declaration we also need to create a clip object clip clip equals audio system dot get clip and then we need to open this clip by using the open method of our clip clip dot open and we are going to pass in our audio stream as an argument to the open method of our clip and also add a throws declaration or surround with a try and catch block and we should be good now we are going to use the start method to begin playing this audio file so clip dot start and let's run this and nothing appears to be playing and our program terminated well what gives bro you're a liar hold on wait a second so with our audio clip it's actually attempting to play in a background thread and our program does not wait around for background threads so as soon as it runs out of code it's going to terminate which you can see here what we need to do is somehow keep our program open and running so it doesn't terminate there's one of a few ways we can do this one we could create some sort of gui system and as long as we don't hit that x in the corner at the top it will continue to play our clip or we could create a scanner that will wait around for some user input so the program will not terminate just for simplicity let's create a scanner scanner scanner equals new scanner system.in be sure to include this import at the top as well so i'm going to wait around for some user input so this should pause our program while our program is waiting for us to type in something and let's save the response that we have into a variable called response string response equals scanner.next since our program is going to wait around for some user input it's not going to terminate let's try it since we now have a clip created it's just a matter of calling the appropriate method for this clip we have start we have stop we can reset we can also quit too so let's create a sort of audio player within our console window so i'm going to move our start method and move it near the bottom what we'll do is create a while loop that will ask for a response and depending on the response we can play we can stop we can reset or we can quit so let's create a while loop while our response equals let's say uppercase q but we should use the not logical operator while our response does not equal q and for good measure we should use the two uppercase method to make all responses uppercase because somebody might type in something that's lowercase response equals response dot 2 uppercase all right and then let's create a prompt let's say p equals play and s equals stop r equals reset and q equals quit then within a maybe print statement enter your choice and then we will accept a response actually we should move all this within the while loop and we are going to declare our string outside of the while loop string response equals and we'll just set this to a blank set of quotes response equals scanner.next response equals response to uppercase and now our next step is that we should create a switch switch we will examine our response and look for a matching case our first case will be p for play case p what are we gonna do we should use the start method of our clip and we will break all right and then we should also have a default as well default system.out.printline not a valid response so let's test the p command that we have and to your choice and you have noticed that our audio clip is not actually playing yet until i type p or lowercase p and hit enter and you can click this red button to terminate as well so let's create a stop method a case for stopping case capital s clip dot stop and then break let's test this too so i'm going to press p to play hit enter and then s to stop we can also reset as well let's make a case for that case r for reset this one's a little different clip dot set microsecond position so we can set our clip at a certain position at a amount of milliseconds if we want to reset this clip we will set this to zero that is the beginning and then break and now we should be able to reset our audio clip so i'm going to press p to play and then i'm just going to reset a bunch of times and then stop and lastly we should create a case to quit and exit out of our while loop we should probably close our clip as well case q and to close a clip clip dot close and break and we should be able to quit i'm going to press p to play and q to quit actually let's add a print line too just to verify that we actually did escape the while loop bye all right let's run this one last time so we can play we can stop we can reset we can play again and we can quit bye all right everybody so that's one way in which you can play an audio clip in java if you would like a copy of all this code i will post all of this in the comments down below feel free to do me a favor and smash that like button drop a comment down below and subscribe if you'd like to become a fellow bro