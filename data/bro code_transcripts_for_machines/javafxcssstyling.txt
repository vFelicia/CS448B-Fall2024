hey what's going on everybody it's your bro hope you're doing well and in today's video i'm gonna demonstrate how we can apply a css file to a javafx gui application so sit back relax and enjoy the show if you wouldn't mind please like comment and subscribe one like equals one prayer for the youtube algorithm all right let's get this show on the road i'm going to demonstrate how we can apply a css style sheet to our javafx gui applications if you don't know any css that's completely fine we'll cover some of the basics but after watching this video and you want to learn more about css check out my full course on html and css do it now if you're using eclipse then eclipse might have generated a css style sheet for you already let's say that we don't have this let's start fresh so i'm going to delete this bye and this is how to create a new css file right click on your package within your project folder go to new other file under the general folder next i will name this application but name it whatever you want dot css and finish our next step is to apply our style sheet to a scene so you'll need this line of code in scene if that's what you named your scene get stylesheet dot add get class get resource the name of your css file mine is application.com whatever you named this to external form and that should link your css style sheet to your scene although if you need to apply a css style sheet to more than one scene i actually recommend breaking this line of code into two so that we can reuse our style sheet so if that is the case and you have more than one scene i recommend writing something like this let's create a string variable named css that will contain the location of our css file that we have so string css equals this dot and copy everything within the add method from the previous line get class get resource the name of your css style sheet to external form and now we can take our scene dot get style sheets dot add css and that's it since we're storing our resource within a string variable named css we can just keep on reusing the string and if we have multiple scenes we can just type in the next scene for example like scene one or scene two get style sheets add css and then we can just keep on repeating this for each scene that we have so that's another way in which you could write this now that we've linked our style sheet we'll need an application to work with so i'm going to go to my fxml file and open with scene builder so that we can build something for practice and then style it now within scene builder we're not going to build anything too fancy just something very basic so i'm going to use an anchor pane for this example and i'm going to add two labels you can find labels under your control so where is it there it is let's create two labels perhaps one right here and another maybe right here that should be good now you can change the text on these two let's say level one for the first label and the second label perhaps this is some css styling all right one thing that we'll probably want to do for this video is to give each of these labels a unique id although it's not required so under code i'm going to give this first label a unique id i'll call this maybe title label and for the next id i will call this perhaps text label name it something memorable and that should be good for now i'm going to save this file save now that we're out of scene builder let's do one final check before running this head to your fxml file and make sure that everything is populated within here and within your start method make sure you have the following lines of code we're creating a root node we're creating a scene adding the root node to our scene we're applying our css style sheet we're setting the stage with the scene and stage.show at the end so now currently our application looks a little something like this and now we can use some css styling to style our labels and the background too so let's head to our css file alright here's a crash course on css in like under a minute using css we can style specific items by their id or entire classes by using their class name to target an item by its id you would type hashtag and then the name of the id of that specific item so if i would like to style the title label that i would have i would type hashtag then the name of the id and for this example it is title label and now for all of the properties that we will apply to this item we will put within a body a set of curly braces now that's how to target a specific item by its id you can also select an entire class of items by typing dot and then the class name that will apply css styling to an entire class of items let's say now that i would like to style all labels so we would type dot and then the name of the class and in this case it is label however this is lowercase though so dot label will apply css styling to an entire class of items and for example let's say that i would like to change the root node that would be dot root and then a class body all right let's apply some css styling these are in property value pairs however with fx we would precede all of the css properties with dash fx dash and then the name of the property so let's say we would like to change the background color that would be background dash color colon and then some value let's say i would like to change the color to black and then add a semicolon to the end so now when i run this all root nodes will have the background color of black just like this alternatively you could use hexadecimal values in place of color names so black for example would be hashtag zero zero zero zero zero zero however i think i'm going to change this to a slightly lighter shade of black so perhaps six ones that should be good and this should be a lighter shade of black so you can always look up a hexadecimal color picker if you like a custom color i believe rgb values would work as well okay let's change the font of the labels so that would be fx dash the name of the css property let's say font dash size colon and perhaps i will set this to 20 and now all labels that we have meaning both of these will have a font size of 20 not just one label but all labels because we're targeting an entire class of labels okay let's change a few other things let's say the font family so that would be fx dash font dash family and at this font i kind of like lucida console kind of looks something like that but let's change the font color that would be text fill and let's select maybe white all right not too bad i think i'm going to increase the size of this level 1 label here and i think we named this title label so if you apply any styling to an entire class you can also apply some additional styling by its id as well so not only will our title label have all of these css properties but we can add some additional ones or change some values so for the font size let's change this to 60 so now only the title label will be larger compared to all labels all right and the last thing that i want to show you guys is how we can center all of this because right now it's kind of off center now there is a css property for that it's going to center all text within its container so that would be fx dash alignment center however this by itself will not change it and i'll show you why basically speaking this alignment property will center any text within its container however this container is the minimum size it needs to be to accommodate the size of the text what we're going to do is expand this container so that the width equals the width of the frame that we have so let's head back into scene builder and expand the size of our containers now here i am within scene builder now select one of your labels and you'll notice a slightly shaded portion that is the size of the container of this label basically when we're using the alignment property we're centering this text within the small container so why don't we expand the size of the container so that it's the same width as the size of the pane that we're working with and if you see that it's left aligned that's completely fine when we run this it's going to be centered so let's expand both of these containers so that they take up the entire width of our pane that we're working with let's save and then head back to our program now you may need to open the tab for your fxml file just to be sure that everything updates and then we can run this program and everything should be center yep just like that well ladies and gentlemen that is how to apply a css stylesheet to your javafx gui applications like i said at the beginning of this video if you're interested in learning more about css i do have a free full course on both html and css on the channel and well yeah that's how to apply css to javafx hey you yeah i'm talking to you if you learned something new then help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you