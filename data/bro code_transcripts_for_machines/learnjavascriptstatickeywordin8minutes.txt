hey people let's do this thing so the static keyword static is a keyword that defines Properties or methods that belong to a class itself rather than the objects created from that class in summary a class owns anything static not the objects so what we're going to do is create a class for math utilities class math util for short we'll create our own version of Pi we'll use the static keyword the name will be Pi Pi will equal 3.14159 just the first few digits I'm going to zoom in a little if I would like the static property I have to access it by its class so let's console. log the name of the class math util dot the name of the property Pi our static property is 3.14159 I don't need to create an object object in order to use this property I don't have to type const math UIL 1 equals new math util I would have to type math util one that's the name of this object in order to access Pi all I have to do is type the name of the class and that's pretty convenient anything declared as static belongs to the class itself and not any object created from that class so now we're going to create a static method we'll use the static keyword we'll get a diameter once we pass in a radius as an argument get diameter we have one parameter a radius all we're going to do is return radius time 2 okay let's console.log again we have to type the name of the class matthu till dot the name of the method get diameter we have to pass in a radius though let's pass in 10 our diameter is 20 let's create a new static method for get circumference get circumference the formula is going to be we will be returning 2 * this meaning Matthew till. pi times the radius we receive let's console.log let me make the C Capital the name of the class math util dot get circumference pass in a radius the circumference is 62.83 let's create one more for get area static get area we need a r radius we will return this Pi time radius time radius so that's radius squared console.log matthu till the name of the class get area pass in 10 and the area is 31415 in the next example we'll have a mix of regular properties and methods and static properties and methods this will be example two we'll create a class of users class user we'll create a static variable to keep track of the amount of users we create user count I will set that equal to zero I'll include a Constructor let me just space this out a little our Constructor is going to be automatically called when we instantiate a new object we need one argument though when we create a new user we need a username once we have our username we will assign this do username equals username not only that but when we create a new user I'm going to increase our user count by one just so we can keep track of how many users we create so inside the constru RoR you can write additional code it's not only for assigning properties let's take user. user count Plus+ to increment it let's create some user objects const user one equals new user pass in a username I'll pass in SpongeBob then let's console.log user one's username which is SpongeBob let's attempt to access user one's user count with user one's user count we get undefined that's because our user doesn't have user count as a property it's static that means it belongs to the class not any objects created from the class to access user count we have to type the name of the class user in this case we have one user let's see what happens when I create a new user object user 2 will equal Patrick our user count is now two let's display user 2's name yep we have SpongeBob and Patrick the total user count is two let's create a third user user three will be Sandy console.log user 3. username our user count is now three we have a static property that's keeping track of the amount of users we create let's create a method the first one will not be static say hello all we're going to do is console.log I'll use a template string hello my username is add a placeholder this do username let's have user one use there say hello method same thing with user two and user three hello my username is SpongeBob Patrick and Sandy now we'll create a static method we'll get the user count get user count console.log I'll use a template string there are I'll add a placeholder user. user count users online now in order to access this method I have to type the name of the class user. getet user count oops and I can't console. log that user. getet user count there are three users online all right everybody so that is the static keyword it defines properties and methods that belong to a class itself rather than any objects created from that class in summary the class owns anything static not the objects and well that is the static keyword in JavaScript