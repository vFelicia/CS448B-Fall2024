what's up everybody so in today's video we're going to create a game of hangman using python I thought that this would be a good mini project for us while learning to code it is important to create small projects as you go along here's one that we can make together when creating a project I like to decare the various variables and data structures I'll need first followed by the functions I'll need for this game we will need a set of words one of these words is going to be chosen at random so let's create a few words I'll add some fruit apple orange banana coconut and one more pineapple using the random module let's import that import random using the random module we will pick one of these words at random we won't be able to see what it is but we can guess what the word is one letter a time once we reach six incorrect guesses we lose the game before each guess we will display some asky art which I will name as hangman art this will be a dictionary a dictionary where each key value pair contains a tuple so this is a dictionary of we'll have a key which will be a number and a tuple the key is going to represent the the incorrect number of guesses so we'll start at zero we will display a tupple which will contain some asky art then let me just copy this for one incorrect guess we'll display some different s art I'll just put each on a new line for readability so we're going to go all the way up to six once we hit six incorrect guesses we lose the game each key corresponds to the number of incorrect guesses once we reach six we lose the game each tupple that corresponds to the incorrect number of guesses we will display a certain image if you would like feel free to look in the description of this video if you would like to copy this to save you some time each topple will consist of three rows three strings for no incorrect guesses where incorrect guesses is zero we will display nothing we can't see our hangman person for one incorrect guess we will display their head for two incorrect guesses we will display their head and the main torso of their body which will represent with a vertical bar let me copy this one for three incorrect guesses we will display their left arm represented with the forward slash with four incorrect guesses we will display their right arm however if you use a backslash that's an escape sequence within a string you have to use double backs slashes to literally print a back slash so with five incorrect guesses we will display their left leg of the person then once we reach six incorrect guesses we display the full person that's when we lose of the game when we see the entire person that's some asky art that we can use so let's test it just to be sure that everything is working fine I will print my hangman art at the Key of zero to represent no incorrect guesses okay so when we display this person we're going to have to use some sort of loop for every let's say line in hangman art at index of zero for zero incorrect guesses I will print each line with no incorrect guesses we don't display anything that's correct we can't see the person and that's okay so with one incorrect guess display the dictionary where the key is one that displays the person's head two two would be the main torso of their body three their left arm four their right arm five their left leg and six their right leg once we see the entire person we lose the game so we can delete these two lines of code we no longer need them we know that our dictionary is working I'm going to zoom out a little bit following our dictionary we'll declare the various functions we'll need throughout this program we will Define a function to display man our hangman there will be one parameter wrong guesses and then for the time being I'll write pass we'll fill in this function later when we display our man we need to know the number of incorrect guesses to display the Right image we have a display man function and a display hint function we will have a string of hint then I'll write pass for now our hint is going to be a list a list of underscore characters for each letter that we guess right we'll flip one of those underscores to be a letter if that letter is correct I'll create a function of display answer within this function we will display the correct answer either when we lose the game or win the game and I will write pass we will create a function of main to contain the main body of code of our program again I'll write pass for now I'll add the following if statement if Dunder name is equal to a string of Dunder main if we are running this file directly I would like to call the main function to start the program all right let me zoom out this will be the main skeletal structure of our program import the random module we have our set of words we'll be importing more from a separate file near the end of this video we have a dictionary where the key is a number to represent the number of incorrect guesses and a tuple to display some asky art we have four functions display our man display the hint display the answer and the main function to contain the main body of code all right let's work within our main function within our main function we will create a variable of answer what is the correct answer that we have to guess I will access the random module call the method of choice then pass in our set of words one of these words will be chosen at random let's test that I will print our answer just temporarily we should get a random word apple apple pineapple Apple I guess it really likes apple for some reason there we go we have orange we are choosing a word at random we no longer need this print statement looks like everything is working fine now we'll display our hint our hint is going to be a list of underscore characters I need the number of underscore characters to equal the number of characters in one of these words that is chosen at random so I could multiply my list by the length using the length function of my answer so let's print our hint to see what we're working with with my selected word we have how many underscores one 2 3 4 5 6 7 okay we have a different word 1 2 3 4 5 that is probably Apple it has five characters all right so that's our hint it's a list of underscore characters when we guess a letter if it's correct we'll fill in one of the underscores with that correct character we need to keep track of the number of wrong guesses we'll create a variable of wrong guesses set that equal to be zero when we start the game we're going to keep track of all of the incorrect guesses that we've made we will create a set of guest letters for an empty set we'll call the set function normally in Python you can't create an empty set with just a set of parenthesis we have to use the set function then I will create a Boolean variable of is running set that to be true while our game is running continue playing once we lose or win the game we will switch this to be false to exit the game we will keep this as true when we initially run this program after we declare the variables we'll need within the main function we'll create a loop a while loop while is running we don't need to say while is running is equal to true we don't necessarily need to create that comparison we can just say while is running while this is true continue doing some code so what would we like to do let's call the function of display man but we have to pass in the wrong number of guesses call our function of display man pass in our variable of wrong guesses when we begin the game we would like to display one of these images then we will display our hint then we'll call the function to display our hint pass in our hint that was the list of underscore characters to represent the answer we have to guess we will create a variable of guess and accept some user input we'll prompt the user to enter a letter just in case a user types in a character that's uppercase let's add the lower method to make it lowercase so let's fill in our display man function there's not a lot to write here when we call this function we need to display one of these images based on the wrong number of guesses one of these Keys within the display man function we'll create a for Loop for every line in my hangman art this dictionary at the Key of wrong guesses this will be a number 0 through 6 depending on what this number is I will print each line print each line of that Tuple let's see what we're working with we'll do a test run so we are displaying no person we can't see them for testing purposes I'm going to change wrong guesses to be one we're displaying their head two displays their body three displays their left arm four is their right arm five their left leg and six is their full body that's when we lose now you don't necessarily need to do this but I'll add some text decoration before and after I'll add just a bunch of asterisks before and after I think that looks better but you do you let's be sure to set wrong guesses back to zero after we display our hangman we have to display the hint what's the clue we're trying to solve so we will call our display hint function and pass in our list of hint So within the display hint function let me zoom out I will print the following between each character within our hint each underscore we will display a space character strings have a builtin join method we'll call that then pass in our hint for each character within our hint join it by an empty space so now when we do a test run we are displaying an underscore to represent each character each is separated with the space while we're here we'll fill in the display answer function we just have to copy this line of code from from display hint replace hint with answer and that's all we need for the display answer function so let me test that real quick after displaying our hint temporarily I will display our answer just to be sure that it's working yep there's our hint and there's our answer that we have to guess okay let's delete this line of code we don't want to display the answer I was just testing it so the user is going to be able to type in letter to guess such as a for example once we guess a letter if that letter is found within the hint if it's one of these characters we need to switch that underscore to be one of those characters so we'll write the following if statement if our guess is in our answer in is a membership operator if this letter is found within our string of answer we're going to create a Loop we will create a loop that will iterate once for each character within the answer but we don't know the length of the answer because python will choose it at random so let's say for every index we can shorten this to I for I in range the length of my answer let's say the word is Apple the length of the word Apple has five characters this would would return five for I in range five then we will iterate five times we'll iterate this Loop once for the number of characters within my answer we'll check during each iteration if our answer at index of I during the first iteration that will be zero then the second iteration it will be one then two so on and so forth strings are iterable if our answer at index of I is equal to our guess if there's a match if we guess the correct letter then we're going to take our hint at that given index of I and set that equal to be our guess looks like this if statement is outside of the while loop I'm just going to indent it by one somewhere within it okay let's do a test run I'm going to guess the letter A yes we have 1 a let's do something that's probably not in here Q okay so there were no matches we don't end up doing anything so what is this word probably this should be the word orange so let's guess o r n e g all right we know that it works what if somebody types in some input that's not valid before checking if that guess is correct we'll do some input validation what if the user types in a whole word like pizza we want the user to only guess a single character not many characters We'll add the following line if the length of Our Guest that we type in does not equal one then I will print the following message let's say invalid input then we will use the keyword of continue to skip this Loop continue okay enter a letter I will type the word Pizza we get this message of invalid input we skip that Loops current iteration I will guess a there are two A's I will type banana and again we get invalid input we have to guess one letter at a time what if somebody types in a number like one we would like to prevent that so within this if statement I would like to execute this code if our guess is not an alphabetical character I can add the following or not take our guess dot use the the is Alpha method if our guess is an alphabetical character this returns true if it's not an alphabetical character it's false so we are checking if this is not an alphabetical character we execute this code let's try this again I will type in one invalid input 42069 invalid input let's say we guessed the letter A what if we type in a letter we have already guessed I will guess a again if they already guessed a letter I don't want that to count we'll skip the current Loop iteration I'll add another if statement if our guess is in our set of guest letters then I will print the following I'll use an F string our guess is already guest oh one thing I'm forgetting once we check that our guest is not within our guest characters we'll take our guest letters this is a set add the guess we're keeping track of the letters we have already guessed so I will type let's guess a we have 1 a if I were to guess a again we get that message of a is already guessed and then be sure to add continue to skip the current Loop iteration all right now going down to this if statement if guess is in our answer if we guess a character that's incorrect we will take our variable of wrong guesses incremented by one wrong guesses plus equals 1 let's do a test run I will guess a there is an a what about Q There is no Q we display our dictionary where the key is one we display that asky art R is there an R yes there is an R this is probably orange I would like to be sure we display the entire person I will guess some wrong characters we know that that works now we need a win condition if we guess all of the correct characters and display the entire word we'll work on that next if there are no underscore characters not in our hint this will be true if there are no underscore characters in our hint if underscores not in hint we'll call our function of display man pass in the wrong number of guesses call the function of display answer pass in our answer we will print the text of U Win then set our Boolean variable of is running equal to be false let's win this time I already know that this word is probably pineapple let's guess something incorrect there we go we have two wrong guesses but we have correctly guessed the word pineapple you win and we exit the program what if we lose I'll add the following if statement else if our variable of wrong guesses is greater than or equal so the length of our hangman art is a total of seven there's seven total keys but once we hit six we lose the game with this LF statement if the length of our hangman art the the length of our hman art is going to be seven so we are going to subtract 1 for six for a total of six once our wrong guesses is greater than or equal to six that means we lose the game we will call the display man function pass in the wrong number of guesses display what the correct answer should have been display answer pass in our answer we will print you lose then take our Boolean variable of is running set that to be false I'll guess incorrect letters there the word was coconut we have six incorrect guesses we display the entire hangman the correct answer was coconut you lose if you would like to import a larger variety of words we could create a separate python file for that so within our project folder we will create a new python file I will name this python file words list this will be a python file let's take our set of words cut it I'll add a note that these are words for Hangman game Word words will be a set I recommend looking online for a very large set of words that we can use then just copy and paste them within here while browsing online I found an extensive list of animals that I can use so here are all the possible words for my game so from my main python file I have to import this module of words list from the module of words list import words and now I have a greater variety of words I can use let's run this one last time this word has four letters I'll guess the vowels there's an a no E I O there is an O is it Goat nope t r bore all right the word was bore you win all right everybody so that is a game of hangman that we can create using python