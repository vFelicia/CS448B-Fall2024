yo what's going on everybody it's bro hope you're doing well and in this video i'm going to explain dictionary comprehensions in python so sit back relax and enjoy the show okay people dictionary comprehensions they're very similar to list comprehensions except they're with dictionaries that's it video over okay but seriously a dictionary comprehension is a way to create dictionaries using an expression and they can replace for loops and certain lambda functions and all we have to do is follow this formula dictionary equals key colon our expression for key value in iterable so let's go over a few examples our first example we're going to take this dictionary named cities in f f is short for fahrenheit i have different city names as keys and relative temperatures as values in fahrenheit so new york is 32 degrees fahrenheit boston is 75. los angeles is 100 and chicago is 50. and what we'll be doing is creating a separate dictionary where all of these temperatures will be in celsius using a dictionary comprehension so let's follow this formula let's create a new name for this dictionary let's say cities in c short for celsius equals and we will follow this pattern first our key golden then our expression we'll go back to this in just a moment for key comma value in our iterable of cities in f and since we're working with a dictionary we're going to use the items method now we just need to fill in this expression there is a formula to convert fahrenheit to celsius and it should be on the screen right about now so let's follow this formula so we'll take our value minus 32 and just for good measure i'm going to put these within parentheses and we will multiply all of this by 5 divided by 9 and that is it so we have our key our expression to convert fahrenheit to celsius for key value in our iterable of cities in f our previous dictionary and let's test this by printing our new dictionary cities in c actually i think i'm going to round these numbers just so it's more readable so let's round all this there we go so new york and celsius is zero boston is 24. los angeles is 38 and chicago is 10. so we created a new dictionary using a dictionary comprehension now with these dictionary comprehensions you can add an if conditional to the end of this so let's say that we have a separate dictionary of weather like a description of the weather in each city new york is snowing boston is sunny los angeles is sunny and chicago is cloudy let's say that we would like to create a separate dictionary with a dictionary comprehension that only has cities where the weather is sunny so i would write something like this let's say sunny weather will be the name of our dictionary equals and we'll follow this formula and then we just tack on our conditional to the end so it's kind of the same as before really so key colon and we don't really have an expression here so let's just say value then for key comma value in our iterable of weather dot items then our conditional if value equals sunny because we are only looking for sunny weather and let's print this print our dictionary of sunny weather and let me just make this more readable for you guys and our new dictionary comprehension will create a dictionary of key values where the value is sunny using an if conditional at the end of our dictionary comprehension here's a third example for you well if you have an if else condition you can add that to where the expression is within your dictionary comprehension so i'm going to reuse the previous dictionary for the first example where we have cities and their temperatures as values so we're going to replace each temperature with a description of the weather is it warm or is it cold so let's do that using a dictionary comprehension that contains an if else statement so let's say we have a new dictionary named desk short for description cities it's a brief description of each city's temperature so we follow this formula key then our if else conditional for key value and iterable actually i probably can copy all this just to save some time okay so our iterable will be cities dot items and our conditional is going to be we will return warm if our value is greater than or equal to let's say 40. else cold and we will print our new dictionary of desk cities description of cities so new york is cold because it's 32 that's below 40. boston is warm los angeles is warm and chicago is warm now if your condition gets somewhat complex you can even call a separate function to keep your code more organized so key then we can call a function and pass in a value for key value in iterable so i'm going to again reuse our city names and our temperatures and this time we are going to call a function instead i think i'll reuse this code from the previous example where we have a separate dictionary named desk cities and i'm going to replace this if else statement with a function so let's say we have a function that is named check temp and we will pass in our value and we just need to define this function so let's define that here so let's define check temp and our parameter is our value that we're currently working on within our dictionary value then we'll write if value is greater than or equal to let's say anything above how about 70 will return the word hot then else if let's say 69 greater than or equal to value and then value is greater than or equal to how about 40 then we will return the word warm and lastly else return cold and let me just fix some of the spacing now depending on the temperature that is stored within each value of our dictionary we will call a function that will return one of a few different outputs so it's kind of like we're using the map function the map lambda function so let's print our description of cities and we should get a short description of the temperature in each city after we call the check temperature function and then pass in each value from our dictionary so new york is cold because it's 32 degrees fahrenheit boston is hot because it's above 70. los angeles is hot because it's 100 and then chicago is warm because that is 50 which is between 69 and 40 within our function so that is a dictionary comprehension it's a shortcut where you can create dictionaries using an expression and they can replace for loops and certain lambda functions so if you would like a copy of all this code i will post all of this to the comment section down below and well yeah that's how dictionary comprehensions work in python hey you yeah i'm talking to you if you learned something new then help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you