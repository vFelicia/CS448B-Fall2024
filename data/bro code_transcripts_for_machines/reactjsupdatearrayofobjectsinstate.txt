hey everybody in today's video I'm going to show you how we can update the state of an array of objects if you're able to comprehend this lesson and you've watched previous topics we'll be ready to make a few projects in react so let's get started like we've done in Prior lessons be sure to import the UST State hook in this topic we're not going to create one state variable but four const cars cars is going to be an array of objects then we need a Setter for our array of cars equals use state I'm going to set the initial state to be an empty array then we will create a state variable for the cars year and a Setter for car year use state if we're going to be adding car objects to make it easier for me I could set the initial state to be a year like 2024 something that's kind of recent but I think it would be a lot cooler if we use JavaScript to get the current year right now I'm filming this video in December 2023 for the initial state I'm going to create a new date object then get the full year method for me this is going to return 2023 but depending on when you're watching this video it might be later we'll create a state variable for our cars make who manufactured the car set car make equals use State I will set the initial state to be an empty string then we need the model I'll just copy this because I'm lazy change make to be model set car model the initial State for the model will be a string all right now we're going to declare all the functions we'll need throughout this application we'll create a function to add a car remove a car change the year change the make change the model five functions total we'll declare a function to handle add car then a function to handle remove car there is one parameter an index what is the index of the object that we're removing from this array we need a Handler for year make and model function handle year change there is one parameter an event that will be provided to us through the onchange event handler we need a function to handle make change handle make change and handle model change so we should have five functions total add car remove car change the year change the make change the model let's create our HTML elements So within our return statement I will create a div to enclose everything let's create an H2 element for a heading list of car objects afterwards I will create an unordered list we will populate this unordered list later we will create three input elements for the year the make and the model of our car that we're trying to add we will begin with input that has a type of number I will set the value to equal the state of car year and for me that's 2023 that's because I'm creating a date object of the current date and time then returning the the year depending on what year you're watching this it might be different I will set the onchange event handler equal to a call back to handle year change I'll add a break afterwards okay let's copy this input element including the break the type of the second input element will be text the value will be the cars make who made the car the on change event handler will be a call back to handle make change we should add a placeholder to tell the user what we want them to type in it's not very apparent I'll put this on a new line for readability I will set the placeholder attribute equal to enter car make let's copy this element paste it for the third input element the value will be car model the onchange event handler will be a callback to handle model change the placeholder will be enter car model then we'll create a button to submit our car object button the text on the button will be add car we will set the onclick event handler equal to handle Adar all right now we have to fill in these functions we'll begin with handle year change because it's easy we will use the setter for set car Year we will pass in Access our event object that's provided to us access its Target access its value then we have to do this with make and model set car make access the value of the target of the event pass it as an argument set car model again take our event access its Target access its value so now we should be able to update these values let's try it when I click on the button I would like to add this object to my array of objects within our handle Adar function we have a few things to write it's not as complicated as what you think it might be using these State variables of year making model we will create a new car const new car equals a JavaScript object with these properties the year will equal the current state of car year the make will equal the current state of car make the model will equal the current state of car model then just for readability I'm going to put all these properties on a new line not necessary but but I find it easier to read we will use the setter for our array of car objects we will use an updator function we will take cars Arrow create a new array use the spread operator on cars we need to copy the previous elements over to the new array we don't want to lose them then we will add a new element our new car object so we don't want to use the current state of cars but rather the previous state with this updator function a common naming convention for your parameter is to use the first letter of that state variable let's rename cars as C so what we're going to do now is go to our unordered list we need to populate it with list items I will embed some JavaScript take our array of cars use the builtin map method to return a new array we're providing with two arguments an element and an index with the map method but I'm going to rename element as car so it's more understandable what would we like to do I'll use an arrow function we will return a list item element and for readability I'm just going to place these on a new line react wants us to add a key to each list item element so let's take care of that I will set the key of each list item element to be our index that's provided to us within each list item element I will display the cars year followed by The Cars make and the cars model all right let's see if this works let's add a 2023 Ford Mustang and that worked how about a 2024 Chevrolet Corvette and and a 2022 Dodge Challenger one thing I'm going to add to the handle Adar function after submitting a car I would like to reset these values at the end of this function let's use the Setters I will set the car year when we're done with it to be the current year we'll create a new date object get the full year update the state to whatever values turned we'll use the setter for the car make and reset it to be an empty string same thing with the car model all right let's see if this resets 2023 Ford Mustang and it does 2025 Chevrolet Camaro and that does reset you can see that my year went back to 2023 even though I adjusted it to 2025 the make and model were both replaced with empty strings now I would like to remove a car when I click on one of these list item elements we make one change to the opening list item tag I will set the onclick event handler to a callback to handle remove car we do have to pass in an argument though to the function we have to pass in an index what is the index of the car we're trying to remove if I attempt to pass in an argument we will call this function right away we will convert this call back to an arrow function that has no parameters So within the handle remove car function there's not a lot to write we will use the setter for our cars we'll use an updator function we don't want to use cars but we'll use the first letter to indicate we're working with the previous state arrow take the previous state of our array of cars represented as C use the builtin filter method we will filter any cars that don't meet a certain criteria the filter method provides us with an element and an index but we do have a naming conflict we already have a parameter with the name of index let's rename the index of each element within our array as I then do this with an arrow function we'll write our condition check to see if the index of the current element I is not strictly equal to the index we would like to remove we'll filter out that element when we create a new array so we're not working with the current element even though it's provided to us so what people do is a convention if you have a parameter you're not using people will change the name of that parameter to be an underscore that tells other people to ignore this parameter and that should work let's run and test everything let's add a 2023 for Mustang but feel free to pick some different cars 2024 chevret Corvette 2022 Dodge Challenger and I should be able to remove a car when I click on it that list item element our Corvette is gone our Mustang and our challenger all right everybody so that is how to create an array of objects and update their state using react