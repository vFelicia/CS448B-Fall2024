what's going on everybody it's your bro here hope you're doing well and in this video i'm going to teach you guys how we can use the canvas widget to draw some simple shapes so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running welcome back everyone well in this video we're going to be creating a canvas a canvas is a widget that is used to draw simple graphs plots and images within a window we're going to be creating some simple shapes in this video not anything too sophisticated i might get more into the canvas widget in a separate video and at the end of this lesson we're going to practice by creating a pokeball so to begin we'll need a window window equals tk followed by window.main loop to create a canvas we can just simply call this canvas canvas equals canvas and we're adding this canvas to our window and then we need to follow this with canvas.pack or place but i'm just going to use pack because it's simple this is what our canvas looks like it's a rectangular area which we can draw graphics on we can also set the width and the height of this canvas so when we create this canvas we're going to set the options for a height and a width so let's begin with the height height equals let's say 500 and the width will be the same 500 and now we have a square canvas that we can draw graphics on let's begin by creating some simple shapes maybe a line i think a line is a shape maybe a one dimensional one i don't know i don't geometry so let's create a simple line so we type the name of the canvas dot create and there's a bunch of different shapes that we can create let's create a line now i'm just going to turn this into a comment for a moment we need to set some coordinates for this line this top left corner of our canvas is 0 0 and the bottom right corner of this canvas is 500 by 500 depends on what you set the dimensions of the canvas to so when we create a line we need a starting point and an ending point so if we want this to start in the top left corner we're going to pass in 0 0 that is the starting position and we can place the coordinates for the ending position if we want this line to end in the bottom right corner that would be where x is 500 and y is 500 and this is what this looks like we just have a simple line going across the screen but that's not all we can also change the color of this line and the thickness let's begin by changing the color so we can do that with fill fill equals let's pick the color blue and now we have a blue line going across the screen but we can also change the width of this as well so we can do that using the width option and let's set this to 5. now we get an extra thick line across the screen now let's make a red line so i'm just going to copy this canvas dot create line and let's change some coordinates for this let's say we want this to start in the bottom left corner and go up to the top right so the starting x position would be zero y would actually be 500 x for the ending position would be 500 and y would be zero let's set this to red and we'll keep the width the same okay so here's our red line and notice that this red line is overlapping the blue line so when you create shapes on a canvas if there's any that overlap the one that you most recently created will appear on the top one option available to you is that you can actually give these graphics a unique name with our blue line we could call this blue line blue line equals all of this and then we can call our red line something different like red line this would be useful if you want to call or use a graphic by its name if you want to like move a graphic on the screen or have something appear you can use this by its name but we don't really need it for this lesson so i'll just revert this back to what we had previously i'm just letting you know that you can do that all right what do we have up next let's create a rectangle so canvas dot create rectangle we can set some starting coordinates and ending coordinates the starting coordinates are for the top left of the rectangle and the ending coordinates are for the bottom right so for the starting coordinates let's say we're going to place this where x is 50 y is 50. for the ending coordinates we want this where x is 250 and y is 250. i'm just making up numbers put it whatever you want really and this is what this looks like but i think i'm going to comment out these lines for now and here is our rectangle well i guess it's also a square we can actually give this a fill color as well so we do that with the fill option fill equals purple i guess and now we have a purple rectangle next on our list is create polygon we can create many sorts of shapes using create polygon but it really depends on how many coordinates that we enter let's create a simple triangle so we need at least three coordinates for this to work so canvas dot create polygon and i have some coordinates picked out already so let's place the first set of coordinates where x is 250 y is zero for the second set where x is 500 and y is 500 in the last set the third set we'll place this where x is 0 and y is 500 and what this looks like is that we have this black triangle that's taking up most of the canvas we can also change the fill color as well so we do that with the option fill and we can set this to whatever color you want let's say yellow and we now have a yellow triangle on our screen and it kind of resembles the triforce from the legend of zelda series one of my personal favorites let's also add a border this is actually done with outline outline equals and then pick a color for the outline let's say black and we have a black outline around this graphic and you can also change the thickness of this too with width and let's set the width to 5 and now we have an extra thick line around our triangle with these shapes you can pass in a list of points too so i'm going to get rid of all these and we're going to pass in a list so let's create a list called points points equals all the points that we just entered in previously and then instead of passing in all these coordinates individually i'm just going to pass in our list of points and this will work exactly the same okay let's create an arc now so canvas dot create arc and arc is really just a curved line between at two points however when we list some coordinates we're not listing the coordinates of the starting position and ending position for this arc it's more or less for the amount of space that we want to allocate to actually draw this arc so let's say that we want this arc to take up the entire canvas we can pass in the dimensions for this canvas so the top left corner is zero zero and the height and the width are five hundred so this is our arc it resembles a pi slice it's not starting in the top left corner and ending down here that's the amount of space that we're giving this create arc function to actually draw an arc it's really an entire circle but only a portion of it is visible let's also set a fill color for this so fill equals what color did we not pick yet let's say green and now we have a green pie slice there's different styles you can do too so we can change that with style equals the default is pi slice that's what we had previously let's change this to chord this will draw a line between these two points and this kind of resembles like a bow like a bow with arrows and there is also just arc where it's simply just a curved line let's change this back to pi slice well because i like pi we can change the starting position of where this arc begins with the option start so start equals 0 by default so there's going to be no apparent change let's adjust this by 90 degrees so this is in degrees so this shifted what is this direction counterclockwise by 90 degrees so 180 would theoretically flip this and now this is on the other side of what we had previously and then 270. all right we can also set an extent so the default is normally 90 degrees but let's change this to 180 and now we have a what is that hemisphere half a circle all right people let's practice by creating a pokeball there's still one more function that we have to cover it's called create oval but we'll do that as we're making this so let's begin by creating the top red hemisphere of this pokeball so that's canvas dot create arc and we're going to set the extent of this to 0 0 500 500 so that this is going to take up the entire canvas and then let's also set a fill color to red so fill equals red we need to change the extent of how far this extends so we'll do that with the extent function so extent equals 180 so that this is a half circle and let's also change the thickness of this outline as well using the width option so width equals 10 would be good and we have a red hemisphere for the top of our pokeball let's work on the bottom half so that is a white hemisphere so canvas dot create arc these are all the same we'll change the fill to white the extent will be the same but we need a different starting position so start equals 180 so this is going to begin at the 180 degree mark so when you combine these both together we get two different colored hemispheres that form a perfect circle now let's create an oval within the center of this pokeball so we're going to do that with canvas dot create oval we're going to set the amount of space that we want to give the circle to be drawn so we'll place this where x is 190 where y is 190 where x 2 or the second x position is 310 and y2 is 310. let's set the fill color next so we do that with fill fill equals white and lastly let's just give this a thicker border so that is width equals 10 to match the width for the two arcs that we have and there you have it we have a simple pokeball alright well that's the basics of the canvas widget if you'd like a copy of all this code i'll post all of this in the comments down below but yeah that's the basics of the canvas widget in python hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you