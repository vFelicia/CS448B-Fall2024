hey everybody what's going on in today's video I'm going to show you how we can both sanitize and validate user input in PHP we're going to need an HTML form to work with I'll go ahead and create that here's my form we have a text box and a button when I click on the button we'll execute some code I will enclose all of my code with an if statement we will check to see if our login button is set if it's interacted with if set we're accessing post if our login button is interacted with let's get the username from the text box and store that within a local variable then let's Echo hello username so I can type in a username Press login and we are pretending to log in if you don't sanitize or validate your user input somebody could write some malicious code like a crosssite script or SQL injection such as this you have a virus what I did is just write some malicious JavaScript code to display you have a virus it would be best to prevent code like that from running one way in which we can do that is to add a filter to sanitize any user input instead of assigning our username directly from our post variable we are going to use a function the filter input function and there are three arguments the first argument is input post because we're using the post method if we were using get then this would be input get the second argument is the name of the input which in this case would be username then third is the type of filter I'll put this on a new line because I'm running out of room I would like to remove any special characters used in executing code so there is a filter for that it's filter sanitize special chars I'm going to take this JavaScript code paste it into my username and we'll see if we can execute this code which we cannot instead of executing the code we are using it as output and if I were to right click then go to view page source any special characters are replaced here is that JavaScript code I entered it's not executing because we filtered these special characters if you ever need to filter all characters besides numbers there is filter sanitize number int that's another filter let's create a new text box for an age age the name will be age so again let's create a new variable named age equals filter input input post because we're using post the name of the input is age then the type of filter filter sanitize number int let's create a new message you are variable age years old if I were to type in then press log in we will filter all characters besides any numbers that is the filter sanitize number end filter now maybe we need an email let's create a new text box for an email email the name will be email equals again filter input the first argument is input post or input get if you're using get the name of the attribute is email the third argument is the type of filter sanitize email your email is variable email I'll type in an email then add some illegal characters for an email such as angle brackets and parentheses and this should filter all of the illegal characters which it does here's my email without those illegal characters so those are a few ways in which you can sanitize input now let's validate input using a validate filter if our input doesn't pass a validation test it returns an empty string sanitization will strip certain characters of user input validation if it doesn't pass it just returns an empty string so now we have variable age age equals we'll use filter input again input post because we're using post the name of the input we're filtering is age then the type of filter validate int if our user input isn't a number we will assign an empty string to age it doesn't pass the validation test so let's check that let's use an if statement we can use the empty function if our age is empty that means a user didn't type in a valid number let's Echo that number wasn't valid else if our age is not empty that means they typed in a valid number you are age years old let's run this again uh I'll type in a bunch of characters I'll try and log in uh that number wasn't valid I'm not surprised so now let's type in a valid number and that seems to work using this filter we can check to see if some input is only numbers the next filter is to validate an email to see if it's in a correct format let's copy these two lines of code paste them variable email input post we are getting our email user input filter validate email if our email is empty that email wasn't valid else your email is our variable email okay I'll make up some email Press login that seems to work I'll type in that same email but I'll add some illegal characters like angle brackets and parentheses that email wasn't valid all right everybody so those are a few filters you may be interested in when accepting user input it is a good idea to both sanitize and filter user input just in case a user types in some malicious script you don't want any of that sanitize and validate your user input whenever possible and well everybody that's how to both sanitize and validate user input in PHP