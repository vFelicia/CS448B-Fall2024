hello everybody today I'm going to show you how we can write a substitution Cipher encryption program basically speaking what we're going to do is that we have a message to hide the message we can encrypt it by replacing every instance of one character with another chosen at random using the same key we can then decrypt the message when I was at my University I took an intro to cyber security course I turned this program in as a final assignment and I did get an A on it I don't know maybe it'll help you at the very least it's a good exercise all right let's get started everybody we will Begin by importing the random module as well as the string module let's create a string of characters named chars whatever characters you would like to use for your encryption program list them here as a string however this can be a lot to write I think a better solution would be to import some constants from the string module I'm going to include some punctuation I will import the punctuation constant of the string module how the heck do you spell punctuation okay that's right plus I will add some digits string dot digits constant Plus string Dot ASCII letters let's take a look at our character so far we have one long string of characters what if I would like to include a space a white space well there is a constant for that but that includes things like carriage return that's going to warp our results let me show you just for a demonstration string dot white space plus all the other stuff we have a carriage return and some other characters I would like to avoid that so in place of importing the white space constant from the string module I'm going to add a space character that's good enough here are all the characters I will be using this program feel free to add more or less this is all one long string I'm going to turn the string into a list where each character is an individual element to do that I'm going to take our string of chars reassign it then Typecast my string of characters as a list then let's print it again print chars instead of one long string we have a list a list of all the characters we'll need I am then going to create a key which we will Shuffle eventually key then to create a copy of a list you can type the original list dot copy method then I will print my key I'm going to place these lists within an fstring chars then key let's see what we have we have two identical lists one for the original characters and the other for the key we're going to shuffle this key random dot shuffle pass in our list of key look at that all of the characters are now shuffled in a random order what we'll be doing when somebody types in some text to be encrypted we will replace every instance of one character within that string let's say an O then replace it with another one every time we run this program this key will be reshuffled let's ask for some user input this part of our program we will do some encryption plain text is the original message plain text equals we will accept some user input enter a message to encrypt ciphertext is the name of the encrypted message that will be an empty string okay let's say a user types in a message enter a message to encrypt I like pizza it's a very important message every instance of a character within my plain text I will refer to the key and replace that letter with a different one for example any z's I have two Z's in this program will be replaced with let's see capital B every time we run this program though it's going to shuffle the key so it's not going to be consistent what we're going to be doing is iterating over every letter in our plain text for every letter in plain text strings are iterable find the index of every letter from our plain text within our list of characters let's assign a variable index index equals take our list of chars use the index method we are looking for that letter whatever letter we're currently on then return an index then refer to our key get whatever letter is at that same index so we will append that to our ciphertext it's currently an empty string sniper text plus equals our key at the given index our ciphertext should be the encrypted message now let's print it out print I'll use an F string original message let's print our plain text then our encrypted message print our ciphertext string let's take a look so far enter a message to encrypt I like pizza then here's the new encrypted message every instance of a character within my plain text was replaced with another so for example any z's were replaced with E I have two e's within this encrypted message if I were to run this program again it would likely be different I like pizza and here's my new encrypted message my Z's were replaced with semicolons this time for every ladder in our plain text get the index of each letter then refer to the key add the new character to our encrypted message it's probably best for us not to display the characters and the key so let's hide those we will be reusing this key for decryption now to decrypt the message let's copy this section of code paste it we are now decrypting we will ask for some Cipher text then reset our plain text for every letter in our Cipher text refer to our key append a character to our plain text within our list chars at a given index we will display our encrypted message followed by the original message let's try it one last time enter a message to encrypt I like tacos here's my original message then the encrypted message if I were to decrypt the encrypted message it should give me my original message I will type in these characters exactly hit enter and here is my message decrypted I like tacos alright everybody so that is a substitution Cipher encryption program for beginners when I was at University I did turn this program in for a final assignment for a cyber security class and I did get an A on it so maybe it'll help you and well yeah that's an encryption program for beginners in Python