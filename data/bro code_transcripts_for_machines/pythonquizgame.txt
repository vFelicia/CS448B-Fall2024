hey what's going on everybody it's you bro hope you're doing well and in this video i'm going to show you guys how we can build a basic quiz game in python so sit back relax and enjoy the show if you wouldn't mind please like comment and subscribe one like equals one prayer for the youtube algorithm to begin this project i think it would be wise for us to create a skeletal structure for how this program is going to operate and then we'll fill in the gaps later as we go along so to begin let's define all of the functions that we'll need we'll need four we'll create a function that is named new game whenever we call this function it will create a new quiz game for us and for the time being let's write pass just as a placeholder we'll have a total of four functions new game a function to check our answer a function to display our score and lastly a function to play again all right now i'm just going to add some comments here just to separate each of these functions that we have just so that it's a little bit easier to read although this part is not really necessary so i just want to separate each of these functions for some readability okay those are all the functions that we'll need what we'll need now is some sort of collection to hold all of the questions and answers that we have and i think a dictionary would be perfect for this so what i did is that i created a dictionary named questions a dictionary has key value pairs each key is a question that i would like to ask and each question has an associated value we'll have the user guess between answers of a b c or d so these would be all of the correct answers all of the values within this dictionary so here are some of the questions that i want to ask feel free to come up with your own questions if you would like you can copy the questions that i have they should be posted in the comment section down below so the questions that i'm going to ask are who created python what year was python created python is attributed to which comedy group and lastly is the earth round i couldn't think of a fourth question so i just threw in a random stupid question and the correct answers to all of these questions in order would be a b c and a but feel free to come up with your own well we have our questions but we'll need some sort of collection to hold all of the different possible answers to each of these questions and i think a 2d list would work perfect for this so i have a list of lists a list of tuples could work too i suppose so here are all of the answers for the first question and the correct answer is a i believe his name is guido van rossum hey if you're listening man i'm sorry if i'm mispronouncing your name i'm really trying here the second list corresponds to the second question what year was python created it was created in 1991 at least according to wikipedia python is attributed to which comedy group the answer is c monty python like monty python and the holy grail good movie by the way and lastly is the earth round this is a highly debated topic but the answer is a the earth is in fact round so i have a list of lists each list corresponds to a key value pair within my dictionary of questions and this is a lot to type if you want you can just copy the code that i posted in the comments down below just copy and paste and you'll have all of this or if you want you can pause the video and type it i don't care so now that you have your questions and your options we're ready to begin so the first thing that we'll do within our program is to call the new game function to begin a new game so after we have our questions and options created let's create a new game by calling the new game function now when we run this program we'll generate our dictionary of questions and our 2d list of different options for each question and then we will call the new game function to begin a new game so let's head to the new game function and fill in everything within our new game function so at the top let's declare a few things let's say we have a list named guesses and guesses will be an empty list for now i will declare a variable called correct guesses set it equal to zero because we haven't guessed anything yet and we will set a current question number and set the sequel to one to represent the first question okay now we need to display all of the questions within our dictionary of questions and we can use a for loop for that so for key in questions i'm going to print my key and let's just test this okay yeah here's all my questions i think what i'll do is actually print something to separate each question let's say one of these lines i think it would look better with them okay i'll print this line and then we'll move on to a question all right now after rerunning this we have each question and i added just a line break between each of these to make it look kind of fancy now i need to display all of the different options for each question and we can do that with a nested for loop so if i were to write 4i in options print i let me show you what happens now with the way this for loop is written now it's going to display all of the different options available to us for the entire quiz game what i would like instead is to display only the first list for the first question and then the second list for the second question and follow that pattern so we're going to change our for loop around 4i in options and we'll set an index for options the index is going to be our question number minus one now remember what i said in previous videos where different collections including lists tuples etc the first element in a collection has an index of zero because computers always start with zero then the next element would therefore have an index of one then two three then you follow that pattern we're using this question number variable as some sort of counter and since we initially set this to one i'm just going to subtract 1 so that we effectively receive 0 as the index and now we just need to increment our question number after each iteration so let's do that i will add that to the end here after we finish displaying all of the options let's increment question number by one by typing question num plus equals one and if i were to run this currently we'll display all of the different options for each question who created python here's all of the associated options what year is python created python is attributed to which comedy group and lastly is the earth round now it's time for some user input so i'm going to create a variable called guess and make sure you don't put it within your inner for loop it should be within the outer for loop guess equals input and i'll create a prompt enter a b c or d here's something to consider we would like the user to type in either capital a b c or d with strings they're case sensitive what if the user typed in one of these letters but lowercase if they're correct we would still like to give them their point why don't we take our guess and make it uppercase so guess equals guess and we can make this uppercase using the upper method of strings at the end of this game i'm going to compare our guesses to the correct answers so we have an empty list named guesses and i'm going to append our current guests that we're working on to our list of guesses so guesses dot append and we will append our guess this round now that we have our guess and we've appended our guests to our list of guesses let's check to see if it's the correct answer or not so we're just about to fill in this check answer function next so we are going to call this function and pass in a few items as arguments so let's use the check answer function and we'll pass in the key for the current question that we're on so the key is the correct answer so that would be our questions dot get key this would be the answer and we'll also pass in our guess and we are going to fill in the check answer function but we need to set up the parameters we're receiving effectively our answer as well as our guess so i'm going to name these as answer and guess and we are going to check to see if our answer is equal to our guess if answer is equal to guess let's print something print correct and i think we should give the user a point we'll have our check answer function return one for one point return one else if this is not the correct answer let's print wrong and we will return zero they do not get a point and since this is returning a value we should assign that so let's assign the point we may or may not receive to our variable of correct guesses which is initially set to zero so we'll type correct guesses plus equals check answer and check answer will return one if we scored a point or zero if we did not score a point and make sure you have plus equals because if you just set this to equals then we cannot score more than one point it will either be zero or one so we are effectively incrementing our correct guesses by one for each point that we score and now we're going to work on the display score function and we'll call that at the end after we finish all of our questions that we have so make sure that you do not write this within the for loop it should be outside of it because once we finish iterating through all of our questions we're going to display a final score so let's call the display score function and we'll need to pass in some arguments our correct guesses as well as our list of guesses okay let's head to the display score function so we have as parameters correct guesses as well as guesses i need to remove this pass i'm going to add one of these fancy lines in just to separate the questions from the results and i will print results and maybe another one of these lines okay so i need to print all of the answers answers and i do not want to end on a new line so i'm going to set end equal to nothing and i need to display all of the values within our dictionary all of the answers i will do that using a for loop for i in questions print questions dot get i and i do not want to end on a new line so i'm going to set end equal to nothing effectively and then i'll print a new line okay let's work on the guesses i think i'm just going to copy all this and make some changes i'll replace answers with guesses for i in guesses print i okay let's just be sure that everything's working we're not calculating a score quite yet so i'm just going to answer a then b c and d on second thought after printing each of these answers and guesses i'm going to add a space after each of these so within each of these four loops at the end i will add a space let me try that again a b c d okay not too bad now let's calculate the final score and we're still within our display score function let's set score equal to correct guesses divided by the length of our questions and let me add a set of parentheses around here then i'm going to multiply our score by 100 and if you don't want a decimal portion because we'll display a percentage we can cast this as an end okay that all looks good and we'll print the final score print your score is plus we need to cast our score to a string because we're using string concatenation plus i'll add a percent sign all right let's try it i'm intentionally going to get the last question wrong so we should have a 75 if we have four questions so that would be a b c is the earth round what's earth i'm gonna guess d answers a b c a your guess is a b c d your score is 75 okay let's test it but getting all wrong answers d d d d your score is zero percent congratulations and we'll test it one more time but get all the right answers we just want to be sure that we have 100 that's a b c a your score is 100 now the last thing that you can add is that we can play again if we want and i have a separate function for that if you would like to add this option here's how to do so let's remove that pass let's set a variable named response equal to some input do you want to play again let's ask for yes or no actually let me remove that okay and depending on the user's response it might be a lowercase so let's make it uppercase response equals response and use the upper method if response is equal to yes all caps if response is equal to yes then return true else we will return false and that is it for this function the last thing we need to do is to create a while loop that will continue to ask the player if they want to play again this will be after we call the new game function while play again and remember this will return either true or false depending on the user's response while play again new game and call the new game function to create a new game for us if we escape the while loop that means the user doesn't want to play again so let's print a message such as by e all right let's test it i'm going to get all of the correct answers this time a b c a all right your score is 100 do you want to play again i'm going to type yes all right then we can play again d d d d your score is zero percent do you want to play again no i think i mastered this game bye all right everybody so that's how you can use python to create a simple quiz game i will post all of this code to the comment section down below but well yeah that's a basic quiz game in python for you all hey you yeah i'm talking to you if you learned something new then help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you