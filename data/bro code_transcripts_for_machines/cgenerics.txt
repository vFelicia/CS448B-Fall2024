hey what's going on everybody it's bro hope you're doing well and in this video i'm going to explain generics in c sharp so sit back relax and enjoy the show if you wouldn't mind please like comment and subscribe one like equals one prayer for the youtube algorithm uh generics all right let's get started generics anything that's generic is not specific to any particular data type we can make something generic by adding a set of angle brackets then t we can make classes generic methods fields whatever we want this allows for greater code reusability for different data types let's say that we have three different types of arrays an array of integers doubles and strings let's create those int array i'll call this interray equals i don't know one two three the elements really aren't important the data type is okay then let's say we have an array of doubles i will name this double array and the elements are 1.0 2.0 and 3.0 then let's say that we have an array of strings string array equals one two and three okay what if i would like to display the elements of each of these arrays so we can use a method for that let's begin with a method to accept an array of integers so let's add that here public static void we're not returning anything and let's say that this method is named display elements so there is one parameter if we're displaying an array of integers well that will be our parameter int array and let's call this array and then we'll need a for loop or for each loop to iterate over the elements of this array let's use a for each loop for each int item in array then we will write preferably not writeline item then maybe i'll add a space okay let's call the display elements method that we just created and then pass in our interray as an argument and let's see what happens okay we have the numbers one two three so what if we attempt to pass in our double array display elements then we will pass in our array of doubles so we actually can't use this method for doubles we can only use this for integers cannot convert from double to int if i would like to display my array of doubles well i would need a completely different method that accepts an array of doubles as an argument so i'm going to copy this current method that we have change into double and change into double here as well and then we can call this version of our display elements method and this will do the same thing actually let me make one change i'm just going to add a right line to the end of these so basically we have two methods that do the exact same thing however they accept a different data type as an argument let's add one more method for strings public static void display elements the parameter is an array of strings for each string item in array and then i can use the string version of display elements but pass in our string array so we have each of our three different types of arrays all displayed so this is a lot of work we have three methods that do basically the same thing however they accept different arguments so what if we had one method that could accept basically any data type well that's where generics come in so let's take these first two methods and delete them we will no longer need them we're going to turn this method into a generic method so after the method name add a set of angle brackets then add t so really you can put anything you want between these angle brackets i like to say thing because i think it's funny we're going to accept a thing as an argument so we need to change that here as well so change any instance of a data type to t or thing if you're using thing okay so change string to thing we're accepting an array of things for each thing item in array so now we have one method that accepts all data types we can reuse this one method for an array of integers doubles and strings and it appears to work so that's where generics are helpful anything that's generic is not specific to a particular data type we can add angle brackets t or really anything within these angle brackets just make sure that it's consistent so we can add this to classes methods fields etc and this allows for greater code reusability for different data types so instead of three different methods that all accept different data types we have one that accepts basically all data types so yeah those are generics if you found this video helpful be sure to smash that like button leave a random comment down below and subscribe if you'd like to become a fellow bro