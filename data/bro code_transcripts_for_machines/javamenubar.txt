hey what's going on everybody it's your bro here hope you're doing well and in this video i'm going to teach you guys how we can create a menu bar in java so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running all right people let's dive into this so i have two classes a main class and then a my frame class my frame extends jframe so it behaves exactly like a jframe it also implements the action listener interface and within my main class i just have a new instance of my frame and within the constructor of my frame i have four lines of code this dot set default close operation jframe exit on close this dot set size set this to whatever size you want i just picked 500 by 500 this dot set layout i'm using a new flow layout and this dot set visible set to true and then also make sure you have an action performed method so let's begin to create a menu bar we first need to create the menu bar then we add separate menus or tabs kind of like what we have at the top here with our id is there's different tabs that you can navigate to and there are also menu items that you add to each of these tabs to each of these menus so let's begin by creating the menu bar to actually be as the container to contain all of these menus and menu items so let's create a j menu bar and we will call this menu bar equals new j menu bar and then instead of adding this to the frame we set it so type in the name of the frame you're using for me it's just this so this dot set menu bar and we place the name of the menu bar within this method that's set j menu bar by the way alright so let's try this all right so nothing is currently visible that's because we have to add menus to this menu bar kind of like what we have at the top of our id is so let's create menus for file edit and help so these are j menus j menu let's call the first menu file menu equals new j menu and then you can either set some text or pass this to the constructor i will just say file and let's do the same thing for edit and help so we have an edit menu that says edit and a help menu that says help now with these menus we add them to the menu bar we don't set them so we type in the name of our menu bar menu bar dot add then we're going to add these individual menus so we're going to add the file menu first followed by the edit menu then help menu so edit menu and then help menu and now these should be visible so you can see here here's our menu bar and here are the individual tabs or menus however if we were to click on these there's no menu items so let's add a few items to our file menu so these are menu items so let's declare these let's say we want a menu for a menu item for save load and exit so these are j menu items and we'll call the first one load item equals new j menu item and we will set some text either by using the set text method or just pass this into the constructor so this will be load then we'll want a few others for save and exit so this will be save item and the text will be and exit item and the text will be exit so then with these items we add them to the menu that we want let's say we want to add these to the file menu so we type in the name of our file menu kind of like what we did with our menu bar so file menu dot add load item so this is a menu item and we'll repeat the process for save item and exit item so save item and exit item and i'm just going to group these together so it's easier to read all right so this is what we got so far we have our menu bar we have our menus they kind of function like tabs we don't have anything added to help or edit i don't really think we'll need to but with file there's actually a drop down menu we can select one of these items to perform some sort of task for us so let's use our action listener interface to actually have these perform some sort of task for us so we need to add an action listener to each of these menu items so let's add them here so load item dot add action listener since we're implementing an action listener interface we can just pass in this and we'll repeat this process for the save item and the exit item so save item and exit item so now these will respond to clicks if you were to click on them however we need to state what we want them to do within the action performed method so let's just do this with some if statements so if e dot get source is equal to our load item we will pretend that we're loading a file so system.out.printline i think i mistyped this there we'll display a message beep boop you loaded a file all right but within our action performance method it does not recognize this load item component so we need to declare these outside of our constructor because right now they are only local so anything within the constructor within these sets of curly braces actually recognize what this is so let's declare all of these items all of these components outside of our constructor so that's j menu bar and we do not need to declare this twice i could have done this for the beginning but i think it's easier to understand if i just declare everything all together and then we fix this later so give me one moment to fix these so that's our edit menu our help menu and then we will probably want to declare the items as well outside of the constructor so we have load item save item and exit item actually i think i'm just going to copy all these and get rid of most of these uh lines here there we go all right so our action performed method now recognizes this load item component and let's just create a few other if statements there's more elegant ways of writing this but this is something really simple for us beginners so let's say if e that gets source equals save item we will display b boop you saved a file and then lastly we have exit item so it's the same process as before so exit item actually why don't we have our program actually exit so in order to do that it is system dot exit and then you can just pass in zero all right so this will now respond to events so here's our menu bar each of the menus and here are the menu items so if we click load it's going to pretend that we're loading a file file save you have saved the file and then exit exit will actually work because system.exit will close out of your program one feature available to us is that we can set keyboard shortcuts for all of the menu items and the menus so in order to do that we use the set mnemonic method so let's add that perhaps here so let's begin with the different menu items so we type in the name of the menu item we want to add a mnemonic to so that is let's say load first so load item dot set mnemonic it's spelt kind of funky so set mnemonic and then we add a key event so key event dot and then the key that we want to set for this shortcut so let's say we want l for load so that would be vk underscore capital l so i'll add a comment here so this is l for load and let's set a few others for save and exit so save item set mnemonic key event then s make sure that's capital s for load so s for load and then exit so that is exit item key event how about e e for exit let me fix that all right let's try this so we still need to navigate to the specific menu where these are contained but if you look at each of these menu items here they are underlined with their keyboard shortcut so if i were to type l it's going to load a file s to save and then e to exit and you can do the same thing for the individual menus as well so let's set a mnemonic for those i'm just going to group these together so we have file menu edit menu and then help menu so let's say f e h to match the file or the different menu names so that's f e and then h however for these menus you need to hold alt plus whatever key so that's alt f for file and then alt e for edit and alt h for help probably change these as well so alt f for file alt e for edit and alt h for help and let's give this a go now i'm not going to use the mouse cursor at all i'm going to use my mnemonics that i set up so if i want the help menu that is alt h edit is alt e file is alt f and then to select one of the menu items i don't need to hold alt i just select the letter so you can actually see that they're underlined too so load is just l i need to go back to the file if i want to select something else so that is alt f then s for save alt f again to go back to file and then e for exit all right so let's also set some icons for each of these menu items so i have a few icons that i want to use for load i just have a folder save is a floppy disk and exit is a door because i think that's appropriate so i'm going to create some image icons but i'm going to declare these outside of our constructor so image icon i will call the first one load icon and then i want a save icon and exit icon so this is save icon and then exit icon and i'm going to instantiate these within the constructor so load icon equals new image icon then the file path or the file name since these are within the same project folder i just have to use the file name i don't need the full file path so for load icon i'm going to use load.png and repeat the process for save and exit so save icon save.png exit icon and that is exit.png and then we need to set these icons to the menu items so let's add them perhaps here so load item dot set icon then we pass in an icon i'm going to pass in my load icon that i created and we'll need to repeat the process for the other items so next we have save item and this icon is that floppy disk save icon and then exit item dot set icon exit icon so now we should have some icons for these menu items so here we go we have the three icons that i wanted to use we can load we can save and then we can exit all right so in the next video i'm going to show you guys how we can use the j file chooser class where we can actually select a file and you can use this as like a backbone if you want so that's the basics of what did we cover again menu bars menus and menu items if you want a copy of all this code i'll post all of this in the comments down below but yeah that's the basics of creating a menu bar in java hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you