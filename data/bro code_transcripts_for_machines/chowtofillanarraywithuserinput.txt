hey welcome back everybody in this video i'm going to explain one of a few ways in which we can accept user input and place it within an array there's no onesizefitsall way to do it i'll show you one way that's good for beginners let's begin by creating an array i'll create an array of strings named foods we're not going to be assigning values to this array quite yet that's where the user input will come in if we're not assigning values right away when we initialize this array we'll have to specify a size for the time being let's say 5 something small now arrays they're static data structures while our program is running we can't change the size of this array the max size is stuck at 5 and that might be a problem if we would like to enter in more than five items we'll discuss dynamic memory in a future video then i'm going to calculate the size of this array and size equals size of my array foods divided by the size of one of the elements foods at index of zero let's create a for loop to iterate over the elements of this array four and i equals zero we'll continue this as long as i is less than the size of our array then increment i by one let's create a prompt standard output enter a food you like then i'll display the number to show the user what number we're on i then i'm just gonna add a colon at the end if we're working with strings we should probably use the getline function just because what the user enters may contain spaces get line standard input we'll place our input within our array foods at the index of i whatever we're currently on our counter at the end of our program let's display a message you like the following food i'll use a for each loop to iterate over the elements of this array we list the data type a name for the current element food in foods let's display standard output whatever the food is i'll add a new line and that should be good now take a look at this enter a food you like we're on number zero i'm going to add plus one to i when we display our prompt the user is not going to be sure why there's a number zero but we know that's the beginning index of an array so i'm just gonna change that here enter a food you like we're on number one pizza hamburger hot dog ramen sushi and these are the five elements you like the following food pizza hamburger hot dog ramen sushi okay that's pretty good so far suppose the user only wants to enter in three elements not all five we should add some way to escape out of this for loop based on some user input i'm going to add this line enter a food you like or q to quit now check this out if the user types in q we would like to exit if foods at index of i is equal to the string q then i would like to break out of this for loop the user is done entering an input but there's a problem with this enter a food you like or q to quit number one pizza hamburger hot dog now i'm going to press q to quit we don't have any more prompts to enter in food we went to the results you like the following food pizza hamburger hot dog q i'd rather not put the letter q in my foods array i'm going to create a temporary variable just to hold some user input this will be of the string data type standard string i'll name this temp meaning temporary it's a temporary variable in place of directly putting my user input into my foods array i'll place it temporarily within my variable temp i'm going to check if temp is equal to q else will take foods at index of i set the sequel to temp that way we're not directly assigning our user input to our array until we check what it is if the user types in queue to quit we don't want to put that within our foods array so let's try this again it should be better enter a food you like or q to quit pizza hamburger hot dog q to quit okay pizza hamburger hot dog well the letter q isn't here but when we display what's within the array we have these empty spaces we did not assign a value to these if one of our elements is empty i don't want to display it so we can make this following change in place of a for each loop let's use a standard for loop int i equals zero now here's the condition we're used to saying i is less than size right i'd like to propose a change we'll write a different condition i will check if the current element is empty foods at index of i dot empty function then we'll add the not logical operator we'll continue our for loop as long as the current element is not empty then we'll add the statement increment i by one we'll display our array foods at index of i this for loop shouldn't display any elements that are empty pizza hamburger hot dog q to quit yeah and we only have three elements pizza hamburger hot dog one disadvantage of arrays is that they have a limited size they're static once we declare a size we can't change it we're limited to only storing five foods you could declare a larger size but you may be wasting memory if a user doesn't want to type in all 10. so in future topics we'll need to discuss both dynamic memory and vectors which should be coming up sometime in the future so yeah that is one way out of many ways to enter in user input into an array if you would like a copy of this code i'll post this in the comment section down below and well yeah that's how to enter user input into an array using c plus plus