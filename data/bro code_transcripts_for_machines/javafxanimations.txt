hey what's going on everybody it's bro hope you're doing well and in this video i'm going to demonstrate some simple animations in javafx so sit back relax and enjoy the show all right everybody so i recommend finding an image that you want to use for this demonstration if you're too lazy to you can always go to shapes and drag and drop a random shape maybe a rectangle or something but i think it'd be more fun to use an image so i will add an image view node and place it on my pane to add an image to this image view go to properties image and select an image of your choosing i will use this picture of sanic the hedgehog and i'll place this little guy right in the middle so i will give this image view a unique id i'll call it my image be sure to add your controller save then let's head to our controller class as always be sure to refresh your fxml document we're going to implement the initializable interface and add any unimplemented methods all right since we added an image view let's use fxml injection to add our image view and instantiate it private image view my image okay let's begin with a simple translation so i'll add a comment that this will be the translate section now with the translate section we can move our image on our scene so we need to use a translate transition object translate transition i'll name this translate equals new translate transition our next step is to add our image to our translate object by using the set node method of translate so translate dot set node and pass in your node of my image as an argument by using our translate object we can translate our node on the x y or z axis let's make a simple x translation so we would type translate dot set by x now how far do we want to move our node on the x axis let's say 250 and to begin this we need to use translate dot play let's give it a go okay so my image moved 250 pixels to the right but it was fairly quick let's slow that down a little bit so we're going to set the duration and here's how we would type translate dot set duration and pass in a duration duration dot let's say milliseconds 1 000 milliseconds so this entire translation will take a full second to complete so it should be a little bit slower now now with our translation this will only cycle once and no more but we can easily change that by using the set cycle count of our translate object translate dot set cycle count the default is one but if i was to pass in two as an argument then our translation would occur twice and no more than that or we can do so indefinitely by using translate transition dot indefinite so this would be continuous okay so when our translation ends it will reset how can we send our image backwards here's how so i'll add that here we would type in this method of translate dot set auto reverse and then pass in a boolean value of true now our image will reverse once we get to the end of our translation so it looks like he's moving back and forth so that is the set auto reverse method by default it is false but you can switch this to true if you need to let's also translate our image on the yaxis as well set by y to move up you would pass in a negative number as an argument down would be a positive number let's say 250 now our image should move to the right and up together so it's moving diagonally so that's the basics of translate let's work on rotate next i'm just going to copy what we have here there's a lot of similar code so this will be the rotate section and let me turn all of this into one giant comment so that it doesn't get in the way okay so we need to create a rotate transition object rotate transition we will name this rotate equals new rotate transition okay let's get rid of these lines all right so we need to set an angle in which we wrote it so let's rotate our image a full 360 degrees rotate dot set by angle then pass in 360 as an argument so our image should rotate 360 degrees now you can see that it starts to slow down when it gets to the end of its rotation we can make that a little bit more smooth by using rotate dot set interpolator pass in interpolator dot linear so this should be a smooth transition our image is currently rotating on the zaxis but we can change that rotate dot set axis let's set him on the rotate dot xaxis so it should rotate onto the xaxis like that there's also y and z is the default cool then to speed up the rotation you can just shorten the duration maybe 500. so he's going a little bit faster now so that is the rotate animation okay let's work on fade next let me get rid of all this code this will be the fade section i'll copy what we have here we need to create a fade transition object fade transition fade equals fade transition all right get rid of these two lines we'll need to utilize the set from value and set to value of fade fade dot set from value this will be the original opacity between zero and one so to create a fade out effect we would set from value pass in one fade dot set to value this will be the ending opacity let's set this to zero but honestly you can place this anywhere between zero and one but a full fade out effect would be one to zero i'll change the duration back to 1000 as well okay so this should fade out our image then to fade in this would be zero set from value set to value would be one this would cause a fade in effect so that is the fade animation lastly we have scale so let's create a scale section scale will change the dimensions of your image we need to create a scale transition object scale transition scale equals new scale transition i'll be setting auto reverse to true although it's not necessary to stretch your image on the xaxis type scale dot set by x then pass in a value greater than 1. if i set this to 2 then my image is going to stretch to become twice as large twice as wide as what it was before so we have extra thick sonic now set by y will stretch your image on the y so anything greater than one will stretch it so it's larger anything less than one will compress it so by combining both set by x and set by y this will stretch my image on the x and y dimensions well all right everybody that is the basics of some simple animations in javafx if you would like a copy of all this code i will post this to the comment section down below but yeah those are some simple animations in javafx