hey guys let's talk about inheritance inheritance is when a class can receive attributes and methods from another class the receiving class is known as a child class the class that's being inherited from is known as the parent class it's kind of like how children will inherit their parents genes and some of their physical traits it's kind of the same concept a benefit of inheritance is that it helps to reuse similar code found within multiple classes here's an example we will create an animal class the animal class will be the parent class class animal i'll make these members publicly accessible all animals will have a boolean attribute that we will name alive if you're an animal you're alive then let's add a method maybe an eat method all animals should be able to eat void eat we'll just print a generic message standard output this animal is eating i'm going to create two classes a dog class and a cat class they will inherit from the animal class let's begin with dog class dog to inherit from another class you would add a colon then public the name of the parent class dog will inherit from the animal class that is out of curly braces semicolon at the end and we now have a dog class now check this out if i create a dog object it will have a boolean variable named alive as well as an eat method so let's create a dog object dog dog so i'm going to display that boolean variable dog dot alive if i display this attribute this will give me 1 which means true this dog object also has an eat method dog dot e add a set of parentheses to invoke it this animal is eating so even though there's nothing within this dog class it's inheriting everything from within the animal class and we could add some additional attributes and methods as well maybe just a method this time i would like to give my dog the ability to speak so let's make this public void maybe bark standard output the dog goes woof my dog is alive and it can eat my dog can also bark as well it has its own attributes and methods too i would like my dog to bark okay my dog is alive that's set to one the animal is eating the dog goes woof so now let's create a cat class class cat the cat class will inherit from the animal class i'll make its members publicly accessible i will give cats a meow function void meow standard output the cat goes meow there okay now we can create a cat object cat cat let's print the live boolean variable of my cat cat.eat now i'm going to try and use the bark method of a cat which we don't have let's attempt to use that so class cat has no member named bark that's because that method is found within the dog class and not the cat class cats have a meow method i'm instead going to use the meow method our cat's alive the animal is eating the cat goes meow so that's kind of how inheritance works a class can inherit attributes and methods from another class it helps with code reusability you know technically you could add these attributes and methods to each of these classes for example i'll just add the boolean variable alive to each of these classes as well as the eat method you know this would work too but we're repeating ourselves and with programming we try not to repeat ourselves if we don't have to especially because if we have to make a change to the eat method let's change eat to nom nom nom well i would have to go to each class and make that change manually and that can be inconvenient if i have hundreds of different classes it would be a lot easier if i just had to make that change in one place so i'm going to revert all those changes if i need to make a change to one of these methods i'm going to change eat to display nom nom nom well then i just have to make that change in one place instead of for every individual class let's try another example we'll create a class named shape this will be the parent class we'll make the members publicly accessible any class that inherits from the shape class will have a double attribute that we will name area for surface area double volume in this example we won't have any methods this time just some attributes i'm going to create class cube cube is the child class it will inherit from the parent class shape so colon public the name of the parent shape even though there's nothing within my cube class my cube class has an area and volume attribute then let's make a sphere class class sphere there we go i'm going to add a public axis modifier all cubes will have a double side property then with spheres they will have double radius then i'm going to add a constructor for both cubes and spheres let's begin with cube cube then sphere in order to instantiate a cube object i need to pass in a aside as an argument when i construct an object double side then for the sphere we need a radius double radius i think what we'll do is that when we construct a cube object and a sphere object we'll calculate the area and the volume based on either the side that we pass in for a cube or the radius for a sphere let's begin with the cube first let's assign the length of a side remember with a cube the length the width and the height are all the same this arrow side equals side to calculate the area we can use this formula so this area equals side time side times six because there are six sides to a cube then if you need the volume you could say this arrow volume equals side to the power of three we could just say side times side times side just to keep it simple now with the sphere it's a little more complex first let's assign the radius this arrow radius equals radius calculate the area of a sphere this arrow area equals to calculate the area of a sphere that would be 4 times pi let's just say 3.14 times radius squared so radius times radius then let's calculate the volume this arrow volume equals to calculate the volume of a sphere the formula is 4 divided by 3 times pi times radius cubed so that would be 4 divided by 3.0 make sure to divide by 3.0 and not three because in this case we would be using integer division we would like to keep that decimal so 3.0 times pi that's 3.14159 times radius cubed to keep it simple we can say radius times radius times radius and there we go okay so let's create a cube object to begin with cube i'll name this object just cube then in order to construct a cube object we need to pass in the length of a side let's say 10 so my cube class inherits the area and volume attribute from the shape class within the constructor of the cube class we will calculate what the area and the volume is going to be and i will display that standard output area cube dot area then i'll add centimeters then let's do the same thing with volume volume cube dot volume if the length of a side is 10 the area is going to be 600 centimeters squared the volume is 1000 centimeters cubed now let's try this with our sphere sphere i'll name this object sphere then we will pass in the radius let's say five i would like to display the spheres area and the sphere's volume the area would be 314 centimeters squared the volume is 523 centimeters cubed so yeah that's inheritance everybody a class can inherit attributes and methods from another class if you have multiple classes and they share similar attributes or methods you can place them within a parent class and all of those individual classes can inherit from that one common class it helps with code reusability and you don't have to repeat yourself if you're looking for some additional practice post a parent class and a child class in the comments section down below and well yeah that's an introduction to inheritance in c plus