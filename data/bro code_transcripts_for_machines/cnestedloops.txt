hey welcome back so nested loops a nested loop is a loop inside of another loop when you'll encounter them it's really situational so i don't really have one good example but what i'm thinking will do is use a nested loop for an exercise what i'm thinking is that we'll let a user type in a number of rows and columns and a symbol and print a rectangle of that given symbol but the user is going to specify a number of rows and columns so let's begin by declaring all of the different variables that we'll need intros and columns and char symbol we'll let the user type in a number of rows and columns enter number of rows then use scanf to accept some user input we are accepting an integer so use d for the format specifier address of operator rows then do the same thing with columns enter number of columns let's create our nested loops you can use either for loops or while loops it's just the concept of one loop inside of another so let's use for loops for our outer loop and inner loop the outer loop is in charge of keeping track of the rows the inner loop will be in charge of keeping track of the columns so i need this outer for loop to iterate once for every row that we have so we could write something like this into i set this equal to one i need to continue this for loop as long as i is less than or equal to rows and then increment i by one after each iteration so now let's create a nested for loop we will declare a loop inside of another loop and this inner for loop is in charge of the columns we should probably not reuse our index of i so let's create a new index and a common naming convention for an inner for loop is to use j because j comes after i in the alphabet so i will set int j equal to one we will continue this as long as j is less than or equal to columns then increment j by 1. for the time being until we let a user type in a symbol let's just print our index so let's use printf we're displaying an integer and let's display j and let's take a look at this okay enter number of rows how about three rows and five columns so here's our output we have the numbers one through five three times so to make this more of a rectangle a grid i'm going to add a new line character whenever we finish a row so printf new line character let's try that again enter number of rows three number of columns five so we have three rows and five columns basically speaking to complete one iteration of our outer loop we have to escape our inner loop first once this condition is no longer true then we will escape the inner loop and complete one iteration of the outer for loop but then once we begin in the next iteration of our for loop we're stuck back within our inner for loop again so that's kind of the concept now this time let's let a user type in a symbol and we will create a sort of rectangle enter a symbol to use then scanf we are accepting a character so use the c format specifier address of operator r symbol variable now we're going to replace j with our symbol and the format specifier for a character is c then let's try this again so how about three rows and six columns okay here's the issue so we have all of this empty space now when we entered our number of columns after hitting enter we have the new line character within our input buffer so our next scana function actually picked that up so what we need to do is clear our buffer and one simple way of doing that there's a couple different ways is that we can just use scanf again and we will read a character and that's one way to do it basically with this line we're just getting rid of the new line character after the last time we used scanf because that's still within our buffer okay let's try this one last time what about four rows and five columns enter a symbol to use uh how about the dollar sign there we go here's our rectangle it has five columns and four rows so yeah that's basically a nested loop it's a loop inside of another loop and when you'll encounter them it's really situational i thought this would be good practice to understand how they work to complete one iteration of the outer loop you have to first escape the inner loop and that may involve completing all iterations of the inner loop so yeah those are nested loops if you would like a copy of this code i will post this to the comment section down below and well yeah those are nested loops in c