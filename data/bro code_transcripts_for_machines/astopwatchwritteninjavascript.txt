hey what's going on everybody it's your bro hope you're doing well and in this video we're going to create an interactive stopwatch using javascript so sit back relax and enjoy the show sup guys let's create a stopwatch head to your html file then we will create a container to hold our stopwatch div id equals i'll name this time container then we're going to close it within our time container let's add a div for the time display id equals time display i'll add a time zero zero colon zero zero colon zero zero hours minutes and seconds let's close that div section we'll add three buttons start pause and restart button id equals start button i'll put this within a class class equals timer button let's close the button add some text the text will be start let's copy this button paste it two times the second button is a pause button the text will be pause next will be a reset button reset the text is reset that is everything for our html file let's head to our css file let's begin by adding some properties to the timer button class i'll set a width of 80 pixels a height of 30 pixels a border three pixels solid is good a border radius of 12 pixels a background color uh let's select a hexadecimal value pick whatever color you want i'm going to pick a dark gray color you can always use a color picker to select the color i'll set the color to be white i'll set the cursor to be a pointer when we hover our cursor over that button then we have a cursor pointer then i'll change the font family font family i'll pick this font with the backup of monospace yeah cool let's change the time display right here this is an id time display i'll edit the font size font dash size this will be 75 pixels i'll select a color uh go ahead and pick a color oh select maybe that that looks good sweet i'll change the font family then let's add a background color and center everything this will be our time container text align center i'll add a border 3 pixel solid border radius of 25 pixels background color of this is a dark gray color six twos yeah there we go so there's our css styling our css styling is done our html file is done let's head to our javascript file let's select all the elements that we'll need first is the time display let's get that id time display i'll store this as a constant const time display equals document dot query selector we're selecting an id the id is time display next is our start button let's copy this paste it start button start button then our pause button pause button pause button then reset button reset button the id is reset button here's the variables we'll need let start time i'll go ahead and set this to zero right away let elapsed time equal zero let current time equal zero let paused this will be a boolean variable if our timer is currently paused we'll set this to be true false if it's running let interval id let ours hrs is fine equals zero let mins for minutes equal zero let then sec four seconds equal zero here's what we're gonna do we're gonna add event listeners to each of our buttons start pause and reset add event listener i'll fill these in momentarily pause button then reset button then we'll declare a function to update our time function update time let's fill in these event listeners these will each be click we'll use an arrow function expression i'll just copy this and paste it okay let's begin with our start button we'll check to see if paused is true if paused we'll take paused set it to false calculate the start time start time equals date dot now method the now method of date will give you the current date and time in milliseconds minus elapsed time which will initially be zero to begin with then we'll begin our timer interval id equals set interval we'll need a callback the callback will be update time let's invoke this function every maybe 75 milliseconds that should be good enough let's fill in the update time function we'll calculate how much time is passed elapsed time equals whatever time it is right now date.now method minus the original start time this will be a time in milliseconds we'll have to format it so that we can display it within our timer let's take our seconds set the sql to math.floor method we will pass in our elapsed time divided by 1000 because it's normally in milliseconds modulus 60. i'm going to put these within parentheses it's a similar process for minutes except this section is 1000 times 60. that will be 60 000 milliseconds in every minute let's calculate the hours hours one thousand times sixty times 60. then we'll need to update our display that is time display dot text content equals i'll use a template literal will display the hours colon the minutes then the seconds let's take a look to see what we have so far we'll have one issue let's press start you can see that it's currently running but when we display zeros i would like two zeros let's add a zero as padding for any single digit numbers i'll create an inner function function pad will accept a unit we will return this will be a ternary operator it might be a little difficult to understand so we're going to add a zero to the front of our unit whatever we pass in hours minutes and seconds we'll access the length property if we add a zero to our unit what's the length is that length greater than 2 question mark if it is we'll simply return unit otherwise we'll prepend a 0 plus unit then we'll invoke the pad function our seconds equals invoke pad pass in our seconds do the same thing with minutes and hours minutes hours then let's move this line down right about here okay we should have some zeros as padding now yeah there we go one two three so we have no way to pause this timer let's work on that next let's head to our pause button we'll check to see if not paused then we will set paused equal to true we'll calculate the elapsed time equals date dot now minus our start time this will save how much time has passed in milliseconds then clear our set interval method clear interval we'll pass our id as an argument okay now we should be able to start our timer one two three and pause and you can see that it's paused lastly reset and this one's kind of easy head to our reset button we'll take paused set that to true clear our timer take start elapsed and current time set them all to zero take hours minutes and seconds set them to zero then lastly change our time display to all zeros time display dot text content equals zero zero colon zero zero colon zero zero oh then make sure you don't add this let keyword then we're creating a local variable okay this should work now one two three we can pause we can reset we can start again and reset all right everybody that is a simple timer if you'd like to make a more advanced version you could add milliseconds and well yeah that's a basic stopwatch using javascript