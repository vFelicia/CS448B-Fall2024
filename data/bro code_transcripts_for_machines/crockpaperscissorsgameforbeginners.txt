all right everybody in this video we're going to create a game of rock paper scissors let's create our function declarations first char get user choice char in this case would be the return type will be returning a character char get computer choice void there is no return type show choice there will be one parameter char choice then the last function is void choose winner there will be two parameters char player that's us char computer the computer's choice will be determined randomly using a random number generator let's define these functions let's copy all of these after the main function i will paste them then add a set of curly braces after each currently if i were to run this program we do have some warnings because with these two functions get user choice and get computer choice we're not returning anything even though we stated that we're returning a character just for the time being i'm going to return 0 just so that those warnings go away but we'll correct these momentarily so we shouldn't have those warnings within the main function we will declare two characters one for player char player that's us char computer that's the opponent we will take our player then assign this a value of whatever is returned from the get user choice function then we need to fill in this function within the get user choice function i will create a local variable of player as well i'll create a message to begin our game standard output rock paper scissors game i'll add a new line this part isn't necessary but i'm just going to add a bunch of asterisks afterwards just because i think it would look cool underneath our title let's list our choices standard output the character r for rock new line uh let's copy this p for paper s for scissors standard input player i'm just gonna test that this works standard output player rock paper scissors game r for rock p for paper s for scissors i'll pick r that would give us the character r okay so we know that that works i'm going to place some of this code within a do while loop because the user might not type in rp or s so do while i'm gonna stick my code within the do while loop i'm just gonna add one more line of output choose one of the following all right we'll continue this while loop as long as our player does not equal the character r and player does not equal the character p and player does not equal the character s then at the end of this function we will return player we can't escape this while loop until we pick either r p or s that's how this condition works let's test it rock paper scissors game choose one of the following r for rock p for paper s for scissors uh i will pick w for wombo choose one of the following rprs uh i like the letter x nope can't pick that uh let's go with s for scissors okay s is a valid choice okay that is the get user choice function that is complete so i'm going to close out of this function after we assign our player variable let's display the user's choice standard output your choice colon space then we will invoke the show choice function show choice then there is one parameter we have to pass in a choice as an argument we will pass in our player that's a character within the show choice function i'm going to create a switch switch we're examining some value against matching cases we'll examine our choice our choice argument that we receive if our choice matches the case r what would we like to do i'm going to display some output standard output just rock then i'll add a new line make sure to break then case p for paper standard output paper i'll add a new line then break case s for scissors standard output scissors new line then break let's close out of this function then test it okay i'll type r for rock your choice rock p for paper your choice paper s for scissors your choice scissors okay the show choice function is done now we need to get the computer choice computer equals get computer choice then we'll need to fill in this function get computer choice right here we'll need to generate a random seed s rand pass in the time function then type 0 or null you may need to include this header file at the top of your program just in case this doesn't work include c time we'll generate a random number between one and three and num equals brand function modulus three plus one we'll examine this number against matching cases switch we're examining our num the first case will be the number one if our random number is one let's return the character r since we're returning a value we don't necessarily need to add that break statement we're already breaking when we return so we can omit this case to return the character p for paper case three return s for scissors okay we can close out of the get computer choice function that's all done back within the main function let's display the computer's choice standard output computer's choice will invoke the show choice function but pass in our computer let's run it to test it i'll pick r for rock your choice rock the computer's choice is paper let's try it like two more times okay we chose paper the computer chose rock let's pick s for scissors your choice scissors the computer's choice is also scissors okay so the computer is picking a random choice that's good now we'll have to decide who won at the end of our program we will invoke the choose winner function pass in our player as well as the computer then within the choose winner function let's create another switch we will examine our player against matching cases if our player chooses rock the character r i think the best way to do this would be to use if statements within each case if the player chooses rock and if the computer chooses r for rock that means there's a tie i'll display that standard output it's a tie then i'll add a new line else if the computer chooses paper that means we lose standard output you lose else well there's only one option left scissors because if the computer didn't choose rock or paper that means they pick scissors rock beats scissors so let's display that the user won you win oh then be sure to add a break at the end to break out of the switch this is the case if the player chooses rock let's copy all of this code paste it and let's move this over now if the user chooses paper we have some different results paper be its rock will change this line of output to be you win if the user chooses paper and the computer chooses paper that means it's a tie it's a tie if we choose paper and the computer chooses scissors that means we lose you lose one more case if the player picks scissors and the computer picks rock you lose scissors beats paper you win else scissors ties with scissors it's a tie and that is everything let's close this function and run this program okay i'll pick r for rock we picked rock the computer picked scissors you win p for paper the computer also picked paper it's a tie i'll pick scissors i picked scissors the computer picked rock you lose well alright then everybody that is a game of rock paper scissors if you would like a copy of this code i'll post this in the comment section down below and well yeah that's a game of rock paper scissors in c plus plus