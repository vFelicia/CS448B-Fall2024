hey what's going on everybody it's your bro hope you're doing well and in this video i'm going to be explaining the basics of scenes in javafx so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running well hello friends this video is all about scenes a scene is a drawing surface for graphical content and a container for nodes during the last video we covered the architecture of an fx gui program i like to think of it as a sandwich the stage is the bread the scene is the meat and all of the nodes are various toppings and condiments we covered stages in the previous video and in this video we'll be focusing on scenes before we begin let's just make sure we have a few things set up so with all of our imports you can import things as you're going along but you'll want to be sure that you're importing from java fx and not anyplace else otherwise a lot of the stuff might not work so we need a root node i'm using the group class to create a root node add the root node to the scene you can create a stage or you can use the stage that is passed in via the start method add your scene to the stage using the set scene method and at the end show the stage you'll be ready once you run the program and you have a blank scene on a stage now to create a scene we need to pass in at least a root node but we can add a few other things as arguments too when we construct a scene we can add a width and a height for the scene so let's pass in a width and a height as arguments to our scene constructor so let's say 600 by 600 and the size of your stage is actually going to adjust to fit the size of the scene you can see that our stage is no longer as wide as it was before it's now a perfect square you can also change the background color too we'll pass in a color as an argument color dot and then you can pick a color from this list i wonder if there's like a sky blue yeah let's pick that and now our scene should be a sky blue color and if you adjust the size of your stage the window your scene is going to adjust in size as well too if you need to disable that just use the set resizable method of stages let's add some text to the scene so we need to create a text object text text equals new text you can either pass in a string to the text constructor or you can use the set text method so text dot then set text and we can pass in some text like whoa all right so since we're using a group root node we need to manually place the coordinates of this object so we'll set x and set y text dot set x and let's set this to maybe 50 so this will be on the left side and then we will set y to be 50 as well so that will be near the top so this should be in the top left corner text is a type of node so we need to add this node to our root node and our root node is already added to the scene so before we set the scene and show the stage let's add our text to our root node so type in root or whatever you're using for your root node if it's named something else dot get children then add at the end dot add whatever it is you want to add whatever node so we would like to add our text node when we run this program we should have some text on our scene whoa but you can't really see it because the font is kind of small so let's change the font so let's change a few other properties of our text node that we have so after we set the x and y coordinates let's change the font text dot set font and you need to pass in a font as an argument font dot font and let's pick a font maybe for dana and a size as well maybe 50. and let's try this again yeah that's much better so let's also change the color as well the fill color text dot set fill and you pass in a paint object as an argument so let's just say color dot maybe green wow there's a lot of green colors uh how about lime green let's take a look at that yeah that's not too bad so that's how to add text to your scene let's create a line line line equals new line a lot of these values i'm about to show you you can pass into the align constructor or there's various methods for setting them so we need to set some starting coordinates as well as ending coordinates so let's begin with the starting coordinates line dot set start x and then y so where do we want this line to begin on the x axis maybe where x is 200 so let's set y as well line dot set star y then we need an ending point for this line line dot set end x and then y so i would like this line to end where x is 500 this will be a horizontal line and we will set y to be 200 line dot set and y 200 now line is a node and we just need to add this node to our root node so let's copy what we did for our text node and change text to line and we should have a horizontal line on our scene you also can change the stroke width as well as the stroke color let's begin by changing the stroke width blind dot set stroke width and pass in a new width maybe five so this should be an extra thick line that we have you can also change the color to line dot set stroke and then pass in a paint object color dot maybe red so this should be a red line you can change the opacity line dot set opacity so the opacity makes your object transparent if i were to set this to 0.5 this will now be a transparent line so this is on a scale with opacity between 0 and one i believe too so 0.5 would mean that this is like 50 transparent you can also rotate the stew using the set rotate method line dot set rotate and let's pass in an amount of degrees like 45 and this will rotate our line 45 degrees now these methods that i've shown you are only just a few if you were to type in the name of your object dot if you have intellisense set up you should have a huge comprehensive list of all the methods available to you to change some of these properties around for your object i've only just covered a few but there's still way more than this feel free to experiment and play around with some of those now let's move on to rectangles rectangle rectangle equals new rectangle we need to set x and y so type in the name of your rectangle in my case it's rectangle dot set x i will set this to 100 and then set y set y to 100 as well i suppose so we can set a width and height so type in rectangle dot set width i'll make this a square so 100 by 100 and then rectangle dot set height set height i will set this to 100 and then we need to add our rectangle to our root node so i'll copy what i have here root dot gel children dot add i would like to add my rectangle and we should have a rectangle on our scene so this is just a black rectangle we can change some of the properties around too let's change some of the properties of this rectangle such as the color rectangle dot set fill and we can pass in a color color dot maybe blue now this should be a blue rectangle we can also add a border around this rectangle as well so we can use set stroke width and you can change the color of two so rectangle dot set stroke width i'll set this to 5 to match the width of our line you can also set the stroke color as well rectangle dot set stroke and pass in a color maybe i'll keep this as black color dot black all right let's take a look and here is our rectangle and we added a black border around our rectangle like i said with a lot of these objects you do have various properties and methods to change them for example with rectangles there is a site opacity and set rotate method as well although i've already shown that so that would be kind of redundant so feel free to experiment with some of those as well now let's move on to triangles and to create a triangle we actually need to use the polygon class polygon and let's call this triangle equals new polygon as we know triangles have three points we need to add a set of coordinates for each point so to do that type in the name of your polygon in this case it is triangle dot get points we'll do a little bit of method training at the end add dot set all the set all method takes double data types all of our coordinates are going to be doubles so after each coordinate you can add point zero or you can do some casting too either way so let's say my first point is 200 by 200 and to make this more readable i'm going to add each coordinate to a new line it's not necessary but it helps me read this so these are the coordinates for my first point and let's set the coordinates for the second point 300.0 and 300.0 works and the third point 200.0 and 300.0 you can always change these around too let's change the color of this triangle triangle dot set fill and pick a color i will pick yellow and we need to add this triangle node this polygon node to our root node at the end root dot get children dot add triangle and we should have a triangle on our scene let's move on to circles circle circle equals new circle when we set the location of our circle we set center x and y this is where the center of our circle is going to appear set center x and then y so let's say 350 for x and the same for y set center y 350 we'll need to set a radius as well for the circle so type in the name your circle dot set radius and pick a radius i will pick 50 and we can set a fill color as well circle dot set fill and then pick a color i think this time i'll pick orange so it kind of resembles a basketball and we need to add the circle node to our root node root dot get children dot add circle and we should have an orange circle on our scene it's a basketball last but not least we're going to add an image to our scene i would like to add an image of a slice of pizza to my scene for some reason so copy your file and then go to your source folder and then paste your image file my image is called pizza.png i'm going to create an image out of this file so let's do that maybe here image image equals new image then within the constructor of your image list the file path or the file name this is within my source folder i only have to list the file name if for some reason this doesn't work you can always troubleshoot using the file path so i'm going to go to properties and you can copy the location so if the following steps don't work for you you can always troubleshoot and try the file path instead uh make sure this is within quotes though but since this is within my source folder i only need to list the file name now i need to create an image view object image view and i will call this image view equals new image view and pass in my image to the image view constructor and we will set the coordinates of our image view imageview.set x i'll set this to 400 and we will set y as well image view dot set y i will keep that the same as 400 and we need to add this image view to our root node so root dot get children dot add your image view and now there should be a slice of pizza on my scene for some reason i don't know why i decided that well friends that's the basics of scenes it's a drawing surface for graphical content and a container for various nodes if you would like a copy of all this code i will post all of this in the comments section down below but yeah that is how scenes work in javafx hey you yeah i'm talking to you if you learned something new then help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you