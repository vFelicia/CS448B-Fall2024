how's it going everybody it's a bro here hope you're doing well and in this video I'm going to teach you guys how we can read a CSV file using Java so sit back relax and enjoy the show if you find this video helpful please remember to Like comment and subscribe your support will help keep this channel running alright everybody so CSV this is an acronym for comma separated values it's a text file that uses a comma to separate values so let's say that you're using either Microsoft Excel or maybe Google sheets so there's rows and there's columns and there's individual values within each of these boxes and we can actually save these documents as a CSV file and it's going to be a plain text file and each value is separated with a comma so what we can actually do is use a Java program or create a Java program that can read these individual values so here I'm using Google sheets if you have access to Google sheets or maybe Microsoft Excel we can create a CSV file so let's make up some students so let's just create three I suppose so let's create a student named Chad Karen and how about Snoop Dogg and then let's assign some grades to each of these students so we'll say that Chad got 61% Karen failed at 50% and that Snoop Dogg got 100% so this is pass or fail let's say that Chad passed and then Karen failed and then Snoop Dogg passed ok so I can actually save this document as a CSV file so I'm just going to go to file then where is it download here it is CSV comma separated values so I'm just going to save this on my desktop no here we are on my desktop so this is that file I downloaded so let's right click on this and take a look so it's a CSV file and if you were to open this with let's say notepad this is what you'll see so I'm just going to zoom in a little bit so here are all the values from that table that we had they're all separated with a comma and they're all organized by individual rows so what we're going to be doing is uploading this plain text file linebyline and splitting each of these lines by this comma so that we can get individual values so let's head back to our Java program and get started so here I am within my IDE what I'm going to do just for convenience is actually copy our CSV file then go to the source folder of my project folder and then just paste it within here but if you want to leave it on your desktop that is completely fine so the first thing that we're going to do is create a string that will serve as the file name so we'll declare a string variable named file equals and then the file name or file path here so since this is within the source folder of my project folder what I'm going to type is SRC and then two backslashes students dot CSV so if this is on your desktop you'll probably write something such as like c colon yada yada yada just put the file path within there basically but since this is within my source folder this is all i have to type really all right so let's create a bufferedreader we're just going to declare it right now so buffered reader this will be named reader and we'll set this equal to null for now and then we'll create a string variable named line and this will just be blank basically for now we'll be using this to read each line of our file okay let's create a trycatch and finally black so tri followed by catch and we need a set of parentheses for this and then within the parentheses we're just going to catch all exceptions although it's better to list them individually and then a finally block okay let's begin with the try block the first line is that we're going to finish instantiating our reader so reader equals new buffered reader okay then within the parentheses we're going to pass in an anonymous file reader so new file reader then within the parentheses of this file reader we will pass in our file name and that's it for this line next let's create a while loop this while loop is going to continuously read the next line so while and then for our condition what we're going to type here I'm just going to add another set of parentheses within here line equals reader dot read line method so we're going to read the next line each time and then what we're going to do is check to see if this is not null so basically with this while loop we're going to continue reading the next line and if there is no next line we'll break out of the while loop and continue on with the rest of the program so what we're going to write within the while loop is that we're going to create an array of strings so string then a set of straight braces and we'll call this row equals our line and we're going to use the split method and then we can specify a character that's a string that we want to split our line at so we were going to split this line at all commas and then we're going to take all of these values and assign them to an array of strings and then what we'll do is actually display all these and we can use a for each loop also known as the enhanced for loop so for we're going to display strings so list that as the data type and we'll just display index doesn't really matter what you type here then colon row and we can use maybe a printf statement so system dot out dot print F I tend to like printf for printing tables so we need a format specifier so we're going to type n % s because we're displaying strings let's allocate 10 spaces of room for each of these strings and if we want to left justify them we put a minus sign here and then we are just going to display whatever is at our index and then after the for loop when we escape out of this we will just do a simple print line statement okay that's everything for our try block let's move on to the catch block quite honestly we don't necessarily need to write anything within the catch block but I'm just going to display a dot print stack trace so if something does go wrong this is just going to display what went wrong exactly now with this finally block what we're going to do is close our reader so typically with programs if you open a scanner or a reader it's good practice to close those at the very end so within our finally block we're just going to type in the name of our reader dot and use the close method so that's pretty much it however we do have to surround this with a try and catch block so make sure you do that now before we run this program also make sure that you have this import because I was a dummy and forgot to mention that at the beginning of this video so let's read this file now and here it is everything that was in our CSV file so everything that was separated with a comma is now split and it was placed into an array of strings that we displayed so they're all organized by rows and columns so we have the row students grades and if they passed or they failed so another thing that you can do is actually you could store these within some sort of 2d array or a collection if you want to save these or edit them so yeah that's basically one way that you can read a CSV file if you would like a copy of all this code I'll post this in the comments down below but yeah that's how to read a CSV file using Java hey you yeah I'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you