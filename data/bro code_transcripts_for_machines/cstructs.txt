okay everybody so let's talk about structs a struct is short for structure think of it as a collection of related members kind of like variables they can be of different data types unlike with arrays structs are listed under one name in a block of memory in order to refer to that struct we can refer to a variable name and then we have access to that block of memory that contains related members and lastly structs are very similar to classes in other languages if you're familiar with more than just c you'll probably know what a class is but there are no methods within a struct it's only members so we can actually use structs to mimic real world objects let's say that maybe we're playing a game and we need two players each player will have a name and a score these will be the members so to create a struct outside of our main function we will type the keyword struct followed by a tag name let's say we are working with players then we need a set of curly braces then end it with a semicolon so any members think of these like variables so let's say we have a character array named name and i'll give this a size of maybe 12. so we will declare these but not assign them we'll do that later and we have an int named score so each player is going to have a name and a score kind of like we're playing an arcade game now to assign some of these values we're going to create a type of variable and a player is going to be kind of the data type so we will type struct then the tag name which was player and then a variable name let's say we have player one and player two so with these structs you can reuse them so we have struct player player one and struct player player two so we can assign values to these members however if we have an array of characters we're going to use the string copy function so let's use the string copy function then to access one of the members you will type the name of that struct so let's say player 1 and then follow this with a dot the dot is a member axis operator so after typing the dot we have access to a name and score member so let's set the player's name equal to whatever your first name is now if you're not working with an array of characters such as an integer you can just access these directly so let's set player ones score to equal maybe four points and we also have player two but we have not assigned values to its members so this time let's assign player two's name and score so we can just copy what we have but change player one to player two player two let's say is bra and player two's score is five now if i would like to display these members i can do so with a print statement so printf let's display our name first so i will use the s format specifier player one dot name and then i'll add a new line then to access player one's score well that's an integer so i will use the d format specifier player one dot score and then let's do the same thing with player two so player two dot name and player 2 dot score so we have our player 1 strux name member as bro and score member set to 4 and then our player 2 struct has a name member of bra and a score member of five so yeah that's basically a struct it's a collection of related members think of these kind of like variables they can be of different data types unlike arrays and they are listed under one name in a block of memory so in this example we have player 1 and player 2. player 1 and player 2 refer to different blocks of memory which contain their own unique members if you're familiar with other programming languages they're very similar to classes but they cannot contain any methods so yeah those are structs if you would like a copy of this code i'll post this to the comments section down below and well yeah those are structs in c