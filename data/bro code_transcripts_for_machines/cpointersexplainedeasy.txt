all right everybody we finally made it to pointers a pointer is just a variable that stores a memory address of another variable that's it the reason that we use pointers is because well sometimes it's just easier to work with an address here's an example i have a stack of maybe 20 pizzas that i'm going to give out for free to my neighborhood instead of going around house to house carrying the free pizza and handing it out it's a lot easier to go doortodoor and tell people where the pizza is located hey there's free pizza at my house at this address come and get some and that's one of the uses of pointers sometimes it's easier to just work with an address i'll tell people where the free pizza is rather than carry it around with me so when working with pointers we'll need to use the address of operator which is an ampersand as well as the d reference operator which is an asterisk let's begin with a name i'll create a pointer to a name standard string name assign your first name then we'll create a pointer to name where is my name located in my computer's memory to create a pointer it should be of the same data type as the variable it's pointing to i'm creating a pointer to a string this pointer will be of the string data type then type asterisk that dereference operator then a common naming convention for pointers is you type p then the variable name but i'm going to make the first letter uppercase i will set this pointer equal to the address of that name variable and there we go we have a pointer so if i was to display this pointer standard output p name my pointer contains this value it contains a memory address as its value to access the value at this address you would use the dereference operator i'm accessing the value of that address that's stored within this pointer which contains my first name by using this d reference operator i'm accessing the value that's at this given address which contains my first name let's create a couple other pointers let's create a variable age int age equals make up some age i'll create a pointer to age the data type of the pointer should be the same as the variable int dereference operator p age equals the address of age then let's display whatever value is located at the address that's stored within my pointer of ph so we have my first name and then an age i think i'm just gonna add a new line real quick going back to that analogy with the free pizzas i'll create an array an array of strings i'll name this array free pizzas i'll give this a size of five we have pizza one pizza two pizza three pizza four then pizza five like i said in my example it's a lot easier instead of carrying around five free pizzas house to house giving away pizza i can just tell people where the pizza is located i'll give them an address i'll create a pointer to this array we'll use the same data type we're storing strings dereference operator p free pizzas now i'm going to attempt to set this to the address of free pizzas now we're going to run into a problem my array is already an address so i don't need to use the address of operator let me demonstrate i will display see out free pizzas when accessing my array free pizzas it's already a memory address if i display the value contained within my pointer to my free pizzas it's going to be a memory address then if i was to use the dereference operator that would give me the first element within that array pizza one so those are pointers it's a variable that stores a memory address of another variable sometimes it's easier to work with an address instead of carrying five free pizzas with me and going house to house giving it away i'll just tell people where the free pizza is so those are pointers your assignment is to post a pointer in the comment section down below and well yeah that's an introduction to pointers in c plus