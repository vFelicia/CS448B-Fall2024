hey what's going on everybody it's bro hope you're doing well and in this video i'm going to teach you guys how we can create a reset button in java so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running well hello again by popular demand many of you have been asking for a way to create a reset button of sorts for your game i thought it might take some time to explain how to do so with a separate video this is not a one size fits all approach you may need to make some modifications to accommodate your specific game or other application we're just going to be pretending that we're creating a game so this is how to create a reset button so let's begin we'll need a total of three classes for this example we have a class called min let's create another class file new class i will call this game frame click finish game frame will extends jframe and we will need an import let's create the constructor for game frame so at the top game frame and we will also implement the action listener interface include the imports that you need and we'll need to add any unimplemented methods and lastly we'll need one more class so go back to file new class and this class will be called game finish and game will extends j panel and create the constructor for your game so when you create a new game you just call the constructor for this game so within our main method let's call the constructor to create a game frame instance so within the main method new game frame and that's it for this class and within the game frame class we have a few things that we need to do so at the top we're going to declare a game game game we're not going to instantiate it yet we'll get to that within the constructor of game frame and we'll also need a reset button j button and we'll call this reset button and within the game frame we'll finish setting up the frame that we have this is referring to this instance of our game frame this dot set default close operation then j frame exit on close we'll set a size this dot set size pick whatever dimensions you want i will set this to be 600 by 500 i'm going to use no layout manager this dot set layout and i will set this to null then at the end this dot set visible and set this to true alright well our frame is taken care of let's work on the reset button next we'll finish instant shading this reset button between the set layout method and the set visible method so between these two lines we'll finish instantiating the reset button reset button equals new j button i'll make some modifications to this reset button reset button dot set text i will set this to reset since we're using no layout manager we'll want to set a size and location i'm going to use the set size method i will set a size of 100 by 50. and a location set location let's say 0 and 200 that should be decent and we need to add an action listener add action listener since we're implementing the action listener interface we can just pass in this and then we should be good all right so after we create our reset button we're going to create an instance of our game class that we have we're going to create a game object game equals new game so we're going to call the constructor for our game class lastly for the game frame constructor we need to add our game as well as our reset button to the frame so at the end before we set everything to be visible this dot add we're going to add our reset button as well as our game this dot add game okay so the constructor for game frame is now done let's head to the action performed method so if somebody clicks on our reset button this is what we're going to do if d dot get source we're going to check to see if the action event is equal to our reset button if get source is equal to our reset button that means somebody clicked our reset button so they would like to reset the game we're going to refer to this this game frame and we're going to remove our current game that we have and we're going to construct a new one game equals new game and we can create a new game by calling the game constructor to construct a new game for us and we'll need to add the game to our frame this dot add game all right well let's run this just to test things so we have our reset button on the left hand side and our game panel will be on the right hand side but we currently cannot see it so this is where our game normally would be but we're not actually going to create a full game but we'll probably want some sort of visual representation just so that we know that our reset button is working so what i'm thinking for this video is that every time we click this reset button we'll generate a new game panel that has a random background color sound good to you guys alright let's try it so within our game class normally for whatever game you're creating the code for your game will go here code for game goes here and we will declare all the components that we'll need for our game so we're just going to generate a random background color instead of creating a fullfledged game so let's create an instance of the random class uh we'll just declare our random instance and then we'll finish instantiating this within the constructor so within the constructor of our game random equals new random and we'll also need to generate a random color for this example so one way in which we can do that is to generate some random rgb values rgb values have a range between 0 and 255 so we would like to generate a random number between that range so let's say int r r for the amount of red that we would like for our color equals random dot next int and within the next int method we're going to pass in 256 that will give us a random number between 0 and 255 and we'll need to repeat the process for green and blue so int g for green equals random dot next in 256 and repeat the process for int b b for blue we'll need to finish creating our game panel that we have so at the end this dot set size and i will set this to 500 by 500 that will give us a square and set a location this dot set location 100 by zero would be good and lastly we need to set the background color with the random values that we generated this dot set background new color and with the arguments we're going to pass in our values of r g and b and then we should be good we have one issue though and let me explain so this is our make believe game that we have it's just a random color on a background so when we click this reset button it's going to dispose of the current game panel that we have and generate a new one via the constructor that we have however nothing appears to happen when we click on this reset button what we need to do is actually move our frame that we have so we don't want to have to do this every single time we want to update the components on our game frame so there's one line of code that we can add to do that for us so within the action performed method there is just one line that we need to add that will update the components of our game frame whenever we make a change so at the end we'll add swing utilities dot update component tree ui and we would like to update this this refers to our game frame that we have so then when we click our reset button this will generate a new game panel for us and normally you would have the code for your game that you have within probably some sort of constructor so basically we're just disposing of the current instance that we have and we're calling the constructor one more time well everybody that's how to create a reset button for your game or other application in java if you would like a copy of this code i will post this in the comments down below but yeah that's how to create a reset button in java hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you