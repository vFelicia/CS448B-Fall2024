hey what's going on everybody it's your bro hope you're doing well and in this video i'm going to teach you guys how we can copy objects in java so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running alright everybody i'm going to teach you all how we can copy objects in java here's an example of the setup that i have so far we're going to be copying some car objects and i have an additional class called car and we're going to be using some encapsulation in this video based on the last video on encapsulation so we have some private variables a private make model and year we have a constructor for this car and when we receive each of these arguments we're going to call the appropriate sutter method to assign each of these values and we have some getter methods as well for each of these values in case we want to get them here's what i'm doing within my main method i have created two cars carb one and car two car one is a chevy camaro the year is 20 21. car 2 is a ford mustang the year is 20 22. i'm going to be first printing the addresses of car 1 and car 2 where these objects are stored in memory as well as all of car 1's attributes that make the model and the year using the getter methods and car 2s make model and year using the getter methods as well so this is what we have these are the addresses of these two objects car one has an address of this in memory car two has an address of this in memory here are all of car ones attributes it's a chevy camaro the year is 2021 which we stated here and our second car is a ford mustang the year is 2022 and we just displayed all of the attributes using the appropriate getter methods let's say that we would like to copy the values from car 1 over to car two and a common misconception that people might do or write is that they would write something like this car two equals car one and you do not want to do this here's why so with these two addresses of these cars they now have the same address and it appears that these values copied over well that's because car 2 and car 1 are now the same exact car because they have the same address what we actually did was give car one two different names for all intents and purposes car one is referred to as both car one and car two because they share the same address in memory so even though it appears that these values have copied over they're really just pointing to the same car in memory so we're not going to be stating car 2 equals card 1 we're going to be creating a copy method within our car class to assign the values from car 1 and apply them to car 2. so let's create a copy method but first we'll want to call this so this will look something like this car 2 dot copy and we're going to pass in the object that we want to copy we would like to pass in car1 so we're sending a car object as an argument to this method now we need to set up this method within the car class so let's go to our car class and create a copy method public void it's not returning anything and we will call this copy and this takes one argument this will take a car object as an argument so we'll just call this car x and what we have to do within this method is copy the attributes from car one over to car two and this is how we can do that so we can use the this keyword right now we're referring to car two because car two is the object that has called this method so this refers to cartoon this and we're going to use the setters set make set model and set here so this dot set make this dot set model and this dot set here now we need to get the values of car x that's the car that we passed in car one so within the arguments of each of these methods we're going to state x dot get make as well as x dot get model and lastly x dot get ear and that's all there is to it so if we head back to our main method and run this these cars now have two different addresses and memory so they are both different cars but they have the same attributes they're both chevy camaros and the year is 2021. here's a scenario so what if we would like to copy the values from one car and apply them to another but this time we'll do it when we instantiate the car instead of after the fact so for this example let's turn these two lines into a comment and what we're going to be doing is creating something called a copy constructor so let's instantiate cartoon like we normally would so car car 2 equals new car but within the constructor of our car we're going to pass in car 1 as an argument and make a copy of this so we're going to be using some overloaded constructors and the second constructor is going to be the copy constructor so car the parameter is a car object so we passed in a car as an argument and we have to set up the parameter for our car copy constructor so this will take a car and we'll call this x so we would like to take the values of car x and apply them to the values of our new car when we construct it luckily we already have a copy method to take care of that so it's just a matter of calling this method from within the constructor so this dot copy and we're going to make a copy of car x that we receive when we call the car constructor so this will do the same thing as it did before these are two different cars but they all have the same values the difference is that we assigned the values from car 1 and applied them to car 2 when we constructed this car object well ladies and gentlemen that's the basics of copying objects in java if you would like a copy of all this code i will post all of this in the comments down below but yeah that's how to copy objects in java hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you