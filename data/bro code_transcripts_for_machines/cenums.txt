well well well welcome back so enums short for enumerations they are a userdefined type of named integer identifiers a benefit is that they help make a program more readable either for us or for somebody else that's looking over our code so here's how to create some enums you can either declare these within the main function or outside of the main function let's do so outside of the main function so to create some enums type the keyword enum followed by a unique identifier let's say we're working with days of the week so let's say day curly braces and then end this with a semicolon so enums are constants and let's declare some constant names let's say the seven days of the week so separate each constant with a comma and we will just go through the days of the week here are the enumerations that we declared the days sunday through saturday the days of the week now each of these constants has an associated integer so beginning with your first constant this will have a value of zero then the next will have one then two then three then you continue on in that pattern but you can give these a unique value let's change it sunday to one because it's the first day of the week then monday will be two and then we will just continue with these now to use one of these enums we would type enum then our identifier name day it's kind of like a data type and then some variable name let's say today and then you can set this equal to one of these constant names let's say that today is sunday so an important note with these enumerations they're treated as integers and not strings if i need to work with one of these enums we're going to treat them as if they were an integer so just for an example i'm going to print the value contained within today so this is going to be an integer so we will use the d format specifier and we will display today so since today is equal to sunday this has an associated integer value of one and if i display that this will print the number one if i change this to saturday well then it will print the number seven so an important note is that enums are not strings but they can be treated as integers now how does this make a program more readable so let's write an if else statement that's going to check what today is first we'll begin with using the associated integer value so if today is equal to one or today is equal to seven then that means it's either sunday or saturday and let's print a message let's say it's the weekend party time else we will print something else i have to work today so today is set to saturday that means that saturday has an associated integer of seven so if today is equal to one or seven well then we will execute this if statement it's the weekend party time i think i'm just going to add a new line real quick now if i set this to a different day of the week let's say monday well then i have to work today so the way that this is written now it's not too readable so instead of using an integer value let's use the associated name with each of these constants so let's replace one with sunday and seven with saturday and i'll change this to maybe sunday so this is a lot more readable especially if somebody else is reviewing your code they may not understand why today is equal to one or today is equal to seven but this makes a lot more sense oh so if today is equal to sunday or if today is equal to saturday then we print it's the weekend party time so that's a huge benefit with enums is that they help make a program more readable so to declare enums you type enum then an identifier and then you can list as many constants as you would like and you can give them an associated integer value too so yeah those are enums if you'd like a copy of this code i'll post this to the comment section down below and well yeah those are enums in c