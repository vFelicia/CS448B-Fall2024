hey how's it going everybody it's bro here hope you're doing well and in this video I'm going to be teaching you guys how we can make a login system using Java so let's get into it before you reach the end of this video make sure to LIKE comment and subscribe so that we together can challenge and defeat the mighty YouTube algorithm everyone so with this project we are not going to be connecting to and querying any databases are only going to be using what we've learned so far in this tutorial series to build a login system so what I'm planning is that we can store all of our user IDs and passwords within a hashmap within our project folder and then pull the ID and password combinations from that hash map well lay down the foundation for a login system and someday you can improve upon this project if you would like to store the ID and passwords within a file on your computer or query a database whatever you want to do we'll lay down the foundation at least but for now we're only going to use what we've learned so far in this series so if that sounds good to you let's get started so if you're using eclipse you can go to file new Java project and let's call this project name login system and click finish so we're going to have a total of four different classes within our login system so go to your source folder and go to file new class we're going to create a main class and then check this public static void main check box and click finish go back to your source folder we're going to create another file so file new class and we're going to call this ID and passwords and this is going to contain a hash map of all the user ID and password combinations okay then source folder again file new class we'll create a class called logon page where we will sign in okay one more so source file new class and this will be our welcome page which appears after we login and click finish okay so we should have four classes a main class an ID and passwords class a login page and a welcome page now let's go to our main method here within our main class and we're going to create an instance of our ID and passwords class so we need to type in the name of our class to instantiate an object so ID and passwords and let's call this instance maybe just ID and passwords with a lowercase i've equals new ID and passwords parentheses semicolon okay so we now have an instance of our ID and passwords class so let's head here and then we're going to create a hash map and a hash map would work perfect for this project because they store key value pairs the key could be the username and the value could be our password so we'll create a hash map and in order to do that we're going to instantiate a hash map so hash map angle brackets now we need to list the data types of what we're storing within this hash map we're storing two strings a ID and a password so we're going to list two strings within here and then we need a name for this hash map so maybe we can call this login info equals new hash map then we need to list the data types again so two strings then a set of parenthesis and a semicolon now we just need to import this package in order to use hash maps now we're going to create a constructor for our ID and passwords class so we'll do that after our hash map so ID and passwords parentheses curly braces so in order to put some key value pairs within our hash map here we need to type in the name of our hash map dot and we're going to use the put function oops alright and then we're going to list a user ID and a password so maybe we'll type in pro for a user name and this will have an associated password of maybe pizza because I like pizza now let's do the same thing let's add maybe a total of three user ID password combinations so maybe the second will be Prometheus who has a very secure password of password all caps then maybe for a third user ID bro code with a password of abc123 all right now with this hash map we want to send this to any class that requests it so we're going to create a getter method for this hash map so we'll type in get then login info parentheses curly braces and we're going to return our hash map which is named login info so if anybody calls this method we will send them the login info and we need to list the return type which is a hash map now let's also give this get login info method a privacy status of protected so not just anybody can call this method then since this contains user IDs and passwords so let's head back to our main class and what we're going to do here is create an instance of our login page so we need to type in the name of the class to create an instance of this login page let's call this instance login page with a lowercase L equals new login page parenthesis semicolon now what we're gonna do here is that we're going to send our login info as an argument to our login page so normally if you need to retrieve something from another class you can type in the name of the instance of that class like ID and passwords and we're going to use the get login info function that we made so now what we're gonna do with this is actually place this all within the constructor for the login page and send this as an argument because this is going to return our hash map and then we're just going to send it to our login page alright so then we also need to set up the constructor for our login page so that the parameters are set up to receive a hash map so that's everything for the main class and the ID and passwords class we're going to do a few things within our login page so let's have there and set up the constructor for our login page so at the top login page parentheses curly braces and we need to set up the parameters here so that this will accept a hashmap also make sure you have this import as well all right so then we need to type in the datatype hash and then this has a hashmap of two datatypes both our strings and we will call this hash map that we're receiving a different name maybe login info original now what we're going to be doing with this login info original is actually making a copy of it and we want this to be the copy at least to be globally available to all methods within our login page so we're going to create a copy of this login info so let's create a new hash map so hash map then angle brackets it has a data type of two strings and let's call this login info equals new hash map then two strings again alright so we have this hash map login info and we're going to say login info equals login info original so then we have a copy of our hash map that is globally available to our login page so that other methods can actually use this then alright now with this class we want this to implement the action listener interface so we're going to type that in implements action listener and then we'll need to import this and then add unimplemented methods so that we have an action performed method so we can handle events then alright so we're going to instantiate a few things before our constructor we already have a hash map now of all the IDs and passwords so let's create our jframe so starting from the top will instantiate that so jframe frame equals new jframe there we go and then I'll just import things along the way just to save time we'll also need a login button so we'll create a J button J button will call this login button equals new J button and let's add text to this right away so we'll add the word login let's also create a reset button so this will be called reset button and we will set the text to be reset and we'll also import these as well ok we'll also need a user ID field so somebody can type that end so AJ text field would work for that J text field and this will be called user ID field equals new J text field we'll also create a password field so J password field and we'll call this user pass word I can't spell today user password field equals new J password field and then we'll import these as well alright let's add a label that says user ID and then password right next to the fields then so these will be J labels jlabel user ID label that will be the name equals new J label and then we will set the text right away so we can do that within the parentheses and we will just type in user ID we're also going to create a user password label so actually I'm just going to copy this to save some time so we're going to change ID to password and this will say password is the text and then we also want to create some sort of message label to let the user know that either login was failed or login was successful so we'll make AJ a label for that so J label will call this message label equals new J label and that ruler should be everything that we need to instantiate so let's go to our constructor and start designing some things within here so let's start with the jframe and let's do that last so we'll add that at the end so for our J frame we're going to type in the name frame dot set default close operation so this will close when we exit out of it so J frame dot exit on close and then we need to set the size so frame dot set size and I usually pick for 20 by for 20 for the size and we do not want a layout manager so set layout no and then we want our frame to be set visible true so we can actually see it okay let's add some components so let's begin with the user ID labels and the password labels so we're going to do that before our J frame because we usually like to do this last alright so user ID label dot set bounce where do we want to place this so I actually picked a spot for this already where X is 50 where Y is 100 is pretty decent then we'll make this 75 pixels long for the width and 25 for the height and let's do the same thing for our password label so I'm just going to copy this paste it make a few changes user password label and we will change where Y is 100 to 150 then we'll keep the other dimensions the same alright then let's add these just to test them so frame dot add user ID label and we'll do the same thing for password user password label okay let's see what we have so far okay not bad we're going to add some text boxes here fairly soon let's also add the message label before I forget about that so message label dot set bounce will place this where X is 125 where Y is 250 this will be 250 pixels for the width and the height 35 pixels and let's set the font as well so message label dot set font within parentheses a new font and we don't really care about a font type we'll just set it to null for now and we will set this to maybe italic so font dot italic and maybe a font size of 25 then we need to import this as well all right so let's actually add some text to this to test it so this is a test oh we also have to add it to our frame that's very easy to forget so frame dot add message label okay we should be able to see it now okay that's decent but let's actually get rid of this text because we probably don't want to see that all right so we have our user ID label password label message label let's also create the user ID field and password field so user ID field so this is where somebody's gonna type in their user ID and we'll set the bounds where X is 125 Y is 100 this will be 200 pixels long for the width and 25 for the height and let's do the same thing for our password and I'm just going to copy the so user password field will set the bounds to be 125 and 150 and will keep the other two fields the same and then let's add these to our frame so frame dot add user ID field and then the same thing for our password field okay let's try it now not too bad not too bad we can actually type some type in some stuff here now with the password if you were to type something in it's actually hidden so everything is bulleted all right next let's create the login button so this will submit some information when we click on this button so that was a login button we'll set the bounds to be where X is 225 actually that's wrong 125 Y is 200 this will be 100 pixels long and 25 for the height and then we need to add an action listener to this button so log in button dot add action listener within parenthesis this and let's copy this and make a reset button so we'll change login to reset and we're going to set the bounds for our reset button so we'll just change the positioning the X positioning to 225 and then we need to add these to our frames so frame dot add login button and the same thing for our reset button ok let's try it now all right so currently they don't do anything so we'll do that oh you know what I'm going to set focusable false because I don't like that little box that's around the words so let's add that you can keep it in if you want so login button set focusable false we'll do the same thing for reset okay that's better let's head down to our actionperformed method and then let's work on the reset button so if e dot get source is equal to the reset button what do we want our program to do so with our user ID field we're going to set text to just a set of double quotes basically so as if we're clearing it and then we're going to do the same thing for our user password field so user password field dot set text to just a blank set of double quotes alright let's actually try this okay so I'm going to type in a username and then type in a password then we're going to click reset and everything is cleared out which is pretty sweet let's work on this login info button next so make sure to write this outside of your if statement and this is what we're gonna type if e dot get source parenthesis is equal to login button ok we have a few things to fill out within here so the first thing that we're going to do is we're going to create a string variable and we'll call this string user ID equals user ID field dot and then we're gonna get text we'll use the get text method here then we're going to do the same thing for password except we have a slightly different variation of this so string password and since we're using AJ password field instead of a text field there is something else that we have to do so what we're gonna do here is string dot value of parentheses oops parentheses and then within the parentheses what we're gonna type is user password field dot get password so it's going to retrieve the password that we type in convert it to a string and then store it within a string called password and then we're actually going to verify the user ID and password so we'll add that to the next line all right so then we're going to check this info that we have so if then we're going to refer to our hash map so if login info which is the name of our hash map dot contains key so the key is our user ID so we're going to place that here if our user ID is within our login info we also we at that point want to verify if the password is correct so we'll put this within an if statement and what we'll type here is if login info the name of the hashmap dot get user ID dot equals password all right so if we get the user ID and The Associated password is equal that means their credentials are verified then so I'm thinking what we'll do is just add a message label for now or we'll change the message label and we'll set the foreground to maybe green so color green and we will also set the text so message label dot set text and we will just display some text such as login successful and we also need to import the colors all right and then we're going to launch an instance of our welcome page but we'll have to work on that later on so we're going to create an instance of our welcome page because that's the next page we want to go to after this and we'll call this welcome page equals new welcome page okay let's test this out for now so just as a reminder here's all the IDs and passwords that we have we're going to run the program so I'm going to type in bro for a username and I'm just going to make up a random password and see what happens so we're going to click login and nothing appears to happen so that's good alright so this time I'll type in the right password which is pizza and then click login and it says login it's successful however this doesn't yet open the Welcome page yet because we still have to design that this will work on that later but we at least know that this is registering as a successful login which is pretty cool now let's head back to our login page so if the password equals the user ID and password that we type in what if the password is not equal so we're going to create an L statement and let's copy the message label set foreground and set text method and let's change maybe the color to red and we will change the text to let's see wrong password and let's try this again so I'll type in bro and make up a random password and then click login and it says wrong password okay so what if there is a user ID that we do not locate so what we'll do here is that outside of our if statement for if login info contains the user ID we'll make an else statement and what we'll type in here is maybe message label will set this to red and then we will set the text to be username not found alright then let's try this again so I'm going to make up a random username so I'll type in I'm a hacker one two three and I'll make up a random password and then click login and it says username not found which is good then but if there is a username that we found like bro code but if I type in the wrong password it's going to say a wrong password but then if I type in the right password and for this user ID it's abc123 click login and it says login it's successful alright so that's pretty much everything we have to do with our login page let's work on our welcome page next so this is what we're gonna type here we're going to create a jframe we'll call this frame equals new jframe parenthesis semicolon and we'll create a jlabel maybe like a welcome label so J label welcome label equals new J label and we will say maybe hello then we'll create a constructor for this welcome page but I want to import a few things first okay let's work on the constructor next so welcome page and what we will type within this constructor is that we will add the frame so frame dot oops set default close operation so J frame dot exit on close and then frame dot set size and I will make this for 20 by 420 and then set the layout frame dot set layout to no because I don't want a layout manager then we need to set the visibility so frame dot set visible to true okay let's add our welcome label so welcome label dot set bounds well place this maybe in the top left corner so 0 0 will make this 200 pixels for the width and 35 for the height and then let's also set the font so welcome label dot set font new font but let me fix that I'll put a null for the first field because I don't care for a font style maybe will have this be plain and then a font size of 25 then we need to import this font and then add this welcome label to our frame so frame dot add welcome label ok this should work then let's try it now ok so I'm going to type in brill this user ID has a password of pizza I'm going to click login so it says log and successful and it opens a new window for us now let's say that you want to get rid of this login page here so what we're going to type within our login page is that we're actually going to go to the actionperformed method and we're going to go to within this if statement so if logins get user ID equals password so before we launch the page we're going to take our frame and use the dispose method so it actually gets rid of our frame then okay let's try it now okay so user ID I'm going to type in brill it has a password of Pizza I'm going to click login it disposes of our frame and it adds our new frame our new window which is welcome page and all we have here it just says hello basically now let me show you one more trick that you can do we can actually send our username to our welcome page so it can say hello then whatever you're you know user ideas so we'll actually send that within our welcome page constructor so when we create an instance of our welcome page we're going to pass in user ID as an argument and then we also need to set up our welcome page to accept this so welcome page this will accept a string called user ID and then for our welcome label we're going to set the text so welcome label dot set text to hello oops plus user ID okay let's try it now so this time I'm going to type in bro code and bro code had a password of abc123 I'll click login login was successful and it says hello bro code in a new window so that's one of a few ways in which you can create a login page in Java and then someday as you become a more advanced Java developer you can always change this program where you could query a database or a locate user IDs and passwords on a file somewhere but this is only using what we've learned so far and I would say it's pretty successful so if you'd like a copy of all this code I'll post it in the comments down below and well yeah that's how to create a login page using Java hey you yeah I'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro