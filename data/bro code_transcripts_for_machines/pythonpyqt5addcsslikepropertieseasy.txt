hello everybody so in today's video I'm going to explain setting stylesheets in pqt 5 CSS means cascading stylesheets if you're not familiar with CSS you can still follow along but knowing CSS is helpful as a reminder I do have a full free course on YouTube on HTML and CSS if you would like to learn more let's begin for this demonstration we will need the following Imports we will be designing some buttons we will import Q push button we'll be working with the layout manager we will import Q widget and for a horizontal layout manager we will need Q hbx layout so import these three from the module of QT widgets now in previous topics we've set the geometry of our window since we're using a layout manager we don't necessarily need that anymore so I'm going to delete it in the past I have also created a method to initialize our user interface and we are calling that within the Constructor of our main window we will create three push button widgets self do button one will be the first button equals take our Q push button class and call the Constructor we can add text to the button we will pass that as an argument now since we're using a layout manager we don't need to add this button to self our window we don't need to do that let's create two more buttons we'll have button two and button three button two will say number two button three will say number three now we'll create a layout manager under normal circumstances we can't add a layout manager to our main window with main window widgets there's already a specified layout and format we're going to add a layout manager to a central widget and this widget will be added to the main window let's take care of that within our initialized user interface method we will create a central widget equals call The Constructor of Q widget then we will take self that means our window and set the central widget set Central widget then pass in our Central widget to set it then we will create a layout we will call the Constructor within the class of qbox layout let's name this layout hbox for a horizontal box equals call The Constructor within this class we will take our layout of horizontal box then add the following widgets add widget self. button one we'll do this with two and three then the last thing we need to do is take our Central widget call the set layout method then pass in our layout manager and now we should have those three buttons they're all arranged horizontally now we're going to apply some CSS like styling using the method of set style sheet here's how rather than apply these CSS properties individually such as self. button one. set stylesheet and in the past we've passed in individual CSS properties we're instead to set the stylesheet of our window self we have a lot to write instead of double quotes we're going to use triple quotes triple quotes are used to write very long strings in a more organized way all of the CSS properties that we're going to write are going to be within this set of triple quotes so let me give you a demonstration we could individually apply CSS like properties to each of these widgets but we could select an entire class of widgets too let's select the class of Q push button then add a set of curly braces the following CSS properties will apply to all Q push button widgets So currently this is what we have we'll increase the font size for every push button so we will add the following property of font size then set it to be 40 pixels each be sure to end each CSS property with a semicolon so the font size is now 40 for every button let's set the font font family I will pick aial let's add some padding we can add some space around the text and the button itself so with padding if I was to set this to 75 pixels we would have 75 pixels worth the space between the text and the border of the button I would like to change the dimensions of the padding so let's apply 15 pixels to the top and bottom of the button and 75 to the sides that's better margin is the space around a button let's set the margin to be 25 pixels now the buttons are more spread out if this was 250 they would really be spread out that's margin it's the space around a widget let's set that back to 25 I'm going to change the border border 3 pixel solid this would change the border of the buttons we now have a black border that's three pixels in width if you would like to round the corners we can use border radius I will set that to be 15 pixels with all the buttons the corners are now rounded within our set stylesheet method we're applying all of these CSS like properties to every push button now what if you would like to apply CSS properties to Only One widget rather than all of them here's how with each of our widgets buttons 1 2 and 3 three we need to set an object name let's do that before we call the set stylesheet method we will take our buttons self. button one call the set object name method then pass in a name for this widget we'll keep the name the same as button one so let's do this with button two and button three button two button three within the context of set style sheet we will refer to these widgets by their object name buttons 1 2 and three and now we can select them individually let's say that with button one I would like the background color to be red we're going to access our class of Q push button follow this with a pound sign I like to call it a hash tag then we need the object name button one button one refers to the widget of button one again I kept the name the same then we need a set of curly braces between the set of curly braces we can list one or many different CSS properties let's change the background color I will set it to be red and now the background color of only that button is red and not all of them if I was to set the background color within the class well then all of them would be red okay so with button two I'll just copy what we have and paste it we are selecting the ID of button two let's set the background color to be green so then the background color is now green and button three button three will be blue if you would like a greater variety of colors I recommend looking up a Color Picker you can just Google Color Picker so if I would like a very specific shade of red I can pick that let's go with that there are a few options provided to you you can use hex values now we have a very specific shade of red you can use RGB RGB and close it within a set of parentheses and then paste those numbers or my favorite which is hsl hsl means Hue saturation and lightness we will enclose our values within hsl if you copy these values directly from Google you would have to remove this degree symbol I like hsl because I can also control the saturation and the lightness pretty easily okay let's pick a very specific shade of green that's good I would say I'll use the hsl values hsl remove the degree symbol and now we have a very specific shade of green and blue that's good I would say that's not too bad if you're already familiar with CSS we can apply pseudo classes such as when we hover over one of the buttons here's how let's copy these three blocks then paste them again we can add CSS properties when we hover over something we have to use the hover pseudo class after the ID of each of our buttons we will add colon hover we can apply the following CSS properties when we hover over the buttons all I'm going to do is up the lightness let's say by 20% each then when we hover over one of the buttons the lightness is going to change we apply the new CSS properties all right everybody so that is a more indepth explanation of the set stylesheet method in pi qt5