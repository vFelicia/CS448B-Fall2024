hey what's going on everybody so in today's video I got to explain list comprehensions in Python a list comprehension is a concise way to create lists in Python they're Compact and easier to read than traditional Loops basically you have to follow this formula for every value in something that's iterable meaning you can Loop through it check some condition then do this expression so let me give you an example with using a traditional Loop then you'll be able to see why a list comprehension is useful we're going to create a list and double the numbers 1 through 10 doubles equals an empty list using a traditional for Loop we will say for every value let's say X in range 1 through 11 remember that in the range function the second number is exclusive this will give you the numbers 1 through 10 for the first iteration X is going to be 1 then 2 3 all the way up until 10 so we'll iterate 10 times during each iteration I'm going to take my list of doubles use the builtin append method we will append X during each iteration that's going to be the value time 2 so if I were to print my list of doubles here's the result we have the numbers one through 10 all doubled 2 4 6 8 10 12 14 16 18 20 so this is a lot to write we can use a list comprehension to make this code more Compact and easier to read here's how we need a name for this list let's say doubles equals an empty list within our list we'll follow this formula we have an expression for Value in iterable and optionally we can check a condition we'll do this in exercises later on in this topic we'll begin with for every value let's say X in our iterable our iterable is going to be a range 1 through 10 again for the first iteration X will be 1 then the second iteration X will be 2 all the way up until 10 during each iteration what would we like to do with X our value let's take X multiply it by two and return it then if I was to print my list of doubles we have the numbers 2 4 6 8 10 12 14 16 18 20 for every value in this iterable do this multiply it by two this is a list comprehension it's a concise way to create lists in Python we'll go over a few exercises so this time we will triple each number we'll create a list of triples equals let's say this time for every Y in ring range 1 through 10 so we have to write 11 take Y and multiply it by three then we will print our list of triples 3 6 9 12 15 18 so on and so forth let's Square each number we'll create a list of squares for every Z in range 1 through 10 to square a number we take that number multiply it by itself so the numbers 1 through 10^ squar is 1 4 9 16 15 36 49 64 81 100 so 10 * 10 is 100 now we're going to work with strings we'll create a list of fruits equals think of some fruit these are all going to be strings Apple orange banana coconut I'm going to take each string in this list and make it uppercase we could assign this to a new list such as uppercase fruits or we can simply just reassign it just to keep it simple I'll reassign it so again we're following this formula I like to begin with the four value in iterable portion for every fruit in our iterable of fruits what do we want to do well let's take each fruit take each fruit use the builtin upper method to make it uppercase then I'm going to print my list of fruits each string in this list is now all uppercase you could even cut down on one of the steps with our iterable of fruits I will place this list and this does work too although I do find this a little more difficult to read but you can take either option how about instead of making each string uppercase we'll take the first letter of each string then put it within a new list so let's take each fruit at index of zero that will give us the first letter we'll place it within a new list of fruit chars meaning characters here's the result a o BC for every fruit in our list of fruits return the first character of each string a o b c now we'll work with conditions we'll create a list of numbers both negative and positive numbers equals let's say 1 2 3 4 5 6 we'll create a list compreh renson to create a new list where all of the numbers are positive our new list will be positive nums equals we'll write a list comprehension for every let's say num in numbers we'll write a condition return this number if our num is greater than or equal to zero we do need an expression if we're not modifying ing each value we can just return the value of num during this exercise we're more focused on the if condition rather than the expression if our value of num meets this condition simply return it and place it within this new list let's print our list of positive numbers and we have 135 let's do this with negative numbers I'll just copy what we have and change a few things round this list will be negative numbers negative nums for every num in numbers check this condition check to see if num is less than zero if so return that number let's print our list of negative numbers 24 6 let's check to see if there's any even numbers even nums equals for every num in numbers check to see if our num is divisible by two and we can do that with the modulus operator followed by two the modulus operator will give you the remainder of any Division if our number is even number modulus 2 will equal zero if it's even this is going to equal zero if it's odd it's going to be one we're not modifying our value we're just going to return our number our list of even numbers should be 2 4 6 let me add one more value let's add positive 8 24 6 POS 8 maybe we'll add one more 7 okay let's find any odd numbers let's copy this line of code replace even numbers with odd numbers if num modulus 2 is equal to 1 that means that number doesn't divide by two evenly then we'll print our odd numbers 1 3 57 all these numbers are odd here's the last exercise we'll create a list of grades we'll create a new list of any grades that are considered passing meaning they scored 60 or above so let's say once student has a grade of 85 another with of 42 79 90 56 61 let's say 30 I will create a new list of passing grades equals again follow this formula for every grade in grades check our condition if our grade is greater than or equal to 60 we will return the current grade then let's print our list of passing grades that will give us 85 79 90 and 61 all of these grades are greater than or equal to 60 all right everybody so that is a list comprehension it's a concise way to create lists in Python they're Compact and easier to read than traditional Loops remember for every value in your iterable optionally you can check a condition you can write an expression to modify that value if you choose and return something all right everybody so those are list comprehensions in Python