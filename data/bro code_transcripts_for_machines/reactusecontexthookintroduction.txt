hey everybody today I got to explain use context in react use context is a react hook it allows you to share values between multiple levels of components without passing props through each level what we'll do in this example is create four components components a through D each component will be nested within one another so within our source folder let's create a new file for component a this will be a jsx file we will create a function based component named component a no parameters for now and be sure to export it export default component a within this component we will return some HTML we will return a div element the div element will have a class name of box within the div element we will create an H1 element that has text of component a within our app component we will import component a import component a from its location component a. jsx we will return a single component a component we're also going to add a little bit of CSS to visualize it we will select our class of box add a border of three pixel solid and padding of 25 pixels here's component a we're going to copy this file of component a and paste it three times we will rename the second copy as component B the third as component C the fourth as component D we have component a b c and d within component B rename any instance of component a with component B the same goes for C and D from component a we're going to import component B import component B from its location component b. jsx after our H1 element we will include one component B component we have component B within component a now within component B we will import component C import component C from its location component c. jsx after our H1 element we will include one component C component so we have component C within component B within component a within component C we will import component D import component D from its location component d. jsx after H1 element we will include one component D component we have component D within component C within component B within component a I've organized my tabs a b c d within component a we're going to create a state variable const user and a Setter for user equals the US state hook we will need to import it type in your username I'll type in bro code for mine at the top we need to import from react use object destructuring to get the use State Hook from its location of react now after our H1 element I will create an H2 heading we will embed some JavaScript we'll display a template string of hello add a placeholder your username name So within component a you should have an H2 heading that displays hello and your username within component D what if I would also like to display my username well from component a I would have to pass props down all the way to component D I'll have to pass them to B which will pass them to C which will pass them to D so if we were using props this is what we would have to do within component component B we will pass in props set user to equal our user within component B we'll have to set up props props will be the parameter within component C we will set user to equal embed some JavaScript props do user within component C we'll set up props again within component D we will set user to equal embeds JavaScript props do user then within component D set up props again after our H1 element let's create an H2 element we'll embed some JavaScript use a template string display by add a placeholder access props our parameter access the user within component a we have hello your username within component D we have by your username by passing props down each of these nested components this is known as prop drilling where drilling down to the center the center component passing props down this long chain can become very tedious but there's a better solution and that is with the use context hook the use context hook allows us to share values between multiple levels of components without passing props down through each level however we have to set up a provider component component which component has the data we would like access to in this case it would be component a in component a we have that state variable of our username which we named user So within our provider component we have three steps we have to import create context from react So within component a we already have used state but we also need create context we need to create some context and Export it export const then we need a unique name for this context we're working with the username let's name our context user context the context name should be descriptive of what you're working with if the data we're working with is a color we could say color context equals create context and this is a function now the last thing we need to do is wrap any children components within this special provider component we are going to wrap component B within another component we will take our user context access provider set the value equal to be some Java Script our value of user and we just need to wrap this component of component B component a is now the provider component it's going to provide a value of user we no longer need props we can get rid of these for each component after I deleted props from component B well our username is now undefined within component D we broke that chain all right any component that needs this data we will set up to be a consumer component you can have more than one we'll have to import the use context Hook from react as well as the context that we set up we're exporting it so we need to import it elsewhere within component D we will import from react use object destructuring the use context Hook from its location of react we also need the user context import use object destructuring to get user context from its location of component a that was the original location where we exported it from we'll use the context get the context and store the value we'll do that inside of our component const user equals use context hook we're going to pass in our user context as an argument and now we have access to user we'll use a placeholder and add our user and that has appeared to work we have displayed by your username we have avoided prop drilling instead of drilling down to the center component to pass down a value by using use context we Traverse up the component tree to find the nearest provider which would be component a component a is the provider component component D is a consumer component and you can have more than one so let's do the same thing with component C we need these two lines of code really we can just copy them because I'm lazy and we need to create a con of user or some other descriptive name for this value use context pass in our context of user context let's add another H2 element we'll embed some JavaScript use a template string let's say hello again add a placeholder our username So within component C we have used use context again without prop Drilling we're displaying hello again your username any component that's a child component of our provider component of a has access to this value that we set up all right everybody so that is the use context react hook it allows you to share values between multiple levels of components without passing props through each level if you have a lot of nested components passing props down to each level can become very tedious this is a way to avoid that and well everybody that is the use context hook in react