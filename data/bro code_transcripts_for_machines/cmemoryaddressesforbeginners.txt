hey everybody welcome to the exciting world of memory addresses a memory address is a location in memory where data is stored in c plus a memory address can be accessed with an ampersand known as the address of operator suppose we have some variables i'll create a string the variable name will be well named assign this a string of text i'll create int age sets equal to some value then a boolean boolean student i'll set that to be true a variable is a container for some data but these variables need to exist somewhere well they exist in your computer's memory at a given address we can find that address with the address of operator i'll display that standard output i would like to display the address of name then i'll just add a new line here's the address of my name variable in my computer's memory it's a bunch of weird letters and numbers well this is a hexadecimal address every time we run this program that number is likely to change let's display the addresses of agent student address of age address of student here are the memory addresses again all in hexadecimal so these are kind of like street addresses hey for fun let's decode these to decimal you can easily find tools online to convert hexadecimal to decimal let's see what these numbers are here are the hexadecimal memory addresses but converted to decimal they're like house numbers different data types take up more or less room than other data types if we look at the distance between my name variable and age well that has a gap of four memory addresses but the gap between my age and student variables is only one because well booleans only take up one byte of memory that's one of the reasons we use data types we need to know how much memory we need to allocate to fit a certain value if we're working with a boolean variable well we only need one byte of memory that's why the distance between the memory address of age and student is only one 4039 is one integers take up four bytes of memory 44 minus 40 is four four bytes so that's an introduction to memory addresses it's going to be helpful in the next topic when we discuss pointers if you would like a copy of this code i'll post this in the comment section down below and that is an introduction to memory addresses in c plus