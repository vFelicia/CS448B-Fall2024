hey what's going on everybody so in today's video I'm going to explain aggregation in Python aggregation represents a relationship where one object contains references to one or more independent objects one object acts as a container the whole which can contain other objects the parts so what we'll do in this demonstration is create an object that's going to act as a container we'll create a class of library for now a right pass now a library can contain books we will create a class of book we'll be creating book objects which we will add to our library object the library object is going to act as the whole the container the books are the independent Parts a library can exist without its books and the books can exist without the library that's the main difference between aggregation and composition these classes are independent of one another they can exist without each other with our class of book we'll need a Constructor we will Define our Constructor if we create a book we need a title and an author we will Define a title attribute equals the title that we receive and self. author equals the author that we receive that's all we need for the book class now with the library class we will we'll also need a Constructor Define innit for our library we need a name for the library for example the New York Public Library self. name equals the name that we receive let's construct our library object first Library equals Library we need to pass in a name for this Library let's say New York Public Library so this should run with no problems then we'll create a few books let's say book one equals called the book Constructor we have to pass in a title and an author so pick a few books I will pick Harry Potter Happy Harry Harry Potter and the philosopher stone but I don't want to type the whole title let's just say Harry Potter dot dot dot the author of this book is JK rolling okay let's create another book book two equals book for my next book I'll pick the Hobbit the author is JR R token then book three equals book we need a title and an author I will pick the color of Magic by Terry pratchet we have no problems when running this our library and our books can exist without each other our books are independent so now where aggregation comes in our library object will contain our book objects one way in which we can handle this is that within the Constructor for our library let's create an attribute of books this will be an empty list we'll need a way to add these books to our list of books we will Define a method of add book but we have to pass in a book object when we call this method we're going to access self. books it's a list list have a builtin append method we will append our book to our list of books let's see if this at least runs we're going to take our library call the add book method that we defined then pass in our book object of book one then let's do this with book two and book three and this is run with no problems our books can exist independently of our library our library object is just containing them it's housing these books now if I would like to print all the books in my library I could create a method to do that let's define a method of list books there will be no parameters besides self I'm going to return a list comprehension for every book in self. books remember that books is a list for every book in books Let's return an F string where we display the book's title and the book's author display book. tile the word by book. author okay let's see if this works first I'm going to print the library's name print Li libraryname New York Public Library then I'm going to print access the library objects list books method and here is my list of books although I'm going to reformat this so it looks better I'll use a for Loop for every book in Access our library objects list books method this will return a list we can iterate through it for every book in the list of books print each book all right here is our libraries name and each book in our list of books all right everybody so that's aggregation it represents a relationship where one object the whole contains references to one or more independent objects the books they can exist without one another and well everybody that is aggregation in Python