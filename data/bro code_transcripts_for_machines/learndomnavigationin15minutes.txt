yo what's going on people so today I got to explain Dom navigation in JavaScript Dom navigation is the process of navigating through the structure of an HTML document using JavaScript HTML elements include but are not limited to the following properties for Dom navigation we can get the first child the last child the next sibling the previous sibling a parent or all the children of an element so for this exercise within our HTML document we're going to create a few unordered lists of course these unordered lists are going to be for food because I like food the first unordered list will have an ID of fruits let's create a few list item elements an apple an orange and a banana we'll need a few unordered lists to work with let's copy this unordered list and paste it twice the second list will be for vegetables pick some vegetables I'll pick carrots onions potatoes the third unordered list will be for desserts I'll pick cake pie ice cream that is good enough for now heading back to our Javascript file I will now discuss the property of first element child our unordered lists are elements they each have their own children a child element is any element found within this element our unordered list of fruits has three children Apple orange banana vegetables has three children carrots onions potatoes desserts has three children as well cake pie and ice cream let's say that our unordered list of fruits is a parent well Apple which would be the firstborn orange would be the middle child and banana would be the last born if these were actual children so think of it that way so I'm going to create a constant of element I'll be using this as a reference document. getet element by ID I will get that unordered list of fruits I'm storing this unordered list within this element I will create a reference for the first child equals take our element access the first element child if I was to take this element change its style access its background color set it to be yellow which element is going to be highlighted Apple if I selected a different element like my ID of vegetables the first child would be carrots then dessert s the first element child of desserts is cake they are the firstborn children they're at the top Within These unordered lists if you used query selector all I'll give you a demonstration I will select all unordered lists const UL elements equals document do query selector all select all unordered lists this will return a node list node lists do have their own builtin for each method take all UL elements use the builtin for each method what do we want to do iterate over every unordered list element do this let's create a reference to the first child equals take our unordered list element access its first element child then store it as a reference let's take our first child access its style access its background color property set it to be yellow that will highlight all of the first element children of all the unordered lists so that's how you can use Query selector all to select all of the first children of all matching elements now we're going to access last element child with our unordered lists if we're selecting our elements of fruits vegetables and desserts this would return the last child banana potatoes or ice cream depending on what we're selecting if these were actual children these three elements are the last born they're the youngest I'm going to create a reference to an element equals access the Dom get element by ID I will get my ID of fruits I will create a reference to the last child equals take our element get the last element child take our last child element access its style access its background color set it to yellow so that will highlight banana if I change the selected element to vegetables that would select potatoes if I selected desserts that would select ice cream they are the last element children found within each of these elements if I were to use Query selector all to select all unordered lists let's create const UL elements equals document do query selector all select all unordered elements this returns a node list they have their own builtin for each method take our node list of unordered elements use the builtin for each method take each unordered list element use an arrow function to do this I will create a reference to the last child equals take each unordered list element access the last element child take the last child during each iteration access its style access its background color set it to be yellow and that will select banana potatoes and ice cream select all unordered lists take each of their last children change the background color to be yellow so that is the last element child property in this next example I'll demonstrate next element sibling but we're going to make a few changes going back to our HTML file we will give each of these list items a unique ID so let's start with the first the ID will be Apple for the first list item element I'll copy this ID for each of these elements and then change them in a moment so we have apple followed by orange banana carrots onions potatoes cake pie then ice cream if I'm selecting my unordered list of fruits Apple orange banana or the children they are all siblings to each other if I were to select Apple then get the next sibling that would be orange if I select carrots the next sibling would be onions if I selected cake the next sibling would be pie so let's create a constant of element equals document. getet element by ID the ID that I'm going to select is Apple I will create a reference to the next sibling equals take our element access its next element sibling take our next sibling access its Style access its background color set it to be yellow if I'm selecting Apple the next sibling to that would be orange if I were to select orange the next sibling would be banana if I were to select banana well banana doesn't have a next sibling it's the last in line we wouldn't be selecting anything there is no next sibling for banana if I were to select carrots the next sibling is onions if I selected onions the next sibling is potatoes if I selected cake the next sibling is pie if I selected pie the next sibling is ice cream what if I selected fruits vegetables or desserts what would be highlighted I will select the ID of fruits that would highlight my unordered list of fruits these three unordered lists of fruits vegetables and desserts they're all children of the body they're all siblings to one another it's kind of like if the list item elements of Apple through ice cream are all children the unordered lists of fruits vegetables and desserts are the parents and the body is the grandparent if I select the unordered list of fruits the next sibling would be vegetables by accessing the next element sibling of my unordered list of fruits that selects my unordered list of vegetables if I selected vegetables then get its next sibling that would give me this unordered list of desserts all right then we have previous element sibling if I select an element we'll get the previous element sibling so if I were to select orange that would give me Apple if I selected banana that would give me orange if I selected onions that would give me carrots I will create a constant for element equals document. getet element by ID I will select Orange const prev meaning previous sibling equals take our element access the previous element sibling if I were to take my previous sibling access its style access its background color set it to be yellow the previous sibling of orange is Apple the previous sibling of banana is orange if I selected onions the previous sibling is carrots the previous sibling of potatoes is onions the previous sibling of pie is cake the previous sibling of ice cream is pi if I selected the first sibling then attempt to get the previous sibling well we don't select anything the previous sibling of a first child doesn't exist if I selected the previous sibling of my unordered list of vegetables that would select my unordered list of fruits if I selected the unordered list of desserts that would give me vegetables now we have the parent element property whichever element I select we'll get the parent the parent is the element that contains it const element equals document. getet element by ID I will select Apple const parent equals access our element access the parent element let's take our parent access its style access its background color set it to be yellow that will highlight my unordered list of fruits if I selected orange well that wouldn't change the parent is still fruits same thing goes with banana if I selected carrots well the parent is vegetables that unordered list if I selected ice cream well the parent is desserts so that's how to get the parent of an element you can access the parent element property the last property we'll discuss is children we we can return all of the children of a selected element I will create a const element equals document. getet element by ID I will select my ID of roots I would like all children of this element I'll create a reference to Children equals take our element access the children property if I was to console.log children this is what we're working with by accessing the children of an element that returns an HTML collection this HTML collection has three list item elements HTML collections don't have a builtin for each method I would need to typ cast it as an array using the from method of arrays let's take all of our children convert it to an array then method chain the for each method let's let's take each child from children then do this take each child during each iteration access its style access its background color set it to be yellow so this will highlight all children of a selected element Apple orange then banana if I selected vegetables that would highlight carrots onions potatoes if I select desserts that would highlight cake pie then ice cream you can even access these children by an index number let's say you would like to highlight a middle sibling orange onions or pie let's take our children it's an HTML collection access it by an index number so let's access children at index one of desserts that would highlight Pi let's select vegetables that would highlight onions then fruits would highlight orange all right everybody so that is an introduction to Dom navigation it's the process of navigating through the structure of an HTML document using JavaScript there are several different properties that you can use to navigate through HTML elements and well everybody that is an introduction to Dom navigation in JavaScript