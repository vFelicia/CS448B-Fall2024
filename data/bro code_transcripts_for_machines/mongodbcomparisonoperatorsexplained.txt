hey everyone today I need to explain comparison operators operators are denoted with the dollar sign comparison operators return data based on value comparisons in previous examples we would type db.students.find then list some criteria like if we're looking for SpongeBob we would say a name SpongeBob now what if you would like to find everybody but SpongeBob well you can use the not equals comparison operator we would enclose it within a document body precede our value with the not equal comparison operator dollar sign and E colon find every name that's not SpongeBob that gives us four records Patrick Sandy Gary Larry SpongeBob isn't within here that is the not equals comparison operator return every document that has a name not equal to SpongeBob let's go over a few more let's cover less than and less than equals to DB dot students dot find everybody that has an age that is less than so dollar sign LT for less than 20. that gives us one document Gary who's 18. or we could use less than equal to change LT to LTE that means R20 is inclusive uh maybe let's change this to 27. return every document where the age field is less than or equal to 27 that would give us two results Sandy who's 27 exactly and Gary who's 18. let's do greater than return every document where age is greater than 27. that gives us three documents SpongeBob who's 30 Patrick who's 38 Larry who's 32. let's do greater than equals that would be GTE find everybody that's greater than or equal to 27. that gives us four records SpongeBob Patrick Sandy who's 27 exactly and Larry so that's less than less than equals to greater than and greater than equals to you can use more than one comparison operator to find values within a certain range let's find every student whose GPA is between three and four DB that's students dot find we are searching for GPA let's use the greater than equals to comparison operator return every GPA that's greater than three comma and less than or equal to four so these would be the students that have a good GPA SpongeBob and Sandy SpongeBob has a GPA of 3.2 Sandy's is 4.0 you can use more than one comparison operator to give you a range now another good operator is the in operator with the in operator we can return all records that have one of these matching values so db.students.find let's find any student whose name is within this array we will pass in a document body use the in operator colon then list an array an array of values let's find anybody whose name is either SpongeBob Patrick or Sandy So within an array we will list our values return anybody whose name is SpongeBob Patrick or Sandy there SpongeBob Patrick Sandy with the in logical operator you will return all documents where one of the values in this array is found within this field you can also use not in which is nin so let's copy this line clear our screen paste it change in to nin not in return all documents where name doesn't have one of these values that would give us Gary and Larry we are given everybody's name that's not SpongeBob Patrick or Sandy let's switch to Compass and I'll show you how we can do the same thing within Compass you would write your filter within this text box return everybody who has a GPA field that is greater than or equal to 3 GTE 3. that gives us SpongeBob and Sandy give us everybody who is let's say age is less than 27. that gives us Gary all right everybody so in conclusion comparison operators return data based on value comparisons and those are comparison operators in mongodb