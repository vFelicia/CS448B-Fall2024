hey what's going on everybody so in today's video we're going to create a compound interest calculator using JavaScript HTML and CSS this will be more of an exercise for beginners so why don't you go ahead and sit back relax and enjoy the show all right let's get started everybody we will add all of our HTML elements first followed by CSS styling then add JavaScript functionality at the end so within our HTML file let's begin with an H1 heading my heading will will be interest calculator after this H1 element I will create a form element the form element will consist of three labels and three input elements so let's create a label this label will be for the principal amount how much are we depositing initially or borrowing if it's alone I think I spelled principal right sometimes mix up principle with principal then we will need an input element to enter in a number I will set the type equal to be number the ID will be principal with this label we will set the four attribute to be principal we're doing this so that if we click on this label we'll select the input element we should only be able to enter in numbers we can't normally type in any text all right let's copy this label and this input element paste it two additional times the second label will have text of interest rate the four attribute will be rate the ID will be rate the third label will have text of years after how many years has interest accured the four attribute will be years the ID will be years then we'll add a button we need a button element the button will say submit this button will have an onclick attribute not on lick on click equal to a JavaScript function which we still need to declare we will create a calculate function within JavaScript we'll do that later though at the bottom we'll display a total I will use a paragraph element to do this the IDE of this paragraph element will be total I will add the text of total within this paragraph element after my text of total I will include a span element that has an ID of total Das amount this will display a dollar amount or some other unit of currency of you're choosing for the time being I'll add a placeholder of $0 and0 I'm using a span element just because we're going to style the dollar amount different from the text of total all right that is all the HTML elements we'll need let's head to our CSS stylesheet and I will Zoom back to 100% let's select the body of our document pick a font family I will pick a son serif font aerial is pretty good I'll add a backup of s serif in case we can't display aial I will change the background color of our page to be something light gray but I like using hsl values let's set the lightness to be like 95% okay not bad the form itself will be a different color let's select our H1 element I will change the font color pick a color I'll set the lightness to be 30% for the H1 element I'll increase the font size to be 3 em then text align Center next I will select the form element that contains all of our labels and input elements I will change the background color to be white I will set a Max width of 350 pixels margin Auto to center it I'll add a little bit of padding 25 pixels add a border radius to smooth the corners uh let's go with 10 pixels I'll add a box shadow box shadow 5 pixels by 5 pixels and a blur of 10 pixels I'm going to lower the alpha on this box Shadow so to do that you can select a color let's use hsl and I'm just going to lower the alpha to 30% Alpha is very similar to opacity for the elements within our form I'm going to use flex box to order them display Flex I will set the flex direction to be a column then align item Center let's style the labels next that would be the text of principal amount interest rate and years we will select all labels increase the font size 2 em and I will set the font weight to be bold let's select the input elements next input set the width to be 50% text align Center that will Center the numbers within the input elements I'll increase the font size to 2 em I'll add a border two pixel solid but I'll change the color I'll set the lightness to 90% add a border radius to round the corners 5 pixels add a little bit of margin to the top five pixels then margin bottom 15 pixels all right let's style our button next we are selecting our button I will change the background color to something green I'll set the lightness to 40% change the font color to be white increase the font size 1.5 em remove the border border none border radius to smooth the corners 5 pixels add some padding 10 pixels by 15 pixels then change our cursor to be be a pointer if we hover over the button using the hover pseudo class let's change the background color when we hover over the button we are selecting the button then select the hover Pudo class we'll change the background color to have a lightness that's 10% darker I'm going to use 30% and that does appear to work then we need to style the total and the total amount so these have IDs we will select the ID of total # total I will increase the font size and that's it to be 2 em then with that span this has an ID of total amount select the ID of total amount I will change the color to be green color green but I'll pick something more specific I will set the lightness to be like 35% and to make the font weight bold font weight bold all right that is not a bad looking form but now we need to add some functionality so let's do that so within our HTML file the button has an onclick attribute set equal to this JavaScript function but we haven't defined that function yet so let's do that now we will create a function named calculate So within our Javascript file we will create a function to calculate at the top of this function we will create some constants for these input elements and the total amount we'll have const total amount equals document. getet element by ID the ID that we're getting is total Dash amount okay let's copy this line paste it we're going to get the ID of this input element for the principal amount that had an ID of principal this constant will be named principal input let's get the interest rate that had an ID of rate rate in then years the ID was years this constant will be named years input we're going to get the values within each of these number text boxes let principal for the principal amount equals take our principal input access its value then store it with the in this variable so that we can work with it let rate equals the rate inputs value but we want this to be a percentage we'll divide this value by 100 if somebody were to enter in like two dividing it by 100 would give us 02 meaning 2% and then let years equals our year input access the value normally with these input elements we can only type in numbers right now I'm trying to type in some text but it's not letting me there are ways to circumvent this for example if I were to rightclick go to inspect within my form within this first number input element this input has a type in number but I can easily change that to be text and now I can type in some text just as an extra precaution I'm going to to enclose these values with a number cast so we'll cast them to be numbers here's the formula to calculate interest we will have a const result equals we will take our principal amount that would be the initial amount use the power method of math this will be the base we'll need a set of parentheses 1 plus our rate / 1 to the power we'll need a comma 1 times the amount of years and that is the formula we'll need so to test everything let's take our constant of total amount change the text content to equal the result if I were to deposit $1,000 in the bank maybe the bank has an interest rate of 1% after one year oh that's strange all right one thing we're going to add to our button we're going to set the type attribute equal to be button and that should fix that okay so we deposit $1,000 with an interest rate of one 1% after one year we'll have 1,00 0 but we're going to format this currency with our result we will use the builtin to local string method the first argument is going to be a location a local depending which geographic location a user is viewing this page we format numbers differently to use the user's default the first argument will be undefined the second argument is an object of options we can set these style property and to make this more readable I'm going to put this on a new line so we can see it I will set the style to be currency the next property that will be the currency pick a type of currency I'll use USD for American dollars all right let's try this again I will deposit $1,000 with an interest rate of one meaning 1% after one year I should have $1,110 with an interest rate of two that would give me $20 after 2 years that would give me $1,404 if I were set the principal amount to be $10,000 $1 with a 2% interest rate after 2 years that would give me $1,454 Cents Only problem with this is that what if somebody types A negative numbers we would like to prevent that or at least add some sort of check so before we calculate the result we'll add a few if statements let's check to see if if our principle is less than zero then we will set the principle to equal zero let's do this with the rate if the rate is less than zero set the rate equal to zero so we don't get negative numbers then years if years is less than zero set years to equal zero so if I type in negative numbers like negative $1,000 with a negative 1% interest rate after 2 Years it'll at least give me zero instead of some negative number what if somebody circumvents our precaution where we only accept numbers for example I'm going to inspect go to the type set that equal to be text I will set the principal amount to be pizza with a 10% interest rate after 10 years well we end up with not a number so within our if statements let's use the or logical operator or if our principal is not a number is not a number we'll set it equal to zero or if rate is not a number set the rate equal to zero or if years is not a number set it equal to zero set the principal amount to be a word like pizza with a 10% interest rate after 10 years we're at least given zero instead of not a number even better yet after submitting if a number is invalid like the word Pizza let's reset that to be zero when we're checking our principle within this if statement let's set the principal inputs value to equal zero let's do this with the rate the value of the rate input will equal zero and the same thing with Years Years input access the value set it equal to zero let's try this again going to go to inspect set the type to be text I'll do this with rate and years as well pizza pizza pizza submit and what am I missing I just realized I had a typo here make make sure that the N in N an is capital even if I were to enter in some text like the word Pizza they'll all at least reset to be zero and then we'll calculate what the interest rate is as if they were all zero instead of getting you know not a number all right everybody so that was a compound interest calculator that you can write using HTML CSS and JavaScript