hey everybody so in today's video I got to explain class lists in JavaScript class list is an element property it's used to interact with an elements list of classes meaning CSS classes by accessing the class list property of an element we can make reusable classes for many elements across your web page if I have a CSS class I can dynamically add remove toggle replace or check to see if an element contains a certain class so what we'll do in this example in our h HTML document is create a button the button will have text of my button the ID of this button will be my button we'll apply a little bit of CSS initially let's select the ID of my button we'll be applying just a few properties let's increase the font size to for RM oh not 43 for go back go back go back I'll add a little bit of margin of 10 pixels remove the border with border none border radius to smooth the corners 5 pixels and add a little bit of padding 10 pixels by 15 pixels that's good enough for now we're going to create a CSS class of enabled we won't apply it right away though we'll apply this class to this button using JavaScript if an element is enabled let's change the background color to be something blue I'm going to use hsl values though and I will set the font color to be white so this button doesn't have this class yet we'll add that in dynamically using JavaScript we'll create a reference to this button const my button will be the name then we need to select it document. getet element by ID the ID that I'm selecting is my button to add a class to an element take that element my button access the class list property follow this with the add method we will add the name of the class enabled and now my button is enabled we have appended the CSS properties dynamically so if I were to inspect this element I'll right click inspect we have added that class of enabled to the element so my button has an ID and a class of enabled to remove a class again take that element of my button access the class list we will use the remove method we will remove the class of enabled and it's gone let's right click on the element inspect so our class list is empty we have added and then removed that class of enabled we're going to create a new class now of hover when we hover over an element apply these CSS properties it's kind of like we're using the hover sudo class but we're using it a little bit different we can add or remove this class dynamically at will if we apply this class let's set a box Shadow to give the element a 3D pop effect for a horizontal and vertical offset let's set those to be zero each let's add 10 pixels for the blur effect and I will set the color to be I don't know let's set it to be black but set the alpha down to like 20% and then when I hover I would also like to set the font weight of that element to be bold let's add the hover class so the appearance of this button changed I would like to apply this class of hover only when I hover my cursor over the element We'll add a mouse over event listener we will take my button add event listener we have an event type and a call back to a function the event type will be Mouse over when we Mouse over this element we are provided with an element object event Arrow do this we will access our event objects Target meaning the button take our class list and add the class of hover and let's see if this works if I hover my cursor over the button we apply the hover class now when I leave the button I would like to remove it really we can just copy the code for the event listener paste it replace Mouse over with mouse out then we will remove that class so now we can apply that class and then remove it with mouse over and mouse out there's also toggle if we toggle a class we'll remove it if that class is present add that class if it's not so let's replace add with toggle do this for both Mouse over and mouse out and that should work the same when we hover our cursor over the button we will toggle the class of hover if we have a mouse out event we will toggle it again to remove it now we're going to use the replace method to replace one class with another we'll create a new class of disabled we'll be replacing the enabled class with the disabled class when we click on the button so with the background color of the disabled class let's set the background color to be gray again I like using hsl for the colors I'll set the lightness to be like 60% I'm trying to get a faded appearance and for the color let's pick a light shade of gray using hsl values I'll set the lightness to be 80% going back to our Javascript file let's add the class of enabled my button access the class list use the add method we will add the class of enabled then we'll add an event listener to the button we will take my button add an event listener we have an event and a call back the event is going to be click I would like to do something when we click on the button we will receive an event Arrow do this take our events Target access the class list we will use the replace method replace the old class with the new class replace the enabled class with the disabled class there's two arguments the old class and the new class replace the old class with the new class then when we click on this button we'll replace the enabled class with the disabled class then we have the contains method if an element contains a class this will return true and if it doesn't it returns false So within our event listener let's add an if statement and an else statement we'll check to see if our events Target access the class list we will use the contains method if we click on the button and the class contains disabled what do we want to do does the class list contain disabled let's change the text content take our events Target access the text content all appended Emoji what's a good one that one else replace enable AED with disabled let's click on the button we'll replace the enabled class with the disabled class our button is now disabled if I were to inspect this element the class is now disabled if I were to click on this button again well our class contains disabled that was true so we end up doing this code where we appended the text content of the button now the nice thing about using class lists HTML elements have a class list property we can reuse CSS classes amongst many HTML elements we'll create an H1 element now the text of this element will be hello I will give this element a unique ID of my H1 I'll increase the font size so we can see it select the ID of my H1 I'll increase the font size let's try 5 RM let's create a reference to myh1 const myh1 equals document. getet element by ID the ID that I'm selecting is my H1 We'll add the enabled class to myh1 myh1 do classlist do add not ass add enabled and there we go we have added these CSS properties to this element and because I'm lazy I'm going to copy all this code where we add an event listener to my H1 so let's replace my button with my H1 now when we click on this H1 element we can disable it we'll replace the enabled class with the disabled class and if you don't believe me let's take a look the class of my H1 is now disabled if I were to click on this element again well the class list contains disabled so we execute this if statement where we change the text content of that Target now here's a challenge round we're going to create four buttons and store all of those buttons within a node list so let's create a button with the text of the first button being button one I will give this button a class of my buttons let's copy this button paste it three times button one button two button three button four let's remove the CSS for my H1 select the class of my buttons keep these three classes of enabled hover and disabled okay let's eliminate all this code we'll create a node list to contain all these buttons we can use const if we don't plan on adding or removing buttons or let if we do let buttons equals document. query selector all select all elements that have a class of my buttons we'll apply our enabled class to all the buttons so we will take our node list of buttons use the for each method for each button within our node list do this take each button access each button's class list property I will add a class of enabled and we have applied that class to all the buttons If you need to remove a class you can do the same but replace add with remove now when we hover our cursor over one of these buttons we will toggle the hover class we need to iterate through our node list of buttons take buttons use the build built in for each method for each button within our node list do this take each button add an event listener the event listener has an event type and a call back to a function the event type will be Mouse over when we hover a cursor over it we will be provided with an event argument Arrow do this access the event object access access the target meaning the button that we hover over access the class list property we will toggle the hover class so when we hover our cursor over one of these elements we will apply the hover class now when our cursor leaves one of these elements we would like to toggle that class again let's copy everything we have here paste it replace Mouse over with mouse out when we leave one of these elements toggle the hover class again to remove that class now when we click on one of the buttons we're going to replace the enabled class with the disabled class take our node list of buttons use the for each method with each button Arrow do this take each button add an event listener we need to select the event type and a call back to a function the event type is going to be click the parameter is event Arrow do this when we click on one of these buttons we'll replace the enabled class with the disabled class take our event object access its Target access the class list property we will replace replace the old class with the new class replace the enabled class with the disabled class and let's see if this works when I click on a button we'll replace the enabled class with the disabled class the last thing we'll do is that when we click on a button that's disabled we'll change the text content we'll have to use the contains method So within our event listener I'll add an if statement if access our event access its Target access the class list property use the contains method does the class list contain the class of disabled if it does we'll access our event access the target of that event change the text content of that element all append an emoji that one I like that emoji if the class list of that element isn't disabled it doesn't contain M the class of disabled we'll execute an El statement where we disable it by replacing the enabled class with the disabled class we have three event listeners Mouse over Mouse out and click we're utilizing all three of these custom classes enabled hover and disabled we can hover over these elements then we'll have Mouse over and mouse out events then when I click on one of these buttons we can apply that disabled class within our click event listener we have an if statement if we click on an element that's already disabled append the text content all right everybody so that is the class list property it's used to interact with an element's list of classes their CSS classes they allow you to make reusable classes for many elements across your web page and well everybody that is the class list property in JavaScript