hey what's going on everybody it's you bro here and in this video I'm going to teach you guys how pointers work in C++ so let's get into it so basically whenever we declare a variable that variable has an address in your computer's memory where this value of that variable is going to be stored so pointers are necessary for dynamic memory allocation and that can't be performed without them so we'll be using pointers for a project when we cover the topic on arrays and how they can be useful so let's begin by creating a few variables and I'll show you how this works I already have one string variable named name and I assign this a value of Bro let's create another may be an integer variable named edge and I will assign this value of maybe 100 I am 100 years old and let's display these using AC out statement so we'll see out name and then add an end line after and C out edge and we'll also add an end line after this as well so this as you would expect will display the word bro and the number 100 so now there's this ampersand symbol that you can add to a variable and this is called the reference operator also known as an address of operator I've heard people call it both things so this will return a variables address in memory as in the street address in RAM where it's currently located so let's run this and see what happens now all right so we get these two funky numbers the first one is for our first variable and the second one is for our second variable edge so think of this like your own street address for wherever you live for example like 1 2 3 fake street except this number is the address for wherever this value is stored well this number is kind of the same thing but instead of a street address it's the street address in your computer's memory where you can find this value it's the location in RAM of this variable and one thing that you may notice that every time we compile and run this program the address may change so these addresses are really only temporary now you don't even need to assign these variables a value just by declaring these variables you're already creating an address of where these variables are going to store a value so let's run this again but we're not going to assign a value so you can see that these variables even though they do not store a value they're only declared we still have space for them to actually store a value at these addresses in our computer's memory now the next step is that we can store an address in a separate variable and that is what's called a pointer a pointer is a variable that stores the address of another variable and to create a pointer we need to declare a pointer just like we do with other variables or constants so this is what you do to create a pointer so let's clear out what we have now and start fresh so let's create a string variable named name you know what I guess we could have kept this line but too late I already deleted it and an integer variable named edge and I will set this back to 100 now these are the steps to create a pointer now the first step is that if we're going to create a pointer for a variable we first need to list the data type of the variable that we're going to create a pointer of if we're going to create a pointer of this variable name that's a string we're going to declare this as a string the second step is that we're going to list an asterisk and this is known as a dereference operator and it returns the location value of a variable now we need a unique name for this pointer a common naming convention is that you take the name of the variable and you add a P before it and you take the first character of that variable and make it uppercase other names would still work that's just one naming convention so this is basically the pointer for our name variable and we're going to set this equal to ampersand name which is the address of our name variable and P name is now a pointer for this variable so let's do the same thing with our edge then following the same rules so we need to list the datatype of this other variable which is an int for integer an asterisk so we're you using the dereference operator then let's create a name for this pointer so I'm just going to type an edge ad P before it and change the first letter to capital so P edge for pointer edge and we'll set this equal to the ampersand and then age alright so we have made two pointers and let's actually display these just to prove that I'm not a liar so we're going to see out P name then maybe a nd L and C out P edge e nd L as well so what you get here is that this these pointers are going to display the addresses of these variables then yeah that seems like it works then so one thing to keep in mind is that if you display the dereference operator along with these pointers it actually is going to display the value at these addresses so we got our values bro and 100 and that kind of defeats the purpose so if you're working with these pointers or you're displaying them make sure that you don't also include the dereference operators so let's create one more pointer just for practice I'll create a string variable maybe we'll call this food equals and then list your favorite food here for me that's pizza alright so we have a variable named food I want to create a pointer for this so we need to type in the data type so string using the dereference operator then we're going to create a new name for this pointer P food equals ampersand then the name of our variable so food and let's display this so see out P food yen DL and here is the address that is contained within our pointer P food for our variable food so these pointers may not seem too useful right now but at least we know how to create them they're used in dynamic memory and when we get to the topic of arrays we're going to be creating a project where we will want some dynamic memory because it's really useful to have so that's the basics of pointers hopefully this video gave you a few pointers as to how pointers work if you would like a copy of all this code that we worked on I'll post it in the comments down below and if you're looking for additional practice then in the comments section post how about three pointers that you created but yeah that is how pointers work in C++ hey you if you enjoyed this lesson then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro