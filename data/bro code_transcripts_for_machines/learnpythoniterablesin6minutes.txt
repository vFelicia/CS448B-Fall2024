hey everybody so today I got to talk about iterables in Python and iterable it's a category any object or collection that can return its elements one at a time is considered an iterable if an object or a collection is considered an iterable then it can be iterated over in a loop for example let's create a list of numbers numbers equals a list I'll add the numbers 1 through 5 to keep it simple lists are considered iterable we use them within a for Loop in the context of a for loop we're going to be given each element one at a time each element that we're working with we can give a temporary nickname let's say number for every number in my iterable of numbers let's just print each number this will give us 1 through 5 the name of the current element in our iterable should should be descriptive of what we're iterating over for example I don't want to rename the current number that we're working with as something like blah blah blah you know this would work but other people looking over your code might not understand what a blah blah blah is and I don't blame them each element that we're given from our iterable the name should be descriptive of what we're given or you might see item for every item in numbers print each item that's also a good choice now you could even iterate backwards by enclosing our iterable within the Reversed function so take our iterable of numbers and reverse it then we get the numbers 5 4 3 2 1 if you would rather not print each element on a new line we can replace the new line character at the end of print statements with something else print is a function we can pass in a keyword argument of end rather than end each line with a new line character let's end with a space this will space out each of the elements or we could replace it with something else or what about a dash after each element append a dash character we could even add multiple characters such as a space a dash and a space if we so choose it's up to you tles are also iterable let's convert our list to a tupple by enclosing our numbers within a set of parentheses and I no longer want this reversed for every number in my iterable of numbers print each number then again we get the numbers one through five let's cover sets I will create a set of fruit which I will name fruits for a set enclose any values within a set of curly braces let's add a string of Apple a string of orange a string of banana and a string of coconut so with our for Loop let's say for every fruit in my iterable of fruits I will print each fruit that would give me apple banana orange coconut now sets they're actually not reversible I will attempt to enclose our iterable of fruits within the Reversed function here's what happens we have a type error set object is not reversible sets you can't reverse let's cover strings I will create a string of name type in your full name I'll use my YouTube channel name for every character in my iterable of name I would like to print each character maybe I would rather not have each character end with a new line I will set the keyword argument of end to be a space last we have dictionaries which are the most complicated let's name this dictionary my dictionary dictionaries you enclose with a set of krly braces kind of like a set but each element is a key value pair I will add a key of A with an Associated value of one a key of B which has a value of two a key of C which has a value of three if you iterate over a dictionary the dictionary is going to return all the keys but not the values we'll test that for every key in my iterable of my dictionary let's print each key this would give me the keys of a b and c but none of the values 1 2 or three if you need the values we're going to follow this iterable of my dictionary use the builtin values method this will return all the values of your dictionary as an iterable but let's rename a key as value because now we're working with the values then we're given all the values 1 2 and three if you need both the keys and the values you're going to use the items method we'll be given both a key and a value make sure that the value and the key is separated with the comma let's print each key followed by the value we get the key of A with its value of 1 b 2 c 3 we can reformat the output however we want let's use an F string I I will add two placeholders let's print each key equals then the value a = 1 b = 2 c = 3 okay everybody so those are iterables an object or collection that can return its elements one at a time is considered an iterable meaning that object or collection can be iterated over using a loop and well everybody those are iterables in Python