hey what's going on everybody it's bro here hope you're doing well and in this video i'm going to teach you guys how we can use the j file chooser class in java to select a file someplace within your computer so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running all right people let's just get right into this so we're going to be discussing the j file chooser class this is a gui mechanism that lets a user choose a file we're only going to be selecting a file today i have other videos on loading files and saving files so this is helpful for opening or saving files if you want to look for a file that's someplace within your computer or within your project folder so let me show you my setup real quick i have two classes a main class and then a my frame class i have a new instance of my frame within my main class my frame extends jframe implements the action listener interface i have a constructor called my frame this dot set default close operation j frame x and on close i'm using a new flow layout this stop pack and this dot set visible to true now to launch the j file chooser we're probably going to need a button so let's create a button to do so so let's say j button button equals new j button and i'll add some text maybe select or better yet select file alright and then i want to add an action listener to this button so button dot add action listener since this class is implementing the action listener interface i just pass in this and then we need to add this button to the frame so this dot add and we're adding the button all right so we need to check if we are clicking this button then we're going to launch an event so if e dot get source is equal to our button however this action performed method does not recognize this button so we need to declare this outside of our constructor so j button button and then we do not need to declare this twice alright so when we click on our button and let's just try this real quick so we have our button and says select file in the top corner so we're going to launch a new instance of our j file chooser class so in order to do that we need to first declare it j file chooser and we will call this file chooser equals new j file chooser alright so now if we were to run this and we click on select file it currently doesn't do anything well that's because we didn't set it up to do anything yet we only declared and created a new instance of file chooser so the next step is that we are going to either show open dialog or show save dialog we're not actually going to be opening or saving any files just getting the location for the file so let's go with show open dialog and then i'll show you show save dialog right after so in order to do that to open our dialog menu it is the name of our file chooser file chooser right here dot show either open dialog or save dialog let's just go with open all right and then if you have a parent component you place that in here but we don't have one so we're just going to put null for now so what this does is that i'm going to add a comment this will select file to open all right so i currently have a file on my desktop and this is what this currently looks like it's going to bring you to your default directory of where you usually open files and i have a file on my desktop and it is called hello world all right so you can select a file to open and there's different uh files of type where you can search through these but i'll show you that later so let's say we want to open this file well where is it alright so there's a few other steps so with file chooser.show open dialog it's going to return an integer value think of it as the response and i'll actually print this with a print line statement so system.out.printline and i'm going to place this within the print line statement and i just want to show you what this returns exactly all right so i'm going to go to my desktop and then i'm going to attempt to open this uh file again so open okay so this returns zero so that's kind of like the response based on what button we click if i were to click cancel it's going to return one or if i click x it's going to return one as well so we can actually do something with this perhaps we can store this within a variable so i'm going to create an integer variable called response int response equals file chooser dot show open dialog and then we can check to see if response is equal to zero but there's another way of writing this if response is equal to zero that's one way or what we could do is write j file chooser dot approve option and that would be better so if somebody successfully selects a file and does not click cancel or click x button then we can actually create a new file we can store that so let's declare a new file file file equals new file and the file path for this is going to be file chooser dot get selected file dot get absolute path all right and then we'll probably need an import for this file as well okay then let's print the file path for this file so we can do that with system.out.printline and we're going to place the file name here so then what happens is that when we select a file let's say i want to go back to my desktop and select that hello world file this is going to get the file path and currently it's on my desktop so we don't necessarily need this print line statement but it's just proving that this file actually has a location too so then i have other videos on loading a file or saving a file using scanners or print writers but we'll save that for another video actually i think i'm going to keep this print line statement just because we have more to do okay now we have show save dialog currently with show open dialog we can select a file to open and we have an open button alternatively we have show save dialog so that is file chooser.show save dialog so i'm going to change open to save and i'll just turn this first line into a comment because we don't really need it anymore so this will select file to save all right it's the same process as before really but now we have this save button and we can attempt to save a file but there's still more steps we have to follow for actually creating a file i have a separate video on that so if i wanted to save something to my desktop this could be test file dot txt then i'm going to click save currently this won't actually create a file but here it's just printing the file location and it's set to my desktop all right so that is show save dialog now one other thing that we can do too is that we can set the current directory because right now it's just going to the default for my computer and that is my documents folder and we can actually change that so in order to do that it is file chooser dot set current directory and we pass in a new file and we specify the file path within this new file so one trick if you want to place this within uh set the current directory to your project folder that would be just a dot within quotes so this is going to go to my project folder and the project name is gui swing so you can see that that changed otherwise i could place a file path here so if i wanted the current directory by default to be set to my desktop i would place the file path for my desktop and for my desktop this is the address now if i were to run this and select a file the default directory is now my desktop and i can attempt to open or save a file here well that's the basics of the j file chooser class and in a future video we're actually going to be creating a text editor app and we'll need to use the j file chooser class so if you want a copy of all this code i'll post all of this in the comments down below but yeah that's the basics of the j file chooser class in java hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you