hey everybody in today's video I got to explain Mouse events in JavaScript so sit back relax and enjoy the show the first thing I need to discuss is event listeners an event listener listens for specific events to create interactive web pages a few types of events we'll discuss are click events when we click on something Mouse over is when we hover over something and mouse out is when we're hovering over something and then leave that element to add an event listener you'll use the add event listener method pass in an event type including but not limited to this could be clicking on something hovering over something or leaving the confines of an element and then a call back to a function what do you want to do when you interact with something for example I could use the click event and then change the color of something when I click on it going to our HTML file I will create a development for a box the ID of this development will be my box the text on the box will be click me then for fun I'll add an emoji because I like emojis let's apply some CSS styling cuz it's kind of small let's select the ID of my box change the background color to light green or some other color of you're choosing set a width of 300 pixels a height of 300 pixels I'll increase the font size to something large like 4 5 RM I'll set the font weight to be bold I'll use flexbox display Flex align items in the center and text align center that is good enough for now be sure to save everything we're going to select the ID of my box we'll store that as a constant const my box equals we'll need to select it by accessing the Dom document. getet element by ID I will select the ID of my box and then we can work with it easily we'll take my box add an event listener that's a builtin method my box. add event listener we need to pass in an event type and a call back to a function I want to do something when I click on this box the event type is going to be click and now we need to call back to a function we'll Define a function to change the background color function change color there's going to be one parameter an event then we will pass in a call back to change color now the event parameter event is an object it's provided to us automatically by the web browser when something happens when an event occurs like when I click on something event is an object that contains information about something that happens that event for this demonstration temporarily I'm going to console.log my event so let's click on the box then go to inspect console and here's my event when we clicked on that box the web browser provided us with an event object it's a pointer event this object contains details about what happened exactly for example we have the target what did we click on WE clicked on the div element with an ID of my box and here are all the properties and methods of that box that's the target we have a Tim stamp of when the click occurred the type of the event click which matches up with the event type and coordinates of where we clicked on the screen event is an object that's going to be provided to us through the web browser automatically we don't need to explicitly pass in an event object with this call back it's provided to us behind the scenes I'm going to change the background color of our box when we click on it we will access our event object that's provided to us access the target the target is what we clicked on there's information about our Target within the event object then I will take the style of the target set the background color property to be a different color I will set it to be red but I prefer the shade of tomato because I like that color now when I click on the butt the background color changes but why stop there let's also change the text content I'll add one more statement to the change color function again we will access our event access its Target access the text content of the target to be ouch and then I'll add an emoji that's a good one when I click on this box not only does the color change but the text too now you don't necessarily need to pass in a call back you can also pass in an anonymous function or even an arrow function so let's copy these two lines of code we'll reuse it later we no longer need to define a function within the event listener instead of passing in a call back we'll pass in an anonymous function we have one parameter an event that's going to be provided to us when we click on my box do this change the background color and the text now we could even use an arrow function I have a preference for Arrow functions because they're concise with their syntax with an arrow function we have one parameter an event if you have a single parameter you don't need to enclose it within a set of parentheses we have one parameter of event then do this do all this code and that should still work when I click on the box the color changes as well as the text so when you add an event listener you can pass in a call back or an anonymous function or an arrow function it depends on what your preferences are personally I like Arrow functions we have a few other Mouse events to discuss Mouse over and mouse out Mouse over is when you hover your cursor over something so let's take my box add a new event listener an element can have more than one event listener add event listener we have an event and a call back as arguments the event is going to be Mouse over for the call back I'll use an arrow function we have one parameter of event Arrow do this let's copy these two lines of code I'll change the background color to be yellow like it's a warning and the text cont content to be don't do it that's a good face when I hover my cursor over this element the background color and the text is going to change the event that occurred is mouse over it's when you hover your cursor over something Mouse out is when you leave a specified element so when I leave the box I would like to change back the background color and the text content We'll add an additional event listener my box add event listener the event type is going to be Mouse out then I'll write an arrow function we're provided with an event Arrow do this let's change the background color and the text content I will revert the background color to be light green and the text to be click me whatever the text content originally was when I hovered my cursor over this element we get that Mouse over event but when I leave we get the mouse out event when I click on this box we get the click event when I leave the Box we get the mouse out event again to reset it essentially for the last part of this demonstration we're going to create a button when we click or interact with the button then we'll change a separate element this box so within our HTML file let's create a button with text of click me I will give this button a unique ID of my button and I'll increase the font size with CSS we will select my button I will increase the font size to be three RM just so it's not so small let's select the ID of my button const my button equals document. getet element by idid my button I'll add the event listener to my button not my box if I was to interact with this button with the way it is now when I hover over the button we've created a mouseover event and the button changes when I click on the button we're changing the HTML and CSS of the button because the button is what has the event listener we're selecting the target of the event to change which is the button that is what we interacted with when we interact with our box it doesn't do anything it doesn't have any event listeners the button does though we're going to replace the event Target with my box when we interact with the button change the background color and the text content of my box so then when I hover over the button the Box changes when I leave it reverts back to normal when I click on the button then we've created a click event all right everybody so that is an introduction to Mouse related events you'll need to add an event listener an event listener listens for specific events to create interactive web pages a few events we've covered include click Mouse over and mouse out to add an event listener take an element use the builtin ad event listener method pass in an event type and a call back Anonymous function or an arrow function to do something and well everybody those are Mouse related events in JavaScript