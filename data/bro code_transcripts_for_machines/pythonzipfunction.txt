hey what's going on everybody it's bro hope you're doing well and in today's video i'm going to show you how the zip function works in python so sit back relax and enjoy the show if you wouldn't mind please like comment and subscribe one like equals one prayer for the youtube algorithm all right ladies and gentlemen welcome back we're talking about the zip function today the zip function will aggregate elements from two or more iterables iterables are those things like lists tuples sets etc and the zip function will create a zip object with paired elements from each iterable stored in a tuple for each element within our zip object here's an example let's say that we have two different types of iterables i have a list of usernames and a few usernames within here are dude bro and mister and i have a tuple of passwords and i have some very secure passwords such as password abc123 and guest what i would like to do is to zip elements from each iterable together so that they're in pairs and each pair is going to be stored as a tuple within a zip object and here's how we can do that let's say that we will create a zip object called users and we will use the zip function the zip function will take a varying amount of iterables we're going to pass in our usernames and passwords and zip them together so let's pass in usernames as well as passwords and now our zip object of users is actually iterable zip objects are iterable so we can use them within a for loop so let's type for i in users and print i and what we get is that we have a zip object of tuples and each tuple is storing each pair of elements from our two iterables now users is a zip object and if you don't believe me let me prove it i'm going to print the type of users and this will print that users is indeed a zip object but you can easily convert this to a different type of iterable by using a cast let's say that we would like to convert our zip object into a list so we'll surround the zip function with a cast to a list and now the data type of users is now a list what we have is a list of tuples and each tuple is storing a pair of elements from our two iterables of usernames and passwords now currently since we're passing in only two different iterables we can easily make this a dictionary so that these are key value pairs so let's cast our zip object as a dictionary and to display all of the elements within our dictionary all the key value pairs we're going to change our for loop to this for key value in users dot and we will use the items method print key comma value actually i think i'm going to separate each of these with a colon just to make it more readable and now when we zip these two intervals together we end up with a dictionary of usernames and passwords and the name of this dictionary is users now you're not limited to just two iterables you can add a third iterable or more so this time let's create a maybe a list a list of last login dates and i'll just call this login date equals and why not make a list and let's make up some dates let's say one one dash twenty twenty one one two dash twenty twenty one and one dash three 320 21 okay so let's create a zip object of users and we're going to zip usernames passwords and login date and let's iterate over this for i in users print i now we have a tuple for each element and instead of a pair we now have a trio i guess of all of the different elements from each iterable so in conclusion the zip function will aggregate elements from two or more iterables and create a zip object with paired or grouped together elements stored in a tuple for each element within our zip object so that is the zip function if you would like a copy of this code i will post this to the comment section down below and well yeah that's how the zip function works in python