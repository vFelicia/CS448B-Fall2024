hey it's bro hope you're doing well and in this video we're going to be discussing V and as well as the or logical operators in C++ let's get into it logical operators allow a program to make a decision based on multiple conditions so for example we can create an if statement with more than one condition and for this video we'll be talking about the and as well as the or logical operators let's begin with the and logical operator we can check to see if one condition and some other condition is true if both conditions are true as in one and the other one is true then the entire expression is true if just one of them is false then the entire expression is false so let's create a program where this might be useful then let's create a program that will ask for somebody's temperature and if it falls within a certain range we will display a message so let's create a double value so we can store a decimal portion depending on what temperature they type in and let's just create a variable named temp short for temperature and we'll create a prompt to ask for the user's temperature enter your temperature and perhaps we'll put this in Celsius and then we'll want to assign this variable temp all right so then let's create an if statement and this will display a message if it falls within a certain range all right so let's begin with if our temperature is greater than or equal to 35 degrees Celsius then we'll display a message such as your temperature is normal all right but what if somebody's temperature is like 200 degrees Celsius that's obviously not normal so we would want this to fall within a certain range so we can use the and logical operator to check one more condition so we can say if temperature is greater than or equal to 35 and temp is perhaps less than or equal to 37 point 5 then we will display this message else we can do something else such as display a message like go to the hospital but I spelled it wrong okay let's run this enter your temperature I have a temperature of 150 degrees Celsius and it says go to the hospital because that is obviously not normal so if we want this if statement to execute it needs to fall within this certain range this condition has to be true as well as this condition has to be true since we said our temperature is 150 degrees Celsius this portion is true it evaluates us true but this portion evaluated is false because 150 is not less than or equal to 30 7.5 so in order for us to execute this if statement it has to have both portions of this expression become true so let's try it again but we'll have it fall within this range then so perhaps my temperature is 36 degrees Celsius your temperature is normal and with these and logical operators you can add more than one for example we can put this portion within its own set of parentheses and we can check something else such as temp does not equal zero I guess it wouldn't really make sense for this example since we're already checking to see if temperature is less than thirty seven point five but this is one way that you can check a total of three things or maybe even four things if you add another and logical operator but that's basically how the and logical operator works you can check to see if one condition and some other condition is true if just one of them is false then the entire if statement or entire expression is false then let's clear what we have and move on to the or logical operator so the or logical operator is somewhat similar to the and logical operator but it will check at least two conditions if one of the conditions is true and the other is false then the entire expression is true the only way that the entire expression will evaluate as false is if both conditions are false then so let's create another similar example it's going to be a program that will ask if you have a cough so let's write a perhaps let's declare a string variable named cough alright and we will ask for a prompt do you have a cough then we'll write within parentheses like the answer that we expect like yes or no all right and then we will assign the answer to our variable Koff which can hold a string but I'm forgetting a semicolon okay then let's write an if statement if and I think the best way to handle this that uses an aura logical operator is that we can say if our string cough and we're going to use the apt method and we're going to check to see if the character at position 0 index 0 of our string Koff is equal to the character perhaps why all right so that means somebody is responding with yes or maybe a yeah and then we will say see out you are sick and then let's write an else statement else you are probably fine all right so here's a scenario what if somebody types in a capital y for when they type in the word yes let's try it alright so maybe for this first run let's just type in yes just to be sure that this is working all right do you have a cough yes you are sick now let's type that in again with a capital y yes all caps you are probably fine but that's not what we expected so why don't we check to see if some other condition is true within our if statement and we can actually use the or logical operator which is two of these vertical bars and we will also check to see if cough at index 0 equals the capital y a capital y so as long as one of these conditions is true then this entire expression is going to evaluate it's true even if one of these conditions was false as long as one of them is true then this entire expression is going to be true then and we will execute whatever is within the code block of this if statement so let's try this one more time do you have a cough then we'll just type in all caps yes you are sick which is what we wanted then so then just like the end logical operator we can check to see if another condition is also true or not so you can just add another set of these vertical bars if there's one more thing you want to check so you're not limited to just to surprise we're going to be talking about one more topic and we've discussed it previously in another lesson and that is the not logical operator and basically what this operator does is that it will inverse an operand it will reverse the true or false outcome of an expression and I know we've talked about this previously but it would be a good point to touch base with this just because this is technically a logical operator and if there's anybody new to this channel and they didn't see the previous videos they'll actually be informed about this now so let's just touch base with this real quick so let's create a program that will ask for a user's name and depending on what they type in it will either display a welcome message or it will display a message such as you did not enter your name if somebody just skips the prompt so let's create a string variable named name all right and then we'll create a prompt to ask the user for a name so see out enter your name and then we will use the get blind function and within here we'll type in C and name so this is in case somebody types in a first name and a last name it will actually assign the entire line of input alright so we'll use an if statement and then within the if statement will check see if our string name is empty and we'll use the empty method that we learned about so we'll just type in a name dot empty so if the name is empty they must have skipped it and we will display a message such as perhaps we'll yell at the user you did not enter your name frowny face all right so then if the name is not empty then they must have typed into something so we'll display a message like a welcome message that says welcome whatever the user's name is all right so let's try this and then after this run we'll try and use the not logical operator in action so enter your name I'm just going to hit enter to skip you did not enter your name all right with this program there's another way to write this and we can use the not logical operator so this will basically inverse the operand if it's false it's going to flip it to true if it's true it's going to flip it to false so if we place this not logical operator before this name dot empty method if the name is empty and this pops up as true this is going to flip it to false and the inverse of that too so if basically our name is not empty we can actually display this welcome message so if the name is not empty we will display our welcome message else the name must be empty then so we will have our message that says you did not enter your name let's try this and see if it works just like before so enter your name I'm just going to hit enter you did not enter your name let's try it one more time but let me fix some syntax here all right and to your name this time I will type in my name and just type in bro and it says welcome bro well those are three logical operators that you would find useful the and the or and the not logical operators I'll post the code that we worked on in the comments down below and pin it to the top if you want to take a look or you'd like a copy for yourself but yeah those are how logical operators work in C++ hey you if you enjoyed this lesson then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro