hey everybody in today's video we're going to create a registration form in PHP so sit back relax and enjoy the show a few prerequisites that we'll need for this project is that we'll need a table within a database we have created one in Prior topics we have an ID a user a password and a registration date you'll need a working database connection as well which is what we have done here in my index file I have included that PHP code that contains my connection then we will write a second PHP script within this file we are going to close our MySQL connection because if we don't do it now I know that I'm going to forget later so let's close it now and we are closing our connection let's go to our index file generate some HTML we'll create a pair of form tags for the action we're going to set this to a PHP script within quotes just in case I update the name of this file this script will reflect the changes so let's create a PHP script we will get from our server super Global variable PHP self accessing the key of PHP self that will give us the name of the file but this is vulnerable to crosssite scripts we should enclose this within a filter HTML special chars is a good one for this situation then we should set the method equal to post because we're creating a registration form let's add a title to our web page let's use an H2 header tag welcome to fake book it's like Facebook but worse we'll have a user type in a username and a password username add a break add a text box input type equals text the name attribute will be username add a break and I'm just saving and reloading everything as I go along we'll need a password create an input tag set the type equal to password the name will be password as well add a break then let's create a submit button that is also an input tag the type will be submit for the name let's set that to be submit as well then for the value maybe register that looks pretty good okay our form is complete let's go to our PHP script the method of our form is set to post we can detect that with a if statement we will access the server super Global variable and check the request method key so type request method is this equal to post has the request method changed to post if a post request is made we should filter both the username and the password it just in case they contain a malicious script so let's assign our username equal to we will filter the input using the filter input function type input post because we're using post the second argument is the attribute name username then a filter type filter sanitize special chars let's copy this line then paste it directly underneath but change username to password do that here too so that should filter any malicious grips once we have a username and a password that's been filtered we'll check if one of these fields is empty we can use an if statement let's check if our username is empty if empty function our username then we will Echo please enter a username else if our password is empty empty function let's check our password please enter a password Let's test that real quick I'll type in a username but not a password please enter a password I won't type in a username but I'll type in a password please enter a username if we type in both nothing happens but that's good if our username isn't missing and our password isn't missing we can execute and else clause in our database we'll want to store a hash of a password let's take our password declare a hash variable then use the password hash function we will pass in our password then an option let's use password default okay now that we have our hash we need to write an SQL query we'll insert the username and the hash of the password we'll store our SQL query within a variable SQL then we will write the query it's going to be an insert statement insert in two the name of the table in this case my table is named users list the columns user and password values list the values we will be inserting our username variable as well as our hash the hash variable then to initiate the query we can use the query function mysqli underscore query pass in our connection as the first argument followed by our SQL query once that's complete we should probably let the user know that they registered successfully let's Echo you are now registered for the username I will type SpongeBob SpongeBob will have a password of pineapple one I'll click register you are now registered let's go to our table refresh I might need to zoom out a little bit and here's the first record user ID one username is SpongeBob this is the hash of the password and I have a registration date one important thing I forgot to mention I'm only allowing in this table unique user IDs if I were to register another user as SpongeBob we might have a little problem SpongeBob I'll make up another password fry cook too well we get a fatal error uncaught MySQL exception we have a duplicate entry for SpongeBob we never really talked much about exception handling but one way in which you could handle this exception is that we can copy the exception name place any code that might cause an exception within a try block then catch that exception in this case it was a MySQL exception then let's Echo that username is taken there's still a lot more you can do with exceptions but that's more of an intermediate topic I would say let's type in SpongeBob again brycook 2 and register that username is taken let's create the username Squidward Squidward will have a password of clarinet2 you are now registered and here's Squidward all right everybody so I thought that would be a fun final project for us to do to wrap up this video I would look at both object oriented programming and exception handling next hey if you made it this far be sure you've smashed that like button leave a random comment down below and subscribe if you'd like to become a fellow bro