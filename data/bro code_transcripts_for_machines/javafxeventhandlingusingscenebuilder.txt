hey what's going on everybody it's bro hope you're doing well and in this video i'm going to teach you guys how we can use scene builder to handle events so sit back relax and enjoy the show if i could have just a moment of your time please like comment and subscribe i would greatly appreciate it all right people let's get this show on the road now for this video we'll need an fxml file if you do not have that this is how to create that i'm going to go to my application package right click go to new other new fxml next i will name this main and click finish and you should have this line of code within your start method parent root equals fxml loader blah blah blah blah blah but the important thing is to get resource and this should contain the name of your fxml file now for each event that we have we will have a corresponding method but i like to keep all of my event methods in one place so i'm going to be creating a separate java file to contain those so to do that right click on your package go to new then class and i will name this controller because it's going to control all of our events if you have your root node set to your fxml file you have your fxml file created as well as a separate java file with a class listed as controller then we're ready to begin so let's go to our fxml file and open with scene builder here we are within scene builder i'm going to start fresh i will delete this anchor pin and create a new one and then what i'm thinking that will do is that we will have four buttons one for up right down and left and when you click on one of these buttons it's going to move a shape across your screen here so let's create a bunch of buttons that is under controls so i'm just going to drag and drop some buttons we'll have one for up right down and left and if you prefer you can change the text on your buttons by clicking on a button then go to properties on the right hand menu look for text and you can change the text i will change this to up and i'm just going to recenter that this will be right we have down and left now what we got to do is create a method for each button so let's create our first method which will be called up public void up there is one parameter action event e and we'll probably need an import as well make sure you're importing from javafx and not awt and when we click on this button let's test this let's just print something to the console window such as up all right then let's repeat the process for down left and right so i'm just going to copy and paste this up method three additional times and let's change up to down for this next method then we got to do the same for left and right now that we have our four methods what i'm going to do is run and compile this just so that everything is saved and uptodate now what i need to do next is associate each of these methods with a corresponding button up for up down for down and just follow that pattern but we need to add our controller class to scene builder so i'm going to open with scene builder again on my fxml file and to add your controller navigate to the left hand menu there should be a drop down for your controller under controller class select your controller class and in this case for me this is application.controller and now for each of these buttons let's begin by clicking this up button we can add a method under this on action section on the right hand menu so on action there should be a drop down i will select the corresponding method i would like to link to this button so i will select up for up right for right down for down and left for left for the time being let's save minimize scene builder and let's head to our fxml file underneath each of these buttons there should be a section related to on action and if these are all here then we should be good so let's run this now when i click up this will display up down left and right okay we know that the buttons are working now let's take this a step further let's add a circle to our scene and move the circle around by using our buttons so let's head back to scene builder to add a circle to our scene go to the left hand menu under the shapes drop down select circle and drag and drop it to your scene let's save this and head back to our controller class within your controller class at the top add this annotation at fxml and you'll likely need an import as well now what this annotation will do is that by use of the fxml loader the fxml loader will inject all of the values found within your fxml file meaning all of this into your controller class for you all you have to do is add this annotation at fxml and now let's declare a few things we'll need a circle so let's declare a circle private circle my circle and we'll need to import this from javafx and let's declare some coordinates private double x and private double y so we technically don't need these print line statements anymore we were just testing something i'm going to turn them into comments but you can feel free to keep them in if you want now let's set up our up method to move our circle up type my circle dot set center y and the value that we're going to pass into the set center y method is y equals y minus one or you could do the shortcut which is y minus equals one now to move our circle down that will be my circle dot set center y y plus equals one and let's do the same thing for left but we change y to x x minus equals one and lastly right that's going to be x plus equals one all right now let's head back to scene builder there's one last thing that we need to do within scene builder select your circle navigate to the right hand menu there should be a drop down for a code section under fx id we're going to type in the name of that circle that we declared my circle let's save this file save we can close out of scene builder and then head to your fxml file let's just be sure that our circle object has that id of my circle so it looks like everything should check out so let's run and compile this and then when we click on our buttons this will move our circle however i think we should move this a few more pixels so let's change one to maybe 10 just so that the change is more noticeable alright so when we click up our circle moves up it moves right down and left well everyone that's the basics of handling events using scene builder if for some reason some of this doesn't work you may have to either restart scene builder or run and compile your code just so that everything is up to date because things don't like to refresh i noticed so if you would like a copy of this code i will post all of this in the comments section down below but yeah that is how to handle events using scene builder in javafx hey you yeah i'm talking to you if you learned something new then help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you