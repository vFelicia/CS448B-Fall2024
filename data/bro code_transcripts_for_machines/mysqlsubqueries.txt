well hello again everybody today I need to explain subqueries they can be pretty complicated but I'll try my best to explain it simply a sub query is just a query within another query you write a query and close it within a set of parentheses whatever value or values are returned from the sub query you would use within an outer query I'll give you a few demonstrations I have an employees table our manager Mr Krabs he needs us to compare every employee's hourly pay with the average hourly pay of our employees table maybe Mr Krabs is going to give people a pay reduction not an increase a pay reduction but he needs to compare the hourly pay of every employee versus the average how can we write something like that a task like that I would say involves at least two steps we need to find the average hourly pay first and then display every employee's first name last name hourly pay then the average pay let's begin with the average pay select average function hourly pay from my employees table so far so good 15.45 is the average hourly pay of an employee how do I use this number whatever value or values are returned from a sub query we can use within a larger outer query let's delete this semicolon I will surround this statement with a set of parentheses I will then write the outer query let's select the first name last name the hourly pay then comma our subquery from employees there we are although I'm going to give the subquery an alias as average pay and I think I'm going to move this to the next line that is much better so we have accomplished our task we have compared every employee's hourly pay versus the average once we complete the subquery whatever value or values are returned from the sub query we would use within the larger picture the outer query just imagine that we replaced the subquery with 15.45 this value is what was returned although you don't want to write a concrete number like this just because the average pay is bound to change writing a sub query like this would calculate our average pay regardless if we add or remove employees let's try a different example let's find every employee that has an hourly pay greater than the average pay so again we can begin with the sub query we need the average pay select average function hourly pay from employees so again we return 15.45 I'll use this within a where Clause let's select the first name last name hourly pay from our employees table where the hourly pay is greater than our sub query Mr Krabs and Sandy Cheeks are both making more than the average hourly pay what was returned was 15.45 then it's just a matter of completing the outer query select the first name last name hourly pay from employees where hourly pay is greater than 15.45. it looks complicated but when you break it down into steps it's a lot easier to visualize we're going to cover a completely different example we will be working with customers and transactions I'm going to select all from my transactions table we have a few transactions I would like to find the first name and last name of every customer that has ever placed an order we can do this step by step let's select every customer ID from transactions that's not null select customer ID from transactions where customer ID is not no let's take a look so we do have a few repeats we have one two three and three you can add this distinct keyword if there's any repeats that would eliminate them we have three registered customers that have placed orders in the past customer ID is one two and three but we don't know who these customers are we will use these values within a larger outer query I will surround this query within a set of parentheses eventually we'll use this within a where clause let's select the first name and last name from our customers table where customer ID I will then use the in operator then add my sub query there we are there's our three customers that have placed orders in the past Fred fish Larry Lobster bubble bass this sub query return to the values one two and three imagine that once this query resolves we are left with the values one two three so this outer query makes a lot more sense select the first name and last name from customers where the customer ID is one of these values one two or three you could do the inverse two find the first name and last name of every customer where the customer ID is not in the sub query this query would return every customer that has never placed an order let's send them a coupon in the mail to convince them to place an order we were left with values one two three select the first name and last name from any customers where the customer ID is not in one of these values one two or three Pearl Krabs had an idea five poppy pups was four so yeah that's a sub query everybody it's just a query within a larger query it helps to visualize this step by step imagine that we're completing the subquery first whatever value or values are returned we can use within a larger query and well yeah those are subqueries in MySQL