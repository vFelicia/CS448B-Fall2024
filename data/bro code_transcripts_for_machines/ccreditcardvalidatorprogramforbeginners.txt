hey everybody in this topic we're going to create a program to validate if a credit card number is valid or not to do so we'll need to utilize the loon algorithm which i've broken into these steps if you need some test credit card numbers you can always google them i found a bunch on this website let's just take this one for example and to make this more readable i'll divide this number into groups of four step one we double every second digit from right to left if the double number is two digits split them i'm only concerned with every second digit from right to left so we can eliminate some of these that we won't be using then we're going to double these numbers so two doubled is four nine doubled is 18. since we have the number 18 that's two digits we need to split them we'll split 18 to one and eight then six doubled is twelve we'll split that step two we need to add all of these numbers together to create a sum the sum is 29. step 3 add all odd number digits from right to left with the original number so now we're only concerned with the odd numbers then we just add these numbers together no need to double them the sum is 21. step four we sum the results of steps two and steps three twenty nine plus twenty one that equals fifty step five if step four is divisible by ten that number is valid we could say our result modulus ten if that number is divisible by zero that number is valid fifty is divisible by ten so that number is valid we'll create a program that will do all of this for us let's create our functions we'll need three int get digit the parameter will be a constant integer that i will name number int will need to sum the odd digits the parameter is standard string card number let's copy this paste it some even digits the parameter is the same let's copy these functions and add some declarations we do need to return something otherwise we'll get a warning for the time being i'm just going to return 0 as a placeholder okay let's begin with the main function we'll need a credit card number that will be a string standard string card number then int result and i will set that equal to zero right away we'll prompt the user to enter in their credit card number standard output enter a credit card number standard input card number result equals will invoke the sum even digits function pass in our card number plus some odd digits pass in our card number we'll need to fill in these functions let's begin with some even digits we can get rid of this i'll create a local variable named sum to keep track of the sum what we'll need to do is iterate over our card number in reverse order we can treat a string as an array of characters and we can iterate over that so we'll need a for loop and we will iterate over this card number in reverse order starting from the end we'll need an index into i equals then we'll need to find the size of our card number there's a builtin function for that card number dot size now arrays they always start with zero so we're going to subtract one however if we're summing the even digits beginning from the right we'll need the second to last digit so that would actually be minus two the very last digit would be minus one our index i will begin from the second to last position i would like to continue this for loop as long as i is less than or equal to zero then we will decrement i by two i minus equals 2 because we need every even digit so we will take sum plus equals then invoke the get digit function get digit within the getdigit function as an argument we're going to pass in card number at index of i times two however there's one more thing that we'll need to do with card number at index of i we will subtract the character 0 and here's why we're currently working with a string of characters you can also treat a string as an array of characters each character according to the ascii table has an associated integer value a decimal value if i'm passing one of these characters as an argument to my getdigit function we'll treat that character as if it was its decimal equivalent according to the ascii table the character 0 has a decimal value of 48 the character 1 is 49 2 is 50 then all the way up to 9 which has a decimal value of 57 so if i'm passing in the character at index of i what we'll end up working with is the decimal representation of that character if we subtract the character 0 or its equivalent 48 that would give us a range of numbers 0 through 9. for example the decimal equivalent of the character 9 is 57 57 minus 48 would be 9. you could subtract either 48 or the character 0. that would give us numbers 0 through 9 according to the ascii table then we're multiplying that number by two then at the end we will return whatever the sum is let's fill in this get digit function within the getdigit function the digit that we're working with was doubled whatever number we passed in it may take two digits for example like nine times two is eighteen we need to split those two numbers to get one and eight so i'm going to return number modulus 10 plus number divided by 10 modulus 10. that will split the two numbers for example let's say our number that we're passing in as an argument is 18. 9 times 2. 18 modulus 10 would give us 8. 18 divided by 10 that would give us 1 since we're using integer division 1 modulus 10 is one eight plus one is nine then we're just returning that number nine okay that is the get digit function then we need to sum the odd digits and really we could just copy all this then paste it but there's a couple changes to make int i equals card number dot size function minus one we need to begin at the end and then sum plus equals card number minus zero when summing the odd digits there's no need to double the odd digits that's only with the even digits and that is all the functions let's close out of these so we'll have a result the sum of the even digits plus the sum of the odd digits if result is divisible by 10 that number is valid if result modulus 10 is equal to zero then that number is valid standard output card number is valid else card number is not valid okay let's try this i'm going to enter in that original number that we worked with that discover card okay enter a credit card number i'm going to paste this hit enter that number is valid let's try that again so i'm going to enter in the same card number except i'll add one to the end that number is not valid hey if you have your own credit cards feel free to try them too and see if it works all right everybody that is a credit card validation program mostly for practice if you would like a copy of this code i'll post this in the comments section down below please be sure that you do not enter in your own credit card into the comment section and well yeah that is a credit card validation program using c plus