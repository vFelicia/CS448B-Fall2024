hey what's going on everybody it's your bro hope you're doing well and in this video i'm going to show you all how list comprehensions work in python so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running all right everybody so list comprehensions a list comprehension is a way to create a new list with less syntax you can also use a list comprehension to mimic certain lambda functions such as in the previous videos where we use the map and the filter functions and not only that but a list comprehension is easier to read than a lambda function but there is a formula that we're going to follow when we create our list within our list we're going to write an expression for item in iterable now let me give you an example of where a list comprehension would be useful let's take this program that will create a list of all the numbers 1 through 10 squared so if i were to print this we'll get the numbers 1 through 10 whatever their square is right so we have 1 through 10 and the square of 10 is 100 so we wrote this program in three lines of code we're creating an empty list we're creating a for loop and then we're writing an expression for what we want each loop iteration to do now let's write the same program but used a list comprehension and we can write the same program with less syntax so i would write something like this and we're going to follow this formula so our list is going to be named squares equals then within a set of straight brackets we're going to write our expression which is this portion i times i for item so that would be for i in our iterable that would be range one through eleven because remember eleven's exclusive and then let's print our squares print squares and there you go we made the exact same program using a list comprehension so basically speaking you just follow this formula you set your list equal to your expression and our expression for this example is i times i for item for i in your iterable in range 1 through 11. so this took three lines of code well if you exclude us printing our list and this program took one line of code now we can also use a list comprehension to mimic certain lambda functions i wrote a program where we will be filtering a list of student grades let's pretend that all of these students took some sort of exam so we have one student that received a 100 90 80 70 60 50 40 30 and then one student got a zero because they didn't show up so what i would like to do is to filter all of these student grades into a list that only contains students that passed and the criteria for a passing grade will be a 60 or above so i would like to filter all passing students and if i was to write this program using the filter function i would probably write something like this so i need a function and then my list that i'm working with lambda x colon x is greater than or equal to 60 will filter all of the results and then convert it to a list named past students so the result will look something like this i have five student grades in here with 100 90 80 70 and 60. now let's write the same program using a list comprehension now there's just one portion to this formula for list comprehension that we're going to add at the end we're going to add if conditional we can check some sort of condition after each iteration so let's write the same program using a list comprehension following this new updated formula that we have so we need our list which will be named past students equals first comes our expression and it's just i for this example for item i in our interval of students and then if we can check our conditional if i is greater than or equal to 60 and this will have the same effect as our previous program but instead it uses a list comprehension now if your program has multiple output if you need an else statement within your conditional you're actually going to move this portion of the if conditional within our formula to right after the expression so let's write an if else statement here so let's say that instead of just excluding any student that didn't pass we'll replace their grade with the word failed and we can do that using an if else statement so let's do this again i'm going to copy what we have here paste it and we'll move our conditional from the end to just after the expression portion i if i is greater than or equal to 60 and you can see here that we need to add an else statement else will return the word failed so we're replacing each instance of a failing grade with the word failed instead so if your condition returns whatever i is you can just add that to the end if you need an if else statement you're going to add it right after the expression so everybody in conclusion a list comprehension is a way to create a new list with less syntax you can even mimic certain lambda functions which we did with the filter function and it has the added benefit of being easier to read than a lambda function so you just follow one of these formulas depending on what you're trying to do so you need at least list equals your expression for item and your interval if you have a condition that you want to check you just add that to the end of your list comprehension if you have an if else statement then you'll add that to right after the expression so you just follow one of these formulas depending on how you want to write your program so that is a list comprehension if you would like a copy of this code i will post all of this to the comments section down below and well yeah that's how list comprehensions work in python