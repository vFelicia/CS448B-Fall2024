hey what's going on people so in today's video we're going to create a digital clock using JavaScript HTML and CSS so let's get started the HTML for this project is going to be very minimal I will create a development the ID of the develop will be clock Das container within this development we'll have a nested development with an ID of clock we have a clock within a clock container as a placeholder temporar ly the text on the clock will be 0 0 colon 0 0 colon 0 0 00000000 and I'm just going to zoom in temporarily and that is all the HTML that we need let's head to our CSS stylesheet let's begin with the body I will set all margin to be zero originally let's select our clock container ID clock container I'll use flex box for the clock container display Flex I will justify content in the center justify content Center if you would also like to vertically align you'll need to add the following two lines of code I will align items Center this CSS property will vertically align elements but the clock container itself is kind of small for example I'll add a border of two pixel solid the elements within the clock container are aligned both horizontally and vertically but the container itself is kind of small to vertically align this element within the window itself we'll have to increase the height of the clock container I will add height of 100 VH for the viewport height and we can remove the Border yep the clock is now within the middle of the container both horizontally and vertically but if you prefer to be at the top you can eliminate these last two lines it's up to you let's style the clock itself we are selecting the ID of clock I will change the font family to be monospace this is the normal size when I'm zoomed in to 100% I will set the font size to be 6.5 R then set the font weight to be bold and text align Center if you would like a background image for the body of your document I just so happen to have one right here it's a picture of Central Park in New York this is optional but if you would like to include a background image of this project within your CSS stylesheet you'll add the following CSS properties I will set the background image property to be a URL so what is the name of that image I'm going to copy the name of it and paste it within this URL function I'll set the background position to be the center right now we're seeing the top left of the image instead of the center background Position will be Center if you're using a small image your image might be repeating itself to take up all the available space to prevent that you can set the background repeat property to be no repeat mine already wasn't repeating though but yours might be then we'll set the background size to cover by adding this property this image will cover the entire window and maintain its aspect ratio if you do have additional content besides this clock you can keep the background in place when you scroll down by adding this property background attachment to be fixed this property isn't going to be apparent because we don't have a scroll bar but if you did have a scroll bar the background will stay in place at least let's head back to our clock element I will change the color the font color to be white if you would like a background blur effect you'll add this property we'll set the backdrop filter property to be a blur function the greater the number the more blur effect you're going to have so this is 5 pixels if I were to increase this to 50 well well there's a lot of blur then I'll set my blur to be five I would just like a little bit as if we're looking through glass I'll increase the width to be 100% to take up 100% of the width of the web browser width 100% to give this glass look a foggy appearance we can add a background color that's slightly gray background color let's select gray but I like using us hsl values so for the lightness I'll set it to be 100% but I'm going to lower the alpha down to like 10% now the background has a foggy glass appearance if you were to increase the amount of alpha that'll increase the lightness I'll keep mine as 10% 0.1 for the alpha all right now we just need to get this clock to run so let's save everything go to our Javascript file we will create a function to update our clock immediately when we begin this program we will update our clock once immediately now we need to get the current time let's declare a constant of now what is the time right now this will be a new date object to get the hour we will say const hours equals use the builtin get hours method then let's do this with minutes const minutes equals now. getet minutes method and seconds const seconds equals now. get seconds I'm going to change the text content of the clock to be a time string it will be a template string how do we want to arrange our numbers const time string equals a template string first we'll add a placeholder for our hours colon minutes colon seconds then we will select the ID of clock document. getet element by ID the ID that we're getting is our clock change the text content to equal our time string when we save the time on the clock should update currently for me it's 800 for each of these placeholders for hours minutes and seconds I would like each to take up two digits We'll add some zeros for padding for example this time will be 08 006 there's a builtin string method for that so with hours minutes and seconds we will convert these to Strings we'll use method chaining then add to string do this for hours minutes and seconds with strings there's a pad start method for the first two characters pad them with a zero let's copy this method and paste it for minutes and seconds now when I save and update the time we have zero padding 08 01 54 in this case to get this clock to update every second we'll follow update clock with the set interval function set interval works like set timeout except it will call a function repeatedly not just once but we need a call back the Callback will be update clock call this function after every 1,000 milliseconds and now our clock should run currently this clock is in military time although I'm recording this at 800 in the morning if you would like this clock to be a 12hour clock then at a.m or p.m. here's the following changes we're going to make we'll declare ours with let instead of const so we can change it and reassign it we'll create a new constant of meridium 4 a.m. or p.m. this will equal hours is hours greater than or equal to 12 we'll use the erary operator to check this if ours is greater than or equal to 12 meridium will be PM otherwise it will be am then after our meridium we'll reassign hours hours equals hours modulus modulus gives you the remainder of any division ours modul 12 if this is zero we'll use the or logical operator or 12 after seconds we'll add a placeholder for our meridium currently we lost our padding for the hours so we're going to cut this part of our code to convert ours to a string and Pad it we'll take hours equals hours to reassign it follow hours with converting it to a string using the two string method and Pad it before displaying it all right and that has appeared to work all right everybody so that is a digital clock program you can make using HTML CSS and JavaScript