all right everybody so in this video i'm going to show you how we can pass an array to a function suppose we have an array of prices these will be of the double data type double prices straight brackets equals just make up some prices 49.99 fifteen dollars and five cents seventy five dollars nine dollars ninety nine cents good enough we'll create a function to find the sum of these prices and print a total let's say double total equals then i'll invoke a get total function which we still need to declare and define so let's do that now we'll return a double double get total let's list the parameters we need to accept an array of doubles double prices then add a set of square brackets for the parameter now when we pass an array to a function you only need to pass the array name you don't need a set of square brackets then we'll need a function declaration let's do that before the main function then at the end of my program i will display the total standard output pick a currency uh let's pick a dollar sign then i will display the total within the get total function i'm going to declare a separate local instance of a total variable remember that variables can have the same name as long as they're within a different function so we have double total i'm going to iterate over my array using a for loop normally what we would do is say int i equals 0 i would continue this as long as i is less than then at this point we would calculate the size of the array but technically this isn't going to work and i'll demonstrate why we have the size of our array prices divided by the size of either the data type or one of the elements typically i like to use one of the elements prices at index 0 then i will increment our counter by 1 during each iteration within our for loop let's assign total equal to total plus prices at index of i or we could shorten this to total plus equals prices at index of i at the end of our program we will return whatever the total is now this isn't going to work the way it's written now here's why when we pass an array to a function it decays into what's known as a pointer which we haven't discussed yet but we will in future topics within this function we're not working with an array anymore we're working with a pointer that points to the address of where the array begins this function has no idea how big this array is anymore we can't calculate how many elements are within this array what we could do is that when we invoke this function we can pass in the array as well as the size of the array since this function no longer knows how big the array is we can explicitly let the function know what the size is so let's calculate what the size is into size equals we can just copy all this code paste it now when we invoke this function i'm going to pass the size as a second argument then we'll need a matching set of parameters and size be sure to add that with your function declaration 2 if you have one i would like to continue this for loop as long as i is less than size now this should work let's verify that yep and our total is one hundred fifty dollars and three cents in conclusion when you pass an array to a function you only have to pass the array name you don't need a set of square brackets when you do so however when a function receives an array it decays into a pointer and the function no longer knows what the size of the array is so we could pass that as an additional argument to let the function know what the size is which we could then use to you know iterate over the array so that's how to pass an array to a function your assignment is to post a function that accepts an array as an argument in the comments section down below and well yeah that's how to pass an array to a function in c plus plus