hey so we got to talk about this this is a keyword it's a reference to the object where this is used the object depends on the immediate context if we had a person object and we're accessing their name property we could replace person with this as long as we're within the context of that person object we'll create an object const person one let's add a property for name the name will be SpongeBob and a favorite food property fave food SpongeBob likes hamburgers more specifically crabby patties I will give SpongeBob a say hello method this will be a function all we're going to do is console.log I'll use a template string hi I am I'll use a placeholder let's attempt to use person one's name let's see what happens let's take our object of person one I will invoke their say hello method let's see what happens hello I am and there's nothing here for the name inside of this object of person one if I would like to access one of these properties I'm going to precede the property with this this dot the name of the property and that should work hi I'm SpongeBob we're using this within the context of person one it would be like us saying person one. name there would be no difference this is a reference to the object we within if I said this do favorite food well fave food for short hi I am hamburgers it would be like us saying person onef food let's add another method I will add an eat method let's console.log I'll use another template string add a placeholder this.name is eating add another placeholder this. fave food let's have person one use their eat method SpongeBob is eating hamburgers the cool thing about the this keyword is that if we create a new object with these same methods we'll use the second object's properties let's copy person one paste change person one to person two the name for person two will be Patrick favorite food will be Pizza let's have person two use their eat method SpongeBob is eating hamburgers Patrick is eating pizza since we're in the context of person 2 now imagine we're replacing this with person two person 2.n name Person 2. fave food if you were to use this outside of any objects I'm going to console.log this what we're returned with is a window object basically we're returning the window to see our website technically we're inside of an object already our window object and we have all of these properties but since we're using the this keyword inside the context of person one and person two we'll instead make a reference to those objects hey one thing I forgot to mention the this keyword doesn't work with arrow functions for example with person two let's convert this to an arrow function blank is eating undefined when you use this within an arrow function it's making a reference to that window object still our window object does have a name that's why it's appearing empty but fave food is undefined because our window object doesn't have a favorite food property all right everybody so that is the this keyword we will be using this keyword a lot all it is is a reference a reference to the object where this is used and that is the this keyword in JavaScript