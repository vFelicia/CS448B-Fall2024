today I'm going to show you how we can create push button widgets in pi qt5 to begin we will need the following Imports Q push button as well as Q label for this demonstration during the previous topic on layout managers within our Constructor for our main window we defined a method of initialize UI for user interface let's be sure that we're calling that method within our Constructor within this method is where we'll be handling managing the user interface to create a button we will call the push button Constructor normally when creating widgets we would want to prefix that widget with self then follow the name of the widget for example button however I'm going to demonstrate what happens when we don't do that because without self we're declaring a local variable we'll get back to that in just a moment let's create a local button object by calling the Q push button Constructor we can pass in some text such as as click me we will add this to our window self self refers to our window object let's set the geometry of the button button. set geometry we could use a layout manager but I do want to keep this lesson as simple as possible so let's pick some coordinates I've picked the following for the X and Y coordinates 150 and 200 for the width 200 and the height 100 here's is our button currently the font is a little small so I'm going to set the style sheet set style sheet I'll just increase the font size we could use Q font but that might be overkill for this demonstration let's just say the font size will be 30 pixels now we can read it so we have our button we're going to be connecting our button to a function but we need to Define that function we'll do so within our main window class so we will Define a function of onclick there are no parameters besides self when we click on the button what would we like to do let's print a test message let's say button clicked and that's it when we click this button nothing happens we have to set up a signal and slot for the button here's how we will take our button do list of signal a signal is emitted when a widget is interacted with we have to list the type of signal so the signal we're looking for is clicked when we click this button we will perform a slot an action we will take the signal of clicked connect it to a slot connect is a method the slot will be self do the name of the method on click when we press this button we perform this slot this method of onclick each time I press the button we perform that action not only should we print a message for this demonstration let's set the text to the button so we have button. set text let's change the text to clicked so this actually isn't going to work because we're not prefixing self let me demonstrate what happens we print button clicked but then we have a problem we have an exit code our program was interrupted button is considered local to our initializer method our onclick function doesn't recognize what our button is that's why we're going to prefix our button with self so it belongs to the class of main window and not this method any instance of button we're going to prefix with self and now this should work the text on my button is going to change when I click it clicked you don't have to do this but with my personal coding style whenever I create a variable or an object within a class I like to do so within the Constructor even py charm is giving me a warning when we declare this button I'm going to move it to the Constructor and let me just rearrange everything self. button equals a q push button widget within my initializer method that's when I like to rearrange everything and style it we can also disable buttons when we click on them to do that we will take self. button call the set disabled method then pass in true when I click the button it will be disabled I can no longer click on it for the last part of this demonstration when we click on our button let's change the text of a label let's declare self. label within our Constructor equals a q label the text of the label will be hello we will add this label to self the window when we set up the user interface let's set the geometry of the label self. Lael do set geometry we could use a layout manager but just to keep things simple I'm going to set some coordinates 150 for X 300 for y the width will be 200 and the height 100 let's change the font size self. label. set style sheet I will set the font size to be 30 maybe 50 better all right within our onclick function let's instead take self. label. set text method then pass s some new text to display we're saying hello but when we click the button let's say goodbye so now when I click the button we will change the text on a separate widget my label which now says goodbye so with buttons you need a signal that's connected to a slot the signal is an event the slot is an action that this widget is going to take when this signal occurs and well everybody that is an introduction to push buttons in pi qt5