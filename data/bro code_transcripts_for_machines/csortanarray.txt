hey uh what's going on people so in this video we're going to write a small program to sort the elements of an array let's begin with an array of integers and then later we'll create an array of characters the data type will be int and let's name this array and assign some values make sure that they're not in order just make up some numbers that's fine looks good to me now let's calculate the size of our array because we'll need to know how many times we're going to iterate through our array so int size i will set this equal to the size of operator pass in our array this will calculate the size of our array in bytes and to find the number of elements we can divide this by the size of just one element so size of array divided by the size of array at index of zero size will equal the amount of elements within our array and just to keep this code more organized let's declare a function to actually sort all of this for us so we don't have to do that within the main function so let's declare a sort function the return type is void we're not returning anything and let's name this sort and there will be two parameters an array of integers and integer size and let's invoke this function we're invoking sort and then we need to pass in two arguments are array and a size within the sort function we'll need nested loops we can use four loops so the outer for loop will be int i set this equal to zero and we will continue this for loop as long as i is less than the size of our array minus one and then increment i by one and then we need an inner for loop so let's copy our outer for loop paste it and make a few changes so the index for the inner loop will be j and we'll continue this as long as j is less than the size of our array minus one then j plus plus here's what we're doing within our array so we will begin at our first index we're checking to see if the element on the left is greater than the element on the right if so we're going to swap these two values and we'll need the help of a temporary variable much like what we learned in the last topic so let's check to see if the element on the left is greater than the element on the right if it isn't we do nothing so we need an if statement if array at index of j is greater than at index of j plus one we're adding plus one because we're checking the element directly next to the one that we're currently examining so if the number on the left is greater than the number on the right we will perform a basic variable swap so let's declare a variable in temp to temporarily store some value and i will set the sql to array at index of j now i need to move the element on the right over to the element on the left array at index of j equals array at index of j plus one and then lastly whatever's within temp i'm moving that to the element on the right so array at index of j plus one equals temp and that's it so if you would like to optimize this you can set size minus i minus one basically this is a bubble sort so depending on the size of this number it's going to find a final resting place since 9 is going to be the largest it's going to be pushed all the way to the right because we will examine 9 against each of these numbers so once 9 is pushed all the way to the right all these other numbers that are less than 9 will be on the left so it's already partially organized and now we just need some way to display the elements of our array so let's declare a print function void and let's name this print array and these will have the same parameters an array of integers and into size and this is a basic for loop so for and i set this equal to zero we will continue this loop as long as i is less than the size of our array and increment i by one and i would like to display each integer and maybe i'll separate these with a space and we are displaying our array at index of i and all we have to do is invoke the print array function and then pass in our array and our size and let's take a look fingers are crossed oh yeah there we go our array is now sorted now if you would like this in descending order all we have to do is switch this if statement around from greater than to less than and our array is sorted in reverse order and we could sort an array of other data types too this time let's sort an array of characters so let's declare an array of characters this time and make up some characters so then to sort an array of characters let's change the data type of our array to characters and then when we display each character make sure that we're using the c format specifier because we were using d before and this should now be sorted yep so that's currently in reverse order so then to switch that around just change the sign all right there you go so yeah everybody that is a simple program to sort the elements of an array this is a basic bubble sort and if you're interested in learning more about sorting algorithms i do have a playlist on data structures and algorithms if you would like a copy of this code i'll post this in the comment section down below and well yeah that's how to sort a simple array in c