yo what's going on everybody so in today's video I'm going to show you a few ways in which we can style react components with CSS this topic doesn't include external Frameworks such as Tailwind or preprocessors such as SAS I'm going to cover a few of the more basic techniques including external modules and inline CSS styling we will need a component to work with let's begin with a button component let's go to our source folder new file button. jsx we'll create a function based component because we like function based components be sure to export it because I sometimes forget to do that so let's do it now export default the name of the component then we will return a single button element with text that says click me normally when setting a CSS class you use the keyword class however in jsx that's a reserved keyword we'll instead use class name with a capital N I'll set my class name to be button all right then we just need to import this button component going back to our app component that's the parent we will import button from its location do SL button. jsx and now we have a button component to work with with there's my button let's begin with external CSS styling we should already be a little familiar with it already heading to our index CSS stylesheet we can apply some Global Styles we will select the class name of button dot to select a class button let's apply the following CSS properties but feel free to make any changes or alterations I will begin with a background color I've already prepicked a color personally I like using hsl cell values 200 for the Hue 100% for the saturation 50% for the lightness that will give you a light blue color for the font color that would be the color property I will set that to be white for padding let's say 10 pixels by 20 pixels border radius to round the corners I will set that to be five pixels border none to remove the Border then let's change our cursor to be a pointer when we hover over the button that's not a bad looking button I am zoomed in to like 300% just for this demonstration all right we have utilized an external CSS stylesheet they're easy to use for simple projects such as making a YouTube video tutorial it gives you flexibility with media queries and pseudo selectors you can use external Style sheets to apply Global Styles throughout your web application however using external stylesheets can lead to naming conflicts especially when you have more components and classes to work with if you have a large web application you'll likely have all sorts of different buttons you would need a strong naming convention and good organization two buttons you may create might have the same class Name by mistake and with large applications it might be difficult to keep track of all the different class names moving on to Method two let's cut all of these properties save we're going to create a module now that's the second method we'll create a dedicated CSS stylesheet specifically for each component what you may see some developers do is they'll create a new folder specifically for their component let's create a new folder which we will name button the name of our component let's move our button component to the button folder let's move it be sure to update any Imports as well my app component is now importing the button component from the button directory within our button folder we'll create a new file this will be a CSS stylesheet which we will name the name of the component in this case button dot module. CSS let's paste all of those properties that we cut before now from our button component we will need to import this module at the top we will import styles from the location of that module slash button. module. CSS for our class name we will use a set of cly braces to use a dynamic value our class name will equal our import of styles dot the name of the class button and there's our button again the nice thing about modules is that it avoids naming conflicts because a unique class is going to be generated for you via a hashing algorithm if I were to right click on this button and go to inspect this class name is unique it's generated via a hash so with modules we don't have to worry about naming conflicts modules are also convenient if each component has its own unique style however a few of the downsides though with using modules is that it does require additional setup and Global Styles aren't applied easily you would have to import them from elsewhere and that's a whole thing let's remove our button component from the button directory let's put it back in source and delete our button directory going to our button component then remove the import as well we don't need that anymore now we're going to use inline Styles what you see some people do is they'll create a JavaScript object named styles styles equals a set of curly braces for an object let's paste all of those CSS properties we're within jsx code right now we can't use any dashes we'll switch to a camel case naming convention all values Should Be Strings each property should be comma separated let's remove our class name we will set the style attribute to equal use a set of curly braces to insert a dynamic value we will insert our Styles object that contains all of these CSS properties and now we have done inline CSS styling inline CSS styling is convenient and easy to understand it prevents Global style conflicts because we're not working with class names it's great for isolated components with minimal styling such as a like button or a subscribe button however inline styling can be increasingly Less maintainable in large applications it reduces the readability of your components especially if you have a lot of CSS properties it's not great for any complex styling such as responsive CSS it tends to be better for components with minimal Style all right everybody so those are three different ways in which we can style react components with CSS external which is great for Global Styles or small projects modules which is preferred for individual components that have their own unique Styles and inline which tends to be good for any small components with minimal styling use what's best for your project or your own personal preference or whatever your team prefers if you're working on a project together there's no one siiz fitsall approach unfortunately myself I prefer to use modules but throughout the series I'm going to be using a lot of external CSS just because our projects are really small and well everybody those are a few ways in which you can style react components with CSS