all right people so today I got to explain sorting in Python there's two ways to accomplish sorting in Python the sort method or the sorted function it depends on what type of data structure we're trying to sort today we'll cover lists tles dictionaries and objects this is just my opinion but dictionaries are probably the most complicated to sort even more so than objects let's begin with lists let's create a list of fruits think of some fruit I will add a banana an orange Apple then coconut I will print my list of fruits which gives me banana orange Apple coconut sorting a list is really easy all we got to do is take our list use the builtin sort method and call it that will arrange the elements in Al etical order starting with a for apple followed by banana coconut then orange if the elements of a list were numbers for example 3 1 5 2 4 the numbers will be in ascending order for reverse order within the sort method we will pass in a keyword argument of reverse and set that to be true the elements of my list are now in Reverse alphabetical order beginning with orange coconut banana then Apple that's how to sort a list I would say it's the easiest now we'll move on to tles the elements of a tupple are surrounded with a set of parentheses so let's convert our list into a tupple then I will print our tupple of fruits to sort a tupple we'll use the sorted function rather than the sort method you know what let's attempt to use the sort method and see what happens I will take my tupple of fruits use the sort method that's going to give us an attribute error tupple object has no attribute sort that's why we need to use the sorted function rather than the sort method because tles don't have a sort method I'm going to take fruits equals use the sorted function then pass in my tupple of fruits let's output the result apple banana coconut orange they're all in alphabetical order the sorted function will convert our tupple into a list the elements are surrounded with a set of straight brackets if you would like to keep your tupple as a tupple after sorting it we're going to enclose the sorted function within a tupple function to typ cast it into a tupple we have taken our tupple sorted it all the elements are in alphabetical order then we have converted it into a tupple now for reverse order within the sorted function after passing in our Tuple of fruits we will pass in a keyword argument of reverse and set that to be true the elements are now in Reverse alphabetical order orange coconut banana apple so that's how to sort a tuple we use the sorted function now we're going to cover dictionaries which are probably the most complicated let's change this tupple of fruits into a dictionary we enclose the key value pairs with a set of curly braces we have a key and a value the name of each fruit will be the key the value let's say is the calories per serving bananas they'll have 105 calories per serving oranges will be 73 apples will be 72 coconuts are very calorie dense they have 354 calories per serving here's my dictionary a dictionary consists of key value pairs the name of each fruit is the key the calories per serving is the value to sort this dictionary we'll use the sorted function we're going to reassign our dictionary equals call the sorted function then pass in our dictionary of fruits however there's one more step the keys are sorted in alphabetical order but we lose the values they're truncated we have converted our dictionary into a list the elements are surrounded with a set of straight brackets we're going to take our fruits call the items method the items method will return a tupple for each key value pair in my dictionary the items method returns each pair as a tupple then we are going to typ cast it into a dictionary by surrounding the sorted function with the AR function and now all the keys are sorted alphabetically apple banana coconut orange each key has its value of calories per serving for reverse alphabetical order let's copy what we have this is where it gets complex within the sorted function after we call the items method of fruits we're going to pass in another argument a keyword argument we will set the key equal to a Lambda function the items method is going to return a tupple during each iteration so for the Lambda function we're going to take each tupple which will be named item that's the parameter colon what would we like to return we're going to return our tupple of item at index of zero for the first pair in our dictionary we're returning the value at index zero that would be the key index one would be the value for every pair of items in our dictionary take each pair return the first element return the element at index zero which means the key then we have one more argument so after the key for reverse alphabetical order we will pass in a keyword argument we will pass in a keyword argument of reverse and set that to be true yes it's very complicated so now our dictionary is sorted in Reverse alphabetical order by key we have orange coconut banana apple to sort the dictionary by value here's what we'll do again we'll take our fruits equals call the sorted function take our dictionary of fruits call the items method to return each keyvalue pair as a tupple then typ cast it back into a dictionary after we call the items method we will pass in a keyword argument where the key equals a Lambda function for every tupple of our dictionary take that tupple of item colon return the value at item index of one zero refers to the key and index of one applies to the value so now our dictionary is sorted by the values in ascending order apples have the least amount of calories per serving then oranges bananas then coconuts that's how to sort a dictionary by value to sort the values in reverse order let's copy what we have after our keyword argument of key we will pass in a keyword argument of reverse then set that to be true the values in my dictionary are sorted in reverse the first key value pair has the most amount of calories which would be coconuts then banana orange Apple those are a few different techniques to sorting dictionaries we can sort by key or by value all right now we're going to move on to objects in this example we will create a class of fruit within this class we will need a Constructor when we create a fruit object we will need a name and calories for calories per serving self. name equals name self. calories equals calories I'm also going to use a magic method it's R meaning represent when we attempt to print one of these objects we can create a string representation of that object so if I was to print a fruit that we create we will call Dunder represent to represent that object so we will return an F string I'll add two placeholders we will display self. name what's the name of this fruit and self. calories what are the calories per serving we will create a list of fruit objects fruits equals a list I will call the fruit Constructor for the first fruit the name will be banana calories will be 105 for the second fruit we'll call the fruit Constructor pass in apple calories 72 for the third fruit called the fruit Constructor the name will be orange calories 73 I'm going to put each of these on a new line for readability then for our last fruit we have coconut calories 35 for just to test everything I'm going to print my list of objects behind the scenes when we print each of these objects we're calling the method of dund to represent we're displaying the fruit's name colon then the calories per serving I'm going to collapse this class just so it's easier to see everything to sort this list of objects I will reassign it to fruits fruits equals we will use the sorted function we'll pass in our list of objects pass in a keyword argument of key key equals a Lambda function during each iteration the Lambda function is going to be provided with one of these objects beginning with the first that's going to be the parameter each fruit for every fruit that we iterate over we will return the fruit's name attribute and and sort by that using the keyword argument of key these objects should be sorted by their name we have apple banana coconut orange for reverse alphabetical order all we got to do is pass in that keyword argument of reverse set that to be true these objects are now in Reverse alphabetical order by their name orange coconut banana apple then let's do calories within our Lambda function sort by the fruits calories we have apples with the least amount of calories 72 then oranges banana coconut then to sort by calories in reverse order we will add one additional keyword argument of reverse set that to be true all right so now we are sorting these objects by what has the most amount of calories which would be coconuts bananas oranges then apples all right everybody so those are a few different sorting techniques we've discussed lists topples and dictionaries which are in my opinion the most complicated than objects with dictionaries and objects we set the key as a Lambda function and well everybody those are a few different sorting techniques in Python