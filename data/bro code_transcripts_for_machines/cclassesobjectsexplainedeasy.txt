hey everybody so we have finally made it to objectoriented programming an object think of it as a collection of attributes and methods attributes are characteristics of an object methods are functions that an object can perform objects can be used to mimic real world items so look around you right now next to me i have a phone a book and a dog think of attributes as characteristics what kinds of characteristics would a phone have maybe a version number a charge a service provider objects can also contain methods what kinds of actions can a phone perform they can make calls receive calls play games now with a book some of the attributes of a book could be maybe an author number of pages let's see what kinds of methods can a book perform really not much you can open a book and you can close it so those are just a few okay lastly how about a dog object some of the attributes of a dog could be a name an age maybe a breed of dog then what kinds of actions can dogs perform they can eat they can bark they can sleep maybe play fetch so i think you get the idea an object is a collection of attributes and methods now to create an object we can use a class a class acts as a blueprint to create objects let's create a class to create human objects i will type class human curly braces i'm going to add a public access modifier we'll learn about axis modifiers pretty soon i would like these attributes and methods to be publicly accessible let's start with the attributes of humans what kinds of characteristics can humans have how about a name this will be of the string data type i'll declare this attribute but not yet assign it maybe an occupation like a job standard string occupation then maybe an age int age our class human has these attributes humans have a name an occupation and an age that's good enough for this example now let's cover methods a method is a function that belongs to a class it's something that an object can do an action it can perform what sorts of actions should our humans be able to perform how about an eat method void eat i'll just display a message standard output uh let's say this person is eating humans can drink void drink standard output this person is drinking okay one last example how about sleep human sleep right void sleep standard output this person is sleeping good enough oh then make sure we add a semicolon to the end of the class perfect okay so we now have a human class we can use this class as a blueprint to create human objects each human object will have a name an occupation and an age they can also eat drink or sleep they have their own functions which we call methods so to create a human object we will type the name of the class human then a unique identifier how about human one that's creative so human one is an object human one has a name an occupation and an age but we have not assigned these attributes let's say humanone's name human one member axis modifier which is a dot name equals rick then human one's occupation equals scientist human one's age equals 70. let's verify that this worked by printing out these attributes standard output human1 dot name i'll add a new line then let's repeat this for occupation and age human1 dot occupation humanone dot age human one's name is rick his occupation is a scientist his age is 70 years old so this part is kind of similar to structs however objects can also perform actions they have methods rick can eat drink and sleep so to invoke those methods i would type the name of my object human1 and let's have human one eat so human1 dot eat add a set of parentheses to invoke this method okay this person is eating let's also test drink and sleep human one dot drink human one dot sleep okay this person is eating this person is drinking this person is sleeping and that is our human human one for more practice let's create a second human human human two i'm going to copy these lines let's change human one to human two human two's name will be morty occupation will be student age what about 15 i'm going to display the attributes of human 2 this time then i'll have human 2 invoke its methods eat drink then sleep okay human two's name is morty their occupation is a student morty is 15 years old then morty can perform these actions eat drink and sleep now you can assign some default attributes so let's say that all humans we create will be named rick it's kind of like we're cloning him his occupation will be scientist age will be 70. i'm not going to assign these attributes what i did is that i added some default attributes so we have human one and human two i'll display the attributes of human one first then human two human one dot name occupation age then we have human two's attributes as well so remember i am not assigning these attributes within the main function we have two humans they're both named rick they're both scientists and they're both age 70. okay now here's one last example to really get the hang of objects let's create a different class this time how about cars class car let's add a public axis modifier then what kinds of attributes would cars have perhaps a make standard string make a model standard string model a year that would be an int then maybe a color standard string color you can add some default attributes but i'll just leave those empty for now you can add some methods what kinds of actions can cars take i guess you can accelerate void accelerate standard output uh what can we print you step on the gas then maybe break void break standard output you step on the breaks then be sure to add a semicolon to the end of your class because i always forget to do that okay we now have a car class it acts as a blueprint to create car objects to create an object we would type the name of the class car in this example then a unique identifier for the object let's say then we can assign some of the attributes of this car object car one dot make maybe ford car one dot model equals mustang i like mustangs car one dot year equals 20 23 then a color car one dot color maybe silver okay then just to test these let's print these attributes standard output car one dot make i'll add a new line let's copy this line paste it three times then we'll display the model year then color okay our car object is a ford mustang the year is 2023 the color is silver not only does our car have attributes but it has methods actions it can perform as well our car can accelerate and it can break let's test that car one dot accelerate car one dot break okay you step on the gas you step on the brakes then if i need a second car object i can type car car 2 then i can assign the attributes and i have access to its methods so yeah that's an object everybody it's a collection of attributes and methods attributes are characteristics of an object methods are functions that an object can perform so yeah those are objects everybody in the next video we're going to cover constructors your assignment is to post a class in the comments section down below so yeah that's an introduction to objectoriented programming in c plus