hey what's going on everybody it's you bro here hope you're doing well and in this video i'm going to teach you guys how we can create a simple button in java so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running all right my fellow human beings let's discuss j buttons a j button is a java gui button that performs an action when you click on it we're going to be creating a frame and then adding a button to that frame however with this frame it's going to implement something called the action listener interface so i think it would be best to demonstrate this with a different class instead of using our main class with the main method so let's create a different class so file new class i will call this my frame and we'll have my frame extends jframe so my frame extends jframe my frame will be the subclass of jframe so it will inherit everything from the jframe class and behave exactly like a j frame so let's create an instance of my frame so my frame let's call this frame equals new my frame and actually we don't really need to give this a name because i don't think we're going to be doing anything else within this class you can even just shorten that line to just new my frame and that'll work just fine we're going to spend a majority of the time within this my frame class so to begin we'll need a constructor for this class so my frame and create a frame we say this well to set up the frame i should say uh we'll need these few lines of code instead of saying like frame dot set default close operation it's just this so this dot set default close operation jframe exit on close we're going to be using no layout manager so this dot set layout to no this dot set size 500 by 500 is decent and this dot set visible to true so this should display a jframe now all right so let's create a button at this point so it's very similar to creating any other component so that's j button let's call this button equals new j button and then we will need an import too and then let's set the bounds for this button so button dot set bounds so we have x y width and height i will place this maybe where x is 200 where y is 100 for the width let's make this 100 and the height maybe 50. so then to actually display the button we need to add this to our frame so this dot add what are we adding we're adding our button and let's run this so here's our button it currently doesn't do anything so we need our class to implement the action listener interface so implements action listener so we're going to need to implement a method the action performed method so this frame will now listen for events so one thing we can do we can check to see if the event that occurs is our button so we do that with if e dot get source is equal to our button then what are we going to do all right you can see one problem here though this button is not global it's only local within the constructor of my frame so we can actually turn this into a global component so what we need to do is actually declare this outside of the constructor because right now since we declared this within the constructor only anything within the constructor has access to this so we'll say j button button and we'll finish instantiating this button within the constructor and you can see that this error went away so now what do we want to do when we click on this button let's just do a system.out.printline and i will print out the word poo all right so then when we click on this button it performs an action so if the action performed is equal to the button it's going to do this the button is going to poo however this button doesn't seem to be doing anything that's because we need to add an action listener directly to the button so button dot add action listener and we can pass in this since this class is implementing the action listener interface so now this should do something and now when we click on the button the button starts printing the word poo now is the perfect opportunity for me to introduce something called a lambda expression it's actually a shortcut that you can use in place of action listeners so this is an advanced shortcut i do have an entire video dedicated to this that you might want to watch at some point so what we can do instead of implementing the action listener interface and instead of using the action performed method when we add an action listener to this button we can place a lambda expression here and this is how to write one we write e within the parentheses followed by an arrow and then what we want this button or other component to do so let's just system that out dot print line uh the word poo again because we can so poo and when we run this it does the exact same thing just with less syntax however this is a more advanced concept i do have an entire video dedicated to lambda expressions if you're interested let's customize this button well because we can because we can is actually a great reason for many things so let's set the text for this button so button dot set text and then i will write i'm a button there's our text so if you look at the text for the button there's this annoying border around the text we can actually get rid of that we need to set focusable false because the button is focusable so button dot set focusable and we're going to set this to false so that should get rid of that box that's around the text of the button let's also increase the size of this button too so i think i will make this 250 by 100 that should be decent and let's move this over a little bit i'll try and at least get this close to centering this all right let's add an icon too so we'll need to create an icon so this is an image icon i'll call this icon equals new image icon we're going to list the source for this so i have a picture on my desktop i want to use it's just a pointer finger basically so this is point dot png and then we'll need to import as well all right so button dot set icon and we're setting this to the name of our icon which is coincidentally icon now i want the icon on the right hand side of the text so there's a method for that so what we're going to do is button dot set horizontal text position so j button dot let's say center i'm also going to change the vertical text position so button dot set vertical text position and this will be j button dot let's say bottom so the pointer finger should be in the center and above our text let's also change the font too so button dot set font and we can pass in a new font new font i will pick maybe comic sans then you can style this you can make this bold plain italic whatever i'll make this bold and then a size all right let's take a look all right not too bad i'm going to pull the text in a little bit closer and there's a method to do that so button dot set icon text gap and i'm going to set this to a negative number to pull the text in closer negative 15 should do it not too bad not too bad let's also change the font color so button dot set foreground and i will pick maybe cyan all right all right let's change the background color now of the button so button dot set background and i will just pick maybe like light gray or something light gray okay let's add a border so button dot set border and we can actually pass in a new board or two so border factory dot create and then pick a border that you want i will pick etched border and let's take a look so there we go it kind of has like a 3d effect oh you can also disable a button too there's a method for that so button dot set enabled and set this to false this will disable a button and actually if you want a button to be only clickable once and then it's disabled you can put this within the action performed method so if we were to do this we could only click this button once and then it's disabled so that's something that's an option to you a feature that's available to you with buttons is that you can change components within a frame on a button click let's say that we want to display a label on our frame after we click a button so let's create a label and we'll add this label to our frame so we should declare this label outside of the constructor so that the action performance method has access to it so j label we'll call this label and we'll finish instantiating this within the constructor so now label equals new j label and i'll create an image icon so i plan on using this image and i'm just going to add this to our label to demonstrate this so let's create a new image icon image icon i'll call this icon too because just the word icon is already taken equals new image icon and this file name is face dot png now we can set the icon for this label so label.set icon and the icon that i want to use is icon2 let's also set the bounds for this label so label.setbounds so i will place this where x is 150 where y is 250 the width will be 150 and the same thing with the height so we can also set the visibility for this label so label dot set visible and i'm going to set this to false because i do not want this to appear at least right away and then lastly we need to add this label to the frame so don't forget about doing that so this dot add label and then with the action performed method after we click this button let's set the visibility of the label to true so label dot set visible true so then when we run this and we click the button our label is now visible well that's how to create a simple button in java if you want a copy of all this code i'll post all of this in the comments down below but yeah that's the basics of buttons in java hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you