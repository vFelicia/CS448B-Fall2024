hey what's going on people so in today's video I'm going to explain the set timeout function in JavaScript the set timeout function allows you to schedule the execution of a function after an amount of time in milliseconds the times are approximate they vary based on the workload of your JavaScript runtime environment I wouldn't recommend using set timeout for anything precise like a stopwatch it's an approximation to use the set timeout function you pass in a call back to a function and a delay in milliseconds here's an example Le I will create a function to say hello all we're going to do is window. alert the word hello I will use the set timeout function pass in a call back we'll pass in a call back to say hello then execute it after 3,000 milliseconds so 3 seconds let's see if this works 1 2 3 hello an anonymous function works too so instead of a callback we'll use an anonymous function function parenthesis curly braces window. alert the word hello 1 1000 2 1000 3 1000 hello or even an arrow function we have parameters Arrow what are we going to do window. alert the word hello 1 1000 2 1000 3 1,000 hello you can use the clear timeout function to cancel a timeout before it triggers but we have to pass in a Timeout ID so what we'll do with this set timeout function is assign it to an ID stored within a variable or constant const time out ID equals our set timeout function that'll display the word hello I can clear this timeout with the clear timeout function but I have to pass in that ID as an argument immediately after calling the set timeout function we will cancel it let's try it 1 1000 2 1000 3 1000 yeah nothing's happening we canceled it all right what we'll do this time is create a button using HTML when we click on the button we'll set a timeout to display the word hello so let's clear all of this go to our HTML file we'll create a button the button will have text of start and I'm going to zoom in I will set the onclick attribute to equal a function we will start a timer then add a set of parentheses when we click on the button do this function So within our Javascript file we will create a start timer function function start timer we will set time out I'll use an arrow function let's window. alert the word we will display the word hello after 3,000 milliseconds all right so nothing's going to happen until I click the button I'm going to click it now 1 1,000 2 1,000 3 1,000 hello let's create a second button to clear the timeout if we need to stop it let's copy our first button paste it change the text of the button to be clear we will clear the timeout but we'll need another function clear timer so there's our second button we'll need a timeout ID so outside of this function I will declare a variable of let time out ID when we start our timer we will assign the set time out function an ID of timeout ID then we can stop it using this ID we will create a function to clear the timer we're going to use the clear timeout function clear time out we need to pass out a timeout ID as an argument which we will do and then just to be sure that everything works within both these functions let's console.log something let's say the word started within our start timer and within our clear timer let's display the word cleared just so we know that these functions were called so I'm going to save everything I'm going to start the timer but not clear it let's start now 1 1000 2 1000 3 1000 hello let's go to our console and it says that we started well starter I clearly can't spell today started we're going to start then cancel start 1 1000 2 1000 clear and nothing happened let's go to our console inspect console we started set timeout and then we cleared it all right everybody that is the set timeout function it's a function in JavaScript that allows you to schedule the execution of a function after an amount of time in milliseconds execution time may vary based on the workload of the JavaScript runtime environment and well everybody that is the set timeout function in JavaScript