hey it's your bro hope you're doing well and in this video we're going to be discussing nested loops in c plus plus let's get into it all that nested loops are is this concept of having one loop that's inside of another loop and these come in handy when we get to this topic on 2d arrays they're going to be heavily used these nested loops so the generic syntax of a nested loop you can either have a for loop or a while loop there's other types of loops out there i'm not going to bother with filling this in so it's basically you have one loop that's inside of another loop so it's as if we're stuck within two loops now instead of just one there's an outer loop and there's an inner loop and it's still possible to have more levels to this than just two but let's keep it simple for now so when we enter this inner for loop we're going to be stuck cycling through this inner for loop a certain amount of times and once we're able to exit we can finish an iteration of the outer loop but we may have to continue cycling through this outer for loop depending on what kind of condition we have and once we begin a new iteration we get stuck back within this inner for loop again and have to keep on cycling through this so i think it would be best if i give you a demonstration of this so we're going to create a program where we can print out a rectangle of a certain symbol that the user chooses and we're going to give a symbol a width and a height to this rectangle and this is a good demonstration of how a nested loop works so let's begin then step one is that we're going to accept a character from the user and then we're going to print a single line depending on what the user types in for a width and then after we complete that program we'll upgrade it to printing out a rectangle like it has two different dimensions so let's create a char variable and we'll call this perhaps symbol and we will want a integer variable named perhaps with and then later on when we upgrade this program to a 2d rectangle will include length all right so we'll create a display and we will have a prompt that says enter the oops enter the symbol to use and then we will see in whatever the symbol the user types in okay and we are going to see out enter the width and then we will see in whatever the width the user types in all right so we'll create a for loop and then later on we'll turn this into a nested loop so we'll need some sort of index or counter the standard programming practice is to have a integer variable named i and we'll set this equal to zero and then add a semicolon at the end so remember there's three statements within this for loop the first is declaring an index or counter of some sort second is the condition so we want this for loop to iterate depending on what the width is so we can just simply say we're going to continue this for loop as long as i is less than whatever our width is semicolon and lastly we want to increment our index so we can just type in i plus plus so what do we want to do during each iteration of this for loop we want to display so c out whatever our symbol is that the user types in okay so let's run this program to test it so this is only going to print a single line enter the symbol to use how about a money symbol enter the width how about five money symbols all right so we ended up with a single line and the width was five and this just prints a single line of characters now let's turn this into a program that will display a rectangle so we're going to add a height so integer height and we will create a prompt to enter the height and we're going to change width to height for this line here all right so what we're going to do now is that we're going to surround this for loop with another for loop and this outer for loop is going to be in charge of keeping track of the height of our rectangle so we're going to take these curly brackets and surround this for loop so now we have an outer for loop and an inner for loop so this is now a nested loop so this outer for loop is going to be in charge of the height of the rectangle so it's going to be a similar process to what we have with these three statements within the inner for loop um one thing though is that with standard programming practice with nested loops they usually use a index or counter called j and the reason that i think that they use this is because typically the default is i for an index and i think they use j as the next one just because it comes next in the alphabet that's my reasoning behind it so it's going to be the same process as before and i equals zero semicolon and we're going to continue this outer for loop as long as i is less than our height semicolon and lastly we're going to increment our eye counter after we exit this inner for loop we would like to move down to the next line think of it like a typewriter so after we complete one line we would like to go down to the next line so a simple way to do that here is that we can just c out e n d l to move down to the next line as if it's like a typewriter or maybe a 3d printer we'll finish printing one line and then we will jump down to the next line and just continue the cycle until we can escape the outer for loop so let's run this program to try it so enter the symbol to use this time let's try the at sign enter the width perhaps 10 and the height maybe 12. all right so here's our rectangle so let's just check to see that this is accurate so width of 10 1 2 3 4 5 6 7 8 9 10 height of 12 1 2 3 4 5 6 7 8 9 10 11 12. yeah that works just fine then so this is a fun little program you can do to create or print a rectangle with a symbol width and a height that you specify so that's basically how nested loops work it's just this general concept of having one loop that's inside of another loop and you're not limited to just having one inner loop and one outer loop for example we could take this a step further and put this all within another loop and it's kind of like we would have three different levels then we have an inner loop a middle loop and then an outer loop i can't really think of any practical applications for three different levels of loops but i'm sure they're out there though um really for this tutorial series we'll only be dealing with like two levels at the very most i would say uh but this could be useful for maybe printing some sort of like 2d layout or something and when we get to this topic on 2d arrays these nested loops are actually going to come in handy to display all these elements of like a chart basically if you need to take anything away from this basically just a nested loop is one loop that's inside of another we will cycle through the inner loop and once we exit the inner loop then we will complete one cycle of the outer loop and restart the process all over again oh and a quick note that i forgot to mention when originally filming this video is that with nested loops you're not required to have four loops for example you could have a set of while loops of course you know you would have to have different statements you couldn't have these three statements you would have to have like a single condition um but yeah you can mix it up you can have nested loops that are while loops or for loops or a combination of four loops and while loops it doesn't matter just for this example we used for loops for the inner loop and the outer loop if you're having some trouble understanding this concept of nested loops don't worry we'll be revisiting this topic again when we get to 2d arrays and we won't really be using these anytime too soon i would say uh so you have some time to actually play around with these but that's pretty much this lesson on nested loops if you would like a copy of this program i'll post all this code in the comments down below and pin it to the top if you're looking for additional practice or a project to work on why don't you create a program that involves a nested loop and post it in the comments down below because i would like to see it as well but yeah that is this topic on nested loops and c plus plus hey you if you enjoyed this lesson then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you