00:04 - Welcome back to the Internet Simulator
tool for Computer Science Principles.
00:09 - The tool has changed a little bit from the
last time you saw it, in order to make certain things easier.
00:14 - Let's take a look at the changes.
00:17 - The widget now lets you enter ones and zeroes instead of A's and B's as before.
00:22 - Last time you and your partner had to work together so that you didn't set the wire or send at the same time.
00:29 - In this version, we've solved that problem for you,
00:32 - so now when you hit send, 
everything you typed in the key will be sent out at the bit rate you select.
00:38 - It can go a lot faster now. 
You or your partner don't have to do anything to receive a message.
00:44 - When the message comes in, 
it will just show up in the received message log.
00:48 - You also no longer have to worry about squashing each other's messages.
00:52 - The wire is now a two-way street.
00:55 - You can both send messages at the same exact time and each of you will receive the message intended for you.
01:01 - We also have a new slider called "Chunk Size".
Chunk size actually does two things.
01:07 - The first is that it allows you to clean up your bits to make them more readable,
01:11 - so if you have a protocol that requires
five bit chunks, you can use the slider to clean it up.
01:16 - To understand the second thing the chunk size slider does, we need to look at something else.
01:21 - You'll notice a checkbox under encodings that says "Decimal".
01:26 - If you check it, you will see the
decimal equivalents of the binary values.
01:30 - Of course, how the binary is interpreted
depends on how many bits per chunk you're using,
01:36 - so that's the second thing the chunk size slider does.
01:39 - It defines how many bits will be used to interpret the decimal number
01:44 - Notice how when you change the slider, the decimal numbers change.
01:49 - Important to note is that if you have extra bits dangling off the end, they will get padded with zeros before sending.
01:56 - You can type numbers in decimal
and see their binary equivalent below
02:01 - You have to put a space between each decimal number you type so the tool knows how many digits to encode in binary.
02:08 - However, be warned: the numbers still respond to the chunk size,
02:13 - so if you type a number that's bigger than the chunk size can handle, it actually overflows and you get seemingly weird results.
02:20 - Notice that at four bits per chunk, 15 is '1111', which is the largest 4-bit number you can make,
02:28 - so 16 causes the four bits to overflow and it rolls over to all zeros.
02:34 - And 17 is one bigger than that, so it rolls over to '0001'.
02:40 - This is actually how most computers deal
with overflow.
02:44 - This is exactly the same behavior we saw with the binary odometer widget.
02:48 - Even as numbers get bigger, there are only so many bits.
02:51 - So once you're at all ones, it rolls over to zeros and keeps going up from there.
02:56 - So with automatic sending and receiving of messages
03:00 - and the ability to define your
bit chunk sizes and see the decimal values that correspond to them,
03:05 - you're all set to define protocols and send messages composed of numbers.
03:09 - Happy bit sending!