00:00 - [Music]
00:10 - let's make a grocery list
00:12 - we'll pull out a piece of paper and add
00:14 - a single item like bread
00:17 - if we want to add to the list we'll need
00:19 - a new piece of paper with room for
00:21 - another item
00:23 - the first piece of paper gets scrapped
00:26 - and a new list is made on a new piece of
00:28 - paper
00:30 - we have to copy over bread and then add
00:32 - our second item
00:34 - each time we add an item we need a
00:36 - larger piece of paper
00:39 - this happens over and over again as new
00:42 - items are added
00:47 - we could initialize a 1d array to hold
00:50 - all the items
00:51 - but we don't know how many items we need
00:53 - to buy and we don't want a piece of
00:55 - paper that is too large either
00:59 - this is where an arraylist comes in
01:01 - handy
01:03 - an arraylist is a class that represents
01:05 - a resizable list
01:08 - the arraylist class has a constant to
01:10 - set the default size to 10.
01:13 - it also has an instance variable for a
01:15 - 1d array
01:18 - since the 1d array type is an object
01:20 - an arraylist can only hold objects
01:22 - [Music]
01:25 - when items are added to an array list it
01:27 - stores them in this 1d array
01:31 - once the number of items exceeds 10
01:33 - it creates a new 1d array one size
01:36 - larger and copies over the items to the
01:38 - new 1d array
01:41 - this means that if we want to store
01:42 - primitive data types in an array list
01:45 - we have to use the corresponding wrapper
01:47 - class
01:49 - for example using the integer class
01:51 - instead of int
01:55 - let's create an arraylist
01:57 - the arraylist class is part of the
01:59 - package java.util
02:02 - we can import the entire package by
02:04 - saying java.util.star
02:07 - or we can import just the arraylist
02:09 - class by saying java.util.arraylist
02:13 - we need to write either of these import
02:15 - statements at the top of our file
02:18 - now we can make the arraylist by typing
02:21 - arraylist
02:22 - followed by a set of angle brackets
02:25 - these angle brackets are where you
02:27 - specify the data type you want to store
02:29 - in the array list since we cannot use
02:31 - int we have to use integer
02:34 - let's call this list number array
02:37 - to instantiate our arraylist object we
02:39 - use the new keyword
02:41 - then called the arraylist constructor
02:44 - the arraylist class is special since it
02:46 - uses angle brackets to specify its type
02:49 - so we have to say arraylist
02:51 - then open a set of angle brackets
02:54 - inside the angle brackets we specify the
02:56 - type then we end with an empty set of
02:59 - parentheses to call the no argument
03:01 - constructor the no argument constructor
03:04 - initializes the 1d array instance
03:06 - variable with a default size of 10. this
03:09 - list can now be filled with as many
03:11 - integers as we'd like
03:14 - an arraylist is a powerful data
03:16 - structure that we can use to add more
03:18 - flexibility to our lists
03:20 - they hold objects and manage the work of
03:23 - creating new 1d arrays as we add new
03:26 - items to our list
03:29 - [Music]
03:36 - you