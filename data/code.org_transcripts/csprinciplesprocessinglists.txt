00:05 - With lists, we can begin to store lots of
data, and we can also think about writing code
00:09 - to process that data.
00:11 - For example, a list of the pixels in an image
can be processed to change their colors to
00:16 - give the image a unique, filtered look.
00:18 - A digital song file is actually just a list
of waveform samples, and can similarly be
00:23 - processed to apply digital effects.
00:26 - We know that computers are great at repeating
commands in the form of loops, so when we
00:31 - want to process every item in our list in
a similar way, we can use a loop to iterate
00:35 - through every item and take some action with
it.
00:39 - Let's look at how we use loops to process
lists.
00:42 - First, we can make a while loop to run a specific
run of times by using a variable called "count".
00:48 - This loop will run 6 times.
00:50 - We also know that lists have numbered indexes starting at 0, and since the variable "count"
00:55 - stores a number, we can use "count" as our
index into the list.
01:00 - And since "count" changes every time through
the loop, starting at zero and going up by
01:04 - 1 until 5, this gives us a mechanism for accessing
every item in a list.
01:10 - An easy first step when processing lists is
to write a loop that prints out all the values
01:15 - in the list, to make sure you are seeing everything.
01:17 - Let's do that here.
01:27 - We'll add a console.log statement in the loop,
and make the loop condition more general by
01:31 - removing the hardcoded value 6, and replacing
it with the length of the list.
01:36 - Now, if the list size changes, our loop will
still print everything out.
01:40 - Let's run it.
01:43 - This kind of looping structure, one that uses
a variable to control the number of times
01:47 - a loop iterates, has 3 basic components to it.
01:51 - Creating and initializing a variable to use
as a counter.
01:55 - Some condition that checks the value of the counter each time through the loop.
01:59 - Increasing the value of the counter by a set number for each iteration.
02:04 - This kind of structure is so common that many languages include the "for loop" to do just that.
02:09 - The for loop combines these components into a single line of code for convenience.
02:14 - The standard set up of a for loop looks like this.
02:20 - There is a lot going on here, but you can
see it has the same basic components as the
02:23 - while loop above.
02:25 - It creates a counter variable called "i",
while i<4, add 1 to i every time through the loop.
02:34 - You might read a for loop out loud like this:
for variable i starting at 0, while i is
02:40 - less than 4, i plus-plus.
02:44 - You can think of i as shorthand for index,
and "i plus-plus" is shorthand for
02:49 - "increase the current value of i by one".
02:52 - The value of i will come in handy when we
use it to access each item in the list, just
02:56 - like we used the counter variable in the while
loop.
02:59 - Note that "i" is just a convention, and you
can name it anything you want.
03:04 - Let's look at an example of using a for loop to go through every item in our list,
03:08 - and doing something with each item.
03:10 - Here, we have a list of red, green, and blue
values for a very small image.
03:17 - We could brighten it up by adding 50 to every number in the list.
03:21 - In each iteration of the list, we are getting
the current value of stored in the pixel list at index i,
03:25 - adding 50 to that number, and
then updating the value at that same slot
03:29 - in the list to the new value.
03:32 - So the first time through the loop, i is
zero.
03:35 - Pixels at index i, or pixels at 0, is 28,
28+50 is 78,
03:42 - pixels at index 0 is updated to be 78.
03:45 - The next time through the loop, i is 1, so
pixels at index 1 will be updated in the same way.
03:52 - This will happen for each item in the list.
03:55 - With a for loop, and a list of values, you
have an easy way to process all the items
04:00 - in a list.
04:01 - This is a foundational concept in computer
science you will see over and over again and
04:07 - it unlocks the power of dealing with lots
of data.