00:00 - foreign
00:05 - [Music]
00:10 - let's say we're designing a program to
00:12 - keep track of the members of our after
00:13 - school club
00:15 - we can create a class called Club member
00:17 - to represent all club members
00:19 - this class has attributes for their name
00:21 - and grade our club member class also has
00:24 - methods to represent the behaviors that
00:26 - all club members can do
00:29 - each Club has regular members and
00:31 - special members called Club officers
00:34 - Club officers have all the attributes of
00:36 - a club member plus special attributes to
00:38 - represent their unique abilities
00:40 - in this case our club member class is a
00:43 - super class and our club officer is a
00:45 - subclass
00:46 - superclass is a class that can be
00:48 - extended to create subclasses
00:50 - subclass is a class that extends a
00:52 - superclass and inherits its attributes
00:54 - and behaviors
00:56 - inheritance is an object-oriented
00:58 - programming principle where a subclass
01:00 - inherits the attributes and behaviors of
01:02 - a superclass
01:03 - inheritance allows us to create special
01:05 - versions of a class and reuse code
01:08 - now we can use subclasses with their own
01:10 - capabilities that share attributes and
01:12 - behaviors from a superclass
01:15 - foreign
01:18 - [Music]