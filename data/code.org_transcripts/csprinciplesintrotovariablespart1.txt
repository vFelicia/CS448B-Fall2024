00:04 - Most apps
keep track of pieces of information
00:07 - that change and update
as you use the app. For example,
00:10 - a simple game can keep track of your score
and the number of lives you have left
00:14 - as you play.
00:16 - Apps utilize a computer's memory
to do this and learning
00:19 - how to use that memory when programing is
a really powerful skill.
00:24 - The most common way to leverage a computers
memory is by creating a variable.
00:29 - Now a variable is just a container
00:31 - for storing a value, and once created,
00:35 - the variable is stored in the computer's
memory and it can be used.
00:38 - An update
repeatedly throughout your program.
00:42 - As an example, let's use variables
to keep track of the score
00:46 - and the number of lives
remaining in a hypothetical game.
00:50 - Creating the variables really easy.
00:52 - You use the word VAR followed by a label
that you want to give the variable.
00:57 - You can choose any label you want,
but it helps to choose
01:00 - a word that describes
the variable that you want to store.
01:04 - So let's label our first variable score
to keep track of the score
01:08 - and then we can create a second variable
to keep track of lives.
01:13 - Remember these labels,
01:15 - you'll need them later
in order to use the variables
01:19 - We can assign a value to the variable
using the equal sign.
01:22 - Like this.
01:24 - Let's set our starting score
to zero and our number of lives to three.
01:29 - Remember,
you only need to use the VAR at the time
01:32 - that you want to create a new variable.
01:33 - A common mistake is to use it
every single time
01:36 - you want to refer to a variable. Also,
be sure to avoid mixing up the order.
01:41 - When you call your variables, the labels got to
01:44 - appear on the left
and the value have to appear on the right.
01:47 - Like this.
01:49 - Not like this.
01:51 - Often you'll want to create a variable
and assign it a value right away.
01:55 - There's.
01:55 - There's a really convenient way
to do this with one line of code.
01:59 - This is sometimes called initializing
the variable.
02:02 - It's important
02:02 - to realize that this single line of code
is actually doing two things.
02:07 - First, creating the variable
and then second, assigning it a value.
02:12 - Let's take
a moment to talk about the equal sign.
02:15 - In many coding language,
the equal symbol is called the assignment
02:18 - operator, because you use it
to assign a value to a variable.
02:23 - And you're probably used to seeing it in
math, but in programing it's a little bit
02:26 - different If you were in math class
and you saw this,
02:31 - something would definitely be wrong.
02:33 - Score
can't possibly equal both five and seven,
02:36 - but this is not math class with code.
02:39 - A computer is executing
a set of instructions one after the other.
02:43 - So this would just tell the computer
to set a score to five
02:47 - And then on the next line,
set it to seven.
02:51 - In an effort
to avoid confusion, programmers
02:53 - often don't use the word equals
when we see this sign.
02:56 - Instead,
they use the phrase gets the value.
03:00 - So when we see a statement like this,
we could read it as score
03:04 - gets the value seven or score
get seven for short.
03:08 - Some programing languages
03:10 - avoid the confusion entirely
by representing the assignment statements.
03:13 - With a sideways arrow like this
03:17 - To use
03:17 - a variable, you just refer to it
by its label.
03:21 - Anywhere the variable name appears
in the program, the value
03:24 - currently stored in the variable
will be retrieved from memory.
03:28 - The tricky part
is that when using a variable,
03:31 - you often can't see visually
what its value is. To bypass that problem.
03:36 - You can use write
03:39 - or console dot log
to display the value like this
03:45 - This is a really handy trick.
03:46 - But remember, there's
a difference between showing the value
03:50 - of a variable
and writing out the variables label.
03:53 - When text appears in quotes,
you're telling the computer
03:56 - to write those literal
ASCII characters on the screen like this
04:03 - But on the other hand, without quotes,
04:04 - the computer assumes that you're referring
to a variable called score
04:08 - and it will attempt to retrieve its value
if you haven't made that variable.
04:13 - Then the computer will give an error.