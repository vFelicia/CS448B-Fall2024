00:07 - So far you've been using functions to
make it easier
00:10 - for a program to do the exact same thing lots of different times.
00:14 - But sometimes you want to function to do
00:16 - things a little differently each time.
00:18 - Maybe one time you want a star element to move
00:20 - and the next time you want the moon
to move.
00:23 - Or maybe you want to change the color of everything on the screen
00:26 - to green... but later red or blue.
00:29 - Writing a new function for every element
or color you might want to use
00:33 - would take up way too much time.
00:35 - So how can we create a function that does almost the same thing
00:39 - but with tiny differences.
00:41 - To do that programmers use parameters.
00:44 - A parameter is an extra piece of
information passed to a function
00:48 - to customize it for a specific need.
00:51 - Let's take a look at how they work.
00:54 - Imagine you created two functions
00:56 - one to move a bike across the screen
00:58 - and another to move a motorcycle across the screen.
01:02 - These two functions are almost exactly alike.
01:05 - They both use "get property" to find the x
position of the element
01:08 - and they both use the counter pattern
01:10 - to add five to the x position.
01:12 - The only difference in these two functions is that one uses "bike"
01:16 - and the other "motorcycle".
01:18 - When you have two functions that are almost exactly alike,
01:21 - but with one little difference,
01:23 - that's a great time to use a parameter to combine the two functions into one.
01:28 - To start off we'll need the function block that includes a parameter.
01:32 - Since we don't know whether we'll be
moving the bike or the motorcycle
01:36 - let's just call the function "move vehicle".
01:38 - To figure out what goes inside we can look at the two functions
01:42 - that we already have.
01:44 - We'll definitely keep the code
01:45 - that's the same in both of these functions
01:47 - but the parts that were different we'll need a parameter.
01:50 - A parameter is a lot like a variable that we can only use inside the function.
01:55 - So we'll want a descriptive name like "vehicle".
01:58 - Also like a variable,
01:59 - it doesn't need quotes around it.
02:01 - Last, we'll change the default parameter in the parenthesis to our parameter name.
02:07 - Now that we have our combined function
02:09 - it's time to test it out.
02:11 - When we call our function we use parameter
02:13 - to tell it whether we want the
bike or the motorcycle to move.
02:17 - This time let's move the bike.
02:20 - Now every time that the parameter shows up in the code
02:23 - the program will use "bike" instead.
02:25 - When we pass in "motorcycle" the program will use "motorcycle" each time
02:29 - the parameter appears.
02:33 - The best thing about using parameters is that we can use this function with any element.
02:37 - Even ones we haven't thought of yet.
02:40 - Let's say that we wanted to add a space shuttle to our code.
02:43 - We can add the shuttle image in
design mode
02:45 - with the ID "shuttle".
02:47 - Now we can use the same function to make the shuttle move across the screen,
02:51 - even though we hadn't even thought of the shuttle when we first wrote the function.
02:55 - Instead of creating three different
functions
02:58 - we've used just one and it will work with any other elements we add to our screen.
03:04 - Parameters let us use the same code to solve problems
03:06 - that are similar to each other even if they're not exactly the same.
03:10 - By using parameters you can save yourself time
03:12 - and make your functions even more powerful.