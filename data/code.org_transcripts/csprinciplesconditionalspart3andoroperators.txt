00:06 - You can add even more complexity to your conditional statements by asking two
00:09 - questions at the same time. We use the
AND and OR operators to check two Boolean
00:15 - expressions at once.
00:18 - Let's talk about OR first. If we wanted to, for example, express
00:22 - that you can be younger than 5
years old or older than 95 years old
00:26 - to get free admission to the museum, we
could express that like this:
00:31 - [Typing sounds]
00:36 - Expressions  that use the OR operator are
true if either the first or the second
00:41 - expression is true.
00:43 - Only when both
expressions are false
00:46 - does the OR expression evaluate to
false.
00:50 - The AND operator is more strict.
00:52 - What if we wanted to say that to get the
student pricing at the museum you need to be between 12 and 21 years old?
00:59 - We could express that as checking whether age is greater than 12 and age is less than 21.
01:06 - If only one of these conditions is true, that's not good enough.
01:10 - Both conditions must be true to get the
student discount.
01:15 - More and more complex questions can be represented with combinations of AND and OR statements.
01:20 - What if the museum gives the student
pricing to everyone if it's Tuesday or Thursday,
01:25 - but on every other day, you
still need to be between the ages of 12 and 21 to get a discount?
01:32 - We could express that like this: If the day is Tuesday or the day is Thursday or your
01:39 - age is greater than 12 and age is less
than 21, then you get the student pricing.
01:45 - Else, you get regular pricing.
01:49 - When using text, use parentheses to group Boolean expressions together. when
01:54 - When evaluating this complex conditional, the computer will evaluate each Boolean expression separately and then use the
02:01 - rules of AND and OR to determine if the
whole expression is true or false.
02:06 - So if the day is Monday and the user is 25, the code would run like this:
02:11 - First, the computer checks if the day is
Tuesday.  It's not, so that is false.
02:18 - Then, the computer checks if the day is
Thursday. It's also not, so that it is false, as well.
02:23 - Since it's not Tuesday or
Thursday, and at least one side must be
02:27 - true for an OR statement to evaluate to
true, that whole expression evaluates to false.
02:33 - Then the computer checks the other
side of the OR, since that could be true.
02:38 - The computer checks if the age is
greater than 12.
02:42 - 25 is greater than 12, so that statement is true.
02:45 - Now the computer checks if the age is less than 21.
02:49 - 25 is not less than 21, so that statement is false.
02:53 - Since this was an AND statement, but only
one side was true, this whole expression
02:58 - evaluates to false and the message
displays that the user gets regular pricing.
03:04 - For a human, perhaps this answer was
obvious from the beginning, because we
03:08 - are actually pretty good at dealing with
logic statements when they represent
03:11 - real life decision making. But the
computer needs to evaluate every
03:15 - expression until it can determine
whether the condition is true or false.
03:19 - Many beginner programmers make a mistake
while trying to write this expression:
03:25 - Is the day Tuesday or Thursday?
03:28 - Notice the subtle difference between the correct code and this version.
03:32 - This is often the result of the fact that in English, we would say,
03:36 - "Is the day Tuesday or Thursday?" However, remember that computer questions are different,
03:41 - so we have to ask, "Is the day
equal to Tuesday or is the day equal to Thursday?"
03:47 - so that the computer will
understand.
03:49 - Computers do exactly what we program them to do,
03:53 - but with conditionals,
we can simulate complex decision-making
03:56 - and have the computer adapt to changes
or even seem intelligent to humans.