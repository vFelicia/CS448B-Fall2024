00:01 - [Music]
00:10 - we have used loops to repeat tasks like
00:13 - putting away plates until there are no
00:15 - more left in a stack
00:17 - we are repeating a task as long as the
00:19 - condition is true
00:20 - we can also use recursion to repeat a
00:22 - task like this
00:24 - recursion is when a method calls itself
00:28 - in recursive methods there is a base
00:30 - case and a recursive case
00:33 - the base case is the condition when the
00:35 - recursion should end and return a value
00:39 - the recursive case is the point when the
00:41 - method should call itself
00:43 - let's use recursion to put away our
00:45 - stack of plates
00:47 - we can write a method called put
00:49 - awayplate to represent the task that we
00:52 - want to repeat
00:54 - it has a parameter to represent the
00:56 - number of plates in the stack
00:59 - the base case is if there are no plates
01:01 - left in the stack
01:03 - we can use an if statement to check if
01:06 - numplates is equal to zero
01:09 - if this is true we'll print a message
01:11 - saying that we're finished
01:13 - the recursive case is if there are still
01:15 - plates left in the stack
01:18 - when the if statement is false the
01:20 - method will call itself with one less
01:22 - plate in the stack
01:24 - as long as there are plates in the stack
01:26 - the method will keep calling itself with
01:28 - one less plate
01:30 - once there are no more plates in the
01:32 - stack the if statement returns false and
01:35 - the recursion ends
01:38 - repeating a process like this can be
01:40 - done using either loops or recursion
01:44 - [Music]