so first we are going to go over our summary questions from last time our first question was what do we use loops for so loops will allow us to execute the same code over and over again until a condition is broken or false so this way we don't have to write the same line of code multiple times so if we want to print something out ten times we can just use a counter variable and a while condition and it'll keep doing that until the condition is false if you don't if you're not sure about this you can go back to our last video where we explain this why do we need to make sure to change the condition variable and looping so if the condition never changes or changes in the wrong direction the loop will become an infinite loop an infinite loop means that it'll keep on executing keep on executing keep on executing and it'll just slow down your computer and that'll be the only thing your computer is doing we can't have that it's a problem and we can always make sure that that doesn't happen so the thing to remember is that we need to be making changes towards the end condition in our loop so what's the difference between a while loop and a dowhile loop a wild of checks the condition first and that executes the code so the code might not ever execute but a dowhile will execute first and then check the condition so the code will always execute at least once there are different cases where we want to use a while loop or a dowhile loop but just remember if you want the code to execute at least once you should probably use it too while loop so today we're gonna be talking about for loops so they're also a kind of loop and they're similar to while loops in that it's kind of like a repeating if statement that executes code inside but the difference is that it will only repeat for like a certain amount of times that we say so here's an example of a for loop I've split it up into three sections based on the different colored boxes and we're gonna be going over what these sections do and what they mean but to make a for loop we always need to start with the keyword four keywords are words that are purple and means something special to the compiler which eclipsed and remember that we cannot have any variables that are keywords so we can't have a variable called new we can't have one called if we can't one have four and that's just a review of the variable naming rules we did before so then the terms inside of the for loop or inside these parentheses just like in a while loop the condition is inside of the while loop parentheses but this time we have a few more things inside the parentheses that we're going to go over so there are three sections and we will go over each one by one so our first section is the green one and it is called initialization remember what initialization means that means we're making something so in this case we're going to be making a variable so the section one is we have to create a variable that will be used inside of the for loop so what this variable is equal to is what our starting point is that means at the beginning of the loop I will equal zero in our example here we're gonna go over what how you exactly know what the starting the starting point is later but just know that the initialization we're gonna make that variable equal to our starting point and this can be names anything but we usually name it I we were using a for loop and it's always an integer and it's initialized to same way we normally make integer variables so if you wanted to make an integer called num dogs for how many dogs you have it'll be intimate always equal zero just like this so it's all the same stuff we did before we're just using it in a new way so an important thing to remember is initialization only happens once and at the beginning of the loop before we do anything inside the loop we're gonna initialize and that's the only time we're gonna initialize we're gonna go over what that looks like later but just know that it's gonna happen once and before the while before we go inside of the loop only so our next step is the blue box which is our condition just like in a while loop it's like a boolean expression and it's going to determine if we go inside or not so it says here just like with a while loop the code will execute again if the condition is true so in our example the loop will keep going as long as I is less than five if the statement is true if I is less than five we're going to go inside of the for loop and execute what's ever inside right now I don't have anything inside because that's just our example but we're gonna see what can be inside of our for loop later if this statement is false we're not gonna go inside the loop and we're not gonna execute any of the code we're just gonna go on to the next thing so that's exactly like with our while loops if you don't quite understand maybe go back first and then come here to learn about the for loops so the condition is checked every time before the code inside is executed to see if we answer or not just like with the while loop the final step is our change after each execution of the code the statement in the red box is going to be executed so just like with our while loop we need to be making change that will go towards our condition and in this case the change is going to be built in inside of the parentheses so in our example after each time the code is executed one is added to I remember that's what I plus plus is we went over that a while ago with our variable manipulation but let's do a review of our shortcuts I plus plus that's adding one I that's subtracting 1 I plus equals 2 that's adding 2 i minus equals suit that's subtracting 2 i plus i sorry x equals 2 is we're going to be multiplying i by 2 so there are many ways to do it these are the shortcuts these are the easiest ways to write it so that's what we want to be using so this change will happen to the variable every time after the code inside the loop is executed so after we do what's in the loop we're going to do the change in our red box so let's go through a demo of what our computer will actually do when we're doing a for loop so let's look at for the that we have here we have for int I equals zero so remember from our section 1 that's the initialization I is less than 3 that's our condition I plus plus that's our change in the inside of our code that's system dot out dot print Ln I which is going to print out the content of I so let's think about this what's the first thing we're going to do before anything step one initialization so the first thing that do you wanna see this for loop into a equals zero we're gonna make our we're gonna make our variable I equal to zero that's our starting point the next thing we're going to do step two we're gonna go over to the condition the condition remember before whenever we go into the before we go into the code inside we have to check the condition to see if we're actually going to go inside or not just like with a while loop so we're gonna check I less than three I less than three that's our check if it's true we're gonna go inside if it's false we're not going to go inside we're going to exit the for loop right now I is equal to 0 so 0 is less than 3 it's true so we are going to go inside now that we're inside we're gonna execute all of the code inside right now I only have one line but if I had 10 lines all those 10 lines would be executed so over here our line it our code is going to be executed and it's going to pronounce 0 because that's what we set our variable equal to and we haven't changed it yet now remember after every time we good we execute the code the next step is we are going to do the change in this case our change is I plus plus and we remember what that means that means we're gonna add 1 to the value of I so next our next step is I plus plus and I is now 1 because 0 plus 1 is 1 so notice how I sort of colorcoded these in the color of the boxes I had before our initialization here is red our condition is blue I have the code in black and then our change in green so that's the order for our for loops that were always going to have very first in the very beginning and initialization check if we're going to go inside if we do we're gonna execute the inside then we're gonna make our changes so after we made our changes we're gonna go back and you might think well our first step was the initialization so we're gonna go back into I equals 0 again right no remember what I said before the initialization only happens once and at the very beginning before we do any the forloop stuff so we're not going to go to the initialization we're gonna go into the condition just like with a little while loop after we do the inside we're gonna go back to the condition now we're gonna check the condition remember we did I plus plus I is now 1 is 1 less than 3 yeah once less than 3 so it's true and that means we're going to go inside now with that we're inside we're gonna execute all of our code and that means we're gonna print out I I right now is equal to 1 because we added to it before and now we're gonna have one printed out ok so next we just printed this out we executed the code so what does that mean we're gonna do after we execute the code yeah we're gonna make the changes in this case our change is adding 1 so what's 1 plus 1 to I plus plus that means is now 2 remember we're not going to go to the initialization next initialization we only do it at the very beginning next we're going to go to the condition again 2 less than 3 is that true or false it is true so that means that we are going to go inside the other for loop again once we're inside the for loop we're going to execute all the code inside that means we're going to execute print printing I which is 2 now we're going to make our changes again so that means our changes I plus plus so I plus 1 is 3 because I was 2 after we founded 1 it's now 3 now here's the tricky part we're gonna go to the condition again and now we're going to check is 3 less than 3 no 3 is not less than 3 if we had this as less than or equal to it would be true but 3 is not less than three so it's false that means that we are not going to go inside the for loop anymore we're gonna exit and then go to our code that's after that so that's just like the while loop where after our condition is false we're gonna exit the loop and we're not going to go inside of it anymore and that's what we have here the condition is false Oh extra Lube okay so now I'm going to go over some demos and clips so right now so right now I want you guys to make a new project and let's do a review of how to do that we're gonna do Java project we can also go to the top left and go to file new Java project we're gonna call this one for loop examples finish and then we're gonna go to our for loop examples folder in our project Explorer rightclick it new class we're going to name our first one example one after you do that you can finish and we're over here next we are going to make our main method you can pause this and catch up but right now I'm going to go on so our prompt is write a for loop that prints out numbers 1 2 3 4 5 so if we remember our very first step before we do anything is we're gonna do for keyword 4 and then the parentheses and then we're also gonna do curly brackets opening 1 in a closing 1 and notice how it has all this red right now that's because we haven't actually written anything yet and that's why it's wrong we actually have to know how to have something in here which we're going to write now so as we can see line seven that's what's inside of the for loop that's the code that's gonna be executed every single time we repeat so our first step what was section one it was initialization so we're gonna initialize a variable remember it's always going to be an integer we're gonna be naming ours I and we're gonna set it equal to the starting point so what's the starting point for this one so we can see it says write a for loop that prints out numbers 1 2 3 4 5 so what's the starting point where are we going to start from what number do we want to start with 1 we're not going to start from 0 because we don't want to pronounce 0 that's not our starting point we don't want to go there we want to start with 1 because that's where we're gonna start from and go after so for this example we're gonna do in 2 I equals 1 and remember we have that semicolon in between all of the sections we can't forget the semicolon or else our work won't compile so after that our next step is the condition now this one's a little hard but let's think back to our while loops the condition is kind of where we want it to stop where we want where we want the limit to be so as we can see here we want where do we want to stop we want to stop at 5 so our condition is going to include 5 and there are many ways to do this one example is I less than or equal to 5 because when it's less than when it is 5 5 less than equal to 5 that's true so it's going to go inside again in print cell 5 another way we can do this is less then 6 because when I is equal to 5 it's going to be true so then it's going to go inside again when it's 6 it's not going to be true and it's not going to go inside for this example what I'm going to do right now is going to go with I'm gonna go six and they both work they're both perfectly fine now we're gonna have another semicolon and our final step remember that is our change so let's look through all of our numbers what's the change in between each of them from one to two how do we get there what's that change we need to make you're right it's plus one so we can't just do plus one like that we have to have our variable in it and remember one of our short clips was I plus plus four for loops you're gonna be using I plus plus a lot so it's good to get used to it but there is there are more ways to do it for example I plus equals one here I'm gonna do I plus plus and now for what goes inside of the for loop what goes inside of our for loop is the code that's we want the for loop to print out I'm sorry the code we want our for loop to execute I kind of told you the answer and it's that we're gonna be printing our numbers out so we're gonna have a print statement and inside of it we're gonna print out one I mean now what sorry I I is gonna print out all of the the numbers that I that I is gonna be equal to and as we can see we're gonna cycle through all of them with this I plus plus so let's go to run it and we see we're correct one two three four five that's exactly what we wanted if you don't understand how this prints out this you might want to rewatch that example I did before in the slides that we trace through that for loop but if we're good to go now I want you guys to make another new class called example two I already have mine made but I want you guys to make your main method now pause the video if you have to and I'm gonna go on now so our prompt is write a for loop that prints out odd numbers from one to ten so that's a little harder because it includes odd numbers that's not just all numbers we need to do something a little different so remember our first step is always do keyword for our parenthesis and our curly brackets we have the red lines because we haven't finished everything yet but our first section is the initialization remember we're always going to have it as an integer we're gonna be naming ours I but what's it going to be equal to so we need to think of our starting place because that's what it's going to be equal to the starting place for our numbers here it's going to be one because the odd numbers from 1 to 10 are 1 3 5 7 9 our first one is 1 so that's our starting place that's where we're going to start with and so we're gonna set our variable equal to u next is our condition this one's a little more tough it's where we want to stop it's where we want that boundary that limit to be so if we look here our stopping place is 10 so there are many ways to do this but the way I'm gonna do it here is with less than or equal to I'm less than or equal to 10 another way we can do it is 9 because 10 is an even number and we're not gonna print that out print that out anyways I is less than equal to 11 that also works too because it's gonna go from 9 to 11 and then 11 is not gonna work false so it's not gonna go inside for this example I'm gonna go less than or equal to 9 because I want us to get used to using sometimes less than equal to sometimes just less than greater sometimes greater or equal to so it's good to get used to seeing all of them and using all of them our changed part is the probably the hardest part for this question we're gonna be only printing out all the numbers so let's think about that 1 3 5 7 9 what is the change what is the difference between all of those numbers it's 2 to get from 1 to 3 we need to add 2 how do we add 2 we can't use I plus plus because that's only for adding one we're going to do i plus equals 2 so we're gonna start with 1 and then we're gonna print it out with our print statement we're going to be do I because that's what our number is gonna be is keeping track of that number and let's go through this before we run them just to make run it just to make sure that we're we got it right inside equals 1 that's our starting place that's right our starting place is gonna be 1 for the odd numbers from 1 to 10 then we're gonna print out one yeah that's correct we're gonna add 2 to 1 yeah that's that's good because we want to go from 1 to 3 then we're gonna check is 3 less than or equal to 9 true we're gonna go inside again print out 3 then we're going to add 2 to 3 that's 5 then we're gonna go to our condition is 5 less than or equal to 9 yeah it is it's true so we're gonna go inside look at your prints l5 we're gonna add 2 again 7 7 is less than or equal to 9 print out 7 we're gonna add 2 to 7 9 is less than or equal to 9 we're gonna print out 9 now we're gonna add 2 to 9 which is 11 is I is 11 less than or equal to 9 no it's false so we're not gonna go inside this for loop that's why we could have had this as 10 or we could have had this as less than 11 because it would still be true so be false for all of the cases so this is our example 2 now I'm gonna go into our next example example 3 8 circuit last one for today so can you make a new class inside of our four loops examples folder call it example 3 finish and then we're gonna go to it so I want you guys to make a main method you can pause the video if you have to but our prompt is write a for loop that prints out your name five times I want us to do this example because it's a little different from what we've been doing what we've been doing is using that I variable to figure out what we're printing now we're just gonna be printing our name so I have my name here as James you can write it as your name but remember how we make a variable data type name and what it's equal to it's because it's a word I'm gonna call my name because that's my name and I'm gonna equal to James in quotes because it's a string so now we're gonna write that for loop remember our first step always is the key word for parentheses and the curly brackets our first section inside of the for loop parentheses is our initialization now this one's a little harder to think of what our initialization might be and it's a little more unclear because it just wants us to print or name five times there are so many ways to do this there are the the easiest way I'm gonna show you right now but just because I didn't do your way doesn't mean you're wrong and I'm going to show you some other ways you can give it to so we're gonna make an integer because it's always an integer we're gonna name our as I and for this I'm gonna make our starting place to 0 next we're going to do I'm gonna do I is less than 5 and then I'm gonna do I plus plus so let's make sure that I did this right we're gonna trace through what exactly this means our starting place is 0 so that means we're gonna start with 0 we're gonna add 1 so thou art I equals 1 I equals to I equals 3 I equals 4 when I equals 5 we're going to check here is I less than 5 no it's not I 5 is not less than 5 so then it's false we're not gonna go inside that means we're not gonna have a sixth one it's just gonna be the 5 so I'm gonna print out my name in here because that's what the that's what the prompt wanted and let me show you another way to do this let's say let's start with 1 and then we're gonna do less than or equal to 5 let's check that this is gonna work so it's going to start with 1 it's going to go 2 2 3 4 5 is 5 less than or equal to 5 yeah so that means that this is going to work and we're going to be printing our name five times we had to have that equal if this was not here it would only print it four times so let's run this to make sure we're correct one two three four five this is a correct example there are many ways you can do this but those are probably the easier ways to do it okay so now I'm going to go back to our slides and here's just a visualization of what we just learned so over here we have initialization condition increment change is the same thing it just means what are you going to change about the variable so we're going to start initialization then we're going to check the condition is the condition true if it is true we're gonna go inside of the code so the code block we're gonna run that then we're gonna make the increment that means we're gonna do the change we're gonna go back to the condition if it's true we're gonna go in we're gonna add again or whatever our changes and then check again so if it's false remember that or we're gonna leave the loop and we're gonna just going to go on with our code and whatever is after that so this is a little diagram of what our for loop is gonna look like what the Eclipse is actually gonna do when it looks at the for loop so now I have a few Submarine questions we're gonna answer them at the beginning of our next video but they are number one what's what's section one of the for loop and what does it do if you don't know you can go back to our video and look at it again but what is section two is our second question section three and number four is what are some shortcuts we can do for section three so that's the end of our video for today it was great to learn for loops with you guys and I hope you guys come back for our next