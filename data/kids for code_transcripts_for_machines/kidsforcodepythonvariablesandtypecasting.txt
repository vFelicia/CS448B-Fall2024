hello my name is Ethan and today I'll be talking about variables and typecasting which is part of day three alright so what are data and data types so data is basically just information like if you think about data you think about just information and like anything that can be considered info like an item or like a fact or like a number right or your address that's all data it's all considered data so in Python there's also data and it's referred to as data types and there are many different types of data so for example here we have the number 42 and we have the word hello in Python these are two different data types which I'll be going over here so here are some basic data types there's the integer which is called int int when you type in Python and they are just basically a whole numbers such as 1 2 3 4 5 103 and 20 they're all integers and that number 42 before was an integer so what's a floatingpoint which is called float in Python so float describes decimal decimal numbers such as 99.5 2.25 and 3.0 so as you can see 3.0 is a decimal number as well like if you put float in front of a number or you just write out 3.0 it'll change it to always having a decimal point even though it's an integer it'll have a decimal point after if you convert it to a float datatype so a string which is STR for short in Python it's a sequence of characters like the word hello those are five five letters heo and five is also considered a character as well as aren't aren't is a word and it's consisted of these characters so basically if you were to type on your keyboard those are all basically the characters that you can use in a string and you have to put them in quotation marks so what's a boolean or B ool for as short and Python it's basically just true and false so it's a boolean value has to data types you like it's a data type but you can only store two values in it true or false so but you might be wondering what do you store data types in well variables are what you can store data data end so you can always store a variable store data into a variable by writing the name of your variable equals and then whatever you want to contain in your variable it could be like a float or it could be an integer it could be a string it could be a boolean value it can be whatever the data type you want so there are some naming rules when it comes to variables such as it can't have any spaces in it and it has to be camel case in basically camel case well it doesn't have to be camel case but it's just like the conventional way of naming variables you want to have a lowercase and then you want to have the next word to be uppercase and the words following also to be uppercase and it also can't start with a number or a symbol and it can't be a Python keyword and if it's a Python keyword you can tell because it'll become a different color than your IDE so let's test that out here so if I were to write the variable let's say the X variable X variable equals 5 that's a variable it works let's print it out to see if it works so this is how you print it out you can just store that data into a variable and you can use that variable in your code so here and what's so good about variables is you can change it as you go on but I'll talk about that in a bit so as you can see we can print out five but if we name it something like if as you can see it's highlighted different color you're good an error it's just a syntax error and it thinks it's an if statement but it's actually not so also if you would sin if you were to name it with a space like vary X right see what happens so you can see it's also invalid syntax because there's a space and it thinks that X the variable and it has this var in front of it which python doesn't recognize so if we also try naming it with a symbol in front like one and then variable equals five we can see that if you run it we can see that it will also have a syntax errors so when you name variables you have to be careful with your name and it's just best to name it something simple so you can see it and type it easily when you code all right so let's move on so python uses dynamic typing which means that variables can be renamed and reassigned datatypes which I just talked about so it makes python a flexible language and in simpler words it means that we don't have to basically write what data type you want our variable to be so as you can see here we have the variable item which is the string vegetable okay and then if we want to rename the variable or change the variable all we have to do in the next line of code or in some line after item equals vegetable we can just name it item equals 42 and now the variable into all the lines after we need we name it the variable is 42 so let's demonstrate that here so if you were to have the variable X equals 5 and then we print X and then we do x equals 10 then we print X again let's see what happened so as you can see X is 5 here and then we rename X to be 10 so as you can see I run it and it just prints out X which is originally five and then we rename the variable after and we print it again in it's 10 so that's just what dynamic typing is all right so here are some examples of declaring variables as you can see paid equals 19 that's an integer change equal to 0.67 that's a floatingpoint value did pay equals true that's a boolean value and message equals thank you for your order that's a string it's pretty simple alright so when it comes to printing variables I showed it already but you just name your variable and then you can print your variable you notice how you can only print it after your variable is defined so if you print your variable try to put your variable before you define it let's say you prime X into X and then we name X equals 5 it will won't work and this is because when we try to print it X is not defined like I said earlier it's dynamic typing and it always goes from top to bottom Python reads your code from top to bottom so if you were to print or do something with your variable before you define it it won't work so you have to define the variable before you do something with that variable such as printed of it and also you can concatenate variables together by combining variables or string or variable or integer plus variable just to combine it with a plus sign so let's demonstrate that here so we do print and we can do hi my name is and then we do space and then age 14 so let me put this into quotation marks and then we can do age 14 let's put that as a string plus okay so name plus string and my image is space and then plus age so let's see what happens when we print this out as you can see it prints hi my name is Ethan and my age is 14 so that's how you concatenate variables and other data types together in Python all right so we have a quick quiz here so what would be the output if I ran this code so let's look at this code paid equals 19 change equals 0.67 day to pay equals true and message equals thank you for your order so these are the four variables we defined earlier as well but it's defining this code here and now we're printing paid change and message and notice how we have three print statements in three different lines so it's gonna print in three different lines and if you look here B is the only one where it prints in three different lines and it prints these three variables paid change and message so be it must be the correct answer so let's check our let's check if we're right yup so we can see that B is the right answer here all right so checking data types in Python so if you don't know what data type you have and you want to know what it is you can simply just print out the type and by to do this just to type inside the parentheses you want to see what whatever you want to check the data type is you want to put inside those parentheses it could be a variable but it could also just be a simple string number integer or float but as you can see here we define pay t equals 19 and then we check the type of paid by doing type in parentheses paid and then we print that out and as you can see this is what's gonna be printed it's going to be print class it's because 19 is an integer so let's test this out so say x equals seven hundred eighty nine point one two three so let's print the type which is gonna be float I think so let's check it yeah its float I notice how it has decimal points so it's a float value all right so typecasting is basically just converting one piece of data to another so datatype converting and if I wanted to convert a shrink to an integer you just have to put STR like the abbreviation we went over earlier in front of your variable so as you can see here we have the variable num equals five and then we're going to print the type of num right type and it's going to be an integer because five is an integer here and then here we read if we're redefining the variable okay so we have num equals STR so STR is a function to convert whatever you put in the parentheses it's called the argument into a string so if we do this it'll print and we print the type of num after we change the type it'll become a string let me do STR in front of it okay so let's test this out and let's say well I'm gonna show you that you can't always convert it because it has to make sense right so let's say I had the string word equals hello and I wanted to convert this to an integer all right so that's first of all let's check type type or it's a string so we can check it it's a string STR and now let's do word equals int work okay and then let's try to print it out let's just try to print word out and see what happens as you can see we can error value error 'invalid literal for int with base 10 because Hello is not a base 10 integer it's not a number so if you think about it it's like an invalid argument word is not going to be able to be converted to an integer in the int function because if you think about it Hello is basically not you can't convert hello to a number right all right let's move on now here's another example this is just converting a string to an integer here you can see that the string 5 is convertible because 5 is an integer right so you can convert it to an integer alright and that's it so thank you guys for watching and yeah