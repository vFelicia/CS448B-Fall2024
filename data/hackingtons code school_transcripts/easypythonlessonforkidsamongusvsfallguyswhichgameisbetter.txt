00:00 - fall guys versus among us what is the
00:02 - most popular game in the world right now
00:04 - let's find out right now
00:06 - right this second let's do it so i'm in
00:09 - replit i have my python project
00:11 - opened up here let's go ahead and let's
00:13 - find out from the user which one they
00:15 - like better
00:15 - so i'm going to create a variable called
00:17 - player underscore choice
00:18 - a variable is a container that holds
00:22 - some information that way we don't have
00:24 - to use the information directly we can
00:25 - use the variable in multiple different
00:27 - spots
00:28 - and every single time we use this
00:30 - variable we are referencing
00:31 - the actual data i use underscores in my
00:34 - variables but you can feel free to use
00:36 - what's called
00:36 - camel case where the first word starts
00:39 - with a lowercase letter and then every
00:40 - subsequent word
00:41 - has a capital letter so that you can
00:43 - read it but it is up to you
00:45 - i like underscores personally then we're
00:47 - going to set this equal to
00:49 - a value we're going to assign it a value
00:51 - that value is going to come
00:52 - from a function the function is called
00:54 - input this is a function that is built
00:57 - into python
00:58 - we didn't create this function python
00:59 - just has it for us to use
01:01 - every single time you use a function
01:03 - there are parentheses
01:05 - involved inside of those parentheses are
01:07 - what's called a parameter
01:09 - some functions have parameters some
01:11 - don't input
01:12 - has a parameter it's referencing a
01:14 - prompt
01:15 - a prompt is just the question you're
01:17 - going to ask somebody the input is
01:19 - looking for either a variable name
01:20 - that references a string or a string
01:23 - itself
01:24 - strings are wrapped in quotes you can
01:25 - use double or single
01:27 - now we're going to go ahead and ask the
01:29 - user do you
01:30 - like among us or fall
01:33 - guys more question mark and then
01:36 - personally i'm going to put a space
01:38 - just so that their answer doesn't run
01:40 - right up against that question mark
01:42 - now this player choice is going to store
01:45 - the actual input that the user types
01:48 - it's not storing the function
01:49 - it's storing a reference to what the
01:52 - user typed in so if i hit run
01:54 - here and i type in among us
01:58 - the player choice variable is storing is
02:00 - referencing the string
02:02 - among us so i'm going to do an if
02:05 - statement an
02:06 - if statement is a conditional it
02:08 - evaluates a statement
02:10 - and then does something based on what
02:12 - that evaluation came out to
02:14 - so we're gonna let the computer make a
02:17 - decision
02:18 - we're giving the computer way too much
02:19 - power but it's okay we're gonna get
02:21 - through this together
02:22 - so i've typed in the keyword if and then
02:25 - i'm gonna put some parentheses in python
02:27 - these parentheses are optional but
02:29 - i like using them because it helps me
02:30 - organize my thoughts
02:32 - and then i'm gonna put a colon that's
02:34 - the two dots a semicolon is a dot and a
02:37 - comma a colon is two dots
02:39 - we need those two dots let's go ahead
02:40 - and dive back into those parentheses
02:43 - and in here you can think of this like a
02:45 - parameter this is the
02:46 - conditional that we're testing and if
02:49 - statement only
02:51 - fires only executes if the conditional
02:54 - turns out to be
02:55 - true so player underscore choice
02:58 - we're going to compare the player's
03:00 - choice and if it
03:02 - is exactly two equal signs two equal
03:05 - signs is comparing
03:07 - if it's exactly equal to a specific
03:09 - string like
03:10 - among us and the string has to be
03:13 - identical so what the user typed in
03:15 - has to be this exactly capital a
03:18 - capital u all of that we're comparing
03:20 - what the user typed in
03:22 - to what we want the user to type in and
03:24 - then if
03:25 - that is true then whatever is tabbed in
03:28 - underneath that if statement is going to
03:31 - execute
03:32 - so we're going to go ahead and execute a
03:33 - print statement a print
03:35 - is another function and it takes a
03:37 - parameter we can just
03:39 - type in a string that says red sus
03:42 - all right this is one tab in
03:45 - from the left which means it's part of
03:47 - that if statement it will execute
03:49 - if that condition is true we're going to
03:52 - hit return to go to the next line and
03:53 - we're going to
03:54 - delete the tab we're going to go back to
03:57 - the left hand side
03:58 - and we're going to type in an else this
04:00 - evaluates
04:01 - if all of the other ifs that we put in
04:03 - there or or
04:04 - if else's that we put in there are false
04:07 - so if they didn't type in among us
04:09 - then else with the colon whatever is
04:12 - indented
04:12 - in underneath that else will execute
04:16 - something like print
04:19 - um i have 6 000
04:22 - crowns we'll just like flex on them
04:25 - because we're assuming if they didn't
04:26 - enter in
04:27 - among us they entered in fall guys so
04:30 - we're going to flex on them and tell
04:31 - them how many crowns we got
04:32 - so we're going to hit run here if i
04:34 - enter in among
04:36 - us it prints out red sus awesome let's
04:39 - try it again
04:39 - let's type in fall guys i have 6 000
04:43 - crowns
04:44 - now here's the little catch here if they
04:46 - type in something like
04:48 - cod and hit return then it's going to
04:50 - flex on them on crowns
04:51 - because we're only checking if they
04:54 - entered in among us
04:55 - and we're saying if they entered in
04:56 - anything else
04:58 - execute this print statement so maybe
05:01 - you can clean that up maybe you can get
05:02 - creative with it maybe do a little
05:04 - googling but that is the definitive way
05:07 - to test whether or not somebody likes
05:09 - among us or fall guys all right so we've
05:13 - built our program
05:14 - let's get credit for it in our address
05:16 - bar up here we're going to highlight
05:18 - the link that goes directly to our
05:20 - project now right click
05:22 - choose copy this is the link to our
05:26 - project
05:26 - with the code exposed if you want to
05:28 - link to your project
05:30 - without the code exposed we want this
05:32 - link right here
05:33 - let's go ahead and we're good with this
05:35 - we're happy with it let's right click
05:37 - and copy this link let's go back to
05:40 - hackins
05:41 - let's go to the showcase let's hit
05:43 - submit
05:45 - and then we can paste in our link
05:48 - we can give it a title among us verse
05:51 - fall guys
05:53 - mark it as python and then hit submit
05:56 - and it's
05:56 - on the showcase for everybody to check
05:59 - out that was your first python project
06:00 - congratulations you did an amazing job