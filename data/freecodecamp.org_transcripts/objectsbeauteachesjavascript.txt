00:00 - objects in JavaScript an object is a
00:03 - standalone entity with properties and
00:05 - type a property of an object can be
00:07 - explained as a variable that is attached
00:09 - to the object properties can be accessed
00:11 - using dot
00:19 - notation here I created an object called
00:21 - my car and then I
00:23 - assigned uh two properties car my car.
00:27 - make equals Ford my car model equals
00:32 - Mustang you can also create a property
00:35 - and not assign it a
00:38 - value so now my card color is going to
00:41 - be
00:50 - undefined now uh everything is case
00:53 - sensitive so you have to make sure the
00:55 - right things are
00:56 - capitalized and you can see um it's
00:59 - going to be car. make is Ford
01:02 - my. colors
01:05 - undefined properties in JavaScript
01:07 - objects can be accessed or set using
01:10 - bracket notation also what I just showed
01:12 - you was dot notation let me show you
01:14 - bracket
01:18 - notation so there's the bracket notation
01:21 - and also you can console. log with
01:24 - bracket notation
01:31 - and you can see it's going to pull in
01:33 - Mustang for the model a property name
01:35 - can be any string but if the name has a
01:37 - space or hyphen or starts with a number
01:39 - it must be accessed with bracket
01:52 - notation and it's going to use that
01:55 - property the property is do I like and
01:57 - then the value is going to log as I my
02:00 - carard you can use bracket notation with
02:04 - four in Loops to iterate over all the
02:07 - innumerable properties of an
02:11 - object just going to paste this
02:15 - in so here's the function the function
02:18 - is show props and we pass in the object
02:22 - and the object name uh one of the reason
02:25 - why you pass in the object and the
02:27 - object name is because JavaScript even
02:30 - though you're going to pass in the name
02:31 - of the object here it's not going to
02:33 - know the name of the object unless you
02:35 - pass it in as a string I'll show you
02:37 - that later ver for I in object that
02:42 - means for each property in the object
02:45 - and it's going to set the property to I
02:47 - so it's going to say if OB do has own
02:50 - property I so if it does have that
02:54 - property it's going to it's it's going
02:56 - to assign um this result which started
03:00 - out with as empty string is the object
03:03 - name and then it's going to put a dot
03:05 - and it's going to put the property
03:07 - equals and then it's going to show what
03:09 - the property equals because this is this
03:12 - is bracket notation we're going to take
03:14 - the the object which is going to be my
03:17 - car and then we're going to look for the
03:20 - property and we're just going to pull
03:21 - this property like for instance it's
03:23 - going to pull the property make model
03:26 - color and then even do I like
03:31 - and it's going to find out what that
03:33 - property equals using bracket notation
03:35 - well it's going to be a little make more
03:37 - sense if we actually run
03:41 - this and we're going to pass in my car
03:45 - that's the object and the object name is
03:48 - just the string my
03:51 - car I'm going to put that whole thing in
03:53 - a
03:57 - console.log and run
04:03 - okay see it's going to say my car. make
04:06 - equals for my car. model equals Mustang
04:09 - my car. year equal 1969 my car. do I
04:12 - like equals I hate my
04:14 - car I'm going to go over three ways to
04:17 - create an object we have object
04:19 - initializer Constructor function and
04:21 - object.create
04:23 - with object
04:25 - initializer I've already used that if
04:28 - you do VAR m car equals new object
04:31 - you're using the object initializer
04:33 - another way to do that is use the is
04:35 - using the following
04:37 - notation so if you put these little
04:40 - these little curly braces you can also
04:42 - Define an object so the first property
04:45 - color red Wheels four if you look at
04:47 - engine we are assigning engine another
04:51 - object so the the value of a property
04:55 - can be another object now let's look at
04:58 - the Constructor function
05:00 - another way to create an object is with
05:01 - the Constructor function first you
05:03 - define the object type with a
05:05 - Constructor function and then you create
05:07 - an instance of the object with new so
05:10 - here's the constructure function I'm
05:12 - saying function car and I'm going to
05:14 - pass in three um three um values make
05:17 - model and year and now we have to put
05:20 - this. make equals make this. model
05:22 - equals model this. year equals year the
05:26 - word this is saying that we need to uh
05:29 - apply the word this is talking about
05:32 - this object so the car. make is going to
05:36 - equal the make value that you pushed in
05:38 - the car. model is going to equal the
05:41 - model value we put in and then the car.
05:44 - year is going to equal the year value
05:46 - that we put in now we just create an
05:50 - object by calling my cars follows so we
05:53 - have my car equals new car I'm going to
05:56 - pass in Chevy Malibu 1993 another car is
06:00 - going to equal new car Mazda Miata
06:03 - 1990 and then if I just do
06:11 - console.log now you can always add a
06:13 - property to a previously defined object
06:17 - for
06:24 - example so even though we already
06:26 - created the the op object now we can
06:30 - even
06:39 - console.log and if we run that it's
06:41 - still going to know the color at the
06:42 - very bottom you can see
06:44 - black the final way I want to talk about
06:46 - creating objects is object.create
06:49 - objects can also be created using the
06:51 - object.create method this method can be
06:54 - very useful because it allows you to
06:55 - choose the Prototype object for the
06:57 - object you want to create without having
06:59 - to Define a Constructor function while
07:01 - showing how to use object. create I will
07:04 - also show how to define a method for an
07:07 - object a method is just a property of an
07:09 - object that is a
07:11 - function so let me just paste this in so
07:14 - first we're going to define the
07:16 - prototype for our animal is going
07:20 - to um have type equals invertebrates
07:24 - this is just a default option for for
07:27 - animal so if we put type invertebrates
07:30 - the default is going to be in vertebra
07:31 - so we can change it we're also going to
07:34 - create a property that's a function so
07:37 - when you create a property that's a
07:39 - function it's called a
07:41 - method so data type is going to be the
07:44 - function console.log this.type so it can
07:49 - actually do something it's not not just
07:51 - a value so down here VAR animal one
07:54 - equals object.create animal so we're
07:57 - gonna pass in this animal prototype into
08:01 - creating the object so now it assigns
08:03 - animal one this whole thing and
08:07 - then we can run animal. display type and
08:10 - it's going to display type
08:11 - invertebrates however if we create
08:14 - another animal animal fish equals
08:16 - object. create animal and then do fish.
08:18 - type equals fishes when we display type
08:21 - it's going to be using the
08:25 - fish and you can see at the end
08:27 - invertebrates fish well there's a lot
08:29 - more to learn about objects but those
08:30 - are the basics stay tuned for more about
08:32 - objects and future videos thanks for
08:34 - watching my name is Bo KS don't forget
08:36 - to subscribe and remember use your code
08:38 - for good