00:00 - this comprehensive course will teach you
00:01 - how to turn your idea for an app into a
00:04 - reality all from a business perspective
00:07 - professor sluter is an experienced
00:09 - teacher and he's great at explaining
00:11 - things so anyone can understand
00:18 - [Music]
00:20 - hi in this video we're going to talk
00:22 - about the business of building mobile
00:24 - apps normally in this channel you think
00:26 - about apps and the technical parts of
00:28 - how to program them how to design them
00:30 - how to troubleshoot them how to make
00:31 - them work and now we're going to talk
00:33 - about maybe the business side of it so
00:35 - if you're kind of a business person or
00:37 - you're looking into changing your role
00:39 - from a programmer into a team lead or
00:42 - business leader then this is going to
00:44 - have some good advice for you so here's
00:46 - what's ahead of us in the next few
00:48 - videos in this video we're going to talk
00:50 - about the motivation for building an app
00:52 - because if you don't know why you're
00:53 - building an app you're probably going to
00:55 - fail
00:56 - in soon videos we're going to talk about
00:58 - effective design and making your app
01:01 - work for your users so you ask your user
01:04 - what they want and build exactly what
01:06 - they need rather than choosing the
01:08 - features that you like and are cool the
01:11 - next part is about marketing we're going
01:13 - to look at how you can actually turn
01:15 - your app into something successful that
01:18 - people want to use how do you make money
01:20 - on it and whether you support a business
01:23 - or you're trying to create a business we
01:25 - need to ask the principals about
01:27 - supporting and monetizing
01:29 - also
01:30 - many users just ignore their apps they
01:33 - install it once and then forget about it
01:35 - so what makes the difference between the
01:37 - apps that are sticky and the ones that
01:39 - get thrown away or ignored so there are
01:42 - some pretty standard principles for how
01:44 - to build an addictive app and increase
01:47 - user loyalty
01:48 - also what's the tools what do we do when
01:51 - we come to decide on which language
01:54 - which platform cross-platform
01:57 - which frameworks what's going to happen
01:59 - in the future how am i going to find
02:01 - employees to work for and now we're
02:03 - going to see all of these questions in
02:05 - one of the most critical technical
02:07 - decisions that you can make about
02:08 - building apps is choosing the right
02:11 - tools
02:12 - also not just the tools for building
02:14 - your app itself but the supporting
02:16 - infrastructure
02:18 - what's called the full stack involves
02:21 - not only just the things that you see on
02:23 - the screen
02:24 - but the databases behind it the cloud
02:27 - services the integration between
02:29 - websites and mobile apps and so there's
02:32 - a lot of technology that is unseen and
02:36 - if you're not a technical developer this
02:37 - could be a huge blind spot
02:39 - and so we'll talk some advice about how
02:42 - to build
02:43 - for a more scalable cloud service and
02:46 - now we're going to talk about speaking
02:48 - of your technical people how do you
02:50 - choose a development team what's the
02:53 - right way to create a job requisition
02:55 - what's the right way to find the right
02:57 - person that would actually help you
02:59 - and so we're going to give you some
03:01 - advice for hiring people and choosing
03:04 - the right people that will make their
03:06 - career a happy place
03:08 - if you are their manager and then
03:10 - finally what are some emerging trends so
03:13 - you don't want your app to
03:14 - be expensive and
03:16 - be replaced on a regular basis you want
03:19 - it to be able to grow and expand and
03:22 - what's coming down the road what things
03:24 - are we going to do with our mobile apps
03:26 - that we don't do very well right now and
03:28 - so that's some of the things that are
03:29 - ahead in the videos that are beyond now
03:32 - first of all we're talking about the
03:34 - motivations and so that's why you came
03:35 - to this video
03:37 - what reason do you have if you want to
03:40 - make an app so some people it's about
03:42 - money some people are solving problems
03:44 - maybe you are just trying to make things
03:46 - that people love to use or you're trying
03:48 - to save the world
03:50 - now you might ask
03:51 - why an app then if i'm going to build an
03:54 - app are there better ways to invest my
03:57 - money is the app the right solution you
04:00 - have to understand your problem before
04:02 - you begin typing obviously
04:04 - and so apps are expensive web apps might
04:07 - be better
04:08 - a good app for a bad business plan is
04:10 - probably going to fail and so make sure
04:13 - that you answer some of the fundamental
04:15 - questions about why you're building an
04:17 - app in the first place
04:19 - of course some people are going to say
04:21 - the motivation is just that i've heard
04:23 - you can make a ton of money as an app
04:25 - developer and an app creator well for
04:28 - some people yeah it's true there's a one
04:31 - percent club that seems to do very well
04:33 - at that but for the rest of us
04:35 - not so much maybe you have a good
04:37 - motivation to say my app is going to
04:40 - save the world some way i'm going to
04:42 - reduce carbon emissions i'm going to
04:44 - help people with anxiety i'm going to
04:48 - provide services for the underserved i'm
04:50 - going to promote racial harmony i'm
04:53 - going to make our government work better
04:56 - and so there's a ton of things that you
04:58 - can provide services for that you could
05:00 - put into this category of
05:01 - saving the world and maybe you don't
05:03 - even have to make much money at it but i
05:05 - bet in the long run if you really come
05:07 - up with one of these solutions that you
05:09 - say you are you're on the success track
05:11 - already even though money wasn't your
05:13 - first motivation
05:15 - however what you have to get right
05:18 - is this question here
05:20 - what problem are you trying to solve
05:22 - and so we're going to take an entire
05:24 - video in just another one or two steps
05:27 - here to figure out how you can identify
05:31 - what problem needs to be solved if you
05:33 - don't get this one right
05:34 - you haven't gotten anything right so
05:36 - solving a problem
05:38 - is the
05:39 - fundamental problem of designing and
05:43 - managing your app so in the world of
05:45 - apps
05:47 - there is this huge
05:48 - uh ocean of apps to choose from a very
05:52 - small percentage of those show up on the
05:54 - top as a matter of fact
05:56 - i think 60 or more are never downloaded
05:59 - uh most never make any money
06:02 - and so
06:03 - your pro your proposition
06:05 - isn't so much about how can i make money
06:07 - but it's how can i solve the right
06:10 - problem
06:11 - clearly
06:12 - there is an app for every need
06:15 - but there's not a need for every app
06:17 - so most apps are used once and then
06:20 - uninstalled
06:22 - there are a great many solutions out
06:24 - there that are probably similar to the
06:26 - idea that's brewing in your head right
06:28 - now
06:29 - and you better be darn sure that there
06:31 - are customers that you can identify
06:35 - that actually want to use your app and
06:37 - even more
06:38 - are willing to pay you money or
06:40 - desperate to give you money if you've
06:42 - got the right solution
06:44 - so what you need to do in your
06:46 - motivation stage of an app is to think
06:49 - about the value
06:51 - you provide
06:52 - so let's think for a second about one of
06:54 - the most popular apps and one of the
06:56 - greatest success stories in app
06:58 - development
06:59 - let's talk about airbnb
07:01 - if they were to state their value
07:03 - proposition you might think it was this
07:05 - one here
07:07 - they said
07:08 - airbnb allows travelers to stay in a
07:11 - room that is less expensive and better
07:13 - than hotel rooms
07:15 - now i wrote that value proposition i'm
07:17 - not the obviously the ceo of airbnb but
07:20 - i'm thinking
07:21 - this might be their value proposition
07:23 - i'm their customer and this is what they
07:25 - provide me
07:26 - well i'm kind of their customer but
07:29 - really their customer is not me i'm the
07:32 - customer of the person renting the room
07:34 - so the customer for airbnb is the person
07:37 - that has the property
07:38 - and so maybe a better way for their
07:40 - value proposition to be stated would be
07:42 - something like this i want to enable
07:45 - property owners to make money
07:48 - by renting space
07:50 - and so you can see the formula here is
07:52 - that in one sentence
07:55 - they can justify the expense and the
07:58 - business
07:59 - model that they're trying to build
08:02 - and so airbnb might be an app but really
08:05 - it's an app that is a business or
08:08 - business that is an app
08:10 - so your value proposition this is your
08:12 - homework you've got an idea right now
08:14 - for an app can you state it in this term
08:18 - that my value proposition for my app is
08:20 - something like
08:22 - x
08:22 - my business x
08:24 - is a service that allows y
08:28 - y is my customer
08:30 - that allows y to do z
08:32 - in a better way
08:34 - and so you have to be very specific
08:37 - on each of these
08:39 - what do i do
08:40 - who do i do it for
08:42 - and why is it better than the
08:43 - competition
08:45 - so
08:45 - do your homework see if you can write
08:47 - out a clear statement
08:50 - and if you can
08:52 - not only are you sure about what you're
08:54 - going to be working on but your proposed
08:57 - investors
08:58 - and employees
08:59 - and your entire organization has a clear
09:02 - vision
09:02 - of what you're trying to do
09:05 - so your business might need an app to do
09:07 - its service
09:08 - but a better question to start with is
09:11 - are there people who need to do why
09:13 - are there people that are willing to pay
09:15 - you to do it
09:16 - and so this is your homework before you
09:18 - even begin to write code let me give an
09:20 - example so i look at my phone and i have
09:23 - this app on my phone called all trails
09:26 - now i hate paying for software probably
09:29 - just like you
09:31 - i have microsoft office only because my
09:33 - employer pays for it
09:35 - i try to get the free stuff whenever
09:37 - possible
09:38 - now all trails is an exception to that
09:40 - for some reason i'm willing to pay
09:42 - thirty dollars a year for this app on my
09:44 - phone why is that
09:45 - well it's because i am their target user
09:49 - i love hiking i like backpacking and so
09:51 - if you look at what they're trying to
09:52 - say my proposition is
09:55 - you can plan ahead with detailed maps
09:57 - you can navigate on the trail so my gps
09:59 - tells me exactly where i am
10:01 - and so i don't get lost in the woods
10:03 - which of course has happened
10:05 - and so as a result they have identified
10:08 - exactly who their customer is they know
10:11 - who i am
10:12 - and
10:13 - even though it pains me i am willing to
10:16 - offer them money on a yearly basis
10:18 - because they do this better than anyone
10:20 - else and so they found their niche they
10:23 - found their persona they found their
10:25 - customer and they provide me value that
10:27 - i'm willing to pay for
10:29 - now here's the other example so
10:31 - if you are an elementary classroom
10:34 - teacher or you know somebody
10:36 - you could that does that you could
10:38 - probably ask him do you use class dojo
10:41 - in your in your room
10:42 - so you're probably not an elementary
10:44 - teacher just by statistically speaking
10:46 - but here's what it is 95
10:48 - this is a huge market penetration they
10:50 - say 95 percent of schools use this app
10:54 - in their classroom
10:55 - so why in the world
10:57 - does everybody adopt it well you can see
10:59 - first of all it's free
11:01 - and so that's a pretty easy proposition
11:04 - and it does exactly what a teacher needs
11:06 - so all of your classroom tools in one
11:08 - place there's a good value proposition
11:11 - so you can see they throw an example in
11:13 - front of you
11:14 - how many groups do you want in your
11:16 - classroom
11:17 - you can see that they are grouping
11:19 - people
11:20 - with the ease of an app
11:22 - and they could probably just show this
11:23 - right on the screen in front of the
11:25 - classroom to say hey random groups today
11:27 - click or you might say what does this
11:29 - app do for communicating with my parents
11:32 - you could also do things like keep track
11:34 - of classroom discipline or give bonus
11:36 - points to students you can modify their
11:39 - behavior you can keep track of things
11:41 - you can translate
11:42 - in other words they have found
11:46 - what a teacher needs they have either
11:48 - lived in the shoes of a teacher they
11:50 - were a teacher or they know teachers so
11:52 - well through study that their app now
11:55 - rests in 95 of all classrooms here in
11:58 - the united states and so your goal then
12:00 - is to have a value proposition for your
12:03 - service
12:04 - that fits somebody that somebody might
12:06 - be plumbers
12:08 - it might be accountants it might be
12:10 - kayakers it might be chiropractors
12:13 - bicyclists it might be hair stylist so
12:16 - you don't want to say well my app is for
12:17 - everybody anyone that has a car no you
12:20 - want to have people that have specific
12:21 - needs people that have car seats people
12:24 - that have babies people that commute to
12:26 - work
12:26 - whatever their issue is you have an
12:28 - identified solution for them and so like
12:31 - class dojo or the hiker app they have
12:34 - picked a segment and they know exactly
12:36 - who they want to serve also here's the
12:39 - question about the motivation do you
12:41 - really need an app
12:42 - or do you just need a better website
12:45 - because here is a principle if you're
12:47 - thinking about spending a whole lot of
12:49 - money on an app
12:51 - you can serve a great deal of your
12:54 - customers through a properly designed
12:57 - website so this is called mobile first
13:00 - web design and you can see in the
13:01 - example
13:02 - that a properly formatted page is just
13:05 - as easy to use on a phone as an app is
13:08 - and if you do it right you can have one
13:10 - server one set of code one programmer
13:14 - and you don't have all the expense and
13:16 - hassle of an app store
13:18 - and so maybe you should think about does
13:21 - my service or does my solution really
13:24 - require an app or can i just make it
13:26 - better with a website so fortunately
13:29 - google has given us some advice on
13:31 - what things people prefer
13:34 - in
13:35 - which format
13:37 - so as you can see the top of the list
13:39 - is heavy on tasks that people want to
13:42 - use an app for
13:44 - so games why would they care for games
13:47 - well probably performance you have high
13:49 - speed graphics you have better downloads
13:52 - games just work better when they're an
13:53 - app
13:54 - how about tracking your physical
13:56 - activities you probably have built-in
13:58 - heart sensors gps accelerometers you can
14:01 - tell how fast you're moving
14:03 - uh listening to music navigation so
14:05 - there are certain things up here that
14:07 - are focused in on the performance or
14:09 - feature of the phone so obviously
14:11 - pokemon go is going to work with an app
14:13 - and not a website
14:14 - now if you look down at the bottom you
14:16 - can see the opposite of the spectrum
14:18 - so don't bother with an app if you're
14:20 - trying to do one of these things so
14:22 - search or browse the internet
14:24 - find things to do order take out
14:27 - find things to do or eat organize your
14:30 - leisure or business travel read the news
14:33 - so all of these are probably just as
14:35 - well done or even better with a website
14:37 - so just use your chrome browser that's
14:39 - already built in on the phone and then
14:41 - you don't have to worry about building
14:43 - an app so think about some of these
14:45 - issues before you go out and hire a
14:46 - mobile development team and invest a lot
14:49 - of money so one of the next things we
14:51 - need to do is think about the categories
14:53 - of apps that you might want to develop
14:55 - what's the competition in these
14:56 - categories and how much money can you
14:58 - make a second question is
15:01 - who is your app for and so knowing your
15:03 - user is the second video that i
15:05 - recommend that you look at next
15:09 - [Music]
15:16 - hi and welcome to the business of
15:18 - applications we're talking about mobile
15:20 - applications and the business of making
15:22 - your ideas work and so here's the agenda
15:24 - that we're looking through on the class
15:26 - so we're in section one right now which
15:28 - is motivations for building an app
15:31 - so in this video we're going to talk
15:32 - about the categories of apps and which
15:35 - categories are profitable which ones
15:37 - that you actually have a chance of in
15:40 - competing and perhaps the one that
15:42 - you're best suited for based on your
15:44 - expertise and so let's look at the
15:46 - categories out there and help you make a
15:48 - decision about that great app idea
15:51 - that's in your head
15:52 - which category would be best for you to
15:55 - compete in and so let's talk about some
15:57 - of the things that we could do so first
15:59 - of all fact number one
16:01 - if you're trying to sell your app you
16:03 - may get some money for it if you put a
16:05 - price tag on it if you do we can know
16:08 - this that the average price for a
16:10 - premium app on the app store
16:12 - is two dollars and 17 cents now that
16:14 - sounds pretty good if you made a million
16:16 - apps
16:17 - but if you're in the majority of people
16:20 - you're probably far below this because
16:22 - when you think of what an app is
16:25 - most people expect it to be absolutely
16:28 - free and so the best way to make money
16:30 - is not actually to charge money for the
16:32 - app itself
16:33 - but to get it in other ways and so you
16:36 - could probably think about getting
16:38 - in-app purchases or trying to sell
16:40 - advertising which apps do the best by
16:42 - the way so if you're trying to put a
16:44 - price tag on your app you should
16:45 - probably think of who is willing to pay
16:48 - for it notice at the top we've got
16:50 - technology and finance yeah both of
16:52 - those are kind of rich people things
16:54 - or they're actually pretty useful things
16:56 - that uh solve annoying problems look at
17:00 - the very bottom though if you're like me
17:02 - you probably think games are cool
17:03 - they're kind of neat to build
17:05 - and they're also some of the things that
17:07 - people don't want to pay for so you're
17:09 - going to have to come up with other ways
17:11 - if you're going to make money for your
17:12 - app than just charging for it now here's
17:14 - a principle that would make sense if you
17:16 - want to actually compare you with the
17:19 - average so really there is no such thing
17:21 - as an average when it comes to our apps
17:24 - so think of the big monstrous companies
17:26 - do you really think you're going to make
17:27 - something like amazon or you're going to
17:29 - make the next mcdonald's app probably
17:32 - not so if you're comparing apps think of
17:34 - how a realtor would come up with a price
17:36 - for a house you don't just take the
17:38 - average price for the city you take a
17:40 - look at your house and you compare the
17:42 - same number of bedrooms bathrooms same
17:44 - square feet location's pretty close and
17:47 - then you have a better idea of what your
17:49 - app can do so instead of looking at
17:51 - these top lists of the
17:53 - averages or the top 100 in the internet
17:56 - look at people that are doing something
17:58 - that is like what you're doing and so
18:00 - another way to do this is to try to
18:02 - compare on scale so if you know that
18:05 - clash of clans makes over 2 million
18:07 - dollars a day in purchases
18:09 - don't just think that your app can
18:11 - somehow make 2 million either so what
18:14 - you need to do is maybe divide so how
18:16 - many customers does the app serve and
18:19 - how much do they make in a day and you
18:21 - can come up with something that is a
18:22 - little bit closer to what you can expect
18:26 - a better way to compare yourself with
18:28 - other people in the app store is to use
18:30 - the median instead of an average and so
18:33 - you know in a median you just take the
18:35 - middle score of a value so if there are
18:38 - some really high end people which there
18:40 - are
18:41 - that way the median isn't so much
18:43 - affected so take a look at premium apps
18:45 - here so i just stole this right out of
18:47 - the google app play store and to see
18:50 - what they're advertising so what people
18:52 - are willing to pay for in an app can
18:54 - tell you something about maybe the app
18:56 - that you're thinking about building
18:58 - and so it looks to me like we have no
19:01 - games here we've got some tools
19:03 - uh the star walk i think that's a cool
19:05 - one where you can actually
19:07 - use your phone to track where things are
19:09 - in the sky
19:10 - and so sometimes premium apps are there
19:13 - because people are willing to pay for a
19:15 - service without having to look at
19:17 - advertising so a good piece of advice
19:20 - for coming up with the amount of money
19:22 - that you're going to make is actually
19:23 - not to think about the money at all it's
19:25 - to think about who your customer is and
19:28 - how you can satisfy them so if you can
19:31 - scratch an itch you can meet their need
19:33 - you can solve a problem they're going to
19:36 - eventually pay you whether you charge
19:38 - them at the beginning or along the way
19:40 - and so your priority should be to think
19:43 - of how to make a great app that they
19:45 - love to use let's take a look at the
19:47 - first category that you'd come across
19:49 - in most app stores i think most people
19:51 - would think of social media is probably
19:53 - the most common app that they've got on
19:55 - their phone and so it's a crowded field
19:58 - all of these things that you're looking
19:59 - at here are probably one or two or many
20:02 - of them
20:03 - on your phone right now
20:05 - they're huge though so think of how big
20:08 - the apps are
20:09 - and how far away you are of actually
20:11 - competing against them so if you're
20:13 - thinking about building the next
20:15 - facebook you could probably do that in a
20:18 - semester so one of the courses that we
20:20 - teach uh
20:21 - uses a social network and you build
20:23 - connections and you have a database and
20:25 - you can add comments and send messages
20:28 - to your friends and so technically we
20:30 - got the solution put together in one
20:32 - semester but realistically the app is
20:35 - still worthless because
20:37 - nobody's on the app the the real value
20:39 - of a social media app is
20:41 - how many users do you have
20:43 - and so maybe a good strategy for you to
20:46 - compete in this category is to think
20:48 - about
20:49 - augmenting or adding on to something
20:52 - rather than competing against it so
20:54 - unless you've got the next tick tock
20:56 - you're probably not going to bump
20:57 - somebody off these are tough categories
21:00 - to compete in but here's an example of
21:02 - something that you might think of if you
21:03 - were in social media so here's a tool
21:07 - it augments what facebook does or maybe
21:10 - you could come up with some kind of a
21:12 - twitter
21:13 - actual add-on or something so think of
21:15 - the ways that you can make an existing
21:17 - app a little bit better
21:19 - now a great category for a beginner
21:21 - especially somebody that would be in one
21:23 - of my classes where you're learning how
21:24 - to program is to build a game
21:27 - so games are really a good place for you
21:29 - to start if you're just trying to
21:31 - experiment with the app store and build
21:34 - apps and try to get some customers
21:36 - not because you're going to make a lot
21:38 - of money but because
21:40 - games are a nice way to build an app
21:43 - that you can understand and what you can
21:46 - do
21:46 - instead of make money with your app is
21:49 - maybe just as good as you can add it to
21:52 - your portfolio what do you mean by that
21:54 - a portfolio is a collection of projects
21:58 - that you can show potential employers
22:01 - and you bring it to your interview you
22:02 - put it on your linkedin and you say
22:04 - listen i built this app
22:06 - and it's kind of like angry birds
22:09 - and it's got a bunch of graphics i used
22:13 - framework for building cross-platform
22:15 - apps i have a database i'm using a rest
22:17 - service i learned react and so if you've
22:20 - got all those keywords in there and you
22:22 - have this working game it's a really
22:24 - good project and i recommend that you do
22:26 - that if you're trying to get a job
22:29 - and maybe have someone hire you to be an
22:32 - employee for a company that builds apps
22:35 - and so you might end up working for
22:36 - pizza hut and ordering a pizza app
22:38 - instead of creating your own business
22:40 - but it's a pretty good job if you're
22:42 - going to be an app developer so i've got
22:44 - another video that compares the the
22:46 - prices and the salaries and the
22:48 - expectations about a web developer
22:50 - versus an app developer and it's worth
22:52 - checking out while looking at the chart
22:55 - here you can see that these are some of
22:56 - the most downloaded and they're also
22:59 - some of the most profitable apps that
23:01 - are in the market
23:02 - so social media and gaming probably
23:04 - dominate what we mostly think about
23:07 - about our phone purpose and what we do
23:09 - with it and so we're always on one of
23:12 - those two now look at this category this
23:14 - graph here
23:15 - is amazing um you can see that the value
23:18 - of daily revenue
23:20 - by category is like really skewed toward
23:24 - the games area
23:25 - and so twenty two thousand dollars a day
23:28 - is the average app revenue in the
23:30 - category then we split up the game
23:32 - category again and we can see that
23:34 - strategy games
23:35 - are the most profitable
23:37 - and so you might think oh great i'm
23:39 - gonna make a strategy game and get rich
23:41 - remember what i said about the uh the
23:44 - balance between an average and the
23:46 - median
23:47 - well this is where this math comes into
23:50 - play so the top
23:52 - game in the category
23:54 - back in 2016 was clash of clans and over
23:57 - 2 million dollars a day in revenue
23:59 - well then if you look at the 50th
24:01 - percentile which is pretty good
24:04 - you might squeeze out 150 a day well you
24:08 - could almost make a living on that maybe
24:09 - if you were just
24:11 - had no expenses and then if you look
24:13 - below you have the 20th percentile in
24:15 - other words the games that are probably
24:18 - the ones that you and i are going to
24:19 - publish they average
24:21 - zero dollars and so they might not even
24:23 - get downloaded
24:25 - another category that would be useful
24:27 - for you to experiment with if you're
24:29 - trying to get into the app market is
24:31 - this lifestyle category now for the life
24:34 - of me when i look at the apps that are
24:36 - in the lifestyle category i don't really
24:39 - see the theme what is lifestyle mean
24:42 - anyway i mean there's realtor apps
24:44 - and there's tinder and pinterest and
24:47 - it seems to me like
24:49 - baby monitors and e-harmony don't have a
24:52 - lot
24:53 - as far as the commonality of how the app
24:55 - works and so
24:57 - whatever whatever this category means it
25:00 - it's it's something that affects your
25:02 - life so fitness apps is something i can
25:04 - understand
25:05 - what does
25:06 - a fitness app gain that's pretty good
25:09 - you can see
25:10 - that this graph here shows the top 200
25:12 - fitness apps on their daily revenue
25:14 - whoever the first guy is he's making 45
25:17 - 000
25:18 - a day you could make a living at that
25:19 - one and the average is 1500 so once
25:22 - again let's take a look at the
25:24 - the median score rather than the
25:27 - averages so the 50th percentile once
25:30 - again
25:31 - zero
25:32 - so expect that if you're
25:34 - if you don't have a billion dollar
25:35 - company backing you up you're probably
25:37 - going to have
25:38 - that zero number so when you look at
25:40 - averages you should probably just ignore
25:42 - them because they are not going to tell
25:44 - you anything about
25:46 - you and your experience at all take a
25:48 - look here this is probably strava so
25:50 - this would be a typical winning home run
25:53 - app everyone seems to like this one so
25:56 - you can track yourself you can analyze
25:58 - your workouts and share with friends and
26:00 - make connections so a great tool and it
26:03 - seems to be clicking with everybody that
26:06 - is into exercise and so that would be
26:08 - one of the better lifestyle apps that i
26:11 - can think of so the key of a lifestyle
26:12 - app is to find something that people do
26:15 - and make it so that it works really well
26:18 - for meeting their needs
26:21 - another category that is really useful
26:23 - and this one actually where you can sell
26:24 - things is the utility category so what's
26:28 - a utility well the utility is something
26:30 - that enhances the operating system
26:33 - or does some kind of a task for you so
26:36 - for instance this one here is going to
26:38 - figure out
26:39 - where your empty spaces are and make
26:41 - your uh make your phone work better so a
26:44 - utility could be any of these on these
26:47 - this category list here so you can see
26:49 - that things such as adding fonts for
26:51 - some reason chrome is considered a
26:54 - category of a utility
26:57 - i would think of you know things that
26:58 - make your phone work better things that
27:00 - encrypt your data
27:02 - things that
27:03 - make your spam calls go away those are
27:05 - good utilities and so anything that
27:08 - would enhance your operating system
27:10 - would fit in the utility category
27:12 - a close relative of that is the
27:14 - productivity category and so people are
27:16 - usually willing to pay for productivity
27:19 - if they're going to have something
27:20 - useful
27:21 - so these are some of the most commonly
27:23 - used things some of the services that
27:25 - people would use on a regular basis so
27:28 - dropbox cloud storage note taking
27:32 - microsoft office
27:34 - any kind of tool that is going to make
27:37 - your job
27:38 - work better
27:39 - and so productivity apps are something
27:42 - that you can
27:43 - probably come up with as well do you
27:44 - have a problem do you have something
27:46 - that you're trying to work on you have a
27:47 - note-taking app do you have some kind of
27:48 - a score card do you
27:50 - work with pictures what what what does
27:53 - your utility need to do
27:56 - and if you can find a winning solution
27:58 - you can see that sometimes we can
28:00 - actually charge people now utility apps
28:02 - is probably the one place where you
28:04 - don't want to put ads
28:06 - ads are annoying of course even people
28:08 - that play games don't even like the ads
28:10 - even though they get spammed with them
28:11 - all the time but especially don't put it
28:13 - in a utility
28:15 - app your utility is supposed to save you
28:17 - time not annoy you and so try to come up
28:20 - with a way that you can give them the
28:22 - free version and then go to the freemium
28:25 - model so that way they like their
28:28 - experience
28:29 - a category called shopping of course is
28:32 - going to be dominated by the big people
28:34 - such as amazon and walmart but you don't
28:37 - have to once again compete directly
28:40 - against them i mean you're not going to
28:41 - come up with carfax that's like just not
28:44 - going to happen right but what you can
28:46 - do is think about that strategy of
28:48 - augment rather than compete
28:51 - because people are going to be using
28:52 - their phones to make purchases
28:54 - so if all you need to do is make
28:56 - recommendations for purchases and then
28:59 - send them to somewhere to buy such as if
29:01 - you're
29:01 - working with an affiliate program on a
29:03 - store
29:04 - then really you have taken a cut you've
29:07 - taken the slice and you can make a
29:08 - living if you have enough people looking
29:10 - at your ad and making a decision so some
29:13 - kind of a price comparison now news and
29:16 - information another category that has a
29:18 - lot of variety in it so if you look here
29:21 - you can see that some of these are
29:23 - actual
29:24 - people that make news such as the wall
29:26 - street journal or the washington post
29:28 - once again
29:29 - good luck in trying to compete against
29:32 - an established newspaper what can you do
29:35 - well take a look at police scanner for
29:37 - example
29:38 - what they're doing is they're taking
29:40 - existing data and they're packaging it
29:42 - in a way that the user can see it
29:44 - other things such as your news
29:47 - aggregators so if you could come up with
29:49 - an app that is able to predict what the
29:52 - user is interested in you look at their
29:54 - habits and see what stories they read
29:56 - you can give them more stories that
29:58 - would be similar
29:59 - and you can probably make their news
30:01 - reading experience better and so you
30:03 - don't have to be a reporter you don't
30:05 - have to own the newspaper you just have
30:06 - to be able to organize the data and
30:08 - deliver to the user
30:10 - now here's a good category if you've got
30:12 - a specialty
30:14 - of what you know and you want to share
30:16 - it
30:16 - go with education so education could be
30:20 - anything like
30:21 - language learning or math those seem to
30:24 - be the two that are like the leading
30:25 - categories
30:27 - uh coursera is something that obviously
30:29 - you're not going to compete with if
30:30 - you've ever looked at coursera it's like
30:32 - universities across the world publish
30:35 - entire courses and coursera is just
30:38 - publishing those in a nice format but if
30:41 - you have some special content
30:43 - you might be able to sell it so for
30:45 - instance let's say you're an expert
30:47 - guitar player you could offer guitar
30:49 - lessons with your app
30:51 - or if you're going to help people learn
30:54 - reading or maybe english is a second
30:56 - language or if they just need to learn
30:58 - how to do a hobby do they need to learn
31:01 - how to ride their bike play ping pong
31:03 - they need to learn how to fix their car
31:05 - they need to fix an air conditioner i
31:07 - mean education is really what we hit the
31:09 - internet for
31:10 - and if you've got an app that can make
31:12 - it work
31:13 - then you've got yourself a market
31:15 - so here's a page that i thought was very
31:17 - handy for figuring out what kind of
31:19 - categories you want to compete in so
31:21 - this is kickstarter and i'm looking at
31:23 - the page called apps that were recently
31:26 - funded
31:27 - and so these are idea pages where you
31:30 - can think about what people are building
31:32 - now that really are not big yet
31:36 - and so there's room for uh competition
31:39 - obviously if these people are successful
31:41 - so you notice the first one that's on
31:43 - here it's called fluent forever it's a
31:45 - learning education app
31:47 - look at here the next one called seed
31:49 - time the fastest way to plan your garden
31:51 - kind of a utility
31:53 - free photo prints that one looks like
31:55 - more of a business than it is an app
31:58 - you can see that we got scripture
32:00 - listening uh we got
32:02 - learning to code so two educational apps
32:05 - here so i would i would go through this
32:08 - and just get ideas from
32:11 - who else is out there that is at pretty
32:14 - young stage in their in their life of
32:16 - their company
32:18 - and you might find some ideas that can
32:19 - help you
32:20 - trigger what might work for you so
32:22 - here's a list of the top uh educational
32:25 - category apps right now and you can see
32:27 - that we've got a few things that are
32:29 - doing math and language it seems that's
32:32 - a pretty popular one
32:33 - so let's sum up here what we're trying
32:34 - to learn so perhaps the best lesson is
32:37 - if you're trying to pick a category for
32:39 - building an app and choosing the idea
32:41 - that works for you
32:43 - then go for this first principle
32:46 - pick something you know a lot about
32:50 - because if you're trying to solve
32:52 - somebody else's problem
32:55 - that might work but it's going to take
32:56 - some very
32:58 - careful research and interviews and
33:01 - you're probably going to have to walk in
33:02 - the other person's shoes for a while but
33:04 - if you've already got an idea you've
33:06 - already got a problem you already got a
33:07 - field that you're good at
33:09 - then you know a lot of the things that
33:11 - you need to do principle number two make
33:13 - sure that instead of focusing on which
33:16 - app is going to earn the most money
33:18 - think of it maybe as
33:20 - which app can i build that will make
33:22 - people super happy
33:24 - with my product i'm going to make
33:26 - something that people love to use and
33:29 - then you can figure out the money later
33:31 - and so that's maybe the best principle
33:33 - for which order you think in
33:35 - and part number three
33:37 - if you have a
33:38 - mega category such as social media and
33:42 - you know you're never going to replace
33:44 - amazon or facebook then what can you do
33:48 - what you can do is create an app that
33:50 - can make the experience slightly better
33:52 - for the user and so those principles
33:54 - here are going to help you in which
33:56 - category you want to choose to build
33:58 - your app one of the jobs that you have
34:00 - to do if your app's going to be
34:02 - successful is identify a problem that
34:04 - people have and so check out this video
34:06 - that helps you do that the second thing
34:09 - is you need to be able to identify the
34:11 - user that you're trying to serve with
34:14 - precision you know exactly who's going
34:16 - to use your ad so check one of these two
34:18 - videos out for the next step in learning
34:20 - the business of apps
34:23 - [Music]
34:30 - hey welcome back to the business of
34:32 - applications in this course we're
34:33 - studying some of the motives and some of
34:35 - the design that you would do if you are
34:37 - building an application so we're in the
34:40 - first part of the course still we're
34:41 - talking about the motivations for an app
34:43 - but as you can see there are other
34:45 - course items that are coming so stick
34:47 - around
34:48 - and if you want to see them all make
34:50 - sure that you subscribe my name is shad
34:52 - slooter and i teach application
34:54 - development at grand canyon university
34:56 - so let's get into this subject today so
34:58 - we are trying to find a problem to solve
35:01 - that's pretty much fundamental when it
35:03 - comes to designing an application you
35:05 - have to ask yourself what's the motives
35:07 - why are you doing it and in this video
35:09 - we're going to talk about some
35:10 - strategies that you can do to discover
35:13 - problems that people have and how you
35:15 - can solve them here's the principle of
35:17 - what we're trying to present here in
35:19 - just one sentence that an idea that does
35:22 - not fulfill a need
35:24 - is really not a business opportunity so
35:26 - you've got a great app but nobody cares
35:28 - you might as well not even build it so
35:31 - here is a analogy that has been used in
35:34 - many different situations like this when
35:36 - you talk about coming up with a need for
35:38 - an app
35:39 - so
35:40 - are you selling candy
35:42 - are you selling vitamins
35:44 - or are you selling painkillers so let's
35:48 - talk about what that means because we're
35:49 - obviously not selling any of these but
35:51 - we're using them as an analogy
35:53 - so kevin fong gets credit for
35:56 - this uh analogy here so he's
35:59 - an entrepreneur from silicon valley and
36:02 - uh this is his quote so he says we
36:04 - divide business plans into three
36:05 - categories candy vitamins and
36:08 - painkillers
36:09 - so he dismisses candy as just junk it's
36:12 - things that we just discard without much
36:14 - thought
36:15 - we look at vitamins we know that they're
36:17 - good for us but don't really use them on
36:20 - a regular basis
36:21 - and he says we really
36:23 - like painkillers now when he says we
36:25 - he's talking about the venture funding
36:28 - people these are the angel investors
36:30 - these are the people you need to talk to
36:32 - to get money to make your business work
36:34 - and if he says we really like
36:35 - painkillers he says you must have a
36:39 - problem
36:40 - identified
36:41 - and
36:42 - people are willing to pay you for it
36:44 - then he says
36:45 - we especially like
36:47 - addictive painkillers
36:49 - and so painkillers are the products that
36:51 - you can't live without
36:53 - so let's look at each of these
36:54 - categories individually so a a piece of
36:57 - candy is something that is perhaps what
37:00 - you would call a game app something
37:02 - that's cool it's fun
37:03 - it could be a fad and disappears quickly
37:06 - and so that's the danger of of of a fun
37:08 - app so i know it's fun i'm wasting my
37:10 - time but i like it so have you ever
37:12 - played trivia crack
37:14 - yeah i played it too
37:15 - it came and went like within months
37:18 - maybe you're not the right age group to
37:19 - remember it but it was certainly a piece
37:21 - of candy it was fun they probably made a
37:23 - lot of money but it didn't stick around
37:25 - how about this one though clash of cl
37:27 - clans uh that certainly is candy it's
37:29 - kind of eye candy it's fun to play with
37:32 - just recently i checked the stats on it
37:34 - and they made 20 million dollars last
37:36 - month in revenue so
37:38 - even though candy can be a fad if you
37:41 - sell really good candy you're going to
37:42 - sell a lot of it
37:44 - here's the idea of vitamins though
37:46 - if you look at a feature or an app and
37:49 - you say this about it you say that's a
37:51 - really cool idea
37:53 - i could probably use it i mean you can
37:54 - justify it and say it is nice and all
37:57 - but
37:58 - you might forget about it you say it's
38:00 - good
38:01 - and then it doesn't stick around so for
38:03 - instance
38:04 - i have the amazon
38:07 - echo um alexa in our house
38:10 - they bought it for my birthday and it's
38:11 - fun to play with right so i can say
38:14 - alexa play some music and then off in
38:18 - the distance musical station based on
38:20 - your listening history
38:23 - [Music]
38:24 - alexa stop
38:27 - [Music]
38:28 - just a minute i'll be right back
38:32 - [Music]
38:35 - okay so i consider alexa to be fun
38:39 - uh but you know if you took her away
38:40 - from me i could probably still do life
38:42 - just fine so she's convenient to yell at
38:44 - to argue at and to have you tell some
38:46 - jokes but really she's in my case she's
38:49 - a vitamin she's nice to have now the
38:52 - painkillers though are a different
38:54 - situation so
38:56 - when you say this when you say
38:58 - something's wrong
38:59 - i need this now
39:01 - here's my credit card and by the way
39:02 - what did it cost that means that you've
39:04 - got a product that suits a need so well
39:08 - that you're going to be
39:10 - you're going to be covered with
39:11 - customers people are going to come to
39:13 - you asking
39:14 - when they can sign up and so sales are
39:16 - really easy and it's probably an
39:18 - addictive app because if people really
39:20 - want to pay you that much they're going
39:22 - to so i looked at my computer and i
39:24 - thought what are the apps that i
39:26 - must use i can't live without and pretty
39:29 - much anything that is made by google
39:31 - seems to fit this category so
39:33 - for instance could you live without a
39:35 - good search engine can you find your way
39:37 - around without maps can you find stores
39:39 - can you locate things can you send and
39:42 - receive email without thinking about
39:43 - gmail
39:44 - really those three are pretty successful
39:47 - now microsoft has office which has
39:49 - pretty much become the default standard
39:51 - for any kind of the utilities that i
39:53 - work with
39:54 - i know there's free alternatives but
39:56 - office seems to just come back all the
39:58 - time for instance right now you're
40:00 - looking at a powerpoint presentation
40:02 - i've certainly tried to get rid of
40:03 - powerpoint but i keep coming back to it
40:06 - so the idea is that you want to have a
40:08 - solution that is
40:11 - addictive and people cannot live without
40:14 - so that's really what a painkiller so
40:16 - here's a nice quote that says once we
40:18 - come to depend on a tool
40:21 - nothing else will do and so you've come
40:24 - up with a good painkiller solution for
40:27 - your app if you can build this app
40:29 - you're going to be rich you're going to
40:31 - have many many users
40:33 - but you can see that sometimes apps fit
40:36 - into
40:37 - multiple categories so let's talk about
40:39 - facebook
40:40 - is facebook to you a
40:42 - piece of candy
40:44 - is it a vitamin kind of nice to have
40:46 - or is it a painkiller
40:48 - so look at the first guy obviously on
40:50 - the top row
40:51 - he's bored
40:52 - and to him facebook is as good as
40:55 - playing
40:56 - a video game so he might just pass the
40:59 - time
41:00 - and then the second one is perhaps this
41:02 - mother here who is
41:04 - probably more dependent on facebook
41:07 - she's talking to her friends she's
41:08 - scheduling meetings she's finding out
41:10 - what's going on
41:12 - but look at the grandma down in the
41:13 - bottom
41:15 - she is isolated she's far away
41:18 - she lives alone to her having facebook
41:21 - or zoom or any kind of social media to
41:24 - her is a painkiller it is something
41:27 - that she must have
41:29 - and so i i certainly uh visiting friends
41:32 - that are like this have discovered their
41:35 - dependence on it uh you know they ask me
41:38 - for technical help to say i gotta have
41:40 - my i gotta have my app
41:42 - this is the only way i stay in touch
41:43 - with my friends
41:44 - and so
41:46 - facebook would like to be the pain
41:47 - killer for us all uh for me it kind of
41:49 - fits somewhere in the
41:52 - uh nice to have category i honestly
41:54 - don't check it very often so a single
41:56 - product can be different things to
41:58 - different people and so don't just judge
42:00 - your product based on one person's
42:02 - opinion
42:03 - so here is another way to find out if
42:06 - you're solving the problem think about
42:08 - higher needs rather than the immediate
42:11 - need of your program what does that mean
42:13 - so for instance
42:15 - our higher needs are things like
42:18 - we have a desire for fulfillment
42:20 - or you might say we have a desire for
42:24 - belonging that's certainly a higher need
42:26 - and these are strong needs need for
42:28 - recognition i mean look i'm checking how
42:31 - many people are subscribed to my channel
42:33 - what in the world is the need here so
42:35 - youtube is solving a need for me that i
42:38 - hate to admit but i'm getting
42:40 - recognition through this tool how about
42:42 - security security financial security
42:45 - security in your relationships security
42:46 - of your home physical security the
42:48 - security of your job future and so
42:51 - sometimes products can help us with
42:54 - needs that are just as basic as food and
42:57 - water
42:58 - now here's a way to find out really what
43:00 - people's motives are this is a
43:04 - technique
43:05 - that was used in the toyota motor
43:07 - company and probably still today it's
43:09 - called the five wise and the idea is
43:12 - that you ask a bunch of whys to find out
43:15 - really what's at the bottom of
43:17 - somebody's request
43:18 - and so it requires literal digging and
43:21 - digging into their mind and into their
43:23 - psyche
43:24 - so you define the issue by asking the
43:27 - question why
43:29 - five times you say why is this happening
43:32 - and they give you an answer and then you
43:33 - say why is that and then you ask then
43:35 - again why is that and then finally when
43:38 - you get to the maybe about the fourth or
43:39 - fifth level there's really no specific
43:41 - number but somewhere down there you're
43:43 - going to find
43:44 - that there is a stronger reason than the
43:47 - one that was first given to you so in
43:50 - the case of toyota they ask questions
43:53 - like why did the production line stop
43:56 - and then the quest the answer is well we
43:58 - ran out of parts and then they asked
44:00 - well why did we run out of parts well
44:02 - the the manager refused to order uh
44:05 - extra supplies and he said why is that
44:07 - well he was trying to do lean
44:08 - manufacturing and he didn't want to
44:10 - spend the money
44:11 - on excess inventory well why is that
44:15 - well our stock price is getting hit
44:16 - because we have not used their money
44:18 - efficiently and so you can see that
44:20 - there's reasons behind why the
44:22 - production line may have stopped and so
44:24 - then they can address those bigger
44:26 - reasons if they can identify the whys
44:28 - behind it now when we talk about a
44:30 - product we do the same thing
44:32 - so we would come up with different
44:34 - solutions depending on how the user
44:37 - responds so let's say we want to build
44:39 - an application that produces recipes now
44:43 - what kind of recipes do we want we want
44:45 - ethnic recipes do we want home cooked do
44:48 - we want quick do we want diet so all of
44:51 - those questions are going to be asked
44:54 - at the uh at the panel you might have of
44:56 - users and your interviews and so let's
44:58 - ask this so
45:00 - somebody does respond to you in a
45:03 - request for your
45:05 - information to say hey i'm building an
45:07 - app that's going to do recipes and you
45:08 - say you need to make them or you need to
45:10 - use them so why is that
45:13 - and so the person says
45:15 - well i'd like to eat healthier well
45:18 - don't just stop there you say
45:20 - why do you want to eat healthier well i
45:22 - want to live longer
45:24 - okay so why do you want to live longer
45:26 - well that's pretty obvious
45:27 - i want to see my grandchildren
45:29 - okay
45:31 - so why is that important to you why do
45:33 - you want to see your grandchildren are
45:34 - they not annoying enough already when
45:36 - they're visiting you
45:38 - and she says family is important to me
45:43 - so
45:43 - there is a value at the bottom of this
45:46 - thing about
45:47 - i want recipes
45:49 - and really
45:50 - what this person says
45:52 - is i want food to bring my family
45:54 - together so that's a pretty powerful
45:56 - need isn't it and so if we're building
45:58 - an app to serve this person
46:01 - we would have maybe a slogan right this
46:03 - on the left side it says the right food
46:05 - brings family together now that sells to
46:07 - this person in particular
46:09 - but we might ask the same question and
46:11 - get different results so we might have
46:13 - to slant our advertising or the design
46:16 - of our app to this the right food can
46:18 - make you pretty so listen to this
46:19 - question so
46:21 - this person says i want new recipes
46:24 - okay why is that
46:26 - well i want to lose weight
46:28 - okay
46:29 - why do you want to lose weight
46:31 - i'm 30 pounds overweight
46:33 - okay why are you overweight
46:35 - i eat when i feel bad
46:38 - i think i do anyway
46:40 - and then why is that
46:42 - because people laugh at me often
46:45 - so these are obviously getting into some
46:47 - sensitive areas too
46:49 - and so if we can provide something to
46:52 - help an uh a person overcome their deep
46:56 - emotional problems then we've got a
46:58 - painkiller app
46:59 - so the right food
47:02 - can make you pretty i don't know maybe
47:03 - that's a lame way to advertise it but if
47:06 - we can make a product that will help
47:08 - people lose weight not just to get thin
47:11 - but to be liked
47:13 - then you've got yourself a painkiller
47:15 - app how about this one the right food
47:17 - can help you get ahead so same recipe
47:19 - app but we've got a different motive
47:21 - going on now so this next interview the
47:24 - person says to us
47:26 - i want new recipes
47:27 - and so we ask
47:29 - why
47:30 - then they say
47:31 - i only have 30 minutes to cook
47:34 - okay
47:35 - why are you in such a hurry
47:37 - i work full time
47:39 - okay don't stop there ask again
47:42 - why do you work full time
47:43 - well i want more money
47:46 - okay obviously what you have isn't
47:48 - enough so why do you need more
47:50 - because wealth is a status to me
47:53 - and so the conclusion is
47:55 - time is money right so i want more time
47:58 - i want my food preparation to take
48:00 - little time i've got bigger things to do
48:02 - i've got bigger fish to fry
48:04 - and so we could advertise the
48:06 - convenience of these recipes as well
48:09 - so now we've got ourselves we've got
48:11 - these different
48:12 - types of opinions and remember the goal
48:14 - here the video is to teach you how to
48:17 - identify the problem you're trying to
48:19 - solve so if your solution is build an
48:21 - app for recipes
48:23 - and you talk to a variety of people
48:26 - you might find that your initial reason
48:29 - or what you thought was the reason for
48:31 - the app is not actually the reason of
48:33 - what your users say
48:35 - so i love my family i feel ugly i'm very
48:39 - busy these are all reasons that are
48:41 - being input into your why you want to
48:44 - make your recipe app
48:46 - so if you do some research and you talk
48:48 - to a bunch of people and you start to
48:49 - hear the same things over and over then
48:51 - you start to make conclusions about who
48:54 - we're going to serve who's the first
48:56 - person on our list of of things that we
48:58 - want
48:59 - so most of the people that we let's say
49:02 - we talk to
49:03 - are saying i want to find healthy food
49:05 - and so comfort and quick and easy were
49:08 - not the highest priorities so the next
49:11 - steps for us would be to build an app or
49:14 - at least to design the features about
49:16 - identifying the nutrition
49:19 - about maybe the
49:20 - the benefits for the food that you're
49:22 - eating and how it can affect your health
49:25 - so in this scenario that i just set out
49:27 - to you you would obviously then
49:29 - fixate on healthy food and why that
49:31 - works so if you'd like some more
49:33 - information about how to discover that
49:35 - niche where your app can suit a need
49:37 - that no one else is meeting take a look
49:39 - at the next video about finding a niche
49:41 - if you'd like to take a look at all of
49:42 - the videos in this course about building
49:45 - apps in the business of apps then take a
49:47 - look at this playlist here and make sure
49:49 - you subscribe and join me for class next
49:51 - time thank you
49:53 - [Music]
50:00 - hey welcome back to the business of
50:01 - applications this is a series of videos
50:04 - that i'm working with my class on how to
50:06 - make your business thrive using
50:08 - applications and so this is a seven part
50:11 - series and we're in part one right now
50:13 - which is about the motivations of
50:15 - building an app but you can see that
50:17 - there are other chapters that we're
50:18 - going to cover here so if you like what
50:20 - you're seeing here make sure you
50:21 - subscribe my name is chad slooter and
50:24 - i'm a professor of computer science and
50:27 - software development at grand canyon
50:29 - university so please join my class here
50:32 - as we learn the business of apps so in
50:35 - this video we're talking about the idea
50:37 - of finding a niche in the market and so
50:40 - since it's probably pretty hard to
50:41 - compete against the really big mega apps
50:44 - we need to find something that makes
50:46 - sense for you
50:48 - and so there's some strategies in this
50:50 - video for making your product work
50:53 - so let's talk about a product niche
50:55 - what's inside of it well when you think
50:57 - of a niche in nature you think of
50:59 - something where there is little
51:01 - competition and so that's what we're
51:03 - trying to find here in your market is to
51:05 - see where there is unmet needs also make
51:09 - sure that there is a market so you might
51:11 - have a great idea because nobody else is
51:13 - doing it but there's a good reason is
51:15 - because nobody wants it and so you have
51:17 - to find a overlap here between what
51:20 - people want what's not being met and
51:22 - then also it would be nice to make some
51:23 - money to be able to pay for your app and
51:26 - so with these three intersect we would
51:28 - find a niche now these are obviously
51:30 - hidden because if
51:32 - that was a problem that everyone knew
51:34 - about then there would be an app in that
51:36 - niche already and so what we're trying
51:38 - to do is figure out where you can find
51:40 - your niche now the word niche usually
51:42 - comes from biology so when you think of
51:45 - a place where an animal lives where
51:47 - there are few competitors and that is
51:49 - able to thrive and so that is the idea
51:52 - of finding somewhere where no one will
51:54 - bother you and so if you think of the
51:57 - dung beetle this is a great example of a
51:59 - niche where nobody seems to want all the
52:02 - dung that's rolling around on the
52:03 - savannah in africa except for these
52:05 - beetles and they've got it all to
52:07 - themselves so if your business is
52:09 - collecting dung then there aren't a lot
52:11 - of competition for you
52:13 - so here's what it looks like in the
52:15 - market so if you hear somebody say we
52:18 - are the uber of
52:20 - or we are the amazon of you've got this
52:23 - mega leader in the category and you are
52:26 - trying to do similar things but in a
52:28 - smaller category so here's an example so
52:31 - this was what something i found on
52:33 - reddit in the app ideas
52:36 - thread so taskrabbit is one of those
52:38 - service apps where you can find somebody
52:40 - that's willing to work on something that
52:42 - you're willing to pay for and then
52:44 - taskrabbit takes a cut and so they said
52:46 - hey there's a unmet need here personal
52:49 - beauty care and so perhaps this is an
52:52 - idea
52:53 - wow that's an idea so maybe you could
52:55 - develop it it would take an entire
52:57 - business of course but get started so
53:00 - one way that you can find a niche is to
53:02 - see if there are new areas opening up
53:05 - that weren't there before and so that's
53:07 - called following the trends so if you
53:09 - were to just do google trends you can
53:12 - find what's going on
53:14 - month by month day by day or maybe over
53:16 - a longer period of time such as what
53:18 - people are searching for
53:20 - in the year
53:22 - so for instance 2020 it was a year where
53:25 - these were the items that were trending
53:28 - they didn't appear before and then they
53:31 - showed up so
53:32 - maybe you could come up with an idea
53:34 - that way more than likely most of these
53:36 - are just ideas that are
53:38 - in the media so what's a better way for
53:41 - finding a trending use pattern for
53:44 - mobile apps so i did some google
53:46 - searching to find out what trends are
53:48 - happening in mobile applications in
53:51 - general so look at here here's a four
53:53 - trends that are shaping 2020 so this
53:56 - deals with technology so the first trend
53:59 - is they see that pcs are still in place
54:03 - and what's the next one here number two
54:05 - wearable ownership is growing okay so
54:08 - there's an opportunity do you want to
54:09 - make something with a watch or glasses
54:12 - so it looks like that's on the trend
54:14 - upward how about this one the smart home
54:17 - market is growing so connecting your
54:19 - devices that's kind of an iot thing so
54:22 - is there an app opportunity there so i
54:25 - know for sure that in the canyon
54:26 - ventures a section of the university
54:28 - where i teach there are companies that
54:31 - are in this market what did you say
54:33 - canyon ventures was it's the
54:35 - entrepreneur startup section where
54:37 - businesses come and recruit students to
54:40 - work for them so these are new companies
54:42 - and they're growing so
54:44 - smart home market is one thing that i've
54:46 - noticed that was over there let's see
54:47 - what else is here gaming gear is busy
54:50 - well 2020 was the year of the pandemic
54:53 - and so gaming was a major major growth
54:56 - area so maybe those are some things that
54:58 - you could find as trends so google
55:02 - places like this to see if you can learn
55:03 - something about what's coming so here's
55:06 - another site that i found that had
55:08 - something about trends and mobile
55:09 - development so here we got 15 of them
55:11 - let's see if there's anything that we
55:12 - could follow as a trend here's the trend
55:15 - that says iot is growing so application
55:18 - integration looks like the trend is
55:21 - going to continue off into the future uh
55:24 - apps for foldable devices oh i don't
55:27 - have a foldable device but maybe that's
55:28 - on the future
55:30 - 5g can you take an app and
55:33 - take advantage of faster internet
55:35 - connectivity how about number four uh
55:38 - wearable devices that sounds like a
55:40 - previous blog item that we saw before
55:44 - beacon technology so beacon technology
55:47 - what in the world is that it looks like
55:49 - we can have down here a description that
55:51 - says
55:52 - clients install this app and when they
55:54 - go near another place where there's a
55:57 - beacon they get a notification
55:59 - i'm kind of skeptical that that will
56:01 - actually be a trend i really don't want
56:03 - people annoying me any more than they
56:04 - are but hey they say it is uh mobile
56:07 - commerce
56:08 - well that's kind of like a given
56:10 - artificial intelligence okay so that's
56:13 - pretty much a good trend
56:14 - mobile wallets uh augmented reality i
56:17 - would bet on this one as a trend
56:19 - and let's see chatbots uh superior app
56:22 - security i'll vote for that one
56:24 - predictive analysis so that way we can
56:27 - have more ai
56:28 - and then on-demand mobile apps i kind of
56:31 - like that so the idea is do some
56:33 - research figure out what the trends are
56:35 - and then see if you can come up with
56:37 - something that is going to fill a niche
56:40 - before everyone else jumps in on it
56:42 - here's another idea
56:43 - if you can find an app or a process or a
56:47 - game or something that exists and add a
56:49 - feature to it add a twist and make it
56:51 - yours so here's an example
56:53 - words with friends it's really just
56:56 - scrabble but then it's added the
56:58 - multi-player dimension to it some social
57:01 - media and you've got yourself an app
57:04 - that is still very strong and popular
57:07 - then you could also say well
57:09 - maybe words with friends just took a
57:11 - regular board game but you could also go
57:13 - look around at apps that you know exist
57:15 - so you look at one app and you look at
57:18 - another app and you think there's some
57:20 - overlap between those what are the
57:21 - features that i could do so if i could
57:24 - combine app a and b then i get what's
57:26 - called the twist
57:27 - and so you can invent a new app
57:31 - based on what you've already seen others
57:32 - do so really that's what a lot of
57:34 - inventions are it's just combining two
57:36 - other people's ideas into your own so
57:38 - there's hardly anything that's actually
57:40 - original here's an example of combining
57:42 - two apps so waze you haven't used waze
57:45 - it's basically a map like google maps
57:49 - and it allows you to talk to other
57:51 - drivers so you can plant a little pin on
57:53 - the map that says hey there's a police
57:55 - waiting here to give you a ticket and so
57:57 - essentially what they've done is take
57:59 - google maps and they've added some
58:00 - social media and enhancement to it and
58:02 - kind of made it a gamification so you
58:05 - can
58:06 - win points by taking trips
58:08 - whoever thought that driving would be
58:10 - that much fun but anyway waze was
58:12 - purchased by google for probably
58:14 - billions of dollars and so it was a
58:16 - successful spin-off of just the standard
58:20 - driving app
58:21 - now if you're trying to find a niche
58:23 - then maybe the most obvious advice of
58:25 - all is
58:27 - do your own thing what that means is do
58:29 - you have a specialty a need that you
58:32 - have to fill yourself there's not an app
58:35 - that exists for to do what you want to
58:38 - do for example here's an a fill your own
58:41 - need item
58:42 - just a quick glance at this shows me
58:45 - somebody
58:47 - came up with a brilliant idea to fix an
58:49 - annoying problem so this is a magnetic
58:52 - wrist
58:53 - and so it's just a velcro strap that
58:56 - goes around your wrist and with magnetic
58:58 - plates in it and you can glue all your
59:01 - nuts and bolts and screws and
59:03 - drill heads and even the pencil
59:06 - so you've got yourself something like a
59:09 - pocket
59:10 - but very much accessible or one-handed
59:12 - used pocket
59:14 - and so what a great idea this person
59:16 - came up with a simple solution to a
59:19 - problem that annoys almost all of us
59:22 - so i can see this as an invention for
59:24 - someone on their own needs but then
59:26 - quickly spreads to everybody else so
59:28 - what app would you build to fix a
59:30 - problem that you have and then only
59:33 - worry about finding customers later
59:35 - because if you like it more than likely
59:37 - somebody else will
59:39 - so if you're trying to find a niche then
59:41 - think about improving what's already out
59:44 - there so take a look at the landscape
59:45 - and see if you can fix it
59:47 - so when you compare competitors you're
59:50 - going to find features that are similar
59:52 - to apps that you would like to build
59:54 - but is there somebody that has an app
59:57 - that is missing a feature or you see it
60:00 - in the user comments
60:02 - for instance and the reviews in the app
60:04 - store if only this app would
60:06 - that is like free market research for
60:08 - you if you'll read through those
60:09 - comments and see what people would like
60:11 - the app to do that it doesn't and so you
60:14 - find a gap there it's called a niche
60:17 - also you would find if people are being
60:19 - annoyed so if advertising is becoming
60:22 - the best way for a certain app to make
60:25 - money you can guarantee the users are
60:27 - going to be annoyed maybe you could come
60:29 - up with a replacement for it you can
60:31 - sneak in on market share and then you
60:33 - can figure out later how you can be the
60:35 - annoying advertiser how about this if
60:38 - you're looking for competitors are you
60:41 - competing against microsoft or google or
60:44 - are you competing against a single
60:47 - programmer or a small team
60:49 - so that'll tell you a lot about what
60:50 - your competition is up to so
60:53 - there's only infinite resources at
60:55 - google and microsoft so don't even
60:57 - bother if you're trying to reinvent
60:59 - google maps now also think about updates
61:02 - if you look in the app store you're
61:03 - going to see that some people build
61:06 - their app and then forget about it so
61:08 - has it been five years since they've
61:09 - updated it there is a niche you could
61:11 - probably just walk right in do an update
61:14 - to the current ad and you can start
61:16 - picking off users how about poor ratings
61:19 - that's a pretty obvious sign that
61:20 - there's opportunities here people have a
61:23 - need that is not being met and there's
61:25 - your competition red flag to say i'm
61:27 - going to step in here and fix a problem
61:30 - that people feel but what happens if you
61:32 - look at your competition and they have
61:33 - good ratings well that just tells you
61:35 - that it's free market research as well
61:37 - that tells you what people like and if
61:39 - you build a similar app you better make
61:41 - sure that some of those features are for
61:43 - you
61:44 - so back to words with friends so if this
61:47 - is one of the most popular games in the
61:49 - world then tell me this when i look at
61:51 - the reviews why in the world are all the
61:55 - reviews currently showing up as one star
61:59 - and you look at it it's all about the
62:01 - ads and about how annoying the program
62:04 - is to work with and so
62:07 - people want to play this game
62:09 - but they really don't like to play
62:11 - this version of the game there's a niche
62:13 - they're opening the door for competition
62:16 - uh here's another one i've actually paid
62:18 - for this app many years ago because i
62:21 - wanted to have a good
62:22 - place to show podcasts
62:24 - and so i probably wouldn't buy the app
62:26 - today because if you look here you can
62:28 - see that most of the users are annoyed
62:30 - with it every time they do an update
62:32 - something breaks and so i don't know if
62:35 - a podcast manager is really a good app
62:37 - anymore because
62:39 - apple and google have pretty much taken
62:41 - care of that need right in their
62:43 - operating system but if you wanted to
62:45 - build one
62:46 - this one here would certainly be a good
62:48 - competitor to try to beat so do your
62:50 - research come up with a chart
62:53 - and go through um
62:55 - a bunch of competitors that you find
62:57 - that are similar to the app that you
62:59 - have in mind
63:00 - and so you just put down a chart to
63:02 - compare what's their popularity what's
63:04 - their notable features how do they
63:05 - monetize themselves what's their company
63:07 - size when did they last do their update
63:10 - and what kind of reviews are they
63:11 - getting and so when you have a
63:13 - comparison chart here you're going to
63:15 - see perhaps opportunities arise so this
63:18 - might become a large spreadsheet as you
63:20 - mine the data to find what you want so
63:23 - make sure that when you're doing your
63:24 - comparisons that you're not trying to
63:26 - compete against the monster companies do
63:29 - similar apps that are about the same
63:31 - size and complexity as what you're doing
63:34 - learn from what they do well and then
63:37 - see if there are some opportunities
63:39 - where they leave the door open so that's
63:41 - your ideal so where are you going to
63:43 - find this information so uh for beyond
63:46 - pod i
63:47 - did a search there at sensor tower
63:50 - and for this app you can see that it's
63:52 - kind of an
63:54 - c minus grade
63:56 - so what's the competition for what
63:58 - you're trying to build go look at their
64:00 - ratings go look in their app store and
64:02 - then check them out here on sensor tower
64:04 - to see if there are opportunities for
64:07 - you to take advantage of so that's some
64:09 - advice for how to do a niche now the
64:12 - next stage is to get some users together
64:14 - or potential users and ask them a lot of
64:16 - questions it's called listening to the
64:19 - user and so check this video out to see
64:21 - some advice and how you can do that well
64:23 - if you'd like to see the entire playlist
64:25 - for all the lessons on the business of
64:27 - apps then i'll put it here as a playlist
64:31 - [Music]
64:38 - hi and welcome back to the business of
64:40 - applications this is a course where we
64:42 - talk about the business of planning
64:44 - designing marketing your application so
64:47 - we're in the middle of a class that has
64:48 - several sections we're in part one right
64:51 - now which is on the motivations for
64:53 - building an app so we're identifying the
64:55 - problem and our users and trying to come
64:57 - up with what fits in the market you can
64:59 - see that there are other topics that are
65:01 - coming up so make sure that you
65:02 - subscribe if this kind of thing is
65:05 - interesting to you my name is shad
65:07 - slooter and i teach software development
65:10 - at grand canyon university so please
65:13 - join us for class and tell us what
65:15 - you're doing now what we're going to do
65:17 - in this video here is talk about the
65:19 - elevator pitch or you might call it
65:22 - listening to your users so you're trying
65:24 - to talk to real people about an idea you
65:26 - have to see if it actually is grounded
65:29 - in reality so here is what a lot of
65:32 - people would do in their elevator pitch
65:35 - so when you're an elevator pitch is
65:36 - usually about getting a job or trying to
65:39 - sell your business and you've got about
65:41 - 30 seconds and so here's your goal state
65:43 - what the problem is
65:45 - tease with a solution and then tell them
65:47 - how you can add value so here's an
65:49 - example of an elevator pitch so you
65:51 - might say the problem is we have a
65:52 - process that currently takes our
65:54 - employees about 30 minutes to accomplish
65:56 - and we can make that better if we put
65:58 - some software in place as a matter of
66:00 - fact my value proposition is that you
66:02 - can reduce this task to just four
66:05 - minutes are you interested
66:07 - and of course 30 minutes to four minutes
66:10 - sounds like a great value proposition so
66:12 - that's kind of the idea that you want to
66:14 - do when you're selling your app in one
66:16 - sentence you can describe what your app
66:18 - does and why people should pay you for
66:20 - it so what you should do then is you
66:22 - should probably have some kind of a
66:24 - prototype or at least drawings or
66:26 - something that you can show users give
66:29 - them the 30 second pitch about what it
66:31 - does have them look at it
66:33 - and then honestly watch them
66:36 - don't try to argue with them just see
66:38 - what they say you've got yourself a
66:41 - maybe a one-minute time frame window to
66:43 - get their first initial reactions which
66:45 - are probably accurate and then take the
66:48 - lessons with
66:50 - humility
66:51 - and either throw away your idea or
66:53 - modify it or run with it if people seem
66:56 - to like it
66:57 - so don't worry about your idea being
66:59 - stolen
67:01 - ideas are cheap everyone has a great
67:04 - idea but it takes a lot of work to make
67:06 - an app and so if you have an idea
67:08 - without any execution
67:11 - you've got nothing
67:12 - and so the app store has a a lot of
67:15 - people that put work into it they don't
67:17 - have ideas in the app store so like i
67:20 - mentioned be humble and be open so
67:22 - feedback is going to come in various
67:24 - ways if you show your prototype or your
67:28 - idea to somebody and they just are kind
67:30 - of confused
67:32 - means you're probably lacking clarity or
67:34 - if they say that's the stupidest thing
67:36 - i've ever seen
67:38 - don't argue with them just see if more
67:40 - people tell you that it's really that
67:42 - dumb however if you get a few good
67:44 - reactions like this one
67:45 - keep moving because of course your mom
67:48 - is going to think it's great
67:49 - your friends might be a little bit
67:52 - critical for you but strangers see if
67:54 - you can get some people to evaluate it
67:57 - objectively and if you can get some
67:59 - positive ideas then maybe you're on to
68:01 - something so speaking of ideas go to
68:04 - reddit there's a whole reddit subreddit
68:06 - on
68:07 - app ideas and here is where you can read
68:10 - about other people's ideas and post your
68:12 - own to see if there's some feedback so
68:15 - you can go ahead and steal right here
68:17 - because as i said ideas are cheap
68:20 - execution is everything so post your
68:22 - ideas or go look for ideas so make sure
68:25 - that you get the process in order so
68:27 - this here is what some people would plan
68:30 - for their order of operations
68:33 - they would say i'm going to create this
68:34 - great app and i'm sure there are
68:36 - customers out there which will then lead
68:38 - me to make some money so unfortunately
68:41 - this is probably a failure
68:43 - you got to find this in a different
68:45 - order so start it this way find the
68:48 - customers give them an idea of what
68:50 - you're going to build so build something
68:52 - very simple or at least draw some
68:54 - pictures that don't take a lot of time
68:56 - investment
68:57 - once you have the users that are going
68:59 - to tell you yeah i think this is going
69:01 - to work
69:02 - then you can go ahead and work on
69:04 - building something great and then
69:06 - following that you'll have the money so
69:09 - the next critical step in building your
69:11 - application is to make a user profile
69:15 - how to find the ideal person you have to
69:17 - be very specific so check out the video
69:19 - here on targeting the ideal user and if
69:22 - you want to see the entire playlist i'll
69:24 - post this here as the link as well so
69:27 - keep watching with me and subscribe and
69:28 - thank you
69:32 - [Music]
69:38 - hi welcome to the business of
69:40 - applications in this series of videos
69:42 - we're talking about how you can take a
69:44 - product and turn it into an app
69:46 - so the business part here is got several
69:49 - topics and we're in part one right now
69:50 - which is about the motivations for your
69:52 - app and so we're going to get to the
69:54 - others
69:55 - but so if you're interested in building
69:57 - a application and knowing how the
70:00 - strategies work we're looking at best
70:02 - practices for all of these topics so
70:04 - make sure you subscribe so my name is
70:06 - shad sluter and i teach software
70:08 - development at grand canyon university
70:11 - and so i'm inviting you to come to class
70:13 - and get an a plus education so in this
70:16 - video we are talking about a task called
70:20 - know your primary user and so knowing
70:23 - your users is one of the most important
70:24 - things that you can do early on in the
70:27 - development of a product or service so
70:30 - having a very targeted user is going to
70:33 - make you an effective person for how you
70:36 - design your product and how you interact
70:38 - with your people a piece of advice is
70:40 - make sure that you have a narrow enough
70:42 - focus about who your customer is so that
70:44 - you can say
70:45 - i have at least 100 true fans instead of
70:49 - a lot of publicity from people who
70:51 - really don't even care
70:52 - so the goal of this video here would be
70:55 - for you to have
70:57 - identified
70:59 - who the person is that is most likely
71:01 - going to buy your app or use your
71:04 - service and so you can literally come up
71:07 - with a profile of the age
71:10 - the type of work they do how much money
71:13 - they have
71:14 - what kind of hobbies they would do
71:16 - what bothers them
71:18 - and so
71:19 - if you have all these relevant things
71:22 - targeted
71:23 - then your job of finding out what your
71:25 - product is supposed to do will become
71:27 - easier
71:28 - so one of the questions might be can you
71:31 - just invent this profile
71:34 - or should you check to see if they exist
71:36 - in the real world and so trying to find
71:39 - out if these customers exist in the wild
71:42 - is part of the strategy here
71:44 - so one way that you can actually do some
71:46 - experiments to find this out and verify
71:48 - your assumptions is to create what i
71:51 - would call a coming soon page so here's
71:54 - an example so let's say you have a
71:57 - great business idea we're going to call
71:59 - it tech
72:00 - and the idea is that we are serving
72:04 - freelance
72:05 - businesses so single employees that are
72:07 - trying to make a living
72:09 - and so
72:10 - this doesn't exist it's just a vaporware
72:13 - you might call it but we would advertise
72:15 - with a website like this to describe
72:17 - what our features are
72:19 - and we would uh post
72:22 - google ads to see if we can get people
72:25 - that are searching for our type of
72:27 - service and if they click it they would
72:28 - be brought here
72:30 - and if they are willing to enter their
72:32 - email
72:33 - and ask to be put on a waiting list for
72:36 - when your service launches
72:38 - then you've got some data that you can
72:40 - compare with how many people click the
72:41 - ad how many people see your product and
72:44 - actually sign up or how many people just
72:46 - bail
72:47 - and go away so these are great ways to
72:50 - do experiments with limited amounts of
72:52 - money no software development and you
72:55 - can find out if your ideas are actually
72:57 - going to work in the real world here's
73:00 - another one go blog so
73:02 - go blog is in the works it says
73:05 - we're going to have a blogging community
73:07 - for people who are passionate about
73:09 - everything
73:10 - so
73:11 - this obviously exists already but we're
73:13 - going to see if people are willing to
73:14 - sign up for our service and so you have
73:16 - a landing page like this here's another
73:19 - one so uh here is a more of a
73:23 - long-term one so i have somebody that is
73:26 - trying to
73:27 - get paid it says get jobs get them done
73:29 - get paid with work week
73:31 - and do you have a small service work
73:33 - week is all about getting your paperwork
73:36 - out of the way does this sound
73:38 - interesting would you pay for this
73:39 - service if so
73:41 - go ahead and
73:42 - sign up
73:44 - so
73:45 - you can find out if people are
73:47 - interested
73:48 - now also this is a nice mailing list
73:50 - because if you actually do launch your
73:52 - product maybe a year from now you're
73:55 - going to have a whole bunch of people
73:56 - that are actually willing to download
73:58 - your app on the very first day which
74:00 - helps a lot
74:01 - with the google services
74:03 - here's another one here so a design and
74:06 - prototyping tool so we can take a look
74:09 - at uh tools to build apps so you might
74:12 - be the target audience on this one so we
74:14 - can build prototypes without coding
74:17 - here's the list of features looks like
74:19 - it'd be a great service so be the first
74:22 - to get on the list and get this
74:24 - installed on your phone if you're
74:26 - interested
74:27 - go ahead and subscribe and if you're
74:29 - ready for this we are ready for you so
74:32 - make sure that you can get some feedback
74:35 - about real-world situations so putting a
74:38 - landing page out there is one way
74:40 - now check your assumptions because
74:43 - you are probably convinced that your app
74:45 - is great but that's not the right answer
74:49 - you need to find out if other people are
74:51 - feeling the same way
74:53 - so conduct interviews start with your
74:55 - friends your family
74:56 - work with people that you meet and ask
74:58 - them these questions so how do you
75:01 - currently do activity x
75:04 - so for instance how do you currently
75:05 - manage your freelance operations that
75:08 - would be a good question from one of the
75:10 - examples we just looked at
75:11 - do you like your current process if so
75:14 - tell me about it if not what would make
75:17 - it better
75:18 - and then i show you the solution
75:20 - and here is the screenshots this is the
75:22 - outline this is what i think will happen
75:25 - do you think this would help you
75:26 - and then please explain
75:29 - and so this is a great way to verify
75:31 - that people would buy into your app and
75:34 - hopefully you have honest feedback to
75:36 - say nah or yeah and so then you've got
75:38 - something actionable
75:40 - so where are you going to conduct these
75:42 - interviews where you're going to find
75:43 - people that are willing to talk to you
75:45 - hopefully you have some targeted spots
75:47 - well you can start online
75:49 - so i did a quick search here for
75:53 - some comment reviews on youtube so you
75:56 - could publish a youtube video talking
75:58 - about your service
75:59 - you could sell ads to get people to
76:01 - watch it and then ask for comments to
76:03 - say is this a great idea would you pay
76:05 - for it so here's an example
76:07 - so apple just launched the purple iphone
76:11 - now my opinion of it was
76:13 - seriously
76:15 - apple has billions of dollars and
76:18 - brilliant engineers and the best upgrade
76:20 - they could come up with was purple
76:23 - however looking at the comments of this
76:25 - youtube i can see that
76:28 - there's a lot of positive feedback
76:30 - now i don't know are those people that
76:32 - were hired by apple to go out and
76:34 - provide some good feedback
76:36 - or these actual users so that's
76:39 - unknown but anyway there's some feedback
76:41 - that you could use as some research
76:44 - here's another go to reddit and sign up
76:47 - for the thread called app ideas and you
76:50 - can post your idea people can tell you
76:52 - whether it's a good idea or not or you
76:54 - might discover some other people's ideas
76:56 - now this specific idea i kind of liked
77:00 - have an app that uses gps to track your
77:02 - walking or running or cycling miles
77:05 - and instead of just showing you the map
77:08 - overlay it against a fiction map such as
77:11 - middle earth and you can see how much
77:14 - progress you make on a daily basis
77:16 - before you get to mount doom
77:18 - and so you could do other maps uh
77:20 - fantasy places so you could go to
77:23 - narnia or middle earth or you could have
77:26 - people crossing other continents
77:29 - you could climb mount everest if you
77:31 - were doing a stair-stepping app and so
77:33 - you could have people set goals and have
77:36 - some fun doing it so
77:38 - this app doesn't exist
77:39 - it got 38 up votes it looks like so
77:42 - apparently someone thinks it's a good
77:44 - idea
77:45 - so you could go there how about this you
77:47 - could just come up with your own web
77:49 - page just say i'm gonna launch this and
77:52 - start to advertise it and get feedback
77:54 - from people so it might cost you a few
77:56 - dollars to set one up but you're going
77:58 - to have more information before you
78:00 - actually start spending the real money
78:02 - about building your app
78:04 - here's a great way to get user feedback
78:06 - in your own town
78:08 - so meetup is a nice app and website
78:11 - where you can find special interest
78:13 - groups in your community
78:15 - so i've certainly found a bunch here in
78:17 - phoenix where i live about software
78:19 - development and everybody at the meeting
78:22 - is looking for a job or they have
78:25 - interests in finding other people that
78:28 - are doing the same thing that they are
78:30 - and it never fails
78:33 - that people go there to
78:35 - learn from each other so we learn about
78:36 - who the companies are that they work for
78:38 - you learn about new software you learn
78:40 - about new techniques
78:42 - and this is a great spot where you could
78:43 - do informal interviews when you got a
78:45 - drink in your hand and you're just
78:47 - talking to people and trying to pitch
78:49 - your idea getting the feedback that you
78:51 - need
78:52 - show it to your friends show it to your
78:53 - family show it to co-workers show it to
78:55 - anybody that would give you the time
78:57 - and watch what they do
79:00 - so you can see their feedback whether
79:01 - it's confusion disbelief or maybe you've
79:04 - got some good ideas in there so
79:07 - refine your idea based on what they tell
79:09 - you
79:10 - if you got some money you can have other
79:11 - people do your reset search for you such
79:14 - as mintel
79:15 - so you can see that they will sell you a
79:17 - report from anywhere from 2000 to it
79:20 - looks like about five thousand dollars
79:22 - and they will actually do market
79:24 - research about trends about here it says
79:26 - families in the uk what they're doing
79:29 - uh health and wellness in china
79:31 - so you can find your report here and if
79:34 - you've got the money you can save
79:36 - yourself a lot of time
79:38 - so they'll tell you if people are
79:39 - willing and how willing they are to
79:41 - spend their money on certain things
79:43 - uh here's an example from mintel
79:46 - so about research in the united states
79:49 - so what people are doing with insurance
79:52 - and for forty five hundred dollars
79:54 - you can answer that question so if
79:56 - you've got the money you can save the
79:58 - time so here's another example of
80:00 - mintel's market research it says here
80:03 - hbo now users are twice as likely
80:07 - from any other streaming service to
80:09 - cancel their subscription
80:11 - when a specific show ends
80:14 - okay so if you're trying to do market
80:16 - research for streaming services
80:18 - you would want to know what did mint or
80:20 - what did hbo do
80:22 - that causes people to leave them so
80:24 - easily
80:25 - and what do other people do that makes
80:27 - them sticky
80:28 - and so you can gain insights and adjust
80:31 - your plans for your own product with
80:33 - results like this
80:35 - here's a great way to conduct your
80:37 - interviews first of all listen you're
80:40 - there to learn because the expert in the
80:42 - conversation is the customer
80:44 - you are trying to gather data you have a
80:47 - proposal and your your whole goal is
80:50 - here is to experiment and test it and
80:53 - see if it is as valuable as you think it
80:55 - is and if it's not you want to know why
80:57 - so understand what their problem is so
80:59 - your solution might not be quite right
81:02 - but if you could tweak it it would be
81:04 - the right product for them
81:06 - show them a prototype to see if
81:08 - concretely
81:10 - it matches what they believe so
81:12 - showing a prototype is a lot better than
81:15 - just explaining an idea the more
81:18 - specific and graphic and concrete you
81:20 - can make it the better they'll
81:22 - understand you
81:23 - then get a reaction so listen for
81:26 - suggestions see if they're confused see
81:29 - if they're blase
81:31 - you can measure pretty much on scales of
81:34 - 1 to 10 and what they feel like and
81:36 - actually give them that opportunity to
81:38 - rate what they believe with a number and
81:40 - so these interviews then are going to
81:42 - provide you with a lot of good data
81:44 - another way to do this is to conduct
81:46 - what's called focus groups and so you
81:49 - can bring people in
81:50 - and provide them
81:52 - benefits such as money
81:53 - or a good meal and just ask them
81:56 - questions
81:57 - so people will sometimes give you their
82:00 - time if you make it worth their while
82:03 - you can also hire these focused research
82:05 - groups
82:06 - from other companies that do surveys
82:09 - and
82:10 - i don't know if i would
82:11 - find them as a great value or not i
82:13 - think you'd probably have a good
82:14 - experience of doing it yourself
82:16 - and spend similar amounts of money but i
82:19 - know that they're out there so if you
82:20 - want to do focus groups you can get some
82:23 - more information
82:24 - so let's take a look at an app that i
82:27 - that i said i used in a previous video i
82:29 - said i used all trails what would an
82:32 - interview look like if they were coming
82:34 - up with the plan and so they look at me
82:37 - i'm a hiker i'm a backpacker and they
82:39 - ask me these questions so they would say
82:41 - currently how do you find good places to
82:44 - hike
82:45 - and i would say i read magazines i look
82:47 - at google images i look at the map i
82:49 - watch instagram and then i try to go
82:52 - from there but i really don't know if
82:54 - i'm finding anything good or not until i
82:56 - actually show up so how does that work
82:58 - for you
82:59 - the information is usually incomplete i
83:01 - must make a guess
83:03 - and so i would like it if there were
83:04 - actual more concrete suggestions so what
83:08 - features do you like in our solution
83:10 - well i would say i'd like to have photos
83:13 - of the hike the park where i go to i
83:15 - want to see what the national park trail
83:17 - looks like i want to have actual reviews
83:19 - from people that hiked it maybe just a
83:22 - week ago is there snow on the trail or
83:25 - is the bridge out those kind of
83:27 - informational
83:28 - tidbits are really important on user
83:30 - reviews so to me it looks like they did
83:32 - their homework they found their ideal
83:34 - users and then they asked them these
83:36 - questions and they incorporated exactly
83:39 - what was needed so like i mentioned
83:41 - earlier in another video i pay them
83:43 - money on a yearly basis which is kind of
83:46 - painful because i don't like to pay for
83:48 - software but in this case it's very well
83:51 - worth my time
83:52 - here's another application that i
83:54 - purchased so
83:55 - some time ago i was a math teacher and i
83:58 - was doing tutoring on the side and so i
84:01 - was helping people do their high school
84:03 - trigonometry their calculus
84:06 - and
84:07 - one tool that i kept buying for my
84:10 - students was
84:11 - wolfram alpha a strange name
84:14 - but it is the ultimate graphing
84:16 - calculator it can solve problems and
84:19 - show you visual solutions
84:21 - and so if you ask how do you currently
84:25 - solve math problems i use pencil and
84:27 - paper i use inflection points and
84:29 - vertexes and
84:30 - it's tedious
84:32 - i will pay you
84:33 - whatever it takes because you are you
84:36 - are creating a solution that that solves
84:38 - a painful problem for me and so a lot of
84:41 - my uh students paid for this on their
84:44 - own
84:45 - based on my recommendations so
84:48 - they obviously know their audience as
84:49 - well that's my point here is that they
84:51 - did their focus groups they did their
84:52 - user interviews and they met exactly
84:55 - what the users wanted
84:57 - now here's what's going to happen then
84:59 - so you do these interviews
85:01 - and you're going to have
85:03 - what you think then
85:05 - is a pretty good idea of what people
85:08 - want
85:10 - and so
85:11 - you must do these because if you
85:14 - have this
85:15 - we will build it and they will come
85:18 - attitude if you think that way you might
85:20 - spend a lot of time and effort when they
85:23 - won't come now this i think this comes
85:25 - from field of dreams the movie where uh
85:27 - was it kevin costner decided to put a
85:30 - baseball diamond in the middle of a
85:31 - cornfield
85:33 - and
85:34 - he said if we built it they will come
85:36 - and of course it's a horrible marketing
85:38 - strategy
85:39 - if you build it they might come so make
85:41 - sure that you verify your assumptions
85:43 - with interviews and tests
85:46 - pay for the google ads if you have to
85:47 - pay for the interviews because the money
85:49 - you invest will be well worth it and so
85:52 - what you're standing on right now is the
85:55 - left side of the cliff
85:57 - you are looking at what current data is
86:00 - you have uh other models to follow you
86:03 - have businesses that you can imitate you
86:05 - have track records in history but what
86:08 - you're trying to get to is this
86:10 - vision to say i'm pretty sure they'll
86:12 - come
86:13 - and so before you take that leap try to
86:17 - close the gap
86:18 - by verifying things let me give an
86:20 - example of a company that did exactly
86:22 - that
86:23 - so zappos
86:24 - owned now by
86:26 - amazon
86:27 - was a startup company some years ago
86:30 - that wanted to sell shoes online
86:33 - so
86:34 - they had an interesting problem
86:38 - they didn't know if people would
86:39 - actually buy shoes online
86:41 - so
86:42 - instead of building an entire
86:43 - distribution system
86:45 - they started a website and advertised
86:48 - some shoes
86:49 - at the current competitive retail price
86:53 - and they said buy shoes from us and so
86:56 - people would fill in the form and click
86:57 - buy and they would get an email so how
86:59 - did they fulfill their orders
87:01 - well amazingly zappos literally went to
87:05 - the store where the shoes were sold so
87:07 - they went to their local department
87:08 - store
87:10 - bought the shoes went to the post office
87:12 - and mailed them
87:13 - and of course it was a huge loss they
87:15 - took money to buy the shoes and the
87:18 - postage was completely
87:20 - expense right out of their pocket as
87:22 - well as the time and effort but their
87:24 - point wasn't to make money selling those
87:26 - shoes their point was to prove to
87:29 - themselves that people were willing to
87:32 - buy shoes
87:33 - in the mail
87:35 - and the experiment worked and of course
87:37 - zappos is worth quite a bit of money
87:39 - today and they're owned
87:41 - by amazon and so what you want to do
87:44 - then is to verify who your user is
87:47 - and whether he or she is willing to use
87:50 - your product and if it doesn't match
87:53 - then you can abandon the idea without
87:55 - spending too much money or you can
87:58 - adjust your idea so it fits exactly what
88:01 - your users need
88:02 - the next step is to figure out how to
88:05 - design the perfect application
88:08 - and so that's the next video and then if
88:10 - you want to see the rest of the videos
88:12 - in this course then check out take a
88:14 - look at the playlist here and you can
88:16 - follow along on some of the other topics
88:18 - so thanks for watching and welcome to
88:20 - class
88:22 - [Music]
88:29 - hi welcome back to the business of apps
88:31 - this is a series of videos that i'm
88:32 - doing with my class right now about the
88:35 - business process and the design of
88:37 - building an app and so you can see all
88:39 - the different topics that we're talking
88:40 - about here so we're in topic one right
88:42 - now which is the motivations for
88:44 - building an app and what i'm going to do
88:46 - is give you an activity so if you're in
88:48 - my classroom i would actually assign
88:50 - this and grade it to you if you're just
88:51 - watching along then take a look at what
88:53 - i think you should do next so what i'd
88:56 - like to assign is something to listen to
88:58 - about airbnb
89:00 - and lyft so these are obviously two
89:03 - mobile applications that are very
89:04 - successful leaders in their world so the
89:07 - first is an interview with the founder
89:10 - of airbnb
89:12 - so this appears on a radio program for
89:14 - npr called how i built this and so it's
89:18 - a very interesting interview it talks
89:19 - about the story behind how the business
89:22 - airbnb came into existence so this
89:25 - doesn't really show a direct line from
89:27 - point a to b for this business plan uh
89:30 - at the time it seemed very strange why
89:31 - would anyone want to stay in a
89:33 - stranger's home and why would you let
89:35 - anyone come in and sleep in your living
89:37 - room and so how did they create a new
89:40 - business model that has now
89:43 - control of more
89:44 - hotel rooms than any other hotel company
89:47 - in the world
89:48 - the second interview is also from how i
89:51 - built this and this one comes from lyft
89:53 - which is also a mobile application and
89:56 - they grew from a campus ride sharing
89:59 - service into a an uber-like company
90:02 - the greatest competition that uber has
90:04 - really and so with these two different
90:07 - interviews i'm going to ask you to take
90:09 - a look at five questions
90:11 - and so if like i said if you're in my
90:13 - class i'm going to ask you to write
90:14 - these out so the first one is
90:17 - after you hear these two people talk i
90:19 - want you to
90:20 - answer the question what is the core
90:22 - business of airbnb and lyft each of them
90:25 - have a different core business obviously
90:27 - but
90:28 - what i'm trying to distinguish here is
90:30 - that the app itself
90:32 - is just a means to an end and so if
90:35 - you're thinking about app development
90:36 - and growing it into a business um think
90:38 - in reverse maybe and so ask yourself
90:41 - what does airbnb do
90:43 - and why do they need an app to do it
90:46 - second question
90:47 - how does the mobile app enable them to
90:49 - function could they do it without the
90:51 - app could they do it without computers
90:54 - and is there anything secret about it
90:56 - that would make that success and so they
90:58 - had to do it at this time and no other
91:00 - to become in the business that they are
91:03 - also
91:04 - think about a wider scope so what
91:07 - besides the website or the mobile app
91:10 - does this company need to
91:12 - provide successful service to their comp
91:14 - to their clients
91:17 - so do they need people to answer the
91:18 - phone do they need quality assurance do
91:21 - they need sales people do do they need
91:24 - drivers do they what do they need to
91:27 - make their business run
91:29 - and so if you are thinking about i'm
91:31 - going to build an app business
91:34 - look at these two examples that are
91:36 - clearly app businesses
91:38 - and think of how much else they have to
91:39 - do besides create code
91:42 - and a website and then here's another
91:44 - one
91:46 - so besides mobile apps
91:48 - how else do they communicate with their
91:49 - customers
91:51 - so the mobile app i think is central
91:53 - but what other services do they do and
91:56 - then finally
91:57 - why are these two companies successful
92:01 - literally you could build either one of
92:03 - these apps
92:04 - as a semester project
92:06 - in one of my classes you could learn all
92:08 - the technical things about
92:10 - programming the interface putting the
92:12 - database together scaling it even on the
92:14 - cloud
92:16 - but yet you wouldn't have airbnb or lyft
92:18 - when you're done
92:20 - you would have an app with no users
92:22 - and so how did they go from
92:25 - the app stage to
92:27 - millions of user stage what was the
92:30 - secret what was the
92:31 - process that they followed what were the
92:33 - challenges that they faced and so what
92:35 - i'd like you to do in this activity then
92:37 - is to consider these five
92:39 - and then also
92:41 - consider your own project so likely you
92:44 - have something floating around in your
92:46 - brain don't you i mean you've we've all
92:47 - got
92:48 - an app that we would like to make and so
92:50 - i'd like you to then take a look at
92:52 - these same questions and apply them to
92:54 - what you're working on now or what
92:56 - you're dreaming about now and so using
92:58 - airbnb and lyft as case studies we can
93:01 - learn a lot about our own selves and
93:02 - perhaps
93:04 - if we have that in our future if you're
93:06 - interested in looking at the motives for
93:08 - how to build an application and some of
93:10 - the questions you have to ask before you
93:11 - even code then i have a video to check
93:14 - out here also if you'd like to look at
93:16 - the entire playlist for the business of
93:18 - mobile applications then take a look at
93:20 - the link that's here and thanks for
93:23 - watching and please subscribe
93:26 - [Music]
93:32 - hi welcome to the business of building
93:34 - apps in this video we're going to talk
93:36 - about an assignment that i'm going to
93:37 - give you if you were one of the students
93:39 - in my class so the business of building
93:42 - apps has several chapters and we're here
93:44 - in chapter one which is about the
93:46 - motivations for building an app
93:48 - so we're going to call this assignment
93:50 - activity 1.2
93:53 - and so what we're trying to do here is
93:55 - examine the current marketplace of
93:57 - applications and see if there's any
94:00 - results that we could glean from the
94:02 - market and where there might be
94:04 - opportunities for you to build an app so
94:07 - the first thing we're going to do is
94:08 - look at app annie so i'd like you to go
94:11 - to this address and look at the top apps
94:13 - um what we're looking for are trends
94:16 - or for any gleanings of information
94:19 - about what makes an app successful or
94:23 - if it is so unlikely that we are going
94:25 - to succeed against them to see if there
94:28 - are any opportunities where we could
94:30 - find something that we might be able to
94:32 - compete against
94:33 - so for instance you're probably not
94:35 - going to replace minecraft or youtube or
94:38 - roblox as you see here but if we look
94:40 - down the list we might see some
94:42 - opportunities so a second source of
94:45 - information that i want you to examine
94:46 - is here at sensor tower
94:48 - and so you can see that it looks like
94:50 - the same kind of a organization where we
94:52 - have the top apps for each category so
94:55 - you can look at games and fitness and
94:57 - other different categories but if you
94:59 - look on the left side sensor tower
95:01 - provides more information than app annie
95:04 - does so you can examine the details of a
95:06 - single app you can compare
95:08 - in this section called app intelligence
95:10 - to know more about it and so for example
95:13 - here clash of clans we get some drill
95:15 - down detail on
95:17 - when they made their money and how much
95:20 - uh activity they see do we see any
95:22 - trends seasonally so if you're trying to
95:25 - compete against clash of clans this
95:27 - obviously is an important report
95:29 - we're trying to think of our own app
95:31 - though that's that's the goal of this
95:33 - course is we're starting to form our own
95:35 - opinions about
95:37 - what our app can do and who our
95:39 - customers are and so clash of clans
95:41 - probably isn't one that you want to
95:43 - compare directly against but find a
95:45 - competitor
95:46 - that you are probably going head-to-head
95:48 - with and see what kind of results they
95:51 - have and maybe you can glean some
95:52 - information there
95:54 - so statistica this is another website
95:57 - that can give us insights into mobile
96:00 - apps and so i went to their web page and
96:03 - picked a current uh report that was here
96:05 - that says total value of global
96:08 - consumers spending on
96:10 - mobile apps in the fourth quarter of
96:12 - 2020. so obviously we see a
96:15 - kind of a gradual trend and then
96:16 - suddenly there is this massive jump
96:19 - something happened
96:20 - what do you suppose that might have been
96:22 - so what we're doing right now is we're
96:24 - just looking at raw data and reports
96:27 - and i'm going to ask you in this
96:28 - assignment to draw some conclusions so
96:31 - here's what we're going to conclude
96:33 - i want you to provide
96:35 - several statements at least three of the
96:38 - market in general
96:40 - so where would you find some
96:42 - opportunities that's really the market
96:44 - research here
96:46 - looking at what's going on with trends
96:49 - and where would you find yourself
96:51 - something that can lead to success or
96:54 - failure so it's an open-ended assignment
96:57 - here you are now a business analyst
97:00 - you're not just a programmer or you're
97:01 - not just answering questions out of a
97:03 - textbook what i want you to do is
97:05 - pretend that i'm your boss right
97:07 - and i look at you and i say
97:09 - find me
97:10 - a market opportunity go look at the
97:12 - competitors see where things are moving
97:16 - what is opening up to us and where could
97:18 - we possibly enter and so really that's a
97:21 - very high level kind of a question to
97:23 - say analyze and compare and make
97:25 - predictions so you're not in high school
97:28 - anymore we're trying to make you a
97:30 - business analyst so the conclusions that
97:32 - i want you to do are things that might
97:34 - look like this so
97:36 - we're going to say these topx apps
97:39 - accounted for 80 of all downloads so
97:41 - what would that do for your manager
97:43 - well it would tell us that there is some
97:45 - very dominant players in that segment or
97:48 - we might have a different kind of a
97:50 - observation so looking at our category
97:52 - so we'll call it category x
97:54 - looking at our type of app that we're
97:56 - considering building there is no clear
97:58 - market leader
97:59 - and so therefore you would tell your
98:00 - boss i think we've got a chance to
98:03 - become that market leader there's nobody
98:05 - yet that has dominated that space
98:07 - or we might say category x our category
98:11 - has increased in user downloads by a
98:14 - massive percentage in the last 12 months
98:16 - or contrary you might say what we were
98:19 - thinking of doing online donut ordering
98:22 - is actually not something that people
98:24 - care about and it's falling in the last
98:27 - 12 months i don't know what the
98:28 - statistics will be you're the one that's
98:29 - going to do the research and find that
98:31 - out how about this we
98:34 - we found a new emerging leader so app x
98:38 - recently created an entirely new
98:40 - category
98:41 - something that is unique and it is
98:43 - growing rapidly so we could probably tag
98:46 - along with them maybe and see if there's
98:48 - an opportunity to become maybe second or
98:50 - third in that category and compete or
98:53 - how about this you might find a
98:54 - conclusion that says x percent of apps
98:56 - get less than y per downloads per month
98:58 - so there's some category that we were
99:00 - considering but we realize nobody cares
99:03 - about there's hardly anyone downloading
99:05 - there so maybe that is your conclusion
99:07 - how about this one we could find a
99:08 - different conclusion that says only x
99:11 - companies account for 80 of downloads
99:13 - similar to number one and then similar
99:15 - we might have another dominant leader at
99:16 - the bottom that says there's only a few
99:18 - apps that are collecting all the money
99:21 - or new apps account for percent of some
99:24 - total monthly downloads so
99:26 - the conclusions that you draw here are
99:28 - not something that i can tell you
99:30 - exactly what the right ones are
99:32 - so that's what market researchers do is
99:34 - they try to find the needle in the
99:36 - haystack
99:38 - and so those are called market study
99:40 - conclusions
99:41 - so when you're done with that it's a
99:43 - better idea to present something to your
99:46 - boss in a summarized graph so this is
99:49 - where excel comes in where you can
99:51 - create pie charts and line charts and
99:53 - trends and then you can you can
99:55 - visualize your statements very easily
99:58 - and then finally i'm going to ask you to
99:59 - do a summarize so write a paragraph to
100:02 - answer the following question to say
100:04 - what category should i compete in if i
100:07 - were to build an application really
100:09 - that's the conclusion that's the whole
100:11 - point of all this research is we're
100:13 - trying to find an opportunity out there
100:16 - in the market so
100:17 - if we've got several opportunities that
100:19 - would be great and we can consider
100:21 - options a b and c but that's your goal
100:23 - here so for the deliverables i want you
100:26 - to create a one-page document and you're
100:28 - going to embed a chart
100:30 - and i want you to tell me where the
100:33 - opportunities are
100:34 - if i were your boss and you were the
100:36 - business analyst
100:38 - what should we be doing
100:40 - what opportunities should we pursue so
100:43 - if you're one of my students i will
100:44 - evaluate you on how well you can write
100:47 - and how well you can draw conclusions
100:49 - from a wide variety of sets of data i
100:52 - will put a link here so that you can see
100:53 - the rest of the course material and then
100:55 - see some background on how we came up
100:57 - with this
100:58 - also if if you're not one of my students
101:00 - then feel free to put these kind of
101:02 - conclusions in the comments below and
101:04 - everyone else can evaluate your work
101:06 - based on the youtube commenting system
101:09 - thanks for watching
101:12 - [Music]
101:18 - hi and welcome to the business of
101:20 - building applications in this video
101:23 - we're going to talk about an assignment
101:24 - that i would give you if you were in my
101:26 - class so this is a course about building
101:29 - apps and the business plans that go with
101:31 - them so we're in number one which is
101:33 - chapters about motivations for building
101:36 - an app and so that's what the activity
101:37 - will be so we'll call this activity or
101:40 - assignment 1.3 so the third one that i'm
101:43 - going to grade you on if you were in my
101:45 - class so this activity is going to be
101:48 - about writing down the details
101:51 - of a plan so a plan for building an app
101:55 - and building a business
101:57 - so what i want you to do first is think
101:59 - about problems that would be able to be
102:02 - solved with a business solution
102:05 - so this is where we're going to be
102:06 - writing in just a minute so background
102:08 - information here is to think about how
102:11 - other apps are solving problems for
102:13 - instance how to find a hotel room
102:16 - quickly that's a business problem or how
102:19 - to save money while grocery shopping
102:22 - that is also addressing a business
102:24 - problem or maybe how to visit a
102:26 - destination using a virtual tour guide
102:29 - maybe not so much business as just
102:31 - tourism but the idea is that each one of
102:34 - these could have an app that would be
102:36 - the solution to this person's issue
102:39 - so then what i want you to think about
102:40 - then are the personal interests that you
102:43 - have or the problems that you face in
102:46 - your own work those are currently
102:48 - things that are bothering you those are
102:50 - often the best kinds of solutions that
102:53 - you can invent and so that's where i'm
102:56 - going to have you think so what i want
102:57 - you to do is to think of a product idea
103:01 - hopefully you've already got one that's
103:02 - been brewing in the
103:04 - dreams of your head
103:06 - an idea and we're going to write about
103:08 - it in six different paragraphs
103:10 - so first of all i'm going to say
103:13 - identify what problem exists
103:16 - for the ideal user so we're thinking
103:18 - about what they call a persona somebody
103:20 - that fits the mold somebody that fits
103:22 - the profile of who would buy your app
103:26 - and so what problem do they have
103:28 - tell me that that's your first paragraph
103:30 - the second is
103:32 - more about that ideal user so the ideal
103:34 - user is you're going to tell me their
103:36 - age range you're going to tell me their
103:38 - gender what hobbies they have or where
103:40 - they work
103:41 - why they fit this category what things
103:44 - do they do on a frequent basis what
103:46 - preferences do they have do they have
103:48 - strong political beliefs do they have
103:51 - certain practices such as are they an
103:53 - environmentalist or are they a gun
103:55 - activist
103:56 - or where are they in the education world
104:01 - you know those kind of
104:02 - demographics and
104:04 - ideas that kind of categorize people
104:07 - so then the next question is and you're
104:10 - going you're going to write this
104:10 - paragraph is
104:12 - what do you do
104:14 - in your app
104:15 - that will solve a specific problem that
104:17 - this person experiences so we're doing
104:20 - the profile and now we're coming up with
104:22 - a solution
104:24 - so what does the app look like so here's
104:26 - we're making a an app plan right
104:29 - so your solution then is going to be
104:32 - what does
104:33 - your app have for screens the wireframes
104:37 - what what you know what's the navigation
104:39 - how do you get from the title screen to
104:41 - the first screen and so on
104:43 - and then i'm going to ask you
104:45 - what competition currently exists for
104:47 - your app so you've done some market
104:49 - research right
104:50 - who are the people that already have a
104:52 - solution that is
104:54 - like yours or adjacent to yours
104:56 - something that is a competitor
104:57 - and then what do you propose
105:00 - will be your distinguishing
105:02 - characteristics what makes you different
105:04 - why is your app slightly better
105:06 - and so in six paragraphs you're going to
105:08 - give me a business plan essentially
105:11 - why your app makes sense
105:12 - and who it makes sense for
105:14 - so then what i want you to do then is
105:17 - after you've written up this document
105:19 - you don't just turn it in and say i'm
105:21 - done i want you to take this and
105:23 - actually do some real world interviews i
105:26 - want you to get some user feedback and
105:28 - so you can go talk to your friends or
105:30 - your family or if you don't have friends
105:32 - or family you can post it on reddit or
105:34 - somewhere and get some user interviews
105:37 - what i want you to do is to describe
105:39 - your app you're going to show them
105:41 - the problem you're going to show them
105:43 - the wireframe or whatever you've got for
105:46 - pictures
105:47 - and then you're going to get the
105:48 - reaction
105:49 - so you're going to give them open-ended
105:52 - questions so in your interview you ask
105:55 - your mom
105:56 - tell me what you like about this product
105:58 - maybe your mom's not the best person
105:59 - because she'll just say i love
106:01 - everything that you do
106:02 - so
106:03 - tell it to one of your friends what do
106:04 - you like about the product and what do
106:06 - you think it's lacking
106:08 - what would you change about it did i get
106:10 - close to what your solutions are do you
106:12 - care about this and if you do what would
106:14 - you make a difference on a scale of one
106:16 - to ten then how likely are you to use
106:18 - the app if it were available today and
106:21 - of course maybe a follow-up question is
106:23 - would you be willing to pay for it
106:25 - and so that is your user interviews so
106:27 - what you're going to conclude then from
106:29 - these unit user interviews is one
106:32 - you've either got a great idea or two
106:35 - you'll get a gigantic yawn and people
106:37 - will ignore you
106:38 - so the summary that i want you to get
106:40 - from that is
106:41 - who did you interview and why did you
106:43 - choose them and then finally what did
106:45 - you learn did you get anything from them
106:49 - because you thought you were the expert
106:50 - when you started this process but you
106:52 - quickly learn that you are the student
106:55 - the real experts are the potential users
106:58 - and so what did you learn after you
107:00 - presented your ideas to them so then
107:03 - part three then we've created a plan for
107:05 - part one part two we've shared it with a
107:07 - few people
107:08 - and now we're going to do
107:10 - plan b you might call it and sometimes
107:12 - that's the best thing you can do is
107:13 - figure out what doesn't quite work so
107:16 - based on the feedback that you received
107:18 - i want you then to write what you did
107:20 - would modify
107:22 - what features would you need to add or
107:25 - people didn't care about what
107:26 - modifications would make your app better
107:29 - conduct new interviews then so you can
107:31 - go back to the same people or find
107:33 - somebody similar
107:34 - and see if there's a different response
107:36 - then after your
107:38 - suggestions were implemented and then
107:40 - finally i want you to re record any of
107:42 - the insights that you learned from these
107:44 - people so this is somewhat of a big
107:46 - writing assignment isn't it not only do
107:48 - you have to write but you have to talk
107:50 - to people and figure out what they want
107:52 - so then for the deliverables this is
107:54 - what i want you to submit to me i want
107:56 - you to write a three to five word page
107:58 - word document that describes the ideal
108:01 - app idea
108:02 - what your user is
108:04 - what did you put in for the features
108:07 - what suggestions did you incorporate
108:09 - from your users and what did you learn
108:11 - from these interviews and so if i were
108:13 - to grade you i would base your grade
108:15 - based on not only how you write but how
108:18 - thorough you were and how well you
108:20 - learned and listened to your users so
108:22 - really that's the goal here when you're
108:24 - designing an app is to conform it to
108:26 - what the users want rather than your own
108:29 - preconceived notions so if you'd like to
108:31 - see the entire playlist for this course
108:33 - i'll post that here and if you're not in
108:35 - my class then you can feel free to put
108:38 - these assignments in the comments here
108:40 - and let the youtube comment system do
108:43 - your grading for you and you can comment
108:45 - on other users too and based on what
108:47 - they think their app ideas are so thanks
108:49 - for watching and make sure that you
108:51 - subscribe
108:53 - [Music]
109:00 - hi and welcome back to the course that
109:01 - we're teaching right now called the
109:02 - business of building applications so
109:05 - we're talking about mobile applications
109:06 - and the process of design and running
109:08 - your business so you can see that we are
109:11 - in several different units of study
109:13 - right now and we're on the second one
109:15 - which is called designing an effective
109:17 - app however there's a lot more material
109:19 - here so if you would like to take a look
109:21 - at some of these others make sure that
109:22 - you subscribe to the channel and watch
109:24 - along my name is chad slooter and i'm a
109:27 - professor of software development and
109:29 - computer science at grand canyon
109:30 - university and so the course that we're
109:32 - working right now is called building
109:35 - apps and the business of design so in
109:37 - this video we're talking about the
109:39 - features that you would put into an
109:41 - early version of your app perhaps the
109:43 - first version of your app so application
109:46 - design includes these four topics that
109:48 - we're going to see in the next few
109:49 - videos so we're talking about the first
109:50 - one right now which is which features
109:52 - should you put in there the user
109:53 - interface answers the question of what
109:56 - does your app look like the ux or the
109:58 - user experience is how is the user
110:01 - experiencing the entrance the actual
110:04 - flow of your app the product delivery
110:07 - and things like that so the experience
110:09 - is the overall feel and then finally we
110:11 - have what's called the mvp which is
110:13 - called the minimal viable product and so
110:16 - getting your app to market involves
110:18 - making some very strategic decisions
110:20 - about how it looks like how your users
110:22 - experience it and how much you spend on
110:25 - the early development stages so taking a
110:28 - look from google we have some advice for
110:31 - what users think about what makes their
110:34 - application valuable so the question is
110:37 - what users find most valuable about
110:39 - their favorite apps and so if you're
110:41 - designing make sure that you focus in on
110:44 - these key features so number one on the
110:46 - list they're easy to use and navigate i
110:49 - suppose if you get that rule right
110:51 - you've probably made almost all of the
110:53 - right decisions
110:54 - there's always something new to explore
110:56 - that's number two and so in a future
110:59 - video we're going to talk about making
111:00 - your apps addictive or a nicer way of
111:04 - saying
111:05 - increasing user loyalty and so we'll be
111:07 - addressing that in its own topic and so
111:10 - then you can see down the rest of them
111:12 - they drop off quickly but the first one
111:14 - is probably the most important getting
111:16 - your app easy to use and navigation and
111:19 - so that's what this video and the next
111:21 - few are all about
111:22 - so we are in this process let's get
111:24 - context of where we are
111:27 - so in earlier videos we talked about the
111:29 - problem that we're trying to solve
111:31 - identifying a solution to have known
111:34 - need number two is finding our niche and
111:37 - so looking at the competition and
111:38 - finding a place where we're going to
111:40 - succeed and the competition won't crush
111:43 - us
111:43 - and now we're into this third one here
111:45 - about figuring out what user features
111:48 - are really important and which ones can
111:50 - wait till later
111:52 - and balancing the user needs and the
111:54 - costs and then finally the user
111:56 - interface and the experience is where
111:58 - we're going today
111:59 - so the question is if you've got a list
112:02 - of nice things that your users want you
112:04 - to create
112:05 - which ones are you going to prioritize
112:08 - so you don't want to create what's
112:09 - called a frankenstein app where it has
112:11 - every feature and nobody cares about it
112:14 - you want to address what matters the
112:16 - most
112:17 - so one way to do this is to take a look
112:19 - at your competition uh apps that are
112:21 - similar to what you're trying to develop
112:23 - and compare what they have
112:26 - so earlier we looked in another video
112:27 - about the
112:28 - opportunity here about an app called
112:30 - words with friends one of the biggest
112:33 - apps that you've probably seen in the
112:34 - games
112:35 - and we found a pri a surprising
112:38 - discovery here if you look at the
112:40 - reviews currently they're receiving
112:42 - mostly one-star reviews because of one
112:45 - single problem
112:47 - they're advertising so they're annoying
112:49 - their users even though it's a free app
112:51 - people will still expect a good
112:53 - experience
112:54 - and so if you're looking at building an
112:56 - app and you have a similar review
112:58 - problem in the app store take close note
113:01 - of that because you don't want to make
113:03 - sure that you do the same mistake how
113:05 - about this is there an opportunity here
113:08 - so i remember at one time it was kind of
113:09 - a joke to put on your resume that i'm a
113:12 - an application designer for craigslist
113:15 - or
113:16 - i am a css expert for craigslist it's
113:19 - almost like a friend of mine who was a
113:21 - architect for the aldi's grocery store
113:24 - and if you know anything about all these
113:25 - they pretty much look like craigslist
113:27 - they're a warehouse where they just
113:29 - throw boxes on pallets and expect people
113:31 - to shop there and so there is there an
113:33 - opportunity here craigslist was so
113:35 - dominant well there is
113:37 - i have certainly used offer up it's
113:39 - craigslist but with a good user
113:42 - interface
113:43 - and you've got yourself less spam going
113:45 - on you've got less corruption uh you've
113:48 - got a great communication tool the
113:50 - browsing and the the video the pictures
113:52 - are good um i haven't used craigslist
113:55 - since
113:56 - now here's what you want to do then if
113:58 - you're looking for some kind of an
113:59 - opportunity like that whether it's
114:01 - you're trying to kill craigslist or
114:02 - words with friends or likely some other
114:04 - app that you're targeting right now
114:07 - think of what you guys have in common so
114:10 - your proposed app
114:12 - and what the competition does that
114:14 - overlap will call analogies and you want
114:16 - to check to see if the user experience
114:20 - is good in those areas and if so then
114:23 - don't be afraid to copy it i mean
114:24 - certainly every time snapchat or tick
114:27 - tock comes off with something cool
114:30 - instagram is not afraid to copy exactly
114:32 - what they see there because
114:34 - we don't want to lose out on what's
114:36 - actually working
114:37 - now what the competition does
114:40 - and what you choose to leave out we
114:42 - could call the anti-log that would be
114:44 - the
114:45 - anti-analogy
114:47 - and if they are doing something wrong
114:48 - make sure you leave that part of it out
114:50 - and make your app somewhat unique and so
114:52 - that way you take the best and leave
114:55 - what they don't want so let me give you
114:56 - an example so here is something i found
114:59 - on reddit where a person was doing some
115:01 - research
115:02 - and their research involved comparing
115:04 - different weather apps that are
115:06 - available so you can see that this uh
115:08 - reddit thread is android apps so this
115:10 - person is talking about designing their
115:12 - own weather app and they did the
115:14 - research to find out who's out there and
115:15 - what they can do
115:17 - so you can see they created a table
115:19 - and they have all of the different uh
115:22 - currently published apps out there they
115:24 - talk about the weather providers the
115:26 - number of
115:27 - widgets that are there the hourly
115:29 - temperatures and all the features and so
115:32 - they go right through everybody's
115:34 - competition and come up with a pretty
115:38 - good
115:38 - chart to know
115:40 - what is available now so if you were to
115:42 - try to get into this crowded market and
115:45 - build the better weather app you'd
115:47 - probably want to look at this chart very
115:48 - carefully and see which features are
115:50 - working which ones that are really
115:52 - important to the users and which ones
115:54 - are just complete add-ons or even
115:56 - annoying and so you can tell that the
115:58 - research here is done with quite a bit
116:00 - of time and effort
116:02 - also in the typical reddit fashion
116:04 - there's all kinds of very honest reviews
116:06 - and feedback about people that talk
116:08 - about which app they use and which ones
116:10 - they don't like and
116:12 - what works and even in some cases you
116:14 - can talk directly to developer here in
116:16 - one of the apps and so do something
116:19 - similar to this if you are anticipating
116:22 - creating a list of features
116:23 - so once you get yourself a little bit of
116:25 - competition and you make a table like
116:27 - this then it's time to identify the main
116:30 - features of your application let's say
116:32 - you're going to build a social app so
116:34 - something along the lines of facebook or
116:36 - instagram and so you're going to put
116:38 - down the user stories or different tasks
116:42 - or different abilities that your app
116:44 - will feature so for instance
116:47 - one feature of your app would be to say
116:48 - users will create an account using
116:50 - current google or facebook password you
116:52 - put it on a sticky note so that way you
116:53 - can move it around users will be able to
116:55 - set up a profile that's another action
116:57 - that the users will do
116:58 - the main part of your app of course is
117:01 - post a public message with a video or
117:03 - photo or browse other people's posts and
117:05 - maybe comment on them able to write
117:08 - things or put a like and so this is
117:10 - pretty typical social media things now
117:13 - you put these together and you start to
117:15 - see the number of hours of work adding
117:17 - up and so it's time to prioritize which
117:20 - of these features are going into your
117:22 - app by the way there's nothing really
117:24 - unique on this app so
117:26 - what do you have that is the twist what
117:27 - is the unique feature or value
117:30 - proposition and that should probably
117:32 - show up in one of your posts so once you
117:34 - have most of the main features then you
117:35 - want to be able to put them into
117:36 - categories and so a user experience
117:40 - should have some kind of a cycle or
117:43 - process that they follow through
117:45 - and as well you should probably think
117:47 - about
117:47 - which parts of your application have
117:50 - good amounts of these features and which
117:52 - don't so think of the first problem
117:54 - called activation so which features help
117:57 - you activate your app or how do users
117:59 - find you you better have a feature in
118:01 - there acquisition means how do you on
118:04 - board the users get them from a
118:06 - interested party a curious party to
118:08 - somebody that's registered and somebody
118:10 - who is an active user
118:12 - then the retention part is what is the
118:15 - main point of your application it better
118:17 - be interesting it better be engaging it
118:19 - better be entertaining it it better be
118:21 - useful there's something there that is
118:24 - the main reason that people came now
118:26 - this is the main course and now then you
118:28 - get to the point where you say i want my
118:30 - app to grow so there should be some kind
118:31 - of a way to refer others whether you
118:34 - invite them to play a game with you or
118:35 - to share a photo or to at least get some
118:39 - kind of another download from another
118:40 - user and then lastly perhaps somewhere
118:43 - in here there should be a monetization
118:45 - so either you ask the users to pay you
118:47 - money or you show them an ad or some
118:49 - kind of a way that you can do a cut of
118:52 - business and so monetization can fit in
118:55 - one of these categories so let's give an
118:57 - example here so if we're talking about
118:59 - our social app we would probably say our
119:01 - activation comes because a friend
119:04 - invited you to respond to a picture and
119:06 - then the next step is the acquisition so
119:09 - as you have to log into the account
119:11 - you're invited to create your own
119:13 - profile and then you're hopefully going
119:16 - to respond you're going to either play
119:18 - the game with them or you're going to
119:19 - read the post or put a comment on it and
119:21 - then hopefully you share a picture and
119:23 - invite somebody else to look at it and
119:25 - then the cycle repeats and once again
119:27 - make sure that there's some kind of a
119:28 - way to make a monetization play here so
119:32 - show an ad that seems to be a pretty
119:34 - typical thing for social media now ads
119:37 - aren't always great but they're pretty
119:38 - typical as a solution so this is our
119:41 - feature map with the objectives so let's
119:44 - put in here the first one which was
119:47 - activation so the users will create an
119:49 - account so they're going to use google
119:50 - or facebook password so activation we've
119:52 - got that one covered we also have they
119:54 - will be able to set up a profile so
119:56 - we'll put that in that column retention
119:58 - means what are we doing that creates
120:01 - actual value or entertainment to the stu
120:03 - to the people that are here and so
120:05 - posting a public message with a photo or
120:07 - video would fit we can also browse other
120:09 - people's items and so we have an
120:11 - interesting activity going on that's
120:13 - retention and then we have the ability
120:16 - to write now you might be able to say is
120:19 - that is that part of the retention or
120:21 - that might fit into referral so maybe
120:23 - one of those two categories would fit
120:25 - now i've got some gaps though because
120:27 - i've only created two columns and i have
120:30 - three empty ones so i might start to say
120:32 - well let's add some new features that i
120:34 - hadn't actually thought of because we're
120:37 - not covering all the bases so we have a
120:39 - new feature called share a picture with
120:41 - a friend with either a phone message or
120:43 - an email and so that clearly fits in the
120:46 - referral category well we don't have
120:48 - monetization and acquisition filled in
120:50 - yet so what are we going to do there
120:52 - well how are we going to monetize well
120:54 - maybe people have a a desire to promote
120:56 - their photo or their picture or if we
120:59 - were doing some kind of a job posting we
121:01 - could pro we could
121:03 - promote your uh your resume or something
121:06 - that people are willing to pay for for
121:08 - other people to notice and so we'll put
121:10 - that into the monetization category
121:12 - here's another one notify the user when
121:15 - your post has been liked oh we all want
121:17 - to know that three people have seen our
121:19 - video and so we'll put that into the
121:22 - retention area so that's interesting how
121:24 - about this generate a web page so how
121:26 - are we going to get people to look at
121:28 - our images how we're going to invite
121:29 - them into the app
121:31 - well you can rely on people inviting
121:33 - other friends that's one way to do it or
121:36 - in this strategy we would create deep
121:38 - links and so if somebody is posting
121:40 - about a picture or a subject about
121:42 - something that would be hit in google
121:45 - searches a place a geography place or an
121:48 - event or a celebrity or something
121:50 - then we can hopefully get a few people
121:52 - that are doing web searches with google
121:55 - and we pick up them through web pages so
121:58 - then you've probably mapped out most of
122:00 - the columns by now and you have the
122:02 - basic features of your application now
122:05 - the the point of this video is to try to
122:08 - focus on limiting your desire to fill
122:12 - everything
122:13 - in the first stages of building an
122:15 - application you want to do what's called
122:17 - a minimal viable product you don't want
122:20 - to have the entire thing developed
122:22 - because that's expensive and it's still
122:24 - untested so what we're trying to avoid
122:27 - is a frankenstein app so frankenstein of
122:30 - course is the movie or the story of
122:34 - building a monster out of body parts and
122:36 - this actually is a photo from
122:38 - experiments that were done in the 1700s
122:41 - of using body parts with electricity so
122:44 - the danger of creating too many features
122:46 - is that you have created things that
122:48 - your users don't actually need so let me
122:51 - refer you to a good blog post on the
122:53 - subject so uh beware of feature overload
122:56 - a case study and so even though this was
122:58 - written some years ago it's still very
123:00 - uh applicable today so i wanted to
123:02 - capture this picture here so
123:05 - live chat was this person's company
123:07 - communication tool
123:09 - and the point of putting it on the blog
123:11 - was to talk about how bad the user
123:13 - interface was how many features that
123:15 - they've tried to crowd in on one item so
123:19 - look up close here we've got ourselves
123:21 - every feature possible
123:24 - and to the software developer it makes
123:27 - total sense they've got everything there
123:29 - but for you and me that have never seen
123:31 - the app before
123:33 - it's a little overwhelming where do we
123:34 - start what feature is most important
123:37 - and when you're trying to onboard
123:38 - somebody the goal is to leave them
123:40 - basically one option
123:42 - just the one option that they need to do
123:44 - next and hide the other features until
123:46 - they've become a little more proficient
123:48 - with the app and so this is
123:51 - i don't know if you could call it a
123:51 - frankenstein app but it's certainly
123:53 - overwhelming
123:54 - now if we scroll down a bit they came up
123:56 - with another version of the same tool
123:59 - now this one here is called live chat
124:01 - and
124:02 - it certainly presents a whole lot fewer
124:04 - options i assume all this all the
124:06 - features are still there you can
124:07 - probably find them if you click the
124:09 - right menu and then you're looking for
124:11 - those features but if you're trying to
124:13 - scare away your users with overwhelming
124:17 - amounts of choice
124:19 - then the first version is your goal so
124:21 - you can see down here the conclusion is
124:23 - the lesson learned product teams should
124:25 - learn to say no and that's the point of
124:27 - the video that i'm telling you here is
124:28 - that when you're picking your features
124:30 - for your first version of your
124:31 - application pick only the ones that are
124:33 - absolutely critical and simplify your
124:36 - app so let's do a summary of what we
124:37 - talked about so far so that for the
124:39 - features that you're going to include in
124:40 - your app make sure that you have them
124:43 - proven to be necessary you've already
124:45 - done your interviews with your users and
124:47 - they've told you what they think is the
124:49 - most critical parts of the service and
124:51 - so make sure that you include those also
124:53 - you might want to include things that
124:55 - are fairly easy to develop so that you
124:57 - don't invest a lot of time and money and
124:59 - so really what you're developing then is
125:01 - considered the minimal viable product or
125:05 - mvp and we'll talk about that in a later
125:07 - video so once you've identified the
125:09 - features it's now time to create the
125:11 - user interface and so if you want to
125:13 - look at that the next video in the
125:14 - series is exactly about how you can
125:17 - create an effective user interface if
125:20 - you want to see the entire list of
125:21 - course material then take a look here at
125:24 - the playlist that's in the other link so
125:26 - thank you for watching and welcome
125:28 - aboard
125:30 - [Music]
125:37 - hey welcome back to the business of
125:38 - building apps this is a course that will
125:40 - help you create apps and the business of
125:43 - making sure that it's a profitable
125:45 - business for you so in this course we're
125:48 - talking about seven or eight different
125:49 - categories so we're in item number two
125:52 - right now which is about designing an
125:54 - app but as you can see there are other
125:56 - chapters and other topics that we need
125:59 - to cover and so if you'd like to see
126:01 - some of these make sure that you
126:02 - subscribe and watch the others my name
126:04 - is shad slooter and i'm a professor of
126:07 - software development and computer
126:08 - science at grand canyon university and
126:11 - so welcome to class and please join us
126:14 - for others so in this we are talking
126:16 - about application design and so really
126:20 - those are four questions about how your
126:22 - app's going to look first of all which
126:24 - features are we going to choose second
126:26 - what the app looks like third what's the
126:29 - experience of the user and finally what
126:31 - goes into creating a minimal viable
126:34 - product or the mvp and so we're here in
126:37 - section two if you haven't seen the
126:38 - others please look at the other items in
126:40 - the playlist for this course so what
126:42 - does the app look like is what we're
126:44 - asking today
126:45 - and what that question is is what is the
126:49 - user interface going to be what are the
126:51 - principles of design and how do you make
126:53 - an effective user interface and so to
126:56 - answer that question we need to talk
126:58 - about a process called
127:00 - onboarding so onboarding is a way to
127:03 - turn a novice or completely ignorant
127:05 - person about your application into
127:07 - somebody who is a minimal user somebody
127:09 - who is adopting your program
127:12 - so onboarding sounds exactly like what
127:14 - it's it's talking about getting on a
127:16 - ship and so let's think about the
127:18 - process of a
127:20 - cruise company and adopting users into
127:23 - their system so you're the crew's client
127:26 - you're going on vacation and you show up
127:28 - at the boat what are the questions that
127:30 - you would have when you get to the dock
127:33 - the questions are going to be things
127:34 - like immediate needs where's my room
127:37 - does my key work
127:39 - or where do i put my suitcases so if
127:42 - you're trying to onboard a customer in
127:44 - this situation you better make sure that
127:46 - these questions are answered don't shove
127:48 - a menu in their face or give them a plan
127:50 - for how they're going to get off and do
127:52 - tours at the first island those are for
127:54 - later and so once people get installed
127:57 - into their room and they got their first
127:58 - cup of coffee and they start to feel
128:00 - comfortable what are their next
128:02 - questions going to be they're going to
128:03 - say what's the wi-fi password or when is
128:06 - supper or what entertainment is
128:09 - happening on the ship and so these are
128:11 - questions that you would present to the
128:13 - user when they get to this stage and so
128:16 - you might have a piece of paper or a
128:17 - poster in the room or some kind of a
128:19 - guide on an app or whatever you're going
128:21 - to guide them through the process of
128:23 - onboarding and so you want to do the
128:25 - same thing with your applications and so
128:28 - don't present them with all of the
128:29 - features of your user interface at the
128:32 - beginning just give them
128:34 - one or maybe two options and make it so
128:36 - obvious that they always choose the most
128:39 - logical thing so only show the most
128:42 - urgent and essential features of your
128:45 - starting screen and in our case since
128:47 - we're starting a brand new app
128:49 - maybe that's the only features that are
128:50 - in your app and so your user interface
128:53 - makes sure that the essential features
128:56 - are obvious and super easy to adopt so
129:00 - perhaps one of the best examples of
129:02 - making things obvious is
129:04 - google no wonder they're a good search
129:06 - company well they give good searches but
129:08 - there's really only one thing to do here
129:10 - uh you have a search item
129:13 - and you have this other i'm feeling
129:15 - lucky i don't even know why they still
129:16 - have that there i've never clicked it
129:18 - other than the first experimental time
129:20 - but anyway they're pretty simple they've
129:22 - got a great user interface now consider
129:24 - what they used to compete against
129:27 - yahoo was really the only other viable
129:29 - choice for search engines and
129:33 - what in the world are we supposed to do
129:35 - here so if you knew what you were after
129:37 - when you started yahoo you probably hit
129:39 - the search bar
129:41 - but they've got so many other
129:43 - distractions going on am i supposed to
129:45 - download a toolbar well no thanks on
129:47 - that one am i supposed to browse news am
129:49 - i supposed to get weather
129:51 - and there were a lot of choices and i
129:52 - think the strategy was let's just give
129:55 - every kind of idea possible to our users
129:58 - and increase interactivity there instead
130:01 - of focusing on one really good thing
130:03 - such as search
130:04 - they tried the buffet approach and other
130:07 - than giving away all of their user data
130:10 - in a data breach
130:11 - yahoo just was completely defeated by
130:14 - google for a number of reasons so don't
130:16 - be yahoo when you're trying to create an
130:18 - app so it's fun to hate people so let's
130:20 - go take a look at another one that i
130:22 - would like to criticize so this is adobe
130:25 - illustrator
130:27 - photoshop and illustrator are like the
130:30 - dominant tools for design and graphic
130:32 - arts so i consider myself somewhat
130:35 - proficient in both of these i teach them
130:38 - in school
130:39 - but the one thing that always bothers me
130:42 - is
130:43 - ironically the tool used to design user
130:47 - interfaces and choose layouts and
130:49 - wireframes in itself is a horrible
130:52 - example of a user interface
130:54 - as you can see if i want to select a
130:56 - color there are multiple ways to
130:59 - get to that and so adobe apparently
131:01 - thought that multiple ways is a good
131:03 - thing and the users have flexibility you
131:06 - can even
131:07 - you can even customize the user
131:08 - interface so that only you understand it
131:11 - and everyone else that looks at your
131:12 - computer is completely baffled
131:14 - and so
131:15 - this is an example of succeeding
131:18 - in spite of having a bad product
131:22 - and so
131:22 - what do these icons do
131:25 - if you look at these photoshop icons you
131:27 - can see that they have
131:29 - some kind of a purpose and then you
131:31 - click and hold on them for goodness
131:33 - sakes who have ever thought of that you
131:34 - click and do a long click on them and
131:36 - you get more menus that pop out beneath
131:38 - them
131:39 - the only way you can know what these are
131:41 - is either to have a youtube video from
131:44 - some 14 year old that's going to
131:46 - demonstrate the the process for you or
131:48 - take a class
131:49 - what software requires you to take a
131:52 - class in other words to become a user
131:54 - that's just telling me that there's
131:56 - way better solutions that could be done
132:00 - take a look at here's another example
132:02 - how to export a file so i choose export
132:05 - and now i'm presented with what a dozen
132:07 - different things to export in different
132:09 - ways
132:10 - please help us this should be a dialog
132:12 - box and so adobe
132:15 - ironically has
132:17 - the market on all of this here's their
132:19 - layers palette so what are you supposed
132:21 - to do here what is kind normal
132:23 - what is going on with these little icons
132:25 - at the bottom some of these are effects
132:28 - some are browsing folders
132:31 - it's a it's a complete overwhelming
132:33 - experience for a new user now if you're
132:35 - already an adobe user and you know all
132:37 - these features you're probably proud of
132:40 - the fact that you've mastered the
132:42 - program well good for you for the rest
132:44 - of us though we want to have something
132:46 - simpler so what is this thing this is
132:49 - sketch
132:50 - so a competitor
132:52 - that does a lot of complex things to be
132:54 - fair photoshop and illustrator are
132:56 - complicated programs they do very
132:59 - sophisticated things but there are
133:01 - better alternatives out there
133:03 - basically because of their user
133:05 - interface and user experience they have
133:08 - all the features but presented in a much
133:10 - more
133:11 - straightforward manner how many people
133:13 - actually need to read the manual for
133:14 - sketch what a contrast to what there is
133:17 - for adobe products here's another one
133:20 - that i picked up
133:21 - this one this is what happens when you
133:22 - let developers build the user interface
133:26 - so
133:27 - check this one out what in the world are
133:29 - we supposed to do here how many check
133:30 - boxes do we need
133:32 - every one of these should be hidden away
133:35 - in another separate section where it
133:37 - shows up only when we need it to be and
133:40 - so if you're a developer don't take
133:42 - offense there are people out there
133:44 - better than us i consider myself a
133:46 - developer there are people out there
133:47 - that are better than us at user
133:50 - interface design
133:51 - and so it might be worth your time or
133:54 - money to get some advice
133:57 - and at least get some plans from a user
133:59 - interface perspective before you go
134:02 - ahead and develop your first
134:04 - vision so here's the design order of
134:06 - what we're trying to create so let's get
134:08 - some context here so first of all we
134:10 - picked out what our user needs are we
134:12 - figured out which features are going to
134:13 - meet those needs and now we're on
134:15 - creating the views so every feature that
134:18 - you create
134:19 - has to have some kind of a screen to go
134:21 - with it the view and then finally we'll
134:23 - get to the navigation at a later point
134:25 - so let's talk about some of the ui
134:27 - elements that are going to make your app
134:29 - effective some best practices so this is
134:33 - just the 10 minute version of an entire
134:36 - profession so
134:38 - a mobile application should have some
134:40 - consistency you should probably have
134:42 - something as a
134:44 - the
134:45 - typical app so don't try to get too
134:47 - creative on your user interface here
134:49 - make sure that you have a bottom toolbar
134:51 - and a top toolbar where users can see
134:53 - the same thing on each screen
134:55 - so separate the functionality each
134:58 - feature that you're trying to do have
135:00 - its own screen so don't try to create
135:02 - the monster screen with 50 different
135:05 - check marks and different menus that you
135:06 - can pick from separate the tasks and put
135:09 - each task into its own view
135:12 - and now you need to imitate and say
135:15 - look at the favorite apps that you
135:17 - already use and know and you admire and
135:19 - just copy their design their their plan
135:23 - so
135:24 - some people say that user interface
135:26 - is like a joke
135:28 - what does that mean
135:29 - it means if you have to explain it
135:32 - you probably did it wrong
135:33 - so i pulled up some examples of people
135:35 - who are designing user interfaces so
135:38 - there's two things going on here first
135:39 - of all the user interface is each screen
135:42 - that is going to be in the app and the
135:45 - second part maybe we're getting a little
135:46 - ahead of ourselves but it's closely
135:47 - related is how they relate to each other
135:50 - so that's the user experience the
135:52 - navigation essentially and so what you
135:54 - want to do then is before you write code
135:57 - just draw pictures so you can do it as
135:59 - this was a pen and paper obviously not
136:01 - too sophisticated or you can get other
136:03 - tools that are actually nice to draw
136:05 - with and look like professional graphics
136:08 - here's another example of an app that's
136:10 - going to be a diet app for your pet
136:12 - and so the the the motive for the app is
136:15 - that healthy food is best provided to
136:18 - your pet by creating your own food in
136:20 - the kitchen and so this app will help
136:22 - you create recipes share them and
136:26 - be able to
136:27 - improve the health of your pet so
136:29 - every screen here represents a different
136:32 - task that's going to be done in the app
136:34 - and then of course we can see the
136:35 - navigation between them
136:38 - here's another example of a project that
136:39 - somebody's working on this is called the
136:41 - time bank app and so it's a time
136:43 - management so you can literally budget
136:46 - amount of time that you plan to do on
136:48 - each task and for each calendar day
136:50 - and you can borrow time from the bank
136:53 - and then when you run out of time you
136:55 - stop working on that task and go to
136:57 - another one so i don't know if i would
136:59 - use this app myself but it's certainly a
137:01 - novel idea and for some people this
137:03 - might be just what they need but the
137:05 - point here i'm showing you is that this
137:07 - person has thought about
137:09 - each task that the user plans to do and
137:11 - they've drawn it out in a very nice
137:14 - pencil and paper format and then shown
137:16 - the navigation between them
137:18 - and so you can see the link here it's
137:20 - from flickr and you can find out if this
137:23 - process is going to work for you so let
137:25 - me recommend you a resource i like the
137:28 - title of the book it's probably just
137:30 - worth that in itself don't make me think
137:32 - and the idea is that user interface is
137:34 - supposed to be obvious and so what are
137:36 - some of the things that steve would
137:38 - recommend that you would do to make a
137:41 - user app so extra credit reading for you
137:43 - go check it out so along the lines of
137:46 - creating a good mobile experience think
137:48 - about the thumb
137:49 - so as you design your screens
137:52 - the top left corner of the screen is
137:54 - hard to reach with a right-handed person
137:57 - for sure
137:58 - and how in the world are you going to
138:00 - put the main navigation menu in the top
138:02 - left corner if you are actually thinking
138:04 - about this so
138:06 - consider someone riding a bicycle and
138:08 - trying to select a new podcast item
138:11 - we're going to put the button
138:12 - they're going to have to stop their bike
138:14 - and use two hands if you put it in the
138:16 - upper left corner so user interface is
138:19 - about knowing who your users are and
138:22 - when they're going to use your app so
138:24 - fortunately google and apple the two
138:26 - main mobile application companies have
138:28 - not left us in the dark they've given us
138:30 - some pretty straightforward advice so
138:32 - check out their human interface
138:34 - guidelines and so i'm going to just
138:37 - scroll through here to show that they've
138:38 - got very good principles outlined here
138:41 - and so they're basically stealing every
138:44 - lecture that i'm going to provide to you
138:45 - so i'm just going to point you to them
138:47 - and you can see that there is an entire
138:50 - book worth of material here to figure
138:53 - out how to do branding and colors and
138:55 - typography and how to use icons and
138:59 - navigation
139:00 - so really this is the resource that you
139:02 - should be looking for if you're building
139:04 - a mobile app for apple so google has
139:06 - done the same favor for us with their
139:08 - android documentation so this is a
139:10 - developer page and you can see that they
139:12 - have an entire book's worth of how to
139:15 - make a good android app based on the
139:18 - principles of design and so you can see
139:20 - that they have an entire course worth of
139:22 - material here to follow so
139:25 - run from me now and go to the experts at
139:27 - either apple or google to see what they
139:30 - have to say i can't believe i just told
139:32 - somebody to stop watching my videos but
139:34 - go ahead and check them out and see if
139:37 - you can learn something about basic
139:39 - design from the experts
139:41 - so let's assume that you're not a very
139:42 - good designer well you can just buy
139:44 - templates that are pretty good they've
139:46 - already designed many of the features
139:48 - that you're probably thinking of so
139:51 - find a site like this so here is a
139:53 - design template for somebody who has a
139:56 - book app
139:58 - and so you can see that there are
139:59 - screens to show you individual books and
140:01 - how to browse for books what else do
140:03 - they have let's scroll down until we get
140:05 - to the next one so if you're into a
140:07 - cooking application so recipes likely
140:10 - we've got ourselves an entire ui layout
140:14 - for most of the screens that you can
140:15 - imagine for cooking
140:17 - education so 19 screens here you get the
140:20 - idea so each different type of app that
140:22 - you're going to see
140:24 - is got a template so it's probably worth
140:26 - spending some money here or somewhere
140:28 - else where you can buy a full template
140:32 - and user design already designed for you
140:34 - and all you have to do is adapt it to
140:36 - the specific details of your app so
140:39 - taking the time or investment to create
140:41 - a good user interface will help you in
140:43 - several ways first of all think about
140:44 - who you're designing for number one
140:47 - you have a good idea for yourself of
140:50 - what the final product will look like
140:52 - and not only you but potential investors
140:55 - and partners are going to have a
140:57 - concrete image in their mind of what
140:59 - your app is
141:00 - also if you hire a developer then and
141:03 - they have a great user interface to
141:04 - start with they're not going to have to
141:06 - make any decisions or inventions that is
141:09 - not in their area of expertise and so
141:11 - developers are good at creating
141:13 - something if they've already got a
141:14 - pattern to follow and so investing in
141:17 - user design is a great way to start the
141:20 - next phase of the design process is to
141:22 - talk about user experience and so check
141:24 - out the next video here about the flow
141:27 - and experience of a user in your app
141:29 - also if you'd like to see the entire
141:31 - playlist for this this course series
141:33 - then check out the next link which is a
141:35 - playlist of all of them so thanks for
141:37 - watching and welcome to class
141:42 - [Music]
141:48 - hi welcome to the business of building
141:50 - applications in this course we're
141:52 - exploring the business process of design
141:55 - and developing an application in a
141:57 - mobile field so as you can see we're in
142:00 - several different chapters of a course
142:02 - so we're in section two right now which
142:04 - is about designing an application
142:07 - however there are other sections that
142:08 - we're going to explore in other videos
142:10 - so if you haven't subscribed please do
142:12 - that now and then you can join us for
142:14 - all of this material if this interests
142:17 - you my name is shad slooter and i'm a
142:19 - professor of software development and
142:21 - computer science at grand canyon
142:24 - university and so if you're in my course
142:26 - welcome and if you're not and you're
142:28 - just looking along then please join us
142:31 - and receive a degree that will actually
142:32 - get you a really good career so in this
142:35 - section we're talking about application
142:38 - design and really there are four parts
142:40 - to app design we're going to first of
142:42 - all or we did already talk about which
142:44 - features that are essential in making a
142:46 - successful app the user interface is
142:49 - about what the app looks like in this
142:51 - video we're going to talk about the
142:52 - experience that a user has
142:55 - as he or she is going through the flow
142:58 - and the execution of your application we
143:01 - want to make sure that that is good
143:02 - because that's essential for retaining
143:05 - users and making apps addictive and then
143:08 - finally we're going to talk about the
143:09 - principles of mvp which is the minimal
143:12 - viable product that you would present to
143:14 - investors and to potential users it's
143:17 - kind of the version
143:19 - 1.0 or the beta version of your app that
143:22 - makes you either confirm or deny that
143:24 - your app will actually work so we're in
143:27 - the section called user experience or
143:30 - sometimes called ux
143:32 - so how is this different from the user
143:34 - interface well really the user
143:37 - experience is the is the overlap of
143:40 - several different things first of all
143:42 - the design which is what most people
143:44 - think of as the user interface
143:46 - the the technology that is there so
143:49 - what are the actual
143:51 - interfaces whether it's a tablet phone
143:53 - web page virtual reality or the third
143:56 - one is the strategy so what are you
143:58 - trying to accomplish and does the user
144:01 - actually meet those goals and so that is
144:03 - perhaps what we would consider the
144:05 - experience of the user so for us we
144:08 - would consider it that's a five star or
144:11 - a one star experience it has far more to
144:13 - do than the colors and fonts or the
144:16 - layout that you choose it's the whole
144:18 - process of your application so let's
144:20 - revisit a cycle that we talked about in
144:22 - the previous video so as your user is
144:25 - going through these four sections they
144:28 - are going to experience your application
144:31 - or the ux so first of all the
144:33 - application starts somewhere so how do
144:36 - users find you and then how do they get
144:38 - on board how do they begin the process
144:41 - of becoming a registered user and active
144:44 - in your in your app
144:46 - then the retention part is the addictive
144:49 - or the interesting or the engaging part
144:51 - of your application that keeps them
144:52 - coming back do you have something worth
144:55 - doing in other words in the retention
144:57 - stage and then finally referral do they
145:00 - invite friends do they have actions with
145:02 - other users is there a way that hooks
145:04 - new people to come in and repeat the
145:06 - cycle and of course then your audience
145:08 - grows
145:09 - and finally somewhere in this process
145:11 - you have to figure out how to monetize
145:12 - your app without annoying everybody so
145:15 - too many ads of course will ruin the
145:17 - user experience too high of a price and
145:20 - people might not even get in the front
145:21 - door and so there's a balance of where
145:24 - the successful companies have learned to
145:27 - use
145:28 - experience and monetization at the same
145:30 - time and they of course have a great
145:33 - program
145:34 - now here is a previous uh user layout
145:37 - that we showed in the last video
145:39 - on the user interface
145:41 - so user interface are the actual views
145:45 - each screen could be considered an
145:47 - interface however the process of linking
145:51 - these together and the logic flow of the
145:54 - program is just as important as how
145:56 - clearly they're drawing
145:58 - now the time bank here app is to
146:01 - have somebody organize their time so
146:03 - that they can decide how much they're
146:05 - going to spend on exercise or study or
146:07 - with their family or commuting or
146:09 - whatever and so it's a great way for
146:11 - people to bank their time
146:13 - i guess that's the the theory of this
146:15 - app is that you can
146:17 - budget your time and use it like you
146:19 - would
146:20 - money and so that's called the time bank
146:22 - app so i don't know if it's a good app
146:24 - or not but the process here is obviously
146:26 - done well you can see how the user
146:29 - experience will begin
146:31 - and end and all the steps that are in
146:33 - between there now what would make this
146:35 - even better is that if you put it into a
146:37 - process or a drawing tool like figma or
146:39 - something like that and you could test
146:41 - it out you could click the app you could
146:43 - watch the screens transition and then
146:45 - make some decisions and refinements
146:47 - based on a prototype so you could think
146:49 - of the user flow is the process of how
146:52 - the user goes from the beginning stages
146:54 - to the end let's take a look at an
146:56 - example here of what might be a shopping
146:58 - experience so the user opens the app
147:00 - they do a search for our products they
147:02 - compare several products so your user
147:04 - experience might be to show a table you
147:07 - know side by side comparison or a save
147:09 - to cart or wish list or some way to
147:11 - compare help the user figure out what
147:13 - they need to do then of course add to
147:15 - cart is what we want
147:17 - shopping makes makes the order and then
147:20 - make a frictionless way to pay it you've
147:22 - probably seen that before
147:24 - and then finally you receive
147:25 - confirmation and hopefully the amazon
147:27 - guy shows up at your door and rings the
147:29 - doorbell and you're happy and so the the
147:32 - confirmation process outside of the app
147:34 - is just as good as the experience inside
147:37 - the app so you can imagine that amazon
147:39 - and people like them have spent
147:41 - literally billions of dollars making
147:42 - this user flow so easy and so obvious
147:46 - that now i see on my phone
147:49 - one click buy so i don't even have to do
147:51 - the shopping checkout process make it
147:54 - easy
147:55 - make it fun
147:56 - and then i don't even notice that i just
147:58 - spent some money so let's revisit this
148:00 - user flow again the experience of what's
148:02 - happening so you can see that we have
148:04 - the four stages of our app experience
148:06 - acquisition activation retention
148:09 - and referral and so there's a different
148:12 - label we could put on the person at each
148:14 - stage so what's happening there so our
148:16 - goal then is we would think about what's
148:18 - in what's happening and who the user is
148:21 - is our goal is to make it easy for this
148:24 - to happen we want the user to install
148:26 - the app the next thing is we want it
148:29 - easy and obvious to register an account
148:32 - which is why so many people just use the
148:34 - google login or the facebook login no
148:36 - one likes to type in passwords and
148:38 - confirm their password retention is a
148:41 - really engaging or entertaining or
148:45 - something that is very useful something
148:47 - that serves the need
148:49 - and so we don't want to confuse or annoy
148:51 - our users in this stage it's the core of
148:54 - our application and then our goal here
148:56 - is for people to invite a friend and so
148:59 - don't just say invite a friend
149:01 - maybe invite them to play the game with
149:02 - you or invite them to share in a
149:06 - experience or to share a photo
149:09 - or somehow
149:11 - cooperate and so you want to make it
149:13 - natural in each of these stages and so
149:15 - that's the idea and the thinking of user
149:17 - experience is you want to reach the goal
149:20 - in each of these stages without sounding
149:23 - contrived or
149:25 - overwhelming or annoying in any way you
149:28 - want to make it the natural thing that
149:29 - the user wants to do and then of course
149:31 - if you're successful with all of these
149:33 - what's going to happen is the cycle will
149:35 - continue and you'll have a virtuous
149:36 - cycle of new customers coming in by word
149:39 - of mouth
149:40 - now the conversion rate is something
149:42 - that you would want to keep track of so
149:44 - once you have an app up and running
149:46 - you're going to think about
149:47 - what is happening at each of these
149:49 - stages and of course you're going to
149:51 - lose a few people along the way and what
149:53 - you want to do then is find out where
149:55 - the choke points are where are people
149:57 - dropping out of this experience and
150:00 - that's where you need to focus and
150:01 - refine what you're working on so are
150:04 - people dropping out when they get to the
150:06 - checkout
150:08 - what's going on are you
150:09 - having them create all kinds of
150:12 - confirmations and credit card entries or
150:15 - is that process smoothed out and
150:17 - automated and so you're only you are
150:19 - going to be able to figure out where
150:20 - those problem points are if you've got
150:23 - data on how your users are acting
150:26 - now expand your idea more than just
150:28 - about your app because the user journey
150:30 - begins before the app happens so they
150:33 - get an invite or they have some kind of
150:36 - a notice or they found you in the app
150:38 - store and so you want to make sure that
150:40 - that's a good experience the in-app
150:42 - experience is how smoothly it runs
150:46 - during navigation ordering or posting
150:48 - and then finally when you are done does
150:51 - your app provide
150:53 - just entertainment while they're in the
150:55 - app or are they going to receive a pizza
150:57 - when they're done or what's the goal of
151:00 - your service
151:01 - and so probably thinking about the
151:04 - beginning and the ending and not just
151:06 - what they're doing inside the app is
151:08 - going to help you as well
151:10 - so a good exercise to make this
151:12 - successful is to create what's called a
151:15 - user empathy map
151:17 - so you would identify your user and try
151:19 - to predict and live in their shoes
151:22 - what does your user say
151:24 - what does your user do
151:26 - what is he or she thinking
151:28 - and how do they feel about the
151:30 - experience at each stage so let's take
151:32 - an example here of somebody that's
151:34 - ordering a new item from a restaurant
151:37 - what do they say well obviously they
151:39 - said i want to order food or maybe they
151:41 - said i'm hungry or i don't want to cook
151:44 - tonight and then what do they do they
151:46 - open up the app they browse the menu and
151:48 - they do comparisons so you can watch
151:50 - what they're doing you can see how well
151:52 - that's working but you can also say
151:55 - i can try to imagine what the user is
151:58 - thinking what are some of the important
152:00 - items
152:00 - well they might say when's it going to
152:02 - arrive is this expensive will this food
152:04 - taste good is it going to be cold stale
152:06 - soggy
152:07 - are there people going to be rude and so
152:09 - you can imagine that there's all kinds
152:11 - of questions that would be in that
152:12 - person's mind and how are they feeling
152:15 - who are you dealing with well you're
152:16 - probably dealing with hangry customers
152:18 - people that want to order food and get
152:20 - it now are going to be impatient or they
152:23 - might be excited they're going to say oh
152:25 - good chinese food tonight i haven't had
152:27 - that for a while and it tastes so good
152:29 - and so
152:30 - this experience is far more than just
152:33 - coding and user interface
152:35 - this is about how users
152:37 - feel about your program
152:39 - and so the only way you can really know
152:41 - this is to talk to your users watch them
152:44 - observe them measure them
152:46 - and get lots of feedback and so the user
152:49 - empathy grid will make your user
152:51 - experience far more successful than if
152:54 - you just assume a lot of these things so
152:57 - qualitative user experiences are going
152:59 - to be things like this
153:00 - watch what they do so literally you
153:02 - could put them in a lab situation or
153:05 - give them the phone and just observe
153:07 - quietly did they complete the action
153:10 - without any questions did they get
153:12 - frustrated did they have to ask for help
153:14 - did the user do the correct answer did
153:16 - they did they or thought they were doing
153:18 - something but a menu led them down a
153:21 - false path did the user misunderstand
153:24 - something was the menu not clear or was
153:26 - it hidden did they even not know that it
153:28 - was a menu or was the icon just a
153:30 - mystery to them maybe they didn't know
153:32 - it was an icon and so all of these
153:34 - things that seem you that seem obvious
153:36 - to you as the developer are going to be
153:38 - measured did they have to try multiple
153:40 - times before they finally got it right
153:43 - if they if the answer to any of these
153:45 - questions comes out wrong
153:46 - then
153:47 - you either have to fix the app or just
153:50 - assume that a great deal of your
153:51 - customers will never come back and so
153:54 - user experience requires you to watch
153:57 - and observe and so here's a piece of
153:59 - advice that seems a little
154:00 - counterintuitive at first but it says
154:03 - don't listen to what users say
154:06 - observe what they do instead and so the
154:08 - idea is to observe carefully and watch
154:10 - to see if there are problems
154:12 - so if you were to talk about a range of
154:15 - positive to negative user experience you
154:17 - could put it on this pyramid here so at
154:19 - the very bottom of the pyramid we would
154:21 - say
154:22 - the application is useful in the fact
154:25 - that it does what it says it works okay
154:28 - so that's the minimum user experience we
154:30 - would want it functions
154:32 - then the second one up is probably just
154:34 - as important obviously it says you need
154:37 - to be reliable so reliable means not
154:39 - just that it won't crash but also it's
154:42 - reliable in the fact that it's
154:43 - consistent so one place where you would
154:46 - put
154:47 - a command is going to follow through for
154:49 - the rest of the application or you do a
154:52 - process that is repeated in similar ways
154:55 - also in convenience is this a natural
154:58 - and obvious and efficient way to do
155:00 - things
155:01 - so i know in certain applications that i
155:04 - use if i want to do minor things that
155:06 - require 15 clicks with a mouse i get
155:09 - angry i get annoyed it's like who
155:11 - designed this who used this obviously
155:13 - they never tested it out
155:14 - is your experience pleasant okay so
155:17 - that's getting pretty high now where
155:18 - people say i actually like to use my app
155:20 - it's attractive it looks nice i get a
155:23 - good feeling when i open it and then at
155:25 - the very top i guess we would call it
155:27 - meaningful means that overall it's a
155:29 - very positive impression i enjoy using
155:32 - the app and i will be back and so your
155:36 - ux is trying to course to meet the top
155:38 - end of this so in order to achieve the
155:41 - goals of this
155:43 - meaningful and pleasant experience let's
155:46 - talk about six principles that will help
155:48 - you whenever you're talking about making
155:50 - a positive user experience make it
155:53 - minimal
155:55 - find your way to do it without a lot of
155:58 - extra trim
155:59 - so remember the experience of the
156:01 - contrast between yahoo and google
156:04 - google is minimal
156:05 - how about intuitive groupings and so we
156:08 - think about the way you menu you can you
156:10 - organize your menus and your dialog
156:12 - boxes
156:13 - and the clusters of
156:15 - things that belong together logically
156:17 - fit together
156:18 - it flows naturally so you don't have to
156:22 - tell your users to figure out what to
156:24 - click next there's an obvious button or
156:26 - there's a process of sliding or
156:29 - or clicking that's that's going to be
156:31 - exactly what they expect make sure that
156:33 - the icons are obvious
156:36 - invent only new icons when there's
156:39 - doesn't exist one already so just use
156:42 - the standard icons that most
156:43 - applications use
156:45 - make efficient motions
156:48 - so in a mobile application think of your
156:50 - right thumb
156:52 - as the place that's going to do most of
156:54 - the work or if you're working on an
156:57 - application that covers an entire screen
157:00 - make sure that you don't have too many
157:01 - clicks or you don't have to move around
157:03 - too much
157:04 - now finally
157:06 - above all probably is consistency
157:08 - throughout
157:09 - if you pick a plan stick with that plan
157:12 - so you don't have to surprise users or
157:14 - confuse users from one part of your
157:17 - application
157:18 - to another now the next step in building
157:20 - this project is called the mvp or the
157:23 - minimal viable product so check out the
157:25 - video here that will give some
157:27 - principles on designing an mvp also if
157:30 - you want to see the entire playlist for
157:32 - this course uh click here and you will
157:34 - see a class list of mini videos so
157:37 - thanks for watching and please subscribe
157:41 - [Music]
157:48 - hi and welcome back to the business of
157:50 - building applications this is a mobile
157:53 - app course for people who are interested
157:55 - in the business of design and running a
157:57 - service so there are several options and
157:59 - several chapters that we're studying so
158:02 - we talked about the motivations and now
158:03 - we're in part two which is about
158:05 - designing an mvp or a minimal viable
158:09 - product there are other considerations
158:11 - ahead of us so if you would like to
158:13 - subscribe you can see these as they come
158:15 - out if this is interesting to you my
158:18 - name is chad slooter and i am a
158:20 - professor of software development and
158:21 - computer science at grand canyon
158:24 - university so please join us in class if
158:27 - this works for you
158:28 - now what we're going to talk today about
158:30 - is application design in part four down
158:33 - here at the bottom we're focusing on
158:36 - mvp which is the minimal
158:38 - viable product we've already asked about
158:41 - which features we should include in here
158:43 - what the user interface is like and how
158:45 - to make a good user experience so now
158:47 - what we're trying to do is come up with
158:49 - version 1.0 of our product that we can
158:52 - use to test out with users and show to
158:54 - investors so that's called our mvp so
158:57 - it's certainly not the most valuable
158:59 - player like you would see in sports but
159:01 - the minimal viable product so this term
159:05 - isn't my invention of course it comes
159:06 - from a book called the lean startup and
159:09 - so you can see that it's a new york
159:10 - times best seller and a common basic
159:13 - idea in entrepreneur circles so the term
159:16 - is defined like this an mvp is the
159:18 - product that in the shortest time
159:20 - can create value for one or more users
159:24 - on a continuous basis so some people
159:26 - have the idea that the mvp is like
159:28 - super basic and ugly and barely works
159:30 - and others are saying no it's more of a
159:32 - fully functional product that we can
159:34 - test out and so there's a range of ideas
159:36 - of what people think is mvp so what i
159:39 - want to do is to show you some advice
159:40 - and some principles that will lead you
159:42 - to a successful mvp
159:44 - and make your business work
159:46 - so we've all got a list of features that
159:48 - we want to put into our app
159:50 - and we need to prioritize them so the
159:52 - mvp are the core essential things that
159:55 - make our app work
159:57 - the future ideas we're going to call
159:58 - that version 1.1 maybe or two or three
160:02 - but we're going to leave those for later
160:04 - after we've proven that our business
160:06 - concept is successful we're going to see
160:08 - if users actually like what we made and
160:11 - if the investors can go along with us
160:13 - and so the mvp is just to get us started
160:16 - it's not really the full vision yet
160:18 - so we've gone from prototype which is
160:21 - kind of like the drawings and the
160:22 - wireframes maybe something that you can
160:25 - actually work with like with a clickable
160:27 - interface
160:28 - mvp is like somewhere in the middle and
160:30 - then a real product is still ahead of us
160:33 - so we're in the intermediate stages now
160:36 - so think mvp has limited goals and
160:39 - very close attention to how much it
160:42 - costs now mvp can be considered like an
160:46 - incremental process or it can be
160:48 - considered an evolutionary process so
160:51 - the first one as far as incremental is
160:53 - not an mvp so if you were to build a
160:55 - truck
160:56 - it is not the process of building wheels
160:59 - then frame and then a body and then
161:01 - assembling it because you really can't
161:03 - use the wheel by itself now if you were
161:05 - to talk about mvp you're going to say
161:08 - we're going to build a transportation
161:10 - device that's going to carry cargo well
161:13 - the first requirement is that our
161:15 - transportation device actually moves and
161:17 - can carry something it doesn't go very
161:20 - fast and it doesn't carry very much and
161:22 - the bicycle is a slight improvement on
161:24 - that it goes a little bit faster and of
161:26 - course the motorcycle goes fast but
161:28 - doesn't carry much the idea is that we
161:30 - have a functional product at each st
161:33 - each point of the the stage of
161:34 - development and so completely different
161:36 - than just building from the ground up
161:38 - and building foundation first and then
161:41 - building out from there
161:43 - so how much does it cost to develop a
161:45 - scooter
161:46 - not very much how much does it cost to
161:48 - build an entire truck obviously quite a
161:50 - bit
161:51 - so our investment risk in the scooter
161:53 - stage is quite low and that's the whole
161:56 - point
161:57 - so if you were to build a service that
161:59 - does automated coffee production
162:02 - you would consider an mvp like this
162:06 - we want to know if the users like the
162:08 - idea of walking up to a machine putting
162:10 - a quarter in and getting a cup of coffee
162:14 - do people actually want that
162:15 - well you could invent a robot to do it
162:18 - for you and that would cost a lot of
162:19 - money but if all you're interested in is
162:21 - testing out the concept then literally
162:23 - you put a guy behind the cardboard he
162:25 - makes the coffee and hands it through
162:27 - the hole
162:29 - do people like that
162:30 - and you really don't know if they how
162:32 - well they like it until you test it out
162:34 - so
162:35 - it's a physical a demonstration of what
162:37 - an mvp looks like so if people are
162:40 - having to place orders with you and you
162:42 - manually configure them and fulfill them
162:45 - that's fine now a good example of this
162:47 - process being manual is from the company
162:50 - zappos so in a previous video i told you
162:53 - they ran an experiment to see if people
162:56 - would order shoes online so that was a
162:59 - good question so instead of building an
163:01 - entire warehouse and then running a
163:02 - business to answer that question they
163:04 - simply put up a website that sold shoes
163:07 - if somebody ordered a pair of shoes they
163:09 - would take that email and it would go to
163:11 - the store
163:12 - and they would buy a pair of shoes from
163:14 - the retailer and then they would put in
163:16 - a box and mail it to the customer now
163:18 - obviously they had no markup there was
163:20 - expenses in doing all of that and
163:22 - postage so they were losing money in the
163:24 - process but they were able to answer the
163:26 - question is our minimal viable idea
163:30 - really viable will people buy shoes
163:33 - online and of course the answer turned
163:34 - out to be yes and so they turned into a
163:37 - big investment
163:38 - and eventually were purchased by amazon
163:41 - and you can buy zappos online today
163:44 - now the idea of trying to build
163:47 - a mvp
163:49 - relates directly to the user experience
163:52 - so we want to get our mvp to the top of
163:55 - the pyramid
163:56 - but not have a great amount of money
163:59 - invested
164:00 - so here is a way to do it wrong this is
164:02 - terrible okay so terrible is to say i'm
164:06 - going to take the strategy where i'm
164:07 - only going to build the easiest features
164:10 - not the most important ones and so we
164:11 - have a broad
164:13 - part at the bottom of the pyramid that
164:14 - says we have lots of useful things that
164:16 - we can do in our mvp
164:19 - the experience is bad but at least it
164:21 - works so we don't want to do that so how
164:23 - can we get better than terrible
164:25 - well we could get to the level that
164:26 - we'll call
164:27 - bad that's not terrible so what is bad
164:30 - well bad says we'll take a slice and
164:32 - we'll get a little ways up the pyramid
164:35 - so we'll have maybe one or two features
164:37 - they work
164:39 - but we don't really have that experience
164:41 - of
164:42 - what the end goal is yet
164:44 - so we can provide some value so we want
164:47 - to do better than that so let's go up
164:49 - one more so from bad we'll go to good
164:52 - so good says we're going to take a
164:54 - narrow slice
164:56 - so we'll have maybe one feature
164:58 - that feature is both reliable it's
165:00 - convenient and it's very pleasant and
165:02 - the experience will be good for that one
165:05 - thing
165:06 - so
165:07 - the answer to the question is which
165:09 - features capture the most value for the
165:12 - customer and so it doesn't do much but
165:15 - it does one thing very well
165:16 - now we can even do better than one step
165:18 - above this we go from good to best
165:21 - so best is we'll just skew the
165:24 - development a little bit
165:25 - so that maybe we'll have not two
165:27 - features but one feature
165:28 - that one feature is very good it looks
165:31 - nice the user experience was thought out
165:34 - and a user can use the product so
165:37 - they would like to have more features of
165:38 - course but the answer to the question is
165:41 - which features best demonstrate the
165:43 - value of my product and we make sure
165:45 - that that experience looks really really
165:48 - good
165:49 - and so we want to make sure that we can
165:51 - answer that question that's the point of
165:53 - an mvp
165:54 - so let's put it into writing here so the
165:57 - mvp answers the burning question
165:59 - is
166:00 - how will users receive your product
166:04 - this is really a mystery until they
166:06 - actually have in their hands and they
166:07 - can test it out so do they yawn at your
166:10 - product if they say this is really
166:12 - nothing special or is boring
166:14 - then you fail fast and you might just
166:16 - decide at this point
166:18 - not worth it
166:19 - the investors flee we abandoned the idea
166:23 - bad idea nobody likes it or we could say
166:26 - that the users come back with a mixed
166:28 - kind of a review they say it's a nice
166:30 - app but i would prefer it if it were
166:32 - slightly different if so then we know we
166:35 - have a roadmap for version 2.0
166:38 - or if we hit it right and we have a
166:40 - great experience and the users are
166:42 - excited then we roll and we can start
166:44 - adding development advertising the thing
166:47 - marketing and new features are in the
166:49 - future so implicit in this discussion is
166:51 - the idea of keeping the costs low so
166:54 - your mvp
166:55 - has a a relationship to its cost based
166:58 - on the number of features you put in
167:00 - so keep that slice
167:02 - small
167:04 - one good feature
167:05 - and the cost of development is lower so
167:08 - instead of spending a hundred dollars an
167:09 - hour for your developers for each
167:11 - developer to create features that are
167:13 - really not critical
167:16 - then keep those out
167:18 - so there's an inverse also a
167:19 - relationship to the amount of acceptance
167:22 - and understanding that your users are
167:24 - giving you so they have a limited
167:26 - bandwidth of what they can give you for
167:28 - feedback
167:29 - so
167:30 - fewer features
167:31 - means you get the right feedback from
167:33 - your users
167:35 - so their understanding of what your app
167:37 - does is better
167:38 - when there's not as many choices
167:41 - so lower cost
167:42 - and more accurate feedback on the
167:44 - burning question
167:46 - so really the question is
167:48 - what features should be in our mvp
167:51 - answer that with three questions
167:54 - does the user need it
167:56 - how simple is it to develop
167:58 - and does it provide value to the company
168:01 - and of course we want those answers to
168:03 - be positive
168:04 - and then we know which features are in
168:06 - the mvp
168:08 - now does the user need it that's our
168:10 - first question
168:11 - obviously you have the core idea so
168:14 - don't try to chase down things that are
168:16 - nice to haves so then the next question
168:18 - is what does it cost to develop
168:20 - so not only do you have to calculate the
168:22 - cost of your computers and the time that
168:25 - you pay for your developers but you
168:27 - think of the opportunity cost you want
168:29 - to get this business started and so if
168:31 - you
168:32 - don't answer the question right then
168:35 - you're probably going to be losing in on
168:37 - opportunities that you could be working
168:39 - on now the last question is does it
168:41 - provide value to the business
168:43 - so the first value you can think of is
168:45 - revenue
168:46 - so one luxury you do have is that you
168:48 - can postpone the development of the
168:50 - revenue part until later because the
168:53 - goal is to find out if users like it
168:55 - and then get it get them hooked on it
168:58 - and so don't annoy them with your ads
169:00 - just see the if they like the feature
169:02 - first
169:04 - now double check when you get to this
169:06 - point in your development and you have
169:08 - an mvp you've presented it to users and
169:10 - they've given you feedback
169:12 - ask yourself
169:14 - am i developing anything that is truly
169:16 - unique
169:17 - this is a double check do my users see
169:20 - it as a differentiated product
169:22 - do i think that it's going to be an
169:24 - improvement
169:26 - where are we going with this that's the
169:27 - double check point
169:29 - now also keep track of your backlog
169:31 - because everyone's got these features
169:33 - that they are anxious to put in
169:35 - we know that we're going to promise the
169:37 - people that they're going to be there
169:38 - and that's what your backlog does so
169:40 - version two is going to have numbers uh
169:42 - four five and six and version three is
169:45 - going to have all the great things in
169:46 - the future but we're not going to invest
169:48 - money in those until we know that
169:50 - features number one two and three are
169:52 - the ones that users will actually adopt
169:56 - and so it allows the users
169:58 - to see the future
169:59 - and the developers can build something
170:02 - that they can
170:03 - adapt and extend
170:06 - and plan for in other versions
170:08 - so now you got your mvp in place you've
170:10 - tested it with a few users and you can
170:12 - answer the question truthfully now is
170:14 - this a good idea
170:16 - not only do i think it's a good idea but
170:18 - do other people like it and will it sell
170:20 - and so that is really the one goal that
170:22 - you have for an mvp is to test your idea
170:25 - and see if it's going to launch
170:27 - now in the next video we're going to
170:29 - talk about monetizing and marketing your
170:31 - app how do you get people to adopt it
170:33 - and use it and how can you pay for it if
170:36 - you'd like to see that click the video
170:37 - that's up here on the screen also i have
170:39 - the link to the entire playlist so you
170:41 - can see all of the subjects of the
170:43 - business of building applications thanks
170:45 - for watching and please subscribe
170:49 - [Music]
170:56 - hi and welcome to the business of
170:58 - building applications this is a video
171:00 - that will give you some ideas of how to
171:02 - complete an assignment if you were one
171:04 - of my students we're in part two of an
171:07 - of eight chapters of a course and this
171:09 - is about designing an effective app and
171:12 - so this video here is going to give you
171:14 - some details on an assignment if you
171:16 - were in my in my class at grand canyon
171:18 - university this is what i expect of you
171:20 - if you're not in my class then you're
171:22 - feel free to do the assignment but
171:23 - you'll probably have to just put your
171:25 - things in the comments below so what i
171:27 - want you to do in this assignment is to
171:30 - look at some design examples and so when
171:33 - i say design examples i'm talking about
171:35 - app design this is going to look at some
171:37 - people that really did a great job on
171:40 - how they would build an app
171:42 - so
171:42 - we're going to take a look at some
171:44 - people that know what they're doing
171:47 - and we're going to evaluate how well
171:49 - they've covered the basis and what we
171:51 - can learn from them so i'm going to show
171:54 - you three case studies three design
171:56 - projects that are posted online that we
171:58 - can look at and number one is about an
172:01 - app that would do pet food recipes and
172:04 - so this uh website that we're looking at
172:06 - for these examples is called uxdesign.cc
172:10 - and so the first one i want you to pick
172:12 - out is this one here called a
172:13 - step-by-step guide
172:15 - to the process of designing a pet diet
172:18 - app and so this is their first page i'll
172:20 - provide the link to this below
172:22 - so this here is the it doesn't exist
172:24 - this app doesn't exist this here is the
172:26 - the layout this is the sketch this is
172:29 - the the prototype for the app so you can
172:32 - see that when you look at this web page
172:34 - you're going to see that they started
172:35 - with this process of sketching out with
172:37 - literally a pencil and paper
172:40 - the wire frames what the app's going to
172:41 - look like and then you can see
172:43 - navigation links between it
172:45 - then the wireframes are a little bit
172:47 - nicer than just the sketch it's done
172:49 - with a drawing program
172:51 - and so it's a little bit easier to read
172:54 - and then
172:55 - this user created an inspiration board
172:57 - so they went to look at other apps that
172:59 - were similar to get uh
173:02 - probably graphics and uh color schemes
173:05 - and what they did for the the look and
173:07 - feel
173:08 - and then here is a nice uh design
173:12 - process so i don't know if you do this
173:14 - or not but
173:15 - iterations so you're going to design
173:18 - something and you don't take the rough
173:20 - draft and just start implementing it you
173:22 - create three or more things to look at
173:25 - so that way you can compare them and
173:26 - judge
173:27 - based on what you've
173:28 - what you looked at from a distance or
173:30 - you can provide it to other users and
173:32 - get their feedback and pick the one that
173:33 - people seem to gravitate toward so
173:35 - anyway in this case study you can see
173:37 - that the green one was
173:40 - selected by the user to say i think i
173:42 - did the best job on this one
173:44 - so when you look at these three
173:46 - which one would you pick i'm not sure if
173:48 - i agree is three the best
173:51 - it's kind of a personal preference
173:53 - and then when they're done here they
173:54 - have this
173:55 - fully formed
173:57 - graphical user interface they can see
173:59 - the whole app
174:01 - number two that i'm going to ask you to
174:02 - look at is a food ordering app so once
174:05 - again i'm going to take you back to the
174:07 - same website which is the ux collective
174:10 - and in this case
174:12 - the student created an app for ordering
174:14 - mobile
174:15 - mobile meals
174:17 - and so
174:18 - the steps here involved maybe a few
174:20 - other things
174:21 - notice that they used what they called a
174:23 - user persona so these are fake people
174:26 - but these people are
174:29 - representative of the ideal customer
174:33 - and so
174:34 - you can see that they have certain
174:36 - targets that means their preferences
174:38 - where they hang out online
174:40 - a little biography about who they are
174:42 - where they work and how old they are
174:44 - what they like what frustrates them and
174:46 - so
174:47 - these are the ideal targets for this
174:49 - application so that's called a persona
174:51 - that's actually a terminology that you
174:53 - should start using the persona the
174:55 - target person for my app
174:57 - then we're going to have a process here
174:59 - so this person not only thought about
175:00 - the user interface
175:02 - but they are considering the user
175:04 - experience so the user experience is how
175:07 - does the app work and how does the
175:08 - entire business work with the app what's
175:11 - the user going to experience from the
175:13 - moment they open the app to the moment
175:15 - they pay for it or get their product and
175:17 - so ux then the wireframes come next just
175:20 - like the previous example and you can
175:22 - see that they're designing uh very
175:24 - detailed plans for what the app's going
175:26 - to look like and then
175:28 - they organized it so
175:30 - more ideas from other users and more
175:33 - other apps and then finally you get to
175:35 - this this is a nice clean
175:38 - photo ready app that doesn't work yet
175:41 - it's just a user interface
175:43 - but you could provide this to your ideal
175:45 - customer or to your boss
175:48 - and have a very good plan on what you're
175:50 - going to be building
175:52 - so the third case that i want you to
175:53 - look at is this number three called the
175:55 - fitness app so this fitness app is a ux
175:59 - case study again so fitter me is the
176:01 - name it doesn't exist in an app form as
176:05 - far as i know but it does give you a
176:07 - pretty good idea of where they want to
176:08 - go
176:09 - so
176:10 - this case study has a competitive
176:13 - analysis
176:14 - so the competitive analysis will tell
176:16 - you who's out there already so obviously
176:18 - strava is like a huge market leader
176:22 - why are we building an app that replaces
176:23 - strava i'm not sure but the competitive
176:25 - analysis is supposed to tell us
176:28 - why
176:29 - maybe there's some weakness or some
176:30 - specialty that we can exploit so who's
176:33 - the target so we've got this pretty
176:34 - broad range we've got some segments of
176:37 - people who are going to be likely users
176:39 - of the app
176:40 - we have some interview questions so this
176:43 - is a great way to
176:45 - find out what is really happening in the
176:47 - minds of your potential users is
176:49 - remember in the previous activity and
176:50 - the assignment that i asked you to do
176:52 - was to go and talk to your friends and
176:54 - family and present your idea of your app
176:57 - and then get feedback so this is exactly
176:58 - what this person did here with the
177:01 - interview questions so why would you
177:03 - want to use my app what would you change
177:05 - if you could modify it and how much
177:07 - would you pay for it how much how how
177:10 - likely on a scale of one to ten are you
177:12 - going to use this app once it's released
177:15 - and so remember this market research
177:17 - will save you hundreds of hours and
177:19 - maybe lots of money because
177:21 - if you find that nobody cares about your
177:23 - app then
177:24 - don't even bother advancing beyond
177:27 - so next this user created a persona and
177:30 - empathy map so the empathy map is asking
177:33 - yourself what does this person think
177:36 - what do they experience
177:38 - so
177:39 - how do they
177:41 - find the process of
177:43 - exercising right now is it frustrating
177:45 - to them are they inspired or
177:47 - you try to have empathy for them not
177:49 - just in
177:50 - you know being a psychologist that
177:52 - listens well but an empathy in
177:53 - understanding what makes them tick
177:56 - then we get into the wireframes and the
177:58 - connections between them so the site
178:01 - navigation so they've got a pretty good
178:02 - idea what their app's going to look like
178:04 - now what i want you to do is after you
178:07 - looked at these three in more detail
178:09 - than what i just showed you i want you
178:11 - to write about what you learned
178:14 - so question number one
178:16 - i want you to notice a couple of things
178:18 - that these case studies followed a very
178:21 - common format there are certain
178:22 - ingredients in each case study and each
178:25 - design
178:27 - that they all addressed so what are the
178:29 - common sections of a user design
178:31 - document
178:32 - then the second is
178:34 - some of these you might rate as more
178:36 - complete or more compelling than others
178:39 - so which of these three
178:41 - do you provide or do you think what
178:43 - provides the best idea
178:45 - and the best guidance
178:46 - for an app developer to follow so if you
178:49 - were their boss
178:50 - which one would you promote and which
178:52 - one would you send back for a second try
178:56 - then the next question is that most apps
178:58 - in the stores
178:59 - hardly get any downloads at all
179:02 - clearly there's an app for every need
179:04 - but there's not a need for
179:06 - every app
179:08 - so based on the
179:09 - business ideas that are here
179:12 - which of these three do you think has
179:15 - any kind of a chance of attracting a
179:17 - crowd
179:18 - so are there success in their future or
179:21 - not
179:22 - so explain your answer so what i'm
179:23 - asking you to do is not to design your
179:26 - own app this time but take a look at
179:27 - other people's work
179:29 - and see if you can see success or
179:31 - failure in their future
179:34 - so now let's move on to the second part
179:35 - of our observations
179:37 - so
179:37 - let's talk about freelance work so
179:39 - freelance app developers sometimes
179:42 - browse
179:43 - websites like upwork or freelancer.com
179:46 - looking for jobs to bid on
179:49 - so if you were
179:50 - seeing these
179:52 - three apps that were up for
179:54 - development
179:56 - are there any one of them that you would
179:59 - be interested in
180:01 - bidding on assuming you were going to be
180:02 - paid several thousand dollars you were
180:04 - going to be paid well for your time
180:07 - which one of these apps would merit your
180:09 - time
180:11 - and then explain why you would apply for
180:13 - one over the other
180:14 - so you might have personal reasons such
180:16 - as it's interesting to you or you think
180:18 - that this
180:20 - person has their act together and
180:21 - probably
180:22 - has a clear vision or what's what's your
180:25 - reasoning so which of the three would
180:27 - you apply for if you were a freelancer
180:29 - and then
180:31 - think about your own app now
180:33 - so
180:34 - since you might not be a designer a
180:37 - professional designer
180:39 - you're probably going to imitate those
180:40 - that are
180:42 - so using these three case studies you're
180:43 - probably going to look at your own idea
180:45 - and follow the same format good for you
180:47 - because these are done in great formats
180:50 - so these case studies are meant to be
180:51 - imitated
180:53 - so which of these three do you think
180:54 - makes the best model
180:56 - for you to imitate
180:58 - in designing your own app successfully
181:00 - so explain to me what you liked about it
181:02 - and why you would follow their pattern
181:04 - finally let's talk about the
181:05 - deliverables
181:07 - in this assignment if you were in my
181:08 - class i would expect a one-page word
181:10 - document and i would expect you to
181:12 - compare the app design case studies did
181:15 - i say four i think i only showed you
181:17 - three if you're not in my class then go
181:20 - ahead and write the comments below in
181:21 - the youtube comments section about which
181:23 - of these three cases you thought were
181:25 - the strongest
181:26 - and why you believe they are i'm going
181:28 - to provide the link to the entire course
181:30 - so if you'd like to see the playlist for
181:32 - the business of app design
181:34 - please join me there also don't forget
181:36 - to subscribe if this content is
181:38 - interesting to you thank you and we'll
181:40 - see you next time
181:44 - [Music]
181:51 - hi and welcome to the business of
181:52 - building applications this is a course
181:54 - where you're learning how to create apps
181:56 - as a business manager so we're in part
181:59 - two which is chapters on designing an
182:01 - effective app and in this video i'm
182:03 - going to give you an assignment we'll
182:05 - call this activity 2.2
182:08 - and the goal here is that we are going
182:09 - to try to develop what's called
182:12 - user stories so when you're designing an
182:15 - app you have to figure out what your
182:16 - users want to do
182:18 - and so the background here is that our
182:20 - user stories are a prioritization of all
182:23 - of the features in our app
182:26 - so it's a natural language description
182:29 - of every feature such as as a user i
182:31 - would like to log in so that i can have
182:33 - access to the application that's a user
182:36 - story tells me who and what they want to
182:38 - do so a user story is a short statement
182:40 - that is written from the perspective of
182:42 - the user so for instance you might say
182:44 - as a role i want to do something so that
182:47 - i can so for instance i might say as a
182:50 - manager that's the role i want to
182:53 - see a sales report to be sent to my
182:56 - inbox every day so that i can track the
182:59 - success or failure of my team and so
183:01 - that tells you a feature of the app that
183:04 - you want to build so your app might not
183:06 - have any of the features that look like
183:07 - that at all but that's an example of
183:09 - what a user story looks like
183:11 - now once you've got a bunch of user
183:12 - stories it's nice to put them into
183:14 - categories and so
183:16 - probably a
183:17 - sensible way to do this when you put it
183:19 - onto some kind of a sticky note or a
183:21 - virtual sticky note and then you and
183:23 - your team would get together to say
183:25 - which ones are these are the best ones
183:26 - which ones are we going to leave till
183:28 - the future so you can prioritize what
183:30 - things you need to do right away
183:33 - so what you would probably think of is
183:36 - essential mvp features first so mvp
183:41 - stands for minimal viable product we'll
183:44 - get to that later but the minimal viable
183:46 - product is the first version of your app
183:49 - it's probably not very scalable
183:51 - and it might not be perfect but it's
183:53 - certainly going to tell us
183:55 - what the app can do and you can provide
183:58 - experiences to the actual users and they
184:00 - can give you feedback on it
184:01 - so for instance in a previous activity
184:04 - we looked at a case study of a user for
184:07 - a pet recipe app and so i put a feature
184:11 - in here that might have been in that pet
184:13 - recipe app that says here
184:14 - as a user i want to search for recipes
184:16 - to them for my pet so that i can find
184:18 - something appropriate for his medical
184:20 - conditions okay
184:22 - and the reason why we would put that as
184:24 - a high priority is because in our
184:26 - interviews with our test users our
184:30 - personas
184:31 - we found that this was the most common
184:33 - request from our user surveys
184:35 - so we would be able to identify what it
184:37 - is and give it a priority number two
184:40 - they may have said here's another
184:42 - feature of the app as a user i want to
184:44 - read instructions so that i can prepare
184:46 - a recipe
184:48 - was also common from our users
184:50 - and we would also categorize it as
184:53 - essential to the core operation of the
184:55 - app that's really what our app does
184:57 - that's the main activity
184:58 - how about the third one let's examine
185:00 - that one too it says as a user i want to
185:02 - read about the ingredients that are in
185:04 - each recipe so that i can know what the
185:06 - health benefits are associated with the
185:08 - recipe this is essential
185:10 - it's a common request
185:12 - but for the app to actually work then
185:15 - the users
185:17 - don't really need that to see what the
185:19 - app looks like we could put in some
185:20 - dummy data here and just say hey if if
185:23 - this app were finished then you would be
185:24 - able to see
185:26 - the contents of your meal so we gave it
185:28 - a priority of one
185:30 - well it eventually it'll hit the app but
185:32 - for right now it's not going to hurt hit
185:34 - version number one
185:35 - so here's some future version priority
185:37 - so we've pushed these away and said
185:40 - maybe someday
185:41 - so for instance i want as a user i want
185:45 - to create a shopping list for the
185:46 - ingredients based on my favorite recipes
185:50 - so we said we're going to put this in
185:52 - version 2.0
185:54 - because of the complexity of the
185:55 - development sounds like we're going to
185:57 - take some more time
185:59 - it's also essential to the revenue model
186:01 - of this app because
186:03 - we're planning on monetizing the app by
186:06 - taking a cut out of every item that is
186:08 - ordered from amazon
186:10 - so if we don't include this feature we
186:11 - won't make any money so that's why it's
186:13 - essential
186:14 - but remember in the first version of the
186:16 - app we don't have to make money the
186:17 - first version of the app we just have to
186:19 - prove that people like the app
186:21 - so we'll leave that as a future version
186:24 - number two i want to fulfill the
186:25 - ingredients on amazon and the order yep
186:28 - i mentioned one same thing here we're
186:30 - going to take a percentage of the sales
186:32 - and then number three or the third item
186:34 - here it says i want to track my pet's
186:36 - weight
186:37 - so maybe that's great but according to
186:39 - the survey
186:41 - we asked our people if they ever wanted
186:42 - to weigh their pets and and most people
186:44 - said no so
186:46 - we thought it was a good idea we put it
186:48 - on the on the list of things but our
186:49 - users told us otherwise so that's maybe
186:52 - an example of how you would prioritize
186:54 - user stories so based on what you can do
186:57 - and what your users want you to do
186:59 - so what i want you to do then in this
187:01 - assignment is to create a table
187:04 - so write all the user stories that you
187:06 - can think of that your app will do
187:09 - all of the features and you write them
187:11 - in that i as a user kind of format
187:14 - and then put them in a chart to say
187:16 - which ones are nice to have which ones
187:18 - are going to be pushed off to future
187:19 - versions so it's really just a table
187:22 - with a bunch of sticky notes so that's
187:23 - your deliverable i want you to create a
187:25 - word document with a list of
187:28 - minimal viable product features
187:31 - and then also put them in the future or
187:33 - the present categories if you were one
187:35 - of my students i would grade you based
187:37 - on the completeness of what the app
187:39 - looks like
187:40 - and how much thought that you can
187:42 - justify for each decision
187:44 - if you're not in my class then feel free
187:47 - to do this on your own as you're
187:48 - designing your own applications i'll put
187:51 - the link to the course playlist here so
187:53 - that you can go back and see some of the
187:54 - teachings that are going to help you in
187:57 - making this assignment come true so if
188:00 - this is good for you then please make
188:01 - sure you subscribe for the channel and i
188:03 - will see you next time in class
188:09 - [Music]
188:15 - hi and welcome to the business of
188:17 - building applications this is a course
188:19 - for people who are not only programmers
188:21 - but also business thinkers we're in
188:23 - chapter two of the course right now
188:25 - which is called designing an effective
188:27 - app and i'm going to give you an
188:28 - assignment so we'll call this assignment
188:31 - 2.3
188:32 - and in this assignment what we're going
188:34 - to create are interactive user
188:36 - interfaces okay so in other words we're
188:39 - going to create a small prototype a demo
188:41 - of an app so the background is that i
188:44 - want you to create something that is
188:46 - functional and something that you can
188:48 - put into the hands of your users to test
188:51 - out and maybe you for the first person
188:53 - will be the the first person to test it
188:56 - so what this demo will do is will
188:58 - clarify in your own mind how the app
189:00 - will work you will find that there are
189:02 - some gaps in your logic or design and
189:05 - this will become painfully evident by
189:07 - how it works so you can show it to your
189:09 - potential users and business partners to
189:11 - see if you're on the right track so to
189:14 - do this demo we're going to use a
189:16 - program called figma so figma is free
189:19 - and so what i want you to do is to go
189:20 - log in at figma.com
189:23 - and get an account so that you can
189:25 - design an app you can see in the
189:27 - background here that i started designing
189:28 - a mobile app and it's got two pages on
189:31 - it right now so figma is pretty cool
189:33 - i want you to look at the tutorial pages
189:35 - to see how it works but it's so simple
189:37 - if you've worked with any kind of
189:40 - word or publisher or any kind of a page
189:42 - layout document you'll probably
189:44 - understand that you can drag shapes and
189:46 - resize them but then the cool part is
189:48 - you can click the play button and you
189:50 - can actually go through the app and see
189:53 - what the navigation looks like
189:55 - so here are the instructions that i want
189:57 - you to follow for sign up for an account
189:59 - at figma and then create a set of
190:01 - wireframes so that's the
190:04 - drawings of your screen
190:05 - and these will each represent one of the
190:08 - actions in your app
190:09 - so the actions are your user stories and
190:12 - then connect them so that way we can see
190:14 - the navigation links between each
190:16 - then run the app and test it out make
190:19 - sure that you haven't forgotten anything
190:21 - and that it works like you expect and
190:23 - then for you to submit it to me is to be
190:26 - graded i want you to do a demo and
190:28 - record the screen so you can record it
190:31 - with something like quicktime
190:33 - or if you use loom.com you can record
190:36 - your screen and have an a narration that
190:38 - goes along with it so the deliverables
190:41 - if you were one of my students i would
190:42 - ask you to submit a word document with
190:44 - wireframe drawings and in that word
190:46 - document you would have a link to say
190:48 - hey this is the video this is how i
190:49 - demonstrated my app and the prototype
190:51 - works and i'll show you all the features
190:53 - in it
190:54 - so if you're doing this without being
190:56 - one of my students go ahead and provide
190:58 - links in the comments below so that
191:01 - other people can see what you've
191:02 - designed and maybe you can get some
191:04 - feedback from them so thanks for
191:05 - watching i'm going to put a playlist
191:07 - link so that way you can check out all
191:09 - of the other items of this course make
191:12 - sure you subscribe if this is
191:13 - information that is valuable to you and
191:15 - we will see you in the next class
191:20 - [Music]
191:27 - hi welcome to this course here on the
191:29 - business of building applications we're
191:32 - in a section right now called the
191:34 - business plan so if you've been
191:35 - following me along you can see that we
191:38 - have several ideas about how to make a
191:40 - successful business app and so we're on
191:43 - part three right now which is about the
191:44 - business plans including marketing and
191:47 - monetization however you can see that
191:50 - there are other chapters in this course
191:51 - that we're going to cover and so if you
191:53 - haven't subscribed yet do that now my
191:56 - name is chad slooter and i teach
191:58 - software development at grand canyon
191:59 - university including mobile development
192:02 - and so welcome to class now let's take a
192:04 - look here at what we're going to talk
192:06 - about in the next few videos so we're on
192:09 - the app business plan cycle which i'm
192:12 - going to just put into four different
192:14 - categories we're going to talk in this
192:17 - section about your main business plan
192:19 - and we'll put it in a format called the
192:21 - business model canvas we'll talk about
192:23 - ways to monetize your app ways to market
192:27 - and get new users and talk about your
192:29 - relationship with investors if you're
192:32 - going that route and so this is four
192:35 - videos about the business plan of your
192:37 - app so now if you're interested in the
192:39 - business plan obviously you intend to
192:41 - make your app into a service or a
192:43 - product that people are willing to pay
192:46 - for
192:46 - so the plan that we're going to look at
192:49 - right now is called the business
192:51 - canvas model so unfortunately i can't
192:53 - take credit for the plan or the
192:56 - organization of this model here so this
192:58 - comes from a book here called the value
193:00 - proposition design which is a really
193:03 - interesting book you should check it out
193:04 - it's like a picture book with all kinds
193:07 - of ways to graphically show your
193:10 - strategies of how to make a business and
193:12 - so this is by alex osterwalder and you
193:15 - can see some of his uh
193:17 - people that worked along with him so
193:19 - we're going to take a look at nine
193:21 - business issues that he identifies that
193:23 - you must clarify so who are your
193:25 - partners what do you do for your
193:27 - customers what resources do you have
193:29 - what value do you provide
193:31 - why do your customers love you what
193:33 - channels do you use to either gain
193:35 - customers or deliver your services and
193:37 - products who is your customer and the
193:39 - profile what cost will you incur and
193:42 - what streams of revenue will you support
193:44 - your business with so let's talk about
193:46 - these individually now for some reason
193:48 - we can't just put these into nine
193:50 - different questions we have to organize
193:52 - them into this plan this board and so it
193:55 - makes you look smarter when you have a
193:57 - way to organize your things on a board
193:59 - perhaps i don't know maybe it makes it
194:00 - easier to remember but
194:02 - anyway we're going to follow the plan
194:03 - here this board so the key partners is
194:07 - the first question who are your business
194:08 - partners who are your associates who do
194:10 - you need to survive and the
194:12 - relationships with them what activities
194:15 - do you do what is the core service that
194:17 - your customers look for you to provide
194:19 - then we have key resources now these
194:22 - resources can be things that you possess
194:24 - or things that you must pay for or
194:26 - obtain
194:27 - and so this would refer to either the p
194:30 - the human
194:31 - capital that you have or the data that
194:32 - you collect or
194:34 - any kind of product that you're able to
194:36 - manufacture so
194:38 - value propositions are about your
194:40 - customers and why they think you are
194:43 - worth the money so do you make their
194:45 - life easy do you provide entertainment
194:48 - do you provide a service that they can't
194:50 - live without so the value proposition
194:52 - means
194:53 - why do people want to give you money and
194:56 - so you better have a good one
194:58 - a customer relationship can be the
195:00 - question is
195:02 - why do customers love you and why do
195:04 - they keep coming back or perhaps if your
195:07 - plan doesn't work so well you could do
195:08 - the opposite
195:09 - the channels refers to how you are going
195:12 - to reach your customers or how you're
195:15 - going to deliver your services and
195:16 - products and so what are your channels
195:18 - of distribution or your channels of
195:21 - incoming customers
195:22 - also your customer segments
195:25 - so it's ideal to have
195:27 - a profile
195:28 - the exact age
195:30 - the gender
195:31 - the location
195:32 - the hobbies the problems you have a
195:36 - profile that would tell you
195:38 - who
195:39 - john doe is and why he is your customer
195:42 - and also there might be a variety of
195:44 - john does that have slightly different
195:45 - attributes and so you segment your
195:48 - customers to figure out which ones are
195:50 - happy and which ones need improvement
195:52 - also the cost structure would you have
195:55 - an ongoing process that cost you money
195:57 - you subscribe to things do you have to
195:59 - pay people for
196:02 - giving you services that you pass on to
196:04 - your customers and so your cost
196:05 - structure is all about salaries and
196:07 - ongoing expenses
196:09 - and the last one is revenue streams and
196:12 - so how do you make money are people
196:14 - paying for your app are you selling
196:15 - advertising are you getting commissions
196:18 - and so those are all questions about
196:20 - revenue streams and so there you have it
196:22 - we've got the whole list here and like i
196:24 - said you have to put it on this board to
196:25 - make it officially your business
196:27 - planning board i don't know if you need
196:29 - this board but i i thought about it for
196:31 - a while and i realized i actually do
196:33 - remember all of these questions better
196:36 - when i see these icons in the in the
196:38 - layout so maybe you'll you'll find the
196:40 - same process
196:41 - regardless these are important questions
196:43 - that you must clarify if you're going to
196:46 - have a successful business and of course
196:48 - you're going to find that if there's a
196:49 - weak link in your plan that's probably
196:51 - going to require your attention and to
196:54 - make the process work better so to make
196:56 - this uh more concrete let's take a look
196:59 - at an example application so i pulled
197:02 - something out of the app store and i
197:05 - think i was looking for discounted
197:06 - restaurant
197:08 - coupons something like groupon and i
197:10 - found this app and it appears to have a
197:13 - number of users i'm not even sure if
197:14 - it's used useful in the united states or
197:16 - not but i don't think i've ever used the
197:18 - app but anyway i wanted to pick this as
197:20 - an example of how a process would go to
197:23 - think about
197:24 - how you would fill out this a business
197:27 - board so we have to have concrete
197:28 - examples right
197:30 - so eatago is a restaurant reservation
197:32 - app which offers time-based discounts
197:35 - that means probably discount of the day
197:37 - of up to 50 off every day for all of its
197:41 - four thousand five hundred plus
197:43 - restaurants there are no prepayments or
197:45 - hidden costs etigo is a 100 free at
197:48 - least it is to you the user and it's
197:50 - simple to use search and rejoice enjoy
197:52 - so the idea here is that this is an app
197:55 - but it's really an app that is a
197:57 - business it's a service you probably
197:59 - don't have to make the food but you do
198:00 - have to provide a stream of customers to
198:03 - restaurants to be successful and so
198:05 - here's some screenshots of what the app
198:07 - looks like you can see that you're
198:08 - getting groupon like coupons and you
198:11 - probably are going to be sent to
198:13 - restaurants that you're not familiar
198:15 - with and you're supposed to try them out
198:17 - and of course the restaurant is going to
198:20 - hopefully see you again and they will
198:22 - become your favorite place to eat so
198:25 - let's take this example
198:27 - and answer some of the questions that
198:28 - will go on this business planning board
198:31 - so let's start over so we have this key
198:33 - partners now if you were that restaurant
198:36 - app itago
198:38 - who are the partners
198:40 - well think of those 4 500 restaurants
198:42 - that are willing to
198:45 - give you the discount
198:47 - so those would be probably
198:49 - the key partners so i put down here
198:51 - restaurants maybe caterers food trucks
198:54 - hotels
198:55 - anyone that's willing to pay you
198:58 - to bring them a new client and so your
199:01 - key partnerships here you better make
199:03 - sure that you're really strong with
199:04 - these people
199:05 - and
199:06 - you are on good terms if these things go
199:09 - sour your whole business plan will fail
199:12 - and so that's why they're called key
199:13 - partners the second is what activities
199:16 - do you do so if you had to give the
199:19 - elevator pitch about this app you say hi
199:21 - i am shad i have this app called eatago
199:25 - and it
199:26 - what would you say put it in one
199:28 - sentence think about it
199:30 - well here's what i put so if you want to
199:32 - see my answer i said we match people
199:35 - with places to eat
199:37 - now there's uh there are other parts
199:39 - about discounts and things like that but
199:41 - that's pretty much it
199:43 - what are the key resources what do you
199:45 - have to have or obtain
199:47 - to make this thing work what makes your
199:50 - app valuable sometimes this is called
199:53 - the moat
199:54 - around your castle this is what prevents
199:56 - competitors from moving in and taking
199:58 - over your business you have a protective
200:01 - ring so what resources do you have that
200:03 - other people don't
200:06 - well you can probably say i have a lot
200:08 - of users hopefully you do
200:10 - it's probably the most difficult thing
200:11 - of making this app work properly is that
200:14 - you need to have a critical mass
200:16 - once you have some people
200:18 - i think that perhaps the data is
200:21 - considered a key resource
200:23 - you have a user list
200:25 - with knowledge of their preferences and
200:27 - habits
200:29 - so you obviously don't want to share
200:31 - that that would be a key resource
200:33 - think of your employees if you've got
200:35 - somebody that's out selling your product
200:37 - if you're trying to get new restaurants
200:39 - into your
200:40 - fold and into your collection
200:42 - then your key resources would be the
200:45 - contacts the sales people that are
200:46 - trying to get new restaurants to
200:48 - participate
200:50 - and so those are some things that i
200:51 - would say are key resources for this
200:53 - example
200:54 - what is the value proposition
200:57 - so think of it
200:58 - what what do people get when they use
201:01 - your app
201:02 - well i can see two value propositions
201:05 - one for the restaurant
201:06 - and one for the users or the clients for
201:10 - me as a client that's how i see it why
201:12 - would i download this app well i get
201:14 - free food or i get cheap food and i get
201:16 - to try something cool maybe a new
201:17 - restaurant i haven't seen before
201:19 - and then the restaurants what do they
201:21 - get well they get a stream of new
201:23 - customers so i would say the value
201:25 - proposition here goes two ways for this
201:28 - app we get a cheap meal
201:30 - and the restaurants get a stream of new
201:32 - customers now groupon some time ago was
201:35 - a hot item it seemed like everybody
201:38 - wanted to use groupon everyone was
201:40 - trying to
201:42 - get new customers in through groupon
201:45 - and i think it's cooled off quite a bit
201:47 - it was a it was an expensive proposition
201:49 - for the re retailers for the people that
201:51 - were giving away their services
201:54 - because they would get customers in the
201:55 - door
201:56 - one time and they never came back and i
201:58 - think that the value proposition was
202:00 - rather low but anyway here's another
202:02 - example of a app that's trying to do the
202:04 - same thing as groupon maybe they're more
202:06 - successful so your restaurants have to
202:08 - have some kind of a
202:11 - a payoff in the long term
202:13 - of course you give them the the first
202:14 - impression the restaurant's job is to
202:17 - make it a good one
202:18 - who are the customers and why do they
202:20 - love you so the customer relationships
202:23 - so i would say
202:25 - that your way to make your customers
202:28 - love you
202:29 - is that every time they open the app or
202:31 - they turn on their phone they get an
202:33 - alert that says hey there's a new offer
202:35 - you get a constant stream of good deals
202:38 - and interesting places to eat
202:41 - and that would make me want to open the
202:44 - app and keep it installed on my phone
202:47 - you can also say the key relationships
202:49 - with your restaurants is that you have a
202:51 - steady stream of good customers now i
202:54 - think some restaurants might argue that
202:56 - these are bad customers a bad customer
202:58 - for a restaurant is somebody that
203:00 - doesn't tip that doesn't pay
203:02 - that only works with coupons i know i'm
203:05 - certainly a bad customer when it comes
203:06 - to restaurants i hate spending money and
203:09 - so i usually look for rather inexpensive
203:12 - places to eat so i would not be
203:14 - one of the target
203:16 - users that a restaurant would be trying
203:18 - to get
203:19 - here's another one what are the channels
203:21 - so the channels for delivering your
203:23 - product and the channels for obtaining
203:26 - new clients so let's talk about this one
203:30 - we would probably think about a steady
203:33 - stream
203:34 - of people downloading and trying our app
203:37 - through social media
203:39 - so if you go viral that's great where
203:42 - you have recommendations from your
203:43 - friends but to get to that point you're
203:45 - probably going to invest a great deal of
203:47 - money in acquiring new customers
203:50 - so people
203:52 - will probably see an ad on facebook
203:54 - or maybe on tripadvisor or instagram
203:58 - or maybe they're googling restaurant
204:00 - names
204:01 - so you're going to have to spend some
204:03 - money to get their attention
204:06 - and so the channel is going to be rather
204:08 - expensive at first trying to get enough
204:11 - people to try out your app but i would
204:13 - think that those are probably good
204:15 - resources for getting new people
204:18 - what are the segments like i told you
204:20 - earlier i probably wouldn't fit one of
204:21 - these
204:23 - but here here are some
204:24 - segments that i would see are likely
204:27 - people who travel you know you're in a
204:28 - new city and you don't know where to eat
204:31 - people that eat out a lot obviously
204:33 - business lunches
204:35 - and maybe you're trying to target
204:37 - somebody that has an expense account at
204:39 - work maybe maybe not
204:40 - uh people that have expense accounts
204:42 - probably don't worry about 50 off deals
204:45 - maybe that's not a good customer segment
204:47 - there's going to have to be some
204:48 - research here obviously i'm guessing at
204:51 - where their customer segments are
204:53 - but people that eat out and like a
204:55 - variety of food are likely going to be
204:57 - good customer segments here
204:59 - let's talk about the cost structure
205:02 - where you're going to be spending money
205:04 - we're probably going to be spending
205:06 - money on ads you're going to have to be
205:09 - able to collect new clients you're going
205:11 - to have salaries if you have people
205:12 - working for you
205:14 - and so i'm just going to put down here
205:16 - facebook and google are likely going to
205:18 - be cost structure items that you are
205:20 - concerned about and
205:22 - any salaries that you have to pay
205:25 - so
205:26 - where do you make money
205:27 - you're giving away uh coupons
205:30 - you're probably going to have to think
205:32 - about your revenue streams as coming
205:35 - from the restaurants themselves
205:38 - it's not likely that i'm going to be a
205:40 - customer that pays to install your app
205:44 - maybe maybe not i don't know costco
205:46 - seems to be able to build people for
205:49 - shopping at their place i don't
205:51 - understand that why would you want to
205:52 - pay a hundred dollars a year or whatever
205:54 - from membership to go into your store
205:57 - usually i think of memberships is where
205:59 - i get something
206:01 - value not i don't get to pay you money
206:04 - but anyway maybe you have such a good
206:06 - deal on the app that people are willing
206:08 - to pay a subscription fee but i would
206:11 - predict that the most likely way that
206:12 - you're going to get this is that you're
206:14 - going to take a cut
206:16 - from every reference that goes in the
206:18 - door of the restaurant
206:20 - so either you collect fees from the
206:22 - restaurants or you have a subscription
206:24 - for a pro premium
206:26 - model on this
206:28 - and so if you look through all of these
206:31 - is it nine different items
206:33 - you're going to have the basic
206:35 - structure
206:36 - of your business plan far more than just
206:39 - coding an app isn't it you have to think
206:41 - about your customers and your
206:42 - relationships and your costs and your
206:44 - revenues so this business plan should be
206:46 - challenged by yourself by your critics
206:48 - by people that look at you by investors
206:51 - that might want to be interested in in
206:53 - starting your company might be able to
206:54 - sell this to your employees as well but
206:56 - you better have a clear idea of your
206:59 - business plan so in the next video we're
207:01 - going to talk about monetization so how
207:03 - do you make money different ways that
207:05 - you can get an income stream
207:07 - also if you'd like to see the entire
207:09 - course playlist i'll put that link here
207:11 - and don't forget to subscribe if you're
207:13 - interested in the business of
207:15 - applications
207:18 - [Music]
207:25 - hi welcome to this course here on the
207:27 - business of building applications in
207:29 - this video we're going to talk about the
207:30 - monetization that you can do and
207:32 - strategies for making an app there are
207:34 - other chapters in this course so if
207:36 - you're interested in taking a look at
207:38 - these you can also check out the
207:39 - playlist that i'll put a link for so
207:41 - we're on part three right now which is
207:43 - on marketing and monetization however
207:46 - you can see that there are other
207:47 - chapters coming up so make sure you
207:49 - subscribe and join us in class my name
207:53 - is chad slooter and i teach computer
207:55 - science and software development at
207:57 - grand canyon university so come along
208:01 - now let's take a look here at our app
208:03 - business plans really that's the subject
208:06 - here we're doing four videos right now
208:08 - that refer to our problems that we're
208:10 - going to have to face here so in the
208:12 - previous video was out about the
208:14 - business plan which is called the
208:16 - business model canvas in this video
208:18 - we're going to talk about monetization
208:20 - say that twice and then the next one is
208:23 - marketing and then following that we'll
208:25 - talk about working with investors so
208:27 - right now monetization there it is is
208:29 - trying to figure out how you can make
208:31 - money
208:32 - by people paying for you on the app or
208:35 - maybe showing you advertising and
208:37 - there's a multitude of ways that we can
208:39 - do this so let's get right into that so
208:41 - first of all before we do that let's
208:43 - talk about the app stores and the type
208:46 - of customer that you're going to get on
208:48 - each of the phones really you know
208:49 - there's only two types of phones out
208:51 - there there's android and ios and let's
208:53 - compare them and you'll be surprised at
208:56 - how much more money that goes to people
208:58 - or from people that run an apple phone
209:02 - so first of all revenue in the billions
209:04 - this is talking about app revenue and
209:06 - you can see obviously it's growing for
209:08 - both companies but ios rakes in a huge
209:11 - amount of cash in comparison to google
209:14 - when it comes to their app stores now
209:16 - this is not quite fair because this
209:18 - includes china
209:20 - and uh google doesn't sell apps in china
209:23 - apple does
209:24 - and so that's another whole story but
209:26 - anyway you can see that china will be a
209:29 - very big part of that market
209:30 - now the second is
209:32 - about the subscriptions so subscriptions
209:35 - are things like
209:36 - netflix or an annual fee that you would
209:38 - pay for the use of an app so not just a
209:41 - download but an ongoing thing and as you
209:44 - know likely there is a 30 percent cut
209:47 - that these stores take from you if
209:49 - you're selling an app or any kind of
209:51 - subscript subscription on it so if you
209:54 - download netflix it'll be strange that
209:55 - you cannot actually
209:57 - subscribe to netflix in the app you have
209:59 - to do that other website and of course
210:02 - there's a good reason they don't want to
210:03 - give 30 percent of their revenue to
210:06 - apple or to google just for the
210:08 - privilege of getting you as a customer
210:11 - so you can use the netflix app but you
210:13 - can't process any payments through
210:15 - netflix now as i'm making this video
210:17 - epic games and apple and google are all
210:20 - in court fighting this out
210:22 - because uh they've epic feels like this
210:24 - is a very unfair model
210:26 - but
210:27 - you know it at the first it seemed like
210:29 - a very good plan where you didn't have
210:31 - to pay for boxing up your app or running
210:34 - a store and selling cds
210:36 - and so that was the original impetus for
210:39 - 30
210:40 - now let's take a look here at the
210:42 - markets so the countries that are
210:44 - involved in the largest number of
210:46 - dollars that are spent on apps or on
210:49 - subscriptions
210:51 - so you can see china is by far the
210:53 - biggest market not too surprising since
210:55 - there's over a billion people there and
210:58 - they probably all have iphones the
211:00 - united states of course a fairly large
211:02 - country
211:03 - uh japan europe and the rest of the
211:05 - world i guess are the
211:06 - third fourth and fifth uh people on the
211:08 - list here so
211:10 - think about who you're targeting
211:13 - and
211:14 - maybe that would impact on what kind of
211:16 - an application you're trying to sell so
211:19 - if you want to reach chinese people make
211:21 - sure you have an apple app
211:23 - if you're not interested in that then
211:25 - make sure that you
211:26 - target
211:27 - the countries of your choice here now
211:30 - also think about the value per user so
211:32 - if you were to take the total revenue
211:34 - that is being spent
211:37 - through each type of phone and divided
211:39 - by the number of users you'll get an
211:40 - idea that
211:41 - the ios user will spend about fifty six
211:44 - dollars a year on this and the average
211:47 - android person spends
211:49 - some six dollars
211:52 - so why is there such a vast difference
211:55 - well you can probably see at the very
211:57 - beginning when you filter out the cost
211:59 - of the phone
212:00 - people that are willing to spend a
212:01 - thousand dollars on a phone probably
212:03 - have more disposable income
212:06 - so you probably know me as a rather
212:08 - cheap person
212:10 - i use android phones
212:12 - and
212:13 - i use an apple computer so i'm not i'm
212:15 - not an apple hater
212:17 - but i probably am not
212:19 - a 56 dollar a year customer either
212:22 - the value per app sale is also quite
212:24 - dramatically different so the average
212:26 - person or the average app that is sold
212:29 - on ios is larger in its cost compared to
212:33 - android
212:34 - also take a look here this will probably
212:36 - explain a big difference of the two
212:39 - markets
212:41 - so this table shows
212:42 - the amount of market penetration for
212:45 - each of these
212:47 - platforms so ios
212:49 - mostly is in developed countries
212:52 - richer countries
212:54 - and android has a dominant market share
212:56 - in the developing world
212:58 - not surprising since the price of the
213:00 - phones are dramatically different so
213:02 - let's put some graphs on the screen just
213:04 - to give you a picture so as you can see
213:07 - the uk is roughly 50 50.
213:10 - germany
213:12 - mostly android the united states is one
213:15 - of those exceptions that has a great
213:18 - deal of ios users canadians are about 50
213:21 - 50. japan is similar to the united
213:24 - states with the dominance of ios
213:26 - so it makes sense that japan and the
213:28 - united states rather wealthy countries
213:31 - china the biggest market
213:33 - has a rather small section of ios
213:37 - however
213:38 - based on the population there's probably
213:41 - just as many or more ios phones in china
213:45 - that are being used as the united states
213:47 - just because they are approximately four
213:49 - times the population of the country on
213:52 - this side of the world
213:53 - also take a look at some of these at the
213:56 - lower end so i'm going to pick some
213:57 - large
213:58 - countries that have lower or middle
214:01 - income
214:02 - so india perhaps
214:05 - just as big as
214:07 - as china as population has almost no ios
214:10 - users and then if you look at
214:12 - indonesia another massively populated
214:15 - country you're going to see a domination
214:18 - of android
214:19 - and nigeria at the end is just the same
214:22 - and so the the point here is that if
214:25 - you're targeting wealthy countries and
214:28 - wealthy phone users then it might make
214:30 - sense for you to target your ios
214:33 - audience first if you're
214:36 - not really caring about if they pay for
214:38 - your app but you're more targeted at the
214:40 - actual service then of course
214:43 - this is not as relevant information
214:46 - let's take a look at the competition
214:47 - though just one chart here that shows
214:50 - an approximate this isn't any
214:51 - statistical thing but
214:53 - just to let you know
214:55 - that if you think you're going to crack
214:56 - into the top 10
214:58 - your chances of becoming one of the
215:00 - super apps in the time usage is probably
215:03 - about as likely as you are going to
215:05 - become
215:06 - a movie star or an nfl quarterback so
215:09 - just plan on finding a niche
215:12 - and working with that and so check out
215:14 - another video here i'll put a link on it
215:16 - for
215:17 - finding a niche and comparing your
215:19 - competition so that you're not crushed
215:22 - by grand ideas that are just
215:24 - disappointments now let's take a look
215:26 - here at uh some statistics that come
215:29 - from google so i borrowed these from
215:31 - these slides from google research
215:33 - so here's one statement that they they
215:35 - make here to to temper your expectations
215:38 - half of the people that use applications
215:41 - have never ever paid for an app
215:44 - not too surprising most people just want
215:46 - free right
215:47 - and so why do people actually pay for an
215:49 - app or subscribe to a service well here
215:52 - are the top reasons
215:53 - number one it had the content i wanted
215:56 - so my prediction is on this survey it
215:59 - was probably netflix that most people
216:02 - decided to subscribe to or disney plus
216:05 - or something like that
216:07 - so you might be a sports fan and willing
216:09 - to pay for espn or whatever favorite
216:11 - movie channel you are on those are
216:14 - content is king type of applications
216:18 - the next one down it says here it
216:20 - offered features and functionality
216:23 - unavailable on free alternatives
216:26 - so i would say that's a pretty unique
216:28 - app if you can design something that
216:30 - nobody else provides for free
216:33 - that's pretty good
216:35 - uh
216:36 - i want an ad that is an app that is ad
216:38 - free so
216:40 - you can annoy your people so much that
216:43 - they finally pay the dollar to get your
216:45 - commercially free app that's that's one
216:47 - way you can get paid
216:48 - uh there were no free alternatives
216:51 - seems unlikely
216:52 - and the app had good reviews and so
216:55 - i would say
216:57 - if you would probably compare yourself
216:58 - to most others you would you would say
217:00 - this is a reasonable list of ways that
217:03 - people are willing to pay for your app
217:05 - so when you think about monetizing your
217:07 - app do you have such a strong
217:10 - set of content
217:12 - or value in your app
217:15 - that it doesn't exist in other places
217:17 - then you might be able to charge
217:19 - subscriptions or you might be able to
217:22 - have people pay you so that's some food
217:25 - for thought now let's talk about revenue
217:27 - models because there's lots of ways that
217:29 - people make money
217:31 - when they're trying to create an app so
217:33 - it's not just about selling your app and
217:35 - so i put together a list here of about
217:37 - what is it six or seven
217:38 - of ways that people can make money as an
217:41 - app developer and so let's go through
217:44 - each of these so first of all the first
217:46 - is you could just charge money for your
217:48 - app
217:49 - now look at minecraft that's one of the
217:51 - most popular apps on the phone of any
217:54 - type and you can see that it's 7.49 to
217:57 - buy now no one in their right mind is
218:00 - going to pay money for an app that's no
218:02 - good but everyone knows or in their
218:04 - target audience knows that minecraft is
218:06 - a really cool game
218:08 - and they're willing to pay it
218:10 - so it's not common to do this it's for a
218:12 - niche market uh people that need this or
218:15 - really are liking your service
218:17 - and it's good for complex or unique app
218:20 - that no one else has so if you can build
218:22 - the next minecraft or something like it
218:24 - then go ahead and put a price tag on it
218:26 - now the next item is advertising and so
218:29 - this is pretty much what you can think
218:30 - of as games right i mean every game that
218:33 - i've played shows me super annoying ads
218:36 - it works well
218:37 - on the ad model only if you have a huge
218:40 - number of users
218:42 - and so if you are the lucky few that get
218:44 - a
218:45 - a viral app that everyone wants to play
218:48 - you might make some money on an ad
218:50 - however if you've got a very narrow
218:52 - audience which is probably the more
218:54 - recommended route
218:55 - find your audience and and close in on
218:58 - the ideal customer
219:00 - that
219:01 - is not a good candidate for advertising
219:03 - because
219:04 - you don't want to annoy the few people
219:06 - that are really your true fans
219:08 - you want to find some other way to
219:10 - charge the money and so advertising
219:12 - revenue might be great
219:14 - if you are candy crush but for everyone
219:16 - else not so much
219:18 - the freemium is probably the best model
219:21 - that you can think of
219:23 - so it's the most popular model for
219:24 - making money it's more profitable to do
219:27 - freemium than by selling your app or by
219:30 - putting ads on it and also you can
219:33 - create quite a large audience because
219:36 - everyone gets to try your app for free
219:38 - and then if they bump into features that
219:41 - they really want
219:43 - they might be willing to pay you a
219:44 - subscription or a fee to get it
219:47 - and you can be guaranteed that
219:49 - people are pretty satisfied with the app
219:51 - if they've tried it they use it and
219:53 - they're willing to give you that extra
219:55 - freemium part
219:56 - then you've got a true fan and so i
219:59 - would recommend that if you're
220:00 - contemplating a business model think of
220:04 - freemium as the way to go so there's a
220:06 - free service there's the standard and of
220:08 - course the premium and so don't give
220:11 - away all of the great features of your
220:13 - app at the beginning
220:14 - hide some of those that are going to be
220:16 - critical
220:17 - but still
220:19 - give the user an experience to try it
220:21 - out and so i think almost all of the
220:23 - apps that i've paid for have been
220:25 - through a freemium model now think of
220:27 - ecommerce and you're trying to sell
220:30 - items so
220:31 - whether it's amazon or ebay or etsy or
220:35 - somebody like that you're going to have
220:36 - to have a massive business that will
220:38 - actually sell things
220:40 - and so good luck in competing against
220:42 - amazon
220:43 - e-commerce platforms however is a little
220:46 - bit different you don't have to be the
220:47 - store
220:48 - you can be the store that connects
220:51 - people to stores and so think of ebay
220:54 - you know then ebay doesn't sell anything
220:56 - they just connect people
220:58 - offer up it's like craigslist but on an
221:02 - app form that people like
221:04 - hotels.com or orbitz or any of the
221:06 - travel services airbnb of course is the
221:10 - biggest hotel business in the world and
221:12 - they don't own a single hotel room they
221:15 - just link you with people that have
221:17 - rooms and so
221:19 - an e-commerce platform is a great way to
221:21 - connect
221:22 - buyers and sellers and you take a cut or
221:26 - a sliver of the transaction fee
221:28 - so just this past week i took a vacation
221:31 - and rented a car through the app called
221:34 - touro
221:35 - never tried it before but it worked a
221:37 - guy met me at the airport gave me his
221:39 - car keys i borrowed his car for a week
221:42 - and paid him
221:43 - i was 300 and some dollars it was it was
221:46 - uh
221:47 - 40 off of what the car rental company
221:49 - was willing to charge me and it worked
221:51 - out as well as anything that you would
221:53 - expect at airbnb so think of a service
221:56 - that people need and uh people that are
222:00 - trying to sell something and you get in
222:01 - the middle and take a snip of the the
222:04 - credit and of course your profits will
222:06 - grow as your user base grows
222:08 - subscription models of course are
222:11 - the content people so netflix spends
222:15 - billions of dollars a year to get their
222:17 - own movies
222:18 - and so
222:19 - you know you're willing to pay your your
222:21 - monthly fee
222:23 - language apps seem to be a great
222:25 - subscription model because people
222:27 - can't learn a language in just
222:30 - a week or a month even or maybe even a
222:33 - year and so
222:34 - if you're doing a real good service that
222:36 - requires constant use then of course a
222:39 - subscription makes sense so i put on
222:42 - here spotify i'm a customer of them all
222:44 - trails i mentioned before in some of my
222:46 - previous videos where i want to find
222:47 - hiking trails and get maps of where i'm
222:49 - going and
222:50 - i'm willing to pay for an annual
222:52 - subscription because it's a valuable
222:53 - service to me so think of
222:56 - ways that people are constantly using
222:58 - your app
222:59 - and you provide information that changes
223:01 - over time or there's such a vast amount
223:04 - of information that they they can't get
223:05 - it all in one go
223:07 - and so that might be a good model for
223:09 - you with subscriptions
223:11 - in the last category we have our in-app
223:13 - purchases so these work really well with
223:15 - games
223:16 - so you know when you tried farmville
223:18 - many years ago you could play for free
223:21 - but then it took forever to grow your
223:22 - crops
223:23 - here's a list of games that are super
223:26 - profitable and all of them are free to
223:29 - play but cost you money if you want to
223:31 - play it quickly or advance
223:34 - to higher levels
223:35 - and so
223:36 - game makers have figured out that once
223:39 - you have people addicted to your game
223:41 - they'll sometimes pay anything even if
223:43 - it doesn't make any sense
223:45 - to continue on so you can see that
223:48 - they're selling
223:49 - ninety-nine dollars a hundred dollars
223:51 - for pokey coins would you really pay a
223:54 - hundred dollars for an app
223:55 - not likely
223:57 - but somehow if you're addicted you're
223:58 - going to pay
223:59 - 99
224:00 - for a bunch of virtual coins
224:03 - go figure
224:04 - if you're interested in learning how to
224:05 - market your app then watch the next
224:07 - video which is called marketing your app
224:09 - and if you'd like to see the entire
224:11 - course playlist i'll put that link here
224:12 - as well so you can see the business of
224:14 - applications make sure you subscribe and
224:17 - join us again for class thank you
224:22 - [Music]
224:30 - hi in this video we're going to be
224:31 - talking about the business of building
224:33 - apps more specifically we're going to be
224:35 - talking about marketing your app and
224:37 - collecting customers
224:38 - so in this unit we're talking about the
224:41 - business of building applications we're
224:44 - on part three which is on marketing and
224:46 - monetizing so if you haven't subscribed
224:48 - to make sure you do that to go back and
224:50 - see the other chapters in this course so
224:53 - my name is shad slooter and i teach
224:55 - software development and computer
224:57 - science at grand canyon university and
225:00 - so join me for class to see all of these
225:02 - topics and we'll learn together now in
225:04 - this video we're talking about the app
225:07 - business plans and so there are four
225:09 - sections about planning your business
225:11 - and we've already looked at two of them
225:13 - so we're on part three right now which
225:15 - is about marketing so how do you collect
225:18 - customers how do you get their attention
225:20 - and we'll talk about retaining them in a
225:22 - new video in the future but we want to
225:25 - get them in the door that's really what
225:26 - we're dealing with here so marketing
225:29 - your application so marketing is not
225:32 - just the idea that it looks cool but we
225:34 - have to reach the right people with a
225:37 - value proposition that makes sense and
225:39 - it's authentic to them and so what i'm
225:42 - going to do now is show you some
225:43 - discoveries that google provided me so
225:46 - the slides that you're going to see here
225:48 - are from google's market research so
225:51 - take this with a grain of salt because
225:52 - they think that search engines of course
225:55 - are the only way or the best way that
225:56 - people should work with but they have
225:58 - some data to support up their
226:00 - their their claims so it says here apps
226:03 - are often discovered outside of the app
226:06 - store so it's important that you have a
226:07 - good description of your app there's no
226:09 - doubt about it you should have a clear
226:12 - selling point when people find you in
226:13 - the app store however people usually
226:16 - hear about you in some other way and so
226:19 - family friends and colleagues are the
226:21 - most important way that you can collect
226:24 - new people so in another video we'll
226:26 - talk about making your app addictive and
226:29 - why it works when you have people making
226:32 - recommendations for you and so that'll
226:34 - be an important part of your app design
226:36 - is making a share button or invite
226:39 - button where people are required to join
226:41 - together to do something on your app and
226:44 - so
226:44 - personal recommendations are your best
226:47 - tool for gaining new customers however
226:50 - you can see that there are others that
226:52 - are just
226:53 - worthy of your time as well so making a
226:56 - good company website having a good
226:58 - description in the app store and search
227:01 - engines can work somewhat as well but
227:04 - those main two categories at the top are
227:06 - what we should consider are vital
227:09 - information
227:10 - now search is a driver in app discovery
227:13 - so it says here one in four people use
227:16 - search engines to find an app which
227:19 - makes sense you're looking for a
227:21 - solution to a problem and of course
227:23 - google is there to collect your ad now
227:26 - search is is
227:28 - more effective in certain categories
227:29 - than others
227:31 - so here are three so tr travel and
227:33 - technology
227:35 - and local apps so apps that are
227:37 - considered local i suppose for your own
227:39 - city or something like that
227:41 - so technology is
227:43 - good for search so for instance you say
227:46 - i want an app that can free up memory on
227:49 - my phone
227:50 - i'm going to go to google that's the
227:51 - first place i would look for
227:53 - travel of course i'm trying to
227:56 - find a destination and there might be a
227:59 - tour guide for the city that i'm going
228:01 - to or something like that and so a niche
228:04 - market for targeting people that are
228:06 - doing searches about it
228:08 - and so you can see the rest of them are
228:10 - not quite as good
228:12 - for your search results and in
228:14 - collecting new customers so think of the
228:17 - app that you've got your dream app that
228:19 - you're trying to build and see which
228:21 - category it fits in here and then you
228:23 - can decide whether or not that google
228:25 - search or buying ads on google will be a
228:28 - main strategy in gaining new customers
228:31 - for you so you'll be the best judge on
228:34 - deciding if that is a good channel
228:36 - so think about the factors that
228:38 - influence the download why do people
228:40 - click the button and install the app
228:43 - so
228:44 - here's some of them
228:46 - so why do people install
228:48 - well believe it or not search ads are
228:49 - effective in in driving app downloads
228:53 - so a search ad is perfect because you
228:55 - know the what's on the user's mind you
228:58 - you you've seen what they've looked for
229:01 - and if you can target that then it's the
229:03 - same same same strategy that that we've
229:06 - been using for decades now with uh
229:08 - targeting relevant ads to users
229:11 - uh i can't believe the second one here
229:13 - though it says banner and graphical ads
229:14 - inside of apps
229:16 - that must be uh skewed because
229:20 - you get all these uh when you when you
229:22 - play a game right you play a game and
229:23 - you get ads they're for other games
229:26 - which makes sense if you're into games
229:27 - you'll probably download another game if
229:29 - it looks fun
229:30 - and then the others are different ads
229:32 - for
229:33 - website ads and video ads
229:35 - so
229:36 - i think it's probably goes without
229:37 - saying if you know who your users are
229:39 - and you know what apps and things that
229:40 - they're already looking at you can
229:42 - probably
229:43 - cross-pollinate you can probably get
229:44 - them to jump over into your
229:46 - market as well if you already know that
229:48 - they're in an adjacent market
229:50 - and so look for competitors
229:52 - uh interest and uh fun okay
229:55 - recommendations for others so
229:58 - why would you want to install here's
230:00 - here's another factor so recommendations
230:02 - from others
230:04 - number two or the second one on the
230:07 - right here is
230:08 - familiarity with the company and brand
230:10 - this makes sense because
230:12 - let's say you're um
230:14 - let's say you're talking about an
230:15 - airline app
230:17 - you booked a flight with american
230:19 - airlines and now you know that you have
230:20 - to check in with an app well you're
230:22 - gonna you're gonna choose their their
230:23 - app of course you're their customer so
230:26 - this isn't so much about acquiring new
230:27 - customers maybe is is serving your
230:29 - existing customers better so does your
230:32 - app
230:32 - provide something that their website
230:34 - doesn't
230:35 - and so i'll provide you a link with
230:36 - another question about
230:38 - why would you choose an app over a
230:40 - website
230:41 - because you might not need an app at all
230:44 - if your website's doing the job and so
230:46 - there's some other factors
230:48 - here is probably the most important
230:51 - is about price
230:52 - and so in a previous video we talked
230:54 - about how you can monetize your app
230:57 - and free apps with a freemium model
230:59 - where you have certain features that are
231:01 - extra money
231:03 - is
231:04 - far more effective than trying to charge
231:06 - money for the app up front
231:08 - because when it says here factors
231:10 - important
231:11 - uh 82 percent say price that means free
231:14 - right
231:15 - price means no price
231:17 - and people are not going to pay you
231:18 - money for an app that they've not really
231:21 - tested out
231:23 - get good ratings of course that goes
231:25 - without saying people with bad ratings
231:26 - are just going to scare away new users
231:29 - the description you better have a clear
231:31 - description and good screenshots in the
231:33 - app store otherwise people will probably
231:35 - not know what they're getting
231:37 - and then the others are reviews
231:39 - so most users expect their apps to be
231:42 - free but that deter it is also
231:45 - determined on the category
231:47 - so check the top app out
231:50 - technology apps
231:52 - so i can think of recently i paid ten
231:54 - dollars for an app
231:56 - for a technology app i had a an app that
231:58 - would allow me to extend my desktop
232:01 - screen
232:02 - to my um my tablet
232:05 - and so it was like having a second
232:06 - monitor kind of cool using me using the
232:09 - usb cord connection or even a wi-fi
232:11 - connection so i think i spent ten
232:13 - dollars or something like that and i'm
232:15 - not likely gonna spend ten dollars on
232:16 - most apps but that provided me with a
232:20 - portable second monitor
232:22 - and for where my kind of work it was
232:24 - great because i'm carrying my laptop to
232:25 - different classrooms and working in
232:28 - places that are not my office or at
232:30 - least i did before the covid
232:31 - scare and so i was willing to pay ten
232:34 - dollars for a technology app so if
232:36 - you've got something that is solving a
232:37 - technology problem that might be a good
232:39 - fee that you put on it
232:41 - however at the bottom you can see the
232:43 - other extreme is gaming people probably
232:45 - not pay you for your game
232:47 - they want to play free games because
232:50 - 12 year old
232:51 - kids don't have a lot of money and for
232:53 - them a two dollar fee is gonna be a game
232:57 - game breaker you know it's not gonna
232:59 - happen
233:00 - and so make sure that you know your
233:01 - audience so the next step in your
233:03 - business process is probably talking
233:05 - about investors and so the next video
233:07 - we'll talk about pitching your plan if
233:10 - you'd like to see the entire playlist
233:12 - for the business of applications i'll
233:14 - put this link on the screen as well the
233:16 - business course on building apps my name
233:18 - is shad make sure you subscribe and come
233:20 - to class with me again thank you
233:24 - [Music]
233:30 - hi welcome to the business of building
233:32 - applications so this is about mobile
233:34 - applications and the business plans that
233:36 - go with them so we're in a course that
233:39 - has several units and we're on part
233:41 - three right now which is called
233:42 - marketing and monetizing your app so you
233:45 - can see that there are other topics that
233:47 - are here so if you're interested in this
233:49 - kind of thing make sure that you
233:50 - subscribe and you can join me for class
233:53 - on other occasions my name is shad
233:55 - slooter and i teach software development
233:58 - and computer science at grand canyon
234:00 - university so welcome to class and
234:03 - please come again so we're in the app
234:05 - business plan area right now which is
234:07 - talking about money and how to make
234:10 - money and so we're in part four which is
234:13 - at the bottom here of this grid the
234:15 - investors that you're going to deal with
234:17 - so some of you will never get to the
234:18 - investor stage or probably will never
234:20 - get there because this requires a lot of
234:23 - momentum in your business
234:25 - so go back and talk about your business
234:27 - model first and how you plan to make
234:29 - money before you ask other people to
234:31 - help you out
234:32 - so
234:33 - investors are kind of scary it's a whole
234:36 - new field that is beyond what most of us
234:38 - computer science people are good at i
234:40 - mean we're building things that are
234:42 - built out of bits and bytes and user
234:44 - interfaces and now we're talking about
234:46 - managing
234:48 - money and partnerships so why do you
234:50 - want an investor maybe you don't want an
234:53 - investor but if you do you have to have
234:55 - a good reason so here are some of the
234:57 - reasons first of all you have to expand
234:59 - what's already going and you don't have
235:00 - enough capital maybe you need
235:02 - advertising to grow your your market or
235:06 - you have development of a new phase of
235:09 - your business and you're going to need
235:10 - some investment to help you there or
235:13 - these partners will have networks that
235:15 - will help you out so there are a variety
235:16 - of ways where you would want to bring
235:18 - somebody in
235:20 - but there are course drawbacks people
235:22 - don't just give you money they want a
235:25 - segment of your company and so if you
235:28 - give away part of your company you no
235:30 - longer own that
235:31 - and you lose equity so you may
235:34 - start off with 100 ownership of your
235:37 - company but by the time the investors
235:40 - are done you will be a minority owner of
235:42 - your own company you might even lose
235:45 - control of your company they won't like
235:46 - the way that you're running it and since
235:48 - they have the cash they make the final
235:51 - decision
235:52 - and of course there's always the
235:53 - possibility of conflict
235:56 - i think the most uh famous example at
235:58 - least from my world is steve jobs
236:02 - the founder of apple or the co-founder
236:04 - of apple was fired from his own company
236:06 - by the board of directors
236:08 - and of course the people that fired him
236:10 - nearly drove apple into the ground
236:13 - and were basically a bankrupt company
236:15 - and they asked steve jobs to come back
236:17 - so unless you're steve jobs you probably
236:19 - won't get that second chance
236:21 - but anyway
236:23 - investors have a lot to offer but they
236:25 - come at a price
236:27 - so the stages of growth though are maybe
236:30 - so far away that you're not even ready
236:32 - for that
236:33 - in the first stage usually most
236:35 - companies are in their what they call
236:36 - the bootstrap stage
236:38 - you look at your own money first and so
236:41 - you mortgage your house or you max out
236:44 - your credit cards or maybe you were just
236:46 - born rich but you have to have your own
236:48 - funds and then the second is you ask
236:51 - your friends and your family to help you
236:54 - and of course you give them a share of
236:56 - the company you say hey for ten percent
236:58 - give me a hundred thousand dollars and
237:00 - you can be a billionaire in ten years
237:03 - maybe maybe not
237:04 - but you have to have people that really
237:06 - believe in you because you can't really
237:09 - uh
237:10 - sell your friendships
237:12 - unless you've got some some pretty good
237:14 - plans so you could have some potential
237:16 - for problems
237:18 - uh business incubators are probably
237:20 - going to be in one of the stages where
237:21 - you're thinking about growing so you've
237:23 - got a product uh you need a you need
237:25 - some office space you've got some
237:26 - employees now and you got to have some
237:29 - some space and so governments usually
237:31 - are pretty nice they give you these
237:33 - incubation centers or these business
237:36 - playgrounds or i don't know what you
237:38 - would call them but these these uh low
237:40 - cost and
237:42 - early stage kind of growth they might
237:44 - even give you grants and give you some
237:46 - free money if you promise to hire people
237:48 - so where i work at grand canyon
237:50 - university we have a place called canyon
237:52 - ventures and so if you if you've got an
237:55 - app or if you've got a business please
237:56 - contact my employer they will give you
237:59 - free office space
238:00 - literally no rent
238:02 - they will give you access to
238:04 - internet and technology and advice
238:08 - there's only one caveat
238:10 - is that you have to hire my students
238:13 - which is a great deal because my
238:15 - students are really smart right
238:17 - they
238:18 - know how to program in different
238:19 - languages and
238:21 - well i've taught them everything i know
238:23 - so if you hire my students the
238:24 - university
238:26 - gets the benefit that they think is
238:28 - valued to them but you get free rent and
238:30 - you've got yourself a great environment
238:32 - where
238:33 - i don't know there's at least 50
238:35 - companies now working in the business
238:36 - venture area
238:37 - and a lot of them with are dealing with
238:39 - technology and so you are networking as
238:42 - well as getting some free
238:44 - office space
238:46 - venture capital is eventually going to
238:47 - come where you've gotten a
238:50 - certain stage your company is working
238:52 - now when you get to this stage and angel
238:54 - investors are willing to give you large
238:57 - amounts of money millions perhaps
238:59 - if they have some questions that they
239:01 - can answer
239:03 - so if you ever watch shark tank these
239:04 - are usually the venture capital kind of
239:06 - stage where people have some track
239:07 - record to prove that they're making
239:09 - income
239:10 - and then far into the future
239:12 - when your app really hits it big then
239:15 - most people have what they call an exit
239:17 - strategy where
239:18 - they lose control of the company but
239:20 - they get a couple of billion dollars out
239:22 - of it if they're lucky and so they want
239:24 - to be bought out or maybe the company is
239:26 - unique and will stand on its own and
239:29 - will become a public company and so you
239:31 - have your ipo or your initial public
239:33 - offering and you sell stocks
239:36 - and so the idea is
239:38 - you want to be a partial owner of
239:40 - something really big
239:42 - than to be a full owner of something
239:44 - really small they say it's better to
239:46 - have a slice of the watermelon than to
239:48 - own the entire grape i guess that's the
239:50 - analogy and so those are the stages of
239:53 - your investment and the growth of your
239:54 - company and where you're going to get
239:56 - your funds to make it work
239:58 - so let's give some examples here of some
240:00 - apps that really hit it quite big so you
240:04 - might remember if you're old enough that
240:05 - instagram was its own company and it was
240:08 - growing quickly and facebook bought them
240:11 - they could see that they were a rising
240:12 - threat and so for a cool billion dollars
240:15 - facebook
240:17 - quenched that problem
240:19 - tumblr was purchased by yahoo well just
240:22 - recently yahoo was being sold by i think
240:26 - verizon is their latest ownership and
240:29 - tumblr is no longer part of yahoo
240:31 - anyway it's a old
240:33 - old business but they paid a billion
240:35 - dollars at one point for uh this web app
240:37 - uh skype famously purchased by microsoft
240:40 - for eight billion dollars
240:43 - and uh microsoft somehow
240:45 - missed it uh zoom became the thing in
240:49 - the coved era of working from home
240:53 - microsoft and its billions couldn't
240:55 - compete
240:56 - i don't know is skype that good or maybe
240:58 - not
240:59 - whatsapp was purchased by facebook for
241:03 - 19
241:04 - billion dollars facebook obviously has
241:07 - way too much money that they can just
241:08 - buy their competitors
241:10 - i predict that in the future the
241:11 - government won't be so keen on letting
241:14 - them buy everybody
241:15 - and that starts to look like
241:17 - anti-competitive behavior if you ask me
241:20 - so most investors are thinking about
241:21 - this kind of a long-term payback their
241:23 - your business is going to grow really
241:25 - well
241:26 - and some other wealthy company will
241:28 - hopefully buy you
241:29 - and that's when they get their money
241:31 - back and so everyone gets rich in the
241:34 - process and hopefully the app continues
241:37 - on working as well as it did before
241:40 - large companies have a bad reputation of
241:43 - destroying good products
241:45 - just because they were competitors but
241:47 - anyway the owner gets the cash and
241:49 - hopefully the workers still have a job
241:51 - after the merger occurs now if you talk
241:54 - to investors they're going to have some
241:55 - very specific questions
241:58 - so
241:58 - these are some of them are you committed
242:00 - to your plan
242:02 - so they're judging you just as much as
242:04 - their product are you a trustworthy
242:06 - employee because if they give you a
242:08 - large chunk of cash they're investing in
242:10 - you just as much as your idea
242:12 - are you skilled enough
242:14 - do they think that you're a competent
242:16 - owner of the business
242:18 - they obviously are not going to invest
242:20 - money in somebody that will squander it
242:22 - how much money are you spending that's a
242:23 - huge question you might have a million
242:26 - dollars of revenue but if it cost you a
242:28 - million dollars to create that revenue
242:30 - your company is really at zero and so
242:33 - cost cutting is very important to
242:36 - investors
242:37 - how fast are you growing
242:39 - investors don't want to see a five
242:41 - percent annual growth in most companies
242:43 - that would be for a mature company but a
242:46 - startup has to be at rocket level
242:49 - acceleration
242:50 - because they expect to see huge returns
242:52 - because many times businesses don't work
242:55 - out
242:56 - how do you compare to the competition
242:58 - so do investors already own something or
243:01 - stock in somebody else that is your
243:03 - direct competitor if so then there might
243:06 - be conflicts uh who else is invested so
243:09 - you might come and ask for help from an
243:11 - investor but you've already sold most of
243:14 - your company to other investors and so
243:16 - they're going to come in and be a
243:17 - minority voice in your company they
243:19 - might not be interested in that how
243:21 - about this will you be profitable of
243:24 - course that's the whole bottom line
243:25 - isn't it and then finally how much of
243:28 - the company are you willing to give me
243:30 - and so this is a struggle do you really
243:33 - want to give away control of your baby
243:35 - to somebody else that just sees it as a
243:37 - dollar sign proposition
243:39 - because you are emotionally invested in
243:41 - the idea that you created so i'm not
243:44 - really a business expert so i i'm
243:46 - probably not the best authority to talk
243:47 - about most of this but if you if you
243:50 - watch the pitch on
243:51 - shark tank you get the idea people have
243:53 - a story of who they are
243:55 - what value they create and how
243:57 - successful they currently are and so
243:59 - some of the usual questions that i just
244:00 - went through here are the same ones that
244:02 - you get from the panel of judges on
244:04 - shark tank they want to know how
244:05 - profitable are you what your expenses
244:08 - what what your story who else is
244:10 - invested and and things like that once
244:12 - again as i mentioned at grand canyon
244:14 - university it's probably most other
244:16 - universities we have these panels of
244:18 - investors that are willing to take a
244:19 - look at companies that even our own
244:21 - students are working on and give them
244:23 - help and support and investments and
244:26 - guidance
244:27 - so find out who is doing this kind of
244:29 - work in your local area
244:32 - and attend the meetings and watch other
244:34 - pitches and maybe you can get some help
244:37 - as well with your own business plan now
244:39 - if you want to design a product that is
244:41 - truly addictive then there are some
244:43 - principles that we can go through here
244:45 - in the next video if you'd like to see
244:46 - the entire course playlist for the
244:48 - business of apps i'll put that link here
244:50 - as well and if you haven't subscribed
244:52 - make sure you do that now
244:53 - welcome to class and keep watching
244:59 - [Music]
245:05 - hi and welcome to the business of
245:07 - building applications this is a course
245:09 - for people who are not only developers
245:11 - but also designers so we're in the part
245:14 - three the chapter three of this course
245:16 - which is about marketing and monetizing
245:18 - our app or you might call it the
245:20 - business plan and so i'm going to call
245:22 - this assignment activity number three so
245:25 - what are we going to do in activity
245:26 - three we're going to write a plan that
245:28 - will tell us how we're going to make
245:30 - this a viable business who our
245:32 - relationships are with how we expect to
245:34 - get money and what our expenses will be
245:37 - so the background of this assignment is
245:40 - i want you to identify those things key
245:42 - relationships and strategies to make
245:44 - your app work so if you remember from a
245:47 - previous lesson that i have
245:49 - i talked about this
245:51 - diagram here that is going to tell you
245:53 - about all of the different parts of your
245:56 - business so this is called the bmc or
245:58 - the business model canvas and so it
246:01 - identifies all the key partners key
246:03 - activities key expenses how we are going
246:06 - to make our business run and so in one
246:08 - page you have a business plan so here's
246:11 - the instructions following this model i
246:13 - want you to create a one-page summary of
246:15 - the plan for why your application will
246:17 - be a viable business make sure that you
246:19 - identify the key relationships and the
246:21 - customers and the revenue streams that
246:22 - you are going to have in your business
246:25 - so then what i want you to deliver to me
246:27 - then is a one-page document so this can
246:29 - be a word document that has the plan and
246:32 - make sure that you hit all of those high
246:34 - points so if you haven't seen the video
246:36 - on the bmc then go ahead and check out
246:38 - the playlist
246:39 - and if you have seen it then get right
246:41 - ahead and start it on your thinking
246:43 - process of why your business is a viable
246:45 - business i would
246:47 - grade you based on how thorough you are
246:49 - and how thoughtful it includes all of
246:51 - these different items so if you need to
246:54 - include details then please do so if
246:57 - you're not one of my students of course
246:58 - if you're trying to create a business
246:59 - then i recommend that you create a plan
247:01 - that you can
247:03 - talk to yourself about as well as with
247:05 - your partners in any case i will put the
247:08 - course playlist here so you can see more
247:10 - details and the other chapters that
247:11 - we're talking about and i will see you
247:14 - in the next class
247:19 - [Music]
247:26 - hi and welcome to this video here that's
247:28 - in a series about the business of
247:29 - building mobile applications and we're
247:32 - in a class right now which is going to
247:34 - have several chapters and so we are on
247:37 - part 4 right now which is about building
247:40 - customer loyalty so if the other topics
247:43 - here look of interest to you then make
247:44 - sure you subscribe
247:46 - my name is shad sluter and i teach
247:48 - computer science and software
247:50 - development at grand canyon university
247:52 - and so this is one of the courses that
247:54 - i'm involved with so if you like this
247:56 - please subscribe and make sure you come
247:58 - to class with me
247:59 - so what we're talking about today is
248:01 - building customer loyalty or you might
248:04 - call this making your apps addictive
248:07 - depends on how you want to phrase it but
248:09 - the idea is that we want to retain our
248:11 - customers and make our app successful
248:14 - so why do people abandon their apps so i
248:18 - have a few slides here from google that
248:19 - will help us answer those questions
248:21 - first of all there's an opportunity here
248:23 - so if you're like me you're probably
248:25 - going to build apps that fit this
248:27 - category that they never get used after
248:29 - the users create them so there's a
248:32 - fantastic art in making an app that's
248:34 - addictive or
248:36 - loyal and so we want to find out what
248:38 - some of those principles are
248:40 - customers frequently never use their app
248:42 - for more than the one time they're
248:44 - forced to so you can probably relate
248:47 - i've been on airlines where they force
248:49 - you to download an app to get a boarding
248:51 - pass
248:52 - and i'm probably not going to fly for a
248:54 - long time so i just delete the app so we
248:56 - don't want users to treat our app as a
248:58 - necessity we want to make something
249:00 - that's attractive and even addictive
249:03 - why do people quit using your app
249:06 - well the number one reason is probably
249:07 - obvious
249:08 - they get bored with it
249:10 - it's the same old same old there's no
249:12 - variety so why bother so they just kind
249:15 - of lose interest
249:16 - or perhaps they had a need that they
249:18 - wanted to fill
249:20 - and your app did that and now it no
249:22 - longer is necessary and so those are
249:24 - some of the main reasons why people
249:26 - would abandon an app
249:28 - so google in their research says that
249:30 - sometimes we can reward users for coming
249:32 - back to an app so a coupon or a discount
249:36 - or some kind of bonus content and so
249:38 - when you get the alert on your phone
249:40 - that says there's something new or
249:41 - something valuable they'll probably open
249:43 - the app again so what we're looking at
249:46 - in this series is how to make those
249:48 - things happen
249:49 - if you're into a category that is about
249:52 - sales then of course discounts are going
249:54 - to be a big deal but if you're just in
249:56 - an app that's meant for entertainment or
249:58 - education or some kind of social media
250:01 - there might be some other ways that you
250:03 - can make them come back we have two
250:05 - goals really goal number one is that
250:08 - eventually you want to have an internal
250:10 - trigger that when they see the icon on
250:12 - your phone
250:13 - they are going to want to open it for
250:16 - some reason
250:17 - it's the first to mine solution so
250:20 - i have a question for you here when you
250:22 - have a question
250:23 - what's the first to mind solution that
250:26 - you think of well it's google of course
250:29 - google it what else would you use to
250:32 - find an answer they have successfully
250:34 - planted themselves in my mind at least
250:36 - as the solution to this problem how
250:39 - about this
250:40 - you're alone
250:42 - and you got your phone with you
250:44 - what do you do when you feel lonely well
250:46 - you're probably going to facebook or
250:48 - snapchat or some social media item or
250:50 - maybe your email or your texting
250:52 - whatever it is
250:54 - the solution here is to kill the pain of
250:57 - being lonely
250:58 - boredom
251:00 - so when smartphones were introduced
251:02 - somebody i remember once told me that we
251:04 - will never be bored again so it doesn't
251:07 - have to be just games
251:09 - sometimes
251:10 - looking at your favorite news site is a
251:12 - way to kill boredom or casual games how
251:15 - about this number two your customer
251:17 - loyalty goal
251:19 - is to try to create
251:22 - a compulsion okay now we're getting into
251:24 - some gray areas here about
251:27 - either your app being a loyalty app or
251:30 - being addictive apps well addictions
251:33 - here are actually a case uh here's one
251:36 - have you ever heard anyone say this
251:38 - i have to harvest my strawberries
251:41 - this might go back a few more years than
251:43 - you're used to but i remember farmville
251:45 - was an addictive app where people had to
251:47 - plant crops and they couldn't leave them
251:49 - alone
251:50 - here's one that's probably a little more
251:51 - up to date it'll always be in our
251:53 - consciousness i posted a picture and i
251:56 - went back three times to check how many
251:58 - people liked it so we're pretty much
252:00 - addicted to being liked
252:02 - how about this one just one more episode
252:06 - and so
252:07 - whether it's youtube or netflix there's
252:09 - more content than we'll ever be able to
252:11 - consume in our lives and we just seem to
252:14 - keep watching how about this one
252:17 - we have a dilemma as i've already raised
252:19 - is if you're going to try to design your
252:21 - app to be loyal or addictive
252:24 - we have a responsibility hopefully what
252:27 - you're building is something that is
252:29 - socially redeemable it's worthwhile
252:32 - and so you're not here just to say
252:35 - i want to make money on my app hopefully
252:38 - you have a higher purpose in your
252:39 - business plan than just to create money
252:42 - maybe you could have it a little better
252:45 - when you say like this i want to
252:46 - encourage people to practice
252:48 - healthy behaviors
252:50 - so let's say your app is to help people
252:52 - learn a foreign language or with their
252:54 - math tutoring or lose weight
252:56 - or to be able to save time or to connect
252:59 - with friends those are all great goals
253:01 - and so if you make somebody a loyal user
253:04 - in something that is a worthwhile cause
253:06 - then of course the morality of addiction
253:09 - is is pretty good however if all your
253:11 - building is something that will take
253:13 - people's time and money then shame on
253:15 - you
253:16 - how about this let's go to the hook this
253:19 - is a model
253:20 - that we're going to follow through
253:22 - a proven strategy that has been studied
253:25 - to figure out why people keep coming
253:28 - back to the apps that they do there's
253:30 - four items first of all there's a
253:32 - trigger that causes them to enter the
253:34 - app then there's an action which better
253:36 - be simple and it better be engaging then
253:39 - there's the variable reward so that the
253:42 - app did doesn't become boring so every
253:44 - time you open up the app there's
253:46 - something interesting and a little bit
253:48 - unexpected that you are wanting to see
253:51 - and so that way you're more motivated to
253:53 - return to it and then finally you have
253:55 - to have something from the user
253:58 - something that they have to do
254:00 - such as save their place save a file
254:04 - build a reputation or something that
254:06 - they invest in and so that they feel
254:08 - like they have to keep coming back
254:10 - otherwise they've abandoned some of
254:12 - their work and so this idea of the hook
254:15 - literally comes from a book called
254:17 - hooked and you can see the subtitle is
254:20 - how to build
254:21 - habit forming products
254:23 - so once again habit forming products can
254:26 - be a bad thing if all you're doing is
254:28 - hooking people
254:30 - on destructive behaviors so before you
254:32 - try to make your app so addictive that's
254:34 - that you're hooking users
254:36 - make sure that it's something that's
254:37 - worthwhile doing
254:39 - so let's review this hook
254:41 - there has to be somewhere to start you
254:43 - can't just put people on the circle
254:45 - without a beginning and so the external
254:48 - hook is really where we're going to
254:49 - begin
254:50 - so this external thing
254:53 - causes a trigger and then that comes to
254:55 - the action then that goes to the
254:57 - variable reward and the user investment
254:59 - and hopefully re-triggering again
255:02 - so we need a trigger to get us started
255:05 - so
255:06 - how did facebook become a two billion
255:09 - user app
255:10 - well they had to start somewhere and so
255:12 - they made it a cool thing
255:14 - you're not going to be able to
255:16 - immediately launch a very popular app
255:18 - without some investment which is why
255:21 - companies require a bit of money to get
255:23 - started
255:24 - so here's one way to do it you can just
255:26 - buy google ads
255:28 - i kind of probably are going to regret
255:30 - this but i put into my google search
255:32 - find a car loan
255:34 - and of course you can see that there are
255:36 - no organic search results every single
255:38 - thing on here is an ad
255:41 - and i bet it costs quite a bit of money
255:43 - for those people to be placed so high so
255:46 - anyway if a person has a need they're
255:48 - going to go to google and search for
255:50 - that this is probably a way that you can
255:52 - start people on your app what is the
255:55 - need that your app serves
255:57 - buy an ad and you can acquire customers
256:00 - through paid ads of course this will be
256:02 - expensive at first but really there's no
256:04 - shortcut to getting new people into your
256:07 - app
256:07 - well once you've got a few people
256:09 - another way to get customers and to get
256:12 - them hooked or the initial acquiring
256:14 - stage
256:15 - is to have your social connections
256:19 - and so you're hopefully going to be able
256:21 - to send an announcement or a text or an
256:23 - email to somebody from a respected
256:26 - friend and they're going to invite you
256:28 - to come and so you can acquire customers
256:31 - through friends
256:32 - maybe your app requires that friend to
256:34 - comment or to play a game with you or to
256:38 - share a picture or something
256:40 - but we want to be able to make the
256:42 - growth organic because you can't pay for
256:44 - google ads for very long
256:46 - then the next item
256:48 - is once you've got an app and you've got
256:50 - it running they're going to forget about
256:52 - it your users will install it and ignore
256:54 - it and of course you better have a good
256:57 - reason for them to come back for example
256:59 - in this case it says hey two items in
257:01 - your shopping cart are on sale
257:03 - well if you're a shopper app and you
257:05 - installed it at one time because you
257:07 - wanted to save money this will probably
257:09 - bring you back into the circle and so
257:11 - this is all examples
257:13 - of the initial hook
257:15 - the part that gets you going so we want
257:18 - to re-engage or to engage new customers
257:22 - so let's summarize the start so we can
257:24 - either do a search result or we can have
257:26 - a notification from a friend
257:28 - but there's another way probably the
257:30 - most effective way of all other than
257:32 - these mechanical and artificial ways we
257:35 - want to do it naturally
257:37 - we want to create an urge
257:39 - inside our user's mind to be either the
257:42 - first solution that comes to mind
257:45 - or a solution to a pain or a problem
257:49 - and so this is called an internal
257:51 - trigger so an internal trigger
257:54 - doesn't require any money
257:56 - it's what we want to get to that's our
257:58 - goal we want our users to have that
258:00 - feeling that they have to open your app
258:02 - so you look at your phone maybe when
258:04 - you're bored and one icon kind of
258:07 - jumps out
258:08 - over all the others so in my case uh
258:11 - instagram's a pretty common one i want
258:13 - to open it i'm curious what's there but
258:16 - what's the real reason that that app is
258:20 - in my habit cycle
258:22 - well there could be this fear of missing
258:24 - out i want to know what's going on what
258:27 - are my friends up to and what's
258:29 - happening in the world or i have this
258:32 - problem where i always want to seem to
258:33 - take a vacation i want to travel and so
258:36 - what a great app i can look around the
258:38 - world and find creative hikes to take in
258:40 - cities and beautiful places that i
258:42 - haven't been yet and i want to go or
258:46 - maybe you're more into the social
258:47 - connections with these social apps
258:49 - and you're lonely and you want to know
258:51 - what your family or your friends are
258:53 - doing well any way that you look at it
258:56 - an app like instagram
258:58 - has an internal motivation it's the
259:01 - trigger
259:02 - just by being installed
259:04 - and showing up on the desktop you're
259:07 - going to have a trigger to use it
259:10 - so how do you trip those internal
259:12 - triggers how do you get to that part in
259:14 - a previous video we talked about the
259:15 - five why's the five why's can bring you
259:18 - to the root cause of something so why
259:21 - would julie want to use email so that
259:23 - she can receive messages of course
259:25 - the second why in the list brings you a
259:27 - little deeper and why would she want to
259:29 - receive messages well she wants to share
259:32 - information quickly why would she want
259:34 - to do that well she wants to know what's
259:37 - going on with her co-workers friends and
259:39 - family
259:40 - well why does she need to do that see
259:41 - how the y's just keep piling on she
259:44 - wants to know if somebody needs her and
259:46 - why does she need to do that
259:47 - because she fears of being out of the
259:50 - loop and so there is that deeper need
259:53 - she fears something and we're going to
259:55 - meet that and that will become an
259:58 - internal trigger if we can solve that so
260:00 - that's the orange bubble that's what
260:02 - we've looked at is the trigger part now
260:04 - let's talk about the action so if you
260:06 - want to make an addictive apps
260:08 - what do we have to do in that action
260:10 - stage so the action is the main activity
260:12 - what do you do with your app you show
260:15 - pictures do you share coupons do you do
260:17 - something so that better have some
260:20 - features that will call our app
260:22 - experience and if you get that right
260:24 - then people will have that feeling of
260:26 - wanting to come back again and again
260:30 - so in the action there better be two
260:32 - principles here that are met first of
260:34 - all it has to be easy
260:36 - and then the second it has to be
260:38 - something motivating it's emotionally
260:40 - satisfying it's cool
260:42 - i like it and so those are pretty broad
260:46 - and
260:47 - pretty hard to define really so let's
260:49 - talk about some examples
260:50 - so if we were to say we want to have an
260:54 - ingredients to look at what causes an
260:57 - action
260:58 - we would say that there has to be three
261:00 - ingredients there's the motivation the
261:02 - ability to do it and a trigger
261:05 - now we've talked about motivations and
261:07 - triggers already
261:08 - the action part the
261:11 - part that you're trying to program and
261:13 - that your users are engaged with is
261:15 - number two
261:16 - how difficult is your app to use and
261:19 - like i mentioned it better be simple and
261:21 - it better be kind of fun
261:23 - so take a look here at the
261:25 - percent of
261:26 - ease of use we'll call this
261:29 - compared to the number of users that are
261:31 - actually using the product
261:33 - and so you can see pinterest in the top
261:35 - right corner is really easy to publish
261:38 - something online and if you look back in
261:41 - time
261:42 - the other ones are slightly more
261:43 - difficult and so the idea is
261:46 - make it so easy that the users can't not
261:49 - do it
261:50 - so how do you measure effort well you
261:52 - can measure it in several ways you can
261:53 - say it's time
261:55 - or it costs money or it's thought in
261:58 - consuming it's difficult to understand
262:01 - or you might do something that would be
262:03 - embarrassing and we'll call that a
262:04 - social cost or
262:06 - it breaks the routine and that makes it
262:08 - more difficult
262:09 - and so the resistance to making your app
262:13 - action happen goes up if we increase any
262:17 - of those ingredients if it takes too
262:18 - long if it's too complex if it costs too
262:21 - much money or if you're going to
262:22 - embarrass your users
262:24 - they're probably not going to do it and
262:25 - so we want to keep all of those things
262:27 - to a minimum
262:28 - now just a simple design in your app can
262:31 - make that difference so think if you
262:33 - were going to show a list of pictures
262:36 - you could do it with the results of an
262:38 - infinite scroll
262:39 - so that the user has nothing to do but
262:42 - keep moving their thumb
262:43 - and see what's next so that's kind of
262:46 - the instagram approach really no one
262:48 - ever reaches the bottom of their
262:49 - instagram feed however if you were to
262:52 - break it up into pages and just showed
262:54 - 10 pictures per page you would have a
262:56 - natural break and people would stop
262:58 - after one or two page links and so
263:00 - that's a real simple design of making it
263:03 - simple and easy to use
263:06 - one term that you'll hear in this in
263:07 - this kind of a conversation is the idea
263:10 - of frictionless
263:11 - frictionless is usually about buying
263:14 - things so amazon famously has the buy
263:17 - with one click button that's pretty
263:19 - frictionless they've got your credit
263:20 - card saved and you don't have to think
263:22 - too much or in your case maybe your app
263:25 - has a registration screen well don't do
263:28 - the one on the left you don't want to
263:29 - make that too much time or too much
263:32 - effort just have them sign up with their
263:34 - favorite social media account
263:36 - and so we've talked about the trigger
263:38 - and now the action so keep the action
263:40 - simple
263:41 - and have something interesting to do or
263:43 - something useful to do
263:46 - now the third one that most apps use
263:48 - that are very addictive is something
263:50 - called
263:51 - the variable reward so that's the third
263:53 - item in this list so what is a variable
263:56 - reward well the reward is the emotional
263:59 - response or payback that you get from
264:01 - using your app
264:03 - but the modifier is we want to make it
264:05 - variable so that way it is something
264:08 - that we would classify as cool
264:10 - or
264:12 - new let me give an example so pinterest
264:15 - is an app that has a variable reward
264:18 - i opened up the pinterest page today and
264:20 - took this screenshot
264:22 - i had no idea what i was going to get i
264:24 - look across here i see a craft it looks
264:26 - like some photos some poetry
264:30 - wow talk about variability
264:32 - and the neat thing is
264:34 - if you want if you open an app like
264:36 - instagram or pinterest or facebook or
264:40 - youtube
264:41 - you never know quite what's going to be
264:43 - there but you know you'll find something
264:46 - so here's another picture so i went to
264:48 - youtube.com this is just the front page
264:50 - and you can see that the youtube
264:52 - algorithm knows pretty much who i am i'm
264:54 - interested in technology i like hiking
264:57 - but i have no idea why i got this drum
264:59 - line or i got this guy
265:01 - that is
265:02 - a
265:03 - failed cash in transit heist whatever
265:06 - it's just something that is kind of
265:08 - interesting
265:09 - so
265:10 - check your youtube feed out and see if
265:12 - they are meeting your variable reward
265:15 - need
265:16 - of course you probably remember if
265:18 - you've studied this in psychology at all
265:20 - that variable rewards can reinforce
265:23 - behaviors and cause habits to form and
265:26 - so the experiment was to give pigeons a
265:29 - reward if they would tap a button they
265:31 - would get a seed they could get
265:33 - something to eat
265:34 - and so the birds certainly learned how
265:37 - to do that
265:38 - but then they taught the birds that if
265:39 - they tap a button
265:41 - they would get a seed only on certain
265:44 - occasions
265:45 - and
265:46 - it was like a slot machine it was random
265:48 - now the birds
265:50 - formed a stronger habit
265:52 - when they had to tap on the button that
265:55 - never gave them consistent results
265:57 - and so the habit was stronger when they
266:01 - weren't certain if they were going to
266:02 - get what they wanted so if it was
266:04 - consistently giving them every click of
266:06 - the button
266:08 - it wasn't so interesting but a variable
266:10 - that was very interesting and so humans
266:13 - are not a whole lot different so why do
266:15 - people sit and look at a stupid game
266:18 - that all they can do is press a button
266:21 - and watch pictures
266:22 - i honestly don't get the idea of slot
266:24 - machines but a lot of people seem to
266:26 - like them
266:26 - they are doing
266:28 - variable rewards
266:30 - now if i offered you 80 cents for every
266:32 - dollar that you gave me you would soon
266:34 - stop that ridiculous transaction
266:37 - but if we had it variablized we don't
266:39 - know exactly who's going to win
266:41 - then you would keep at it
266:43 - now b.f skinner a great psychologist of
266:45 - course in behavioralism talked about
266:48 - these three types of variable rewards
266:52 - so what kind of classifications are
266:54 - these we got the tribe the self and the
266:56 - hunt so let's reinforce this with what
266:59 - our apps can do to meet these emotional
267:02 - needs so first we'll talk about the self
267:05 - okay what does that mean so in your
267:07 - reward you're going to have some kind of
267:10 - a self promotion you've reached a new
267:12 - level you've unlocked a new feature
267:14 - you've gained a certificate you have
267:17 - accomplished something that makes your
267:20 - own capacity greater and so we'll call
267:22 - that your self-reward there's also a
267:25 - reward that we could classify as the
267:27 - hunt
267:28 - so finding something that's really cool
267:31 - before anyone else does and of course
267:33 - pinterest looks to me like a great hunt
267:36 - app
267:37 - so i'm not sure what i'm going to find
267:38 - there but i will probably find
267:41 - something and so there's a variable
267:43 - reward on this one called the hunt or
267:45 - here's another one
267:47 - the variable reward
267:49 - of the tribe
267:50 - and so sometimes when you make a post
267:53 - you can only hope that you'll get a
267:54 - million likes on it wouldn't that make
267:56 - you feel warm and fuzzy to say that i
267:59 - picked something that was cool and
268:01 - everybody liked me
268:03 - or maybe you're more into the technology
268:05 - like with stack overflow
268:07 - you answer a question or you post a post
268:10 - a question
268:11 - and people vote
268:13 - reward points reputation points and so
268:16 - who doesn't want to be known as a smart
268:18 - programmer and so
268:20 - that is a variable reward you never know
268:22 - what quite you'll get every time you
268:24 - participate
268:25 - so we've covered three of the four the
268:26 - last one's coming up here which is
268:28 - called
268:29 - user investment and so this one's just
268:32 - as important as the other three
268:34 - so what is user investment well it's
268:37 - something that you contribute and it
268:39 - makes the product more valuable some
268:41 - people would call that the ikea effect
268:43 - and so ikea of course is the company
268:46 - that sells furniture in a box
268:48 - and you have to put it together so first
268:50 - of all it's cheaper that way they don't
268:52 - have to assemble it but you also take a
268:54 - little bit of pride to say i built the
268:56 - desk
268:57 - so here's an example of an app that
268:59 - would have user investment
269:01 - so you play this game called
269:03 - gardenscapes for a while
269:05 - and
269:06 - probably you're planting vegetables in a
269:08 - garden and virtually you've gone through
269:10 - three seasons of harvest and now you're
269:12 - quitting the app and as soon as you
269:13 - close it it says hey stop
269:16 - i want to help you you save your
269:18 - progress you've invested your time
269:21 - so don't just throw it away
269:23 - or maybe uh you're in your airlines and
269:26 - they say you just took a flight and
269:28 - we'll save your travel miles and you'll
269:30 - come back
269:31 - so that's the idea uh here's another one
269:34 - where you can have a collection so
269:36 - you're under some kind of a
269:38 - music play
269:39 - or a
269:40 - video play app
269:42 - and you create a list of things that you
269:44 - like well of course that's a user
269:46 - investment
269:47 - when you use the app and the more you
269:49 - use the app the more it becomes part of
269:51 - you
269:52 - and that becomes an emotional attachment
269:55 - or maybe something a little bit like
269:57 - this is from linkedin
269:59 - so you start
270:00 - using linkedin you put your profile up
270:02 - your job experience and then you stop
270:06 - well they present this to you to say hey
270:08 - you're making good progress we're almost
270:10 - to this next level
270:11 - level up if you can just add a summary
270:14 - of your
270:15 - portfolio or put a photo on it and so
270:18 - they make it a game so that you can make
270:20 - different levels
270:22 - so
270:22 - your user investment is going to
270:25 - increase the people's emotional
270:27 - investment
270:28 - in your app and they're more likely to
270:30 - return if they know they've already
270:33 - collected something
270:34 - and invested the time it's the same
270:36 - principle that we have here when you
270:38 - have a frequent shopper card
270:40 - i'm more likely to go back to the a
270:42 - restaurant if i know that i'm just one
270:43 - punch away from a free meal
270:46 - so
270:47 - here's here's a kind of a statistic that
270:48 - i think is very telling so 71 of users
270:51 - will stick to an app if you can get them
270:53 - to use it three times are or more
270:56 - so you look at that uh
270:58 - 71 percent is pretty high so if you can
271:00 - get them to use it more than once you're
271:02 - on the right track
271:04 - three times seems to be a pretty good
271:05 - number so make sure that there's at
271:08 - least three reasons for them to return
271:09 - to check on something
271:11 - so our goal here is to reach the habit
271:14 - zone
271:15 - so
271:15 - the habit zone is going to depend on two
271:18 - factors it looks like so the frequency
271:20 - of your app of course how often they
271:22 - come back
271:23 - and the usefulness of your app so even
271:25 - though
271:26 - they might not be on your app every
271:28 - single day if it's something they really
271:30 - need they won't forget about it so i'll
271:32 - give you two examples here so google
271:34 - google is something that we use multiple
271:36 - times many times a day and it's pretty
271:38 - useful too actually but
271:40 - they're uh one of the most addictive or
271:43 - we'll call them loyal app user
271:45 - apps that we can find the other we'll
271:47 - call amazon so
271:49 - i don't shop on amazon every day but i'm
271:51 - sure some people do that are watching
271:53 - this
271:54 - i wonder if you could put in your
271:55 - comments below here of
271:57 - what's the most
271:59 - number of purchases you've ever made in
272:01 - a single day on amazon and i think the
272:03 - poor delivery guy that comes here every
272:05 - time i click buy
272:06 - well that's the model and so the idea is
272:09 - that your app should have either
272:11 - something so useful that they can't
272:12 - forget about you or something that is
272:14 - easy and frequently used and that will
272:17 - help you become part of the addictive
272:20 - app now once again let's say that with
272:23 - great power comes great responsibility
272:26 - so make an app that actually is useful
272:30 - and is something that people should come
272:32 - back to
272:33 - so don't just do an app because you
272:34 - think it's going to make you money make
272:37 - something that will make their life
272:39 - better and then you will have a good
272:41 - conscience about why people should come
272:44 - back and use your app again in the next
272:46 - video we're going to talk about which
272:48 - tools that you should use to build an
272:50 - app whether it's for cross-platform or
272:52 - single app platform also if you'd like
272:55 - to see the entire playlist for this
272:57 - course i'll put a link here for the
272:59 - course playlist so whichever i thank you
273:02 - for coming make sure you subscribe and
273:04 - join me again for the next class
273:07 - [Music]
273:14 - hi and welcome to the business of
273:15 - building apps this is a course for
273:17 - people who are not only programmers but
273:19 - also business analysts so we're in
273:21 - section 4 right now which is called
273:23 - building customer loyalty and this is a
273:26 - video that will help you through an
273:28 - assignment that i'm going to give you if
273:29 - you were one of my students that i am
273:31 - teaching at grand canyon university so
273:34 - in this assignment the goal here is for
273:37 - you to demonstrate that you understand
273:39 - hook so what is hook well the background
273:42 - is that in a previous lesson we said
273:44 - that hooked is the process of retaining
273:47 - loyal customers or in a more cynical way
273:50 - how to make your product addictive and
273:52 - so that your customers are stuck with
273:54 - you so the process of hook was these
273:56 - four steps we had trigger action
273:59 - variable reward and user investment so
274:02 - i'm not going to reteach all this that
274:04 - was in a different video so what i want
274:06 - you to do for the assignment then is to
274:08 - demonstrate to me that you understand
274:10 - how this hook process works so i'm going
274:12 - to ask you if you are one of my students
274:14 - to write a paper that summarizes these
274:16 - four steps in the hook process and of
274:18 - course provide examples when appropriate
274:21 - then i want you to look at your own
274:23 - phone and look at the apps that you most
274:25 - commonly work with so as you describe
274:28 - these four steps in the hook process i
274:31 - want you to provide examples of where
274:33 - you are being hooked
274:35 - what are the features of the apps that
274:37 - you currently use how are they related
274:40 - and how do they map to these four steps
274:43 - so obviously if it's something you use
274:45 - frequently it's something that makes you
274:47 - a loyal customer maybe even an addicted
274:50 - customer so the deliverables that i
274:52 - expect to get from you if you're one of
274:54 - my students is to get a one-page summary
274:56 - of the hook model telling me about the
274:58 - four steps make sure that as you do that
275:01 - there are examples given from real life
275:04 - in your personal experience where you
275:05 - have seen hook
275:07 - so if you haven't seen the other videos
275:09 - i will leave a link to the playlist for
275:11 - the course so that you can go and see
275:13 - what the information here is
275:15 - if you are not one of my students you
275:17 - can probably put in the comments below
275:19 - in the youtube section of where you have
275:22 - seen these places of hook happen and why
275:26 - they are effective in your life so in
275:28 - any case make sure that you subscribe
275:30 - because this might be a valuable
275:32 - information to you at least i hope it is
275:34 - and if you're coming back i will see you
275:36 - again in the next class
275:40 - [Music]
275:46 - hi and welcome to the business of
275:48 - building apps this is a course for
275:50 - people who are designing applications
275:52 - and the business decisions that go with
275:53 - them so there's multiple chapters in
275:55 - this course and we're on chapter four
275:57 - which is about building customer loyalty
276:00 - in this particular video i'm going to
276:02 - talk about an assignment if you were one
276:03 - of my students at grand canyon
276:05 - university this is what i would ask you
276:07 - to do for homework activity 4.2 and the
276:10 - goal here is to apply the hook process
276:14 - to the design of your own app now if you
276:17 - don't know what hook is make sure that
276:18 - you go back and look at the previous
276:20 - videos hook is the process of making an
276:23 - app work well so that way you become a
276:25 - loyal or maybe an addicted customer so
276:29 - what i want you to do now is to go and
276:31 - review the business plan in a previous
276:33 - assignments i asked you to create a
276:35 - business plan which includes your
276:37 - relationships uh your revenue streams
276:41 - and your costs
276:42 - and i want you to take a look at the app
276:45 - that you designed and all of the user
276:46 - stories that go with it
276:48 - so you will notice that when you have
276:50 - your
276:51 - user stories in a chart that there may
276:54 - be gaps of things that you didn't
276:57 - include
276:58 - of the hook process so think about this
277:00 - way hook is the trigger the action the
277:04 - variable reward and user investment so
277:07 - like i said that's been taught already
277:10 - so what i want you to do is with an
277:11 - assignment i'm going to have you to
277:13 - create a table so i'm going to show you
277:15 - a table in just a second so you can
277:17 - either do it on from scratch or copy the
277:19 - one that i give you and i'm going to ask
277:21 - you to review all of the features in
277:24 - your app
277:25 - and see if you can add some new ones
277:27 - that would increase your customer
277:28 - loyalty for each new feature that you
277:31 - add tell me where it fits in the hook
277:33 - model
277:34 - so for instance
277:35 - if there are four different things in
277:37 - the hook model such as trigger action
277:39 - reward and user investment
277:41 - then which of the features in your user
277:44 - stories
277:45 - map to those items
277:48 - and most likely there's going to be some
277:49 - gaps
277:50 - so what i want you to do is to add new
277:54 - features
277:55 - so for instance you might say you forgot
277:57 - to put in here as a user i want to share
278:02 - some feature of what i've done
278:04 - with other friends
278:07 - so
278:08 - that may have not been in your user
278:09 - stories yet
278:11 - or you might have something like
278:13 - as a user i want to be able to
278:16 - save my progress so that i can come back
278:18 - later and continue where i left off so
278:21 - that may have not been in one of your
278:23 - user stories i'm just suggesting that
278:25 - those are two likely items that you
278:28 - would put in this chart so the goal here
278:30 - is to review all of the user stories and
278:32 - see if you can fill in some gaps where
278:34 - you have not made your app very loyal
278:37 - friendly or addictive
278:39 - so if you were to submit this to me as
278:41 - your teacher i would expect to get a
278:43 - word document that would have this table
278:45 - in it and in that table there would be
278:47 - improvements and new user stories that
278:49 - are mapped to those four items in the
278:52 - hook model so if you'd like to see the
278:54 - entire playlist for the course i will
278:56 - put that here so you can go back and see
278:58 - what the hook model is and the other
278:59 - items for building apps are so if you're
279:02 - one of my students i will see you again
279:04 - in the next class and if not please
279:06 - subscribe and join us
279:11 - [Music]
279:18 - hi welcome to this video where we're
279:20 - talking about the business of building
279:22 - mobile applications and so we're in the
279:24 - middle of a course which has got several
279:26 - chapters and so if you like what you see
279:29 - here make sure that you subscribe we are
279:32 - on chapter 5 which is choosing the right
279:35 - tools for your mobile application
279:37 - so in this unit we're going to be
279:39 - talking about what technically you can
279:41 - do with a phone and maybe what works
279:44 - better with a mobile website so my name
279:46 - is chad slooter and i teach computer
279:48 - science and software development at
279:50 - grand canyon university and i'm glad you
279:52 - joined us so make sure that you
279:54 - subscribe to catch all of these and we
279:56 - will become better programmers and
279:58 - better business people as a result so in
280:01 - this section here about our business
280:03 - tools our application development tools
280:06 - we're going to have three different
280:07 - things to look at first of all
280:10 - since it is a mobile application course
280:12 - it seems strange that i'm going to say
280:14 - in this video why you should not build a
280:18 - mobile application there are some
280:19 - reasons why it might not be a good idea
280:22 - in the next video we're going to be
280:23 - talking about the
280:25 - companies and applications that utilize
280:28 - mobile apps in a very effective way and
280:31 - then finally we'll talk about
280:32 - cross-platform mobile choices what
280:35 - languages and frameworks are best and
280:38 - popular today so right now though i'm
280:40 - going to give you five reasons why it
280:43 - might be a better idea
280:45 - not to build your mobile app even though
280:47 - you may have started with the assumption
280:49 - that you need a mobile application so
280:52 - why would that be if the teacher is
280:54 - teaching a class on mobile applications
280:57 - it's because there are some pretty good
280:58 - alternatives when you compare what you
281:01 - can do with a standard web browser and
281:03 - what you can do in a mobile app
281:06 - so compare these two pictures on the
281:08 - screen
281:09 - which one of these looks like a better
281:11 - experience for the user
281:14 - so the point is
281:16 - they're hard to distinguish so you're at
281:19 - a store you can browse the catalog you
281:22 - can see all the products you can add
281:23 - something to the cart you can check out
281:26 - you can use your credit card
281:28 - almost everything that you can do on the
281:31 - mobile app you can do on the um on the
281:34 - website
281:35 - the website is designed to look good on
281:37 - a phone that's why it's called a mobile
281:40 - first design or a responsive design
281:43 - and so
281:44 - maybe your phone app isn't really a
281:46 - necessity at all because we can deal
281:49 - with a lot of things when we have just a
281:52 - mobile website but let's talk about some
281:55 - reasons why you would think that a
281:56 - mobile app is required and then we'll go
281:59 - to the reasons why you might want to
282:01 - just go with a website
282:03 - reason number one
282:05 - you need to have high performance so if
282:08 - your goal is to build something that is
282:10 - uh graphically intensive
282:12 - and like a game here then a mobile app
282:14 - clearly is the choice because you will
282:16 - never be able to create the same
282:17 - performance in your web browser such as
282:20 - chrome
282:21 - now the second reason is you probably
282:23 - should consider what phone features are
282:26 - available and if you need them then you
282:29 - build an app for example if you need to
282:31 - scan something you're going to use the
282:33 - camera
282:34 - also think about the other features of
282:36 - your phone it has a gps sensor so it's
282:39 - location aware it has an accelerometer
282:42 - so it knows when it's moved so you can
282:44 - tell if your phone is being
282:46 - shaken or if it's been turned around in
282:49 - 360 degree space
282:51 - the camera obviously is something that a
282:53 - mobile app will be better at than a
282:56 - website and then there are other
282:58 - accessories so for instance think of if
283:00 - you plug in some kind of an external
283:03 - blood pressure reader or some kind of a
283:06 - credit card swiper those are going to
283:09 - probably need a mobile app a native app
283:11 - and not a website so that's probably the
283:13 - biggest reason you would want to choose
283:15 - a mobile app but if you haven't thought
283:17 - of those if those are not in your scope
283:19 - then this is a reason why you shouldn't
283:21 - need a mobile app
283:23 - let's talk about push notifications so
283:25 - what is a push notification well that's
283:27 - the alert that shows up on the phone
283:29 - that says hey there's something new come
283:31 - back to the app
283:32 - and so if that's important to you then
283:35 - you can probably use a mobile app and
283:38 - not the website so you would probably be
283:41 - able to send emails to customers or text
283:43 - alerts
283:45 - but if you want to have the pop-up
283:46 - message then a mobile app is what you
283:48 - need
283:49 - also the value of the icon itself
283:52 - so when you have an app installed you
283:55 - own a square of real estate
283:58 - and if you're really lucky the user will
284:00 - give you the front page
284:02 - so
284:03 - that in itself might be enough reason
284:06 - why you would build a mobile app
284:08 - the user will come back they don't have
284:10 - to remember your web page address so
284:13 - those are good reasons for a mobile app
284:15 - but let's talk about
284:16 - if you would not do the mobile app and
284:18 - you would just make the responsive
284:20 - website
284:21 - why would that actually be an advantage
284:23 - so here are some reasons first of all
284:26 - mobile apps don't show up in search
284:28 - results very well
284:29 - web pages do
284:31 - and so when people search for a topic on
284:33 - google they're going to pick one of the
284:35 - first few links probably the first three
284:37 - definitely the first page and so you
284:40 - want to be able to design a web page
284:42 - that is optimized for your keywords your
284:46 - niche audience
284:47 - and so a website is a better
284:50 - attractor of search results
284:52 - also think of the probably the cost of
284:55 - your mobile application
284:56 - and this is a very technical reason
284:59 - one code base
285:00 - so a one code base means that you have a
285:03 - single server
285:05 - that adapts to a mobile phone to a
285:08 - tablet to a desktop and that all shows
285:11 - up in the chrome browser or whatever
285:13 - browser the user chooses
285:14 - the single code base is super important
285:17 - because
285:18 - you either hire another programmer or
285:21 - you split a programmer's attention to
285:23 - two different code bases
285:25 - essentially if you have an ios app and a
285:28 - android app and a website you have three
285:30 - applications as a business person you're
285:32 - trying to reduce cost and a having a
285:35 - single team or a single developer that
285:38 - is focused on a website instead of
285:40 - having three different developers or
285:42 - three different teams you've cut your
285:44 - cost in less than half using a single
285:47 - code base so i would say that is
285:49 - probably
285:50 - a powerful reason for a startup to focus
285:53 - on just a mobile-friendly website you
285:57 - don't have to have so much code and
285:58 - development cost
286:00 - also think of the technical problems so
286:03 - every time there is a
286:05 - update to the operating system on
286:07 - android or ios
286:09 - you're going to have to make sure that
286:10 - your app conforms to the new features of
286:13 - the uh of the the operating system
286:15 - sometimes there's new requirements
286:17 - sometimes there's permissions that need
286:18 - to be gathered and you need to go in
286:21 - to your code of your app and update it
286:24 - and if you don't you're probably going
286:25 - to have this occur you're going to have
286:27 - application crashes and people will hate
286:29 - you and give bad feedback
286:31 - now if you build a website this rarely
286:34 - happens
286:35 - if a website works on one client it's
286:38 - likely going to work well on most
286:41 - clients now there are exceptions to that
286:43 - and you can certainly create a website
286:45 - that crashes there's no doubt there
286:47 - but i'm saying that there are less
286:49 - problems with keeping a website up to
286:52 - date than there are keeping three or
286:55 - more different versions of a mobile app
286:58 - here's another important reason for cost
287:00 - there are no fees when you build a
287:04 - website
287:05 - so you would know that uh apps such as
287:08 - um the app store and the play store
287:11 - charge you a commission for every
287:13 - transaction inside of your app so if
287:17 - you're selling virtual goods or
287:18 - subscriptions
287:20 - they're going to take 30 percent of your
287:22 - of your profit or your whole charge not
287:24 - your profit but the whole price
287:26 - and if you if you make a transaction on
287:28 - a website no problem at all they would
287:30 - just uh not even see that
287:33 - this does not occur for physical goods
287:36 - so amazon is not paying 30 percent to
287:39 - apple for every time you buy
287:40 - a
287:41 - item from the amazon store but this does
287:44 - apply to subscriptions and virtual goods
287:46 - here's a term called instant updates so
287:49 - this refers to also the technical
287:51 - problems
287:52 - if you have to update an app you're
287:55 - going to annoy the user it takes a few
287:57 - seconds
287:58 - sometimes it's automatic but if you're
288:00 - doing an update to a website the user
288:02 - doesn't have to download anything just
288:04 - the next time that they visit your web
288:06 - page
288:07 - the changes are in effect so there are
288:09 - both advantages and disadvantages to
288:11 - choosing a mobile app versus a mobile
288:14 - friendly web page in the next video i'm
288:16 - going to show you examples of eight
288:18 - different companies that really nailed
288:20 - it when it came to designing their
288:22 - mobile app if you'd like to see the
288:24 - entire playlist for this course i will
288:25 - put that link here as well make sure you
288:28 - subscribe and come back to class with me
288:30 - thank you for watching
288:34 - [Music]
288:40 - hi and welcome to the business of
288:42 - building applications this is a series
288:44 - of videos this for a course that i'm
288:45 - teaching and we're talking about the
288:47 - business process and the management and
288:49 - design of applications you can see that
288:52 - there are several chapters that i'm
288:53 - going to cover here and we are on number
288:55 - five right now which is focused on
288:58 - choosing the right kinds of tools for
289:01 - the apps that you're building
289:03 - so if this looks interesting to you make
289:04 - sure that you subscribe my name is shad
289:07 - slutter and i am a professor of software
289:09 - technologies at grand canyon university
289:12 - so please come to class with me if you
289:13 - like this kind of thing these are the
289:15 - other topics that are ahead of us so
289:17 - there's still more to come now let's get
289:19 - right to the point here we are talking
289:22 - about the app development choices in the
289:24 - previous video i said several reasons
289:27 - for why you shouldn't build an app at
289:28 - all which is kind of a strange thing for
289:30 - a class on building mobile applications
289:33 - so check that one out if you haven't
289:34 - seen it now we're going to focus on this
289:36 - one this video about several examples of
289:40 - apps that really nailed it these are
289:43 - good products these are companies
289:45 - usually that make an app worth your
289:47 - while and then we're going to talk about
289:49 - cross-platform apps in the next video so
289:52 - right now we're talking about nine
289:53 - mobile apps that work so these are
289:56 - things that actually are worth your
289:58 - download what is not on the list are a
290:00 - lot of things that you would probably
290:02 - already like as apps so for instance
290:05 - this this example here shows a store
290:08 - where the mobile experience is very
290:10 - similar to
290:12 - the uh
290:13 - the app experience on a chrome browser
290:16 - and so really there's no advantage of
290:17 - building a custom mobile app for this so
290:20 - for instance amazon you can do all your
290:21 - shopping on amazon right through their
290:23 - mobile website and so
290:26 - it might be a good idea to have the app
290:27 - but not necessarily so what we're going
290:29 - to focus on here are people's apps that
290:32 - really require you to have a native app
290:35 - let's start with the banks so banks have
290:38 - done a great job of eliminating the need
290:40 - for the bank itself and so you've seen
290:43 - commercials where you can do all of your
290:44 - banking online you just take a photo of
290:46 - it and the bank will process with that
290:49 - photo also it's good for alerts and so
290:52 - banking has become
290:54 - clearly not just a computer item
290:57 - where you can add and remove and
290:59 - transfer funds but you can make payments
291:02 - mobile payments you can deposit checks
291:05 - and so
291:07 - the bank app that you have on your phone
291:09 - is likely a good use of your technology
291:11 - there
291:12 - i'm going to put mcdonald's in here now
291:14 - i could probably substitute the
291:16 - mcdonald's app for most uh
291:18 - most restaurants
291:20 - this is just one that i happen to use
291:22 - and there's a couple of reasons why i
291:23 - picked it one you can reduce your time
291:27 - through the drive-through like in half
291:28 - you don't have to pay for anything it's
291:30 - already pre-ordered also they give me
291:33 - all kinds of a location aware kind of
291:36 - ideas so i know the gps is watching me
291:38 - so it knows my patterns so i included it
291:41 - here as an effective mobile app that i
291:43 - use on a regular basis the next app i'm
291:45 - going to put on here is no surprise a
291:48 - lot of people would expect lyft or that
291:50 - other company uber we would might put in
291:52 - there
291:53 - why is this a good mobile solution and
291:56 - not just a web solution well i think the
291:58 - gps is pretty important here we have to
292:00 - know where we are and where we want to
292:03 - go
292:04 - and so the com the computing there is
292:06 - pretty high the graphics of the map have
292:09 - to be good and most importantly we have
292:11 - to know the gps location so i'm going to
292:14 - include lyft as one of those apps that
292:16 - is transformative without a phone you
292:19 - probably wouldn't be able to do it and
292:21 - so this is a great example now i didn't
292:24 - include uber i have a long memory of
292:26 - companies that i would consider evil
292:29 - so so just check the the news from
292:31 - several years ago about why uber might
292:34 - be an evil company so the next company
292:36 - up is walgreens now there's probably
292:38 - other good pharmacy apps out there but
292:40 - we'll just pick walgreens because well
292:42 - they're famous so what can you do with
292:44 - an app that you can't do with a website
292:46 - well first of all you can refill your
292:48 - prescription with a scan so your your
292:51 - phone has a camera and they've built the
292:53 - app right there so that it'll recognize
292:55 - which bottle you have in your hand and
292:57 - it will connect to your account also
292:59 - with walgreens you can have telemedicine
293:01 - so you can talk to the doctor or
293:03 - pharmacist without an appointment
293:05 - perhaps standing right there in the
293:06 - store or as you uh
293:09 - are on the way maybe hopefully you're
293:10 - not driving and talking but the
293:12 - walgreens app is going to eliminate the
293:14 - need for a lot of time-consuming work
293:17 - and
293:18 - you can't do these things in a regular
293:20 - website so that's why it makes the list
293:22 - of a successful company app
293:25 - ikea comes up next so remember ikea is
293:28 - the company that will sell you
293:30 - furniture in a box and you have to
293:32 - assemble it so what does their app do
293:34 - that's kind of interesting or unique
293:37 - well they have a 3d modeling tool
293:41 - which is based on the technology that's
293:43 - in your phone like
293:44 - augmented reality and what's called
293:46 - lidar which is the kind of a radar
293:49 - system using light waves and you can
293:52 - place furniture in your house and take a
293:55 - look at it you can paint your walls and
293:57 - wallpaper your house virtually and you
294:00 - can see the results as you move the
294:01 - phone around so literally you spin
294:02 - around looking at your phone you see the
294:04 - room and then you have pictures of
294:08 - items of furniture and accessories
294:09 - superimposed over the picture so a great
294:12 - tool
294:13 - for selling their products i don't
294:15 - really know if this is effective as far
294:16 - as increasing sales
294:19 - but i liked it because it was the cool
294:20 - factor so maybe that will just allow
294:22 - people to
294:24 - look at ikea's furniture more often so
294:26 - personally i haven't used the app but i
294:28 - just think it's a great idea
294:30 - l'oreal is a makeup company of course
294:33 - and what are they doing that requires a
294:36 - mobile app well you can try on their
294:38 - products you can put lipstick on or
294:40 - makeup of any kind you can style your
294:42 - eyes
294:43 - and it's a virtual kind of an augmented
294:45 - reality experience as well
294:48 - so this is kind of an instagram or
294:50 - snapchat
294:52 - idea but they're using it to sell their
294:54 - products and you can see that you can
294:56 - probably click the buy button and you'll
294:58 - be happy with your results even though
295:00 - you haven't actually tried anything on
295:03 - here's an app that probably is just
295:05 - picked out of
295:06 - a classification of many golf shot so
295:09 - what is golf shot it's a program that
295:12 - allows you to see around yourself so if
295:15 - you
295:16 - select the golf course name that's in
295:18 - the list
295:20 - they have all the measurements to the
295:21 - green to the shortcuts to the sand traps
295:25 - and it's kind of like having a caddy
295:27 - that knows the course
295:29 - extremely well you can see ahead of you
295:31 - other similar apps to this i've seen is
295:33 - a peak finder app where you show
295:36 - the the mountains that are around you it
295:37 - tells you the mountain name it literally
295:39 - points to an arrow to the peak and says
295:42 - like this is long's peak in colorado
295:44 - which is 14 520 feet tall
295:48 - and in your golf game yes people get
295:50 - pretty serious about golf right they
295:52 - want to make sure that they have the
295:54 - proper information and you get a map of
295:56 - the course that you're looking at tells
295:58 - you a little dot on the map where you
296:00 - are how far you are to the green
296:02 - and so once again this is a great
296:05 - example of an app that requires a native
296:07 - app it won't work in a website so
296:10 - download the app it'll be worth your
296:12 - while and i predict that
296:15 - rich golf people
296:16 - are going to spend a little bit of money
296:19 - on an app if it'll improve their game i
296:21 - mean for goodness sakes they buy all
296:22 - kinds of expensive golf carts golf clubs
296:25 - and clothing so why not invest a little
296:28 - bit in your mobile app as well
296:31 - the euphoria chalk is my next candidate
296:33 - for a great app so what is it it's an
296:37 - app that you would use
296:39 - for the remote expert
296:41 - and almost all the examples that you
296:43 - would see on their website and other
296:45 - propaganda that they show
296:48 - shows a person who's a field technician
296:50 - is this person
296:51 - and he's looking at something very
296:53 - specialized
296:55 - and you you can see that superimposed
296:57 - over the picture where he's working is
296:59 - somebody else
297:01 - that is drawing on the on the tablet so
297:05 - the technician might not be familiar
297:07 - with this piece of equipment and so the
297:09 - numbers there say plug in here
297:11 - disconnect number two attach number
297:13 - three
297:14 - and it's an augmented reality solution
297:17 - again so a collaboration of people
297:20 - looking at an object even though they
297:21 - might be thousands of miles away so
297:24 - some years ago i was involved in a
297:26 - construction project where
297:28 - we were in mexico and the experts were
297:30 - in boston and
297:32 - literally we were trying to use video
297:35 - chat and cameras it was it was okay but
297:38 - this would have been better if we could
297:39 - have had this augmented reality where we
297:42 - would see and touch
297:44 - and
297:45 - communicate in real time as if we were
297:47 - both looking at the same thing
297:49 - and so that's a great solution obviously
297:51 - you can't do that with a website only
297:53 - health monitoring apps are a big
297:55 - category and it seems like
297:57 - android and apple and google and apple
298:00 - have already
298:02 - given us some great tools but
298:04 - there's probably a niche available for
298:06 - others so think of
298:09 - gadgets that must plug into your phone
298:12 - so in this case we're measuring the
298:14 - oxygen
298:15 - in your blood and you can't do that with
298:17 - a camera you can't do it with just a
298:19 - fingerprint sensor
298:20 - so there's this physical device that
298:22 - plugs into the phone
298:24 - and as soon as you have a physical
298:25 - device going through a usb cord or some
298:28 - other communications
298:30 - you're not going to do that with just a
298:31 - website you're going to have a native
298:33 - mobile app
298:34 - and so i know that like credit card
298:36 - swipers would be a good example of this
298:39 - so people that are in a food truck are
298:41 - going to be charging you with a credit
298:43 - card not with a machine except for
298:46 - except for their phone
298:47 - so another infamous example it was the
298:50 - company called theranos uh look them up
298:52 - in the news they're another one of those
298:53 - evil companies that i would refer to in
298:56 - my my long-term memory
298:57 - they had a plug-in item to a phone and
299:00 - they claimed that they could replace an
299:02 - entire laboratory with a drop of blood
299:04 - on a microchip and the app would take
299:06 - care of all of the tests and it was a
299:08 - little bit of a over promise and a a lie
299:11 - a straight lie and so the founder of
299:14 - theranos is in trouble and in criminal
299:17 - court because of her actions
299:19 - so these are companies that have built
299:22 - apps that are great examples of why you
299:25 - need a mobile solution and not just a
299:27 - website in this next video we're going
299:29 - to talk about ways to create
299:31 - cross-platform applications and so that
299:33 - will reduce the amount of code that you
299:35 - have to write if you'd like to see the
299:37 - entire course playlist i'll put this
299:39 - link up as well and make sure that you
299:41 - subscribe so welcome to class and come
299:43 - back for some more mobile application
299:46 - development
299:49 - [Music]
299:56 - hi welcome to this course called
299:58 - building mobile applications we're
299:59 - talking about the business problems that
300:01 - are associated with building mobile apps
300:03 - in this video we are in part number five
300:07 - which is right here about choosing the
300:09 - right tools so we're going to be
300:10 - focusing on choosing the right
300:12 - development tools for a cross-platform
300:15 - mobile solution if any of these other
300:17 - topics are interesting to you make sure
300:19 - you subscribe and come back to class
300:21 - when these are available my name is shad
300:24 - sluter and i teach software development
300:26 - and computer science at grand canyon
300:28 - university in phoenix arizona so let's
300:31 - get started on our topic today so we are
300:33 - talking about development choices that
300:35 - are about cross platforms we've already
300:39 - asked the question about should we build
300:41 - a mobile app and then we've talked about
300:43 - some companies that really nailed it
300:44 - with a great solution that was mobile
300:47 - and then now we're here on the cross
300:48 - platform issues so let's get started on
300:51 - examining what languages what tools
300:55 - would work best for your company so
300:57 - really there are three types of language
300:59 - development tools that you can work with
301:01 - when you're talking about mobile
301:03 - development first of all there's native
301:05 - code so this is the android studio this
301:08 - is xcode with apple and so you're
301:10 - creating code that is running
301:11 - specifically for that phone also there
301:14 - are ways to create web pages that are
301:17 - called responsive design and so if
301:19 - you're a good web developer you should
301:20 - think mobile first and you might not
301:22 - even have to create an app and the third
301:25 - category the most involved here is
301:28 - hybrid apps using technologies that were
301:30 - originally designed for web pages but
301:32 - we've adapted them to work on phones so
301:35 - let's first of all talk about the native
301:36 - apps so if you're going to work on an
301:38 - apple or an ios phone you're going to
301:40 - buy a macintosh computer and install
301:42 - xcode this is the
301:45 - platform for phones as well as tablets
301:48 - xcode is like visual studio if you
301:50 - worked with that before it's an
301:52 - integrated development environment
301:54 - also the languages that you can pick
301:56 - from if you're developing a native for
301:58 - apple you're going to work with
302:00 - objective c or swift now swift looks a
302:03 - lot like you would expect in javascript
302:04 - or java objective c
302:07 - well it looks like nothing else
302:09 - maybe cobalt i'm not sure but objective
302:12 - c is certainly out of favor for most
302:14 - developers these days now if you're
302:16 - working with android you're going to be
302:18 - building a native app as well and their
302:20 - program that is for developing apps is
302:23 - called android studio so android studio
302:25 - looks kind of like xcode where you have
302:27 - layouts and then you have coding
302:29 - sections the languages that you're going
302:31 - to be working with are going to be
302:33 - either java or kotlin and so java of
302:37 - course is super popular it seems like
302:40 - developers have been working on java for
302:42 - decades and so if you've got java skills
302:44 - then you're ready to go with android
302:46 - with
302:47 - learning how the libraries of course
302:49 - work but you're ready to program now
302:51 - kotlin came along just a few years ago
302:53 - and apparently it is more efficient you
302:56 - get right you shorter code and it's
302:58 - developed specifically for android so
303:01 - the disadvantage obviously is you have
303:03 - to learn a new language if you're
303:05 - developing in android now what are the
303:07 - advantages of choosing a native app over
303:11 - some of the other technologies that
303:12 - we're going to show later
303:14 - so first of all if you want to have the
303:16 - best user experience possible for your
303:20 - app then pick native it's going to run
303:22 - and look like you expect an app to run
303:25 - it's a real app it's not some kind of a
303:27 - clutch now the next one that you might
303:29 - say is not necessarily how the app looks
303:32 - but it's how apple and google treat you
303:35 - they can tell when you submit an app to
303:37 - the store of how how it was built what
303:40 - platforms did it run on and i've been
303:42 - told you get a better
303:44 - rating you get higher reviews and more
303:47 - likely to be promoted on their store
303:49 - they want users to have good experiences
303:52 - however the disadvantages are pretty big
303:55 - too so
303:56 - if you are a developer and you're
303:57 - building in native apps you'll have to
303:59 - learn multiple programming languages so
304:02 - for some of you that's not a problem
304:03 - you've already got your languages in web
304:06 - development or other app development and
304:08 - you're ready to just adapt them to
304:10 - android so if you've already figured out
304:12 - how to program in java
304:14 - you're ready to go for most of the
304:16 - skills that you'll need for android and
304:18 - of course swift is very much like either
304:20 - of those languages so you're probably
304:22 - not going to be choking on that however
304:25 - if you are a brand new developer if you
304:27 - don't really know how to code yet you
304:28 - want to build a web app the native apps
304:30 - will be the hardest choice of the three
304:33 - so a big problem that businesses seem to
304:36 - face when they're developing native apps
304:39 - is that they're actually creating double
304:41 - the work
304:42 - for one app you have to create an
304:44 - android version and you have to create
304:45 - an ios version
304:47 - and that sounds easy if all you're doing
304:49 - is creating a simple app however apps
304:52 - can be complicated and require lots of
304:54 - planning so you're going to have to
304:56 - design your app twice you're going to
304:58 - have to build
304:59 - two different testing plans for it
305:01 - you're going to have to deploy to do two
305:03 - different platforms you might have two
305:06 - development teams that are working on
305:08 - individual parts of your app
305:10 - and also you have to maintain your apps
305:12 - so when things change on your phone you
305:14 - grow up to new versions your app is
305:16 - going to have to be modified as well and
305:18 - so it is double the work of just
305:20 - creating a single platform app so the
305:23 - second way that you can think of when
305:24 - you're trying to serve your mobile users
305:26 - is just to not build an app at all
305:29 - just pick a web page design that is
305:31 - responsive
305:33 - so i think almost every web page out
305:35 - there these days is using mobile first
305:38 - in their design so you look at a page
305:40 - and you on your phone and you notice it
305:42 - looks different than the one that you
305:43 - see on your laptop and your tablet is
305:45 - somewhere in between these are
305:47 - common web technology
305:50 - design patterns that front-end designers
305:52 - use these days and so
305:54 - it's not really an app
305:55 - but it serves the same purpose as maybe
305:58 - what an app would do your business has
306:00 - to connect to customers and
306:03 - make your page do both
306:04 - mobile and web and you've got yourself a
306:07 - solution so what are the advantages for
306:09 - just using web for mobile well obviously
306:12 - you don't have any extra coding you
306:14 - don't have to figure out how to create a
306:15 - mobile version of your company app you
306:18 - just make your web page function for
306:20 - them all also it's somewhat simpler to
306:24 - just create your web page so
306:26 - html and javascript might all all be
306:29 - what your your web page has involved
306:31 - with so i know that most web pages have
306:33 - java and c-sharp or php or ruby or some
306:36 - kind of a back end that is really doing
306:39 - the the server work and of course
306:41 - that i wouldn't want to discount your
306:44 - development there
306:45 - but you don't have to worry about
306:46 - compiling a web app to you and you don't
306:49 - have to worry about publishing it to a
306:50 - store or promoting it you just make sure
306:52 - that it has good google results or your
306:56 - typical web page seo and you're ready to
306:58 - make your mark so what's the
307:01 - disadvantage of using just pure web
307:02 - pages well apps work better
307:05 - on phones they can a web page can be
307:09 - slow
307:10 - and obviously it's not available offline
307:12 - so if your mobile users are out of range
307:14 - which they frequently are your web page
307:17 - just won't work
307:18 - so you're also missing out on an
307:21 - opportunity to promote your company if
307:23 - all you create is a web page
307:24 - the app store gives you visibility you
307:27 - can attract visibility you can attract
307:29 - customers you can get attention if your
307:31 - app does well in the web store or the
307:33 - app store
307:35 - also
307:36 - web pages don't do everything that you
307:38 - can with a mobile app so think of using
307:40 - your camera your gps your accelerometer
307:43 - and things that are more
307:45 - native and you will not probably get as
307:47 - good of an experience if all you do is a
307:49 - web page
307:51 - now the third category brings us into
307:53 - kind of a middle ground between those
307:55 - it's called the hybrid apps there are
307:57 - three ways to create a hybrid app the
307:58 - first one we're going to look at is a
308:00 - web view the second is compiling an app
308:03 - that will be cross platform compatible
308:06 - and the third is using something called
308:08 - javascript core using javascript to
308:10 - create native apps and so let's take a
308:12 - look at these together
308:14 - first of all if you're thinking about a
308:16 - webview app the technology that's
308:18 - probably at the core of this experience
308:20 - is called cordova apache cordova is an
308:23 - open source project and you can see from
308:25 - the diagram that it takes the usual web
308:28 - page using html css and javascript and
308:31 - then it does its little black box
308:33 - conversion and poof out comes an app
308:35 - that you can put on the web store it
308:37 - runs on apple it runs on
308:39 - android and what's that other thing
308:41 - there that square some kind of another
308:43 - third mobile tool i guess i'm not sure
308:45 - what that platform is but you can make
308:47 - your cross platform app using just your
308:51 - web technologies so the advantages of
308:54 - working with that are that it's simple
308:56 - if you're already a web developer then
308:58 - apache cordova will make your app
309:01 - out of the code that you've already
309:02 - built and there's only one code base so
309:05 - you create one app and it will compile
309:07 - to any of the platforms that are out
309:09 - there you can publish your app to the
309:11 - app store however it's not going to be
309:13 - as maybe popular as the native apps you
309:16 - don't have to have an apple computer by
309:17 - the way i think that should be said that
309:20 - if you're if you're programming in ios
309:21 - you're probably going to have to well
309:23 - you have to have a macintosh to run
309:25 - xcode
309:26 - so what are the disadvantages
309:28 - well
309:29 - web view apps
309:30 - look like web pages and they're just
309:32 - trapped inside a picture frame and so
309:35 - they will work offline but they look and
309:38 - feel like a web page so you're kind of
309:40 - cheating really when you're building a
309:42 - kind of an app
309:43 - here's an innovative technology this
309:46 - company called xamarin has built a nice
309:49 - niche for themselves
309:51 - they will take a c-sharp program
309:54 - written in visual studio
309:56 - and compile it to work with native apps
310:01 - so it doesn't use java it doesn't use
310:03 - kotlin it doesn't use swift or what's
310:06 - the other objective c it uses c sharp a
310:08 - microsoft technology a microsoft
310:10 - language and compiles into the native
310:13 - app that you're looking for
310:15 - so you have one code base to work with
310:18 - and you have just one language to work
310:20 - with so the advantages are pretty good
310:22 - so think of you're creating native apps
310:24 - you're not trying to shortcut anything
310:27 - and you have used only one code base
310:30 - that's probably the biggest reason that
310:31 - people would use xamarin is that they
310:33 - only have one version of their app that
310:35 - they have to compile
310:36 - so they keep track of all the errors in
310:38 - one place do all the testing in one
310:40 - place and do all the design in one place
310:42 - just one code base it's a great
310:44 - advantage and then of course it's one
310:46 - language so c-sharp is a very popular
310:49 - language
310:50 - professional developers use c-sharp for
310:52 - everything and so corporations have
310:55 - already got a good army of developers
310:57 - that can develop a web app or i'm sorry
310:59 - a mobile app using the language they
311:01 - already know
311:02 - there's one disadvantage that i can
311:03 - think of is that xamarin apps compile
311:07 - somewhat larger sometimes double the
311:09 - size of a regular native app
311:11 - that has to do with something of how the
311:12 - runtime libraries are attached to the
311:14 - app
311:15 - but xamarin is a good choice and it
311:18 - might work out for you if you're already
311:20 - a c-sharp developer or your company uses
311:22 - c-sharp as other apps
311:25 - now javascript code is the third type of
311:28 - hybrid that we looked at here or we're
311:30 - going to look at and really there's only
311:31 - one big name you have to worry about
311:33 - it's called react native so react is a
311:36 - framework that is used to create web
311:38 - pages it's super popular it seems to be
311:40 - like everyone's using react these days
311:43 - it's really javascript with some extra
311:45 - twists in it and it creates these super
311:48 - fast responsive web pages that are
311:51 - updated in partial manners it's it's
311:53 - really the best way these days to create
311:55 - a web app that with angular those seem
311:58 - to be the two types of web app
312:00 - technologies but we take react from the
312:04 - web world and now we have adapted it to
312:06 - the
312:07 - native experience in a app design
312:10 - so it will not just
312:12 - render react will render objects to a
312:15 - screen you know like forms and buttons
312:18 - and things
312:19 - but you can use the same technology to
312:21 - render native controls to the screen
312:24 - so
312:24 - react dom is what you would use with
312:27 - when you're trying to create a web app
312:29 - react native is what you use when you're
312:31 - trying to
312:32 - compile for a phone
312:33 - so the advantages of react native are
312:36 - that you use the same skills again that
312:38 - you did as a web developer so if you're
312:40 - a web developer using react you're ready
312:43 - to go and you're ready to learn how to
312:44 - use react native for mobile
312:47 - also you have a single code base again
312:48 - you only have one version of your app to
312:50 - test and to deploy and so react native
312:54 - is a great choice for crops across
312:55 - platforms
312:57 - and the key is that the native app
312:59 - performance is there the apps are really
313:01 - indistinguishable from the native apps
313:03 - even though they're written in
313:04 - javascript and so it's a great bunch of
313:07 - advantages and so for the disadvantages
313:09 - well i really couldn't think of any if
313:11 - you're already developing in in c-sharp
313:13 - with xamarin and just keep going with
313:15 - that or if you're working with java and
313:17 - android maybe you're fine but a lot of
313:19 - people are saying uh i've already got
313:22 - web development experience how do i get
313:23 - into mobile well react native is your
313:25 - best choice that's the easiest step for
313:27 - you as a web developer to get into
313:30 - mobile developments
313:31 - there's also another category that you
313:33 - could think of is that game engines such
313:35 - as unity and unreal really the two main
313:38 - competitors in this in this market are
313:40 - both able to export their projects to
313:43 - both android and ios
313:45 - and so you can think of there are
313:47 - multiple platforms you can export to an
313:49 - xbox or to a playstation but android and
313:52 - ios are mobile platforms that they can
313:54 - work with but game engines are not just
313:57 - for games either if you want to create a
313:59 - virtual reality application or an
314:01 - augmented reality applications for
314:04 - training purposes or for some kind of a
314:07 - advertisement
314:09 - then
314:09 - unreal and unity are probably going to
314:11 - work better than trying to build that
314:13 - app
314:14 - on android studio or something like that
314:16 - so game engines aren't just for games
314:19 - and they work great with mobile now
314:20 - before i end here i want to mention two
314:22 - other technologies that are emerging or
314:24 - at least they're somewhat popular first
314:27 - of all kotlin is the language that
314:29 - google prefers instead of java and they
314:31 - have a version now called kmm or kotlin
314:35 - multi-platform mobile and the idea here
314:38 - is that you create the majority of your
314:40 - application in the kotlin language and
314:43 - then you rely on the front end
314:45 - differences between ios and android
314:48 - and so this is fairly new in 2021 i
314:50 - believe and so honestly i don't know
314:52 - much about it other than the fact that
314:54 - it exists and google is pushing it hard
314:57 - now you would think that google has
314:59 - their mind made up on what their
315:01 - multi-platform solution is but check it
315:03 - out here so if you go to flutter.dev you
315:06 - have create faster apps and all this
315:08 - stuff and look it's also made by google
315:11 - and so flutter is a framework that uses
315:14 - the language called dart
315:16 - and its purpose is to create these
315:19 - multi-platform language uh
315:21 - apps as well
315:23 - and so both of these i've seen great
315:25 - reviews from people out there that are
315:27 - more knowledgeable about this stuff than
315:28 - i am but i certainly have my own doubts
315:32 - in my mind is
315:34 - what does google think i mean they have
315:36 - two solutions and they're promoting both
315:38 - of them and they both try to accomplish
315:41 - it looks like the same thing
315:43 - so
315:44 - those are probably interesting uh
315:46 - questions to ask
315:48 - let me give you an experiment here so
315:49 - i'm going to open up indeed and type in
315:51 - the word flutter and you're going to see
315:53 - that there are
315:55 - literally seven jobs
315:57 - seven jobs
315:58 - and some of them are about react native
316:02 - so this tells me that
316:04 - i wouldn't recommend this solution for a
316:07 - business that's going to depend on a
316:09 - technology that literally hardly anyone
316:11 - uses now compare this with what if we
316:13 - put in react
316:14 - native and i'm still in the phoenix area
316:16 - what comes up we have 65 jobs so that's
316:19 - literally a 10 times amount of mobile
316:22 - development talent that's out there
316:24 - let's see what cmm looks like we're not
316:27 - going to get a single result so this is
316:29 - telling you what is not available people
316:32 - don't use this yet and this is 2021 when
316:35 - you're making this video so let's just
316:37 - search for web developer to get a
316:39 - context of what this compares with right
316:41 - now so there are 399 jobs in the
316:45 - category of web developer of course
316:47 - that's going to be
316:48 - a lot of different technologies but you
316:50 - can see that mobile is kind of a niche
316:52 - and then a smaller niche than that is
316:55 - going to be react native and then
316:58 - minuscule is
317:00 - going to be dart and flutter and then
317:03 - even smaller is kmm so
317:06 - take that for what it's worth if i were
317:08 - the business leader i would probably not
317:09 - go for these technologies where you
317:11 - literally cannot find any job postings
317:14 - let's just do one more search here i'm
317:15 - going to search for mobile developer and
317:16 - see what kind of technologies people
317:18 - expect out there so
317:20 - i'm going to find a
317:23 - company that i recognize here so
317:25 - u-haul okay u-haul is headquartered here
317:28 - in phoenix let's check out what their
317:30 - requirements are what kind of mobile
317:31 - technology and platform are they up to
317:34 - okay this tells you what we want
317:37 - so android development they want android
317:39 - and they say java how about that so
317:42 - they're not using the most up-to-date
317:44 - language let's go and check to see what
317:46 - some of the keywords are in their job
317:49 - description so it says here
317:51 - object oriented we're going to do mvvm
317:54 - mvc so those are design things
317:57 - android networking such as rest services
318:00 - and i don't see anything here about
318:03 - cross-platform it says here native
318:06 - applications so they're not even
318:08 - interested in
318:10 - cross-platform compiling so i would
318:12 - recommend that you do some searching
318:14 - around and see what other companies in
318:16 - your area are looking at
318:18 - u-haul might be an exception here but i
318:20 - doubt it i think that a lot of people
318:22 - just
318:23 - don't do the cross-platform solutions
318:26 - they're just not meeting their needs
318:28 - they're willing to spend the extra time
318:29 - to get a native so looking at this you
318:32 - can see that cross-platform solutions
318:34 - are not the first thing that comes to
318:36 - mind for some developers and it's
318:38 - probably going to depend on who you
318:40 - already have on your team
318:42 - if you have expert
318:44 - language skills in a certain area
318:46 - or if you're willing to take a risk on
318:48 - some new emerging technology
318:51 - so that's going to be up to you and how
318:53 - tolerant you are
318:55 - for risk
318:56 - in the next video we're going to be
318:57 - talking about the back end and where you
318:59 - store your data so that's really about
319:00 - the full stack solution and if you want
319:03 - to see the entire playlist for all of
319:05 - the topics on the business of building
319:06 - apps check out the other link and please
319:09 - join me again for class and happy mobile
319:12 - development
319:16 - [Music]
319:22 - hi and welcome to the business of
319:24 - building applications this is a course
319:26 - for people who are business designers
319:28 - and working with mobile apps we're in
319:30 - chapter five in this section here called
319:32 - choosing the right tools and in this
319:34 - video i'm giving you an assignment so
319:36 - we'll call this activity 5-1
319:39 - and so in this activity what i want you
319:41 - to do is to make a comparison of the
319:44 - current available dev tools so we're
319:47 - talking about languages and frameworks
319:49 - and cross-platform and all of the other
319:52 - solutions that i've mentioned in a
319:54 - previous video in this course
319:56 - so the background is that you will
319:58 - create a comparison with the
320:00 - applications and the languages and the
320:03 - frameworks that go along with them what
320:05 - i want you to do is to identify what you
320:08 - think are the advantages or the
320:10 - disadvantages of each of them and so for
320:13 - a moment you can ignore the opinions
320:14 - that i provided to you in the video and
320:17 - come up with your own what i want you to
320:19 - do is to do some searching go find out
320:22 - the experts that are out there and so i
320:24 - recommend a google search such as
320:27 - search for xamarin versus react native
320:30 - versus flutter versus kotlin
320:32 - and you will likely discover some other
320:34 - tools that i have not mentioned but
320:37 - those kind of versus
320:39 - search key terms are a great way to find
320:41 - the blog articles that will help you out
320:44 - so i want you to search for google
320:45 - trends as well
320:47 - trends.google.com i think it is
320:49 - search stack overflow and look at their
320:51 - annual surveys of developers look in
320:54 - indeed or glassdoor or github and find
320:58 - out what's going on in the world and
321:01 - what the trends are for each of the
321:03 - languages that you're considering
321:05 - so these sources that i mentioned here
321:06 - provide impartial data points and
321:08 - statistics not just some person's blog
321:11 - opinion
321:12 - and so i want to know if the solutions
321:15 - are mainstream which is means that
321:17 - they're being used in the real world by
321:19 - real businesses
321:20 - so it's a good idea that you do a
321:22 - limited search so
321:24 - if you search for anything in that was
321:27 - published in the last year you're
321:29 - probably going to have some pretty good
321:31 - up-to-date information so you don't want
321:33 - to pull something from 2003
321:36 - and because back then there was
321:37 - obviously different requirements and
321:39 - different trends
321:40 - so read blogs read reddit threads and
321:43 - get a variety of viewpoints and opinions
321:46 - so this is a research project based not
321:49 - on academic journals but on real
321:52 - programmers
321:53 - so when you're done i want you to
321:56 - collect all of these viewpoints
321:59 - and i want you to give me a summary in a
322:02 - table that looks like this
322:04 - so the first column is to tell me which
322:07 - framework you're looking at
322:09 - for instance we could put react native
322:11 - in there
322:12 - and then advantages so what makes react
322:15 - native popular why do people love it
322:17 - or why do people avoid this that's of
322:20 - course the contrary how many people
322:22 - are using this tool is react native
322:24 - showing up in job search postings
322:27 - or are people just dreaming about what
322:29 - they think should be actually used and
322:32 - then how long has this been around
322:33 - because of course age doesn't
322:36 - necessarily justify why a solution is
322:38 - good
322:39 - but if you're picking something that was
322:40 - just invented yesterday then maybe it's
322:43 - not quite ready for you to build your
322:44 - business on it so if you're one of my
322:46 - students this is what i would expect you
322:48 - to send to me i want you to have a word
322:50 - document with a table
322:52 - and on that table you're going to have
322:54 - all the development tools and describing
322:56 - the benefits and the items that i just
322:58 - showed you a second ago
323:00 - so that would be a way for you to
323:02 - summarize what you've learned
323:04 - and i would grade you based on how
323:06 - complete your table was how well you're
323:08 - able to summarize what's out there and
323:11 - look for some factual data points to
323:13 - back up your opinions so if you're not
323:15 - one of my students make sure that you
323:17 - subscribe so that you can get the rest
323:18 - of this course i will put a link to all
323:21 - the playlists here so that way you can
323:23 - see some of the lessons that i've built
323:25 - and if you are one of my students i will
323:27 - see you again
323:28 - in the next class
323:33 - [Music]
323:40 - hi and welcome to the business of
323:41 - building apps this is a course that is
323:44 - supposed to make you a better designer
323:46 - and app developer so we're in section 5
323:49 - right now which is called choosing the
323:51 - right tools if any of the other sections
323:54 - look interesting to you make sure that
323:55 - you check out the course playlist so
323:57 - that you can get all of them in this
323:59 - video we're talking about an assignment
324:01 - so i'm giving you homework if you're one
324:03 - of my students and we'll call it
324:04 - activity 5-2
324:07 - in this i'm going to ask you to provide
324:09 - a recommendation for a development
324:11 - solution so in a previous activity we've
324:14 - created an app design we have an idea
324:17 - for a business we've got some wireframes
324:19 - we're ready to program but we're not
324:21 - quite sure what languages we need to
324:23 - work with in a previous assignment in a
324:25 - previous video we compared several
324:27 - different platforms whether they were
324:29 - single platform or cross-platform
324:32 - there's a lot of choices out there now
324:34 - based on the recommendation that you
324:35 - provide me i want you to think about the
324:38 - facts that you discovered and provide an
324:41 - application that fits your needs
324:45 - so not necessarily the most popular one
324:47 - in the world
324:48 - but the one that affects you the most
324:51 - so your team will have unique factors
324:53 - that may lead to recommendations that
324:55 - other teams do not have
324:57 - for example you yourself are an expert
325:00 - let's say
325:01 - in
325:02 - c sharp or maybe you have never
325:04 - programmed before i'm not sure what your
325:07 - factors are maybe the people that you
325:09 - are working with already have something
325:11 - in mind regardless there's going to be a
325:14 - justification for why you choose a
325:16 - certain programming language
325:18 - and a certain development platform and
325:21 - so really that's the goal of this
325:22 - assignment so here are the instructions
325:25 - i want you to write a one page document
325:27 - word document's fine and i'm going to
325:29 - ask you to
325:31 - make a recommendation on which language
325:33 - frameworks cloud services and databases
325:37 - and other tools that you think would be
325:39 - appropriate for your app
325:42 - and
325:42 - make sure that you provide a rationale
325:45 - behind it and so that's why i would
325:47 - grade a good
325:49 - good paper versus a poor paper is based
325:52 - on how well you're able to make the
325:53 - application so you might recommend a
325:56 - different solution than another student
325:58 - but you probably have good reasons to so
326:00 - here are the considerations
326:02 - if you choose
326:04 - a cross-platform solution it's probably
326:07 - because you're trying to save money or
326:09 - save time
326:10 - make sure that that is actually true
326:12 - before you make the recommendation so
326:15 - don't just go
326:16 - on what might be true but that provides
326:19 - some evidence to make that
326:21 - a real conclusion
326:22 - also something might be brand new but
326:24 - does that make it quote better
326:27 - according to some people yes the newest
326:29 - thing is best but businesses have to
326:31 - support a product for many years
326:33 - and so if something disappears
326:36 - you don't want to be stuck with a
326:38 - product that was abandoned by google
326:40 - also this implies that you're able to
326:42 - find employees that are able to come and
326:45 - to leave and hire new people that can
326:47 - come under your team so make sure that
326:50 - you have something that is relatively
326:51 - popular
326:52 - a business can have significant
326:55 - investments already so
326:57 - sometimes it's better to follow your
326:58 - company's direction that's already been
327:00 - laid out for you so even though you
327:02 - might be a java fan your company is
327:05 - using something else so whatever it is
327:08 - don't be
327:09 - too different from what's already been
327:11 - laid down so what i expect if you are my
327:14 - students i would expect you to send me a
327:16 - one-page document a recommendation for
327:19 - which language and frameworks and
327:21 - databases and cloud platforms that you
327:23 - would provide why you would choose those
327:25 - and the justification of course is a
327:27 - business case so if you're not one of my
327:30 - students you can put your own
327:31 - recommendations in the bottom in the
327:33 - comments below to tell me
327:35 - why you prefer one platform or one
327:38 - solution over another and if you're not
327:40 - one of my students please subscribe so
327:42 - that you can get in on the rest of the
327:44 - course
327:45 - now i will see you in the next class
327:48 - if you are following along so thanks for
327:50 - watching
327:58 - hi and welcome to the business of
328:00 - building mobile applications this is a
328:02 - course that talks about some of the
328:04 - issues that you're going to face if
328:06 - you're trying to create an app and a
328:08 - business that goes with it so you can
328:10 - see there are several chapters that
328:11 - we're going to be looking at here and we
328:13 - are now on the section called full stack
328:16 - considerations so if these previous
328:19 - videos look interesting to you then go
328:21 - back and look at the playlists and of
328:22 - course please subscribe if this is
328:24 - relevant to the types of projects that
328:26 - you're working on right now here's the
328:29 - other two that are coming up and i
328:31 - welcome you to join my name is shad
328:33 - slooter and i teach computer science and
328:36 - software development at grand canyon
328:38 - university so let's take a look at the
328:41 - first topic here on this section called
328:44 - choosing a database so this is really a
328:47 - full stack consideration we looked at
328:49 - the front end frameworks that you can
328:51 - use for building mobile apps in a
328:53 - previous video and now we're going to
328:55 - talk about how you store your data so
328:57 - we're going to divide this up into four
328:59 - sections types of databases that you can
329:01 - choose from each of these has its
329:04 - advantages and disadvantages each were
329:06 - designed to solve specific problems so
329:09 - depending on the type of application
329:10 - that you're trying to create you're
329:12 - probably going to select one of these
329:14 - four so we're going to talk about the
329:16 - purpose of each of these
329:18 - and how well they scale in other words
329:21 - how they go from hundreds of users to
329:24 - millions of users and which ones are
329:26 - going to work well for you in the end
329:29 - the first one that we're going to talk
329:30 - about the first type of database is sql
329:33 - now sql is the most common and the
329:36 - oldest most established and wide known
329:39 - type of language there is so sql is not
329:41 - really a database it is called a
329:44 - structured query language that's the
329:46 - type of commands that you talk to the
329:48 - database with
329:49 - and so if you know any programmers that
329:51 - have worked with databases at all they
329:53 - will probably understand
329:55 - these kind of commands so if you want to
329:57 - select data from a database you do
329:58 - something like this where you say select
330:01 - the type of data that you want and you
330:03 - tell it which table the data is stored
330:05 - in and the computer will return a list
330:08 - of data for you to put into your
330:10 - application
330:11 - so here is what it looks like in
330:13 - visual studio and you are going to in
330:16 - this case
330:17 - we are going to create a table of
330:19 - employees and insert some data into it
330:21 - and so this is the interface that you
330:23 - would look like if you were on a sql
330:25 - server
330:26 - also
330:27 - sql servers have arrangements so they
330:30 - put data into tables and they link those
330:32 - tables with relations
330:34 - and so a sql server is sometimes
330:37 - referred to as a
330:39 - relational database and so you can see
330:41 - that in this case we have an order
330:43 - system where each order is associated
330:46 - with a customer and each product is
330:48 - associated with each order and so
330:51 - this is a very important part of the
330:53 - design of an application if you haven't
330:55 - taken a course on sql and databases then
330:58 - i recommend you do
331:00 - in the degrees that i teach where it's
331:02 - computer science and software
331:04 - development this is a fundamental class
331:06 - that we do early in this in the students
331:09 - career
331:10 - and we use sql databases throughout all
331:12 - of the applications that we create in
331:15 - their experience and so you likely will
331:17 - do the same thing in your job if you are
331:20 - a software developer so here are some
331:22 - popular titles mysql is the first of the
331:25 - category here it is free it's open
331:28 - source it's used by pretty much
331:30 - everybody and we use it in our classes
331:33 - as our primary database postgres has a
331:36 - few more features and people that use it
331:38 - really say they love it
331:40 - microsoft sql server is also used in our
331:43 - courses
331:44 - and of course microsoft is a major
331:46 - player in any software development
331:48 - oracle was the major giant that started
331:50 - the whole
331:52 - corporate database structure and people
331:54 - kind of loved to hate oracle but it's
331:57 - still used by large businesses
331:59 - everywhere
332:00 - the next type of server that we're going
332:03 - to talk about is the nosql server now
332:06 - nosql
332:07 - also refers to not only sql so it's not
332:10 - just the opposite of sql
332:12 - the most common way that you would
332:13 - create a nosql database is to store your
332:16 - data in documents now this is an example
332:19 - of a document of a user
332:21 - and if it looks like a json text file
332:24 - that's because it is and so that's the
332:26 - way nosql documents are are structured
332:29 - you have properties and then you have
332:31 - values that go along with them so
332:33 - there's no tables there's no joins going
332:35 - on here it's very simple
332:38 - and so there's a few advantages to that
332:39 - and also some drawbacks here is a second
332:42 - one we have user of susan and the first
332:45 - one was mortiver now you notice the
332:47 - difference here
332:48 - is that not all of the data is the same
332:51 - so in this case with susan you notice
332:53 - that we are able to have a status called
332:56 - active and it's a boolean value of true
332:59 - so in a
333:01 - sql statement you have to fill in all of
333:04 - the data for all of your users the
333:06 - columns are very closely defined they're
333:09 - static they are
333:11 - very restricted which makes the computer
333:14 - work well with it but sometimes your
333:16 - business problems change and so nosql
333:19 - databases allow you some more
333:21 - flexibility so you can have different
333:23 - types in this case we have vicky a third
333:26 - user and you notice we don't have very
333:28 - much data on her at all now we could add
333:31 - that data later or we could delete data
333:33 - from her but the idea here is that a
333:35 - nosql document is more flexible here's
333:38 - what a sql statement looks like or a
333:41 - select statement i should call it a
333:43 - select statement in a nosql database so
333:45 - we have
333:46 - db.users.find and then we put in another
333:49 - json object and the results come back
333:52 - and look something like this so this is
333:54 - an example from a mongodb database
333:58 - and you can see that the results are
333:59 - easily translated into a web server or
334:02 - any kind of a application that can parse
334:05 - json here's another example we're trying
334:07 - to do a query from a list of users and
334:11 - so you can see that there are a variety
334:13 - of pieces of data in the user object
334:16 - from strings to integers to booleans to
334:20 - arrays so
334:21 - nosql is very flexible in the type of
334:23 - data that you throw at it and it works
334:25 - very fast if you're just going to read
334:27 - and write lists of data
334:29 - so let's compare these two different
334:31 - types of technologies so this is a
334:33 - structure of a sql database on the left
334:36 - you can see that a database is composed
334:39 - of tables each table is made up of rows
334:42 - and each row has multiple columns in it
334:45 - so that is a correspondence to a
334:47 - document database where we have the
334:50 - whole thing which is a database
334:52 - each table represents a document
334:55 - collection so
334:57 - for instance in the tables of your
334:59 - database you might have a collection of
335:01 - users
335:02 - well we still have a collection of users
335:04 - in a nosql database the rows represent
335:08 - each
335:08 - user
335:10 - and so in the collection each user is a
335:13 - document
335:15 - and then for each column such as the
335:17 - name id age weight serial number or
335:20 - whatever properties you wish to assign
335:22 - to a user you're going to have those
335:24 - referred to as fields
335:26 - in a nosql database and so the two
335:29 - components are both there they're just
335:31 - organized and named slightly differently
335:34 - let's also talk about the contrast here
335:36 - between a sql database and a nosql
335:39 - database in some of the design
335:42 - so as i mentioned nosql databases are
335:44 - very flexible you can change them later
335:47 - but in sql you have to think about many
335:50 - of the decisions that your application
335:52 - is going to need
335:53 - right up front and that's a process
335:56 - called normalization or a normalized
335:59 - database
336:00 - so you have relations between tables and
336:03 - the advantage of a sql database is that
336:06 - you don't duplicate any data
336:09 - if you have a user's table there's only
336:11 - going to be one place where the user
336:13 - name is stored and the age and his id
336:17 - number and and so forth and so there's
336:19 - no danger that you're going to have
336:21 - duplicate records of a single user and
336:24 - so you're guaranteed to have good data
336:26 - so a sql database will never have
336:28 - duplicate data if it's designed right
336:30 - now on the other hand on the other side
336:32 - we have denormalized data when we talk
336:34 - about a document or a nosql database
336:37 - we're going to be talking about lists
336:39 - and you're going to have a lot of data
336:41 - duplication so the amount of storage
336:43 - space is going to be larger
336:45 - but that that disadvantage then turns
336:47 - into advantages when we come to the
336:50 - number of seconds it takes to
336:52 - run a query let's do an example here so
336:55 - let's say we have a blog application
336:56 - where like an instagram people post a
336:59 - picture and then they put a comment
337:02 - and then afterwards we hope that other
337:04 - people come and rate your photo and put
337:06 - comments on it and then you can reply to
337:08 - them and you have a whole comment thread
337:10 - and then maybe later someone else
337:12 - comments again so a pretty typical
337:14 - example of a social media app now would
337:16 - this be easy to develop in a sql
337:18 - database or a nosql database
337:22 - well we actually do this in one of our
337:23 - classes we create a blog app and we use
337:25 - a sql database but let me give you some
337:28 - suggestions here of maybe why or why not
337:30 - this is a good idea so let's take a look
337:33 - at if we had this data for our blog app
337:36 - and we had it in the the data was stored
337:38 - in a sql table format so i have a users
337:41 - table here on the left you can see
337:43 - there's an id number for each user and a
337:45 - name
337:46 - on the right side we have the comments
337:48 - table and so each comment has an id
337:50 - number and it's associated with a link
337:53 - on the id number of the user we have the
337:55 - date and the text so if we say i want to
337:58 - get all of the comments for a particular
338:00 - photo i would write a statement that
338:02 - looks like this so this is a sql
338:04 - statement that says i'm going to select
338:06 - or i'm going to pull out the data from
338:08 - two different tables and you can see i
338:10 - have a mixture of table names so i have
338:11 - the comments table and the users table
338:15 - then i'm going to join them
338:17 - and i join them on a common number so
338:20 - you can see that the id number of jerry
338:23 - is a thousand two
338:25 - and over in the comments table you can
338:26 - see that there's a user id number for
338:28 - that comment which is also
338:30 - a thousand and two so we know that jerry
338:34 - is the person that posted this first
338:36 - comment and so we're going to pull these
338:39 - two together when you're done you're
338:40 - going to have a joined list so this this
338:44 - table here is a generated table it
338:46 - doesn't get stored anywhere it's just
338:48 - created every time we want to pull data
338:50 - from the database
338:52 - and so then this is produced
338:54 - in a nice sequential format that we can
338:56 - use our in our application to print to
338:59 - our web page
339:00 - so the pulling together is called
339:03 - joining so i'm going to pull together
339:05 - the id number from one table i'm going
339:07 - to pull the name from the other table
339:10 - i'm going to pull the date and the text
339:13 - so
339:14 - joining tables literally means reading
339:16 - twice we're going to read from the users
339:18 - table we're going to read from the
339:19 - comments table we're going to create a
339:22 - list in the computer's memory and then
339:24 - provide that to the application
339:26 - so you can see that the strategy here
339:27 - will will create a more cpu time all
339:31 - these joins require processing but we
339:34 - only save the data in one location so we
339:36 - save on disk space
339:38 - now let's go back to the same blog app
339:41 - and let's see how it might be designed
339:43 - and implemented using a nosql database
339:46 - so it's the same comments we got a photo
339:48 - and we've got a bunch of comments
339:51 - so here's what the data would look like
339:52 - so first of all in our database we would
339:54 - have likely a list of users
339:57 - and so you can see a bunch of json
339:59 - objects it's the same data but now
340:01 - stored in a json format now what are we
340:04 - going to do for the comments we're going
340:06 - to produce maybe another collection
340:08 - called images the images will have each
340:11 - image will have an id number and
340:12 - probably a string to tell us which photo
340:15 - is saved to the disk and following the
340:18 - image id we're going to have the
340:20 - comments and so you can see that the
340:21 - comments is a list of lists of no more
340:24 - json objects
340:25 - so each list is going to have some
340:28 - duplicate data you notice the word or
340:31 - the name gwen
340:32 - appears twice in here so we're saving
340:35 - gwen's name into the comments now that's
340:38 - a horrible misuse of the normalization
340:42 - rules that most students learn in sql
340:44 - programming and so we're breaking rules
340:47 - we're duplicating the name gwen
340:50 - however
340:51 - there is an advantage for doing that
340:53 - because when we go back to the
340:55 - application we don't have to do any
340:57 - joins we can just say
340:59 - read the list sequentially there's no
341:02 - computing to do just read and print
341:05 - and so
341:07 - that makes it very fast
341:09 - now the disadvantage is let's say gwen
341:11 - changes her username
341:14 - now gwen has been printed in her
341:16 - database
341:17 - let's see twice here it could be a
341:18 - million times
341:20 - we would have to programmatically go
341:22 - back and search for all of that
341:23 - duplicated data and rename gwen to her
341:26 - new username so that's a bad thing
341:28 - obviously so read sequentially is fast
341:33 - duplicating data
341:35 - saves time on the cpu but it requires
341:39 - extra programming and oversight to make
341:41 - sure that your data is in a good format
341:44 - so let's compare these two here because
341:46 - these are the two most common database
341:48 - technologies that you're likely going to
341:49 - choose from
341:50 - so sql is what we would call structured
341:53 - if you know what your data is going to
341:55 - look like then sql is a good choice if
341:57 - you're not quite sure what your data is
341:58 - going to look like then nosql is a more
342:01 - flexible alternative
342:04 - sql databases are more difficult to
342:07 - scale and we'll talk about scaling here
342:08 - in a minute but scaling means going from
342:11 - your first hundred users to the first
342:14 - million users or records or whatever it
342:16 - is so a large database is more difficult
342:19 - to handle in a sql server
342:21 - also we have the i've mentioned no
342:24 - duplication of data
342:26 - so only one copy of each record is
342:28 - stored in the database which makes it
342:30 - easy to keep track of
342:31 - what the username is for example you can
342:34 - change data in one location in one
342:36 - location only
342:38 - so that's very consistent
342:41 - if you have
342:42 - a lot of updates going on and let's say
342:45 - you're changing records
342:47 - and you have only one copy of that
342:49 - record
342:50 - then obviously it's a one-time operation
342:54 - if you change a piece of data that is
342:57 - duplicated a million times in other
342:59 - locations
343:00 - every time you do an update it's going
343:02 - to be thousands or millions of updates
343:04 - each time the user
343:06 - creates a change sql sql databases are
343:09 - very good if you have lots of uh joins
343:12 - going on to say i want to collect a
343:14 - little bit of data from this table that
343:15 - data merge them together and create a
343:17 - new list and no sql is not so much in as
343:20 - far as the document store goes and so
343:23 - why would you want to choose nosql then
343:25 - well it's faster
343:27 - you can also scale it largely and it's
343:30 - really quick if you're just doing a lot
343:32 - of reads and so
343:34 - you're going to have to analyze your
343:36 - business process and your application to
343:38 - decide which type of technology fits
343:41 - better so
343:43 - rule of thumb the default in my choice
343:45 - maybe it's just because i'm old but sql
343:47 - is the first choice and if you can't use
343:49 - it with sql then you go find an
343:51 - alternative and i have some data maybe
343:53 - to show why that is a good way to think
343:56 - here are two popular nosql databases
343:59 - these are the document store databases
344:01 - so mongodb by far is the most popular
344:04 - firebase by google is used as a
344:06 - real-time database which has some other
344:08 - advantages so if you are
344:11 - looking at a database your application
344:14 - automatically triggers every time
344:15 - there's new data coming in and so it's
344:18 - some things that you really can't do
344:20 - without uh doing a lot of programming
344:22 - loops let's talk about another database
344:24 - called a graph database it's a different
344:27 - type of feel altogether so if you're if
344:30 - you've taken any courses in
344:32 - algorithms and data structures a graph
344:34 - is a perfect way to model a lot of data
344:37 - so on a graph you have things called
344:39 - nodes so each node kind of represents a
344:42 - record so let's say we have a node
344:44 - called a person and we'll give that the
344:46 - term the label so this node is a person
344:50 - the properties of a node are just like
344:52 - the columns in a in a table so we can
344:56 - say that gene in age 39 is this person
345:00 - so you could imagine lots of different
345:03 - properties going on now we have
345:05 - different types of nodes so let's make a
345:09 - application that keeps track of movies
345:11 - and who likes the movies so in this case
345:14 - we have a purple node that says the name
345:16 - of this node is star wars so
345:19 - we can then put relationships between
345:21 - those
345:22 - so this person
345:24 - likes the movie star wars since the year
345:27 - 2021.
345:29 - so that's a relationship so there's
345:30 - three pieces of data here not just two
345:33 - the
345:34 - the link itself is another record so it
345:36 - keeps track of either a one-way link or
345:39 - you can have a two-way link
345:42 - well then let's take a look at the idea
345:44 - of linking these because in a sql
345:47 - database we already have relations we
345:49 - have
345:50 - links between tables
345:52 - that's what it means it's a relational
345:54 - database so it works well if you only
345:56 - have to worry about one
345:58 - one depth of your relationship
346:01 - selects like for instance
346:03 - this user
346:04 - created this list of comments perfect
346:07 - it's a one
346:09 - depth one step depth of relationships
346:12 - and so there's no reason to create a
346:14 - graph database if that's all you're
346:16 - doing
346:17 - however if you have more indirect
346:19 - relationships
346:21 - like you want to know
346:23 - in a movie
346:24 - how many people
346:26 - were actors and then you can also ask
346:29 - and the actors how many different movies
346:31 - were they in
346:32 - and then you could start to get more
346:34 - complex to say
346:35 - did they like their experience who liked
346:37 - the
346:38 - who liked being in the movie which
346:40 - actors
346:41 - did not like the movie but were not in
346:43 - the in the in the actors list and so
346:46 - when you start to get these
346:48 - multiple questions about who was where
346:51 - and what they liked and who's related to
346:53 - who and then
346:54 - who are your friends of your friends
346:57 - then you start to get very complex
346:59 - and that's when a graph database starts
347:01 - to make sense
347:03 - so here's an example of some real we'll
347:06 - call it empirical data
347:07 - so neo4j
347:09 - is a graph database it's the most
347:11 - popular i believe
347:13 - and here is an experiment that was made
347:15 - some years ago
347:17 - so we have a depth of queries going on
347:20 - here so you can see in the left column
347:22 - we have depth of 2 3 4 and 5.
347:25 - so the depth means
347:27 - who is a friend of a friend
347:30 - so that's that's what we're asking here
347:33 - but now when we get to the six degrees
347:35 - of separation kind of a question is who
347:38 - is the friend of a friend of your
347:39 - friends of your friends of your friends
347:42 - and now your
347:44 - traditional database
347:46 - is no longer a good solution so you can
347:48 - see that they asked that question who
347:50 - are your friends friends friends friends
347:52 - friends
347:54 - and
347:55 - where do we go for the time computation
347:57 - well you start making joins
348:00 - in other joins and stacking on top of
348:02 - other joins and you can see that sql has
348:05 - an exponential time
348:08 - frame here
348:09 - and so by the time we had the depth of
348:12 - asking who are your fifth degree friends
348:15 - uh the mysql database didn't even finish
348:18 - its computation in an hour of work
348:22 - now compare this to the graph database
348:25 - neo4 and you can see that it is a very
348:28 - fast linear
348:30 - time requirement and so literally in two
348:32 - seconds they could ask to the fifth
348:35 - degree
348:36 - who your friends are and so same
348:39 - computing platform same amount of memory
348:41 - and all that
348:42 - and so the algorithm itself of how the
348:45 - database is designed
348:47 - is
348:48 - superior when it comes to that kind of a
348:49 - question
348:50 - so if you have a social media type of
348:53 - application that has these strange
348:56 - queries that can ask about relationships
348:58 - and very flexible types of
349:01 - questions
349:02 - then maybe neo4 or other graph database
349:06 - technologies is for you
349:08 - now this is obviously the suitable
349:10 - solution for this kind of a situation so
349:13 - we have friends with and who likes who
349:16 - you can see the graph going on here so
349:18 - if you have many relationships between
349:20 - records and you're going to be asking
349:22 - questions on a regular basis
349:25 - for instance facebook
349:27 - how in the world can you
349:29 - recommend
349:30 - friends when you have friends of friends
349:32 - going on then this is probably the the
349:35 - right tool for you so let's take a look
349:37 - at linkedin for example here this is an
349:39 - image that is about types and the
349:41 - relationships on linkedin
349:43 - and to me this is just asking for a
349:45 - graph database solution because as you
349:47 - can see the profile has
349:49 - different groups different companies
349:51 - companies that you like companies you
349:52 - follow
349:53 - and so they're able to provide job
349:56 - recommendations to you based on what's
349:58 - in your
349:59 - resume and then who who you like and
350:01 - where you follow so this would be very
350:04 - difficult to compute if you were using a
350:06 - standard sql database so here are two
350:09 - recommendations if you're interested in
350:11 - looking at more about this
350:12 - so neo4j seems to be the market leader
350:15 - but i'm going to put azure cosmos
350:17 - because it's a microsoft tool that is
350:19 - used on the cloud the azure
350:22 - cloud service and so they're going to be
350:24 - pushing that if you're using their
350:26 - service here's another kind of database
350:28 - called the full text database
350:30 - now full text sounds exactly like you'd
350:32 - expect for a search engine
350:35 - so let's say you're google and you're
350:37 - trying to index every page on the
350:39 - internet and somehow when you type in a
350:42 - keyword search they give you instant
350:44 - results
350:45 - so what they do is they have this
350:47 - inverted index set up so for instance if
350:50 - i'm looking for the word fantastic i
350:53 - don't have to go search through the
350:54 - entire collection of documents that was
350:56 - already done for me instead i get search
350:59 - results that are based on document
351:01 - numbers and so i will have a list here
351:04 - of document 1 4 99 284 and 9 42. those
351:09 - are the
351:10 - documents that contain the word
351:12 - fantastic and of course you can probably
351:15 - wait that with
351:16 - better search results by pushing those
351:18 - numbers around based on the number of
351:21 - times the word fantastic was used or
351:23 - whether it was used in the title or
351:25 - whether in the body of the text you get
351:27 - the idea so that you have an index of
351:30 - where the words are in your documents
351:32 - and that works exactly like the index
351:34 - that you find in the back of any
351:36 - textbook you're looking for a specific
351:38 - term the index will tell you which page
351:40 - number it is on so that is like the
351:43 - google search of your book it tells you
351:45 - where you will find the terms that are
351:47 - most valued to you so a full text index
351:51 - is going to be the kind of solution if
351:53 - that's the problem you're you're facing
351:55 - so elastic and splunk are two database
351:58 - technologies that you should explore if
352:01 - that's your kind of a problem
352:03 - now the next section here is how are you
352:05 - going to scale your database from your
352:08 - first 100 users to the millions of users
352:11 - that you're likely to encounter
352:13 - so let's start with an example here a
352:15 - very concrete example of kevin systrom
352:17 - who is the co-founder of instagram let's
352:20 - hear what he says about his app and
352:22 - before you knew it we actually had
352:23 - overloaded our system and it was a very
352:25 - small naive system it was a single
352:28 - computer and a co-location space
352:30 - somewhere in la everything was on one
352:32 - computer yeah it was it was nothing more
352:34 - exhilarating than seeing all those
352:36 - people streaming and nothing more
352:38 - crushing than than seeing you know
352:40 - people posting on twitter or on their
352:41 - blogs and saying like oh another startup
352:43 - that doesn't know how to scale like oh
352:45 - like so clowny we were both i mean at
352:47 - that point like running on zero sleep
352:49 - for two days just devastated and i was
352:51 - like this is it we built this great
352:53 - thing and we totally messed it up
352:55 - so if you get so lucky that you're going
352:57 - to have an instagram-like problem then
352:59 - you're going to have to do some
353:00 - solutions so i looked up to see what
353:02 - kind of technology what databases that
353:04 - are being used in instagram they started
353:07 - off obviously with a small server and
353:09 - they have since completely redesigned
353:11 - their app and so you can see that their
353:14 - technology that they're still relying on
353:16 - is a sql database and cassandra which is
353:19 - kind of like a mongodb it's a document
353:21 - storage and it's allowing them to have
353:24 - both relations and the ability to scale
353:27 - horizontally now let's talk about your
353:30 - goals here your short-term goals if you
353:33 - are building a startup and your first
353:35 - version of your app you're probably only
353:38 - going to need to worry about your
353:39 - minimal viable product and so scaling is
353:43 - something to think about down the road
353:45 - but right now you are interested in
353:47 - proving the concept does your
353:49 - application appeal to users and so
353:52 - you're only going to have to talk about
353:53 - a hundred or thousand people for your
353:56 - first version your working version needs
353:59 - to be something that literally just
354:01 - works and so scaling is important to
354:03 - think about but not to invest too much
354:06 - time now
354:07 - build your first version as a rather
354:10 - simple architecture we're trying to get
354:13 - something put together quite quickly
354:15 - fast development and so don't worry
354:17 - about the scale yet
354:19 - i mean it's not a bad idea to think
354:21 - about how it's going to scale
354:23 - but don't scale it scaling now is much
354:26 - easier than it was 10 years ago
354:28 - so you can at least plan for it but you
354:31 - don't have to make your first version
354:33 - scalable now here are some considering
354:35 - considerations will your application
354:38 - have unbounded growth
354:40 - if you're building an internal app for a
354:43 - company you know that your company has
354:45 - five thousand employees and you'll never
354:47 - see any more than that then obviously
354:49 - there's no worry about unbounded growth
354:52 - if you're just having a few records
354:54 - however if you're collecting a terabyte
354:56 - of data every day and adding it to your
354:57 - database then you're going to have a
354:59 - problem now we're going to scan or span
355:03 - multiple servers if we have a scaling
355:05 - issue so you need a technology that can
355:08 - be split into pieces is there going to
355:10 - be a high volume of transactions for
355:12 - instance if you're creating a database
355:14 - that has an iot device thing where
355:17 - you're recording let's say the the
355:19 - heartbeat and blood pressure of every
355:21 - user every five minutes
355:23 - your scale of volume is going to go
355:25 - exponential and so yes you will have a
355:28 - scaling problem
355:30 - if you have those kind of issues then i
355:32 - would recommend that you think about a
355:34 - nosql solution because they scale much
355:38 - easier and mongodb is the first to mine
355:41 - one for in my categories when it comes
355:44 - to a nosql solution so
355:47 - when you talk about your mvp app you're
355:50 - likely going to be thinking about maybe
355:52 - some limited number small number of
355:54 - records it doesn't have to be hyper fast
355:57 - it can handle interruptions you can you
355:59 - can shut it down to do backups for
356:01 - example
356:02 - your expertise you want the most common
356:04 - solution available because you're going
356:06 - to be hiring people and the usual first
356:09 - to mind solution is my sequel so
356:13 - and my sequel are the first two things
356:15 - that come to mind as a matter of fact
356:18 - those are the only two solutions really
356:19 - that we focus in on our college students
356:23 - so when i'm teaching new programmers how
356:26 - to develop an app and they've never seen
356:28 - a database before and they've never
356:30 - written a query
356:32 - really my sequel and microsoft server
356:35 - are the two solutions that we work with
356:37 - most of the time for sql and then
356:40 - for a more
356:42 - advanced we would call it maybe our
356:43 - junior level or senior level students to
356:46 - see something else besides sql and we
356:48 - don't even branch off to be beyond those
356:50 - two because they're very common and they
356:53 - meet a lot of needs but let's talk about
356:55 - scaling
356:56 - let's say if you are trying to do
356:58 - scaling you can have either two choices
357:00 - one is called a vertical scale and the
357:03 - other is a horizontal scale
357:05 - so this is vertical scaling we start off
357:07 - with a small server it says here we have
357:10 - about a three thousand dollar computer
357:13 - it has one terabyte of storage maximum
357:16 - and we can handle about 500 concurrent
357:18 - users before it starts to get slow
357:21 - and so we invest three thousand dollars
357:23 - and we host one server well then our
357:26 - application
357:27 - grows we have a constraint and so we
357:31 - just buy a bigger server we add more
357:33 - memory and more storage and a better cpu
357:36 - and things work great but you can see
357:38 - that the cost then is no longer three
357:40 - thousand
357:41 - it is fifty thousand dollars we have a
357:44 - hard drive then we have multiple power
357:46 - supplies it's a pretty nice server and
357:49 - then the maximum server that we might be
357:51 - able to afford is a million dollar
357:53 - computer i guess we're getting into
357:55 - small mainframe size here now and as you
357:59 - know mainframes were built to handle
358:00 - large amounts of data but there's a
358:02 - limit to how big you can build that
358:04 - mainframe
358:05 - and so
358:06 - that is vertical scaling and so you can
358:09 - see that when we get to a certain size
358:12 - we have to wait until a newer computer
358:15 - is invented
358:16 - our scaling and vertical format only
358:18 - goes so far
358:20 - and you notice the cost starts to
358:22 - escalate too because
358:25 - as you know when you buy a laptop
358:27 - you can get twice the
358:29 - processing and twice the storage but the
358:31 - price isn't just twice it goes in an
358:34 - exponential format so most of us buy
358:36 - computers that are 80 percent of the
358:39 - market maximum at the time because well
358:42 - that's a reasonable cost
358:44 - performance trade-off so just for kicks
358:47 - i went to find out what the biggest
358:49 - things that you can buy are right now so
358:51 - what is the largest hard drive available
358:53 - on
358:54 - amazon so it looks to me like 16 or 18
358:58 - terabytes is the maximum that western
359:00 - digital is selling right now and what's
359:02 - the cost here
359:04 - a 16 terabyte hard drive right now is
359:06 - 600 and free shipping
359:08 - now what if you want to get a bigger one
359:10 - than that they actually create these
359:11 - things called a raid set so raid stands
359:14 - for redundant array of independent disks
359:17 - and so there are multiple hard drives in
359:19 - a box and so even though you might have
359:21 - a 36 terabyte drive literally you're
359:23 - getting multiple drives and so there's a
359:25 - physical maximum that we have at any
359:28 - point in history and history has always
359:30 - told us that we can never get enough
359:33 - storage space and so this particular
359:35 - hard drive is 2 600
359:37 - and so you can see the cost starts to
359:39 - get kind of high
359:40 - now there's a better way or a different
359:42 - way let's call it of scaling so instead
359:45 - of scaling by buying bigger machines we
359:47 - can just buy more machines so that's
359:49 - called horizontal scaling and that
359:51 - requires some coordination
359:53 - so we build a server and then we have a
359:55 - server manager or sometimes called the
359:58 - master server he's the traffic cop and
360:01 - he controls what's going on the other
360:03 - servers that are being controlled are
360:05 - called slaves and so we have this master
360:08 - slave relationship now if slavery
360:11 - doesn't ring true to you then we've got
360:12 - other terminology we'll call this the
360:14 - conductor or the primary server or the
360:17 - source server or the coordinator or the
360:19 - traffic cop
360:21 - anyway the idea is that we have somebody
360:23 - who is managing the other servers and
360:26 - those can be called followers or
360:28 - secondary servers or replicas or nodes
360:31 - so it depends on your type of
360:33 - terminology but we have something that
360:35 - is controlling other computers and so
360:38 - that master server is obviously an
360:40 - important piece in this scaling system
360:44 - so you can see in the configuration i've
360:46 - set up here i bought three servers
360:49 - and they contain
360:51 - two
360:52 - servers that actually hold the data so
360:55 - one server is used just to coordinate
360:57 - things and the other two
360:59 - hold the data so what does that do for
361:01 - us well we could have multiple servers
361:05 - that are the followers
361:07 - and they all are controlled by the
361:09 - master
361:11 - now as you can see that the cost here
361:12 - does not increase exponentially we don't
361:15 - have a million dollar computer anywhere
361:17 - in this list so we have seven computers
361:21 - that are storing the data of six
361:24 - so
361:25 - we have one computer that is overhead
361:27 - and the other ones that are actually
361:28 - doing the work
361:30 - now there is no technical barrier then
361:32 - to the size that we can add so
361:35 - we probably will find some number that
361:37 - the master is able to control but that's
361:40 - pretty big
361:41 - so we could add a master computer that
361:45 - is massive and then lots and lots of
361:47 - small ones that are the followers and
361:49 - that's when you get these server farms
361:51 - we call them these data centers where
361:53 - you have this hardware that's in the
361:55 - shelf that is relatively inexpensive
361:58 - it's completely
362:00 - replaceable and you get the scale of
362:02 - manufacturing to bring the price down
362:05 - and so these data centers can be the
362:07 - size of football fields and you put them
362:10 - near a source of cheap electricity and
362:14 - in a place where you're not going to
362:15 - have earthquakes or floods
362:17 - and you have literally data warehouses
362:19 - for amazon or microsoft or google
362:22 - humming away
362:23 - now you have a problem so what happens
362:26 - when one of these servers fails
362:28 - obviously we don't want that to happen
362:31 - we're going to start duplicating the
362:32 - data then so let's say this server is
362:35 - going to store a file maybe it's a large
362:38 - file
362:39 - we're going to then make some copies of
362:41 - it so let's take three copies
362:44 - and the master server is going to choose
362:47 - three locations in our data farm where
362:50 - it's going to put that so in this master
362:52 - computer we're going to have it keep an
362:54 - index
362:56 - so the index looks like i'm using number
362:58 - one three and five if we start counting
363:00 - at zero then one three and five is the
363:03 - location of this file
363:04 - so why do we duplicate it well obviously
363:07 - if one piece of hardware fails then we
363:09 - want to have that
363:10 - respond by maybe making another
363:13 - duplicate somewhere else and so we have
363:15 - some redundancy also think about how you
363:17 - could read the data let's say file
363:20 - server number one the first one here is
363:23 - busy then we can read it from another
363:24 - location and so the hard drives
363:27 - never really get maxed out
363:29 - as far as having an amount of traffic
363:31 - now in practice what we also do is we we
363:34 - take data and we split it up into blocks
363:36 - so let's say we have a huge video file
363:38 - and we don't want to store that all in
363:40 - one location do we no we we create
363:42 - segments so we split the file up maybe
363:45 - into three pieces in this case and then
363:47 - we make duplicates of that and now we
363:49 - have nine pieces to spread around our
363:52 - servers and so the segment can be put on
363:55 - different servers so that way it's load
363:57 - balanced the server can have a maximum
364:01 - storage space and the cpu both shared
364:04 - and then we take those segments and we
364:06 - scatter them according to some algorithm
364:09 - to the entire collection so now we have
364:12 - two things going on we have
364:14 - redundancy so one server can fail and
364:17 - also we have the load balance so that no
364:19 - one server has to do all the work so
364:22 - let's take a look an example of a
364:23 - failure tolerance so we have
364:26 - three different servers that are all
364:28 - serving a file now one of these has a
364:32 - disk failure and it shuts down
364:34 - and we've got a problem the alert then
364:36 - is sent to the master traffic cop
364:39 - and he says take this one offline
364:42 - he looks in the index and says where do
364:43 - i have this file well i see that it's
364:45 - still stored in two locations so we're
364:48 - good
364:50 - now i'm going to take that file and i'm
364:52 - going to duplicate it and put it on
364:54 - another server so it selects one
364:56 - according to its algorithm and now we're
364:59 - back to three so the fault tolerance is
365:01 - there to keep us well
365:03 - now that works with files let's talk
365:05 - about how you would be able to split up
365:07 - something like a sql server
365:10 - and to scale a server horizontally is
365:14 - difficult
365:15 - it's called shards so a shard is a way
365:18 - to split up your data
365:21 - so in this case let's talk about a
365:23 - read-only shard
365:25 - so a master shard is pictured here on
365:28 - the left so we have a table of users
365:31 - and we know that these users are going
365:34 - to be updated very infrequently people
365:37 - don't change their address very often
365:39 - and the
365:41 - application might read from those user
365:43 - tables very frequently so every time we
365:46 - create a new order we want to pull the
365:48 - user data that's that's an example
365:50 - so if read is the constraining action
365:54 - then all we need to do is make
365:56 - duplicates of each table and that's a
365:58 - read-only shard
366:00 - and so when a request to read a user
366:02 - comes in
366:04 - we can just get it from one of the
366:06 - shards so let's say we have an example
366:08 - of where we want to write data we have
366:10 - an update or we add a record
366:12 - now that is going to then replicate that
366:14 - data to the shards and so that way we
366:17 - have a
366:19 - a way to spread it around now when we
366:21 - have a read data we would have a
366:23 - scheduler program and then we would
366:26 - select one of the shards that is not
366:29 - very busy
366:30 - and give him that job and so then we
366:33 - would read from one of those three now
366:36 - replicating shards increases the data
366:38 - base response time or the performance i
366:41 - should say so if you're reading data
366:43 - from a lot of different uh tables then
366:46 - just spread those tables out make
366:47 - replicas of them and then the least busy
366:50 - will respond to your request
366:52 - it's not very scalable for write
366:54 - operations and so sharding is usually
366:56 - thought of in a different way where we
366:58 - split up data so let's go back to our
367:00 - data set and we'll talk about how we
367:03 - would shard this
367:04 - when we have millions of rows
367:07 - so your performance of your database is
367:09 - suffering and you realize it's because
367:11 - you just have so much data how are you
367:13 - going to do it
367:14 - so we're going to shard that so we we're
367:16 - going to start with our entire data set
367:18 - and we notice that there are ways that
367:20 - we could split it up so in this
367:22 - particular data set we can see that
367:24 - there are 50 states in the united states
367:27 - and we have roughly
367:29 - spread the users across those 50 regions
367:32 - so we could create a separate data
367:35 - using a shard map so let's say we split
367:38 - up the dates the states from 1 to 50 and
367:41 - now we start to
367:43 - split it up now in practice you can do a
367:45 - range like this you can have a range of
367:47 - zip codes for example or a range of
367:48 - state names
367:50 - we could also do a hash value so we
367:52 - could hash a name and then
367:54 - put them in a particular range based on
367:56 - the hash results or you could come up
367:58 - with your own scheme so somehow we want
368:00 - to equitably distribute these around in
368:03 - this case we're going to put everyone in
368:05 - the iowa region in shard one and then
368:09 - shard two we're going to make another
368:11 - table called users and that will be for
368:13 - the illinois people and then shard three
368:16 - will hold all of our ohio
368:18 - users
368:20 - so now the data table
368:21 - no longer exists in a single location
368:24 - it's now spread over three servers so
368:26 - theoretically each of those three now
368:29 - can grow to the maximum size of hardware
368:31 - that we're allowed to provide to it so
368:33 - this here is our shard collection
368:36 - so now when we have a read operation
368:40 - who are we going to ask
368:42 - well let's say we have a request that
368:44 - comes in to say
368:45 - where's wendy
368:47 - i want to get all the records that are
368:48 - associated with wendy so we ask our
368:51 - master shard map
368:53 - wendy
368:54 - is located in illinois
368:56 - which server do i need to ask
368:59 - and the response is i found wendy in
369:02 - illinois which is shard number two
369:05 - okay so now i'm going to ask the same
369:07 - question where's wendy and i'm going to
369:09 - select all of the records associated
369:12 - with wendy and i go to
369:15 - shard2.userstable to get that data so
369:17 - there's a two-step process in getting
369:20 - data
369:21 - now you can see that there's a lot of
369:22 - programming going on here so we have
369:25 - shards and we have
369:27 - different load balancing techniques
369:29 - there
369:30 - so sql sharding we'll call it it does
369:32 - allow the scaling of horizontal
369:36 - growth we can add servers
369:38 - it requires extra programming and some
369:40 - extra requests that go on with the
369:42 - process
369:43 - so here are two solutions for mysql
369:46 - galera cluster is a
369:49 - sql mysql solution for sharding data so
369:52 - you don't have to do all the computing
369:54 - yourself and then
369:56 - i think it was 2016 or so
369:58 - where my sequel 8
370:00 - now includes something called group
370:02 - replication and so it does the same
370:05 - process where you can shard different
370:07 - things now in my opinion
370:09 - that scaling a mysql database
370:12 - is kind of like trying to squeeze a
370:14 - square peg into a round hole mongodb was
370:17 - designed originally to scale
370:19 - horizontally it's very easy to split up
370:21 - a document
370:22 - you don't have to worry about fragments
370:25 - being
370:26 - separated
370:27 - and so even though sharding works with
370:30 - sql
370:31 - it wasn't designed to work that way in
370:32 - the beginning and so perhaps not the
370:35 - best design in the long run so now it's
370:38 - your decision time so i'm going to
370:40 - present you basically with two different
370:41 - solutions you can choose a sql solution
370:45 - and then you can also pick from a nosql
370:48 - those are really the dividing lines so
370:50 - what are the factors there so consider
370:52 - first of all what you already have in
370:54 - your organization
370:56 - are are you already using sql in many of
370:58 - your other projects
371:00 - maybe it's a good idea just to continue
371:01 - on with sql
371:03 - almost everybody that programs in any
371:06 - kind of database already knows sql
371:08 -  is a common skill
371:11 - but it's not universal and so as i
371:13 - mentioned at the university where i
371:15 - teach everybody learns how to program in
371:16 - sql and they do it pretty well
371:19 -  is something that we add on as a
371:21 - second choice
371:23 - and i wouldn't call them experts at
371:25 -  and that's probably common for a
371:27 - lot of systems so the most common tools
371:30 - that you can work with both of them are
371:31 - free are either mysql or mongodb
371:35 - now let's take a look at some practical
371:37 - uh statistics from your area so i did
371:39 - some indeed searching for
371:42 - job postings in phoenix where i live
371:45 - so i just typed in job postings that
371:47 - have the keyword sql in it and you can
371:50 - see that there were 1480 through 82 jobs
371:53 - that referenced they want sql and so you
371:56 - can see the first one says a java
371:58 - developer not a surprise that you need
372:00 - sql how about this searching for nosql
372:04 - and the number of jobs that re reference
372:06 - no sql drops to 253
372:08 - and they still want a software developer
372:10 - and nosql is apparently part of the job
372:13 - description let's get specifically let's
372:15 - talk about mongodb as a solution 116
372:19 - jobs and then my sequel references 218
372:22 - jobs so if you didn't catch all that
372:24 - here is a graph that shows you or a
372:26 - table that shows you all of these so you
372:27 - can see that sql is a super common term
372:30 - people are using it all the all the time
372:32 - and everywhere and nosql is is not dead
372:35 - i mean it's not insignificant but it's
372:37 - certainly less and so if you wanted to
372:38 - see that visually you can see that sql
372:41 - is way ahead as the most common solution
372:44 - that most people think of when they're
372:45 - building software applications so when
372:48 - it comes to cost though really it's not
372:51 - a big deal almost every database
372:53 - solution has a free option
372:56 - linux servers means that you don't have
372:58 - to pay licensing to microsoft however
373:01 - your cloud hosting is going to be where
373:02 - the cost hits you so the amount of
373:05 - storage space and the amount of
373:06 - computing power that's being used in the
373:08 - cloud is going to affect you no matter
373:11 - which of the solutions that you choose
373:13 - uh at the beginning though remember that
373:16 - if you're choosing single server
373:17 - solutions you're probably going to be
373:19 - okay for your first version of your mvp
373:23 - now the next consideration that you
373:24 - should think about is how you
373:25 - communicate so
373:27 - rest apis is an important topic that you
373:29 - need to understand about building mobile
373:31 - applications also if you'd like to see
373:33 - the entire playlist for all of the
373:35 - considerations of building apps then
373:37 - i'll put that link here as well make
373:39 - sure you subscribe and thank you for
373:41 - joining me in class
373:45 - [Music]
373:52 - hi and welcome to the business of
373:53 - building apps this is a course that is
373:56 - designed for people who are doing
373:57 - business case studies on application
374:00 - development so we're in the part here
374:02 - called full stack considerations which
374:05 - is about choosing the right types of
374:07 - storage so activity 6-1 is an assignment
374:11 - so if you like homework then you've come
374:12 - to the right video so in this i want you
374:15 - to evaluate the various types of data
374:18 - storage that are out there so we're
374:20 - looking at database design so this
374:22 - refers to sql or nosql databases or some
374:25 - of the other now the background here is
374:28 - that i've already given you a lesson on
374:30 - the different types of databases that
374:32 - are somewhat popular and so we can just
374:34 - say that we know that various types
374:36 - exist
374:38 - so while they share the same goal of
374:40 - storing and retrieving data each of
374:43 - these different designs was solving a
374:46 - different problem and so the goal here
374:49 - is for you to be able to identify that
374:51 - so as you go through the course readings
374:54 - that i provided or the other videos that
374:56 - i've made in this course that i want you
374:58 - to research these categories of
375:02 - databases so there's a relational
375:04 - database
375:05 - a document database sometimes called
375:07 - nosql and then there's a graph database
375:10 - and we pick search engine now there
375:12 - might be others out there that you will
375:14 - discover along the way because there are
375:16 - certainly more than just four types of
375:18 - databases so what i want you to do then
375:20 - is to summarize what you understand
375:23 - about each of these and so tell me the
375:25 - strengths of each type and the
375:28 - weaknesses and if you want to include
375:30 - history about when they were developed
375:31 - and who fixed who created them and what
375:33 - they were trying to fix that would be
375:35 - great too
375:36 - provide examples of applications that
375:39 - would be appropriate for each of these
375:41 - types of databases of course they're
375:44 - designed for some specific purpose and
375:46 - then finally think of the app that
375:48 - you're building or you're designing in
375:50 - this course and i want you to then make
375:52 - a recommendation for which database or
375:55 - maybe a combination of databases would
375:58 - work for the particular app that you're
376:00 - working on so you have to understand how
376:02 - these app or these databases are
376:04 - designed and who they're supposed to
376:06 - help and then make a choice on which one
376:08 - would probably work for you so if you're
376:11 - one of my students i would expect you to
376:13 - submit this to me send me a word
376:14 - document send me a paper that explains
376:17 - the strengths and the weaknesses of each
376:20 - data storage technology and so since
376:22 - there are four different categories that
376:24 - i've mentioned here i would expect at
376:26 - least four four paragraphs probably an
376:28 - introduction and a conclusion so then
376:31 - the final is not only to tell me what
376:33 - the four differences are but which one
376:35 - you think is going to be probably
376:38 - appropriate for your solution so if
376:40 - you're not one of my students you feel
376:42 - free to put anything in the comments
376:44 - below that tells me about your
376:46 - experience with these types of databases
376:48 - which ones do you use that are somewhat
376:50 - out of the ordinary do you have a strong
376:52 - preference between my sequel or
376:55 - for example and why would you choose
376:57 - that so if you'd like to look at the
376:59 - rest of the course i will provide a link
377:01 - to the playlist here and if you're one
377:03 - of my students i will see you soon in a
377:04 - new class and if you're not a student
377:07 - please subscribe and come back as well
377:10 - thank you
377:13 - [Music]
377:20 - hi and welcome to the business of
377:21 - building apps this is a course that's
377:23 - about designing and running a business
377:26 - with mobile applications we're in part
377:28 - number six i believe which is the full
377:31 - stack considerations and so we're
377:32 - thinking about storage and online
377:34 - services this is an assignment video so
377:37 - if you like homework then you're at part
377:39 - 6.2 what are we going to do here i want
377:42 - to make this assignment an exploration
377:45 - of api services so apis or application
377:49 - program interfaces or people might just
377:51 - call them online services and so in a
377:54 - previous video we talked about several
377:56 - different things that were available
377:58 - from google and microsoft
378:00 - and we want to make sure that we're
378:02 - aware of what things are out there we
378:05 - don't have to reinvent the wheel in many
378:07 - cases so apis provide data and
378:11 - communications and computing for us for
378:14 - example google maps is an api and you'd
378:17 - be a fool to recreate an entire map
378:20 - application since there's one already
378:22 - available that you can just insert into
378:24 - an existing app so what i want you to do
378:27 - is to demonstrate that you understand
378:30 - how they work and which ones would be
378:32 - appropriate for your app so in a
378:34 - previous video we've already designed an
378:36 - app and now i want you to see if there's
378:38 - some features that you can utilize and
378:41 - make it better
378:43 - so as i mentioned microsoft and google
378:45 - have a lot of different apis that are
378:48 - open
378:49 - and free
378:50 - and all you have to do is sign up and
378:52 - configure them
378:54 - so these services range from a variety
378:56 - of things such as maps speech
378:58 - recognition and artificial intelligence
379:01 - so i'm not going to elaborate the entire
379:04 - list because there are literally
379:05 - hundreds of apis that companies like
379:07 - microsoft and google are providing to us
379:10 - so what i want you to do then is to
379:11 - examine the app that we're building and
379:13 - designing in this course
379:15 - and see if there are any opportunities
379:18 - for services that are out there that we
379:20 - could utilize so write a one-page paper
379:24 - with a recommendation for which if any
379:26 - of the services the api services
379:29 - would be appropriate for you to include
379:31 - in your application
379:33 - so make sure that you justify your
379:35 - decision so i don't want you to choose
379:36 - google maps just because you like maps
379:39 - if your app has something to do with
379:41 - maps then of course google maps makes
379:43 - sense but don't pick an application just
379:46 - because it's interesting make sure that
379:48 - it satisfies or supports one of your
379:51 - business goals
379:53 - so if you're one of my students this is
379:54 - what i would expect you to send me i
379:56 - would expect a word document that's
379:58 - probably about one page and it would
380:00 - list any of the services that you would
380:02 - find useful on google or microsoft or
380:05 - some other similar service and why they
380:07 - would be appropriate to integrate into
380:10 - your application so if you're not one of
380:12 - my students then feel free to leave in
380:14 - the comments below which apis have been
380:16 - useful for you in your apps if you'd
380:18 - like to see the entire course playlist i
380:20 - will provide a link to that so that you
380:22 - can see some of the videos about the
380:24 - business of building apps
380:26 - and make sure you subscribe if you
380:27 - haven't because this could be useful
380:30 - information to you if you're an app
380:32 - developer so thanks for watching
380:36 - [Music]
380:43 - hi welcome to the business of building
380:45 - applications this is a course for
380:47 - managers who are trying to create
380:49 - applications in the mobile platforms so
380:51 - the chapters that we've covered so far
380:53 - in this course include all of these
380:55 - topics that you see on the screen in
380:58 - this video we're talking about hiring
380:59 - the team and so we're going to be
381:01 - talking about development roles
381:03 - if any of these topics look interesting
381:05 - to you make sure you subscribe and also
381:08 - go back and check the playlist for this
381:10 - course my name is chad slooter and i
381:12 - teach computer science and software
381:14 - development at grand canyon university
381:16 - so welcome to class and i'm glad you're
381:18 - here now we're going to talk about dev
381:20 - roles mobile development in particular
381:23 - and so we're going to talk about forming
381:25 - a team
381:26 - and presuming that you are going to be
381:28 - probably in the hiring role manager or
381:31 - if you're the startup founder who are
381:33 - the people that you were going to want
381:35 - to work with you so you're going to have
381:37 - these four here you'll have a product
381:39 - manager a designer a front-end developer
381:43 - a back-end developer and there could be
381:45 - more roles but we're trying to keep it
381:47 - small here to save some expenses so
381:49 - we're going to focus on these four now
381:51 - you don't necessarily have to have four
381:53 - people you might have just you and you
381:55 - have to do all the roles or you might
381:57 - find some people that can do multiple
381:59 - things
382:00 - hopefully you can and then you can save
382:02 - some money so let's talk with the first
382:04 - one here a product manager so a product
382:07 - manager is probably somebody that's got
382:09 - some senior skills they've done this
382:11 - before it's not their first application
382:14 - so their goals are pretty much this
382:16 - number one they have to figure out what
382:19 - problem they're trying to solve and so
382:21 - this famous picture here about the
382:23 - project and what it was described as
382:25 - what it was implemented as and then
382:27 - finally what the person wanted
382:29 - is the tire swing so if you haven't
382:32 - figured it out yet most of the videos in
382:33 - this course are for you the project
382:36 - manager or the product manager and your
382:39 - goal is to do some of these things
382:41 - figure out what has to be done the
382:43 - second thing that a product manager has
382:45 - to do is execute make sure that we have
382:48 - a plan we know what things we're working
382:50 - on first which ones are most important
382:52 - what the users want what the users
382:55 - should not see and we'll move this plan
382:58 - forward also we're going to measure our
383:00 - success and this pretty much works with
383:03 - testing out our application with our
383:05 - users our focus groups and our early
383:07 - adopters and then we're going to modify
383:10 - our goals so everything in this course
383:12 - so far has been pretty much a product
383:15 - manager's kind of work so look back at
383:17 - the chapters in the playlist and to see
383:19 - what your job is
383:21 - so i did a quick search and picked out
383:23 - one of the roles that was advertised
383:25 - currently here i live in phoenix arizona
383:28 - and aaa was one of the items that came
383:30 - up when i searched for
383:32 - a pm or a product manager so what do you
383:35 - have to do well here's what they say so
383:38 - you have to ma manage and monitor for
383:40 - defects uh
383:43 - monitor
383:44 - enhancements to existing systems
383:46 - identify customer needs uh solicit input
383:49 - meets commitments made to customers in
383:51 - other words you have all the
383:52 - responsibility but you don't do the work
383:54 - yourself you direct a team you get the
383:57 - resources applied to it and you know
383:59 - what's going on and you make sure that
384:01 - you get the resources applied to what
384:04 - you want to do so what do you have to
384:06 - have well they want a college degree it
384:08 - looks like
384:09 - they pick five years plus experience so
384:11 - you know their product manager is not
384:13 - going to be the first thing that you do
384:15 - out of college
384:17 - you're going to be scrum certified so
384:19 - you're looking at looking
384:22 - managing teams sprints
384:24 - you're doing the agile software
384:26 - development kind of a role
384:28 - and then it also says that we want uh
384:30 - expertise and sql and proficiency and
384:33 - programming so they want a experienced
384:36 - developer that now is stepping into the
384:38 - manager rules so this is probably your
384:40 - most senior member of the team now let's
384:42 - take take a look at the next item that
384:44 - identified as one of your team members
384:46 - is your product
384:48 - designer so a product designer is going
384:50 - to be the person that makes your product
384:52 - look really good obviously and so user
384:55 - interface is the first thing that comes
384:57 - to mind when it comes to a product
384:59 - designer this is a person that has some
385:01 - artistic talent maybe has a degree in
385:04 - product design maybe a degree in fine
385:06 - arts the second thing is called user
385:09 - experience and there's a slight
385:11 - difference there so the user interface
385:13 - is what it looks like the user
385:15 - experience is how a product acts and and
385:18 - feels to the customer so
385:20 - navigation as you can see what's being
385:21 - drawn here is the logical flow of how
385:24 - you get through an app but user
385:26 - experience can be broader than just what
385:29 - you see on the mobile app so for
385:31 - instance the last time you ordered
385:33 - anything through amazon you had a user
385:36 - experience
385:37 - your user experience was that the app
385:39 - worked well you clicked buy
385:41 - and somebody
385:42 - really hustled hard to get that product
385:45 - to your door they rang the doorbell and
385:46 - by the next day you were happy and if
385:49 - you didn't like the product you could
385:50 - return it without any cost all of that
385:53 - is a user experience so it's not just
385:55 - the bits and bytes on your app it's the
385:58 - process of how the business works and so
386:00 - user experience of course is a pretty
386:02 - critical item if you want to keep your
386:04 - customers
386:05 - so what is a qualification for somebody
386:08 - who is a designer so
386:10 - not just user experience but we're
386:11 - focused in here on on more of the
386:14 - designer people so you can see their
386:16 - goals
386:18 - according to peterson technology
386:20 - partners here in chandler arizona
386:22 - they're looking currently for a designer
386:24 - and they want this person to create
386:26 - storyboards and wireframes and user flow
386:29 - diagrams create prototypes and
386:32 - interactive designs sounds a lot like
386:34 - what we did in earlier activity in this
386:36 - course
386:37 - also we're going to be thinking about
386:40 - thinking methods to construct concepts
386:44 - that can be tested and validated with
386:46 - users
386:48 - so remember in a previous edition of
386:50 - this course or the previous lesson in
386:52 - this course we talked about finding the
386:55 - niche for your product you build
386:58 - something you show it to your users
387:00 - and if they don't really care about it
387:02 - or they don't care for it then you don't
387:05 - include it so this is what they mean by
387:07 - testing out your hypothesis with a group
387:10 - of
387:11 - potential users
387:13 - actively participating in discussions
387:15 - and workshops with key
387:17 - key stakeholders so the point here is
387:20 - that the design is a pretty early part
387:23 - of the process of building a product and
387:26 - crappy designs
387:28 - just make a horrible first impression so
387:30 - whether you have a full-time designer or
387:33 - you purchase the services of an of a
387:36 - contractor a designer's an important
387:38 - part of your job
387:40 - so here's some qualifications that they
387:42 - say let's get a bachelor's degree they
387:44 - didn't mention what kind of a degree but
387:47 - where i work at the university grand
387:49 - canyon university
387:51 - we have an entire degree called
387:53 - web design
387:54 - and they are artists firsts
387:57 - and programmers second and so i've
387:59 - actually taught some of those courses
388:01 - it's
388:01 - pretty interesting when i asked my
388:03 - students to pull out a piece of paper
388:06 - and
388:08 - draw some diagrams
388:09 - i expected like most of my courses that
388:12 - i've taught before that like in math or
388:15 - in programming
388:17 - people might have a pencil might not
388:19 - have a pencil well these designers not
388:21 - only had a piece of paper it was a it
388:24 - was a tablet a square tablet of high
388:26 - quality drawing paper they had a dozen
388:29 - pencils of different shades of gray and
388:32 - of course colors they had rulers and
388:34 - protractors and
388:36 - the work they did was three-dimensional
388:39 - and shaded it was it was like if that is
388:42 - your approach to
388:44 - taking notes or making a concept come to
388:47 - your mind then you're probably a
388:49 - designer
388:51 - most of the time though i'm teaching
388:52 - courses on
388:53 - how to manage database connections and
388:57 - how to do encryption and security and
389:00 - and honestly friends in my course you
389:03 - know who you are
389:04 - you can't even draw a square with right
389:06 - angles so
389:08 - there's a skill here
389:10 - for people who have this innate artistic
389:12 - talent and they like to use technology
389:15 - so some of the technology that you'll be
389:17 - working with of course is css which is a
389:19 - design language
389:20 - sas
389:22 - is a kind of a quasi language that helps
389:25 - you better with css
389:27 - adobe products such as photoshop and
389:29 - illustrator are probably things that you
389:32 - have memorized and work with on a daily
389:34 - basis
389:36 - their experience level they're asking is
389:38 - they want somebody that does some ui and
389:40 - also ux which is the user experience and
389:43 - so there are some qualifications for a
389:45 - person that you want on your team now
389:47 - we're going to have two developers here
389:48 - we're going to split this role in the
389:50 - front end and the back end so let's talk
389:53 - about the front end so the front end is
389:55 - probably somebody that is a javascript
389:57 - expert they're going to be able to build
390:00 - a webpage that looks nice you might call
390:02 - it this you might call this person a
390:03 - designer so your designer and front-end
390:06 - developer might actually be the same
390:07 - person so that's kind of typical i've
390:11 - met a lot of designers that are very
390:13 - good at programming in javascript so
390:16 - there's certainly an overlap there and
390:18 - so here's some of the tools that you'll
390:19 - see front-end people working with css
390:22 - javascript and then these two frameworks
390:25 - angular and react seem to show up all
390:27 - the time so pretty much you want to
390:28 - react expert if you're looking for a
390:31 - front-end developer now we're in mobile
390:33 - systems here so what i put on the screen
390:36 - applies to web development and somewhat
390:38 - to mobile development so mobile
390:40 - developers are going to be working with
390:42 - the
390:43 - framework of your choice and so
390:45 - check out a previous video that i made
390:47 - for how to pick the right framework
390:50 - which will depend on who you hire then
390:52 - for your front-end development so your
390:54 - back-end developer this person is going
390:56 - to be creating the logic the business
390:59 - sense and the databases in the
391:01 - background so you are probably going to
391:04 - be able to pull this back end designer
391:06 - or developer from other types of
391:09 - programming so you don't have to be a
391:11 - web a mobile developer per se to be a
391:13 - back-end person you'll probably do
391:16 - similar things
391:17 - in other applications so front end is of
391:20 - course the user interface and the back
391:23 - end is how you manage the data so those
391:25 - are the common splits now let's revisit
391:28 - these developer roles so i've mentioned
391:30 - four we have the product manager the
391:32 - designer the front end and the back end
391:34 - developers
391:35 - however we've left out some things so
391:37 - there are roles such as who's going to
391:40 - test this thing so frequently you expect
391:42 - your developers to be able to do their
391:44 - own testing
391:46 - that's a good thing if you're the
391:47 - manager you're going to ask those
391:48 - questions in an interview
391:50 - not only can you write code but tell me
391:52 - about your experience with testing
391:54 - frameworks how about security
391:57 - we don't we can't afford a security
391:59 - expert or a security team so once again
392:02 - you might be asking your front end and
392:04 - especially your back-end developers
392:07 - what do they do
392:08 - about security what are some of the
392:10 - practices they follow and maybe some of
392:12 - the examples they've built in previous
392:14 - applications if you don't know anything
392:16 - about security then of course you want
392:18 - to hire in that expertise
392:20 - what about sales what about marketing of
392:22 - course those are not even technical
392:24 - roles but you're going to have to have
392:26 - that maybe that's your expertise and
392:28 - what you're trying to get done so a
392:30 - pretty obvious question should be about
392:32 - yourself
392:33 - which of these roles are you good at and
392:36 - hopefully you are the product manager
392:38 - first of all because
392:40 - that's the business of building apps in
392:42 - itself but if you can do the other
392:44 - things then you're well ahead of others
392:48 - now a common practice that you might
392:50 - find in some entrepreneurs is that they
392:52 - are the product manager role or the
392:54 - marketing expert and they really don't
392:57 - know how to code or program
392:59 - so from experts that have done this and
393:01 - created their own startup applications
393:04 - the usual advice is
393:06 - learn to code yourself so you can at
393:08 - least build part of the application and
393:11 - you can talk intelligently to the people
393:13 - that are doing the core work of your app
393:16 - because if you're ignorant on that you
393:18 - are flying somewhat blind and you'll be
393:20 - less effective
393:21 - now here's one way to look at it then if
393:23 - we had all of these four what's the
393:25 - cheapest way to
393:27 - fill these roles
393:29 - well there's you so can you do all of
393:32 - them if so then you can maybe grow
393:35 - slowly but you're on the right track how
393:38 - about these let's let's see if we can do
393:40 - some outsourcing or replace them so
393:42 - let's start with the designer so a
393:44 - designer is not something maybe that has
393:47 - to be continually managed it's a
393:49 - one-time thing so maybe you could
393:51 - outsource the job or do it yourself or
393:54 - if you have a front-end designer that is
393:57 - also your front-end developer then
393:58 - you've got that one covered or you could
394:00 - buy a template so
394:02 - see if you can get rid of one of these
394:04 - or two of these roles here's another way
394:06 - you can combine things so the front end
394:08 - and the back end developer
394:10 - can combine into what's called a full
394:12 - stack developer so if you have one
394:15 - experienced programmer that can do both
394:17 - the front end work and the database and
394:20 - business logic in the back then you've
394:22 - saved yourself an employee so by the way
394:25 - if you're looking for employees come to
394:26 - grand canyon university because
394:28 - what we're creating here are full stack
394:30 - developers so
394:32 - they understand various languages such
394:34 - as c sharp java javascript
394:36 - and php and several types of databases
394:39 - so there's a commercial to hire my
394:42 - students
394:43 - so there's your roles now the product
394:45 - manager we're going to leave as you so
394:48 - that is probably a key position
394:50 - that only you can really do well now
394:53 - here are some principles that probably
394:55 - should apply
394:56 - thinking about getting a let's let's
394:58 - assume that you're in a small company if
395:00 - you're in a big company already then
395:02 - this might not be a big deal but
395:04 - remember this that employees are your
395:06 - very best assets
395:07 - but also
395:09 - their most expensive parts of your
395:11 - business
395:12 - employees require work to manage
395:16 - and so startups need to keep the
395:17 - management simple and costs low so a lot
395:21 - of small teams don't even have an hr
395:23 - department for example
395:24 - so at this stage of life i've
395:26 - been in several different roles
395:28 - including
395:29 - the technician and the manager and now
395:31 - as a as a professor
395:33 - and so some of the principles that i
395:34 - would put out there is work with a small
395:37 - team with people that you really really
395:39 - trust and appreciate rather than trying
395:41 - to get a big team
395:43 - be very careful and very deliberate on
395:45 - how you hire make sure that you
395:48 - get good recommendations check the
395:50 - references don't take a risk because
395:53 - hiring the wrong person is a painful and
395:56 - costly mistake
395:58 - and so you'll save yourself a lot of
396:00 - stress and the stress of somebody else
396:02 - if you put the person in the wrong role
396:04 - that maybe they don't really want to be
396:07 - in so in the next video we're going to
396:08 - talk about how to create a job
396:10 - requisition how to identify the actual
396:13 - experiences that you need to hire if
396:15 - you'd like to see the entire course
396:17 - playlist i'll put a link here for how to
396:19 - see all of these chapters make sure that
396:21 - you subscribe if this is valuable
396:22 - information and thank you for coming to
396:24 - class with me we'll see you next time
396:29 - [Music]
396:36 - hi and welcome to the business of
396:37 - building applications this is a course
396:40 - for people who are interested in
396:41 - creating businesses that work with
396:42 - mobile applications
396:44 - now in this course there are several
396:46 - chapters so if any of this material
396:48 - looks of interest to you make sure you
396:50 - subscribe or go look at the playlist for
396:52 - the channel now right now we're in this
396:54 - section called hiring the team and so
396:56 - we're focusing on the skills that you
396:58 - need and how to manage a project and so
397:01 - let's talk here about the differences
397:03 - between mobile development and web
397:06 - development and the skills that are
397:07 - involved so this might mean that you are
397:09 - either looking at it from the
397:10 - perspective of the manager who is trying
397:12 - to find a competent mobile developer or
397:15 - perhaps you are more in the career path
397:17 - of becoming a developer and you would
397:19 - like to compare the differences in
397:21 - what's required and what kind of
397:23 - benefits that you can get so first of
397:26 - all let's talk about the overall market
397:28 - of talent pool that there is
397:30 - this is a stack overflow survey result
397:32 - chart from 2020. every year stack
397:35 - overflow the website asks their users
397:38 - about themselves and about their
397:40 - preferences on on development tools so
397:44 - one of the first questions is what do
397:46 - you do
397:46 - and so you can see that a great deal of
397:49 - people classify themselves as developers
397:52 - on stack overflow
397:54 - and they say that they are either back
397:57 - end
397:58 - full stack
397:59 - or front end in their main categories so
398:02 - those three main
398:04 - groups there are probably
398:06 - web developers that's usually the
398:08 - default expectation
398:10 - and you can see down in fifth place at
398:12 - 19
398:14 - that they consider themselves a mobile
398:16 - developer so it's a minority of a job
398:19 - market but certainly not invisible
398:22 - obviously all of us use apps and so
398:25 - this is going to kind of steer the
398:27 - decisions about where you would get your
398:29 - talent pool
398:30 - first of all let's talk about the need
398:32 - for why a company would want a mobile
398:34 - application so let's take a scenario
398:37 - where you are an established company so
398:39 - we're no longer talking about making a
398:41 - startup out of thin air with a mobile
398:43 - app so you're you're a business that
398:45 - sells products and you probably have
398:47 - stores and you have a lot of employees
398:49 - the people are going to find you through
398:51 - a web search probably through google
398:54 - and then people want to come back to
398:57 - your company again and so returning
398:59 - visitors are likely going to back to
399:01 - their website
399:02 - and then finally we have what we call
399:04 - our regular customers the frequent
399:06 - transactions and they're going to
399:09 - install the app so we go from google
399:11 - to website to app
399:14 - and so if we were looking at the company
399:16 - called expedia that's probably how it
399:18 - would happen they would search for cheap
399:20 - airline tickets
399:21 - maybe expedia is a search result
399:24 - if the customer is
399:26 - liking the service they come back to
399:28 - their website
399:29 - and then they use it so often that they
399:30 - get a better performance with an app so
399:33 - my my point here is that the need for a
399:36 - mobile app for a company like expedia
399:38 - might be really in third place after
399:40 - they get their website going
399:42 - so here's how it looks then we have
399:44 - contact with new customers through your
399:46 - web page and you retain your customers
399:49 - through your mobile now you might say i
399:52 - want to choose mobile in my
399:55 - application development career or in
399:58 - solving my business problem because of
400:00 - certain things that only phones can do
400:02 - so for instance you're trying to build a
400:04 - virtual reality app well obviously you
400:06 - need a device like a phone how about a
400:09 - phone app that is gps aware or has
400:12 - augmented reality such as a self-guided
400:16 - tour of your
400:17 - neighborhood or maybe you have a map app
400:20 - and you're going to require google maps
400:23 - and
400:24 - a gyroscope with a game of course is
400:26 - going to be hardware driven or maybe you
400:29 - have some kind of a camera specific app
400:32 - more than just taking photos you might
400:33 - be scanning images or
400:36 - working with barcodes and then finally
400:38 - augmented reality is a cool tool
400:41 - that allows you to look around an
400:42 - environment and place objects such as a
400:44 - new piece of furniture or apply makeup
400:46 - to your face or in this case as you can
400:48 - see the example you can see examples of
400:51 - signs virtual signs that appear on the
400:54 - street and so all of these would
400:55 - probably guide you to hiring a mobile
400:58 - developer or to developing a mobile
401:00 - solution rather than a website
401:03 - now look at the contrast and overlap of
401:06 - where you would learn how to do this
401:09 - thing
401:09 - most people when they start
401:11 - making themselves into software
401:13 - engineers or software developers
401:16 - they would probably learn how to make
401:17 - things on the web
401:19 - so since that's the most common medium
401:21 - that most of us work with
401:23 - so this big bubble here represents all
401:25 - the skills that you would need for a
401:28 - mobile or i'm sorry for a web developer
401:30 - now we have another overlap which is
401:32 - mobile development now i'm not quite
401:34 - sure how much there is an overlap
401:36 - probably more than i drew here
401:38 - because
401:39 - everything that you learn in a
401:42 - good software engineering degree is
401:44 - probably going to translate right into
401:46 - mobile development so maybe i could have
401:48 - overlapped at least half of that here's
401:50 - the point
401:51 - more people out there in the job market
401:53 - are already skilled in web development
401:56 - fewer in mobile development
401:58 - web languages are similar to mobile
402:01 - technology as a matter of fact some of
402:04 - the cross
402:05 - cross platform tools such as react
402:08 - native
402:09 - are best learned first as a mobile i'm
402:11 - sorry as a web developer and then
402:13 - applied to the mobile environment
402:16 - and they apply so well that a react
402:19 - developer can probably pick up mobile
402:21 - development and react native quite
402:23 - easily
402:24 - many businesses can then just find their
402:27 - mobile development talent
402:29 - right within their walls they don't have
402:31 - to go out and hire a mobile developer
402:33 - they just need to train
402:34 - their existing team with a few new
402:36 - skills and away they go so consider that
402:39 - based on what you need on your team
402:41 - whether you're hiring from scratch or
402:42 - you already have some people to work
402:44 - with you should know that there's
402:45 - overlap in these skills
402:48 - so
402:49 - the trends
402:51 - that seem to go this way are
402:53 - we have
402:55 - native apps
402:56 - as the first choice for building a
402:59 - mobile solution
403:01 - and then what we would call
403:02 - cross-platform apps which focuses in on
403:05 - javascript sometimes
403:07 - and so native apps were the first and
403:09 - the 100 percent only solution and of
403:12 - course
403:13 - if we have any alternatives to that
403:14 - that's going to eat into that market
403:16 - and then the cross platform solutions
403:19 - seem to be on the rise now i put here
403:22 - javascript apps so that refers to react
403:25 - native probably there are other
403:27 - multi-platform tools such as xamarin
403:30 - which is all in c sharp
403:32 - or
403:33 - kotlin
403:34 - using
403:35 - cross-platform compiling is somewhat
403:39 - cross-platform
403:41 - flutter and dart
403:43 - is another combination
403:44 - so just putting javascript here is kind
403:46 - of misleading but the idea is that the
403:49 - trends are
403:50 - trying to get cross-platform solutions
403:53 - and a lot of that
403:55 - looks like web development
403:57 - so
403:58 - if you're a native app developer you're
404:01 - going to know android very well or ios
404:03 - very well
404:05 - but
404:06 - they're very independent
404:07 - if you're trying to do cross-platform
404:09 - work
404:10 - you're probably going to also know quite
404:12 - a bit about web development so anyway
404:14 - that's the trends i see
404:16 - is what the market is trying to do
404:18 - and i don't know if the cross-platform
404:20 - solutions are always the best but that
404:22 - seems to be where we're trying to go
404:25 - now let's talk about the skill levels
404:27 - and the complexity so on the left side
404:29 - we have
404:30 - web development at the very beginning if
404:33 - you've never done anything before you
404:34 - can build web pages quite easily with a
404:37 - tool such as
404:38 - wordpress
404:39 - or maybe squarespace or something that
404:42 - is
404:43 - just as easy to use as a
404:46 - desktop publishing tool such as
404:48 - publisher or maybe even microsoft word
404:51 - going up from there you can call
404:52 - yourself a web designer so you start to
404:54 - learn a bit more about css
404:57 - from javascript and then if you try to
404:59 - get to the full stack you have the
405:01 - database in the back end and so that's
405:03 - kind of the progression that i would
405:05 - teach my students and probably you've
405:08 - learned as well if you're on that path
405:10 - in the mobile development it seems like
405:12 - we skipped that first stage there might
405:15 - be some tools out there to create mobile
405:17 - apps without code but
405:19 - i i don't really know
405:21 - how successful they are so most of the
405:23 - time when i teach
405:25 - app development we jump right in with
405:27 - somebody that knows java and we start
405:30 - working with pretty complex code
405:33 - and then finally you get to the top end
405:35 - where you have the full stack again in a
405:37 - mobile app so
405:39 - my perception i could be wrong maybe you
405:41 - could correct me if you put these
405:43 - corrections of course in the comments is
405:45 - that there seems to be this bottom rung
405:47 - of the ladder that is missing on the app
405:50 - development side so more than likely if
405:52 - you're in app development you've got
405:54 - more skills than somebody that is just
405:56 - beginning with cody
405:58 - this was reflected in some salaries so
406:01 - on the left side we have what i searched
406:03 - for and i think it was
406:05 - indeed.com they said an average salary
406:08 - on the in the united states for android
406:10 - developer was about 120 000
406:13 - and slightly less for the software
406:16 - engineer which is more general and
406:18 - probably focused on
406:20 - web development is is the majority of
406:22 - their work so you get paid more as an
406:25 - app developer probably because
406:27 - as i said the difficulty level's a bit
406:29 - higher
406:30 - and your skills are probably a bit more
406:32 - advanced so the conclusion then
406:35 - uh your mobile app either you're an
406:38 - established business
406:39 - or it could be that you're just starting
406:41 - directly with a mobile solution and
406:43 - trying to launch your startup that way i
406:45 - mean instagram for example
406:48 - you use a mobile app only if you need
406:50 - some unique capabilities
406:52 - most of the time you can build an app
406:55 - without building an app
406:57 - you can build a mobile
406:58 - friendly website so a responsive design
407:01 - website can get orders and present
407:04 - information to your customers quite
407:06 - easily and so you might not even need a
407:08 - mobile developer
407:09 - but if you have these unique
407:11 - capabilities in a phone and you want to
407:12 - use them
407:13 - then you'll obviously need to make a map
407:16 - and make an app
407:17 - more challenging for beginners and then
407:19 - better pay so
407:21 - that's the column for mobile
407:23 - the case for web development is that
407:26 - it's more widely utilized so you're
407:28 - going to find people that can work on
407:30 - your projects and you can hire them
407:32 - if you are a web developer you're going
407:34 - to have more choices to pick from and
407:36 - also
407:37 - if you decide you want to begin in one
407:40 - or the other then i would probably
407:42 - recommend that you start as a web
407:44 - developer if you're a beginning
407:45 - programmer
407:46 - and you can transfer those skills later
407:49 - to mobile after you've maybe got a year
407:52 - or so of experience in the next video
407:54 - i'm going to help you with the scrum and
407:56 - agile process
407:58 - and so that way you can manage a team
408:00 - using today's most common methods if
408:02 - you'd like to see the entire playlist
408:04 - for this course i will also put that
408:05 - link here so make sure that you
408:07 - subscribe if this is good information to
408:09 - you and we'll see you next time
408:14 - [Music]
408:20 - hi and welcome back to the business of
408:22 - building applications in this course
408:24 - we're talking about the management and
408:26 - the business decisions that go behind
408:28 - creating an application whether it's for
408:30 - your business or for a startup but it's
408:32 - about mobile apps and the process that
408:34 - is used so we're in this section here
408:36 - called hiring the team and so we're
408:39 - going to in this video talk about
408:41 - managing your team and using the agile
408:43 - software process if any of these other
408:46 - chapters look of interest to you then
408:48 - make sure you subscribe so that you can
408:50 - come back and watch them later my name
408:52 - is chad slutter and i teach software
408:55 - development and
408:56 - computer science at grand canyon
408:58 - university so welcome to class
409:01 - so we've got one more section ahead of
409:02 - us and then we're going to move on to
409:05 - other greater things so right now we're
409:07 - talking about managing the team with
409:09 - agile and so agile is a software
409:12 - development process so sometimes you're
409:15 - going to hear in your life the letters
409:17 - the sdlc the software development life
409:20 - cycle and so this goes from the concept
409:23 - of an idea
409:25 - all the way to where you retire a piece
409:27 - of software and no longer use it
409:30 - so the sdlc is a way to bring
409:34 - sanity into a complex process trying to
409:37 - bring some structure into managing
409:40 - something that frequently fails right
409:43 - now there are two basic ideas for how to
409:46 - manage any kind of an engineering
409:48 - project waterfall is the traditional
409:50 - method that's been used for centuries
409:53 - and agile well it's the newest name for
409:56 - a process that is incremental and so
409:59 - agile is preferred and probably has some
410:01 - good reasons to
410:03 - be preferred in today's market so here's
410:06 - what the
410:07 - previous method looks like this is the
410:09 - waterfall methodology and you can see
410:11 - where it gets its name because
410:13 - one step of the process is completed and
410:15 - then falls into the next
410:18 - so in a waterfall methodology you try to
410:20 - imagine all of the details of your
410:22 - product up front and you would design a
410:25 - very comprehensive guide to how to build
410:28 - it and so you really create it twice in
410:31 - your mind once in your
410:33 - idea and then second on your paperwork
410:36 - and then you give it to your engineers
410:38 - and they develop it now the design then
410:41 - of course is structured it's static
410:45 - it might be what you want but it might
410:48 - not be as well
410:49 - and the risk is that if you
410:51 - have left out any details
410:54 - they never get addressed
410:56 - and so this process
410:58 - leads to expensive dinosaurs that people
411:02 - abandoned
411:03 - and so waterfall methodology though it
411:05 - sounds logical in practice it has some
411:09 - issues and the issues are is that we're
411:12 - trying to do all of our thinking about
411:14 - the product up front at one time
411:18 - and we don't usually do very well good
411:20 - job of that
411:21 - so in comes the second type of software
411:23 - development which is iterative
411:26 - we develop a feature and then test it
411:29 - out and show it to our users and
411:31 - incrementally we increase our product
411:35 - and so this has been proven to be more
411:38 - successful in the long run
411:40 - and to get that process working we use
411:43 - the process called agile
411:46 - agile or agile scrum because scrum is a
411:50 - meeting a name for a meeting that we do
411:52 - on a regular basis in this process so
411:54 - really it's agile software development
411:56 - so what we do with agile software
411:58 - development is we start with a project
412:00 - backlog
412:01 - which is kind of like the waterfall
412:03 - technology where we say we've got a
412:04 - pretty big picture of what we want their
412:06 - app to do
412:07 - we list all of those features
412:10 - but we don't implement them all we just
412:11 - implement the first one or maybe two
412:14 - we create what's called a sprint backlog
412:16 - which is a short list of things to do
412:19 - and then within two weeks to 30 days we
412:21 - do a sprint
412:23 - and then finally we have at the end of a
412:25 - short period of time at the end of our
412:27 - sprint we have a product that works we
412:30 - can test it out now it only might be the
412:33 - title screen and the login
412:35 - but at least we get a view of what the
412:37 - the design is
412:40 - so it's a very minimal product it only
412:41 - has a few features
412:43 - but we can show that to our users and
412:46 - then they can decide if we're on the
412:48 - right track or not and if we're not
412:50 - then we've only wasted two weeks of time
412:52 - or we can make adjustments so that we
412:54 - can make corrections for the future
412:57 - to make this work we do a few principles
412:59 - one principle is called self organizing
413:02 - your teams you put people together
413:05 - and they have their specialties but we
413:08 - give them the autonomy to work as a
413:10 - small group
413:11 - and so this grid here might show you how
413:13 - you would organize an entire
413:16 - company of agile teams and so you can
413:19 - see that there are four people
413:21 - or four teams
413:22 - and each each person then is got their
413:25 - own thing so
413:26 - if you
413:27 - you might have a bigger team than four
413:29 - but usually small teams work best so you
413:32 - can see the specialties specialty such
413:34 - as somebody that's in the ui design
413:36 - somebody's a software developer it looks
413:38 - like we might need some data modeling
413:40 - maybe a database expert but the idea is
413:43 - that we try to come up with these little
413:44 - pods of people
413:46 - now when you come up with these groups
413:48 - it's important that you pick the right
413:49 - people on your team
413:51 - of course we all want the people on the
413:53 - top right corner
413:54 - of our team
413:56 - they have high capacity they're well
413:58 - skilled at their job
414:00 - and they're anxious to get started so
414:03 - we'll give them a green light
414:04 - so the low capacity people are your
414:07 - second choice which is
414:09 - they don't really know what they're
414:10 - doing yet but they're really anxious to
414:12 - get started
414:13 - and then the other two on the left
414:15 - the willingness part that's harder to
414:17 - cure
414:18 - so if we were to respond to these people
414:20 - as they've been given to us maybe you're
414:22 - an agile team leader and you've got this
414:24 - mix of exactly these four people what
414:27 - are you going to do with them
414:28 - well first of all the green we're going
414:31 - to promote we're going to give them
414:33 - flexibility autonomy we're going to let
414:35 - them
414:36 - run their own schedule we're going to
414:39 - make them creative
414:41 - the low capacity people are going to
414:43 - make mistakes of course and so we're
414:45 - going to pair them up with somebody that
414:47 - knows what they're doing
414:48 - we're going to give them training if
414:50 - they don't know what their language is
414:52 - or if they haven't worked with a certain
414:53 - technology
414:55 - as the manager you're probably going to
414:56 - want to keep track of this person you're
414:58 - going to help them out share with them
415:00 - what you know or pair them with somebody
415:02 - that does
415:03 - now our third person here is our high
415:06 - capacity but low willingness and so you
415:09 - as the manager of the team
415:11 - are going to probably have to clarify
415:14 - why we're doing what we're doing so
415:16 - one-on-one meetings clarify the goals
415:18 - the directions why this why this sprint
415:20 - is necessary what the vision of the
415:23 - company is try to clear out any
415:25 - hesitations they have
415:27 - maybe they need a schedule change maybe
415:29 - they need something more interesting to
415:30 - work on but you've got to find out why
415:33 - they're not so willing and then for the
415:34 - last part where you've got these
415:36 - incompetent people that really don't
415:37 - know what they're doing they're just
415:39 - toxic and you should probably fire them
415:40 - now so when you look at your
415:43 - agile team you want to make sure that
415:46 - you can get as many people in the top
415:47 - right quadrant as we can because you're
415:50 - going to make them work kind of
415:51 - independently you're going to put them
415:53 - in co-location areas hopefully where
415:55 - they can see each other frequently
415:58 - and so
415:59 - studies have shown
416:01 - that the further away people are
416:03 - isolated
416:05 - the less effective they are in solving
416:07 - collaboration problems
416:09 - so
416:10 - unfortunately with the covet plague that
416:13 - we experienced in 2020
416:15 - many of us didn't have the chance to
416:17 - work with our
416:18 - teammates in the office
416:20 - we'd started to do remote work but the
416:23 - ideal is to have a close relationship
416:26 - where unplanned meetings can occur quick
416:30 - questions
416:31 - where you can have people show each
416:32 - other ideas you don't have to wait
416:35 - formally to present something you can
416:37 - either go with an idea or abandon it
416:39 - based on immediate feedback
416:42 - so if you do find yourself in the remote
416:44 - work situation which is probably the
416:46 - future
416:48 - try to do as casually as you can
416:52 - as you can see in this case we have a
416:53 - mix so some people are remote some
416:55 - people are close by
416:57 - but the idea is to keep up a constant
417:00 - flow of communication so that ideas can
417:03 - be tested or
417:05 - approved or abandoned quickly
417:07 - now one of the things that you're going
417:09 - to work with on a project is the product
417:12 - backlog
417:13 - now a backlog sounds like you're behind
417:15 - but really what it means is
417:17 - a product feature list and so that
417:20 - feature list is going to be everything
417:22 - that your app needs to do and so you can
417:25 - see in the left column of this board
417:27 - we have sticky notes
417:29 - every sticky note is going to describe a
417:31 - feature of the product for example let's
417:34 - say on one of the sticky notes it says
417:36 - i want to display all of the orders of a
417:40 - of a of a user
417:42 - in a date range and print a report so
417:45 - that's a feature
417:47 - now that feature is going to take
417:49 - somebody some work
417:50 - there's going to be lots of other
417:51 - features
417:52 - and each one of those is going to
417:54 - require a sprint to be able to get the
417:58 - work done but we want to identify which
418:00 - which features in the backlog are the
418:02 - most important
418:04 - and when we find the first important
418:06 - ones we're going to put them into the
418:08 - next column the sprint backlog
418:11 - so a sprint as you might recall is a
418:14 - short period of time maybe two weeks
418:16 - and we will work on a few items from the
418:19 - product backlog
418:21 - and then you can see the rest of it
418:22 - we're going to move them on until we get
418:24 - done
418:25 - now when you have a sprint planning
418:28 - session you and your teammates are going
418:30 - to pick out some items from that product
418:33 - backlog
418:34 - and you're going to
418:35 - take a look at what needs to be done and
418:38 - prioritize them
418:40 - so you might pick some feature because
418:42 - it's easy to do or you might pick a
418:44 - feature because it's critically
418:46 - important for the app
418:48 - but whatever the reason is you're going
418:49 - to move
418:50 - those items from the product backlog
418:53 - that are going to be currently busy and
418:55 - put them into a sprint backlog and they
418:58 - will get your full attention for the
419:00 - next two weeks
419:02 - so our sprint backlog then is our guide
419:04 - you're going to put that on a board and
419:06 - you're going to talk about it every
419:07 - single day
419:09 - so your backlog is everything that has
419:11 - to be done either in the app or in the
419:14 - case of the sprint backlog everything
419:16 - that needs to be done in the next two
419:17 - weeks and then of course completing
419:20 - those steps is a daily task
419:22 - so
419:23 - now we've gotten to the term called
419:25 - sprint
419:26 - what are we going to do in that sprint
419:28 - and how long is it going to take
419:30 - so a sprint typically is two weeks long
419:32 - the first day is the planning meeting so
419:34 - that you can decide what the next goals
419:36 - are
419:37 - and you can see that every day of the
419:39 - sprint is a scheduled meeting probably
419:42 - early in the morning that says your
419:43 - daily stand-up so a stand-up meeting is
419:46 - where you literally do not sit down so
419:48 - it doesn't take too long so for 15
419:50 - minutes you give a brief update on what
419:52 - you're doing
419:53 - and then when we get to the end of the
419:54 - sprint you can see that there are two
419:56 - items one's called a sprint review
419:59 - and a sprint retrospective so you can
420:01 - kind of look back to see what went well
420:04 - and what didn't
420:05 - so the product increment is what we're
420:07 - trying to create in a sprint so an
420:10 - incremental product is something that is
420:14 - like i mentioned
420:15 - less featureful than the full thing
420:17 - but still
420:18 - enough functionality so that we could
420:21 - call it shippable
420:23 - so shippable means you can show it to
420:25 - your client you can show it to the
420:26 - customer they can test it out and give
420:29 - immediate feedback on it so this is the
420:32 - magic of why you do incremental
420:34 - development
420:35 - is that if the product is a failure you
420:37 - can find out right away
420:39 - so instead of building a billion dollars
420:42 - worth of software you spend a hundred
420:44 - thousand dollars worth of software and
420:46 - then you can change it or reject it
420:49 - before you waste too much money so an
420:51 - incremental approach
420:53 - saves money
420:54 - now the daily scrum is where you're
420:56 - going to get together with your
420:57 - teammates and what are you going to talk
420:59 - about well really the agenda is three
421:01 - questions
421:02 - you're going to tell everyone in your
421:05 - team what you did yesterday so yesterday
421:08 - i created the report that would show all
421:10 - the orders from a certain date range
421:12 - and it now converts into a pdf file okay
421:15 - so there's my
421:17 - accomplishment
421:18 - today what will you do today well today
421:20 - i am going to make that available to
421:23 - users or i'm going to make it available
421:25 - to administrators some other new feature
421:28 - and so something concrete
421:30 - and then
421:31 - is there any impediment is the third
421:33 - question so is there something blocking
421:35 - you
421:36 - do i need help do i need a new uh
421:39 - permissions to something do i need to
421:41 - understand something do i need someone
421:43 - else to do something for me
421:45 - but in the daily scrum you have those
421:47 - three questions
421:48 - now if this is a good way to manage
421:51 - employees because you know what they're
421:52 - doing they can report
421:54 - and they can report to each other so if
421:56 - you have a lazy employee that is just
421:58 - out at the beach
422:00 - and he says what did i do yesterday and
422:02 - he really doesn't have anything concrete
422:04 - if that happens for too often
422:07 - then it's obvious who is the dead wood
422:09 - in your tree
422:10 - and will probably either be terminated
422:13 - or looked over for
422:16 - any further
422:17 - enhancements
422:18 - now when you get to the end of a sprint
422:20 - we're going to call this event the
422:22 - sprint review
422:24 - what we want to do in a review is just
422:25 - to look back at what we created
422:28 - so in this case
422:30 - you're probably going to have your team
422:33 - around your computer showing you the
422:35 - product the digital project you made
422:37 - and in front of us is the man in the
422:39 - chair
422:40 - he is the customer he is the person that
422:43 - is paying you
422:44 - and you can show off this is show and
422:46 - tell to say
422:48 - here's what we made this is exactly what
422:50 - you told us
422:51 - and at the sprint review this is his
422:53 - chance to say
422:54 - i don't like it or perfect you did it in
422:57 - a creative way i love it and let's keep
422:59 - going in the same direction so the
423:01 - sprint review is that periodic checkup
423:03 - point with your client to make sure that
423:06 - you're on the right track
423:07 - now the retrospective is also at the end
423:10 - of the sprint and we just look at our
423:12 - own work process and we ask is there
423:15 - anything that's working really well
423:16 - or is there something that we should
423:18 - change
423:19 - and what can we commit for the next
423:21 - sprint
423:22 - so a retrospective just kind of gives us
423:24 - a chance to do some self improvement if
423:27 - this is relevant to you then check out
423:28 - this other video on the four roles that
423:31 - you would expect to see in a software
423:33 - development team
423:34 - also if you'd like to see the entire
423:36 - playlist of things that we've talked
423:38 - about in the business of apps i'll put
423:39 - that link here as well so thank you for
423:41 - coming and join me again for class
423:47 - [Music]
423:54 - hi welcome to the business of building
423:56 - applications this is a course to help
423:58 - you as a manager of a small business or
424:00 - a team in building mobile apps for good
424:03 - solutions we've got several chapters in
424:05 - this course that we've already covered
424:07 - and we are coming up here to number
424:09 - seven which is called hiring the team
424:12 - in this video we're going to be talking
424:13 - about writing a job requisition and a
424:16 - good job posting that will get the
424:18 - people that fit your needs we've got one
424:20 - more topic ahead of us which is called
424:22 - future trends
424:24 - my name is chad slooter and i teach
424:26 - computer science and software
424:27 - development at grand canyon university
424:30 - if any of this looks interesting to you
424:31 - make sure you subscribe so that you get
424:33 - all of the information that will help
424:35 - you succeed in your venture
424:38 - so in this video we're talking about
424:40 - writing a job requisition and attracting
424:42 - the right people that will make your
424:44 - success a reality so first of all we're
424:48 - going to talk about the difference
424:49 - between an internal and an external
424:52 - requisition
424:53 - so if you're writing an internal wreck
424:55 - it's because you're working at a company
424:57 - that needs to know these basic things
425:00 - and so i probably don't need to fill out
425:02 - the form for you you can see
425:04 - what your company would like but i would
425:06 - predict that you're going to be asked
425:08 - several of these things so you're going
425:10 - to be picking a title you might not have
425:12 - any liberty and what you call that job
425:14 - because there's already predefined jobs
425:17 - you probably have a salary band that you
425:20 - are offering to your employees so you
425:23 - don't really know exactly
425:25 - uh what your upper and lower limits are
425:27 - until you talk to your
425:28 - boss and the company controller
425:32 - you will probably have some requirements
425:34 - that you put in there and you probably
425:36 - have some kind of a contract and so
425:38 - sometimes you see the words salary and
425:40 - exempt
425:41 - or non-exempt which is rather confusing
425:45 - so exempt means they are exempt from the
425:47 - rules of
425:48 - overtime and union representation so
425:52 - these are the people that you can have
425:53 - work 80 hours a week and not pay them
425:56 - any extra money you'll probably be asked
425:58 - to set a budget so how much do you
426:01 - expect to pay here and of course
426:04 - you're trying to find somebody that will
426:06 - be willing to work less than that
426:08 - now quite different as the strategy of
426:10 - producing an external posting because
426:14 - this is what your candidates will see
426:16 - not the internal documents so the
426:19 - differences are because there's
426:21 - differences in goals the internal
426:23 - documentation is to meet your business
426:24 - goals your hr requirements
426:27 - and to budgeting probably
426:30 - so when you write an external document
426:32 - you have to clear away any of the
426:34 - language that you're comfortable with as
426:36 - an insider of the company and think
426:39 - about people that are on the street or
426:41 - working at other companies and they
426:43 - don't know anything about you and so
426:44 - you're trying to target the language to
426:46 - the people that will likely fit the role
426:48 - the best so
426:50 - you probably want to start off with this
426:52 - question about
426:53 - what do i really require for this person
426:56 - to have on the day they enter the job
426:59 - and what would be nice to have because
427:02 - if you put too many requirements of
427:04 - course you're not going to have anyone
427:06 - actually apply
427:07 - so i picked a few job postings out of
427:10 - indeed.com that are currently being
427:12 - posted where i live and you can see here
427:15 - that this was for a mobile developer
427:17 - and the company called
427:19 - signing day sports so i don't know
427:21 - anything about the company other than
427:22 - the fact that they are looking for a
427:24 - mobile developer
427:25 - notice they have the qualifications
427:27 - listed here so they are looking for a
427:29 - degree
427:30 - they want some experience
427:32 - and they they mention some specific
427:34 - languages and frameworks that they work
427:37 - on
427:38 - so it looks like react native is what
427:41 - they're building in so they've already
427:43 - decided the technology and if you don't
427:45 - know that technology then you're
427:47 - probably not a very good fit
427:49 - however you can see that they have
427:51 - familiarity as a requirement so these
427:53 - are the nice to haves and so things that
427:56 - are not necessarily
427:58 - directly on the job
428:00 - and the first day so you have to
428:02 - distinguish between
428:03 - things that you need to have and then
428:05 - what you're willing to train them on so
428:08 - if you find a really good employee who
428:10 - has got most of the skills then you can
428:11 - probably make them work
428:13 - here's another one you notice they use
428:15 - the quote must in capital letters so
428:17 - they obviously have a hard fast rule
428:20 - so this comes from the nikola motor
428:22 - company so this is a company in phoenix
428:24 - that makes electric trucks
428:26 - and i think they want to be the next
428:28 - tesla
428:29 - anyway they're looking for android
428:30 - development so specifically you must
428:32 - have
428:33 - proven experience in android but then
428:36 - notice below they have some other things
428:38 - that they probably will not get in most
428:41 - of their candidates so the android
428:43 - compose framework
428:45 - so
428:46 - if they find somebody with the android
428:48 - compose framework they're going to
428:50 - guarantee them they're going to have an
428:52 - interview likely so next let's talk
428:54 - about what would be beneficial in a
428:56 - cross-discipline candidate so if you're
428:59 - looking specifically for somebody with
429:00 - experience in another field this would
429:02 - be important to put in your job
429:04 - requisition in the public so we're
429:06 - looking for the core developer skills
429:08 - here but you might have other things
429:10 - such as somebody that's worked in a
429:13 - travel environment before have is your
429:16 - product
429:17 - geared toward travel agents or for
429:19 - online purchases of airplane tickets or
429:21 - something then maybe you would want
429:23 - somebody that's worked in that field are
429:25 - you working in a medical plan are you is
429:28 - your app serving doctors or nurses or
429:30 - hospitals
429:31 - then if somebody comes to you with a
429:33 - degree in nursing and software
429:35 - development which would be a quite an
429:37 - odd combination that would be certainly
429:39 - a valuable thing and of course your
429:42 - automobile mechanic could be another
429:43 - example one of my students actually has
429:45 - these two things now and wants to find a
429:48 - job working where some software is in a
429:51 - garage environment
429:52 - military experience a lot of students
429:55 - that i teach come from the military and
429:58 - they're trying to transition into a new
430:00 - career
430:01 - and my career advice to them is if you
430:04 - are looking for a job as a software
430:06 - developer why not go back to the
430:08 - military and work as a civilian
430:10 - if you are serving military clients with
430:13 - your app then maybe these are the kind
430:15 - of people you want to hire people that
430:16 - have worked in the military they
430:17 - understand it and they also know how to
430:20 - write code and of course
430:21 - education comes to mind as if you're
430:23 - trying to serve schools so it's not
430:25 - really essential that your software
430:26 - developer is cross
430:28 - professions is it you'll have to decide
430:30 - that but if it is important to you then
430:32 - you probably want to put it in as one of
430:34 - those nice to haves how about the
430:36 - intangibles so you're going to have a
430:38 - variety of people looking at you and
430:41 - they don't really know what you expect
430:44 - so think of your own expectations of
430:46 - what your team is going to be
430:48 - and see if you can filter out the people
430:50 - that really don't matter so for instance
430:53 - are you going to be working in close
430:56 - teamwork with like agile systems or are
430:58 - you looking to hire a single loan
431:01 - developer
431:02 - so that would be important for the
431:04 - people to know upfront before they apply
431:06 - to your job
431:08 - so some people have strong preferences
431:09 - both ways now the question is what is
431:11 - your preference
431:13 - so if you're looking for a certain
431:14 - person make sure you put it in the
431:16 - description
431:17 - what is your parameters what are you
431:19 - going to expect your software developer
431:21 - to be
431:22 - are you going to have strict guidelines
431:24 - deadlines are you going to have code
431:26 - that must be written in a right format
431:28 - do you have specific languages and
431:31 - frameworks that they must work with
431:33 - or are you going to be so flexible that
431:36 - they can choose their own technologies
431:38 - and their own ways of building things
431:40 - so
431:41 - if you're comfortable with either one of
431:43 - these
431:44 - then you probably should specify in your
431:47 - job requisition how you want it to look
431:49 - because once again
431:51 - people are going to waste your time if
431:54 - you offer them a job that they really
431:56 - don't fit with
431:58 - how do you handle ambiguity so are you
432:00 - going to have very detailed designs are
432:04 - you going to require people to create
432:06 - detailed designs or are you more
432:08 - flexible to say let's just see how
432:11 - things turn out
432:12 - and what is the uh
432:15 - what is the structure there be very
432:17 - clear about what you expect whether it
432:19 - is either
432:20 - very strong or very weak in your picture
432:24 - also when you look at job postings i see
432:26 - these two
432:28 - very often so what kind of intangible do
432:30 - you have at your company
432:32 - are you called
432:34 - fast-paced and goal-oriented or are you
432:37 - more flexible and work life balance is
432:40 - important to you
432:42 - now honestly i've never applied to
432:44 - anything that had the word fast-paced
432:46 - environment in it because i really think
432:49 - that a place like spacex would be an
432:51 - awesome experience if you have
432:54 - 180 percent of your life to give to them
432:57 - however i have other things in life that
432:59 - i do besides work and so
433:02 - a job description that had fast-paced
433:04 - environment would likely just turn me
433:06 - off and say
433:08 - i don't think i would turn out for more
433:09 - than a year
433:11 - in a high pressure system like that so
433:13 - how are you going to treat your
433:14 - employees are you expecting them to work
433:17 - as a startup and dedicate their whole
433:19 - life
433:20 - or are you looking for them to
433:22 - produce a balance between what they do
433:25 - in their time away from work and what
433:27 - they do at your job so
433:30 - whatever your expectations are it's
433:31 - probably a good idea to put them right
433:33 - in the job posting now there's also some
433:35 - hr language that you should include in
433:37 - your posting so
433:40 - probably required by the company policy
433:43 - or even state law to have
433:45 - non-discrimination phrases
433:47 - you should have probably some company
433:49 - language
433:51 - the company probably has a statement of
433:53 - their purpose or they have something
433:55 - that goes into every job description and
433:57 - so make sure that you include that or if
433:59 - you're your own company and you're a
434:01 - startup you might want to think about
434:03 - what your story is why would people want
434:05 - to work for you
434:06 - if you're the greatest thing in the
434:08 - world then tell us what it is
434:10 - so you're trying to sell yourself when
434:12 - you put the posting out there are you
434:14 - going to require citizenship or will you
434:16 - provide visa and sponsorship that's an
434:19 - hr thing how about this remote work or
434:23 - on-site work are you comfortable with
434:25 - each
434:25 - so if you're comfortable with remote
434:27 - work you can have a wide group of talent
434:30 - from all over the country or even around
434:32 - the world
434:33 - and if you're if you're a more face to
434:36 - face person then of course you're going
434:37 - to be limited by the people that live in
434:39 - your area so that's a decision that
434:42 - you're going to have to decide based on
434:45 - your comfort comfort level with that
434:46 - that system so whatever the case is make
434:49 - sure that you are up front with your
434:50 - employees of how you expect them to work
434:53 - here
434:54 - also think of adjacent skills so you
434:57 - might have your must have lists but
434:59 - don't be too restrictive on it because
435:01 - you want to have enough people
435:03 - that can really do the job even though
435:05 - they might not have the exact experience
435:07 - you need so a software developer
435:10 - with web experience can probably
435:13 - transition into mobile development
435:14 - pretty easily
435:16 - it depends on how many experience years
435:18 - they have
435:19 - languages also are very similar so the
435:22 - syntax of java and swift and c sharp and
435:25 - c plus plus and javascript they're very
435:28 - similar
435:29 - obviously those that are experts in each
435:31 - of these are going to argue with me to
435:32 - say there's huge differences but
435:34 - honestly these are
435:35 - all the
435:37 - descendants of the original c language
435:39 - these are c like languages and so if you
435:43 - have an expertise in one of these then
435:44 - you can probably pick another language
435:47 - that is in that same family
435:49 - also think of the structure of how
435:51 - software is designed and architect
435:53 - so the model view controller the mvc
435:55 - frameworks and the and this the setup
435:57 - there are very similar no matter whether
435:59 - you're working in php or in java or
436:02 - javascript
436:03 - a lot of the strategies and designs are
436:05 - the same so if they've got
436:07 - heavy experience in a framework that's
436:09 - not the framework you're on they're
436:11 - probably going to have a lot of lessons
436:13 - that they can carry in and so adjacent
436:15 - skills work well so let's say if we had
436:18 - a situation where we have a react native
436:20 - developer that's the job we want and you
436:23 - get these applications that come from
436:24 - people with expertise in cyber security
436:27 - or a web designer or a database
436:30 - administrator or embedded systems or
436:32 - electrical engineering
436:34 - don't throw them out
436:36 - and don't restrict them from applying if
436:38 - you are willing to do the training
436:41 - so once again think about what is
436:44 - essential and what can be trained i
436:46 - would rather pick somebody who is an
436:48 - expert web designer and it can
436:50 - demonstrate a great portfolio but yet
436:53 - has not learned react native they've
436:55 - proved themselves in some other field
436:57 - that is adjacent
436:58 - and so you might want to think about
437:00 - inviting
437:01 - related degrees and related experience
437:04 - to apply if they can prove that they're
437:06 - a good employee
437:07 - now i would also recommend that you ask
437:10 - people to apply with a portfolio a
437:13 - portfolio of course is a collection of
437:15 - things that you can
437:17 - see that people have actually done so
437:19 - let's take a look at an example of a
437:21 - portfolio and you tell me if you would
437:24 - like to hire this person or not so
437:26 - holland a coin was one of my students
437:29 - for several years at grand canyon
437:30 - university and she just graduated
437:33 - now she created for herself a portfolio
437:37 - of everything that she's done in her
437:39 - university experience so let's take a
437:41 - look at her projects
437:42 - so she's built this tool here in java
437:46 - spring so you can see that right away
437:48 - she knows how to program in java
437:50 - and she sorted it nicely so that you can
437:52 - see each of the languages that she's
437:53 - worked in and the projects that relate
437:56 - to them so let's say i want to see what
437:57 - she's done in java
437:59 - and let's see what
438:01 - is going on in i heart rate
438:03 - so i heart rate was something she did in
438:06 - the spring of 2020 you can see all the
438:08 - different languages that she's built
438:10 - with the design and the final product of
438:13 - what it works with so i believe
438:15 - this was a watch application so that an
438:18 - apple watch that would just record your
438:20 - heart rate and put it into a database
438:23 - and then you can have some web reports
438:25 - to go along with it
438:26 - so i recommend to all my students that
438:28 - they create one of these portfolios
438:30 - because it demonstrates in a concrete
438:33 - way
438:34 - what you know how to do
438:36 - so as an employer you get to know a lot
438:38 - about your candidates just from looking
438:40 - at their portfolio as a matter of fact
438:43 - there's not really very good information
438:45 - that you can gather at a job interview
438:48 - just by asking them questions and having
438:50 - them tell you generic answers
438:52 - so
438:53 - a portfolio is a great answer to the
438:56 - question is
438:57 - can you build an app
438:58 - now there's probably some other things
439:00 - that i failed to include and how you
439:02 - should write a job requisition so those
439:04 - of you that are
439:06 - looking to hire and have hired people
439:08 - tell me in the comments below what has
439:10 - worked for you the next video in this
439:12 - course is about the future trends of
439:15 - technology and especially with mobile if
439:17 - you'd like to see the entire playlist
439:19 - i'll put a link here so you can go back
439:21 - and catch up on all the great things
439:23 - about the business of running apps
439:25 - please subscribe if you like this and
439:27 - welcome back to class
439:31 - [Music]
439:38 - hi and welcome to the business of
439:39 - building applications this is a course
439:42 - about mobile app development in this
439:44 - section which is number seven we're
439:46 - talking about hiring the team now this
439:48 - is an assignment video so we're talking
439:50 - about activity 7-1 so if you're one of
439:53 - my students at grand canyon university
439:55 - this is what i'm going to assign you for
439:57 - homework what we're going to talk about
439:59 - in this assignment are the team roles
440:01 - now in a previous video we talked about
440:04 - four background specialties that would
440:06 - be in a lot of teams so this is the
440:09 - project manager
440:11 - the designer
440:12 - the front end and the back end
440:14 - developers now there are probably other
440:17 - roles in a team but we're focusing on
440:19 - these four so in this assignment what i
440:22 - want you to do is write a two-part paper
440:25 - that compares the responsibilities of
440:27 - these four roles so essentially i want
440:30 - to ask you in part one of the paper what
440:32 - do these people do what's their
440:34 - essential job function and how do they
440:36 - add value to your team then the second
440:39 - is
440:40 - in your particular situation based on
440:43 - your expertise and your company or your
440:47 - startup company
440:48 - where are you going to fill these roles
440:50 - who are the people that are most likely
440:52 - to join you now that could be that
440:54 - you're going to fulfill them yourself or
440:56 - you've got friends in mind or you've got
440:59 - a way to go and recruit them so this is
441:02 - the two-part solution here so
441:04 - instructions for part one i want you to
441:06 - answer the question what important
441:08 - service do each of these members provide
441:11 - what education and experience would you
441:13 - expect that these people would have so
441:16 - if you were writing a job posting and
441:18 - trying to hire them
441:20 - what kind of experience and education
441:22 - would you put as a requirement what
441:24 - strengths does this person bring to the
441:26 - team so is a designer just as good as a
441:30 - developer or does one do something
441:32 - slightly better than the other
441:34 - in part two i'm going to ask you if
441:37 - there are any opportunities for you not
441:39 - to hire them
441:41 - so for instance can you double them up
441:43 - can you outsource the role do you have
441:46 - to pay a full time
441:47 - now are there any of these roles that
441:49 - can be combined into a single person for
441:52 - instance do you have a friend who is a
441:54 - developer and a designer or are you good
441:57 - at this on your own so what is your case
442:00 - what's your situation how are you going
442:01 - to save money which of these are the
442:03 - most expensive to fill so based on your
442:05 - market research
442:07 - which of these do you think
442:09 - are the most critical and you would
442:10 - never outsource or which of these is
442:12 - where you could save some cash
442:14 - so then for your role are there any
442:16 - roles that can be considered minimal or
442:19 - are they all equally important to the
442:22 - development of your app so only you can
442:24 - really answer that based on how well you
442:26 - work now describe your own set of skills
442:28 - how strong are you in those four roles
442:31 - is there anything that you feel like you
442:32 - would want to do yourself
442:34 - or is there something that you feel
442:36 - inadequate on and you would want to hire
442:38 - it out so that's part two and analyzing
442:40 - how well these four roles would fit in
442:43 - your team so if you're one of my
442:44 - students this is what i would expect you
442:46 - to send me a word document that has two
442:48 - parts so part one is a description of
442:52 - what these four roles are and how they
442:54 - add value to the team and then part two
442:56 - is a recommendation for you personally
442:58 - how would you plan to consolidate or
443:01 - fill these roles based on your own
443:03 - expertise and the people that you
443:05 - already work with
443:06 - and so that's the goal here for this
443:08 - assignment
443:09 - so if you're not one of my students feel
443:10 - free to put in the comments below what
443:12 - you think of these roles and how
443:14 - valuable are they for instance is a
443:16 - designer a critical person on your team
443:19 - or have you worked on a team where the
443:21 - designer is you as the programmer and
443:23 - how well did that go for you now if you
443:25 - would like to subscribe you can see the
443:27 - rest of the channel and see what the
443:29 - ideas are on this course i will put a
443:31 - link to the full course so that you can
443:33 - see the other videos and the lessons
443:35 - about app design thanks for watching and
443:37 - i'll see you in the next class
443:40 - [Music]
443:46 - hi and welcome to the business of
443:48 - building applications this is a course
443:50 - on mobile development and the business
443:52 - decisions that go along with it so we're
443:54 - on part seven here which is a seven of
443:56 - eight chapters and we're talking about
443:58 - hiring the right people for your team so
444:00 - this is a homework assignment video so
444:02 - if you're one of the students in my
444:04 - class at grand canyon university this is
444:06 - what i'm going to ask you to do so we're
444:08 - going to write an internal requisition
444:11 - form so if you are a hiring manager
444:13 - let's say you're now in a medium to
444:15 - large size company you're going to have
444:18 - certain documents that you have to fill
444:20 - out to justify why you need a new person
444:22 - on your team so put yourself in the role
444:24 - of a team manager of a medium to large
444:26 - company assume that there are multiple
444:28 - levels of management and multiple
444:31 - departments in the company in other
444:32 - words a bureaucracy so what i want you
444:35 - to do is to assume that you're going to
444:37 - fill one of the roles in your team that
444:39 - we've talked about in a previous
444:41 - activity so remember that was the
444:42 - project manager the designer the
444:45 - front-end developer and the back-end
444:47 - developer or if you've got another role
444:48 - that's just as critical and i haven't
444:50 - thought of then you could use that one
444:52 - too so what i want you to do is to write
444:54 - an internal requisition so think of how
444:58 - you would justify adding a person to
445:00 - your company so sometimes companies are
445:03 - very hesitant to hire because
445:05 - people are expensive so what we want to
445:07 - do is justify it with a certain goals so
445:10 - in the first part make sure that you
445:12 - include a job title that re
445:14 - that coordinates with the rest of the
445:16 - company so don't invent something new
445:18 - see if you can figure out what your
445:20 - company already calls people make sure
445:22 - that you get the right department and
445:24 - you put your name for the hiring manager
445:26 - and you probably have to just justify it
445:28 - by what this person is supposed to do
445:30 - right a job description and then you
445:32 - have a reason why a person is needed
445:36 - so did somebody quit or are you creating
445:39 - a new position so depending on your
445:41 - company one of those would be easier to
445:43 - justify and get authority for hiring
445:46 - than the others would so let's keep
445:48 - going with part two of what you would
445:49 - put in the internal requisition so you'd
445:52 - have to do a salary estimate so you
445:54 - don't just invent numbers out of thin
445:56 - air you would have to justify it so if
445:58 - your company already has very fixed
446:00 - salary bands you might call this a
446:03 - person level a or b or 3.5 or whatever
446:06 - your system is and if you don't have a
446:09 - system like that
446:10 - then you would probably have to justify
446:12 - it based on averages from
446:15 - websites like salary.com or someone that
446:18 - is like glassdoor and they are
446:20 - estimating what is average for your area
446:23 - so remember we hire people at average
446:26 - salary and then we say to our customers
446:29 - that we hire the best in the world so i
446:31 - don't know how that works but anyway
446:32 - that's usually how you justify a salary
446:35 - range and then you put a start date on
446:37 - it to say this is a going to coordinate
446:40 - with either our fiscal year or maybe a
446:42 - project start date and then we have the
446:44 - number of hours that we plan to work so
446:47 - sometimes you can hire part-time and of
446:49 - course full-time equivalent would be 40
446:51 - hours a week and then how long is this
446:53 - going to work so are you going to have
446:55 - this person as a permanent employee or
446:57 - are you going to keep them on until the
446:58 - project's over so that's some of the
447:00 - things that you would justify in an
447:02 - internal requisition so i forgot to put
447:04 - a few others so contract type is this
447:06 - permanent or is this uh temporary what
447:09 - are the qualifications are you going to
447:10 - expect to have a degree what kind of
447:12 - degree or maybe just work experience
447:14 - so trying to fit the role is appropriate
447:18 - of course and then the budget so
447:21 - you can put down what you expect to
447:24 - employ the person as and of course the
447:26 - game is you try to find somebody that
447:28 - will tell you that they're willing to
447:29 - work for less
447:30 - and if they are then you hire them so i
447:33 - don't know if that's morally
447:34 - objectionable but i think that's how
447:37 - most people do things now if you were
447:39 - one of my students this is what i would
447:40 - expect you to send to me you would send
447:42 - me a word document that has the internal
447:44 - requisition for a position on your
447:46 - development team filling out all of the
447:48 - details that are in the items that i
447:50 - just showed you so this isn't really a
447:52 - thought-provoking assignment it's more
447:54 - of an exercise to investigate where you
447:57 - work
447:57 - and find out what kind of things that
448:00 - are out there so your requisition
448:03 - at your company will probably look like
448:06 - nothing
448:07 - similar to what other people's are doing
448:08 - but it will not be identical and if
448:10 - you're not working at any company then
448:12 - of course you've got some flexibility to
448:14 - say
448:15 - what you would think would be a likely
448:18 - way to requisition a new an employee if
448:20 - you're not one of my students then you
448:22 - can put down in the comments below what
448:23 - you think about the experience of how
448:26 - your company works and how difficult it
448:28 - is to justify a new person on your team
448:32 - make sure you subscribe to the channel
448:33 - if you haven't so far and i will put a
448:35 - link to the entire playlist for this
448:37 - course and other courses as well so that
448:39 - you can join me again in the next class
448:42 - thanks for watching
448:45 - [Music]
448:52 - hi and welcome to the business of
448:53 - building apps this is a course about
448:55 - mobile app development and the business
448:57 - decisions that go along with it so we're
448:59 - in chapter seven of eight chapters we're
449:02 - talking about hiring the team in this
449:04 - video we're talking about an assignment
449:05 - that i would give you if you were one of
449:07 - my students so this is homework so
449:10 - activity 7.3 which is about creating a
449:13 - job posting so remember we're trying to
449:15 - put you in the role of the team lead and
449:18 - you're trying to justify why you should
449:20 - hire somebody now once you've got
449:22 - approval for that how are you going to
449:24 - attract the right members to your team
449:26 - so we're going to actually write a job
449:28 - posting using examples that we would
449:30 - find on indeed or on glass door or other
449:33 - places and we want to apply the
449:36 - principles that were taught in previous
449:37 - videos of what makes an effective job
449:40 - posting and how you can make it fit with
449:42 - the people that you want to hire so
449:45 - choose one of these four roles
449:47 - whether it's the project manager the
449:49 - designer the front end or the back end
449:51 - or if you've got another role in mind
449:53 - you could probably use that but somebody
449:55 - that is relevant to your app development
449:57 - process
449:58 - and we want to be able to study the
450:01 - materials for this topic so that means i
450:03 - want you to go back and look at previous
450:04 - videos that i've created they give
450:07 - recommendations for how to post so what
450:09 - are we going to put into our job posting
450:11 - so this is some of the things you're
450:13 - going to have the job title a clear
450:15 - summary of what the job will do the
450:17 - responsibilities on a daily basis or on
450:19 - a monthly basis or whatever your plan is
450:22 - we expect to put the qualifications
450:24 - there so how much education and
450:25 - experience or licensing or
450:27 - certifications does this role need what
450:30 - are the benefits that you provide to
450:31 - them and describe your company why they
450:34 - should work for you
450:36 - and so some of the recommendations that
450:38 - i put there earlier would give an idea
450:40 - of the style you are and what kind of a
450:44 - fit that most people would want to apply
450:46 - for so make it look attractive but of
450:49 - course make it look realistic as well
450:51 - so
450:52 - what i want you to then do is to
450:54 - take a look at what you wrote
450:56 - and do a one page self evaluation
451:00 - compare this
451:02 - to where other people have written
451:04 - so
451:05 - yours will be different than what you
451:07 - would find on other companies so for
451:09 - instance if you worked in phoenix where
451:11 - i do you would probably think find
451:13 - things like for intel or american
451:16 - express or carvana
451:18 - or paypal some of those are the big
451:20 - companies around here
451:22 - how do they differ from what you plan to
451:25 - do and so
451:27 - what i want you to do is to say if
451:28 - you've borrowed from another posting
451:32 - compare the two so i think
451:35 - frequently that's how a lot of job
451:37 - postings are created is that the manager
451:39 - copies and pastes from a other company's
451:42 - work and then tweaks it so if that's
451:44 - your process then tell me
451:46 - what you changed what you deleted what
451:48 - you added because it's probably not
451:50 - identical to other companies as well so
451:53 - that's what i want you to do is evaluate
451:54 - what you wrote so if you were one of my
451:56 - students this is what i would expect you
451:58 - to turn in
452:00 - send me a word document that has the job
452:02 - posting and then following that an
452:04 - evaluation kind of a critique of why
452:07 - this works what makes your posting
452:10 - effective what did you emphasize and so
452:12 - that would be a reflection to on what
452:15 - you just wrote so if you're not one of
452:17 - my students then feel free to write in
452:19 - the comments below about some of the
452:21 - greatest job posting errors that you've
452:23 - seen things that are laughable perhaps
452:26 - or things that would make you run red
452:28 - flags you might call them of why you
452:30 - would never apply to a company based on
452:33 - what they wrote in their job description
452:35 - so make sure you subscribe to the
452:36 - channel so there's lots of other points
452:38 - to this course and there's a playlist
452:40 - here that would give you the other items
452:43 - so thanks for watching and make sure
452:44 - that you come back for the next class of
452:47 - mobile app development
452:51 - [Music]
452:58 - hi and welcome to the business of
452:59 - building applications this is a course
453:01 - for people that are business leaders or
453:04 - entrepreneurs so we've covered several
453:06 - items already in this course and we are
453:09 - on the last of our chapters so we are
453:12 - going to look in this video about 12
453:14 - trends that i see in the next decade or
453:17 - so regarding mobile technology my name
453:20 - is shad slooter and i teach computer
453:22 - science and software development at
453:24 - grand canyon university so if this looks
453:26 - interesting make sure you subscribe and
453:28 - then you can come to class with me on a
453:30 - daily basis so let's get started here
453:32 - we're talking about 12 mobile tech ideas
453:36 - that are coming or developing in the
453:38 - near future and so some of these are
453:40 - here but they just don't work very well
453:42 - and others will grow in popularity so
453:45 - with the first one that i'm going to put
453:47 - on the list is cloud computing and cloud
453:49 - computing is far more than just running
453:52 - a server on the cloud it means that you
453:54 - are able to offload a great deal of the
453:58 - work that your phone does as a low
454:00 - powered device and put it in the hands
454:03 - of super computers so the best way to
454:05 - show you what is available is just to go
454:08 - to
454:09 - cloud.google.com for example google is
454:12 - one company that has great cloud
454:13 - services so what do they do they have
454:16 - everything from machine learning and ai
454:19 - to storage to ways to make
454:21 - your finances work
454:23 - so
454:24 - you don't rely on your computer as much
454:27 - as you used to
454:28 - to actually do heavy computing items so
454:32 - for instance think of the voice
454:33 - recognition tools that are on your phone
454:35 - right now so siri and cortana can
454:38 - understand you pretty well
454:40 - do you really think that your phone is
454:42 - doing all of that voice recognition no
454:45 - it's not they're sending your recorded
454:47 - message
454:48 - to the cloud and the super computers in
454:51 - the data centers are doing the analysis
454:53 - on your voice and then immediately send
454:56 - back what they think the text is and so
454:59 - all of these cloud services are a huge
455:01 - variety of things from voice recognition
455:04 - to all kinds of processing power
455:07 - and your phone
455:08 - doesn't really have to do the work it
455:10 - just has to connect you to the place
455:12 - that does the work for you and so i see
455:14 - cloud computing growing even more than
455:17 - it is today so the next trend that i see
455:19 - a greater emphasis on is artificial
455:22 - intelligence and so the
455:25 - major software developers like google
455:27 - and microsoft
455:29 - have great tools that allow developers
455:31 - like you and me to simply
455:34 - plug in libraries and functions and apis
455:38 - and we can just take advantage of it so
455:40 - i'm not an iai expert but i can add ai
455:44 - to my phone apps because of these
455:46 - plugins you can see that this is
455:49 - microsoft's
455:51 - collection of things let's look at some
455:53 - of them that we can understand so the
455:55 - top right corner it says text analytics
455:58 - so with just a simple plugin with an api
456:01 - call on your application you can do
456:03 - sentiment analysis it says on any kind
456:06 - of text that is either written or spoken
456:08 - to you so you can find out if somebody's
456:09 - in a good mood if they like your review
456:11 - if they hate your business and the
456:13 - artificial intelligence agent will give
456:15 - you a score and so that that's an ai
456:17 - example and you don't have to do much
456:19 - programming other than tell it analyze
456:21 - this
456:22 - so the next item here in the center is
456:24 - the ai route planner so for instance
456:27 - when you start using google maps or
456:30 - microsoft maps
456:32 - you don't have to compute the the best
456:35 - route that a car should take there's a
456:36 - ai agent that is doing that for you and
456:39 - so like i said you don't have to be the
456:41 - ai expert you just have to be a
456:42 - programmer that knows how to access data
456:45 - points and endpoints of apis so look at
456:47 - the other things there's language
456:49 - understanding and
456:50 - video indexing so you can actually
456:52 - analyze videos as they've been processed
456:55 - and computer vision down in the bottom
456:57 - is also where you can recognize objects
456:59 - that are in the field of view of a
457:00 - camera so
457:02 - this is where ai is as of right now i
457:06 - just see this growing and ai agents
457:08 - becoming better and better and helpful
457:11 - in their in their process of making our
457:13 - apps more and more powerful so so i
457:15 - don't mean that ai is going to become
457:16 - like the overlord robots that are going
457:19 - to control our life and ruin our
457:21 - civilization
457:23 - ai is just a matter of doing computing
457:26 - that
457:26 - makes the apps work more efficiently
457:29 - so the next item up is cross platform
457:32 - development so
457:33 - the reason why i say this is going to be
457:35 - a trend in the future is because
457:37 - people are talking about it a lot and
457:40 - trying to do some work on it but look
457:41 - here at the actual statistics about what
457:44 - apps are in the store today
457:46 - so you can see that the android store is
457:48 - much bigger as far as the number of apps
457:50 - go
457:51 - and the overlap here shows the number of
457:53 - apps that are cross-platform they've
457:56 - been
457:56 - developed in tools like react native or
458:00 - flutter or some other tool to
458:02 - have one code base between the two
458:05 - but the majority of apps are written in
458:07 - a single platform environment why is
458:10 - that is because that's the best
458:11 - experience for the user and the actions
458:14 - actually work well
458:16 - and so there's a lot of improvement that
458:18 - needs to be done on cross-platform
458:21 - application development and so
458:23 - i can only see it as a trend that will
458:25 - increase
458:26 - google is putting quite a bit of work
458:29 - into their cross-platform tools such as
458:31 - flutter
458:32 - and their current edition of kotlin is
458:36 - compiling the guts of your application
458:39 - right now and leaving the user interface
458:42 - to custom development so
458:44 - there's attention being paid to this and
458:46 - so i would expect that it's only going
458:48 - to grow from its humble place that it is
458:51 - in right now the next is m-commerce so
458:54 - you've heard of e-commerce of course is
458:56 - when we've turned stores into websites
458:59 - so m-commerce is the idea that you can
459:01 - run your entire store on a mobile phone
459:04 - there's a couple of reasons for that one
459:06 - is the idea of responsive design
459:08 - applications so if you have a web app
459:11 - that works well on your phone and your
459:13 - tablet and your computer then you can
459:16 - use your phone
459:17 - in a greater degree so when you're out
459:20 - in the store or the warehouse you don't
459:22 - have to have your laptop with you and so
459:24 - that's one reason why computing on the
459:26 - phone is growing and eventually will
459:29 - hopefully replace your desktop for the
459:31 - majority of the purpose that it needs so
459:33 - you've probably seen this in some of the
459:35 - coffee shops you've been to where they
459:37 - don't even have a cash register or point
459:39 - of sale computer they have a tablet or
459:41 - they have an ipad or something like that
459:43 - and so that is m computing that is
459:46 - running your entire business on a mobile
459:48 - platform and so i just see that as a
459:51 - great way for people to
459:53 - save time and save money and save
459:55 - devices so m computing will probably be
459:58 - a growth area so consider that an
460:01 - opportunity if you're an app developer
460:03 - so virtual reality shows up next so
460:06 - virtual reality has been a great thing
460:09 - for the future it has always been a
460:11 - great thing that's going to happen in
460:12 - the future right now virtual reality
460:15 - pretty much stinks this is how i see it
460:18 - is people get headaches they get
460:20 - nauseated it's as good as the 3d
460:23 - televisions were what some years ago
460:26 - it was a great technology that the
460:28 - engineers loved and they promoted
460:30 - and nobody bought them because nobody
460:33 - cared that their tvs were
460:34 - three-dimensional
460:35 - and it seems to me a little bit like
460:37 - that right now with vr
460:39 - nobody really is buying into this even
460:41 - there's a great deal of research being
460:44 - put into it so the potential then is
460:46 - amazing if we could get vr that doesn't
460:50 - stink
460:50 - then we are going to have a great
460:54 - view for the future so right now mobile
460:56 - phones on like the google cardboard
460:59 - they're pretty much dead if you go walk
461:01 - through goodwill or any second-hand
461:03 - store or any garage sale you're gonna
461:05 - see all these uh headsets that were
461:07 - designed to hold mobile phones and
461:09 - obviously everyone tried them and nobody
461:11 - liked them so what's this what's the
461:13 - current share so if you look at the
461:15 - actual headsets that are designed for
461:17 - virtual reality for playing serious
461:19 - games and you plug into xboxes or
461:22 - high-end computers you're going to see
461:23 - that oculus is the market leader they
461:26 - have about fifty percent of the share of
461:28 - all the models that are currently
461:30 - connected to devices this is a data here
461:32 - that comes from steam so we're talking
461:34 - about games here
461:35 - and you can see that oculus
461:38 - has this rift and quest and the rift ii
461:41 - or the wrist rift s i'm sorry and so
461:44 - they're obviously the leader so
461:47 - if we can get a mobile phone to work as
461:49 - well as an oculus
461:51 - then maybe we'll have some potential
461:53 - there so let's keep it in the future
461:55 - category for a little bit longer virtual
461:57 - reality may eventually become really
462:00 - cool and people will adopt it augmented
462:03 - reality probably has a little bit better
462:04 - future because
462:06 - as you can see the applications in
462:08 - augmented reality allow you to stay in
462:10 - touch with the real world you don't have
462:13 - to stumble around in a headset
462:15 - so the
462:17 - people that i work with at grand canyon
462:18 - university tell me that the best
462:21 - experience that they have in their
462:23 - students and working with ar is with
462:26 - the microsoft tools so microsoft makes
462:29 - the hololens and they have version 2 out
462:32 - and you may have seen in the recent news
462:34 - that the pentagon has awarded
462:37 - some contract worth billions of dollars
462:39 - to microsoft because they have this
462:42 - augmented reality headset that really
462:45 - really does work pretty well in
462:46 - comparison to the others so you can see
462:49 - a couple of applications here
462:51 - is that here's a student it looks like
462:53 - and he is uh pulling apart the spinal
462:56 - column of a of a model here and you can
462:59 - look at it in detail
463:01 - even though you're you're still looking
463:03 - at the world around you it's just kind
463:04 - of the superimposed image over your
463:06 - glasses so here's another application of
463:09 - the technology looks interesting so you
463:10 - go to ancient rome
463:13 - and you see these ruins that are maybe
463:15 - half there or 90 percent destroyed
463:18 - with an augmented reality app you could
463:21 - get to see what the original looked like
463:23 - and so you go to a museum and instead of
463:26 - looking at the skeleton they might show
463:27 - you
463:28 - a more realistic view of a model of the
463:31 - dinosaur so
463:32 - right now ar is kind of quirky it's kind
463:36 - of gimmicky i don't really see this as a
463:38 - necessary item that you have to have
463:41 - and so we'll keep it in the future then
463:43 - remember this is a video about what come
463:45 - what is coming what's going to be
463:46 - developed and what's going to improve a
463:49 - great deal so we can still keep ar as a
463:52 - developing and growing technology
463:54 - so take a peek here this is a google's
463:57 - developer website for what they
463:58 - currently have for augmented reality
464:01 - and so
464:02 - you can experiment with this as you can
464:04 - see you can put cartoonish looking
464:06 - models on the street or on the table
464:09 - and they've got plugins that work with
464:11 - android and unity and unreal and ios
464:15 - and so
464:17 - right now you can do the cartoony kind
464:19 - of a guy standing around your
464:20 - neighborhood so go ahead and experiment
464:23 - with this if you want to become a
464:25 - developer that works with augmented
464:27 - reality now i mentioned
464:29 - so the technology is not particularly
464:31 - useful i don't know of any apps right
464:33 - now that you must have
464:34 - that make this work
464:36 - other than pokemon go so
464:39 - maybe uh maybe you'll be the guy or the
464:41 - girl that comes up with a great solution
464:43 - why we all have to have our phones for
464:45 - an augmented reality app
464:47 - so no doubt in the future we're going to
464:49 - be seeing higher bandwidth so 5g
464:51 - networks currently are being rolled out
464:53 - as i'm making this video what will that
464:56 - mean for mobile developers well you're
464:58 - going to see some trends which means
464:59 - you're going to have greater emphasis on
465:01 - connecting to the cloud resources your
465:04 - gps will be more responsive you can have
465:07 - higher resolution video conferencing
465:10 - you'll have better response times you're
465:11 - going to have always on services and the
465:14 - iot revolution the internet of things
465:17 - will become easier to develop and ar
465:20 - will be better and what's going to then
465:22 - in decreasing trends well if your phone
465:24 - is working well with 5g then less
465:27 - dependence on the computers you're going
465:29 - to have fewer disconnections you're
465:30 - going to have less reliance on the
465:32 - storage in your phone and they promise
465:34 - us that our batteries are going to last
465:36 - longer so
465:37 - less energy consumption so those are
465:39 - some trends that will accelerate as we
465:42 - have higher bandwidth now iot or the
465:45 - internet of things
465:46 - is a growing field and i honestly think
465:50 - that mobile developers are in a great
465:52 - situation to figure out how to use this
465:54 - so i picked off this page here from
465:56 - microsoft
465:57 - azure iot edge it's called
466:00 - and so the idea of internet of things is
466:03 - that we're going to have a different
466:06 - trend instead of more computing on the
466:08 - cloud
466:09 - we have more computing on devices
466:13 - okay so that's the complete opposite of
466:14 - the trend that i was showing you earlier
466:16 - so what this means is that they're
466:18 - working as i once i say they i say we're
466:20 - talking about electrical engineers and
466:21 - computer engineers they are
466:24 - designing apps that are super low power
466:27 - and have higher abilities to do
466:30 - computing
466:31 - so if you have these tiny little things
466:33 - that require almost no energy
466:35 - and can do a lot of processing on them
466:38 - which is obviously impossible for most
466:40 - of us to think of right now but if that
466:42 - goal is met then the iot will it will
466:46 - take that
466:47 - that heavy cpu usage
466:49 - from
466:50 - the cloud or from the core
466:52 - and move it to the edge
466:54 - and so
466:55 - less
466:56 - computing power is going to be needed in
466:58 - data centers if we can make the iot
467:00 - devices better and more strong so what
467:03 - are the iot devices you ask well
467:05 - hopefully you can understand that those
467:07 - are the smart devices so
467:09 - don't even you don't have to think about
467:11 - the smart coffee pot anymore iot devices
467:14 - can be embedded in things like concrete
467:17 - and so you know
467:18 - what's going on with your bridge what's
467:20 - the vibration and what's the load what's
467:23 - the temperature so you build things into
467:26 - materials
467:28 - you have home security systems right now
467:30 - which are current iot devices
467:33 - but if you think of every object with a
467:35 - smart chip in it from your car to your
467:38 - ballpoint pen
467:40 - to the chair you're sitting on to the
467:42 - medical devices that are embedded in
467:43 - your body
467:45 - all of these things are considered iot
467:47 - the internet of things
467:49 - so really iot is another form of mobile
467:51 - programming mobile application
467:53 - development so if you're a mobile app
467:54 - developer then you're in the right field
467:56 - for the future wearable technology is
467:59 - going to be more and more so right now
468:02 - you've got the smartwatch
468:04 - you've got maybe smart glasses
468:06 - we've got the tools here right now at
468:08 - android developing
468:10 - sdks
468:11 - so
468:12 - you can build your own
468:14 - watch apps right now security is going
468:16 - to be obviously bigger and more
468:19 - important than ever in the future
468:21 - so
468:22 - you're looking at any software developer
468:25 - best practices guide whether it's apple
468:27 - or microsoft or
468:29 - google you're going to have best
468:31 - practices in mobile
468:33 - development going on all the time
468:35 - so
468:37 - make sure that you include security as
468:39 - part of your design
468:41 - blockchain is going to fit directly with
468:43 - that increase on security so currently
468:46 - we're all using our phones and credit
468:49 - cards to make purchases so we're kind of
468:51 - on the top row of this model here where
468:54 - we're the customer and there's somebody
468:55 - in the middle that's taking a cut from
468:57 - everything that we do with our credit
468:58 - card
468:59 - and what we want to do or it would be
469:01 - nice maybe is to use virtual currencies
469:04 - and uh blockchain type things
469:07 - to just do a direct transaction so we
469:10 - cut out some costs so right now we have
469:12 - the model on the left where you add a
469:14 - credit card your app and then the
469:15 - transactions are made through your bank
469:17 - so in the future maybe we can have
469:19 - direct payments using bitcoin or
469:21 - something similar and so i expect that
469:24 - that will be a trend that will
469:26 - accelerate in the future
469:28 - here's something i haven't actually
469:29 - experienced much of myself but i see it
469:32 - as a trending topic that will be in the
469:34 - next few years is beacons so a beacon is
469:37 - a small radio server that can tell you
469:40 - that there is a phone nearby and then
469:43 - you can get a message so in this case
469:45 - somebody gets an alert that says hey
469:47 - would you like a special drink now you
469:50 - can do this right now with gps and so
469:52 - maybe if
469:53 - high bandwidth and improved gps
469:56 - accuracies are are with us then beacons
469:58 - are really just redundant they're
470:00 - not even necessary but
470:02 - it's not a tool that's in common use
470:04 - right now so maybe beacons will be in
470:07 - the future
470:08 - so i'm kind of skeptical that
470:10 - this will actually be something that i
470:12 - would care about
470:13 - i as a consumer i want less
470:16 - annoyances not more annoyances so i
470:18 - don't want beacons telling me hey you
470:20 - got a new alert i mean i try to shut off
470:23 - the alerts that i have on my phone
470:24 - already because there's so many but
470:26 - anyway beacons are something that people
470:29 - are working on and we'll keep it in the
470:30 - future if you'd like to see the entire
470:33 - playlist for this course then take a
470:34 - look here at the link you can watch
470:37 - through all the things from designing an
470:39 - app to hiring your team to choosing the
470:41 - right platform so i appreciate you
470:43 - coming make sure you subscribe and you
470:45 - will become a better mobile application
470:47 - developer
470:50 - [Music]
470:56 - hi and welcome to the business of
470:58 - building apps this is a course that will
471:00 - help you as a business manager and a
471:01 - team lead for mobile development we're
471:04 - in chapter eight of this course so we're
471:06 - near the end we're talking about future
471:08 - trends of app development and this is a
471:10 - video for doing homework so i'm going to
471:13 - give you an assignment if you're one of
471:14 - my students at grand canyon university
471:16 - this is assignment 8-1 what i want to do
471:19 - is take a look back at what other
471:22 - companies did in past decades when they
471:24 - were predicting the future so we can
471:27 - learn from the past
471:28 - and predict how well we will predict the
471:31 - future so for the background i've got a
471:33 - couple of videos that i want you to
471:35 - watch so first of all
471:37 - called in from 1987 called apple's
471:40 - future computer the knowledge navigator
471:43 - and so in 87 apple provided a vision of
471:47 - what they thought we would be doing by
471:49 - today
471:50 - and so
471:51 - it's interesting to see
471:53 - that they got quite a bit of it right
471:55 - but it's kind of funny to see where they
471:57 - didn't get it right either
471:59 - then they have a second video that was
472:00 - made in 93 which is called your world
472:04 - your newton so the newton of course was
472:07 - the early version of a smartphone
472:10 - and the technology was kind of bulky but
472:12 - for the time it was very compact
472:14 - and some of the features that they
472:16 - thought were great we don't use today so
472:19 - both of those are great ideas that apple
472:22 - had in the past
472:24 - so these videos were created at a time
472:26 - when personal computers were still
472:28 - relatively new think apple ii and the
472:30 - early macintosh the internet was still
472:33 - 10 years away
472:34 - and smartphones were still at least 20
472:37 - years away so
472:39 - these were fairly forward-looking videos
472:41 - so what i want you to do in this is to
472:43 - write a one-page reaction tell me what
472:46 - you thought about apple's predictions
472:49 - what predictions did apple get that are
472:52 - in common use today
472:54 - in terms of percentages
472:56 - what do you think their
472:58 - their grade should be how good were they
473:00 - in the quantity of correct predictions
473:03 - and which features did they show in the
473:05 - video that were complete failures why
473:07 - didn't they succeed why were they not
473:09 - adopted were they too clumsy were they
473:11 - just dumb ideas or what do you think
473:13 - went wrong
473:14 - and then what did they not anticipate
473:16 - very well so
473:18 - are there things that they forgot to
473:20 - include in the videos that we do today
473:22 - and why did they miss them so let's take
473:25 - a look at how apple did and based on our
473:27 - monday mac monday morning quarterback
473:30 - ability looking in the in the hindsight
473:33 - let's find out what we think they did
473:35 - well and what they did not do well
473:38 - so if you're one of my students i would
473:39 - expect you to submit this to me as an
473:41 - assignment send me a one-page document a
473:43 - word document's good that will evaluate
473:45 - the apple's predictions how well they
473:47 - did where they got it right where they
473:49 - got it wrong
473:50 - and what you think our prediction
473:52 - ability is for the future so that's how
473:56 - i would grade you based on your analysis
473:58 - so send that to me if you're one of my
474:01 - students if you're not one of my
474:02 - students go feel free to add into the
474:04 - comments below what you think about what
474:06 - apple predicted or there other companies
474:08 - that had just as interesting predictions
474:10 - in the 80s or the 90s for what we would
474:13 - be doing by now i'm going to add a link
474:16 - to the course so that you can see all
474:18 - the videos in this course called the
474:19 - business of building apps and if you're
474:21 - one of my students i will see you next
474:23 - time and if you haven't subscribed yet
474:26 - do that now thanks for watching
474:30 - [Music]
474:36 - hi and welcome to the business of
474:38 - building apps this is a course about
474:40 - mobile app development and being the
474:42 - business manager in the process so we've
474:44 - gone through a whole bunch of material
474:45 - and we are on chapter eight which is
474:47 - about future trends in this video i'm
474:49 - going to give you an assignment so if
474:51 - you were one of my students at grand
474:52 - canyon university you now have homework
474:55 - this is assignment 8.2 what i want you
474:58 - to do is to analyze the current state of
475:01 - development tools the process that we
475:04 - can consider
475:05 - things that are working well so look at
475:08 - stack overflow for example
475:10 - and they have a customer survey or a
475:13 - user survey that talks about
475:15 - what is popular so they analyze which
475:18 - languages are growing in popularity
475:21 - which frameworks are growing and of
475:23 - course which ones are declining so
475:25 - through this survey we can understand
475:27 - the current trends and we can predict
475:29 - the direction of certain languages and
475:32 - frameworks so what's emerging and what's
475:35 - fading away so the instructions what i
475:37 - want you to do
475:38 - is to take a look at a
475:41 - survey data
475:43 - and based on that
475:44 - what are the current trends
475:46 - and then applying that to what you're
475:48 - working on right now such as your
475:50 - application your business your plan
475:53 - which languages have you adopted and
475:56 - what do you think their future is are
475:58 - they good in the future or not so for
476:00 - instance if you've adopted xamarin for
476:02 - your choice of development tools what do
476:04 - you see in the future is it good or is
476:07 - it gloomy and i want you to also think
476:10 - about a cost estimate
476:12 - so based on what other frameworks have
476:15 - done in the past
476:16 - how often do you think you're going to
476:18 - have to release a new version of your
476:19 - app
476:20 - so that depends on the operating system
476:22 - of the phone of course as well as the
476:24 - language itself
476:25 - and so if you're one of my students this
476:27 - is what i would expect you to send me i
476:29 - would expect you to send me a word
476:30 - document that analyzes the trends and
476:32 - the technologies used in your
476:34 - application so what's growing what's
476:36 - shrinking and how future proof is your
476:39 - current app if you're not in my class
476:41 - then you don't have to submit the
476:42 - assignment but please in the comments
476:44 - below talk about which languages that
476:46 - you see are emerging or dying
476:49 - what have you adopted and which are you
476:51 - abandoning so if you have not subscribed
476:54 - yet to the channel please do that i will
476:56 - also provide a link to the playlist so
476:58 - you can see all the videos about the
477:00 - business of building apps and if you're
477:02 - one of my students i will see you in
477:04 - class next time thanks for watching
477:09 - [Music]
477:16 - hi and welcome to the business of
477:18 - building apps this is a course about
477:20 - mobile application development and the
477:21 - business decisions that go with it so
477:23 - we're in chapter 8 here which is about
477:25 - future trends and this video is a
477:27 - homework assignment so we're on
477:29 - assignment 8.3 so if you're one of my
477:31 - students at grand canyon university
477:33 - listen up because this is what you're
477:34 - going to have to do
477:36 - so this assignment is about the future
477:38 - of mobile technologies so what i want
477:40 - you to do is to create a paper that is
477:44 - going to examine what is growing in
477:47 - possibilities for the future so future
477:49 - trends are technologies that are
477:51 - currently gaining popularity and they
477:54 - might not be quite there yet so they
477:56 - have significant obstacles to overcome
477:59 - so if you want to see a background video
478:01 - on this i have taught my own
478:03 - lesson on my opinions and what's there
478:05 - but i'd like you to do your own research
478:07 - as well so here's the instructions i
478:09 - would like you to write a paper that
478:11 - answers the following questions so which
478:14 - predictions mentioned in the topic
478:16 - readings or in the lessons that i've
478:17 - given you do you feel will be the most
478:20 - successful so express your reasons for
478:23 - why you think they will be successful so
478:25 - for instance virtual reality and bitcoin
478:28 - and augmented reality or things like
478:30 - that so what did i mention and which
478:33 - ones do you think are most promising
478:35 - which predictions do you think are most
478:37 - likely to fail
478:38 - so
478:39 - just because something gets a lot of
478:40 - press doesn't mean that you think it
478:42 - will be
478:43 - where you would put your money so
478:44 - explain your reasons for pessimism and
478:47 - so based on both of these optimistic and
478:49 - pessimistic views you would probably
478:51 - think about
478:52 - what you would put your investment in in
478:55 - your own business
478:56 - so how could they provide solutions to
478:59 - you
479:00 - and so in this course we've been talking
479:02 - about your own app your own idea your
479:04 - own business
479:05 - and
479:06 - what future plans do you see so we're
479:09 - talking about five to ten years from now
479:11 - how would you think your app will grow
479:14 - so if you're one of my students this is
479:15 - what i would expect you to deliver to me
479:17 - i would expect a word document
479:20 - that's maybe about a page long
479:22 - that evaluates the likelihood of success
479:24 - or failure for current emerging
479:26 - technologies so you're going to give me
479:28 - a ranking your top five let's say of
479:31 - what things are in the future and why
479:33 - you believe that they will succeed
479:35 - now if you're not one of my students go
479:36 - ahead and write in the comments below
479:38 - what you think is probably the future of
479:40 - mobile tech if you'd like to subscribe
479:42 - make sure that you do that be and i will
479:45 - put a link to the playlist for the
479:46 - entire course so that you can go back
479:48 - and see all of the great gems of
479:50 - knowledge that have been shared here on
479:52 - the business of building apps thank you
479:54 - for watching