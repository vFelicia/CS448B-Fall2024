00:00 - there are a few different ways to copy
00:02 - or clone an array let's look at some
00:06 - here we start with this original array
00:08 - true true undefined false null these are
00:10 - all items in the array so the a common
00:13 - way to copy arrays is with the slice
00:15 - method now the slice method is usually
00:17 - used to break AP part an array into two
00:19 - different parts but we can also use it
00:22 - to copy an entire
00:24 - array just that will copy the entire
00:28 - array and you can also use use the
00:30 - spread operator to copy an
00:35 - array and that just copied the array
00:37 - again these three dots are the spread
00:40 - operator and that just spreads out this
00:43 - original array into wherever we're
00:46 - putting it so it's going to spread out
00:47 - the original array into the new array
00:50 - let's do a test here to see if that
00:55 - worked and you can see there's I just
00:58 - logged it's going to log the C copy one
01:01 - and it's going to log copy two and both
01:02 - of them are the same as the original
01:04 - copy now this does not always work if
01:08 - you have an array or an object within
01:12 - your array uh whenever you have an array
01:14 - or an object in your array you need to
01:17 - do deep copying let me show you an
01:24 - example now in this array there's an
01:27 - array within the array so you can see
01:29 - there's the two sets of brackets each
01:31 - array only has one item so in one array
01:35 - there's the item free code camp in the
01:38 - other array is the array that has the
01:41 - item free Cod Camp so if we just try the
01:44 - normal method of coping if we just use
01:46 - slice
01:51 - here now we're going to actually try to
01:54 - modify that shallow copi it
02:01 - we went to the array at index zero which
02:04 - is the first array so I'm trying to push
02:06 - something on to that first array within
02:10 - the array I'm trying to push is great so
02:13 - let's console.log then and see what
02:21 - happens huh well look at this I loged
02:25 - the Deep array and I loged the shallow
02:27 - copy array and so the Deep array free
02:30 - Cod Camp the shallow copy should
02:32 - actually uh be a completely other array
02:36 - because we've copied it into a shallow
02:37 - copy and then we're just going to push
02:40 - is great to the shallow copy just so you
02:44 - know we are just logging the index zero
02:47 - so we're we're not trying to log the
02:49 - whole array we're just trying to log the
02:51 - array within the array that's why we put
02:54 - index zero here but after adding is
02:57 - great it's actually if you see this up
03:00 - here it's adding is great to the Deep
03:02 - array and the shallow copy you can see
03:04 - that it's Lo both of them are the same
03:07 - now the reason for that is because
03:10 - anytime you have an array within an
03:12 - array in JavaScript or if you have an
03:14 - object within an array in JavaScript in
03:17 - the original array is just a pointer to
03:20 - an array or a pointer to an object
03:24 - inside that original array so when we
03:27 - are doing a copy of the array we're just
03:30 - copying the pointers to this original
03:33 - array so when we push is great we're not
03:38 - pushing is great to the shall copy
03:41 - directly we're pushing is great to the
03:44 - pointer to the other array and since
03:48 - both of them are pointing to the same
03:51 - second array it's going to add the is
03:54 - great to to basically both copies the
03:58 - Deep array and the shallow copy
04:00 - if you have an array that has other
04:01 - arrays or other objects within the array
04:03 - you really need to do a deep copy if you
04:06 - want to make sure everything's copied as
04:08 - you would expect so let me show you how
04:11 - to do that some people have fancy for
04:13 - loops and and a lot of code to do it but
04:17 - there is actually a trick it's a secret
04:20 - way that makes it a lot easier let me
04:21 - show you
04:28 - that so so this is it um so basically
04:32 - we're going to pass in this deep array
04:35 - to the json. string IFI method and this
04:39 - is going to create a string of the whole
04:41 - array including arrays within the array
04:43 - and objects within the array and then
04:46 - we're going to call the json.parse
04:48 - method which is going to convert this
04:50 - string back into a JavaScript object or
04:55 - a JavaScript array and then we're going
04:56 - to assign the whole thing to that deep
04:58 - copy variable let's try what we did
05:01 - before I'm just going to copy this code
05:03 - up
05:04 - here we're going to CH change shallow
05:07 - copy to deep copy we're going to push is
05:10 - great we're going to console that log
05:12 - deep array and deep
05:17 - copy and just to make this more clear
05:20 - I'm going to take this out and take this
05:23 - out and now let's run
05:26 - that okay now it behaves how you would
05:30 - expect it to behave in a copy so we're
05:32 - going to console.log the array within
05:35 - the Deep array and then the array within
05:37 - the Deep copy and the first one is going
05:39 - to be free code camp and then because we
05:42 - push the is great the second one is
05:45 - going to be free code Camp is great well
05:48 - that was a few ways to copy a raise
05:50 - thanks for watching my name is Bo KS
05:52 - don't forget to subscribe and remember
05:54 - use your code for good