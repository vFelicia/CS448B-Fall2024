00:00 - Aren't you ready? Rock Paper Scissors shoot, 
Dylan. I probably did. I probably did. In this  
00:10 - video, we are going to build this amazing Rock 
Paper Scissors game. Okay, so it's probably  
00:16 - the sexiest Rock, paper scissors game you've 
ever seen in your entire life. Right? Okay,  
00:21 - so without further ado, let's get started. Okay, 
so let's, first thing I'm going to do is go to my  
00:26 - desktop and create a folder called Rock, paper, 
scissors. Okay. Okay, and let's go inside that.  
00:34 - And we'll do touch index dot HTML styles dot 
CSS, and app dot j s. Okay. And then we'll open  
00:43 - this guy and Adam. All right, so it's opened. It's 
taken a while these days. I don't know why. Okay,  
00:51 - cool. So let's close these guys down first, 
and then let's open up index dot HTML, CSS,  
00:56 - okay. All right. So let's start coding. So the 
first thing we have is, first thing we have is  
01:03 - the header. Right? So before that, let's get 
the skeleton out of the way. Rock. Paper,  
01:08 - let's call it Rock, paper, scissors, 
game or something. Okay. All right,  
01:14 - and let's open this guy up. And let's type in some 
gibberish here. Okay. And open browser. Okay, so  
01:21 - this is this is the working version. And this is 
the non working version. Okay, so as you can see,  
01:25 - our HTML file is working. So let's get rid of 
that. Okay. So the first thing we have is the  
01:31 - header. So let's get that in a header tag, not a 
div tag. So far, we've done pretty much everything  
01:37 - in a div tag, and that's okay. But we want to be 
more semantic. Okay, so there's a header. It's  
01:44 - a header, so we want to put it in the header tag. 
If it's a footer, we want to put it in footer tag,  
01:48 - okay. And then later on, we'll go over section 
two, but in this video, we'll just for those,  
01:53 - we'll just do depth. Okay, so header, and then 
this one has an h1 Rock, paper, scissors. Okay.  
02:00 - Okay, let's go here. Refresh. Okay. That's how 
it looks hideous. Right. So we'll add the CSS  
02:05 - later. Okay, so that's the header. And then 
we have a div for choices. No, no, no, we have  
02:12 - the scoreboard, diff. So we'll give it a class 
of scoreboard. Okay. And then in our scoreboard,  
02:19 - we have two badges, right user and computer, 
it's on the edges. But we'll do that with CSS  
02:24 - later. But we have two badges, user and computer 
and then we have the scores themselves. Zero is  
02:29 - your starting numbers stewards are okay. So for 
that we'll do div of let's do, let's see, this  
02:38 - one is going to be user. So we'll say user. And 
for this, we'll give it a badge, class of badge,  
02:44 - we'll copy this paste, and the next one is going 
to be computer comp, okay? Now, classes are cool,  
02:51 - because we can share, you know, the same cells 
across those two divs, right with the same class  
02:56 - called badge. But we also want some IDs because we 
want to uniquely position the user and comp later,  
03:03 - right? Because the users on the left hand, and 
then kompass on the right hand side. So what we  
03:07 - want to do is say ID of let's say we give it a 
ID of user label. And then for this one, we'll  
03:16 - give it an ID of comp, computer label. Okay? All 
right. So once we have this, let's go back and see  
03:24 - how it looks. All right. Nothing special. Okay, 
so let's go and now actually put the scores. Okay,  
03:30 - so now what we do is add a span tag, not a div 
tag, because they're in the same line spans are in  
03:36 - line element. divs are block level elements. Okay? 
So, span will do zero, right? It starts from zero.  
03:43 - Later, we'll change it. But for now, we'll start 
with zero. And we want to give the first span an  
03:49 - ID of user score, because the left hand side is 
going to be user right? And then we want to copy  
03:55 - this and then paste it. Okay. So copy, paste, and 
we want a colon in the middle, and then we'll call  
04:03 - this computer score. Okay, so now refresh. Okay, 
that's how it looks so far. Okay. All right. Let's  
04:10 - keep moving. Now, we also need the message, right? 
So now we need the paper covers rock message. So  
04:16 - for that, we'll create a div here, and we'll give 
it a class of I don't know result, okay? And then  
04:22 - we'll say paragraph and we'll say paper. Well, 
paper covers. I can't type anymore. Rock you went,  
04:31 - Okay, cool. And now let's go back, refresh that. 
That's how it looks. Okay. Now, we want to add  
04:37 - the choices, right, these images. Okay, so for 
that we'll do div of class of choices. And then  
04:45 - we'll have inner divs. Okay, well, we'll have 
those images wrapped inside each depth, okay,  
04:51 - so we'll do div. And we'll say choice because 
it's a bunch of choices. So we'll have a choice  
04:56 - for each one of them. And then we'll do image and 
right Now I don't have images in my directory. As  
05:03 - you can see, I don't have images, right. So what 
I'll do is I'll pull it from my working directory,  
05:08 - okay. So from this folder and put it in this 
folder, copy it, basically. So what I'll do is  
05:15 - open hyper. Okay, and let's do this. Cool. So now 
I have the images here. If you see here, there it  
05:25 - is, right? These are all images. Don't worry about 
the DS store. That's nothing. So I just copied it  
05:30 - and paste it in here. Okay. So now what I can do 
is go here, image source and I can say images,  
05:37 - slash. It's called rock. I think rock, PNG. The 
first one is rock, right? Okay. And then I'll copy  
05:44 - this three times. One time, two time, okay. And 
then this one is going to be okay. Let me first  
05:51 - refresh it. Okay. That's how it looks so far. 
And now I'll change this to paper. Refresh. Okay,  
05:59 - that that's how it looks. And then for the third 
one, we'll do scissors. Cool. So now we have the  
06:07 - images. And I think that's it for them. Oh, we 
also want to add some IDs to each of these dips,  
06:14 - okay, because later on, we want to be able to 
identify each Rock paper scissors, okay. So what  
06:20 - we do is, we just give it an ID of our, okay, 
we don't need to say rock, and then Id of P,  
06:29 - and then Id of S. Alright, so that's it for the 
choices. So we'll let's go down. Hold on. Okay,  
06:39 - cool. All right. Now, what do we have left? We 
have this message left, right, make your move.  
06:43 - So let's do that. Okay, so let's P, and all you 
do is let's give it an ID of action message. Okay,  
06:53 - action message. Sounds weird. And then all you 
do is make your move. Okay? Alright, so now let's  
07:00 - go here, refresh. That's how it looks like. Okay, 
cool. So now let's actually add the styles. Before  
07:06 - I add any styles, I want to make sure I link it. 
So link, and we'll go here and say, styles dot  
07:13 - CSS, okay. And now when I write something in 
here, let's do body background to like red or  
07:20 - something. Okay? Boom. Okay, so it works. Okay, so 
let's get rid of it. Again. As always, let's start  
07:26 - off with the universal selector. Get rid of the 
default margin and padding. So before I do that,  
07:31 - let's refresh here. Oh, let's get rid of it. Okay, 
refresh. What? Okay, margin zero padding zero. And  
07:47 - then we want box sizing to border box. Okay. And 
refresh that right? margins are gone. Okay. So the  
07:56 - first thing we have to do is we have to style this 
header. So for that, we will say, so let's go to  
08:03 - index we have header, and we'll just say, header. 
Okay, header background to be white, right? It's  
08:13 - white. And what is it? And for the text color, 
we'll do header h1, header, h1. Color is? What  
08:25 - does that color. Let's get that color. Hold on 
just a second. Let me open up my color picking  
08:32 - tool. Alright. And the color is. Let's see. 
Alright, that's the color. Okay. So let's go here,  
08:42 - refresh. Okay, that's how it looks like right 
now. Nothing special. And we also want to text  
08:47 - align this to center, and then font family to ASAP 
and then backup is sensor. Okay, so let's see if  
08:55 - that works. Alright, so that looks good. And now 
we also want some margins and padding. So we'll do  
09:02 - margin or padding of 20 pixels on the parent. 
So there should be some breathing room. Okay,  
09:09 - cool. And now, as you can see here, this, 
the entire body's background is this dark,  
09:15 - bluish color, right. So for that, we'll just go 
right above this, and we'll say body background  
09:22 - color to that color. So again, let's grab that 
color. Boom, boom, okay. Okay, and actually,  
09:32 - this should be a color for this one, too. Okay, 
cool. Refresh. And there it is. Right. So now  
09:40 - it's looking a lot similar. Okay, cool. And now we 
also want to let's see, what do we want to do? Oh,  
09:47 - sorry about that. We have not imported the ASAP. 
Font yet, right. So you guys probably know how to  
09:55 - do it. Go to fonts.google.com fonts.google.com 
Then go to ASAP. Right, go to ASAP. Click this  
10:06 - plus button, and then go come down here, click 
on this go to Customize, you want to get the,  
10:11 - you know, bold and medium. You don't need to 
but you know, it's better if you have options,  
10:18 - right? So grab that. Go here to CSS go up at the 
top, paste it and boom, right? It's done. Now,  
10:26 - if we go back here, right, right now it looks like 
this. I'm gonna refresh and there it is. Right?  
10:31 - It's a little different. Okay? Once we have this 
now we have to style the scoreboard, right? Okay,  
10:37 - so what I'll do is let's go to scoreboard, okay, 
because we gave it a class of scoreboard right?  
10:43 - If you guys remember, we gave this div a class of 
scoreboard. So we'll do a scoreboard I'll first  
10:49 - give it a border of three pixels solid white. 
Okay, let's see how it looks. Okay, that's how  
10:56 - it looks right now. It's 100% width, okay? We 
don't want it to be 100% width, we want it to  
11:00 - be less than that. So 200 pixels or something. 
Okay, refresh. Okay, that looks a lot better. But  
11:06 - now this one's too close to the header, right? 
So we want some space at the top and bottom.  
11:10 - So for that, we'll give it a margin. Whoa, margin 
of, let's say 20 pixels at the top and bottom and  
11:18 - then center it. Okay. So we'll do enter. And there 
it is, right? It's centered. And then we have 20  
11:24 - pixels at the top and 20 pixels at the bottom. 
Okay, so that looks good. Now, we also want to  
11:29 - change the text, write the font color, okay, so 
the font color is going to be white. Fresh, Okay,  
11:37 - that looks good. And we also want to change the 
font size to be 40 pixels and 46 pixels, I think.  
11:44 - There. That's right. So that looks gigantic 
right now, but we'll fix it in a bit. Okay,  
11:49 - this user and comp is supposed to be out of 
the box. So for that, before I go into that,  
11:57 - let's also fix the border radius. Because if you 
guys notice here, this one's kind of rounded. This  
12:03 - one's not rounded. So border radius is going to 
be let's do four pixels. Refresh. Okay. That's how  
12:11 - it looks like. Cool. We'll also text align that 
all this to center. Okay, refresh. Alright, that  
12:18 - looks good. And we'll also give it some padding of 
let's do 15 pixels and the top and bottom and 20  
12:25 - pixels to the left and right. Okay, so there's 
some breathing room now. And we also want to  
12:31 - change the font family. Okay. And let's do ASAP. 
And then sensor. Okay, cool. Refresh. Alright,  
12:39 - so that looks good. But now we also want to style 
these guys. Okay, these bad boys. So for that,  
12:44 - we'll go down here. And if you guys remember, we 
called them badges, right? We gave him a class of  
12:51 - badges. So we'll first style that and then we'll 
go into user label and computer label. Okay,  
12:55 - so we'll go Hold on. Okay. And we'll say dad, 
badge. background is going to be let's get that  
13:04 - background color. Okay. Boom. Come on. Why is it 
not working? Okay. The color is bad guy. Okay.  
13:18 - So background is that and we also want to color 
to be white. It's, I think it's already white,  
13:24 - but just make sure. Okay, that's how it looks 
like. Cool. Once we have that, now, let's change  
13:30 - the font size because that's humongous. So we'll 
do font size to be 14 pixels, okay? And then we'll  
13:38 - give it a padding of two pixels on the top and 
bottom and then give some padding on the right and  
13:43 - left. And we'll also give it a font family of ASAP 
sensor. Okay, fresh. Okay, that's how it looks  
13:52 - like. Right? Okay, so the styling is good. But now 
we need to take it, we need to position the user  
13:58 - to the left hand column to the right, right. So 
what we do is for that, if you guys remember we  
14:03 - gave these IDs of user label and computer label so 
we'll do user label, okay. And we'll do position  
14:11 - of absolute again, if you guys don't know what 
positioning is just go watch my like CSS videos,  
14:18 - okay, and then my previous project videos, so. So 
if I do top zero, left zero, it will position it  
14:27 - to the browser's top left corner, there are less 
right, but that's not what we want. We want the  
14:33 - starting position to be not the browser's top left 
corner but the parent this scoreboards top left  
14:40 - corner, okay, so that it's easier to do things 
and it's more consistent later when we resize our  
14:45 - screen. Okay, so for that, we will have to give 
our scoreboard which is our parent right here,  
14:54 - the parent of this, there's the scoreboard so 
we'll give this a position. Have something other  
15:00 - than static or inherit, okay? So which is we'll 
just say relative. Alright, now refresh, and  
15:08 - it starts from the scoreboards top left corner, 
right? So once we have this now we can position  
15:13 - it. So we'll say top of 30 pixels. And then we'll 
say left of if you do positive, we'll push it,  
15:22 - push it to the right, we don't want to push it to 
the right, we want to push it to the left, right.  
15:26 - So refresh, that's how it looks like. And if I do 
negative, it looks like this. Right? So we want  
15:34 - negative 25. Let's see. Okay, that looks good. 
And now we'll copy this and do the same thing  
15:41 - for your computer, right? So computer and position 
absolute top 30 pixels. And then now we don't want  
15:50 - to do left here. We can we can do left. Okay, so 
if I refresh, that's how it looks like right now.  
15:56 - Right? It's hiding behind the users hiding behind 
the computer. So if I do here instead of negative  
16:06 - 25, if I do like 35 pixels, right, right, now 
it's right there. But let's just do right. Okay,  
16:14 - instead of left, we'll just do a right. So and 
then now it starts from the right hand side. So  
16:19 - if I do zero pixels here, it starts from the right 
hand side, you see that, right? But we don't want  
16:26 - to do zero pixels. And if we give it a positive 
number, it will push it to the left. If I do 10  
16:32 - pixels, 20 pixels here, you see, it pushes pushes 
it to the left, because it's the right property.  
16:37 - So we want to say negative here, okay, negative 25 
pixels or something. Okay, maybe 35. No, 30 Okay,  
16:52 - so that looks pretty good. Alright, so now we 
are done with the scoreboard. Now we want to get  
16:57 - this thing working. Okay. So right now it's super 
small and block. So we'll change that. And we call  
17:03 - it a dot result. Yes. So we'll say dot result. 
And let's enter a bunch. Bring it to the top,  
17:14 - okay. And now we'll say font size, okay. 
40 pixels. Let's see how it looks. Okay,  
17:23 - that looks pretty big. Alright, and now we'll do 
font color to be white. Fresh. We also want to  
17:30 - text align to the center. So we'll do dot 
result. h1, text, align, center. Refresh,  
17:39 - okay. Whoa. Why is it not working? Oh, it's a p 
tag. It's not an h1 tag. Silly me. p tag. Okay,  
17:49 - that looks good. And we will also change the font 
family to ASAP. I should really put this at the  
17:56 - top instead of repeating font family every single 
time because it's going to be the same font, but  
18:01 - it's okay. All right. So now we have that. I think 
we also need to make it bold. So we'll do font  
18:08 - weight. Weight of bold. Okay, refresh. Alright, 
that looks good, right? Yep. Is the color a little  
18:20 - bit different? I think it's a bit different on 
mine than here. Why is that? Let's, I think the  
18:28 - real color is this. Right here. Okay, so now let's 
see if that works. Okay, there it is. That looks a  
18:36 - lot better. Okay. Cool. All right. Now let's go 
over the actual images. Okay, for the choices,  
18:41 - The Rock, paper, scissors hand, okay, so we'll do 
for that we'll go down here. And index dot HTML,  
18:49 - we call the choices and then choice for each one 
of them. Okay, so we have to do is we'll say the  
18:55 - first thing we'll do is start choice. Okay, we'll 
grab each one. And we'll do display inline block.  
19:01 - Okay, so that will make it horizontal. Cool. And 
now we also need to text align this. So we'll do  
19:11 - go to the parent. pecks align, center, refresh. 
Okay, that's how it looks like. And we also want  
19:20 - some marginson because we want some space at the 
top and bottom. So we'll do margin of whatnot  
19:28 - margin left margin of 50 pixels of top and bottom 
and we'll do zero. Okay. So refresh. Alright,  
19:37 - that's how it looks like. I think we also need a 
border. So we'll do go to the choice and we'll say  
19:43 - border of four pixels, solid, solid white. Okay, 
so it looks, looks okay. That looks pretty good.  
19:52 - And now we also want to make it circular, right? 
So for that it's pretty simple border radius and  
19:58 - you Always want it to be the half of the width. So 
right now our width, I don't know what the width  
20:04 - is here. But the point is because you don't know 
the width every single time you want to do 50%.  
20:14 - Okay, because you don't know the exact width 
in pixels. I mean, we can find out, but it's  
20:21 - not that practical. Okay? You always want to use 
percentages. Save, refresh. Okay, that looks good.  
20:29 - We also need some padding. So we'll do padding 
of 20 pixels. Let's see how it looks. I don't  
20:35 - know. Okay, that's too much. Let's instead do 10 
pixels. Okay, that's a lot better. Okay. Now, we  
20:43 - also want some space in between each choice. Okay, 
so for that, we'll give it a margin. Okay, margin  
20:50 - of zero pixels to the top and bottom, and we'll 
do 15 pixels to the left and right. All right,  
20:58 - that looks good. Maybe 2020 pixels. Okay, it looks 
good, right? No change. Okay. I think that's it  
21:10 - for the images. But now we also want something to 
be happening when we hover over You see, when we  
21:17 - hover over it, the background changes, right? 
And cursor changes from this pointer to like,  
21:23 - this hand tool, right? So what we do is for that, 
we go down here, we do dot choice, hover. Okay,  
21:30 - on hover, we want the background to change. And 
also we want the cursor to change. So cursor,  
21:38 - we want to say pointer. Okay? So that's how you 
change it. Now when I go over it, okay, that's  
21:44 - the working version. Let's go here, refresh. There 
it is. Right, it changes. So we have that working.  
21:49 - Now. Let's also change the background. So we'll 
do background of what's a color, I don't know what  
21:54 - the color is, let's say. Let's just do something 
darker. Let's go here. Get that. And yeah,  
22:02 - let's do this. Okay. All right. That looks good. 
Now that works. But if you notice something, when  
22:09 - when I hover over it, the color of the background 
changes right away, right? Like, instantly, okay?  
22:15 - So let me give it something else. For now let's do 
a read or something. Right, it changes instantly,  
22:22 - we don't want that we want something more smooth. 
Okay, so we go here and do transition. And we can  
22:31 - do all 0.3 S is k. So 0.3 s 0.3 seconds for how 
many seconds? And S is you know, seconds. So here,  
22:42 - if I do one, as you see, it's pretty slow, right? 
But that's not so natural. It's way too slow. So  
22:49 - what you want to do is 0.3 Okay, that's what I use 
usually. So now it's a little bit more natural,  
22:55 - right? So let's go back and change this color. 
back to that. So we'll do was it this coat? No,  
23:03 - this color. Okay. There it is. Okay, cool. So 
now once we're done with that, let's make this  
23:10 - Make your move thing work. So that's called the 
action message. So we'll do action message. And  
23:19 - this one's pretty simple, like, text align 
this to center. color is white, font family,  
23:27 - repeating for the 100 million time. All right, 
that looks good. Um, we also want it to be bold,  
23:35 - and a little bit bigger, font way to be bold, 
and font size to be 20 pixels. Okay. All right,  
23:46 - that looks good. Mmm, hmm. Why is that going 
down? Oh, okay, if you notice something here  
23:54 - are making movies a little, you know, shifted 
downwards, a little bit more than the original  
23:59 - one. So for that that's happening because we have 
50 pixels for the choices, you see that choices,  
24:05 - this this whole thing, this whole thing, right. 
And this one has a margin, top of 50 and bottom  
24:12 - of 50. So to fix this, what we can do is say 
just margin top here, instead of doing a margin,  
24:18 - like that. So now it would only give us the margin 
top, and now that's too close. But now we can add  
24:26 - a margin top here. of 20 pixels or something. 
All right, there it is. Whoops, we're missing a  
24:35 - period. So let's get that. Alright, so that looks 
good. Alright guys. So that's it for Rock Paper,  
24:42 - scissors, HTML and CSS part. We're going to do the 
JavaScript part. Okay, so I'm excited. I'm sure  
24:51 - you're excited. So what are we waiting for? Let's 
get into it. Let's get into it. So I have my atom  
24:59 - open in there. Right hand side and the app open 
and left hand side. This is the working version.  
25:04 - So let's first take a look at how the JavaScript 
is working. Okay, so I'm going to refresh here.  
25:10 - And when I click on the rock, boom, rock user 
loses to paper, okay? Boom. I haven't fixed all  
25:19 - of it yet, but we'll fix it. Okay. It's supposed 
to be subscripted, all of it. So when you click  
25:24 - on rock, if you when it goes, Hey, you know, you 
won, and the user score goes up. And when you win  
25:32 - the border, there's a green border, it stays there 
for like, 300 milliseconds, and then it goes away.  
25:38 - Okay? If it's a draw, then it's the gray color. 
So that's a draw. Okay? And you probably notice  
25:46 - the numbers didn't change, okay? And if it's, 
if you lost, then it'll give you a red border.  
25:53 - border. border. border. So, okay, you won. Come 
on. I can't lose. I just can't lose. What? Okay,  
26:07 - cool. There you go. Okay. So that's, that's what 
happens when you lose, it's, again, all the other  
26:12 - values work as well as the other buttons. Okay, 
so let's go over to index HTML. And before I write  
26:18 - any JavaScript, let's make sure that we add our 
JavaScript or link our JavaScript to HTML, okay.  
26:26 - And again, we do that right before the ending 
body tag, yo. Okay. AB dot j, s. Okay, we have  
26:34 - that. And once we have this, we can just go to 
here and just do Hello. Let's see what that gives  
26:44 - us. Refresh. Okay, let's first open this file. 
Okay, because this is the working version. This  
26:51 - is the final version. So we'll go to here open in 
browser. Okay. So this is what we have right now.  
26:57 - Right now, nothing worked. You see, when I click 
on it, nothing works, because we haven't done  
27:01 - any of that yet. So let's go to console and let's 
make sure that our JavaScript is working, and it  
27:08 - is working. Cool. So now let's go to App dot j. s, 
let's collapse that thing. All right. Okay, so the  
27:14 - first thing that I'm going to do is cache the DOM. 
Okay, so then you're like Tenzin, what the hell  
27:21 - is cache the DOM? What? What does it mean? Okay, 
let me first do it. And then I'll, I'll explain,  
27:27 - okay, so so the first thing we need are the 
actual scores, right? So the actual variable,  
27:32 - so then what we can do is, say const, I'll call 
them user score equals zero, okay, it start,  
27:38 - it's going to start at zero cons to computer score 
equals zero, okay, now, we're going to update this  
27:46 - later, depending on who wins and stuff like that. 
But we also need to show it to the page, right,  
27:52 - the document that our DOM. So for that, what we'll 
do is, say, const. Users score lm, or just say,  
28:01 - underscore span, equals document dot get element 
by ID user score, because we gave it and gave it  
28:10 - an ID of user score right here. If you remember 
right there, right. And then we're going to do  
28:16 - the same thing for computer score. Okay, so let's 
copy that paste. And I'm just going to do computer  
28:22 - score here. underscore span tag, and this is going 
to be computer score. Let's go to computer. Okay,  
28:31 - cool. So now you're wondering why the hell am I 
doing this type this weird thing right here. Okay.  
28:37 - So, I, this is my own style, okay? You want to be 
consistent, okay. You don't necessarily have to do  
28:45 - this. So now underscore, I put it there to clearly 
differentiate between normal variables. And then  
28:52 - Dom variables. Okay, so these are Dom variables, 
right? So like HTML variables that store DOM  
29:02 - elements, okay. So I can clearly tell that and 
also now when I put span because I put those  
29:10 - things in a span tag. Now I can clearly tell that, 
hey, it's in a span tag. Okay. So that's just my  
29:16 - way of doing things. Okay. You can do your own 
ID, you don't have to put the underscore there.  
29:20 - You can just do span tag here. Right. But that's 
just what I do. Okay. So I think it's a pretty  
29:28 - good idea to do do it this way. Because you can 
tell, okay, it's a it's a very dumb variable just  
29:33 - because of the underscore and then you know, what 
type of element It is like by span tag, div tag,  
29:39 - input tag, right? Whatever it is, you just put 
that and then later on when you're debugging and  
29:45 - trying to look through your HTML files can be so 
much easier. Okay. So I highly, highly recommend  
29:51 - you do this. Okay. All right. Now, let's get 
the scoreboard I'm going to call it scoreboard  
29:55 - underscore div because I stored that in a div 
tag, okay. It's a div. tag and then do document  
30:01 - dot query selector or, yeah, query selector 
and I'm going to say dot scoreboard. Okay? And  
30:10 - that's because we call it scoreboard right here. 
Okay, we gave it a class of scoreboard. Alright,  
30:16 - so once we have this, let's keep going. Let's 
get this result div. So I'll go here and say  
30:21 - result div, div, okay? Equals document dot query 
selector, dot result. And now let's also get the  
30:34 - rock paper scissor buttons. Okay, so for those, 
we're just going to do const rock div, because I  
30:39 - stored that in a div I think. Yep. Yep. And I'm 
gonna do document dot get element by ID equals,  
30:48 - that's going to be our okay. Yep. And copy 
paste. And this is going to be paper, div,  
30:57 - and P, this is going to be PS. And let's go here 
and do rock paper, scissors. If, okay. Alright,  
31:11 - so now we have cached the DOM. Now let's go 
back to why we call it caching the DOM. Okay,  
31:18 - so so caching the DOM really means. So caching in 
general really means storing something for future  
31:26 - use. Okay. So here, what we're doing is we're 
doing exactly the same thing, we're storing all  
31:32 - of these things in variables so that we can use 
it later. Okay. And it's not just for convenience  
31:38 - sake, right? It's user score span, it's a lot like 
smaller, like less to write, then document dot get  
31:45 - element by ID user score every single time, right. 
But there's also a performance factor. So imagine,  
31:51 - every time we need to do something, we need to 
use that document, get element by ID user score,  
31:57 - we need to get that reference point. Imagine us 
doing document dot get element by ID every single  
32:02 - time, right? When we do that, what we're doing is 
we're doing a running a process, and we're running  
32:07 - that process every single time, we need to get 
the reference to that element instead of storing  
32:14 - that in a variable once, and then we use that 
variable again, because the variable already has  
32:20 - the reference to that element. Okay? It's like, 
imagine you're at a library, right? And you're  
32:26 - working on this research paper. And you need to 
get the source for your research paper, right?  
32:31 - You need a lot of sources from this particular 
book. And now every time you need that book,  
32:36 - you get away from that you stand up, you get away 
from the table, your desk, and then you go to that  
32:42 - shelf, find that book, take it out, read it, 
find that source. And you're like, Huh, okay,  
32:49 - you memorize it, and then you put it back, you 
go to your desk, and then write the source down.  
32:55 - And then when you need some other sources, again, 
you go back to that book, and you repeat the same  
33:02 - process again and again, right? That's terrible, 
right? very inefficient, it's going to take you  
33:09 - years, okay, to finish that paper. Instead, what 
you can do is go, go find that book, bring it,  
33:17 - place it down temporarily here, so that your 
book is right here on your table of your desk,  
33:23 - if you need a source. So then what you can do 
is go here, okay, I need a source. All right,  
33:29 - cool. Better yet, just leave the book open. 
Right. So that's like caching the DOM right?  
33:34 - Instead of doing document dot get element document 
dot query selector, every single time you play it,  
33:39 - that is stored in a variable, so then it's just 
running that process one time, and then we have  
33:45 - the reference point in that variable. So we're 
really being efficient in terms of performance and  
33:50 - also convenience, right? It's really convenient. 
Alright, so let's, let's move forward. Alright, so  
33:56 - now let's talk about what happens when we click on 
those individual buttons. Okay, so when we click  
34:02 - on rock, what we need to do is take that value, 
okay? It's a rock and then compare it against a  
34:08 - computer's choice, which is just going to be a 
random choice between those three options. And  
34:14 - then we compare those two, and then check who wins 
and then display the result back on the DOM in the  
34:21 - DOM. Okay, so I'm going to first add some event 
listeners to each button. Okay, so we'll do add,  
34:28 - add rock div dot add event listener, on a click. 
I want to write a function. And that function is  
34:37 - just going to do console dot log. Hey, you clicked 
on rock. Okay, so let's see if this works. Okay,  
34:47 - so refresh, and inspect. Go to console. And now 
I'm going to click on rock. Okay, there it is,  
34:54 - right. Once you click on it, it goes hey, you 
clicked on rock right? Now, let's do the same  
34:59 - thing for these three. Okay, so we'll do three 
DD Well, not DD. Let's do okay, that's fine.  
35:08 - All right, so now we'll change this to paper div. 
We'll change that to paper. And we'll change this  
35:18 - to scissors. And Come on, and we'll change this to 
scissors diff as well. Okay, so now refresh. And  
35:27 - now when I click on rock, it's gonna say, hey, you 
clicked on rock. When I click on paper, it's gonna  
35:32 - say, hey, you clicked on paper. And same thing 
for the scissors, right? There it is. There we go.  
35:38 - Okay, so now that we have those buttons working, 
let's go further. Okay, so right now we're just  
35:44 - console dot logging, we don't want to console dot 
log, okay, we want some things happening. Okay,  
35:50 - other than console dot log. So what I'll do is I 
will create a function called game, okay, so I'm  
35:57 - going to pretend like I've already created that 
sum game. And then if the user clicks rock diff,  
36:04 - I'm going to provide an argument of rock, okay? R. 
And if the user clicks paper, I'm going to give it  
36:13 - an argument of P. And then if the user clicks 
scissors, I'm going to give it a give it an  
36:19 - argument of S. Alright, so let's get rid of the 
console dot log console dot log. And if I refresh,  
36:25 - right, now, nothing's gonna happen, it's gonna 
give an error because it says, game is not  
36:28 - defined, okay? Because we don't have a function 
defined for a game. So let's do that. Before I  
36:34 - do that, I'm actually going also going to create 
a function called main, and then wrap all of this  
36:40 - inside of that. Okay, let's do this. And come down 
here, and then we will indent all of this stuff.  
36:49 - Okay, cool. And now to run this, we'll just do 
main up top here. Okay, so now if I refresh,  
36:56 - right, it's still going to give you that error, 
because game is not defined. So then we can define  
37:01 - that game down here. We'll actually just keep it 
you know, in a chronological order. So now let's  
37:09 - define a function called game. And, of course, 
our game function is going to take a user input,  
37:16 - right? user choice in this case. So what we're 
saying is, again, when somebody clicks on any of  
37:23 - these buttons, take the value of those buttons, 
whatever it is RPS, right Rock, paper, scissors,  
37:28 - and then compare it against a computer choice, 
and then get the result back. Okay, so here,  
37:33 - we're just gonna say user choice, choice, user 
choice, choice, choice, choice, user choice, and  
37:41 - let's say console dot log. Poop for now, okay, so 
let's copy that and paste that a couple of times.  
37:52 - And we'll do plus, and we'll do user choice, okay, 
whatever it is. So choice, what is happening? Come  
38:00 - on, give me I don't know why it's not doing that. 
But let's do that. Alright. So now let's see what  
38:07 - happens. Okay. So now, what I will do is click on 
these buttons, and it should basically give me you  
38:13 - know, whatever I pressed on it. RPS, this gives 
me r p. s, it's kind of hiding in there, but it's  
38:22 - there. I promise you right there. Okay. So let's 
go back. Rock, paper, scissors, right. So again,  
38:29 - it's just a function that we're calling here, 
right? So when we call this r gets passed in here,  
38:35 - and then this gets passed to this, and you know 
how functions work, okay, if you don't know how  
38:42 - functions work, go watch my go take my JavaScript 
course. Okay? So, go do that. Alright, so once  
38:48 - we have this, again, we don't want to console dot 
log. So we know that we have our user choice. But  
38:55 - now we need a computer choice. Okay, so to get 
a random computer choice, I'll just put that in  
39:00 - a separate function. Okay. So I want you guys to 
be comfortable with at running functions in other  
39:08 - functions, okay. So what we'll do is function and 
we'll say get computer choice. Okay, and we'll  
39:17 - just do this. Alright. So what are what are the 
options, right? What are the choices? The choices  
39:23 - are our P as K. So we'll create the choices const 
choices equals an array, and we'll say well,  
39:32 - are P and S? Okay, so we have those. And now to 
get a random element from the choices array. We  
39:43 - do that with the help of the built in object in 
JavaScript called math. Okay. I think we've used  
39:49 - that in the Unit Converter. Yeah, I think so. So 
we can do things like Matt. So here, let's just  
39:56 - do console dot log math dot random Okay, so that's 
where you use math dot random. Math is a built in  
40:03 - object in JavaScript. And random is a method that 
exists in that math object. Okay, so we can use  
40:11 - that. So what this does is it gives you a random 
number between zero and one. Okay? So you're like,  
40:19 - What? What does that help with anything? Let's go 
into that in just a little bit. But let's first  
40:25 - see what this does. Okay, so we'll do refresh. And 
we have that refresh, refresh, refresh, refresh,  
40:31 - refresh, right? It'll never go. It'll never reach 
one always be between zero and one. Okay? It will  
40:38 - be a random number. Basically, now what we 
can do is say, okay, it's a number between  
40:44 - zero and one is cool. But in this case, we don't 
want that. Okay, what we want is a random number  
40:50 - between zero and three, right? 01 or two. So 
then we can say, Okay, if it's if we get one,  
40:58 - we can just do Oh, choices. One, give me P. If 
we get a random number, let's say zero, we can  
41:03 - just do choices zero, which is our right. So how 
we do that is with times three, okay? You're like,  
41:10 - how does that work? How does that work? Well, 
let's, let's see. Okay, so refresh, refresh,  
41:14 - it'll never go over three. You see, will always 
be like 01 or two, you see that? I'm refreshing  
41:23 - like a maniac right now. And how that works 
is let's do some math here, like zero point,  
41:29 - let's do something really low, right? between zero 
and one, which is like 0.01 or something. So let's  
41:37 - do 0.0001 times three, well, that's just going 
to give you something really close to zero. Okay,  
41:43 - that makes sense. And now let's do something 
really close to one. Okay, so let's do 0.99999  
41:51 - times three, you see, it never reaches three. 
So that's how we get random numbers between zero  
41:59 - and three. If you want random numbers between zero 
and 10, all we do is just put 10 there. That's  
42:04 - it. And now you get random numbers between zero 
and 10. Okay, you will never reach 10. Okay, if  
42:10 - you want it to reach 10, you can just do 11 there. 
Okay. But again, this is not helpful to us. Again,  
42:16 - let me change that back to three. This is still 
not helpful because we still can't do choices,  
42:23 - you know, 0.4, right? It doesn't make sense. Okay. 
So what we need to do is actually rounded down,  
42:29 - okay, make it a poll number instead of a decimal 
number. Okay, so for that, we use another method  
42:36 - that exists in the math object called math dot 
floor. Okay. And that's it. So now, refresh,  
42:44 - look at that. 1120 I'm refreshing like maniac 
again, command R, you see, it will always be  
42:54 - a random number between zero and three, right? 
01 or two. So now what we can do is instead of  
43:01 - console logging this, we can just store that in a 
variable. So we'll do a random number equals that.  
43:09 - Okay, cool. So we have that so far, but now we 
don't want the number we want the element. So we  
43:18 - can just do return choices. Random number. Okay, 
so now let's run this. refresh, refresh. Whoa.  
43:27 - What is going on here? Let's see. It doesn't seem 
to be working. Uh, oh, we didn't console dot log,  
43:36 - this console dot log. Go here. Okay. There it 
is. Right. refresh, refresh, refresh, refresh,  
43:44 - refresh, refresh, refresh, refresh, refresh. So 
it's going to be a random, it's going to basically  
43:49 - give you a random element from that choices array. 
Okay. So let's get rid of that. We know that our  
43:56 - function works. So now we can move forward in 
that game, user choice function. Okay. So now we  
44:03 - have user choice. Now we need to get the computer 
choice. So we can just do const. Computer choice.  
44:09 - Choice equals get computer choice. And that's it. 
Okay, so now, let's do console dot log computer  
44:20 - choice here. But we know it works. But let's just 
test it for the hell of it. Let's go down here a  
44:26 - game. And let's just do C or something. It doesn't 
really matter right now. So you see that? Right?  
44:34 - It basically gives you the random computer choice. 
So again, if I do console dot log, user choice,  
44:42 - let's do user choice. I don't know let's do 
something like user choice. That plus, yeah,  
44:55 - let's do that. And then let's go here. Get that 
guy. Put it down here. And we'll do this is going  
45:02 - to be computer choice. Maybe I'm going overboard 
here, but let's, let's test it. Okay. There it  
45:10 - is. Okay. So again, refresh. You see the computer 
choice always changes, but the user choice doesn't  
45:17 - change because we said See, right? So, but if we 
get rid of that, and actually press on a button  
45:24 - Now, let's see what happens. Right? So now when I 
click on the our rock, it's always going, the user  
45:31 - choice is always going to be wrong, are and the 
computer choice changes, right? It's going to be  
45:38 - random. And if I click on the hand, right Rock 
paper, then it's going to be the user choice is  
45:45 - always going to be P, and then the computer choice 
changes again. And then if I click on scissors,  
45:49 - it's going to be as the user choice is going to be 
asked and computer is going to change again. Okay?  
45:54 - All right. So once we have this now, what we can 
say is, now we have to compare, right? Now we do,  
46:00 - if you know, user picks, rock and computer pick 
scissor, then it's a win, right? If the user picks  
46:10 - paper and the computer picks scissor, then it's a 
loss, right? So we have to do that. So then, now  
46:17 - what we can do is, instead of using if statements, 
I'm going to use switch statement here,  
46:23 - I'm going to give you a quick intro here, but I 
highly recommend you check out the documentation,  
46:29 - we can check the documentation of switch. So 
basically, how it works is, let's say we have  
46:34 - a variable here called name, okay, and we'll just 
say name is David. Alright. And now, usually what  
46:42 - we do is if name equals, you know, David, you 
know, console dot log. Hello, right? If we do  
46:53 - and then else, if name is equal to pineapple, 
then then then do console dot log, hey, right.  
47:02 - And then, depending on how the name changes, 
it's going to either do Hello, or Hey, right,  
47:08 - if I put right now it's going to do Hello, because 
name is David. Right? But if I put pine there,  
47:16 - console dot log Hello is going to run, okay, but 
switch statements, how it works is very similar.  
47:22 - All you do is switch. And then the argument. So in 
this case, it's named right. And then what you do  
47:28 - is case and say if the case is Apple, colon, all 
I want you to do is say hello, console dot log,  
47:38 - or console dot log, this is Apple, and then break. 
And then all you do is say, case, pine, then  
47:48 - I want you to do console dot log something else, 
like whatever. And then well, and then break here,  
47:55 - right? So this is how switch statements work. 
Okay, very similar. You can do everything that  
48:01 - you can do it's do with switch statements with 
if statements and vice versa. But in some cases,  
48:06 - switch statements make things a lot easier than 
if statements. So here, what we can do is say,  
48:12 - switch. User choice, plus computer choice. Okay. 
So let's first take care of all the cases, all  
48:25 - the situations when the user wins. Okay, so the 
user will win. If the user choice is R, and rock,  
48:34 - and the computer choice is paper. Yep. And if the 
user choices, paper, and the computer choice is  
48:44 - rock, and if the computer choice, user choice is 
scissors, and the computer choice is rock, no,  
48:55 - paper, yeah. Yeah, rppr s p, okay. In those cases, 
what we want to do is say console dot log, user  
49:06 - wins, okay? And then break, you always need to 
put that break, or else it'll keep going to the  
49:14 - bottom. We don't want that. So we'll also do case. 
So now we'll take care of when the user loses. So  
49:20 - if the user picks rock and the computer picks, 
what happens with puck, paper, okay. And user  
49:31 - picks, Rock paper and computer picks scissors, 
and rock, scissors, and computer picks rock,  
49:42 - okay, in those cases, we just want to say console 
dot log. Computer wins. Okay, or user loses. Let's  
49:54 - just keep things very consistent loses All right, 
and break again. Okay, now let's do the same thing  
50:04 - for the rest. So we'll do five why why paste? 
Okay, cool. And now for the case that last one  
50:12 - is if the if they're both equal, right, so we can 
just do RR this one simple, right? Rp Rs. Okay,  
50:18 - cool. So are our PP SS in those cases it just it's 
draw. Okay. All right. So that's it. So now, let's  
50:31 - see what happens when we click on these buttons. 
All right, so I'm going to refresh here. Nothing's  
50:37 - there. Click on rock one time. Well, nothing 
happened. Okay, let's hold on. Let's do it again.  
50:43 - Click on rock. Okay, cool. I don't know what 
what happened there. Click on rock, okay. It's,  
50:50 - it works. User wins. User wins. I'm click keep 
clicking. It's a draw. It's a wins wins. I'm never  
50:59 - losing. I think there's something's wrong there. 
Is something wrong there? I think something's  
51:06 - wrong there. Let's see. Oh my god, silly me. Okay, 
so here it's not supposed to be. Rp. It's supposed  
51:15 - to be rock and scissors. Right? If computer as 
user picks rock and computer picks, scissor user  
51:20 - still wins. Okay, so I knew something was wrong 
there. But I was just so gone earlier. Okay,  
51:25 - so let's refresh and see if it works. Okay, so 
now we have loses some losers, some wins and some  
51:31 - drop, okay? Which is, which makes sense. So if I 
click on the hand icon, paper, we have some wins  
51:38 - some losers and some drops. Same thing for the 
scissors. Okay, so we know that our game function  
51:46 - works, okay. But now, it's just another console 
dot log, right? It's not showing anything up  
51:52 - there on the page. It's not doing anything, right, 
which is not what we want. Alright. So for this,  
51:58 - what we can do is we can, again, separately create 
different functions for winning, losing and draw,  
52:06 - okay, we never want to put an jam all the logic 
in one function never, ever, okay? Because then  
52:13 - later on, it's it's hard to read. It's hard to 
debug, it's hard to work with other people. It's  
52:18 - just bad. Okay. So instead of logging winds and 
stuff like that, what we'll do is we'll say winds  
52:24 - create a function called wins. Okay, so right 
now we're just pretending that we've already  
52:30 - created a function called wins. Okay? So when the 
user wins, actually, let's do win, okay. And when  
52:37 - the user wins, I want to do something with the 
win function, okay? And I also want to do when  
52:44 - the user loses, I want to do lose, and then when 
the user draws, it's when it's draw, just wanted  
52:51 - to drop. Okay, now, I can go up top here and do 
those functions again. So let's do function. When,  
52:58 - and then let's just console dot log when for now. 
Okay? I just want to, again, test it right away.  
53:05 - Okay, don't move forward. I mean, this is like, 
we know this is gonna work, but I'm just trying  
53:10 - to prove a point. Okay. So let's do y, paste, 
paste. Okay, let's go here. Alright, cool. So now,  
53:18 - if for this one, lose, come on, lose. And this 
is going to be lost, and go down here. This is  
53:31 - going to be draw, and we'll just say draw. Okay. 
Alright. So now, let's see what happens. Okay, so  
53:39 - it's still working. So, again, let's go back and 
start working. Okay. So right now we have when,  
53:46 - and now when we when we want to show? What do we 
want to do? First, we want to first increase the  
53:56 - user score, right? So the first thing we do is 
we go up, we have user score and computer score,  
54:02 - right? So what we can do is, say user score. User 
score plus plus. That's it. All right. And let's  
54:11 - go to the last I mean, it's, it's this is not 
really, really realistic. Usually, you don't  
54:16 - like work in three functions functions at once, 
right? But I'm just showing you here, you can  
54:21 - just do like, computer score plus plus here, okay? 
But we're not going to do that. We're just work on  
54:26 - this function, and then work on this and then work 
on draw, okay, so, one at a time. Alright. So user  
54:33 - score plus plus, and now let's just show you the 
score. Okay, let's see what it is. Okay. And let's  
54:41 - wait for it. Let me hold on. Let's do console dot 
log. It's a win. Okay. Alright, so now refresh.  
54:48 - And let's see what happens. Okay. It's a draw. 
Let's keep clicking draw, draw, draw, draw. Okay,  
54:54 - so now it's saying assignment to constant. Okay. 
So what's happening right now, it's saying you're  
54:59 - trying to Change the constant variable, okay, this 
const. So what we do is instead of const, we can  
55:07 - either use let, or var, okay? We should we should 
be okay using lead here, okay, so we can just use  
55:14 - let. Alright, so now let's go back here and do 
the same thing. Draw you see that when you when  
55:22 - you when we when the score went up by one, and 
it's a one now again, if I keep clicking You see,  
55:28 - whenever we when it goes up Holy crap, we just 
won like, seven at once or something like eight,  
55:35 - eight times in a row. That's crazy. So let's go 
back. And instead of when here, I don't want when  
55:41 - I don't want to console dot log user score, what I 
want is, I want to show it on the page. So what we  
55:47 - do is instead of console dot logging, we just go 
user score span, okay? Because that's the element,  
55:57 - right? Because we're saying usually get element by 
ID user score, and that's the span tag, this span  
56:04 - tag right here. Okay, so let's go back. And all 
we do is use your score span dot inner HTML equals  
56:13 - user score. That's it. Alright, so now, and then 
we can also do the computer score, right? So we'll  
56:21 - also update the computer score, even though right 
now since we only have the wind function, it's not  
56:27 - going to the computer score is going to remain 
the same. So let's do equals computer score.  
56:33 - Okay. All right. So now, let's keep clicking, you 
see that? When the user wins, the score goes up,  
56:42 - right? Again, it says assignment to constant 
variable. Oh, innerHTML. Alright, not in our text,  
56:49 - HTML. Okay. Refresh. And that should be okay. 
Now. Okay. So every time we when the user score  
56:58 - goes up, okay, so once we have the score, and now 
we need to actually display the message that says  
57:02 - paper, beats rock or whatever, right? And for 
that, we can't do that yet. Okay. And that's  
57:09 - because we, we don't have anything that says, 
you know, any reference in our wind function,  
57:16 - right? We have that in our game function, but not 
in our wind function. Okay? So what we can do is  
57:23 - give it some parameters here and say, user choice, 
and computer choice, okay? Or you can just say  
57:29 - user computer doesn't really matter what you call 
it, okay? A, B, you can call it anything you want,  
57:34 - okay? I'm just gonna call it user choice. Computer 
choice, okay. And down here, again, just to just  
57:43 - so you guys don't get confused. I'll just do 
user computer for now. Okay. And then down here,  
57:49 - what we can say is when when you actually run 
the function, right? This is defining a function,  
57:54 - but when you actually run the function, pass in, 
whatever the whatever the user choice and computer  
58:00 - choices, okay? So as the as an argument here, I'll 
just do user choice, and then computer choice,  
58:07 - okay. And then I do that for all of the other 
ones. So user choice, and computer choice,  
58:14 - and we'll define the lose and draw function in a 
bit. So user choice, and computer choice. Okay.  
58:22 - And now let's do console dot log user. Choice, not 
user choice, let's just do user because remember,  
58:29 - we changed it so that you guys don't get 
confused computer, and refresh. And now you see,  
58:36 - it's going to be RS every single time because 
it's always going to be a win, right? Because  
58:40 - this is a win function, it only takes care of 
win, right? It's not going to take care of when  
58:45 - you lose and draw. Okay? So that's what happens. 
But we don't want that what we want is, we don't  
58:51 - want to console dot log, we want to show it on 
the page. So what we do is get the result div,  
58:56 - result div dot inner HTML and say, you know, user 
choice. Plus beats plus computer choice. Okay,  
59:12 - and then we'll say plus, you win. Okay, so let's 
see if this works. So let's wait for one way when  
59:27 - user choice is not defined, why is it that 
okay, we call the user and computer I can I  
59:32 - keep forgetting that? So we'll just call it user 
choice. Okay, that just makes more sense. So we'll  
59:37 - do user choice computer choice. Okay. All right. 
I don't know why it's doing that right now. Oh,  
59:45 - okay. So when we actually got the reference to 
that element, we said, document dot query selector  
59:53 - dot result, okay. And if we take a look at our 
index dot HTML, we stored that not The result I  
60:00 - mean, we did but it's inside of a p tag inside of 
the result. Okay? So here really what we want is  
60:07 - say, P, okay? Get the p tag, get the paragraph 
tag inside the result. So now when we actually  
60:14 - change this, it's going to be a paragraph. Okay, 
so here we should really call this not div, but P.  
60:23 - Alright, so let's go down here. And where's the? 
Where do we use resolve p anywhere else? Let's  
60:31 - hope not. Okay. And let's go here, and let's call 
it P, and this should work. And now let's see,  
60:40 - when we when there is Orbitz as you will, 
right. However, Orbitz S is not so readable,  
60:49 - okay? Our beats s not so readable. We want it 
to be human readable, okay. So what we can do is  
60:55 - convert this to rock and this to scissors, okay, 
and we'll create another functions for those,  
61:04 - okay, for those things. So in this case, a 
function, not functions, okay? function and  
61:11 - we'll call it convert to word or something. 
Alright, and it'll take in a letter, and then  
61:19 - we just do if the letter is equal to r, just 
return rock. If the letter is equal to P paper,  
61:31 - return paper. And if those two are not met, 
then just return scissors. Okay. Okay, so now,  
61:41 - here, what we can do is just say convert to word. 
And go down here as well convert to word. Okay,  
61:58 - and refresh. You see that? Right now? It says 
paper covers rock, because we're not winning.  
62:06 - It's a draw, draw. But then when you win rock 
beats scissors, okay, you win. Okay, so that  
62:12 - works. But now, while we're at it, I also want 
to introduce you guys to some ies six. Okay, so,  
62:21 - right now, this is the CS five right here, right? 
When you have to combine a variable with a string,  
62:27 - all you do is plus, okay, which is cool, but not 
so cool. Okay. So in year six, there's something  
62:34 - called template strings. And all you do is with 
the backticks. Okay, and if you don't know what,  
62:37 - where the backtick is, you can Google that. 
But on a Mac, it's on the top, left corner,  
62:44 - right below the escape button, okay, and Windows 
is probably there. But if it's not just look it  
62:49 - up on your keyboard, you should be able to find 
it. Okay? And then all you do is wrap the end in  
62:55 - a backtick as well. And that's it. Okay, so now 
you can get rid of the pluses and, and the quote,  
63:02 - so let's do that, get rid of that. Get rid of 
that. And let's get rid of the pluses there,  
63:13 - you win. Okay, that's good. Let's get rid of the 
quotes at the end there. And now, the Convert to  
63:20 - word user choice is not a string, right? Right. 
Now, if I displayed this is just going to display  
63:25 - them as strings, which is not cool, right? That's 
what right? That's not cool. So what we do is,  
63:32 - if it's a variable, in this case, it's 
going to, you know, return it's a function,  
63:36 - so we just do dollar sign and wrap that with curly 
brace. Okay. So that's all it is. Okay. And then  
63:45 - we do the same thing with convert. And there you 
go. Alright, paper covers rock, you will keep  
63:55 - going rock beats scissors, right? Now, there's, 
it's not going to say convert to word user choice,  
64:00 - you see? Right? So this is a lot more readable. 
Okay, so now that we have the basic functionality  
64:10 - of the wind function working, now that we have 
that we can move on and just copy this, okay,  
64:16 - copy this and just paste it right here. Okay, 
so we can just say, actually, before that,  
64:26 - let's work on one more thing before we move on. 
Okay. So right now we have rock beats scissors,  
64:32 - but it's still like not clear who's winning 
who, right? You can see your numbers going  
64:37 - up. But you can't really tell who's who's who 
picked rock and who picked scissors. Okay,  
64:43 - you can kind of you know, calculate that because 
if you pick rock, of course, you're the one who  
64:48 - picked rock. But let's keep let's make that super 
clear. So what we can do is right here, we can  
64:54 - just add something and we'll just say we can just 
Somebody do something like, you know, let's do,  
65:04 - let's just do, this is always gonna be user, right 
user and this is always going to be computer comp.  
65:14 - Okay? This is cool. Like, that's cool, but 
it's a little too long. Okay, I don't want to,  
65:21 - I don't want to make that and it's, it just 
doesn't look good. Okay, I thought about doing it,  
65:28 - you know, make, like putting a picture somewhere 
here, right? That'd be pretty cool. But I didn't  
65:34 - I wanted to keep it keep things simple. Okay. So 
here, what we can do is say const. do small word  
65:43 - or small user word. Yeah. Small. user. Word. Sure. 
Or equals user, and just do dot font size. Okay,  
65:59 - that's how you control the font size. Okay. And 
also, I also did this so that I can expose you  
66:04 - to these little, you know, string methods in 
JavaScript. Okay. So user dot font size, we'll  
66:09 - do three, okay, we'll make it super small. And 
then we'll superscript that. Okay, so now, what  
66:16 - we can do is make the same thing and do comp. And 
then we'll do font size of three and superscript.  
66:23 - That as well. So superscript is basically let me 
let me remove that for now. And let's first Well,  
66:30 - let's first let's go up, up, okay, so now instead 
of user here, we just put that in a curly brace,  
66:39 - okay, like that. And then do small user word. And 
then we'll say, come down here and do the same  
66:46 - thing with this guy. So we'll do small comp word. 
Wait, I don't think I call it comp word. Okay,  
66:55 - let's go up. Yep. For this one. It's gonna be 
small comp word. Okay. And this is going to be  
67:02 - calm font size three. So let's see how it looks 
now. Come on, you see that? So that's how it looks  
67:09 - right now. But right now it's on the same line. 
So what I want to do is, I don't know superscript  
67:13 - or subscript, I think subscript word would work 
better. So subscript superscript, would do this.  
67:19 - Let's do that as up, dot s up, okay. And these 
methods exists on the string object in JavaScript,  
67:29 - it's built into JavaScript. So and if you put s 
up, it's gonna move that down, or be the fresh,  
67:37 - there. Let's okay. So this looks a lot nicer than 
just that. Okay? Again, if you guys prefer the  
67:44 - brackets, it's okay. Doesn't the parentheses It's 
okay, you get you guys can use it. Okay, bracket,  
67:49 - parentheses, you parentheses. See, please use that 
if that's easier to understand. Okay, so alright,  
67:57 - so we have the basic functionality working. So 
what I want to do is, I just want to copy all of  
68:02 - this, okay? So I'll just do copy and paste. Okay? 
Because the functionality is going to be the same  
68:10 - thing, right? And let's do this and let's paste 
that as well. Okay, so we have that. And let's  
68:21 - indent that. way. What? Okay, so we indented that. 
Alright, so now let's take care of loops. And then  
68:29 - we'll go into draw, okay? So right now, when we 
lose, we don't want the user score to go up. We  
68:35 - want the computer score to go go up. Right? And 
we don't want let's see, we don't want we want  
68:43 - to show this right? You just spend innerHTML 
equals dad, that is good. That is good. That is  
68:48 - good. And then in the result p what we want to 
say is do loses, too. Okay? loses to computer.  
68:58 - You lost. And not. Not that. Okay, hold on. Okay, 
not that. And that's it. So now, when we lose it,  
69:13 - you do that too. Let's let's add in a poop there. 
Okay. Okay, let's do that. Refresh. Okay, whoa,  
69:27 - user choice is not defined. What's going on? Let's 
see. It says app j. s, line 38. User choices not  
69:36 - Oh, okay. You see that? We didn't define it here. 
Okay, user choice. Computer choice. All right. So  
69:45 - refresh. And you when, let's see what happens. You 
lost. Okay. We have a poop. That's a happy food.  
69:52 - He's happy even if even we lose. Okay, cool. So we 
have that and you can see that the computer score  
69:59 - goes up when we lose You see, whenever we lose the 
computer score goes up, okay? And when is draw,  
70:04 - nothing happens right now because we need to, 
again code that. Okay. Okay, so we have done  
70:11 - that. And now let's go to the draw. And here we 
don't do user score plus plus or do any plus plus,  
70:17 - because let's draw, nobody goes up. Okay? You can, 
like make both of them their score go up, but that  
70:26 - just doesn't make sense. So we'll just do those 
two. And we don't need to do these right? Yeah,  
70:36 - we don't need to do that. And, or do we? Let's 
see. Yeah, we don't need to do any of that. For  
70:44 - a draw. For draw, we can just keep Yeah, we can 
just keep that the same. So it just like, equals,  
70:50 - we'll just say equals, and we'll do it's a draw. 
Okay, and what emoji should I use? Boring now? I  
71:02 - don't know. Let's just use apple. Let's just not 
use anything. Okay. Um, okay. User choice is not  
71:13 - defined. Again, in our draw, we got to define 
that. So choice user, computer choice, refresh,  
71:23 - and look at that. So now when we when is 
going to say when C. And when we lose,  
71:29 - it's gonna say last, right? And when we do, 
draw, it's a rock equals rock. And it's a  
71:37 - draw. Okay. All right. So that's pretty much it 
in terms of the main logic of our app. Alright,  
71:45 - now let's add some finishing touches and do the 
little things. Okay, you know what they say? They  
71:50 - say the difference between the good and the great. 
Is that little extra, okay, that little extra? I  
71:56 - don't know who said it, but the first time I heard 
it, I mean, and that's why I still suck. Okay,  
72:04 - let's keep going. So if you notice on the 
working app, refresh, I don't know why that  
72:09 - piece that but doesn't matter. So when I click 
on it, you see if it's a draw, it's that gray,  
72:14 - it adds that gray border, animated and goes away, 
right? If I lose, that happens, and if I win,  
72:21 - let's see if I win. There we go. Right, the green 
thing, good border appears. So for that, what we  
72:28 - can do is in our win, lose and draw functions, we 
can add some things to it. Okay, so what we do is  
72:36 - we can first work with the win, okay, so we'll 
do is go here. And let's go to our working app,  
72:42 - right now, if I refresh, nothing happens, right? I 
mean, the message pops up, everything else works,  
72:48 - but animations not there. Okay. So for that, what 
we can do is add a class to each of them. Okay,  
72:58 - so when the user wins, and if we click this guy, 
it should add a class with some styles to this  
73:08 - div. Okay, so how we do that is, first, we have 
to make some styles. I mean, some classes right in  
73:17 - our style, style dot CSS. And this is JavaScript 
video, but I left this off for JavaScript,  
73:25 - because I felt like this had more to do with 
JavaScript than CSS, okay. So here we can do  
73:31 - green glow. Okay. So when the user wins, we want 
some green border to appear. So I'll do border,  
73:38 - four pixels solid, and let's do four D, cc, seven 
D, okay. And then we'll get a box shadow, okay,  
73:49 - box shadow of 004 pixels or 10 pixels. And we'll 
give it a color, a darker green color. Let's do  
73:58 - three, one, B Four, Three a for this. Okay, 
and now let's do the same for red glow. Okay,  
74:08 - red glow, and we do something similar. So, grab 
that and in this case, we want to add a color of  
74:16 - something reddish. Let's do FC 121 B. And for 
the box shadow color, let's do d 01115. Okay,  
74:27 - and now let's repeat the same process for for 
the gray color. So we'll do gray glow, and we'll  
74:38 - do something grayish. 464647. And for this one, 
we'll do two five to nine to be more darker. Okay,  
74:48 - that looks good. And if you don't know how the 
box shadow works, this is the horizontal vertical  
74:56 - offset. And then you have the blur and the color. 
Okay, that's all it is. And then you can, you can  
75:02 - have an optional value here for spread, how far 
your shadow should go. But again, you can look  
75:09 - that up. It's super simple. It's not that hard. 
So now let's go to the JavaScript part. And here  
75:15 - now that we have those classes, what we can do is 
say, when the user wins, okay, when the user wins,  
75:23 - what we want to do is add a class of green glow 
to whichever div the user clicked on. Okay, if the  
75:34 - user clicked on the rock div, it should give it 
should give that rock div a class of green glow,  
75:42 - okay? And that's going to give that border of 
green. Okay, so now for that what we can do is say  
75:47 - document dot get element by ID of our right. But R 
is a hard coded letter, right argument. And that's  
76:01 - not what we want, because then it will only give 
that green color. Only if we click on the rock,  
76:08 - what what if we want, when we click to on 
the paper, right, it's not going to do that,  
76:13 - we'll have to hard code everything. So that's 
not what we want to do here, what we want to  
76:18 - do is get the user choice. Okay. And again, user 
choice here is whatever your user clicks on it,  
76:27 - and then it's either, you know, it basically 
is either r, p or s, okay? It's one letter,  
76:33 - depending on what the user clicked on. Okay. So 
we do document dot get element by ID, user choice  
76:40 - dot class list class, this is a method that exists 
in the DOM. And with JavaScript, when you do that,  
76:46 - what it gives you is an array of all the classes 
on that specific element, okay? And now what we do  
76:53 - is on that array, we just do a dot add, and then 
add our class. So then we can just say, dot green  
77:01 - glow here. Okay. And that's it. So now let's see 
what happens when we click something. And if we  
77:07 - win, let's see what happens. Okay? refresh, click, 
click, click, let's see fly when it's winning,  
77:13 - but it's not doing that. Let's see what why that 
is. Oh, I'm not supposed to put the period there.  
77:20 - Because we know it's gonna be a class. Okay? So we 
don't need to put that there. Okay. And there it  
77:26 - is. So the border here is not working. Okay. So 
the glow is working, the box shadow is working,  
77:32 - but the border is not working. Okay, so it's still 
white. And I think there's some CSS conflicts.  
77:39 - So I'm not going to look through everything and 
try to fix it. What I will do is I will just put  
77:44 - that important flag, okay, maybe we can just move 
all this down at the very bottom, and that should  
77:49 - fix it. Let's try that first. Because putting 
the important flag is never a good idea. Okay,  
77:55 - so we'll go down all the way down and put it here. 
Okay. Let's see if that makes a difference. Okay.  
78:01 - Let's go here, refresh. And there it is. Okay, so 
we didn't have to put that important flag. Okay,  
78:09 - cool. Let's also make sure it works on paper and 
scissors, okay, it works on all of them. If we  
78:15 - when clicking on any of those buttons, it will 
add a border of green However, it's still green,  
78:22 - right? It's not supposed to be green, if you 
go here, right? If we when it just goes back to  
78:27 - white, right? It's, it has that little animation. 
So how do we do that? Right? So we do that by  
78:32 - using something called a set timeout function in 
JavaScript, okay. And we can do this thing with  
78:41 - CSS. But I just wanted to do this with JavaScript. 
So I can introduce you guys to set timeout. Maybe  
78:50 - we've done that with the digital clock. I 
think we use set interval there. But yeah,  
78:57 - let's do set timeout. Okay, so let's go over 
what set timeout does. So here, let me just  
79:03 - run it in the out in the global scope. Let's do 
set timeout, and set timeout takes two arguments,  
79:08 - okay. It's going to take in a function, and let's 
do function. And let's just say console dot log.  
79:14 - Hello. Okay. And the second argument it takes is 
the time in milliseconds of how long you should  
79:23 - wait before you perform that first argument, first 
function. Okay? So if I do 3000 milliseconds here,  
79:32 - which is three seconds, it will wait if I 
run this, okay. It will wait three seconds,  
79:38 - and then it will say hello. Okay, so if I refresh 
here, let's count 012. Boom, there it is, right.  
79:47 - If I do one second, it should happen in a second. 
Refresh, one. There. That's right. So that's how  
79:55 - that works. So let's comment that out. Let's 
comment that let's get rid of it. It's pretty  
79:59 - silly. Maybe let's undo and actually grab it. So 
then we can just use that in our function there.  
80:06 - And there we go. Okay, so instead of console 
dot logging here, what we need to do is run  
80:13 - something else. Okay? And what we do here is, so 
we added a class called green glow, right when  
80:20 - we clicked on that div, when we won, but now 
right after that, what we need to say is, hey,  
80:27 - wait for three seconds or one second, or however 
many seconds and then remove that class. Okay,  
80:34 - so let's do that. So then we can just do document 
dot get element by ID of user choice again,  
80:41 - and then dot class list. dot remove. green glow. 
Okay, and now, you can see it happening if I go  
80:54 - to let's refresh and let's go to here, inspect. 
And let me drag this to the right a little bit.  
81:03 - And let's go look at all these depths. Okay, let's 
see what happens when I when Okay, let me refresh  
81:10 - again. I shouldn't have done that. Okay, there 
it is. Alright, so I'm going to click on this.  
81:16 - I lost draw. No, there it is. Right. So it was 
there for a second and then it went away. Okay,  
81:25 - again. Again, let's come on, let me win. There 
you go. Right. It adds that green glow class and  
81:33 - then it removes that, okay, again, again, it works 
on the paper and scissors to like, come on, when  
81:40 - they go. scissor goes away. Okay. So right now, 
it's not so natural. Because if you notice here,  
81:47 - come on, let me win ones, please. No, no, no, no, 
no, no, no. What? Okay, you see, it's, it takes a  
82:00 - little too long for it to go away. So what we 
should do is make that like 300 milliseconds,  
82:05 - okay, which I think is a little bit more natural. 
So now, if I went here, I don't have luck with  
82:11 - paperless to go with rock. There you go. Right. 
It's a little bit more natural. It's faster.  
82:16 - Okay. So now we can just copy and paste this. And 
also you can, you can probably, you know, put this  
82:23 - in a variable because we're using it twice here, 
right? Let's be efficient. Let's just do it. Okay,  
82:27 - let's just do it. So we'll just go up top here. 
And since these are variables, we should probably  
82:36 - move this top here. Okay. And let's just do const. 
We'll just call it user choice diff. Let's go  
82:45 - here. And we'll call it document dot get element 
by ID. User choice. Okay. And now we can replace  
82:56 - this whole thing with user choice, diff. Okay. And 
let's do the same thing with this guy here. User  
83:11 - choice, diff cap, that looks good. And now we can 
just copy this two more times. Let's go here. Copy  
83:22 - that. And here instead of green glow, what we want 
is red glow, right? Because we lost. And let's go  
83:30 - here as well. red glow. And let's go down. And 
for that we can just do, paste. Well. Let's get  
83:40 - that. Okay. And here. Let's just do gray glow. 
Let's go up top. Gray below. We'll have to get  
83:50 - that variable as well. So copy, just get to the 
top, paste. Paste. And let's move this to the top  
84:03 - as well. All right, so that looks good. Let's 
refresh her. Let's see one. Gray. Last. Okay,  
84:14 - this seems to be working. Let's go to the paper. 
Gray. Gray. loss. One last. Last gray. Come on.  
84:24 - did I win? Can I can I please when I swear. Okay, 
there we go. It's working. Gray last Okay, so last  
84:35 - and gray works. Okay, winning works too. Okay. 
All right. So that works. Now I want to do one  
84:40 - last thing before I call it a day. Okay, so let's 
go here to our function and let's sexify it. Okay,  
84:47 - so let's, instead of doing it the s5 version 
here instead in this inner function in ESX,  
84:53 - what you do is get rid of this function name, 
and then add an arrow. Okay? And then if it's  
84:59 - just Just a one liner here, this user's choice div 
class list is just one line, right? So for that,  
85:05 - we can just get rid of this curly brace. Okay. 
And now let's get rid of it. And this should  
85:12 - still be working. So let's go to red glow, 
and see if it works. Let's see, when we lose,  
85:18 - what happens. Come on, can I lose now? There it 
is, right? It still works. So we can do the same  
85:24 - thing for all of this. So let's get rid of that. 
Add an arrow. And since it's one line, we can just  
85:32 - get rid of this and get rid of that. Cool. And 
now let's go to the wind section. And let's do  
85:38 - the same thing. Get rid of these two. Let's go and 
get rid of that. And at the arrow, okay, refresh.  
85:48 - It's still working. Whoa, what happened? Oh, get 
rid of that. Okay. There it is. It still works.  
85:59 - Cool. Everything looks good. And I think we have 
some Yes, five. Yep, yes, five code here. So we'll  
86:06 - also fix these. Alright, so here again, we can 
just do the same thing. Just go here at the arrow,  
86:14 - get rid of this, this, get rid of this, this this. 
And that's it. And let's do the same thing here.  
86:24 - Get rid of that add an arrow. Well, and let's pull 
these up. Get rid of that. Get rid of these to  
86:33 - get rid of these two. All right. And now again, 
let's do the same thing. Okay. Okay, that that.  
86:46 - And that's it right? I think that's it. Okay, so 
let's make sure it's working before anything. All  
86:54 - right. This is working. All the clicks are working 
and looks good. Let me delete the lines here. Wow,  
87:02 - this is looking very, very sexy. Okay, um, I think 
that's it. Alright guys. So that's it for rock  
87:10 - paper scissors. If you have any questions, leave 
it in the comment section below. Peace out dude.