00:03 - [Music]
00:21 - hi my name is eric i'm a software
00:23 - engineer at twitter
00:25 - um
00:26 - so when i was thinking about what i
00:27 - wanted to talk about i wanted to think
00:29 - about
00:31 - what was something new
00:33 - that related to my experience at twitter
00:35 - and what's something that's not being
00:37 - talked about typically at tech
00:38 - conferences and i kind of thought well
00:41 - you know twitter's goal is to reach
00:43 - every person on this planet and the
00:46 - thing is we can't do that effectively if
00:49 - we don't consider our users language
00:51 - their culture and then the environment
00:53 - they live in
00:55 - so this talk we're going to go over like
00:57 - how to localize your app and make the
00:59 - app feel native to your users and so you
01:02 - can grow your app from your local
01:04 - audience to an international audience
01:08 - um these are some of the products i've
01:09 - worked on i worked on digits which is
01:12 - now part of firebase auth
01:14 - and you know we served 217 countries and
01:17 - we supported 34 different languages
01:21 - i also worked on twitter can this
01:22 - allowed
01:23 - developers to embed tweets into their
01:26 - apps so this is how we kind of grow the
01:28 - reach of twitter about beyond just our
01:31 - users inside the app and then i'm
01:34 - currently
01:35 - working on the twitter for android
01:36 - platform and i'm working on emerging
01:38 - market performance so
01:40 - as we improve performance our top line
01:43 - metrics will improve and i'll talk a
01:45 - little bit about that on my slide too
01:49 - all right so the first topic is like
01:51 - localization so like i said
01:53 - you want your app to feel native to the
01:56 - users
01:57 - users
01:59 - and so when we talk about locales
02:02 - generally there's like two components to
02:04 - a locale there's the language
02:06 - and then there's the geography so
02:10 - and this is because for example oh
02:12 - that's mine
02:18 - so like spanish speak spoken in mexico
02:22 - isn't the same as spanish spoken in
02:24 - spain and there's also some cultural
02:26 - differences between spain and spanish
02:28 - and how we display dates and times and
02:30 - number formats so that's why there's
02:33 - these two components to a locale
02:35 - so
02:36 - this app this is mostly focused on
02:38 - android and how to do it but these same
02:40 - things pretty much apply web android and
02:43 - ios
02:46 - so okay you want to get started you've
02:48 - decided you want to grow the reach of
02:50 - your market so what what's kind of the
02:51 - first step the first one is you want to
02:54 - like identify your market opportunity so
02:56 - you want to go ahead and look like
02:58 - what's the relative wealth of that
03:00 - region you want to target what is the
03:02 - penetration of smartphones and what's
03:04 - the population size
03:06 - you know you want to make sure if you're
03:08 - going to go through all this effort you
03:09 - get the biggest bang for your buck
03:11 - the other thing is you want to consider
03:12 - your competitive landscape
03:15 - if you have a music streaming app
03:17 - and you want to come to the united
03:18 - states you're gonna have a lot of
03:19 - competition you know there's spotify
03:21 - there's title there's pandora there's
03:23 - amazon music there's google music so
03:27 - maybe the united states isn't the best
03:29 - place to start
03:30 - and then also just the financial and
03:32 - regulatory factors of the region you
03:34 - want to operate um like click-through
03:37 - rates in india are far lower than let's
03:40 - say in the united states so you need to
03:42 - take these financial considerations into
03:44 - play and kind of the regulatory regimes
03:46 - of each country
03:50 - so here's an example
03:51 - in the united states
03:53 - we have 37 million native spanish
03:56 - speakers so these are people according
03:58 - to the census bureau that speak spanish
04:01 - at home every day and for context like
04:04 - the united states population is about
04:06 - 320 million so about 10 of the
04:08 - population
04:10 - and 2.8 million chinese speakers so this
04:12 - is mainly mandarin and cantonese and
04:15 - these groups in the united states
04:16 - control 2.1 trillion dollars in
04:19 - household spending
04:20 - so this is actually a big opportunity in
04:23 - the united states for example
04:25 - to just take your app
04:26 - and localize it into spanish and here
04:30 - you're reaching these users who and
04:32 - you're making the app feel native to
04:34 - them in their own language
04:37 - so like how do you get started
04:40 - so
04:41 - very big i mean
04:43 - these are basic steps to get you started
04:45 - and get your app ready for it
04:47 - translation
04:48 - um i'm not gonna really go over like how
04:50 - to select a translating company or where
04:52 - you can go but basically you go find
04:55 - these services online they usually
04:57 - charge something like 8 cents to 18
04:59 - cents
05:00 - um per word translation and
05:04 - you know it goes from just native
05:05 - speakers translating professional
05:07 - translators and then you have
05:08 - professional translators and then
05:10 - they'll have someone double check to
05:12 - work
05:15 - and the goal here is once we have a
05:17 - vendor
05:18 - we want to have
05:20 - high quality translations we want a
05:23 - quick turnaround and we don't want a lot
05:25 - of back and forth you know we want to
05:27 - avoid uh i always hate it when i get a
05:30 - jira ticket from my translation team and
05:32 - saying hey we don't understand what's
05:33 - going on here or we need more context
05:37 - and so that takes back and forth and
05:38 - then it delays my feature shipping
05:40 - because i haven't translated everything
05:42 - i need so like how do we go about doing
05:44 - this
05:46 - so you've probably all seen these
05:47 - warnings in android studio
05:50 - they've been in since like android
05:51 - studio two um just make sure any string
05:54 - literals you have you can just convert
05:55 - them into uh string resources
05:58 - um there's like a quick fix tool tip you
06:01 - just click extract resources
06:04 - you get this little dialogue um
06:07 - you just decide where you want your
06:09 - default value is set
06:11 - and that's it you should have something
06:12 - like this everything should be in a
06:14 - string resource
06:16 - so
06:17 - this is your file this is what's going
06:19 - to be sent to the translation center
06:22 - um
06:24 - let's hold on for a sec
06:25 - and the goal here
06:27 - is to get something back that's
06:28 - translated and it's high quality
06:31 - and hopefully you haven't done too much
06:33 - back and forth so what can we do so how
06:35 - can we go about doing this
06:38 - so you want to provide
06:40 - like context for your declared strings
06:42 - you want to think
06:43 - um so in this case my app is called
06:45 - demonstration and demonstration in
06:47 - english is what's a homonym and so these
06:49 - words that are spelled the same and they
06:52 - sound the same but they have different
06:54 - meaning
06:55 - and so when they go translate into other
06:57 - languages it might not be clear
07:00 - which meaning you mean so
07:02 - in these comments section provide that
07:04 - context to your translators so in this
07:06 - case my app is demonstrating how to
07:09 - translate things so this is a practical
07:11 - and you know explanation of how
07:13 - something works
07:14 - so
07:15 - make sure you include that inside of
07:16 - your description
07:18 - and you know other languages have
07:20 - similar things there's like heteronyms
07:23 - and there's also homeographs so these
07:25 - are like words are spelt the same
07:27 - but are um but sound different like a
07:31 - bow and arrow or the power of a boat
07:37 - also include like where are these
07:39 - strings going to be kept and so that
07:41 - gives in context of the translator you
07:43 - know do they need to keep the strings
07:45 - shorter
07:46 - um
07:47 - do they need do they have more room to
07:49 - work with things
07:50 - you know
07:52 - if they need to if it's a resource
07:53 - constrained space
07:55 - maybe
07:56 - they can choose a different synonym for
07:58 - the word ins that's shorter
08:02 - and so some of these things you know
08:04 - like buttons they're usually more space
08:05 - constrained so they know to be really
08:08 - short with their
08:09 - the language
08:10 - um like app name it's limited to 30
08:12 - characters so make sure your translators
08:15 - know of these limits so that they can
08:17 - keep to them
08:21 - and then of course mark the things that
08:23 - you shouldn't be translated you don't
08:25 - want to waste time and money having
08:27 - things that are translated that
08:29 - shouldn't be
08:31 - so brand names typically are translated
08:34 - so twitter isn't going to be translated
08:36 - into chinese it's not going to be
08:37 - translated into spanish
08:39 - certain proper names
08:41 - placeholders
08:43 - and special unicode characters
08:46 - obviously urls you don't want your urls
08:48 - going to 404s and then code
08:51 - and also here you can see
08:53 - this is the placeholder syntax so this
08:55 - is um
08:56 - xml localization interchange file format
09:00 - and you can add placeholders so when you
09:01 - preview the string inside
09:04 - your layout preview it'll show true as a
09:06 - default so that's a fun little trick
09:11 - so okay you've gone through you've
09:13 - translated everything
09:16 - but now what about dates currency and
09:18 - numbers these are things that generally
09:20 - don't vary by language but they vary by
09:23 - the region you're located in
09:26 - and so android
09:28 - android ios and a lot of back-end
09:30 - systems
09:32 - they provide a lot of these tools and
09:34 - they're all backed by the ibm icu
09:36 - library it's the international
09:38 - components for unicode it's basically c
09:40 - c plus plus library and it has like a
09:43 - java wrapper and it supports a lot of
09:44 - internationalization
09:46 - and localization functions for you
09:49 - um and showing the correct time and date
09:52 - and format
09:53 - um
09:54 - really helps your users recognize what's
09:56 - going on you know for example i landed
09:58 - here i got off the airplane i like i
10:00 - really needed a coffee and i looked at
10:03 - the price it said ten thousand
10:05 - and i was
10:06 - thinking wait a minute that can't be
10:08 - right and then i realized wait they just
10:10 - used the com as a as a decimal place
10:12 - holder here where in the united states
10:14 - to use the period but you know
10:17 - as a as a us user
10:19 - um i was initially confused it took a
10:21 - while for me to think about that and
10:23 - process
10:26 - so one of the things on android they
10:28 - have a fun little feature it's called
10:30 - best
10:31 - get best date time pattern unfortunately
10:33 - it's only available on jelly bean mr2
10:36 - plus
10:38 - and what this does is you can use these
10:40 - unicode date patterns you know the mm
10:43 - for the two-digit month day and year and
10:46 - what happens is the order and
10:48 - the separators for the dates are
10:50 - irrelevant
10:51 - so
10:53 - you give it what you want and then it'll
10:55 - return the correct format for you so
10:57 - here i can give it month day year and
11:01 - for you
11:02 - for ukraine it'll turn me day month year
11:05 - with the periods in between
11:11 - [Music]
11:13 - and so like here are some easy examples
11:15 - um in the united states we do month day
11:17 - year uh france uh day month year with
11:20 - the slash
11:22 - you know japan
11:23 - uh starts with the year and then here in
11:25 - the ukraine so that should look familiar
11:27 - to all the ukrainian developers i hope
11:32 - uh also like i mentioned there's also
11:35 - helpers for decimal points too
11:37 - so in the us we use the period as a
11:39 - decimal point
11:40 - and we use a com as a thousand separator
11:43 - so like when i saw a number that's why
11:46 - it was like initial confusion for me as
11:48 - a us user
11:49 - and so by displaying these numbers
11:52 - correctly you know your users
11:55 - will feel like this is a native
11:57 - experience to them
12:00 - and same thing with currency there's
12:01 - currency helpers so don't make sure that
12:03 - the currency symbols are located in the
12:05 - correct place
12:11 - um one thing i learned with digits is
12:14 - that phone numbers are actually really
12:16 - hard um
12:18 - it's a very hard problem
12:20 - to solve and there's a lot there's
12:22 - actually one really good library out
12:23 - there it's like lib phone number and
12:26 - android uses this phone
12:27 - lib phone number from google to provide
12:29 - you some uh
12:32 - formatting features and android so what
12:34 - you can do is you can store all your
12:36 - phone numbers in one common format
12:38 - so there's like an itu standard e164
12:42 - and this kind of describes how
12:44 - you can format international numbers but
12:46 - what happens is you're not users local
12:48 - users probably want to see a number
12:51 - uh in their national format is what it's
12:53 - called
12:54 - and so you can give it the string that
12:57 - you save maybe in your database
12:59 - and then when you display the string to
13:01 - the users
13:02 - you know it'll be formatted in a way
13:04 - that they expect to see it so like same
13:07 - again us france ukraine and uh the uk
13:12 - also you notice i used a bunch of these
13:14 - constants originally i hadn't used some
13:17 - constants and i thought uk uh was a
13:20 - country code but it's really gb so use
13:23 - some of these constants and it'll be
13:24 - helpful
13:30 - um
13:31 - another issue like i ran into within
13:33 - congratulation digits is we wanted to
13:35 - display a whole list of countries
13:37 - so
13:38 - you wanted to select your country code
13:40 - and we had a list of countries but when
13:42 - we internationalized things strings
13:44 - weren't sorting in the correct order
13:46 - uh you know as a us-based developer
13:49 - uh this will work right because they're
13:50 - all as key characters
13:53 - but what happens is when you start to
13:55 - introduce um
13:56 - unicode characters or you look at other
13:59 - languages
14:00 - um like the n a
14:03 - n and n a in spanish you want to make
14:05 - sure they're sorted in the correct order
14:08 - and then also some languages like
14:09 - spanish also have the double l
14:11 - um czech has like the ch so these are
14:14 - called digraphs so there's a lot of
14:16 - these other characters that you want to
14:17 - make sure things are sorted correctly
14:19 - and if you're sorting things by the code
14:21 - point um it won't work so
14:24 - uh don't do this for
14:26 - [Music]
14:28 - sorting and what you want to do is use
14:31 - this collateral feature so this is also
14:33 - provided by the icu library
14:35 - and here what we're going to do
14:37 - is
14:38 - excuse me
14:40 - we want to look we're going to set a
14:41 - strength and what happens is we set
14:43 - primary and so it's going to sort based
14:46 - on primary differences so capital a
14:49 - and lowercase a
14:51 - are actually
14:52 - secondary differences so they'll sort in
14:54 - the same order
14:59 - and also like in spanish
15:01 - uh with the double l
15:03 - uh spanish is actually adapted to like
15:06 - technology standards so now the double l
15:09 - is actually treated as just two
15:11 - individual l's in sorting and so it'll
15:14 - help
15:15 - it'll provide these functions to sort
15:17 - everything for you so now
15:19 - you know when you go to my drop down
15:21 - list and we have the localized list of
15:23 - countries i go ahead and i use this
15:25 - collater and the sort things and now
15:27 - everything's sorted based on the correct
15:29 - locale
15:33 - so other considerations when localizing
15:35 - things
15:35 - is machine to machine interactions
15:39 - generally
15:40 - you want to keep you don't want to use
15:42 - the default locale for machine to
15:44 - machine transactions
15:46 - um
15:47 - you want to specify
15:49 - the locale that you're using
15:51 - um like if the date is a day is 17 but i
15:56 - in the us you know
15:58 - the parsing of that date is going to
15:59 - fail because there's no 17th month of
16:01 - the year so making sure that
16:06 - the locale matches the locale of your
16:08 - api and then translate that into the
16:10 - future you need
16:12 - units of measure are another thing in
16:14 - the united states
16:16 - um
16:16 - we use the imperial system
16:19 - we're only one of three countries that
16:20 - do that
16:22 - so that's pretty easy to solve
16:25 - and then
16:27 - other domains
16:29 - some specific domains have like
16:30 - conventions that don't match the locale
16:33 - so if you're doing like a scientific
16:34 - application
16:36 - generally it's used in metric right so
16:39 - no matter if you're in the united states
16:41 - or europe or the rest of the world you
16:43 - would still continue to use metric
16:44 - system
16:48 - and in android 24 plus now they have
16:50 - some new apis provided by icu
16:53 - just to make you aware of them so if
16:55 - you're packaging the icu library it's
16:57 - pretty big so now it's included as part
16:59 - of android so you can create like an apk
17:02 - split
17:03 - 24 plus you can use the built-in icu
17:06 - libraries 24 and below
17:09 - you could just you'd have to package
17:11 - your own but this way your apk would be
17:12 - smaller
17:17 - so rtl um so not all users read from
17:21 - left to right some users also go
17:23 - right to left and so these common
17:25 - languages arabic hebrew
17:27 - prussian and urdu are the biggest
17:30 - languages
17:32 - so here's an example
17:34 - there's 160 million arabic speaking
17:37 - users on the internet and there's 80
17:40 - percent
17:41 - of phones shipped in the middle east
17:43 - support android
17:45 - and but there's only 8.8
17:48 - of web content is in arabic so
17:51 - if you're like an uh let's say the
17:54 - arabic spotify
17:56 - um you have this huge audience you can
17:58 - reach
17:59 - now
18:00 - if you have this
18:01 - content in the arabic language
18:05 - and so like how would you go about you
18:07 - know localizing your app for these
18:08 - languages
18:10 - so a little history um android 4-0 was
18:14 - localized in arabic and it also included
18:17 - an arabic reshaper so you might ask
18:19 - what's a reshaper
18:20 - arabic is kind of like a curse of
18:22 - language
18:23 - and so without a reshaper up top you see
18:26 - all the characters are in its isolated
18:28 - form
18:29 - um
18:30 - and each character is rendered the same
18:32 - regardless of its surroundings and so as
18:35 - an arabic reader
18:37 - you know it's going to be slowing that
18:39 - you down it's kind of like cursive you
18:41 - know when if if i wrote cursive and i
18:43 - spaced everything out you would be
18:44 - confused
18:45 - and you would have yours your
18:47 - comprehension of what you're reading
18:48 - would take a longer time
18:50 - so with the reshaper what happens is it
18:52 - reshapes the characters according to the
18:54 - surrounding characters for you
18:57 - and so that'll be more natural for your
18:59 - arabic speaking users
19:02 - um in android 4.1 they have a
19:05 - bi-directional text support for text
19:06 - view so what happens is the text will
19:09 - automatically detect the language and
19:11 - decide whether to display things left or
19:13 - right
19:14 - but it wasn't very smart it would just
19:16 - look at the first character say it's an
19:18 - rtl and shift things right to left or
19:20 - left to right
19:22 - in 4.2 you got layout mirroring
19:25 - and some better fonts
19:27 - and then 4.3 we they improved
19:30 - bi-directional support so now they
19:31 - include some heuristics so if you have a
19:34 - mixed content like arabic and english
19:37 - it'll go through you can apply various
19:38 - heuristics and it'll decide whether to
19:40 - display your content right to left or
19:41 - right left to right
19:44 - so here's an example of bi-directional
19:47 - support
19:49 - so here
19:50 - i have english or
19:53 - fake english whatever that is and then
19:56 - it's going to lay everything out left to
19:58 - right
19:59 - and then i just switch my device or i
20:01 - switch the text to arabic it detected
20:04 - this it was arabic and it was a right to
20:05 - left language
20:07 - no work he didn't have to do anything
20:11 - rtl mary so what happens is
20:15 - you want your right to left users to
20:17 - experience the app the same way you do
20:20 - so as you scan the app you see my
20:22 - profile
20:23 - then you see like my username and then
20:25 - you see the text as you go across so you
20:28 - want your users to have that same
20:29 - experience
20:30 - in the right to left so what you can do
20:32 - is you have to go to your manifest and
20:35 - save
20:36 - that your app supports rtl so you have
20:38 - to go ahead and just enable rtl support
20:42 - and then
20:43 - what we can do
20:46 - is
20:47 - going to find you see these you know um
20:51 - layout to the left of well instead of
20:53 - left you could do end of
20:55 - and what happens is in a left to right
20:58 - the start
20:59 - is the left side of the screen and the
21:01 - end is the right side of the screen but
21:03 - when you're in rtl mode the start is at
21:05 - the right side of the screen and your
21:07 - end is at the left side of the screen so
21:09 - you can define these parameters
21:12 - and then when you switch it everything
21:14 - will be out laid out correctly the
21:16 - padding should be correct
21:18 - and if you're targeting 17 plus you can
21:20 - just get rid of these left to right
21:22 - things all together and there's actually
21:24 - lint warnings in the tools that'll kind
21:25 - of tell you this so
21:28 - there you go you switch it to your rtl
21:30 - language and now everything's laid out
21:32 - and your right to left late language
21:35 - speakers experience the app the same way
21:38 - as you left to write language speakers
21:42 - uh one thing i found out is that
21:44 - viewpager does not support right to left
21:47 - languages so it doesn't automatically so
21:50 - you might be scrolling
21:52 - um to the right
21:54 - but your
21:55 - you know right to left language are
21:56 - going to want to scroll to the right so
21:59 - this is a long-standing request by the
22:00 - community but there's a lot of other
22:03 - developers that have created solutions
22:05 - for you
22:06 - so one of these is rtl view pager by
22:10 - duolingo
22:13 - and then also um there's drawable
22:15 - mirroring in some cases you might want
22:17 - to just flip the image to mirror it um
22:21 - i've never had a use for that and then
22:23 - but the one useful feature i find is
22:26 - that the force rtl option so you can go
22:28 - into settings force rtl
22:30 - and it'll
22:32 - take whatever default locale you're on
22:34 - already but just lay out everything
22:36 - right to left and that helps you find
22:37 - bugs and it's really useful because
22:39 - before i'd have to switch my phone to
22:41 - arabic and then i couldn't find the
22:43 - setting to get back to english so that
22:46 - was a little troublesome
22:51 - so i had an opportunity to talk with
22:53 - some developers in the middle east and
22:55 - india and one of the things they told me
22:56 - was
22:57 - you know for
23:00 - uh sorry for the arabic language like
23:02 - you need to make the font bigger and i
23:04 - was like
23:05 - well i wonder if google's thought about
23:06 - this they must have so i went to the
23:08 - material guidelines and read through
23:09 - them and they basically uh make the
23:12 - scripts into three different categories
23:14 - so there's like the english like ones
23:16 - which are latin greek and cyrillic
23:18 - you know the dense ones like chinese and
23:20 - then the tall ones which are some of
23:21 - these middle eastern languages and the
23:23 - guides basically said hey for these
23:25 - other
23:26 - for dense and tall you should make these
23:29 - uh
23:30 - characters bigger to make them more
23:31 - readable so you know kind of what i'm
23:33 - hearing from developers and users you
23:36 - know google's already incorporated into
23:37 - some of these guidelines so these
23:38 - material guidelines will be very helpful
23:41 - in making sure that
23:43 - your users and everything's readable and
23:45 - laid out
23:48 - so the other thing is testing how do you
23:50 - you know what are some of the things you
23:51 - want to look for when testing
23:54 - your localization
24:02 - so you know you want to have a test
24:03 - environment set up
24:05 - you can look for common um issues
24:07 - and then you know at twitter we're a
24:09 - pretty large company and we hire people
24:10 - from all over the world we have people
24:13 - that speak ukrainian you know we have
24:15 - people that speak russian we have people
24:16 - that speak english we have people that
24:18 - speak spanish so you know these are
24:20 - people that can help give you feedback
24:23 - on your app and how it feels
24:26 - um so here's a list of some common
24:29 - issues i mean worst case
24:31 - your app could crash
24:33 - because maybe you have a placeholder out
24:34 - of order or something but
24:37 - a lot of these things a lot of the
24:39 - obvious things are caught by the linter
24:41 - for you
24:43 - but you know you can go through the app
24:45 - manually you can see that things are
24:47 - sorted correctly look for untranslated
24:49 - text you know look for poor line
24:51 - wrapping and stuff
24:54 - for those rtl languages you know you can
24:57 - go to the settings screen
24:58 - and force the rtl layout and then look
25:01 - at it you know is it basically a mirror
25:03 - of your left to right
25:05 - you know is the padding correct are are
25:07 - the elements where you expect them to be
25:10 - um but i found that to be kind of slow
25:12 - right i hated switching between
25:14 - um
25:16 - uh settings and my app and back and
25:18 - forth so one of the things is on twitter
25:21 - kit i had a bunch of timelines i used
25:23 - for testing and it was just a little
25:25 - simple test app i display different
25:26 - timelines and so what i did is i just
25:28 - created a right to left timeline and
25:31 - what i can do is i can on resume when i
25:33 - started that activity i just set the
25:35 - locale
25:36 - to
25:38 - arabic or set the language to arabic and
25:40 - then on pause i just set the default
25:43 - back so here just one click in my test
25:45 - app i could click i could see
25:48 - that everything was being displayed
25:49 - quickly and then continue on just
25:52 - going around playing with my app so i
25:54 - found that really useful in speeding
25:56 - things up
25:58 - [Music]
26:00 - oh i had a video here
26:02 - so this is basically the dubai airport
26:05 - twitter feed
26:10 - the other one tool i found was from
26:12 - fastlane
26:13 - this was developed by fabric
26:15 - and
26:17 - one thing is screen grabs so you can
26:18 - generalize localized screenshots of your
26:20 - android app so here's an example
26:23 - you set up a simple script you tell it
26:25 - what locales you want and then it'll run
26:28 - through and take screenshots for you and
26:30 - so you can go through all your screens
26:33 - and then you can quickly visually look
26:34 - at your screenshots and say hey this is
26:36 - correct or
26:38 - my designer always says hey eric can you
26:40 - send me screenshots
26:42 - and so you know i can just run one
26:44 - script take all these screenshots ship
26:46 - it off
26:47 - and it's very easy and then supply
26:51 - also one thing about localization think
26:53 - about you know the play store
26:55 - and
26:56 - those assets in there you want those to
26:58 - be localized so when the
27:00 - user comes to your play store you know
27:02 - they see something and it looks familiar
27:03 - to them and they go hey i want to
27:05 - download that
27:07 - so i found these tools pretty useful
27:12 - so another common theme um
27:15 - when you're looking to grow your app
27:18 - beyond these like western markets is
27:19 - handling payments
27:21 - so an example is like the middle east um
27:24 - there's only two percent of users or
27:26 - people in the middle east actually have
27:28 - credit cards um
27:30 - in the united states we all have credit
27:32 - cards i probably got six credit cards in
27:33 - my wallet right now
27:35 - um
27:36 - 82 of them are unbanked so
27:39 - they just live day to day with cash um i
27:42 - probably have three or four bank
27:43 - accounts
27:45 - and then the other thing is like things
27:46 - like paypal
27:49 - paypal
27:51 - you know is
27:52 - available everywhere but they only have
27:54 - about a five percent market share in the
27:56 - middle east if you want to rely on them
27:58 - for payments
28:00 - so like i said paypal it's available in
28:02 - all country but there's limited
28:04 - penetration and generally you need to
28:06 - have a credit card or a bank account to
28:08 - take money
28:09 - to pay and then strike which is very
28:11 - popular um is it even available in the
28:14 - middle east
28:17 - so what are some solutions here um so
28:20 - some solutions are carrier billing
28:22 - uh in this case
28:25 - uh
28:26 - you know let's say you want to donate to
28:28 - something or whatever and you do the sms
28:30 - short code what happens is it'll attach
28:32 - a charge to your bill
28:34 - and perhaps generally a carrier charges
28:36 - a processing fee
28:38 - but these are usually only for digital
28:40 - goods these are things that you can just
28:42 - kind of like take it back if they don't
28:44 - pay their phone bill it's generally not
28:46 - used for physical goods although this is
28:48 - becoming a thing
28:51 - um prepaid cards are actually very
28:52 - popular in north africa
28:55 - and the middle east these are or just
28:58 - young kids without credit cards you can
28:59 - just go into the store you know buy like
29:01 - a gift card and you can keep loading
29:03 - money on that you just bring currency
29:05 - and it gets added usually there's a fee
29:07 - associated with like adding value to the
29:09 - card or processing the payment
29:12 - um i was going to go back some other
29:14 - things is like uber in india they accept
29:16 - cash
29:18 - airbnb
29:20 - if you want to go book an airbnb in cuba
29:23 - what they do is they take your credit
29:25 - card process it and then they have a
29:27 - courier in cuba that'll take the
29:30 - currency and deliver it to the host so
29:33 - there's a lot of other solutions
29:38 - some other options are uh t pay me which
29:40 - is uh carried a direct billing provider
29:44 - um they're
29:45 - big in the middle east and north africa
29:48 - you know charge things to their doorbell
29:50 - another thing is like cashew these are
29:52 - just like i said prepaid cards and you
29:56 - can see skype like i said it's popular
29:57 - games and
29:59 - voip providers so skype takes some of
30:02 - these cards
30:06 - uh the final thing is performance
30:08 - performance matters especially when
30:10 - you're looking at emerging markets when
30:12 - you're looking at places like brazil
30:14 - mexico the philippines
30:16 - um
30:17 - and india
30:19 - and what happens is if when you pay
30:20 - attention to performance
30:22 - um
30:23 - twitter and a lot of other companies
30:24 - have found out like if you increase the
30:26 - performance of your app you will
30:28 - increase the bottom line metrics you
30:30 - will sell more products you will have
30:32 - more engagement people will view more
30:35 - tweets or instagram posts
30:38 - so this is why performance matters so
30:40 - much
30:43 - so
30:44 - one thing let's look at india here india
30:47 - there's about 300 million wireless
30:48 - subscribers but only one million of them
30:51 - actually have access to 4g networks
30:57 - so the majority of your users are either
30:59 - on 3g
31:00 - or 2g networks
31:02 - and even the lte even the 4g and 3g
31:05 - networks there are
31:08 - slower than in most of the western
31:10 - countries and they uh have a lot more
31:13 - errors right the error rate is higher in
31:15 - these countries
31:18 - so um
31:19 - one thing twitter did is we endeavored
31:22 - to improve our how we load images
31:26 - because images would be slow and they
31:29 - wouldn't load and if you don't see an
31:30 - image or nothing shows up
31:32 - your user doesn't have an opportunity to
31:34 - engage with that content you know
31:36 - they're not going to like it they're not
31:37 - going to click on the tweet and look at
31:39 - other tweets and so by improving image
31:42 - loading we believe that we could
31:44 - increase our top top-line metrics which
31:46 - is you know how often are people
31:48 - engaging with our tweets
31:50 - so the first thing we looked at we
31:52 - looked at two technologies and the first
31:54 - one was webp
31:56 - this is developed by google it's built
31:58 - into android so you had native support
32:01 - and you know one thing we found is a 28
32:05 - reduction in size compared to pngs
32:08 - and it also support its
32:11 - transparency
32:14 - and we also look at progressive jpeg so
32:17 - progressive jpeg
32:19 - takes multiple scans of your image and
32:22 - loads it progressively so what we found
32:24 - is like the first scan was only 10k so
32:27 - it would quickly load that first image
32:30 - it may be fuzzy but at least the user
32:32 - sees something that they might be able
32:34 - to engage with
32:36 - and
32:38 - then over time it'll load the higher res
32:40 - image
32:42 - so what happens is the image is
32:44 - compressed in multiple passes like i
32:46 - said uh the only thing downsides is
32:48 - there was no transparency support so
32:50 - what we did is we did transparency
32:52 - detection on the image so we looked to
32:54 - say does it have an alpha channel and
32:56 - then we look even if it uh
32:59 - had an alpha channel we checked to make
33:00 - every pixel and see if every pixel had
33:02 - an alpha channel and if there was no
33:05 - alpha channel defined we would just make
33:06 - it a progressive jpeg otherwise we leave
33:09 - things as a png
33:10 - and the other thing was there's just no
33:12 - native support on android
33:16 - and
33:17 - one of the useful things we found was
33:19 - this fresco library
33:20 - it's an image loading library from
33:22 - facebook you know it supported
33:24 - progressive jpegs out of the gap box
33:26 - and the things that had uh no no
33:28 - noticeable feature gaps like in
33:30 - supported all the things you wanted from
33:32 - a low image loader so i had caching and
33:34 - progress bars and scaling and resizing
33:36 - so it supported everything we needed
33:39 - so we used fresco as part of our
33:41 - experiment
33:43 - and the results were really good
33:46 - um
33:47 - so what we decided we ended up going
33:48 - with progressive jpeg when you use
33:50 - twitter today that's what you're loading
33:53 - um we found that images were 25 percent
33:55 - smaller
33:56 - when compared to pngs of the jpegs
33:59 - we saw a 9 decrease in p50 load times so
34:03 - the image loaded faster we saw a 74
34:07 - decrease in error errors
34:09 - and most importantly we saw an increased
34:12 - engagement especially in the emerging
34:14 - markets we wanted so it improved our top
34:17 - line metrics by just improving how we
34:19 - load images
34:23 - and the other thing we do at twitter is
34:26 - you know you want to generate that user
34:27 - empathy we want to feel like what it's
34:29 - like to actually operate in these 2g
34:31 - networks
34:32 - and what happens is we have 2g day
34:35 - occasionally so we throttle all the
34:37 - accounts uh employees twitter accounts
34:40 - it's on ios and engine only and so we
34:42 - see how long things take to load and so
34:45 - you know we're obviously motivated to
34:47 - fix things
34:48 - and we also do like cost notifications
34:51 - so what happens is as you go through and
34:53 - you're scrolling each day it'll say hey
34:56 - that same amount of data you use on your
34:58 - unlimited plan here it would have cost
35:00 - you five dollars in mexico you know
35:03 - that's a lot of money so that kind of
35:04 - gives you a feel for like how much data
35:06 - we're using
35:10 - that's it thank you i hope you learned
35:12 - something
35:16 - [Music]
35:24 - you