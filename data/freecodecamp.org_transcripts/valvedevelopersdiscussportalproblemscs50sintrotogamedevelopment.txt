00:00 - [MUSIC PLAYING]
00:16 - COLTON OGDEN: All right.
00:17 - Good afternoon, everybody.
00:18 - Thank you so much for
coming to today's talk.
00:20 - My name is Colton Ogden.
00:21 - I'm the course instructor
for GD50, which
00:23 - is CS50's new Introduction
to Game Development course.
00:26 - We started this last spring and
we've been having lectures every week
00:28 - so far for the last semester.
00:30 - Last week we took a
look at Portal, which
00:32 - is a famous game by Valve, whereby
you get a gun that can essentially
00:36 - shoot these portals that
defy the laws of space
00:39 - onto different services in the game.
00:41 - Walk in and out of them and teleport
through them and see through them.
00:44 - And there are a host of
interesting challenges associated
00:47 - with implementing a game like this.
00:48 - Now last week we looked at a
simple version of it in Unity,
00:51 - but today we are joined by Dave Kircher
and Tejeev Kohli of Valve Software who
00:55 - actually were on the
Portal team and implemented
00:57 - all of the interesting sort of
design and technical decisions
01:00 - that went about making it work
and making it fun and believable.
01:03 - So without any further ado,
this is the "Portal Problems."
01:07 - Thank you.
01:07 - [APPLAUSE]
01:13 - TEJEEV KOHLI: Hi.
01:14 - So we're just going to run through.
01:17 - Both me and Dave were actually
students when we were hired by Valve,
01:22 - and we were hired to recreate the work
we did as a student project for Valve
01:29 - for Portal 1 and for Portal 2.
01:32 - And today we just wanted
to talk to you about some
01:35 - of the issues we had trying to
create the mechanic for portals,
01:41 - and then also some of the design, both
the technical and some of the design
01:45 - issues that we had to tackle and work
on to make the mechanic work properly.
01:53 - So Dave is going to start off
and then I'll jump in later.
01:56 - DAVE KIRCHER: Hey, folks.
01:58 - As he mentioned, my name
is Dave Kircher I was hired
02:01 - on specifically to work for Portal.
02:03 - So I'm going to go ahead and preface.
02:05 - We're jumping through a lot of topics
today and jumping very quickly,
02:09 - so this is a very video
heavy presentation
02:11 - so that we can jump quickly in and out.
02:13 - And I'm sorry if I go a little too fast.
02:16 - I'm kind of optimizing for the stream.
02:18 - So hopefully, if I have gone
too quickly over something,
02:21 - you can review the stream
and see it a second time.
02:25 - So without further ado, let's
start off-- just quickly.
02:28 - I'm assuming that most
of the people here
02:30 - have played Portal or at least are
familiar with it in some sense.
02:34 - That's just an assumption.
02:35 - And that, for at least
the technical portions,
02:37 - that you are at least somewhat
familiarized with 3D rendering.
02:41 - If you're not, you may need to study
up a little bit and then come back.
02:44 - But let's start off with
just what is a portal?
02:46 - A portal is a discontinuity in 3D space.
02:49 - It's a 2D discontinuity
where we basically
02:51 - define a 2D rectangle somewhere in
space such that the front face-- sorry,
02:56 - the back face of the 2D rectangle is
defined as the front face of another 2D
02:59 - rectangle.
03:01 - So I've got my simple little
example here of this blue portal
03:04 - and this orange portal.
03:05 - We're defining them to be back to back,
which gets us this result over here.
03:09 - So from the perspective
of this little portal guy,
03:11 - it should look like there's another
room attached with a cube in it.
03:14 - But we're not actually
moving 3D space at all
03:17 - because otherwise we're trying to
make sure that this perspective is
03:20 - true for both this guy and the cube.
03:21 - And then you'd have this
weird overlapping space
03:23 - that doesn't make any sense to anybody.
03:25 - So we do a lot of hacks
to make it seem like space
03:28 - is folding in these interesting
ways without actually moving space.
03:32 - Another way to think of
it is that it's a door.
03:35 - If you look closely at this
doorway, it's a very standard door.
03:38 - It's a door like you walk through
it, different stuff happens.
03:41 - But what I'm not telling you initially
is that this actually isn't a door.
03:44 - For technical reasons, this
level required a portal here
03:47 - because we needed this room to move.
03:50 - So even though it looks like a
doorway, it's completely fake.
03:53 - And that it's a doorway
that actually takes you
03:55 - about a half mile across the level.
03:59 - But it looks like a door, and
so my job on the Portal series
04:02 - was to make sure that when
we're creating portals that they
04:06 - feel to the player like a doorway.
04:08 - And if you think of them
in terms of a doorway,
04:11 - all the interesting stuff for a portal
happens on the inside of the doorway
04:14 - and nothing interesting
happens on the outside.
04:17 - And it's my job to make sure that
all the interesting things that
04:19 - are happening outside
the door don't happen.
04:22 - Because that's all stuff
that doesn't make any sense.
04:26 - So as you can see, I just
flew across the level.
04:28 - And that's the other side of
that door that we just looked at.
04:30 - And I'm walking through
it and it's a doorway.
04:32 - So it's a door that doesn't
take you a couple of inches.
04:34 - It takes you about a half
mile across the level.
04:40 - Now we're into our
rendering section, which
04:42 - is basically one of my main
expertises in the portal area.
04:47 - So we're going be talking
about quite a few things
04:49 - and I'm going to jump in
quickly, so hopefully I
04:51 - don't spew it out too quickly.
04:52 - That's kind of my problem.
04:55 - So there are primarily two layers
to render a portal of view.
04:58 - There might be more, but these are the
two that I am primarily familiar with.
05:03 - The preliminary way that we did
it with Narbacular Drop, which
05:06 - was the predecessor to Portal
was with rendered texture.
05:10 - And then when we got to working
on the Portal franchise,
05:12 - we switched to a method
where you draw it
05:14 - all in a single pass using
what's known as a stencil buffer
05:16 - and I'll be talking more
about that in a bit.
05:19 - But there are tradeoffs to each method.
05:21 - So with a texture, you have to have
separate textures per portal view.
05:25 - And if you have support
for recursion, you
05:27 - have to have many, many textures
pre-allocated to do this.
05:29 - So your memory growth
gets big very fast.
05:32 - You have to use the Painter's
Algorithm or something like it
05:35 - to render your portals.
05:37 - You basically have to figure
out the deepest portal you
05:39 - can see into and render that one first.
05:41 - And then any outward
ones from that you're
05:43 - going to render them
because they're going
05:44 - to contain a view of that first portal.
05:46 - So you have to render it in that order.
05:48 - And I don't know if it's true anymore.
05:50 - It definitely was when I originally
was working on the first portal.
05:53 - That you couldn't effectively
use anti-aliasing,
05:55 - so you get small visual artifacts
as you get close to a portal
05:58 - because it would be rendered
as a texture that doesn't quite
06:00 - render the same way as the
rest of the back buffer.
06:04 - But it is the simplest
to implement, especially
06:06 - if you don't support recursion at all.
06:08 - It is super simple to do because you
can ignore the Painter's Algorithm
06:11 - and just render all of them
before you of your main view.
06:15 - By contrast, when you
render with stencils,
06:17 - it renders the entire
frame to the back buffer
06:19 - so you don't have any extra
texture memory requirements.
06:21 - You're doing it all in a single pass.
06:23 - You're starting from your main
view and working your way in.
06:26 - You actually have to nest it a
little bit, so it's interesting.
06:29 - You are guaranteed to get
homogeneous visual quality
06:31 - because it's a single pass.
06:32 - The way you're rendering
the rest of your frame.
06:35 - But it has a lot of extra
complexity of when you render them
06:39 - and how you render them.
06:41 - So this rendering portion
is going to require
06:46 - quite a bit of spatial thinking.
06:48 - So I'm going to show you this video.
06:49 - Basically this is a layout I'm
going to use a couple of times.
06:52 - Does this play?
06:53 - Hopefully-- yes, OK.
06:55 - This is a room layout that I'm
going to use a couple of times
06:57 - where I've got an orange
portal and a blue portal.
06:59 - And behind each one is a thin
wall with some stuff behind it.
07:03 - But hopefully to help illustrate
what's in front of the blue portal,
07:07 - you can see there's a whole
bunch of blue stuff over there.
07:13 - So yes, that is the example layout I
want you to kind of keep in your head
07:17 - because spatial thinking is
important to actually have reference.
07:21 - Let this finish one more time.
07:26 - OK.
07:28 - Now this is something that pertains
to both rendering with textures
07:33 - and stencils and I'm going
to let this play once
07:35 - because I was advised that if
I front load this too much,
07:37 - it sounds confusing.
07:38 - So while I'm playing this, I
want you to look at the fact
07:40 - that when the orange portal is
on screen and when it's not,
07:44 - everything inside where
the orange oval is
07:46 - looks exactly the same for when
it is and when it is not there.
07:52 - And so what I'm doing here is as
I'm toggling between the views
07:55 - is I am teleporting to
where the virtual camera is.
07:58 - That's rendering out
of the orange portal.
08:01 - Whoops-- come on, go back.
08:03 - Oh, God.
08:06 - OK.
08:07 - I'm toggling back and forth.
08:09 - I'm looking into the
orange portal, but I'm
08:10 - toggling to where the virtual
camera is behind the blue portal.
08:14 - So if you remember back
to when I said that we're
08:16 - defining the back face
of one rectangle to be
08:18 - the front face of
another rectangle, that
08:20 - means that they should
be coplanar at all times.
08:24 - And so if you think of
my player model in terms
08:27 - of walking it to the orange portal.
08:29 - When I'm rendering my exit view, I
should end up behind the blue portal
08:33 - as I'm rendering out of it.
08:35 - So it's important to remember that
all the angles carry over from that.
08:39 - And most importantly that whether
you're rendering textures or rendering
08:42 - to stencil that nothing
inside ever moves
08:45 - because it should be the
exact same view angles,
08:47 - the pixels should be in
the exact same place.
08:49 - If they're not in the same
place, your math is wrong.
08:52 - And this is especially important
when rendering with textures
08:54 - because one of the first mistakes
I've seen several people do
08:57 - is that they render the
entire screen to a texture.
09:00 - And then they map the entire texture
to this little quadratic here
09:05 - and it looks all weird depending
on how close or far away you are.
09:09 - But as long as you project the--
09:15 - sorry.
09:17 - Trying to work with
videos is not the easiest.
09:19 - So as long as you project
where the vertices of your mesh
09:22 - are in screen space, you can reuse those
coordinates as your texture coordinates
09:27 - and then it will line up perfectly.
09:29 - So that's the point of why
it's rendering as one-to-one.
09:32 - You just want to make sure that
you're rendering the same parts
09:34 - to the same part of the screen.
09:37 - Now I said I'd be using
that previous layout a bunch
09:39 - and I swear I'm going
to get back to there.
09:41 - But this is a much better layout
for rendering with stencils,
09:43 - and so now you need to learn a
new layout just for a minute.
09:46 - It's only used in stencils.
09:47 - But I've got these two
portals looking at each other.
09:49 - They're kind of-- one
stacked on top of the other,
09:51 - and they've got these
light bridges that are just
09:53 - serving to show you that transparencies
are kind of a special case.
09:56 - So I'm going to play it one more time.
09:57 - So you just got two
portals facing each other.
09:59 - And even though they're tiny, it
does make an infinite recursion down
10:03 - into the portals.
10:06 - So rendering with stencils.
10:10 - I'm kind of assuming that
for this part of the talk
10:13 - that you have some idea
what a depth buffer is.
10:16 - You may need to read up
on that if you don't.
10:18 - The stencil buffer is very
similar to the depth buffer
10:21 - in that it defines rules and operations
for when we can wholesale just not
10:27 - draw a pixel or when
we do want to draw it.
10:29 - And then also while
we are drawing pixels,
10:31 - you can define several operations
of how to modify the depth buffer.
10:34 - But for all intents and purposes,
it's invisible to the user
10:37 - except for the end result. So stencil
buffer, a lot like a depth buffer,
10:42 - but you're controlling the values
in code instead of by vertex depth.
10:48 - So before we render any scene using
stencils, what we're going to do
10:52 - is we're going to clear our
stencil buffer at the same time
10:55 - as we clear our depth buffer.
10:56 - We're going to clear
it to all zero values.
10:58 - And the stencil buffer we were
working with with Portal 1--
11:02 - I believe it only had two bits.
11:03 - I could be wrong.
11:04 - It might be up to eight bits,
but it's not a lot of bits.
11:07 - So we need to be very conservative
with the values we put in there.
11:10 - So we're going to clear it to zero.
11:11 - So everything in it is zero.
11:14 - And then we're going to render all
of the OPEC objects in our scene
11:17 - and that's where we get to the
visual I'm showing you here.
11:19 - So you'll notice that none of
the light bridges are here.
11:22 - None of the cool fancy
window stuff is here.
11:24 - So all we've done is draw
in all the opaque objects.
11:27 - And then we take a special
detour to render a portal.
11:31 - At this point, we've
rendered this oval here.
11:33 - And while we're rendering the
oval, we tell the rendering system
11:36 - to increment the stencil buffer
wherever we render a pixel.
11:41 - So while we're rendering, all of
the pixels here go from 0 to 1
11:45 - and that's an important bit.
11:47 - So we're going to be able to
use that to tell the depth--
11:49 - to tell draw operations
where to draw from then on.
11:53 - And then as soon as we've drawn the
incrementing of the stencil buffer,
11:58 - we tell all draw operations
from then on to only draw
12:01 - where the stencil value is 1.
12:03 - And we tell it to not modify anything.
12:04 - We're only drawing where there's a 1.
12:06 - And then we can basically just
forget all about stencil buffers
12:09 - for a little bit and keep drawing.
12:12 - But at this point if you've been
following along with the depth buffer,
12:15 - we've already drawn this nice
little wall behind the portal.
12:18 - So the depth is the same
as this little quad here.
12:22 - And so the first thing we do is we
render a full screen quad with depth
12:25 - at maximum value, which
does really effectively
12:27 - make this a hole at this point.
12:29 - And if we were to continue drawing
opaque objects and things like that,
12:32 - they would just show up in this hole.
12:34 - So then we start--
12:37 - after we have drawn, after we
have punched our hole in depth
12:40 - and we've required that all draw
operations have this matching
12:44 - stencil value of 1, then what we do is
we just start over in our main scene
12:48 - again and just draw it again.
12:49 - But this time we move
our virtual camera.
12:51 - Just the same operation as I
showed you in the rendering.
12:54 - It's one-to-one, we just have
to do a matrix transform such
12:57 - that we're behind the blue
portal and we draw it again.
13:00 - And so, let's see here.
13:02 - I think I have a magnifying glass.
13:05 - So you may notice that we're in--
13:08 - whoops.
13:09 - OK, I can't apparently zoom
and use a laser pointer.
13:12 - So you may notice that
the player model is there,
13:14 - and then the exact same setup
as I had shown you before.
13:17 - It's the same set of
quads and the oval again.
13:20 - And we do the exact same thing again.
13:22 - We tell it to increment so all the
values in this tiny little oval
13:25 - here are now 2.
13:27 - And then at that point we tell, OK, only
render pixels with a stencil value of 2
13:32 - and then we can just ignore
stencil buffers again.
13:34 - We punch the hole again,
and then we recurse again.
13:37 - And we go into a value of 3.
13:39 - At this point--
13:41 - I'm going to get more
into detail on it later,
13:43 - but we stop recursively
rendering to stencil buffers
13:46 - because otherwise we'd draw
a whole bunch of scenes
13:48 - that we're not going to actually see.
13:50 - We pull a little trick
that I'm going to get into.
13:53 - So as we've drawn all of our opaques,
we would theoretically do our detour.
13:56 - We don't.
13:57 - And then we finish by drawing
all of our translucent objects.
14:01 - And I know it's very
tiny to see them there,
14:04 - but it will become more apparent later.
14:06 - I think that-- sorry, that's
actually our rendering trick.
14:08 - And there, now we've actually drawn
the translucence in that view.
14:11 - And I know this is very small, but it'll
make more sense at recursion level 1.
14:14 - So as we draw our
translucent objects, we're
14:16 - still all confined to drawing
where stencil value is 2.
14:20 - And then once we are done drawing
all of our translucent objects,
14:24 - we render the portal oval--
14:27 - whoops, sorry, sorry.
14:29 - I'm going to pretend that
we're drawing to the big oval
14:32 - here because it's easier to see.
14:34 - We would draw another quad at
this level, sort of like a window,
14:38 - telling it to decrement the
stencil value back to 1.
14:45 - I'm sorry, I need to take a step back.
14:47 - We need to replace depth so that
there's no longer a hole there.
14:50 - So we draw the full screen quad
with depth equal to the portal plane
14:54 - while still restricting to the
nested view and then we decrement.
14:57 - Sorry.
14:58 - So by the time we've
done decrementing, that
15:01 - means all of these pixels inside
this first recursion are now 1 again.
15:05 - Every single one of them is
a 1 on the stencil value.
15:08 - So we can continue rendering the
translucence from the first recursion
15:11 - just like we did when
we're doing the opaques.
15:13 - We can say just restrict your
drawing to all stencil value 1.
15:18 - And then we finish our
translucence there.
15:20 - We do the exact same thing again while
we're going back to the main view.
15:23 - We fix up our depth and then we
decrement the stencil values again.
15:28 - And then we just finish
out our main scene,
15:30 - and now you have portals
drawn using stencils.
15:33 - They required no extra
texture memory whatsoever.
15:37 - So bouncing back to
the scene that we had
15:41 - shown before this, one of the things
that we had to solve pretty quickly
15:45 - is when you have some object
in the middle of a portal,
15:48 - you have to be able to see
it in two places at once.
15:50 - And the way that we do this
is we literally just look up
15:53 - every piece and rendering geometry.
15:55 - It uses every texture and replicate
it and teleport it every single frame
15:58 - to wherever the original is.
16:01 - And while we're replicating,
this object over here.
16:03 - You can see that it's slightly
more in front of the orange portal.
16:07 - So basically the rules are defined
such that whichever object--
16:10 - whichever side of the object has
its origin in front of the portal
16:15 - is the master.
16:16 - And the origin for this
cube is right in its middle,
16:18 - and origin is just a term that we use
to define the one point in space that
16:23 - defines where this object is.
16:25 - So usually it's in the
center of an object.
16:27 - Not always, but that means
this is the real one.
16:30 - And this is our complete
and utter fake one
16:33 - that we have to do for every single
object that is penetrating the portal.
16:37 - Now when we duplicate
geometry and whether we
16:39 - not-- whether we duplicate or not,
we have another problem to solve.
16:42 - I'm going to let this video play.
16:44 - I'm going to be toggling
a broken part on and off.
16:47 - So when the cube is not behind the
wall, that's the fixed version.
16:51 - And when you can see it behind the
wall, that's the broken version.
16:54 - So if you think about
replicating geometry,
16:57 - we have replicated the entire
model to this orange portal.
17:00 - Which means all the
stuff that is supposed
17:03 - to be in front of the blue portal
is also sticking behind this wall.
17:06 - Because once again, we have defined
the two faces to be coplanar.
17:10 - So what we have to do is we have
to use what's known as a clip plane
17:13 - to tell the rendering
system, you know what?
17:15 - Just don't draw any pixels if the mesh
is on this half of this half space.
17:20 - And we define the half space
to be the portal plane.
17:23 - And we can turn this
clip plane on and off
17:25 - as we're drawing objects
inside the portal plane
17:27 - and that's what makes it work.
17:28 - Otherwise it would clip the whole world.
17:30 - I'm going to play the video again.
17:32 - It happens.
17:32 - So, yeah, we're just
telling it, hey, you
17:34 - need to just ignore every single pixel
that's on that half of all of space.
17:38 - Don't draw them.
17:40 - And that makes it so it
doesn't seem like it's
17:41 - sticking out the back in weird
ways that people don't understand.
17:46 - OK, now this is a very similar concept.
17:50 - Something that we coined
the term "banana juice" for.
17:53 - Even back in Narbacular Drop
because it's just confusing.
17:56 - And I know you're asking yourself,
what in the heck is "banana juice?"
17:58 - That doesn't make any sense.
18:00 - So we decided to use a
completely insane term for it.
18:04 - Because even our technical
shorthand for describing the problem
18:07 - didn't accurately describe what it was.
18:10 - So we decided to use a term that--
18:12 - it was obvious that
explanation was needed.
18:15 - So what we've got here is
I've got my orange camera
18:20 - and I'm looking into
the orange portal here.
18:22 - And that means I've got my blue
camera, virtual camera here,
18:24 - looking out of the blue portal.
18:27 - And if you remember back
to my example, we've
18:29 - got this geometry that's
behind the blue portal.
18:31 - And it's between the blue
virtual camera and the portal,
18:35 - and if we render that, it's
going to look completely broken.
18:38 - So "banana juice" is a term
to define this broken stuff
18:42 - that you would see if you were
looking behind the thin wall.
18:45 - And I have a video of it here.
18:48 - I believe I'm toggling back and
forth between views just like when
18:50 - I showed you rendering as one-to-one.
18:52 - And that's me turning
off the clip plane.
18:53 - This is what it would look like if we
were in the virtual space and the clip
18:57 - planes were not enabled and
then I go back to our main view.
19:00 - And you'll see as I move around in a
second that it looks completely broken
19:04 - and it kind of breaks your brain if
you don't understand what's going on.
19:07 - So that is "banana juice," and
you fix it exactly the same way
19:11 - as with the entity clipping.
19:14 - You have clip models, but what we do
is I'm going to replay the video here.
19:19 - If you're watching, this entire
part of the level is now clipped.
19:24 - So what we do is while we're
rendering a virtual camera,
19:27 - we just clip the entire world
behind the portal plane.
19:31 - All of it.
19:32 - Everything that's back there.
19:35 - So that's how you fix
"banana juice" too.
19:37 - It's not super difficult
once you understand it,
19:39 - but I can tell you it
took me about two days
19:41 - to figure out exactly what was
going on when I originally saw it.
19:43 - It just didn't make any sense.
19:46 - So moving on again, I know we're
jumping a lot and I'm sorry.
19:49 - We're just going to keep
moving on at a quick pace.
19:51 - So infinite recursion is something
that people kind of expected
19:54 - to see when they were playing portal.
19:55 - If you ever played the
original Narbacular Drop,
19:57 - we didn't support any form of
recursion and it was kind of a letdown.
20:01 - So I'm going to go into how this works.
20:03 - So in this view, you can see
that we have this blue portal.
20:06 - That's our first recursion right here
and it's taking up most of the screen.
20:10 - And then we've got this blue portal
that you can see the entirety of it.
20:14 - That's our second recursion.
20:16 - And this one in here is
completely and totally fake.
20:20 - So that one, there is no
portal there whatsoever.
20:23 - What we're doing is we're
taking whatever we see
20:26 - of this portal, the second recursion.
20:28 - We're taking that exact view
from the previous frame.
20:31 - We're taking those pixels and then
we're basically doing a fix up
20:35 - in case you moved your camera around.
20:37 - And we're applying the texture
coordinates from the second portal
20:43 - to where the third portal would be.
20:45 - And by a completely fake, I mean we
didn't even render this blue oval.
20:48 - That's just a copy of
this oval right here.
20:51 - So it's the exact same thing as if you
point a video camera at a video monitor
20:56 - that's showing what it's recording.
20:58 - You get that feedback loop.
21:00 - But we have access to a little
bit of extra special math.
21:02 - That means that we don't
get that weird snaking
21:04 - effect if you move it back and forth.
21:06 - We can fix it up quickly.
21:08 - But this video is actually going to show
you about how this quickly breaks down.
21:12 - Because if you're
thinking ahead, you might
21:14 - be wondering what happens if you
can't see all the second portal.
21:17 - And the answer is that we stretch it.
21:20 - So as you watch the third one, it just
kind of stretches off in weird ways.
21:24 - Which is a problem that, if
we spend a bunch of time,
21:26 - we probably could have fixed.
21:28 - But in game development, sometimes
you just call it good enough
21:31 - and move on because I bet anybody
that played the original Portal never
21:34 - noticed this whatsoever.
21:36 - [LAUGHING]
21:40 - So another breakdown of it, which I
find personally annoying and interesting
21:44 - at the same time.
21:45 - I'm just going to show
the video of it first.
21:47 - As I'm walking, you'll notice at the
third recursion, which is completely
21:50 - fake, you're going to see a pop.
21:52 - You're going to see every single time I
walk through a portal, it pops around.
21:56 - So this is actually fairly easy
to explain once you understand--
22:00 - really understand how the hack works.
22:02 - So if you look at my
visualization here, this
22:05 - is what the actual recursion would
look like if we actually did it.
22:08 - So we've got a couple of portals
here at these blue lines.
22:12 - And so inside our first portal
that we're fairly close to,
22:15 - our field of view is really wide.
22:17 - And then as we get to our second portal,
it gets really narrow really fast.
22:21 - But then as we get to the
third, it narrows even more.
22:24 - And then the fourth,
it narrows even more.
22:26 - But since we're cutting and
pasting, the second recursion,
22:29 - if you look down here on this
visualization, this is the hack.
22:32 - So we take this one, the
second visualization, and copy
22:34 - and paste it onto the
third and onto the fourth.
22:36 - And you can notice that this
doesn't converge at all.
22:38 - It doesn't narrow.
22:39 - So we're seeing the same
amount of wall around each
22:42 - of the recursions no matter what, no
matter how narrow this magenta cone is.
22:50 - So as we walk through a
portal, the magenta cone,
22:53 - we're picking a portal that's
further off because now
22:56 - that's the second recursion
after we walk through a portal.
22:58 - So it starts off narrow,
which is closer to what
23:00 - it should look like at infinity.
23:02 - It should narrow to basically
where you're seeing a blue tube.
23:06 - But then as we walk closer
and closer to the main portal,
23:10 - then it's going to widen
and widen and widen.
23:12 - And so there's just a pop
where it snaps into place.
23:17 - So hopefully that made sense.
23:18 - And once again, completely
changing topics because we
23:21 - got so many things to cover.
23:23 - So when we're rendering
portals, we have to have
23:27 - a mix of rendering first
person and third person.
23:30 - So in this case, you can see I've
got my third-person model over here
23:33 - through this portal.
23:34 - Another third person model over here.
23:36 - And then we don't see it in the main
view because I'm about to turn it on.
23:39 - It would look really weird if you saw
the third-person view in the main view.
23:43 - Yeah.
23:46 - I mean, some games do try to fix this
with very special representations.
23:50 - They'll try to draw just the
legs or something like that.
23:53 - But, yes, so we have to
have a complicated system
23:58 - to figure out when to draw third
person and when to draw first person.
24:02 - And if you were to guess, I
bet you would say, well, just
24:05 - render a third person every
time you look through a portal.
24:08 - And it turns out it's slightly
more complicated than that.
24:09 - I'm not actually going to get
into the complicated version,
24:11 - but I'm going to show
you how it's broken
24:13 - if you use that simple rule
because why would life be easy
24:16 - and we would just be
able to render just when
24:18 - we're on the other side of a portal.
24:20 - So in this case--
24:21 - let me look up.
24:22 - So you'll notice in this
case, I'm on a tilted angle.
24:25 - And this is a case where my feet
are on one side of the portal
24:27 - and my eyes are on the
other side of the portal.
24:29 - So it kind of breaks
the original system that
24:31 - would say, oh, just render if you're
on the other side of a portal.
24:35 - And so, yeah, it's a
little more complicated.
24:38 - Not terribly.
24:38 - It should actually look
way more broken than this,
24:40 - but we actually had the
fix in several places.
24:42 - And this is a special build where
I had to go back and break things
24:45 - and only broken it in one place.
24:49 - Yeah, OK.
24:50 - And then the last on
our rendering portion.
24:54 - So earlier I had talked about
how we need to duplicate
24:56 - geometry that is mid-portal.
24:59 - But there's also another thing
that we need to duplicate,
25:01 - which there are screen space
affects where we can query
25:05 - draw operations and things like that.
25:06 - And so one way that we use these draw
operations that are in screen space
25:11 - is to determine how much light
glare to use around these lights.
25:15 - And so how these work are
basically we draw a quad
25:21 - while we're drawing the light.
25:22 - And then we say, OK,
in a couple of frames
25:24 - I want you to tell me how
many pixels actually drew.
25:27 - And we're not allowed to actually query
this immediately because of pipeline
25:30 - reasons.
25:30 - We don't have the results
for several frames.
25:33 - So we have to cache off
that handle that says
25:34 - how many pixels did you draw and we'll
get the result at some point later.
25:38 - Sometimes you're lucky and it's
just one frame, but usually two
25:40 - or three frames-- you have
to save it for a while.
25:43 - But you may notice that
even though we're not
25:44 - replicating the geometry of the
light, we're drawing two of them
25:48 - because they're in screen space.
25:50 - So that means that this query
system had to be smart about it
25:53 - and I'm going to show how we
have two separate results.
25:57 - Now if we had used the engine
as it was originally written,
26:00 - there would be just one
query for one light.
26:03 - But then that would mean that
these lights would dim in unison.
26:06 - So we need to have separate
buckets for each view of portals.
26:09 - And every view query that portal--
26:11 - any view query that is issued
while in that recursion,
26:15 - we have to keep it in a totally
separate bucket and call it back later.
26:18 - And then as we walk through portals,
we have to transfer those buckets.
26:22 - So if I were to walk into the blue
portal at this point, all of those
26:25 - handles we have to
transfer to the main view.
26:27 - And then all the ones that are from the
main view we transfer into what was now
26:30 - orange because we would be
walking out of this orange one
26:32 - if we walked into the blue.
26:35 - So, yeah, that is the quick set of
rendering things I wanted to cover.
26:39 - So now I'm going to hand it
off to my colleague, Tejeev,
26:42 - to talk a bit about design.
26:44 - Give your spatial
thinking a bit of a rest.
26:47 - [CHUCKLES]
26:51 - TEJEEV KOHLI: So that was
a lot of technical stuff
26:53 - about rendering of portals.
26:55 - And you can see it's more
complex than it seems at first.
27:00 - The naive solution seems like we'll
get you most of the way there,
27:03 - but then as you start putting in
more things in the game and more ways
27:07 - to play a game, to
interact with the game,
27:09 - you see there's a bunch
of different complexities
27:11 - that you have to account for.
27:13 - And a lot of those complexities
are not just in a technical sense,
27:16 - but also from a design sense.
27:18 - So I just want to talk
through some of the issues
27:21 - that we came up with as we were making
Portal 1 and 2 and some of the ways
27:25 - we tried to solve them.
27:27 - One of the first things
I wanted to mention
27:28 - was when first coming up
with the idea for portals,
27:33 - before figuring out if we
should spend a bunch of time
27:38 - making this idea, this new game mechanic
that most people haven't seen before.
27:45 - What we did was--
27:48 - Dave and his team made
a prototype of Portal
27:53 - in a 2D game engine that is used in
DigiPen while they were students.
28:00 - And it was made in-house
DigiPen 2D engine.
28:05 - And you can see here that
it's a 2D version of Portal,
28:08 - but it's still got all the basic game
mechanics that are used in Portal.
28:14 - And the main goal of doing something
like this is to vet out the mechanics
28:20 - and see if they're
still fun at their core.
28:23 - And part of what you do
here is you playtest, right?
28:28 - You make this simple
prototype, and you get
28:30 - other people to try it out and
play it and say, hey, is this fun?
28:33 - Is this something that we should
spend our next year working on
28:38 - as a proper 3D game?
28:40 - And the prototype you can see had
most of the basic functionality
28:42 - there and kind of vetted out the idea
of the mechanics to take it forward.
28:50 - And as we take the
mechanics forward, one
28:53 - of the first things
that you realize is this
28:56 - is a brand new mechanic that
people don't really understand
28:58 - and you have a train them.
29:01 - Train them with how the
mechanic works and also
29:04 - train them with sufficient
knowledge so they
29:06 - can use that mechanic to solve
puzzles, which is the core of the game.
29:10 - And one of the things
that we did is you have
29:14 - to have certain sections
of the game where
29:17 - you can be sure that the player has the
knowledge that they need to progress.
29:22 - So a lot of this is about making
sure that the levels you're designing
29:28 - are done in such a way that when
the player finishes that level,
29:32 - they have that knowledge
that you want them to have.
29:35 - And one of the ways we ensure that is
through doing a lot of play testing,
29:41 - and play testing is something I'll talk
about a little more as the talk goes
29:44 - on.
29:45 - But the basic idea of
play testing is just
29:48 - getting someone else to play the game.
29:50 - And that someone else
could be a coworker
29:52 - who sits next to you, your friend--
29:54 - anyone else really.
29:57 - Someone you get especially to come
play the game from outside the company,
30:00 - but usually it's just your coworkers,
people that sit next to you.
30:03 - People that see you work on the game but
don't know exactly what you're doing.
30:07 - And you can observe them
and see what they're doing,
30:10 - get some feedback from
them, and then use that data
30:13 - and iterate on the mechanic.
30:15 - And you can see here, this
was a level in Portal 1.
30:21 - It was pretty early on, this level,
and you could see the portals here.
30:25 - The blue portal here
is moving on a timer.
30:28 - It moves from one to
the next to the next.
30:30 - And the idea of this level was
by the time players solve this,
30:34 - they understand that I go in one
portal and come out the other.
30:37 - That's the basic idea here.
30:40 - And in Portal 1, this level did a pretty
good job of teaching players that.
30:44 - For Portal 2, we have
a very similar puzzle.
30:48 - I'm going to just try and play here.
30:50 - It's a pretty similar puzzle.
30:52 - The idea is the same thing.
30:54 - You have the three sections
that the portal can go.
30:57 - The one change we made here was we
move the portal away from a timer
31:01 - and moved it to a button.
31:02 - So this way the player has more control
of where the portals are opening.
31:07 - There are a few reasons for this.
31:09 - The main one here is like the level in
Portal 2 has a lot more visual noise.
31:13 - There's a lot more like--
31:15 - it's an old level, a lot of
foliage, a lot of destroyed stuff.
31:18 - So it's not as clean as Portal 1.
31:21 - And also, there's a case
of Portal 2, there's
31:24 - a lot of people that have
already played Portal 1
31:27 - and are probably already
familiar with the mechanics.
31:30 - So we don't want them to
have to go through the timers
31:33 - and wait for all the things to happen,
even though they know how it works.
31:36 - So this way they can
just go in and show us
31:42 - that they know how the
portals work without having
31:44 - to wait through all the timers.
31:46 - And the basic goal is the same thing.
31:48 - That by the end of this level, we're
confident that the players understand
31:51 - how portals work.
31:56 - One of the other things that
you learn through play testing
31:59 - is you learn what you
need to teach the player.
32:02 - There's sometimes when
you'll be making the game
32:04 - and there's certain things that
you as a designer or as a creator
32:08 - won't think are challenging
concepts or are things that need
32:12 - to be talked to players explicitly.
32:15 - One of those things
that we noticed early on
32:17 - is this concept here where a lot
of players kind of thought portals
32:23 - were one way.
32:24 - That you go in one and you come
out the other and that's it.
32:28 - But they have to be taught that
you can actually go in both ways.
32:32 - You can go in the blue one
and come out the orange,
32:34 - or you can go in the orange
one and come out the blue one.
32:37 - And so this puzzle specifically
does that, where the blue one
32:40 - is the only one that'd be moving.
32:42 - The orange one stays stationary.
32:44 - First you go in the blue one, you come
out the orange one, replace the blue,
32:47 - and then you go in the orange
one and come out the blue one.
32:52 - The idea with this again is you
have to figure through play testing
32:57 - is how you figure out
the different things.
33:00 - The different discrete small things
that you need to teach the player.
33:04 - And also try to figure out
how to teach them in a way
33:06 - where they're figuring it out
instead of you telling it to them.
33:10 - So for the most part in
Portal 1 and 2, there's
33:13 - certain things that we tell the player.
33:14 - But for the most part we
want them to figure it
33:17 - out and have that epiphany themselves.
33:21 - Because then they really learn it.
33:23 - If you just tell it to them, they
might not take in the exact knowledge.
33:28 - Another thing here is this
was a level in Portal 2,
33:33 - but we noticed through
one of our play tests--
33:37 - I looked through a few of our
play tests that players were super
33:40 - hesitant to place portals on the floor.
33:44 - Even though this level is probably
the fifth or sixth one in the game,
33:48 - and you've done that a few
times in the game before this.
33:50 - But usually you are
doing it way down there
33:52 - and doing a fling mechanic where you
fly through the portal and come out.
33:57 - So players have placed
portal on the floor before,
34:00 - but they haven't done
it right at their feet.
34:03 - So we had to design a scenario
here where the only way forward--
34:07 - you're trapped in this
black room with nothing else
34:10 - and the only thing you can do is
place a portal on the floor there.
34:13 - And that's one of the things that
you realize as you keep testing.
34:18 - You'll come across players
of different skill levels
34:21 - and different knowledge of video
games and different knowledge
34:23 - of how controls work.
34:25 - And typically you want to make
sure that you're not only catering
34:29 - to the low end or the high end.
34:30 - You want to make sure that both of them
can have a good time with your game.
34:35 - So you want to design puzzle games
in a way that aren't super intrusive.
34:39 - If a player that sees
this get here already
34:42 - knows that I can place
portals on floor and go by.
34:45 - This doesn't seem like
anything that's stopping him.
34:47 - This just seems like part of the level.
34:49 - But to a new player that
comes in here and is
34:52 - like I don't know how to proceed, it
takes them a while to figure it out.
34:55 - And then when they have that aha
moment, they feel pretty smart about it.
34:59 - So you want to make sure
that you're designing stuff
35:01 - in a way that isn't frustrating players
that already understand the mechanics,
35:07 - but also isn't making players that
don't understand the mechanics have
35:12 - to be super frustrated as well.
35:19 - Another thing that we had to do--
35:20 - Portal 1 and 2 both have this mechanic
where you go into a portal on the floor
35:27 - and come out one on the wall and
it keeps your momentum and velocity
35:31 - and flings you forward.
35:33 - One of the things we noticed while
we were working on this mechanic
35:37 - is that there's a lot of times when
players don't exactly quite line up
35:42 - as they're falling through the portal.
35:44 - Which means that when they fall
in, they're going to fall out--
35:47 - they're not going to come out of the
portal on the wall in the correct way.
35:51 - And a lot of times players won't know
that they had the right solution,
35:57 - they just kind of messed up
the execution a little bit.
36:00 - And we want to try and help
the players in these cases,
36:04 - but again try to be
not intrusive about it.
36:06 - Because you want to make
sure that the players--
36:10 - as they're solving puzzles,
they're not thinking
36:12 - that they had the right solution but it
didn't work the first time I tried it.
36:17 - So now I have to rethink the whole
solution even though the solution was
36:20 - correct the first time.
36:21 - So one of the things we used--
we used a few different things
36:23 - to help the players out in this way.
36:25 - And again, with the idea of them
being mostly invisible to the player.
36:30 - They're not always completely
invisible and in some cases
36:33 - we have ways to opt out of them.
36:35 - But this is one of the
things that we used.
36:38 - So if you notice here,
the player's going
36:40 - to drop through the orange portal.
36:43 - But as you notice as I walk through--
36:46 - walk forward here, I'm purposely
not going to fall exactly straight.
36:50 - And one of the mechanics
we had in the game was--
36:54 - it was pretty subtle there,
but I'm going to do it again.
36:57 - You'll see I'm walking to the side
and the game kind of funnels you
37:00 - into the portal.
37:01 - So we had the special thing we
used in portals, for portals
37:06 - that are on the floor facing mostly up.
37:09 - Imagine there's a cone
coming out of the portal,
37:12 - and if you're falling from
some height and if you're
37:16 - within that cone and the cone--
37:17 - it's not super wide.
37:18 - It's pretty narrow.
37:20 - If you're within that
cone, then we kind of
37:22 - funnel you into the
center of the portal.
37:24 - So that when you're
coming out of it, you're
37:26 - going to be lined up perfectly with it.
37:28 - And as you can see, the third time
I did it there, it didn't happen.
37:31 - Because the way this
works is that it only
37:33 - works if you're looking at a portal.
37:36 - So it works the second
time, but the third time I'm
37:38 - going to go mostly in the same
direction and it's not going to work.
37:43 - So that's our way of trying to
make these things be non-intrusive.
37:48 - To where if players don't expect to go
in that portal, it's not going to work.
37:51 - But if the player is looking at a
portal and they expect to go in it,
37:54 - we kind of nudge them
along a little bit.
37:58 - And you can see it here,
and this is a second case
38:01 - of the same thing where there's a
portal on the floor and the ceiling.
38:04 - And you can see as
the funnel is working,
38:06 - the play is perfectly
in the center of it.
38:08 - But I'm going to look forward a
little bit and disable the funnel.
38:11 - And you can see the player's
going to go off axis
38:13 - because the funnels are disabled and
the player slowly went out of it.
38:19 - Yeah, the funnel is disabled now.
38:23 - And again, the idea of this is to
reduce a bunch of the player frustration
38:28 - and to reduce a bunch of the
false negatives that players get.
38:31 - You want to make sure that players
that think they've got the solution,
38:35 - and if it was the correct
solution, you want
38:37 - to kind of help them out a little bit.
38:38 - You don't to solve the puzzle for them.
38:40 - You don't want to give them,
like, here's the answer.
38:42 - But you do want to try and
help them out a little bit
38:44 - because that helps that makes
the game a little bit more fun
38:48 - and reduces the frustration.
38:52 - So that was the help that we had
for when you're entering portals.
38:56 - We also have the opposite and
that was there in Portal 1.
39:00 - And in Portal 2, we
introduced something that
39:03 - was the opposite of a helper, which we
used when you're coming out of portals.
39:08 - So Portal 2 had this mechanic
called Aerial Faith Plates,
39:11 - which is pretty straightforward.
39:13 - You step on this faith plate
and it propels you to the air.
39:18 - And the level designers can
place the faith plate on a level
39:23 - and can kind of control
the trajectory of the arc
39:26 - of where the player is going to fly.
39:29 - And this arc is not really
visible to the player,
39:32 - but it's pretty apparent
based on the level design.
39:35 - So you can see in this one, I'm going
to play the video as I'm talking
39:40 - and then maybe play
it a couple of times.
39:42 - So the tech that was developed
for these Aerial Faith Plates
39:46 - is something that we
reuse for a fling helper.
39:51 - So you can see here there's all these--
39:53 - I'm going to turn on some debug draw.
39:55 - And you can see right here.
39:58 - So this green arc here is the
arc that's on the faith plates,
40:02 - but you can see there's some stuff
coming out of the walls there as well.
40:06 - So this is a part of the level where
the player is going to fling out of.
40:13 - He's going to fling a box out of that
actually because he wanted this to work
40:17 - for objects as well as the player.
40:20 - So you can see as the
box goes through here
40:23 - and then here, these
are those faith plates.
40:27 - And then when the box
comes out of that, we
40:29 - have the box follow the arc
that's kind of predetermined.
40:34 - Because that's I think what the
player is expecting at that point.
40:36 - They expected to have solved
the solution-- solve the puzzle.
40:40 - But the funnel, the trigger here--
40:43 - this kind of corrects the arc to
make sure that it's always going
40:46 - to go in the place the player expects.
40:50 - And we also have a case of the
same things working for the player.
40:55 - So you can see here there's
two different arcs that
40:57 - are coming out because we doubled
up the triggers over here.
41:01 - The way these triggers
worked in the game
41:03 - is they won't always enable
when the player touches them.
41:06 - They require a minimum
velocity threshold.
41:09 - So the player has to be
doing most of the work.
41:11 - So the player has to have
figured out a way in the level
41:14 - through the puzzle design
to get that velocity.
41:17 - But we know that there's some
differences in physics and differences
41:21 - in the exact mechanism you might use.
41:23 - So we're just saying if you got the
minimum velocity that we acquire,
41:26 - we're going to take
it all the way there.
41:29 - So in this one, you can see
we have two different cases.
41:33 - So if I just fall out of the portal,
it's not going to activate any of them.
41:37 - If I somehow manage
to get some velocity,
41:40 - is going to activate the fail
case one and take me there.
41:45 - And the reason we have
the fail case one is
41:47 - because we want to make sure
that if players somehow get
41:51 - most of the velocity
but bonk on the wall,
41:55 - they don't keep thinking that they
can-- that's the correct way to do it.
41:58 - So we want to make it
obvious that you failed.
42:00 - So again it's the same way.
42:01 - We have to help-- you're helping the
players out but not by giving them
42:04 - the solution.
42:05 - Just by making it obvious that the
thing you did was correct or wrong.
42:08 - And then if you do the correct
way in this level, which
42:11 - is to get philosophy doing that,
and then you make a portal there,
42:16 - you're going to do the correct
thing and swing out of it.
42:21 - And again, the main idea here is to
get rid of those false negatives.
42:27 - Especially here because there's
a few different spots on the wall
42:30 - that you can put a portal.
42:31 - And we don't really want
to restrict a lot of that
42:33 - and just put the one square on the wall.
42:35 - That is the solution square.
42:37 - Because again, if you put the portal
down here or put the portal up here,
42:41 - the arc is going to
be slightly different.
42:43 - So this mechanism we had
just kind of corrects
42:47 - those arcs and makes sure that it goes
in the one or two ways that we want.
42:55 - Another thing we added in--
42:57 - this we added in Portal 2--
42:58 - was highlights for your
portals so you can see where
43:02 - your portals are placed through walls.
43:04 - And this is something that's
super useful in levels
43:07 - where you have to keep track of
which portal you placed over there.
43:12 - So you know which one
to place over here.
43:14 - Because sometimes it's like, OK,
I just got out of the blue one
43:17 - and the orange one's over there.
43:18 - So if I place the blue one--
43:19 - oh, I got to do the whole puzzle again
now because I placed the wrong one.
43:22 - So this helps a lot in just making sure
that you know where your portals are
43:27 - so you can be like I want
to come out of that one,
43:29 - so I'm going to place the other one.
43:31 - And this is something we added in
Portal 2 and it was pretty helpful.
43:34 - And it's also helpful in the
co-op version of the game.
43:37 - Because in the co-op
one, you want to see
43:40 - where both the players'
portals are at all times
43:42 - and this kind mechanic helps in that.
43:46 - Another thing we added to kind
of help the player a little bit
43:49 - is a thing we call the placement helper.
43:52 - And this does not use a
whole lot in the game,
43:55 - but there's a few
sections in the game where
43:57 - we want to encourage
the players to come out
44:01 - of a portal in a particular direction.
44:05 - So we have these things that we place
in the level with a certain radius.
44:10 - And if you place a portal
within that radius,
44:13 - we just kind of snap
it to the direction--
44:15 - to the center of it.
44:17 - But they don't a timer.
44:18 - So if you place one
portal and you're like,
44:22 - oh, I actually want to place it over
here, you can always opt out of it.
44:25 - And that's again what
I was talking earlier.
44:27 - You want to add something-- excuse me.
44:31 - You want to add these helpers in a
way that, for players, they're mostly
44:36 - invisible to most of the players.
44:39 - But the players that want to opt out of
them have a way of opting out of them.
44:42 - [COUGHS]
44:44 - Excuse me.
44:46 - So you can see the first portal
that's placed does get snapped,
44:49 - but the second one that's placed
is exactly where the player wanted.
44:53 - And we use these in a
few spots in the game,
44:55 - but they weren't used a whole
lot because for the most part
44:58 - you want to have-- you want
to make sure the player feels
45:00 - like they're in control.
45:05 - And one of the other things
that was a lot of fun
45:08 - while making Portal, and Dave
will talk a lot about this--
45:12 - excuse me-- will talk a lot about
this later is the physics of portals,
45:17 - or physics of objects
interacting with portals.
45:20 - And for the most part we're trying
to be super accurate with it, right?
45:23 - We're trying to make stuff work
the way players expect in real life
45:27 - because that's kind of what
we're trying to simulate here.
45:29 - But one of the things that we thought
that we added here-- that we thought
45:34 - was more fun than accurate.
45:36 - So you can see the--
45:37 - [COUGHING]
45:41 - Sorry, I'm a little bit sick.
45:44 - You can see here that
when the box starts off,
45:47 - it's just resting on the floor.
45:48 - So it's got no initial
velocity whatsoever.
45:50 - So when you place the blue
portal down, the expectation
45:53 - is probably that it keeps
resting there or maybe it
45:56 - goes in the center of the
portal and just stands there.
45:59 - But that's not a super
fun game mechanic.
46:02 - So here we just have it be so
that objects coming out of portals
46:05 - have some minimum velocity.
46:06 - So they always have
some minimum velocity.
46:09 - And this works in lots of other
parts of the game like the paint.
46:14 - And you can see here
that there is some air
46:17 - resistance that takes place and
the paint does slowly come down.
46:21 - But once it comes down to this
minimum velocity, it just stays there.
46:25 - And this is-- it's like
completely fabricated fiction.
46:29 - I guess there's no
real physics for this.
46:32 - It's just kind of like this is more fun
than trying to simulate real physics.
46:37 - So you can see here air
resistance is making
46:39 - it go down, like they're slowing down.
46:41 - But once they get to the minimum
velocity, they just stay there.
46:46 - This is about it.
46:47 - So once it gets here, it's
just going to stay here.
46:49 - It's not going to go below that.
46:55 - And speaking of gels, the
gels actually came up--
46:59 - were an idea that we
had for our student game
47:02 - that we made while we were in DigiPen.
47:05 - It was called "Tag--
47:05 - The Power of Paint."
47:08 - And in Tag, you had a paint gun that
you used to shoot the different colors.
47:15 - And the Portal 2 mechanic was adapted
from this and it's pretty similar.
47:20 - But one of the things we
did get rid of for Portal 2
47:23 - was the idea of having the paint gun.
47:26 - Because one of the core ideas
we had while working on Portal 2
47:31 - was that any mechanics we add to the
game should really work with portals
47:36 - and should really interact
at a core level with portals.
47:41 - So we thought instead of using
a gun to move the paint around,
47:45 - it will made much more sense to use
the portals to move the paint around.
47:49 - And that was kind of core not just with
the gels, but with any new mechanic
47:53 - we added to the game.
47:54 - Was that portals is the
core idea of the games.
47:57 - Everything we do should kind of
center around how portals work.
48:03 - I'm just showing you the
different colors we had in Tag.
48:10 - One of the colors that we added
in Portal that wasn't there in Tag
48:14 - was the portal gel.
48:16 - And this was again going
with the idea of how
48:18 - do we make the gels and the
portals interact better.
48:21 - So this one just lets you
spread around white paint
48:24 - so you can put portals
anywhere that the paint can go.
48:27 - And this is a pretty
cool mechanic in that
48:29 - it allows for a lot more open-ended
level design and a lot more player
48:32 - freedom.
48:33 - Because you can play portals
essentially anywhere now.
48:36 - Because for a lot of the
game we're restricting
48:38 - where the players can put portals on
the black surface or the white surface.
48:41 - And this just allows--
48:42 - you can just put white anywhere
and put portals anywhere.
48:46 - We didn't use this a whole lot
because it is pretty open-ended
48:50 - and it does break a
lot of puzzle designs.
48:52 - But there are a few cases where we
use it in a pretty open-ended way
48:56 - and have the player
just kind of have fun.
48:57 - Spend some time painting the whole
level and then figuring out what to do.
49:01 - And these kind of levels usually
have a couple of different solutions
49:04 - because we don't know where
the players are going to paint.
49:07 - So we just put a bunch of different
ways to get to the exit and players.
49:10 - Some players figure out all the knobs.
49:12 - Some players find the first
one and just go there.
49:14 - And it helps to break up the pacing a
little bit from the conventional puzzle
49:20 - design with the specific spots where
here are some white spots, here
49:23 - are some black spots.
49:24 - So it helps break that up a little bit.
49:28 - One of the things that didn't make
it through from our student game
49:32 - was the sticky gel that you
saw in the student version.
49:36 - So this is going to
look a little bit broken
49:38 - because this is from a really
old version of Portal 2
49:41 - because the sticky gel
got cut pretty early on.
49:45 - And you're going to see some
stuff here that doesn't really
49:47 - make sense, but just go with it.
49:52 - So you can see we used
purple instead of blue here.
49:56 - So you can jump on-- you can walk on
walls and stuff, which is pretty cool.
50:00 - So here you can see there's
blue paint coming out of there
50:03 - but you can't see the actual
paint blobs because there
50:06 - are invisible for some reason.
50:07 - I couldn't figure it out.
50:09 - But you can see the actual paint
on the walls, on the floor.
50:12 - So this is just an idea
of the kind of puzzles
50:14 - we were trying to come up
with using sticky paint.
50:18 - There's an extra portal
there for some reason.
50:20 - Ignore it.
50:21 - This is a really old
version of the game.
50:24 - So this is the kind of puzzles
we are trying to come up with.
50:26 - Of combining the different paint
colors and portals together.
50:32 - But we did end up cutting
this feature though.
50:35 - There were a few different reasons.
50:37 - One of them was obviously
it is quite disorienting.
50:41 - You can see going up a wall
and trying to figure out where
50:43 - the ceiling is, where the floor is.
50:45 - Especially in a lot
of these levels where
50:48 - they're mostly just black and white.
50:50 - It gets pretty disorienting
and we had more than a few play
50:53 - testers complain about that.
50:55 - But the other big reason that we
cut it is because it didn't really
51:00 - interact well with portals.
51:02 - You don't really want
to walk into a level
51:04 - and have the pots
already placed for you.
51:07 - And there's no real good way
to make pots on the entire wall
51:11 - without having to place
the portal like 50 times.
51:15 - And also it didn't really interact
well with the portal player
51:20 - physics and portal physics, and Dave
will talk some more about the player
51:24 - physics through portals.
51:25 - And this is one of the
things that you can see.
51:30 - We had a paint gun for a little
bit, but we ended up cutting it.
51:33 - So you can see I'm
painting the wall over here
51:36 - and I'm going to walk on the wall.
51:39 - But as I enter the blue
portal, you can see oh, it's
51:41 - not going to let me go through.
51:43 - But if I go through this way, it works.
51:45 - And that's just one of the things that's
like, well, we've got to solve this.
51:47 - We've got to ship like this.
51:48 - We've got to solve the problems.
51:50 - And we spent some time trying
to work on these issues.
51:53 - But at some point, you
realize that you're not
51:56 - guaranteed to solve these problems
no matter how long you spend on them.
51:59 - So at some point you've
got to just be like, OK,
52:01 - I don't want to spend
an extra month or two
52:03 - trying to fix these problems
not knowing if you'll get there.
52:06 - And plus there's other reasons why
the mechanic isn't working out.
52:09 - So let's just stop working on this
and work on other stuff instead.
52:13 - Another thing we ended up cutting--
52:15 - this is from Portal 1 that was present
in Narbacular Drop was the ability
52:20 - to place portals through portals.
52:23 - And it's a pretty
confusing thing and that
52:26 - was the main reason we cut
it because most players just
52:29 - thought it was way too confusing.
52:30 - Because you're placing the blue
portal by looking through the orange
52:33 - portal here.
52:34 - So the blue portal is--
52:35 - he's pointing through the orange portal
here and facing the blue portal over
52:39 - here because the other
blue portal is behind them.
52:42 - It's just like-- it's too confusing.
52:44 - And also it doesn't--
52:46 - there's not a lot of puzzle design that
you lose by disabling this feature.
52:53 - The thing you do gain is players
aren't getting super confused
52:56 - and also you're not necessarily
cutting a bunch of puzzles
52:59 - that you can't make now.
53:01 - So this feature got cut as well.
53:03 - And this is something
that we didn't really cut,
53:07 - but we stopped using in Portal 2 that
was used a little bit in Portal 1
53:11 - was the idea of a double fling.
53:14 - And I'm going to show it here.
53:16 - So double fling is
basically placing a portal
53:19 - while you're falling out of a portal.
53:21 - And it's one of those things
that it works pretty well.
53:25 - It's a pretty cool mechanic.
53:26 - And it was used in a
few spots in Portal 1.
53:29 - A couple of puzzles required it,
like this puzzle here required you
53:32 - to do this double fling.
53:33 - But one of the things we
noticed was a lot of players
53:37 - have difficulty in executing a
lot of these super hyper-sized,
53:42 - high-precision movements
even though they know
53:44 - what the solution of the puzzle is.
53:46 - So players will walk in this room and
figure out, OK, I've got to do this,
53:49 - I've got to do that, and
this is going to work.
53:51 - But then a lot of players have
trouble walking out of a portal,
53:54 - making a portal as quickly,
and it adds a lot of stress.
53:58 - And we wanted to move away from a lot
of the twitch movement based stuff
54:01 - and towards more of a
kind of, aha, I got it.
54:05 - That kind of stuff.
54:06 - And once you get it, we don't
want you to spend a bunch of time
54:09 - in making sure you get the
precise movements right.
54:13 - So this feature we didn't really cut it.
54:14 - It's still a mechanic
that works in Portal 2,
54:16 - but none of the puzzles in
Portal 2 required it anymore.
54:19 - And once we added the level
editor, a lot of the puzzles people
54:22 - are making do require it and
a lot of players like it.
54:26 - But it's not something that we thought
we wanted to make everyone have to do.
54:33 - Another thing that we changed
from Portal 1 to Portal 2
54:38 - was these energy balls.
54:41 - These energy balls at the time--
54:45 - part of the reason we
used them in Portal 1
54:47 - was because they were
there in Half-Life and it
54:51 - was an already created mechanic that we
had that we could just keep from them.
54:56 - But the basic mechanic
is these things fire--
55:00 - these things fire this
ball that bounces around
55:03 - and it needs to go in this receptacle
here under my gun right now.
55:07 - And it should go in this receptacle
here and once it goes there,
55:10 - it finishes the puzzle.
55:12 - There are a few issues
with this mechanic, though,
55:14 - in that there's a bunch of
timing element involved here.
55:17 - Because the ball takes time to travel.
55:19 - And also if you get hit by it, you die.
55:23 - Which, I mean, it's fine.
55:25 - It's a game mechanic
55:26 - But for Portal 2, we just thought,
how can we improve on this idea?
55:31 - And the thing we came up with was using
lasers instead of the energy balls.
55:37 - Lower the volume a little bit.
55:40 - So here you can see it it's
the same level from Portal 1
55:43 - and you can even see the energy ball
dispenser going away and being replaced
55:46 - by a laser because we want
to make sure the player is
55:49 - like, GLaDOS is improving
these mechanics now
55:51 - and got better versions of it.
55:54 - So the laser effectively is
very similar to the energy ball.
55:58 - It goes in one and you want it--
56:00 - it goes in over here and you want it
to go to the receptacle over there.
56:04 - The big advantage here is
that the reaction is instant.
56:10 - So if the player got the solution
or not, it's instantaneous.
56:14 - You don't have to have situations
where you place the exit portal
56:17 - and now you have to wait for the ball
to go all the way across the level
56:20 - and see if it lines up or not.
56:22 - This way it just instantly does it.
56:24 - Plus it also opens up a bunch of
different game play opportunities
56:28 - because now you can use multiple
relays in the same level.
56:31 - You can have the cube
that redirects the laser.
56:33 - So overall it felt like an
improvement over the energy ball.
56:39 - And talking about
lasers, so far we've been
56:44 - talking about a bunch of
these smaller decisions we've
56:46 - made to solve these smaller problems
as they kept coming up, like entering
56:51 - exiting portals, making sure
things are lined up or not,
56:55 - improving on the
specific game mechanics.
56:57 - But one of the things
that you need to do
56:59 - when you're trying to
make a whole game is
57:01 - to see how these mechanics come together
and how you can combine them together
57:07 - to make a whole game.
57:09 - To make a few puzzles that increase
into difficulty, complexity,
57:13 - and go towards some crescendo.
57:15 - And one of the ways we did that is
by kind of using this kind of process
57:21 - that I'm going to go through.
57:23 - And we used it a couple of times
both in Portal 1 and in Portal 2.
57:26 - And there's a few different mechanics
that we used the cycle over and over
57:30 - for.
57:31 - And that's kind of how the
entire game track is designed.
57:35 - So it starts off with an
introduction, and the introduction
57:39 - is the puzzle we just showed you.
57:40 - That's the intro puzzle for lasers
and it's really straightforward.
57:43 - It just shows you the mechanic.
57:45 - You go through one portal, come out
the other, goes into the receptacle.
57:48 - It's really straightforward.
57:49 - Introduces the mechanic.
57:50 - Most people would get
tripped up on this.
57:53 - From there, we then try to saturate
the player with that same mechanic.
57:56 - We introduce different
twists on that same--
57:59 - without introducing
a whole new mechanic,
58:01 - we just introduce different versions,
different tweaks on that same idea.
58:06 - So this room still only has lasers.
58:08 - But now we've introduced
relays and cubes.
58:11 - And you can experiment, figure out how
to connect the three lasers together.
58:17 - Figure out how to move
the cube, figure out
58:19 - how to move the laser
through the portals.
58:22 - But still it's only lasers.
58:23 - Nothing super complex yet.
58:25 - Then we give you more of that.
58:26 - We give you more of
just the same mechanic.
58:29 - Here there's two things firing lasers
and two things you've got to connect.
58:33 - And so it's the same idea.
58:35 - It's like just using lasers,
but not super complex.
58:38 - Just building on the
complexity little by little.
58:42 - Followed by a puzzle
that's like, OK, this
58:44 - is a puzzle that's going to
teach you all about lasers.
58:46 - By now you've seen lasers
in a few different ways.
58:49 - This one, once you get this,
you understand how lasers work.
58:52 - You know everything there is
to know about how lasers work.
58:56 - So this puzzle here--
58:57 - excuse me-- that's two cubes
and three things firing lasers,
59:01 - and on the other side
of the puzzle there's
59:04 - three things-- you've
got to connect them.
59:05 - And this puzzle is very
difficult, but by this point,
59:09 - you've been slowly
introduced to different ideas
59:11 - of how lasers work and this one
is taking them all together.
59:15 - And then once we've done that,
then we start combining them.
59:18 - Then we start taking, OK,
now you've got a laser
59:20 - and a different cube and a bridge.
59:22 - And by this point you've
seen a whole separate--
59:25 - we've done the whole introduction,
saturation, graduation track
59:28 - with bridges as well.
59:30 - So by this point, you
go in there and, OK, I
59:32 - know how bridges, I
know how lasers work.
59:34 - How do they work together?
59:36 - How do I combine them together?
59:38 - And then we start escalating from there.
59:41 - And then you go into this puzzle
that has a bridge, has a laser,
59:45 - has a turret, has some cubes
coming out, has a catapult,
59:48 - has a bunch of this stuff.
59:49 - But by the time the
player gets here, they're
59:51 - not really overwhelmed
by it because they
59:53 - have been introduced to all these
mechanics separately and also
59:56 - smaller combinations of them.
59:58 - So that when they get
to this point where
60:00 - there's a bunch of
different mechanics, they
60:02 - know how they all work individually.
60:04 - And that's kind of the process
that we use of slowly ramping up
60:08 - the difficulty, first with a single
mechanic, then combining them.
60:12 - And then that's kind of how we take
the individual smaller design elements
60:15 - and combine them together and
turn them into the whole game.
60:20 - And now I think Dave is going to come
back and talk some more about physics.
60:29 - DAVE KIRCHER: And after I cover
these last four bits of physics,
60:32 - we're going to open up for questions.
60:34 - I know we have a whole miscellaneous
section that we've outlined here,
60:37 - but that's more just buffer material.
60:39 - So I'm hoping you're going to put
your spatial thinking caps back on.
60:44 - So how we handle portal transitions
is there's two distinct methods.
60:50 - One is that we've got volumes here,
which we call touch volumes or trigger
60:54 - volumes.
60:55 - And those are centered
around the portal.
60:58 - So I've got my blue portal here
and that was green volumes here.
61:02 - And you'll notice it's entirely
in front of the portal--
61:04 - that's important.
61:05 - And then we've got this
yellow volume here.
61:07 - So the yellow volume is--
61:10 - it's whole job is to tell us
which objects in the world
61:13 - are just kind of close to a
portal, and I'll come back
61:16 - to why that's important to the minute.
61:18 - But it separates us from
having to think about objects
61:21 - that are way out in the world all
over in the white space around here.
61:25 - We don't have to think about them.
61:26 - And we also know they're not
objects behind the portal
61:29 - because we're only interested in stuff
that happens in front of the portal.
61:32 - And this green volume here is
where most of the magic happens.
61:36 - This volume says the objects
in it are so close to a portal
61:40 - we need to think very hard about what
they can do and what they can't do.
61:43 - We're going to let those objects
start passing through the portal.
61:47 - And so we keep these objects
in two separate lists.
61:50 - Objects that are in this green volume
no longer intersect with any objects
61:55 - out in the white space out here.
61:56 - They don't have to think about them.
61:58 - They're kept in a
completely separate list
61:59 - and they don't collide with them at all.
62:02 - They also don't collide
with world geometry.
62:04 - I'll get to that in a bit.
62:05 - And then objects in
this yellow volume are
62:07 - the only ones that the objects in
the green volume have to worry about.
62:10 - So these are objects that are
just kind of close to a portal.
62:14 - And so another important interaction
with portals is ray casting.
62:18 - So we're only interested in rays
that pass through the portal quad.
62:22 - So if a ray happens to
just pass the portal plane,
62:25 - but not intersect the quad,
we don't do anything with it.
62:27 - It's not special.
62:28 - We just treat it like any
other ray in the world
62:30 - and let it do its merry thing.
62:32 - But we got this magenta guy.
62:33 - It intersects with the portal.
62:35 - So now we have to recast a new ray
out the other orange portal which
62:39 - essentially gives us two ray segments.
62:41 - And if you think about that, if you
were to write any piece of code that
62:44 - just did the ray casting and
hand back two ray segments
62:48 - when somebody was expecting one, you're
probably going to get weird results.
62:51 - So this means, the fact
that this is happening,
62:53 - means that we have to go through every
single system in the game that possibly
62:56 - casts a ray through a portal and
fix every single one to understand.
63:00 - But if we give you back multiple
segments, different things happen.
63:04 - Instead of assuming that this
starting point goes directly
63:06 - to this end point, which
doesn't even go in the direction
63:09 - it wanted to in the first place.
63:12 - And so at its core,
remember how I told you
63:14 - every object had an
origin, a single point that
63:17 - defines where it is in space.
63:20 - We use the ray casting to
determine if an object that's
63:23 - in this green volume and
just kind of moving around.
63:25 - We use a recast from
one point where it was
63:27 - one frame to one point
where it was another frame
63:29 - to see if it either passed through
a portal or outside the portal
63:33 - because if it went over this
way, we do nothing at all.
63:36 - If we went this way,
we need to teleport it.
63:38 - So that's the basics of our handling.
63:44 - So how do we let objects
pass through walls?
63:48 - This is one of the things
I spent a whole lot of time
63:51 - on because we wanted our portal
transitions to be very seamless.
63:54 - Remember in one of my
first slides I showed you.
63:56 - It should be like a door.
63:57 - People expect to walk halfway through
the door and just stand there.
64:00 - And how we do this is--
64:01 - I'm going to talk about it a bit first.
64:04 - Whenever you place a portal, we take
a snapshot of all the world geometry
64:07 - around you and create a very
small representation of that
64:11 - and carve a hole in it.
64:12 - And we don't do this for the entire
world because that takes way too long.
64:16 - And by way too long, I
mean a quarter of a second.
64:19 - And in game terms,
that's just way too long.
64:23 - I don't know if it was
a quarter of a second.
64:25 - I remember originally that
we had a problem where
64:27 - I think carving the mini-version
took a quarter of a second,
64:29 - so it probably took several seconds.
64:31 - So I'm going to show you a scenario
here where I've got a portal
64:34 - and it's going into--
64:35 - it's going along this corridor
gateway, gangplank thing.
64:40 - And it's going to go into
this little classroom area.
64:43 - And as I go back around
the wall, I'm going
64:45 - to show you a debug mesh of
our collision representation.
64:51 - So in this debug representation,
we've got these green lines.
64:54 - These green lines and then
also these cyan lines--
64:57 - or I'm probably mispronouncing that.
64:58 - I call them bluish, but my colleague
has told me I need to call him cyan.
65:02 - [CHUCKLING]
65:04 - So I'm going to call them bluish now.
65:06 - So these green lines and the
blue lines are in local space.
65:11 - So they're with the blue
portal that we placed locally.
65:13 - And I know it's super
hard to see, but there
65:15 - are a bunch of red lines over
here and some magenta ones.
65:18 - Those are from the other portal
that's in the classroom that
65:23 - are flipped and glued to the
back of our local portal.
65:26 - So it's all in this local space
and around this blue portal.
65:28 - We put some new stuff behind it
and some new stuff in front of it.
65:33 - And so you may be asking yourself
what the colors actually mean?
65:36 - Green here is representing a brush
geometry, which most level editors, you
65:42 - can create walls and various shapes
directly in the level editor.
65:47 - And at least in our terminology,
we refer to these as brushes.
65:50 - So they're usually very simple convex
shapes and super easy to deal with.
65:55 - And this bluish geometry
is from what's known
65:58 - as a static prop, which is a model that
somebody modeled in a model editor.
66:02 - So it's going to be
arbitrarily complex, but it
66:04 - has to be made up of convex shapes.
66:07 - But we take a small snapshot
of that and then carve it up.
66:11 - Sorry, I forgot to mention.
66:12 - So we call it a static prop because
we are guaranteed it does not move.
66:15 - And that's very important because it's
really easy to simulate things that
66:18 - don't move.
66:18 - They don't move.
66:22 - And the same is true of
the red and magenta here.
66:26 - The red is the brush geometry
on the paired portal side
66:29 - and the magenta is static props on the
other side, which is mainly the desks.
66:35 - And as I'm looking through here.
66:37 - You can see just a small
snapshot, and then you
66:43 - can see this magenta outline here
of the desk mesh on the other side.
66:47 - It's important to know that
that's not me looking at the mesh
66:50 - through the portal.
66:51 - That's the local space
version and it just
66:53 - happens to line up the desk because we
have to make sure everything lines up.
66:56 - Otherwise your physical
interactions will seem weird
66:59 - if something is halfway
in a portal and it's
67:01 - kind of not colliding with something
or it's colliding with it wrong.
67:03 - As I walk through, you'll
notice all the colors
67:05 - change because we switched spaces
when I walk through in a second.
67:09 - So now all the colors are
local space for this side.
67:13 - So, yeah, that is how we carve a hole.
67:15 - It's a very, very small area of
the level that we carve a hole in.
67:20 - And so we're getting back to the
volumes I showed you two slides ago.
67:24 - If we carve a small
representation of the world,
67:27 - we have to know when
the player is colliding
67:29 - with that versus the regular world.
67:31 - Because if they're colliding
with the regular world,
67:34 - they're going to collide with
the wall that's behind the portal
67:36 - and they're not going to go through it.
67:37 - So we have to use exclusively
that carved version
67:40 - when they're close to a portal.
67:41 - And we do that-- we're using the same
volumes I was talking about earlier.
67:44 - This is a 3D representation of them.
67:46 - And you'll notice that they have space--
67:48 - a large amount of space
above and below the portal.
67:50 - That's important because it's a
3D space instead of a 2D space.
67:54 - So as I enter the yellow space,
I still collide with the world.
67:59 - I still collide with all
the desks and things.
68:03 - Because I'm still-- while I'm
exclusively in the yellow volume,
68:06 - I'm still colliding with the world.
68:07 - I'm going to show you.
68:08 - It's a bad example, but
it's the video I've got.
68:10 - I'm going to hit this
chair behind this desk
68:12 - because it's still in the real world.
68:14 - And then as I transition
into the green volume,
68:17 - I am exclusively colliding
with our carved version of it.
68:21 - Which-- that was a bad frame to cut.
68:24 - If I happen to look back in the portal--
68:27 - which side is scrubbing?
68:28 - OK.
68:31 - Sorry.
68:34 - So if you happen to look inside the
portal, you might be able to see it.
68:37 - There is-- I know it's super
hard to see, I'm sorry.
68:39 - But we did carve a hole.
68:40 - There's no there's no geometry
right here to stop us going in.
68:43 - And since we're exclusively
using this new mesh,
68:45 - we're allowed to just
go through that space.
68:51 - OK, so more importantly
than static geometry, which
68:54 - doesn't move and is super
easy to physically simulate,
68:57 - we have dynamic props
and things that move.
69:00 - Specifically in this case, boxes.
69:02 - So the way we model this is very
similar to how we did with geometry.
69:07 - We're going to be duplicating
everything and I'm
69:09 - going to show you by
walking in a portal.
69:11 - So this blue box that just
appeared is my player.
69:15 - My player of physics object that's
replicated from this orange portal
69:19 - to the backside of the blue portal.
69:21 - And this is using a system
known as a physics shadow.
69:24 - At least that's what our system is.
69:25 - I'm not really a physicist.
69:26 - That's just what we call
our representation of it.
69:29 - So I mean, I haven't dealt with many
physics systems when I talk about that.
69:33 - So what a physics shadow
does that's different
69:36 - than our rendering geometry is we're
not allowed to actually teleport it
69:39 - from one frame to the next
because if you teleport a physics
69:42 - object, then all sorts of
interactions that intersect,
69:44 - they have no previous basis to go from.
69:46 - Of like how to solve that.
69:47 - They can't rewind time because
they've suddenly teleported
69:50 - into an interpenetrating space.
69:52 - So all of our physics objects--
69:54 - we give them a target of
where they need to go.
69:56 - Sorry not all of our
physics options are shadows.
69:59 - So just like the player volume and just
the examples I'm about to give you.
70:03 - We told them where we want them
to go and they try their best
70:06 - to apply forces and rotations to
go there, but if it doesn't work,
70:09 - we're kind of SOL and
they do their best.
70:13 - So I'm replicating that
for the player over there.
70:15 - And we're also going to replicate
it for the cubes in a second
70:18 - once I get around to placing them.
70:22 - And so it's important to
note that we're not really
70:24 - solving the discontinuity
in space because that
70:27 - would be way too hard, at least
for a person of my skill level.
70:31 - What we're doing is we're
saying each side has--
70:34 - this cube over here is the master of
it's physics and this cube over here
70:37 - is the master of its own physics.
70:39 - And this cube over here is
just trying to replicate
70:42 - whatever this guy is doing.
70:43 - So they don't quite line up,
but they work well enough.
70:47 - And in game development, good
enough usually goes a long way.
70:51 - So as I'm using it, you might notice
they don't quite work super well,
70:54 - but you can see that I've got
this representation over here.
70:57 - I'm pushing it in my virtual version
and it's all lining up kind of.
71:00 - And, yeah, that's how
we do it in Portal.
71:03 - So I'm going to go ahead and tell
you that I'm really glad that we
71:06 - didn't have levels with more than two
cubes because if you try to do this
71:09 - with a train of cubes-- three or four--
71:12 - it breaks down horribly.
71:13 - And this last little bit
is me just showing you
71:14 - that we're not intersecting
with anything in the back of it
71:17 - because we're not inside the
green volume or the yellow volume
71:19 - because we're behind the portal.
71:21 - It's really important to manage your
lists of what can interact with what
71:24 - when we're faking holes in
space and overlapping space.
71:28 - I spent a whole lot of time on this.
71:32 - And I think that is the end
of our physics material.
71:35 - So we had some more
miscellaneous filler material,
71:38 - but it looks like we've ran over
a little bit of our initial time.
71:41 - So we're going to open up to Q&A now.
71:43 - We might get to our
miscellaneous material later.
71:45 - But, yeah, if anybody has got
questions, now would be a good time.
71:53 - AUDIENCE: Could you talk a little bit
about how lights interact with portals,
71:56 - or just lighting on objects and, like,
will you get shadows from the portal?
72:00 - DAVE KIRCHER: So originally,
I had a slide on that.
72:03 - TEJEEV KOHLI: The
question was about lights.
72:05 - DAVE KIRCHER: Oh, sorry.
72:06 - Yes, sorry.
72:07 - The question was how lights interact
with portals and shadows and things.
72:11 - So I'm going to preface with saying that
most of this stuff I did a decade ago.
72:15 - So if I say something that's
not true, I'm not trying to lie.
72:17 - I just don't remember it.
72:19 - So basically there was
a time during Portal 1
72:22 - where we tried very hard to
make light work through portals
72:25 - and we kind of settled
on a cheap solution.
72:27 - Where we would define a point
barely in front of one portal,
72:30 - see what lights were projecting
what amount of color on that,
72:33 - and just kind of make it a massive
sphere on the other side that
72:37 - would kind of do that.
72:38 - So the downside was is
that you only noticed it
72:41 - in cases that were very high contrast,
which is also the case in where
72:45 - it was the most broken.
72:46 - So we just don't do it.
72:49 - TEJEEV KOHLI: On Portal
2, we tried for a while
72:51 - to have the portals themselves
project light on things
72:54 - and that was also kind
of broken for a while.
72:56 - And then we just took it out.
72:58 - DAVE KIRCHER: Yes, so we
just punted on that one.
73:00 - Too hard.
73:03 - TEJEEV KOHLI: Any other questions?
73:05 - Yeah, sure.
73:06 - AUDIENCE: What were the
performance implications
73:08 - of having to draw on that
stencil buffer multiple times?
73:12 - DAVE KIRCHER: So the question
was what were the performance
73:16 - implications of having to draw multiple
scenes with the stencil buffer.
73:21 - So it's very analogous having to
just draw a more complex scene.
73:27 - You're just drawing
more quads and things.
73:29 - On one of the slides in
our miscellaneous section--
73:31 - you know what?
73:31 - Why don't I just go
ahead and jump to it?
73:35 - So it's very important.
73:37 - So when we're rendering
things in a 3D space,
73:40 - we have what's known as a frustum.
73:41 - It's kind of a pyramid, which
comes out from your camera.
73:44 - And you can use it as a very quick
test to see if you should even
73:47 - bother rendering something at all.
73:48 - So I've got--
73:49 - I'm going to use my side--
73:50 - my sides.
73:51 - The sides are defined
by the screen itself.
73:54 - So the screen that you're
drawing has a top, has a bottom,
73:56 - so those project into space.
73:58 - So we take our one side we can
say, OK, if an object is completely
74:01 - on the other side of
this plane, we don't even
74:03 - need to bother trying to draw it.
74:05 - We can just skip it.
74:06 - And so one of the
optimizations we have in Portal
74:08 - is that every time you
look through a portal,
74:11 - we can find the frustum
to a smaller space.
74:14 - I took the easy route in that
I kept it as an object that
74:18 - still had four distinct sides.
74:20 - So sometimes it's a little bit broken.
74:22 - But in this case, you can see--
74:24 - in this case, you can see I'm
looking through a blue portal
74:27 - at this little button here.
74:28 - And I've got this-- it's
probably impossible to see,
74:30 - but I've got this mesh coming out.
74:32 - This is the updated frustum
of everything we try to draw.
74:35 - So you can see it mostly just
encapsulates a little bit of level
74:38 - and the button itself, and that
helps us not even attempt to draw
74:42 - the complete scene over and over again.
74:45 - But I don't think I ever
did a performance analysis,
74:49 - so I can't give you concrete numbers.
74:50 - But it was better than trying to draw
the entire scene over and over again.
74:55 - Because since we still had
the depth buffer on our side,
75:00 - we had already drawn most of the screen.
75:01 - And then we also had the
stencil buffer telling us
75:03 - not to even attempt to
draw most of the pixels.
75:06 - It was not nearly as bad as
trying to render the entire scene.
75:10 - But we did find that for the graphics
cards of the day, which not even
75:13 - all of them supported stencil buffers.
75:15 - Some people that played
Portal 1, they got textures.
75:18 - We found it was best to
just limit to two recursions
75:20 - because we could do our depth,
or we could do our recursion fake
75:24 - and it worked pretty well.
75:25 - And I don't think it
was terribly expensive
75:27 - even for the cards of the day.
75:28 - TEJEEV KOHLI: I know there
were cases during Portal 2
75:31 - when we were trying to
make it work on consoles,
75:34 - there was a lot of proof tests.
75:35 - There were four cases,
especially in co-op,
75:37 - when you're playing in split-screen with
four portals on screen at the same time
75:41 - all looking at each other.
75:42 - It's like 16 views being rendered of
the entire world at the same time.
75:46 - And there were these like
weird edge cases where like,
75:48 - if you do that, you get
two frames per second.
75:51 - Just don't do that.
75:52 - [LAUGHING]
75:54 - There was a few things in
levels that had changed where--
75:57 - like the corner case was the worst.
75:59 - Where if you have a
wall like that and you
76:01 - can put a portal right next to each
other on both sides of the corner.
76:05 - So we had a couple of cases where
we had to actually change the levels
76:09 - to not have those cases.
76:11 - So you can't play--
76:12 - so we just moved the corners
apart like 16 units or whatever.
76:16 - So you can't always see both
portals through both the views.
76:19 - So there was stuff like that we
had to work through especially
76:23 - for consoles back in the day.
76:24 - Like we were working on PS3 360s.
76:28 - I'm sure now it's better, but it's
been a long time since we've done that.
76:31 - DAVE KIRCHER: If I remember
correctly, using stenciling
76:33 - was strictly less expensive
than using textures,
76:36 - because you're still going to
draw the same amount of geometry,
76:39 - but you have no texture cost whatsoever.
76:43 - Hopefully that answers most of that.
76:47 - AUDIENCE: How did you cover all
of your bases for each level,
76:50 - so that a player could never get stuck?
76:52 - In the sense that if
you fell off a cliff
76:54 - or maybe accidentally erased a portal,
you could always find a way to go back
76:57 - or to keep progressing forward?
76:59 - TEJEEV KOHLI: The
question was about how we
77:01 - covered our bases to make sure the
players can't get stuck in levels
77:04 - if they do something bad.
77:07 - Mostly through play testing and
then later on through bug testing.
77:11 - It's a lot of just trying to make sure
that you can see parts of the level
77:16 - from different parts.
77:19 - Towards the later process of when
we're getting closer to shipping,
77:23 - we do something called the
greasy pig pass for the levels.
77:26 - Where we make sure the players can't
literally get stuck on walls and stuff
77:30 - as they're walking through them.
77:32 - So we have a bunch of
invisible geometry there
77:36 - that'll make smooth the collisions
along stairs and along--
77:39 - because especially in Portal 2,
there's a bunch of these broken pieces
77:42 - and a bunch of foliage and
broken parts of the levels
77:45 - that are tilted at
weird angles and stuff.
77:48 - And it's like for the most
part, we left them as is.
77:53 - But a lot of cases we had to
go in and put invisible stuff
77:57 - everywhere to make sure
that the wall might
77:59 - look like it's broken up into
like 15 different pieces,
78:02 - but the player's just
colliding with a flat plane.
78:04 - It's to make sure that those
things don't happen where
78:09 - the players don't get stuck in spots.
78:11 - And there's also a bunch of level design
work that goes around and making sure--
78:15 - because we have to take care
of the opposite as well, right?
78:18 - We have to take care of,
well, we've got to make
78:20 - sure the player can see the exit
portal from the start of the level
78:23 - so they can't just portal and
portal and get to the end.
78:25 - And so doing that process helps
with what you are asking as well.
78:30 - Because if you can make sure
that the exploits aren't there,
78:34 - you're also getting rid of cases
where the player can get themselves
78:37 - in a bad spot.
78:38 - And so it kind of works itself out
through the course of development.
78:43 - You don't go in starting
to make a puzzle
78:45 - or making a level with
that in mind a whole lot.
78:48 - But as you start refining it, things
get tweaked and things get tuned.
78:52 - Some things you might be have
to tweak for like port reasons.
78:54 - Like this doesn't work on PS3.
78:56 - So you got to go, OK, I got to fix
this and tweak the puzzle a little bit.
79:00 - But then once you tweak
the puzzle, now you've
79:02 - got to do the whole
testing all over again.
79:04 - Because all right, I can't just
put a portal place on there
79:06 - because now you can solve the
puzzle without doing any of it.
79:10 - So there's a bunch of work that
has to go on from that sense.
79:11 - DAVE KIRCHER: And it's
important to note that as we
79:14 - get closer to shipping a product,
more and more of our dev team
79:17 - switches to play testing.
79:18 - And we have some very smart
and mischievous people
79:21 - that that specific question of how
do you make sure you don't get stuck
79:24 - is on the checklist.
79:25 - It was on my checklist
at least of, like, I am
79:27 - going to make sure I can't get stuck.
79:28 - I'm going to sit in this
level for about half an hour
79:30 - and think long and hard about
how to get myself stuck.
79:33 - And if I can't do it, then pass.
79:35 - [CHUCKLES]
79:40 - AUDIENCE: Was there anything that
you would have liked to have pursued,
79:43 - but didn't, due to either
time constraints on shipping
79:46 - or the limitations of graphics cards
of the day that you thought about,
79:49 - but for whatever reason, couldn't do?
79:51 - DAVE KIRCHER: The question
was was there anything
79:53 - that we didn't pursue for
various reasons before shipping?
79:57 - And I can't think of anything.
80:00 - I think I was pretty happy
with what we produced.
80:03 - Most of the things I
focused on were bugs
80:06 - that we shipped because once again,
getting back into shipping mode,
80:09 - as you get closer to
shipping something, you
80:11 - want to touch the code
less and less and less.
80:14 - Even if you know that the fix is going
to work 100%, it will definitely work,
80:18 - it might break something new.
80:20 - So I certainly have a small list of
things that I wished I had fixed,
80:23 - but nothing that I wish I--
80:24 - AUDIENCE: Basically, like, features
like the sticky paint, for example.
80:27 - DAVE KIRCHER: Yeah, yeah.
80:28 - Yeah, I can't think
of any features that--
80:30 - TEJEEV KOHLI: There's stuff
that we worked on that
80:32 - obviously didn't ed up shipping.
80:34 - Some of them we touched on over here.
80:36 - I don't know if sticky
paint was something
80:38 - that we should have
worked more on, though,
80:40 - because I feel like we spent a lot
of time trying to get it to work.
80:43 - And the reasons for cutting
it then are still valid now.
80:47 - So I'm saying if we were
to go back, I don't think
80:50 - we would try to solve that problem.
80:52 - We'd probably come up with
new problems to try to solve.
80:55 - We did have-- like
another thing we tried
80:57 - was I think we tried it after the game
shipped for like a DLC expansion was
81:02 - reflection paint.
81:04 - So it was paint that would reflect
the different elements of the games
81:07 - like reflect lasers or
reflect light bridges.
81:10 - And we didn't get too far with it.
81:11 - Again, it leads to a
bunch of weird levels
81:14 - because you have to have
all levels have angles.
81:16 - Because if you think about
Portal, most of the levels
81:18 - are like 90 degree walls and stuff.
81:20 - And 90 degree reflections
don't go anywhere.
81:24 - So we had to have--
81:26 - make this super contrived looking
levels with these weird 45 degree angles
81:29 - everywhere and they can reflect things.
81:32 - And then all the problems
like, well, how often--
81:35 - how many bounces do we allow and things.
81:37 - And also stuff just looked weird,
like tractor beams reflecting off
81:40 - of walls just looked weird.
81:42 - There's probably other ideas
that I can't remember right now,
81:45 - but there are--
81:46 - a lot of them get cut short pretty quick
because the flaws are really apparent
81:52 - pretty quickly.
81:52 - You might sit down and think,
oh, this is a great idea.
81:55 - I'm going to go out and work on it.
81:57 - And then as you start working through
it and testing it out with others,
82:01 - you start seeing all the problems.
82:03 - And those problems get
apparent pretty quickly.
82:06 - And at that point, you make the call.
82:08 - Just be like, this is not
worth pursuing anymore.
82:10 - We had some more game modes
we were trying to work on.
82:15 - I think we had a competitive mode
for a little bit we worked on.
82:17 - DAVE KIRCHER: We actually have a
slide about that for a little bit.
82:20 - It didn't get fleshed out.
82:21 - But after Portal shipped,
we immediately said
82:25 - to ourself what does
multiplayer look like?
82:27 - And so the first thing
we tried was deathmatch.
82:29 - Turns out that's a horrible idea.
82:31 - Everybody wants to just put
portals under other people's feet.
82:33 - So you spend most of your time just
completely disoriented or confused.
82:37 - And then I think we made a
collect the coins kind of like,
82:40 - oh, do flings and things.
82:42 - But once again, everybody
wanted to put their portals
82:44 - under other people's feet.
82:45 - So now we have co-op.
82:48 - TEJEEV KOHLI: The co-op was
very successful, I think.
82:51 - And there's a bunch of
other challenges that come
82:53 - with co-op that we had to work through.
82:56 - I think, yeah, we tried some
more different competitive modes.
83:00 - We tried a time trial kind of mode,
but they're doing it together.
83:03 - But that's effectively just playing two
single player games at the same time.
83:06 - So there's not much interaction.
83:08 - Any time you let players interact
in a competitive way in Portal,
83:10 - they just want to put
portals on their feet.
83:12 - That's really all they want to do.
83:14 - It's fun for a bit, but not
as the receiving end, right?
83:17 - It's not fun-- or they just want to
keep bumping each other's portals.
83:20 - Like when they want to put their
portal at exactly where the other guy's
83:23 - portal is.
83:24 - Like they walk in and
they go in there instead
83:26 - of where they were supposed to go.
83:29 - It's fun for a bit.
83:30 - I'm not saying there's no merit there.
83:32 - DAVE KIRCHER: By "a bit," I think
he means about five minutes.
83:33 - TEJEEV KOHLI: Yeah, by "a bit," that's
the thing you look at, you're like, ah,
83:37 - that's funny.
83:37 - But then you realize there's no real--
83:40 - at least in the mechanics we tried,
there wasn't much depth to it.
83:42 - It's not something you could
flesh out for a game mode.
83:45 - It's more of something
you could do as a level--
83:48 - as a gimmick once.
83:49 - But then there's not
much reason to do that.
83:55 - The cost of doing that is really
high, so you have to figure out
83:58 - do you want to spend
a bunch of dev effort
84:00 - in making this gimmick that's going
to get really old and lots of people
84:02 - are going to get annoyed or frustrated?
84:04 - So you just don't do that.
84:07 - In the back there.
84:08 - AUDIENCE: You mentioned that
you could cache some stuff--
84:11 - things in the pipeline for
some of the lighting plots--
84:14 - earlier.
84:15 - I'm wondering if there were any
other kind of hardware hacks
84:18 - that you do in order to keep the targets
that you want for the portal behavior?
84:24 - DAVE KIRCHER: So the question
references how there were some pipeline
84:29 - restraints on the pixel queries.
84:32 - And if there were any hacks that
we had to do to meet performance,
84:35 - I believe yes.
84:36 - TEJEEV KOHLI: And any
other stuff we did.
84:38 - DAVE KIRCHER: Once
again, I'm going to have
84:40 - to say that I did most of
this stuff 10 years ago.
84:43 - I can't think of anything
off the top of my head.
84:45 - There wasn't a whole lot.
84:47 - TEJEEV KOHLI: We did
stuff with the paint.
84:48 - I don't know if we did a
bunch of hacks, but one
84:51 - of the big hacks on the paint that we
did was the paint that you're seeing
84:55 - is not the paint that's
doing the painting.
85:00 - So I mean that's, like, nobody can tell.
85:02 - That's pretty good.
85:04 - But especially on multiplayer, the
paint that the client is seeing
85:08 - is not the paint that
the server is seeing.
85:11 - Because we couldn't
transmit all that data,
85:13 - so they're both
generating their own data.
85:15 - But then the server is the only
one doing the actual painting,
85:18 - so all the blobs that the client
is hitting in the world do nothing
85:22 - and the server blobs do the painting and
then tell the client paint over there,
85:25 - paint over there.
85:27 - So that's the kind of thing-- because
the network bandwidth is pretty limited
85:30 - and there's a lot of paint
flying through the world.
85:33 - So we couldn't just transmit
all the paint all the time,
85:36 - so they all generate their own paint.
85:39 - Blobs that are through the
world, and then the painting
85:42 - itself happened on the server
and then that gets transmitted.
85:45 - But the paint flying through the
air is different on everyone,
85:48 - but it's random enough
that you can't really tell.
85:53 - AUDIENCE: Is Half-Life
3 going to have portals?
85:55 - TEJEEV KOHLI: I don't know.
85:58 - DAVE KIRCHER: No comment.
85:59 - [LAUGHTER]
86:01 - Probably not.
86:03 - In all seriousness, after
the initial Portal came out,
86:06 - one of the other experiments was not
only what does multiplayer look like,
86:09 - but how fun is this in
a Half-Life environment?
86:13 - And it turns out that the
way that Half-Life is made,
86:17 - there are a whole lot of slightly
scripted sequences to make things work.
86:22 - And so the way those
levels are designed are
86:23 - fundamentally different
than Portal levels
86:25 - and they basically just break down.
86:27 - So if there were portals in
Half-Life, then Half-Life
86:30 - would seem a lot more like Portal.
86:34 - TEJEEV KOHLI: If you think about a
Portal level, it's pretty constrained.
86:37 - The sight lines are pretty constrained.
86:38 - The level takes place in a box.
86:40 - You can't see really far.
86:42 - There's a lot of kinks in the walls so
you can't see all the way to the end.
86:46 - Half-Life levels aren't
designed like that at all.
86:48 - So you would just go in a level and
make portals all the way to the exit
86:51 - and then skip all the game play.
86:54 - I mean there are probably mods
that allow you to do that,
86:56 - but I think the games themselves
and the mechanics are fundamentally
87:02 - different enough that I don't
think they interact really well.
87:05 - Unless both of them
change or one of them
87:07 - changes a lot so it's no
longer the game you wanted.
87:14 - I think you were up first.
87:15 - Yeah.
87:16 - AUDIENCE: You mentioned that you had
done, like, a student game project
87:19 - before you got hired by Valve?
87:21 - What was the story there?
87:24 - TEJEEV KOHLI: So the question was
asking about our student game projects.
87:27 - So Dave worked-- we both went to a
school in Redmond called DigiPen.
87:34 - Dave went there before I did.
87:35 - DAVE KIRCHER: I graduated in 2005.
87:38 - I worked on a game
called Narbacular Drop.
87:40 - Which if you Google for it,
it will be the only result
87:43 - because the name was chosen so that
would be the only result on Google.
87:47 - If you could spell it, good luck.
87:49 - And so that was our senior
project at DigiPen--
87:54 - my team at the time.
87:56 - And so we ended up through a very
convoluted long story showing
88:00 - that at Valve, and they
hired us on the spot
88:02 - to basically recreate
those mechanics for them.
88:05 - And that was actually--
there wasn't a whole lot
88:07 - of confidence at the time that would
actually ship, but it became Portal.
88:10 - So it seemed like a good thing.
88:12 - TEJEEV KOHLI: Yeah, and I was
part of a team that made "Tag--
88:14 - The Power of Paint," the video I
showed with a paint gun, and that
88:17 - was our team's junior
project at DigiPen.
88:22 - And same thing, Valve
saw it a couple of times
88:26 - and hired the entire team to come
work on that mechanic at Valve.
88:32 - And then once we got there, it
became obvious to try to integrate it
88:35 - into Portal 2 and that's how
we start working on Portal 2
88:39 - and that's how the
Portal 2 gels came about.
88:45 - AUDIENCE: The paints and gels which were
introduced as a mechanic in Portal 2
88:49 - ended up being part
of the story as well.
88:52 - Can you talk about how some
mechanics end up affecting the story
88:55 - and how story elements end
up affecting the mechanics?
88:59 - TEJEEV KOHLI: The question was about
how the story and the game mechanics
89:02 - interact and how one affects the other.
89:05 - So the way at least in Portal 2, and
I think Portal 1 was very similar.
89:10 - The way it kind of works
with Valve is we don't really
89:14 - have an overarching design for a design
doc for the game before we start.
89:19 - It's a lot of smaller things that we
try to combine using similar techniques
89:23 - like what we discussed today.
89:26 - And the story kind of builds us
out of using the same techniques.
89:31 - Because the way we kind of vet
out most of our design decisions
89:35 - is by play testing.
89:36 - And the story follows a very similar
plot but you don't really want one--
89:43 - either one to override the other.
89:45 - Because if you see the game,
like if I make a bunch--
89:50 - if we have a team that
made a bunch of puzzles
89:52 - for the game that haven't
been very play tested.
89:55 - And then the writer comes in and
does a bunch of writing for it
89:58 - and then you realize three weeks later
that half these levels aren't shipping
90:01 - anymore because they
didn't test well, then
90:04 - you made a bunch of dependencies
that didn't really work.
90:07 - Portal was lucky in that the puzzles
themselves are compartmentalized
90:13 - as you enter the elevator.
90:14 - Or you exit the elevator, you do
a puzzle, and enter the elevators.
90:17 - So they're all pretty compartmentalized.
90:19 - And a lot of the writing that was done
for it was essentially just jokes.
90:25 - So a lot of those jokes do
fit in to most of the puzzles.
90:31 - So the puzzle can change and the
joke can just be inserted into it.
90:35 - But for the overarching
story of the game,
90:38 - I think that required a
lot more collaboration.
90:41 - So the writers were on-site.
90:43 - They were Valve employees and
they were sitting in the same room
90:46 - as us watching us play test,
bouncing back and forth ideas.
90:50 - And we used-- we had GLaDOS
for most of the game.
90:53 - And the voice artist was local,
so we had her come in many times
90:58 - and record a bunch of lines.
91:00 - We also used some like fake
online robot voice for a while,
91:04 - but those are hard to judge
because the play testers almost
91:07 - never laugh at those jokes.
91:09 - Because the robot always doesn't
really know how to speak them.
91:12 - But it sounds like a robot so
it's not it's better than nothing.
91:16 - It's better than just putting
text on the screen, which we also
91:19 - did for a while.
91:20 - So with the writing, there's two things
that you're trying to test, right?
91:23 - You're trying to test out the
individual's jokes, and a lot of them
91:26 - can be transported to any level.
91:28 - So they're not super
dependent on the levels.
91:31 - But then once the story
starts coming together
91:33 - and starts taking shape, at that point
you're making changes to the levels
91:36 - to accommodate the story.
91:37 - And from that point on, you have to
have a pretty good amount of confidence
91:41 - that these particular levels
are going to ship in the game.
91:43 - And so that that starts
happening I think fairly late
91:47 - into our dev cycle at least.
91:49 - There's always an overarching goal.
91:50 - There's always a goal of you're
trying to capture Wheatley
91:54 - or you're trying to go kill GLaDOS, but
the exact mechanics of how that happens
91:59 - doesn't come together until fairly late.
92:02 - Because you don't want to spend
a bunch of time integrating
92:05 - your story and your levels without
having a bunch of confidence
92:09 - that these levels are
actually good enough to ship.
92:13 - Which we do have for
a bunch of the game,
92:15 - but as new levels and new
mechanics are being introduced,
92:18 - it all kind of goes haywire.
92:22 - So it's just mostly a pretty
strong collaborative process
92:26 - between the writers and
the designers and it all
92:29 - goes back to the play testing.
92:36 - AUDIENCE: Can you talk
a little bit about how
92:38 - the sound interacts with
portals, like in 3-D positioning
92:42 - of the audio sources?
92:44 - DAVE KIRCHER: So the question was
how sound interacts with Portal.
92:48 - And my memory's a little fuzzy.
92:50 - I'm pretty sure we tried to
replicate a little bit using
92:53 - just a simple-- basically the exact
same solution as with our lighting.
92:55 - Where it's like we have a sample
point in front of a portal and we
92:58 - have an emitter on the other side.
92:59 - I can't remember if we shipped that way.
93:01 - TEJEEV KOHLI: I think we did.
93:02 - DAVE KIRCHER: Yeah.
93:03 - TEJEEV KOHLI: I think there's a
microphone or in-game microphone
93:05 - and an in-game speaker on
the portals on both sides.
93:09 - So if you're on this side
of the portal, you'll
93:11 - hear what's happening on the other side.
93:14 - Pretty sure that's how we shipped.
93:15 - DAVE KIRCHER: Yeah, but I don't
think we made any special concessions
93:17 - to make it seem like it was going
through a tunnel or anything like that.
93:20 - We just wanted to make sure you
could hear what was going on.
93:23 - TEJEEV KOHLI: Not through
the portals specifically.
93:25 - I know there was a bunch of stuff
we did for the tractor beam.
93:27 - Like when you head to
the tractor beam, it
93:29 - kind of fuzzles everything else around
you and muddles the sound a little bit.
93:35 - But going through the
portals themselves,
93:37 - I don't think there's anything
specific we did there.
93:40 - At least not that I can--
it's been a long time.
93:42 - DAVE KIRCHER: It's been a long time.
93:47 - AUDIENCE: What were
examples of puzzle games
93:49 - that inspired you when
you making your games?
93:53 - TEJEEV KOHLI: Uh, Portal.
93:55 - [LAUGHING]
93:58 - The question was, what
puzzle games inspired us
94:00 - when we were making our game?
94:04 - DAVE KIRCHER: I can't think
of a strong inspiration.
94:08 - I'm mostly a code guy, so I didn't do a
whole lot of the actual puzzle design.
94:12 - But when I'm thinking back, we
didn't have a whole lot of sources
94:15 - to draw on because it was a
fairly new concept in general.
94:21 - I can't think of any sources I drew on.
94:22 - I mean--
94:25 - TEJEEV KOHLI: I wasn't
kidding when I said Portal.
94:28 - When we were making Tag, I
think Portal had come out a year
94:32 - or two earlier before that and
was really good and a big success.
94:37 - And we were trying to
learn from how they were
94:38 - teaching the players different things.
94:40 - And that's one of the
biggest things we took away
94:42 - in our student game was how do you
teach players different mechanics?
94:47 - And I think Portal did a
really good job of that.
94:49 - By teaching by doing
instead of by showing.
94:53 - So like the players doing
all the stuff and then
94:55 - figuring it out instead
of someone showing a video
94:57 - or just telling the player, hey,
here's what do you do next, and then go
95:00 - and doing that.
95:01 - So we tried to take
that at heart, and as we
95:03 - were doing in our game introducing
new paints and new mechanics,
95:07 - doing it the same way where
we introduce them in a way
95:09 - that the usage is obvious enough
that the player will try it out.
95:13 - And when they try it out and it
works, they feel really good about it.
95:16 - Because they feel like they figured it
out instead of us doing all the work
95:19 - and showing them what to do.
95:21 - So a lot of that kind of was a
specific thing that we took from Portal
95:27 - and trying to do it in our game.
95:31 - AUDIENCE: How many people did it take
to create these two games, Portal
95:35 - and Portal 2, across the
different functional units--
95:38 - development, writers, and the rest?
95:42 - TEJEEV KOHLI: So the question
was about how many people
95:44 - it took to make Portal and Portal 2.
95:48 - Portal 1 was a pretty small
team for the most part.
95:52 - DAVE KIRCHER: So Portal 2 started
as the seven people that worked on--
95:56 - TEJEEV KOHLI: Portal 1.
95:56 - DAVE KIRCHER: Yeah.
95:58 - Sorry, Portal 1 started
with the seven people
96:02 - that worked on Narbacular
Drop directly transplanted.
96:05 - And then we started working
fairly early with two writers.
96:09 - And we were leveraging
other people at Valve
96:12 - to answer questions and help us
hit the ground running as far
96:15 - as how to use the engine.
96:16 - But it was mostly just those
nine people working day to day.
96:20 - And then Portal 2 ballooned quite a bit.
96:22 - TEJEEV KOHLI: Portal 2
was a much bigger team.
96:25 - By the time I joined Valve in
2009, I think there was already
96:30 - a pretty big Portal 2 team.
96:32 - They already had a field
the mechanics figured out.
96:34 - The game was pretty different from
what you see now, but at that point
96:38 - it was already maybe 10, 12 people.
96:42 - And then like it slowly increased.
96:45 - Like we were four or five that
got hired for our paint game.
96:49 - So we joined that team.
96:50 - And then I think by the end
of it, there were probably
96:53 - close to 40, 50 people working on it.
96:56 - That was towards the very end because
we had to ship on two consoles and PC
97:02 - and we had a whole co-op mechanic.
97:05 - And there was a whole co-op
campaign be worked on separately
97:08 - as well as a single player one.
97:10 - So it was a pretty big
team by the end of it.
97:12 - Much bigger than Portal 1.
97:14 - And the game itself I think is
much bigger than Portal 1 as well.
97:18 - I think the single player
campaign itself is probably
97:20 - more than twice as long.
97:22 - And the campaign-- the co-op
one is probably also that big.
97:26 - DAVE KIRCHER: I remember in Portal 1 we
would have to do frequent integration
97:30 - testing and I think I got my play time
on Portal 1 down to like 45 minutes
97:34 - and Portal 2 is several hours.
97:36 - TEJEEV KOHLI: Yeah.
97:37 - So it's a much bigger game,
so it took a lot more people.
97:43 - AUDIENCE: How does the game engine
that you used compare to Unity?
97:46 - Is it more straight-up C
programming from scratch,
97:50 - or is it a lot of the
drag-and-drop stuff you see?
97:53 - TEJEEV KOHLI: So the question
is how did our game engine
97:56 - compare to something like Unity.
97:58 - For both Portal and
Portal 2, we used Source,
98:02 - which is our in-house game engine.
98:05 - And it's very different
from how Unity works.
98:08 - So the way Unity works is
mostly like a really big editor.
98:12 - Like what you're seeing in the
editor is the game essentially.
98:16 - Like all the entities
and stuff are loaded.
98:18 - Obviously more stuff
gets loaded at one time.
98:20 - But what you're seeing
is what you're getting.
98:22 - Whereas the way Source works is it's
got a bunch of these discrete tools that
98:27 - make stuff.
98:28 - So there's a level editor, which
is where you make your level.
98:30 - And then you import that into the
game and you run the game separately.
98:35 - And what you're seeing in a level
editor is not what you see in the game
98:38 - because a lot of the entities and
stuff don't translate to the editor.
98:41 - A lot of the lighting and
stuff has to be pre-baked.
98:44 - Unity has some pre-baked
lighting as well.
98:48 - But in the way it worked in Source--
98:50 - Source I think is a combination
of a bunch of discrete tools
98:55 - for each different aspect of the game.
98:57 - So I get a separate particles
editor, separate model editor,
99:00 - separate editor for VO and the face
poser, and the separate level editor.
99:08 - And then there's a game engine that
takes the compiled versions of all--
99:11 - compiled outputs of all those things
and then puts them in the game engine
99:15 - and combines them together.
99:16 - And then all the code is
pretty much exclusively C++.
99:20 - I don't think there's
really anything else.
99:23 - There might be a couple a
handful of things that are not,
99:26 - but all the tools are C++.
99:29 - All the game engine all the
runtime code is all C++.
99:34 - Source 2 is a little bit different,
but still going forward on that front,
99:40 - I'm not trying to do what Unity's doing.
99:42 - Because Unity is more of
your running scripts--
99:47 - C# scripts-- and then you're just
compiling them while the editor's going
99:52 - and the rapid iteration and stuff.
99:54 - Source doesn't really have
that same model of working.
99:58 - But the advantage is
that we control all of it
100:02 - and then the ceiling
for what we can produce
100:06 - is theoretically quite a bit higher.
100:09 - So there's tradeoffs to it.
100:11 - And also we make all our tools
and all our engine stuff in-house
100:16 - and we're the primary
customer for our games.
100:19 - So we're not trying to
do what you Unity is
100:21 - doing and trying to service to anyone
out there who wants to make anything.
100:26 - And Unity has thousands of
people working on their engine
100:30 - and we have quite a few
orders of magnitude less.
100:36 - But I think we are aware of
all the tradeoffs we're making.
100:42 - We're not trying not to
do what they're doing.
100:44 - We're just seeing-- and we're
learning from them, too,
100:47 - and Source 2 has taken a few cues
from stuff like Utility and stuff
100:50 - like Unreal.
100:51 - Trying to be more user friendly even to
our own customers, internal employees.
100:57 - But it's not like--
100:59 - the way of working is very
different between Source and Unity.
101:10 - I think we're good.
101:13 - All right, well, thanks
again for having us.
101:15 - [APPLAUSE]
101:20 - COLTON OGDEN: Thank you
all so much for coming.
101:21 - So there's some extra pizza outside,
but that was Portal Problems.
101:24 - So thank you very much.