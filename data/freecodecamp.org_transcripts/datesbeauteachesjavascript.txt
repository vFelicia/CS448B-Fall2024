00:00 - a javascript's date constructor helps
00:03 - with parsing managing and displaying
00:05 - dates
00:06 - there are a few ways to make a date
00:08 - object
00:09 - the quickest is to make the object for
00:11 - the current date and time
00:13 - so here's how you would do that
00:15 - do var
00:17 - v1
00:19 - just do new date
00:22 - and i can log that to see what that's
00:24 - going to look like
00:28 - just do two string to convert it to a
00:31 - string
00:32 - and then if i run that
00:34 - you'll see in the console the date down
00:36 - below now i can also
00:39 - convert that to a date string
00:42 - and then it's just going to show if you
00:44 - look in the console it's just going to
00:45 - show the date
00:47 - or i can do
00:49 - to time string
00:51 - if i run down the console you can see
00:53 - it's just going to show the time
00:55 - or i can do two utc string
01:00 - and it's going to
01:01 - show it without my time zone in gmt
01:05 - so if you look back to the two time
01:07 - string
01:09 - it's always going to show the time zone
01:11 - of the browser
01:13 - so i am in the
01:15 - edt time zone so that's what it's going
01:17 - to show the time in
01:19 - okay we can also
01:21 - make a the object a different way
01:24 - so we can pass in the year month day
01:27 - hours minutes seconds and
01:29 - milliseconds
01:31 - so let's try that
01:35 - in javascript the months start at zero
01:39 - so
01:40 - um january is going to be zero
01:44 - february is going to be one
01:46 - march is going to be two so all the
01:49 - dates are just off by one
01:55 - and here i didn't even have to put two
01:57 - string you can just log the the date and
02:00 - it's going to give this format but if we
02:03 - do to to string
02:05 - it's going to be a little more readable
02:07 - and you can see we have the month as one
02:11 - and then it's showing february
02:13 - like i was saying it starts at zero
02:15 - now we can also create dates
02:18 - with a time value so we can do new date
02:23 - and then we're going to just insert a
02:24 - time value such as
02:27 - and
02:28 - this is a time that's the number of
02:31 - milliseconds since january 1st
02:34 - 1970. and that's that's when you when
02:37 - you're entering a time value that's what
02:39 - that time that number is
02:41 - okay let's try a bigger number there and
02:43 - i'm gonna run that
02:47 - okay so you can insert these
02:49 - milliseconds and you can see the date
02:50 - down below
02:52 - now the last way you can create a date
02:54 - is with a date time string
02:57 - there are a lot of options for that so
02:59 - let me show you a few
03:00 - so you can put in a date in a lot of
03:03 - different formats so i'm going to try it
03:05 - this way
03:06 - you can see i have the month day year
03:08 - and time and we can console.log that if
03:12 - i run that
03:13 - you can see below well here's a few
03:16 - other ways you can change this you can
03:18 - just put just the numbers
03:22 - 2015-03 for the month and then the the
03:25 - day at the end
03:27 - and then we can do it that way
03:29 - or
03:30 - we can only put the year and month we
03:33 - don't need the day right here
03:35 - or we can just put the year
03:38 - or we can do in a different format we
03:40 - can do it with some slashes like that so
03:43 - that's the month
03:44 - and the day
03:46 - and then you can put the year after it
03:49 - or you can actually type
03:51 - out the the month so we can do mar 25
03:56 - now with this the month and the day can
03:58 - be in any order
04:00 - also the commas don't matter you can put
04:03 - commas or you cannot put commas or you
04:05 - can spell out the month completely so it
04:08 - takes a lot of different formats here so
04:10 - after you've created a date you can um
04:13 - there's a lot of methods to get
04:15 - information console.log
04:18 - and then i'm going to do
04:19 - get
04:20 - date
04:22 - i forgot to pass on the date they're
04:23 - going to get the date from so d4
04:26 - dot get date
04:29 - and look at the the console the date
04:32 - when you do get dates can be the day of
04:34 - the month so it's gonna be 25
04:36 - or you can do
04:38 - get
04:40 - day
04:41 - which is
04:42 - going to be the weekday as a number so
04:45 - six
04:46 - means it's going to be the sixth day
04:49 - sunday starts at zero and then
04:52 - the sixth day is gonna be saturday
04:54 - there's a lot of other ones you can do
04:56 - get full year get hours get milliseconds
05:00 - get minutes get month get seconds get
05:04 - time yeah if you get time it's going to
05:06 - be the millisecond since january 1st
05:08 - 1970. for all those things i just
05:11 - mentioned there are setters so we have
05:13 - the getters and setters
05:15 - so
05:16 - we can do um
05:18 - d4
05:20 - set year
05:22 - and we can set a new year so i'm going
05:24 - to set that to
05:26 - 2020
05:28 - and now we can do console
05:30 - dot log
05:32 - beef
05:34 - before dot to string
05:36 - and we run that oh i forgot to put the
05:39 - parentheses at the end
05:42 - okay so we have the the day has a new
05:45 - year now you can set the day the full
05:48 - year the hours the milliseconds the
05:50 - minutes anything like that and now
05:53 - lastly i'm just going to show you how
05:54 - you can use the date object to figure
05:56 - out elapsed time
05:58 - so let's do a program here
06:01 - first we have to figure out what the the
06:02 - start time is so i'm just going to
06:04 - create a new date
06:07 - and then we are going to
06:10 - call a function here which i'm just
06:11 - going to call do something which i have
06:13 - to create in a minute here
06:17 - now we have to get the end time so
06:19 - what's what's the time after we've done
06:22 - something
06:24 - and then we just have to figure out the
06:26 - elapsed time between the start and the
06:28 - end time so var elapsed
06:31 - so we're going to use one of those
06:33 - getters get time and we're going to
06:35 - subtract
06:37 - start dot
06:39 - time
06:40 - time from the end time minus the start
06:43 - time is going to be the elapsed time
06:46 - console.log the the elapsed time and
06:49 - this is going to be in milliseconds
06:52 - so now i just have to create the do
06:54 - something function
06:56 - and the point of this is just to do
06:58 - something that takes time here so we're
07:00 - going to create a for loop
07:02 - and we're just going to do
07:04 - some number in here
07:06 - while i is less than that number we're
07:09 - going to just increment i
07:11 - and this for loop isn't going to have
07:13 - anything in it so let's run this and see
07:15 - what happens
07:18 - and we have an error so let's see
07:21 - oh
07:22 - i forgot to put my curly braces after
07:24 - the for loop that was a pretty easy
07:25 - thing here okay let's run that again
07:28 - okay so you can see that took
07:30 - one millisecond you can see at the
07:33 - bottom there
07:34 - so let's create add a few more zeros to
07:37 - that and run that again
07:40 - and now
07:41 - we're down to 15 milliseconds you can
07:43 - see that's 15 milliseconds they had a
07:46 - few more zeros
07:48 - the elapsed time was 1235 milliseconds
07:52 - so that's the way you can just use the
07:54 - date object to
07:56 - find out elapsed time okay thanks for
07:58 - watching my name is beau carnes don't
08:01 - forget to subscribe and remember use
08:03 - your code for good