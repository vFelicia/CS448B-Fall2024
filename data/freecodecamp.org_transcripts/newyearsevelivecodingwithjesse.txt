00:06 - hey everybody
00:07 - it's jesse welcome to live coding with
00:10 - jesse
00:11 - and uh happy new years
00:14 - and here's my some of my kids wanted to
00:17 - say hi so
00:18 - here's cordelia who um got a blue dye
00:21 - all over her face
00:25 - it's cupcake cupcake and this is
00:28 - i have moved ambrose eye on me yep you
00:31 - have a blue guy on you all right
00:34 - from cupcakes yeah so hey everybody
00:37 - i know uh a bunch you've been waiting in
00:40 - the chat for a long time uh so thanks
00:43 - for waiting so long
00:45 - let me know how the stream is
00:47 - uh analytics look okay so um
00:51 - i'm guessing the stream's okay
00:53 - i'm gonna get the chat up somewhere
00:55 - where i can see it
00:57 - easily
00:58 - let's move it over to this screen
01:03 - okay cool
01:05 - all right this looks good
01:10 - all right so
01:12 - i haven't streamed in a while it's good
01:14 - to be back
01:16 - um i see there's a lot of you in the
01:18 - stream i'm gonna do my best to uh
01:20 - try to respond to what you're saying
01:22 - uh but
01:24 - i'm not going to try to follow along
01:26 - with the stream in real time what i'll
01:28 - do is i'll set a timer a pomodoro timer
01:30 - of 25 minutes every 25 minutes i'll take
01:33 - a break and i'll make sure i'll take a
01:35 - thorough look at the stream and try to
01:38 - answer everybody
01:41 - and then during the 25 minutes we'll
01:42 - mostly do coding
01:44 - i'm going to be a little bit laid back
01:45 - here so if you're watching this
01:47 - recording i definitely recommend putting
01:49 - it on you know like double speed
01:52 - because
01:53 - it's new years
01:55 - and
01:55 - got a bunch of time to code it's still
01:57 - about three hours until
02:00 - uh the new year here in the eastern time
02:02 - zone
02:03 - uh so
02:05 - i got a while so i'm not gonna try to
02:06 - rush and um
02:10 - i see a lot of you are saying happy new
02:12 - year uh see if you you say like the kids
02:14 - are cute so uh thank you
02:17 - and um
02:20 - awesome so for for a lot of you it's
02:22 - already 20 20. that's cool
02:24 - yeah here in the uh in the eastern time
02:26 - zone in the united states uh it is still
02:30 - 2019.
02:31 - uh we're we're behind here so
02:35 - um yeah so you would you see on the
02:37 - screen uh is not the project that we're
02:39 - going to work on i just want to make
02:41 - sure all my stuff was up to date
02:42 - beforehand so i just did an update and
02:44 - this was the last thing i had to open
02:46 - which was the react native
02:49 - async storage package
02:51 - that i had done some work on
02:53 - which i did live stream a little bit of
02:55 - that
02:56 - with those recordings are available
02:58 - either on free code camp or on my
03:00 - channel i can't remember
03:01 - but a link to my channel and my social
03:03 - media stuff is in the in the description
03:05 - of the video
03:07 - um so feel free to reach out to me if
03:09 - anybody has any questions about what
03:11 - uh what i'm doing today
03:14 - let's see
03:16 - i'm gonna try to get
03:20 - try to get a window up here so we can
03:21 - see what we're working on here
03:25 - cordelia did you steal a protein bar
03:27 - yeah
03:30 - [Music]
03:32 - so
03:33 - all right you two wanna you wanna play
03:36 - down here you don't have to sit here and
03:38 - watch the code you can play do you wanna
03:39 - go play
03:41 - what
03:42 - you wanna watch the code
03:44 - all right that's cool watch the code
03:48 - all right you're being good so good job
03:53 - okay
03:55 - um
03:57 - let's see
03:59 - come here who else you want to say hi my
04:01 - wife's down here trying to get the kids
04:03 - upstairs come and say hi
04:04 - my wife codes too she's uh
04:07 - she's a um
04:09 - react
04:11 - developer
04:12 - and she works for an agency called
04:14 - sprockets come on and say hi
04:18 - she's on on pretty famous on twitter
04:21 - she's a lot more followers than me
04:23 - wave hi they can see
04:34 - all right cool so
04:36 - let's get a project up here uh now
04:40 - we got
04:41 - i'm planning on live coding until uh
04:43 - 2020 comes so that's about three hours
04:46 - for me so we definitely can work on a
04:48 - few different things if we want
04:50 - uh i was thinking of working on
04:53 - a project for the free code camp
04:55 - curriculum
04:56 - all right bye cordelia
05:00 - bye
05:01 - see you later ambrose
05:04 - bye-bye
05:05 - can you shut the door please ambrose
05:08 - all right good boy thank you
05:11 - bye bye
05:13 - is the kids it's the kids bedtime so
05:16 - [Music]
05:18 - they actually should have been asleep
05:19 - already but
05:21 - they wanted to uh stay up and be on the
05:24 - on the live stream
05:25 - so
05:30 - all right so
05:33 - anyway what was i saying okay
05:37 - there's a project for free code camp
05:38 - that i've done some live streams on
05:40 - before now basically we want to add uh
05:43 - in the free code camp curriculum on
05:45 - freecodecamp.org
05:47 - we'd like to add in some react native
05:49 - lessons that you can do right in the
05:51 - browser uh but there's it's a little bit
05:53 - tricky to get uh react native code to
05:56 - run in the browser now you you gotta do
05:58 - some
05:59 - basically you gotta change some stuff
06:01 - with it to get it to run
06:03 - so that was the the goal was to
06:06 - basically make an in-browser editor for
06:09 - react native code that would display the
06:12 - results of your code immediately
06:15 - so
06:16 - anyway so we
06:18 - found just to bring you up to speed
06:21 - we found a library that kind of does
06:24 - that already and we're trying to modify
06:27 - it and
06:28 - get it to work within
06:30 - free code camp
06:32 - so
06:33 - we could try to work on that there's a
06:34 - few other projects that we kind of had
06:36 - going in the past um with different live
06:39 - streams so we had like a react native
06:41 - math game for kids
06:43 - uh that we were working on that we never
06:45 - really finished
06:46 - um so there's a variety of things that
06:49 - we could do
06:51 - we'll see how it goes
06:53 - uh so i believe i do have
06:56 - the project already pulled down on this
06:58 - machine though for the
07:00 - um react native
07:06 - like in browser editor so let's just try
07:09 - that for now let's see where i'm at here
07:12 - uh
07:13 - i'm going to go
07:15 - let's make sure you can see this yeah
07:16 - all right
07:17 - um
07:19 - let me know if the phone's too small
07:22 - and
07:24 - let me check
07:26 - yeah wow all right there's a ton of
07:28 - stuff in the chat so i know i'm going to
07:29 - miss some stuff i apologize in advance
07:32 - there's just like
07:34 - too many messages to keep up with
07:38 - let's see
07:44 - yeah just a lot of happy new year stuff
07:49 - all right cool
07:53 - uh let me
07:57 - oops
07:58 - i like this window let me find this
08:01 - project so
08:02 - we have async storage
08:06 - all right new browser editor oh we also
08:08 - have another react native app that my
08:10 - wife's been working on that we could
08:11 - work on as well
08:13 - so i guess we we do have a lot of stuff
08:14 - we could work on um
08:17 - she's working on an app to help women
08:19 - who are having a postpartum
08:21 - uh like depression
08:23 - uh to to help them so
08:26 - we're gonna need a pop-up menu
08:28 - all right react native
08:32 - browser editor
08:34 - yeah that's the one
08:40 - all right
08:41 - oops cd
08:43 - react
08:46 - browser editor there we go
08:48 - all right so we're in here let's go code
08:51 - it to
08:52 - dot to open it up in its own vs code
08:54 - window we'll close this window out
08:57 - so i am using visual studio code as my
09:00 - code editor
09:01 - uh this is what i normally use so um
09:05 - if you don't know me i am a um
09:08 - a senior software engineer at dick's
09:10 - sporting goods
09:12 - and
09:13 - i work i work with react and react
09:15 - native every day
09:17 - i'm gonna open up a can
09:20 - i have an energy drink here
09:24 - to keep me awake during this coding
09:26 - session
09:29 - so for my earlier live streams i used to
09:31 - drink g-fuel and try to get a
09:32 - sponsorship all the time but
09:34 - it's been two years g-fuel and i've
09:36 - gotten no sponsorship so now
09:39 - what is this one
09:40 - rain
09:41 - rain
09:42 - if you're out there
09:44 - could sponsor me for coding live streams
09:50 - okay
09:51 - [Music]
09:53 - project that his life says can't you
09:55 - code without energy drink oh yeah i
09:57 - definitely can but
09:58 - um it's past my bedtime so
10:01 - i figured this would help it would also
10:03 - help me to be a little bit more
10:06 - lively
10:07 - uh for for the live stream
10:11 - all right so let's check this out and
10:13 - see what we have going on here
10:16 - i believe what we have here is just a
10:19 - create react app project
10:22 - and yep that's it so we have a create
10:24 - react app project and the goal was this
10:27 - was a proof of concept we're going to
10:28 - try to take that library that i talked
10:30 - about
10:34 - and pull it in
10:36 - to this project and get it to work
10:38 - in this project so
10:40 - let's uh
10:43 - let's just start things out with a um
10:45 - with a start so actually you know what
10:47 - let's do yarn
10:50 - just to make sure we have all the
10:52 - packages which we do
10:53 - and now let's do yarn start
10:58 - see if a project runs
11:00 - [Music]
11:04 - all right and we have an error
11:07 - okay so let's work through our error
11:09 - here
11:10 - and i forgot to start my
11:16 - um
11:17 - i forgot to start my timer
11:28 - okay
11:32 - all right i get a timer since i forgot
11:34 - to start it i'm not going to go the full
11:36 - 25 minutes
11:37 - um before i stop the timer and go back
11:40 - to the to the chat here so
11:49 - let's see
11:53 - all right
11:56 - check this check out our error here
11:59 - um
12:00 - plugin preset files are not allowed to
12:02 - export objects only functions
12:08 - all right then uh let's see where our
12:12 - issue is
12:32 - all right it's not in
12:46 - here
12:47 - [Music]
12:56 - all right so
13:04 - let's see i remember now
13:09 - the last time we worked on this on a
13:11 - live stream
13:13 - we had a ton of errors because we tried
13:15 - to
13:16 - upgrade a bunch of packages
13:19 - and um it just wasn't
13:21 - it wasn't working out for us
13:25 - uh i believe the library that we're
13:27 - pulling code from
13:29 - hasn't been updated in quite a while
13:32 - uh so i think that's where we kind of
13:33 - left it last time was that we worked
13:36 - through a bunch of errors but we still
13:37 - didn't get it to work
13:43 - which
13:43 - that really worries me
13:45 - right i don't like to use um
13:48 - libraries that haven't been updated in a
13:50 - while and in fact
13:52 - let's let's uh
13:54 - let's check out the library now see if
13:56 - there's a newer version that we can pull
13:59 - it might solve some of the issues for us
14:02 - um
14:05 - and uh even if it doesn't at least you
14:08 - all can see what the uh what the library
14:10 - is
14:12 - let's see
14:14 - pull this in let's go to github
14:18 - and
14:20 - i'm not signed into github
14:24 - oops
14:24 - [Music]
14:28 - what i guess i don't have to be signed
14:31 - in i could just search
14:33 - um
14:36 - [Music]
14:39 - oops
14:41 - i meant to do that search in github
14:46 - i'm going to sign in
14:49 - this is the
14:55 - users
14:57 - [Music]
15:03 - i think this is the dude that did it
15:11 - that's it
15:15 - yep this is it
15:17 - okay cool
15:19 - um last commit on june 17th
15:23 - 2009
15:24 - okay um
15:31 - it's been a while it's been a while not
15:33 - like
15:35 - the most out of date thing i've ever
15:36 - seen you can see what this is here
15:39 - uh let me make this a bit bigger just to
15:41 - like get a visual of what we're
15:43 - attempting to do here
15:45 - so you have code over here
15:47 - and then it displays here so you can see
15:49 - like
15:51 - it's like real time editing
15:55 - so that's what we want but this does not
15:57 - look like what happens on uh free code
16:00 - camp in terms of like the free code camp
16:02 - ui so we want to be able to modify it
16:06 - uh to work in that way
16:08 - uh so essentially like
16:13 - basically like package this
16:16 - so
16:18 - it could be inserted into
16:20 - something else like another project
16:22 - another
16:23 - um
16:25 - you know like basically turn it into a
16:27 - package that could be pulled in right
16:34 - so that's the goal
16:36 - let's see what the latest release number
16:38 - is
16:42 - alpha see like it's not like
16:46 - [Music]
16:48 - all right so this would have been the
16:50 - very latest gh52 f8
16:59 - which i don't know that we had the very
17:01 - latest thing in our project or not
17:04 - ours might have been
17:07 - a little earlier than that
17:16 - let's do it again vlog
17:25 - there we go friday august 16th
17:28 - okay
17:29 - so
17:30 - if the initial commit from this was
17:32 - august 16th
17:34 - i think we're good i think we have
17:36 - whatever the latest stuff is we have the
17:38 - latest stuff
17:46 - okay
18:05 - all right
18:10 - hey michael uh curls here how's it going
18:12 - michael
18:14 - um
18:16 - michael uh
18:17 - watched when when i used to live stream
18:18 - way more regularly he always watched the
18:20 - stream so good to have you here
18:22 - um michael you are correct i did have a
18:25 - web player directory
18:29 - which i believe i just pulled down like
18:31 - everything that was there
18:40 - i think it might not be a bad idea to
18:41 - just
18:44 - check that directory out
18:47 - and see if it
18:49 - basically like see if we can get it
18:50 - working
18:53 - if we can get it working locally and go
18:55 - from there
18:56 - since at this point
18:59 - essentially like we took a big risk in
19:01 - the last stream with this where we
19:03 - upgraded a bunch of packages at once
19:05 - we knew it was a risk took it anyway
19:08 - and
19:09 - getting ourselves to a point where like
19:14 - we've worked through a ton of errors and
19:16 - we are still getting errors right
19:18 - um
19:20 - might not be a bad idea to just go back
19:21 - and start
19:23 - from
19:24 - a working point
19:26 - and then be a little bit more
19:28 - incremental about things
19:31 - so
19:32 - let's do that
19:33 - [Music]
19:36 - um react native
19:43 - web player
19:45 - [Music]
19:48 - okay
19:49 - there we go
19:51 - um
19:53 - all right cool so here's our react
19:55 - native web player
19:57 - which
19:58 - i've probably forked this repo and then
20:01 - cloned it let's see the log the git log
20:03 - get
20:04 - long and yep june 17th which i believe
20:08 - was the date of the last the last
20:12 - version that we had here so
20:14 - we should be up to date
20:20 - and so let's run this let me check the
20:22 - package json to see what the
20:28 - what this is to run start so we can do
20:32 - is this using yarn all right this
20:33 - project is using yarn so let's run yarn
20:38 - make sure we're getting all the stuff
20:42 - okay
20:44 - lots of stuff going on here
20:54 - hey happy new year everybody
20:56 - a lot of new people joining the stream
20:58 - welcome
21:06 - all right cool
21:08 - um
21:09 - warning you right now web player yes
21:14 - all right so we got a warning warnings
21:15 - are okay
21:17 - errors are not okay but warning we might
21:19 - still work so let's do yarn start
21:24 - let's see if we can get this to run
21:27 - also my timer is about to run out that i
21:29 - set
21:30 - um
21:31 - to kind of give me
21:33 - give us a little break so while this
21:36 - thing tries to start up
21:40 - uh locos
21:42 - 8080 let's let's click the link here
21:46 - sweet it's working it doesn't look does
21:49 - it look
21:52 - yeah let's make sure it works
21:55 - nice okay so we have a working place to
21:58 - start from
22:00 - i think the goal next would be to kind
22:02 - of
22:03 - take a look around
22:04 - see what we can get away with um
22:08 - in terms of like just packaging this
22:10 - thing
22:14 - what i want to do is be able to keep the
22:16 - functionality of
22:21 - being able to type here and have stuff
22:23 - appear here
22:25 - without necessarily keeping the ui
22:27 - elements right i want to strip away
22:31 - some of this so that we can instead do
22:33 - it more of like the free code camp style
22:37 - like keep their their ui and all that
22:39 - right
22:41 - um
22:42 - let me know if that makes sense or not
22:44 - all right i'm gonna set a little five
22:46 - minute timer i'm gonna go to the live
22:47 - chat and um
22:50 - there's a ton of stuff in the chat so
22:52 - usually i go to the top and work my way
22:53 - down but this time i think i'm going to
22:55 - do it differently and just
22:57 - start at the bottom and work my way up
22:59 - with the chat
23:00 - because there's
23:01 - there's just so many messages
23:03 - um
23:04 - but i'm going to try to go through some
23:06 - messages and just
23:08 - answer some questions here feel free to
23:09 - ask any questions if you have them
23:12 - let's see
23:21 - all right it's
23:26 - a lot of happy new year stuff so i'm
23:28 - just gonna give a big happy new year to
23:30 - everybody
23:31 - um
23:35 - let's see
23:40 - i just realized that if i start from the
23:41 - bottom will work my way up i can't
23:43 - follow the threat of conversation so
23:45 - that was a bad idea so i'm gonna go
23:48 - i'm gonna scroll up a bit and go go back
23:50 - down
23:52 - let's see
24:05 - michael says wow the kids are getting
24:07 - big plus a beard yes i have a beard the
24:09 - last stream i i think i did not have a
24:12 - beard so it's been a while
24:13 - been growing out the beard
24:18 - and the kids are getting big it's insane
24:20 - they just keep growing
24:34 - uh skinny slim says whoa coding family
24:37 - yeah coding family well i mean me and my
24:39 - wife code
24:40 - um
24:41 - the kids are still a little young for it
24:43 - try to get him into a little a little
24:45 - bit but
24:47 - we'll see maybe they'll get into it too
24:48 - one day
24:50 - uh joey says it's been a long time since
24:52 - i've been able to catch one of these
24:53 - live streams well i'm glad glad you can
24:55 - catch this one
24:56 - uh
24:57 - good to have you here
25:00 - man well there are people from all over
25:02 - a lot of people in the stream are like
25:03 - shouting out where they're from and
25:05 - that's just awesome we have people from
25:06 - all over the world
25:20 - all right
25:22 - also uh let me know if there's any
25:23 - weirdness going on with like the
25:25 - background noise or anything like that i
25:27 - tried to turn off everything i could
25:30 - so that nothing would make noise here i
25:32 - turned off my
25:34 - fish tank pump my heater and my house
25:37 - like everything is off so hopefully it
25:39 - was a
25:40 - better experience
25:42 - the last stream i know there was some
25:44 - background noise from my uh my furnace
25:48 - um
25:49 - ravish
25:50 - asked a question i know ravish isn't
25:52 - here anymore i think
25:53 - i saw somewhere that uh they had to
25:55 - leave but
25:56 - says what is uh free code camp going to
25:59 - do java for beginners uh object oriented
26:02 - programming design and coding
26:04 - um
26:05 - i don't know if there's any plans to do
26:06 - like a curriculum on freecodecamp.org
26:09 - but we frequently have
26:12 - video tutorials
26:14 - so there may already be a video tutorial
26:16 - of some java stuff
26:18 - and if there's not a video tutorial if
26:20 - anybody out there would like to create
26:22 - one
26:23 - um you know let
26:25 - um
26:26 - beaucorns or quincy know
26:28 - probably easiest way to get a hold of
26:30 - them is maybe like through twitter
26:32 - uh let them know
26:33 - and you may be able to get the
26:36 - the tutorial on free code cam
26:45 - mr potato hq says my name is jesse
26:48 - awesome great name
27:04 - let's see
27:08 - um
27:10 - let's see someone asked what programming
27:12 - language is that it's javascript uh and
27:14 - in particular uh we're working with
27:17 - react
27:22 - um xgn snowball says i want a
27:24 - penetration test where should i start uh
27:27 - for penetration testing that's not
27:30 - really my specialty
27:32 - i know there are some uh free lessons
27:35 - out there what is it like oh
27:38 - oh wasp is that what the
27:42 - i'm gonna let me think about that maybe
27:44 - and get back to you if i can remember
27:46 - but um the uh
27:49 - uh secure like information security team
27:52 - where i work
27:53 - uh they did a cool like capture the flag
27:56 - thing
27:57 - and had some good resources
27:59 - uh it was a couple of months ago so i
28:01 - can't remember exactly what it was but
28:03 - if i can remember it i'll i'll let you
28:05 - know in the stream um there's some free
28:07 - resources where you can learn more about
28:09 - penetration testing
28:11 - okay
28:17 - all right one more comment and then
28:20 - we'll get back to the code eduardo says
28:22 - thank you for everything you taught us
28:23 - this year i wish you all
28:25 - success in life
28:27 - i really appreciate all your time and
28:28 - effort i've learned a lot you are
28:30 - blessed thank you
28:32 - thank you so much um that's really
28:34 - awesome thanks for saying that thanks
28:36 - for watching
28:38 - um that's cool i'm glad
28:41 - i'm glad you uh appreciate it
28:46 - all right cool
28:49 - i'm gonna scroll back down here actually
28:53 - what i should do
28:54 - is
28:55 - make a note of where i left off
28:59 - yes pen
29:01 - i was afraid my kids stole all the pens
29:04 - um
29:06 - they did not
29:07 - they might have stolen on my paper
29:12 - all right
29:13 - i'm just gonna mark down
29:16 - where i left off at in the chat so i can
29:18 - get back to it easily next time
29:25 - all right cool
29:28 - okay so back to the code
29:30 - right now we have this running locally
29:33 - which lets us type in react native code
29:35 - and see our results in the browser
29:37 - behind the scenes this is using
29:39 - something called react native web
29:41 - which converts react native code into
29:43 - something that a browser can handle
29:47 - and it's using it
29:49 - basically in a
29:52 - like a service worker
29:54 - which is a file that can run
29:56 - um
29:58 - in the browser and do stuff
30:01 - i guess kind of like off the main thread
30:05 - of the
30:06 - browser so let's check out where that's
30:09 - happening
30:11 - because that's kind of where where all
30:12 - the magic happens
30:14 - with this
30:17 - yeah this is it that's where all the
30:18 - magic happens
30:20 - so that's where we want to look so i
30:23 - believe it's this
30:25 - nope not that
30:27 - um
30:29 - very uh
30:30 - babble worker
30:34 - so
30:38 - this is what is doing the transformation
30:42 - i believe
30:53 - yep that's it so
30:55 - things that normally happen in node on a
30:58 - user's machine on like on a computer
31:01 - we're now trying to get to work in a
31:03 - browser in this file
31:05 - right so
31:07 - it it needs to work a little differently
31:10 - than it normally works but this is
31:12 - what's
31:13 - what's doing the uh
31:15 - the work here
31:17 - so
31:20 - we need to at the very least we need to
31:23 - keep this intact and and let it do its
31:25 - thing
31:27 - okay a lot of the other stuff
31:30 - check out our babbo rc right it's it's
31:32 - not super complicated in terms of what
31:35 - babble stuff we have in here
31:37 - uh
31:43 - i'm just checking out a few of these
31:44 - other files just to
31:47 - make sure we're not missing anything
31:53 - in terms of like core
31:58 - and functionality
31:59 - [Music]
32:14 - okay
32:20 - all right so let's find let's kind of
32:21 - like go down into this here and see um
32:26 - we're importing this sandbox component
32:30 - so in components player
32:32 - sandbox
32:37 - all right
33:12 - interesting okay
33:31 - all right so it looks like there's a lot
33:33 - going on here as well
33:36 - that will
33:38 - probably need to keep
33:52 - okay
33:54 - console proxy
34:06 - there we go okay there's where we're
34:08 - actually pulling in
34:11 - uh react native web
34:29 - okay
34:33 - all right now the workspace itself this
34:35 - is a lot of the um
34:37 - like the
34:38 - the ui
34:40 - and
34:42 - this for the most part i believe can
34:45 - um
34:47 - can be changed
35:02 - okay
35:15 - so if we could keep
35:18 - basically the console part is what i'm
35:21 - the editor sorry the editor part is what
35:23 - i'm worried about most
35:28 - comments
35:44 - hmm
35:58 - okay
36:02 - all right it looks like simon says there
36:03 - is a lot of background noise
36:05 - let me see
36:15 - oh you know what that might be
36:19 - it might be the bubbler thing in my fish
36:20 - tank let me turn that off and see if
36:23 - that helps thanks for letting me know
36:43 - okay that to me at least it sounded a
36:45 - lot better when i turned the bubbler off
36:48 - i uh i didn't even realize that thing
36:49 - was that loud
36:51 - uh that was kind of a newer addition to
36:53 - the fish tank so
36:55 - cool hopefully that's better
37:04 - all right
37:05 - tell you what i'm
37:08 - i'm a little bit
37:16 - i'm a little bit torn on this one
37:20 - um
37:28 - like i'm just
37:29 - uh the reason i'm torn like i'm not sure
37:31 - that this is
37:33 - gonna be a great project at least right
37:36 - now to live stream
37:43 - because
37:46 - there's a lot going on
37:52 - it seems like there's going to be a lot
37:53 - of work where i'm just going to be
37:55 - reading through
37:57 - this code
37:59 - trying to figure out what everything is
38:01 - doing
38:02 - which won't make for a great live stream
38:06 - you all let me know
38:09 - i mean normally i just i would go
38:10 - through it it's fine but we do have
38:13 - multiple projects that we could switch
38:14 - to that would be
38:16 - um a lot easier i guess to uh to
38:20 - actually like get some code written
38:23 - um like we haven't actually written any
38:25 - code yet right
38:27 - uh
38:28 - so
38:29 - anyway i'll give you all like um
38:34 - uh
38:35 - like a minute or so
38:36 - i know there's some delay in the stream
38:38 - so i'll give you all a minute or so put
38:39 - in a live stream
38:41 - should we try to like stick with it and
38:42 - just like try to tear this code apart
38:45 - and figure it out or
38:47 - maybe
38:48 - i'll do some of the work like
38:50 - on my own and then come back to a later
38:53 - live stream whenever
38:55 - it's time to actually do some coding
38:57 - and then we'll just switch to some other
38:59 - stuff let me know
39:02 - uh i guess so
39:03 - let me check really quick too while
39:05 - you're deciding and see what i have
39:07 - already installed
39:10 - all right so we have
39:19 - so you do have the app
39:31 - so i have um my wife's app already
39:35 - available
39:36 - that we could work on
39:38 - um
39:40 - i could definitely
39:42 - pull down a copy of the
39:45 - uh the game that i was working on
39:59 - yeah we got some options
40:10 - all right uh i got some responses let me
40:12 - go through these responses see what you
40:14 - all think
40:16 - um
40:20 - uh connor's asking what is this code
40:22 - output
40:23 - uh the the main output is um it's it's
40:27 - outputting uh like html
40:33 - based on the input of react native code
40:35 - it it transfiles that and outputs it
40:38 - into
40:39 - html that can be displayed in the
40:41 - browser
40:44 - um
40:44 - let's see
40:52 - i said earlier that i'm torn what i
40:54 - meant was i um
40:56 - um i was conflicted like i just i really
40:59 - wanted to get this to work for the sake
41:02 - of free code camp but
41:03 - now that i'm going through more of the
41:05 - code
41:06 - i just see that maybe it's not going to
41:08 - be the the best thing to live stream it
41:11 - just won't be
41:13 - um
41:17 - i don't know
41:18 - it's there won't be anything to see
41:21 - happening on the screen you know what
41:22 - i'm saying so i just don't think it
41:24 - would be that great for a live stream
41:26 - uh
41:27 - so
41:29 - okay do something graphically
41:30 - interesting make a website do some
41:32 - beginner stuff
41:34 - uh do javascript
41:36 - okay so like come back to this project
41:38 - later
41:39 - um
41:40 - samuel says might be unrelated or my
41:42 - suggestion is make a music visualizer
41:44 - that you're happy with actually that's
41:46 - really cool i don't think i'll do that
41:49 - because i just i have no idea where i
41:51 - would start with that that's going to
41:52 - take some research on my part but that's
41:54 - a really cool idea because i would love
41:56 - to have a good music visualizer that
41:58 - would work with i use spotify all the
42:00 - time it would be great to have one that
42:01 - that's awesome that works with spotify
42:04 - um levi says can we get a mini flexbox
42:06 - in grid tutorial
42:08 - i can definitely do flexbox i'm not
42:10 - great with grid but react native uses
42:12 - flexbox so i i am
42:14 - uh
42:15 - pretty familiar with flexbox
42:17 - um
42:19 - carrie says we have nothing to do so
42:21 - we're just hanging out with
42:22 - with you watching
42:24 - cool
42:25 - um
42:26 - levi says do the game
42:29 - connor says is it hard or is it just not
42:31 - beneficial to peace through the code um
42:34 - yeah i just think it would be
42:36 - um
42:39 - i mean i just i kind of think it would
42:41 - be kind of boring to try to piece
42:42 - through the code at this point
42:44 - uh michael says go back to the math game
42:46 - there seem to be some beginners
42:49 - okay and that's a good intermediate
42:50 - project
42:52 - all right cool let's do tyler asks can
42:54 - we work some vanilla javascript
42:56 - um the projects i have right now aren't
42:59 - vanilla javascript but like
43:01 - within
43:02 - react we'll be doing some stuff that
43:05 - would work as vanilla javascript as well
43:12 - what page i have
43:14 - that this is a project
43:20 - uh connor says i understand that can you
43:23 - do can you show the web page slash app
43:25 - that this is the project like uh like
43:27 - what is the code like your website for
43:29 - gaming or what i'm a
43:32 - software developer myself so the the
43:35 - website for this particular
43:38 - so this is the website for that code
43:40 - right you like you put react native code
43:42 - in here and it pops up here and um i
43:44 - wanted to take this and convert it so
43:46 - that we could put it into
43:49 - the free code camp website and have it
43:52 - work and look like it should for a free
43:55 - code camp lesson
43:58 - so that's kind of what i was what i was
43:59 - trying to do
44:01 - uh okay
44:10 - all right cool let's um
44:12 - let's grab
44:15 - oops
44:17 - let's grab that project so i'm not
44:19 - signed in so i'm just gonna have to
44:20 - search for myself
44:23 - am i jay weigle or my jr weigle
44:26 - i think i'm jry though let's see
44:31 - no
44:33 - oops all of get up
44:45 - my jesse i don't know my github name is
44:47 - there we go just you know all right cool
44:50 - so battle math is the um is the game
44:54 - that we're working on
44:55 - battle math here let me put the link in
44:58 - the um
45:01 - in the chat so
45:03 - i just posted the link to the github
45:05 - repo in the chat so you can check it out
45:06 - if you want
45:08 - and um
45:10 - it's been a while since i've been in
45:11 - this project
45:13 - so hopefully
45:15 - i think i have
45:25 - https
45:26 - alright let me type in my
45:30 - github password real quick
45:32 - i'm gonna find out what it is
45:35 - [Music]
45:44 - [Music]
45:52 - all right so i have lastpass
45:55 - and
45:56 - it i have this really long password
45:59 - right which what they recommend and then
46:02 - you have to go in it's like two factor
46:04 - off so
46:05 - bear with me for one second
46:09 - [Music]
46:13 - i had intended to get all this set up
46:14 - and working before the stream but then
46:16 - uh my kids wanted me to cuddle with them
46:18 - before bedtime so
46:20 - i i did that instead
46:22 - um
46:23 - all right
46:24 - but this should be working now github
46:30 - sign in
46:38 - what i have two factors on github
46:41 - all right
46:49 - [Music]
46:53 - i guess it's good to have two-factor
46:55 - authentication
46:58 - all right now i can clone this with my
47:02 - ssh key
47:04 - there we go
47:06 - all right so let's go back here and i'm
47:09 - in my projects directory which is what i
47:11 - want to do so i'm going to do a git
47:12 - clone
47:14 - and
47:16 - paste in
47:17 - [Music]
47:19 - what i just copied from github cool so
47:21 - now
47:22 - i should have battle math yep
47:25 - uh so now i could
47:27 - cd into battle math
47:32 - and open up vs code let's close this out
47:36 - and let's close
47:40 - where's the other one at whoops
47:45 - i want to try to
47:46 - keep the as many windows closed as i can
47:49 - just so that i don't uh make the stream
47:53 - lag by having too much stuff going on at
47:55 - once
47:56 - let's get our terminal open here and
48:00 - we're gonna do
48:01 - yep i have yarn going on this project
48:05 - i like to use yarn
48:06 - um
48:07 - but if you want to use npm instead like
48:10 - it's they're basically equivalent at
48:13 - this point
48:19 - all right cool so that's installed
48:22 - let's do yarn start
48:26 - let's double check that that's in fact
48:28 - the right command
48:31 - where we have package json
48:33 - yep yarn start
48:39 - so
48:40 - this project
48:41 - is using
48:43 - react native web
48:46 - so we're writing react native code but
48:49 - we're running it in the browser
48:50 - there we go and here is the game the
48:53 - math game so
48:55 - uh quick overview of this math game
48:57 - if i get it right so three plus one
49:00 - equals four uh we need to
49:03 - first things first let's get this
49:05 - looking better because you can barely
49:07 - even see that right we need to
49:09 - change the the text color on that thing
49:12 - if i submit that right then these
49:14 - enemies here on the right hand side go
49:17 - away
49:19 - if i get it wrong
49:22 - the enemies
49:23 - more enemies come here's my little hero
49:25 - character over here
49:27 - so you can see there is a ton of ui work
49:30 - that needs done we also have subscribe
49:33 - subtraction multiplication division
49:35 - all right so we have several modes here
49:38 - um so
49:40 - let's let's get the ui cleaned up a
49:42 - little bit
49:48 - levi says this game could use some css
49:50 - that is a true statement
49:53 - all right
49:54 - uh so yeah let's let's at least get the
49:57 - font color in here and the font size uh
50:00 - to match what we have here
50:02 - that'll be much easier to read
50:06 - so let's go to our code
50:08 - uh so
50:09 - it shouldn't be too
50:12 - complicated at this point
50:17 - so everything's still in one yeah
50:20 - it's all basically in one component at
50:23 - this point
50:25 - so we have our
50:26 - app.js as you can see we are using hooks
50:30 - so react if you're not familiar with
50:32 - hooks
50:33 - uh you'll you'll get a little bit more
50:35 - familiar with it now
50:36 - um so we can use we use functional
50:39 - components and hooks in react
50:42 - if you're not familiar at all with react
50:44 - it's a
50:46 - javascript library that helps you
50:49 - to build apps
50:52 - so this if you don't know anything at
50:55 - all about react it's gonna be a bit
50:56 - confusing
50:58 - um all right we we definitely got a lot
51:00 - to do here so you see how we have this
51:02 - svg in here now
51:03 - uh this is would not work on mobile so
51:07 - we definitely want to we want to do
51:08 - something about this
51:10 - right
51:14 - but we want to find that
51:17 - that input so i'm just going to do
51:19 - control fine
51:20 - let me make the text the font size a bit
51:23 - bigger i just want to make sure
51:25 - everybody can see
51:27 - let's give this enough space as possible
51:29 - so
51:30 - um
51:32 - type in input there we go so answer
51:34 - input here
51:37 - so we do have a style for styles input
51:40 - let's go to that
51:44 - and where's that as we have our styles
51:45 - down here
51:47 - now in react native you can do your
51:49 - style one way to do styles is using this
51:52 - stylesheet.create
51:54 - that comes built in with react native
51:56 - and your styles end up being a
51:59 - javascript object
52:01 - so a lot of the naming will be familiar
52:04 - to those of you who use css
52:06 - but you're going to have everything
52:08 - camel cased instead of
52:12 - hyphenated
52:13 - so just slightly different also all of
52:16 - our values are unitless so you don't see
52:18 - any like pixels or anything in there
52:21 - so slightly different and where
52:23 - everything is by default display flex
52:27 - and it's flex direction
52:29 - column by default it's a little bit
52:31 - different than normal all right where
52:33 - was that input at
52:35 - okay so the input height with border
52:37 - column origin left let's see if we can
52:39 - just give the input a color
52:43 - and um
52:45 - let's just give it white so if we do fff
52:49 - hashtag fff um
52:52 - that should give us the right color
52:55 - and then our font size we're gonna try
52:57 - to match it with our our math text so
53:00 - let's give it a font size of 40.
53:08 - all right let's save that
53:10 - oh you have legacy linter options in
53:12 - your vs code settings they're no longer
53:14 - being used
53:15 - okay
53:17 - let's just
53:21 - i guess remove the settings alright
53:27 - now let's check out
53:29 - our app where are we at
53:32 - there it is
53:35 - cool look at that
53:38 - nice
53:42 - so we now have uh our answer
53:46 - text
53:47 - in our input is the same size as the
53:50 - rest of the the text and the same color
53:53 - wonderful
53:55 - okay
53:58 - uh
54:01 - cool my timer is about to run out so
54:04 - i'll take another five minute break and
54:06 - go back to the chat
54:13 - let's see
54:14 - and but the next thing that we'll work
54:16 - on
54:18 - is i want to show you how to um
54:21 - make a file that will run
54:25 - conditionally
54:28 - basically we're going to pull this svg
54:29 - out into its own file and we're going to
54:32 - make sure that one version of it runs on
54:34 - mobile and one version of it runs on web
54:37 - okay so that'll be the next thing we do
54:41 - all right cool
54:43 - take a short break let me scroll back up
54:45 - to where i left off which was a while
54:47 - ago
54:49 - and actually i
54:50 - i did miss so um unfortunately what
54:53 - happens in my chat
54:55 - is um
54:57 - if there's too many chat messages it
54:59 - cuts them off so i can't go back so i
55:01 - can't get all the way back to where i
55:02 - left off
55:03 - apologies if i miss your message okay
55:06 - but um
55:08 - i'll try to get as much as i can
55:12 - um
55:13 - sima says jesse first time i'm wishing
55:16 - you a happy new year 2020 dude pure love
55:19 - from india thank you so much
55:21 - i really appreciate that
55:23 - um
55:26 - skinny slim says what advice do you have
55:28 - for someone that's just learning to code
55:29 - and this one question wasn't just for me
55:31 - this was for everybody out there
55:33 - so feel free to add your advice into the
55:35 - chat um i would say try to code a little
55:38 - bit every day
55:40 - all right even if it's only a half hour
55:42 - every day just try to do a little bit
55:43 - every day
55:47 - and just just keep at it right if you
55:49 - can do more than a little bit that's
55:50 - awesome but just try to keep to a little
55:52 - bit every day
56:05 - uh stephanie asks what time is it in
56:07 - america uh on the east coast in um in
56:10 - america in the united states it is
56:13 - 9 56 pm
56:37 - all right
56:39 - i'm trying to there's still a lot of
56:41 - happy new year messages so happy new
56:42 - year trying to skip through and find um
56:45 - find out some questions here
56:49 - um
56:51 - akshay kumar says i love free code camp
56:54 - lots of free stuff they provide love you
56:56 - guys uh we love you too thanks for the
56:59 - message that's awesome yeah and it's not
57:02 - like
57:03 - i um
57:05 - i just do a little bit i do the live
57:06 - coding stuff there's a ton of other
57:08 - people that do a lot of work uh with
57:10 - free code camp so actually um they just
57:13 - came out with the top 100 contributors
57:16 - list
57:16 - uh so if you check out like the free
57:18 - code camp blog
57:20 - i believe it's on there
57:24 - if you check the free code camp twitter
57:25 - it's probably one of the tweets that
57:27 - come out within the last couple of days
57:28 - but
57:29 - uh
57:31 - you could see a ton of the people who
57:32 - are um
57:34 - or have been recognized for their
57:35 - contributions so check that out
57:38 - um
57:40 - hey gwen faraday is joining the stream
57:42 - not sure if you're still here but um
57:45 - she says good to see you streaming again
57:46 - it is definitely good to be streaming
57:48 - again i'm super happy about it and
57:50 - gwen's actually streaming a lot now too
57:52 - so check out her stream it's a faraday
57:54 - academy
57:56 - um so check her out on twitter and um
57:59 - she always posts when she's gonna do
58:00 - streams and stuff so
58:02 - um she is a free code camp contributor
58:05 - as well she's the one who initially even
58:07 - gave me the idea
58:09 - of
58:10 - attempting that project we were working
58:11 - on at first
58:13 - because she's done a ton of work for
58:15 - react native curriculum so i really hope
58:17 - that we can actually get that working
58:18 - and out there to you soon
58:21 - um not found asked why are you
58:23 - programming today
58:24 - um i'm assuming you're asking because
58:26 - like it's it's a holiday right uh
58:29 - well to be honest the reason i decided
58:31 - to uh to do this today
58:33 - um
58:34 - i just remembered maybe like four or
58:38 - five years ago um quincy who's the
58:40 - founder of free code camp
58:42 - did a
58:43 - live stream on new year's eve
58:46 - and uh i remember all the kids were
58:48 - already asleep my wife is asleep i was
58:50 - uh
58:51 - on my exercise bike
58:53 - uh in my basement and i i
58:56 - turned on the free code camp live stream
58:58 - i was watching it while i was exercising
59:00 - and i remember just being like
59:03 - thinking how cool it was
59:04 - that quincy had done this and made free
59:07 - code camp and how much it helped me out
59:10 - and um
59:11 - that was the first exposure i had to
59:15 - a live stream about coding and then a
59:18 - couple years later when i actually
59:19 - started live coding
59:21 - and then
59:23 - um
59:24 - ended up live coding for free code camp
59:27 - i i thought back to that and i thought
59:29 - how crazy is it that i'm live coding for
59:31 - free code cam
59:32 - um when
59:34 - the first live stream
59:36 - about coding i saw was the free code
59:37 - camp live stream so i thought wouldn't
59:39 - it be cool
59:40 - to do another
59:41 - live stream on free code camp um so
59:45 - anyway that was my that was my thought
59:48 - process behind it i also figured like
59:50 - hey my my wife wanted to go to sleep
59:52 - early she didn't want she doesn't like
59:54 - to stay up late my kids are gonna all be
59:56 - asleep you know
59:58 - i may as well do this
60:01 - uh so anyway
60:03 - uh that's why i decided to to uh to code
60:07 - and live stream today uh just so you all
60:09 - know none of this code that i'm doing
60:10 - today is for my job so i'm not like uh
60:14 - my employer is not mandating that i work
60:16 - on new year's eve this is all just fun
60:18 - side project stuff
60:20 - uh so
60:22 - uh anyway so that's what i decided to do
60:24 - today thought it would be cool
60:26 - so i didn't get to through too much of
60:29 - the live chat on that one uh but i'll go
60:32 - back to it
60:34 - anyway let me set my pomodoro timer
60:36 - again
60:38 - i may end up taking like
60:41 - uh the ending of the stream because it
60:43 - there's a lot of messages in the chat
60:46 - so i may do like um
60:49 - i don't know maybe like the last hour of
60:51 - the stream i'll just stop
60:53 - get through all the messages i can and
60:56 - then if i get through everything then
60:57 - maybe i'll do some more code but
60:59 - just so i don't leave you all hanging um
61:01 - when you've like when you're asking
61:03 - questions and stuff
61:07 - all right cool
61:09 - so next thing we're going to work on
61:12 - is this svg
61:14 - right so
61:16 - i'm going to copy and paste
61:18 - this svg
61:20 - uh so an svg is
61:22 - i believe it's a scalable vector graphic
61:25 - is what it stands for
61:27 - um
61:28 - it's an image
61:30 - that actually like you can represent as
61:32 - code in your project
61:35 - which means you can do some really cool
61:36 - stuff with it right so each one of these
61:39 - paths and stuff this this these all
61:41 - represent different things in your image
61:44 - uh so
61:46 - you could control all these values like
61:48 - fill would be like the color
61:49 - right and
61:51 - even more than that all these mean
61:52 - something right uh in the image
61:55 - so
61:56 - you could use css and javascript to
61:59 - control these values and change them
62:01 - based on what the user does
62:04 - to do some really really cool animations
62:06 - and things on your page so i know um
62:10 - uh what's her name sarah drazner
62:13 - uh she's pretty active on twitter uh she
62:16 - does a lot of cool stuff with svg
62:19 - animation
62:21 - so if you're interested in that kind of
62:22 - thing try to find her on on on twitter i
62:25 - think her handle on twitter is sarah edo
62:28 - but um anyway
62:31 - i've seen some cool stuff done with it
62:33 - so it's definitely i prefer using svgs
62:35 - when i can and instead of having to
62:37 - actually load an image file like it's
62:39 - just code right here so so much faster
62:42 - but anyway we're going to take this
62:43 - which i've i've copied
62:45 - and we're going to
62:48 - make some files here so right now
62:51 - everything is in source
62:53 - i don't really like that let's make a
62:55 - folder for components
62:57 - make a little bit more clean
63:02 - components make sure i spelled that
63:04 - right
63:05 - and i made a file not a folder so let's
63:07 - delete that
63:08 - and let's go back and make a folder
63:15 - components
63:17 - and then
63:18 - for now i'm just going to put the svgs
63:20 - right in there usually in a project if
63:22 - it starts to get big and i have a ton of
63:24 - components and svgs and all that i'll
63:26 - split it out and have like separate
63:28 - folders for everything but for now
63:31 - we're still small so i think we're fine
63:33 - no sense in like
63:35 - over organizing things ahead of time
63:38 - especially because vs code will pretty
63:40 - much switch all the imports for you
63:43 - it's really easy to switch to like
63:45 - reorganize stuff later on
63:47 - so in our components folder
63:50 - i'm going to make two files one is going
63:52 - to be called
63:54 - um
63:56 - let's see what we should call this
63:58 - let me see what this is a hero let's
64:00 - call it hero
64:02 - dot
64:04 - um
64:06 - oop i thought i was using typescript for
64:07 - a second
64:09 - hero.js
64:14 - i actually do want to switch this to
64:15 - typescript i've been using typescript at
64:16 - work a lot and now i'm used to it and i
64:18 - really like it when we did this project
64:21 - i wasn't using it yet
64:24 - so let's make another
64:27 - file and let's name this
64:29 - hero.native.js
64:35 - okay
64:36 - and
64:37 - we're going to go to
64:42 - let's see if i could find it um
64:46 - svg
64:48 - to
64:49 - react
64:53 - i found this cool uh react component
64:56 - converter
64:58 - and i use it at work a lot this is it
64:59 - yep
65:01 - this saves me a bunch of time
65:04 - because i use a lot of svg's uh and my
65:07 - projects at work like for icons and
65:09 - stuff
65:10 - so basically what you do is you just
65:12 - take your svg code you paste it
65:15 - and then what you get is
65:18 - a valid react functional
65:20 - component so that's pretty sweet
65:23 - so you get that here
65:25 - oops
65:27 - let me copy that
65:29 - and
65:31 - let's go back to our code
65:34 - this would be our regular hero.js now it
65:38 - just gives you svg component
65:41 - uh you know what i wanted to do
65:44 - and i didn't do let's name this uh
65:47 - hero
65:48 - svg i actually want to name this svg
65:53 - so that we know it's an svg and not a
65:55 - real component so let me rename this i
65:57 - don't know what i was thinking
66:00 - hero
66:02 - svgs let's rename this too
66:12 - okay
66:13 - usually uh react components are
66:16 - capitalized so
66:20 - for a native one we can go back to our
66:22 - converter i can find it let's go back to
66:25 - our converter and we can just check
66:28 - react
66:30 - native and
66:32 - um
66:34 - we can see it gives us
66:38 - basically the same thing but it says uh
66:40 - it's react native svg
66:42 - okay so we're going to use react native
66:44 - svg with this
66:47 - and we'll probably have to import it
66:49 - because i don't think we have it right
66:51 - now
66:53 - but this will let us
66:55 - oops did i not copy it yeah there we go
66:59 - we can name it the same thing
67:10 - and
67:12 - i don't think we have react native svg
67:14 - let's check our package json
67:17 - yeah we definitely don't have it we
67:19 - we only have a few things it's so nice
67:21 - when you have a new project and
67:24 - your package json is this
67:26 - this long
67:27 - um
67:28 - all right let's pull that in and uh
67:31 - let's go
67:33 - yarn
67:34 - add
67:37 - react
67:38 - native
67:39 - svg
67:42 - alright cool
67:54 - so
67:54 - now
67:56 - let's go back to our app.js component
68:00 - right
68:02 - and let's get rid of this giant svg
68:06 - stuff
68:13 - and instead we can put in
68:17 - hero svg
68:19 - as our component right and
68:21 - we're just going to give it a little
68:22 - ending slash there
68:26 - uh did we get it auto import
68:29 - yep
68:30 - so um my vs code is set up to
68:33 - automatically put in this import for us
68:36 - okay so basically it just said import
68:38 - here svg from
68:40 - and this is going to be components here
68:42 - svg now
68:44 - what will happen is
68:45 - if we're on the web meaning in a web
68:48 - browser
68:49 - it's going to pull from this file
68:51 - if we were to load this
68:54 - on a mobile device as an as an app
68:59 - it would pull this from
69:02 - this native file
69:04 - okay so
69:07 - an app like a a react native app on a
69:10 - for a phone
69:12 - cannot use a normal svg it'll throw an
69:14 - error
69:16 - so that's why we needed to do that
69:19 - so the way i usually deal with that is i
69:21 - always have two different files for my
69:23 - svgs
69:25 - that's not the only way to handle it
69:27 - that's just how i do it it's it's pretty
69:29 - simple
69:31 - there are definitely other ways to do it
69:33 - uh there may be better ways than this
69:36 - but this is just how i've
69:38 - come to handle that now let's let's give
69:40 - this a save here and make sure it's
69:42 - still working
69:44 - uh
69:45 - let's see
69:47 - yep there we go here's our svg
69:51 - and it still works
69:53 - now unfortunately
69:54 - i don't think
69:56 - i have this to the point where it would
69:58 - work
70:02 - let's see you think
70:04 - yeah
70:06 - it's been a while since i've used this
70:07 - project so i don't think it'll work
70:09 - right now
70:10 - because of the um the versions that i'm
70:12 - running
70:13 - basically the version of react native
70:16 - that i'm using
70:19 - is too old
70:20 - for some of the code that we're using
70:23 - particularly i believe some of the stuff
70:24 - with hooks
70:26 - so this will not run on a phone right
70:28 - now
70:29 - until i update the packages
70:32 - uh so
70:34 - i don't think i'm gonna update the
70:35 - packages right now
70:37 - and let's check our package json yeah
70:44 - yeah
70:46 - yeah this is definitely an older version
70:48 - should this is gonna show me
70:51 - it should show me what the latest one is
70:53 - latest yeah
70:55 - latest version react native for web
70:57 - is up to
70:58 - 0.12 i'm 1.10
71:01 - so
71:02 - definitely not
71:04 - not where i need to be
71:10 - yeah i don't know if i want to go
71:11 - through the process of updating
71:13 - right now on the stream
71:16 - also i will say this if i were building
71:19 - this project from scratch right now i
71:21 - would probably use expo
71:24 - um
71:26 - because expo now has react native web
71:29 - support
71:31 - it did not have
71:33 - what
71:34 - it was like very very early on in the
71:37 - development of react nato web support
71:39 - when we started this project so
71:42 - we didn't go with it
71:44 - so i would probably do this a little bit
71:46 - differently if i started it now
71:51 - yeah but for now we're just worried
71:53 - about the web version
71:57 - on later streams we will we will
71:59 - probably get to um
72:01 - making it run on a phone
72:05 - all right just for all you that are
72:06 - typing over there
72:09 - i got about 13 minutes before i'm gonna
72:12 - go back and answer some more questions
72:14 - so hang in there i will get back and
72:16 - answer some questions
72:18 - and um
72:20 - let's see
72:22 - all right let's see what we work on next
72:28 - so
72:33 - also if you see anything that's like wow
72:35 - you should definitely uh change that
72:38 - i let me know i'll i'll take suggestions
72:40 - on what to work on next i know there's a
72:42 - lot to do
72:44 - uh we need
72:45 - actually let me refresh this and see
72:49 - okay so that is working
72:51 - um
72:52 - i was just checking to make sure that
72:53 - this automatically
72:55 - um
72:56 - went to this input
72:58 - so if a kid's playing this game
73:00 - like it works you could hit enter okay
73:02 - so it automatically enters good
73:05 - oh but you know what when you enter
73:07 - it doesn't go back to the input
73:11 - all right so uh
73:12 - here's what we're gonna work on next
73:14 - right now
73:16 - if i were to put in uh a number and hit
73:19 - enter
73:21 - i'd have to manually go back in and
73:23 - click before i could put in another
73:25 - number again
73:26 - so i don't think that's a great user
73:27 - experience especially for a kid if
73:29 - they're not used to using the mouse and
73:31 - keyboard yet you want to make it as easy
73:33 - as possible
73:34 - so
73:36 - i want to make it so that when you hit
73:37 - submit when you hit enter it submits and
73:41 - then it focuses back on this again
73:46 - uh levi says the corners look way too
73:48 - sharp on the images
73:51 - um
73:53 - some of the comic sans for life yeah we
73:56 - put comic sans on there all right maybe
73:58 - make the corners a little bit softer
74:00 - that does make sense the corners are way
74:02 - too hard like we're rolling with comic
74:03 - sans up there at the top and then we get
74:05 - these uh zero pixel border radiuses that
74:08 - just doesn't go that's a good uh
74:10 - a good observation uh so we'll um we're
74:14 - going to do two things next uh we're
74:16 - going to make this
74:19 - um auto focus
74:22 - after you submit an answer
74:24 - and then we're also going to soften
74:26 - these edges a bit
74:28 - and
74:29 - make it
74:31 - make a little nicer
74:34 - and match a little bit more with our
74:36 - font choice we could probably roll with
74:38 - comic sans so just like throughout i
74:40 - know we did it here but
74:42 - it's a kids game right we can
74:45 - we could call mcstands everything
74:48 - it's about the only situation that comic
74:50 - sans is going to be uh
74:54 - allowable let me get rid of this i'm
74:57 - gonna leave this thing up for now
74:59 - in case we uh throw some more svgs in
75:02 - there
75:05 - and let's get rid of i'm gonna get rid
75:07 - of these
75:11 - and
75:15 - all right so
75:18 - we're still we basically we have
75:19 - everything still in one
75:21 - in one file right so we separated out
75:25 - that svg but pretty much everything else
75:27 - is still
75:29 - here in our app.js file which is fine
75:32 - now it's still it's a very small app
75:38 - so on
75:40 - let's see what happens we should have on
75:43 - our um
75:45 - touch for opacity here we go on our text
75:47 - input
75:52 - submit editing it handles the uh submit
75:56 - right
75:58 - and we see our ref here is submit input
76:01 - ref we're gonna need that
76:02 - okay so let's find out where we do
76:05 - handle submit
76:08 - so we've handle submit up here
76:10 - and we're going to say use callback
76:15 - all right we're dispatching
76:19 - oh okay i see
76:21 - what we're using here
76:23 - um
76:35 - interesting
76:38 - it looks like we are trying to focus
76:40 - that
76:50 - why is the focus not working then
77:09 - all right i guess first let's make sure
77:10 - that this is actually
77:12 - um
77:13 - firing so
77:16 - i'm going to put brackets around this
77:18 - so we can do more than one thing in here
77:23 - i'm going to use a good old console log
77:27 - and we're just going gonna say
77:32 - happy new year in the console
77:36 - if that if that runs
77:38 - and uh
77:40 - now let's go
77:44 - let's run our
77:45 - inspector we'll go here
77:47 - and make this way bigger okay
77:51 - goodness i don't need it like that
77:57 - there we go
77:58 - all right so
78:03 - all right that ran
78:05 - so we know that ran then why
78:08 - is the focus not working
78:20 - let's see
78:23 - hmm
78:32 - all right let me think about this
78:53 - i could say
79:14 - let's see if we have a
79:29 - all right so we have a use effect
79:31 - already we could do
79:35 - all right if we already have this on a
79:37 - use effect
79:41 - this is really weird
79:43 - um
79:44 - my next step was going to be like all
79:45 - right let's do use effect and just put a
79:49 - submit input ref
79:51 - uh current focus on that too right that
79:54 - should that should work um
79:57 - it obviously didn't work now what we can
79:59 - do and this is going to be a little bit
80:01 - overkill right
80:03 - let's so when you do
80:06 - a use effect
80:11 - and you put this uh empty
80:14 - so use effect function
80:16 - the first thing that you pass in is like
80:18 - what you actually want to happen
80:21 - all right and then the second thing you
80:23 - put in is an array of um
80:27 - basically things that it would look for
80:29 - for changes to
80:31 - run again
80:32 - right so if you pass in an empty array
80:35 - it works just like component did mount
80:37 - meaning it just runs once when the
80:39 - component mounts if you take this away
80:42 - it runs every time the component updates
80:45 - it so we could
80:49 - do this
80:50 - and have it run every time the component
80:52 - updates this is probably not what we
80:53 - want i'll show you
80:55 - hopefully it'll actually do what i think
80:57 - it will and we'll be able to see this um
81:02 - so
81:03 - what would happen is
81:06 - well let's just see
81:12 - actually maybe that is what we want
81:16 - maybe that'll do it maybe that'll work
81:18 - [Music]
81:23 - hmm
81:29 - i can't believe that'll work
81:32 - cool
81:35 - all right that is that is actually what
81:36 - we want okay
81:40 - uh so
81:42 - here's what we're gonna do
81:48 - so yeah we're gonna keep that in there
81:50 - and we can pull it out of here
81:52 - right because this will this will run
81:53 - you can have as many use effects as you
81:55 - want really
81:57 - um this use effect is basically going to
81:59 - be our component did mount and this one
82:01 - is going to be our
82:02 - component did update the equivalent if
82:05 - we were using
82:06 - the
82:08 - uh
82:11 - it just slipped my mind basically the
82:14 - the old school way of doing the react
82:16 - components uh
82:20 - which is a class component so i can't
82:23 - believe i
82:24 - has
82:27 - lost my train of thought for a second so
82:28 - if you're doing a class component this
82:30 - would be the equivalent of component did
82:32 - update
82:33 - all right
82:34 - that's
82:35 - that's cool let's get that console log
82:37 - out of there
82:38 - we can also get this out of there
82:40 - i'm not going to remove these for now
82:44 - and actually
82:46 - i i prefer writing it like this to be
82:48 - honest with you
82:53 - uh
82:55 - [Music]
82:58 - which is the same thing so
83:01 - saying um
83:09 - saying i actually we can we can
83:11 - definitely get rid of this you know i'm
83:13 - gonna i'm gonna leave this in though
83:16 - actually
83:18 - this might be why they solve this i ran
83:20 - into an issue with another project
83:21 - before where the focus wouldn't work
83:24 - unless you did it twice it was really
83:26 - weird and the way i solved it there was
83:28 - to set a timeout
83:30 - um and run it again and like basically
83:35 - set a variable for whether or not
83:37 - something was focused and then check
83:39 - that variable
83:40 - and uh
83:41 - then say like
83:43 - all right if it's not focused then let's
83:45 - do this timeout run focus again so
83:47 - but basically you had to run focus twice
83:49 - to get it to work so i'm gonna leave
83:51 - this in here because if if that is the
83:54 - case and it's still that issue then we
83:56 - may need both of them in here i don't
83:58 - know why it's like that but for whatever
84:00 - reason when i'm using react native web
84:06 - on the web
84:08 - i need to focus twice
84:11 - um
84:12 - i don't think i need to on uh
84:15 - like an actual mobile app but whatever
84:17 - anyway
84:19 - um
84:20 - to do like if submit current submit
84:23 - input ref.current
84:25 - and then this right to use an if
84:27 - statement this is the same it achieves
84:29 - the same thing
84:31 - i think it looks a little bit cleaner
84:33 - you just put these double ands
84:38 - i believe it's it's like a short circuit
84:42 - they call it a short circuit there but
84:44 - this basically does the same thing it
84:46 - just says like
84:47 - uh if this is true
84:50 - then we're also going to do this if it's
84:53 - false it just stops
84:55 - which is the same thing we're doing here
84:57 - and it takes
84:59 - less
85:01 - basically you remove the if
85:03 - and the parens
85:06 - and then you just add in these two ends
85:08 - so
85:09 - slightly less
85:11 - typing
85:15 - all right but that's cool so we got that
85:17 - done
85:20 - next thing we're going to do is work on
85:22 - our border radiuses
85:25 - to soften those up a bit
85:27 - so that was levi's idea and i think that
85:29 - was a good idea i think it
85:31 - if we're talking about a kids game
85:33 - i think a softer border radius kind of
85:36 - matches more of the like aesthetic that
85:39 - is used in most
85:40 - kids apps
85:43 - all right let's see
85:46 - my timer's up let's take another break
85:48 - let's go back to the chat
85:50 - let's talk for a little bit
86:04 - oh it seems like there's still some
86:06 - noise uh since you can should consider
86:09 - enabling noise suppression in windows
86:11 - mic settings because there's still a
86:12 - small but noticeable noise
86:16 - okay i don't know i've never
86:18 - heard of noise suppression in the
86:20 - settings so i will check that out
86:24 - not right now but like for next stream
86:26 - unless the noise is like really terrible
86:28 - also i know i've been saying this for a
86:30 - while but
86:32 - like
86:34 - i'm going to get a uh soundproof office
86:37 - at some point built right now i'm just
86:39 - in my basement
86:40 - and uh
86:41 - i'm getting into soundproof office i've
86:43 - actually already like
86:45 - paid for
86:47 - uh a construction company
86:50 - uh to do some work i just haven't like
86:52 - set up when that's gonna happen yet
86:55 - um so
86:57 - i paid ahead of time and i kind of like
86:59 - got a deal on it was like this charity
87:01 - thing or whatever
87:02 - anyway it doesn't matter basically the
87:05 - thing is like
87:06 - i have put money towards getting an
87:09 - office a soundproof office built so that
87:12 - live streams would be better so it will
87:15 - happen at some point this year
87:17 - and um
87:18 - then it should be better the noise issue
87:20 - should be uh better at that point
87:23 - also maybe i'll i'll get a better mic at
87:25 - some point as well this is just a very
87:27 - cheap mic i think i got it for like 20
87:29 - bucks on amazon
87:45 - craig says hi jesse happy new year i was
87:47 - told there would be punch and pie ah
87:49 - sorry no punch i have
87:51 - i have rain energy drink and i have a
87:54 - giant
87:56 - bottle of water
87:57 - um
87:59 - there is actually a chocolate pie
88:01 - upstairs though my wife bought one
88:03 - earlier so
88:05 - if you can make it to uh ohio then
88:09 - uh you can have some pie
88:11 - and energy drinks
88:33 - uh connor says okay cool react native
88:35 - similar to flutter with the app updating
88:37 - with the code do you work for free code
88:39 - camp
88:41 - so i don't work for free code camp this
88:43 - is just volunteer
88:44 - um so i would say like
88:47 - almost everyone that does something for
88:49 - free code camp as a volunteer
88:51 - uh there are just a few people who are
88:54 - employed at free code camp
88:56 - so
88:58 - if you're interested in helping out
89:00 - we're always looking for volunteers if
89:02 - you have
89:03 - more time than you have or you have more
89:05 - money than you have time then
89:07 - you can always donate as well um it's a
89:10 - non-profit i think it
89:12 - you can get all the tax stuff worked out
89:14 - as well uh because it's officially a
89:16 - non-profit um but yeah i um
89:20 - i just do this uh
89:22 - just kind of as a side thing
89:26 - just for free
89:36 - uh
89:37 - young do it says jesse is great you're
89:39 - doing a great job thank you i appreciate
89:42 - that
89:51 - uh quran says how to hack nasa with html
89:55 - i do not know how to do that if anybody
89:57 - knows how to do that i'm that's that's
89:59 - pretty crazy and you have a unique and
90:01 - special skill
90:06 - craig says 50 of coders i know let me
90:08 - remember my github password yeah i
90:10 - actually have no idea what my github
90:11 - password is it's some really long random
90:13 - string and i just have it saved in
90:16 - lastpass so
90:17 - uh if
90:18 - if i ever forget my last pass password
90:21 - then i would have a problem
90:23 - uh stormzy asked do you know preact i do
90:26 - not know preact i don't um
90:28 - preact is a
90:30 - lightweight version of react
90:33 - so i kind of always assumed that preact
90:35 - was close enough to react that if you
90:38 - know react you could do preact but
90:40 - now that i think about it i don't
90:42 - actually know i just assume that i've
90:44 - never seen any preact code so i could be
90:47 - mistaken
90:51 - let's see
90:52 - uh levi says i have no clue if i even
90:54 - have a get account or not
90:56 - i definitely recommend getting a github
90:58 - account uh if you're if you want to get
91:00 - into coding
91:02 - um
91:03 - it's a great way well one like you don't
91:06 - really need an account to look at stuff
91:07 - on github but it's nice to have an
91:09 - account because then you could you could
91:10 - save
91:11 - projects that you like
91:13 - but it's great for your future employers
91:17 - to see
91:19 - your code
91:20 - that way if you apply for a job you can
91:23 - put your a link to your github
91:26 - repos in there and they can see
91:29 - what you've done so they can say they're
91:33 - like
91:35 - at my job i interview people
91:37 - um coders
91:40 - for software engineering roles and if
91:43 - they don't have a
91:44 - github
91:45 - profile
91:46 - it's hard for me to know whether or not
91:49 - i should bring them in for for an actual
91:52 - interview like if i just see the resume
91:56 - i like it better if i can see their code
91:59 - first
92:00 - right it doesn't mean that i would never
92:02 - hire somebody who didn't have a github
92:04 - it just means that
92:06 - it's easier for me to make a decision if
92:08 - i can see their code
92:11 - so
92:13 - i definitely recommend doing it
92:16 - even if you're totally new
92:18 - you know just whatever you're working on
92:20 - put it up there i'd rather see that
92:22 - somebody is uh
92:24 - doing tutorials and putting the code up
92:25 - there
92:26 - then doing nothing right or at least
92:29 - seemingly doing nothing right
92:32 - your github repository can be like the
92:34 - proof
92:35 - that you're doing something to employers
92:38 - anybody can go into an interview and say
92:39 - oh yeah i'm coding every day
92:42 - but if you can say i'm coding every day
92:44 - and i can look at your github profile
92:45 - and see the code that you wrote
92:47 - and ask you about it and say oh that
92:50 - looks really cool you know
92:51 - that means a lot more so definitely
92:53 - recommend that
92:56 - uh it's free you don't have to pay
92:58 - anything for it
92:59 - it's
93:00 - um
93:02 - i think every
93:03 - every coder should have one
93:06 - just for the
93:08 - um
93:12 - like
93:12 - for the little edge it might give you in
93:15 - finding a job
93:18 - all right cool let's go back to the code
93:21 - see what time it is
93:23 - i'm going to do like one more pomodoro
93:25 - session of code and then see where we're
93:28 - at in the live chat and then i might do
93:30 - like a long break
93:32 - and answer lots of questions because i'm
93:34 - definitely getting behind with the
93:35 - questions here which is great i love
93:37 - there's so many people watching the
93:38 - stream there's a ton of questions which
93:40 - i love
93:41 - unfortunately when there's this many
93:43 - people and questions i don't always have
93:45 - time to answer them so i'm going to do
93:46 - my best to answer all of them or at
93:49 - least as many as i can
93:51 - before i finish up so i plan on going
93:54 - until midnight my time which is in about
93:58 - an hour and a half
94:00 - if there are some questions i didn't get
94:02 - to i don't mind going into a little bit
94:04 - after midnight but
94:05 - like
94:06 - it's already past my bedtime so i may
94:08 - not give great answers
94:10 - [Music]
94:11 - the longer after midnight it goes so it
94:13 - might be pretty tired
94:18 - all right let's get to it
94:20 - [Music]
94:21 - so our
94:24 - hero
94:29 - so we have our styles that we're going
94:31 - to change here i believe is our our
94:34 - character so right now our heroes and
94:36 - our enemies are basically just views
94:39 - which think of a view
94:41 - in terms of react native code or
94:45 - a div in html
94:47 - okay so
94:49 - when you see view think div
94:52 - uh so let's go to our character
94:56 - our character style
94:58 - so down here at the bottom we have our
95:00 - styles object which is very similar to
95:03 - css right now we just have squares we
95:06 - give them a width and a height
95:08 - but
95:09 - it'd be cool to give them a border
95:12 - radius
95:14 - and
95:17 - 40
95:18 - 40 here
95:20 - let's see what an 8 pixel border radius
95:23 - is this is going to be that's a pretty
95:25 - large radius
95:27 - but i think it would fit with
95:31 - with the comic sans
95:33 - let's see what that looks like
95:38 - if you're not sure what border radius is
95:39 - it's this part here right so before we
95:42 - had hard corners hard edges like we have
95:44 - here
95:45 - okay and now we have these rounded edges
95:50 - right so
95:53 - it's definitely a little bit softer a
95:56 - little softer there
96:01 - to be honest we we could go with
96:03 - complete circles
96:06 - let me know what you all think in there
96:09 - should we have
96:10 - should these be squares or should we
96:13 - have circles
96:17 - i never thought about doing circles
96:18 - before but
96:20 - now that i see even with this radius i
96:22 - think we'll do circles i'll let y'all
96:23 - answer
96:24 - and then while you're doing that i'm
96:26 - going to soften these borders as well so
96:28 - on
96:29 - this this select box on this text input
96:33 - and on the submit button we're going to
96:35 - soften those borders up
96:37 - okay we're gonna give those some border
96:38 - radiuses too
96:40 - okay
96:43 - it looks like
96:45 - we got some we got some votes for
96:47 - circles we gotta vote for square
96:50 - we'll see where we go i'll give you
96:51 - another minute or so and then we'll add
96:53 - up the votes here for circles and
96:55 - squares and see what we're going to go
96:56 - with
96:58 - there's more code oops
97:00 - all right
97:02 - um i should say too i'm on a pc now i do
97:05 - probably like 95 of my uh coding on a
97:08 - mac
97:10 - but the pc kind of throws me off a
97:13 - little bit
97:15 - but i just couldn't
97:17 - i needed a computer that was like
97:20 - good enough to do streaming
97:22 - and uh just
97:25 - to get a mac that was good enough for
97:26 - streaming was just so much more
97:27 - expensive than a pc so this is the way i
97:30 - route i went
97:32 - uh all right where's our
97:39 - okay our picker i believe is that select
97:43 - box
97:44 - so let's do
97:46 - border radius
97:49 - uh do i wanna do
97:53 - let's let's try to give it eight we'll
97:55 - try to do eight all around
97:57 - and
98:01 - our
98:02 - input
98:06 - border radius 8
98:08 - and then our button
98:16 - border radius
98:17 - eight
98:19 - okay so we got that
98:22 - and
98:25 - let's see what this looks like and then
98:27 - i will check out the
98:28 - votes all right not bad
98:32 - not bad that looks
98:34 - i think that does look more like uh kid
98:36 - friendly although this this drop down
98:38 - still has uh
98:40 - that's gonna be a little bit more tricky
98:42 - i think to get a nice radius on there we
98:44 - might have to
98:50 - have to dig a little bit deeper into the
98:51 - code here and find out what we're going
98:53 - to do with that one
98:54 - all right so
98:56 - let's let's check it out we have
99:02 - uh
99:08 - circle
99:10 - circle
99:11 - okay levi's saying do a box shadow we
99:14 - can definitely add some box shadows
99:16 - um
99:24 - master siegel says it's okay you have
99:25 - starcraft installed
99:29 - how did you see i have i do have
99:31 - starcraft installed
99:38 - um circles georgia circles let's see
99:44 - who else says circles
99:47 - phil says aliens do aliens
99:50 - uh
99:53 - nikki for real says circles
100:02 - joey says jesse since you're used to a
100:03 - mac you might be more comfortable in
100:05 - linux than windows you know what i've
100:06 - thought of that before um
100:08 - i've thought about getting
100:10 - a linux system for a while i just kind
100:13 - of haven't haven't done it yet
100:15 - um
100:16 - what time is it it is 10 40 p.m eastern
100:20 - standard time abd gaming is voted for
100:24 - square
100:25 - a lot
100:26 - so
100:29 - i don't know abd gaming it
100:32 - i mean
100:34 - it seems like you're getting out voted
100:36 - here i know you typed in square a lot
100:39 - but
100:40 - it looks like
100:41 - most of the other people want circles so
100:45 - um
100:57 - okay joey says you could do radius zero
101:00 - on the bottom and left right corners of
101:02 - this drop down so it blends in more
101:05 - or like this select
101:07 - yeah that would definitely bend in more
101:10 - it might not look great though yeah
101:11 - we'll have to see
101:14 - i'm not really thrilled with how this
101:15 - looks in general so
101:18 - we may want to do even more with that
101:20 - circle we'll go with the majority then
101:21 - all right cool yeah it looks like most
101:24 - people want uh
101:27 - circles
101:31 - so let's see what circles look like
101:35 - oops
101:39 - i keep clicking the wrong thing to get
101:41 - to the back of the code
101:43 - all right so here's what we're gonna do
101:50 - where's our character
101:53 - so
101:55 - what we
102:00 - we could do here
102:05 - i don't want to get fancy i was going to
102:08 - do something a little bit fancier but
102:11 - oops if we do border radius 20 this
102:14 - should give us a circle so basically
102:16 - whatever your width and height is of
102:18 - your square if you just take half of
102:20 - that on the border radius it'll give you
102:22 - a circle
102:23 - now what you can do
102:25 - is
102:26 - like basically make these variables
102:29 - and then
102:31 - just make this whatever that variable is
102:33 - divided by two
102:36 - uh remember because this is javascript
102:38 - right this is a javascript object so you
102:40 - can do math here
102:42 - and actually like the newer versions of
102:44 - css lets you do variables and stuff too
102:46 - so i guess you could do with css as well
102:49 - but this is easy enough that we'll just
102:51 - put 20 in
102:55 - all right
103:00 - all right here's our circles
103:01 - wow
103:02 - okay this is kind of interesting
103:05 - our hero
103:08 - the svg goes outside the circle but
103:12 - i kind of think that's like a cool
103:14 - effect though
103:15 - like it's a mistake but it it looks
103:18 - almost like
103:20 - it's not a mistake i don't know does
103:22 - that make sense to you like
103:25 - it kind of looks cool
103:27 - um
103:30 - now i will say this
103:33 - we shouldn't worry too much about
103:34 - squares or circles here because my
103:36 - intention is like to actually get
103:38 - little characters here
103:40 - um
103:42 - so i did have somebody at a conference
103:44 - tell me that they had like a bunch of
103:46 - characters made that i could use for
103:47 - this game for free
103:50 - so
103:52 - i need to look that up
103:54 - uh i saved the link to it and i just
103:56 - haven't worked on this project since
103:57 - then so
103:58 - uh
103:59 - we may be replacing these with actual
104:02 - like uh little bad guy characters and
104:04 - heroes i'd like to have like
104:06 - the user be able to select
104:08 - what hero they want and have a bunch of
104:10 - different options
104:13 - and then depending on
104:15 - what you pick
104:17 - like whether
104:19 - what game mode you pick in the
104:21 - difficulty level you may have different
104:24 - uh enemies so
104:27 - i think that would be kind of cool to do
104:29 - but right now like
104:30 - this is what we have
104:35 - but i think it i mean it already looks
104:37 - better
104:39 - i don't know it looks good but it looks
104:41 - better
104:42 - oh i forgot we uh we wanted to change
104:44 - this like basically everything to use
104:46 - comic sans
104:47 - let's see how that looks let's do that
104:54 - all right let's see
104:57 - we'll go back here and
105:08 - uh
105:09 - where are we at
105:11 - comic sans
105:23 - math text
105:26 - it's gonna be comic says
105:29 - [Music]
105:31 - actually what i've done
105:34 - what we could do
105:39 - for now this will work but if we had a
105:40 - bigger app i'll tell you what i've done
105:41 - before is i've basically taken the text
105:44 - component
105:45 - and
105:46 - i've made a my own text component
105:50 - and given it the styles like the default
105:52 - styles i want including a default font
105:55 - and then when i go to import text
105:58 - i don't import it from react native
106:01 - instead i import my own text component
106:04 - which just uses the react native
106:06 - component
106:08 - kind of behind the scenes
106:10 - but it takes the bass react native
106:11 - component adds the default styles i want
106:14 - to it
106:16 - and then i i bring it out like that so
106:19 - that's probably something that
106:21 - like if this app gets a lot bigger
106:23 - if i keep working on it and maybe it
106:25 - would switch to that
106:27 - but for now
106:28 - there's just not
106:30 - that much so i don't think it's
106:32 - it makes sense to uh to do that right
106:35 - now
106:36 - because they're still pretty small
106:39 - uh but
106:40 - and like for the input and stuff like
106:42 - that it wouldn't make a difference
106:43 - anyway same way with the uh
106:46 - uh does the button have text i think i
106:49 - do use the text component for the button
106:50 - so
106:51 - um but for the input and then what about
106:54 - that picker did i miss that yeah here's
106:56 - the picker
107:00 - i'm hoping i can put that on the picker
107:04 - react native is a little bit um
107:08 - more like restrictive on
107:10 - what
107:12 - like css properties you can put
107:15 - on different elements so it will
107:16 - definitely like let you know and throw a
107:18 - warning or even an error sometimes if
107:20 - you try to put the wrong property
107:23 - on something like if you try to do
107:28 - i think if you try to do font related
107:30 - stuff on a view component it doesn't
107:32 - like that
107:33 - i can't remember exactly which ones work
107:35 - and don't work but
107:39 - it's not as
107:41 - you know like in normal html like css
107:44 - it's very forgiving right you can do a
107:45 - lot of stuff and you'll never get a
107:46 - warning or anything the browser will
107:48 - just basically ignore it right
107:52 - react native is is more picky like that
107:54 - it has to be for what it's doing though
107:58 - in terms of like what
108:01 - what phones can handle
108:04 - all right let's
108:06 - see what this does
108:07 - it should have changed us oh yeah look
108:09 - at that
108:10 - nice
108:12 - very nice
108:15 - comic sans make sure yep that is comic
108:18 - sans
108:20 - we probably could um
108:23 - set something on the input
108:25 - to say like hey we only want numbers in
108:28 - the input
108:32 - and
108:34 - as long as we're in a mode where we just
108:36 - have
108:38 - you know like single digit
108:41 - arithmetic
108:42 - we could say like hey we only ever want
108:45 - two digits in here
108:50 - that might be nice
108:52 - to have i could see it being frustrating
108:54 - if a child accidentally held a key down
108:57 - put a bunch of numbers in there and then
108:59 - you can't even see how many numbers you
109:01 - have really and you got to try to
109:02 - backspace them all
109:06 - so that might be a good a good thing to
109:07 - put in for now
109:09 - if we add modes later on where you're
109:11 - doing more complicated math
109:13 - then we could always
109:15 - relax the restrictions on it
109:17 - but
109:19 - um i'm gonna go about
109:21 - about nine more minutes and then i'm
109:23 - gonna take a break and answer a bunch of
109:25 - questions so hang in there if you have
109:26 - any uh
109:29 - any questions out there right now oops
109:31 - let's see this hey i think we got one of
109:33 - those errors i was just talking about
109:34 - that's awesome
109:35 - or a warning so
109:37 - invalid props style
109:39 - so family has been supplied to picker
109:43 - okay and that's we we can't do that so
109:46 - we're not allowed to do that
109:50 - so it obviously worked in the browser
109:53 - right so like the browser works
109:57 - um
109:58 - because of the way
110:01 - so react native web in the background is
110:03 - changing this react native picker into
110:06 - an html select
110:08 - and you can do that on an html select
110:11 - you can't do that on a picker so this is
110:13 - something that would work in the browser
110:15 - but would not work in
110:17 - on a phone
110:19 - so what we can do is
110:21 - let's check out our code
110:26 - and see
110:28 - what is this picker
110:31 - okay
110:32 - so what we need to do then is um
110:35 - is move this and put it on a picker item
110:39 - i believe
110:40 - and that should change it so
110:43 - let's do this
110:49 - [Music]
110:54 - the formatting just got messed up but
111:01 - let's say we're going to call this
111:02 - picker
111:05 - pick your text
111:07 - so i think it'll work here now the
111:09 - problem is going to be
111:11 - we still have
111:12 - like
111:14 - we we need
111:15 - the
111:16 - actual text
111:19 - on the uh
111:21 - on the picker which i think should work
111:23 - because
111:26 - i think it should work because we're
111:28 - always gonna there's no like default
111:30 - text on the picker that's different than
111:32 - the items so i believe addition shows up
111:34 - so this should work
111:36 - so let's take off
111:39 - let's take this out
111:41 - and instead let's add it in here
111:43 - [Music]
111:44 - pick it as picker text
111:55 - let's see if we can get rid of that
111:57 - warning
111:58 - and then this will be like slightly less
112:00 - of a headache for us down the road when
112:02 - we want to get this to work on on mobile
112:04 - see and we've gotten rid of the warning
112:06 - uh oh
112:08 - but it didn't work
112:10 - i messed something up
112:13 - all right
112:14 - let's see what we messed up so we should
112:16 - have pick a text font family common
112:18 - sense
112:19 - did i put that on there correctly
112:23 - oops
112:26 - style start pickers
112:29 - hmm
112:33 - where did i get this picker from it is
112:35 - from
112:36 - all right time to research
112:39 - let's go to
112:42 - react native
112:43 - documentation and see what the heck we
112:45 - could do about this
112:46 - uh
112:47 - [Music]
112:50 - i am going to check the chat out real
112:52 - quick to see if anybody knows what my
112:54 - issue is
113:03 - all right
113:05 - so picker comes with react native
113:09 - let's see if it has something built in
113:12 - to help us style this
113:16 - okay
113:18 - test id enabled mode
113:21 - item style there we go
113:26 - we need to use item style
113:34 - all right this should work
113:41 - all right so
113:42 - what we
113:43 - should be able to do i hope
113:46 - is say item style
113:50 - and then give it
113:52 - styles.picker
113:54 - text
113:56 - and then
113:59 - get rid of that
114:01 - which that's nice that gets rid of a lot
114:02 - of repetitive stuff there
114:05 - let's see if that did anything
114:10 - nope
114:11 - not yet
114:16 - alright so we need
114:28 - all right font family
114:30 - is included there
114:34 - interesting textiles
114:41 - picker style type
114:47 - hmm
114:55 - michael cruz says check the element in
114:57 - devtools that's a good
114:58 - uh good idea let's see if the if
115:01 - anything's being added there
115:03 - uh i'm gonna have to
115:06 - make this a bit smaller so i can see
115:08 - what's happening
115:10 - all right so we have the select
115:14 - so owner select
115:25 - uh it's probably getting covered up no
115:27 - it's there okay so it's just giving us
115:29 - the default system ui
115:32 - and then
115:38 - same thing here okay um
115:50 - let's just see if we can get
115:53 - an example uh to see if my
115:55 - implementation is wrong
115:56 - so let's do uh what it was called item
116:00 - style
116:02 - [Music]
116:14 - there we go so we got a
116:17 - an issue where it's not working
116:21 - but what this should give us is an
116:23 - example
116:26 - oh item textile did i miss that
116:29 - was that an option
116:35 - huh
116:50 - can i do item text style instead
116:53 - this is from 2018.
117:12 - hmm
117:15 - i'm going to try item textile just in
117:17 - case because uh
117:20 - if it works it'll be the like the
117:21 - easiest solution to this even though
117:25 - it wasn't in the docks
117:36 - nah it didn't work
117:38 - yeah and that's not
117:40 - it's not uh recognized okay
117:43 - um
117:44 - style
117:48 - so they're using item style and they're
117:49 - trying to do font family
117:59 - but it almost seems like
118:08 - hmm
118:18 - i wonder i wonder if it doesn't want me
118:20 - to use
118:21 - all right let's try this
118:26 - i'm gonna try one more thing on here
118:28 - before we just go back to our original
118:29 - idea
118:30 - um
118:36 - so let's grab
118:38 - this again
118:46 - and we can put in inline styles
118:50 - as an object here
118:53 - and see if maybe that works maybe like
118:55 - there is something wrong with
118:57 - the way it
119:00 - i mean i just i find it hard to believe
119:02 - that it wouldn't work with
119:04 - reacts implementation of
119:07 - the style sheet but
119:09 - maybe
119:10 - uh yeah see it's not it's not working
119:13 - um
119:19 - so
119:31 - all right so my timer went off i'm gonna
119:32 - go back and answer some questions now
119:34 - uh for this though
119:37 - at least for now i think i'm gonna go
119:39 - back to
119:42 - i'm gonna get rid of this for now
119:44 - and i'm gonna add
119:47 - since we already have basically two
119:49 - styles
119:52 - listed i'm gonna show you how to use two
119:54 - styles so if we just put a um
119:59 - these square brackets to make an array
120:01 - and we pass in an array to the style and
120:04 - we can say styles
120:06 - dot picker text as well
120:10 - it should take both styles and and
120:12 - combine them
120:13 - and uh that should work we'll get that
120:15 - warning again but see we have
120:18 - we have the font we want now at least in
120:20 - a web browser
120:21 - uh so
120:23 - this works like that
120:25 - we get this warning though
120:27 - now
120:28 - if we get to the point where we want to
120:30 - run this on a phone and we still can't
120:32 - find a good solution
120:35 - what we could do is just
120:38 - um render
120:42 - basically render this uh conditionally
120:45 - so
120:45 - uh what i would probably end up doing is
120:48 - just saying here in the styles
120:50 - like
120:52 - um
120:55 - if
120:57 - this is
120:58 - web
120:59 - then add the font family stuff or i
121:02 - could say it here or i could say it up
121:03 - here it probably would make more sense
121:05 - up here i guess
121:06 - um i would only add this pick your text
121:09 - class
121:10 - styles if we're on web otherwise i
121:13 - wouldn't
121:14 - um then
121:16 - it should render on a cell phone now we
121:19 - wouldn't get the correct text which is
121:21 - an issue
121:23 - but let's say like worst case scenario
121:25 - we can't figure out how to add the
121:26 - correct font at least it would run
121:28 - right
121:31 - which i i think that's kind of cool
121:34 - about react native and then especially
121:36 - right native web is that you could
121:38 - uh very easily
121:40 - like line by line say
121:43 - all right use this if you're on the web
121:45 - use this if you're on native and you can
121:46 - even say use this if you're on ios or
121:49 - use this if you're on android
121:51 - see you um
121:53 - you have kind of like that level of
121:54 - control
121:55 - into how you want to do things
121:58 - it's kind of nice because
121:59 - you don't have to write a ton of extra
122:01 - stuff for each platform you just tweak
122:04 - it here and there where you need it
122:06 - all right cool so let me
122:10 - scroll up
122:12 - and answer some questions
122:15 - and i'm gonna i'm not even gonna set a
122:17 - timer for myself now i'm just gonna try
122:19 - to answer as many questions as possible
122:21 - and uh actually let me
122:24 - let me commit this first that way you
122:26 - all can check out the code on github uh
122:29 - and i won't forget to commit this so
122:31 - good status see what we've changed
122:38 - let's see
122:40 - yep that looks like what we've changed
122:42 - vs code
122:44 - oh i want my vs code file in there
122:46 - where's my
122:47 - git ignore
122:55 - miscellaneous
123:04 - there we go
123:06 - all right so we do get add and i'm going
123:09 - to just add everything so get add period
123:11 - what everything we can do a status again
123:14 - just to double check
123:15 - that we in fact
123:17 - are ready to commit all these things
123:20 - and we'll do a git
123:22 - commit
123:25 - m
123:27 - which we're gonna put the messages and
123:29 - we're gonna say um
123:32 - i just prefix it with feed for feature
123:35 - so um
123:38 - let's say
123:43 - what do we do
123:47 - add style
123:49 - updates
123:52 - that's mostly what we did right mostly
123:54 - just styling
123:57 - i think so
124:02 - i know we did we did that svg thing as
124:05 - well but that'll be pretty good
124:08 - uh for now
124:10 - get and then we're gonna push
124:14 - origin master
124:16 - probably could just say get pushed since
124:18 - we're on the master branch but
124:20 - um
124:22 - like when i'm at work i never push
124:24 - directly to the master branch right i
124:26 - would normally be on a separate branch i
124:28 - would push that branch up and then i
124:30 - would submit a pull request and that
124:32 - pull request would have to get reviewed
124:34 - before it went in that's more of like
124:35 - the normal way you would work if you had
124:37 - a team of people
124:39 - all right but for a solo side project
124:41 - like this
124:42 - i shouldn't say solo other people have
124:44 - already made contributions to this
124:45 - project and you all can too if you'd
124:47 - like feel free to fork this
124:50 - clone it
124:51 - and make any contributions that you want
124:54 - uh that's that's awesome uh and welcome
124:56 - uh but
124:58 - uh
125:00 - you know definitely like make a separate
125:02 - branch and do it like that since it's my
125:05 - project um
125:07 - i'm just doing stuff right on the master
125:09 - branch but just so you know like your
125:11 - own project it's fine
125:13 - if you're working on somebody else's
125:14 - project you probably want to create a
125:16 - another branch
125:17 - and
125:18 - like at work i can't i can't even
125:20 - actually push on the master branch just
125:22 - lock down so
125:23 - um
125:24 - couldn't do it even if i i wanted to
125:29 - all right
125:31 - anyway
125:32 - let's get to the
125:35 - chat and i've i've been like squinting
125:37 - trying to read this chat
125:39 - and uh
125:40 - it just now occurred to me like oh why
125:42 - don't i just make the font bigger
125:47 - obviously that would that would be
125:48 - better right
125:54 - all right samuel has a question what's
125:55 - the difference between js and typescript
125:58 - so uh js or javascript um
126:02 - is not a strongly typed language right
126:05 - which means
126:07 - kind of like this is going to be an
126:09 - oversimplification
126:11 - but
126:13 - basically
126:14 - when you do something in javascript like
126:16 - if we have a
126:18 - a variable in javascript
126:21 - we can just assign it to whatever so i
126:23 - have this constant right
126:25 - this is a function
126:27 - um
126:30 - i have
126:31 - trying to make
126:32 - these are actually all pretty much
126:34 - functions so i don't have a good example
126:36 - uh
126:37 - trying to find one that's not a function
126:39 - that's actually
126:42 - something other than a function
126:44 - so basically i could have
126:46 - this constant i could assign and right
126:48 - now it's a function i could make another
126:49 - constant and it could be a string
126:51 - another one could be a number a boolean
126:54 - right an array an object
126:56 - they're all constants in other languages
126:59 - you can't do that i couldn't just say
127:01 - constant to do that i would have to say
127:03 - int for integer right um in some
127:06 - languages i would have to say exactly
127:08 - how many bits
127:09 - right it would
127:10 - it would have to be like in 32 right for
127:13 - 32-bit if i wanted to have a string i
127:15 - would have to say string and assign it
127:17 - to a string right so
127:19 - you when you basically
127:23 - javascript doesn't require you to say
127:25 - what type something is when you
127:28 - declare the variable or when you assign
127:30 - the variable
127:32 - and here the way we're doing it here
127:33 - we're actually declaring and assigning a
127:35 - value to the variable at the same time
127:38 - you don't necessarily have to though
127:43 - what typescript does is it changes that
127:45 - so that in javascript you could
127:49 - assign
127:51 - when you declare a variable or declare
127:54 - and assign a variable
127:56 - you tell
127:59 - you put in the code exactly what type
128:01 - that is
128:02 - so
128:04 - not only that but there are a lot of
128:06 - other things like you would say if you
128:08 - created a function you would say
128:11 - this function would take in
128:13 - this many parameters and here's the type
128:15 - of each parameter that i expect in this
128:17 - function
128:19 - right
128:20 - and then
128:21 - depending on your your code editor
128:24 - you might get some really helpful tool
128:26 - tips that would come up and tell you
128:27 - exactly what to use
128:29 - right you'll get warnings in your
128:31 - browser and in your code editor right if
128:33 - if you
128:34 - warnings or errors if you try to pass
128:36 - the wrong type in
128:39 - so
128:41 - that's like
128:44 - i'm probably skipping some important
128:45 - stuff but basically that's what it does
128:48 - it takes
128:49 - javascript and it adds on to it
128:52 - to make javascript behave
128:54 - like a more strongly typed language
128:57 - which would require you to not only
129:00 - declare your variable but say what
129:03 - type your variable is right away
129:05 - so i like it
129:08 - i don't
129:09 - i don't think it's necessary for every
129:11 - project but it's definitely valuable
129:15 - for more complex
129:16 - projects at least that's been my
129:18 - experience
129:32 - oh let's see
129:38 - oh it looks like
129:39 - you all already uh answered what
129:41 - typescript is in the chat so i should
129:44 - have read along but um hopefully anyway
129:47 - it was it was helpful to somebody my
129:49 - explanation
129:59 - samuel says now i feel embarrassed
130:00 - asking this as i've never done it before
130:02 - but i'm presuming that you can't just
130:03 - copy and paste svg code into react as it
130:06 - won't work so you you actually can in
130:09 - normal react you can in react native you
130:12 - can't okay so um
130:15 - if you look
130:17 - i didn't really go over this but if you
130:18 - look at the difference here
130:20 - so
130:21 - let's let's do split screen here for a
130:23 - second and uh
130:25 - let's do one
130:26 - side so like here is our two svgs right
130:31 - one is a normal svg and one is the react
130:34 - native svg so if you use this react
130:37 - native svg library
130:41 - it gives you
130:43 - components
130:45 - based on what a normal svg would have so
130:47 - in this case we have the svg component
130:50 - and the path component so basically you
130:52 - just take
130:53 - what would work in normal react in an
130:55 - html svg and path all lower case
131:00 - and you switch them over to use these
131:03 - components instead
131:06 - and it basically works there's a few
131:08 - other things
131:09 - i believe like with these attributes
131:12 - that may need to be changed
131:15 - i don't know if that happened in our
131:16 - case
131:18 - no
131:20 - and then also it's possible
131:23 - i believe
131:25 - in html
131:28 - things like view box so some of the
131:30 - attributes would be hyphenated and you
131:32 - need to change them to be camel case i
131:35 - don't know if that's all of them or not
131:38 - um
131:40 - i can't i can't remember uh but
131:43 - those are the only things that i think
131:45 - you would need to change for regular
131:47 - react
131:48 - but then even for react native there's
131:49 - not really a lot that you need to change
131:51 - and if you use a converter like we did
131:54 - it's very easy
131:56 - so i actually have been using converter
131:58 - on anything i just leave it open all the
132:00 - time
132:02 - i used to do it by hand
132:03 - with like very small svgs
132:06 - but you can see like with larger svgs it
132:09 - it's much
132:11 - faster to use a converter but anyway
132:13 - that was a really good question
132:32 - uh
132:33 - let's see
132:40 - trying to find the next question looks
132:41 - like there's a nice little kind of
132:43 - conversation going on in the chat
132:44 - uh but no questions directed towards me
132:47 - so i'm scrolling down a bit
132:57 - oh yeah just just to be clear everybody
133:00 - i am using react native for this project
133:03 - so i'm using react native and then i'm
133:05 - using a a package called react native
133:07 - web so that i'm able to run this code
133:10 - in a web browser okay so it's it's
133:13 - confusing uh and it's probably confusing
133:16 - as to why you'd even want to do that but
133:18 - the main benefit is you can have the
133:20 - same code run in a web browser and
133:24 - on uh mobile devices like as native apps
133:29 - as well and potentially on other devices
133:31 - there are ways to run react native on um
133:33 - like as desktop apps
133:35 - uh or even on on other devices like um
133:40 - smart tvs
133:42 - uh i think there's a way to do it like
133:44 - on as a hololens app a microsoft
133:46 - hololens app so there's some cool stuff
133:49 - um there's even some other stuff that
133:51 - i'm not
133:52 - uh
133:53 - i'm not really familiar with that i've
133:54 - heard of uh that you can do with it so
133:56 - it's pretty it is nice
134:01 - and in particular for these live streams
134:03 - it's nice because
134:04 - running uh xcode and this the ios
134:07 - simulator or the android studio and
134:10 - trying to simulate stuff so that i could
134:11 - show you on the stream it takes a lot of
134:14 - resources on the computer and it would
134:15 - cause my frame rate to drop
134:18 - so it's not really doable on a live
134:20 - stream at least unless you have a really
134:22 - really good computer
134:24 - so this is a way for me to do react
134:26 - native on a live stream and still show
134:28 - you the results
134:30 - uh so there there's probably gonna be a
134:32 - time where i'm gonna like attempt to
134:34 - show you the results
134:36 - on a phone like on a simulator
134:38 - uh and just like
134:41 - expect that the stream is going to lag a
134:42 - little bit
134:44 - but we're going to do most of our
134:45 - development in the browser so that we
134:47 - can have a nicer experience
135:08 - looks a lot of people are joining in the
135:10 - stream at different times and saying
135:11 - hello and happy new year so hey
135:12 - everybody happy new year uh i know i
135:14 - keep saying it over and over again but
135:16 - um i don't want to i don't want to leave
135:18 - out the people coming into the stream
135:20 - now you know later on
135:26 - uh samuel was asking about the game
135:27 - mechanics of the game we're playing like
135:30 - what
135:31 - do you have a game over like what
135:33 - actually happens uh so
135:35 - right now the way the game works is
135:38 - i believe you will only ever get like if
135:41 - you keep answering wrong
135:44 - i think you only get up to
135:46 - six enemies yeah
135:49 - right now it only goes to six that's
135:50 - basically because
135:52 - like you can see if i put more than that
135:54 - they would start to
135:56 - things would start to get weird they're
135:58 - already touching at this point
136:00 - um
136:01 - and actually you could tell
136:03 - because they're circles when we had them
136:04 - as squares it just looked like one giant
136:06 - rectangle so this
136:08 - the circles are a little bit better you
136:10 - can tell that they're
136:12 - actually distinct
136:15 - so
136:20 - i don't
136:21 - there wouldn't be necessarily a game
136:23 - over
136:26 - uh you would just get to a point where
136:29 - you would have a bunch of enemies and
136:31 - you would keep trying
136:33 - you can win the game
136:35 - if you keep answering
136:37 - the if you keep putting the right answer
136:39 - in and you get to no enemies so every
136:42 - time you put a right answer in an enemy
136:43 - goes away you get to know enemies
136:46 - and
136:47 - you win right so
136:49 - uh that's all i have so far for game
136:51 - mechanics
136:54 - i
136:56 - i'm not sure that
136:59 - i don't know that i would necessarily
137:00 - want to have a game over
137:02 - um
137:04 - i think potentially like
137:08 - it would be better to let the child keep
137:10 - going and seeing if they could start to
137:12 - get them right because the more they
137:13 - practice like
137:14 - the better they would get
137:21 - yeah
137:23 - i could see that if they really just
137:25 - wanted to start over they could just
137:26 - refresh uh
137:28 - refresh the the browser tab
137:32 - and then maybe like when you win
137:34 - having the option maybe to go to the the
137:37 - next level so either
137:40 - like bump up
137:41 - to do
137:42 - double digit math
137:44 - and set a single digit
137:46 - or maybe like bump up to the next level
137:50 - so i don't know i think there's
137:52 - it's still like the bare minimum of
137:54 - functionality i think there's a lot that
137:56 - could be done
137:58 - and right now like it doesn't it's not
138:00 - like you have your score saved or your
138:01 - preference is saved or anything like
138:03 - that so uh very basic but that's that's
138:06 - basically what happens at this point
138:11 - and this is based off of a game i used
138:13 - to play with my son we would play it on
138:14 - a whiteboard when he was learning basic
138:16 - math
138:17 - and
138:19 - we actually called it orc math like
138:22 - after the orcs and lord of the rings but
138:24 - i decided to switch to battle math
138:25 - because i didn't want the the tolkien
138:27 - estate to sue me or anything
138:29 - uh for calling it orcmath so we switched
138:31 - it to battle math
138:33 - and i used to just draw little bad guys
138:35 - on a whiteboard and then manually write
138:38 - problems on the board and erase them
138:40 - like
138:41 - right and erase the bad guys so
138:43 - um
138:44 - that's so the game mechanics were
138:47 - already
138:48 - uh in use before
139:06 - oh levi asked a good question don't you
139:09 - need a semicolon at the end of those
139:10 - lines
139:11 - uh so if you see the code like i don't
139:13 - have semicolons pretty much anywhere
139:16 - so semicolons are actually optional in
139:18 - javascript so
139:21 - technically i believe there are some
139:23 - situations where you need a semicolon
139:25 - but
139:27 - i never encounter those situations
139:30 - like
139:32 - i i pretty much never use semicolons so
139:36 - um and if i ever really need a semicolon
139:39 - my editor tells me which like i'm
139:41 - telling you i've
139:42 - almost never encountered a situation
139:44 - where i need a semicolon so
139:46 - for me i don't use semicolons i set my
139:49 - automatic linting to just take them out
139:52 - if they're in there
139:54 - the way i figure it is if i don't need
139:56 - it
139:57 - then why add it in it's less typing if i
140:00 - just don't add it in so good question
140:02 - though
140:15 - levi says free code can't lie to me then
140:17 - about some yeah a lot of the beginner
140:19 - tutorials will have you put semicolons
140:21 - in so like technically that is like the
140:23 - standard for javascript is to put
140:25 - semicolons in uh but in reality you
140:27 - don't you don't need it like browsers
140:30 - understand it without semicolons so
140:32 - whether or not that was ever intended i
140:34 - don't know but it's just the way things
140:36 - are in javascript that you can write it
140:38 - without semicolons and everything still
140:40 - works
140:54 - yeah uh joey says it's a somewhat
140:56 - controversial topic it is yeah like
140:59 - um
141:01 - yes writing semicolons are not as
141:03 - controversial for all of my projects
141:05 - like if i have control over code styling
141:09 - um
141:11 - the code style then i
141:13 - i just have it automatically set
141:15 - to
141:16 - remove semicolons
141:18 - so
141:19 - usually like people can code however
141:20 - they want but if they go to commit
141:23 - a pre-commit hook will run and it will
141:25 - remove the semicolons so when it
141:26 - actually goes into the repository
141:30 - um
141:31 - it won't have semicolons so
141:33 - so you can go to however you want if you
141:35 - want to contribute to my projects but
141:37 - that's how it's going to be now if i'm
141:38 - coding for uh somebody else's project
141:41 - and they want semicolons like i will add
141:43 - semicolon then i'll respect their
141:45 - preferences but for me i
141:49 - do not put semicolons in
142:00 - uh samuel says silly question but why
142:03 - are you using react instead of vanilla
142:04 - javascript for this game that's actually
142:06 - a good question um if i were just
142:09 - planning on doing this in the browser
142:11 - i could definitely do this in vanilla
142:13 - javascript and it would work and it it
142:16 - might
142:17 - like it would probably be
142:19 - entirely doable it's not a complex thing
142:21 - [Music]
142:23 - i do it react native because
142:27 - i would like to use this on a phone like
142:30 - a mobile phone
142:31 - so react native will let me
142:35 - turn this into a native app and like
142:37 - have it on the app store and stuff right
142:38 - like i'm not i'm not attempting to like
142:40 - sell this or anything i just think it'd
142:42 - be cool if my kids could play this
142:44 - on a tablet or a phone
142:46 - uh so that's why i was doing it also
142:48 - like i
142:50 - uh i use react and react native at work
142:53 - so
142:54 - uh it's like a way for me to try out new
142:56 - things on something that
143:00 - basically has there's no consequences if
143:02 - i try out something new and mess it up
143:03 - here as opposed to work it'd be a little
143:05 - bit different right so
143:08 - this was one of the first apps that i
143:09 - really used
143:10 - um
143:12 - the context api and react hooks on and
143:15 - stuff so
143:16 - just gives me a little extra practice
143:19 - good question though
143:30 - uh sheehan says can i know how to write
143:32 - php for phishing attack
143:35 - no we do
143:37 - uh
143:38 - free code camp is not the place to go to
143:40 - learn how to do fishing attacks
143:44 - uh
143:45 - and unless you are
143:47 - getting paid by a company to test their
143:49 - security
143:51 - it is probably not a good idea to be
143:52 - doing phishing attacks
144:07 - levi says the twitch emojis are way
144:09 - better than the youtube ones
144:11 - i have to check out the twitch emojis i
144:13 - haven't
144:15 - i'm not on twitch that often uh so
144:19 - i'll check out their emojis and see what
144:20 - it's like
144:26 - levi says the chat is more like a q a
144:28 - than a chat yeah it'd end up being more
144:30 - like uh like a question and answer
144:31 - session
144:37 - oh michael good point so um
144:39 - he also says one of the one of the
144:41 - reasons why i used react native was to
144:42 - see if i could do it so this was um i
144:45 - did this at a time when using react
144:47 - native web was still like
144:49 - not very common i don't know how common
144:51 - it is now but
144:53 - at least in my mind it was still more
144:55 - experimental like i just wanted to know
144:57 - like can i use this with create react
145:00 - app
145:01 - and get everything to work
145:03 - right
145:04 - so
145:04 - i do i just really wanted to see if it
145:06 - would work
145:07 - so
145:08 - i had the idea for this game in mind
145:10 - already because i had played with my son
145:13 - um
145:14 - but
145:16 - i didn't i just like never got around
145:17 - actually doing it and so then it just
145:19 - kind of combined it with the idea of hey
145:21 - this would be it's like a cool way to
145:23 - use react native
145:25 - so that's why so i tried it and then we
145:27 - end up like we use react native web
145:31 - with react native at work
145:33 - as well so
145:35 - um
145:36 - i believe trying to make what i started
145:39 - doing first now i don't even remember
145:43 - i think it was almost simultaneously
145:45 - that i was developing this and testing
145:47 - it and we were
145:48 - doing it at work but anyway
145:52 - um
145:53 - yeah definitely not necessary for this
145:55 - project but
145:57 - it was a good opportunity to test out
145:59 - some some new stuff that i was learning
146:07 - we have a question about is rust hard to
146:09 - get into i i've never tried coding in
146:11 - rust so i have no idea if anybody knows
146:14 - anything about rust let us know in the
146:18 - chat oh cool levi says the noise is gone
146:21 - now so i'm not sure what that noise was
146:23 - but
146:24 - glad it's gone
146:29 - unreal expert says what type of drink
146:31 - are you drinking so
146:33 - i am drinking a
146:35 - rain energy drink this is
146:38 - carnival candy flavor i believe i went
146:40 - with carnival candy flavor because it
146:42 - was the cheapest flavor on amazon
146:46 - and i just put this on my subscribe and
146:48 - save uh this is like my pre-workout
146:50 - drink so i don't drink these every day
146:52 - or all the time
146:53 - um
146:54 - i lift weights three times a week so i
146:58 - wake up early and i drink one of these
147:00 - on the way to the gym
147:01 - and that gives gives me a boost
147:03 - a boost of energy
147:05 - so that's my
147:07 - that's what i'm drinking also
147:10 - drinking water which i should
147:14 - probably should probably drink
147:18 - your mouth gets like really dry when you
147:20 - um
147:22 - are
147:23 - live coding because you talk a lot right
147:24 - so
147:26 - anyway
147:27 - um
147:29 - let's see
147:33 - anything i don't really know if these
147:35 - things are good for you or not so i just
147:37 - want to put a disclaimer like
147:39 - i don't officially like
147:41 - recommend this to anybody or not
147:44 - um
147:45 - but it
147:46 - it feels like it helps me get awake in
147:49 - the morning when i work out and then
147:51 - also like if it's getting late if i need
147:53 - to drive somewhere late i have one
147:56 - um
147:58 - if it's like an emergency and i need uh
148:01 - energy i'll have one
148:19 - uh mark shawn says thanks thank you for
148:21 - coding tonight jesse i thought i was
148:23 - going to be alone on the new year but
148:25 - not anymore oh that's awesome
148:27 - i'm glad that you're not uh alone on the
148:29 - new year uh
148:31 - that's pretty cool yeah i wasn't sure
148:33 - like how many people would want to watch
148:34 - because it's you know new year you know
148:36 - maybe people would have plans or
148:37 - anything but uh that's cool that's
148:40 - really cool i i would have been alone
148:41 - too to be honest everybody else in my
148:43 - house would have been asleep so
148:45 - um
148:46 - i don't even know
148:47 - i would either been asleep or would have
148:49 - been
148:50 - by myself probably uh checking out what
148:53 - everybody else was doing on
148:55 - on social media
148:57 - and
149:00 - waiting for uh for the new year
149:05 - um sammy says i must say like mark thank
149:08 - you jesse if you're doing this tonight
149:09 - oh you're welcome
149:11 - this is cool i yeah
149:13 - i like well like i said i
149:15 - i said this at the beginning the stream
149:16 - so a lot of you probably missed it but
149:18 - um it was maybe like
149:22 - at least four years ago maybe five years
149:23 - ago i was myself alone on new year's and
149:28 - um
149:30 - saw
149:31 - quincy who's the head of free code camp
149:34 - and the founder of free code camp doing
149:35 - a live stream
149:36 - and
149:38 - watched it and thought it was really
149:39 - cool when i um
149:41 - i had done some lessons on free code
149:42 - camp before and that was like my first
149:44 - experience with
149:46 - a coding live stream
149:48 - and years later it i remembered it and
149:53 - it was like kind of inspiration uh for
149:56 - me to get it started and uh it's just
149:58 - crazy that i'm live coding for free code
150:01 - camp now on new year's and um anyway so
150:05 - i'm really cool that i could do
150:07 - for you all
150:09 - kind of what quincy did for me back then
150:11 - and uh
150:13 - anyway so it's cool that we all get to
150:15 - hang out
150:18 - world changer says how to donate uh go
150:20 - to freecodecamp.org
150:22 - [Music]
150:23 - and
150:24 - follow the directions on there
150:26 - if you want to donate to free code camp
150:29 - and i said that money doesn't go to me i
150:31 - don't get anything
150:32 - uh so
150:34 - like we don't even do ads on youtube so
150:37 - like we don't get any money for that
150:40 - there's just a few people that do like
150:42 - very
150:43 - important work for free code camp like
150:45 - making sure the servers are running and
150:46 - stuff like that uh that are actually
150:48 - paid
150:49 - like
150:50 - i believe over 90 percent of us are just
150:53 - volunteers so
150:54 - uh if you want to donate in any way in
150:56 - time or money like
150:58 - that's awesome
151:03 - uh levi says i'd like to volunteer but i
151:05 - think i'm way too young free code camp
151:07 - doesn't accept teenagers do they
151:08 - uh i don't think age really matters to
151:11 - be honest with you i think if you um
151:14 - like there's a lot of different ways to
151:16 - contribute and so you definitely could
151:18 - like there's
151:20 - the free code camp forum is probably one
151:22 - of the easiest place to contribute you
151:24 - can just go on there and be active on
151:25 - the forum
151:27 - uh there's a blog for free codecamp has
151:30 - its own blogging platform now
151:32 - so you could post vlog stuff on there
151:36 - um
151:38 - there is a obviously the youtube channel
151:42 - then
151:43 - all of the free codecamp source code is
151:46 - open source
151:47 - so
151:48 - you could set up a profile on on github
151:51 - and
151:52 - work on some of that code
151:54 - even little things like uh writing
151:58 - correcting typos
152:00 - um
152:02 - you know that aren't necessarily code
152:04 - are still very helpful
152:06 - uh so there there's just so much stuff
152:08 - that could be done
152:10 - there's also like a free code camp
152:13 - i forget what they call it exactly but
152:15 - basically it's like
152:17 - documentation for
152:19 - every different type of coding thing you
152:21 - could think of
152:22 - so
152:24 - there's a ton of different ways to
152:25 - contribute
152:27 - uh
152:28 - and
152:29 - so just kind of check it out and like
152:31 - don't don't let age
152:33 - you know stop you i think if you have
152:35 - good
152:36 - good stuff to contribute then
152:39 - free code camp will probably want it
152:50 - um
152:53 - check base says do you
152:55 - know some programming language for cross
152:57 - platform ios and android um yes actually
153:00 - uh react native which is javascript
153:02 - based lets you do cross-platform ios and
153:05 - android
153:06 - uh i'm trying to think does flutter
153:09 - i'm i'm so uh
153:13 - kind of behind on learning about flutter
153:15 - but does flutter let you do android and
153:18 - ios
153:19 - i know it does android but does it does
153:21 - are there any um
153:24 - uh
153:26 - flutter people in here
153:28 - let me know if there if there are if it
153:31 - does um ios
153:54 - let's see
154:01 - all right uh xavier i'm not sure whether
154:04 - it's xavier or xavier let me know how
154:06 - you want me to pronounce that
154:08 - i've i've heard both uh so
154:11 - let me know and i'll do my best to
154:12 - remember and pronounce it correctly but
154:13 - anyway the question is what if you've
154:15 - been working as a developer for a few
154:17 - years but can't put up code to
154:19 - github to share with other employers
154:23 - can you not put up code because
154:27 - your employer
154:28 - isn't open source
154:31 - uh or is there some other reason
154:34 - if it's because of your employer that's
154:36 - that's kind of tough that's how my
154:37 - employer is right now
154:38 - your only option really is to
154:41 - i mean you could convince your employer
154:42 - to do some open source stuff which may
154:44 - be difficult
154:45 - or you could do some
154:48 - side projects on your own which also can
154:50 - be difficult if you don't have a lot of
154:52 - time to do it i know like for me
154:54 - i have four kids
154:56 - so there's not really a lot of time like
154:58 - if i'm gonna do a side project it
155:00 - usually means that's less time i get to
155:02 - spend with my kids
155:03 - so i know that can be difficult
155:06 - uh but
155:09 - if there's some other reason why you
155:10 - can't put code up there let me know but
155:13 - you know basically
155:16 - try your best to
155:18 - see if you can convince your your
155:20 - employer to let you
155:23 - put
155:24 - put some of your work code on github
155:26 - otherwise it's got to be um
155:29 - uh
155:31 - like side project stuff
156:04 - so i'm trying to find a question there's
156:06 - a lot of back and forth here
156:08 - what is dark thing
156:09 - [Music]
156:18 - okay i got to the point where we're all
156:20 - voting on circles and squares so let me
156:24 - just go through that
156:49 - you
157:24 - uh remesh pointed out that um
157:27 - the the app still has the
157:30 - reaction icon
157:32 - uh in the title of react app so yeah
157:35 - i'll definitely have to change that as
157:36 - well
157:38 - i don't really have another icon though
157:40 - that i could put there
157:42 - i don't have a game an icon for the game
157:44 - but that's something i'll have to have
157:45 - because if i want to put it on an app
157:47 - store at some point i'll need a little
157:48 - icon
157:49 - so i have to think about what i want
157:51 - that to be
158:17 - um
158:32 - all right uh levi says oh wait no that's
158:35 - not a question sorry
158:37 - oh sam had to go
158:39 - um and i didn't i didn't catch it if
158:41 - you're still here sam um
158:44 - i'll see you probably not still here
158:45 - that was a while ago
159:07 - all right
159:09 - still i'm still trying to find questions
159:12 - there's a lot of like uh back and forth
159:14 - talking in the chat which i love i love
159:16 - when you all interact with each other
159:19 - but
159:20 - it's hard for me to find uh actual
159:22 - questions
159:31 - oh levi has to go
159:34 - i miss that too that's thing that when
159:36 - uh i can't keep up with the chat
159:39 - then i miss when people leave so
159:42 - um
159:43 - but anyway levi wanted me to know
159:45 - to uh try to add
159:47 - border and box shadow around everything
159:49 - so it looks like it's raised off the
159:50 - page that that's actually pretty cool
159:53 - uh a pretty cool idea i think that's a
159:55 - good idea
159:56 - uh i kind of don't want to get too
159:59 - fancy with what i do since i'm prob
160:02 - i really would like to replace
160:04 - what i have now with um
160:07 - like
160:08 - character sprites like make it look a
160:10 - little bit more like a video game
160:13 - uh
160:15 - but i do like
160:18 - i like the idea of giving it some
160:22 - the appearance of some depth
160:34 - let's see we have a question does anyone
160:35 - know if the stream will be saved it will
160:37 - be saved
160:38 - uh the stream will be available to watch
160:41 - um just probably just a few minutes
160:43 - after i end the stream
160:45 - and
160:50 - let's see
160:51 - the project uh some questions about
160:54 - explaining the project uh this is a math
160:56 - game for children that we're building
160:58 - with react native
161:01 - react native is a uh like a javascript
161:04 - library
161:06 - and it can build
161:08 - we're building it in a way so that it
161:09 - could run in a web browser
161:12 - or it could run as an app
161:14 - in ios and android
161:27 - spence wants an opinion on learning c
161:29 - for a first language
161:32 - c is pretty low level
161:35 - um
161:37 - i if somebody asked me what language
161:39 - they should start with i probably would
161:41 - not say c
161:43 - it there's just
161:45 - there's a lot of stuff that uh other
161:47 - languages kind of do for you that you
161:49 - have to do manually and see
161:52 - so the learning curve might be a little
161:53 - bit harder
161:55 - i personally think javascript is a
161:57 - decent language to start with because
161:59 - you don't need anything extra to run it
162:01 - like it just runs in your web browser
162:04 - um
162:05 - it is it is pretty forgiving like you
162:08 - can kind of mess stuff up in javascript
162:10 - and it will still run like you can get
162:12 - it to run
162:14 - other languages like sometimes there's a
162:16 - lot of compiling involved like you can't
162:18 - even see what's going on
162:20 - uh
162:21 - also you can build pretty much anything
162:22 - with javascript by that i mean like you
162:26 - can build for a lot of different
162:27 - platforms with javascript like pretty
162:30 - easily so
162:31 - um it's a versatile thing
162:35 - uh also probably
162:38 - if i would if you didn't really didn't
162:39 - want javascript i would maybe recommend
162:41 - python uh i think python is pretty cool
162:44 - to learn with
162:45 - uh there's not really a lot of like
162:48 - special characters in the syntax so you
162:50 - don't get caught up as much in syntax
162:52 - stuff
162:52 - so those are just my opinions
162:55 - on first languages
162:58 - probably like
163:01 - i did learn a little bit of javascript
163:06 - as kind of my first programming language
163:08 - but it was such such a little amount i
163:10 - wouldn't even say it counted the first
163:13 - time i
163:14 - tried to use a programming language to
163:15 - really program something
163:17 - uh i took a class in c plus plus so that
163:21 - was probably my first
163:22 - first language
163:23 - uh
163:24 - but that was a long time ago and i just
163:26 - made a calculator with it i did and i
163:29 - did a couple other things but i i can't
163:31 - even remember what they were
163:32 - so
163:34 - that's where i'm kind of coming from
163:36 - uh with my my opinions there
163:39 - mark schoen says can i use spring boot
163:41 - and react native together
163:44 - um
163:45 - as to why i'm using spring boot i would
163:47 - be doing a lot of heavy server-side
163:48 - processing
163:50 - i'm not 100 sure i know people where i
163:52 - work use spring boot uh but i've never
163:55 - worked with it directly so i'm i'm not
163:58 - really sure
163:59 - if you could or not
164:01 - i believe there are people where i work
164:04 - some teams that are using them both
164:06 - but like i said i'm not
164:08 - 100 sure on that
164:10 - uh we got a question what do you think
164:12 - about expo i love expo uh expo which is
164:15 - e-x-p-o expo is a weight
164:19 - it's kind of like a helper library for
164:21 - react native
164:23 - it makes some react native things easier
164:26 - than what they would normally be if
164:28 - you're just using just straight react
164:30 - native so i love expo
164:34 - i
164:35 - i definitely recommend using it
164:37 - for any react native project try to use
164:40 - expo uh if for some reason you're doing
164:43 - some crazy thing that isn't supported by
164:45 - expo
164:46 - then you can always eject it
164:49 - uh if you need to
164:51 - but expo just
164:53 - provides some really
164:55 - cool stuff
164:56 - makes things easier it makes like even
164:58 - even things like just uh running
165:01 - your stuff locally it makes that easier
165:04 - so
165:05 - bundling your app for the app store
165:07 - there's a lot of like helper
165:10 - components that you can use so expo uh i
165:13 - really like it
165:15 - especially now that it has web support
165:17 - as well
165:19 - expo is definitely the way to go
165:26 - michael creole says uh for our picker he
165:29 - says what if instead of a picker we just
165:31 - made it a button that opens a modal form
165:33 - with four separate buttons you could add
165:35 - font family too that's actually that's a
165:37 - good idea
165:38 - um
165:40 - you know the picker is definitely the
165:41 - simplest way
165:43 - but if we're not going to be able to do
165:45 - the if we're not even going to be able
165:47 - to control the font in the picker then
165:50 - you know
165:52 - maybe we should go with something else
166:04 - uh joey says
166:06 - uh
166:08 - we we were talking a few minutes ago
166:11 - about
166:12 - semicolons
166:13 - in javascript whether you use them or
166:15 - not so i don't use them uh joey's is
166:18 - when when uh
166:20 - so anyway joey says i do the opposite i
166:22 - often write js without semicolons
166:25 - and have the editor or eslint insert
166:28 - them when saving so for me i always have
166:31 - the editor just take them out
166:33 - and i never write them either so you
166:36 - haven't put them in so that is that's
166:37 - kind of interesting actually
166:39 - that would work for me especially if i'm
166:41 - working on someone else's project and
166:43 - they want them in there if i were to
166:45 - just
166:46 - not
166:48 - actually that is what i do
166:50 - normally um
166:53 - i believe the last time i worked on a
166:54 - project
166:56 - i did
166:57 - have the editor i didn't have the editor
166:58 - to do it they had it set up so that like
167:01 - the project would automatically put them
167:02 - in so i didn't have to do it when i
167:04 - wrote the code either so that that is a
167:06 - good way to do it
167:09 - um and andrew
167:11 - hillis sorry if i mispronounced that but
167:14 - uh says i still use semicolons because
167:16 - if i ever go to another language i'm
167:17 - already used to using them that's true a
167:19 - lot of other languages do use semicolons
167:21 - so
167:22 - i
167:23 - it is hard for me to get used to using
167:25 - them when i do have to use them
167:27 - for other stuff
167:36 - uh micah also has the editor add
167:39 - semicolons in
167:42 - amber steph says hello world hello how's
167:44 - it going
167:45 - welcome
167:52 - mojo says what is the big o of dijkstra
167:55 - algorithm tight bound
167:59 - i i don't know enough about dijkstra's
168:02 - algorithm and the tobigo notation to
168:05 - answer that off the top of my head uh so
168:08 - um
168:09 - big o notation is like a um a way to
168:12 - measure
168:13 - uh
168:14 - the um
168:16 - i always say this i see performance i
168:19 - don't know if reform is just the right
168:20 - world word
168:21 - um
168:23 - i it's a way to measure how performant
168:26 - an algorithm is
168:28 - uh both in terms of time complexity and
168:30 - space complexity um
168:33 - so
168:35 - um
168:37 - i don't like that i don't remember
168:39 - enough about anything like that the only
168:41 - time i study stuff like that is if i'm
168:43 - gonna do interviews and to be honest
168:44 - with you i've never had anybody ask me
168:46 - about that on an interview
168:48 - that's something i would probably just
168:50 - look up but
168:51 - um
168:53 - anyway that actually it's kind of good
168:55 - to remember like
168:57 - it's good to know about big o notation
168:58 - and all that stuff but to be honest like
169:00 - i've never actually had a question about
169:03 - big-o notation
169:04 - on an interview
169:06 - so
169:09 - i don't know how useful that information
169:11 - is in terms of getting a job
169:16 - but i guess it's good to know about in
169:18 - case it comes up
169:23 - mark shawn says have you tried anything
169:25 - with uh web assembly
169:27 - i haven't yet
169:29 - so i'm i'm like kind of i read about it
169:33 - when i see stuff about webassembly but i
169:35 - have not tried it yet i just haven't
169:37 - really had a good use case for it yet
169:40 - but it would be cool to try
169:43 - for those of you who are not familiar
169:44 - with it webassembly
169:46 - it's
169:49 - i'm no expert at it but
169:51 - it's a way that you can use different
169:53 - languages to write stuff for the browser
169:56 - so like you could use python or
169:59 - c sharp or anything whatever language
170:02 - you want
170:03 - write it and then have it run in a web
170:05 - browser
170:08 - and there are some
170:09 - performance potential performance
170:12 - benefits to doing this
170:14 - so
170:16 - it's really cool now for me i'm mainly a
170:19 - javascript developer
170:22 - um
170:24 - so it's not as attractive to me like i i
170:27 - know
170:28 - i know developers who aren't primarily
170:30 - javascript developers who see this as a
170:32 - great opportunity
170:34 - because they can use their main language
170:37 - on the web
170:38 - i kind of see it as like potentially
170:42 - it's a way to
170:43 - run
170:46 - do things in the web
170:48 - even faster um than you could otherwise
170:52 - so
170:55 - i just think that most things on the web
170:57 - right now
170:59 - don't really need that so i'm kind of
171:00 - waiting for like that that use case
171:03 - that's really going to make webassembly
171:04 - like
171:05 - a necessary thing
171:08 - so i haven't found it yet but like i
171:09 - said i'm not really an expert at it so
171:13 - i i think like it'll probably be a
171:16 - really big deal at some point
171:19 - uh probably just not like
171:22 - not it's not there yet like it's not
171:24 - ready
171:25 - for uh
171:27 - like mass adoption yet
171:38 - uh joey says jesse i tried live coding a
171:40 - while back and i'm a terrible host
171:42 - you're much better at it i don't know
171:45 - i don't know i just keep talking i don't
171:46 - know what
171:48 - i've also been doing it for a long time
171:50 - this is like two years of live coding so
171:53 - uh many many hours of live coding
171:57 - uh let's see rahman says hi there from
172:00 - uh iran hey how's it going thanks for
172:03 - joining us
172:06 - ultimate great says more live coding
172:08 - sessions i'm loving it awesome
172:15 - network host any area 51 says
172:18 - my house is already asleep they said
172:21 - they'd hang with daddy but my son said
172:22 - he wants a raspberry pi to code a
172:24 - network engineer like me that's cool
172:26 - yeah that's what uh i assume everybody
172:29 - in my house is asleep i haven't heard
172:30 - any noise up there uh it's definitely
172:32 - past everybody's bedtime
172:34 - oh it's almost midnight here so it is 11
172:37 - 53 p.m
172:39 - uh i have to remember to check this
172:42 - clock when it's midnight
172:44 - uh
172:45 - let's see
172:48 - lonnie bulldozer asks if i'm drunk
172:50 - actually i'm not drunk so i did have a
172:52 - drink earlier before the live stream so
172:55 - uh my wife my wife got me everything i
172:57 - needed to make a manhattan
173:00 - so
173:01 - manhattan is
173:02 - probably my favorite alcoholic drink
173:05 - and it's uh either bourbon or rye
173:08 - whiskey with
173:11 - a few drops of angostura bitters
173:14 - and
173:15 - sweet vermouth
173:17 - and then i
173:18 - you put a maraschino cherry in it i like
173:20 - to add a little bit of the juice from
173:21 - the cherry
173:23 - you can shake it or stir it
173:26 - depends on how much time i have as to
173:27 - whether i do that
173:29 - and then i like to add a little bit of
173:30 - ice in there too
173:32 - so it's a good drink so
173:34 - drunk
173:35 - not so much i would have to have more
173:37 - than one i think to be drunk but
173:40 - um
173:42 - it was
173:43 - it was nice nice drink she went out
173:45 - earlier and got
173:46 - got treats for the kids and stuff for uh
173:49 - for new year's
173:54 - uh let's see
174:05 - okay so i asked a while back about
174:07 - flutter if um
174:09 - flutter let you do android and ios
174:12 - and it looks like flutter does let you
174:14 - do android ios and web
174:16 - so that's awesome
174:21 - so i do i i have talked with some
174:23 - flutter developers before uh conferences
174:25 - and stuff so it seems really cool
174:28 - um i mean for what i do like
174:30 - right nate is my thing so i'm not really
174:32 - gonna switch right now like
174:34 - i'm in the middle of building a big app
174:37 - in react native so
174:40 - um
174:41 - but it seems kind of cool
174:46 - um we have a question about
174:50 - unity so does free code camp have
174:52 - lessons on unity uh and c-sharp
174:56 - i believe we have some videos on it i
174:59 - don't think they're like um
175:02 - there's no curriculum on freecodecam.org
175:05 - but there are videos about it
175:07 - on this youtube channel
175:12 - uh special else or sorry
175:15 - the l's capitalized so it seemed like it
175:17 - should be pronounced separately but i
175:19 - guess it's just special is the name
175:22 - says some people saying flutter is
175:24 - better than react native
175:26 - yeah to be honest with you i don't
175:27 - really know what's better like i use
175:29 - react native i haven't actually used
175:31 - flutter so i can't really say which one
175:34 - is better i imagine it's like most
175:36 - things in that um
175:39 - you just need
175:41 - like it depends on the situation
175:44 - so
175:45 - uh it depends like
175:48 - what do you need to build
175:49 - and
175:50 - what do you already know what does your
175:52 - team already know stuff like that
176:07 - honey buddha just said you're sweating
176:09 - uh
176:10 - maybe that's why uh lonnie asked if i
176:12 - was drunk am i sweating
176:14 - to be honest with you
176:18 - i have like uh
176:22 - like oily skin right like i don't have
176:25 - anybody deals with it right like some
176:26 - people have really dry skin they gotta
176:28 - use lotion like i never need to use
176:29 - lotion like at the end of the day i'm
176:32 - just like
176:33 - just so much oil on my skin so i
176:35 - probably look super shiny so it's uh
176:38 - it's really cold and right now i'm in my
176:40 - basement i turned off the heat
176:42 - so the furnace wouldn't run because it
176:43 - makes too much noise so i'm actually
176:46 - really cold but because it's the end of
176:47 - the day like
176:49 - i have this oily skin so
176:53 - that's probably why i look like i'm
176:54 - sweating
176:58 - all right three minutes until the new
176:59 - year where i'm at
177:01 - almost
177:07 - uh novez says this channel is one of the
177:09 - best ones congratulations
177:12 - ah thanks i mean i'm only like a small
177:14 - contributor here but i will say thank
177:16 - you on behalf of
177:17 - everybody that contributes to the
177:19 - channel
177:21 - uh max lozano says how do i start
177:23 - learning python
177:24 - um
177:27 - i don't know what the best way to learn
177:29 - python would be free codecamp
177:33 - i don't think we have python of course
177:35 - we just added something was it python
177:40 - i don't know this might be good to check
177:41 - out let's check this out
177:43 - [Music]
177:47 - uh
177:48 - where's our curriculum
177:53 - all right
178:04 - i thought we just added something else
178:19 - i don't know maybe it's not added yet
178:27 - yeah
178:29 - okay so
178:33 - there are some free
178:36 - like online coding places uh where you
178:39 - can learn
178:40 - python
178:42 - uh
178:43 - codecademy
178:45 - i believe has some free stuff
178:47 - udacity has an intro to computer science
178:50 - course that uses python that's free so
178:52 - check those out
178:55 - uh christy jensen says thoughts on women
178:58 - in programming i'm studying computer
179:00 - science sometimes i'm the only female in
179:03 - my class oh no
179:05 - well it's too bad that you're the only
179:06 - female in your class
179:08 - i didn't go through a computer science
179:09 - degree so i'm not
179:11 - 100 sure how things work in computer
179:13 - science
179:15 - but i do know um i think now is
179:19 - um
179:20 - a good time to get into program
179:22 - uh programming as a woman my wife just
179:25 - got into the programming hey it's
179:27 - midnight so happy new year
179:30 - uh just hit midnight here on the east
179:32 - coast uh in the united states so
179:35 - everybody in the eastern time zone happy
179:36 - new year
179:38 - um
179:39 - yeah i'm in 2020 now like a lot of you
179:41 - watching
179:44 - so i want to say like cheers or have
179:45 - like a glass of champagne but i just
179:47 - have this water bottle so
179:50 - happy new year
179:55 - so christy back to your question
179:57 - uh the reason i say i think it's a good
179:59 - time to get in now is because uh people
180:02 - are making i think more of an effort
180:05 - to
180:06 - so number one
180:08 - people are realizing how hard it has
180:10 - been for women to get into tech into
180:13 - programming
180:14 - and they're starting to make an effort
180:17 - to make things better
180:19 - so
180:21 - um
180:23 - for instance when my wife was starting
180:24 - out she got a scholarship to a coding
180:26 - boot camp
180:28 - and she got scholarships to go to
180:30 - conferences
180:32 - uh
180:33 - because she was a woman
180:35 - trying to get into programming
180:37 - right so there are opportunities like
180:38 - that for women
180:41 - that i think can be helpful
180:44 - also you know there are companies that
180:47 - are actively trying to hire more women
180:51 - uh
180:52 - so i think it's
180:54 - like there are definitely still places
180:55 - where it's difficult like i hear stories
180:57 - about that but then also know like my
180:59 - wife has had
181:00 - a very good experience so far
181:03 - um
181:05 - she didn't have any problem at all
181:06 - finding uh a job
181:08 - uh she works remote
181:11 - uh
181:13 - so yeah that's my thoughts on it like in
181:16 - terms of
181:18 - like where i'm coming from too is like
181:21 - there's no intrinsic reason why a woman
181:26 - couldn't be a good programmer
181:28 - like as good or better than a male
181:29 - programmer right like so
181:31 - i don't i don't have any weird thoughts
181:35 - like that right so
181:37 - um
181:38 - but i do realize that there are some
181:42 - like the way things are done at some
181:44 - companies makes it hard for a woman to
181:47 - like just be there and exist right so
181:51 - i think
181:53 - it's getting better there are some
181:55 - places that are better than others in
181:57 - terms of like just being a
181:59 - a good environment for women to be in
182:05 - definitely remote work is
182:08 - remote work is nice not just for women i
182:11 - feel like it's great for everybody
182:12 - because like that environment factor is
182:16 - brought down to a minimum
182:18 - right you don't have to actually be
182:19 - there every day and like
182:21 - be around people uh for like for better
182:24 - or for worse okay
182:26 - so there's a ton of remote opportunities
182:28 - but then even even then like there's
182:31 - opportunities where
182:32 - um
182:34 - just the environments are getting a lot
182:35 - better so
182:36 - i hope that answers your question
182:38 - uh hang in there in your computer
182:41 - science classes
182:42 - uh i know that's that's tough
182:45 - um
182:48 - being
182:49 - i don't know i just can't imagine
182:52 - i can't imagine that feeling
182:54 - of
182:55 - um
182:57 - number one being female because i'm i'm
182:59 - not a female right but number two being
183:01 - the only female uh in the class uh so
183:06 - that's tough i've been like on the other
183:08 - end like in
183:09 - with my degree uh is in economics
183:13 - there were some classes where there was
183:15 - only one female in the class
183:18 - in economics classes
183:21 - she would she always held her own though
183:23 - it was a small group of us that kind of
183:25 - all had the same classes but
183:30 - i imagine it probably couldn't have been
183:31 - easy for her
183:34 - but
183:35 - anyway
183:36 - hang in there
183:38 - get through it
183:39 - there's a lot of cool opportunities so
183:41 - try to take advantage of like the
183:42 - scholarship opportunities and stuff like
183:44 - that
183:49 - anyway i hope that was a good answer let
183:51 - me know if you have any more like
183:52 - specific questions for that and uh
183:58 - sorry if i rambled it is
184:01 - i told you anytime after midnight my
184:03 - answers are going to start getting
184:05 - worse because
184:07 - i'm going to be getting tired
184:22 - sergio says to be a back-end developer
184:25 - what languages do you recommend learning
184:27 - first
184:28 - uh it really depends on what kind of
184:30 - work you want to do
184:31 - specifically um
184:34 - or like what companies you want to work
184:35 - at so if if there are certain companies
184:38 - you really want to work at
184:39 - or a certain thing you really want to do
184:41 - then you probably need to do a little
184:42 - bit of research to figure out
184:44 - um like what
184:46 - what you need right
184:48 - so
184:50 - um
184:52 - for instance a lot of machine learning
184:53 - stuff is done in python
184:56 - uh if you want to do like a lot of cloud
184:59 - type stuff
185:00 - um i believe like if you work at google
185:03 - i think go is used heavily for google's
185:06 - cloud stuff
185:08 - if you
185:10 - like some companies are heavily dotnet
185:13 - based so you probably want to do like c
185:15 - sharp and net some companies are very
185:17 - based in java
185:19 - some companies use java javascript full
185:22 - stack
185:24 - so
185:25 - i would maybe
185:26 - do your research
185:30 - if you just want to be back-end
185:33 - then i guess it really
185:35 - if you have no preference at all it kind
185:36 - of doesn't matter
185:38 - uh if you at some point would like to be
185:40 - full stack though then
185:42 - javascript's not a bad option because
185:44 - you could learn back end
185:46 - and then also have that experience in
185:47 - javascript to do front end
185:50 - but yeah it just it really kind of
185:52 - depends
185:55 - on what
185:56 - what you want to get into
186:03 - uh samuel says what do you think of
186:06 - using spring boot and angular together
186:09 - uh i'm not really sure like i have not
186:11 - used spring boot myself and i haven't
186:14 - used angular in years
186:17 - so i don't know
186:18 - i don't know enough about either one of
186:20 - them to give you a a good answer
186:32 - micah says
186:33 - a national public radio report in 2013
186:36 - stated about 20 of all u.s computer
186:39 - programmers are female and open source
186:41 - fields only 10 of women are programmers
186:44 - okay that's interesting
186:46 - um
186:47 - that's really interesting i don't i
186:49 - wonder why that is that it's
186:52 - it's less
186:54 - for open source okay
186:57 - um
186:59 - let's see
187:04 - says do you need to learn js and laravel
187:08 - um
187:11 - i don't
187:12 - i don't know if you would need to learn
187:15 - it depends on what you're trying to do
187:17 - uh in terms of javascript and larval so
187:20 - maybe if
187:22 - you got a little bit more information i
187:23 - could give you kind of a better answer
187:33 - uh
187:34 - cj says is anybody interested in google
187:36 - summer of code if so what projects are
187:38 - you interested in
187:40 - um i'm not really sure
187:42 - i don't i've heard of summer of code
187:43 - before but i'm not exactly sure what it
187:45 - is so
187:46 - uh i guess i'm i'm kind of interested
187:48 - but i don't know what
187:50 - what is about
187:54 - mark shawn says jesse your explanation
187:55 - of big o was perfect including time and
187:57 - space oh cool all right i guess i still
188:00 - remember
188:01 - i i remember it uh correctly then
188:22 - oh joey says uh ebay has an amazing blog
188:25 - post about their use of webassembly
188:27 - highly recommend reading all right cool
188:28 - i'll have to try to find that
188:30 - uh we were talking about webassembly a
188:32 - little bit earlier uh and um
188:35 - i said i'm i am intrigued by webassembly
188:38 - i'm just waiting for um like what's the
188:41 - practical application
188:42 - where like there'll be a really good use
188:44 - case you know
188:46 - uh mark shawn says if you check out
188:47 - webassembly's website there are use
188:49 - cases all right cool i'll definitely
188:51 - have to check that out then
188:59 - joey says plus one for manhattan's and
189:01 - old fashions yeah a manhattan is very
189:03 - similar to the drink uh the old
189:05 - fashioned uh which i also enjoyed that
189:08 - so i enjoy them both uh both are really
189:11 - good drinks if you're into uh
189:13 - whiskey-based drinks
189:16 - they're very good
189:21 - joey says no not shaking
189:24 - yeah yeah you can't
189:29 - i know some people have strong opinions
189:31 - about stirred versus shaking uh drinks
189:34 - but
189:35 - um i used to be a bartender at one time
189:37 - so i definitely appreciate
189:39 - the uh the differences between a steroid
189:42 - and shake and drink
189:48 - but i i like to be i'm going to be
189:49 - understood honest with you
189:51 - in terms of taste
189:54 - as long as you don't as long as
189:56 - everything is cold enough that the
189:58 - shaking with ice doesn't water it down
190:00 - too much in terms of taste i think
190:02 - shaken drinks
190:04 - are generally better right because of
190:07 - all the oxygen in the drink
190:09 - it
190:10 - it does something for the flavor right
190:13 - stirred drinks
190:15 - are better for presentation because it
190:18 - keeps the clarity and i will say there's
190:21 - less melting so less watering down of
190:23 - the drink but like potentially if you
190:26 - were to keep all your ingredients
190:27 - chilled
190:30 - when you shake it in the ice you could
190:32 - minimize
190:34 - the melting and so you wouldn't have a
190:36 - watered-down drink so like
190:39 - it just kind of depends like if i was
190:40 - bartending i probably wouldn't shake it
190:43 - i would want it to look clear and nice
190:46 - but for myself
190:48 - i shake most drinks
190:50 - if i want to take the time to shake it
190:51 - so
190:52 - anyway sorry this is a coding stream
190:55 - sorry i killed off on my my my dreams
191:09 - uh saeed says what do you think about
191:11 - chat bots applications and future using
191:14 - dialogflow or bot framework etc um
191:18 - i don't have a lot of experience with
191:20 - programming chat bots i didn't make an
191:23 - alexa skill once
191:25 - but
191:26 - um
191:27 - i don't have a lot of
191:28 - experience beyond that with programming
191:30 - chat bots but
191:31 - i'm really excited about it uh
191:34 - i i own a lot of uh like
191:37 - voice chat devices
191:40 - uh and i really like it
191:43 - um
191:43 - i use the uh so the google
191:48 - has this uh call screening feature for
191:50 - your phone
191:51 - and uh i really love that
191:54 - so i'm kind of excited for where that
191:56 - goes to where like chat bots either text
191:58 - base or voice base
192:00 - um become
192:02 - like nearly indistinguishable
192:04 - from people and like i i don't want it
192:07 - to be like in kind of a weird way where
192:09 - you don't know if you're dealing with a
192:10 - person or bot but just in a way where
192:12 - like i can talk more naturally to a
192:14 - chatbot and do things
192:17 - uh i'm
192:18 - i think it's going to be really cool
192:19 - when i'm looking forward to it just in
192:21 - terms of like the future of it and i
192:24 - think it could be applied to so many
192:26 - things
192:30 - in terms of programming it
192:32 - i'm not really up on on the best stuff
192:34 - so like dialog flow about framework
192:37 - i don't have any opinions on that i
192:38 - don't know enough about it but
192:41 - i think that's the way i actually have a
192:43 - um
192:44 - so beyond chat
192:46 - i think brain computer interfaces are
192:48 - kind of really cool just like skipping
192:50 - the talking altogether and going
192:52 - directly to reading the brain waves
192:55 - so i have a brain computer interface
192:56 - device that should be coming in in a few
192:59 - days and i really would love to do some
193:02 - live streaming about
193:04 - making applications that
193:06 - read your brain ways and do things based
193:08 - on that
193:09 - so hopefully i'll have more coming soon
193:13 - for that
193:14 - uh i wish i would have had the uh the
193:16 - hardware
193:18 - for this live stream but it didn't come
193:20 - in
193:21 - um
193:23 - i think it'll be on
193:25 - maybe this friday
193:26 - hopefully if there's no delays in
193:28 - shipping
193:45 - so
194:00 - we have a question about so i mentioned
194:02 - that i um was in economics
194:05 - says how fast can economists make
194:07 - transition into i.t system field analyst
194:10 - system analyst field
194:12 - i tell you the truth in terms of how
194:13 - fast can you transition
194:15 - it's hard to say
194:17 - um like making the transition into the
194:19 - field is
194:21 - all depends on like how fast can you
194:23 - convince somebody that you're to give
194:24 - you a job that you're ready right
194:27 - um
194:28 - so it's really really hard to say
194:30 - there are definitely people who take
194:32 - less than a year
194:34 - and make huge career changes and have
194:36 - good jobs in
194:37 - the i.t field
194:40 - there are people that take a lot longer
194:42 - it really really depends a lot on
194:47 - the person
194:48 - where the
194:50 - where they're living at what the job
194:51 - opportunities are like um
194:54 - so it's just
194:55 - it would be hard to say but it's
194:57 - definitely doable like within within a
194:59 - year
195:02 - all right christie says thank you for
195:04 - that response i think you're thanking me
195:05 - for the response i i assume
195:07 - the time stamps kind of line up with
195:09 - when i was talking about it
195:11 - you're welcome hope at least hopefully
195:13 - it was a
195:14 - decent answer to your question
195:19 - uh is it hard to learn java i only know
195:22 - c in python if you already know c in
195:23 - python i think you could probably pick
195:25 - up java
195:32 - uh the question is ng rx or rxjs for
195:35 - angular i haven't used angular since
195:38 - angular 1
195:39 - and so i i do not know
195:46 - uh aditya says sorry if i mispronouncing
195:49 - your name it says what are you coding
195:51 - here i just joined in um
195:53 - actually so we're kind of done with the
195:55 - coding stuff we're just doing a little
195:56 - question and answer before i wrap things
195:58 - up uh but
196:00 - we were coding
196:02 - i'm trying to find my code uh we're
196:05 - using react native which is a javascript
196:07 - library to code in a game
196:11 - just like a a very simple math game to
196:14 - help children learn learn math
196:17 - and we want it to run on
196:22 - web
196:23 - ios and android
196:29 - oh joey says ebay uses webassembly for
196:32 - barcode scanning that's interesting
196:34 - that's really interesting i definitely
196:36 - want to check that out
196:37 - i'm doing stuff with barcode scanning as
196:40 - well
196:41 - at at work so
196:43 - i would
196:44 - i want to know more about that
196:46 - joey says no semicolons and shaking your
196:48 - whiskey's psy
196:49 - sorry
196:52 - [Music]
196:59 - uh muhammad says what programming
197:01 - language should i start in to become a
197:03 - successful software developer
197:08 - unless you really know what you want to
197:10 - do like machine learning
197:12 - or whatever
197:14 - i recommend javascript because that's
197:17 - going to let you do front end and back
197:18 - end
197:20 - and it's going to let you build for a
197:21 - lot of different platforms
197:24 - there's also
197:27 - the learning curve for javascript is not
197:29 - that steep and there's a ton of free
197:31 - resources for it
197:42 - uh i have tried to teach myself coding
197:45 - through various means multiple times in
197:46 - my life usually ending in failure any
197:48 - advice for a guy who wants to succeed
197:51 - but feels too dumb to keep trying
197:54 - uh
197:55 - i would say
197:58 - when you're trying to learn when i'm
198:00 - trying to learn something new or back
198:01 - when i was first learning coding
198:03 - uh the best advice
198:06 - that i could give i think is uh
198:08 - just try to do a little bit every day
198:12 - uh and just keep going and also like
198:16 - um
198:18 - there are times when you're gonna feel
198:21 - you are gonna feel like you just can't
198:23 - get it like you don't know enough like
198:25 - um
198:26 - the law the more you learn kind of like
198:30 - the less you'll feel like that or at
198:32 - least when you feel like that you won't
198:33 - freak out about it because
198:35 - you'll know it's normal
198:37 - but there are times when i i
198:39 - think
198:42 - oh wow like i can't believe i can't
198:44 - figure this out
198:47 - now like my wife went through in the
198:49 - last year like the process of learning
198:51 - how to code and getting a job and so
198:54 - um
198:55 - i kind of went through that process with
198:57 - her of you know she
199:00 - very frequently thought like i can't get
199:02 - this right
199:03 - um
199:05 - so you're gonna have those those times
199:08 - when you feel like you can't do it and
199:10 - you feel like a failure just realize
199:12 - like everybody goes through that
199:14 - just keep trying to learn at least a
199:16 - little bit every day so even if it's
199:19 - only a half an hour of coding just keep
199:22 - trying
199:23 - okay
199:24 - now when i say every day like
199:26 - if you got to take a day off here and
199:28 - there that's fine
199:30 - you know like for me like sunday was
199:32 - usually my day that i'm like
199:34 - i'm done i'm like
199:36 - uh you know hang out with family and
199:38 - stuff so
199:40 - i don't mean like it has to be every day
199:42 - or won't work
199:44 - but
199:44 - definitely you know take a day off here
199:47 - there don't take two or three days off
199:50 - frequently right
199:52 - you're gonna want to try to keep it up
199:54 - every day uh or as close to every day as
199:56 - you can
199:58 - it'll keep things fresh in your mind
200:00 - and um
200:04 - like it'll keep you going at it like
200:06 - when you feel like you can't do it like
200:08 - the the
200:09 - just keep going so like having that that
200:12 - cadence of every day will help you keep
200:14 - going
200:16 - i think my wife had a streak of like
200:18 - over 300 days
200:20 - of straight of coding
200:23 - and that really helped her get through
200:25 - it because she wanted to keep her streak
200:26 - going
200:32 - uh joey says what which brain interface
200:34 - device are you getting it's called
200:36 - the notion so it's a new device
200:39 - so the company is called neurosci
200:42 - n-e-u-r-o-s-i-t-y
200:46 - um
200:48 - i think it's
200:51 - yeah i think that's how you spell it
200:53 - anyway
200:54 - um i got a um a developer kit so i think
200:58 - i'm gonna be one of the first people to
201:00 - get the kit
201:01 - uh
201:02 - so you can request like if you go on
201:04 - their website you can
201:06 - put in your email to get on the list
201:08 - like to get a developer kit
201:12 - um
201:13 - so i'm excited about it
201:16 - uh it's i haven't used it yet obviously
201:19 - but it's supposed to be like pretty um
201:24 - pretty accurate and um
201:27 - i'm just
201:28 - i just keep having all these ideas about
201:30 - stuff i could do like
201:31 - uh
201:33 - i don't know it's gonna be cool i don't
201:34 - wanna say too much so i'm getting really
201:35 - tired i gotta end the stream but i
201:37 - really hope to be able to do some
201:39 - awesome stuff and like
201:42 - do some streams about it
201:50 - uh
201:53 - sorry for mispronouncing that says love
201:55 - from argentina
201:56 - thank you
201:58 - uh
202:00 - joey says jesse my first code
202:01 - contributions to an open source were to
202:03 - your fus site project
202:06 - uh that's awesome now i'm a lead
202:08 - software engineer
202:10 - i said this already but it got buried
202:12 - before you found it okay i thought i saw
202:13 - you say something about this and then i
202:15 - couldn't find it again all right i'm
202:17 - glad you said it again wow that is so
202:19 - awesome
202:20 - well congratulations on being a lead
202:22 - software engineer that's amazing and
202:24 - that's so cool
202:26 - oh man i'm really like i'm i'm so happy
202:30 - you said that thank you uh thank you for
202:31 - saying that twice
202:47 - uh mark shawn says do you work or fedex
202:49 - or a different company that needs to
202:50 - scan barcodes uh i work for dick
202:53 - sporting goods uh so we scan barcodes
202:56 - like in the store basically so i'm
202:59 - working on a um
203:02 - of sale system
203:03 - that'll run on cash registers
203:06 - so
203:08 - in that context we're doing barcode
203:10 - scanning
203:17 - uh cheyenne says how can i stop
203:19 - procrastinating
203:22 - um
203:23 - that's that's really a tough question
203:28 - uh
203:37 - yeah
203:38 - trying to think of like some type of
203:41 - uh some type of tricks to get yourself
203:43 - to stop uh you could set
203:45 - i mean
203:47 - sometimes it helps to like set a goal or
203:49 - just set a timer say like i'm going to
203:50 - work on this thing for
203:52 - let's say half an hour
203:55 - and the timer goes off and you like
203:57 - reward yourself so sometimes a reward
203:59 - helps
204:00 - a reward and or punishment right like
204:03 - if i don't do this much by the end of
204:05 - the day like then i don't know i can't
204:09 - like no tv or no video games or
204:11 - something right and it's hard to do it
204:14 - like to punish yourself right
204:16 - but
204:17 - or you say if i do get it done then i
204:19 - get this extra thing right
204:21 - so
204:24 - maybe something like that
204:40 - uh once again says where should
204:42 - beginners go to start learning i
204:44 - recommend freecodecamp.org
204:47 - it's a great place for beginners
205:01 - so
205:09 - uh
205:10 - kavita says
205:12 - uh hi happy new year 2020. hey how's it
205:15 - going happy new year
205:23 - patrick's hand says what is battle math
205:25 - uh battle math is uh a um
205:29 - a game a math game
205:32 - that my son and i came up with
205:34 - um when he was learning
205:37 - math uh as when he was very young
205:41 - and uh basically it just
205:43 - when you get a
205:45 - math problem right
205:47 - you defeat an enemy if you get it wrong
205:49 - more enemies come onto the battlefield
205:52 - so it's just
205:53 - my son really liked it when he
205:56 - when he was doing that he was really
205:57 - into lord of the rings and stuff and so
205:59 - like the whole idea of it being like a
206:01 - battle was was more fun to him than just
206:04 - doing math problems
206:05 - so i'm trying to turn it into an app
206:12 - all right i have reached the end
206:15 - of the chat
206:17 - oh there's one more question so i'll
206:19 - just do this one more question and then
206:21 - then i'm done i got to go to sleep the
206:22 - last question is what tech are you
206:24 - excited for in 2020
206:27 - um
206:28 - for me personally feel free to add your
206:31 - uh your answers in here
206:33 - as well in in the chat or in the
206:35 - comments but the tech i'm most ex well
206:37 - the tech guy i'm excited for in 2020 is
206:40 - uh
206:41 - definitely my brain computer interface
206:43 - that i'm gonna
206:45 - hopefully be developing for soon
206:48 - uh super excited for that
206:51 - um i'm also uh
206:53 - i'm really excited for uh the companies
206:56 - that are working in
206:57 - like space travel
206:59 - so uh spacex blue origin um
207:04 - i'm like
207:07 - i'm super excited for for whatever is
207:09 - going on there uh i wanted to be an
207:12 - astronaut when i was little right so
207:15 - uh just the idea that um
207:19 - things are moving forward
207:21 - in terms of like people getting more
207:23 - people getting into space i think is
207:24 - really cool
207:25 - so i'm just always excited for anything
207:27 - going on with that
207:29 - um
207:31 - i let like electric cars being more
207:34 - affordable uh is a cool thing i'd love
207:36 - to get one myself
207:38 - at some point
207:39 - so
207:40 - trying to think that's
207:42 - yeah that's probably the tech that i'm
207:44 - most excited about
207:49 - yeah
207:51 - um
207:53 - yeah definitely and then in terms of
207:55 - like coding and what i do
207:57 - react uh suspense
208:00 - seems super awesome i can't wait until
208:03 - that's actually like
208:04 - usable and like fully production ready
208:07 - so
208:09 - all right
208:10 - so
208:11 - that was my last question i got i got to
208:14 - cut it off i know there's more um
208:17 - there's more stuff uh coming in but
208:20 - i'm super tired
208:22 - uh so this has been a
208:24 - three and a half hour live stream
208:27 - thank you all so much for watching uh
208:29 - everybody in the chat you all were uh
208:32 - amazing
208:33 - uh felt good to be back
208:35 - in um
208:36 - in a live coding session
208:39 - so hopefully i'll be doing some more
208:40 - like live coding sessions uh it's really
208:42 - tough between my job and you know my
208:44 - family i don't have a lot of time but
208:47 - i'm gonna do my best to try to carve out
208:49 - a little bit of time and do more of
208:50 - these
208:50 - [Music]
208:52 - anyway happy new year everyone
208:56 - i hope this is a great year for you all
208:58 - and uh until next time
209:02 - let us have a have a great have a great
209:04 - new year great new decade
209:07 - and thanks again for watching