00:14 - hey everybody I'm getting a message that
00:18 - my my stream status is bad so let me
00:22 - know if you can see this if you can hear
00:26 - me
00:51 - my seeing anything in the live chat I
00:53 - know there's a delay but alright awesome
00:56 - now I got it's kind of a long delay on
00:59 - this alright so yeah I had some some
01:05 - issues like two minutes before I was
01:08 - going to start the stream where
01:09 - everything was freezing up so I shut
01:12 - down my my webpack server and my goal
01:15 - server that I was running and I close
01:18 - some windows so hopefully hopefully
01:22 - everything will run all right I have up
01:26 - on the screen just kinda the same
01:28 - reminder that I've had for a while I'm
01:30 - not really going to go over it strings
01:33 - are going to be sporadic the next couple
01:36 - of days and then next week it will get
01:38 - back on schedule the only thing I do
01:41 - want to know is I'm going to be at
01:44 - syntax con I do have permission to do
01:47 - video there either live stream or
01:49 - pre-recorded video so if there's
01:51 - something in particular in particular
01:54 - that you all would like to see please
01:55 - let me know you can let me know the live
01:59 - chat when the comments or on Twitter
02:02 - however you prefer
02:11 - okay let's just checking it yeah it
02:14 - looks like the stream is good nobody's
02:16 - nobody's saying there's anything wrong
02:18 - with a stream so just a recap from
02:23 - yesterday where yesterday if you if you
02:28 - were washing it was uh I got stuck on
02:33 - one step of setting up the server a
02:35 - really easy and early step and that's
02:37 - setting up an alternate user account so
02:39 - we don't have to use route all the time
02:41 - and the problem was when I went to copy
02:44 - and paste the SSH key I didn't get the
02:49 - entire key so I was trying to go quickly
02:52 - didn't get the very end of the key and
02:55 - when I pasted it in obviously it didn't
02:57 - work so that was the problem so it's
03:00 - kind of nice that it wasn't you know
03:04 - something more serious but that happens
03:07 - so I should have thought I know later on
03:10 - some people in the livestream suggested
03:13 - that it might be that issue then as soon
03:14 - as I saw this suggest and I I kind of
03:17 - knew that that was probably it so that's
03:20 - that was the problem so now I do have a
03:23 - user and it does work so we're going to
03:28 - login today as this user I set the
03:32 - length for this live stream for an hour
03:34 - instead of a half an hour because I'd
03:37 - like to get through as much the server
03:38 - setup as I can hopefully all of it
03:40 - that's a little bit ambitious
03:42 - so we'll see we have to install nginx
03:46 - and node we'll probably set up on maybe
03:53 - we'll set up the SSL I might wait since
03:57 - the URL that we're going to use it's
04:00 - just a test URL it might not be the real
04:02 - one so we'll see and then hopefully we
04:06 - can get a chance to configure our server
04:12 - our node server using we're going to use
04:15 - Express and see if we can actually get
04:18 - this this app running the site running
04:21 - on the server so I don't know if I can
04:24 - get it done
04:25 - go longer than an hour I have a meeting
04:27 - at 1:00 p.m. Eastern Time
04:30 - so I can't go any longer than that and
04:32 - it is a meeting about this website so
04:35 - I've been working like crazy to try to
04:37 - get a lot of the changes requested at
04:38 - the last meeting done they were
04:41 - basically just minor user interface
04:43 - changes just some content changes and
04:46 - things so nothing big I got most of them
04:49 - finished I do this show to kind of show
04:56 - you how what things are like for me so
04:59 - I'm not I'm not usually one to complain
05:01 - that much I don't like it but just to
05:04 - let you know how things are going and be
05:06 - completely honest I'm starting to get a
05:09 - little bit burnout because I've been
05:11 - working a lot of hours so just just to
05:16 - give you an idea just to show you I'm
05:20 - going to throw up by my tracking of my
05:22 - hours I know this is probably small but
05:25 - you just see the colors so this is my my
05:30 - time sheet so in a normal day I'm
05:33 - contracted to work seven hours so
05:37 - anything green is over seven seek you
05:42 - can see the additional hours are all
05:44 - here so I'm like at least a week of
05:48 - overtime now just for this month and
05:51 - we're only halfway through the month I
05:52 - don't this so this is like just a lot of
05:57 - work for me recently and the frustrating
06:00 - thing was you know yesterday I put in
06:04 - like eleven and a half hours but I think
06:11 - at least six hours of that was spent in
06:14 - meetings so I don't know that's just a
06:20 - crazy amount of meetings for me that's
06:21 - above average but it's kind of it's
06:25 - frustrating we got a tight deadline and
06:27 - that happens so it might not be like
06:31 - this for all front-end developers but
06:34 - sometimes it just happens you got to put
06:36 - in a lot of hours because you have a
06:37 - deadline
06:39 - there's there's interruptions so I ended
06:41 - up going home and doing some work at
06:43 - home
06:43 - the tough thing was I was supposed to
06:46 - take my son to his karate lesson and I
06:48 - couldn't I had to text my wife from a
06:51 - meeting to tell her I wouldn't make it
06:53 - so that's that stuff I'm not going to
06:56 - get to see my kids for a couple days
06:57 - this week because I'll be at a
06:58 - conference so I really wanted to be able
07:00 - to spend more time with them but instead
07:03 - I ended up going home and doing more
07:05 - work and then putting them to sleep and
07:07 - staying up and doing more work so now
07:09 - I'm now I'm tired and I'm running on on
07:14 - caffeine so with that said I'm still
07:18 - going to try to do my best get this done
07:20 - on time and be happy at my meeting but
07:25 - that's that's just how it goes it's not
07:27 - always like this but occasionally you
07:29 - get a project with the tight deadlines
07:31 - in and this is just how it is so sorry
07:36 - for the you know the complaints the
07:40 - little whining session but I just want
07:44 - to let you guys know how it is you know
07:46 - without sugarcoating it so hopefully
07:51 - next week we launch and things will slow
07:54 - down enough for me to get back to a
07:55 - normal schedule and also when you're
08:00 - working this fast you don't get the time
08:02 - to try out new things and learn new
08:04 - things which I like to do on projects
08:06 - hey everybody everybody's saying hi in
08:08 - the livestream which I always like to
08:13 - try new things but when you have a tight
08:14 - deadline do it you just have to fall
08:16 - back on what you know will work and what
08:17 - you've done in the past so you don't
08:21 - really get to to develop as much at
08:25 - least that's been in my experience so
08:27 - hopefully I get a project with a more
08:29 - reasonable deadline next and you can try
08:32 - out some some new cool stuff all right
08:35 - so enough about that let's get to it if
08:38 - you want to follow along and I'll say
08:42 - this right off the bat I'm going to
08:43 - ignore the live stream a little bit but
08:47 - at the end I'll try to catch up but I
08:50 - think the only way we're going to get
08:51 - through most of this
08:52 - is if I don't take very many breaks to
08:55 - answer questions in the livestream if I
08:57 - do miss your question like and you have
08:59 - to go and you can't stick around for the
09:01 - whole livestream I'll try to answer it
09:03 - at the end or you can put it in the
09:05 - comments and I'll send an answer to you
09:08 - when I get a chance to see it later on
09:10 - so in the description I've linked to two
09:16 - tutorials on digitalocean the first one
09:19 - we did yesterday and that was how to set
09:20 - up a boon to on a digital ocean droplet
09:25 - the second one is what we're going to
09:28 - start with today and that's how to
09:29 - install nginx I just so somebody yeah
09:37 - somebody was there yesterday and that's
09:38 - what was it was the issue it was it was
09:40 - a copy and paste error it's kind of
09:45 - embarrassing but I was just trying to go
09:48 - too fast and didn't double-check that I
09:51 - copied everything that the problem was
09:54 - actually normally I would open my like
09:56 - my SSH key on my machine I would open it
09:59 - in an atom and then I would see the
10:02 - whole thing it'd be easier to copy and
10:03 - paste but I didn't actually want my my
10:06 - key to show up on the screen so if I
10:09 - would have opened it an atom and just
10:11 - Auto opened it it probably would open
10:13 - right on the screen that I was on since
10:14 - I had Adam open on that screen so
10:16 - instead I thought well I'll just use
10:18 - Nano to open it
10:20 - whoa evidently uh it's a little bit more
10:24 - difficult to copy and paste in Nano
10:26 - maybe it's just me because I don't do it
10:27 - a lot but that's that's why I did it so
10:31 - I thought I got it all
10:33 - when I was at trying to copy it from
10:36 - nano but I didn't that happens I guess
10:44 - all right so we're going to step one of
10:46 - that nginx tutorial I think it's the
10:50 - second one I linked in the description
10:51 - oh no the links are broken alright let
10:55 - me throw your link right now and the
10:57 - live chat see if this one works
11:06 - thanks for the heads-up about the broken
11:08 - links I will try to fix that after this
11:11 - videos for people watching later can can
11:15 - get the right links alright so you don't
11:21 - really need to follow along it
11:23 - Anton if you don't want to with the
11:25 - instructions but it might provide a
11:27 - little bit more explanation I'm gonna
11:31 - make this a lot bigger so we can see
11:39 - that should be big enough let me know if
11:41 - it's not I can make it bigger first
11:44 - things first we're gonna log in there we
11:49 - go see it works yeah necessarily spend
11:52 - so much time one I get I mean it was at
11:56 - least 10 minutes right that we spent
11:57 - trying to figure that out and couldn't
11:59 - figure it out so it works now alright so
12:04 - step one remember we're going to use
12:07 - sudo now because we want to we need to
12:09 - have root privileges to be able to run a
12:12 - lot of these commands so that's why we
12:15 - use sudo in front of almost everything
12:18 - we use it for and then we're going to
12:20 - say apt-get update so this is just going
12:27 - to update this this is like the package
12:30 - manager for Ubuntu the apt-get we're
12:33 - going to update the package manager when
12:38 - you're using sudo usually the first time
12:41 - you use it you type your password in and
12:42 - then if you use it very like quickly
12:44 - after that they don't make you type your
12:46 - passwords you won't have to type it all
12:48 - the time alright so we're up to date and
12:51 - now we're going to run sudo apt-get
12:56 - install nginx alright and let's see it's
13:03 - just warning me about how much disk base
13:05 - I'll have left after I install this on a
13:07 - good yes everything we're installing
13:12 - today should fit on a five
13:14 - dollar-a-month digitalocean droplet at
13:17 - least it did the last time I did that
13:19 - which wasn't too long ago maybe a few
13:21 - months ago all right step two we need to
13:25 - adjust the firewall if you remember
13:27 - yesterday we had a firewall and we
13:29 - allowed open SSH
13:32 - well now we have nginx and we need to
13:34 - allow nginx to work with the firewall
13:36 - because nginx is going to need to
13:38 - communicate with the outside world with
13:42 - people requesting to check out the site
13:49 - so let's just list and see what we have
13:52 - okay so all these right now are
13:55 - possibility that we can open up we're
13:59 - going to at least right now we're going
14:07 - to enable HTTP since we don't have an
14:09 - SSL setup okay so that's our command
14:22 - really simple straightforward UFW allow
14:24 - and then we type the name in single
14:27 - quotes we type the name of the
14:29 - application we want to allow all right
14:33 - let's let's just check this let's check
14:42 - the status to see okay and we have it on
14:45 - the list as being allowed
14:58 - now we're going to actually start the
15:00 - web server so the command we're going to
15:05 - use this is step 3 on the documentation
15:08 - if you're reading it okay this just lets
15:19 - us know let it start it so we can see
15:25 - it's active running okay it's been
15:29 - running for about two minutes and we're
15:34 - actually going to we're going to go to
15:35 - the page just to make sure that it's
15:44 - working and in the instructions it says
15:47 - go to the IP address but I've already
15:50 - pointed this sub domain to our IP
15:53 - address so if all you do if you've never
15:59 - pointed a subdomain before you go into
16:02 - wherever you have your domain hosted at
16:03 - whatever your registrar is or if you've
16:07 - changed your name servers wherever those
16:09 - names are is appointed to you go in
16:11 - there should be a place where it shows
16:13 - you all the different subdomains that
16:15 - are associated with your domain where
16:17 - the MX records are that handled an email
16:19 - for that domain and you can just add
16:22 - another one type with the name you want
16:24 - for the subdomain in this case it's test
16:25 - and then you want to select what's
16:28 - called an a record you put your IP
16:31 - address in that a record save it and
16:34 - then your sub domain will point to where
16:38 - you want to go when you're messing with
16:41 - that stuff just a word of advice take
16:45 - screenshots or or something to remember
16:49 - everything all the configuration because
16:51 - if you mess it up and you don't remember
16:53 - what it was supposed to be it could it
16:57 - could really mess up your site people
16:59 - won't be able to get to your site it
17:00 - could possibly make it so that email
17:02 - doesn't work on that domain so you don't
17:05 - want that to happen especially if you're
17:07 - working on a big site or client side you
17:09 - know site that has maybe
17:12 - a lot of subdomains you know you just
17:14 - you want to be careful about that so
17:16 - make sure you you only edit what you
17:19 - need to edit and you have a backup so
17:22 - you can restore it if you need to all
17:25 - right so that's working so we'll move
17:26 - that off and I just glanced yeah I did
17:40 - say yesterday we would disable the root
17:42 - user so we have we didn't do that did we
17:45 - okay for some reason I thought that that
17:49 - was part of those instructions that we
17:50 - are following along maybe it was in a
17:52 - different spot so I'm not going to try
17:57 - to find it right now in the middle of
17:58 - the video if we have time later on I'll
18:00 - try to do it or at some point out I'll
18:04 - try to find it explain it but yeah I do
18:08 - I really do want to disable the root
18:12 - user and I did forget to do that
18:15 - yesterday so thanks for bringing that up
18:22 - I'm actually just going to type that in
18:24 - the search bar and leave it there so
18:28 - that I see it when we're done
18:36 - okay let me get back to my tutorial
18:49 - okay so we're going to skip a little bit
18:51 - in tutorial since we don't really need
18:53 - this um let's see okay we can go to step
18:59 - four step four is just going to show us
19:06 - how to stop and start engine acts how to
19:09 - restart it we're not going to go through
19:14 - these because we we haven't changed
19:16 - anything yet this just shows you the
19:20 - commands in case you're not following
19:22 - along we run sudo systemctl all together
19:29 - start engine X we can do the same thing
19:32 - but just instead say restart engine X
19:35 - just stop and start immediately when one
19:39 - command we can reload engine X which can
19:44 - be used if you change the config but you
19:46 - don't want to actually stop and start it
19:48 - and mess up your connections you can
19:52 - just reload and then the changes will be
19:55 - enabled engine X will restart by default
20:02 - it will start if you reboot your server
20:04 - you can disable this and it's the
20:06 - command is just enable disable engine X
20:09 - these are all assuming we're saying sudo
20:11 - systemctl first then disabled engine X
20:15 - and then to re-enable it you you just do
20:21 - enable engine X so those are all really
20:23 - straightforward
20:25 - step 5 if you're falling along just goes
20:29 - over some of the directories that are
20:32 - important for engine X and that's it for
20:37 - now for this for this part of it we are
20:44 - going to
20:49 - let's uh do you get well let me let me
20:53 - ask you would you like to see how to set
20:55 - up an SSL because we can do that step
21:01 - now or we can just skip it and try to do
21:03 - it later
21:13 - I'm going to wait a second just for the
21:16 - delay to see if I get any response here
21:19 - I'll go ahead and bring up that tutorial
21:23 - just in case we do want to do that okay
21:35 - we've got a yes I'm going to copy and
21:39 - paste the link to the next tutorial in
21:42 - the live chat and then I will add it
21:45 - into the description as well
21:48 - after the video after the live stream
21:51 - ends so if you want to follow along
21:54 - we're using is the basic instructions on
21:59 - digital ocean for how to secure nginx
22:02 - with let's encrypt on Ubuntu and the
22:12 - first thing we need to do is install
22:13 - cert but so let's I'm just going to copy
22:26 - and paste this because it's a long one
22:30 - okay so this is going to install cert
22:33 - but for us
22:43 - all right we need to confirm by hitting
22:45 - answer great okay we're going to update
22:52 - our package list right I'm sorry I said
23:02 - the first command would install it this
23:04 - is pre prerequisite command so obviously
23:10 - that the apt-get install command is what
23:12 - really installed it I am going really
23:17 - quickly you can read more about what's
23:19 - happening well right now it's actually
23:21 - installing it but you can read more
23:24 - about it in the the instructions on
23:29 - digital ocean that I just length
23:37 - okay
23:45 - let's we're going to be on step 2 now
23:51 - and we're going on the web route plug-in
23:54 - and so the web route plug-in if you not
23:59 - following along I was summarized a
24:01 - little bit what it's saying it needs to
24:03 - check a file in the directory that's
24:07 - cooked it's going to be dot well-known
24:09 - it's going to be the name of the
24:10 - directory so we need to allow access to
24:14 - that directory so we're going to edit or
24:16 - nginx config to allow access to that
24:22 - directory so let's go and I'm going to
24:28 - show you in the instructions it says use
24:33 - Nano to do this but I have an easier way
24:43 - so let me bring this up here if you've
24:46 - never seen this before I know the fonts
24:48 - really small I'm not I'm not sure how to
24:51 - make the font bigger on this right away
24:54 - so sorry about it being small
24:56 - this is FileZilla it's just the client
24:59 - that normally you can use to like FTP
25:01 - and to server in this case I've set it
25:03 - up with with SFTP so it actually uses
25:07 - the same SSH key that we were using the
25:10 - SSH in on the terminal I like this
25:14 - better because I can open the file in my
25:18 - code editor which is Adam on my my local
25:21 - machine and it's so much easier for me
25:24 - to edit this then if I try to edit it
25:28 - with Nano
25:29 - so that's where I'm going to differ a
25:31 - little bit from these instructions it's
25:33 - entirely up to you some people are
25:35 - really good with terminal editors
25:36 - especially some people were just like
25:39 - really really good with them and can go
25:41 - really fast I'm not one of those people
25:44 - so we're going to go to the directory
25:50 - that says we need the
25:57 - actually the theaters work now I
25:59 - remember what happened last time I did
26:02 - this hmm
26:12 - all right the last time I did this I
26:16 - remember I think I had an issue with
26:19 - this because my user did not have access
26:22 - to these files so normally you'd have to
26:27 - run a syn sudo so the way around this is
26:29 - actually I guess it's actually good at
26:32 - this point that we didn't disable the
26:34 - root user I don't recommend doing this
26:36 - or leaving this this option open but for
26:41 - now this will speed things up for us I'm
26:44 - going to actually make the user root and
26:47 - now I'm going to shut it a previous
26:51 - connection now I'm going to try to go in
26:53 - with this okay there is a way that I
26:58 - could have just let my user edit those
27:01 - files and log in like that but I don't
27:03 - want to have to do that because it will
27:04 - just take more time right now but that's
27:05 - probably the better way if if you had
27:09 - more time but for now we can work we do
27:12 - this then we'll switch it back to using
27:13 - my user and then at some point we can
27:16 - just totally disable the root user but
27:18 - this should speed things up for now if
27:22 - anybody has more experience with this
27:24 - and this is like really crazy let me
27:27 - know if there's some reason why I really
27:29 - should not do this I would like to know
27:35 - all right so we need to get it going to
27:38 - nginx it is and sites available and
27:45 - default so I'm going to click view /
27:51 - edit and there we go so now let's open
27:56 - this file and Adam and it's so much
27:59 - easier to edit like this okay so now
28:03 - we're going to continue on we're going
28:05 - to add this ssl to the server block
28:13 - so this is Oh when you see your nginx
28:19 - config when you see this hash sign
28:23 - that's basically like a comment tag so
28:26 - these are all commented out there's a
28:29 - lot of stuff that's you know just
28:32 - examples of what you could use so we
28:43 - want to add this inside our server block
28:46 - so this is our server block it's a
28:48 - server and then we have this open
28:50 - bracket and then it closes where's it
28:54 - clothing at all the way down here okay
28:56 - so closing lay down here so a lot of
28:58 - this stuff is commented out at this
29:00 - point but we're going to just add this
29:07 - location under here it should be good
29:09 - right there we'll certainly find out
29:11 - saying if it's not but I'm pretty sure
29:13 - that'll work
29:14 - I just saved that so I just hit control
29:18 - s or command S and we're going to hit
29:22 - yes and now this is saved on the server
29:26 - if I had left it to where the user we
29:30 - were using for for this was Jessie
29:34 - instead of root when I would have tried
29:36 - to save it it would not have let me save
29:38 - that because I wouldn't have had right
29:40 - access to that file okay let me know if
29:51 - I'm going too fast or if I'm losing any
29:53 - of you and I can I can always try to
29:56 - explain a little bit more or slow down a
29:59 - bit okay we've gotten through the first
30:04 - half hour and you're not I'm not too bad
30:09 - on time we'll see if we get through it
30:10 - all and now let's go back to our
30:17 - terminal
30:21 - and we're going to do sudo nginx T this
30:30 - is going to check if we have syntax
30:32 - errors in our config file and everything
30:36 - is okay awesome since we don't have any
30:40 - errors I'm going to restart nginx
30:44 - so I'm not going to type this all out
30:47 - but you can see it's systemctl restart
30:49 - nginx and we've obviously you suit up
30:53 - okay so everything's restarted and they
31:03 - give us the next step is a really long
31:05 - command where it wants to know the path
31:13 - for our Webber and the the name of our
31:17 - domain so what I do I'm going to copy
31:21 - this and then I'm going to come over to
31:24 - Adam I'm going to copy in here and edit
31:26 - it here since it's easier to do it here
31:28 - than on the command line I can take
31:30 - advantage of the slight benefit of
31:37 - multiple cursors so we have test our
31:43 - catechetical comm it doesn't matter how
31:45 - many times I try to spell that we're
31:47 - catechetical is always hard to spot see
31:49 - it easy to kiss okay I think I did it
31:51 - right and I think this is the default
31:55 - path for nginx so I'm assuming that this
32:00 - dis will work because we didn't change
32:01 - our path okay so now I'm going to copy
32:06 - that paste it okay enter email address
32:16 - okay so now this let's encrypt is going
32:18 - to ask some questions to set up the SSL
32:22 - so okay so that's my work email and
32:36 - I'm just going to agree and share your
32:43 - email address yeah sure they can send me
32:49 - stuff and you see we're getting a new
32:58 - certificate uh-uh
33:04 - oh shoot I forgot to put WW for my I
33:18 - wasn't thinking so if you want to do a
33:21 - sub-domain and you want it to be
33:23 - reachable with with or without the WWE
33:26 - actually have to make two records and I
33:29 - don't know why I forgot to do that
33:31 - because I've I've done it a lot but for
33:34 - some reason I forgot
33:46 - so actually I don't really care about
33:51 - that right now so what we're going to do
33:52 - is let's just go back here and let's
33:59 - take out the w w since this is a test
34:02 - I'm not I'm not worried about it so we
34:04 - are gonna have to go through this again
34:06 - so just be was it like 15 seconds last
34:09 - time
34:13 - congratulations it works see if you I
34:19 - was going to go in and change that
34:20 - record for this sub-domain I would just
34:22 - put W W test and then I would point the
34:26 - a record to the same place we will do
34:28 - that when we switch it over the main
34:30 - domain for the site is just going to be
34:32 - catechetical com
34:33 - we'll do that then but for now since
34:36 - it's just test it's not really worth the
34:39 - effort
34:41 - alright so we have our certificate and
34:45 - it's that easy to get in SSL so there's
34:48 - really there's no excuse to not have an
34:51 - SSO it was free and it takes five
34:54 - minutes
34:54 - Oh somebody did comment if you're using
34:58 - I is it is a bit different
35:01 - so yeah Windows is a GUI base so yeah it
35:05 - is different totally different
35:08 - instructions for that and I don't work
35:11 - with it we have other people here that
35:14 - work with the Windows servers and so
35:18 - I've never had to I don't even know how
35:20 - to do that okay let's go next step
35:38 - it says we can check if the files are
35:42 - there I'm not going to check because I'm
35:48 - pretty sure the default locations always
35:51 - always works I'm just going to skip that
35:52 - for now but if you wanted to there's if
35:55 - there's a command you can use to check
35:56 - to make sure that your your your keys
36:01 - for your SSO are there we want to
36:04 - generate now a a strong diffie-hellman
36:11 - group okay so I am going to do this it
36:15 - does take a few minutes but it looks
36:16 - really cool on your terminal when it
36:19 - happens so let's let's do this so this
36:23 - is the command that we're going to use
36:25 - it's super long so once again we copy
36:27 - and paste this is what I say it looks
36:33 - kind of cool
36:34 - I like this I like this thing I once was
36:41 - doing this at home and we had somebody
36:44 - visiting and they saw my screen and like
36:47 - asked me throw some sort of hacker or
36:49 - something because they thought it looked
36:51 - really crazy which I'm not but it does
36:55 - look really cool okay so while we're
37:04 - waiting on that I'll check the little
37:05 - bit in the live chat someone says a PC
37:09 - user they're not familiar with the Linux
37:11 - patch yeah unfortunately things are
37:14 - going to be slightly different if you're
37:16 - doing this on a PC some of the commands
37:21 - are the same and one thing to remember
37:23 - too I am now logged into a Linux server
37:28 - so I'm no longer on my local machine so
37:31 - even if you're on a PC if you SSH into
37:36 - the Linux server you're using Linux
37:38 - commands so unless you're using a
37:41 - Windows server these are going to be the
37:43 - commands you're using whether and it
37:45 - doesn't matter how you access that
37:47 - server you can access it through the
37:48 - browser through digital
37:50 - admin panel you could be using I mean
37:53 - you can access through the browser on on
37:54 - Chrome OS you can be on a Mac Windows or
37:59 - Linux but no matter what you're still
38:02 - executing these commands on a Linux
38:03 - server so even if you are on a PC it is
38:07 - good to know these linux commands
38:09 - because odds are at at some point you
38:12 - know unless you're going to be doing
38:13 - like strictly you know Microsoft based
38:17 - like dotnet development then at some
38:21 - point you're probably going to do some
38:22 - work on a Linux server yes you see this
38:30 - does take this they go up it should be
38:34 - done soon it's been a minute or two
38:35 - already I'll just skip ahead a little
38:39 - bit on the instructions on step three
38:44 - we're going to configure SSL on the web
38:46 - server so if you remember at first
38:52 - talking about the the firewall which
38:55 - will switch later on but in the firewall
38:59 - we did not allow nginx to serve AC TPS
39:03 - and then in the nginx config we only had
39:06 - things going through port 80 which is
39:11 - the normal port for regular HTTP traffic
39:14 - but we need to switch it up and go
39:16 - through allow SSL traffic to go through
39:19 - I think the port is 433 I think that's
39:23 - the default port the wind up using 443
39:30 - sorry 443 so we will need
39:42 - we need to go to our configuration files
39:51 - again as soon as this is done
39:52 - I could probably log in on a separate
39:56 - tab if it starts taking too long and try
39:58 - to get some of the other stuff done and
40:05 - Alberto and the live chat you suggested
40:09 - if you want to practice with a Linux
40:10 - server use VirtualBox and install Ubuntu
40:14 - on it yeah that's that's good advice if
40:18 - you don't want to actually pay for a
40:20 - Linux server or you can use I mean
40:23 - doesn't have to be able to you can use a
40:25 - different version of Linux if you want
40:28 - you can probably do it in docker as well
40:34 - if you use a docker container with
40:37 - whatever version of Linux you want I'm
40:41 - sure there's some other some other ways
40:43 - that I'm I'm forgetting if you use
40:49 - something like cloud 9 so that at sea 9
40:52 - io they start you off with it's a cloud
40:58 - development environment that you can
41:00 - access through your browser and it was
41:04 - free I think it's still free they give
41:08 - you a terminal right there in your
41:09 - browser and you can practice those
41:12 - commands and there as well that's
41:14 - probably the most user friendly of all
41:16 - the options that that I mentioned that
41:19 - I'm seeing here in the live chat I would
41:23 - try cloud 9 isn't the only cloud
41:26 - development environment there are a few
41:28 - others as well so try try that out too
41:32 - because then you don't have to know
41:33 - anything about setting up your own your
41:36 - own server it's already set up for you
41:39 - and you can just practice the commands
41:47 - well sorry guys this is taking longer
41:51 - than I remember it taking okay all right
41:59 - it works okay somebody mentioned them
42:08 - that in the live chat
42:09 - cloud9 is free but you have to get your
42:11 - credit card info so you know what I do
42:13 - remember that now when I signed up for
42:15 - it you didn't and then they changed it
42:18 - and now you do have to add a credit card
42:20 - so you can still use it for free and
42:21 - they won't charge your card but you need
42:23 - to have a credit card for that so yeah a
42:26 - little bit of a barrier to entry there
42:30 - I'm trying to think did it get acquired
42:33 - I the change came I think maybe right
42:36 - after c9 got bought out that it was a
42:41 - while ago this so I can't remember
42:42 - exactly what happened okay so now let's
42:51 - go to step 3 and we need to configure
42:57 - nginx to use SSL we need to create a
43:07 - config sentence mr.
43:17 - all right so it's saying that we want to
43:20 - use Nano to open this and edit and
43:25 - create the the file but like I said I
43:29 - don't want to use an ax so this is going
43:30 - to differ sudo and instead of Nano I'm
43:35 - just going to say touch and then I'm
43:39 - going to copy some of this in so if
43:42 - you're not familiar with the command
43:43 - touch that just creates a file I'm
43:46 - assuming that this will work on it blue
43:48 - tube
43:48 - I know it works on the Mac and we need
43:51 - to change it to our domain okay and then
44:03 - now we can bring up our FileZilla window
44:08 - and we're close swear T in the nginx
44:12 - directory here so now we just need to go
44:14 - to snippets and here we go there's the
44:18 - file we just created file size zero
44:20 - because you don't have anything in it
44:21 - yet but now we can view and edit it so
44:30 - we're going I'm going to copy and paste
44:39 - copy and paste our SSL stuff we need to
44:44 - change example.com to our domain which
44:51 - is catechetical I love that it
44:54 - auto-completed that for me I don't have
44:56 - to try to spell that out every time so
44:58 - I'm going to save that and wait yes
45:03 - and I don't think we need this file
45:05 - anymore so we can go ahead and close it
45:07 - out
45:13 - okay the next thing we're going to do is
45:15 - we're going to make another snippet and
45:19 - when you could do this all in one config
45:22 - file if you break things out into
45:23 - snippets it can make your file a little
45:25 - bit more clean so if you've done this
45:27 - before this is not exactly how you do it
45:30 - it you don't have to do it this way and
45:33 - in fact I've seen different tutorials on
45:36 - digitalocean
45:37 - that do it you know either way so I
45:41 - think it just depends on what would you
45:44 - prefer and how long your config file is
45:46 - going to be is whether or not you want
45:47 - to break it out I don't know if there's
45:51 - another advantage to it or not you can
45:52 - let me know in the in the live chat or
45:54 - the comments if if you know okay
45:59 - all right about quarter after okay I can
46:02 - probably do this for maybe another half
46:05 - an hour I want to leave a little bit of
46:07 - time to prepare for the meeting that I
46:08 - have at 1:00 p.m. Eastern Time so let's
46:13 - keep working we're going to go we're
46:20 - going to make another file we need to
46:21 - make another snippet here and I've just
46:24 - copied the the path and now let's check
46:30 - it out let me refresh this and you can
46:35 - see it's appeared here let's edit
46:47 - okay and they give us some uh some
46:51 - boilerplate security config I may go in
46:55 - and edit this at some point so but this
46:58 - will work for now and I'm going to go
47:03 - through all this right now but it's just
47:08 - a lot of ways you can configure things
47:12 - and they do they give you a link in the
47:15 - in the directions where you can go to
47:19 - read more on you know what these things
47:21 - do so yeah so like I said these will
47:25 - probably get adjusted at some point but
47:27 - for now this will work so I just saved
47:30 - that said yes and now that'll be it'll
47:38 - be saved now we need to adjust our nginx
47:42 - config so let's go back let's see if I
47:47 - still have to still have it open there
47:50 - we go I still have it open so our sites
47:55 - available substituting them
48:05 - so it's asking us to make a backup of
48:09 - our current so that's this probably good
48:10 - idea let's make it back up so let's
48:18 - let's run this command is going to copy
48:20 - this command because it's long I'll tell
48:22 - you what it does though this is just
48:23 - copying the CP it's going to copy this
48:27 - file which is default and it's going to
48:29 - make another file exactly like it that's
48:31 - default dot bak that's our backup so now
48:36 - we can we can mess with our default
48:39 - without fear that we're going to break
48:41 - everything you know beyond repair so now
48:46 - we're going to open up that default
48:48 - which we already had open over here su
48:51 - su this is the default file so we don't
48:53 - need to open it again if you never
48:55 - closed it and inside the server block
48:58 - you want to find that server listen 80
49:01 - and we had this SSL configure so we're
49:12 - going to modify this and we're going to
49:16 - allow basically we're going to shut down
49:20 - traffic on port 80 like unencrypted
49:23 - traffic and make everything go through
49:28 - through SSL so I'm going to copy and
49:36 - paste some of this and then we are going
49:41 - to have to put in our own our own domain
49:49 - so anywhere we see example.com needs to
49:53 - change and remember we haven't used that
49:57 - ww but yeah actually we do want to
50:01 - redirect all the WW stuff but we don't
50:06 - want to yeah what we don't want is
50:11 - wwe.com redirecting to the HTTPS version
50:16 - of WWE champ
50:18 - because we don't have an SSO for that so
50:20 - either now or at some point later on
50:23 - we'll have to redirect WWE traffic to
50:27 - not use that WW and that should prevent
50:34 - anybody from getting an error message
50:36 - saying you know hey this there's no SSO
50:39 - the site's not secure things like that
50:42 - so let's go change this test
50:50 - Dodd's catechetical comm oh man my
50:58 - Spotify just quit on me
51:01 - got a put on a second I mentioned in a
51:07 - previous video that I always play music
51:10 - in the background and it helps I don't
51:13 - get distracted by voices uh you know in
51:16 - my in my building and also it helps me
51:19 - to talk louder
51:21 - because you know everybody talks louder
51:24 - and they have headphones on listening to
51:25 - music okay alright I'm starting to slow
51:39 - down a little bit on I think two reasons
51:41 - one I don't want to mess this up into I
51:43 - am a little bit tired today so sorry for
51:47 - the slow pace for those of you who don't
51:49 - know anything about this it's probably
51:51 - better that I go slower if you're a
51:53 - little bit more knowledgeable you might
51:55 - be getting bored so I apologize okay let
52:04 - me um
52:10 - let me bring over just so you guys can
52:14 - see where I'm at I want to actually
52:16 - bring this over and this is those the
52:22 - instructions on digitalocean that I
52:28 - linked to earlier that way
52:32 - you can actually see where I'm at and
52:35 - follow along so we just did this step
52:40 - and now we're on this step we're
52:43 - actually going to start a completely new
52:45 - server block here and let me duplicate
52:56 - this as well so that when I switch over
53:00 - I can copy and paste more easily because
53:04 - I'm going to need to switch back and
53:05 - forth so we need to go at the end of
53:13 - this server block and we'll just make
53:17 - another one I know a lot of this is
53:19 - already here and we could just uncomment
53:21 - it but I think it'll be simpler at this
53:27 - point to just copy and paste what they
53:30 - have and a tutorial maybe maybe not let
53:40 - me see if it's close enough
53:49 - then actually let's not let's do this
54:03 - and now we can open another block here
54:11 - and we don't need that closing tag
54:14 - because we already had one down here we
54:17 - can uncomment on this stuff so that will
54:24 - open up for 443 to listen there and now
54:29 - we need to include our snippets remember
54:34 - we made those two snippet files and this
54:37 - is where you think these could be added
54:40 - in here but to make things less
54:44 - cluttered we just include this and we do
54:49 - need to change that example now whatever
54:55 - we put in these snippets is going to
54:57 - load as if it were right here in this
54:58 - document but we don't have to to have it
55:01 - all in there so it's kind of nice makes
55:04 - a little bit more clean and let's see
55:13 - alright this should work sent because we
55:20 - are redirecting everything here anyway
55:22 - so all this other stuff that was
55:25 - uncommented it should be fine to keep it
55:27 - in this server block instead of this one
55:31 - actually let's move this one down - I'm
55:38 - not on a percent sure that this
55:39 - absolutely has to go here but we'll give
55:45 - it a shot
55:48 - so we've saved it I'm going to upload it
55:53 - we're going to skip over this
55:55 - alternative configuration here
55:58 - because we don't want a low of oh such a
56:01 - traffic right now now we need to adjust
56:08 - our firewall
56:14 - so I'm not going to look at the status
56:16 - we can we already know we looked at it
56:18 - earlier in the stream we know so far
56:21 - we've only done HTTP and instead we're
56:25 - going to copy and paste these first what
56:29 - we're going to do is we're going to
56:31 - allow full so we're going to allow nginx
56:37 - full which would be both both types of
56:43 - traffic and then we're going to delete
56:47 - so this is kind of an odd way to do the
56:49 - command and we're not saying disallow or
56:52 - disable we're saying delete allow okay
56:55 - which is scoops and I forgot there we go
56:58 - forget that a little single quote now we
57:05 - will check the status just to make sure
57:10 - it worked and here we go so we have
57:12 - nginx Kol
57:15 - all right let's check our nginx if you
57:18 - remember we did before we use this
57:21 - command nginx - T and that checks for
57:25 - syntax errors all right everything is
57:27 - good so we did a good job I was a little
57:31 - bit worried with my editing of that file
57:34 - trying to do it quickly that I would
57:36 - mess it up but no syntax errors might be
57:41 - some logic errors but we'll find out
57:44 - soon enough now we're going to restart
57:46 - it so the changes will take effect okay
57:48 - and here's we're going to do we're going
57:52 - to do an SSL report and this will let us
57:55 - know so I'll do it right here we do need
57:57 - to change it to the domain that we're
58:02 - using so test up catechetical con okay
58:12 - we'll let that go we'll come back to in
58:13 - a second is it'll take a minute we want
58:17 - to set up Auto renew okay so this is
58:20 - important the the biggest at least that
58:25 - I know of the biggest
58:26 - of using free SSL from let's encrypt is
58:31 - that it expires I think it's every three
58:34 - months yeah so every three months it's
58:37 - going to expire you have to renew it so
58:38 - if you don't want to have to mark your
58:40 - calendar and manually renew then you
58:45 - want to set it up to Auto renew so we're
58:48 - going to go into this this crontab if
58:52 - you're not familiar with cron I I
58:54 - believe it's short for like
58:56 - chronological so they're basically
58:58 - things you can do at given intervals in
59:00 - time sorts of things that will
59:02 - automatically happen on your server so
59:06 - the way to configure this it's it's a
59:08 - little bit weird but it looks a little
59:10 - bit weird but it makes sense once you
59:12 - you know once you get used to and see it
59:14 - so for this I am going to use Nanna so
59:17 - it it actually gives you a choice to use
59:21 - them or actually I've never used this
59:25 - one uh but we're going to use Nano and
59:28 - it even says Nano is the easiest switch
59:31 - using to her Nano all right this is what
59:33 - it looks like all this stuff up here
59:36 - this is you know all just kind of
59:39 - instructions it lets you know a little
59:41 - bit more about it but we're going to
59:44 - skip down here and just edit actually
59:47 - can we let's let's just copy so we don't
59:54 - mess it up we're going to copy and paste
59:56 - and whoops what did I just do okay
60:10 - that's weird
60:17 - okay so I'm actually going to move this
60:25 - so it's it's more closely aligned with
60:28 - the spot it's supposed to be in because
60:30 - this just shows you the the border I
60:33 - don't think this space will mess it up
60:35 - oh but we'll see when it's time to renew
60:39 - let me know if it messes it up I can't
60:41 - remember if I put the space in before or
60:43 - not so let me just show it it it does
60:49 - well I can we can just run it straight
60:52 - from straight from here says run the
60:54 - following command at 3:15 a.m. every day
60:58 - you can choose any time actually so this
61:04 - is C this is minute hour right so let's
61:07 - change this and go to 104
61:14 - the reason being everybody that's done
61:18 - this tutorial in just on the default is
61:20 - putting this in is the time to renew so
61:22 - maybe it would be a little less stress
61:24 - on their system if if we renew it a
61:27 - different a different time I mean I'm
61:31 - sure they can handle it but just in case
61:34 - we'll go set it for a different time
61:36 - okay and then the rest of it is I mean
61:39 - this renew is actually the come in we
61:41 - want to run to renew the certificate
61:46 - quiet means it's not going to output
61:49 - information and it's not going to ask
61:51 - questions and wait for us to input right
61:53 - because we're not even going to be doing
61:55 - this it's being done automatically so it
61:56 - will get no input if it asks this part
62:02 - of it is going to reload nginx if it's
62:10 - actually renewed we do need to reload it
62:12 - for the changes to take effect you
62:18 - probably don't have to run this every
62:19 - day so if we wanted to edit it you could
62:21 - run it you know you have 90 days so
62:24 - every day is probably overkill but it's
62:30 - not going to
62:30 - our system resources or anything to run
62:32 - it every day if you wanted to so we're
62:34 - just going to save and then if you're a
62:36 - nano you save by hitting ctrl X to exit
62:40 - that might be a little weird there's no
62:42 - it doesn't say st. anywhere so you go to
62:44 - exit but it's going to ask you first do
62:48 - you want to save I'm going to type Y and
62:51 - then it asks us what we want to name it
62:54 - and we'll just go with whatever the
62:57 - default is and so now we have the Auto
63:02 - renewal set up and let's go back and
63:05 - check our server setup all right and we
63:07 - got an A Okay not bad I wanted an A+ I'm
63:13 - not going to try to figure out why I got
63:15 - the Y I got just the a right now
63:19 - normally I can get an A+ on on a Linux
63:23 - server so I'll have to figure that out
63:26 - later on but an A is still pretty good
63:29 - and that's it that's it for the SSL
63:35 - portion of it I'm going to go now to our
63:44 - our node setup and let me bring this
63:49 - over I'm going to copy and paste this in
63:57 - the live chat this is where we're going
64:01 - now
64:08 - and we're going to go so we've done all
64:11 - these things right we've set up a bun -
64:13 - we've set up our hostname we've done
64:18 - we've set up nginx
64:20 - and we have our SSL now we need to
64:25 - install a node okay so let's just follow
64:34 - the instructions I don't think I need to
64:36 - do this because I'm already in the
64:38 - directory I need to this will just take
64:40 - me back to the home directory I guess
64:43 - we'll do it just to be sure but I mean
64:44 - you can see obviously I'm in I'm in the
64:47 - home directory see I didn't actually
64:49 - move anywhere so I'm just going to use
64:55 - the default up probably if I if I have
64:59 - more time maybe I would check to see
65:00 - like okay is there a newer version I
65:03 - usually do check and see you know is
65:05 - there a newer version of this see when
65:07 - this was done this was like November 1st
65:10 - 2016 it's not that that long ago but
65:13 - maybe we might want to run into a
65:16 - version of of node but this version
65:18 - should be fun
65:20 - and
65:21 - [Music]
65:30 - let's see we're going to run it I'm not
65:35 - gonna inspect this I've done this before
65:37 - when I run this I'm not going to expect
65:39 - inspect it right now because we ran out
65:41 - of time but basically this downloads the
65:45 - script you need to install everything as
65:47 - a bash script so it's like a set of
65:50 - instructions that it'll run
65:51 - automatically and now by running this
65:55 - I'm basically saying hey up you know run
65:58 - all those instructions in that batch
66:00 - file so we can see it it's doing its
66:06 - thing it's getting node it's getting it
66:11 - at least all the all the stuff that we
66:12 - need the next step is actually going to
66:18 - you know run this install node all right
66:21 - it actually tells us down here that the
66:24 - next step is to run this to reinstall
66:29 - it'll probably I'm guessing it will ask
66:32 - us at some point if we want to do this
66:34 - because it's going to take up some space
66:44 - oh I didn't that's odd it usually does
66:48 - okay now we're going to install this
66:53 - build essential this is necessary okay
66:57 - it asked me that time this is necessary
66:58 - for some packages to work so we don't
67:04 - have to install NPM separately you can
67:07 - see here it says we've it's already come
67:09 - packaged with what we had run previously
67:17 - okay and just to make sure this works
67:21 - we're going to okay I know I usually
67:28 - don't go straight into Nano but this is
67:30 - really simple so we're just going to put
67:37 - it in there and all this is going to do
67:40 - is I mean it this is JavaScript so this
67:44 - should be somewhat familiar if you're
67:46 - used to JavaScript we just have a
67:50 - variable here a variable HTTP this
67:53 - require HTTP okay so now we're calling
67:56 - this HTTP we're going to create the
67:58 - server right we're gonna give it a
68:01 - content type and it's always going to
68:04 - say is hello world it's going to listen
68:07 - on 8080 that's like the default kind of
68:11 - port that everything always is on and so
68:14 - that's all it's going to do so a request
68:16 - is going to go to nginx but it's going
68:20 - to get passed along to note note is
68:25 - actually going to process that request
68:26 - and then pass it back out then well
68:29 - that's that's the idea let's see if it
68:31 - works
68:36 - have we not gotten we might not have
68:38 - gotten that far yet right we may have to
68:40 - do some configuration for per engine
68:46 - expert to work like that but we can test
68:47 - it through the terminal as well so we're
68:51 - going to control X
68:56 - and save yep there we go
69:02 - so we need to make that file executable
69:04 - by default it is not so this is how we
69:07 - do that now we can run it so now the
69:16 - server is running right so it's running
69:23 - on port 8080 so as we can we can test
69:27 - this we have to open up another window
69:29 - so let's see it's the stage at and what
69:41 - is my let me find my IP that should work
69:50 - there we go
69:52 - and oops didn't copy
70:04 - okay so Kuro if you're not familiar with
70:06 - curl uh this is going to grab we give it
70:10 - a URL and it's going to grab the data
70:12 - from that URL and in this case the only
70:15 - thing is a little world so it does work
70:19 - now this is not ideal right we've lose I
70:25 - don't need that right now this is not
70:28 - ideal right we run this manually and
70:30 - then it just sits here we have to open
70:32 - up a whole nother tab or what happens if
70:35 - some have you know this crashes we have
70:36 - to log back in our server manually we
70:38 - don't want that so we want it to
70:40 - automatically we want to be able to
70:45 - start it and then keep working in the
70:47 - same tab and then have it automatically
70:49 - restart if something were to happen and
70:51 - there are different ways of doing this
70:54 - in this case we're just going to follow
70:56 - the default instructions here and we're
70:57 - going to use p.m. - we can actually stop
71:05 - this if you want to stop a process you
71:09 - hit control
71:10 - II hit control-c and then that stops
71:13 - whatever server you're running and
71:15 - that's the same way like if you're
71:16 - running wet pack pack locally or you're
71:19 - running a server with uh with gulp -
71:22 - same thing control C alright so we're
71:27 - going to install this that G flag means
71:32 - globally so when you use NPM if you want
71:35 - to install something for global use not
71:38 - just in that particular folder you put
71:40 - the G flag in the command alright and
71:47 - now we can start this same thing with PM
71:52 - - there we go
71:58 - alright so we got a bunch of cool stuff
72:00 - here and now it says that we have we
72:07 - have this running it's the name is hello
72:10 - and you can actually do have a custom
72:13 - name there flags to be able to name it
72:15 - whatever you want and it's online tells
72:18 - you you do it gives you some stats about
72:20 - it there's also a dashboard that you can
72:25 - work in so if you go key metrics you can
72:29 - have kind of this live dashboard that
72:30 - runs in your browser so you don't even
72:33 - have to use the terminal to check up on
72:35 - the status of your application skip this
72:42 - if you did this all right so we want
72:51 - things to run when the server starts up
72:53 - this is how we set that NPM - ah I
72:59 - didn't notice it sudo that's kind of
73:03 - weird guys the sudo there there we go
73:07 - okay
73:16 - all right so
73:25 - we're going to copy this and let's
73:36 - actually let's see if we can get the one
73:40 - that it put out let me check the time
73:46 - all right
73:48 - hey we're going to be I got to wrap this
73:51 - up so I get ready for my meeting we're
73:55 - actually almost to the point where this
73:57 - thing is going to run you know we just
74:00 - have to finish up this and a lot of this
74:03 - is not you can see some of its optional
74:06 - that second step that I mentioned you
74:08 - have to do with nginx this part is just
74:13 - allowing nginx to pass through things to
74:16 - the node server see and that's it so
74:20 - really the only step you'd have to do
74:22 - after this is just editing your server
74:26 - block and nginx to look on to pass this
74:32 - through to port 8080 for localhost and
74:35 - that really is it and then at that point
74:40 - instead of having it instead of starting
74:43 - this hello j/s file that we did we get
74:45 - rid of that hello j/s file we could
74:48 - actually use get to pool or repo of this
74:52 - next this react site that we're using
74:56 - and we'd run and set we've been running
75:00 - next we were running the dead version of
75:04 - next let me show you yeah so we run
75:10 - windowing yarn run dev okay but actually
75:17 - I'll show you in my package JSON file
75:20 - what we want to run if you're on the
75:22 - server you can run you could run yarn or
75:27 - if you don't want to spoil your on the
75:29 - server you can just leave it with NPM
75:30 - which is fine too so you can run NPM
75:35 - next build
75:38 - and that will build your application and
75:40 - then start and when you start it now
75:44 - that will be running instead of the
75:47 - hello J s file so when someone goes to
75:49 - your site they'll see your react
75:52 - application I'm probably going to do
75:55 - that later on today so I won't show you
75:58 - that but really that's kind of of all
76:02 - the steps we've just done it's not too
76:05 - difficult to do the only tricky thing is
76:08 - like you want to run this with p.m. - so
76:10 - you want to make sure I have never
76:12 - gotten yarn to work with p.m. - so I
76:15 - always have to use NPM as the command
76:18 - instead so like I said you would you're
76:20 - on NPM
76:21 - build in an NPM start but other than
76:27 - that that's the only kind of trick that
76:29 - I've ever the only snag I've ever run
76:31 - into with that so so the long video
76:36 - today don't have as many people sticking
76:40 - around as we usually do I totally
76:42 - understand this is kind of dry it's not
76:44 - nearly as fun as the purely front-end
76:46 - stuff which we'll get back to that
76:48 - no more server videos now at least not
76:51 - for a while so if you're sticking around
76:54 - still thanks I know it was long I know I
76:58 - I don't know if I could have stuck
77:00 - around for this into our video I will
77:04 - I'm not sure exactly when the next time
77:06 - I'll be streaming is I will try to
77:08 - stream the next couple of days when I
77:11 - can from the conference or basically
77:14 - from where where I can get good enough
77:16 - Wi-Fi to stream otherwise I'll have to
77:18 - do some pre-recorded videos and then
77:21 - just upload them whenever I can get some
77:22 - a good connection sorry I didn't get a
77:27 - chance to go through all the live chat
77:29 - today I will save this chat and I'll
77:32 - look if someone had some some questions
77:34 - that didn't get answered please post
77:37 - them in the comments if not maybe I'll
77:40 - try to save this and maybe in a later
77:43 - livestream answer some of these
77:45 - questions hopefully if you ask that your
77:49 - your tuning
77:49 - and again or can at least watch the
77:51 - video later on oh cool I'm glad we had
77:56 - some people so people were still here
77:57 - they're still watching awesome good I'm
78:03 - glad at least it means something you got
78:04 - something out of this it's tough stuff
78:07 - and you just got to practice it and the
78:09 - thing is if you're doing front-end stuff
78:11 - you won't really do this often enough to
78:13 - really you'll memorize everything you're
78:16 - always going to have to go back to the
78:18 - instructions and there's all you're
78:19 - going to be so parched that you just
78:21 - forget and mess up on so that's how it
78:25 - happens but it is something that you may
78:30 - have to do one day so it's good to at
78:31 - least have seen it at least once alright
78:36 - so I only have a few minutes to get Sam
78:39 - I'm eating now thank you so much for
78:42 - watching I'll have some videos for you
78:45 - soon and I'll see you maybe tomorrow
78:49 - maybe the day after
78:51 - have a great day