00:00 - hi i'm andrew from the youtube channel
00:02 - follow andrew so if you like this
00:04 - content you want to see more design html
00:06 - css web development type of stuff come
00:09 - on over to my channel and uh join me
00:11 - there there'll be a link down in the
00:13 - description where you can check out join
00:15 - me over my channel
00:16 - now in this series we're going to be
00:18 - covering building a custom wordpress
00:20 - theme from an existing html template
00:22 - again the link for the template is down
00:24 - in the description so you can follow
00:25 - exactly along with the same steps i'm
00:27 - doing but this step in process should be
00:29 - able to be applied to any existing html
00:32 - template so you can convert your own to
00:34 - your own existing wordpress theme
00:36 - so i've been developing on the web for i
00:38 - don't know over 20 years i think i first
00:40 - started using wordpress back in 2005 or
00:42 - 2006. i've kind of been playing around
00:44 - and using that ever since so i hope you
00:46 - learned something don't forget to share
00:47 - this content
00:49 - and uh let's get started
00:52 - all right in this tutorial we're going
00:53 - to be converting this design here into a
00:56 - custom wordpress theme
00:58 - now this design is a fully responsive
01:00 - design and it is based off of bootstrap
01:03 - and i'll just kind of show you how the
01:04 - design here looks so you can see that it
01:07 - is responsive maybe when i break down to
01:09 - a mobile point we get the mobile media
01:11 - query we have the sidebar on the left
01:13 - navigation we also have a few pages that
01:16 - are particularly important to blog style
01:18 - websites for example we have a home page
01:21 - that has a little featured slider here
01:22 - and a few things like that we have a
01:24 - post page this would be what an
01:27 - individual blog post would look like
01:30 - notice how on the bottom here there is
01:32 - also a comment section with nested
01:34 - comments and replies as well
01:36 - and then we have what is known as a blog
01:38 - page so this would just be like a static
01:40 - page like an about or a contact page or
01:42 - something like that
01:44 - we have our blog archive page which
01:46 - would list all of our blog posts in some
01:48 - sort of archive fashion with our next
01:51 - links as well
01:52 - and then we have a contact us page just
01:54 - to kind of simulate a simple web form
01:56 - you can also enter
01:58 - so again all the pages on here are fully
02:01 - responsive in this uh
02:03 - layout and we're going to be converting
02:05 - this entire template into a custom
02:07 - wordpress theme
02:09 - now wordpress themes are really nothing
02:11 - more than a hierarchy of template parts
02:14 - and what i mean by that is in this theme
02:17 - right here i'm just going to divide this
02:18 - into a couple little sections here so
02:20 - this area here at the top right this
02:23 - area we would typically call like the
02:25 - page heading or the title and this area
02:28 - over here this entire sidebar area we
02:30 - could call that a sidebar we call it a
02:31 - heading
02:32 - this area right in here is called a
02:34 - navigation this area over here we would
02:38 - call our content area and then if we get
02:41 - clear down to the bottom here
02:43 - of our page almost scroll down a little
02:45 - bit right here this section right here
02:47 - right we could call the comments section
02:50 - and then at the very very end down below
02:53 - we would call our footer area right here
02:56 - uh our footer right so this gray bar at
02:59 - the bottom so in other words all
03:01 - websites have kind of some sections to
03:03 - them
03:04 - and really all a wordpress
03:06 - template or custom theme does is it
03:08 - takes all those various sections and
03:10 - splits them apart into individual files
03:13 - so it's sort of like creating components
03:15 - from your template so instead of having
03:18 - just one big long html file i have many
03:21 - many separate pieces one with the header
03:23 - one with the content one with the footer
03:24 - one with the sidebar one with the menu
03:26 - and then wordpress sort of puts all
03:28 - those back together into a single
03:31 - long file as needed
03:33 - so when we're creating our wordpress
03:35 - theme here to start we're going to be
03:37 - doing a fairly basic theme but it will
03:39 - have all the features of a custom
03:40 - wordpress theme
03:41 - and we're going to start out with the
03:43 - required files that you need in order to
03:44 - set up a wordpress theme
03:46 - so again this tutorial assumes there's
03:48 - some prerequisites here of course we're
03:49 - not going to be designing this from
03:50 - scratch i've done that in a previous
03:52 - video this particular layout
03:54 - and this assumes that you've already got
03:56 - wordpress set up and installed on your
03:58 - local server or on a live web server
04:00 - somewhere as you will need to have
04:02 - wordpress installed and running in order
04:04 - to create the custom theme so assuming
04:06 - those two things are already complete
04:08 - let's go ahead and and
04:10 - complete this process now i will make
04:12 - this particular theme available in the
04:15 - description so that if you want to
04:16 - follow on exactly with my same template
04:19 - you can but the process here really
04:21 - applies to any sort of template that
04:23 - you're going to be creating so let's get
04:24 - started with the first required template
04:26 - files okay now i want to first show you
04:29 - the structure of a wordpress theme and
04:30 - where those files need to be uploaded
04:33 - now here in this sidebar here i've got
04:35 - my main
04:37 - wordpress directory so this has all the
04:39 - wordpress files that are installed when
04:41 - you unpack and download the zip file
04:43 - there's a folder in there called wp
04:45 - content
04:46 - and inside of the wp content there is a
04:48 - folder called themes and this is the
04:51 - folder in this area where you will put
04:53 - your specific theme
04:55 - so what you would do here is you would
04:56 - create a folder so i'm just going to
04:57 - create a new folder here and i'm just
04:59 - going to call my theme follow andrew
05:01 - and once we have our folder in place
05:04 - i've got this little directory here
05:06 - that's called my theme template so i'm
05:08 - going to drop that in this as well as
05:10 - we're going to be referencing those html
05:12 - and css files quite often so to make it
05:14 - easier i'm just going to drop that
05:16 - template which has my just basic html
05:19 - and css files that i just barely
05:21 - demonstrated for the actual template
05:22 - we'll be converting here inside of this
05:24 - template folder
05:25 - okay so once you have that in place you
05:27 - can go ahead and open up your follow
05:29 - andrew theme or your folder inside of
05:32 - your code editor so i'm going to switch
05:34 - over to vs code that's the code editor
05:36 - that i'm going to be using here to set
05:38 - up my
05:40 - to do all the development here in php so
05:42 - the first thing we need to do is create
05:44 - all of the folders and files that are
05:45 - required for a wordpress template so i'm
05:47 - just going to go ahead and add those
05:49 - here in my follow andrew theme folder so
05:51 - the first one we're going to be adding
05:53 - is called the assets folder and the
05:55 - assets folder is going to have several
05:57 - subfolders as well so i'll come inside
05:58 - of my assets and i will add the first
06:00 - one which is going to be css
06:02 - and then i will add the next one which
06:04 - is going to be our fonts
06:06 - and then i will add the next one which
06:08 - is going to be the images
06:10 - and one more which is going to be the
06:13 - javascript okay so assets has all of
06:15 - those inside of them of course we're
06:17 - going to be placing our css files and
06:19 - things like that in there in a minute
06:21 - the next folder we're going to create
06:22 - here in our main directory is going to
06:25 - be our classes
06:28 - so we'll just create that now this
06:29 - folder is going to be used to create any
06:31 - php classes that we'll be using for
06:33 - various functions to override wordpress
06:35 - functionality
06:37 - we're going to create another one here
06:38 - called inc
06:40 - so whoops i created that one in the
06:42 - wrong spot
06:44 - this uh needs to be outside there so inc
06:47 - stands for includes and that's going to
06:49 - be any sort of include files that we
06:51 - want to also include
06:53 - and we'll go ahead and create one more
06:54 - here and this one is going to be called
06:57 - template dash parts
07:00 - so this is a common folder you'll see in
07:01 - many wordpress themes it just allows us
07:04 - to split little individual parts of our
07:05 - template up even further
07:08 - and again this is all sort of
07:09 - uh common but you can really split up
07:11 - your template and theme however you want
07:13 - there's no really set rules here
07:16 - and then we're going to create one more
07:18 - whoops i did the same thing here i need
07:19 - to create this as a not as a subfolder
07:21 - here
07:22 - and another one called templates
07:25 - so these are the required folders that
07:27 - we have assets with all these subfolders
07:29 - and then classes inc template parts
07:31 - templates and
07:32 - and then this is our master template so
07:35 - again these aren't i shouldn't say
07:36 - required but this is how we're going to
07:37 - build our theme
07:38 - now the next thing we're going to do is
07:39 - set up several files so these files
07:42 - there's actually only two files that are
07:44 - required for a wordpress theme the css
07:47 - file and the
07:49 - index.php file those are the only two
07:51 - that are required everything above and
07:53 - beyond that is sort of how you want to
07:54 - customize and do your wordpress theme so
07:57 - we'll go ahead and start off here and
07:58 - we're just going to create all the blank
07:59 - files we're not going to be adding any
08:01 - content whatsoever at this point so the
08:03 - first one here is going to be um
08:06 - our 404.php
08:08 - this is the file that will be served
08:11 - when we get a 404 server error the next
08:13 - one is going to be a file called
08:15 - archive.php
08:16 - this file will be responsible for
08:18 - delivering an archive so a good example
08:21 - of this is like a blog post the index of
08:24 - all the blog posts in a hierarchical
08:25 - format that would be an archive page
08:28 - the next one here is going to be the
08:30 - comments.php so this template file will
08:32 - be responsible for displaying and
08:34 - serving up comments
08:36 - in our theme
08:38 - the next one here is going to be one
08:41 - called footer.php
08:44 - and this is going to be responsible for
08:46 - the footer section right the very bottom
08:47 - of your website
08:49 - the next one here is going to be our
08:52 - functions.p
08:55 - and this file has special meaning in
08:56 - wordpress because in your functions.php
08:59 - file is where you can override and
09:02 - initiate different features of your
09:04 - theme inside of wordpress so your
09:06 - functions.php file is going to be raw
09:08 - php code typically to
09:11 - override and change the way wordpress
09:13 - works fundamentally
09:15 - uh next we're going to go ahead and add
09:17 - one called header.php so this is going
09:20 - to be the the file responsible for the
09:21 - top head section that would be anything
09:23 - in the head really whatever we determine
09:25 - we want to put in there
09:27 - the header
09:28 - uh the next file is going to be our
09:31 - index.php so here is the first required
09:34 - file so you have to have one called
09:36 - index.php
09:37 - it serves as the fallback so if
09:40 - wordpress can't locate a specific
09:42 - template file in the template hierarchy
09:43 - that it needs it will always fall back
09:46 - to index.php that's why it's required
09:50 - the next one here is going to be called
09:52 - page.php
09:53 - this template file will be responsible
09:55 - for displaying static pages so things
09:57 - that aren't blog posts or aren't blog
09:59 - archives like an about page would be a
10:02 - static page so that's the template file
10:03 - that will do that the next one here is
10:05 - going to be called we'll just add a
10:07 - readme
10:08 - dot
10:09 - text and this is just going to be a text
10:11 - file where we can put like copyright
10:12 - notices and things like that if someone
10:14 - else were to download our template we
10:16 - can put some information in there in a
10:18 - readme file
10:20 - and then the next one here is going to
10:21 - be called search.php
10:24 - so this is the template file that will
10:25 - display search results so when somebody
10:27 - comes over to your wordpress site right
10:29 - and they hit this search button up here
10:31 - what's going to show up there
10:33 - the next file here is going to be
10:37 - our single dot php
10:39 - and this file will be responsible for
10:42 - responsible for displaying single blog
10:45 - posts so when you click on an individual
10:47 - blog post that's how that template file
10:49 - or who will display
10:51 - and then the last file that we need is
10:55 - going to be our style dot
10:58 - css so again this is the second required
11:00 - file you have to have a file called
11:02 - style.css this is the master style sheet
11:04 - for your website
11:07 - so over here on the right hand side you
11:09 - can see that i've got a wordpress site
11:11 - running locally this is just the default
11:13 - 2020 wordpress theme that i have
11:16 - installed so i'm just going to kind of
11:18 - show you here so when i come over here
11:20 - and do a search
11:21 - so i'll just search for hello
11:24 - and do a search you can see that i've
11:26 - got some results that came back right
11:29 - the results that are being returned are
11:30 - going to be using this search.php
11:32 - template so how this page looks will be
11:34 - determined by the code in that template
11:38 - if we come over here to a blog archive
11:40 - so if i click on like post from march
11:41 - 2020 it's going to give me all the posts
11:44 - for march 2020 that would be using the
11:47 - archive.php template if i click into an
11:50 - individual post like here's my hello
11:52 - world post so i'm going to go ahead and
11:53 - click on that post you can see i'm now
11:55 - looking at this individual blog post
11:58 - this one's going to be using the single
12:00 - dot php template file
12:02 - of course my comments down here at the
12:04 - bottom are going to be using my
12:07 - comments.php template file
12:09 - etc etc right you kind of get the idea
12:11 - there so these are all the required
12:13 - files that we'll be using in this
12:15 - example but again there's really only
12:17 - two that are required from wordpress
12:19 - so
12:20 - uh the last little thing i'm going to
12:22 - add here to our theme folder is a
12:25 - screenshot so a screenshot is typically
12:28 - just a little screenshot of what the
12:29 - theme looks like if you were to put this
12:31 - on the wordpress store it would show up
12:33 - you know when you're searching for
12:34 - themes as a little thumbnail of what
12:35 - that theme would look like so i'll go
12:37 - ahead and add that next
12:39 - okay so i've gone ahead and just taken a
12:41 - quick screenshot here so if i click on
12:43 - screenshot you can see this is the
12:44 - screenshot that i've added into the site
12:47 - and that's how it looks so
12:50 - let's go ahead and now look at one more
12:52 - thing here and this is called the
12:53 - template hierarchy
12:54 - now we've just sort of determined to
12:57 - build our hierarchy in a sort of similar
13:00 - common fashion i would say for wordpress
13:02 - themes but i want to show you kind of a
13:04 - detailed look at what's known as the
13:06 - template hierarchy so you can see here
13:09 - over here on the right hand side it's a
13:10 - little easier to read this from right to
13:11 - left i think but the index.php file in
13:14 - wordpress is the fallback template file
13:17 - then there's one you can create called
13:18 - singular so if your single blog posts
13:21 - and your pages look the exact same you
13:23 - can just create one called singular that
13:24 - essentially will act for both
13:26 - and there's one in here called archive
13:29 - you can see and
13:30 - archive will catch is the catch-all for
13:32 - all archive pages but if you want to get
13:34 - more specific you can create one called
13:36 - category so each one of your blog post
13:39 - categories can have a different look and
13:40 - feel or maybe you can sort them by date
13:43 - you can see you just move from right to
13:45 - left through this screen you can see
13:46 - there's a million different uh ways you
13:49 - can sort of create and customize your
13:51 - wordpress themes based on all of these
13:53 - different types of files
13:55 - so the last file that we haven't added
13:57 - yet that we will add is this one right
13:59 - here called front page
14:01 - so often times the main landing page of
14:04 - a website looks different from all the
14:06 - other pages of a website so if you want
14:09 - to do that you can do it two ways you
14:10 - can create one called home.php which
14:13 - will work for both the blog posts and
14:17 - index pages and also the static front
14:18 - page you can see if you want to get more
14:20 - specific you can create one called front
14:22 - dash page dot php to use instead so
14:26 - that's the last file we'll create here
14:28 - but again that you can kind of reference
14:29 - this dialog to see all the various types
14:31 - of
14:32 - template files you can create for your
14:35 - wordpress theme so i'll jump back here
14:37 - to my code and we will create one final
14:39 - file in here called
14:42 - front dash page dot php and add that one
14:45 - in there
14:46 - okay
14:47 - so now let's make it so that we can
14:49 - actually use this wordpress theme so
14:50 - we're gonna come over here to our
14:52 - style.css file and add just a couple of
14:55 - elements in here to the head section
14:58 - so wordpress files
15:00 - have a style css
15:03 - and at the very very top
15:06 - they have a comment section so it's just
15:09 - like you would do a normal css comment
15:11 - like this and then you're going to add
15:12 - various things inside of here and
15:14 - wordpress will use that to display when
15:16 - you go to install it you'll see what i
15:18 - mean here in a minute
15:19 - but the first one we're going to add is
15:20 - one called theme name
15:22 - and i'm just going to call this uh my
15:24 - follow android theme but again this is
15:25 - whatever you want to call your theme
15:27 - and the next thing here is going to be
15:29 - our text domain
15:32 - and i'm just going to call this follow
15:33 - andrew as well
15:34 - the next thing in here is going to be
15:36 - your version so i'm just going to call
15:38 - this version 1.01
15:41 - and then you can add a description of
15:43 - your theme so i'll just say a fancy
15:46 - wordpress we'll call this a fancy
15:49 - left sidebar theme
15:51 - and then you can also add some tags
15:54 - so i can call this uh left
15:57 - dash sidebar responsive
16:01 - fancy
16:03 - and then i'm gonna go ahead and create
16:05 - the author that's andrew wilson
16:08 - and then you can do what's known as an
16:10 - author a you author uri
16:13 - so this would be the url right if you
16:15 - have your own website or something i'll
16:16 - just do http colon slash
16:19 - youtube.com
16:21 - follow andrew
16:23 - again you can place any sort of url
16:25 - there i suppose we need http
16:27 - s
16:28 - and there's a few other ones in here as
16:30 - well for example you can add the license
16:31 - type you can add some other additional
16:34 - things again on the wordpress codecs you
16:37 - can see all the available things you can
16:38 - add inside of this comment
16:40 - but it's always the very first thing in
16:42 - your css sheet it needs to start on line
16:44 - one so we add that in there and that's
16:46 - pretty much all we need so i'm going to
16:48 - go ahead and save that file
16:50 - and now that i have that uh file with
16:53 - all these required sort of metadata if
16:54 - you will in your style sheet i'm going
16:56 - to log in here to my wordpress site in
16:59 - the backend so i'll come down in here
17:01 - and i'll say login and i've just got
17:04 - this set up with a little username and
17:05 - password
17:06 - for
17:08 - my andrew andrew
17:10 - and this is the wordpress backend so now
17:12 - when i come over here to my appearance
17:14 - and over to my themes you'll notice that
17:16 - there is a new theme here i'm going to
17:18 - pull this over just a little bit so you
17:20 - can see there's my new theme so i've got
17:21 - the default theme installed which is the
17:23 - 2020 theme that comes with wordpress and
17:26 - now i've got my follow andrew theme so
17:28 - if i click on theme details you can see
17:31 - all these details over here in the right
17:32 - hand sidebar that should that should
17:34 - make sense now right so there's my theme
17:35 - name there's the version there's the
17:37 - author if i click on this it'll take me
17:39 - to the link there is my description here
17:42 - are all of my tags that i added so all
17:44 - that information is pulled directly from
17:46 - your stylesheet okay and then of course
17:49 - here is the
17:50 - screenshot.png file so that's coming
17:52 - from right here my screenshot.png file
17:55 - and they might have a specific size i
17:57 - didn't even double check that on
17:59 - requirements here i just sort of snapped
18:01 - one and uploaded it but double check the
18:02 - codecs they might have a requirement on
18:04 - the size for this particular image but
18:07 - it works as long as you have one called
18:08 - screenshot.png
18:10 - in your theme folder
18:12 - and that's pretty much it so once you
18:14 - have those required files you should see
18:16 - your theme here up here now i'm going to
18:18 - go ahead and activate this theme so all
18:20 - you have to do is click activate and
18:23 - this will essentially make my new theme
18:25 - become the active theme so now i'm going
18:27 - to switch back to the main front end
18:29 - and you'll see that there's really
18:31 - nothing here it's completely blank i
18:33 - don't see any posts and that's because
18:36 - all of my template files are completely
18:39 - blank right there's nothing to them
18:41 - so now we're going to start to actually
18:42 - flesh out these wordpress template files
18:46 - so the one we're going to start with is
18:47 - the home page remember that is what we
18:49 - set up on the one called front dash page
18:52 - so what i'm going to do is i'm going to
18:53 - come into this template site file
18:55 - remember this is the theme rather the
18:57 - template that we're converting into a
18:59 - custom wordpress theme this template is
19:01 - available in the description for
19:02 - download if you want to follow along
19:04 - with the exact code i'm using but of
19:06 - course these tips and tricks can be used
19:08 - for any template so what i'm going to do
19:10 - is i'm going to come into the index.html
19:12 - page
19:13 - and this page houses of course all of
19:15 - the html
19:17 - for this particular file so i'm just
19:19 - going to literally copy and paste
19:20 - everything here i'm going to highlight
19:21 - everything command a command c and then
19:24 - come over here to my
19:25 - frontpage.php file and paste
19:29 - and i'm just simply going to save so i'm
19:30 - going to say command s and save
19:32 - now you'll notice that over here in the
19:34 - right in the preview i did have some
19:35 - things appear
19:37 - so what i'm seeing now is some of the
19:39 - content and i'm actually seeing my
19:41 - bootstrap css and html files being
19:44 - loaded but i'm not seeing my custom css
19:46 - file being loaded
19:48 - and that is because if we look up here
19:50 - in our heads section notice that we are
19:52 - linking to bootstrap
19:54 - let me just wrap these lines here so we
19:56 - can see that a bit better
19:58 - whoops
20:01 - we are linking to bootstrap via the
20:03 - content delivery network so this is a
20:05 - hot link right we're linking to fontasam
20:08 - via the cdn as well but we're linking to
20:10 - our own css sheet just with this
20:12 - relative file path so this file path is
20:15 - incorrect because we know that our style
20:17 - sheet
20:18 - is now down here called style.css
20:21 - and of course it's not in a css folder
20:23 - anyway this path is all incorrect
20:25 - now what we could do is we could
20:27 - actually come in here and hard code the
20:29 - path i could say path to file
20:31 - and code that all in it would actually
20:33 - work it would load up my file properly
20:35 - in fact i'm just going to show you that
20:37 - just to prove the point here so i can
20:38 - say dash wp content
20:41 - uh dash um let's see what i named this
20:44 - theme
20:45 - follow
20:46 - andrew
20:48 - slash
20:50 - style.css
20:51 - now let's see if this is correct here
20:55 - and
20:56 - oops
20:57 - i forgot to add the
20:59 - themes directory there there we go so
21:01 - you can see if i hard code in the path
21:03 - to this css sheet right here it does
21:05 - work right i get my css sheet and
21:07 - everything over here is working as
21:08 - expected i'm going to zoom out a click
21:10 - or two just so we can see the full
21:12 - sidebar and it's all working however
21:14 - it's not a good idea to hard code in
21:17 - your css and javascript paths like this
21:20 - and the reason is is that if other
21:22 - plugins that i install inside of
21:23 - wordpress depend on some of these files
21:26 - that i have linked wordpress doesn't
21:29 - know which order to load them in and you
21:31 - will see that problem when we do this in
21:33 - a minute so it's a better idea to do
21:35 - what's called in queue
21:37 - the wordpress css or your own theme css
21:40 - and javascript files that way wordpress
21:42 - itself can determine which one to load
21:44 - first and which one to load second or if
21:46 - plugins require specific javascript or
21:48 - css files or vice versa
21:50 - so that's what we're going to do next
21:51 - we're going to enqueue all these files
21:53 - so what i'm going to do is i'm just
21:54 - going to simply
21:56 - we'll do this kind of in a one by one
21:58 - fashion here so we're going to come over
22:00 - to our
22:01 - functions.php file here and this we're
22:03 - going to add our first piece of code so
22:06 - we're going to start off here with just
22:07 - opening and closing some php tags
22:10 - and then we're going to create a
22:11 - function in here and the function name
22:13 - really doesn't matter um but i like to
22:16 - always kind of prefix my functions
22:18 - with a name
22:20 - like follow andrew that way my own
22:23 - functions names
22:24 - don't clash with built-in function names
22:27 - of wordpress by chance
22:29 - so that's kind of a good practice there
22:31 - and we're going to call this one the
22:33 - register styles because that's what this
22:36 - function is going to do is register our
22:38 - styles
22:39 - okay so the first we're going to do is
22:41 - there's a function in wordpress called
22:42 - wp-e-n-q-u-e-u-e-n-q
22:49 - style
22:51 - and this takes a few parameters here so
22:53 - the first parameter is the name i'm just
22:55 - going to call this the follow dash
22:57 - andrew
23:01 - we'll call it whoops i'm not going to do
23:02 - a hyphen there i'll call it follow
23:03 - andrew
23:05 - i can type that correct
23:06 - dash bootstrap so the first parameter is
23:09 - just a name it's just whatever you want
23:10 - to name your style sheet internally
23:12 - the second parameter here is the actual
23:15 - url to the style sheet remember that is
23:17 - where i showed you before where we could
23:20 - hard code right this is the url
23:22 - however this part right here wordpress
23:25 - can figure out for us so if we come back
23:27 - here
23:28 - so i'm going to say comma here
23:30 - and there is a
23:32 - an option here called get
23:35 - template
23:36 - directory
23:38 - uri
23:40 - so this is a function that returns the
23:42 - path
23:42 - up to your current themes directory so
23:45 - that's what we're going to use and then
23:47 - we're going to concatenate here with
23:49 - period and then we're just going to add
23:51 - the slash
23:53 - style.css
23:54 - okay i'm going to pull this over just a
23:56 - little bit here
23:58 - okay so that's the second parameter is
23:59 - basically the path to your stylesheet
24:02 - now the third parameter here i'm going
24:04 - to do just as an empty array for now
24:07 - and the fourth parameter here is a
24:10 - version so i'm just going to say
24:12 - 1.0 now i'm hard coding the version in
24:15 - right here right now but in a minute i'm
24:17 - going to make that dynamic so that it
24:19 - will automatically go and look inside of
24:20 - my style sheet and pull that version
24:22 - number we set up earlier to make that
24:24 - dynamic and then the last parameter here
24:26 - is optional but this is
24:29 - which style sheet this is going to be
24:30 - for so whether it's a print a projection
24:33 - all right the different types of style
24:35 - sheets so i'm just going to leave that
24:36 - as all for now
24:38 - okay so that looks okay so that's what
24:40 - i'm going to put inside of that function
24:42 - and now i need to make this function
24:43 - hook into wordpress's system so that's
24:46 - where we're going to say add action
24:50 - and we're going to hook into
24:52 - the
24:54 - uh
24:54 - the hook called the wp
24:57 - and cue
25:00 - scripts command
25:03 - and you simply just copy and paste
25:05 - whoops i spelled that kind of funny so
25:07 - i'm going to fix that register style
25:10 - you just copy and paste your function
25:12 - name right there so what this line is
25:14 - doing it says when wordpress runs this
25:17 - hook
25:18 - also execute my function so in other
25:20 - words my function will execute at that
25:22 - same time
25:23 - so that's all we need to do there now
25:25 - let's go ahead and save and it looks
25:27 - like you can see i've got an error here
25:28 - looks like on functions line seven
25:31 - so i don't have my line numbers turned
25:33 - on
25:34 - um but it's probably because i'm missing
25:36 - a semicolon after this
25:38 - yes i am missing a semicolon okay so we
25:40 - save and that looks like that's now
25:43 - working properly
25:45 - so now we need to test it out so in
25:46 - order to test it we're going to come
25:47 - back to the front page
25:49 - and we're going to delete
25:52 - this hard-coded style sheet
25:55 - and we're going to replace it with a php
25:57 - command here
25:59 - called
26:00 - wp underscore whoops wp underscore head
26:03 - which stands for wordpress head and what
26:05 - this means is wordpress is going to then
26:09 - inject all these files by itself
26:12 - so we've kind of replaced that now let's
26:14 - actually see if it worked so we're going
26:15 - to refresh i am still seeing my style
26:17 - sheet so it looks like it's working but
26:19 - just to double check we can right click
26:20 - and say view page source
26:22 - and now you can see that there's
26:24 - actually quite a few extra things in
26:25 - here that did not used to be in my head
26:27 - section for example this style this
26:29 - inline style tag
26:31 - there's this manifest edit uri generator
26:35 - all this stuff wordpress injected into
26:37 - my head because it was coming from the
26:39 - wp head command
26:42 - and then most importantly we need to
26:44 - make sure that we can actually see our
26:46 - style sheet that we just barely loaded
26:48 - and that one is
26:50 - let's just do a little search for it
26:51 - here
26:53 - um
26:54 - there it is right there
26:56 - so
26:57 - i called this the bootstrap css but i
26:58 - actually linked to my own css it wasn't
27:00 - me thinking but there it is you can see
27:01 - that it definitely is injecting that
27:03 - style sheet we just barely loaded so now
27:06 - what we're going to do is we're
27:07 - essentially going to do the same thing
27:09 - for these other two style sheets the
27:11 - font awesome and the bootstrap style
27:12 - sheets
27:13 - so i'm going to come over here back
27:15 - let's kind of close this source code
27:17 - down
27:18 - yeah we just want to double check to
27:19 - make sure the files that you think are
27:20 - being loaded dynamically are in fact
27:22 - being loaded dynamically
27:24 - so let's come back here to our
27:26 - functions file
27:29 - and now we're going to essentially copy
27:30 - this
27:31 - and we're going to paste it two more
27:33 - times
27:34 - and then we'll just paste all these in
27:36 - one by one
27:37 - so the first thing we need to do is
27:40 - change the name so i'll say bootstrap
27:42 - then we'll say
27:45 - actually this one's going to be my
27:46 - custom style so i'll call this the
27:48 - follow-under style the next one will be
27:50 - bootstrap and the next one will be font
27:52 - awesome
27:54 - okay
27:55 - and then we need to replace them with
27:56 - the paths now i'm not using local
27:59 - versions of font awesome or bootstrap of
28:01 - course i'm using the cdn versions
28:03 - so i'm going to
28:06 - grab those urls so come over here to the
28:07 - front page we'll start here with the
28:09 - bootstrap one so i'm going to copy this
28:11 - entire url for the bootstrap
28:14 - jump back to my functions
28:16 - and that's going to be the second
28:17 - parameter here
28:19 - so i'll delete all that and just paste
28:21 - in that hard coded path to the bootstrap
28:23 - version
28:24 - and then we can do the same thing
28:27 - excuse me
28:29 - for phantasm
28:30 - so we'll grab fontasam we'll come back
28:32 - here to our functions
28:35 - and we will
28:36 - replace that second parameter
28:39 - with fontasam
28:41 - and save now we can come over here to
28:43 - our front page and i can now delete
28:45 - all of this code
28:48 - because
28:49 - it's now being dynamically loaded via
28:51 - this command here now here's that
28:53 - problem i mentioned earlier so you can
28:55 - see that i refresh but i actually got a
28:56 - different color here for my main
28:59 - navigation
29:01 - and that is because the order of my
29:02 - style sheets is loaded incorrectly so if
29:05 - i come over here and say view page
29:07 - source one more time let's pull this
29:09 - open
29:09 - you can see that first i'm loading my
29:12 - custom style sheet and notice that right
29:15 - there on the end it says and ver equals
29:17 - 1.0 that's where that version is coming
29:19 - from
29:20 - then i'm loading bootstrap then i'm
29:22 - loading fantasm the problem is my style
29:25 - sheet is dependent on bootstrap so
29:27 - bootstrap has to load first then my
29:30 - style sheet has to be loaded second
29:31 - because my stylesheet is overriding
29:33 - bootstrap's css variables so i have to
29:37 - have that source order correct
29:39 - and that is where that second parameter
29:41 - that we left as an empty array comes
29:43 - into play
29:44 - so let's come back here to our functions
29:47 - and remember this empty array right here
29:49 - what this empty array is i'm going to
29:52 - line wrap here whoops i keep hitting the
29:54 - wrong command for a line wrap
29:56 - whoops
29:57 - there we go
29:58 - it is an array of dependencies so for
30:01 - example i'm just going to put one
30:03 - parameter in other words my follow
30:05 - andrew style is dependent on this
30:08 - bootstrap css file so i'm going to copy
30:10 - the id or the name and just paste it
30:13 - right in there to that first parameter
30:14 - and save
30:16 - and now you can see it turns back purple
30:20 - so that's now correct so let's again
30:22 - just go ahead and view the page source
30:23 - here and now you can see that it is
30:25 - loading bootstrap first
30:27 - then my css second and then the font
30:30 - awesome because we've added that
30:32 - dependency parameter
30:34 - okay
30:35 - back to our functions
30:37 - now i mentioned we're going to do one
30:38 - more thing with that version because
30:40 - right now our version is hard-coded
30:42 - right we've just hard coded 1.0
30:45 - um so for the bootstrap it's version
30:47 - 4.4.1 so maybe i'll just copy this and
30:50 - paste that in there and then for font
30:52 - awesome it's 5 13 0 so i can paste that
30:55 - one in there but for my version i want
30:57 - this to be dynamic so what i can do is i
31:00 - can create a variable called version
31:02 - and i can set that equal to wp there's a
31:04 - command in here called wp
31:06 - theme i'm checking my notes here i don't
31:08 - have all this memorized
31:10 - um and then we say
31:13 - get
31:15 - and then in here we can say
31:17 - version
31:19 - okay so basically this wp theme get lets
31:22 - us get any of those parameters we set up
31:24 - in our style sheet so this should assign
31:26 - our current version which is declared in
31:29 - our style sheet right here
31:31 - as our property
31:35 - as this variable so now i'm going to
31:36 - take this variable and we're going to
31:38 - replace this 1.0 with that variable and
31:41 - save okay so now let's just double check
31:44 - and make sure that worked so we can view
31:45 - the page source
31:46 - so we can come over here and look at our
31:48 - style sheet right here
31:50 - and it does say version 1.0 so now as i
31:53 - update my theme or my style sheet i can
31:55 - just simply come over to that style
31:57 - sheet
31:59 - so we'll come in here i'm going to
32:00 - change this to like 1.5 and save and
32:03 - then we're going to come over here
32:05 - and we will refresh
32:07 - and then just double check this let's
32:08 - pull this over and now you can see sure
32:10 - enough it says version 1.5 and that's
32:12 - because we've made that parameter
32:14 - dynamic
32:15 - so that's how you can kind of work with
32:17 - that again the version parameter is
32:19 - completely optional you don't even have
32:21 - to have that
32:22 - but it it kind of makes sense
32:26 - especially if you're doing lots and lots
32:28 - of updates to prevent browser cache
32:30 - issues when you have that
32:31 - uh version
32:33 - get parameter appended to the end of the
32:35 - the
32:36 - style sheet link
32:38 - okay so
32:39 - that's pretty much it for our style so
32:41 - we have all those styles registered and
32:43 - they're now running and adding properly
32:45 - now we need to do the exact same thing
32:48 - for the scripts that are down in the
32:50 - footer so for any javascript files
32:52 - so to make this simple i'm basically
32:54 - just going to copy this entire function
32:57 - come down here a little bit and paste
32:59 - now instead of saying register styles i
33:01 - will change this one to register scripts
33:04 - and i will change this one down here to
33:06 - register scripts
33:08 - and then we'll delete all this in here
33:10 - and then rinse and repeat so if we go
33:13 - back to our
33:14 - front page we can see that down in the
33:17 - footer area
33:19 - we have a bunch of javascript files so
33:21 - i've got bootstraps javascript files and
33:23 - then i've got my own javascript file in
33:25 - here
33:26 - as well so we're going to replace all
33:28 - these just like we did before
33:31 - so let's come over here to our
33:34 - uh keep getting lost have too many tabs
33:36 - open enter the functions file and we
33:39 - will do the scripts next
33:42 - okay so we're going to say
33:45 - wp and q and it's very similar but
33:49 - instead of style it's just called script
33:51 - for this one
33:52 - and all the parameters are basically the
33:54 - same so let's follow andrew
33:57 - and we'll just start off with i don't
33:58 - know bootstrap or something
34:03 - okay then for the second parameter
34:05 - um
34:06 - we are hard coding these
34:08 - so we're going to go get not hard coding
34:10 - but we're linking to the cdn version
34:12 - again for bootstrap so i'll just grab
34:15 - it looks like first we have jquery slim
34:18 - so i'll copy that and we'll come back
34:20 - here and
34:22 - paste that in
34:24 - and we're just going to leave an empty
34:26 - array
34:27 - because it's not dependent on anything
34:30 - and
34:31 - our theme version we really don't need
34:36 - for this particular one i mean we could
34:37 - add it right if we wanted to so we could
34:39 - say
34:41 - 3.4.1 just like we did on the other ones
34:46 - okay so let's save that
34:49 - now we're going to come over here to our
34:51 - footer and just like we did with the
34:53 - header area
34:54 - in our front page
34:57 - uh we need to i've got to get rid of
34:59 - some of these tabs here
35:01 - in our front page we're going to replace
35:04 - down here we're going to add that php
35:06 - command just like we did in the header
35:07 - but this one's going to be called
35:09 - wp underscore
35:13 - foot
35:15 - um like so
35:17 - i actually think it's
35:19 - footer yeah
35:21 - on the head it's wp head and then down
35:23 - here it's wp footer
35:26 - okay so and then we can delete now this
35:28 - javascript a jquery code
35:31 - save and let's see if it works so now
35:33 - we're going to view the page source
35:36 - and we're going to come down here
35:38 - and
35:40 - look at our footer
35:41 - and see if it actually inserted that
35:44 - jquery code
35:46 - so it doesn't look like it's there i'm
35:49 - not seeing the jquery so i must have
35:51 - typed something wrong so let's go double
35:53 - check and make sure we have that code
35:55 - correctly in our functions file
36:11 - tag is being dynamically loaded but it's
36:12 - being loaded in the header section where
36:15 - i actually want it down here in my
36:17 - footer section
36:18 - so to fix that that's actually the last
36:20 - property i left out here on this wp and
36:22 - skew in q script command so the last
36:25 - parameter is either false or true
36:29 - and the default is false if you set it
36:31 - to true that means it's going to place
36:33 - it in the footer so i'm going to save
36:35 - that there and then let's go ahead and
36:36 - refresh here
36:38 - and we should see yep there it is
36:40 - so now that file you can see is
36:42 - appearing down in my footer perfect
36:45 - okay so now all we need to do is let's
36:47 - just copy and paste this two
36:50 - three
36:51 - four times i think we need four more
36:53 - files so the next one we need is popper
36:56 - so this is a javascript
36:59 - um
37:02 - file that is required
37:05 - so we're gonna put this one right inside
37:07 - of here
37:08 - actually
37:09 - let's do these in order i'm going to do
37:11 - bootstrap
37:13 - uh oh this is actually popular this is
37:14 - what bootstrap requires so popper is a
37:16 - library for bootstrap
37:18 - so we'll pop this one in here i have no
37:20 - pun intended and call it popper we'll
37:23 - just keep replacing these version
37:25 - numbers over here
37:28 - and then we're going to grab the
37:30 - bootstrap javascript file next
37:33 - it's going to go right here
37:36 - and we'll just call this one bootstrap
37:39 - and then the last one is our own
37:42 - javascript file called
37:44 - main.js
37:46 - so this is where we need to grab this
37:47 - function again here
37:49 - so we can come grab our get template
37:52 - directory let's delete this
37:55 - default one so get template directory
37:57 - dot and then our javascript files
38:00 - remember are in our assets folder
38:03 - and inside here we're going to have a
38:05 - javascript folder
38:07 - so they're going to be inside of
38:10 - slash
38:13 - assets
38:15 - slash js
38:17 - main.js
38:19 - and we're just going to call this
38:21 - version
38:22 - 1.0
38:23 - now i can do the same thing here is i
38:26 - can prefix these as well i can get the
38:28 - version number for my theme but i'm just
38:29 - going to leave it hard-coded i kind of
38:30 - explained that up there
38:32 - and we'll save and refresh
38:34 - let's make sure all those are loading
38:36 - okay
38:37 - and it looks like they are
38:39 - so now the last thing we need to do is
38:42 - you will notice that
38:44 - um my file here whoops we need to go
38:47 - delete all these out of here now so we
38:49 - can delete all these so they're not
38:51 - hard coded anymore and save and refresh
38:54 - and now we can see sure enough there is
38:57 - jquery popper
38:58 - bootstrap and lastly my file which you
39:01 - can see is not showing up
39:03 - and that is because that file doesn't
39:05 - exist in the directory i claimed
39:08 - so we need to go place it there so we
39:10 - need to go to my uh template so i've got
39:12 - this inside of my blog site template
39:14 - open up my javascript file i'm going to
39:16 - copy this file so copy
39:18 - and then i'll come into my assets folder
39:21 - and
39:22 - come into my javascript folder here
39:25 - and we will
39:26 - paste
39:28 - okay so we want that to be inside of the
39:31 - javascript
39:34 - which
39:35 - i don't think it is here let me fix that
39:39 - i can't believe i didn't realize this
39:41 - before when i was creating all these
39:42 - files but you can see i've got assets
39:44 - and css inside assets fonts is inside of
39:47 - css images and inside of fonts so i've
39:50 - actually messed up these directory
39:51 - structures so i need to move them all
39:53 - back out i don't know if you can drag
39:54 - and drop um let's see if it'll let me
39:57 - yeah that's actually working so i've got
39:58 - to drag all these back to the main
40:00 - assets folder
40:04 - there we go and then drag this
40:05 - javascript file inside of the js folder
40:08 - which it's now there okay
40:11 - so now that's in the proper place there
40:14 - that's looking fine
40:15 - and let's save and refresh and see if
40:17 - we're now getting our own javascript
40:19 - file to load here
40:21 - and i'm still not seeing that
40:25 - so we've still got a path issue let's
40:28 - just double check so we have assets then
40:30 - javascript and main.js let's come over
40:32 - here to our functions file
40:34 - so we're coming into our template
40:35 - directory assets js
40:38 - main.js
40:40 - loading in the footer oh whoops we have
40:42 - a name conflict i haven't updated this
40:44 - one so this one is just uh we'll call
40:46 - this one main
40:47 - that may be why it wasn't
40:49 - uh loading
40:51 - and there we go so there's my file
40:53 - there's the js file you can see it's
40:54 - loading properly yep
40:56 - so of course you can't use the same name
40:58 - twice or you'll get conflicts so i
40:59 - hadn't updated that so
41:01 - there is all of my
41:04 - scripts that are inside
41:07 - of the footer so now we've successfully
41:09 - enqueued all of the
41:11 - style tags we've enqueued all of the
41:13 - scripts tags loaded those in the footer
41:15 - and now my site is essentially working
41:18 - properly where wordpress is now managing
41:20 - the loading of those files
41:22 - so that's step
41:24 - one is in queue the files now the next
41:26 - step we need to do is actually set up
41:28 - our literal header and footer files so
41:31 - right now inside of our uh our front
41:34 - page right we just have we have wp head
41:37 - but then we have all this extra stuff
41:39 - that's just hard coded
41:41 - inside of our template and we want to
41:43 - further remove that into a separate
41:45 - header.php file and footer.php file
41:49 - so this is kind of up to you on how you
41:52 - want to end up determining what content
41:54 - goes in your head and what time content
41:56 - goes in your foot but what i'm going to
41:58 - determine is that everything including
42:01 - the navigation
42:02 - up to the main content here in the page
42:05 - title will be in my head and then
42:07 - everything down here will be in my
42:08 - footer but you can split this up again
42:10 - however you really want so for me i'm
42:12 - just going to double check and look at
42:13 - the code here so i want all of this
42:15 - stuff
42:16 - all the way down until i get to this
42:20 - main title here which is all the way
42:21 - down to right there my closing header
42:23 - html tag all this stuff i'm going to cut
42:27 - so i'm actually not going to
42:29 - actually i'm going to cut right here
42:30 - because i'm in my php file so command x
42:32 - to cut and let's come over to the
42:34 - header.php file and paste
42:37 - so i'm going to save that all there now
42:39 - let's come back and do the same thing
42:40 - for the footer
42:41 - so essentially i'm going to come down
42:43 - and where this closing footer ends i
42:46 - want
42:47 - uh let's see what i want in my footer
42:49 - probably everything
42:51 - main wrap includes that copyright notice
42:54 - so basically for my footer i'm just
42:56 - going to cut out this right here
42:59 - and we will cut that
43:01 - we'll leave this main wrap
43:03 - that houses everything alone and we'll
43:05 - place all of that stuff inside of my
43:08 - footer
43:09 - okay so we'll save that
43:11 - and that looks fine there i'm just going
43:12 - to tidy that up while i'm here
43:15 - okay now since we've cut those two
43:16 - pieces out we need to dynamically load
43:18 - them back and wordpress has a function
43:20 - for that so i'm going to open up my php
43:22 - tags here and it is called get
43:25 - underscore header
43:28 - so you can see as soon as i type that in
43:29 - and save sure enough my header comes
43:31 - back into place let me comment that out
43:32 - so you can see that
43:34 - notice that without the header i'm just
43:36 - getting my content so if i view page
43:38 - source
43:39 - there's right there's nothing above and
43:41 - below it
43:42 - so that looks fine there
43:44 - and it looks like i actually have an
43:45 - issue with my html i'll have to correct
43:47 - that later i'm missing a
43:48 - opening or closing div somewhere
43:51 - uh but so what we can do is we can
43:52 - replace that with get header
43:55 - and that will bring in my header and
43:56 - then down at the bottom
43:58 - i can open and close some php here and
44:01 - same thing i'm going to say git footer
44:03 - so this is very simply
44:05 - this is very similar to just native php
44:08 - where you say include
44:10 - right all it's doing is just including
44:12 - that file and including that file but in
44:14 - the wordpress way of doing that so now
44:16 - when i refresh you can see sure enough
44:17 - i've got my header i've got my footer
44:19 - everything's getting put back together
44:21 - here on this main page and that looks
44:24 - fine
44:25 - so the next issue we need to fix is we
44:28 - have our header and our footer loaded
44:29 - dynamically we've enqueued all of our
44:30 - scripts and all of our css files
44:32 - now we need to change some things that
44:35 - are
44:36 - dynamic like our page title
44:39 - for example if we come into our header
44:41 - notice that the title tag is hard coded
44:44 - that's going to be a problem of course i
44:45 - want this to be dynamic based on
44:47 - whatever page i'm currently on inside of
44:49 - wordpress so that's what we're going to
44:51 - fix next is we're going to fix this
44:52 - little title tag
44:54 - two ways you can do title tags you can
44:56 - manage them yourself meaning you hard
44:59 - code the title into the actual
45:02 - head section and then you replace this
45:04 - with a little command that's called like
45:06 - get the title which is a wordpress
45:08 - specific feature so that's method one
45:10 - method two is you just completely remove
45:12 - the title tag all together from your
45:14 - head section and you let wordpress
45:17 - dynamically add that title by itself
45:20 - that's the method i'm going to opt for
45:21 - for this video so to do that we need to
45:23 - come to our functions.php file and i'm
45:26 - going to add here
45:28 - above here
45:29 - just up here on line one there's a
45:30 - command or a function rather that's
45:33 - called add theme support
45:36 - so add theme support
45:38 - and then title tag like so
45:41 - so what this is basically saying i'll
45:43 - just do this in a comment here but this
45:46 - adds
45:47 - dynamic title tag support so in other
45:50 - words wordpress is going to then manage
45:52 - the title tags itself and it does that
45:55 - automatically as long as we have in our
45:58 - header.php file this wp head command so
46:02 - that's another one of those reasons why
46:04 - we have this so now when i come over
46:05 - here and refresh whoops
46:08 - and let's go ahead and look at the page
46:09 - source
46:10 - you will see up here that in the head
46:13 - section right now
46:14 - if we scroll down here and look so i'm
46:16 - going to search for that title
46:18 - notice there is no title tag at all
46:21 - right now on this
46:23 - page and that's because wordpress hasn't
46:25 - yet figured this out
46:28 - so the reason wordpress hasn't figured
46:30 - out to add this title tag dynamically is
46:33 - because i forgot to wrap this in a
46:35 - function
46:36 - so
46:37 - i'm going to call this the function
46:38 - follow andrew we'll just call this theme
46:42 - support
46:44 - so this is going to be a function i'll
46:45 - go ahead and cut this and paste it in
46:47 - here
46:49 - and then i need to add this into a hook
46:51 - as well
46:52 - so the hook name here i'm just checking
46:54 - my notes is we're going to do another
46:56 - add action
46:58 - and it's going to be after
47:01 - theme
47:02 - setup
47:03 - is when this one will be called
47:05 - and we'll just copy and paste
47:07 - this into there
47:09 - okay the
47:10 - issue i've just discovered is i actually
47:12 - spelled title tag right typed it in
47:14 - correctly it's not title underscore tag
47:15 - it's titled dash tag that's the one you
47:18 - want to add in add theme support so
47:20 - let's save that and refresh and there we
47:22 - go now you can see my title appears
47:24 - right here it says blog site just
47:26 - another wordpress site
47:27 - and that's automatically being added
47:29 - into my page via wordpress
47:33 - so that's how we're going to leave that
47:34 - managed now this title and description
47:37 - is course is coming currently from the
47:39 - settings inside of wordpress so if you
47:41 - come into your settings general there's
47:43 - my title and there's my tagline so
47:45 - that's where those are getting injected
47:46 - from but we can let that be managed by
47:49 - wordpress automatically and it will
47:51 - inject in the proper titles according to
47:53 - whether it's a post or a page and
47:54 - whatnot we'll look at that a little bit
47:56 - later
47:58 - okay so back here into our code
48:01 - we will
48:02 - continue along
48:04 - so now we have our theme support for our
48:05 - title tag we're dynamically adding that
48:07 - we've got our things enqueued and the
48:10 - next thing we're going to do is add a
48:11 - few more options here inside of our
48:13 - theme
48:14 - to add some extra support so for example
48:17 - for our specific site here when we're on
48:20 - a post page i'm way zoomed out here so
48:21 - you can see this so i'm going to zoom
48:23 - back in but we're on like an individual
48:25 - post whoops i can't come to a post yet
48:27 - but i have a specific width here i'm
48:30 - just going to measure this quickly here
48:31 - so you can see the width of my page is
48:33 - roughly i don't know 800 or 900 pixels
48:36 - so when i upload images that i want to
48:38 - feature inside of my posts or pages i
48:41 - really don't want them wider than that
48:43 - dimension because they're never going to
48:45 - be shown larger than that so i can add
48:47 - what's known as custom thumbnail sizes
48:50 - so that anytime i'm inside of wordpress
48:52 - i'll switch over here to the backend of
48:54 - wordpress
48:55 - when you go to
48:57 - the media gallery and you say add new
48:59 - file and you drag and drop files in here
49:02 - wordpress automatically resizes those
49:04 - and it uses the sizes that are set up
49:06 - inside of your settings so if you come
49:08 - to settings and then go to media you'll
49:11 - notice that it has a thumbnail size a
49:13 - medium size and a large size so if you
49:16 - want to customize sizes beyond these
49:19 - three of course you can just change them
49:20 - here you need to do that inside of your
49:23 - theme
49:24 - with your
49:25 - with the function in the ad sizes now a
49:28 - thumbnail medium and large is fine for
49:29 - my needs so i'm just going to make sure
49:31 - this large value is roughly that width
49:33 - and that actually works out fine 10 24
49:35 - but just be aware if you want to add
49:37 - extra sizes that's when you need to go
49:39 - into your theme and add support for
49:41 - custom thumbnail sizes
49:44 - okay so we've got our header we have our
49:45 - footer we have our functions.php file
49:48 - which is making that title dynamic
49:52 - and that's about as far as we're going
49:53 - to get for this little section i just
49:55 - want to mention what we're going to be
49:56 - creating here in the next video
49:58 - so in our frontpage.php file we still
50:01 - have all of our content right all this
50:03 - stuff right here in the middle is hard
50:04 - coded we did with div tags and content
50:07 - right we don't want that we want all of
50:09 - the content to be managed by the
50:11 - wordpress blog that's the entire point
50:13 - of of creating a cms system is that you
50:15 - can manage the content within wordpress
50:18 - so what we're going to do is we're going
50:19 - to end up deleting all of the content
50:21 - out of this page we'll change our theme
50:24 - a little bit to maybe put this header
50:25 - and some of these footer tags down here
50:27 - inside of our header and footer and then
50:29 - we're going to talk about the wordpress
50:31 - loop which is how we can tell wordpress
50:33 - to query the database pull out all of
50:35 - the content for the specific page and
50:37 - insert it dynamically into our
50:40 - loop or our section of content so we're
50:42 - going to be starting here with the front
50:44 - page and then we'll move and do all of
50:45 - these separate template files one by one
50:47 - by one so you can see how that works
50:50 - and we need to take all of this
50:51 - hard-coded content that we added into
50:54 - our
50:55 - front page and put that inside of
50:57 - wordpress
50:58 - so what i'm going to do here is i'm just
51:00 - going to go into wordpress here so i'm
51:02 - going to log into the back end of
51:03 - wordpress go to my pages section and say
51:07 - add new
51:08 - and i'm just going to call this page my
51:10 - home suite home
51:12 - and i'll just type in something for now
51:14 - so eventually i'll fix this up i'm just
51:16 - going to go ahead and publish that so it
51:18 - is now published
51:20 - now i can come into my
51:22 - settings and reading
51:25 - and i want my home page to display a
51:28 - static page and that page is my home
51:30 - suite home so we need to first create
51:32 - the page and then we can tell wordpress
51:34 - to use that page as my as my website's
51:37 - homepage or front page
51:39 - and then we're gonna hit save changes
51:42 - okay
51:43 - so now we can come over here
51:46 - and we can go ahead and refresh this
51:49 - page
51:50 - inside of our blog
51:53 - and you'll see that right nothing's
51:54 - changing at this point we still have all
51:56 - of the hard-coded content so what i'm
51:58 - going to do next is i'm going to delete
51:59 - all this hard-coded content
52:02 - so i'm going to delete everything let's
52:04 - see everything in this container i'm
52:05 - just going to remove
52:07 - so that container goes down to right
52:09 - there
52:12 - and so now we just have the article and
52:15 - then we have our footer and our header
52:17 - so that's looking pretty good
52:19 - now the other thing i'm going to do is
52:21 - for each specific page i just want to
52:23 - have basically this article tag so i'm
52:26 - actually going to take this content
52:28 - right here
52:29 - and cut that out and put that in my
52:31 - header.php file
52:33 - so that's going to go right below here
52:37 - and then i will take let's go back here
52:39 - to the front page i'll take all this
52:41 - footer stuff down to that closing div
52:43 - tag save and i'm going to put that in my
52:45 - footer.php file
52:47 - right down
52:49 - there
52:51 - actually i'm going to have this go right
52:52 - above the wp footer command right there
52:55 - okay perfect
52:57 - so
52:58 - now inside of my template file
52:59 - essentially my header has everything
53:01 - except the article the main content
53:03 - which is the way i want it so let's just
53:05 - type something here and hit save and you
53:07 - can see sure enough that appears
53:08 - but i want the content that i saved in
53:10 - that page to appear here and this is
53:13 - where we're going to finally talk about
53:14 - what's known as the wordpress loop
53:16 - so wordpress a loop is basically an
53:18 - iterator right which iterates over
53:20 - several things
53:21 - so when we save a page or a post or
53:23 - really anything inside a wordpress when
53:25 - we save something inside of our posts or
53:27 - pages that gets saved as a role in our
53:30 - mysql database in my case
53:32 - so what wordpress does is it dynamically
53:34 - queries the database finds which row
53:36 - corresponds to the page you're on pulls
53:38 - that information and displays it in that
53:41 - section and that's known as the loop
53:44 - so
53:45 - when i come over here we need to create
53:47 - the loop code so this is a little bit
53:49 - weird the way they do this
53:50 - but wordpress uses a while loop
53:54 - so what you can say is
53:57 - um if
53:59 - we have posts
54:03 - okay so if posts exist basically
54:07 - then we're going to execute this code in
54:09 - here
54:10 - so the next section is going to be while
54:14 - and then we're going to say have posts
54:19 - while we have posts
54:21 - we come down here
54:23 - and we say
54:26 - the
54:27 - post
54:29 - okay so let's save that
54:31 - just far
54:32 - so if we have posts
54:34 - and this is the iterator this is the for
54:36 - loop or the while loop in this case
54:38 - while there's posts whoops this needs to
54:41 - be a function
54:43 - while we have posts
54:46 - so this in other words the post is going
54:47 - to execute every single time as long as
54:49 - there's posts so we can save that and it
54:52 - looks like oh yeah so that hadn't
54:53 - updated yet so let's refresh that over
54:55 - here looks like my web server actually
54:57 - may have crashed you can see it's
54:58 - trying and trying to reload this page
55:02 - uh but i think it crashed so i may need
55:04 - to restart my web server i'm going to
55:06 - pause really quick and restart the
55:07 - server
55:09 - okay so i've restarted my web server and
55:11 - we're back live here
55:12 - so what we can do is we can call the
55:14 - post and that essentially makes
55:16 - wordpress query the database
55:18 - and fetch out a single post
55:20 - once we've called the post we can then
55:22 - call a bunch of other wordpress
55:23 - functions so i'm just going to show you
55:26 - one here called the
55:28 - content and this is one that actually
55:30 - grabs the content and then starts it so
55:32 - you can see as soon as i save that sure
55:33 - enough my page now says something
55:36 - so this content of course is coming from
55:40 - my page here let me go down to my pages
55:43 - it's coming from this page right here
55:45 - right
55:45 - where it says something
55:47 - so instead of saying something i want
55:49 - this to actually show
55:51 - right i guess whatever is on my home
55:53 - page it really doesn't matter at this
55:54 - point but i'm just going to call this
55:56 - home page content
55:59 - and we'll go ahead and say update
56:01 - come back here and refresh
56:04 - and you can see sure enough that's
56:05 - coming in
56:06 - now i want this heading here to show me
56:09 - the
56:10 - title of the current page
56:13 - now because that is back here in my
56:15 - header
56:17 - dot php file there's a command in here
56:20 - that's called uh i'll actually have to
56:22 - look this one up really quick it's
56:23 - called i think get the title
56:25 - okay so the command is just called the
56:27 - title so i'm gonna come in here to this
56:29 - heading and i'll just replace this
56:32 - and say the
56:34 - title
56:35 - like so and then close off the php and
56:37 - save and now you can see it shows the
56:39 - current page title or post title
56:41 - whatever it would be
56:42 - up there in that section right there
56:44 - and then my content is right down there
56:46 - so that's looking great so that's really
56:48 - all we need right now
56:50 - for our front page to be mostly complete
56:55 - so we have this little loop we're
56:57 - pulling out the post and the content and
56:59 - there's a there's several other things
57:01 - you can pull out you can pull out the
57:02 - author the date the time the tags the
57:04 - post
57:05 - excerpt the post thumbnail post images
57:08 - right all those things are available
57:10 - inside of wordpress commands and that's
57:12 - going to really depend on how your theme
57:13 - set up where you want to display certain
57:14 - things but we'll get a little bit more
57:16 - into that as we do these other template
57:18 - files for our page in post
57:21 - sections
57:22 - so we're going to save that
57:23 - and now let's move on to another page
57:27 - so
57:28 - one of the problems that we have is our
57:31 - menu items right here inside of our
57:33 - sidebar are also hard coded
57:37 - so right this is this is not going
57:39 - anywhere so i need to make this section
57:41 - dynamic and in order to do that i have
57:43 - to add another thing to my functions.php
57:46 - file which enables
57:48 - uh menus wordpress menus so let's go
57:51 - ahead and do that next
57:53 - so we'll come in here to our functions
57:54 - let me pull this down
57:56 - and we will
57:57 - add our menu options
58:00 - inside of our functions.php file we're
58:02 - going to create a new function here and
58:04 - this is just going to be called the
58:06 - follow andrew and we're just going to
58:08 - call the menus
58:11 - okay now there is a
58:14 - in order to set up your menus in
58:15 - wordpress you can set up as many what
58:17 - are known as menu locations
58:19 - so for example in my website i've got a
58:22 - menu location over here on the left
58:24 - perhaps i want another one on this
58:26 - footer maybe i want a different menu
58:28 - location for the mobile right so you can
58:31 - set up different menu locations
58:33 - but for us we're just going to set up
58:35 - two to show you how this works
58:37 - so let's come over here and i'll pull
58:39 - this over again so we're gonna create an
58:41 - array so i'm just gonna call this one
58:42 - the locations and i'll set that equal to
58:44 - an empty array for now
58:47 - and then inside of this array it's
58:49 - basically key values so the key is the
58:51 - menu location name and the value is like
58:55 - the title and a few things like that
58:57 - so the first thing i'm going to do is
58:59 - just call this one my primary menu
59:01 - and the primary menu
59:04 - is going to be
59:07 - we can just call this the
59:08 - desktop primary
59:11 - left sidebar right this is kind of a
59:13 - description of your menu really whatever
59:15 - you want to call that and then i'll add
59:17 - one more and i'll call this one my
59:18 - footer menu
59:20 - and then i'll just say the footer menu
59:22 - items
59:24 - however you want to call that okay so
59:26 - once you have your your
59:28 - option declared your function we of
59:30 - course need to add in another hook so
59:32 - we're going to say add
59:34 - actually sorry i'm getting ahead of
59:35 - myself there's one other command we need
59:37 - to do inside of here and that's called
59:39 - register nav
59:41 - menus
59:43 - and we need to pass in this variable so
59:45 - this is an array of all of our nav menu
59:49 - names and descriptions okay so all that
59:51 - code is inside of our function then we
59:53 - need to add in to the action so we're
59:55 - going to add add action this one's going
59:57 - to be inside of the init hook
60:01 - so we'll copy and paste in our function
60:03 - name like we've done several times
60:04 - before so this function is going to hook
60:06 - into the initialize function which
60:08 - happens fairly early on in the in the
60:10 - hook process
60:11 - and we'll go ahead and save
60:13 - okay now that we have those active if i
60:15 - come back and log into wordpress here
60:17 - and now go into my appearance
60:21 - and notice that before i didn't have an
60:24 - option for menus menus actually was not
60:26 - even in this menu but now because i've
60:28 - added that in my theme i can click on
60:30 - the menus and i now have menus available
60:33 - to me
60:34 - so what we're going to do is we're going
60:35 - to create our first menu so i'm just
60:37 - going to call this menu name the main
60:39 - menu
60:41 - and we'll say create
60:43 - and now notice right here i have these
60:46 - two locations i have my desktop primary
60:48 - and my footer
60:50 - so now i can select where i want this
60:52 - menu to appear inside of my theme
60:55 - so let's go ahead and i'm just going to
60:57 - add a couple of options here
61:00 - so for right now i'm just going to
61:01 - create a few new pages so i'll come into
61:04 - my pages and hit add new
61:07 - i'll call this one my about page the
61:09 - only reason i'm doing this is just so i
61:11 - have something in my menu in order to
61:13 - show right now so we'll publish this
61:16 - let's add
61:18 - we will add one more and we'll call it
61:19 - contact
61:21 - us
61:22 - and we'll say contact and we'll publish
61:24 - that page as well
61:26 - okay so now when i come back in here to
61:28 - my appearance menus
61:30 - i have a few things over here i can add
61:31 - so i'm going to add all of these three
61:33 - the default sample and then those two
61:35 - and i'm going to say add to menu
61:37 - and you can see that they get added
61:38 - right here to my main menu in wordpress
61:41 - you can drag these as sub menus and
61:42 - they'll appear as drop down menus if
61:44 - your theme supports that or just as main
61:46 - items like this and now i want to say i
61:48 - want this menu to appear in my desktop
61:52 - primary left sidebar
61:54 - so i'll go ahead and click on my save
61:56 - menu
61:57 - okay so now this menu is created in
61:59 - wordpress it's set to be displayed where
62:02 - that menu location is but i of course
62:05 - haven't actually added the code for that
62:07 - menu to appear so that's where we'll
62:09 - jump back into our code editor
62:11 - and we're now going to go set up what's
62:13 - known as the primary menu
62:14 - so that is done if we recall back in our
62:18 - theme we come into our header
62:20 - our header has that entire menu it's a
62:22 - little bit tricky here i'm going to line
62:24 - wrap this
62:25 - but this is all the code for that menu
62:29 - that's hard coded so essentially i want
62:30 - to remove all that hard coded menu and
62:33 - replace it with a wordpress function
62:35 - that's going to automatically
62:36 - dynamically display the menu so let's do
62:38 - that next
62:40 - now you can see here from my code my
62:43 - menu is inside of this unordered list so
62:46 - i have a div called navigation
62:48 - and uh this is
62:51 - these classes collapse navbar collapse
62:53 - flex column these are wordpress sorry
62:55 - not wordpress these are bootstrap
62:57 - classes that automatically enables the
62:58 - mobile menu and automatically does a few
63:01 - things like that but the actual menu
63:03 - itself is all inside of the unordered
63:05 - list
63:06 - each menu item right in my list here
63:09 - is a simple unordered list with a list
63:12 - item with a whole bunch of classes and
63:13 - things that kind of make it
63:16 - styled correctly so essentially what i
63:18 - want to do is i'm going to
63:21 - add some of my own code
63:24 - [Music]
63:25 - right inside of this section now
63:26 - eventually i'll delete all of this
63:28 - hard-coded stuff but i'm going to leave
63:30 - it right now because i'm going to need
63:31 - to reference it as i build this menu via
63:34 - wordpress
63:35 - so the command you need is called um
63:39 - wp
63:40 - nav
63:42 - menu and with this function it takes
63:47 - several parameters
63:49 - so we i'm going to open up the function
63:51 - here i'm going to do these parameters on
63:52 - one line
63:54 - so it takes an array
63:57 - and i'm going to put each of these
63:58 - parameters in the array like this okay
64:01 - so this function takes an array and the
64:03 - array is a set of all the different
64:05 - parameters so the first one we're going
64:07 - to do is just called menu and this is
64:09 - the name
64:11 - of the menu you're trying to output in
64:13 - my case the primary menu menu remember
64:16 - how we registered primary and footer
64:18 - so i'm going to output the primary one
64:19 - right here
64:21 - okay so that's the first thing the
64:23 - second thing is just i'm going to say
64:24 - container and i'm going to leave this as
64:28 - empty for now i'm just listing it here
64:29 - so you can see a few of the option
64:32 - and then i'm going to say theme location
64:35 - is
64:36 - primary
64:40 - as well
64:41 - okay
64:42 - so this means right when the user
64:44 - selected that theme location i'm saying
64:46 - this is the primary location
64:48 - right here
64:50 - and the
64:53 - uh name
64:53 - should be fine right there
64:55 - okay so now you can see if i if i open
64:58 - this back up i'm getting two menus right
65:01 - so now i'm getting my contact my about
65:03 - and my sample page so let's go ahead and
65:05 - inspect these in our
65:08 - code over here
65:10 - and you can see that it's a little bit
65:12 - messy here i'll try to pull this out
65:15 - but wordpress is injecting all sorts of
65:17 - classes into this
65:19 - menu so you can see that wordpress added
65:21 - an unordered list it gave that guy an id
65:24 - it gave it a class of menu each of the
65:26 - menu items has a class of menu item then
65:29 - the post type and then the object page
65:32 - item 14 item 15 item 16. so there's all
65:35 - sorts of stuff that wordpress injects
65:36 - into the menu and you can customize all
65:39 - this
65:40 - as needed
65:42 - but it gets a little bit tricky if you
65:43 - want to do advanced customization
65:44 - because you have to include what's known
65:46 - as a walker class to be able to iterate
65:48 - over the menu to customize everything so
65:50 - we're not going to get that advanced but
65:52 - we will learn a few of the tools to
65:54 - where we can customize some of these
65:55 - some of these classes
65:57 - so the next item we're going to be
65:58 - adding here is one that's called items
66:01 - wrap
66:03 - and this declares it's sort of the
66:05 - template
66:06 - that is for the
66:09 - unordered list this is what the items
66:11 - wrap means
66:12 - so what you have to do here is you have
66:14 - to
66:14 - this is a little bit goofy because
66:17 - you have to say ul so i'm just going to
66:19 - open the ul and close the ul so in other
66:21 - words i'm going to wrap this with an
66:22 - unordered list and then i have to put
66:24 - parameters inside of here where
66:26 - wordpress will individually add my
66:28 - classes
66:29 - so one thing is going to be id the other
66:32 - thing is going to be a class
66:35 - and then inside of the unordered list i
66:38 - have to put the
66:40 - uh
66:40 - ampersand
66:43 - three
66:44 - dollar sign s
66:46 - and then when i save and refresh here
66:49 - whoops looks like i missed a semicolon
66:51 - or something
66:54 - oh yeah i wasn't supposed to add a
66:56 - semicolon right there let's go ahead and
66:57 - save that
66:58 - so now if i pull this menu back i'm
67:01 - going to
67:01 - go down one more time here i'm trying to
67:03 - get this mobile menu whoops to disappear
67:05 - there we go
67:07 - let's get that text back up here and
67:08 - we'll inspect the element again
67:11 - and you can see here that now
67:14 - my unordered list has an empty id and an
67:17 - empty class whereas before it had all
67:19 - that wordpress injected stuff so now i
67:22 - can specify whatever id and whatever
67:23 - class i want so my own unordered list in
67:26 - my menu doesn't have an id but i do have
67:27 - all these classes so i'll just copy
67:29 - those and
67:30 - paste that right into there and save
67:32 - and then let's go ahead and see what
67:34 - that looks like now perfect so you can
67:36 - see now it's got the class and it has
67:38 - all those different classes in there
67:40 - so that takes care of the items wrapper
67:42 - the unordered list but as i mentioned
67:45 - there's not an
67:46 - option in here to also
67:49 - affect the classes on the list item with
67:52 - this wp nav menu in order to do that we
67:54 - have to create this big long custom
67:56 - walker and it's quite complex so what we
67:58 - have to do in order to get our classes
68:01 - on our list items
68:03 - is we actually have to do that back
68:04 - inside of wordpress admin
68:07 - so let's come back in here and you can
68:09 - see that if i open up one of these
68:13 - options here for all of these different
68:15 - items so here i have my contact us
68:18 - there's a few options in here that i can
68:20 - toggle
68:21 - so what we need to do is
68:25 - we need to turn on an option here
68:28 - screen options i believe there we go so
68:31 - here it says show advanced menu
68:32 - properties we need to turn on the css
68:35 - classes okay and the link target let's
68:38 - just turn let's
68:39 - well actually we don't need that one
68:41 - that should be fine
68:42 - okay now you can see that i can provide
68:45 - a css class for the specific option
68:48 - so again the class name i need for me is
68:52 - the nav item right there so i'm going to
68:54 - copy nav item
68:56 - and we'll come over here and we'll click
68:58 - paste
68:59 - and now let's go ahead and save that
69:01 - so we're just going to do this on one
69:03 - for now but you can see that my contact
69:05 - has the
69:06 - nav item on it
69:08 - so let's go back here and refresh and
69:10 - see if we can now see that appear here
69:14 - so that is the first one right here
69:18 - and sure enough you can see that it
69:20 - still has all the wordpress classes over
69:22 - here but it does have now the class of
69:24 - nav item which is the one i was after
69:28 - okay so that's looking good
69:30 - um for now
69:32 - and we can go ahead and add that to the
69:35 - rest of these so we'll go ahead and add
69:37 - that to this one
69:38 - and we'll add it to this one
69:42 - and go ahead and save
69:45 - so now all of those have that
69:52 - and refresh okay so that's looking
69:53 - better
69:55 - now you can also see that in our menu
69:57 - our anchor tags themselves have the
70:00 - class of nav link
70:03 - and there's no way for me to customize
70:05 - the anchor tag with css classes
70:08 - so even if i come in here to wordpress
70:10 - and i you know toggle these guys
70:13 - this class is applied to the unordered
70:15 - list not the actual anchor tag
70:18 - and i'm unaware of a way where you can
70:20 - do that so you actually have to use a
70:22 - custom walker
70:24 - to make that happen we're not going to
70:25 - get that far
70:26 - in this tutorial but just be aware
70:28 - there's several other tutorials out
70:29 - there on doing some advanced things with
70:31 - walkers
70:32 - but we'll just leave this with our nav
70:34 - item now notice we also have a
70:39 - inside of our anchor tag we have this
70:41 - icon
70:42 - so i'm going to copy the icon here
70:45 - and i'll just copy this
70:47 - and
70:48 - let's actually do this one for the we'll
70:50 - do the blog post one just to show you
70:52 - i'm not going to do this to them all but
70:53 - i'll copy this icon this is coming over
70:55 - from font awesome so what i could do if
70:57 - i wanted the icon let's say on this i
71:00 - don't know we'll just pick the about
71:01 - page here
71:02 - i could paste that directly that html
71:05 - directly into the navigation label and
71:08 - save
71:10 - and now when i come over here and
71:11 - refresh
71:13 - uh you can see
71:14 - that let me zoom in here
71:17 - i've got my icon
71:19 - right so there's the little icon
71:20 - appearing so that's how you have to do
71:21 - your bootstrap icons again it's a little
71:24 - bit clunky doing it this way and that's
71:25 - because we have a really specific markup
71:27 - that's required because of bootstrap a
71:30 - much easier way would be to change your
71:32 - own css and match wordpress's
71:36 - outputted css classes that they give you
71:40 - um
71:41 - but of course if you can't do that then
71:42 - really you have to jump to that advanced
71:44 - method with the custom
71:46 - walkers
71:47 - in
71:48 - uh
71:49 - inside a wordpress perhaps i'll do a
71:50 - video on that in the future but for
71:52 - right now we'll just leave it alone like
71:54 - this
71:55 - okay so we've got these little items
71:58 - just so you can see the only thing
71:59 - really this nav link is doing for us
72:02 - if i inspect the element here and i just
72:04 - manually add one so i'll come in here to
72:06 - this code and we'll say we'll give it a
72:09 - class equals nav dash link
72:13 - just so you can see all it's doing is
72:14 - just changing the size and the color
72:18 - of that so perhaps what i can do to to
72:21 - get that to work
72:23 - is instead of calling these things nav
72:25 - link remember wordpress um gives these
72:28 - guys hey what does wordpress do i
72:30 - actually don't know
72:31 - um
72:33 - looks like they're actually not giving
72:34 - the anchor tags any markup at all
72:37 - so i'd have to go into my own css and
72:39 - edit that class and maybe perhaps move
72:41 - it up to the nav item
72:43 - so i could do something
72:45 - like let's come over to my css so we'll
72:48 - search for the nav dash item
72:51 - and you can see that the nav item has a
72:54 - little rule here that's for the nav link
72:56 - so instead of calling this nav link i'm
72:58 - just going to call it anchor because
73:00 - that's really what it is it's an anchor
73:01 - tag
73:02 - and i'll call this one here anchor
73:04 - and save
73:07 - and now they're basically you know
73:09 - having that same
73:11 - same thing happening to them oh here's
73:12 - another one over here i guess i should
73:14 - just replace all these nav links let's
73:16 - do a quick search here
73:17 - looks like i have five of them
73:19 - so this one will be anchor this one will
73:22 - be
73:23 - anchor
73:25 - there's another one we're going to have
73:26 - as
73:27 - anchor
73:30 - well they're all over the place and all
73:31 - these so i'll replace that one with
73:32 - anchor this one with anchor
73:36 - oops that's
73:38 - oh that's nav link pre that's a
73:40 - different one
73:41 - oh that's a different one too
73:46 - so that'll be
73:47 - anchor
73:49 - now let's see if that's working
73:51 - so that's a little bit better right so
73:52 - now we're getting close there to
73:55 - our previous menu down here it looks
73:56 - like we have some issue with this
73:58 - spacing
73:59 - which i'm not sure where it's coming
74:01 - from
74:03 - looks like we have one more nav link
74:04 - nope that's the previous
74:06 - so i don't know there's a margin
74:08 - somewhere in here i missed but we'll
74:09 - just kind of ignore that
74:11 - but you can see how that's going to work
74:12 - so now that i've got those in there and
74:15 - hard coded i can come into my header and
74:18 - i can finally then take this old menu
74:21 - and delete it out
74:23 - because now that's been replaced by this
74:26 - menu
74:27 - so that was perhaps the most complex
74:29 - thing we've done thus far and that's the
74:30 - way the menus typically
74:32 - tends to be because there's just lots of
74:34 - nesting and classes all over to kind of
74:36 - build those menus
74:38 - so now we have our menu working there's
74:40 - our three little pages we have inside of
74:43 - there
74:44 - and they're showing up just fine on
74:47 - both the desktop and the
74:49 - mobile view as they should
74:52 - okay so that's how you build menus
74:55 - now the next thing we need to do now
74:57 - that we have our menu out of the way
74:59 - is create or our menus at least dynamic
75:03 - is create uh the rest of our template
75:06 - pages
75:07 - so we can leave all these hard-coded all
75:09 - the social links would just be
75:10 - hard-coded likely anyway
75:12 - and that's looking fine now
75:15 - for our
75:19 - header the one thing i'm noticing right
75:21 - here we might as well fix while we're
75:22 - here is that you can see my shortcut
75:24 - icon has the incorrect path
75:27 - so i want to just update this so i'm
75:28 - just going to hard code this one wp
75:30 - content slash themes slash follow andrew
75:34 - slash
75:36 - assets images logo.png
75:39 - i think that's where that is so if we
75:40 - come into our images that's where it
75:43 - will be so i'll come in here and drop it
75:45 - in so i'm going to come over here to my
75:47 - template
75:49 - uh
75:51 - i can't really see where i'm looking at
75:52 - here oh there he is blog site template
75:54 - images
75:56 - there's my logo png i'll drop that
75:58 - into my images folder
76:02 - that's the little logo that's also going
76:03 - to appear right up there right okay so
76:05 - that would be like the favicon is
76:07 - basically what this guy is the shortcut
76:09 - icon
76:11 - okay so that's looking fine there and
76:13 - now let's go ahead and move along
76:17 - so we need to now finish our
76:21 - removing all the stuff that's hard coded
76:23 - so for example we have our site name
76:25 - that's hard coded right here into our
76:28 - site name we have our logo that logo is
76:31 - hard coded
76:32 - in here as well so we need to start to
76:35 - uh remove all that stuff
76:37 - so we're going to start here with our
76:41 - uh site name and logo so we're going to
76:43 - show you how you can add a custom logo
76:45 - meaning the user can go into the
76:46 - wordpress admin upload a logo and it'll
76:49 - automatically then appear in your theme
76:51 - so let's go ahead and do that
76:54 - so in my navigation area is where i have
76:57 - that logo
76:59 - stored
77:00 - so the first thing we need to do is come
77:01 - to our functions and just like we've
77:02 - done many times before we need to add
77:04 - the theme support
77:06 - uh for this function so remember we have
77:09 - this function up here where we're gonna
77:10 - be adding all of our theme support so
77:12 - we're gonna say add
77:15 - theme support
77:18 - and this one is going to just be called
77:20 - custom dash logo
77:23 - okay so we
77:24 - do that
77:26 - now what that allows if we jump over
77:28 - here now to our
77:30 - back end
77:32 - and we come over here to our themes
77:35 - and we choose the customize action
77:38 - on the installed theme
77:40 - so you can see i can come in here to the
77:42 - site identity and there's a new option
77:44 - in here called logo so i can click on
77:46 - select logo and you can just come in
77:48 - here and browse to the logo i'll just
77:50 - select this logo that i've got and say
77:52 - open
77:53 - and this of course uploads it you can
77:55 - give an alt text i'll just call this my
77:57 - logo and say select
77:59 - of course you can come in here and do
78:00 - some cropping options i'm just going to
78:02 - say skip cropping
78:04 - and there is the logo
78:06 - so now that i have a logo i'm going to
78:08 - go ahead and click the publish here
78:11 - and come back
78:12 - and now that the logo is in place i can
78:15 - actually output it
78:17 - so let's come back here and i'm going to
78:21 - come back to the code here i'm going to
78:23 - jump back over here to my header.php
78:25 - file come down to where i have this logo
78:28 - hard coded
78:29 - and then i can actually output it right
78:32 - here
78:33 - so the code you need to
78:36 - output the logo
78:39 - is
78:40 - i forget it i've got to look up my note
78:42 - it is
78:45 - we can do this one in an if function so
78:47 - we can say if
78:49 - function exists so this is just checking
78:52 - to make sure that the
78:55 - the
78:56 - custom logo
78:58 - whoops
79:00 - function exists
79:01 - because
79:02 - if we're on an older version of
79:03 - wordpress or something this may not work
79:05 - so if that function exists then we say
79:08 - the
79:08 - custom
79:10 - logo and we just output it like so
79:14 - so now let's go ahead and
79:16 - refresh this whoops i wrote all that and
79:19 - i forgot to do my php tags
79:21 - make sure you actually
79:25 - write that inside of
79:27 - php tags and save and now you can see
79:30 - sure enough there is my logo and it's
79:32 - automatically output now you can see
79:35 - that the issue here is that the logo
79:36 - gets output but wordpress is adding
79:38 - again all of these extra classes and all
79:40 - these things
79:42 - and they don't follow with what i need
79:45 - which if we come back here to our header
79:47 - file
79:49 - is
79:50 - scroll down here whoops where'd it be
79:54 - there we go so i need these classes
79:56 - right because those are the classes that
79:58 - i'm using on my logo
80:00 - so what i need to do instead of saying
80:01 - the custom logo i need to output
80:04 - a little bit more
80:06 - so what we're going to do is
80:09 - we're going to say
80:11 - instead
80:13 - we're going to say custom
80:14 - logo
80:16 - id and this code i'm getting is just
80:18 - from the the codex so i'm going to say
80:20 - get theme modification
80:23 - custom
80:25 - logo
80:27 - okay so i'm getting this variable
80:29 - and then i'm going to say the logo is
80:31 - equal to
80:33 - and then we say wp underscore get
80:36 - attachment
80:40 - image this is a little bit weird here
80:43 - source
80:44 - and then we pass in this custom logo id
80:47 - right here
80:49 - so whoops we need to make that a
80:50 - variable so we pass in that variable
80:53 - and that should do it
80:58 - whoops
80:59 - i think i forgot a semicolon yes i did
81:01 - so semicolon
81:03 - okay so
81:05 - now you can see that
81:08 - oh i still have an error in there
81:10 - somewhere
81:13 - um
81:14 - call to undefined function wp get
81:16 - attachment source so i must have spelled
81:18 - this wrong
81:20 - wp get attachment
81:24 - image
81:25 - source
81:29 - yep i forgot an e there we go
81:31 - whoops
81:32 - see attach
81:35 - mint there we go
81:36 - okay that's correct now
81:39 - okay so now if we just now this logo
81:42 - basically has all the information about
81:44 - the the image source so now what i can
81:47 - do is i can just manually output
81:50 - my image
81:51 - so right here where it says source i'll
81:54 - just delete that
81:55 - and i'll replace that
81:57 - with the source which comes from
82:01 - our variable right here so i copy that
82:04 - replace that inside of there
82:06 - and save and refresh
82:08 - and that still didn't output
82:13 - i think i have short tags on but i'll
82:15 - just do this the old way php
82:18 - echo
82:22 - and let's i'm still not seeing the logo
82:26 - so let's just really quick do a quick
82:28 - print r on this to see what's inside of
82:31 - this variable make sure it has the
82:33 - information i'm looking for
82:36 - so you can see it does have it so there
82:38 - is the actual
82:40 - image source oh it's the first it is a
82:42 - multi-dimensional array and there's the
82:44 - width and the height
82:45 - um so what we need to do is we need to
82:48 - get the
82:50 - uh first parameter so we can say
82:54 - logo
82:55 - sub zero
82:57 - here we go and there my logo now shows
82:59 - up
82:59 - okay so let's close that down and save
83:02 - so that was kind of a little bit of a
83:03 - work but now you can see i can output
83:06 - the custom logo there
83:08 - and
83:09 - uh
83:10 - including my custom classes so there's
83:13 - kind of two ways you can do that right
83:14 - if you want to do it the easy way you
83:16 - just
83:17 - you know output that simple function
83:19 - right there the custom logo if you need
83:21 - to have it customized and just need the
83:23 - path you can grab the path using this
83:25 - code right there and then add that path
83:27 - directly into your image tag as needed
83:31 - okay so that is now i think mostly done
83:35 - so let's close this down and just double
83:37 - check so everything now should be
83:39 - dynamic so our oh we have to do that one
83:42 - last thing so our logos dynamic our
83:43 - menus dynamic the page content is
83:46 - dynamic the page
83:47 - heading here is dynamic our page title
83:50 - is dynamic so everything is now being
83:52 - pulled from wordpress with the exception
83:54 - of a couple of things and that's our
83:55 - site name of course we have this
83:57 - hard-coded we're going to end up doing
83:58 - that in widgets in the future tutorials
84:00 - so you can add widgets in our footer to
84:01 - be able to customize those text boxes
84:04 - but let's go ahead and grab the site
84:06 - name
84:07 - and add that to that
84:09 - area right here
84:12 - so to do that we'll just delete this
84:14 - right here and we'll replace that
84:17 - with a php call and it's going to be
84:20 - called get
84:22 - blog info
84:24 - and then this is going to be the name
84:26 - whatever the name attribute is of the
84:28 - blog will output that for the site title
84:31 - so uh that should be it
84:34 - and we need to
84:36 - echo that there we go
84:38 - and now it says blog site right so
84:39 - that's basically whatever is the name of
84:42 - the site so that's customizable as well
84:44 - back in here right this this right here
84:46 - so i can call it uh
84:47 - andrew's site or we'll call it follow
84:49 - andrew follow andrew
84:52 - if i can type that correctly and just go
84:54 - ahead and save and publish that
84:57 - and now if we jump back here and refresh
85:00 - right now that's dynamic as well so we
85:02 - have our site name being pulled we have
85:04 - our logo being pulled dynamically with
85:06 - custom logo uploadability all of our
85:08 - menu is dynamic
85:10 - and that is now pretty much there so
85:12 - what we're going to do is start off by
85:15 - adding some posts into our wordpress
85:17 - theme so you recall we added these three
85:19 - pages but we need to add now a whole
85:21 - bunch of posts so we can mock up our
85:23 - post page and our post archive page so
85:26 - let's go ahead and do that next
85:28 - the wordpress backend i'm over here on
85:30 - the post tab and i'm just going to say
85:32 - add new here for all these posts
85:35 - so i'll just call this sample title 1
85:39 - and we're going to be doing i don't know
85:42 - 10 or 15 of these so i'll just do one or
85:44 - two and then i'll pause the video do the
85:45 - rest and you can go ahead and do that on
85:47 - your own so with the paragraph of text
85:49 - what we're going to do here is we're
85:50 - going to do two things we're going to
85:51 - have a paragraph of text
85:53 - and then
85:54 - go ahead and add in a couple of tags so
85:57 - i'll just say sample tag
86:00 - another
86:01 - cool so we're adding in a few tags and
86:03 - i'm also going to add in this to my
86:05 - uncategorized category
86:07 - i'm going to add in an excerpt so this
86:09 - is the post
86:11 - excerpt an excerpt of course is optional
86:13 - it's just sort of like a short
86:14 - description of what this post is about
86:17 - and then what we're going to do is go
86:19 - ahead and say publish
86:24 - and say publish
86:25 - okay so you can see it's giving me this
86:27 - sample link here for my post but the one
86:30 - extra thing we need to add in here
86:32 - is what are known as post thumbnails so
86:35 - if i come over here to my posts page and
86:37 - you see my sample post if i go ahead and
86:39 - edit this
86:41 - notice over here in the sidebar in my
86:43 - document there isn't any way for me to
86:46 - add an image so a featured image to this
86:48 - post and we want to be able to add that
86:50 - to our theme because our mock-up calls
86:53 - for those little featured images so we
86:55 - need to go add that in our functions
86:57 - file to add support for post thumbnails
86:59 - so let's move back over here to our code
87:02 - in vs code and we're going to move over
87:04 - to our functions file and come up here
87:06 - to our section where we're adding all of
87:07 - our theme support and we're going to be
87:09 - adding the last one right here
87:12 - so let's go ahead and add another one
87:14 - here we're going to say add
87:17 - theme support
87:19 - and this one is just post dash
87:21 - thumbnails like so
87:24 - and we'll go ahead and save that and now
87:27 - when we jump back over to the back end
87:28 - and refresh here
87:30 - you'll see that there's a new section
87:32 - right over here called featured image so
87:35 - what that allows me to do is now i can
87:36 - come in here and set a featured image so
87:39 - i can choose from any existing image
87:41 - that's already uploaded into the system
87:43 - or i can click my upload files and just
87:44 - go ahead and upload a new one so i'm
87:46 - just going to upload a new file here
87:48 - and we'll come over here because i've
87:50 - got all these
87:51 - thumbnails already in place so i'll just
87:53 - choose this and hit ok
87:56 - so i'll open this you can see it uploads
87:57 - that i can give it an alt text a sample
88:00 - image
88:01 - etc etc and then say set featured image
88:04 - you'll notice down here it sets that as
88:05 - the featured image
88:07 - now the featured image size or the width
88:09 - and height of that you can customize in
88:11 - your functions.php file but remember by
88:13 - default that is set i'm going to update
88:15 - this post really quick before i move off
88:17 - of this page you can update that in the
88:19 - settings reading section just kidding
88:22 - settings media section and it's right
88:25 - here the thumbnail size width and height
88:27 - so mine are going to be resizing to
88:29 - 150x150
88:31 - so now we can go back to that post
88:34 - and if we view the post
88:36 - you can see that it takes us to a blank
88:38 - page
88:39 - and that's because on our template file
88:41 - we don't have anything yet set up for a
88:42 - post so that's where we're going to
88:43 - start off with our next template is an
88:45 - individual post page
88:48 - so let's go ahead and jump back here to
88:50 - visual studio code
88:52 - and we're going to move over
88:55 - and start that process
88:57 - so let's come in here to or i'm going to
88:59 - open up my sidebar again
89:01 - and we will
89:03 - open up this time we're going to come
89:04 - over here to our front page we're just
89:07 - going to copy everything so command a
89:08 - command c because most of our template
89:10 - files will be very similar
89:12 - and we'll move over here to the one
89:14 - called single dot php so the single dot
89:17 - php is responsible for single posts and
89:20 - i'm going to go ahead and just paste
89:22 - and save and now let's go ahead and
89:25 - navigate back to that post i actually
89:27 - can't remember the post id
89:28 - um so let's go ahead and look here
89:31 - so i can get over in the other document
89:34 - um it is
89:36 - i guess i need to go back here
89:39 - i'm just going to click on uh
89:41 - edit here
89:42 - so i can see what the permalink is
89:47 - preview there we go so it is post
89:52 - 22.
89:55 - i guess i have to switch out of full
89:56 - screen mode to see the bar here
89:58 - okay so it is
90:01 - p22 so i'll just copy that let's move
90:03 - back over here to vs code
90:05 - i'm just doing this because i don't have
90:06 - a way to link to it quite yet we haven't
90:08 - built that functionality yet
90:11 - okay so this should give me
90:14 - that post there we go
90:15 - so you can see now i'm on the sample
90:16 - title one there's my paragraph and my
90:18 - text
90:20 - and that's pretty much it that's all we
90:22 - technically need to do
90:23 - is just simply have a
90:26 - the exact same content in the single dot
90:28 - php
90:30 - so what we can do however is we can then
90:32 - split up our posts our single dot php
90:35 - posts into different types so for
90:38 - example i may have a post that's a
90:40 - gallery just pure images or i may have a
90:42 - post that is a
90:45 - full entire article or i may have a post
90:47 - that is a video
90:48 - so there's different types of posts
90:50 - inside of wordpress and we can split
90:52 - those different template parts up into
90:54 - know into what are known as template
90:56 - parts and that's why we created a long
90:58 - time ago we created this folder called
91:00 - template dash parts
91:02 - so that's how we're going to be make
91:04 - this single dot php template file behave
91:07 - is it's going to search for a specific
91:09 - template part that matches the post
91:11 - type let's say
91:13 - so let's go ahead and set that up
91:16 - so instead of just saying output the
91:19 - content
91:20 - of the post this is the spot we're gonna
91:22 - try to customize
91:24 - so we're gonna cut that out and instead
91:26 - we're gonna replace that with a
91:29 - wordpress function called get
91:32 - template
91:33 - i think it's just part yeah get template
91:35 - part and then we're going to look inside
91:37 - of the this is the url so our folder is
91:40 - called template
91:42 - parts slash
91:45 - and then whatever the content so we'll
91:46 - just say content right here
91:50 - just like so so the way this function
91:52 - works is the first parameter is the file
91:56 - path
91:57 - the second parameter if i have comma
92:00 - and then i have another name in here
92:03 - this is the type
92:05 - so something like that now i'll show you
92:07 - the way this works so now what i'm going
92:08 - to do is i'm going to come i'm going to
92:10 - save this and notice that my content
92:12 - disappears because i'm no longer
92:14 - outputting the content i'm going to open
92:16 - up my template parts folder and i'm
92:18 - going to create a new file in here and
92:20 - it's going to be content
92:22 - dash
92:23 - article dot php
92:26 - and then in here i'm just going to
92:28 - simply output just like i cut out
92:31 - the content and save and now you can see
92:33 - it pops back
92:35 - so the way this little function works in
92:37 - our single
92:38 - is it looks for the file name that you
92:40 - have right here if you don't by the way
92:42 - if you don't provide the second
92:43 - parameter it just simply pulls up this
92:44 - file but if you do provide the second
92:46 - parameter it looks for the hyphenated
92:49 - version so content dash article
92:51 - and that's the way this works so what
92:53 - this allows me to do is then i can have
92:55 - another template part called content
92:57 - dash gallery
92:58 - if i have a file that's going to be a
93:01 - gallery or something like that so it
93:02 - allows you to kind of split up and
93:04 - modularize all your
93:06 - wordpress
93:07 - template files in another way we're not
93:09 - going to be creating tons of these i
93:10 - just wanted to demonstrate sort of how
93:12 - this process works
93:14 - for uh for this specific post
93:17 - so
93:18 - uh that looks fine for this one uh let's
93:22 - now go in and we're gonna customize this
93:25 - article template
93:26 - so if we come into here you can see
93:28 - we're grabbing the content and that's
93:29 - fine but we also set up some tags we
93:32 - have a featured image we set up a
93:34 - category maybe i want the post date the
93:36 - post author so there's a bunch of
93:38 - information that's typically called
93:39 - metadata or information about the post
93:42 - that i may want to display alongside
93:44 - just the content so that's what we're
93:46 - going to do next so let's go ahead and
93:48 - set up all that metadata
93:51 - you can recall what the post page looks
93:53 - like i've pulled up here my template
93:55 - file so this is what a single post would
93:57 - look like notice that we have the
93:59 - published we have a few tags with some
94:01 - little icons we have a link right here
94:03 - that jumps us down to the comments
94:05 - section we have comments with nested
94:06 - comments
94:07 - and then of course we have a little
94:09 - animation that happens in our sticky
94:10 - header
94:11 - and we have a featured image right here
94:13 - and then everything in here is going to
94:15 - be this is all the post content right so
94:17 - all of this stuff is coming from the
94:19 - post content so we need to mock up all
94:21 - this extra stuff
94:23 - so that's kind of how this page looks
94:25 - like so let's jump back here to our code
94:27 - and i'm going to open up that specific
94:30 - uh template file here so that is our
94:34 - post page our single post one that we
94:36 - have mocked up here
94:38 - and we're gonna grab some of this html
94:39 - so we can paste it over into our php
94:41 - template so let's cruise down a little
94:43 - bit
94:44 - into this section right here
94:46 - okay
94:47 - so uh
94:49 - what we need is we need this little
94:53 - published three months ago we need that
94:56 - we need the
94:58 - container
95:00 - i guess we need a lot of stuff in here
95:02 - so let's grab the container first so
95:04 - we're going to grab this we're going to
95:05 - grab this looks like that's mostly all
95:07 - we need
95:08 - so we'll copy that
95:10 - and we'll jump over here to
95:12 - our content article
95:15 - and we'll
95:17 - paste that up there and then of course
95:19 - we have this div right here we need to
95:20 - close because we need to close the div
95:22 - for the container
95:24 - let's kind of indent this back a little
95:26 - bit
95:27 - so we can kind of see how that's going
95:28 - to look
95:30 - okay so that should be okay so let's
95:32 - save that and see what that's looking
95:34 - like
95:35 - so that's much better so now we have our
95:36 - published we have those tags and the
95:37 - comments showing up perfect
95:39 - so now we need to replace these so
95:41 - they're not just hard-coded
95:43 - i'll pull this over a little bit and
95:44 - let's
95:45 - line wrap again here oops i always hit
95:47 - the wrong button there
95:49 - one more time
95:53 - okay so uh we need to replace these so
95:55 - instead of saying published three months
95:57 - ago of course this has to be the actual
95:59 - date so here's we're going to pull out
96:01 - information from the metadata of our
96:03 - wordpress theme
96:06 - so let's remove this published three
96:07 - months ago and we'll replace this with
96:09 - some php tags
96:11 - and we're going to say
96:13 - replace it with the function called
96:16 - the underscore date
96:18 - and now we'll save and refresh and you
96:20 - can see that now shows me the current
96:22 - date
96:23 - that this post was published now if you
96:26 - pass in parameters into this function
96:28 - there's all sorts of
96:30 - um you can format the date exactly how
96:32 - you want using the php date string
96:34 - formatters so you know we can pass in
96:38 - all sorts of things in here
96:41 - and format that date exactly so i'm not
96:43 - really going to worry about that right
96:44 - now you can look up on the wordpress
96:45 - codex there's codex excuse me there's a
96:48 - lot of different ways you can format the
96:49 - date just exactly how you want so i
96:51 - could literally have it say posted three
96:53 - months ago or posted today or or however
96:55 - you want that to be
96:57 - all right now next we're gonna mess with
96:59 - these tags these post tags so they're
97:01 - inside of this span classes tag and then
97:03 - we have an icon and then we have the
97:05 - actual tag so to make this a little bit
97:07 - easier to read i'm just going to hit
97:08 - return here on a single tag
97:11 - so we can kind of see that and i'll move
97:13 - these comments down as well
97:16 - so they're each on their own line there
97:17 - we
97:18 - go and i'm gonna actually
97:23 - just reformat this a little bit so it's
97:25 - easier to read
97:26 - okay so we have this div
97:28 - and then inside of this div we have
97:30 - these three sections right we have the
97:32 - date we have all of our tags and then we
97:34 - have a link to the comments so the next
97:36 - one we have to work on is the tags
97:39 - so we're gonna
97:40 - we're gonna leave that there so i can
97:41 - reference the code and we're gonna add a
97:43 - little bit of php code here
97:45 - just tap this over and this is going to
97:49 - be for the tags
97:52 - okay so to add the tags in here it's
97:54 - just simply called the tags
97:56 - and you can see as i save that and
97:58 - refresh i get my little tags output and
98:00 - they automatically are anchor tags that
98:02 - link to the tags
98:03 - and then i can pass in a few parameters
98:05 - into this function to customize it so
98:07 - the first parameter is
98:09 - before the set of tags the second
98:11 - parameter is what's in between each
98:13 - individual tag and the third parameter
98:16 - is what comes after the entire set of
98:18 - tags so it's a little bit weird but
98:20 - basically you can see here that for us
98:22 - all of this comes before the tag
98:25 - this comes after the tag
98:27 - so what we're going to do here is we're
98:28 - going to copy all of this code in fact i
98:30 - need to fix these quotes really quick so
98:32 - they match
98:34 - double quotes so all of this stuff is
98:36 - going to come in that first parameter
98:40 - the second parameter is what comes again
98:43 - in the middle or in between each tag so
98:45 - in between each tag i need to close the
98:48 - span
98:49 - and then also add all of this again
98:52 - because each individual tag is wrapped
98:54 - by a span tag so i'll paste all that
98:56 - right there and then the last parameter
99:00 - simply has to close out
99:02 - the list
99:03 - again so whoops make sure that's a
99:05 - closing span
99:06 - okay so now if we save
99:08 - there we go so you can see now each one
99:10 - of my individual tags is wrapped
99:12 - properly and showing up with my markup
99:14 - okay so now i can delete this hard-coded
99:16 - tag and save
99:18 - so that's looking fine now the next
99:20 - thing i need to do is add a link here to
99:22 - the comments so we're going to do that
99:24 - little section next what we're going to
99:26 - do is delete our hard-coded number that
99:28 - says three comments and we're going to
99:30 - replace that
99:31 - with a little php or rather a wordpress
99:34 - function that's called comments count
99:37 - and what this does um actually it's not
99:40 - comments count it's comments number
99:43 - we'll save that
99:46 - oops i forgot to close my php right
99:48 - there
99:52 - and you can see right now it says no
99:54 - comments right so we're going to come
99:55 - over here to our comments.php file which
99:58 - is currently empty this is our template
99:59 - file
100:00 - and paste all the code for our comments
100:02 - so all of that is in our template file
100:04 - blog site template
100:06 - and we can come down here to our
100:09 - post
100:10 - we've been working on and we'll come
100:12 - down here to our comments section
100:14 - and you can see there's quite a bit here
100:16 - but it starts right here there's this
100:17 - thing called comments wrapper so i need
100:20 - to start right there and basically copy
100:22 - all of the code
100:24 - all the way down to where that wrapper
100:25 - ends right there
100:27 - and come over here to my
100:29 - comments.php file so i'll close this
100:31 - down
100:32 - and we'll close this down and we'll come
100:34 - back to our
100:35 - comments website and open it
100:38 - comments.php and paste all right now
100:41 - there is a lot of code in here that
100:43 - we're going to end up deleting
100:44 - because wordpress is going to provide
100:46 - all this dynamically essentially all
100:48 - this code
100:50 - so what we can do now is
100:53 - start replacing all of this
100:55 - so let's get rid of my sidebar here
100:58 - and we're gonna just going to start
100:59 - piece by piece so again this is one of
101:01 - those sections that if you can find an
101:03 - existing theme that you like the
101:04 - comments on i really recommend like the
101:06 - 2020 thing just copying their comments
101:08 - file pasting it right into yours and be
101:11 - done
101:12 - but just for the sake of this video i
101:13 - will go over this really quick here
101:18 - inside of this header two we're going to
101:19 - be writing a little bit of logic this is
101:22 - the comment reply title
101:25 - so i'm going to open my php and close it
101:27 - here so here i can say
101:30 - if and then here's where i'm going to do
101:32 - a little logic here so i can say if we
101:34 - don't have this is a php command that's
101:37 - called
101:38 - have comments in other words if this
101:40 - post does not have comments
101:44 - do what
101:45 - else
101:46 - do something else in other words i can
101:47 - change my title based on if there's
101:49 - comments or not so if i don't have
101:51 - comments i can simply just echo out
101:55 - something like
101:57 - leave a
101:58 - comment okay we'll just do that
102:02 - otherwise if i do have comments i can
102:05 - echo out
102:06 - the number so i can say
102:08 - get
102:09 - whoops i can say we'll just echo
102:11 - something like i don't know
102:14 - we'll say get
102:16 - i think it's get comments count to get
102:19 - comments
102:21 - count
102:24 - and then concatenate that with comments
102:27 - okay something like that so let's save
102:29 - and refresh here
102:31 - and
102:32 - before we get any further
102:34 - we need to add that comments into our
102:36 - template so that our template here can
102:39 - display those comments as well so we'll
102:40 - come back in here to our content article
102:43 - and after our content section we need to
102:47 - include the
102:48 - comments template
102:50 - so we're going to add in the it's called
102:53 - the
102:55 - comments it's literally called comments
102:56 - template
102:57 - template like so and save and refresh
103:01 - and you can see sure enough
103:02 - now i'm getting all of my comments right
103:05 - here to appear
103:07 - so that is looking
103:10 - fine
103:13 - so basically what this does is this
103:14 - comments template just pulls in that
103:16 - common stop php file and it just outputs
103:18 - it here directly
103:20 - now we can also do some extra code here
103:22 - i'm not going to do this but we could do
103:24 - some checks in php to say if we're
103:26 - allowing comments then output the
103:28 - comments template or if there's no
103:29 - comments if it's a single page if it's
103:31 - an archive page don't show comments
103:33 - right we can do all sorts of logic to
103:35 - determine when and when we do not want
103:37 - to show the comments template but for
103:38 - simplicity's sake i'll just leave it
103:40 - turned on always
103:41 - on this article page
103:43 - article template so now that we have the
103:44 - comments being output we can come back
103:46 - here to our comments
103:48 - and then actually start to
103:51 - fix these guys up
103:53 - so
103:54 - um let's see here
103:56 - now the next thing i need to do is i
103:57 - need to do an echo i forgot that because
103:59 - i'm not seeing my title there we go so
104:00 - it says leave a comment
104:02 - and then i can say echo
104:05 - get the comments count okay so if i have
104:07 - comments
104:09 - it's gonna output the number and then
104:10 - say comments and if i don't have a
104:11 - comment it'll say leave a comment and of
104:13 - course there is no comments on this page
104:15 - even though i'm showing some that's
104:16 - because they're hard coded
104:18 - okay so we have that now let's go ahead
104:20 - and output each individual comment one
104:22 - by one
104:24 - and that's going to be done inside of
104:26 - this comments intersection so all of
104:28 - this code all of the divs that belong to
104:30 - each individual comment and their
104:32 - associated replies wordpress is going to
104:34 - manage completely so i can come in here
104:35 - and delete that entire section of code
104:39 - all the way down to
104:43 - well looks like i have an error in my
104:44 - some of my code because it's not showing
104:46 - me the
104:49 - there's comment one
104:52 - so we can delete that
104:55 - comment three we can delete
104:59 - that and there we go
105:01 - okay so we just have this little
105:02 - comments wrapper then we're going to add
105:04 - a command in here
105:07 - that is going to output each individual
105:09 - comment and that one is called wp
105:12 - underscore list underscore
105:14 - comments
105:15 - and this is very similar to the
105:16 - wordpress menus that we did in the last
105:18 - tutorial
105:19 - where we can pass in a set of key values
105:22 - in this array to determine how those
105:24 - comments are output so
105:26 - there's all sorts of things here that
105:28 - you can pass into this i'm just going to
105:30 - quickly show you a list of available
105:32 - options
105:34 - the wordpress codex and you can see that
105:35 - this function here the wordpress list
105:37 - comments takes a whole bunch of
105:38 - arguments
105:39 - and here's all the arguments so you can
105:41 - do a custom walker the maximum depth so
105:43 - how many levels deep of replies you want
105:45 - to show
105:46 - your style so it defaults to unordered
105:49 - lists
105:50 - a callback function you can do the type
105:52 - of comments so all pings comments
105:54 - pingbacks how many comments per page the
105:57 - size of the little avatar image anyway
105:59 - you can kind of see there's lots of
106:00 - different options there so we're not
106:02 - going to be doing that specific of
106:04 - in our page just so you can see there's
106:06 - several options
106:08 - we're going to customize this back in
106:09 - our code with just two parameters here
106:11 - we're gonna do the avatar size one so
106:13 - the avatar size we're gonna set to 120
106:16 - pixels
106:17 - and we're also going to set the style
106:20 - to output as divs
106:22 - instead of the default unordered list
106:25 - and we'll save that
106:27 - and make sure we
106:30 - looks like we have an error there
106:31 - unexpected
106:35 - oh this has to be an empty array sorry
106:38 - so i need to create an array
106:42 - and then these properties go inside of
106:44 - my array
106:46 - okay there we go so of course there is
106:48 - no comments right now lastly we're going
106:50 - to set up the reply section so we can
106:52 - actually add a comment and then test all
106:54 - this out
106:55 - so that's down right here you can see
106:57 - that i've got this little div that says
106:59 - respond and there's the little lever
107:01 - reply so basically we're going to delete
107:03 - this and then replace that with the
107:06 - comment form
107:08 - so we'll just take this entire div
107:10 - delete all that and we're going to
107:12 - replace that
107:14 - with
107:14 - the comment form now we are going to put
107:16 - this inside of a conditional so we're
107:18 - going to say if
107:21 - comments open
107:22 - and this is a function that
107:25 - checks to see if this current page or
107:27 - post is allowing comments so if the
107:30 - comments are open or we're allowing
107:31 - those
107:32 - then we're going to output our
107:34 - form and so it's just a function called
107:38 - comment form
107:39 - and just like the other stuff we've been
107:41 - looking at it accepts an array
107:44 - of parameters
107:46 - so you can specify all sorts of
107:48 - parameters on how your form displays the
107:50 - classes and things like that
107:52 - so we're going to just add a couple of
107:54 - these for us
107:56 - we're going to say the class for the
107:57 - form
107:58 - is going to be set to ours as section
108:02 - um
108:03 - actually we don't even we don't actually
108:04 - need to specify this so we're just going
108:06 - to leave that blank for now oops i got
108:08 - an error
108:09 - oh i always do that we don't need a
108:11 - semicolon right there
108:14 - there we go so that's looking correct
108:16 - now
108:17 - so the class form
108:19 - um
108:21 - we'll go ahead and add
108:23 - one more so this one's going to be the
108:25 - title underscore reply
108:27 - before
108:31 - so this is the title reply before text
108:35 - and we're gonna do that as a header two
108:38 - and it's gonna have the id
108:40 - uh whoops header two height equals again
108:42 - you don't need any of this this is just
108:44 - a sample here
108:46 - reply dash tile
108:49 - and it's going to have the class of
108:53 - comment dash reply dash title
108:57 - okay so that is before
109:01 - and then the
109:02 - title reply after
109:06 - is going to be
109:08 - just closing that header two out
109:12 - h2
109:14 - if i can type correctly
109:17 - close that out and then save
109:20 - oops i have another error in here what
109:21 - did i do this time
109:25 - oh forgot a comma right there
109:29 - okay so there we go
109:31 - now i'm going to back this up and i'm
109:32 - going to zoom back out so we can kind of
109:34 - whoops wrong zoom let's zoom back out
109:36 - our page here back to a normal default
109:38 - level
109:39 - so now you can kind of see it says leave
109:41 - a reply
109:43 - that's coming from
109:44 - you know our header two over there
109:47 - inside of that header two
109:49 - there's the comment form we have our
109:51 - name email website all this stuff and
109:53 - then i can actually click the post
109:55 - comment so it should work correctly now
109:58 - so let's go ahead and give it a test
109:59 - here so i'll say this is a test comment
110:03 - name is follow andrew email follow
110:07 - well guess we'll just do hi hi
110:11 - website http clone slash follow
110:14 - andrew.dev
110:17 - um we don't need to save a cookie and
110:19 - then i'll just say post comment
110:22 - and we get an error
110:24 - okay so this is good to know because we
110:26 - couldn't actually test this function
110:27 - until we had a comment in there but it's
110:30 - saying hey there's an uncut air
110:31 - undefined function get comments count
110:35 - on line 15.
110:37 - so i think my comment actually posted
110:39 - correctly
110:40 - but
110:42 - uh i
110:43 - have the wrong code on the comments
110:44 - count so let's scroll up and it's right
110:46 - here online this line right here where
110:48 - it says get comments count
110:50 - it's telling me that that function does
110:52 - not exist so i've got to double check my
110:54 - note here and see if that's spelled
110:55 - correctly
110:57 - and sure enough it is not uh this is the
110:59 - exact same mistake i made earlier it's
111:01 - not comments count it's get comments
111:04 - number
111:05 - so if we save that there we go now it's
111:08 - actually outputting correctly
111:11 - and sure enough there is my comment so
111:13 - it's a waiting approval because it
111:15 - hasn't been approved yet but if you
111:17 - scroll up to the top here we go it says
111:20 - zero comments because it's not approved
111:22 - so let's just move over and approve this
111:23 - so we can see this working now
111:25 - so let's jump here to the back end i'll
111:27 - go to my comments see how that test to
111:29 - comment did appear there's my name and
111:31 - everything i'm just gonna go ahead and
111:32 - click approve of course you can set your
111:34 - wordpress settings to auto approve
111:35 - comments so you don't have to manually
111:37 - approve them on your own
111:39 - but let's jump back here to the front
111:40 - end and refresh
111:42 - and it's working so now it updated
111:44 - automatically to one comment it says one
111:45 - comments down here
111:47 - there's the comment i can of course
111:49 - click the reply button and add a reply
111:52 - so this is going to be a nested reply
111:56 - test at test.com
111:58 - test.test.com oops i guess the name is
112:00 - just test
112:01 - and we'll post that comment
112:03 - let's go back here and approve it so
112:05 - let's refresh here and approve this
112:08 - comment
112:09 - jump back to our code and refresh
112:12 - perfect so there's the initial comment
112:13 - there is the nested comment
112:16 - and of course everything is now working
112:19 - properly
112:21 - now in the sample page
112:24 - you'll see that i actually think i
112:26 - closed it down but my comments are
112:27 - slightly formatted differently in the
112:29 - sample template
112:30 - and that's because
112:32 - the default wordpress code that's being
112:34 - output
112:35 - is not matching 100 to my style sheet
112:40 - that i have in my comments
112:42 - and the reason for that i'll just
112:44 - explain that i'm not going to fix it the
112:45 - reason for that is because i copied
112:47 - again all of my comments code from the
112:49 - wordpress
112:50 - 2020 theme so most of my css was copied
112:53 - right from there
112:55 - um
112:56 - and so all this comments belongs to that
112:59 - now in the wordpress 2020 theme when
113:01 - they output their comments in the
113:03 - comments.php file
113:05 - so when they're down here on this little
113:07 - comment form
113:08 - um sorry not the comment form but in the
113:10 - actual comment list right here in the
113:11 - wordpress list comments they are using a
113:13 - custom walker
113:15 - and so they're specifying additional
113:17 - classes and things like that for every
113:19 - single element to be displayed
113:21 - and i'm not doing the custom walker here
113:23 - i'm just doing the default so that's why
113:25 - my comments don't exactly match my css
113:28 - just wanted to quickly point that out
113:30 - okay
113:31 - so now we have everything working
113:33 - properly we have our comments we have
113:34 - replies nested comments everything's
113:36 - fine of course if we had avatar images
113:38 - set up via gravatar they would show up
113:40 - here as the actual avatar images
113:43 - and that's working fine now okay so
113:46 - that's pretty much it for the post page
113:47 - let's move on now to our archive page so
113:51 - the post archive so this is a single
113:53 - post now we're going to do another
113:55 - content for the post archives so if we
113:57 - open up our sidebar here we have a
114:00 - file called archive.php
114:03 - so we can
114:05 - come into that file
114:06 - now the archive php is going to be very
114:08 - similar to the
114:10 - single dot php
114:12 - so i'll just copy all that and come over
114:14 - here and paste and then we'll remove the
114:18 - stuff we don't need
114:20 - um so what we're going to do is change
114:23 - the template part so it's going to be
114:24 - template parts instead of content
114:27 - article i'm going to call this one
114:28 - content
114:30 - archive or something like this okay and
114:32 - then we'll save
114:34 - and then we'll come over here and create
114:36 - a new template part so we'll say
114:38 - template parts
114:39 - we'll duplicate this file right here
114:42 - i'm just going to i guess i'll do it
114:44 - this way so we'll call this one the
114:45 - content dash
114:48 - archive.php
114:50 - we'll come into the article highlight
114:51 - everything and come into the archive and
114:54 - paste everything
114:55 - okay so now let's just remove stuff we
114:57 - don't need so for example we don't want
114:59 - comments at all on our blog our archive
115:02 - page
115:03 - we don't need any of this
115:06 - um
115:07 - header information so we don't need tags
115:08 - we don't need all that stuff so we can
115:10 - delete all that so basically all we're
115:12 - going to have is just the content
115:14 - individual posts and pages
115:16 - that we'll be creating here
115:19 - so we'll save that and let's go ahead
115:21 - and now pull up an archive page
115:24 - now we don't have a way to get to an
115:26 - archive page in our menu so now's a good
115:29 - time to add that now there's a lot of
115:31 - different ways you could do this in
115:32 - wordpress but what i'm going to do is
115:34 - i'm just going to add a new custom
115:36 - item here to my menu called blog when
115:39 - you click on that it will take you to
115:41 - the archive page
115:42 - so let's jump over here to our back end
115:44 - in wordpress we're going to go to our
115:46 - posts
115:47 - sorry not our posts we're going to go to
115:50 - our appearance
115:52 - menus
115:53 - and we're going to come down in here and
115:55 - add a new link here to our menu and this
115:58 - one is going to be a
116:00 - custom link
116:02 - and
116:08 - sorry not a custom link but rather a
116:09 - custom page
116:11 - and we need to go create the page first
116:13 - i'm getting ahead of myself so we'll go
116:14 - up here to pages
116:16 - and we'll add a new page
116:20 - i'm just going to simply call this one
116:21 - blog i don't actually need to do any
116:23 - content here i'm just going to say
116:24 - publish
116:26 - and publish okay now down under settings
116:30 - and we can go back here to our reading
116:33 - so we can have our posts page
116:36 - be displayed on this blog page okay so
116:40 - all this is basically the archive page
116:42 - and then i can hit save changes there we
116:44 - go
116:44 - now we can go over to our appearance and
116:47 - menus
116:49 - and then we can go into our menu and we
116:51 - can come in here to our pages
116:54 - and we'll say view all we'll grab this
116:56 - blog one and say add to menu stick it
116:59 - right there now remember we do need to
117:01 - give this guy our classes so i'm going
117:03 - to give this guy the nav item class
117:06 - i could optionally give it a you know
117:09 - icon as well
117:10 - and we'll say save
117:12 - okay so that's how you can add in a blog
117:15 - so now if i refresh here you can see
117:17 - i've got a new page called blog when i
117:19 - click that it's going to open up the
117:23 - archive template and right now you can
117:26 - see it just says test
117:28 - so let's come over here now
117:30 - and set up my archive.php
117:33 - template
117:35 - now because we have our setting reading
117:38 - section
117:39 - set up to show that our
117:42 - home page displays
117:44 - the static page set to this one and our
117:48 - post page is set to our blog page
117:51 - our archive.php template
117:54 - is not going to show the blog post
117:56 - archives
117:58 - the archive.php template only shows
118:00 - things like category archives template
118:03 - archives tag archives custom post type
118:06 - archives
118:08 - date based post archives things like
118:10 - that
118:11 - so our index.php file is actually going
118:14 - to be the file that's used for our blog
118:16 - posts
118:18 - archives so what we can do is we can
118:20 - just come in here and copy this exact
118:22 - archive because essentially all of our
118:23 - archive pages are going to be very
118:25 - similar so i'll just copy this come over
118:27 - here to the index.php page
118:30 - and now we'll go ahead and paste and
118:32 - save
118:33 - okay
118:34 - now you can see that
118:37 - this is showing
118:39 - up as we expect so it's showing me right
118:42 - some things happening here
118:44 - and that's all great and wonderful
118:47 - now if we come into our template part
118:49 - here for our content
118:52 - dash
118:54 - archive
118:55 - i don't want to output the content on my
118:57 - blog archive page in other words i don't
118:59 - want the full blog post to appear on the
119:02 - archive page i only want the excerpt
119:05 - so i can say the excerpt and save
119:08 - and then i'm only going to get the post
119:10 - excerpts for those individual posts so
119:13 - here's where i need to jump back to
119:14 - wordpress and now i need to create a
119:15 - whole bunch of posts so go ahead and if
119:17 - you don't have this pause the video
119:19 - create i don't know 10 or 12 posts
119:21 - probably at least 10 because i think the
119:22 - default is 10 per page so create 12
119:25 - posts i'll go ahead and do that make
119:27 - sure to give each post a featured image
119:29 - if you can and then go ahead and start
119:31 - the video back up
119:33 - okay so i have here you can see a bunch
119:35 - of different posts
119:37 - now they're all displaying the excerpt
119:40 - because that's how i'm currently
119:41 - displaying here
119:42 - and now we need to go back to our posts
119:45 - page from our template so our not our
119:48 - post page our archive page and see how
119:50 - we have this mocked up
119:52 - so down here in this section you can see
119:54 - that
119:55 - we have our content then we have our
119:57 - container
119:58 - and then we have our post
120:02 - so this little post right here
120:06 - is repeated over and over and over so
120:07 - there's one two three right for every
120:09 - single post archive and excerpt
120:12 - that's where that's repeated so i'm
120:13 - going to copy this code and we're going
120:15 - to jump back over here
120:18 - to our content dash archive
120:21 - and we are simply going to
120:24 - paste that into here
120:25 - okay so
120:27 - now we can begin to
120:29 - let me just back that up flesh this out
120:33 - so the section right here this is the
120:35 - actual where this div class is content
120:37 - that's my excerpt
120:39 - so i'll delete all the lorem ipsum let
120:41 - me wrap lines here again
120:43 - and we'll replace that with
120:46 - the excerpt
120:49 - okay then we'll save that
120:51 - there we go so that's the post excerpt
120:53 - coming in here now this section up here
120:56 - this header three is the post title
120:59 - so i'll delete that
121:01 - and i'll replace this
121:06 - with the post title
121:08 - which is whoops
121:10 - the
121:11 - title like so
121:13 - and save that okay perfect now i get all
121:15 - of my post titles in there and that
121:18 - looks great
121:20 - uh the date right here is the
121:28 - the date just like we did on the other
121:30 - one
121:32 - and we'll save that so there's the date
121:35 - and then we have this thing that says a
121:37 - five minute read
121:39 - now there's currently no way we're going
121:41 - to be able to implement that there are
121:42 - some plugins actually that will
121:44 - calculate the length of the text in your
121:46 - post and then automatically give a
121:48 - suggested reading time based on average
121:50 - reading words
121:51 - so we're just going to kind of leave
121:53 - that blank for now we actually could set
121:54 - this up
121:56 - with a custom field so perhaps we could
121:58 - do that in a future tutorial where we do
122:01 - a little bit more advanced things but
122:02 - we'll just leave it
122:04 - for right now we're actually probably
122:05 - just going to leave it off so i'll come
122:07 - into this time here
122:09 - and we'll just delete the time we're not
122:10 - going to worry about that
122:12 - and then we have the comments uh how
122:14 - many comments
122:16 - so this was the i forgot this one
122:18 - already we just probably did it
122:20 - uh it's not comments count it's comments
122:22 - number i always say count
122:25 - and save that so you can see no comments
122:28 - no comments
122:29 - and down here on one of our posts
122:30 - there's the one that has two comments
122:32 - so that one we added our comments on
122:35 - there's three comments on that one
122:37 - okay
122:38 - so that is looking just fine like so
122:42 - and
122:44 - i think that's about all we need for
122:47 - this right now so the last thing is we
122:49 - need this little read more link this
122:51 - should link into the actual post so we
122:53 - need to make it so that our read more
122:56 - actually goes into the post
122:58 - so all we need to do is replace this url
123:01 - here that's hard-coded
123:02 - with
123:04 - uh what's known as the permalink and
123:06 - then the permalink
123:07 - is a term that references the actual
123:10 - permanent url for the page you're
123:12 - requesting
123:13 - so we just simply type the permalink and
123:15 - we save now watch over here as i hover
123:17 - over the read more link down here at the
123:19 - bottom you'll be able to see right here
123:20 - this one's going to page 45 this one's
123:23 - going to
123:24 - post rather 43 this is going to post 41.
123:27 - so now if i click on these
123:29 - this will take me into that individual
123:31 - post
123:32 - and this one will take me into that
123:34 - individual post
123:36 - and this one will take me into that
123:37 - individual post
123:38 - okay perfect so now we have the
123:40 - permalinks we have the excerpts and the
123:42 - only thing we're missing now is our
123:43 - featured thumbnail image and we'll do
123:46 - that with uh getting the post thumbnail
123:49 - we'll do that up here in our image tag
123:51 - now just to kind of show you there's two
123:53 - ways you can do this the first the easy
123:55 - way is just calling the post
123:58 - thumbnail like this and saving
124:01 - um
124:01 - [Music]
124:03 - oops i forgot an l right there
124:06 - and you can see it outputs a thumbnail
124:08 - now if i inspect this element the
124:11 - problem with this is that again
124:12 - wordpress creates all these classes on
124:16 - it by itself and i don't really want
124:18 - that i have my own image with my own set
124:20 - of classes so really all i need is the
124:22 - url i want the source so we can replace
124:25 - this with the thumb
124:27 - url whoops
124:29 - and save and refresh and you can see
124:31 - that will just return me with the
124:33 - absolute path to that thumbnail image
124:35 - which is what i want
124:37 - so now we can just grab this
124:42 - and replace that
124:44 - here in
124:46 - our source so we'll delete the source
124:49 - php replace that and save
124:53 - and now we can delete this little code
124:55 - up here
124:58 - and
124:59 - we should be getting that
125:02 - source to appear there so let's double
125:04 - check so image sure enough there is the
125:07 - image
125:08 - so
125:09 - that should work fine now on my tablet
125:12 - view i actually have those hidden so i
125:13 - need to actually resize this up and
125:15 - there we go so on desktop they're
125:17 - appearing
125:18 - on tablet i have those
125:20 - disappearing right at that breakpoint
125:23 - and then we get down to our mobile view
125:25 - um
125:26 - they're gonna they're gonna reappear so
125:29 - or they're also hidden on mobile so
125:31 - you're only make sure you resize and get
125:33 - up to your desktop view to be able to
125:34 - see those thumbnails
125:36 - now one important thing to note here is
125:38 - that if you just use the post thumbnail
125:40 - by default it actually pulls back the
125:43 - url for the full size image which is a
125:46 - problem so for example if you look right
125:48 - here and i refresh this
125:50 - page here so on this last one here if i
125:53 - say view image notice it's pulling in a
125:56 - very very large image it's just scaling
125:58 - it down teeny tiny which we definitely
126:00 - do not want for our archives page
126:03 - so with this function here the post
126:05 - thumbnail url you can pass in a string
126:09 - as the parameter in here to specify
126:12 - which size so in my case i want to
126:14 - specify the thumbnail size now remember
126:17 - those sizes are coming here from your
126:20 - settings
126:21 - media so there's my thumbnail medium and
126:24 - large so i want the width 150 by 150
126:27 - so now when i update that and save here
126:30 - now let's come in here and refresh this
126:32 - whoops
126:34 - notice now when i click on this and say
126:35 - view image it's giving me the proper
126:37 - thumbnail image so definitely double
126:39 - check that
126:41 - a little got you there whenever you're
126:43 - working with pulling in thumbnails
126:46 - okay so that's pretty much it for our
126:48 - archive page so we have all of our posts
126:51 - now on our blog so if we click on blog
126:54 - we get our blog archive page we get all
126:57 - of these uh fancy titles here
127:00 - and that's pretty much
127:02 - pretty much it
127:04 - so uh what we need to do next is we need
127:07 - to add in our pagination links so down
127:10 - here at the bottom we have some links
127:12 - where if we can go to page two page
127:13 - three etc etc
127:16 - so we'll just add in the pagination
127:18 - links down below now one important thing
127:20 - we need to do first is we need to come
127:22 - over to your back end
127:24 - and go to your settings and reading
127:27 - and i'm just going to set my blog shows
127:29 - at most four posts this way you can
127:32 - actually see the pagination links
127:33 - because by default there's 10 per page
127:36 - so set that to 4 set that to 4
127:38 - hit save changes
127:40 - then when we come back here and refresh
127:42 - we'll actually only be able to see four
127:44 - posts then we'll be able to see the next
127:46 - links when we update those
127:48 - so in order to do this all we have to do
127:50 - is come into our
127:51 - index.php file right after our loop here
127:55 - and we're going to add in these
127:58 - uh
127:59 - pagination links
128:01 - so uh the code here we'll just open and
128:04 - close some php tags
128:06 - and it is called
128:08 - the
128:10 - uh posts
128:13 - pagination
128:15 - and then we save there and that's pretty
128:16 - much it so this will automatically
128:18 - output your previous next link so i can
128:20 - click on page one
128:22 - i can click on page two and you get the
128:24 - previous and next links in the current
128:26 - page depending on where you're currently
128:28 - at so
128:29 - that's pretty much all there is to that
128:31 - there um
128:33 - are a few arguments you can pass into
128:35 - this post-pagination
128:38 - link
128:39 - but we're not going to cover those you
128:40 - can go ahead and look at the
128:43 - codecs to see all the available
128:45 - arguments
128:47 - so
128:48 - that should pretty much do it for the
128:49 - pagination so let's kind of see where
128:50 - we're at right now
128:52 - we have our blog archive page that works
128:55 - fine we have our pagination that's
128:57 - letting us go from page to page you can
128:59 - of course clean this tile up and break
129:01 - things around as you want in your css
129:02 - sheet
129:04 - we have our single pages
129:08 - we don't have our single pages we have
129:09 - our single blog posts done
129:12 - oh whoops we need to make that a link
129:14 - so uh we need to make this title be a
129:17 - link just like we have the read more
129:19 - link it'd be nice if we could also click
129:20 - on the title to take us into the blog
129:22 - post so let's go ahead and make that
129:24 - little change really quick
129:26 - so we'll come in here to our
129:28 - content archive
129:30 - and we're just going to basically copy
129:32 - here this permalink
129:35 - code
129:37 - right there
129:38 - and we'll introduce that into the title
129:41 - so we'll create an anchor tag
129:44 - and we will say
129:46 - href equals
129:49 - paste that in there
129:51 - and then close the anchor tag afterwards
129:55 - whoops
129:56 - close the anchor tag okay now we should
129:58 - be able to click the post title perfect
130:00 - and that works as well as clicking the
130:02 - read more so either one of those will
130:04 - take us
130:05 - into the actual page
130:08 - or post okay now the
130:11 - next step we're going to do is be
130:13 - building out our page
130:15 - so we have our posts but we don't have
130:18 - the template here for the page
130:20 - so this will be fairly simple as it's
130:22 - pretty much the same as the other ones
130:24 - so we're going to come in here to the
130:25 - one called content article let's copy
130:27 - all the code right here
130:29 - let's create a new template part so
130:31 - we're going to say new file
130:33 - and we will call this one content
130:36 - content
130:37 - if i can spell this right
130:39 - page.php
130:42 - let's just go ahead and do a quick paste
130:43 - right here
130:45 - and now this one is not going to have
130:48 - comments so i don't have comments on
130:49 - pages so i can delete the comments
130:51 - template from this one
130:54 - i'm not going to have tags so i can
130:55 - delete the tags i'm not going to have
130:57 - the date basically i'm not going to have
130:59 - anything inside of the header so i'm
131:00 - just going to delete the entire header
131:02 - all we really have is just the content
131:05 - for this guy
131:06 - okay so now we can come down to our
131:09 - page.php
131:11 - and just like we have in here our
131:13 - single.php we can copy all of this from
131:17 - single.php and paste it into page.php
131:21 - remember page.php is the template file
131:23 - responsible for single pages
131:26 - so let's copy that we'll replace this
131:28 - instead of article this is going to be
131:30 - what we call that page template part
131:32 - page save and that should be it
131:35 - so now we have our
131:37 - individual pages so there's our sap page
131:40 - there's the about page there's the
131:42 - contact page and they're all working
131:44 - exactly as they should so again pages
131:47 - are very similar to articles
131:49 - and the blog single ones are a little
131:51 - bit different because they help us extra
131:53 - information up there as well as comments
131:55 - down below
131:57 - so
131:58 - that pretty much does it for the
132:02 - pages
132:03 - so the last thing we need to do before
132:06 - this entire tutorial is completely
132:08 - finalized
132:10 - is add just a couple of extra things
132:12 - with widgets so for example if i wanted
132:15 - to have this area over here be user
132:17 - customizable
132:18 - so they can drag and drop their own
132:20 - things in here and we need to set up
132:21 - what are known as widgets same thing
132:23 - with the footer maybe i want them to be
132:24 - able to customize the footer so we're
132:26 - going to add several different widget
132:28 - areas that the user is then able to drag
132:30 - and drop content from the wordpress
132:32 - admin widget interface
132:34 - so let's go ahead and do that
132:37 - those are done in the
132:41 - let's see if we can cruise up here to
132:42 - the top here
132:43 - and minimize some of these things so
132:45 - that's going to be done inside of our
132:47 - templates.pa hernander templates our
132:50 - functions.php file where we're going to
132:52 - be adding some more features here and
132:55 - the feature we're going to be looking at
132:56 - is what is known as register sidebars so
132:58 - we're going to allow various sidebars
133:00 - which are basically little minute widget
133:01 - areas little mini widget areas in order
133:04 - to add stuff so let's do that right now
133:07 - i'll just move down here to the bottom
133:09 - in order to add these guys in
133:12 - so we're going to create a new function
133:13 - here and this is just going to be called
133:15 - the follow andrew and we'll call this
133:18 - widget areas
133:23 - and inside of this function we're going
133:25 - to call a command that's called register
133:28 - sidebar whoops register
133:31 - sidebar
133:33 - and inside of here
133:37 - this function takes
133:39 - an array just like we've seen with many
133:41 - of the other functions an array of
133:43 - arguments
133:46 - and
133:47 - whoops
133:48 - just kind of format this a little
133:49 - prettier
133:51 - and the array is a bunch of the defaults
133:54 - on how this sidebar is set up so the
133:56 - first thing we're going to do is there's
133:58 - an option in here called
134:01 - before title
134:03 - so before title
134:06 - and right now i'm just going to leave
134:07 - that blank for now
134:09 - i'll show you what this does in a minute
134:11 - when we actually set them up in our
134:12 - actual theme here there's one called
134:15 - after title and i'll leave that one
134:17 - blank
134:18 - there's one called before widget
134:22 - so this is before
134:24 - widget
134:26 - and i'll leave that blank and then
134:27 - there's another one called after widget
134:30 - and i'll leave that one blank
134:32 - and then there is um
134:35 - so all of these are options that are in
134:38 - the
134:38 - first parameter
134:41 - for the
134:43 - register sidebar so this is parameter
134:45 - one as an array of these options okay
134:47 - comma
134:48 - and then parameter two
134:50 - is another array
134:54 - and this is another set of options here
134:57 - so in the second parameter you have
134:58 - things like the name of the widget so
135:01 - i'm only going to create two widget
135:04 - areas one's going to be in my sidebar
135:05 - one's going to be in my footer whoops so
135:07 - this one here will be called my
135:11 - sidebar area
135:13 - for lack of a better name
135:14 - and the next one will give this guy an
135:16 - id
135:18 - and i'll just call this sidebar dash one
135:21 - that's the css id it will become and
135:24 - then we can optionally give this guy a
135:26 - description
135:28 - so i'll just call this the sidebar
135:31 - a widget area
135:35 - okay so that's pretty much everything we
135:37 - need for the second uh parameter
135:40 - so let's now go ahead and come down here
135:43 - before we get too much code let's make
135:45 - sure we can get this guy to load
135:46 - so we're going to hook this guy into
135:48 - another action just like we've done many
135:51 - times we're going to say add action
135:53 - and it's going to be on the widgets init
135:56 - action
135:57 - and we'll copy and paste our function
135:59 - name
136:00 - so when the widgets are initialized
136:03 - our custom function will be executed
136:05 - causing us to register this new sidebar
136:08 - so we'll save that oops i missed the
136:10 - semicolon there
136:12 - looks like i have another issue here
136:15 - parse air unexpected oh right here
136:18 - whoops these are all supposed to be
136:19 - commas
136:21 - comma comma comma comma because those
136:23 - are array arguments
136:26 - okay there we go so i don't get any
136:27 - errors so now let's jump back to the
136:29 - back end of wordpress
136:31 - and let's go over here to our
136:36 - appearance
136:37 - and we're going to come over here down
136:39 - to widgets
136:41 - and there we go so you can see i had now
136:43 - have a new thing in here called sidebar
136:45 - one
136:46 - and i can drop let's just for example
136:49 - let's drop in
136:50 - tags so there should be a tag cloud here
136:52 - so i'm gonna grab tags i'm gonna drop it
136:54 - in
136:55 - and notice i can give this guy a title
136:57 - so i'll just call this tag cloud
137:01 - and this title here tag cloud
137:05 - is what this before title and after
137:07 - title are used for so for example i
137:09 - could wrap this with a header 2 tag
137:13 - and basically wordpress will put that
137:15 - title inside of a header to tag or
137:17 - whatever you want to do so i'll just
137:18 - leave that and save to show this as an
137:20 - example now right now i'm not seeing
137:22 - that in my sidebar at all because all
137:25 - i've done is register the sidebar i'm
137:27 - not actually outputting the sidebar in
137:28 - my sidebar yet
137:30 - so what we need to do next is we need to
137:32 - then come into our
137:35 - template files and output that
137:38 - in our theme now our sidebar is in our
137:41 - section we called header so i'll come
137:43 - over here to my header.php file
137:46 - and we will come down to the sort of
137:48 - right here's that header tag and
137:50 - everything inside of that header tag is
137:52 - what's displayed in this area
137:56 - so we'll come clear down here at the
137:57 - bottom
137:58 - so one quick example is i could have all
138:00 - of these social icons be inside of a
138:02 - widget so people can then customize them
138:04 - from the back end
138:06 - so
138:07 - we'll probably do that here in a second
138:08 - but
138:09 - after this
138:10 - i'll see what's this div tag for
138:13 - that's the navigation so after this
138:16 - nav tag
138:19 - i'll actually do it inside here so right
138:21 - after this div
138:22 - so here's where we're going to output
138:25 - uh that sidebar
138:28 - so we open some php tags we close some
138:30 - php tags and then we're going to do the
138:33 - command is called dynamic dynamic if i
138:37 - can spell that correctly
138:38 - sidebar and you pass as a parameter to
138:41 - this the id of your
138:44 - sidebar so in my case this would be
138:48 - back in my functions this is the id
138:50 - right here so i'm going to say sidebar
138:52 - dash one
138:54 - so we'll come back in here to my
138:56 - header
138:57 - and we'll pass in that sidebar one
139:00 - and save
139:02 - and sure enough you can see now
139:05 - there's all of these tags in the tag
139:07 - cloud
139:08 - now it's a little bit goofy here because
139:09 - i'm outputting this inside of my
139:13 - header area
139:14 - which is a little bit weird right inside
139:17 - of my navigation
139:18 - tag
139:20 - oh have somehow crashed
139:23 - oh it crashed let's reopen this see if
139:25 - we can get it back open alive for us vs
139:27 - code crash dummy
139:29 - so i could move this maybe outside of my
139:31 - nav but still inside of my header
139:34 - but of course you're going to get some
139:37 - my template wasn't built initially to
139:38 - have this in place so i'm going to have
139:40 - some issues here of course
139:42 - but that's
139:43 - how that works so you can add in your
139:45 - little templates
139:47 - areas as you need
139:50 - so uh let's now instead of having this
139:52 - guy just be a random tag cloud i'm gonna
139:54 - make this guy be this unordered list
139:57 - here
139:58 - so i'll
140:00 - cut this and i'll paste this right here
140:03 - and remember this guy has it's an
140:05 - unordered list
140:07 - and it has these classes on it so what i
140:09 - could do is i could come back here to my
140:13 - functions file
140:15 - and before widget and after widget
140:18 - i can add in that code
140:21 - so i'm going to copy and paste that
140:23 - got too many files open here again i
140:25 - gotta start closing some of these
140:28 - so i can just easily go back and forth
140:30 - here
140:34 - just close all these down really quick
140:35 - this will just take me a second
140:37 - all right so i'm going to copy this
140:38 - unordered list
140:40 - basically all of that and that's going
140:42 - to go in my before widget and then after
140:44 - the widget i'm just going to close the
140:46 - unordered list
140:48 - and then i don't really want anything
140:49 - output for the title before and after
140:51 - the title
140:53 - and we'll save that
140:55 - and refresh here
140:58 - whoops i need to go take my tag cloud
141:00 - out so we'll go back to the back end
141:02 - so having that tag cloud really doesn't
141:04 - make sense so i'm going to delete the
141:06 - tag cloud and just replace it instead
141:08 - with an arbitrary text field i'm not
141:10 - going to have a title but what this
141:12 - allows me to do is then i can come in
141:14 - here
141:15 - and
141:16 - in my text area i can just copy and
141:19 - paste all of the code
141:21 - for that
141:24 - in my
141:25 - whoops in my header file right here
141:29 - so all of the code that belongs
141:31 - basically to all of those little
141:33 - unordered lists so i'm going to copy all
141:34 - that unordered list cut it out rather
141:36 - and i'll paste it inside of the dynamic
141:38 - sidebar instead so i can come in here
141:41 - and just paste all that hit save
141:43 - and then when i come over here and
141:44 - refresh
141:46 - we should still see all those links but
141:48 - now they're editable from the user's
141:50 - front end so they can come in here right
141:53 - to the backend and if they don't have
141:55 - twitter or don't have github
141:56 - so let's just take one of these a little
141:59 - hard to kind of see where they start and
142:00 - begin let's just take this github one
142:02 - and delete to right
142:05 - there
142:06 - and then save
142:07 - and now of course
142:09 - github disappears right so they can edit
142:11 - that from the wordpress admin
142:12 - and really you can put anything inside
142:14 - of widget areas there's all sorts any of
142:16 - these things you can drag inside of a
142:18 - widget area
142:19 - so that's kind of how they work so i've
142:21 - got that one little sidebar one let's
142:22 - just add one more
142:24 - to the footer
142:26 - so we'll come over here and we'll come
142:28 - back to our functions
142:30 - and i'm just going to copy
142:31 - all of this register sidebar code right
142:34 - here
142:35 - and just paste it because we're going to
142:36 - register one more
142:37 - this one's going to be called the footer
142:39 - area and we'll call it
142:42 - footer dash one
142:43 - we'll call this the footer widget area
142:45 - save
142:46 - come back to our
142:48 - back end to make sure that's being
142:49 - registered properly so if we refresh we
142:51 - should see our sidebar too
142:53 - and there it is over there
142:55 - so now we have our second sidebar
142:58 - uh registered
142:59 - and
143:01 - that is going to be um
143:04 - actually i'm not sure why the name
143:07 - parameter isn't working
143:09 - so the name should say
143:12 - instead of saying sidebar dash one
143:14 - sidebar two side by one i should say
143:15 - footer area sidebar area so i must have
143:18 - something incorrect here let me just
143:20 - double check my notes
143:22 - i did have something wrong here so the
143:24 - problem is there's not two separate
143:27 - um
143:28 - there's not two separate parameters here
143:30 - actually there's just one big array
143:32 - i was going off notes
143:35 - where i'm actually merging two arrays
143:36 - together so that's why i got confused
143:38 - when i was looking at my notes so it's
143:39 - just one big array
143:41 - for all the properties here so all i can
143:42 - do is just simply delete that to not
143:44 - create two arrays just have one single
143:46 - array
143:47 - of all of those properties and now when
143:49 - i jump back here and refresh
143:52 - that should update there we go okay so
143:55 - now that's looking correct right it says
143:56 - sidebar area there's my description this
143:58 - one says footer there's my description
144:00 - so let's just drag and drop into the
144:02 - footer
144:03 - uh maybe some meta data i don't know
144:05 - we'll just drop this one in here just to
144:07 - showcase this
144:09 - and it's saved there so now i can come
144:12 - into my footer and just like before in
144:14 - my header where you add the dynamic
144:15 - sidebar i'll copy that i'll open up my
144:17 - footer.php
144:20 - and inside of the footer area
144:23 - i'll paste that dynamic sidebar
144:25 - and this one is called footer dash one
144:28 - and save
144:31 - so now when we refresh over here
144:34 - in our
144:36 - uh theme here
144:38 - did i call that footer dash one i
144:40 - actually don't see it appearing
144:42 - let's just inspect let's double check
144:44 - and make sure we have some code saved
144:45 - there
144:48 - um test
144:50 - let's save
144:52 - refresh oh there we go
144:55 - just must not have that refreshed
144:57 - so there's all the metadata right where
144:58 - you can log in and see all these
144:59 - different things that wordpress adds but
145:01 - now that that's in place
145:03 - i can put whatever i want in there right
145:05 - maybe i want to put a link to
145:07 - [Music]
145:08 - oh i don't know maybe i want my archives
145:11 - down there so we can call this the
145:13 - archives and save
145:15 - and now when i refresh i get a link to
145:17 - all my archives i can click on an
145:19 - archive and of course i'm going to get
145:20 - all the blog archives from march
145:23 - so
145:24 - that uh that's how you do widget areas
145:27 - inside of wordpress to be able to
145:29 - customize those
145:30 - so that pretty much brings us to the
145:32 - final piece of this custom wordpress
145:35 - theme tutorial we just have a couple
145:37 - little things to finish up here and one
145:39 - is the 404 template
145:41 - now a 404 template is the page that
145:44 - shows
145:45 - when uh somebody navigates to a link
145:47 - that's broken or something on your
145:48 - website
145:49 - so what we can do is i'm just going to
145:51 - come in here to my
145:53 - index and i'm just going to highlight
145:55 - all this and come over here to the 404
145:56 - template
145:58 - and paste
145:59 - and instead of having there's obviously
146:01 - no posts on the 404
146:04 - so i can just go ahead and delete this
146:06 - loop and i'm going to go ahead and get
146:08 - rid of this
146:09 - navigation
146:10 - and then i'm just going to fill in this
146:12 - with the header one that says page not
146:14 - found
146:17 - and then just save this now you can come
146:20 - over here now in my little preview here
146:22 - i've just
146:23 - added the page id that doesn't exist
146:25 - right i can say 555 and hit return
146:27 - and so i get myself a nice little not
146:30 - found now some things that wordpress
146:32 - developers do is on the not found page
146:34 - they'll also query the database and
146:36 - maybe pull out a bunch of recent posts
146:37 - so the user still has something to look
146:39 - at and click what i'm going to do is i'm
146:41 - going to add the search form
146:43 - so we can come over here and let's go
146:45 - ahead and add the search form
146:48 - code for that is just it's fairly simple
146:51 - here so i'll open up my php tags and
146:54 - i'll go ahead and close these
146:56 - and it's called get the search
147:00 - form
147:01 - actually it's not get the it's just git
147:02 - search sorry
147:05 - get search form
147:06 - like that and you can see it
147:08 - automatically gives me a search and now
147:09 - i can search for a page i can say test
147:12 - and hit search
147:13 - and this will then take me to my search
147:15 - page now you'll notice that my search
147:17 - results page is blank because i haven't
147:19 - yet set that up so let's go ahead and
147:22 - set that up next now that of course is
147:24 - down over here in my file called search
147:28 - so let's come over here and this is
147:30 - going to behave very similarly to an
147:32 - archive page so i'm going to come to my
147:34 - archive page and just copy all of this
147:36 - and come over here to my search page and
147:38 - just paste
147:39 - and let's just save that and you can see
147:42 - that's going ahead and pull up my
147:44 - archive page so anything that has test
147:47 - right is going to show up here so let's
147:49 - do a different type of search here i'll
147:52 - just click back here i think i added a
147:53 - bunch of tags with
147:55 - um i can't remember with cool c-o-o-l so
147:58 - if i search for that nope it's not
148:00 - searching my uh
148:02 - tags i don't even know i can't remember
148:04 - what i'm on post pages we're called
148:06 - let's come over here and look let's go
148:07 - to our
148:08 - um blog and let's see
148:10 - so
148:12 - so if i type in the word fancy okay so
148:15 - that post has fancy in the tile
148:17 - so if i come over here to let's actually
148:19 - go back to the 404
148:21 - um so we'll just
148:24 - go to a page here and then type in one
148:26 - that doesn't exist five five five five
148:28 - let's search for the word fancy hit
148:30 - return
148:31 - and you can see sure enough it's giving
148:32 - me the result from the fancy post
148:34 - pulling up on this search page
148:37 - so that's really all i need to do there
148:39 - i of course could come into the header
148:41 - and maybe i don't want to get the main
148:42 - header i could change this to say like
148:44 - you know search results or something
148:45 - like that i can modify those however i
148:47 - need i'm just going to leave that of
148:49 - course you can modify this template as
148:51 - you need but that's how you get the
148:52 - search now something that i might want
148:55 - to allow is that my visitors can search
148:58 - from any page so it's common right to
149:00 - have maybe a section inside of here in
149:01 - your header with a search form i'm just
149:03 - going to add one down here in the footer
149:05 - so that the search is available on every
149:07 - single page
149:08 - so i can come over here to my footer
149:11 - there's a couple of ways you can do this
149:13 - you can use the exact same thing like we
149:15 - did on the 404 page and hard code in a
149:18 - search form so i can just copy this
149:20 - paste that down into my footer area
149:23 - and then i'll have that search form
149:24 - however you can also do it with widgets
149:27 - so i'll show you because we already set
149:28 - up a widget area down here i'll go ahead
149:30 - and show you how you can set that up
149:33 - i'm logged into the back end so i'm
149:35 - going to come down here again to my
149:36 - appearance then over to widgets and i
149:39 - already have my footer area widget you
149:41 - can see that has that archives
149:43 - and you can see from the available
149:44 - widgets over here in the left hand
149:45 - column there's one called search and
149:47 - we'll search all of the posts so i can
149:49 - just drag this over here and drop this
149:52 - in my area here and just say search
149:55 - go ahead and click on save and now when
149:57 - i switch back over to my front end and
149:59 - refresh
150:01 - you'll see the search form appears right
150:02 - here so now i can come in here and say
150:05 - test and click search
150:07 - and i can just go ahead and search to my
150:09 - heart's content of course the formatting
150:10 - here isn't all formatted because my
150:12 - footer isn't set up to have that all
150:14 - formatted nice and pretty it'd be nice
150:16 - if i set up maybe three separate
150:18 - areas in my footer like three columns
150:20 - where i could have three separate widget
150:22 - areas but again you can do that all
150:24 - easily with what we've learned here in
150:25 - this
150:26 - series here in this
150:28 - lengthy wordpress
150:30 - we could really go on for hours and
150:32 - hours and hours there's so many things
150:34 - in wordpress and so many functions we
150:36 - could make this a hundred hour tutorial
150:38 - literally to cover everything that is
150:40 - inside of wordpress but this should give
150:42 - you enough to get completely started
150:43 - with building your own wordpress theme
150:45 - and converting an existing html thing
150:47 - theme over into a wordpress theme
150:51 - a few things that we didn't cover i'll
150:52 - just kind of mention that are somewhat
150:55 - popular
150:56 - inside of themes
150:57 - one is a thing called custom post types
151:00 - so you can add those in your custom
151:02 - theme what that allows for you to do is
151:04 - have your own post types so instead of
151:06 - just having posts and pages you could
151:09 - have one called
151:11 - car reviews and you could have one
151:13 - called videos and you can add a new car
151:15 - review so you can basically customize
151:17 - any of those main hierarchical
151:18 - categories
151:20 - inside of there
151:21 - there's another thing called custom
151:24 - fields which allows you to add custom
151:26 - fields to your posts or pages so an
151:29 - example of that i mentioned earlier is i
151:31 - could come into a post and say add new
151:34 - and maybe i wanted to have maybe this is
151:36 - a recipe and i wanted to have recipe
151:39 - ingredients and i want to be able to say
151:41 - this one's five minutes this one's seven
151:42 - minutes or something like that you can
151:44 - add custom fields to be able to have
151:45 - like a duration of ten minutes
151:47 - or or like we used before an article
151:49 - read time i could say the read time is
151:51 - six minutes or something like that and
151:53 - then i can output those custom fields
151:55 - inside of wordpress as well so again you
151:58 - can completely customize your theme and
152:00 - go as far as you want
152:01 - uh there's also many many plugins that
152:03 - do all the stuff we've been doing
152:05 - manually as well so search the plugin
152:06 - repository as well
152:08 - i hope you've learned something i hope
152:09 - this gives you a great starting point to
152:12 - be building your custom wordpress theme
152:14 - ours is pretty much complete here with
152:17 - taking our uh
152:18 - page and turning it all into a cms built
152:21 - on wordpress so all the content is now
152:23 - managed there
152:24 - i hope you've liked it uh don't forget
152:26 - to like and subscribe
152:28 - and share this content with others so
152:30 - they can benefit as well and we will see
152:32 - you in the next one