00:00 - hello everyone here on freecodecamp
00:02 - looking to build a successful mvp and
00:05 - avoid making major mistakes when
00:06 - developing an app or online product
00:10 - my name is annie okuber and i'm a
00:11 - software engineer and course creator on
00:13 - youtube who has also taken part in
00:15 - fintech incubators such as barclays
00:18 - techstars for early stage financial apps
00:21 - i am here to show you why building an
00:23 - mvp or minimal viable product is a
00:26 - proven way forward when building out
00:28 - apps
00:28 - today so why is an mvp important and how
00:32 - can the lack of one lead to demise of
00:35 - your dream startup
00:37 - here is an example of a failure of an
00:39 - app with 41 million dollars in funding
00:42 - back in 2012. the failure of the colors
00:44 - app could be put down to a few things
00:47 - but its premature huge launch without
00:49 - testing the product with an mvp is
00:51 - considered to be the main culprit the
00:53 - media attention from the 41 us dollar
00:55 - million funding guarded quite a lot of
00:57 - people waiting to download the app
00:59 - but once they did most of them quickly
01:02 - ended up using it and deleting it never
01:04 - to return again
01:06 - co-founders of colors admitted that they
01:08 - put out a product that they thought was
01:10 - good to a massive crowd who ultimately
01:13 - ended up disagreeing
01:15 - having an mvp that could be slowly
01:17 - tested and adapted before such a big
01:19 - launch could have saved this company
01:22 - but what exactly is it mvp we will find
01:25 - out soon enough
01:26 - by the end of this course you will know
01:28 - the steps necessary to develop your
01:30 - minimal viable product and have an
01:32 - understanding of the mistakes startup
01:34 - make in order to avoid them yourself and
01:36 - have a fully working mvp that you can
01:38 - adapt for your own use cases thanks to
01:40 - this one hour tutorial
01:42 - if you ever need to skip to one of the
01:44 - sections make sure to use the timestamps
01:46 - in the description below otherwise let's
01:48 - get going
01:50 - this course is made possible thanks to a
01:52 - charitable grant made from retool the
01:54 - powerful app building platform low-code
01:56 - solution for creating react-like apps
01:59 - companies like brex played ram amazon
02:02 - nbc use retool for their internal tools
02:05 - and many startups use it to build a
02:07 - variety of mvps
02:09 - now
02:10 - why is an mvp useful to me
02:13 - mvp stands for minimal viable product
02:16 - it's when startup to release the most
02:17 - minimal core product to get things going
02:19 - in terms of testing and developing here
02:22 - are four reasons why mvps are essential
02:25 - to building modern apps
02:27 - number one an mvp allows you to collect
02:29 - data and feedback from your customer
02:32 - base
02:33 - number two it also allows you to iterate
02:36 - on what you have before release
02:39 - building products is an iteration game
02:41 - the product is forever changing meaning
02:43 - that you want to choose an approach
02:44 - where changes can be made quickly and
02:46 - without too many stakeholders involved
02:49 - this is where having a small team and
02:51 - very flexible and relatively inexpensive
02:53 - tooling at the beginning can be very
02:55 - beneficial
02:57 - and another great reason to have an mvp
02:59 - is to reduce overall development time
03:02 - and finally a big one for tech startups
03:04 - is pc funding you might have a great
03:06 - startup idea in your head but how do you
03:08 - know it's a great idea you can't show
03:11 - people the idea in your head let alone
03:12 - test it out to get feedback and guess
03:15 - what without that feedback and general
03:16 - data collection you aren't likely to get
03:19 - any investors knocking on your door
03:21 - so you look into hiring a dev team but
03:23 - uh oh that's expensive and you have no
03:25 - money as no one will invest you're stuck
03:28 - in a chicken and egg situation
03:30 - building an mvp will allow you to spin
03:32 - up apps or software as fast so you can
03:34 - get to testing and potentially gaining
03:35 - revenue to show investors straight away
03:39 - so we have covered what mvp is and why
03:41 - you might want to make one but are you
03:43 - ready to start your entrepreneurial
03:45 - journey quite yet
03:47 - to show you how fast this can be done on
03:49 - your own without having any help and
03:51 - spending a bomb we will be building out
03:53 - an mvp that callers should have built in
03:55 - the first place
03:57 - okay to build it we will be using retool
03:59 - note that retool is a platform intended
04:01 - for building powerful applications but
04:03 - we are here using it to build a very
04:05 - simple app to get you started you can
04:07 - learn more about retool on their website
04:09 - in the documentation or watch one of my
04:12 - previous videos where we built out a
04:13 - couple of more complex applications okay
04:16 - so what are we waiting for by the end
04:18 - you will have this app that will allow
04:19 - you to view all your posts along with
04:21 - who posted them and who viewed them and
04:23 - if we click into one you'll be able to
04:24 - view the whole thing as well as delete
04:26 - it and upload posts too okay so we're
04:29 - gonna be using a lot of apis for this
04:32 - and we're also gonna have this messaging
04:34 - system that allow you to message users
04:36 - in your database okay so ta-da there we
04:39 - go we are messaging in the app as well
04:42 - right so
04:44 - let's do it
04:46 - okay so let's do it let's start off on
04:47 - the retool platform so it is uh free to
04:50 - sign up just go ahead and select strive
04:53 - for free i'm gonna sign in though
04:55 - because i already have an account with
04:56 - free code camp so that's what i'm gonna
04:58 - do as i've used this many many times
05:00 - before
05:02 - so here we go this is what the dashboard
05:05 - should look like as you'll see here
05:08 - there's some previous uh
05:10 - projects that i have made let's start
05:13 - from scratch though i'm just gonna
05:15 - create new and i'm gonna create an app
05:18 - so let's go ahead and call this
05:20 - something i'm gonna call this colors app
05:22 - okay because we are making a mvp of what
05:25 - i think the colors app should have
05:27 - launched with to get going
05:30 - so
05:31 - there we
05:33 - go
05:34 - okay so here was what the app should
05:37 - look like to you and me it's got some
05:39 - boilerplate table with some boilerplate
05:41 - code as well as all the tabs kind of um
05:44 - popped up so that we can see them
05:47 - however we can minimize them if we wish
05:51 - so just like that and perhaps we should
05:54 - because the first thing that i'm going
05:55 - to do is just set everything out in the
05:58 - ui before we start connecting our
06:00 - database to mongodb before we start
06:02 - connecting to aws and all that
06:06 - so
06:07 - let's go ahead and do it so as you can
06:09 - see a table has been populated for us
06:12 - with some uh just some dummy data we're
06:15 - not gonna be needing this so i'm just
06:16 - gonna go ahead and click delete on this
06:19 - great
06:21 - now the first thing that we're going to
06:23 - do is put in a tabbed container so i'm
06:26 - just going to drag in a tabbed container
06:28 - and this is going to essentially kind of
06:30 - symbolize our app itself so here we go
06:33 - here is our app and in here well we can
06:36 - actually do a bunch of personalization
06:39 - so for example first off i can decide
06:42 - that i want the um
06:44 - well we can have transitions to slide in
06:47 - from one to the other
06:49 - just like so from view one to view two
06:51 - to view three
06:52 - and then of course we can rename these
06:54 - views so i'm actually gonna do that i'm
06:56 - gonna choose to call this my feed so
06:59 - like the apps feed i'm gonna choose to
07:01 - call this my timeline to see a timeline
07:04 - of all the pictures that i have posted
07:07 - me personally i'm also going to have a
07:08 - tab to upload an image from the app of
07:11 - course we need to do that as an app we
07:13 - want to be able to upload our own photos
07:16 - i'm also going to have an inbox
07:19 - okay an inbox so that we can see
07:21 - messages and also message other people
07:23 - from the app itself and i'm also going
07:26 - to have another one called view this is
07:28 - going to be a secret one where we can
07:30 - actually view an individual post
07:33 - itself
07:34 - okay so this one is going to be hidden
07:37 - so i'm going to write hidden true and
07:38 - that will just mean that we can't see it
07:40 - here although it does exist and we can
07:42 - navigate through it by clicking
07:43 - different things
07:45 - so there we go that is step one of my
07:48 - tabbed container we can of course do
07:50 - many many other things for example if i
07:52 - want this to be at the bottom well all i
07:55 - have to do is select the element and
07:57 - then just scroll down to all the other
08:00 - options that we have available for
08:02 - example i can choose to uh change the
08:05 - color of the footer
08:07 - so i can choose to have this this kind
08:09 - of dark
08:11 - gray
08:12 - color just like so and of course this
08:14 - means that we need to
08:17 - show the footer so just show the footer
08:19 - like this
08:21 - i am actually going to drag these tabs
08:23 - down into the footer itself so that they
08:26 - are in the middle and i'm just going to
08:27 - make the alignment center just
08:30 - like
08:31 - so okay and maybe let's make this a
08:33 - little bit bigger so we can see
08:36 - okay
08:37 - so
08:38 - great one other thing we can do that is
08:41 - kind of cool is actually add little
08:43 - images to this as well
08:45 - so for example on my feed i can actually
08:48 - choose to have an icon which i am
08:50 - definitely going to do i'm going to
08:52 - search for the icon so i'm going to have
08:54 - a little home icon perhaps let's go
08:56 - ahead and choose this one i think it's
08:58 - quite cool and position it to the left
09:00 - let's go ahead and also do one for the
09:02 - timeline so let's search for something
09:04 - to do with time and this is a timeline
09:07 - so let's choose this one
09:10 - for upload i'm of course going to choose
09:12 - something to do with uh maybe camera
09:15 - just so people know that this is for
09:17 - uploading photos and for inbox this one
09:19 - is easy let's just choose an inbox so
09:22 - there
09:23 - we go
09:25 - so there we have it this is looking
09:27 - wonderful there's a lot more things we
09:29 - can do for example we can choose the
09:31 - hover text maybe let's just make it like
09:34 - a lighter color and the selected text
09:37 - again i'm just going to make this a
09:39 - lighter gray just because i think it's
09:41 - much cooler and much neater
09:44 - whee so there we go we are now sliding
09:47 - through each of these
09:49 - let's
09:50 - carry on
09:52 - one thing we can do as well to make our
09:54 - lives easier is actually rename these if
09:57 - we wish if you find it easier to do so
09:59 - then please feel free to rename these
10:01 - i'm quite happy with this being tabs one
10:03 - but that option is there for you too
10:06 - now in the header i'd quite like to
10:09 - actually display whatever tab we are on
10:13 - so this is going to be our first piece
10:15 - of i guess retool syntax that you're
10:17 - going to experience
10:19 - first off i'm just going to grab some
10:21 - text and just put it in here like so
10:23 - making sure that it is in the middle so
10:25 - let's just get rid of any of this and
10:27 - make sure it's aligned in the center
10:30 - so
10:30 - i'm going to choose to make this an h3
10:33 - tag so we can use html elements in here
10:37 - and then i'm going to use these two
10:39 - double
10:41 - curly braces so this is some retool
10:43 - syntax in order to get tabs one so this
10:47 - tabs one that we were just on and tabs
10:49 - one comes with a variety of things so if
10:52 - you click the dot they will pop up we
10:54 - want to get the selected
10:57 - label
10:58 - okay so this just means if i click on
11:01 - one of these
11:02 - this text will change dynamically based
11:05 - off what we have written here
11:08 - so once again just pick out the element
11:10 - or pick out the component in this case
11:11 - it was tabs one you can hover over it if
11:14 - you need just to get the name and then a
11:16 - variety of options should show up if you
11:18 - press a dot and we have just gone for
11:20 - the selected label
11:22 - so this is looking wonderful
11:25 - let's carry on
11:27 - now i'm just going to put in some more
11:29 - text here i am actually going to hard
11:31 - code this just to be my name just
11:33 - because you know for now i think that's
11:35 - fine so i'm just going to do that here
11:38 - so ania kubo is the user of this and we
11:41 - can of course align this to the right if
11:43 - we wish and center it this way too
11:46 - and on the left once again i am going to
11:49 - put in an image there's two ways you can
11:52 - do this you can just use a circular
11:54 - image so if i just show you a circular
11:56 - image looks like this and we can you
11:58 - know resize it to
12:00 - whatever size we want
12:06 - or if we are very particular about the
12:08 - size we can actually write our own html
12:13 - so i'm going to do that for this option
12:15 - just to show you the difference
12:17 - so here it's just exactly the same as
12:20 - you would do in normal html i'm going to
12:22 - write an image tag
12:24 - and for my image well the alternative
12:26 - text for this is going to be
12:29 - avatar
12:32 - of user
12:34 - and then the source of this is just
12:35 - going to be i'm just going to use an
12:37 - image of me from the internet again i'm
12:39 - just hard coding this because we don't
12:40 - have any data to work with quite just
12:43 - yet
12:45 - so here we have an image from me i'm
12:47 - going to copy the image address
12:49 - from the free code camp website so there
12:52 - we have an image of me and now i can
12:54 - actually pick this out so maybe let's
12:56 - give this the class of
12:58 - avatar just like so
13:03 - and then
13:05 - this means i can now grab the class of
13:08 - avatar
13:11 - and give this a height of 20 pixels
13:14 - maybe let's make it 25 pixels
13:16 - a width of 25 pixels a border
13:21 - radius
13:22 - of 50
13:25 - and then maybe let's give it some margin
13:30 - left
13:32 - 5 pixels
13:35 - and margin
13:37 - top
13:38 - two pixels
13:39 - okay so there we go i've just made a
13:41 - custom html element i'm just gonna drag
13:44 - it in
13:46 - like so making sure to select the blue
13:49 - writing
13:51 - and great and perhaps let's actually
13:53 - rename this i'm going to rename this to
13:54 - avatar
13:56 - image
13:57 - for us to pick out if we need
14:00 - now the next thing i want to do is
14:02 - actually populate our feed with some
14:05 - posts
14:06 - so to do this we're actually going to
14:07 - start working with resources and we have
14:09 - many to our disposal if we look here in
14:12 - the resources you will see all the ways
14:14 - that we can connect so if i go ahead and
14:18 - create a new resource
14:20 - we can use all of these databases we can
14:23 - use all of these apis and we can use a
14:25 - rest api in order to connect to whatever
14:28 - api we really wish that uses rest
14:31 - so there we have it we are going to use
14:34 - mongodb for no other reason that i had
14:36 - to choose the database so i'm going to
14:38 - go ahead and do that
14:40 - so if you haven't used mongodb already
14:42 - please do go ahead and sign up once
14:45 - again we are gonna be using the free
14:47 - version of it so go ahead and start for
14:50 - free i'm just gonna sign on with google
14:52 - because i've already used mongodb a few
14:54 - times before
14:57 - so here is my dashboard once you do fill
15:00 - out all the things necessary in order to
15:03 - get to here this is what you should see
15:06 - so under my organization you will see
15:10 - the projects that i have made so far
15:14 - so just make sure you're at forward
15:15 - slash projects
15:17 - so i'm just going to go ahead and create
15:19 - a new project my project name is going
15:21 - to be
15:24 - retool and i'm just going to click next
15:28 - okay i am going to be the project owner
15:31 - so let's go ahead and create a project
15:33 - just like so
15:35 - and wait for that to do its thing
15:38 - so now that we have our project called
15:41 - retool let's go ahead and build a
15:42 - database i'm going to choose the free
15:45 - shed option so please go ahead and
15:46 - choose that one too
15:48 - and i'm just going to go with the
15:50 - suggested
15:51 - region for me and just click create
15:54 - cluster
15:56 - okay so our cluster is being made that
15:58 - is doing its thing we're gonna have to
16:00 - fill out some more things first so i'm
16:03 - just gonna select a username and i'm
16:04 - going to auto generate a secure password
16:07 - and copy it and save it somewhere safe
16:09 - because we are going to be needing that
16:10 - later don't forget to also press create
16:13 - user now i'm just going to go down here
16:16 - and we are also going to add our current
16:18 - ip address so just go ahead and add your
16:21 - current ip address this just means that
16:24 - you will be able to access the database
16:26 - from your current ip address and we're
16:28 - also going to add some retool ones in
16:30 - later as well so that our platform has
16:32 - access to the database too so once you
16:34 - have done that let's just go ahead and
16:36 - click finish and close
16:38 - okay and go to databases
16:40 - so now this is doing its thing and what
16:43 - it has finished we will be able to
16:45 - connect our database and then also
16:47 - create our first collection
16:50 - and great
16:51 - so the first thing that we're going to
16:53 - do is actually add something to our
16:55 - collections we're going to have two
16:57 - collections we're going to have a post
16:59 - collection and a message collection so
17:01 - let's go ahead and add our own data i'm
17:03 - just going to call this
17:05 - tests
17:06 - and the collection name is going to be
17:08 - posts okay
17:10 - so please just go ahead and do that now
17:12 - before we do anything else i'm just
17:14 - going to connect this to our retool so
17:17 - let's go back to the overview
17:20 - and then connect
17:22 - and then we're going to connect our
17:23 - application and just take this url right
17:26 - here and i go back to the connector
17:28 - resource page that we just started
17:30 - now what should we call this well let's
17:32 - just call this colors
17:35 - and then use the database string and
17:38 - just paste that in like so and the
17:40 - password that i ask you to save
17:42 - just go ahead and replace that here so
17:45 - we've got the username and the password
17:47 - we're also going to have to allow these
17:49 - ip addresses as well as our own so back
17:52 - in here
17:55 - under network access please go and add
17:57 - those three ip addresses of retools so
18:00 - just go ahead and put in one
18:03 - put in the second one
18:08 - so just like so and then finally the
18:10 - third one as well
18:12 - okay so just add in those three ip
18:14 - addresses like so
18:16 - and that's it and wait for them to be
18:18 - active
18:19 - okay
18:20 - so back in here we have the connection
18:23 - string we've replaced the password with
18:25 - our password this is looking good and
18:28 - once those have been
18:29 - accepted and they are active we will
18:32 - test our connection
18:34 - okay
18:35 - so just wait for that to be done
18:38 - and great
18:39 - so now if we test our connection we
18:41 - should see connection successful so that
18:44 - is looking good let's go ahead and
18:45 - create our resource and then go back to
18:48 - the resources page
18:50 - so we've created our resource now let's
18:52 - go ahead and go back in here
18:58 - so back to the retool project
19:00 - browser collections and i'm going to
19:03 - show you how to create a first post i'm
19:06 - just going to go ahead and insert
19:07 - document i'm going to choose to write it
19:09 - in json as i feel more comfortable with
19:11 - this and how do we want our post to look
19:15 - so our post as an object well it's going
19:17 - to have an image url
19:22 - okay and it's also going to have a
19:24 - description
19:27 - so description of the post itself so we
19:30 - can have
19:32 - my
19:33 - favorite
19:35 - thai spot for example
19:38 - we're gonna have the author so in this
19:40 - case it's going to be anya kubo
19:44 - which is of course me we'll have the
19:46 - views
19:48 - of this post i'm just going to
19:52 - say that the views are 20
19:57 - we're also going to have an author
20:02 - avatar which is just going to be an
20:04 - image of me and then we're also going to
20:07 - have a title
20:10 - so a title of this is going to be
20:15 - thai dreaming
20:19 - favor
20:21 - rit spelt the english way
20:25 - and then we're also going to have a time
20:28 - stamp which is going to be iso 8601
20:30 - timestamp so that we can essentially
20:33 - order these posts by uh you know most
20:36 - recent on the so on
20:38 - and then of course we're also going to
20:40 - have an id that's going to be our unique
20:42 - id for now i'm just going to give this
20:43 - one which is separate to the object id
20:46 - so now let's fill this out i'm just
20:48 - going to be using images off the
20:49 - internet for now again we are going to
20:52 - be using aws s3 buckets to store our
20:55 - images but you know we want to see some
20:57 - stuff now so i'm just going to do this
20:59 - please be aware though that if these
21:00 - images go off the internet then you will
21:02 - not be able to see them anymore because
21:04 - we have no control over them
21:05 - so i'm just going to paste an image that
21:07 - i found on the internet of thailand
21:10 - and i'm also going to just paste an
21:12 - image
21:13 - of myself of the free code camp website
21:17 - okay so this is it i'm just going to
21:19 - insert that like so so at the moment we
21:21 - just have one post i'm just going to
21:23 - duplicate this
21:24 - and just create another so this one's
21:27 - going to be from
21:28 - john woo he's got
21:31 - 121 views
21:33 - this is going to be
21:35 - london
21:37 - pub
21:38 - love
21:40 - idea of this is going to be two
21:42 - and then the timestamp well let's
21:44 - actually give this description
21:47 - my usual spot in
21:50 - london
21:53 - and then let's get an image of a london
21:55 - pub
21:57 - just put it in like so and then
22:00 - put in an avatar and get today's date in
22:04 - iso 8601 format
22:06 - okay so that's today let's make this
22:09 - actually
22:10 - yesterday and insert and i'm just going
22:12 - to add the timestamp to here as well so
22:15 - let's edit this
22:16 - and put in today's
22:18 - timestamp
22:19 - okay so we've got two posts here at the
22:22 - moment
22:24 - just like so i'm gonna now retrieve
22:27 - these from the app so to do this i'm
22:29 - going to just get a resource
22:32 - so let's just get this down here i'm
22:34 - going to make a new resource query
22:37 - this resource query is going to be to
22:42 - colors
22:43 - posts
22:45 - and save and run
22:48 - and great you will even see a schema pop
22:51 - up so now if i type in the collection
22:54 - post or select it from a drop down and
22:57 - just click run
22:59 - you will see my two posts okay you're
23:01 - seeing literally these two posts right
23:04 - here
23:05 - wonderful
23:07 - so this is looking
23:09 - great
23:10 - so now that we have to date that data
23:12 - let's get to using it in order to
23:14 - populate our feed with a list so let's
23:17 - get going
23:20 - so to do this i'm going to find a list
23:22 - view and just drag it in here like so
23:26 - it's going to get rid of this for now
23:29 - get rid of the bottom one too
23:32 - and let's create
23:34 - our
23:35 - list
23:36 - so the number of rows well we're going
23:38 - to get our curly braces again and use
23:40 - the get post data
23:42 - length in order to
23:44 - essentially make as many rows as we need
23:46 - in this case it's going to be two as our
23:47 - post consists of two posts made up of
23:50 - the data that we have okay so an array
23:53 - of those two things
23:55 - now i'm just going to put in a container
23:58 - so our first item is going to be a
24:00 - container and you will see how the list
24:02 - will just automatically create two of
24:04 - those because we have two items in our
24:05 - list it's created two containers
24:08 - so all i'm going to do is just make this
24:10 - look a little bit different i'm going to
24:12 - show a footer i'm not going to show a
24:14 - header and i'm going to also put in an
24:18 - icon
24:19 - so let's search for an icon and just
24:21 - drag it in here like so
24:26 - and then this is going to be an i
24:28 - because this is going to symbolize how
24:30 - many views we have
24:32 - so there we go and i'm just going to
24:35 - align it to the right
24:37 - let's also put in some text so that we
24:39 - can actually see how many views that we
24:41 - are getting on this
24:43 - visually thanks to our data so i'm just
24:46 - going to put in some text
24:50 - and we can now access the data by going
24:53 - into get posts data and then looping
24:56 - with an i okay so we're just going to
24:58 - loop and then retrieve back the views
25:01 - for those of you familiar with
25:02 - javascript this should be familiar this
25:05 - eye to syntax should be familiar that is
25:07 - how you loop over everything from the
25:09 - get posts data array in order to get the
25:12 - values from the object we are looking
25:14 - looping over so once again i'm just
25:16 - going to align that to the right
25:19 - next i'm also going to put in the author
25:21 - okay so again i'm just going to drag in
25:24 - some text just like so
25:27 - and i'm going to go into the get post
25:29 - data i'm going to loop over each item
25:32 - and get the author in order to display
25:34 - who exactly posted this image
25:37 - and for the image itself well i actually
25:39 - want to put in some custom html so once
25:42 - again i'm just going to go into the html
25:46 - just like so and drag it and drop it in
25:48 - here
25:49 - and in here well what do i want i want a
25:52 - div that is going to be a media
25:54 - container so let's just go ahead and
25:57 - write our div and give it the class
26:01 - of media container just like so
26:06 - and that's going to hold
26:08 - so once again i'm just going to put in a
26:10 - div and the class to this is going to be
26:13 - image container so let's give this the
26:15 - class of
26:16 - image
26:17 - container
26:21 - and this is actually going to hold our
26:23 - image which is a self-closing tag
26:25 - and the source of this well we're going
26:27 - to actually use our
26:30 - two curly braces in order to go into the
26:33 - get
26:34 - post data we're going to loop over each
26:36 - item and get the image
26:39 - url
26:40 - okay
26:41 - so that's what i'm going to do
26:45 - and then i'm also going to make a new
26:46 - div that's going to be our text
26:48 - container
26:50 - so here is a div i'm going to give this
26:52 - the class of
26:54 - text
26:56 - container like so
26:59 - i'm just going to put in a p tag
27:06 - this is going to hold the title so once
27:07 - again we're going to get
27:09 - post data
27:11 - when i loop
27:12 - and just get the title
27:14 - okay
27:15 - so
27:16 - there we go we're having some issues
27:18 - with the thai dreaming image i wonder
27:21 - why that is but we'll look into that in
27:23 - a bit
27:24 - so now in the css let's actually pick
27:26 - out everything that we have to style
27:29 - which is going to be the media container
27:31 - for one
27:32 - and the media container well i just want
27:34 - to hard code everything so they all have
27:36 - a height of 200
27:39 - pixels
27:43 - and then also we're going to have the
27:46 - image container
27:55 - like so and the image container is also
27:57 - going to have a height of 200 pixels
28:00 - and then also a width of 100
28:04 - i'm gonna have overflow as
28:07 - hidden
28:08 - so just like that perhaps we can make it
28:11 - smaller if we wish i'm quite happy with
28:13 - this if you want to make it smaller and
28:14 - please feel free to do so
28:17 - great
28:18 - and i'm also going to say that the any
28:20 - image that lives inside the media
28:23 - container
28:25 - is going to have a width of 100 to make
28:28 - sure that any image is you know
28:30 - stretched out to the width and then
28:32 - position
28:37 - relative
28:40 - and just center it so that means from
28:42 - the bottom i just want it to be 50
28:46 - and one last thing
28:48 - let's get the text container
28:55 - and let's give it some padding so i'm
28:57 - going to go with 5 pixels from the top
28:59 - 15 pixels
29:01 - from the side
29:03 - and then 8 pixels
29:05 - and then also 15 pixels
29:08 - okay and then also i'm going to give it
29:10 - a background color
29:14 - and that background color is gonna be
29:17 - a little bit transparent so i'm gonna go
29:19 - with
29:20 - zero zero zero zero point five
29:26 - the text well the text i'm actually
29:28 - going to give it
29:29 - white
29:31 - so
29:32 - there we go so we can read it
29:35 - let's also give this position
29:37 - relative
29:40 - and let's give it some
29:44 - bottom
29:46 - and let's also move it a little bit
29:49 - like
29:50 - so okay so that's what it should look
29:52 - like just ignore that one for now so
29:54 - it's kind of like an overlay with the
29:55 - title like
29:57 - so
29:59 - and also maybe let's start any p tags
30:02 - that live inside the media container so
30:04 - any p tags that live inside here so we
30:06 - don't want to affect any other p tags
30:08 - and have the font size of
30:11 - 20 pixels
30:13 - great
30:14 - so that is looking wonderful we've just
30:16 - created our custom html element which is
30:19 - going to be this image this is looking
30:22 - great
30:23 - so perhaps let's fix this image problem
30:25 - let's go back in here and see what is
30:27 - happening obviously just doesn't really
30:30 - like this url let's see why
30:33 - i'm not sure but let's find another
30:35 - image of thailand
30:37 - i'm just gonna go with this one right
30:38 - here copy image
30:40 - and let's just replace it like so an
30:43 - update
30:52 - and great so that is looking so much
30:56 - better
30:59 - make sure this says overflow
31:01 - make sure this says
31:03 - image container
31:08 - okay perhaps we don't need that this is
31:11 - looking great
31:15 - okay so there we have our two posts of
31:18 - course we can add more we'll do that in
31:20 - a bit what i want is to actually add a
31:23 - trigger if we click on this it will take
31:25 - us to the display of the image itself
31:28 - just by itself so let's go ahead and do
31:30 - that
31:31 - what i want to do is add an interaction
31:33 - and that's going to be on click and it's
31:35 - going to control a component that
31:37 - component is going to be the tabbed
31:39 - container and i'm going to set the view
31:42 - to be
31:43 - view which is if you remember one of the
31:45 - tabs that is hidden
31:47 - so that's what i want to happen and when
31:50 - that happens i actually want to write
31:52 - another query to get an individual post
31:54 - so at the moment if i click this it will
31:56 - just go to the view page i now want to
31:58 - write another query so let's go ahead
32:00 - and do that i'm going to write another
32:02 - query
32:04 - this query is just going to be get
32:06 - individual posts so get post and i'm
32:09 - going to go into the colors
32:11 - resource
32:13 - and what i'm going to do is look in the
32:14 - collection called
32:16 - posts
32:18 - so posts and i'm going to use find one
32:21 - this time because i want to find one
32:23 - post based on an id so the query i'm
32:26 - going to have to write is id and then
32:28 - i'm going to choose the post i clicked
32:30 - on to get posts again data and whatever
32:34 - i looped
32:36 - id
32:37 - okay so that's all i am essentially
32:40 - going to do i'm going to preview that
32:43 - just to see what comes back and once
32:45 - again let's go to the feed
32:47 - it's going to save and run this and if i
32:50 - click on this
32:53 - that should get
32:54 - me whatever post i clicked on
33:01 - id
33:02 - okay
33:03 - so that is what should be happening
33:05 - right now
33:07 - if i click on this
33:09 - so all i'm going to do is create an
33:11 - image
33:13 - drag it in here like so
33:18 - and the source of this well it's not
33:19 - going to be this cute kitten even though
33:21 - that would be quite nice i'm going to
33:22 - get
33:23 - posts
33:25 - data
33:28 - this time just the individual post data
33:31 - not post
33:32 - data
33:34 - image
33:36 - url
33:38 - okay
33:39 - so let's try this again
33:43 - okay so this just means if we click on
33:45 - here as long with going to the view we
33:47 - also need to control a query and that is
33:50 - the get post query so that is looking
33:53 - good let's go ahead and trigger the
33:55 - click now
33:56 - so
33:57 - i'm just going to get rid of this
33:59 - click on here
34:03 - trigger the click
34:05 - and great so we are getting that
34:07 - individual post right now we're
34:09 - essentially running the get post query
34:12 - another thing we can do of course is add
34:15 - more stuff to this so let's create i'm
34:18 - going to maybe put in the author name
34:20 - again at the bottom so just drag in my
34:22 - name right here
34:24 - and then get rid of this and get post
34:28 - data individual
34:30 - author okay so i'm just putting my name
34:33 - right here and then we can also put in a
34:35 - button to delete it and this will run
34:37 - the delete query for the post so there's
34:40 - something that we can also do so let's
34:43 - go ahead and do that why not
34:46 - so
34:48 - to do this well we're going to have to
34:50 - write a another query so let's go ahead
34:52 - and get these two tabs up i'm going to a
34:54 - new query so resource query and this
34:57 - time this is going to be
35:00 - to
35:01 - delete
35:02 - post
35:03 - okay
35:05 - so that is what our query is going to do
35:08 - and the
35:10 - collection for this is going to be posts
35:12 - the action type is going to be delete
35:14 - one and we're essentially going to look
35:17 - for the id
35:19 - of this post
35:21 - so this post is get post
35:24 - data id
35:27 - okay and if we preview this
35:31 - okay the result says that this should
35:33 - work if i save this now
35:36 - we need to now connect the button to
35:39 - that query so let's go ahead and maybe
35:42 - say this is delete i'm also going to
35:43 - make it red just because i think that
35:45 - red is much more
35:47 - associated with deleting things so on
35:50 - click of this now
35:52 - event handler on click control query
35:54 - delete post okay so that's what i want
35:56 - to do
35:58 - we can also do it that on success
36:02 - so on success of this post
36:06 - so here we go
36:08 - on success we can also be taken back to
36:11 - the home page so control the component
36:14 - we want the tabbed container and the
36:16 - view we want to set is the
36:19 - feed
36:20 - so that is also something that we can do
36:23 - so should we go ahead and delete this
36:25 - post of course it will mean that we
36:27 - won't have much data to work with but
36:29 - you know let's let's just go ahead and
36:31 - do it in fact i'm just going to
36:34 - perhaps uh copy this so that we can just
36:37 - reinsert it back in as soon as we do it
36:40 - so copy that
36:44 - and let's check it out
36:45 - so back to the feed i'm going to click
36:48 - on this so let's trigger the click
36:51 - okay we're viewing the image on the view
36:53 - page
36:55 - and let's go ahead and now click delete
36:59 - so that will trigger the delete post
37:03 - and it takes us back to the home page
37:06 - however this is still here so perhaps we
37:08 - need to get all the posts again because
37:10 - if we refresh this
37:12 - okay so that is correct so once again
37:15 - that's fine we can open this up
37:18 - and on the delete post query so on
37:20 - success we want to go back to this we
37:22 - want to go back to the
37:25 - feed but we also want to rerun the query
37:28 - that will get all the posts right so we
37:30 - want the freshest posts so that is what
37:33 - we're going to do so let's try that one
37:34 - more time i'm just going to reinsert the
37:36 - document that we just deleted
37:40 - so insert that
37:43 - to refresh this
37:46 - i'm going to hide that
37:48 - so now we should see two posts
37:50 - let's once again just trigger the click
37:52 - for this so trigger click so we view the
37:55 - whole image now and then i want to
37:56 - delete the whole image so then it should
37:58 - be deleted it should take us back here
38:00 - and we get the freshest posts wonderful
38:03 - so this is looking good once again i'm
38:05 - just going to reinsert that in so that
38:06 - we have more data to work with
38:10 - great
38:11 - so this is all looking good so we've
38:13 - done the feed
38:16 - next we want to show the timeline of
38:18 - just our posts so what i'm going to do
38:21 - is actually make a new query so resource
38:24 - query and let's call this get
38:27 - your
38:28 - posts
38:29 - okay
38:31 - and once again we're going to look in
38:32 - the colors resource we're going to look
38:35 - in the collection called posts and this
38:38 - time we're going to find but we're also
38:40 - going to write a query for this because
38:42 - the author of this well we just want it
38:44 - to be us right so us is here in text two
38:48 - so we can use the component text two to
38:50 - get its value
38:51 - so text to value is gonna be the
38:54 - username okay so that's just what i'm
38:57 - going to do right here like so so again
38:59 - we can also preview that it's annie
39:01 - akuba so if i preview this here it
39:04 - should just return back one post which
39:06 - is the one post i made the author
39:08 - anyakubo so this is looking good i'm
39:10 - just going to save it
39:12 - and all i'm now going to do in fact we
39:14 - can just copy this right i can copy this
39:17 - list so i'm just going to hide this and
39:19 - just put it in here because it's the
39:21 - exact same thing perhaps you just need
39:23 - to drag it in here it's the same type of
39:26 - view that we want okay so that will have
39:28 - all the same functionality to it and if
39:29 - we click on it we'll be able to see the
39:32 - timeline too
39:34 - okay so that's what we want we just need
39:36 - to now replace the data that's being fed
39:39 - into this with instead of going to get
39:40 - posts we're gonna get go into get your
39:43 - posts data instead okay so that's the
39:47 - length of this and now here
39:50 - we're also going to
39:52 - make sure that we're using the correct
39:54 - queries so get your
39:56 - posts
39:58 - get your
39:59 - posts
40:00 - okay and i believe that should be it are
40:02 - here to get
40:05 - your posts
40:07 - otherwise we're using a different query
40:08 - for this get
40:10 - your posts
40:12 - and that should be it
40:14 - okay so once again here we have our feed
40:17 - it should have everyone in it
40:19 - unless we've deleted something
40:23 - okay so here's our feed of the two items
40:25 - if we go on the timeline we just see all
40:27 - my posts as any kubo and if we click on
40:30 - this posts or trigger the click it
40:32 - should be taken to the view of the post
40:35 - however it would seem that if we're on
40:37 - our timeline the trigger will also need
40:39 - to be changed
40:40 - get post
40:43 - trigger
40:44 - this is going to have to be another
40:46 - query
40:47 - so let's write another query so you get
40:50 - your post
40:52 - so we've got our individual post we're
40:54 - also going to write a resource called
40:56 - get your post individual get your
41:00 - post
41:03 - okay and once again it's going to look
41:04 - in colors it's going to find one this
41:07 - time
41:09 - and we're going to look in it
41:11 - so i'm just going to save this because
41:13 - we're going to essentially just copy
41:14 - this what we did for the individual post
41:17 - forget your post individual but instead
41:20 - of getting the posts
41:22 - we're gonna get your posts plural id
41:25 - that we clicked and save and run which
41:27 - means that if we're now on the timeline
41:29 - the trigger that we want to hit is get
41:32 - your post
41:34 - and not get post
41:36 - okay so hopefully that makes sense let's
41:39 - check it out i trigger this
41:44 - it should go to here and now we can
41:46 - use get your post individual to render
41:49 - this and also get your post individual
41:52 - to render this
41:54 - and on the delete
41:58 - make sure that is saved to the
41:59 - collection posts
42:02 - and on the delete
42:04 - once again we're going to have to write
42:06 - a new query
42:10 - so
42:12 - make sure this is delete
42:14 - your post
42:18 - like so and once again we're going to
42:21 - look in the collection posts we're going
42:23 - to delete one
42:25 - and what do we want to delete well we
42:26 - want to get the id of
42:29 - your post that you are viewing
42:32 - and
42:33 - on success
42:36 - we want to
42:37 - control
42:38 - the component we want to control the
42:41 - component
42:42 - tabbed container set the current view to
42:45 - feed
42:48 - and then also on success we want to
42:50 - rerun the query to get all the posts
42:56 - great
42:57 - so this is all looking wonderful so once
43:00 - again let's go on our timeline
43:03 - let's trigger the click
43:06 - and we are indeed getting the correct
43:08 - post
43:09 - so this is all looking wonderful
43:12 - so now that we've done that let's carry
43:15 - on so we've got the feed we've got the
43:17 - timeline
43:19 - we'll work on the upload next i just
43:21 - want to work on the messages so for this
43:24 - we're actually going to make a new
43:25 - collection so let's go ahead and go back
43:28 - in here and just create a new collection
43:30 - that this time is going to be called
43:31 - messages just like so and click create
43:37 - now what are our messages going to look
43:39 - like well our messages are each going to
43:42 - have again a time stamp as we're going
43:44 - to want to filter out you know the order
43:47 - on which the are coming in so timestamp
43:50 - is going to be necessary we're also
43:52 - going to have a from
43:54 - so for example this is gonna be from
43:56 - anya kubo
43:58 - and it's gonna have a two and the two is
44:00 - gonna be to john woo
44:02 - john woo
44:05 - and of course we're gonna have the
44:06 - message itself i'm not very imaginative
44:08 - so apparently i just text john woo
44:11 - hey there
44:12 - because you know i lack any sort of
44:15 - imagination
44:17 - so that is my message and of course we
44:19 - need a time
44:20 - stamp so i'm just gonna stick that one
44:23 - in of today and now and just click
44:26 - insert okay so that's what our message
44:29 - is are going to look like i'm just going
44:31 - to duplicate this one and make this one
44:34 - perhaps maybe
44:36 - five minutes in the future this time
44:39 - from john
44:40 - woo
44:41 - to
44:42 - anya kubo going
44:46 - hey
44:47 - because again this is a really bad chat
44:50 - so there we go okay we have two messages
44:53 - in uh i guess chronological order
44:57 - now let's get to getting these messages
44:59 - and showing them based on the user that
45:01 - we click so this is gonna be quite cool
45:03 - let's do it
45:05 - so this is going to involve some more
45:07 - list views so i'm going to get a list
45:10 - view and on the left i'm just going to
45:12 - show my users that are available to me
45:15 - at the moment it's just going to be me
45:16 - and john wu and then we will have
45:19 - another list this time of the
45:21 - messages themselves
45:23 - so another list
45:26 - view
45:27 - just
45:28 - over here to display the messages
45:30 - okay
45:32 - great
45:34 - and finally i'm gonna have a form
45:36 - because the form is going to submit the
45:38 - message that we type
45:40 - so i'm just gonna work that in here
45:43 - just like so i'm gonna get rid of the
45:45 - header i'm going to keep the body
45:47 - and then i'm just going to have a text
45:49 - area as well so let's put in a text area
45:54 - like
45:55 - this
45:56 - and perhaps let's change the label to
45:59 - type
46:01 - your message here
46:08 - and then
46:09 - the value
46:11 - is going to be enter your
46:14 - message
46:16 - okay and then this can be submit sure
46:19 - why not
46:20 - so there we go so first things first
46:22 - we're going to have to write a query to
46:24 - get unique users okay because at the
46:26 - moment we're going to use the posts the
46:28 - filter out all the unique users so for
46:31 - this we are going to have to um in fact
46:34 - let's not write a query let's write a
46:36 - javascript transformer to do this
46:40 - so i'm going to say this is unique or
46:42 - get unique users
46:45 - and what we're going to do is
46:47 - so the data that we're going to be
46:49 - working with is the
46:51 - get posts data i want to get all the
46:54 - posts every single one
46:56 - and of course at the moment we only have
46:58 - two posts by two users but when we add
47:01 - another post from myself i'll show you
47:03 - that this is working
47:05 - so let's define unique users
47:08 - or unique authors
47:10 - to be more precise and i'm going to use
47:13 - object of values to get the value
47:19 - of the data
47:24 - i'm going to reduce
47:26 - the array of posts
47:29 - with the post itself
47:34 - and if
47:36 - there is no array
47:38 - of
47:39 - posts
47:42 - post author
47:44 - make sure that is spelled exactly the
47:46 - same way
47:49 - then array of posts
47:52 - post
47:54 - author
47:55 - it's going to be the post
47:57 - and then we're going to return the
48:00 - array of
48:02 - posts
48:04 - okay
48:05 - so that is how you'll get all the unique
48:08 - authors
48:09 - oops
48:12 - so essentially what you're doing is
48:14 - looking in the array and you're
48:15 - filtering out all the object based by
48:17 - the author and just returning the unique
48:19 - authors okay so that's what i am doing
48:23 - here
48:24 - so let's save that
48:26 - so now this just means that on here
48:30 - so first off i'm gonna get the
48:32 - so get unique
48:34 - uses value and get its length
48:38 - next i'm just going to drag in some text
48:40 - like so
48:42 - and instead of this
48:44 - i'm going to let's just make this a p
48:46 - tag
48:52 - and i'm going to go into get
48:54 - unique users value
48:57 - first one
49:00 - and get the author name
49:07 - oops make sure to add the object
49:10 - okay
49:11 - make sure to add that that's important
49:12 - and make sure that this was in the right
49:14 - space too
49:16 - okay so great so we are mapping out
49:21 - the names on to
49:23 - text
49:24 - elements we can also get the user's
49:27 - avatars
49:28 - so i'm just going to use the circular
49:30 - image for this
49:34 - just drag it in like so
49:37 - just make it small
49:41 - and drag that back in here so once again
49:44 - we're going to go into the get
49:48 - unique users value and loop over each
49:51 - one to get the avatar
49:54 - image so author avatar
49:58 - and
49:59 - great
50:00 - so we have our users here
50:02 - the next thing that i want to happen is
50:04 - i want to trigger a click
50:06 - so if we click on
50:08 - so perhaps p we should put this in a
50:10 - container
50:11 - just so that it's very obvious if we
50:14 - click on
50:18 - a user
50:21 - so there we go i'm just going to get rid
50:24 - of the styling of this so i'm gonna get
50:27 - rid of the header and then just make
50:28 - this a little bit bigger
50:31 - and i'm just going to also get rid of
50:33 - the border because i don't really want a
50:35 - border on these i just want them to be
50:37 - kind of transparent
50:39 - okay great so now let's trigger a click
50:42 - so what do we want to happen well if i
50:44 - click on here i want to see all the
50:45 - messages between any and anya so that
50:48 - will be null that will just be me so if
50:50 - i click on john will i want to see all
50:52 - the messages between me the user and
50:54 - john woo so let's go ahead and do that
50:57 - i'm going to essentially
50:59 - write a event handler for this
51:02 - but first off we're going to have to
51:04 - write some you guessed it more queries
51:06 - so the query i'm going to write this
51:07 - time is get
51:09 - messages to user
51:11 - i'm going to look in the colors
51:13 - resource the collection we're going to
51:15 - look in this time is messages and we're
51:17 - going to find
51:19 - anything
51:20 - that has from
51:23 - and then
51:25 - the messenger user so from
51:28 - john essentially so i'm just going to
51:30 - hard code john wu in here for now
51:34 - and then to
51:35 - me so the user which is text to value so
51:38 - i'm just going to use that instead of
51:39 - hard coding it okay
51:41 - so
51:42 - great
51:45 - so that is the query i want to run let's
51:48 - see what that returns back that should
51:50 - just return one message back that is
51:52 - correct so that is our get messages to
51:55 - user query let's write another query
51:57 - making sure to save that one and this
51:59 - time it's going to be
52:01 - get messages
52:03 - from user user being me
52:06 - okay
52:08 - and this time we're going to
52:10 - get the resource query colors look in
52:12 - the collection messages
52:14 - and this time from
52:16 - is going to be
52:17 - me
52:18 - so that is text to value
52:23 - and 2 is going to be john which i'm hard
52:26 - coding at the moment but this won't be
52:28 - hard coded for long
52:30 - so that is a way to get messages from
52:32 - and to each other and i want to get both
52:34 - of them and then sort them by a
52:37 - chronological order
52:39 - so once again i'm going to use a
52:42 - javascript transformer to do this and
52:43 - this is going to be get all
52:46 - messages
52:48 - okay
52:50 - so for this i'm going to define all
52:53 - messages
52:55 - and all messages is essentially just
52:56 - going to be
52:58 - get messages from user
53:01 - data
53:02 - and i'm just going to concat it with
53:05 - get
53:06 - messages
53:08 - to use the data okay so that's all i've
53:11 - done and now we're going to filter them
53:13 - by timestamp so cons descending
53:16 - messages
53:19 - and i'm going to get all messages i'm
53:21 - going to use the javascript method of
53:23 - sort
53:24 - to essentially sort them
53:27 - by the time stamp so
53:29 - a time stamp so the first items
53:32 - timestamp we're sorting one after the
53:34 - other
53:35 - we're going to use locale
53:38 - compare
53:44 - b time
53:46 - stamp
53:47 - okay and then we're just going to return
53:49 - back the descending messages so let's
53:51 - preview that
53:53 - or message is not defined
53:55 - making sure to spell everything
53:57 - correctly of course
54:00 - return to sending messages
54:03 - okay so there we go the messages are in
54:05 - descending order as soon as we add more
54:07 - we will see that
54:08 - okay so let's save that and that will
54:11 - run that transformer will run this is
54:14 - looking good
54:16 - okay so on
54:18 - trigger of this so if we click this
54:25 - container we're going to have to add an
54:27 - event handler and
54:29 - that is to essentially get messages from
54:33 - user that's correct but also get
54:35 - messages
54:36 - to user
54:38 - okay so that's what i'm doing i'm
54:40 - essentially rerunning those queries and
54:42 - by rerunning them it will trigger this
54:44 - transformer to do its thing as well
54:46 - one other thing i want to do is actually
54:49 - set some temporary state so i'm going to
54:51 - show you how to do that we can set
54:54 - temporary state because i want to save
54:56 - the user that i have clicked on
55:01 - so i'm going to save this as
55:05 - send messenger
55:07 - user
55:09 - and the initial value for this is just
55:11 - going to be
55:13 - null however i want to set this value so
55:15 - i'm going to set
55:17 - on click i'm going to set temporary
55:21 - state the state is gonna be messenger
55:23 - user and the value of this
55:26 - i wanna set to get
55:28 - unique
55:30 - user value
55:32 - i
55:34 - author okay so whatever i clicked on
55:36 - here i want to save it to state of
55:39 - messenger user
55:41 - okay and i'm doing this for a reason i'm
55:43 - going to show you right now
55:46 - so
55:47 - first off actually let's map out the
55:49 - messages onto here right so let's
55:52 - actually do this in containers i'm gonna
55:55 - drop in a container
55:58 - and then i'm not gonna have a header
56:04 - so let's get rid of the header
56:08 - and then in here i'm just going to drag
56:09 - in lots of text really so this will say
56:13 - the name of who this is from
56:16 - i'm also going to have
56:18 - the actual
56:19 - message itself of course
56:26 - so actually let's also have
56:29 - the date before we do anything else
56:31 - we've got a name and a date perhaps
56:32 - let's move the date up here
56:34 - and then i'm just going to make this a
56:36 - little bit thinner
56:40 - we're going to drag in some more
56:42 - text here
56:45 - and we are now
56:46 - going to actually get our messages
56:50 - so we're going to get all messages value
56:55 - i'm going to loop
56:56 - to get the
56:58 - time
56:59 - stamp
57:00 - okay so that's what we're doing however
57:02 - also going to wrap this in a new date
57:04 - object because we want to change this to
57:06 - a more readable format
57:09 - so we do this with two locale
57:12 - string and call it
57:15 - making sure that this is all in curly
57:16 - braces too
57:19 - okay wonderful and this does not need to
57:21 - be
57:23 - curly braces any
57:26 - more
57:28 - okay so that's just
57:29 - uh a more readable format
57:32 - i think
57:34 - uh local
57:35 - date string let's do let's not do the
57:37 - time
57:38 - great and then also the name we need so
57:41 - once again i'm gonna now go into
57:43 - get all messages value i'm gonna loop
57:46 - over everything that comes back and get
57:48 - the from
57:50 - okay
57:53 - and of course we need the message itself
57:55 - so i'm just going to drag that below i'm
57:57 - going to get all messages value i and
58:00 - actually get the message itself
58:06 - okay and then perhaps let's also put in
58:08 - a divider
58:15 - and great
58:16 - so cool so now if we perhaps just click
58:20 - this trigger
58:22 - we should just see messages from
58:26 - anya and john wu
58:28 - and of course if we click on this
58:30 - we should just see messages from anya
58:32 - but to do this of course we just hard
58:35 - coded
58:36 - john woon here right we need to get rid
58:38 - of this so all i'm going to do is now
58:41 - get the state that we saved so that's
58:43 - the messenger
58:45 - user
58:47 - value
58:48 - okay and just save and run that
58:51 - and do the same for here so instead of
58:53 - hard coding john woo
58:56 - messenger
58:58 - user
58:59 - value and save and run it
59:01 - so now
59:04 - if we trigger click
59:07 - i don't know why there's so many of
59:09 - these others because we need to
59:11 - get all messages value
59:14 - length
59:16 - great
59:17 - okay so again if we now click on john
59:20 - woo we'll see all the messages from anya
59:22 - and john woo
59:23 - and if we click on anya we should see
59:25 - nothing
59:27 - great
59:28 - now let's get to actually adding
59:29 - messages okay so that's what i'm going
59:31 - to do next let's get to it
59:34 - so let's go ahead and add a new resource
59:37 - query this is going to be add message
59:40 - singular
59:44 - i'm going to use colors the collection
59:46 - is going to be messages
59:49 - i'm going to insert one
59:51 - so insert one message
59:55 - so what we're going to do is just create
59:57 - the object so the timestamp i'm going to
60:00 - use the new
60:02 - date
60:03 - object in order to get that
60:06 - from i'm going to
60:08 - just use text to
60:11 - value because that's what we've been
60:12 - using which has been using this
60:14 - to is going to be again we're going to
60:17 - get the
60:18 - uh state so the messenger
60:21 - user values whatever we save to state
60:23 - because that's going to be who we are
60:25 - messaging it's whoever we clicked on
60:26 - here right so whoever we're in
60:28 - conversation with and the message well
60:31 - the message
60:34 - is actually going to be whatever the
60:36 - value of the text area is
60:38 - so text
60:39 - area 1 value so that's all it's going to
60:42 - be i'm just going to preview that and
60:44 - save it
60:47 - maybe just format this a little bit
60:48 - nicer
60:51 - so that is it
60:53 - save
60:54 - and then we're going to have to add an
60:57 - event handler for this so on submit
61:00 - control the query add message that
61:02 - sounds good to me
61:04 - and then on success of this right so
61:07 - once this is run on success where we
61:10 - want to essentially get messages from
61:12 - user again
61:15 - right so
61:16 - do that and get messages to users again
61:19 - so we want to rerun those so that it
61:21 - gets all the messages again okay so
61:24 - let's test it out i'm going to click on
61:26 - john wu trigger click so we're on john
61:28 - woo
61:31 - test and click submit so that should run
61:34 - and then we re-get all our messages and
61:36 - that shows up
61:38 - wonderful apart from the text is not
61:40 - really showing up i don't know why
61:44 - text ariel 1
61:47 - value
61:54 - let's have a look in here
61:57 - let's get our messages
62:04 - test we seem to have got one needs
62:07 - to delete this
62:10 - so the message here
62:14 - uh we've used two s's that's why okay so
62:16 - that's my bad just use one s
62:19 - click save so let's do that again submit
62:22 - you should rerun the messages
62:24 - and ta-da there we have it so i'm just
62:27 - gonna delete this one with the two s's
62:31 - and this is looking good so everything
62:33 - is now working
62:35 - let's carry on so we've done the feed
62:40 - we've done the timeline we've done the
62:42 - inbox where we can message specific
62:45 - people
62:46 - okay and see all their messages and then
62:48 - go
62:49 - hello and literally message them
62:52 - on the app
62:55 - this is looking
62:57 - wonderful okay we can make this also a
63:00 - fixed height so that then we have to
63:03 - scroll if we wish that is totally up to
63:05 - us perhaps that is a good thing
63:07 - especially when we're going to be
63:09 - getting you know more details later so
63:11 - let's make this fix too so those two
63:13 - things are going to be fixed i'm just
63:15 - going to move this up so no matter how
63:17 - many more users we have no matter how
63:19 - many messages
63:20 - this should stay the same and then we
63:22 - could just scroll
63:24 - perhaps we should do that for the feed 2
63:26 - in fact let's make this fixed
63:30 - and let's make the timeline
63:32 - fixed as well so everything is now
63:35 - fixed
63:37 - great
63:39 - so one last thing to do i want to be
63:41 - able to upload things from the app
63:43 - itself
63:45 - let's do it
63:46 - so for this i'm actually going to have
63:48 - an image preview because i want to see
63:50 - what uh image we have uploaded
63:54 - so we're going to have an image preview
63:55 - like so and then i'm just going to have
63:58 - an image but of course the image won't
64:00 - really show up unless we have something
64:02 - to show in here so what i'm going to do
64:05 - for this is say that
64:09 - we're going to get the s3 uploader so
64:12 - actually let's actually find the s3
64:13 - uploader component s3 uploader and just
64:16 - put it here
64:17 - under the image
64:19 - and this just means that i can get the
64:22 - s3
64:24 - uploader
64:29 - last uploaded file url and display it
64:32 - once we have uploaded something and of
64:35 - course i also want a
64:37 - text input to be able to show the title
64:39 - in here too okay so that's all i am
64:42 - going to do
64:43 - and then we can also position the label
64:45 - to be at the top and this is going to be
64:47 - the title of the post
64:50 - and we're also going to have a place to
64:51 - put the description of the post as well
64:53 - of course the author is going to be
64:55 - asked because this is our app so we
64:56 - don't need to worry about that so
64:58 - description and the date is just going
65:00 - to be whatever date that we have okay so
65:04 - there we go
65:06 - this is looking
65:09 - wonderful
65:11 - and next we just need a button that will
65:13 - confirm the post so we can post it to
65:15 - our database as well okay so we're going
65:18 - to be posting it to our mongodb database
65:22 - so let's just say this post and then
65:24 - let's change the color of this i'm just
65:26 - going to change it to be this lovely
65:28 - orange right here
65:31 - great
65:33 - so this is looking good let's carry on
65:39 - so we're going to do the add post query
65:42 - because that is an easy one i'm going to
65:43 - add a resource query let's call this add
65:46 - post and this is going to go into the
65:48 - colors resource it's going to look in
65:49 - the collection
65:51 - posts and it's going to insert one
65:55 - and once again we're just going to have
65:57 - a time stamp which is going to be
66:01 - new date
66:03 - we're gonna have the image url which is
66:06 - going to be
66:08 - the s3 uploader one
66:12 - last
66:13 - uploaded file url
66:17 - i'm gonna have the title which we're
66:19 - literally just going to get the
66:21 - text input one from text
66:27 - input one value same for description
66:34 - we're going to go into the text value 2
66:37 - so text input to value
66:40 - we're going to get the author which we
66:42 - know by now is text
66:46 - to
66:48 - value
66:50 - author
66:52 - avatar making sure that it's felt
66:54 - exactly the same as in our database and
66:56 - let's just get the avatar image for this
67:00 - so avatar
67:02 - image
67:04 - source
67:10 - views we're going to hard code as zero
67:16 - and the id well i'm just going to
67:18 - generate a unique id using the uuid
67:21 - method
67:22 - v1 and call it
67:24 - okay so that's our object to create
67:27 - a new post
67:30 - let's save it
67:33 - and on success we just want to get the
67:37 - query get all the posts again okay we're
67:40 - going to rerun the post so save that
67:43 - wonderful
67:45 - and once again on success
67:48 - we also want to control the component
67:51 - and go back to the home page so let's
67:54 - get the
67:55 - tabbed
67:57 - container
67:58 - view and go to
68:03 - feed
68:06 - great so those are the two things that
68:08 - will happen on success
68:12 - so the next thing we want to do is of
68:15 - course
68:16 - hook up the s3 loader so let's go ahead
68:19 - and do that
68:22 - so let's make a new resource query
68:25 - this time let's create a new resource
68:28 - and i am going to
68:30 - select amazon s3
68:32 - let's go ahead and call this
68:35 - amazon
68:36 - s3
68:38 - and then the bucket name well this is
68:40 - stuff that we're going to have to do in
68:41 - amazon right now so let's do it
68:44 - so let's go to amazon
68:47 - i'm just going to select i am user and
68:49 - click next so of course i have already
68:52 - done all this sign up please go ahead
68:53 - and sign up it is free just make sure to
68:56 - sign up with the correct
68:58 - steps i am doing right now and click
69:01 - sign in once you have done
69:03 - so here is my s3
69:07 - dashboard this is what you should look
69:09 - like if in doubt just make sure to
69:14 - go to the same urls that i have
69:17 - okay and i'm going to have to create a
69:19 - bucket so i'm going to go ahead and
69:20 - create a bucket here my bucket name is
69:23 - going to be
69:24 - retool
69:26 - bucket
69:27 - just like so
69:29 - and i am just going to
69:32 - uncheck this
69:36 - i acknowledge this
69:39 - and create a bucket
69:43 - okay
69:44 - so there we go there is my
69:46 - bucket let's go ahead and click that
69:50 - now under permissions i'm going to have
69:53 - to put in a bucket policy
69:55 - so i'm just going to edit this
69:59 - and paste in this i've written before
70:02 - making sure to change this to
70:04 - retool
70:05 - bucket
70:06 - one or whatever you call your bucket
70:09 - okay
70:10 - so just go ahead and do that
70:13 - and
70:13 - save the changes
70:16 - one other thing you're going to have to
70:18 - do is change the object ownership so
70:20 - please scroll down
70:22 - and edit the object ownership
70:25 - and simply check this box right here for
70:27 - acl enabled and acknowledge it as well
70:30 - okay and save
70:35 - you're also going to have to enable
70:37 - cause so just go all the way down here
70:39 - click edit and paste in this code just
70:42 - like i am okay so take your time take a
70:46 - break pause this and make sure that it's
70:49 - exactly the same and then click save
70:51 - changes
70:58 - great
70:59 - so this is looking good let's carry on
71:06 - so the s3 bucket name well we know that
71:08 - this is
71:11 - retool
71:12 - bucket one
71:21 - then we're going to go into here
71:27 - under users and add a new user
71:31 - i'm going to call this retool
71:34 - anya
71:38 - i'm going to need an access key
71:41 - i'm gonna add it to admin
71:44 - next
71:45 - review
71:46 - create user
71:49 - okay so here is our secret access key
71:52 - make sure to make a copy of that
71:55 - somewhere and save it
71:57 - and then we're going to go back in here
71:58 - and paste it in here
72:01 - and then we also have the
72:03 - access key id
72:06 - okay
72:07 - and let's just test the connection
72:11 - great and let's create the resource
72:16 - so now when we go to the upload
72:19 - page
72:21 - and select the s3
72:23 - uploader the resource we're going to
72:25 - choose is ania s3 the bucket name is
72:29 - retool
72:30 - bucket
72:33 - one
72:38 - and this we're gonna have to change to
72:41 - public
72:43 - read
72:47 - and that should be it okay so now let's
72:50 - try upload to s3
72:54 - so i'm going to upload this image of
72:56 - loften
72:59 - and ta-da there we have the picture
73:02 - now i just want to hook this up properly
73:04 - so that when we post this it gets posted
73:07 - to our database so we're going to have
73:09 - to add an event handler and that is to
73:12 - add posts at a singular post and the
73:15 - method is trigger
73:17 - okay so now when we click the post
73:20 - button this should work let's fill out
73:22 - the fields of the title and the
73:25 - description making the app in full mode
73:28 - and just go ahead and click post and
73:30 - we'll be redirected to the feed and you
73:32 - should see our image here even though
73:34 - we're not seeing the image why is this
73:37 - let's have a look at the code one more
73:39 - time
73:40 - ah we need a space between the end
73:42 - bracket here
73:43 - so just make sure that is there and
73:45 - please apply this to any other images
73:47 - that we have in the app
73:50 - okay and there we have it i hope you've
73:52 - enjoyed this tutorial it was really fun
73:55 - uh showing you how to make an mvp that
73:58 - people can use you know you can actually
74:01 - test it out on people get feedback you
74:04 - know this is a work in progress and this
74:06 - only took us a few hours so i think it's
74:09 - the perfect solution for building mvp
74:12 - products and you know really getting
74:14 - your ideas out there thanks so much
74:16 - again for watching and i will see you
74:18 - again soon