00:00 - Hey everyone here on the freeCodeCamp channel. In this tutorial,
00:03 - I'm going to be building a tool
that every app on startup should
00:06 - have. I'm going to build a
dashboard to let you know if
00:09 - your app is down. And if it does
notify you via email and SMS. So
00:14 - in other words, it clone of the
popular software as a service
00:18 - app pager duty. My name is Ania
Kubow and I'm a course creator
00:22 - here on freeCodeCamp, as well
as on my own channel. And I'm
00:25 - going to be your guide to this
wonderful tutorial on building
00:28 - this platform here today. One of
the best ways to learn software
00:32 - development is to create a
slimmed down version of software
00:36 - you use every day to get a
better understanding of how it
00:39 - might work. This process helps
you understand the problem space
00:43 - constraints and techniques
required to build a real world
00:47 - use case pager duty is awesome
as it helps alert teams to high
00:51 - priority incidents like web
outages or security issues using
00:56 - pre configured configuration
strategies, and multi channel
00:59 - notifications. In this tutorial,
we will recreate some of the key
01:03 - components of this application
using JavaScript for our
01:07 - application logic. Postgres is
store our data, results of other
01:11 - user interface and back end
workflows. And finally Twilio to
01:16 - power SMS notification as well
as SMTP. By the end of this
01:21 - tutorial, you will be able to
create data structures and
01:25 - Postgres to feed into your
application. This will include
01:29 - creating an incidence table as
well as team members table, we
01:33 - will then feed this data into
our UI so we can see it and
01:37 - interact with it. So as you will
see here under the incidents
01:41 - tab, and the team members tab,
that we are bringing back all
01:45 - that data. The Team Members tab
will also help us see who is
01:50 - working on what, as well as
their shift times so that we can
01:54 - tell who is on call. And when we
will also then be able to see
01:58 - all the incidents that are
currently acknowledged and being
02:01 - worked on, as well as filter
them down to just the ones
02:05 - assigned to a specific user. We
will add functionality to bring
02:09 - up data if we click on specific
rows, and much more, we will
02:15 - also add the ability to add team
members from the interface as
02:18 - well as add in new incidents via
the interface as well as delete
02:22 - a team member or delete an
interface. So bunch of stuff
02:27 - going on here. And finally, we
will hook up Twilio and SMTP. So
02:32 - that we can send email
notifications and SMS
02:35 - notifications to our team
members in case the website
02:39 - theoretically goes down. This
video is created thanks to a
02:43 - grant from resource, the local
solution for building internal
02:46 - tools and platforms. So what are
we waiting for? Let's do it.
02:52 - Okay, so let's do it. First off,
I'm just going to create a new
02:56 - app. So I'm just going to go
ahead and click on here. And I'm
02:59 - going to call this pager duty
club. Okay, and click create the
03:04 - app. So there we go, we've just
created our app, essentially,
03:09 - this is essentially our work
zone. And I'm going to start off
03:13 - by just dragging in some UI in
order to make it look like a
03:17 - pager duty clone. So the first
thing I'm going to do is
03:21 - actually just drag in some tabs
containers, as we're gonna have
03:25 - two tabs here, one to view the
incidents, and one to view all
03:29 - our team members. So let's make
that reflect here. We can also
03:34 - rename this actual UI component.
So I can call it main tabs if I
03:41 - wish. Okay, great. And I'm here,
I'm just going to change this to
03:45 - say incidents.
03:48 - And this one to say team
members. So we are literally
03:53 - just creating our tabs
container, just like so. We can
03:58 - of course, also change the
colors of this. So if you just
04:01 - highlight the whole UI
component, and then go down
04:04 - here, I can choose the header
background color, I can choose
04:09 - the footer background color, or
I could just choose the
04:12 - background, I'm going to go
ahead with Canvas to make it
04:15 - much the background that we
have.
04:18 - Okay, and if we wanted a little
darker, we can also choose our
04:22 - own custom color. So for
example, I could do hex E, E, E,
04:28 - or just three E's for short. And
that will also be applied.
04:34 - Wonderful. To get rid of the
third view that we are not going
04:38 - to be using simply just go ahead
and click on here and delete it
04:42 - from view. So there we have it,
one view and a second view. We
04:48 - can also personalize the actual
selected colors. So I'm gonna go
04:53 - with green for now as I think it
looks better. Okay. Wonderful.
04:58 - Now, under
05:00 - incidents, what do we want to
show? Well, we should probably
05:03 - have some kind of header, right.
So let's go ahead and select a
05:07 - text option, we're going to have
a simple text, or we're going to
05:11 - have a text area, or rich text
editor, or even editable text,
05:15 - I'm just going to go ahead and
select the text option. And we
05:20 - can even choose if we would like
to use HTML elements to kind of
05:26 - decide how big each of the text
elements are going to be. So I
05:31 - can have incidents on all teams
as a title, just like so. And
05:38 - it's styled like an h1 element
title. If you wanted to give a
05:43 - custom styling to this h1
element, that is also possible,
05:47 - okay, all you would have to do
is go to scripts and styles and
05:51 - add in some custom CSS for this
whole document. We are not going
05:56 - to be doing that now. But I just
thought it was worth giving you
05:59 - a sneak peek at that. Next up,
what do I want? Well, we can
06:04 - have dividers to kind of
separate out everything in here.
06:08 - So I'm going to in fact, use a
divider to separate the title
06:12 - from the table that we are going
to input. Now let's put in a
06:18 - table. So our table at the
moment is not going to mean
06:21 - much. Okay, it's just going to
have some dummy data in there.
06:26 - So there is some dummy data
that's being fed in, we're going
06:30 - to delete all of this as we're
going to use some actual data
06:34 - from a Postgres database that we
are going to make. So just leave
06:38 - that blank for now. In the
meantime, I'm also just going to
06:42 - drag in some text to go below
here. And I'm going to use the H
06:47 - five element this time, so a
smaller header
06:54 - to say, your open incidents
07:01 - and then just drag in some more
texts, so that we can actually
07:04 - see those incidents. For now I'm
going to put zero triggered and
07:08 - make this red.
07:10 - So the text is going to be
danger. And then just copy and
07:15 - paste that. And this time, this
is going to be to show our
07:18 - acknowledged incidents.
07:25 - And I'm going to change this
color to be info.
07:28 - Okay,
07:30 - wonderful. So there's a lot you
can do with styling with this
07:35 - text, I'm going to leave it like
that for now. And we're going to
07:38 - choose this number dynamically
based off our you guessed it,
07:42 - our database. So in fact, I'm
just going to copy this and
07:45 - paste it because we're going to
drag this over to the right and
07:50 - see all our open incidents as
well. So we've got your open
07:54 - incidents, let's also have all
open incidents. And again, we're
07:59 - going to feed that number in
dynamically on component text
08:03 - seven, and component text five.
Great.
08:08 - Now I'm going to add a button,
this button was clicked, it's
08:12 - going to help us add a new
incident to our database. So we
08:17 - can actually do that from our
UI, which is kind of cool. And
08:22 - this button, we can style it up.
So I can have an incident if I
08:26 - wish. And let's make this blue,
green just to match the rest of
08:33 - this board. And I can even
choose to make it a little bit
08:37 - bigger. Next, I'm just going to
use a container to contain a
08:42 - bunch of stuff that I want to
add next. So I'm just going to
08:46 - put that in here like so for
now. And this time, in fact, I'm
08:50 - going to get rid of the header.
So we can do that, we can select
08:55 - the whole UI component, and then
I can choose to hide the header.
09:01 - So at the moment, we're just
showing the body if you wanted
09:03 - to show footer, then you can do
that. That is totally up to you.
09:08 - Okay, wonderful. So we have one
container, I'm actually going to
09:13 - have to so I'm just going to
drag in another one right below
09:16 - here. Okay, so that we go. This
one again, I don't want to have
09:22 - a header showing, so I'm just
going to hide it now and the
09:26 - first one, we're going to just
display who is on call. So I'm
09:30 - going to just have the title
here of encore. Okay, and I'm
09:35 - just going to make it green. So
I'm going to change the color to
09:38 - be green of the text. We can
also make it bold if we wish.
09:43 - Okay, so I'm just going to use a
opening and a closing tag for
09:47 - that to make that bold. That
name next thing I'm going to
09:50 - drag in is a place to actually
display whoever is currently on
09:54 - call. So for now I'm just going
to put x x x as we don't really
09:58 - know who's on call yet.
10:00 - because, once again, we're going
to get that from our database.
10:03 - So I'm just going to also make
sure that it's an h3 element,
10:07 - just like that, just to make
sure it's a bit bolder. And we
10:11 - can even use an avatar. So I can
just drag in a premade
10:16 - component. That's right, that
will show us our avatar. At the
10:20 - moment. Again, this is just
based off my information, my
10:24 - user detail, I'm the current
user of this app. But we will
10:27 - over write this. So in fact,
just so I don't forget to do
10:30 - this, I'm just going to put x x
x for all of these so that we
10:36 - don't forget to add that in
dynamically. Great. Now, we can
10:41 - put a divider or we can add a
footer is totally up to you.
10:44 - Let's choose to add a footer.
And in the footer, here, I'm
10:48 - going to add some more
information, I'm going to drag
10:50 - in a text component, just like
so. And here, I'm going to put
10:56 - in a bolt you are on call for.
And once again, this is going to
11:03 - be fed dynamically, I'm going to
essentially create a list of
11:07 - tags. So we can find these tags
in here too. And I'm just going
11:12 - to put them in below. Just like
sir. Okay, so that's going to
11:18 - display what we as the person on
call on call for. In here,
11:24 - again, I'm just going to drag in
some more tax, this is going to
11:28 - say and called on call. Now.
11:34 - Let's go ahead and make this
color green. And here, we're
11:38 - just going to list out all the
incidents that we are currently
11:41 - on call for.
11:44 - Okay, so I'm going to exercise
for now as that will be fed
11:47 - dynamically. And we're also
going to show the shift of the
11:50 - current person that is on call.
So it's really obvious.
11:56 - I'm going to put once again and
fold your shift,
12:02 - and then close this tag.
12:05 - And then actually display the
two shift times as well as some
12:09 - contact information. So this is
going to be from, we're going to
12:14 - put our starting time of the
shift, and this is going to be
12:18 - two and we're going to put the
end time of the shift of the
12:22 - current person on call. And
here, I'm just going to put some
12:25 - information like contact.
12:29 - And then I'm going to put info
at
12:35 - Free Code camp.org as well
pretending business free code
12:39 - camps pager duty app to make any
changes to your shift.
12:46 - Okay, wonderful. So that's
really it.
12:53 - Okay, so that's for showing all
the incidents. Of course, we
12:56 - haven't hooked this up to any
data quite yet. Let's work on
13:00 - the team members tab next. So
just like with the team members
13:05 - tab, in fact, what I'm going to
do is so super simple, I'm just
13:08 - going to copy this, I'm going to
copy the divider, we're going to
13:11 - copy the button. And I'm also
going to copy this container
13:15 - and click Command C. And inside
here, I'm just going to paste it
13:19 - in. Okay, so it looks kind of
similar. We're going to change
13:23 - this title to say, team members,
okay. And on the Add incident
13:30 - button, well, I'm going to put
add, new team member, of course,
13:35 - as this is dealing with team
members. And in here, well,
13:38 - let's just delete that we don't
really want that, I'm just going
13:41 - to show the selected team member
from the table that we're going
13:45 - to have, we're not going to have
an avatar. So let's delete that
13:48 - we're not going to have your own
code for instead, we're going to
13:51 - have a signed operations. So we
can see the assigned operations
13:57 - that are there for the user.
Okay, so there we go, we have
14:02 - the same operations that will be
viewed as a tag list. And I'm
14:07 - also going to put in the shift
dates for the user we are
14:12 - selecting.
14:14 - OK, so once again, in bold, I'm
just going to put shift dates
14:19 - and close that off.
14:23 - Okay, and once again, let's just
put from
14:27 - two
14:31 - and then I'm also going to put
the evil of the person that we
14:35 - want to contact.
14:39 - Okay, so our emails gonna go.
14:42 - Great.
14:44 - Now one small is also dragging a
table, as this is going to show
14:48 - all our team members from what
you guessed, our Postgres
14:53 - database. So let's go ahead and
delete all that data. That is
14:56 - some fake data that has been
passed through
15:00 - And finally, outside of the
incidents and outside of the
15:03 - members, so outside of this
whole tab container, I'm going
15:07 - to have another container. Okay,
so I'm going to put in a
15:10 - container. In fact, let's make a
form, as essentially, we are
15:14 - going to be sending something
from here, we're gonna be
15:17 - sending an email. Okay. So there
we go, there is an email form
15:24 - for us. And I'm just going to
put email
15:29 - composer, as that is what I want
to build, let's make the title
15:34 - of this the header, I'm going to
change the color of the header.
15:38 - So if we find the header
background, I'm just going to go
15:40 - with highlight as the color of
choice. And let's change the
15:44 - Submit button to I'm going to
make a warning. Okay, and in
15:48 - here I'm going to put to send
to, and then whoever we are
15:52 - highlighting from the team
members is going to be the
15:55 - person to receive this email. So
that is going to be quite cool.
15:59 - And another thing we can do is
use the rich text editor. So now
16:04 - we get a whole rich text editor
component, this is pretty cool.
16:09 - Okay, imagine trying to code
that out yourself. And in here,
16:12 - we're going to put Hi, and we're
just going to put the selected
16:17 - user from our table.
16:20 - So that's it. That's what we
have built so far. Now let's get
16:24 - to linking all of this up. So
for this tutorial, I'm going to
16:29 - use a render.com lynda.com is
essentially a way for us to host
16:35 - our database in a non paid way.
Okay, so please go ahead and
16:40 - just go to the dashboard, sign
up, go to the dashboard. And we
16:44 - are going to sign in, I'm going
to just choose to sign in with
16:48 - Google. Okay, so please choose
your own way of signing in, it's
16:52 - up to you. And once he actually
need to click on New, and it's a
16:56 - Postgres database that we are
going to be create that is
16:58 - hosted on render, I'm going to
call this pager duty as that's
17:02 - what I'm creating this database
for, I'm happy for the database
17:06 - to be randomly generated, as
well as the user name. And we're
17:10 - just going to select the free
tier and click create database.
17:14 - Okay, so it really was that easy
that is creating. In the
17:18 - meantime, I'm gonna go here and
go to resources. So let's go
17:22 - ahead and create a new resource
is going to be a Postgres SQL
17:26 - database, I'm just going to call
it pager duty, as that will be
17:30 - easy for us to find the host.
17:34 - Well, that is this. So I'm just
going to copy this host name,
17:39 - like so. But then I'm also going
to
17:44 - have to append
17:47 - dot Oregon
17:49 - postgres.render.com. So just
make sure to append that keep
17:54 - the port as 5432. As you see
here, the database name is pager
17:59 - duty. So let's put that in here.
And as authentication, we're
18:03 - going to use the database
username, which is this, and the
18:08 - database password. So here's the
password, please go ahead and
18:11 - use your own because this one
will not work after this
18:14 - tutorial is. So there we go. I'm
going to click connect using
18:20 - SSL. And let's just test this
works. And connection is a
18:25 - success. This is because we left
the address, IP address as
18:30 - everywhere, okay. But if you
wanted to, you know, keep it
18:34 - kind of private, you might
consider adding these IP
18:38 - addresses. So great. Let's
create a resource.
18:42 - Let's go back to the resources.
And now I'm just going to shut
18:46 - that down and refresh this. So
it loads the latest resources.
18:50 - And I'm going to choose pager
duty as my resource name, that's
18:55 - just the one I made. Okay, so
I'm actually going to use this
19:00 - UI in order to add the actual
tables that I'm going to use for
19:05 - this project. Okay, so I'm going
to just go ahead and create my
19:11 - first table. So I'm going to use
the Create Table command. And
19:15 - I'm going to create a table of
incidents. Okay, so get up your
19:19 - parenthesis and let's define
what's going to go on our table.
19:22 - Well, I'm going to put an ID,
which is going to take an
19:24 - integer value, I'm going to put
an urgency level which is just
19:28 - going to take our chart 30. So
30 characters, essentially, I'm
19:33 - going to have triggered Is this
a triggered event? Well, it's
19:38 - yes or no. So I'm gonna have a
Boolean for this.
19:43 - Next, I'm also gonna have
acknowledged, this will also be
19:47 - a Boolean,
19:49 - as well as resolved, which is
also going to be a Boolean. Next
19:54 - we're going to have a
description of the actual
19:57 - incident itself. So that's going
to take
20:00 - bar char. And I'm going to
actually limit that to 30. Okay,
20:03 - we don't want them to be too
long, and then assigned to, and
20:08 - this is going to take an
integer. In fact, it's going to
20:10 - take the ID of a an employee.
And I'm also going to have a
20:14 - created
20:17 - date, which is gonna take a
date. So that's what my table
20:21 - looks like, don't forget to
finish it off with some semi
20:24 - colons. Let's check if this
works, I'm going to click Save
20:29 - and Run. And great, that seems
to have worked, we haven't got
20:33 - any errors. And we're gonna call
this playground for now, as I'm
20:37 - essentially using this as a
little mini playground to add
20:40 - our tables. Okay, so that was
one thing that we have done, you
20:45 - can keep this in here, if you
wish. In fact, I'm just going to
20:49 - comment that out. Because I'm
going to create a new table to
20:53 - create
20:56 - table team, this is going to
take our team. So what's our
21:00 - team going to be made up of?
Well, each team member is going
21:03 - to have an ID, which I'm going
to say has to be an integer,
21:07 - they're going to have a first
name, which I'm going to take as
21:10 - virtuoso characters, let's just
do 30. Again, a last name, which
21:15 - I'm going to be super strict
about this too. Of course, you
21:18 - don't have to have 30, I'm just
choosing to for now. And an
21:21 - email, var char binders put 225
wide dots, okay, you can have
21:27 - higher character numbers, if you
wish. Next, I'm going to have a
21:32 - phone number of your team mate,
which is going to be an integer
21:37 - value, and Avatar, which is
actually going to be a URL to an
21:42 - image on the internet. And then
we're going to have on call to
21:47 - check if they're on court or
not. And this is going to be a
21:49 - boolean value, as well as a
shift,
21:53 - start. And that's going to be a
date,
21:56 - a shift and value, which is also
going to be a date, and
22:00 - incidents that they are working
on, which is going to be text,
22:04 - but it's also going to be an
array of texts. So that's how I
22:07 - would write that. Great. And
just finish off some semicolons.
22:11 - And hit save and run. So there
we go, we have just added our
22:16 - table for team members. So I'm
just going to comment that out.
22:21 - I'm going to go ahead and just
add two incidents just to start
22:25 - off with just so we have stuff
to play around with. So I'm
22:28 - going to insert into the table
called incidents.
22:34 - And we're going to insert an ID
and urgency value a triggered
22:40 - value, an AK, knowledge value,
resolved value or description
22:49 - assigned to
22:52 - making sure to spell it exactly
the same as we did up here.
22:57 - created date. And that should be
it. So those are the values we
23:03 - want to insert into let's
actually get the values. So the
23:07 - value for the ID, I'm going to
put incident ID number one,
23:11 - we're going to put urgency as
the string of high as well as
23:16 - the triggered is going to be
true. Technology is going to be
23:20 - true and resolved is going to be
false. So we've put in Boolean
23:24 - values for those. And now I'm
just going to put in a
23:27 - description of this incident,
it's going to be DevOps
23:32 - escalation.
23:36 - So just like that, it's going to
be assigned to the employee with
23:40 - ID 201. And then we're just
going to put in a date that this
23:45 - was created at, I'm going to put
a date in the past, okay,
23:48 - because, you know, we don't want
to put everything as today's
23:51 - date. So there we go. Okay, and
don't forget to finish the off
23:56 - with a semi colon. Okay, so
there is our semicolon, and just
24:01 - hit save and run.
24:04 - Great. And that has run
successfully. So that is one
24:08 - incidence, let's just add a
another one. This one is going
24:12 - to have the value of two. Let's
put the
24:17 - urgency as low. Let's add true,
maybe false false, this time for
24:22 - triggered, acknowledged and
resolved. This one can be called
24:26 - Security ops.
24:31 - S escalation making sure to
spell security correctly. It's
24:35 - going to be assigned to use a
201 as well. And let's put this
24:40 - as maybe one day
24:44 - earlier. I'm click Save and Run.
24:48 - Great. And I'm just going to
comment that out. I am now just
24:52 - going to insert into team so I'm
only going to insert one person
24:59 - into here i
25:00 - Pick, that will be fine, we need
to get the ID, we also get the
25:04 - first name of the person we are
inserting, and the last name
25:08 - making sure this will exactly
the same as we have in this
25:11 - table. Next up is email.
25:16 - Next up is the phone number.
Next up is the Avatar. And I'm
25:21 - going to have on call.
25:25 - It's up shift
25:30 - starts
25:32 - shift and, and the incidence
attached to them. Once again,
25:38 - just making sure that everything
is spelled correctly, because
25:41 - next we're going to put in the
values. And the value of this,
25:44 - well, this is going to be team
number 201, the name is going to
25:48 - be Ania. And their last name is
going to be Kubo. Now my email
25:53 - address, I'm just going to put
as the string of Ania at Free
25:56 - Code camp.org.
26:00 - The phone number, I'm just going
to put a fake phone number for
26:04 - now.
26:07 - And as my avatar Well, I'm just
going to use my avatar from Free
26:11 - Code Camp. So please make sure
to take an image that you know
26:15 - is unlikely to be taken offline,
or alternatively store them
26:19 - yourself on imager.com. Or you
can put them on an external
26:22 - database such as AWS, for
example.
26:27 - So I'm just going to copy this
image address. And I'm just
26:30 - going to paste it in like so.
Now after the avatar, I'm just
26:34 - going to specify if this person
is on call, I'm going to put
26:37 - true. And then I'm going to also
26:41 - put a made up start shift time,
a made up and shift time as a
26:46 - string,
26:49 - and then an array. So we can
literally just put the word
26:52 - array like so. And then I'm
going to put in dev ops, s
26:59 - collation.
27:03 - And security ops, a skull
escalation as the incidents
27:11 - assigned to this user. Okay,
don't forget to end it with some
27:15 - semicolons, hit save and run it
say integer out of range, that's
27:21 - fine, I'll just change the
format of the folder.
27:44 - And now I'm going to add in that
Twilio phone number making sure
27:47 - to add 001 at the front and hit
Run and safe. Now it does say
27:54 - that integer out of range, which
is kind of strange, I don't
27:58 - think this should be out of
range. But that is fine, we
28:02 - might have to make this a string
instead. So let's go ahead and
28:06 - make that a string, I'm actually
going to just comment this out,
28:10 - we're going to drop the table
DROP TABLE team. So essentially,
28:15 - we're going to delete it,
because we have to change the
28:19 - data type of the phone number.
So make sure to drop that. And
28:26 - now I can create a table again.
So this is good for anyone who
28:30 - perhaps made an error in the
first place. And I'm just going
28:33 - to change this to var char as
well. So that will not take a
28:37 - string. So save that and run it
to create this table again, with
28:42 - the number of being an email.
And now we can insert into Tim,
28:47 - after you have commented this
out. So save and run.
28:53 - And great. We have now added our
first team member, so I'm just
28:57 - going to comment this out for
now.
29:00 - Okay, so that was our
playground. And now I'm going to
29:04 - get some data that we can feed
in into our first table of all
29:08 - the incidents. So let's create a
new resource. And let's make
29:12 - sure that the result is pager
duty. I'm just going to do
29:15 - select all from the table
incidents. And click Save and
29:20 - Run. Let's see what that looks
like. And indeed, we get two
29:24 - incidents back. I'm going to
rename this get incidents as
29:28 - that is essentially what this
query does. And now in here,
29:32 - instead of adding data manually,
I can get incidents and get the
29:36 - data of those incidents so that
it feeds in there and it's
29:40 - automatically mapped out to
these lovely table rows. What is
29:44 - cool is if you want to see the
whole data object that comes
29:49 - back, you can all you have to do
is go to state and get the
29:54 - incidents and there's the data
and you will see all that
29:58 - information as
30:00 - The arrays that we can use.
Okay, so that's just in this tab
30:04 - on the left here, I'm just going
to minimize that left panel now.
30:08 - So that's what I have done.
Let's carry on working on this.
30:13 - So another cool thing we can do
is actually adjust which kind of
30:17 - columns do you want to see or
edit or anything like that. So
30:22 - for example, I can choose to
hide the description if I want.
30:29 - So I'm just going to select the
whole table. And I'm going to
30:33 - choose to hide the description
by pressing on this little irate
30:37 - here, I'm also going to hide the
assigned to, I'm going to keep
30:41 - the created date. And I can even
if I want, add a new column, add
30:48 - a custom column. And this column
is going to help me delete
30:52 - incidents if I want. So at the
moment, I'm not really going to
30:56 - put anything in here apart from
just decide that it's going to
31:00 - be a button. Okay, that is my
button. And the value of this is
31:04 - just going to say, delete. So
there we go, we can of course,
31:09 - make the columns smaller if we
wish, and just in general, play
31:13 - around with this a little bit
better. So I'm happy with this
31:18 - table. Let's now change the
value of this hard coded zero.
31:23 - And I can do so easily, I can
literally get the incidence
31:27 - data. And I can look inside to
see how many of the objects
31:33 - triggered are true, right. So
for this, I'm going to use the
31:37 - filter method. And I'm going to
look through each item, okay, by
31:41 - essentially filtering through
each one, and used AI as the
31:46 - representation of each item that
we are filtering. And if i
31:51 - equals true, I'm going to get
the length of that array. So as
31:57 - you will see here, two incidents
are triggered. And if we look
32:00 - here, indeed, two incidents are
triggered. So if we do the same
32:03 - for acknowledge, we should get
one acknowledged incident. So
32:08 - let's try again, we'll use the
two curly braces as that is how
32:11 - we do things in retool in order
to get values from the queries.
32:15 - So the query we wrote is called
Get incidents, right. So I'm
32:19 - essentially getting the name of
whatever we called this query
32:23 - and getting the data from it.
And I am going to this time
32:28 - filter by the acknowledged, so
I'm going to get acknowledged
32:32 - and use the filter method on it
to essentially filter and if I
32:37 - or each item in that array
equals true, I'm going to get
32:41 - the whole arrays length. And
indeed, we get a one. So once
32:45 - again, curly braces, in order to
access data from the queries,
32:50 - the query I wanted to access is
the get incidents query, you can
32:54 - see all the information that
comes back here. And again, if
32:58 - you really want to see the whole
object, we can look in here. So
33:01 - I've got incidents I've got into
the data object, then I've gone
33:05 - into the acknowledged array, and
I filtered out anything that is
33:09 - equal to true and got the length
of that array.
33:14 - Got it? Cool.
33:17 - Okay, so to do your open
incidents, we're going to have
33:19 - to do something else, because
we're going to actually have to
33:23 - get the user. Okay, so perhaps
let's do that next. Now, who was
33:29 - the user? Well, I think the user
should be whoever's on call,
33:34 - right. So let's go ahead and
create a new resource query, I'm
33:37 - going to call this get user. And
I'm going to select all from
33:44 - team this time. So the table of
team were on call equals true,
33:52 - I'm going to save and run this.
So there we go, it comes back
33:56 - with one user and at all points,
we really should only have one
34:00 - person on call, right. So that
is a kind of rule that should be
34:03 - done in the backend, this isn't
a front end thing. So we can
34:07 - just assume that this will come
back with one user at all times.
34:12 - So that is going to be a user.
And I'm going to filter
34:15 - incidents by the user. So let's
try another resource. I'm going
34:21 - to write filter incidents.
34:26 - And I'm going to select all,
from incidents.
34:36 - were assigned
34:40 - to equals and then I'm just
gonna get the user data. So this
34:48 - is our get user query. We're
going to get the ID but only
34:51 - going to get the first ID from
the array because we are
34:54 - assuming there is only one so
that should be fine. And don't
34:57 - forget your semicolons at the
end, so
35:00 - I'm just going to save and run
that. And making sure to spell
35:03 - incidents there correctly. Just
run that again. Okay, so two
35:08 - items come back. This is because
indeed, two items are assigned
35:13 - to me and your Kuba because my
user ID is 201. Great. Once we
35:19 - get to adding more incidents in
here, you will see how that
35:22 - changes. So now that means I can
use my filter incidents query to
35:28 - dynamically update these. So
once again, use our curly
35:31 - braces, filter incidence is the
query I want to use, I want to
35:34 - get the data from it. And I want
to get the triggered.
35:42 - array. And I want to filter it
based on if I have the item in
35:49 - here in this array equals true,
and I want to get its length.
35:53 - Okay, so to will be triggered,
that is correct, because I'm
35:57 - just going on my open incidents.
And other moment, I'm the only
36:01 - user in here. So once again, you
guessed it, we're gonna get the
36:05 - curly braces, we're gonna get
the filtered incidents. So let's
36:09 - get the filter incidents data.
And this time, we're going to
36:12 - get the acknowledged array and
filter it by looping over i and
36:18 - if i equals true, we're going to
get to the length of this array
36:23 - at the end. Wonderful. So this
is all looking good. We can now
36:29 - actually also fill out this
because we aren't technically
36:31 - getting the user. So we can use
this query, let's run it again
36:36 - and see what it looks like to
find out who's on call, right?
36:41 - So I can use my curly braces, to
go into the get user query and
36:48 - get the data and get the first
name that comes back to us.
36:53 - Okay, so I'm going to get the
first name. And I could also put
36:58 - the second name, I've literally
just put a space there, this
37:01 - will work, I'm going to get user
data.
37:07 - Last Name, great. And same for
the avatar, well, I'm going to
37:13 - get user data,
37:17 - Avatar at this time, and just go
into the first item of that
37:22 - array. Same for the email. So on
the label here, I'm just going
37:28 - to get into get user data to the
email
37:34 - and get the first item from the
array.
37:38 - In fact, maybe we should have
that on the actual caption of
37:41 - the label. And here, we will
just have the first name again.
37:49 - So I'm just going to take all of
this
37:53 - and whack it onto the label
here.
37:56 - We can also essentially map out
what the tags are. And here
38:01 - we're going to get the
incidents, right, so let's get
38:04 - rid of that curly braces, get
user data incidents. And we're
38:11 - gonna have to go into the first
item, that array. And there we
38:15 - go. So these incidents have now
been mapped out onto here.
38:20 - Great. Let's also do the same
for here. So I'm just going to
38:26 - show all the incidents, I'm
going to get the user data
38:30 - incidents.
38:33 - And actually, if I treat this as
an element, we can actually just
38:37 - put the array in here like so.
Okay, so that's something I have
38:42 - done.
38:43 - Now, from here, I'm just gonna
get into the user again data and
38:49 - get the
38:51 - shift start.
38:55 - And once again, on here, I'm
going to get user data, this
39:00 - time shift, and great. So we've
populated all of that base of
39:05 - the get user query. How cool is
that? Next up was work on adding
39:11 - an incident. So for this, I'm
actually going to create a modal
39:16 - that's going to pop up. So in
fact, let's go ahead and just
39:19 - put that up here. And I'm just
going to delete this button. So
39:22 - delete it, and I'm going to
change the text of this to be
39:25 - add incident.
39:30 - Let's also change it to be
green. So I'm just going to
39:34 - minimize that for now. As well
as the state. The accent
39:38 - background is going to be green.
We're just going to make it a
39:41 - little bit bigger.
39:43 - Okay, so that is our modal.
39:46 - And here I'm just going to put
in some tags. So I'm going to
39:49 - drag in some texts, and this is
going to say add incident. I'm
39:53 - going to make this an h2
element, add
39:59 - incident
40:00 - Just like so
40:03 - let's also put a divider, I'm
going to put that in right down
40:08 - here.
40:10 - And then I'm going to create a
number input. So one
40:14 - specifically to put in numbers.
40:17 - So just like that with a label
in incident ID.
40:25 - Great. Next, I'm going to create
a drop down. So I'm going to
40:28 - have this select drop down, just
like so. And I'm going to put
40:34 - the value of the label as
urgency. And I'm going to hard
40:39 - code my options, option one is
going to be high, option two is
40:43 - going to be medium. And option
three is of course going to be
40:49 - low. So those are my options.
And if you leave the label as
40:54 - empty, it will just take the
value as the default. And I'm
40:58 - happy with that.
41:01 - Next, I'm just going to create
some
41:05 - switches. So this is because I'm
going to be dealing with Boolean
41:08 - values, so I'm fine with this,
I'm going to have one for
41:13 - triggered.
41:18 - Let's also have one for
acknowledged.
41:37 - And finally, let's have one for
resolved.
41:41 - Okay, so those are my three
options right? There. You can of
41:48 - course, start them up as much as
you want.
41:53 - Next, we're going to have a
description input. So for this,
41:57 - I think we should just have some
text. So I'm going to put in a
42:01 - text input. This is why I kept
the description short, Max 30
42:05 - characters, because you know,
that's not a lot to work with.
42:08 - And we can also cap this as
well. So we can cap the value.
42:14 - You can have a max length of 30,
just like so. And let's go ahead
42:18 - and put description
42:23 - here.
42:24 - And finally, let's have one more
select drop down. So select. And
42:30 - here, we're going to select who
this is assigned to. So I'm
42:34 - going to put assigned to.
42:38 - And instead of having options,
I'm going to map out the
42:41 - options, this time, the data
source for this, well, we're
42:45 - going to have to get all the
team members, right, so let's go
42:49 - ahead and write a new query, I'm
going to call this get team and
42:54 - we're gonna get all the team
members. And the query for this
42:57 - is select all from Team and run
it. So that's going to be the
43:05 - data source, get team. And
that's going to auto populate
43:08 - for you. And great, this is
fantastic is exactly what I
43:13 - want.
43:15 - Okay, so now we can actually
choose which team member to
43:20 - select in such a nice way. Okay,
and whichever one we select,
43:26 - it's actually going to pick out
the ID of that item. So if I
43:31 - select me, the value of this,
when it's selected will be 201.
43:35 - So readable, and then practical.
Great. And finally, I'm just
43:41 - going to put in a button,
43:44 - that's going to submit this
modal.
43:49 - So I'm just going to put Summit,
and we can actually make the
43:53 - height of this Moodle dynamic
based on what's inside. So I can
43:59 - do hug content, and then that
will happen. Okay, wonderful.
44:04 - Now let's write a query for
adding an incident. So add
44:10 - incident, just like so making
sure the resource is pager duty.
44:16 - And once again, we're
essentially going to use this
44:20 - piece of code. So I'm just going
to copy all of that, because
44:24 - that is the code that we will
need in order to add a new
44:26 - incident, of course when it's
uncommented out. So that's what
44:31 - we are going to insert into the
table incidents. However, this
44:37 - time the values will not be hard
coded. They will in fact be
44:41 - taken from here. So I'm going to
use my curly braces to access
44:46 - this component which is called
number input one number input
44:51 - one and get its value. If you
hover over that you will see
44:54 - that zero well if I change this
that will change and you will
44:58 - see the value is now two
45:00 - Okay, so as literally getting
the value of that input, this
45:03 - second one is the urgency,
right. And this component is
45:07 - called select one. So I'm going
to gret select one and get its
45:11 - value once more. So if I choose
high, that will now be high.
45:16 - Wonderful. So hopefully that's
kind of making sense. Next,
45:20 - we're going to go on these
switches. So that is going to be
45:25 - switch one, two, and three. So
once again, I'm just gonna use
45:29 - my curly braces to get switch
ones value, switch, two's value,
45:34 - as long as these are of course
in the correct order. And then
45:37 - switch threes value switch,
three, value. And finally, I'm
45:43 - just going to minimize this, we
need to get the description
45:46 - which is text input one, and the
Select to value. So description
45:52 - is going to go here. And that is
text input value one, I believe,
45:59 - yes, text input one and select
two.
46:05 - So select to value, and we're
just going to get today's date.
46:09 - So I'm going to use the new date
object from JavaScript to do
46:12 - that, once again, make sure it's
in curly braces, and just call
46:17 - it. So that's what I've done,
I'm essentially getting the
46:19 - values of all these inputs,
let's have a go at filling this
46:24 - out. So let's go Incident Number
three, urgency, high triggered,
46:28 - acknowledge, not resolved
description, well, I can go
46:33 - ahead and put anything I want,
let's put
46:37 - deployment.
46:40 - And assigned to what I'm the
only one here right now. So
46:42 - great. And now this button,
well, we need to trigger the Add
46:48 - incident query we just wrote. So
I'm going to add an event
46:51 - listener control query that's
been generated for me at
46:55 - incidents because I'm currently
on that query. And we're going
46:59 - to trigger that. Okay, that
looks great to me. So now,
47:05 - before I submit this, I'm going
to run this query with all these
47:11 - values filled out, you will see
the values that we are
47:14 - essentially going to put,
they've all been now filled out.
47:20 - And if this works, well on
success actually want to do a
47:24 - few things, right, I want to get
all the incidents again. So the
47:28 - freshest incidents, and I also
want the modal to close. So I'm
47:32 - going to control a component to
this time. And that component is
47:36 - the modal. So let's go ahead and
find it. And I want it to close,
47:41 - we can also add some other fun
things like confetti if we want.
47:45 - So confetti, let's go ahead and
do that. And save. So I haven't
47:50 - run this because I want to
trigger it by pressing this
47:53 - button. So I'm going to click on
here,
47:56 - we have got an error, let's
debug.
48:01 - It would seem I just put a extra
48:05 - string, I didn't delete those
strings properly. So now let's
48:08 - save. Let's try it again. And
hit submit. And great that has
48:13 - worked. And tada, we have gotten
the fresh incidents again. And
48:17 - that has updated our table. So
this is looking great. And you
48:21 - will see that this has been
updated to
48:24 - oh, this has not been updated.
That's because we of course also
48:28 - need to run the filter incidents
method as well. So on success of
48:33 - adding an incident, let's add
the gets filtered incidents
48:40 - also. Okay, so there we go. Now
I've just run that again. So we
48:46 - would have added the same stuff
again, because as you will see,
48:50 - that information is still there.
So now let's work on deleting
48:55 - that third one, okay, because we
don't want it but at least we
48:58 - know this is working. And this
is working and everything is
49:00 - updating. So now let's work on
it deleting an incident. So this
49:05 - one I'm going to call delete
incident.
49:11 - The resource is going to be
pager duty, and all I'm going to
49:15 - do is delete from incidents
where ID equals and then this is
49:23 - table one selected row.
49:29 - Data it so this for the either
it is going to cause a problem.
49:35 - This is because you know, if we
essentially delete, this one is
49:41 - going to look at the ID and it's
going to delete both of these.
49:43 - So just keep in mind that
whenever you add an incident
49:46 - that Id needs to be unique. So
save that and onsuccess of this
49:52 - well once again, I'm going to
essentially get all the
49:56 - incidents
49:59 - and run
50:00 - The filter incidents query once
more. So let's save that. And
50:07 - now let's hook up this button to
that. So let's find that custom
50:11 - button that we made an on click,
we're going to run a query, and
50:15 - that query is delete incident.
Okay, so that's what we want to
50:21 - happen. Now let's try it out.
I'm going to click Delete
50:26 - incident. And that should delete
and it's deleted all of these
50:30 - incidents, and it's gotten all
the incidents again, so we can
50:34 - view them in the table. And it's
updated these based on the
50:38 - filter incident query and the
get incident query. Wonderful.
50:45 - So I'm really happy with this.
Let's carry on. Okay, now it's
50:51 - time to move on to the team
members page. So in here, let's
50:56 - go ahead and use the get team
query in order to populate this
50:59 - table. So once again, I will use
my curly braces, get the get
51:03 - team query and the data from it.
And that should automatically
51:08 - update my table right here.
Again, we can choose which
51:12 - columns to hide, so I'm going to
hide the avatar column, this
51:16 - time, I'm going to hide the
phone number, I'm also going to
51:19 - hide the start shift and the end
shift as well as the incidence,
51:26 - okay, and I'm going to add a
custom column once again, to be
51:30 - able to delete that user. So
this is going to be a button. So
51:36 - let's go ahead and do that.
51:38 - So there we go, there is a
button that says, delete after
51:43 - we update the value. So great.
Before we go deleting anything,
51:49 - let's populate this container
with this selected user, as well
51:54 - as add functionality to add a
new team member. So to do this,
51:59 - I'm actually going to rename
this component, as I mentioned,
52:01 - this is something you can do. So
I'm just going to call it team
52:05 - table. Okay. And that just makes
it more reasonable for when I
52:09 - use this table. So the team
table, so I can literally use my
52:15 - curly braces, to access the team
table component
52:21 - and get the selected row data.
And I could just grab the first
52:26 - name, if I wish of that selected
row. And of course, I could do
52:30 - so for the last name too. So
once again, that's going to
52:33 - Bacardi braces. And I'm just
going to use 10 tables selected
52:37 - row data. Last Name, this time.
52:42 - And Wonderful. Great, we can
also use the avatar that I have
52:48 - hidden from the table, but it
still does exist. So if I want
52:52 - to just go ahead and grab an
image,
52:57 - just like so.
52:59 - And now I can go into the team
table on small selection of data
53:04 - and get the avatar as that
exists. On here, even though
53:10 - it's a deleted column. Once
again, if you want to have a
53:13 - look at the objects for this,
just have a look in here look at
53:17 - get team data. And we're getting
the selected row data, right
53:22 - avatar.
53:25 - And that is the URL that I am
getting.
53:29 - Great. And now let's populate
these other components. So here
53:35 - once again, I would delete all
that would use the team table
53:38 - selected row data to get the
array of incidents that will be
53:43 - mapped out onto these tags. And
you know what to do this should
53:47 - be easy. Now once again, let's
go into the team table selected
53:53 - row data and get the shift start
time. And then also get this
53:58 - shift and time. So team table,
select data,
54:05 - shift and is what I want. And
here I'm just going to display
54:09 - the email address. So once
again, Team table selected or
54:12 - data dot email. Wonderful. And
that was it very painless. Now
54:19 - let's get to adding a new team
member. So for this, I'm
54:22 - actually going to use the modal
components. I'm just going to
54:25 - put that in here for now and
it's delete this button.
54:33 - So I'm just going to delete that
and move this over. So move over
54:38 - the modal button
54:41 - just to here. It's going to make
it a little bit bigger. And of
54:45 - course we can style it up. I'm
just going to make everything
54:48 - green. And then it's changed the
font of this to be add new team
54:54 - member.
54:55 - Great. So now let's work on the
modal
55:00 - So for this, I'm just going to
drag in some text, let's make
55:05 - this an h3 element. And it's
gonna say add a new team member.
55:13 - Just like that. And I'm just
going to drag it out, I'm also
55:18 - going to have another divisor
just like we did previously. So
55:22 - I can put that divide it in
right here.
55:26 - And then let's add some inputs.
So I'm going to put a number
55:30 - input.
55:33 - And this is going to say, Team
Member ID. So let's change the
55:38 - text of the label to say, Team
Member ID. Let's also just have
55:45 - a text input, this is going to
be for the first name. And we're
55:48 - gonna also have one for the last
name, too. So let's change this
55:52 - to say, first name.
55:55 - And I'm literally going to copy
and paste. So the second one
55:58 - shows up. So I can change this
to last name, we're also going
56:02 - to have email. So there is a
special email input we can use.
56:06 - So there we go, I'm just going
to drag that in like so and put
56:09 - it here.
56:12 - Maybe let's put some two dots
there, just so we can make it
56:16 - look the same. And then we're
going to have a phone number.
56:19 - Well, this is actually a text
input as we know, because we
56:22 - changed that to be a text input.
So I'm just going to put phone
56:28 - number like
56:30 - that.
56:32 - And it's also an avatar image.
Well, this is just going to be a
56:35 - URL to something on the
internet, as we mentioned, for
56:38 - now, of course, you don't have
to have it like that, you can
56:42 - link this up to an AWS database
if you wish in order to store
56:46 - images. Next, we need to have a
checkbox to allow us to check if
56:52 - someone's on call or not. Okay,
so let's go ahead and put on
56:58 - call here, and then someone can
choose to select that or not
57:01 - select that, that'll be up to
them. We also have a date
57:04 - picker. So I'm going to go ahead
and just put in
57:09 - this date picker right here.
57:13 - And by default, that will show
you today's date, which you can
57:16 - then change. And I'm going to go
ahead and change this label to
57:20 - start dates.
57:25 - And let's make an end date, one,
two, so end date end date of
57:30 - each shift. And finally, we're
also going to have a select by a
57:33 - multiple select, okay, because
we can pick multiple
57:39 - operations assigned to one user.
So I'm just going to change this
57:43 - to operations. And let's Harker
the options, the first one is
57:47 - going to be email ops,
escalation,
57:53 - just like that. The second one
is going to be security ops,
57:59 - escalation.
58:03 - And the third one is going to be
DevOps escalation. So I'm just
58:06 - going to put dev ops, escalation
just like that. Okay, so now
58:14 - people can select multiple ones,
which is quite cool. And then
58:19 - finally, let's have a submit
button. So I'm just gonna get
58:22 - rid of that and find a button so
that people can submit these
58:27 - answers. So there we go. And
it's changes to say, submit. So
58:33 - wonderful, I think that is
looking good. Now let's get to
58:36 - writing a query for this. So
this is going to be add team
58:42 - member. So let's change this say
add team member, just make sure
58:48 - that's the correct resource. And
then we are also going to insert
58:52 - into so this is where our
playground comes in handy, we're
58:55 - going to insert into team, it's
going to grab all of that
59:01 - team member, just paste it in
uncomment that out and just
59:05 - change the values. So the value
of this will be whatever the
59:09 - number input two is. So let's
grab the number input to value.
59:13 - This will be text input two
values, so just get rid of that
59:17 - input, text input two value, and
then we have text input three
59:22 - value. So text input three value
59:27 - will also have email one, so get
rid of that string, input email,
59:32 - one value.
59:34 - We also then have the phone
number, which is text input
59:38 - four. So let's go ahead and put
text input for value. Then we
59:44 - have the avatar, right, which
will be text input five value.
59:49 - So let's get rid of that text
input five value. And then we
59:54 - have a checkbox. So the checkbox
is checkbox one and then we
59:59 - update one do
60:00 - To add multi select one, so
that's really easy to remember,
60:05 - check box value one, this will
be date one.
60:10 - So date, one value, this will be
date to value.
60:19 - And this will be the multi
select options or multi, select
60:25 - one value. Great. So now let's
save this, I'm actually going to
60:31 - also add some things to do on
success because on success, we
60:35 - want to, essentially we get the
team, right, so that will happen
60:38 - onsuccess. And then let's also
have some confetti, because why
60:42 - not, let's also close the modal.
So we're going to this time
60:46 - control a component and find the
second modal that we made. So
60:51 - just scroll down for modal two,
and then we want to close it.
60:56 - Okay. So that's what we want to
do on success. So now I'm going
61:00 - to save that and hook up the
Submit button to run that query.
61:05 - So let's just add an event
handler, control query add team
61:08 - member. So wonderful, let's try
it out. I'm going to put
61:12 - employee to to I'm going to put
Beau Carnes and as an email, I'm
61:17 - just gonna go well, at Free Code
camp.org. And as a phone number,
61:23 - I'm just going to make this one
up. Okay, just like that.
61:29 - And as an avatar image, I'm just
going to get one off the
61:32 - internet Akbar.
61:35 - Okay, so I'm going to copy the
image address.
61:40 - And just paste that in, he's not
going to be on call. And let's
61:43 - put his start date as the 11th.
And the end date as the 14th.
61:48 - And the operations he's going to
be assigned to?
61:53 - Well, let's have a look.
61:57 - I think there's just an email
ops, and security DevOps as
62:01 - well. So now let's hit submit.
62:04 - And great bow has been added.
This is looking wonderful.
62:12 - And finally, let's add a way to
actually delete a team member.
62:16 - So I'm going to actually do is
write a new query. So let's add
62:22 - a new query resource query, this
is going to be delete team
62:28 - number.
62:31 - Make sure the resource is
correct. And we're going to
62:34 - delete from
62:37 - team
62:40 - where the ID equals the team
table selected row data ID,
62:48 - right, because we're here, if
we're selecting this one, and we
62:51 - want to delete it, we just want
to make sure that it's the
62:54 - correct ID. And that's how we're
going to delete that team
62:59 - member. So on success, we're, of
course going to have to rerun
63:03 - the query to get all team
members. So get team and save.
63:09 - And now we just need to hook up
this button. So let's find that
63:13 - button. And on click, we want to
run a query. And that query is
63:18 - to delete a team member.
63:21 - Okay, so there we go. And Shall
we try it out?
63:27 - Let's do it. I'm going to delete
this team member.
63:31 - And wonderful, so that we have
it. And I'm just going to Riad
63:40 - him. Luckily, all of this is
still here, as I have not
63:42 - cleared that. I've done that on
purpose, just so it's easy for
63:46 - us for this tutorial, I'm just
going to hit submit. So there's
63:49 - both again.
63:52 - Now for the email composer,
well, it'll be quite nice to
63:56 - have whoever I'm highlighting,
have their first name show up.
64:00 - So that's what I'm going to do.
I'm going to you once again, use
64:03 - the team table, select your data
to get the first name of that
64:09 - person. Okay, so there we go. It
says Hi, Bo. So this is the
64:14 - default value of our whole rich
text editor and put a comma
64:19 - there too. And here as well, we
can show who was sending this
64:23 - to. So I can use team table
selected or data came out this
64:28 - time. So great. At the moment,
it's showing Bo, the device
64:32 - selects myself, of course, this
updates, but this updates to and
64:36 - then I can write an email and
send it but of course for that
64:40 - we need to hook this up. Well,
I'm also going to do though, is
64:45 - whenever we send an email, I'm
going to also send a text
64:48 - notification. So that's two
resources we need to add. Let's
64:52 - go ahead and do it. So I'm going
to go to Resources.
64:57 - And let's just hook up our
Twilio that
65:00 - We signed up to before. So
please go ahead and find Twilio
65:03 - on here.
65:07 - That is Twilio. And I'm going to
do
65:12 - and is
65:15 - Twilio.
65:17 - Let's get the s ID account. So
here is my account s ID.
65:26 - Let's get the auth token. So
here is my auth token, I will be
65:31 - deleting this. So please don't
think that it will still work.
65:35 - If you use it.
65:37 - I'm just going to select this as
it's not allowing me to update
65:40 - the IP addresses. And let's test
the connection. So that
65:44 - connection is successful. And
let's create a resource.
65:48 - Wonderful. So that is now done,
I'm going to save these changes.
65:52 - And let's go back to resources.
And this time, I'm going to
65:55 - create another resource. This
time it's going to be for
65:58 - emailing, I'm just going to
scroll down to a previous one
66:02 - that I've made and reconfigure
it. So here are the settings
66:06 - that you need. However, you do
need to have a Google workspace,
66:11 - which is a paid workspace for
this to work now. So my Google
66:16 - workspace credentials are Ania
at code with ania.com. And then
66:22 - I'm just going to put in my
password for that email. Okay,
66:26 - so that's what you need to do,
let's test the connection. And
66:31 - then we're just going to have to
allow less secure apps. So just
66:35 - go to your admin console. And
I'm just going to search for a
66:38 - way to control access to less
secure apps. Okay, so that's
66:42 - here, we go to settings. And
then we go to access and data
66:46 - control and less secure apps.
66:51 - And I'm going to allow users to
manage the less secure apps.
66:57 - Great. So that's for all users
in my company.
67:04 - And that connection is a
success. So there we go, we have
67:08 - done it. Great. Now let's go
back to our app is going to get
67:13 - rid of that. So now let's hook
this up, I'm just going to
67:15 - create a new query. So let's
create a new query resource
67:20 - query, this is going to be to
send email.
67:26 - And this time the resource Well,
it's going to be Gmail.
67:31 - And the from email
67:33 - is just going to be from Ania at
67:37 - code with
67:40 - ania.com.
67:43 - And the to email is essentially
going to be whatever we are
67:46 - selecting right, so the selected
row. So let's go into the team
67:51 - table, select a row data email,
67:55 - where you can have a BBC or a
CC, I'm not going to. And this
68:00 - is just going to say email from
pager duty clone.
68:07 - And the body. Well, it's just
going to be the body of our rich
68:11 - text editor. So we're going to
go into rich text editor one and
68:16 - get the value. Okay, great.
68:22 - And onsuccess. Let's also just
have some confetti, and save
68:26 - that. And now let's hook it up
to the Form button. So event
68:30 - handler on click, we're going to
control the query sent email,
68:34 - because that is the query that
we are on now. So it's picked
68:37 - that up. Another thing I want to
do is actually just sent a text
68:40 - message that we got an email. So
there's gonna be another
68:43 - resource query send text. And
this time, this is going to be
68:48 - the resource Twilio that we just
made. So and use Twilio. Okay,
68:53 - so that's been pre configured
for me. And this is the
68:57 - operation we need to do. It's a
post request, this is the
69:01 - endpoint and it's populated my
account Sid, that is good, too.
69:07 - Well, who we're going to be
sending this to. I'm going to
69:10 - put in my own phone number in a
bit to test this out. But of
69:15 - course, usually you would go
into the team table selected row
69:19 - data and get the phone number
right. So just like that, so
69:24 - let's go ahead and select
someone. So I am selected so
69:28 - that should be bringing up my
phone number.
69:32 - The body I'm just going to put
you have an email notification
69:35 - from pager duty clan, and from
well from is going to be my
69:42 - Twilio phone number which is
actually in fact this you can
69:45 - get it from Twilio as well. If
you don't have a from here,
69:49 - please go ahead and add a
parameter by clicking here.
69:52 - Okay, great. So that's what we
want to do and let's just add
69:56 - some confetti for when this
saves
70:00 - And I'm just going to attach
that to this bottom two. So send
70:05 - a text trigger. Okay, so both
those things will happen.
70:10 - Now,
70:11 - because of course, this number
doesn't really exist, I am going
70:14 - to put in my phone number. So
please look away.
70:19 - And let's say this untested out.
70:23 - And great. That has worked, I
should have received a text.
70:28 - So let's check it out. Well,
first off, I'm just going to run
70:32 - this and see if that has worked.
70:35 - And let's see bug.
70:38 - Okay, just to make sure that you
have your email the same one as
70:42 - you are using in the app. And
that should work. Let's check
70:46 - the Gmail account. So I'm just
going to sign in and check out
70:50 - if I got an email. And I did.
Okay, here's my email. Of
70:56 - course, it does come as HTML. So
we're probably gonna have to
70:59 - format that a little bit better.
But at least it's sending
71:02 - something. So there we have it.
We have completed our pager duty
71:07 - app. Here is in all its glory.
It works. The Twilio API works.
71:12 - The SMTP API works. We are using
a Postgres database, we can add
71:17 - incidents, team members, delete
team members, delete incidents.
71:21 - This is looking glorious. I hope
this tutorial was useful. And I
71:25 - hope you had fun while learning
and I'll see you soon