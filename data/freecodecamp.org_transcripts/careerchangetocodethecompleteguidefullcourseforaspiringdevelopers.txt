00:00 - if you are considering transitioning
00:01 - careers to become a software developer
00:03 - watch this course this course is
00:06 - designed to prevent the common mistakes
00:08 - and missteps that discourage many
00:10 - beginners it offers Clarity tools and
00:13 - strategies to efficiently achieve your
00:15 - coding goals whether that's securing a
00:18 - high-paying job launching a tech startup
00:20 - or just exploring the world of software
00:22 - development zuen prab was a lawyer and
00:25 - transitioned to becoming a Google
00:26 - engineer now he helps others with their
00:28 - career transitions hi guys welcome my
00:30 - name is Zubin prap I'm a software
00:32 - engineer and a devell engineerr
00:35 - currently chain link Labs before this I
00:36 - was Google as an engineer and before
00:38 - that I was a corporate lawyer for over
00:40 - 15 years and I went into executive
00:41 - management for a while had my own
00:43 - startup for a while that's kind of how I
00:44 - learned to code and this little mini
00:47 - course that I'm releasing for you guys
00:48 - through free Cod camp now is an updated
00:50 - version of the original course that I
00:51 - released 3 years ago um maybe four years
00:53 - ago actually now where I when I finally
00:56 - succeeded in my career transition from
00:58 - lawy I was 38 or 39 at the the time and
01:00 - I'd become a software engineer and I you
01:02 - know got the offers that I'd applied for
01:04 - I was you know top of the world and I'd
01:06 - promised to Quincy the founder of free
01:09 - code camp in a podcast with him right
01:11 - after I completed my career transition
01:13 - that I was going to make this course
01:14 - that documented everything that I'd wish
01:15 - I'd known like three or four years
01:17 - before cuz I had really struggled for
01:19 - three or 4 years trying this thing
01:21 - trying that thing you know I was in my
01:23 - 30s there was a lot of sacrifice and
01:24 - risk involved a lot of fear and so I
01:26 - tried all sorts of things to to to make
01:29 - the transition and I kept failing I
01:30 - learned all sorts tried to learn all
01:32 - sorts of tools and languages and I I
01:34 - didn't realize that there's a big
01:36 - difference between learning how to code
01:37 - and actually becoming a professional
01:38 - software engineer massive difference and
01:40 - I didn't appreciate that back then so it
01:43 - cost me hundreds of thousands of dollars
01:44 - in you know in Lost income and and all
01:46 - kinds of things and four plus years of
01:48 - real struggle and self-doubt and you
01:49 - know Destro damaging my confidence and
01:51 - having to rebuild it so I promised
01:53 - Quincy back then um during the podcast
01:55 - that you know I'm going to do this
01:56 - course and so I did release it and now
01:58 - this is the updated vers version this is
02:00 - the history of the course so this course
02:01 - is really I call it you know everything
02:03 - you need to know before you learn to
02:05 - code because it's not about the actual
02:07 - coding itself it's about all the things
02:09 - you need to know to build the right plan
02:10 - to set the right expectations and to
02:12 - know how to put yourself through the
02:15 - process of transitioning from being a
02:17 - non-technical person to a professional
02:19 - level software engineer right so it's
02:21 - how do you build a plan how do you
02:23 - become the sort of person you need to be
02:24 - what habits and practices and
02:25 - expectations do you need to have so
02:27 - that's really so I call this the you
02:28 - know before you learn to code everything
02:30 - you need to know course now couple of
02:31 - things just to be very clear this is not
02:34 - really probably well suited for people
02:36 - who are just students who've never
02:38 - actually had a career before and the
02:39 - reason I'm saying that is I finished Law
02:41 - School in 2003 right so that's 20 years
02:43 - ago I I've lost touch with what it's
02:45 - like to be University student these
02:47 - these days and and approach the job
02:49 - market from that perspective this is
02:51 - very much a course for people who are in
02:53 - busy careers already even if they're in
02:55 - it but non- technical non-coding sort of
02:58 - careers or any other career like i' I've
02:59 - coach people around the world now you
03:00 - know lawyers therapists you know theater
03:03 - personalities all sorts of people
03:04 - security cyber security folks I've
03:06 - coached them all you know on this
03:07 - process of career change and becoming a
03:09 - professional coder so this is for people
03:11 - who have existing careers who are
03:12 - looking to switch careers who want to
03:14 - acquire Advanced like you know
03:16 - professional level coding skills and
03:18 - become professional coders whether it's
03:20 - data science data analysis software
03:22 - engineering they're not you know you
03:23 - could argue whether or not they're
03:24 - coding but I'm trying to include
03:25 - anything that involves scripting or
03:27 - software engineering in this right so
03:29 - this is for that kind of person uh I am
03:31 - not an expert for for students I'm sorry
03:33 - but I'm not anymore I'd be lying if I
03:35 - said I was it's been too long uh I've
03:37 - lost that perspective right but I am
03:39 - very much I consider myself to be an
03:40 - expert in career change because I've
03:41 - done it myself three careers in four
03:43 - countries and most recently to software
03:45 - engineering in my late late 30s you know
03:47 - even ending up at places like chain link
03:49 - where I I'm now and software engineering
03:51 - um you know at at at Google before that
03:53 - right so this is really important for
03:55 - you guys to understand before you go now
03:57 - I had no way of knowing how long the
03:59 - this entire Journey was going to take me
04:01 - when I was trying to transition and you
04:03 - know because I I tried and failed like I
04:05 - said four times before all the way
04:06 - through my mid-30s I tried every year I
04:08 - tried a different thing for several
04:09 - months and quit and fail and so that's
04:11 - what I'm I'm trying to achieve here is
04:13 - to save you four years if I can or more
04:16 - right and and help you understand what
04:19 - the process is going to look like so
04:20 - that's a bit of an introduction about me
04:21 - this is going to help you understand
04:23 - what to expect from this course it's not
04:24 - going to be about Hands-On coding it's
04:27 - meant for those of you who haven't
04:28 - started learning to code yet or maybe
04:29 - you've been trying for 3 or four 5
04:31 - months finding it frustrating not sure
04:33 - what to expect what's this cost it's not
04:35 - that long and see just all the tools and
04:38 - techniques that I had to develop over
04:39 - those four years this course really
04:41 - represents my diary entries for all
04:43 - those four years all the things I did
04:45 - wrong I'm sort of re repurposing that
04:47 - into actionable items that you can use
04:50 - so that's a bit of introduction and I
04:51 - hope you get a lot of value out of this
04:53 - course and if there's anywhere I can
04:54 - help you reach out on LinkedIn or
04:56 - Twitter or whatever I'll see you in
04:57 - another
04:58 - video
05:00 - welcome to this course on before you
05:02 - learn to code all the important things
05:04 - you need to know to avoid failure and
05:07 - discouragement on your journey to code
05:09 - if you're here it means that you're
05:11 - either interested in starting to learn
05:13 - to code or you've just started and are a
05:16 - code newbie either way it's super
05:18 - exciting and I'm glad you're here I
05:20 - can't wait to share some of the
05:22 - learnings that I've had with you and so
05:24 - let's just get into it now you can get a
05:26 - sense of this SC from the website
05:28 - matchfit mastery.com but I'm also going
05:31 - to take you through a high level
05:33 - introduction of the course right now so
05:36 - what is this course I have designed this
05:38 - course for people like you people who
05:40 - have either just started or are
05:42 - seriously thinking of learning to code
05:45 - and this course teaches you all the
05:47 - skills that you need to learn to code
05:49 - but it does not teach you to actually
05:51 - code that's a separate topic alog
05:54 - together now most people just Dive Right
05:56 - into coding right into trying to teach
05:58 - themselves coding
06:00 - without first adequately preparing
06:02 - themselves it's like running a marathon
06:05 - but with zero training it it just
06:07 - doesn't work because then when you fail
06:09 - or you feel overwhelmed by the situation
06:11 - you just assume that you can't learn to
06:14 - code and I know this from personal
06:16 - experience because that is exactly what
06:18 - I did not once but twice twice I tried
06:22 - to teach myself to code by just throwing
06:25 - myself into it without a proper plan and
06:27 - both times I failed
06:30 - so what did I do right the third time
06:31 - around well that's exactly what this
06:33 - whole course is going to be about so the
06:36 - first time you go through this though I
06:38 - do recommend you do it end to end even
06:40 - though I've designed it as a Hop On Hop
06:42 - Off experience where you can dip in and
06:44 - dip out I really recommend that the
06:46 - first time you go through the entire
06:48 - thing even if you do it at 1.5 speed
06:50 - just go through the whole thing because
06:52 - that'll give you a sense of what to
06:53 - expect not just from the course but also
06:55 - from coding generally so who is this
06:58 - course for then well it's for anyone who
07:01 - wants to know what it means to learn to
07:03 - code and how to build an effective
07:06 - learning plan around that and what to
07:08 - expect along the way it doesn't matter
07:11 - whether you've got any coding experience
07:12 - it doesn't even matter whether you've
07:13 - seen a line of code not necessary all
07:17 - that matters is that you're thinking
07:18 - about it or you've just started or have
07:20 - tried before and have
07:22 - failed if you want to ensure that you
07:25 - save time and effort and money on your
07:27 - journey then this is really the the
07:29 - course for you that's why I made it
07:31 - because when you buy it you get lifelong
07:33 - access which is fantastic because I will
07:36 - keep updating it from time to time with
07:38 - new tips and techniques that will save
07:40 - you even more time money and
07:42 - energy now I know I talk about these
07:44 - three things these three very important
07:47 - resources being money time and energy
07:50 - but in my view the most valuable of
07:52 - these three resources is your time
07:54 - because money and energy sort of comes
07:57 - back you can go up and down but time you
07:59 - just just can't recover it lost time is
08:00 - lost time and so a lot of the focus on
08:04 - in this course is really on saving you
08:07 - time and through that of course you're
08:09 - going to end up saving effort and very
08:11 - likely money as well I personally wasted
08:15 - more than eight months of my life and
08:17 - over
08:18 - $1,100 teaching myself to code in very
08:20 - ineffective ways but 90% of my learning
08:25 - ended up coming in less than six months
08:27 - and for less than $200 it's that kind of
08:30 - learning and optimization that I want to
08:31 - share with you in this course but it
08:34 - begs the question who am I and why
08:37 - should you bother listening to what I'm
08:39 - saying well a little bit of background
08:41 - in me I am a lifelong learner I
08:44 - qualified as a lawyer many many years
08:46 - ago and I practiced corporate law for
08:48 - over a decade in three countries I then
08:51 - changed careers did an MBA went to the
08:53 - management track along the way I taught
08:56 - myself product management skills I
08:58 - taught myself how to play play the
08:59 - guitar I taught myself how to code and
09:03 - so I've evolved over that period certain
09:07 - habits and techniques to learning and
09:09 - optimizing the learning that anyone has
09:11 - to go through when they acquire a new
09:12 - skill and I realized that my entire
09:15 - process was so inefficient and so slow
09:17 - and most people still do the same things
09:19 - it's it's not an efficient process but
09:23 - this course will give you some efficient
09:25 - techniques or rather techniques that'll
09:27 - make it a lot more efficient for you so
09:29 - so what I did in a year you could
09:30 - legitimately expect to do in much much
09:33 - less time and probably much less wasted
09:36 - effort as you progress through this
09:38 - short course I hope you're going to want
09:40 - to ask a lot of questions and clarify
09:42 - some things I think that's a fantastic
09:44 - way to learn and consolidate your
09:45 - learning I encourage you to do that and
09:48 - I encourage you to use the Q&A for if
09:51 - available because that way other people
09:53 - can learn from you and participate in
09:55 - your Learning Journey if that is
09:57 - unavailable for whatever reason or you
09:59 - feel you need to reach out to me in
10:01 - another format I'm always available on
10:03 - Twitter as well and sometimes on
10:04 - LinkedIn though I'm a little less
10:06 - responsive on LinkedIn for a number of
10:07 - reasons but Twitter is great feel free
10:11 - to reach out anytime and I will do my
10:12 - best to help you so now that we've
10:15 - covered how to reach me who I am what
10:17 - this course is about and who is for I'm
10:20 - getting really excited I'm um I'm really
10:23 - excited for you and I can't wait to jump
10:25 - into this journey with you so let's just
10:26 - Dive Right In in the next section we
10:28 - going to talk through the goals that I
10:30 - have for you and for myself in this
10:33 - course so I'll see you
10:35 - there okay welcome back to this section
10:38 - in this section I'm going to take you
10:39 - through the main course goals that I
10:41 - have I have two categories of goals that
10:43 - I wanted to achieve um my personal goals
10:46 - in making this course and my goals for
10:49 - you within the category of my personal
10:52 - goals for this course number one I want
10:55 - you to feel and know at the end of it
10:57 - that you've made a good investment in
10:59 - getting this course number two I want to
11:02 - save you a lot of time money and effort
11:06 - and three I want to give you the
11:09 - self-confidence to pursue your learning
11:12 - objectives now let's talk about my goals
11:15 - for
11:16 - you this course is really about you I
11:18 - haven't lost sight of that and it's
11:21 - about giving you the best knowledge and
11:22 - tools to achieve your learning
11:24 - objectives so it's about making sure
11:26 - that at the end of the course you have
11:28 - the these things one you are equipped to
11:32 - save a lot of time money and
11:34 - effort two you are crystal clear on the
11:38 - following your coding goals your coding
11:41 - plan or path to achieve these
11:44 - goals the steps routines habits and
11:46 - timelines required to achieve your goals
11:50 - pay careful attention to those specific
11:51 - choice of words because they're all very
11:54 - deliberate the fourth goal I have for
11:56 - you is that I want to ensure that you
11:58 - can recognize myths or mismatched
12:01 - expectations that stand in the way of
12:03 - your learning to
12:05 - program fifth goal I want you to be able
12:08 - to use effective tools and strategies
12:11 - that make your coding Journey enjoyable
12:13 - positive and as discouragement free as
12:16 - possible because believe me there's a
12:19 - lot of discouragement that you will
12:20 - encounter I want to minimize that goal
12:24 - six for you is that I want you to be
12:26 - able to recognize the pitfalls and
12:28 - diversions that you will inevitably
12:30 - encounter so that you can make decisions
12:32 - that help you achieve your goals rather
12:35 - than delay you or derail you the seventh
12:39 - goal is that you can proceed with
12:41 - confidence resilience and Clarity and be
12:44 - a highly effective lifelong learner and
12:48 - that's something I'd like to emphasize
12:49 - here that the skills and the abilities
12:52 - um that I'll be talking about over the
12:54 - course of this um program really to
12:57 - equip you to be a lifelong learner while
13:00 - it's wrapped around a concept of
13:02 - learning to program computers almost
13:05 - everything you learn in this program is
13:07 - about lifelong learning and the ability
13:10 - to keep learning as you proceed through
13:12 - life now I am convinced that you can do
13:15 - all of these and more everybody can it
13:18 - is not easy but it's not impossible in
13:21 - fact it's totally achievable for
13:22 - everybody so if you've come this far I'm
13:25 - absolutely 100% convinced that you've
13:28 - got the willpower you've got the hunger
13:31 - you've got the drive to do it so don't
13:33 - stop don't ever
13:36 - stop okay now that we've established our
13:39 - course goals let's talk about how you
13:42 - can get the most out of this course the
13:44 - suggestions that I'm going to put
13:46 - forward here are based on largely my
13:48 - personal experience but also the
13:50 - experience of all the super Learners
13:51 - around me that I've read about or met
13:54 - personally this is something I've
13:56 - studied and researched extensively and
13:58 - and it really does boil down to two
14:01 - things preparation and mindset or you
14:04 - could call it mentality or something
14:06 - else but preparation and mindset are the
14:09 - two basic keys to your learning
14:13 - objectives so now sharing these with you
14:16 - is really the first step in helping you
14:18 - achieve your goals and I know it might
14:20 - sound a little bit like I'm preaching or
14:22 - something um and I apologize for that
14:25 - but this is just so fundamental that
14:28 - your success uccess in all the sections
14:30 - from here onwards starts with you
14:32 - getting good at this preparation and
14:35 - mindset so to get the most out of this
14:39 - course I recommend you practice the
14:42 - following mindsets note now that I'm
14:45 - always using the word practice in this
14:47 - course it is a common mistake to think
14:50 - that you need to have these skills right
14:52 - off the bat that they come out fully
14:54 - formed or that they natural and inherent
14:57 - in people that is a complete complete
14:59 - myth the difficult skills in life do
15:02 - require us to overcome our natural
15:04 - inclinations which is laziness and
15:07 - inertia anyway I recommend that you
15:10 - practice these
15:11 - mindsets over and over until they become
15:14 - a natural part of your
15:17 - thinking
15:18 - one inertia is natural normal and you
15:22 - must expect it look there going to be
15:24 - days when you just don't feel like it
15:26 - and that's okay sometimes you do need a
15:29 - break especially when you're learning
15:30 - difficult skills and there's a bit of
15:32 - mental overload what's known as
15:33 - cognitive overload but off days or days
15:37 - that you take off and not do anything
15:39 - are the exception they cannot be the
15:41 - norm so you must make sure that your off
15:44 - days are only the exception that's the
15:47 - bit that takes effort two you should see
15:50 - your frustration as a signal that
15:52 - something needs a bit more work now I
15:55 - will talk about this a little bit more
15:57 - as we go through the course but some
15:59 - things are signals and some things
16:00 - aren't and frustration is a signal that
16:03 - whatever you're tackling at that point
16:04 - in time needs a little bit more work
16:07 - it's it's not that it's too difficult
16:09 - for you or that you're not smart enough
16:11 - that's the wrong message to take out of
16:13 - frustration now both may feel true in
16:16 - that moment you may really feel that
16:17 - you're not smart enough or it's too hard
16:19 - for you it's insurmountable for you but
16:22 - with effort both will be proved to be
16:24 - false or in other words you put in the
16:26 - effort with the right mindset and you
16:28 - will show to yourself that you are smart
16:30 - enough and it wasn't that hard over time
16:33 - it will yield to you so frustration is
16:35 - just a signal that something needs a
16:38 - little bit more work and effort on your
16:40 - part or that you must just keep going
16:43 - three try and have a growth mindset and
16:46 - not a fixed mindset so this means that
16:49 - you should try to view your skills as a
16:51 - dynamic thing something that evolves and
16:53 - grows and develops and improves over
16:55 - time don't see yourself as fixed or you
16:58 - will feel stuck and then it will become
17:01 - true for you that you can't actually
17:04 - grow the mindset is critical here in
17:06 - fact these ideas have come from a
17:08 - phenomenal book by a psychologist called
17:12 - Carol Dre um the book's called mindset
17:14 - and it's it's an optional reading I'll
17:17 - include the um the links in in the in
17:19 - the notes to this class um or for a
17:22 - short synopsis you may want to check out
17:23 - her popular Ted Talk it's in fact a very
17:26 - highly regarded Ted Talk on exactly this
17:28 - side subject the growth mindset vers
17:30 - versus the fixed mindset number four
17:34 - remind yourself that time and energy
17:36 - will combine together to help you make
17:39 - progress now another way to think of
17:42 - this energy is to think of it as effort
17:45 - the point is that without putting in
17:46 - both time and effort SL energy you are
17:50 - not likely to get to your goal you can
17:52 - invert this concept if it helps and
17:54 - think of it as the only thing separating
17:57 - you from your your goal is time and
18:00 - effort that's
18:01 - it number five expect and accept that
18:06 - your assessment of time and energy will
18:08 - almost always be wrong now this is
18:11 - unfortunate but true in fact it's a
18:12 - well-known phenomenon documented and
18:15 - called the planning fallacy again I'll
18:17 - include some um notes and URLs if you
18:19 - want to look at it it's not essential
18:21 - but it's just good to know as part of
18:23 - your preparation that these things are
18:24 - normal and common and well documented
18:27 - now this planning fallacy where things
18:29 - take longer or more time and energy um
18:32 - than you anticipated it is just part of
18:34 - the learning and as time goes on you
18:35 - will get better at at sensing that
18:37 - that's what's going on but it doesn't
18:39 - mean you have to like it I totally get
18:41 - it but do try and accept it it's
18:44 - possibly a fact of life that we just
18:46 - need to live with now the more time you
18:48 - put in the better you get at assessing
18:49 - how much time things will take so
18:51 - initially you'll get it wildly wrong and
18:53 - over time you'll get much better at
18:55 - estimating you probably don't remember
18:57 - just how hard it was for you to write to
19:00 - learn to write the alphabet for example
19:03 - um but if you watch a Kindergarten kid
19:05 - you can see how slowly he or she forms
19:07 - the A and the B and the C and the D it's
19:10 - really really hard for them sometimes um
19:14 - they feel it's too hard um when they
19:15 - can't remember the shape of a given
19:17 - letter now it's the same principle for
19:19 - coding or for anything else that you're
19:21 - acquiring a new skill that you're
19:22 - requiring at first it's going to be
19:24 - really slow and frustrating it'll be
19:26 - cognitively or mentally very hard for
19:29 - you and that means it will take you
19:31 - longer than you're secretly hoping so
19:33 - just be mindful of that develop the
19:35 - mindset that that's normal it's part of
19:37 - the growing process don't be discouraged
19:39 - or too frustrated by that okay you ready
19:43 - good let's keep going to the next
19:48 - section okay welcome back in the last
19:50 - video we talked about the essential
19:52 - mindsets and mentalities and attitudes
19:55 - that you need to have in order to get
19:57 - the most out of this course um as you
20:00 - probably know learning to code is like
20:02 - any other project it requires a
20:04 - framework a lot of planning um
20:08 - monitoring your own performance your
20:09 - direction your pace and the outcomes
20:11 - you're
20:12 - achieving when you get off track you
20:14 - need to revisit the goals and bring
20:17 - yourself back on track but for that you
20:19 - need to actually have well-laid out
20:22 - goals now there are tons of Frameworks
20:24 - that say the same things but with
20:26 - different kind of words a common
20:28 - framework that can be used for these
20:31 - kinds of planned activities especially
20:33 - personal development projects um which I
20:35 - favor is called the five W's and one
20:39 - H the five W's
20:42 - are Y what where who when and the 1 H is
20:48 - the how but you know to be honest I
20:51 - think the how is covered by the what
20:53 - where who and when it's implicit and
20:56 - encapsulated in all of them
20:58 - to me all of that adds up to the
21:01 - how so in the rest of this section of
21:04 - the course not this video just the
21:06 - section of this course we are going to
21:08 - apply this 5w framework to you
21:12 - specifically this framework will help
21:14 - you achieve one of your goals total
21:18 - Clarity that's the goal that's what this
21:20 - framework is going to help you get
21:22 - clarity on your
21:23 - expectations from yourself from the
21:26 - process of learning
21:28 - and your definition of success we need
21:31 - Clarity on all three so at this stage I
21:36 - think it's probably a good time for you
21:38 - to pause a bit and to think very
21:40 - carefully and I mean this just pause
21:42 - here and write out your
21:45 - expectations what do you expect from
21:48 - yourself over the next 12 months in
21:50 - terms of your coding Journey what
21:53 - behaviors and commitments are you
21:55 - prepared to make to what do you expect
22:00 - from this process of learning so this
22:03 - could include a slow but steady rate of
22:06 - improvement or you would expect
22:08 - frustration or a sense of accomplishment
22:11 - Pride
22:13 - progress next have a think about what
22:16 - success looks like to you it's very hard
22:19 - to know we've succeeded if we're not
22:21 - clear on what it looks like now
22:24 - visualizing or identifying what a
22:25 - successful outcome looks like is is a
22:27 - hard one
22:29 - and most people don't spend enough time
22:30 - in being specific but by defining
22:33 - realistic but big goals and being very
22:36 - clear on how you would know when you
22:39 - have achieved them you can keep yourself
22:41 - very inspired and
22:43 - motivated so definitely take a moment
22:45 - and think about those three things but
22:47 - you know don't worry too much as this is
22:49 - not a one-time exercise you will need to
22:52 - keep ref returning to this and refining
22:55 - it all along your journey as you get
22:57 - more information as you learn more about
22:59 - code as you learn about yourself and
23:01 - your learning style keep coming back so
23:03 - this is going to be a dynamic and
23:05 - constant exercise but for now it's a
23:07 - great idea to do some initial thinking
23:10 - and expectation setting right away so
23:12 - stop now and do it okay done that good
23:16 - now that you've done that hold on to it
23:18 - sit on it for a bit um over the next few
23:21 - sections and videos we're going to spend
23:22 - time on each of those five W's and this
23:25 - will help you think deeper on each of
23:27 - your answers
23:28 - uh refine them and improve them so that
23:30 - you have total Clarity in your mind
23:32 - about what it is that you're seeking to
23:33 - achieve and that Clarity is going to be
23:36 - your compass through your entire coding
23:38 - Journey this is really important guys
23:40 - all right I'll see you in the next video
23:42 - okay welcome back in the last video we
23:45 - talked about the five ws and how each of
23:47 - them is really important and integral um
23:50 - they essential steps in you putting
23:53 - together your plan to achieve your
23:54 - learning goals now in the next few
23:57 - videos we're going to talk about each of
23:59 - those five W's and we're going to tackle
24:01 - each of them one at a time and go into
24:03 - some amount of detail and let me tell
24:05 - you this is going to be one of the most
24:08 - important exercises in self-reflection
24:11 - you're going to do these five ws are
24:13 - going to be the things that you come
24:16 - back to over and over and over again
24:18 - every time you get discouraged or
24:21 - sidetracked or you know derail as part
24:23 - of your Learning Journey um there's
24:25 - going to be a lot of information that's
24:27 - confusing and that you're going to feel
24:28 - very conflicted about and this is the
24:30 - stuff um the five ws in particular
24:33 - that's going to really really help you
24:35 - decide what to do next reorient yourself
24:38 - towards your goals and just pursue them
24:40 - so a very very useful framework and
24:43 - going to be an ongoing part of your
24:45 - journey so let's get
24:47 - started okay well the first thing I
24:50 - suggest we start with is why you want to
24:53 - learn to code so why are you learning to
24:57 - code have a good think about this I've
25:00 - got to admit when I first asked myself
25:02 - this question it seemed totally obvious
25:05 - and I took my first response the most
25:08 - superficial response as the obvious
25:10 - right answer that was a mistake the
25:14 - reason it's a mistake is because
25:17 - sometimes we take the first answer as
25:20 - the real reason but it's not the first
25:22 - answer is in fact rarely the root reason
25:25 - as to why you want to do something
25:29 - the way to get to the root reason is to
25:31 - keep asking yourself why so literally
25:34 - ask yourself why you come up with an
25:36 - answer ask yourself why that answer now
25:39 - this is a little more clear with an
25:40 - example so I'll share with you my
25:42 - personal example and this is a snapshot
25:45 - from about one year into my first
25:48 - attempt to learn to
25:50 - code when I first started I really
25:53 - hadn't thought about why or what or made
25:56 - any plan and that was a huge mistake in
25:59 - hindsight it cost me a lot of time and
26:01 - money and energy I just decided instead
26:04 - that I wanted to write code so here's my
26:07 - why from back then why to write cool
26:11 - apps now that seems like an obvious and
26:13 - very reasonable answer and I dare say a
26:15 - lot of people have that that thought in
26:17 - their head but it's insufficient it's
26:20 - not the whole story and the problem with
26:22 - this answer is that it does not give you
26:25 - enough Direction Why
26:28 - because anything that could help you
26:30 - write a cool app then becomes part of
26:33 - your learning plan and that is the wrong
26:35 - way to go about it it's dangerously
26:38 - general what sort of apps mobile desktop
26:42 - web apps hybrid scripts now I learned
26:46 - this the hard way a year after getting
26:48 - sidetracked and overwhelmed and doing
26:50 - too much irrelevant stuff instead it
26:54 - should have been like this why to write
26:58 - cool apps why I want to launch my own
27:01 - product why to pursue my entrepreneurial
27:05 - dreams why because I believe that this
27:09 - is what I would most enjoy in my life
27:12 - now at some point if you ask yourself
27:15 - why enough times you will get to
27:17 - something you believe very very strongly
27:19 - in this is something that is fundamental
27:22 - to your reason to code this is very very
27:27 - important because it helps to answer the
27:30 - next question which is what do you want
27:33 - to learn to code there are so many
27:36 - options here so it is very important to
27:40 - work backwards from your goal and here
27:43 - is a very important test the answer to
27:47 - your what must correlate significantly
27:51 - to your why here's an example for me
27:55 - what do I want to build a cool app okay
27:57 - what kind one that I can monetize into a
28:01 - product okay what kind of product some
28:04 - sort of web app or software as a service
28:07 - so what do I need to learn then web
28:09 - development front end backend security
28:13 - and penetration texting maybe not so
28:15 - much of that Which languages help me do
28:19 - most of this actually does the choice of
28:21 - language even
28:23 - matter now this may seem obvious and
28:25 - easy but I can promise you that if if
28:27 - you're doing it properly this will not
28:29 - be an instant exercise in fact it's
28:32 - going to take effort you may need to
28:33 - spend an hour or more really thinking
28:36 - really thinking hard and once you have
28:39 - your top level learning objective that
28:41 - is your primary learning goal then you
28:44 - need to break that down into smaller
28:46 - chunks for example webd what does that
28:49 - mean front end back end or is it safe to
28:53 - ignore tutorials about authentication
28:56 - and security and database design
28:59 - Etc let's start with web development
29:01 - Basics then for the front end perhaps
29:04 - well that's just HTML CSS and
29:07 - JavaScript now your goals may be
29:10 - different maybe you want to get a job as
29:13 - a mobile developer or a job as a backend
29:15 - developer in python or something like
29:17 - that but you need to be crystal clear
29:20 - about your objective so that every hour
29:23 - of study and research that you invest is
29:26 - in a subject
29:28 - that takes you closer to your goal
29:30 - directly and by that I mean the shortest
29:33 - possible route between you and your goal
29:36 - some subjects may appear to be related
29:39 - or appealing or relevant um but are they
29:42 - critical to your goal and you can see
29:45 - here that when you pursue the goals that
29:48 - are not quite critical or the learning
29:50 - objectives that are maybe indirect um
29:52 - and merely represent nice to haves
29:55 - rather than the absolute Essentials your
29:58 - path to success is extremely convoluted
30:01 - and twisted and messy that's why it's
30:04 - important to focus only in the musthave
30:06 - skills the minimum skills required to
30:09 - attain your goals and not be distracted
30:11 - by the nice to have skills when learning
30:14 - a new skill focus is the absolute key
30:18 - and the less topics you do means the
30:21 - more progress you're going to make so be
30:24 - very focused on the minimum requirements
30:26 - to achieve your goal and separate your
30:29 - learning tasks into the musthaves and
30:32 - the nice to haves there is no one right
30:35 - answer so this takes practice and
30:37 - refinement over time and like I said
30:39 - discipline now it's your turn take a
30:43 - moment step away from the computer or
30:44 - your phone and write down your wise
30:48 - followed by your wats and make sure that
30:50 - they
30:51 - correlate then come back and put it down
30:54 - in the exercise that follows this video
30:56 - and share it with others
30:58 - welcome back in the last video we
31:00 - covered the first of the two W's which
31:02 - is why you want to learn to code and
31:05 - what you want to code now in this
31:08 - section we're going to talk about the
31:10 - third W The Who specifically who are you
31:14 - going to get support from on your
31:17 - Learning
31:18 - Journey as with any Journey you need a
31:22 - good map and if you're a hia you know
31:26 - that different Maps can cause confusion
31:28 - and
31:28 - frustration the same principle applies
31:31 - to learning a new skill like
31:34 - coding finding a person to model is
31:37 - critical because that is the best map or
31:39 - Compass to have to choose the best
31:42 - people you need to have done the
31:44 - exercises around identifying what you
31:46 - want to achieve in the previous videos
31:49 - now just a quick side note and I
31:51 - apologize but I'm probably going to
31:53 - repeat this several times but it's
31:55 - really really important anytime you
31:58 - adjust one of the W's in your 5w plan
32:01 - please please make sure that you examine
32:03 - all the other W's and update them as
32:06 - necessary all right getting back to
32:08 - choosing the best
32:09 - people my suggestion and my experience
32:12 - has been it's best to choose one or two
32:14 - people who have done what you would like
32:17 - to do if they've achieved your goals
32:20 - that is they've done what you intend to
32:22 - do then they are the people to model
32:25 - that's it now very quick update for 2024
32:29 - because of the rise of the way social
32:30 - media has started to influence people
32:32 - and just the amount of content out there
32:34 - that's being produced by people I think
32:36 - it's now even more important than ever
32:38 - before to distinguish between opinions
32:40 - especially since there's no shortage of
32:42 - that on the internet and actual advice
32:44 - and the definition I adopt which I found
32:46 - to help me a lot uh which I hope will
32:47 - help you is opinions are what most
32:50 - people have as a point of view and
32:52 - usually they may or may not actually
32:54 - have directly done or U Been uh
32:57 - experienced in what you're trying to do
32:59 - however advice by definition to me can
33:02 - only come from someone who's done
33:04 - exactly what I'm trying to do who have
33:06 - direct lived experience of that
33:07 - everything else is just an opinion and
33:09 - I've learned especially as more and more
33:11 - stuff comes out in the internet to just
33:13 - tune out that it's not so much who I
33:15 - follow or who I listen to anymore most
33:17 - of my work is spent tuning things out
33:19 - right and just finding one or two you
33:21 - don't need more than that people who
33:23 - actually done what I'm trying to do um
33:25 - and who are able to share their
33:26 - experience and it ideally somebody
33:27 - really close somebody who I can meet in
33:29 - person if not somebody I can speak to on
33:31 - the phone or online and if not interact
33:33 - with you know via um link or whatever it
33:35 - is right so those are the layers so I'd
33:37 - encourage you to really be strict about
33:39 - the kind of people you take uh
33:40 - information from because to be honest N9
33:43 - times out of 10 especially these days a
33:44 - lot of information is sent out by people
33:46 - who've never actually done stuff they
33:47 - may have read a book or you know um
33:50 - followed some other influence and
33:51 - they're trying to sort of build
33:52 - expertise in that area to be honest
33:54 - without having lived the experience if
33:56 - you haven't actually gone on to to Rome
33:57 - you can't really describe what Rome um
34:00 - is like to someone no matter how many
34:01 - YouTube videos you watched right so
34:02 - that's the kind of analogy I'd use there
34:04 - so think about that very carefully and
34:06 - try and protect your focus and your mind
34:08 - space as much as you can by tuning out
34:10 - excluding rather than let letting too
34:11 - many points of view come in because
34:13 - that'll just confuse you a lot that's
34:15 - the most important and probably the only
34:17 - really meaningful helpful
34:20 - rule think of them as mentors or models
34:23 - I mean pick pick a label that makes you
34:25 - happy the name doesn't really matter
34:28 - the important thing is how do you find
34:29 - these people well in some cases you may
34:32 - actually know them and you'd be
34:34 - surprised at how many very very eligible
34:36 - mentors and models are actually around
34:38 - you just don't overlook someone only
34:41 - because they've not yet made it big or
34:43 - found a job you know there may be 3
34:45 - months or six months ahead of you on the
34:47 - journey but that's very valuable too and
34:50 - then there's always social media I've
34:53 - found great success with looking up
34:55 - people on Twitter or you YouTube and
34:57 - Linkedin and just reaching out and often
34:59 - online communities are great places to
35:01 - find people um you can get inspiration
35:04 - from or get guidance from personally I
35:06 - found fantastic models from online
35:08 - communities like the free code Camp
35:10 - Community some on RIT some slack
35:13 - channels and so on now it's tempting to
35:16 - go a bit crazy and spend all your time
35:17 - on these social media sites and you know
35:21 - accumulate a bunch of people that you
35:23 - can go to I suggest you don't do that
35:25 - that'll actually waste you more time
35:27 - then it'll save you in my experience the
35:29 - optimum range is you need one to three
35:31 - solid reliable trustworthy people and
35:34 - while many people may not be as
35:36 - available as you would like they are
35:38 - usually more available and approachable
35:40 - than you think even if you reach out C
35:42 - on on Twitter or even YouTube so just
35:45 - reach out there's only benefits to be
35:47 - had you may just find yourself a
35:49 - fantastic model who's happy to help you
35:52 - you should set your expectations what
35:53 - you want from these models just
35:56 - practical advice
35:57 - not inspirational advice inspiration is
36:00 - good but at the end of the day it can
36:02 - run out whereas practical advice will
36:03 - make you move forward so I don't
36:06 - generally think that having models like
36:07 - billionaire startup Founders is very
36:10 - helpful it can actually be
36:12 - counterproductive especially since it's
36:14 - hard to separate fiction from fact when
36:16 - it comes to learning from them and their
36:17 - experience unless you happen to know
36:19 - them personally and then they can have
36:21 - an honest conversation with you about
36:23 - their
36:24 - experience so let's now talk about in
36:27 - what moments or what times along your
36:29 - journey that you're going to need a
36:31 - mentor or a
36:32 - model the answer is really anytime
36:34 - you're confused about what the right
36:36 - next step is for you do you want to
36:38 - learn this Frame framework should you
36:40 - build the skill should you learn um this
36:43 - particular text stack should you apply
36:45 - for that kind of job these are the
36:48 - questions you can take to a good Mentor
36:50 - a great time to consult your Mentor or
36:52 - one of your models is when you're
36:54 - receiving a lot of conflicting and
36:55 - confusing information
36:57 - because they can help you when you're
36:59 - stuck conflicting information is a big
37:01 - problem and we'll talk about it later
37:03 - this happens quite often especially
37:05 - initially and so Saving Time by turning
37:07 - to someone close by to help explain
37:10 - things to you or give you a valuable
37:12 - perspective is worth hours if not weeks
37:15 - and days of your time now the internet
37:19 - is full of opinions so getting
37:21 - conflicting information happens all the
37:23 - time and some of these opinions I should
37:25 - warn you would probably suggest the
37:27 - opposite of what you want or where
37:29 - you're headed that's okay you just need
37:31 - to know when to listen and when to
37:33 - ignore these opinions and that's often
37:34 - easier said than done that's where
37:36 - mentors can help also having a clear
37:39 - line of sight with your goals and your
37:41 - five ws will help you decide which
37:43 - opinions to listen to and which not to
37:46 - now rather than getting stuck in circles
37:48 - in your head it's often just better to
37:50 - talk to one of your mentors a model
37:51 - who's been through that sort of
37:53 - confusion before ultimately folks the
37:56 - role of the mentor is to make sure that
37:58 - the next step you take is the one that
38:00 - takes you closer to your goal that's
38:03 - what you end up using your Mentor fall
38:05 - now they'll not always have the right
38:07 - answers they may not even agree with you
38:09 - and that's okay you need their
38:11 - perspectives to test your assumptions
38:14 - and your needs against your decisions
38:17 - that you plan to make they will help you
38:19 - make a better decision and that could
38:21 - even be something as small as avoiding a
38:23 - misstep or avoiding wasted time or
38:25 - barking up the wrong tree something that
38:27 - could derail you if they can help avoid
38:30 - that they've done their job as a mentor
38:32 - or a model ultimately they're there to
38:34 - help you make the best choice The Best
38:36 - Next Step which is much easier when
38:39 - someone else has walked down the path
38:40 - before they can also give you a
38:42 - perspective on what they went through
38:45 - and how they approach similar problems
38:46 - or conundrums that's really really
38:49 - valuable sometimes and I've had this a
38:52 - few times they'll give you advice that
38:53 - they wish they really had and and in my
38:57 - opinion if someone tells you what they
38:59 - wish they had had and actually gives you
39:01 - what they wish they'd had that's worth
39:03 - your weight and gold because they're
39:05 - saving you the time and effort and money
39:07 - that they may have lost and preventing
39:10 - you from losing that a trusted advisor
39:14 - who did what you want is really worth a
39:16 - thousand times more than someone on
39:18 - opinion who has never wanted what you
39:19 - want or maybe wanted but never actually
39:22 - tried so limit the amount of time you
39:24 - take these opinions another tip Twitter
39:27 - advice is just as valuable as a coffee
39:29 - Meetup if it gives you the answer you're
39:31 - looking for so don't be specific in the
39:34 - format of the mentor
39:37 - interaction the idea of a mentor
39:39 - interaction is to get you the
39:40 - information you need to take the next
39:42 - step all right enough of this section
39:44 - I'll see you in the next
39:46 - video goals like work they they follow
39:50 - Parkinson's law the work just expands to
39:53 - fill the time available for its
39:54 - completion that's just how it is so
39:57 - that's why I guess people talk about
39:59 - smart goal setting
40:02 - smt which is an acronym and it stands
40:05 - for specific me measurable achievable
40:08 - realistic and time bound which is really
40:11 - what this this video is about it's about
40:13 - the T or the when by the time bound
40:16 - aspect but to do that well you need to
40:19 - ensure that you've correctly broken down
40:22 - your goals so it's a little bit more
40:24 - complicated than just setting a time or
40:26 - when by date one very common mistake in
40:29 - setting timelines for goals is that the
40:32 - goals are just too large and they're
40:34 - non-specific and they're not broken down
40:37 - into specific pieces so for example you
40:40 - could say I'm going to learn to code by
40:43 - December
40:44 - 2019 but you won't know when you've
40:47 - completed that because learning to code
40:49 - is just not specific enough and arguably
40:52 - the timeline is too far away setting a
40:55 - far away timeline for a large goal is
40:58 - kind of meaningless but it's done very
41:00 - often instead you'd be much better off
41:03 - breaking down the large goal into
41:05 - smaller measurable goals or sub goals
41:08 - that are easy to cover with metrics and
41:11 - ideally there'd be a metric that you can
41:13 - track and measure daily or very
41:16 - frequently maybe twice a week or even
41:18 - weekly some examples could be I'm going
41:21 - to finish this 3-hour course by Sunday
41:25 - evening then I'm going to do 2 hours of
41:27 - HTML every single night so I have the
41:30 - basic concepts of HTML down by the end
41:33 - of the
41:34 - week after that I'm going to understand
41:37 - the basics of CSS with that 4-Hour Long
41:39 - YouTube video and I will finish that by
41:42 - Wednesday
41:43 - night so the trick is to break down into
41:46 - smaller chunks that are very obvious
41:49 - when you've achieved them or completed
41:51 - the Milestone so a tutorial is either
41:54 - complete or not a video is complete or
41:56 - not a section in this course is complete
42:00 - when the video in that section ends
42:02 - these things are clear they're clear
42:03 - lines in the sand you know when you've
42:05 - achieved them there's no question about
42:06 - whether the goal has not been achieved
42:08 - or has been achieved it's pretty binary
42:11 - these kind of goals will also give you
42:13 - an idea of the size of the task um which
42:16 - means you can assess the time better
42:19 - another thing to watch out for is it's
42:21 - best not to go too far into the future
42:24 - as you will Lo lose motivation
42:26 - it's actually really important as a
42:28 - learning strategy to give yourself lots
42:30 - of quick wins constantly as that will
42:33 - give you the clear sense of progress
42:36 - it'll keep you motivated and energized
42:38 - because you can see progress the sooner
42:42 - you achieve a goal the more likely it is
42:44 - you'll develop the habit of succeeding
42:45 - at achieving goals because you're
42:47 - constantly getting the reinforcement
42:49 - feedback loop that you're achieving your
42:51 - goals and one last thing for you to keep
42:54 - in mind before we close out on this
42:55 - video
42:56 - you know sometimes life does get in the
42:58 - way and it slows you down and that's
43:01 - okay life happens just make sure you're
43:03 - not the one slowing yourself down a
43:05 - couple of videos ago we did talk about
43:08 - you know off days are all right as long
43:09 - as that's not the norm so similarly if
43:13 - life gets in the way that's
43:14 - understandable don't beat yourself up
43:17 - set very hard to achieve timelines
43:19 - that's important because it'll make you
43:21 - more confident and focused but at the
43:23 - same time if life gets in the way just
43:25 - readjust those timelines a little bit
43:27 - but keep the smart principles in mind
43:30 - all right on to the next video okay so
43:33 - in the last video we covered the fourth
43:35 - W which is whenby and now in this video
43:39 - we are going to talk about the fifth and
43:41 - final W which is where in the context of
43:44 - your learning plan where means where
43:47 - you're going to learn from that is what
43:49 - resources and learning formats work best
43:51 - for you to achieve your learning goals I
43:54 - will start by sharing with you how I
43:56 - worked out my best learning format over
43:58 - the years and how that
44:01 - changed so back when I first tried to
44:03 - learn to code it was about 2014 and muks
44:07 - that's massively open online courses
44:10 - which is starting to become mainstream
44:13 - you can see from this chart how it was
44:15 - still early days back in
44:17 - 2013 but back then I discovered two
44:20 - things about myself one is I was used to
44:23 - learning in classes and Via books
44:26 - two I hadn't really considered video as
44:29 - a way to teach myself and that took some
44:31 - getting used to I mean I finished
44:34 - University in 2003 and the world was a
44:36 - very different place then Google wasn't
44:38 - even listed as a public company back
44:41 - then bit by bit I did start to get into
44:44 - videos but I discovered that a lot of
44:46 - the content was by technical people for
44:49 - technical people and presumed a certain
44:51 - level of prior knowledge which wasn't
44:54 - that big and a friendly for someone like
44:55 - me me so I found it was much easier to
44:58 - just use books even though some were
45:00 - slightly
45:02 - outdated bit by bit though it became
45:05 - very intimidating for me to see these
45:07 - massive and thick books sitting on my
45:08 - desk each covering a lot of content but
45:11 - you know at the end of it they sort of
45:13 - tell you that you've only just started
45:14 - to scratch the surface so it was
45:17 - visually and intellectually quite
45:19 - overwhelming to have all that content
45:21 - and feel like progress was incredibly
45:24 - slow over time I then discovered other
45:27 - resources that started to pop up really
45:29 - valuable resources like free code camp
45:32 - and code academy and code Avengers um
45:35 - that all offered a
45:37 - multimedia experience while making you
45:40 - actually write some code to get a real
45:42 - feel for
45:43 - it over time I return back to muks
45:47 - especially in places like udemy and
45:50 - coera where the content had started to
45:52 - mature quite a bit now by this time keep
45:55 - in mind it was 2018 and I'd already quit
45:58 - twice before that but between 2014 and
46:02 - 2017 while I kept dabbling and trying it
46:05 - occasionally a lot had changed online
46:07 - the quality of the content the design of
46:10 - courses and also the shared number of
46:12 - coders who were sharing their knowledge
46:14 - openly online for free YouTube had
46:18 - become a huge resource for me following
46:21 - that I started to turn more and more to
46:23 - tutorial sites online places like
46:25 - tutorials point I even found a few us
46:29 - coding boot camps that had um sites that
46:32 - helped you prepare for their entrance
46:33 - tests that were incredibly useful in
46:35 - getting me to practice fundamental
46:37 - concepts but you know all this over
46:39 - those three years took a lot of trial
46:41 - and error and cost me an enormous amount
46:43 - of time and energy and frustration I
46:45 - really think that had I had the benefit
46:47 - of something like this this course that
46:49 - you're doing now I would have got the
46:51 - same results with onethird the wastage
46:52 - of time so I'm going to give you some of
46:56 - my learnings from that period in my life
46:58 - steps that help me choose the best
47:00 - learning formats and I really believe
47:02 - that these steps are going to optimize
47:03 - your path to your goal number one you
47:07 - take your first learning goal or
47:08 - objective and then you learn that and
47:11 - Achieve that goal from different sources
47:14 - so let's say for example you want to try
47:16 - to learn the different types of data and
47:18 - a programming language and how to assign
47:20 - and recall a piece of data in a
47:23 - program let's say you've even started
47:26 - with Java and we'll get into choosing
47:28 - the right language later on in this
47:30 - course but let's say you start with Java
47:32 - so what you should then do is first try
47:34 - an online blog or tutorial or some form
47:36 - of text learn the principles from there
47:39 - then you move on to a classic textbook
47:41 - and see if that works for you then you
47:43 - go and listen to a podcast then maybe
47:45 - watch a couple of YouTube videos and
47:47 - then do it on code academy or free code
47:49 - camp or you know both or what you choose
47:51 - the places you want to do it from number
47:53 - two when you do the same thing from so
47:56 - many different resources you will find
47:58 - that you get a lot of practice and
47:59 - reinforcement of the principles like
48:01 - these fundamentals actually get quite
48:03 - firmly and trenched in your brain which
48:05 - is exactly what you want but more
48:08 - interestingly you're going to also have
48:09 - a sense of which format was really
48:12 - effective for your learning maybe you
48:15 - had a urea moment while listening to a
48:16 - podcast or watching a YouTube video or
48:18 - you know in my case for example I found
48:20 - that videos took me less time to absorb
48:24 - critical information than reading a
48:25 - tutorial did and I was able to
48:27 - comprehend and assimilate and recall
48:29 - much better when I watch videos so you
48:32 - got to assess the format that works for
48:33 - you not everyone is going to love videos
48:35 - the way I ended up loving them towards
48:37 - the end the third step number three
48:40 - eliminate a few of those learning
48:42 - formats by choosing only the top two
48:44 - maximum three formats that actually
48:46 - worked well for you once you've got your
48:49 - top three two or three formats you
48:51 - repeat this process all over again with
48:53 - your next learning goal you try again
48:55 - again but you confine yourself to those
48:57 - top two or three formats keep tweaking
48:59 - and measuring your results and seeing
49:01 - which ones work really well for you and
49:03 - you'll find the different topics um are
49:05 - better covered by different resources
49:07 - and you'll discover that with time and
49:08 - practice what is really important here
49:11 - though is for you to monitor your
49:12 - learning Effectiveness over time as what
49:14 - works for you today is not going to work
49:17 - for you that well in 2 years if you've
49:19 - evoled you'll find that you can actually
49:21 - use other learning resources that today
49:23 - are too hard for you but are actually
49:26 - really appropriate for you in 2 years
49:27 - time okay so let's quickly recap what we
49:30 - learned about in this video we've talked
49:32 - about different learning formats we've
49:34 - talked about how some work better for
49:36 - you and some may not work that well for
49:38 - you how you've got to start an iterative
49:40 - process of experimenting and finding out
49:42 - which ones work really well for you by
49:44 - choosing the same learning goal and
49:46 - learning what you need to learn from
49:48 - different
49:49 - resources hey guys just a quick
49:51 - interlude here to update for 2023 2024
49:55 - figuring out out where to actually learn
49:57 - from is now much harder than it was even
49:59 - four years ago or 5 years ago and the
50:00 - reason is you every year we double the
50:03 - amount of data produced by Humanity
50:05 - through digital content right so
50:07 - literally every hour there are more
50:08 - YouTube videos being produced that most
50:10 - people can consume in a lifetime and so
50:13 - what's happening is there's a lot of
50:14 - noise in the system now which means it's
50:16 - really hard to figure out what content
50:18 - is going to be relevant for you right so
50:20 - I fully recognize this is a problem some
50:22 - of the previous comments I've I've
50:24 - provided in the training oh it Mak come
50:25 - up in later parts of this course over
50:27 - and over again is figuring out what's
50:29 - the difference between opinion and
50:30 - advice so look out for that that section
50:32 - as well but in general it's also
50:34 - important to know that a lot of coding
50:37 - tutorials and material are written by
50:39 - coders for existing coders looking to
50:41 - adopt new technologies for those of you
50:43 - who've never coded before that's not
50:45 - what you need to look at you will
50:47 - absolutely overwhelm yourself instead
50:49 - you need to be looking at coding
50:51 - resources for absolute newbies who've
50:53 - never coded before that's that's a
50:55 - little bit harder to find and they're
50:57 - also you know harder to sort of make
50:58 - much progress with because they
50:59 - literally cover just the beginning but
51:01 - you need to layer and layer just like a
51:02 - cake you need to add layers to your
51:04 - learning right so look for stuff that is
51:07 - not for example here's an example I once
51:10 - got caught in this thing about you know
51:11 - python for programmers this course right
51:14 - but what I didn't realize and realize is
51:16 - that the title actually kind of hints at
51:17 - it it says python for programmers which
51:20 - means it presumes that you're already a
51:22 - program and you're trying to pick up a
51:23 - new language being python right and I
51:25 - was a complete beginner then I knew
51:27 - nothing about programming so you know
51:29 - watch out for little gotas like that and
51:31 - keep in mind that the content that we
51:32 - seeing out there these days is a lot of
51:34 - it is open-source content which means
51:36 - people without much experience or depth
51:39 - or who are learning like you are writing
51:41 - a lot of blogs as part of their learning
51:43 - process and so that gets surfaced by
51:46 - search engines or social media whatever
51:48 - it is and it's not often great to learn
51:52 - from to be honest right because you're
51:54 - learning from people people who's s
51:55 - slightly ahead of you it's it's great
51:57 - that they're able to do that that
51:58 - they're teaching that they're learning
51:59 - by teaching which is something I
52:01 - recommend doing but I don't recommend
52:03 - adding to the content of the internet
52:05 - generally like that like if you're going
52:07 - to do it do it you know one-onone or
52:08 - tell another friend or somebody else in
52:11 - a small group so that you're not kind of
52:13 - uh filling up the internet with stuff
52:15 - that's going to come up in search
52:17 - engines that may not be right having
52:19 - said that keep in mind that a lot of
52:20 - people producing content out there also
52:22 - just learning and the content may not be
52:24 - great it may not be written well well it
52:25 - may not follow the pedagogical Styles
52:27 - required to actually help you accumulate
52:28 - the knowledge and so on you know and so
52:31 - you will end up having a lot of stuff
52:32 - that doesn't help you so it's really
52:34 - important when you pick these resources
52:35 - that you keep this in mind look for the
52:37 - correct level that is yours and if in
52:39 - the first three or four paragraphs it
52:40 - doesn't feel like the right level
52:41 - abandon it don't feel bad it just means
52:43 - that it was pitched for a different
52:44 - audience now I teach a lot as part of my
52:46 - current role and this is an actual this
52:48 - is actually a big problem from the
52:50 - teacher point of view as well what level
52:51 - of of person are we targeting at and if
52:54 - you're not explicit about about it it
52:55 - can be very confusing for other people
52:57 - so it's actually a really hard problem
52:58 - to solve so just recognize that you have
53:00 - to be kind to yourself and to the people
53:02 - prod producing content out there it's
53:03 - not possible to work for everybody there
53:05 - is no one siiz fits all so there's a
53:07 - little bit of trial and error that's
53:08 - unavoidable but it's much harder these
53:11 - days to figure out the resources um that
53:12 - are not curated because there's just so
53:14 - much stuff there right just remember
53:16 - level yourself are you an absolute
53:18 - beginner or are you fairly you know
53:20 - competent in the basics and accordingly
53:22 - look for resources at that level and if
53:24 - you're using things like chat GPT chat
53:27 - GPT is quite often wrong in fact if you
53:29 - sometimes challenge chat GPT even if
53:30 - it's right and you say that's actually
53:32 - not right it'll immediately apologize to
53:33 - you so it's obviously not that confident
53:35 - of in the first place so you know keep
53:37 - that in mind now we've actually come to
53:40 - the end of section one at this stage and
53:43 - section one was only designed to help
53:45 - you formulate a well structured plan
53:47 - that is specific to your goals and I
53:49 - think by the end of the section you
53:51 - would have done that from here on we're
53:53 - going to start picking apart the major
53:55 - reasons why many people give up on their
53:57 - plans and we want to absolutely make
54:00 - sure that that does not happen to you
54:03 - okay so let's keep going all right
54:05 - welcome back in the last bunch of videos
54:08 - we covered some really essential parts
54:10 - of putting together your plan to achieve
54:12 - your learning goals um in in particular
54:15 - we covered things like the why the what
54:18 - the where the whom and the when by that
54:20 - you're going to try and put together
54:21 - into your plan and all these aspects are
54:24 - so essential for you to be able to
54:25 - achieve your learning objectives now I'm
54:28 - fairly confident in saying that by this
54:30 - point of time just having that plan puts
54:32 - you ahead of about 95% of your
54:34 - competition because you have a solid
54:35 - plan you have a solid map that helps you
54:37 - navigate to your learning outcomes so
54:39 - let's keep moving and now we're going to
54:41 - talk about the big myths that stand in
54:43 - the
54:44 - way now the plan that we've put together
54:47 - for you will evolve and I encourage you
54:49 - to keep revisiting it for two reasons
54:52 - one to check that you are following it
54:55 - and that things that are going to plan
54:57 - that you're tracking well to the plan
54:59 - and two this is the fun bit to check
55:02 - whether you've gained any new knowledge
55:04 - that requires you to adjust and revise
55:06 - your plan just a little bit from time to
55:08 - time in the next few videos I'm going to
55:12 - cover some of the top myths that
55:13 - surround the process of learning to code
55:16 - now let me be clear here I am not
55:19 - addressing the myths of what it's like
55:21 - to be a professional coder or what a
55:23 - developer job is like
55:25 - I'm very specifically identifying the
55:28 - common myths and misconceptions that
55:31 - people have about learning to code think
55:34 - of it as the expectations specifically
55:37 - the false expectations that people have
55:39 - when they start to learn to code so why
55:42 - is that important and it is really
55:45 - important well it's important for three
55:47 - reasons here they are one having a
55:51 - picture that is false or unrealistic in
55:53 - your mind can can be a major source of
55:56 - frustration doubt and setbacks two mths
56:01 - can make you overestimate the learning
56:04 - task or underestimate it and both are
56:08 - bad learning to recognize and identify
56:11 - these myths will help you ask the right
56:13 - questions and get the answers that are
56:15 - most helpful to you remember my goal is
56:19 - to save you time money and effort and
56:21 - make sure that you do not fail in your
56:23 - quest to become a Coda reason three
56:27 - false expectations make things harder
56:30 - than they need to be and doing things
56:32 - the hard way is a form of waste and what
56:35 - do I keep saying eliminating waste is a
56:38 - very important part of succeeding at our
56:40 - goals and that includes the goals of
56:42 - this
56:44 - course now that we understand why this
56:46 - section on myths is important let's talk
56:49 - quickly about why I'm covering this
56:50 - material at this stage and not later
56:53 - I've spent days is designing the
56:55 - structure of this course so that each
56:57 - section each bunch of videos prepares
57:00 - you for the sections that follow the
57:03 - sequence is meant to make it
57:04 - exponentially easier for you to make
57:06 - decisions and analyze your objectives
57:09 - every step of the way so you may want to
57:11 - rush ahead into other sections so that
57:14 - you can start learning immediately and I
57:16 - and I understand that but I would
57:18 - caution you against that and I would
57:20 - advise you to invest a couple of hours
57:22 - now in following the structure of the
57:24 - course so that you can save yourself a
57:26 - few weeks of time later on I promise I
57:30 - will cover some of your burning
57:31 - questions for example in the next
57:33 - section the next bunch of videos we will
57:36 - talk about the fundamental decisions
57:37 - that you need to make including for
57:39 - example what language you want to start
57:41 - with you will make a much better
57:44 - decision if you've finished this section
57:46 - though at the very very least you will
57:49 - have confidence in your choice and not
57:51 - be distracted by niggling doubts and
57:53 - second guessing yourself about whether
57:55 - your decision was arbitrary or well
57:58 - informed or the right one for you so
58:00 - following the sequence is important
58:02 - because it then gives you the confidence
58:04 - in your decision- making every step of
58:06 - the way okay so we've agreed let's stick
58:09 - to the courses PA and you're going to be
58:10 - just fine great see you in the next
58:13 - video for myth number
58:15 - one welcome back in this video we're
58:18 - going to talk about the first myth the
58:20 - first of several myths that stand in the
58:22 - way of you attaining your goals just to
58:24 - be clear I'm not covering off these
58:26 - myths in this section in any particular
58:28 - order of importance they're just common
58:30 - myths it's also very possible that you
58:34 - don't believe in one or all of them but
58:36 - in my experience these are some
58:37 - extremely common myths that hold people
58:39 - back from achieving their learning
58:41 - objectives and I believe these are the
58:43 - most important ones that will help you
58:45 - continue down on your journey the first
58:48 - myth that we are going to talk about is
58:51 - whether or not computer science is the
58:53 - same as coding they're not many people
58:56 - do believe that you need to have a
58:58 - computer science background to be a good
59:00 - coder or perhaps an effective coder let
59:03 - me tell you this is absolutely and
59:05 - categorically not true most of the
59:08 - world's coders are not computer science
59:10 - graduates statistically and the reason
59:13 - for this goes to the heart of the
59:14 - difference between knowing how to code
59:16 - and knowing the principles of computer
59:18 - science here is a great summary of
59:22 - it computer science is theore iCal it
59:25 - takes a scientific and mathematical
59:27 - approach to information and its
59:29 - computation computer programming is
59:32 - practical it is the process of Designing
59:35 - writing testing debugging and
59:37 - maintaining the source code of computer
59:39 - programs they are different but related
59:42 - fields so computer science is the
59:45 - science of computing and includes all
59:47 - stuff about the hardware the software
59:49 - and theoretical capabilities and
59:51 - limitations of computers whereas writing
59:54 - software is simply literally writing out
59:57 - the instructions to a computer so that
59:59 - it can execute it that is part of the
60:02 - reason why it's hard to know where the
60:04 - line is that you must cross to become a
60:08 - coder there is no line Beyond which you
60:10 - can suddenly say hey I'm a
60:12 - coder now there are computer scientists
60:15 - who are fantastic at algorithms and
60:17 - conceptual designs and the theoretical
60:19 - side of it but who just aren't very
60:21 - practiced or experienced coders and so
60:23 - they're not great coders mainly because
60:25 - they've only really looked at the
60:27 - theoretical side of the art in fact you
60:30 - can see some fairly controversial posts
60:32 - on this subject on Reddit and other
60:34 - forums and I've added a couple of links
60:36 - in the lecture resources if you're
60:37 - interested but my advice is you know
60:40 - don't spend too much time asking why
60:42 - that difference exists or what the
60:44 - meaning of it is the only question to
60:46 - ask yourself that's relevant is why does
60:49 - this matter to you so it is critical to
60:52 - know your what and your why to determine
60:55 - if you need to have a computer science
60:57 - background that's a really good thing
60:59 - then that we've done that thinking right
61:02 - if you want to build a blog site for
61:03 - example you don't need to know much CS
61:07 - if you want to build a mobile app
61:08 - chances are you won't nowadays let's
61:12 - face it if you want to learn data
61:14 - science analytics or even intermediate
61:16 - level AI you probably don't need a solid
61:20 - Computer Science Background but if
61:22 - you're doing Cutting Edge computing R&D
61:24 - work or working for a team a startup
61:27 - let's say that's optimizing scalable
61:30 - technology um that's going to change the
61:32 - world in some way it may help you SE it
61:35 - may help separate you from the
61:36 - competition if you do know a little
61:38 - computer science or
61:40 - CS now there is one practical case which
61:43 - will immediately help you if you're
61:45 - looking for jobs then it's best to do
61:46 - some research into which jobs require a
61:49 - CS degree here are for example two
61:51 - completely random examples taken off the
61:53 - internet one from the Google's career
61:56 - site and the other from stack overflows
61:58 - jobs listings the first one the Google
62:01 - role has minimum qualifications that
62:04 - require a computer science degree or
62:06 - equivalent practical experience and the
62:09 - preferred qualifications include a
62:12 - PhD now I would guess that if you want a
62:14 - job like this you're better off doing a
62:17 - computer science degree it will
62:19 - certainly improve your odds of getting
62:20 - an interview but for the other role the
62:23 - one on stack overflow jobs if you look
62:26 - at it it's a full stack job and you can
62:29 - see that they seem to care more about
62:31 - your ability with certain languages and
62:33 - Frameworks and Technologies they don't
62:35 - really seem to care too much about your
62:37 - formal
62:38 - qualifications they seem to be more
62:40 - interested in your technical ability to
62:41 - execute and stuff so to be clear having
62:45 - a knowledge of computer science topics
62:47 - is probably helpful and probably even
62:50 - makes you a better coder but it is by no
62:52 - means essential certainly not essential
62:55 - to learn how to code most programmers
62:57 - don't have CS degrees it's just not
62:59 - necessary for what they do day-to-day
63:02 - with experience and time you'll start to
63:03 - pick up some CS principles but that
63:06 - comes later and at this stage of your
63:08 - learning it's sort of thing that can
63:10 - derail you unless you absolutely need it
63:12 - so like I've said before give yourself
63:14 - quick wins with smaller chunks and
63:16 - smaller goals provided each such chunk
63:19 - or goal is actually necessary to your
63:22 - larger learning goal okay enough on that
63:25 - let's recap quickly in this video we
63:28 - covered the fundamental differences
63:30 - between computer science and programming
63:31 - and we've established they're not the
63:32 - same thing you can be an expert in one
63:35 - without knowing much about the other and
63:36 - that swings both ways choosing your
63:39 - learning objectives must always be done
63:41 - by referring to your goals so before you
63:43 - work out whether or not you need a CS
63:45 - degree take a quick look at your what
63:47 - and your why which are the underpinnings
63:49 - of your goals and you'll know what it is
63:51 - that you need to do to get there but
63:53 - always always start with small chunks
63:56 - that give you quick wins okay let's move
63:59 - on to the next video where we're going
64:00 - to cover myth number
64:02 - two okay welcome back in the last video
64:06 - we talked about myth number one which is
64:08 - whether or not computer science and
64:10 - programming are the same skill
64:12 - specifically we discussed whether you
64:14 - need to be a computer scientist in order
64:16 - to be a good programmer in this video
64:19 - we're going to talk about myth number
64:21 - two which is quite similar to myth one
64:24 - in the look and feel and the myth is
64:26 - that you need to be great at math to Be
64:28 - an Effective programmer because I'm
64:30 - calling this a myth I think you know
64:32 - what the answer is going to be and you
64:34 - can be very relieved that the answer to
64:36 - that is no you do not need to be
64:37 - fantastic at math to Be an Effective
64:40 - programmer unless of course your goal is
64:43 - to work in a deeply theoretical and
64:45 - highly technical field where the R&D or
64:48 - the research and development you need to
64:50 - do gets immediately applied to real
64:52 - world applications and the R&D itself is
64:56 - quite math heavy but that's quite a
64:58 - niche area so in general to Be an
65:01 - Effective coder no you don't need math
65:03 - math does help to get you closer to the
65:06 - computer science side of things so if
65:08 - you are going to be doing computer
65:10 - science then math skill definitely gives
65:12 - you an advantage but my personal belief
65:14 - is everything is learnable and that
65:16 - includes math the reality of today's
65:19 - development World though is that 99% of
65:21 - s programmers do things that are based
65:24 - off existing libraries where a lot of
65:26 - the hard ma math is already done and
65:29 - that includes really complex math heavy
65:31 - subjects like data science and machine
65:33 - learning artificial intelligence and so
65:35 - on maybe a better question then is to
65:38 - ask why math helps so it's not that you
65:42 - need to have good math skills to be a
65:44 - good programmer but having math skills
65:47 - could really help so why is that well
65:50 - one of the reasons why it could really
65:52 - help is is because math teaches you to
65:55 - break down problems and solve complex
65:58 - problems in a structured systematic
66:00 - piece by- piece way and it requires you
66:02 - to hold a lot of pieces of information
66:05 - sometimes competing pieces of
66:06 - information in your head while you think
66:08 - through it in a structured logical way
66:11 - so what does that tell us maybe it's not
66:14 - the knowledge of math specifically but
66:16 - the ability to think logically in a
66:18 - structured way that math requires that
66:21 - is actually valuable as a programmer in
66:23 - other words you don't need to be good at
66:25 - math you need to be good at thinking
66:26 - logically and in a structured way now
66:29 - these skills are very very valuable as a
66:32 - programmer not essential but valuable
66:34 - but you will acquire them bit by bit
66:36 - with more code and practice now
66:39 - initially it is entirely likely that you
66:41 - would be uncomfortable and feel
66:43 - intimidated because you compare yourself
66:45 - with people who started years before you
66:47 - did now I I I made that mistake several
66:49 - times I look at accomplished programmers
66:52 - and you know theyve six to 10 years out
66:54 - ahead of where I am and Marvel at their
66:56 - ability the reality is when I was a
66:58 - fairly senior lawyer new lawyers would
67:00 - look at me and think that I had special
67:02 - extraordinary skills and I didn't well
67:05 - compared to them I did but that was only
67:07 - because of experience and practice now I
67:09 - can assure you that what you're going
67:11 - through in terms of comparing yourself
67:13 - with other people who are way ahead of
67:14 - you in the path is natural and normal
67:16 - maybe not the most helpful thing because
67:18 - every skill is 100% learnable I've said
67:20 - this before and I'll keep saying it time
67:22 - and effort are the only only thing that
67:24 - separate you from a goal we do live in a
67:26 - culture that tells us that genius is
67:28 - some innate thing I don't believe it in
67:30 - fact it's scientifically invalid from
67:32 - Einstein to Edison people have been
67:34 - careful to point out that genius is the
67:36 - result of hard work and not the cause of
67:39 - any success and accomplishment if you
67:41 - want to know more take a look at books
67:43 - like Malcolm gladwell's outliers or Eric
67:46 - Anderson's book called Peak which talks
67:48 - about how people acquire Excellence but
67:50 - that's a little bit of a diversion or a
67:52 - little bit of a tangent to where we are
67:53 - are now for now all am I saying is don't
67:56 - be intimidated by math it is useful but
67:59 - not essential so don't continue to
68:02 - intimidate yourself with this myth you
68:04 - can develop that skill if it's really
68:05 - important to what you want but it may
68:07 - not be so again knowing your what and
68:09 - your why is critical before you can
68:11 - assess whether you need a certain kind
68:13 - of skill all right enough on that myth
68:15 - two let's move to myth three okay
68:18 - welcome back in the last video we talked
68:21 - about myth number two which is whether
68:23 - or not you need to be a math WIS to be a
68:26 - good programmer in this video we're
68:28 - going to talk about myth number three
68:31 - which is extremely common and one of my
68:33 - favorite myths to try and get rid of it
68:36 - is that a lot of people think coding oh
68:40 - that's not something I could do that's
68:42 - just too hard for me let me tell you
68:45 - that is absolutely an categorically not
68:49 - true in fact empirically if you look
68:52 - around there there are just so many
68:55 - programmers in the world some as young
68:57 - as 4 years old so it's obviously not too
69:01 - hard for you that is just statistically
69:04 - not
69:05 - possible so there are three important
69:08 - things to note about this myth one it is
69:11 - partly true and that's what makes it so
69:14 - believable two the part that is true is
69:17 - that coding is
69:19 - hard and three the part that is false is
69:22 - that you can not do it let's break this
69:26 - down
69:27 - properly coding is hard but then you
69:31 - know so is learning to walk and and
69:33 - maybe you don't remember that so let's
69:35 - try something that happened a little
69:37 - later in life like learning to
69:39 - write well maybe you don't remember that
69:42 - either hm okay how about learning to
69:46 - ride a bicycle or learning to swim
69:49 - learning a second language or a third
69:51 - language or learning to drive
69:54 - how about learning to use Microsoft
69:56 - Excel at work learning anything new is
70:00 - hard and the difference is that some
70:02 - things we just learn along the way so we
70:05 - don't pay attention to the effort it
70:06 - takes and how hard it is because we just
70:08 - pick it up along the way but unless you
70:11 - happen to be living with a disability
70:14 - generally learning to walk write or read
70:17 - or drive are things that we simply
70:19 - assume we take it for granted we will
70:21 - all do this one day our kids will do
70:23 - this one day Etc there's nothing unusual
70:26 - about these fairly complex skills and in
70:29 - 20 years I am 100% sure they're going to
70:32 - say the same thing for coding kids in 20
70:35 - years will just code like it's the most
70:36 - normal thing in the world which means
70:38 - coding is not hard for you it's hard for
70:40 - everyone but everyone can do it so the
70:44 - key here is to catch yourself when
70:46 - you're thinking that it's hard
70:48 - specifically for you nope it's hard for
70:52 - everyone remind yourself that learning
70:55 - to drive a walk is also really hard but
70:57 - we take for granted we can do it and we
70:59 - never doubt our ability sure some people
71:02 - take a little longer they may need a
71:04 - little more practice but no one really
71:06 - doubts that they can do it and that
71:09 - exact same attitude applies to coding
71:11 - because it's a fact so let's recap
71:14 - coding is hard but not just for you and
71:17 - it's no harder than any other skill that
71:19 - we take for granted in our modern
71:21 - culture and certainly no harder than at
71:23 - least two or three other skills that you
71:25 - probably already have okay enough said
71:28 - on that let's move on to myth number
71:31 - four okay welcome back in the last video
71:35 - we talked about the myth that it's too
71:37 - hard for some of us to learn to code in
71:40 - this video we're going to talk about an
71:43 - unspoken assumption that many people
71:45 - share or it's a misconception that a lot
71:48 - of people don't even know that they've
71:49 - fallen into which is that coding is
71:52 - something that can be done very very
71:53 - quickly like they show it in the movies
71:56 - this is especially common for people who
71:59 - want to code to build something that
72:01 - they want to see in their lives or for a
72:03 - startup idea they've got something that
72:05 - they want to prototype quickly you know
72:08 - this myth is a huge factor for the
72:11 - frustration and disappointment that
72:12 - cause people to give up popular media
72:15 - will make us believe that you can become
72:17 - a hacker quickly almost instantly with
72:19 - prodigious ability and put together a
72:22 - world changing protot type from your DM
72:24 - room or garage in the weekend it's false
72:28 - and if you don't believe me listen to
72:30 - this guy movies and pop culture just get
72:33 - this all wrong the idea of a single
72:36 - Eureka moment is a dangerous lie it
72:39 - makes us feel inadequate because we feel
72:42 - like we haven't had ours yet and it
72:45 - prevents people with seeds of good ideas
72:47 - from ever getting started in the first
72:50 - place oh and you know what else movies
72:52 - get wrong about innovation
72:54 - no one writes math formulas on glass
72:57 - okay all right that's not a thing
73:01 - okay guys even Mark Zuckerberg is
73:04 - telling you that it's very dangerous to
73:07 - fall into the myth of thinking that
73:09 - these things happen very quickly that
73:10 - you can learn or build something very
73:13 - very quickly it's so dangerous that it
73:15 - causes people to either not start or to
73:18 - give up too early even he's saying it
73:20 - and I 100% agree especially with skills
73:24 - like coding it can take so much longer
73:26 - than you expect that if your
73:28 - expectations are too false you run the
73:32 - real risk of giving up I cannot
73:34 - emphasize this enough and I do not want
73:36 - you guys to give up because of
73:37 - mismatched expectations and that's why
73:39 - this myth is so important do not think
73:42 - that it's going to be quick instant and
73:44 - glorious it is really not but it is
73:47 - totally possible with time and effort
73:51 - okay so apart from pop culture
73:54 - and the myth of the weekend entrepreneur
73:56 - you also have significant marketing
73:58 - effort being put into telling you that
74:00 - you can learn to code in a weekend or 4
74:03 - hours or 10 hours or whatever it is some
74:06 - will say that you will be job ready in 3
74:08 - months and technically they're right but
74:11 - it is slightly
74:13 - misleading most coders learn by doing
74:17 - and if you don't do that thing that
74:19 - you're learning again for a little while
74:21 - you will forget it in other words you
74:23 - need to keep repeating and keep doing
74:25 - more of it in order for it to get
74:27 - entrenched in your
74:29 - memory so you can absolutely learn the
74:31 - basics in a month maybe two or three
74:34 - depending on how much time you're
74:35 - putting into it and how much focused
74:38 - energy you're putting into
74:40 - it the key message here though is to be
74:43 - prepared that whatever the timelines
74:45 - you're being sold on what they're not
74:48 - telling you is how much time you've got
74:50 - to put in per day to achieve that
74:52 - timeline and that's what you need to
74:54 - factor in coding takes a lot of time now
74:58 - you never actually stop learning to code
75:01 - but that's partly because coding takes
75:04 - so much more time than you expect and
75:07 - because it takes so much more time you
75:09 - learn for much longer periods of time as
75:11 - you wait through it so if you do happen
75:14 - to think that you're going to Learn
75:15 - Python in two weeks and build a an email
75:18 - or Twitter bot in the week after you
75:20 - absolutely could by copying it from a
75:23 - tutorial and working your way through
75:25 - that but it's not really meaningfully
75:29 - learning the actual skill of what you're
75:31 - putting together you're just copying it
75:33 - from a tutorial and lots of people
75:35 - confuse the ability to build an
75:38 - application with actually learning to
75:41 - program they they're slightly different
75:42 - things it's very easy to follow a
75:45 - tutorial and build a program and you
75:47 - will learn a little bit from doing that
75:49 - but the real real learning comes from
75:52 - getting royally St stuck and getting
75:54 - unstuck can take a lot of time but
75:57 - believe me that's where you do most of
75:59 - the learning where you have the Eureka
76:00 - moments that really make the penny drop
76:03 - and the lesson drive home so coding is
76:06 - not something you can learn very quickly
76:09 - you can absolutely learn the basics
76:10 - fairly quickly but you need to practice
76:12 - it to become good and the best learning
76:15 - unfortunately happens when you get stuck
76:18 - and when you get stuck it takes a lot of
76:20 - time to get unstuck therefore the best
76:23 - learning which happens out of getting
76:24 - stuck takes a lot of time because
76:27 - getting unstuck takes time and I hope
76:28 - you see that logic there so let's recap
76:31 - quickly you can absolutely learn to code
76:34 - well and learn to program a computer
76:36 - very well over time you get faster at
76:38 - picking up new things the more you learn
76:40 - and as more time goes on but inherently
76:43 - it's not a quick process so do not set
76:45 - yourself up for failure with
76:47 - unreasonable expectations that you can
76:49 - read a textbook and build your startup
76:51 - this weekend okay I'll see you in the
76:54 - next and final myth okay welcome back in
76:57 - this video we're going to cover the last
76:59 - myth for now myth number five is the
77:01 - last myth at the moment but I want you
77:03 - to know that I will be looking very
77:05 - closely at the information I keep
77:06 - getting especially from information from
77:08 - people like you as to other myths that
77:10 - should be added to this section because
77:13 - this section will have all the content I
77:16 - can find on the myths that need to be
77:17 - dispelled so if you know of other myths
77:20 - that you think affects a lot of people
77:21 - please do let me know this section will
77:23 - keep growing to accommodate those mths
77:26 - because my goal continues to be and will
77:28 - always be to try and remove as many
77:30 - obstacles as I can from your path to
77:32 - learning how to code and myths are a
77:35 - huge obstacle they really do set a lot
77:37 - of people back so if you have ideas
77:40 - please do let me know um but keep coming
77:42 - back to the section to see if anything
77:44 - more has been added because I hope to
77:45 - add a lot more to this all right let's
77:47 - keep going to the rest of myth
77:49 - five okay so the last myth that that
77:53 - we're going to cover for now is that
77:55 - coding is boring and
77:57 - geeky a lot of Pop Culture will have you
78:00 - believe that coding is for just the
78:01 - Nerds and the Geeks and the socially
78:03 - inept but we I think now we can all
78:06 - accept that that's not true anymore as
78:08 - Steve Jobs said everyone should know how
78:10 - to program a computer because it teaches
78:13 - you how to think so if thinking is
78:16 - boring and geeky then we do have bigger
78:19 - problems as a society I guess but if you
78:22 - think that think is important then
78:24 - learning to code just makes you better
78:26 - at something that you already know is
78:28 - important on a more practical note
78:31 - however coding is extremely creative in
78:34 - that sense it is an art that lets you
78:37 - create in software what doesn't happen
78:39 - easily in the physical world from gaming
78:43 - to music to Art to entertainment shows
78:46 - to helping people with disability using
78:49 - software to improve and shape the world
78:51 - around you is very powerful ful and very
78:54 - very creative software is absolutely
78:57 - just a tool it's just like an artist's
79:00 - paintbrush or a sculptor's chisel you
79:03 - use it to shape the world around you and
79:05 - to give form to the ideas and
79:08 - Imagination in your head today your
79:11 - imagination can be converted to reality
79:13 - through code something that for the M
79:15 - for the vast history of mankind we
79:17 - couldn't do what makes coding really
79:20 - special is that it's not just an art it
79:22 - is extremely extremely practical and it
79:25 - requires you to constantly solve
79:27 - problems some problems are hard some
79:30 - problems are just really unusual and
79:32 - interesting but the science does show
79:35 - unequivocally that solving problems
79:37 - gives the brain a chemical rush and
79:39 - lights up all the reward centers in your
79:41 - brain so quite literally solving good
79:44 - problems makes people happier and more
79:47 - fulfilled and coding is all about
79:49 - solving problems now imagine doing
79:53 - something that makes you happier the
79:54 - more you do it that doesn't sound like
79:57 - work at all right so if the popular
80:00 - narrative is that coding is for geeks
80:02 - well try it out for yourself lots of
80:05 - cool people code the world has never
80:07 - loved coders more and to top it all off
80:09 - it's highly creative deeply satisfying
80:12 - and good for you mentally and
80:13 - emotionally and it puts you in a flow
80:15 - state so if you want a code be proud of
80:18 - it go for it it's fantastic just keep
80:20 - going and don't hold yourself back
80:23 - because of these kind of myths and
80:25 - falsehood okay welcome back um we're now
80:28 - at the last video of this section for
80:30 - now I know we've had a big section going
80:32 - through all the myths and the
80:33 - misconceptions that often can bring us
80:35 - down and derail us in our approach to
80:38 - coding I know some of you may not want
80:40 - to hear this right now and I know you
80:42 - may not even really be ready for this
80:44 - but I would strongly encourage you to
80:46 - pause for about 15 to 20 minutes now and
80:49 - revisit the goals and plan that you had
80:51 - put together at the end of section one
80:53 - if you remember section one was all
80:55 - about the five ws and how that
80:57 - influences your goal setting and on the
81:00 - back of which you can build a proper
81:01 - plan now is a good time to go back and
81:04 - revisit that revisit that plan because
81:07 - now that you've understood the mths and
81:09 - false expectations that often
81:11 - subconsciously influence our decision-
81:14 - making you may see maybe you won't but
81:17 - you may see that your plan and goals
81:19 - reflect those false assumptions those
81:22 - false expect expectations and those
81:23 - myths if they do now is a great time to
81:26 - revise your plan and goals taking into
81:29 - account what you've learned in this
81:30 - section about mths and removing those
81:32 - mths from your plan the benefit of that
81:35 - is it makes your plan much more strong
81:37 - and much more achievable for you and I
81:40 - know I've hopped on this several times
81:41 - so far in this course but it's really
81:43 - important that your goals are robust so
81:46 - that that reduces the ODS that you're
81:48 - going to fail or give up that is very
81:50 - very important remember it's one of our
81:52 - shared goals goals on this program so go
81:54 - back and do that now for about 10 or 15
81:56 - minutes if you need to adjust your plan
81:59 - to reflect what you've learned in the
82:00 - section go ahead and do it and take the
82:03 - time to do it right very importantly if
82:06 - you found some myths or expectations had
82:09 - crept into your plan and goal setting I
82:12 - would really love for you to share that
82:14 - in the Q&A with your peers help your
82:16 - peers to see what you saw after coming
82:19 - this far in the course and maybe that'll
82:21 - help them revisit their plan that will
82:24 - also help them learn what you have
82:26 - learned likewise you can learn from
82:28 - others who've shared on the forums so
82:30 - this makes it a much richer experience
82:32 - for all of us and I personally would
82:34 - absolutely love to see things through
82:36 - your eyes and read about your experience
82:39 - revisiting your plan in the forums
82:42 - because I think that will help me make
82:43 - this an even better course for you to
82:45 - return to all right well I'll see you in
82:47 - the next section cuz it's going to be
82:49 - fun so in this section what I'd like to
82:51 - talk to you guys about is some of the
82:54 - big gotchas right these are things that
82:57 - are really high risk factors and this
83:00 - wasn't actually this section wasn't
83:01 - there in the original course and the
83:03 - reason I added it is in the last you
83:05 - know 3 or four years I've coached
83:06 - several hundred students on career
83:08 - change to code and I've noticed a few
83:11 - patterns and these patterns are what I
83:13 - call the risk factors okay so I want to
83:14 - cover them all with you because you're
83:16 - going to get the benefit of all the work
83:17 - I've done over the last four years with
83:19 - hundreds of students and you're going to
83:20 - see the main reasons why people fail
83:24 - especially in either learning to code or
83:26 - career change which you know are two
83:27 - different things so in identifying these
83:29 - risk factors they're like potholes on
83:31 - the road or big you know barricades in
83:32 - the middle of the road and so by knowing
83:34 - them in advance your forearmed is for1
83:37 - right or is it the other way around for
83:38 - wand is forearmed that's what the
83:39 - correct way of the of saying it is so
83:42 - now that you have the knowledge in
83:43 - advance you're able to actually avoid
83:46 - the problem so the let's start here the
83:50 - the the biggest RIS factors there are a
83:52 - number of of them and I'm going to
83:53 - classify them by different types the
83:55 - first type is avoidant behaviors right
83:57 - and even within this there are broadly
83:58 - two categories the first is you actually
84:01 - know what you need to do you know it you
84:03 - don't like it you don't you may not want
84:05 - to do it but you know what you have to
84:06 - do and yet you don't do it and very
84:09 - often these can be things like actually
84:11 - putting in the time required or very
84:13 - commonly not jumping around from one
84:15 - resource to the other not abandoning
84:16 - things in the middle right sticking with
84:18 - it till the end even if you're really
84:20 - not having fun with it but as long as
84:22 - it's moving you closer to your goal now
84:23 - often the excuse will come up hey I
84:26 - don't actually know this is moving me
84:27 - closer to your my goal and you need to
84:30 - have the self-awareness to distinguish
84:32 - between an excuse and a reason often we
84:36 - use excuses and make them look like
84:38 - reasons and all we're trying to do is
84:39 - avoid the situation so avoiding
84:41 - behaviors category one is knowing what
84:43 - you should do but still not doing it
84:44 - anywhere the second type of avoidant
84:47 - behavior is sticking within your comfort
84:49 - zone which when you start to think about
84:51 - it is kind of evidence in the first one
84:53 - as well how did this show up it means
84:56 - that you don't want to learn something
84:57 - new because you're struggling with it or
85:00 - you don't want to ask questions on stack
85:01 - Overflow because you're worried about
85:03 - rejection or you don't want to ask
85:04 - another coding friend that your friend
85:06 - who codes because you're afraid of what
85:07 - their judgment will be with you or you
85:09 - don't want to announce to the world that
85:11 - hey this is my intention this is what
85:12 - I'm going to do uh you guys can laugh at
85:14 - me or think I'm crazy or encourage me
85:16 - whatever you do I know that this is what
85:18 - I want to do and I'm going to do it but
85:19 - that takes obviously a certain amount of
85:20 - coverage and a certain amount of
85:21 - willingness to be outside your comfort
85:22 - zone so if you stick within your comfort
85:25 - zone what ends up happening is you only
85:27 - take the actions that you're already
85:28 - comfortable doing but we know has not
85:30 - already produced the results you want
85:32 - and if you keep repeating the things you
85:34 - already have done before but expect a
85:36 - completely different outcome you're
85:38 - going to be disappointed right so part
85:40 - of sticking or not sticking in your
85:42 - comfort zone is to take actions that
85:43 - you've never done before even if they're
85:45 - deeply uncomfortable and using that as a
85:47 - learning experience and one way to think
85:49 - about that is as an old saying I I don't
85:51 - fail I lie I either succeed or I learn
85:54 - now you may argue the semantics of that
85:56 - but there's a very powerful message in
85:57 - there which is your attitude to the
86:00 - outcome is what will determine the value
86:02 - of that outcome to you you can either
86:03 - view to view you can choose to view it
86:05 - as successful or a failure or you can
86:07 - choose to view it as successful and a
86:08 - learning experience or you can choose to
86:10 - experience it or view something as just
86:13 - failure in which case you're very likely
86:14 - to put yourself in a negative emotional
86:16 - state and discourage yourself from
86:17 - trying again now the other typ types of
86:20 - R risk factors are what I call the five
86:21 - un estimation and there are five big
86:23 - ones the first one is underestimating
86:25 - yourself typically things like I'm not
86:27 - good at math I'm not good at this I'm
86:28 - not good at that the fixed mindset kind
86:30 - of stuff which is an underestimation of
86:32 - yourself I firmly believe that we're all
86:35 - human beings we're all fundamentally the
86:36 - same and we all have practically for all
86:39 - practical purposes unlimited
86:41 - intellectual potential if we put in the
86:43 - time and the effort right that's not
86:44 - true for everybody I agree but usually
86:47 - if you're kind of above average
86:48 - intelligence or even if you're above if
86:50 - you're just at average intelligence
86:51 - you're still capable capable of as much
86:53 - as somebody who you would consider super
86:54 - high IQ right I see no correlation
86:56 - between that and a lot of successful
86:57 - people are a pretty average intelligence
87:00 - in fact I dare dare say that if you're a
87:02 - little bit honest with yourself and I've
87:03 - thought about this a lot in my life
87:05 - people who are less smart either at
87:06 - school or college or you know whatever
87:08 - subject or less talented than you have
87:11 - possibly overtaken you career-wise or
87:13 - financially or emotionally whatever you
87:15 - know metric you use and that just goes
87:17 - to show that just having the RO Talent
87:18 - the ability is not enough you need to uh
87:21 - correctly um align yourself with your
87:23 - goal and then just go for it and believe
87:25 - in yourself so underestimating yourself
87:26 - is a major major risk factor the second
87:29 - is underestimating the path that you're
87:31 - going to be on like look I I remember I
87:33 - once went for a hike here in Australia
87:35 - and I did not read the weather fast
87:37 - carefully and it was actually snowing on
87:38 - top of the mountain and I was in shorts
87:40 - now as you can imagine I was terribly
87:42 - underprepared for that right I had all
87:43 - the information I needed I just didn't
87:45 - bother to look at it properly I was
87:46 - Reckless I was actually careless and so
87:48 - when I was there I really suffered quite
87:51 - acutely and so underestimating the path
87:54 - will cause a lot of problems a lot of
87:56 - failure and worst in in things like it's
87:57 - one thing to climb a mountain it's
87:58 - another thing to to en Endeavor on a
88:01 - thing like career change or learning a
88:03 - complex new skill that moves very fast
88:05 - this coding moves really fast is if you
88:08 - underestimate the path and you encounter
88:10 - problems that are expected but you think
88:12 - they're not you're going to blame
88:14 - yourself you're going to think you're
88:15 - not smart enough you're not you're not
88:17 - work you're not cut out for it you're
88:19 - never going to be able to compete you're
88:20 - going to blame yourself even though what
88:22 - you're going through is actually quite
88:23 - normal right now the third thing is
88:25 - underestimating the time it takes to get
88:27 - it Mastery most people make the mistake
88:29 - of thinking I'll learn a bit of HTML and
88:31 - CSS and some JavaScript and I will then
88:33 - be
88:34 - employable that's not true because the
88:37 - reality is that's like saying I know a
88:38 - little bit of English so now I can go
88:40 - and be a judge right these are just the
88:42 - tools the language whether it's HTML CSS
88:44 - Java JavaScript Scala whatever you want
88:46 - to call it python whatever these are
88:48 - just tools right and I've often said
88:50 - this on LinkedIn that your job is is not
88:52 - learn how to play a musical instrument
88:54 - like using a musical metaphor your job
88:56 - is to know how to create music that
88:58 - people want nobody cares what instrument
89:00 - you use really at the end of the day and
89:02 - so if you want to get Mastery level at a
89:06 - given instrument it's going to take a
89:07 - lot of time and to be employable you
89:09 - need to have Mastery level you don't
89:11 - need to be the world's foremost expert
89:13 - not at all but you need to have a
89:15 - professional standard of skill without a
89:17 - professional standard of skill why would
89:19 - anyone employ you to do this
89:21 - professionally right you're not an
89:22 - amateur you need to be a professional
89:23 - level of skill now the next thing is
89:25 - underestimating the competitive
89:27 - landscape which kind of links in a bit
89:28 - with the previous point which is you're
89:30 - competing with professionals you may be
89:32 - at an amateur level you can't compete
89:34 - with a professional when you're at an
89:35 - amateur level right so set the goal
89:37 - correctly don't underestimate the kind
89:39 - of time it's and effort it's going to
89:41 - take to get to professional levels of
89:42 - skill and then optimize to get there as
89:45 - fast as you can and do not underestimate
89:46 - the competitive landscape as a career
89:48 - changer in my late 30s I realized that
89:50 - most of my competitors were probably 10
89:53 - to 15 young years younger than me my
89:55 - bosses were all going to be younger than
89:57 - me which turned out to be true and still
89:58 - is and so you need to understand that
90:00 - these are people who've been there 105
90:02 - years ahead of you you've been coding
90:03 - for 10 15 20 years some of them have
90:05 - been coding since they were you know 13
90:06 - or 14 and they're 5 years younger than
90:09 - you or they were in my case and there's
90:11 - no way I could actually expect to beat
90:13 - them in an interview all I could do is
90:15 - be a better cand it which is you know a
90:16 - completely different skill so you have
90:18 - to correctly estimate the competitive
90:20 - landscape and realize that every day
90:22 - hundreds of people with no background
90:23 - still get their opportunities whether
90:25 - it's in coding or some other job or
90:26 - architecture or Law whatever it is you
90:29 - know people without experience get
90:30 - opportunities every day so why not you
90:32 - the question is not is it possible of
90:33 - course it is because it happens hundreds
90:34 - of times every day the question is how
90:36 - is it how do you make it possible for
90:38 - yourself right and you start by not
90:41 - making any of these five
90:42 - underestimations now the sixth
90:43 - underestimation is the process of just
90:45 - drisking yourself and this is because
90:47 - and I I banged on about this quite a lot
90:49 - on LinkedIn is as as candidates our
90:52 - entire worldview is us us us us it's a
90:54 - very me Centric worldview I'm a
90:56 - candidate I'm looking for a job I want
90:57 - to be a coda I'm trying to change my my
90:59 - career and the market doesn't really
91:02 - care right because the market views you
91:04 - as one of many Alternatives that it has
91:06 - to choose from and there's a transaction
91:08 - you give me your services and skill and
91:10 - I'll pay you you know x amount of
91:11 - dollars every year to do that right so
91:13 - that's what the market thinks about you
91:14 - on the other hand are thinking hey I
91:15 - need a job hey I've got to put food on
91:16 - the table hey I've taken all this risk
91:18 - hey I've got a family hey I've got you
91:19 - know all this time that that I could be
91:21 - spending in my other care you're going
91:22 - through all that so you have to
91:24 - understand that in the eyes of the
91:25 - market a career changer is much more
91:27 - risky than someone who's not a career
91:28 - changer someone with no no experience is
91:30 - way more risky than someone with a bit
91:32 - of experience and so when you are
91:34 - presenting yourself to the market to try
91:36 - and change career and get a job as a
91:37 - coda or in fact any other career you
91:40 - have to understand how you're viewed as
91:42 - a risk and then systematically drisk
91:45 - yourself in the eyes of the hiring
91:46 - manager right and if you underestimate
91:49 - what that takes no matter learning code
91:51 - algorithms and data structure is going
91:52 - to help you because you're still going
91:53 - to appear risky to the to the person and
91:55 - keep in mind learning a lot of code
91:57 - doesn't help if you don't have a single
91:58 - interview right it's like being all
92:00 - dressed up with no no date right to go
92:03 - with so you want to make sure that
92:05 - you're not just learning to code but
92:06 - you're also presenting yourself in the
92:08 - market in a way that makes you
92:09 - attractive to employeers and that's how
92:11 - you drisk yourself in the market now
92:14 - some of the other risk factors we talked
92:16 - about this a little earlier is the wrong
92:17 - expectations right look without setting
92:20 - the right expectations you are going to
92:22 - experience what could be a normal
92:24 - friction or a normal setback or a normal
92:27 - failure as a very serious permanent sort
92:30 - of failure okay so in in one of the
92:32 - previous videos I talked about you know
92:33 - how to set goals achieve the goals chunk
92:35 - them down right so if you look at the
92:37 - video on on on how to do a when by
92:40 - learning go objective or learning goals
92:42 - you know when by is better than you know
92:44 - do by dates and stuff like that in that
92:46 - video I talked about chunking things
92:48 - down so that's a good example of how of
92:50 - an opportunity to to set the right
92:52 - expectations when you chunk things down
92:53 - you have to understand and set
92:55 - expectations with yourself about you
92:57 - know how long is this going to take how
92:59 - much effort is it going to take every
93:00 - day how's it going to feel when I'm
93:02 - struggling and I don't have any support
93:03 - and I'm I can't understand something and
93:06 - is that normal is that part of the
93:07 - process it's like if you go you know to
93:09 - the gym for the first time in your life
93:11 - and no one tells you that your muscles
93:12 - are going to hurt the next day you're
93:14 - going to think you've done damage to
93:16 - yourself right and actually no that's a
93:18 - normal and healthy proof of the fact
93:20 - that you're on the right path is cuz you
93:21 - achy muscles the next day but if you had
93:23 - no idea that was going to be the case
93:25 - you would very legitimately expect that
93:27 - hey maybe I've injured myself
93:28 - permanently and you'll be afraid of the
93:29 - gym right so you have to have the right
93:31 - expectations and one of them is also
93:33 - definitely not expecting recruiters to
93:36 - bang down your door just because you
93:37 - know some HTML or css or you know
93:39 - JavaScript or Java whatever like they're
93:41 - not going to be banging down in the door
93:42 - recruiters are looking for the best most
93:45 - experienced candidate they can get for
93:46 - the least price okay that's the nature
93:48 - of the marketplace that's exactly what
93:49 - you would do if you went you know
93:51 - looking for a a lawyer or an accountant
93:54 - or a teacher or a coach You' look for
93:56 - the best value you can get for the
93:57 - cheapest price and that's exactly what
93:58 - hiring managers and and recruiters are
94:00 - doing so don't expect them to bang down
94:01 - your door instead communicate your value
94:04 - right so having right expectations on
94:07 - what each step of your journey feels
94:09 - like even when you chunk it down is
94:11 - absolutely critical now a lot of people
94:12 - say oh you know I know coding is meant
94:14 - to be hard it's not easy and they say it
94:17 - like an abstract concept yeah of course
94:18 - it's not easy I don't expect this to be
94:20 - easy okay do you expect it to be hard
94:21 - yes I expect it to be hard but what does
94:23 - that mean what does hard mean in
94:26 - practice what is the actual day-to-day
94:28 - experience of doing something hard feel
94:30 - like and typically it is I don't know
94:32 - what to do next I have no I don't
94:34 - understand what I'm studying right now
94:35 - my code doesn't work this algorithm of
94:37 - data structure makes zero sense to me
94:39 - I'm not able to communicate the solution
94:41 - I cannot build an application I don't
94:42 - even know where to start I don't know if
94:44 - I'm in the right direction if only I had
94:46 - a plan all of these things that you're
94:48 - going through are normal because that's
94:51 - Frank L what happens when you do hard
94:52 - things all these doubts happen right and
94:54 - especially self-d am I good going to be
94:56 - good enough I'm not good enough in math
94:57 - am I going to be able to smart enough be
94:58 - smart enough to convince the hiring
95:00 - manager all of that doubt that emotional
95:02 - battle the fear that you have to battle
95:04 - that's kind of part of what hard things
95:06 - are that is exactly what hard things are
95:09 - meant to feel like that is what hard
95:11 - means is that emotionally intellectually
95:15 - physically certainty wise it's a very
95:18 - hard problem to solve that's what hard
95:19 - means right so having the right
95:20 - expectation when you say yeah I know
95:22 - this is going to be hard understand that
95:24 - that's really what it means for a long
95:25 - period of time and you don't know when
95:27 - that's going to end you honestly don't
95:28 - right you just had to keep going until
95:30 - you get closer and and you know having
95:32 - the right expectations on time is also
95:34 - critical right we talked about in this
95:35 - in the in the previous risk factor if
95:37 - you have the wrong expectations about
95:39 - how long some things are going to take
95:40 - you're going to switch first thing
95:42 - you're going to do is you're going to
95:42 - say this resource is not right for me
95:44 - this person is not right for me uh this
95:46 - language is not right for me uh this
95:49 - career is not right for me Etc things
95:51 - are going to to take time the the
95:52 - challenge is this is why it gets hard is
95:54 - you don't know how much time is actually
95:56 - reasonable right and so that's why
95:58 - taking having no wrong expectations
96:00 - about the time my general rule is not
96:03 - just about coding guys about everything
96:04 - in life is you have a secret hope that
96:07 - it's going to take you x amount of time
96:08 - triple it and if you're not willing to
96:10 - do three to four times more time than
96:12 - how what you secretly hope it's going to
96:13 - be don't even start because you're just
96:15 - going to give up right but if you're
96:17 - willing to say okay I hope this is going
96:18 - to happen in let's say you know 2 months
96:20 - but if it doesn't happen in in 6 months
96:22 - or if it doesn't happen in 12 months
96:24 - then I know there's a problem but if it
96:26 - doesn't happen in 2 months okay maybe I
96:28 - just underestimated you know so don't
96:30 - have these arbitrary deadlines make sure
96:32 - that you have the right expectations in
96:33 - terms of how long it's going to take
96:35 - right the next one really important
96:36 - these days in 2023 onwards do not go by
96:39 - social media and chat gbd okay neither
96:42 - of them are going to help you change
96:44 - career nor are they going to help you
96:45 - learn to code these are tools now of
96:47 - course this is going to be
96:49 - controversial can you learn how to do
96:50 - something using chat GPD and some
96:52 - influence on social media sure you can
96:54 - learn how to do something from anybody
96:56 - right because you can always learn
96:57 - something that's not the yard stick the
96:59 - art stick is is this actually going to
97:01 - take you significantly closer to your
97:03 - goal such that investing your time in it
97:05 - is a Justified investment right now chat
97:08 - GPD is just a big AI tool it's just
97:10 - going to you know do statistical
97:11 - averages and spit out responses and I
97:12 - can tell you I I've been using AI in my
97:14 - coding job for over a year now well
97:16 - before CHD became a really big thing and
97:19 - I can tell you it is often wrong enough
97:22 - that I need to spend some time figuring
97:24 - out what to do with it or it's more
97:26 - right when I ask it a better question
97:28 - which by the way is exactly what Google
97:29 - was like right it's just that it's basic
97:31 - chat basically I would say is a very
97:33 - advanced Google Search right now now in
97:34 - the future it could do things um that
97:36 - you know we currently can't do and in
97:37 - the future AI will replace fairly
97:40 - repetitive things maybe I don't know you
97:41 - know maybe like CSS or HTML or some you
97:43 - know data analysis I don't know it could
97:45 - replace any number of things I actually
97:46 - think it's going to replace things in
97:48 - the medical profession and the legal
97:49 - profession like it's going to replace
97:51 - some things in a lot of professions but
97:53 - that doesn't mean jobs are going to go
97:55 - all it means is jobs are going to
97:56 - require slightly different skills so
97:58 - jobs won't go down jobs which AI takes
98:01 - over may not exist anymore but that's
98:03 - always been how it was right there was a
98:05 - time when you'd have char charers around
98:07 - in the street all the time and then you
98:08 - had showers and now you just drive
98:10 - yourself right like that's just how
98:11 - things are it's not that the jobs go
98:12 - away or the need goes away it's that the
98:14 - nature of the skill will change and
98:15 - that's where you can absolutely get an
98:17 - advantage is by being ahead of the curve
98:20 - in terms of what skills are going to be
98:21 - need it right so Social Media Chat gbd
98:24 - don't go by the expectation set by them
98:26 - here's my general rule if somebody gives
98:28 - you a point of view and they haven't
98:31 - done what you're trying to do it's an
98:34 - opinion at best okay and advice can only
98:38 - come from someone who's actually done
98:39 - what you're trying to do everything else
98:40 - is an opinion so use that sort of mental
98:43 - model to figure out who to listen to
98:44 - online and chat whatever it is that
98:46 - you're using all right now uh the other
98:49 - wrong expectation is that your recruit
98:51 - is are going to be interested in you
98:52 - just because you know how to code no cuz
98:54 - frankly there are hundreds and hundreds
98:55 - and hundreds of people in every city
98:57 - that know how to code and who are also
98:58 - competing for the same job as you so the
99:00 - way to get recruited interest is not
99:02 - simply to show that hey I've learned a
99:04 - little bit of you know HTML JavaScript
99:06 - CSS python whatever no you got to get
99:09 - recruiter interest by showing that
99:10 - you're highly employable with the skills
99:12 - you have because you can solve real
99:13 - problems that the recruiter's clients or
99:15 - the company needs to solve which means
99:17 - you got to know a lot more about the
99:19 - company and this is for career changes
99:20 - specifically it's a different thing if
99:21 - you're coming out of uh college and you
99:23 - have recruitment on campus or you know
99:25 - you've got some internships lined up and
99:26 - that's how you're going to get the job
99:27 - that's different right cuz they already
99:29 - know you the hardest thing is getting
99:31 - the first interview not passing the
99:33 - interview is also hard but what's the
99:35 - point of preparing to crack the coding
99:37 - interview if you don't have a single
99:38 - interview right so how to get interviews
99:40 - how to get recruiter interest in a
99:41 - competitive Marketplace is something
99:43 - that you should not have the wrong
99:44 - expectations about it's hard you're
99:46 - competing with people that look way
99:47 - better than you on paper so the question
99:49 - is how do you show value how do you show
99:51 - you can do the job without doing the
99:53 - same thing that everybody's doing right
99:55 - you got to not just stand out you got to
99:57 - stand apart like one of my recruited
99:58 - friends Dave he he mentioned this stand
100:01 - apart not just stand out right and there
100:02 - are ways to do that you just got to
100:04 - figure out what works for you and get
100:05 - the right help in terms of the right
100:06 - guidance if that's what you need
100:09 - now a common question I get is and it's
100:12 - sort of linked to the expectation stuff
100:13 - is how do I know this is going to work
100:15 - right how do I know this is going to
100:16 - work well you don't the short answer is
100:19 - you don't you have it's exactly like a
100:21 - business you don't you have a good hunch
100:23 - of the products going to be great you're
100:24 - going to be able to you know sell it
100:25 - well in the market but you don't know
100:27 - and typical like any other startup it's
100:29 - iterative you try something works
100:31 - doesn't work you get some feedback you
100:32 - improve it the next time and you keep
100:34 - you know cycling through that now
100:36 - there's a guy called Alex harosi who you
100:38 - know who's an entrepreneur that I
100:39 - followed for a few years and you know I
100:40 - find him quite interesting the way he
100:41 - thinks and like I said most of the
100:43 - lessons I learned that helped me change
100:45 - code actually came from my startup and
100:46 - Entrepreneurship years right it wasn't
100:48 - from theod in fact I got some of the
100:49 - worst advice I ever got from computer
100:51 - science folks or from people who' only
100:52 - ever been in one career which is coding
100:54 - like the serious I did you know coding
100:56 - in in college I've been a professional
100:58 - quter for the last 10 years some of
101:00 - those folks they didn't mean badly but
101:02 - they just gave me some of the worst
101:04 - advice that I actually ended up
101:05 - receiving because they didn't know what
101:07 - career change is all about now this guy
101:08 - is an entrepreneur I was an entrepreneur
101:10 - in in a past life so I understand where
101:12 - this is coming from and this is true of
101:14 - business this is true of career change
101:16 - also right generally if a thing is not
101:19 - working there are three reasons
101:21 - okay and you have to know you have to
101:22 - know which bucket it falls into one is
101:24 - you're pursuing the wrong opportunity
101:26 - right a bad opportunity whether it's
101:27 - business or the career like let's apply
101:29 - this to coding well coding is not a bad
101:31 - opportunity we know that of all the jobs
101:33 - out there in the world today it's
101:34 - probably going to be just like every
101:36 - other job slightly affected by AI but
101:38 - probably not that affected because every
101:40 - business needs take that's not going to
101:41 - go away right every business is going to
101:43 - run on software that's not going to go
101:45 - where right and so we know it's a great
101:47 - opportunity we know there's plenty of
101:49 - potential certainly more than most other
101:51 - careers out there there's plenty of
101:52 - potential okay in my view so we know
101:54 - it's not a bad opportunity okay what are
101:56 - what are the other reasons it could be
101:57 - failing well you've got a bad plan or
101:59 - you're executing it really badly right
102:01 - so right opportunity with a bad plan and
102:03 - terrible execution it's just like the
102:05 - right business idea is not going to work
102:06 - and the last thing is impatience which
102:08 - goes down to having the wrong
102:09 - expectations if you're being impatient
102:11 - not giving it the time it's going to
102:12 - take and it normally organically will
102:14 - take you're going to think this is not
102:17 - working when all it means is it's not
102:18 - working yet because it hasn't taken the
102:20 - time now the analogy that a lot of
102:22 - people you know would would understand
102:23 - here is no matter how much you fertilize
102:26 - and water of seed it's going to take a
102:28 - certain amount of time to germinate
102:29 - become a plant grown under a tree right
102:31 - no matter how much you water it or
102:33 - fertilize it it's not you can't rush
102:35 - that process Beyond a point you can't
102:36 - skip the steps it's kind of the same
102:38 - with career change it's going to take
102:39 - the time it takes same thing with
102:41 - learning how to Cod to a Mastery level
102:42 - or professional level it's going to take
102:43 - the time it takes you cannot skip the
102:45 - steps being impatient is going to make
102:47 - you think you're failing right so these
102:48 - are the three reasons we know it's not
102:50 - we know that coding is not a bad
102:51 - profession we know that coding careers
102:52 - aren't really going anywhere we know
102:54 - that with the right expect uh execution
102:56 - and plan people like me and others have
102:57 - been able to make the change and we know
102:59 - that impatience is another Factor that's
103:00 - going to trip you up so try and avoid
103:02 - each of these three factors Factor one
103:04 - is not a real thing for you guys in in
103:06 - in in coding but you know the the next
103:08 - to bad execution bad plan and impatience
103:11 - are very real things right now let me
103:14 - talk and I know I've been sort of
103:15 - running through this quite fast but the
103:17 - next thing I'd like to mention is that
103:19 - that there are three currencies that we
103:20 - need to think about right because there
103:21 - are really three currencies any of us
103:23 - have we're all born with this in varying
103:25 - degrees okay all all three all of them
103:28 - we're all born with some am of it but
103:29 - they're varying degrees right and so
103:31 - there are three investable resources or
103:33 - three currencies one is money the other
103:35 - is time and the third is energy right we
103:38 - all have these three think of them as
103:39 - three knobs on a music system if you
103:41 - like that you're dialing like bass
103:42 - treble and volume or whatever you want
103:44 - right and so these are three things that
103:46 - we have all of us in varying degrees and
103:49 - we have to invest invest them we cannot
103:51 - avoid it every single day of our life we
103:54 - spending or investing these three things
103:56 - in varying degrees okay now there's a
103:58 - big difference between a cost or an
104:00 - expenditure and an investment an
104:02 - investment is something that has a
104:04 - reasonable likelihood of giving you some
104:06 - gain back okay this is why a car is
104:08 - never an investment right it's always an
104:10 - expenditure because you're always going
104:12 - to lose money on a car once you buy it
104:13 - and then it's always going to go down in
104:14 - value however it has a lot of value to
104:16 - you because it'll help you transport but
104:18 - it's not an investment now you can take
104:20 - education as a classic example of a
104:22 - really great investment there the JW is
104:25 - out there about whether traditional
104:26 - college education still is or not but
104:28 - you know I think most of us agree that
104:30 - having gone to some kind of college is
104:31 - probably better than not having gone to
104:33 - a college it may not have given us
104:34 - everything we wanted but that could have
104:35 - also been wrong expectations or a wrong
104:37 - plan but it's better that we educated
104:39 - than we not it's better to have some
104:41 - college degree or some high school
104:42 - education than to not right so those are
104:44 - also kinds of Investments now the three
104:46 - unavoidable ones right money time energy
104:49 - you have to invest these three guys you
104:50 - have to invest these three and my
104:52 - suggestion is um we always value the
104:55 - thing we have least right which is why
104:57 - you know people with plenty of money who
104:58 - are very successful businessmen or
105:00 - entrepreneurs or CEOs or whatever they
105:02 - have lots of money and they don't have
105:03 - enough time so they will spend a lot of
105:04 - money to save time right they will spend
105:07 - a lot of money to save time and you know
105:09 - when people don't have money they spend
105:10 - a lot of time to to avoid having to
105:12 - spend money right so that's just the way
105:14 - it is so that's why some people can fly
105:16 - and some people will take the train
105:18 - right it's one person has more money
105:20 - than time the other person has more time
105:21 - than money that's generally how it is so
105:24 - there's a little bit of a dilemma again
105:25 - from the business world that comes in
105:27 - here in general and this is called the
105:29 - business tremma it's also true in
105:30 - software engineering project delivery
105:32 - it's also true in most things in life
105:33 - and definitely in career change
105:35 - education skill development and so on
105:38 - you kind of have to choose between three
105:40 - things okay two out of three things
105:42 - because you have those three resources
105:43 - money energy and time now you have a
105:46 - dilemma you can choose two out of the
105:47 - three things on the screen right you can
105:49 - it can either be good and fast good and
105:50 - cheap or fast and cheap it cannot be all
105:52 - three and so this means you have to
105:54 - choose how to invest your resources
105:56 - right if you want it good and fast it's
105:58 - probably not going to be cheap and and
105:59 - you know you can go through all the
106:00 - other combinations in this trilemma
106:02 - right so think about the resources you
106:04 - have in your hands now just because
106:06 - someone else went to Computer Science
106:07 - school doesn't mean you have to just
106:10 - because someone else taught themselves
106:11 - for free and took four years doing it
106:13 - doesn't mean you have to use the
106:15 - resources you have everybody has some
106:17 - resources that they have in some
106:18 - combination of these three okay time
106:19 - money and energ use the resources you
106:22 - have don't be afraid to invest all three
106:24 - if you need to to get ahead and save you
106:26 - know save the time or save the money
106:28 - whatever it is that you're saving okay
106:29 - if you're working full-time then energy
106:31 - is also at a premium right would you
106:33 - save spend a little bit of money to save
106:35 - a bit of energy maybe right that's what
106:37 - exactly what you do anytime you take
106:38 - public transport instead of ride instead
106:39 - of walking is you're spending money to
106:42 - save time and energy right so use your
106:44 - three resources as best you can you
106:46 - don't I'm not saying go crazy and you
106:48 - know spend all your time doing something
106:49 - and spend all your money I'm just saying
106:51 - don't be afraid to spend the resources
106:52 - you have CU everybody has these three
106:53 - resources in different points right and
106:55 - you need to accept that there's a
106:57 - trade-off there's a very very real
106:58 - trade-off now for example I'm a big fan
107:00 - of free code Camp I you know learned a
107:02 - little bit of the basics when I started
107:04 - out free code Camp you know I I really
107:07 - have written a lot for free Cod Camp
107:09 - because I really believe it's an
107:09 - incredibly valuable resource and all
107:11 - that and it's free right it's very very
107:14 - good in my opinion it's not necessarily
107:18 - the fastest way you can do how do I know
107:19 - this because well people choose to go to
107:21 - boot camps in 3 months they could do it
107:23 - probably faster if they were you know
107:24 - working part part time or full-time now
107:26 - I have other views on boot camps and
107:27 - stuff cuz it may not work for everybody
107:29 - but the point is just because something
107:31 - is free doesn't necessarily mean it's
107:33 - the right thing for you or inversely
107:35 - just because something is fast doesn't
107:38 - mean it's going to get you the result in
107:39 - a quality way or just because something
107:41 - is expensive doesn't mean it's going to
107:43 - be good you have to figure out what's
107:45 - the right combination for you
107:48 - okay right ch two out of three like I
107:51 - said now there's one say that this guy
107:53 - Ben Franklin once said which really
107:55 - really affected me in fact it drove a
107:57 - lot of my investments in my mid-30s in
107:59 - myself and education and getting better
108:01 - and self-development and stuff and he
108:02 - said if you think education is expensive
108:05 - try ignorance right and it's really true
108:07 - it's really really true we're so aware
108:10 - of the fact that you know things will
108:11 - cost us time money or energy or things
108:13 - aren't easy but think about this not
108:15 - doing it is probably going to be much
108:17 - worse right so if you think something's
108:18 - expensive whether it's time money or
108:19 - energy expensive in any other way
108:21 - emotionally whatever it is then try not
108:23 - think about what not having it is going
108:25 - to cost you as well right that's the
108:26 - main lesson from this thing now let me
108:28 - quick quickly recap the major risk
108:30 - factors we've talked about we talked
108:31 - about the fact that hard things are
108:32 - really hard and we need to accept what
108:34 - hard actually means every day in
108:36 - granular detail on a day-to-day basis
108:39 - right understand what that actually
108:40 - feels like in person we've talked about
108:42 - the fact that if you know what to do
108:44 - well then maybe do it if you're not
108:46 - doing it cuz often That's a classic risk
108:48 - factor you you know what action to take
108:50 - but you don't take the action right and
108:52 - the other thing is you need to be living
108:54 - on the edge of your comfort zone if not
108:55 - slightly outside it not too far outside
108:57 - but certainly slightly outsid it because
108:59 - that's where the growth is going to
109:00 - happen and that's where you're going to
109:02 - learn what you need to learn to expand
109:04 - your own Horizons inside your comfor
109:06 - Zone you're not going to expand your
109:07 - horizons all right next is we talked
109:09 - about the three different types of
109:10 - currencies the investable resources that
109:11 - everybody has which is time energy money
109:13 - and everybody has them in different
109:15 - varying degrees so invest what you've
109:17 - got heavily right and don't hold
109:19 - yourself back from investing other
109:20 - things just because you think it's going
109:21 - to be hard inconvenient costly you don't
109:23 - like to lose whatever it is really think
109:25 - about your investable resources and
109:26 - think like a CEO or an investor or
109:28 - Finance person and say I've got these
109:30 - finite resources I want to double my
109:31 - resources how do I do it right that's
109:34 - why people spend money to save a lot of
109:35 - time that's why people go to college
109:37 - because they could do it themselves but
109:38 - it's probably going to take them five
109:39 - years instead of three years and that
109:40 - two years is you know worth $200,000 to
109:42 - them or $300,000 to them so think about
109:45 - the cost of not doing something not just
109:47 - the cost of doing something in terms of
109:48 - time energy and money your three big
109:50 - investable resources and the third is
109:52 - accept that no matter what choice you
109:53 - make they're going to be trade-offs
109:55 - right be very clear on the trade-offs
109:57 - very very clear on the trade offs so
109:58 - that you're emotionally comfortable with
110:00 - them when you make them right if you're
110:02 - going to spend money for something
110:03 - accept that you're going to spend money
110:05 - and there's a risk that you may not get
110:06 - all that you hoped out of it the
110:08 - question is are you going to lose the
110:09 - money not really you're going to learn
110:11 - something it may not be everything that
110:13 - you hope for right or you're going to
110:14 - spend you're going to save the money but
110:16 - you going to put the dream at big risk
110:18 - because it could take 5 years and you
110:20 - could give up along the way that's what
110:21 - I see happening most often or you could
110:23 - you know try and take a shortcut and say
110:25 - I'm going to do you know this thing
110:26 - because somebody said I could do this in
110:28 - 90 days and I'm going to do that and I'm
110:29 - going to spend money on doing it in 90
110:30 - days and then you've but you don't
110:32 - aren't actually willing to put in the
110:33 - time and the energy you're willing to
110:35 - put in the money and you're willing to
110:37 - you know Let it go as fast as it'll go
110:39 - but you're not willing to invest the
110:40 - time and the energy into it and you're
110:41 - trying to take a shortcut that won't
110:43 - work either so accept the tradeoffs for
110:44 - everything you do right so you know
110:48 - learn to sell the difference between EX
110:50 - expending a resource and investing it
110:51 - and finally remember that even though
110:53 - coding is a great career for many you
110:56 - know it's not that there's something
110:58 - wrong with the coding career if you're
110:59 - not making progress so it's not that
111:00 - there's something wrong with you it
111:02 - could be that you have the wrong
111:03 - expectations it could be that your
111:04 - plan's not right it could be that you're
111:05 - not executing the plan correctly or it
111:07 - could just be that you're being too
111:09 - impatient right I'm not saying it's easy
111:10 - to know I'm just saying really think
111:12 - hard about which one this is because
111:14 - it's more likely to be that than the
111:15 - fact that you're not smart enough or
111:16 - that coding is not the right thing for
111:18 - you those are very rare actually to be
111:19 - hon Hest it's much more often the
111:21 - combination of wrong expectations
111:23 - impatience and bad plan okay so that's
111:26 - it for the big risk factors I'll see you
111:28 - in another video okay welcome back in
111:31 - this section we're going to talk about
111:32 - some of the fundamental decisions that
111:34 - you have to make as you start your
111:36 - journey to code now these decisions are
111:39 - quite important but I do want you to
111:41 - understand that there are no perfectly
111:43 - right universally accepted right
111:45 - decisions to be made but there are wrong
111:49 - decisions and when I say wrong what I
111:51 - mean is that they're costly to you some
111:54 - decisions can cost you a lot of wasted
111:56 - effort time and money and we want to
111:59 - avoid these things because they're
112:00 - sources of discouragement and
112:03 - demotivation keep in mind that this
112:05 - course is meant for people who have
112:07 - started their journey and also for those
112:09 - who've never even come close to coding
112:11 - before so in this section in the next
112:14 - bunch of videos we will cover some
112:16 - fundamentals as viewed from the
112:18 - perspective of someone who has never
112:20 - touched code
112:21 - before while I say these decisions are
112:24 - fundamental the reason I say that is
112:26 - because they're just starting points and
112:28 - very important critical starting points
112:30 - on your journey to code but don't be
112:33 - fooled into thinking that that makes
112:35 - them difficult these are not
112:36 - intrinsically hard decisions but they
112:38 - can be confusing and that's why a lot of
112:41 - people get tripped up and frustrated by
112:44 - this process and an enormous amount of
112:46 - energy and time is wasted on some of
112:48 - these fundamental decisions which later
112:50 - Pro to be Irrelevant in the larger
112:52 - scheme of things for example we're going
112:55 - to cover fundamental things like
112:57 - choosing a programming language that's
112:58 - right for you what is an IDE and which
113:01 - one should you try and use does it even
113:04 - matter or identifying skills that match
113:07 - your objectives so that you can be
113:09 - focused on what really matters which is
113:10 - achieving your goal unfortunately though
113:13 - I cannot make these decisions for you
113:16 - but I can give you the tools and insight
113:18 - that you need to make really smart
113:21 - decisions okay great let's get started
113:24 - the stack Overflow insights page which
113:27 - has the summary of the developer survey
113:29 - results from 2018 more
113:32 - than 100,000 developers told us what
113:35 - they enjoy Etc so let's go down to
113:37 - technology and it tells us here we go
113:39 - most popular
113:41 - Technologies well javascript's right up
113:43 - there this is all respondents let's take
113:45 - a look at professional developers Ah
113:47 - that's also JavaScript so you can see
113:49 - that web development seems to be
113:51 - especially front-end when web
113:52 - development seems to here too the
113:54 - majority for uh professional and coders
113:57 - generally a lot of them seem to like
113:59 - these Technologies and they're the most
114:01 - popular now that's probably just a Sher
114:03 - count just the share numerical value of
114:05 - how many people want to do these
114:07 - languages let's see what's at the bottom
114:08 - of the list Pearl not a very popular
114:12 - language you know Swift Ruby type script
114:15 - Les somewhere in the middle C++ appears
114:18 - to be more popular Python's quite High
114:20 - Java is very high SQL you know database
114:23 - now you may not you don't need to know
114:24 - all of these languages that's really
114:26 - important to know but what I'm trying to
114:28 - say here is you can reasonably infer
114:30 - that a really popular language is likely
114:33 - to have a lot of support around it for
114:34 - example a lot of easily accessible
114:37 - material now let's also look at it from
114:39 - the point of view of which language is
114:42 - popular from the industry's point of
114:44 - view you know from an industry demand
114:45 - point of view so we can take a look at
114:48 - well top paying is one way to do it
114:50 - let's quick take a quick look at most
114:52 - loved Reddit and wanted cuz I find that
114:53 - quite
114:54 - funny so we see the most loved language
114:57 - is rust um most dreaded language is
115:00 - Visual Basic and these are interesting
115:02 - things to know not necessarily directly
115:04 - relevant for your decision to choose a
115:07 - language I'd go with the most popular
115:09 - Technologies and then look at the top
115:11 - paying and see if that matches to your
115:13 - goals if it doesn't you need to have
115:15 - some real hard thinking about what
115:17 - matches to your goal so in terms of the
115:19 - indry demand which language is there a
115:22 - lot of demand for one way to look at it
115:23 - as well which ones pay the top dollar
115:26 - for so this could just be because
115:28 - there's a lot of demand for these but
115:29 - not enough Supply but it may not be a
115:33 - general purpose sort of language it
115:34 - could be quite specific and Niche and
115:37 - therefore may not be suited to your
115:38 - learning goals but it's interesting to
115:39 - see here that the top pain Technologies
115:41 - are languages like FSH and O camel
115:44 - closure groovy and pearl which was you
115:47 - know not what not a favorite language
115:49 - but quite in demand and if you scroll
115:51 - down to the bottom you'll see JavaScript
115:53 - HTML and CSS are you know not associated
115:57 - with the highest salaries in fact
115:59 - they're probably the lowest salaries and
116:00 - the reason is there's probably a ton of
116:02 - Supply at that area nothing wrong with
116:04 - that it also means that there's probably
116:05 - a lot of jobs there just may not be high
116:07 - paying jobs so that looks at it from the
116:10 - demand point of view now let's have a
116:11 - think about how do we find beginner
116:13 - friendly language as well there's not a
116:15 - great deal here that talks about that
116:17 - opinion so I'll just go to Google and
116:19 - say
116:20 - um beginner
116:22 - friendly oh there you go programming
116:24 - language and we'll just start with this
116:26 - entry which is just an except that
116:28 - Google gives me which talks about well
116:32 - JavaScript python
116:35 - Ruby what what else do they have at this
116:37 - coded Dojo site I'm just clicking on the
116:39 - first one that came up so this
116:41 - JavaScript python Ruby Java not sure
116:45 - what block lay is um but these are
116:48 - really apparently they consider them to
116:50 - be uh the top five programming languages
116:53 - it's a bit dated but I don't think too
116:54 - much has changed it's fair to say
116:55 - JavaScript Python and Ruby and Java are
116:58 - still very very popular beginner
117:00 - languages uh I think that's fair to say
117:02 - so that's one way you could go about
117:04 - identifying well what's popular what's
117:06 - not what do you want to do try and map
117:08 - it to your goals but have a really good
117:10 - think about making sure it aligns with
117:11 - your goals because it's not it's not
117:13 - important to go by what these stats say
117:16 - if it's not what you
117:17 - want as you can see see the numbers that
117:21 - we just went through look quite a bit
117:22 - different and I bring this up to prove a
117:24 - very important point just because a
117:27 - language is in huge demand in the
117:29 - industry if it's one of the harder
117:31 - languages then you're more likely to
117:33 - encounter frustration and give up there
117:36 - is no point picking up a language that
117:38 - is in high demand if you're never going
117:40 - to complete it so it is better to turn
117:42 - to that language once you have a robust
117:45 - confidence in your understanding of the
117:47 - fundamentals of programming in all
117:49 - language languages now unlike human
117:51 - languages the second language in
117:53 - Computing is always much much easier
117:55 - than your
117:56 - first let me share with you my personal
117:59 - story so that you understand why I've
118:00 - come to this conclusion when I started I
118:03 - didn't analyze it this way CU I did not
118:05 - had the benefit of this course I decided
118:07 - I wanted to build an Android app for
118:09 - myself and not a toy app a serious app
118:13 - eventually I gave up and had some
118:14 - developers overseas build it for me and
118:17 - even today it's still on the Android
118:18 - play store
118:19 - but I spent a little over four months
118:22 - trying to build an Android app with zero
118:25 - programming background except for a
118:26 - little HTML now maybe all of you are
118:30 - smarter than I was um that's entirely
118:32 - likely but this was enormously
118:33 - frustrating and a bad bad set of
118:36 - decisions so I gave up it just felt
118:38 - impossible and it kind of was it was
118:40 - impossible given my level of knowledge I
118:43 - knew nothing about the fundamentals of
118:44 - programming forget about the Android
118:46 - framework or Java I just knew nothing
118:48 - about the fundamentals
118:50 - and though I decided at that point in
118:53 - time that I better get to know Java a
118:54 - little bit I found it extremely hard
118:57 - because I wanted to build an Android App
118:59 - instead of understanding programming
119:01 - through the language of java you see I
119:02 - wanted to skip ahead skip the steps to
119:05 - the end goal rather than going through
119:07 - the steps and so it took me months and
119:09 - months and months and months of getting
119:10 - lost and discouraged and confused now
119:12 - today I'm good at JavaScript and not bad
119:15 - at Python and Java but notice that
119:17 - they're all fairly big enough friendly
119:19 - solid robust languages but I went about
119:22 - it the hard way the long and roundabout
119:24 - way a few weeks ago I happened to be
119:27 - asked to build a very basic react native
119:29 - prototype and I'd never done any react
119:31 - native work before but because I've
119:34 - invested so much in the fundamentals I
119:36 - was actually able to understand the
119:38 - basics of react native and knock
119:40 - together a prototype in two days because
119:43 - my fundamentals are strong that was not
119:45 - possible for me a year and a half ago
119:47 - it's taken a few years to get there so
119:50 - what does this mean for you as a total
119:52 - newa programming what should you do well
119:55 - what would I do today I would recommend
119:57 - that you pick a beginner friendly
119:59 - language get very confident with its
120:02 - core programming Concepts it may happen
120:04 - that this beginner friendly language
120:06 - takes you all the way to your goal
120:07 - languages like JavaScript and python are
120:10 - very popular for that reason because
120:12 - sometimes they're all that you need to
120:13 - know for what you want to achieve both
120:15 - of these languages can now be used on
120:17 - the front end and back end for example
120:19 - that's full Stacks so most people can
120:21 - accomplish 90% of their coding goals if
120:23 - not the entire 100% of their goals with
120:25 - just one language a second piece of
120:28 - advice from my personal experience would
120:30 - be to stay away from Frameworks and that
120:32 - includes things like react and angular
120:34 - and Android and the iOS Frameworks until
120:37 - you feel your fundamentals are solid
120:40 - it's better to be slow and get there
120:42 - than to rush yourself and burn out and
120:44 - never get there Frameworks are not the
120:46 - same as languages they they require to
120:48 - have a a fairly solid grasp of the
120:51 - underlying fundamentals before you apply
120:53 - the framework in my example using
120:56 - Android before I understood Java was a
120:58 - huge mistake React 2 needs a solid
121:01 - understanding of JavaScript before you
121:03 - can understand how to work with it same
121:05 - thing with Jango and flask they require
121:07 - an understanding of python these are
121:08 - just examples of what Frameworks are and
121:11 - the underlying languages first learn the
121:13 - underlying Concepts via the language
121:16 - before you move to Frameworks once you
121:18 - understand a language then a framework
121:20 - that's built in that language is
121:21 - enormously easier and definitely less
121:24 - frustrating to work with Okay but the
121:26 - question that then arises is well Zubin
121:28 - how do I know my fundamentals are solid
121:32 - here's how I knew this is the best
121:34 - answer I can give you and I think it's a
121:35 - good one once you're able to read
121:38 - documentation and tutorials fairly
121:41 - fluently with enough speed that you're
121:44 - automatically familiar with the concepts
121:46 - you're reading without having to really
121:48 - rack your brains to figure out what's
121:50 - going on then you know you've got decent
121:52 - fundamentals if you can read code in
121:54 - other languages and have a decent idea
121:56 - of what's going on then you're starting
121:58 - to get the hang of the go Concepts and
122:00 - it's probably a good indicator that
122:01 - you're ready to keep moving to the next
122:03 - level at that point as we always must
122:06 - come back to your learning objectives
122:08 - and goals at that point look at your
122:10 - goals and ask yourself what is the next
122:13 - learning objective and now you just keep
122:16 - doing that keep repeating that process
122:17 - until you achieve your end goal
122:19 - each step will take you forward but
122:22 - start small and start with things that
122:24 - will give you that quick win that I keep
122:25 - talking about keeps your confidence up
122:28 - make sure it's measurable and frequently
122:30 - measurable you know daily or weekly mini
122:33 - goals and metrics and keep moving
122:35 - onwards and upwards now if your goal in
122:38 - the longer term is to find work as a
122:40 - developer then be very specific about
122:43 - the kind of work and also the kind of
122:46 - employer that you're looking to join
122:48 - because it's important to keep scanning
122:50 - their job boods to identify the skills
122:53 - that they keep recruiting for and then
122:55 - that's your road map just develop those
122:57 - skills later on in this section in the
123:00 - next bunch of videos we will talk about
123:02 - what it actually means to be a front end
123:05 - Dev and a backend Dev and a full stack
123:07 - Dev at various levels of depth but for
123:10 - now just know that you can't be an
123:13 - effective developer without
123:14 - understanding common okay welcome back
123:17 - in the last video we talked about a very
123:19 - fundamental question around which type
123:22 - of language you should try and start
123:23 - with and how maybe that's the wrong
123:26 - question in this video we're going to
123:28 - start diving deeper into some of the
123:30 - other fundamental questions and some of
123:32 - the more practical aspects of starting
123:34 - your journey to code in this video we
123:37 - specifically going to talk about the
123:39 - tools you need to learn to code now I'm
123:41 - being very deliberate in my choice of
123:43 - words I'm saying the tools you need to
123:44 - learn to code that's not the same as the
123:47 - tools you need to be an effective Ive
123:49 - and efficient
123:50 - programmer to learn the fundamentals of
123:53 - programming you need to use only those
123:56 - tools that contribute directly to making
123:58 - learning easier and quicker most tools
124:02 - in the development world will improve
124:04 - your efficiency or your convenience
124:06 - around coding but not that many are
124:09 - actually necessary to learn to code and
124:12 - that's a distinction I'm making in this
124:14 - video so to learn to code let's start at
124:17 - the first position which is what sort of
124:20 - IDE should you use and IDE is the short
124:24 - form for the integrated development
124:27 - environment those are just fancy words
124:29 - for a code editor you see technically
124:33 - even the notepad or word software on
124:35 - your laptop is a code editor because all
124:37 - code is just text you can edit code and
124:40 - you can write code in anything that
124:42 - edits text coding is just writing text
124:46 - but most people prefer to use software
124:50 - specifically designed for programming
124:52 - activity and there's a good reason for
124:54 - that now these specifically chosen
124:57 - programming environments or software
124:59 - programs are more generally referred to
125:01 - as
125:03 - idees you also know that Microsoft Word
125:06 - for example is better for texts and
125:08 - paragraphs whereas Excel is better for
125:11 - numbers though you can do either with
125:14 - word or excel idees in the same vein are
125:18 - better suited for programming than just
125:20 - regular text editors they can be
125:23 - configured and they are designed to give
125:25 - you output and feedback within the
125:28 - application they may also often have
125:30 - useful features like debuggers Etc all
125:33 - of which you will start to use down the
125:35 - track once you've grown a bit as a
125:37 - developer there are many many popular
125:39 - IDs and you can really pick any one you
125:42 - can pick atom or sublime or Visual
125:45 - Studio code which are some of the more
125:47 - popular free ones out there and then
125:49 - there are paid ones like the ones that
125:51 - you can get as a professional from a
125:53 - company like say jet brains to learn
125:57 - with though I would suggest you just go
125:59 - with any one of the free or Community
126:00 - Edition ones doesn't matter the
126:03 - important thing is to just pick one of
126:05 - the good popular ones and learn to use
126:07 - it well which means you've got to pick
126:09 - it and stick with it keyboard shortcuts
126:12 - customizations configurations all these
126:15 - little helpers come along only when you
126:17 - stick to one application over a period
126:20 - of time so sticking to one application
126:22 - actually helps you get very good at
126:24 - exploiting its features and getting
126:26 - really familiar with them that's usually
126:29 - why people are loyal to one over another
126:31 - it's not because one is necessarily
126:33 - hugely better than the other it's just
126:35 - that switching to an unfamiliar one is a
126:37 - huge loss of productivity when you
126:40 - haven't got it set up properly and
126:42 - setting up an IDE and configuring it to
126:45 - your working style and preferences can
126:47 - take a little bit of time again that's
126:49 - not something you need to do right up
126:51 - front you do that organically naturally
126:54 - over a period of time as you learn to
126:56 - code some idees are specifically needed
127:00 - for the kind of work you intend to do
127:01 - for example if you want to build an
127:03 - Android app you're probably best off
127:05 - trying to use Android studio and if you
127:08 - want to build um iOS or Mac apps you're
127:11 - best to use xcode now again we're
127:14 - jumping a bit ahead of ourselves but
127:15 - this is just to give you context as to
127:17 - the different kind of ID environments
127:19 - available if you're interested in data
127:22 - science that's another example then
127:24 - there are IDs like spider which are
127:26 - designed specifically for that um but
127:28 - you wouldn't want to use atomus Sublime
127:30 - for that necessarily you can but a lot
127:33 - of people would prefer not to because
127:35 - spider is more fit for purpose also and
127:38 - this is something that's relatively
127:40 - recent as a development and fast
127:41 - becoming my favorite go-to um
127:44 - environment is online idees because
127:47 - they're often integrated into your
127:49 - training platform or you can just get
127:51 - them free through a browser now if
127:53 - you've ever been to free code camp for
127:56 - example online which is a free coding
127:58 - school um you would see that they
128:00 - actually have an inbuilt IDE in the
128:03 - browser for you to practice the same
128:05 - thing goes for code academy and a bunch
128:06 - of others another fantastic in browser
128:10 - ID for quickly prototyping or practicing
128:13 - or solving a simple functional problem
128:16 - um which I personally use and love is
128:18 - called
128:19 - people.it that's repl.it now I should
128:22 - say I'm not promoting it or you know I
128:24 - don't get anything for this it's just
128:26 - that I found it very very useful um
128:28 - along with others like codepen which are
128:30 - also extremely extremely useful many web
128:33 - developers do use codepen and repl.it
128:36 - and jsfiddle to do little Snippets in
128:39 - practice these are typically referred to
128:41 - as online playgrounds and they're very
128:43 - good for prototyping small pieces and
128:45 - sometimes even showcasing your work you
128:47 - can actually build fairly sophisticated
128:49 - applications with them but it's
128:51 - generally not the way you'd end up going
128:53 - because you have less control over how
128:55 - your code's visible to the world now if
128:58 - I didn't want to download an ID and I'm
129:00 - just learning fundamentals I would
129:02 - probably save myself a lot of the
129:03 - initial setup friction and just use
129:05 - something like a repel. it or code pin
129:08 - or something for the first few weeks
129:10 - anywhere and after that once I get
129:12 - comfortable with that I may take out a
129:14 - day or so to install a proper ID in my
129:16 - laptop and set it up but that's just my
129:18 - personal preference the important thing
129:20 - like I said before is for you to pick
129:23 - something that you find it easy to work
129:25 - with and rewarding because it gives you
129:27 - quick feedback and stick to it as you
129:29 - will get more and more familiar and
129:32 - Adept with it over time okay so let's
129:35 - move on from IDs for just a moment
129:36 - because a lot of people also get caught
129:38 - up with things like Version Control
129:40 - which is often popularly referred to as
129:43 - git um and the other area people can
129:46 - sometimes get stuck on is knowing how to
129:48 - use terminal or Windows commands and
129:51 - things like bash and terminal scripts
129:53 - and shell
129:54 - Etc now all of these skills and I'm not
129:57 - going to go into too much detail because
129:59 - these skills are very useful and
130:01 - valuable for a programmer but they are
130:04 - not necessary for a beginner to learn in
130:07 - fact I would think that they can be a
130:09 - little bit Arcane and sometimes tough to
130:12 - comprehend and it's the kind of thing
130:14 - that'll just overwhelm you for a
130:16 - beginner don't worry about things like
130:17 - version control for the first several
130:19 - months don't worry about things like you
130:21 - know writing things in the terminal in
130:23 - these strange looking um boxes with lots
130:26 - of text that make no sense forget about
130:28 - all that don't let that distract you
130:30 - just learn the fundamentals of
130:32 - programming if you finding that you're
130:34 - doing stuff in the terminal for example
130:37 - and that you're lost all that means is
130:38 - that you've jumped a few steps ahead so
130:41 - you're using a resource that's probably
130:42 - not designed for where you're at at your
130:45 - level a well return return well-written
130:48 - tutorial will always guide you through
130:50 - using all the aspects that they're
130:52 - talking about but often they presume
130:54 - certain prior knowledge and if you don't
130:56 - have that prior knowledge you're going
130:57 - to feel overwhelmed okay so in this
131:00 - section we've answered the question what
131:02 - minimum tools do you need to learn to
131:04 - code and I've tried to draw the
131:06 - distinction between what you need to
131:08 - learn and What You Need to Be an
131:09 - Effective programmer to encourage you to
131:12 - take it step by step and only focus on
131:14 - those minimum tools you need to get
131:16 - started with learning the fundamentals
131:18 - programming
131:19 - computers great I look forward to seeing
131:22 - you in the next
131:24 - video okay welcome back in the last
131:27 - video we talked about the sort of tools
131:29 - that you need to start learning the
131:31 - fundamentals of programming rather than
131:34 - tools you just need as a programmer in
131:37 - this video let's talk about something a
131:39 - little bit harder to grasp and perhaps a
131:41 - lot more subtle but very practically
131:43 - important to what you want to do and
131:46 - that is how to identify and choose which
131:49 - skills you need to acquire I want to
131:53 - emphasize here I'm not talking about
131:54 - what you want to have not what skills
131:57 - you want to have but which skills you
131:59 - need to have and that's only possible by
132:02 - reference to the goals and plans
132:04 - exercises which I'm sure you've done a
132:06 - couple of times
132:07 - now th that exercise should have helped
132:10 - you identify what skills you need to
132:13 - develop to meet your specific learning
132:16 - objectives now we need to break those
132:20 - broad goals down or those learning
132:22 - objectives down into smaller discrete
132:25 - subg goals Each of which have a clear
132:28 - completion point that is a point when
132:30 - you know you've achieved that subg goal
132:33 - let's use examples of some popular goals
132:36 - to help you understand what I mean by
132:38 - choosing the right skills at a subgoal
132:41 - level so a lot of people for example
132:44 - want to be front-end developers or
132:47 - backend Developers or full stack
132:49 - Engineers front end means that they
132:52 - handle the stuff that the end user sees
132:54 - and interacts with back end means that
132:56 - they handle the stuff that the user
132:58 - doesn't directly interact with but which
133:01 - is necessary for the front end to
133:03 - deliver a certain user experience let's
133:05 - take an example so you understand this
133:07 - let's take an example like a blog site
133:10 - the front end is where people can read
133:12 - blogs and scroll through them and click
133:14 - on them and write and edit them but when
133:16 - they read write or edit things they're
133:18 - actually consuming creating and
133:21 - modifying data right I mean a Blog is
133:24 - basically just data that data needs to
133:27 - be saved somewhere it then needs to be
133:30 - retrieved from that storage place and if
133:33 - it's being edited it needs to be edited
133:35 - and saved and record skied and so on so
133:38 - the storage and retrieval is on the back
133:40 - end of the application because that is
133:42 - not what the user sees or interacts with
133:44 - but what they see in the browser is the
133:46 - front end if a full stack developer is
133:49 - able to handle the coding for the front
133:51 - end as well as the back end now if you
133:54 - want to be a front end dev then don't
133:57 - start learning about backend stuff
133:59 - choose skills you need for front end
134:02 - mainly skills like HTML CSS and
134:05 - JavaScript as the programming language
134:08 - for backend maybe you want to do it in
134:10 - Java or python or even JavaScript for
134:13 - full stack you'd need that and more like
134:16 - learning about database design
134:18 - Technologies even if you want to be a
134:20 - full stack developer just start with
134:23 - small goals start with the front end no
134:25 - bit bit about that learn a bit of HTML
134:27 - and CSS and then some JavaScript then
134:30 - you can move on to things like node.js
134:32 - for the back end and some other backend
134:34 - language like PHP or python what my
134:37 - point is here is that it's important to
134:41 - learn to separate the advanced skills
134:43 - from the beginner skills and that's
134:45 - often hard to do because there are a
134:48 - million different opinions people just
134:49 - tell you oh this is what you want to do
134:51 - this is what you need to know but you
134:52 - need to separate them out into stages of
134:55 - skill so a good way to do this
134:57 - constructively is to speak to your
134:59 - Mentor or others who've done what you're
135:01 - planning to do people who walked down
135:03 - this path before can give you a better
135:04 - map a useful approach for yourself in
135:08 - your Al time is to ask yourself is this
135:11 - particular subgoal necessary for me to
135:14 - learn next or is it just desirable this
135:19 - is the want to versus need to question
135:22 - is there something else that I need to
135:24 - know more than this in other words
135:27 - prioritize your skill acquisition in
135:30 - accordance with what you need to do next
135:33 - and there is always one thing not two or
135:36 - more things that you need to do next
135:39 - always boil it down to the one right
135:41 - next thing your top priority can only be
135:45 - one thing otherwise it's not your top
135:47 - priority if it's shared with other
135:48 - things that's the only way to be
135:50 - effective when you're learning an
135:52 - unhelpful question is should I know this
135:55 - or will this make me a better coder
135:58 - chances are the answer to both is yes in
136:01 - order to achieve your long-term
136:03 - objective but that's not going to help
136:05 - answer the question of what's
136:06 - immediately next as a
136:08 - subgoal so that's what causes the
136:11 - confusion and the decision making is so
136:13 - hard it's because you ask a slightly
136:15 - different question which gives you a
136:17 - discard in answer when you focus on the
136:20 - question of what comes next make sure
136:23 - it's literally what comes next do I need
136:25 - to know this next can I get to where I
136:28 - want to be without knowing this is
136:30 - another way of eliminating what doesn't
136:32 - come next so sorry to hop on about this
136:35 - but it's really really really important
136:38 - to avoid the temptation to jump too far
136:40 - ahead don't be stupid like me and and
136:43 - try to go from zero to Android developer
136:45 - in a week or a month you you know you
136:47 - just cannot not get to the 10th floor of
136:49 - a building without going up the stairs
136:51 - or walking up the elevator whatever it
136:52 - is unless of course you're Chuck
136:55 - Norris step by step is my advice and
136:58 - there is always one step that comes next
137:01 - now you may be able to see three or four
137:02 - steps don't try to do them all don't
137:04 - leap them all just do the one steps it
137:06 - does take a little work to figure out
137:07 - what the next step is and you know You'
137:09 - probably get it wrong the first few
137:10 - times that's okay you're still building
137:12 - your intuition around this so that's
137:15 - also why I've designed these lessons for
137:17 - you to keep coming back to because the
137:19 - more you come back to them for quick
137:21 - refresher the better you'll be at making
137:23 - judgment calls like what's next the
137:25 - whole point of this this class and this
137:27 - course is to guide you through these
137:29 - inevitable moments that come up time and
137:31 - time again okay let's keep moving
137:34 - because there are more videos to be done
137:36 - welcome back in the last section we went
137:38 - through a number of videos um where we
137:41 - helped to work through the fundamental
137:43 - decisions that anyone who's new to
137:45 - programming needs to go through in order
137:47 - to be effective in their Learning
137:49 - Journey in this section we're going to
137:52 - start looking at some of the strategies
137:55 - what I call open Secrets um that make
137:57 - people effective Learners now I've been
138:00 - using dozens of learning strategies to
138:02 - become what I would consider to be a
138:04 - super learner over the last 15 plus
138:06 - years and I've taught myself a number of
138:08 - things and also learned professionally
138:10 - through a number of of sources and I
138:13 - know that you can actually boil down a
138:14 - lot of the learning strategies for
138:16 - coding specifically just a handful of
138:18 - them and that's what I've done in this
138:20 - section I've taken all the learning
138:22 - strategies I know of experimented with a
138:25 - whole bunch of them and reduce them to a
138:27 - few so that you can use them in order to
138:30 - identify which ones really work for you
138:32 - as you learn to code um many of these
138:34 - strategies aren't specific to coding but
138:37 - I've tried to make them about coding so
138:39 - that it's easier for you to
138:40 - contextualize them and the reason I call
138:43 - them open Secrets is because actually
138:45 - everyone knows them is just that either
138:47 - that they don't know they know them or
138:49 - they're just not willing to apply them
138:51 - but that's the secret that you've got to
138:53 - apply so in this section we're going to
138:56 - talk about some ways to learn new skills
139:00 - very fast as fast as possible really
139:03 - while growing your coomet so it's not
139:05 - just about learning things very quickly
139:07 - and then not being competent in them
139:09 - it's really important that you retain
139:11 - competence um in terms of the sources
139:14 - for a lot of these strategies I've
139:16 - picked them up from the education
139:17 - Sciences from my study of psychology and
139:19 - meta learning um and even the experience
139:22 - of other super Learners like Tim Ferris
139:24 - Etc been really useful to validate some
139:26 - of the strategies look I'm really
139:28 - excited about this section so let's not
139:30 - waste any more time and let's Jump Right
139:32 - In I'll see you in the next
139:34 - video now very quick update for me in
139:36 - 2023 at the end of 2023 um this used to
139:39 - be true that I'd learn most on videos
139:42 - but it's actually no longer true on the
139:43 - job for me anymore because as I get more
139:45 - senen and experienced um a lot of the
139:48 - prerequisite knowledge is already in my
139:50 - possession in in circumstances where I'm
139:52 - working with things I'm somewhat
139:54 - familiar and have the right intuition
139:55 - and so it's actually much easier for me
139:57 - to Now understand what the doc documents
140:00 - mean what written resources are trying
140:02 - to tell me I'm able to pass through that
140:04 - information much quicker simply because
140:06 - I'm a bit more experienced compared to
140:07 - you know four or five years ago however
140:09 - there are still some topics um
140:10 - especially brand new topics are just
140:12 - topics that I'm trying to learn entirely
140:14 - for fun of my own growth where I
140:15 - typically still will start with videos
140:17 - because personally I find videos the
140:18 - most efficient way it's there's a lot of
140:20 - words that you don't have to deal with
140:22 - when you can just watch somebody do it
140:24 - right visual media much more Rich so I
140:26 - still use it but on the job I find more
140:28 - often than not I'll do a very quick
140:30 - Google search a stack Overflow search a
140:32 - chat GPD search whatever it is find the
140:34 - text reason about it go to the documents
140:36 - find my way through the documents and
140:38 - it's actually much faster than trying to
140:40 - find which video is the right one for me
140:41 - because sometimes videos can be hours
140:42 - long right so it's actually much more
140:43 - efficient this way so you will notice
140:45 - too as you get better and more ad dep
140:47 - and more familiar with things um your
140:50 - the your chosen medium for finding the
140:52 - solution that you need in that moment
140:53 - will change depending on what how much
140:55 - time you have what your goals are what
140:57 - your objectives are and what your
140:58 - favorite method of learning is okay in
141:01 - the last video we covered the first Open
141:04 - Secret which we call the minimum
141:05 - effective dose in this video we're going
141:08 - to talk about a big and very important
141:11 - secret secret number two now you do
141:14 - remember from the introduction to this
141:16 - section that I did caveat that these
141:20 - secrets aren't really Secrets at all I
141:22 - mean they're open Secrets so I want you
141:23 - to remember that um and I'm calling
141:25 - these a secret because everyone wants to
141:27 - know what the special source is in the
141:29 - recipe for success but they already know
141:32 - what it is and yet they think it's
141:34 - something else in fact you probably
141:35 - already guessed what secret number two
141:37 - is because everyone knows actually what
141:39 - it is and sadly it's not
141:43 - glamorous the secret secret number two
141:47 - is is
141:48 - practice that's it hey I did warn you
141:51 - that it wasn't going to blow your mind
141:53 - but you know practice is so completely
141:56 - underrated and maybe it would blow all
141:58 - our minds if we just saw how much
142:00 - practice goes into excellence and what
142:03 - what incredible things you can achieve
142:05 - by just following this secret I don't
142:07 - know that's just what I believe but I'll
142:10 - tell you what let's dig into it hey did
142:12 - you guys know that Benjamin Franklin
142:14 - used to study his favorite authors this
142:16 - was back when Ben Franklin was training
142:19 - himself to be an author he would study
142:21 - his favorite authors and I don't mean
142:23 - just study his authors he would actually
142:26 - pour over their books and writings then
142:29 - put them away and for days on end try
142:31 - and reproduce those writings himself by
142:33 - trying to imitate imitate the bits of
142:36 - them he really liked that's an enormous
142:38 - amount of work I mean Benjamin Franklin
142:40 - effectively practiced being the authors
142:43 - that he admired that is an enormous
142:45 - amount of commitment
142:48 - the reason why I think this is still a
142:51 - secret this practice concept is because
142:55 - all of us have a natural tendency to
142:59 - want to avoid the one thing that works
143:01 - which is practice the secret is that it
143:04 - is actually guaranteed to work practice
143:07 - will 100% get you to the level you want
143:10 - it may take you more or less time than
143:12 - someone else that's almost irrelevant to
143:14 - be honest and maybe it'll take you more
143:16 - effort or a little bit less effort
143:18 - really depends on what your inherent
143:20 - skills are but you can't avoid the fact
143:22 - that practice is the only thing
143:24 - guaranteed to get you the results okay
143:27 - enough preaching about the big secret
143:29 - the real question for you to make this
143:31 - practical is what are the effective
143:33 - forms of practice when it comes to
143:35 - learning to code because that's what
143:37 - this course is all about so I will share
143:39 - with you through my extended period of
143:42 - experimentation and trial and error the
143:44 - principles I've learned about effective
143:46 - practice ice when it comes to
143:49 - programming number one programming
143:52 - requires different skills to come
143:53 - together and it's important to keep in
143:55 - mind that each of those skills need
143:58 - practice so two is about getting more
144:02 - specific you're learning fundamental
144:04 - programming Concepts we talked about
144:06 - this in the fundamental decision section
144:08 - you're learning how to program a
144:09 - computer for this you need to practice
144:12 - things like syntax of your chosen
144:14 - language and the way in which you
144:16 - structure a small code statement how you
144:18 - declare a variable how you may need to
144:21 - keep in mind what sort of data is
144:24 - represented by that variable and all
144:26 - these little things all these little
144:29 - things matter and they get better they
144:31 - become more natural for you with
144:33 - practice you know what the famous joke
144:36 - about coding is how a semic semicolon
144:38 - can crash a code it's true so even
144:41 - putting in semicolons in the right place
144:43 - where the language requires it does
144:46 - matter the more you do the more fluid
144:48 - you become it becomes like a second
144:49 - language the more fluent you become in
144:51 - writing those basic statements but
144:54 - initially it takes time so you you need
144:56 - to practice with patience the third
144:59 - principle I can share with you is that
145:01 - as you practice more and more complex
145:04 - chunks of code say for example you're
145:07 - asking a user for a little input maybe
145:09 - their age and then you want to add 10 to
145:12 - that age and tell them that in in 10
145:14 - years they're going to be X years old
145:16 - right a plus 10 now that requires
145:19 - practicing slightly more complex levels
145:21 - than just the initial stages it's basic
145:24 - conditional logic it's okay if you're
145:26 - this many years now in 10 years you will
145:28 - be doing you will be this many years
145:30 - which means you're X plus 10 years which
145:32 - is a mathematical operation but there's
145:33 - also an if statement there so to do
145:37 - these patterns of code which are
145:38 - absolutely the building blocks of a
145:41 - program you have to learn the Habit it's
145:43 - it it'll feel strange at first and it
145:45 - takes time so these patterns and
145:48 - routines take practice so you start off
145:50 - with the basics then you move into these
145:52 - small little code patterns and chunks
145:55 - and that'll then take practice even
145:56 - though the easier bits now start to feel
145:58 - like second nature all right the next
146:00 - principle is as you're building up in
146:03 - complexity you'll need to really start
146:05 - to practice how to Google the right
146:07 - questions to get the right answers now
146:10 - people may not appreciate this but about
146:12 - 90% of the time you spend writing code
146:14 - is actually spend researching the best
146:16 - way to do it um that could be the most
146:18 - efficient way to do it or the correct
146:20 - answer for something you're not really
146:21 - sure how to do so make Google your
146:23 - friend it's one of the best friends a
146:25 - developer can have and Googling the
146:28 - right thing is very important so that
146:30 - you get the answer as soon as you can
146:32 - initially I didn't even know what was
146:34 - going wrong so my Google searches did
146:36 - take me to the answer now I have
146:39 - developed a really good intuition I can
146:41 - see what's going on I can see the error
146:43 - and I can in my head calculate okay it
146:45 - looks like this is what's going wrong I
146:47 - just don't know how to fix it quite yet
146:49 - and so I can go in and Google it's a
146:51 - huge part of a coder's workflow make no
146:53 - mistake Googling is a massive part of
146:56 - what you do as a coder So reading
146:58 - through resources like stack Overflow or
147:00 - Wikipedia or the documentation takes
147:03 - practice too and that gets better the
147:05 - more you understand how the language is
147:07 - working or the framework is working the
147:09 - more you understand what you're doing
147:11 - then when you read the advice you get it
147:13 - all just makes sense almost effortlessly
147:16 - over time
147:17 - so you may ask for sauce but if you know
147:20 - specifically you want Tobasco that helps
147:22 - a lot right that's that's an example I
147:24 - can give you of how Googling
147:27 - specifically will give you a much better
147:28 - response than just asking for sauce okay
147:31 - so that covers some of the big
147:33 - principles and you can see there's a
147:34 - chronology to it each Builds on the
147:36 - complexity that went before it now let
147:39 - me show show you these skills take time
147:41 - and practice and I'm I've hopped on on
147:43 - this also in the course that it's not
147:45 - something you can do in a month or two
147:46 - or three
147:47 - well maybe you can but I wouldn't expect
147:49 - that initially when you try to read
147:52 - documentation it's going to overwhelm
147:54 - you and probably throw up many more
147:56 - questions than than the answers um
147:58 - that's okay that's actually a signal
148:00 - that you may have jumped ahead so step
148:02 - back a bit go back a few steps to the
148:05 - level that feels right for you and
148:06 - slowly work up from there an example I
148:09 - can give you of this principle is when I
148:12 - was younger I taught myself how to play
148:14 - the guitar today I'm pretty good at it
148:16 - but when I first started first I to
148:18 - learn how to press the strings right to
148:20 - the guitar and then if the guitar Was
148:22 - Out Of Tune I had to actually learn how
148:24 - to tune the guitar so that playing it
148:25 - actually made sense so it was so painful
148:29 - it hurt my fingers and you know I think
148:31 - oh I'm going to try and learn this tune
148:33 - today but it would take me one week to
148:34 - learn it and not just a few hours
148:36 - because there was so much that I had to
148:37 - learn to even get to a point where I
148:39 - could play a tune it's the same
148:41 - principle with coding it it just seems
148:42 - to take forever at first but that
148:44 - flywheel just keeps turning faster and
148:46 - faster the more you practice it so
148:49 - practice practice practice be patient
148:51 - practice practice practice I know I've
148:53 - said practice a lot of times this video
148:55 - because I want to drive the point home I
148:58 - would recap this section but I think
149:00 - I've made the point abundantly clear
149:03 - you'll never know whether there's enough
149:04 - practice but you will know whether
149:06 - you're being fluid and if you're not
149:09 - fluid then you could use a little more
149:10 - practice that's the rule of thumb I go
149:12 - by all right so don't skip the step but
149:14 - let's move ahead to see secret number
149:17 - three okay welcome back in the last
149:20 - video I revealed to you the Earth
149:22 - shattering jawdropping
149:25 - lifechanging Cosmos quaking secret of
149:30 - practice in this video I'm going to
149:32 - share with you something maybe a little
149:34 - bit more down to earth we're going to
149:36 - call it secret number three and the
149:38 - secret really is that you don't need to
149:40 - learn only from experts or from people
149:43 - online you can learn from your peers and
149:46 - others who are at a similar stage or
149:49 - maybe even who are slightly behind you
149:51 - and so I call this secret to is greater
149:54 - than one because really what it's saying
149:56 - is you don't have to do it alone and
149:58 - doing it with somebody else can take
150:00 - many forms which we'll talk about
150:02 - shortly but doing it with other people
150:04 - is a very good way to embed the
150:07 - knowledge in your head but it's not
150:10 - something you want to do too early in
150:11 - your journey so my personal suggestion
150:14 - is maybe don't do it in your first 4 to
150:16 - 8 weeks just concentrate on yourself and
150:19 - building your first layer of
150:20 - fundamentals and then after that initial
150:23 - phase start to involve one or two other
150:25 - people in your journey to code now when
150:28 - I say involve others there are three
150:30 - ways that I would recommend you do this
150:32 - you don't have to do all of them or you
150:35 - can do all of them or choose the ones
150:37 - that work and are convenient for you
150:38 - okay so the three ways I would recommend
150:40 - you do this are number one read the code
150:43 - of others from tutorials or even just
150:46 - give GitHub it's great but try and read
150:48 - the code of others especially on GitHub
150:50 - um over time you learn a lot maybe not
150:54 - initially it'll feel like a real
150:55 - struggle but as your knowledge grows
150:57 - your ability to read other people's code
151:00 - and know what's going on will improve
151:02 - and so that will teach you not just how
151:04 - to do things but also how not to do
151:06 - things you'll learn either they've done
151:08 - something better or they've done
151:10 - something that doesn't work as well as
151:11 - something you worked at all great
151:13 - learning some of the needest tricks I
151:16 - learn learn was from Reading other
151:17 - people's code thanks to the open source
151:19 - movement right so get involved with the
151:22 - open source movement if you like if if
151:23 - you feel comfortable and you don't have
151:25 - to intimidate Yourself by thinking you
151:27 - need to build an entire app on your own
151:29 - that's not what open source necessarily
151:31 - means you can start really small by just
151:34 - offering to write their documentation a
151:37 - little better which is often an
151:38 - overlooked part people are so busy
151:40 - focusing on the code that they don't
151:42 - write great documentation or the
151:43 - documentation is not beginner friendly
151:45 - as a beginner you know how to make it
151:47 - beginner friendly so that's how you can
151:49 - get started by contributing reading
151:51 - other people's code is actually really
151:53 - valuable when you need to use libraries
151:56 - and chunks of other people's code or in
151:58 - a professional environment where you
152:00 - probably get a job in a place where
152:01 - you're not writing something from
152:02 - scratch right you'll have to work with
152:04 - other people's code so getting the hang
152:06 - of reading code is really important in a
152:09 - professional environment okay number two
152:11 - another way to make it a little more
152:13 - collaborative or social um and involve
152:15 - others is to teach what you're learning
152:18 - a lot of people have done an incredible
152:21 - job writing little tutorials or blog
152:24 - posts telling others how to do something
152:27 - but the reason they're writing it is
152:28 - because they've just leared or they're
152:30 - in the process of learning how to do
152:31 - that even I did that um I maintained a
152:34 - small and and not periodically updated
152:38 - it was fairly infrequently updated blog
152:41 - um but summarizing the key principles
152:43 - that I had learned part of it was to
152:44 - document for myself so that I could
152:47 - always come back and have a quick
152:48 - reference guide to building something or
152:50 - a piece of you know or a functionality
152:52 - but also as a way to force myself to
152:56 - bring these Concepts into words that are
152:59 - comprehensible to other people which
153:01 - then builds your ability to communicate
153:03 - technical things that's a really really
153:06 - important skill right the ability to
153:08 - communicate your technical Concepts to
153:11 - translate them from your idea in your
153:13 - head to something another coder can
153:16 - understand is a vital skill especially
153:18 - at the workplace if you want to be a
153:19 - professional dip if someone asks you a
153:22 - really great question and you don't
153:23 - suddenly know the answer to that that's
153:25 - a really good sign that hey you know
153:27 - your learning could could get even
153:29 - better in that subject so you you just
153:30 - tend to learn by teaching the
153:32 - opportunities to teach others are
153:34 - actually more common than you think you
153:37 - can teach people at work you can teach
153:39 - people at Community programs you know
153:41 - you can write like I said essays blogs
153:43 - and contributing to open source there's
153:45 - actually a lot of ways in which you can
153:47 - teach others and help share the
153:49 - knowledge technique or method number
153:52 - three is pair programming which
153:54 - is quite common in the development World
153:57 - especially in the educational scene but
153:59 - also as part of training given at work
154:02 - um where you know developer teams are
154:04 - encouraged to PIR program and this is
154:07 - because it really really does work the
154:10 - concept is you and someone else will
154:13 - take turns at programming one person is
154:16 - the driver which basically means that
154:17 - they're going to be actually typing out
154:19 - the code and you know writing it out
154:21 - into the IDE and the other person's the
154:23 - Navigator who's the person who's doing
154:25 - the thinking and trying to articulate
154:29 - their thinking in language that that the
154:31 - driver can understand and type into the
154:34 - IDE so the effect of this is that it
154:39 - teaches you to communicate technical
154:41 - Concepts while collaborating with others
154:43 - and developing the empathy to know know
154:46 - how to express an idea that's in your
154:48 - head in a clear concise way that
154:50 - somebody else sitting next to you can
154:52 - immediately implement it now you do
154:54 - switch quite often so you know you may
154:55 - do 15 minutes 20 minutes as the driver
154:58 - and then take over as the Navigator and
155:00 - you switch back and forth um and if you
155:02 - can do this it's a really valuable skill
155:04 - at the workplace sometimes maybe your
155:07 - Mentor or your model if you happen to
155:08 - know them or have access to them um Can
155:11 - can do this with you and train you up so
155:13 - if you do it with someone who's a lot
155:14 - better than you there's a great deal of
155:16 - learning but even if you do it with
155:17 - someone your level or slightly behind
155:19 - you that's fine too you don't need to do
155:21 - it in physical proximity with each other
155:23 - so in this modern day and age we can do
155:26 - this online you can use Hangouts or
155:28 - Skype or whatever it is and a screen
155:30 - share and write code in real time with
155:33 - each other and collaborate that way all
155:35 - of these three techniques are really
155:37 - really really helpful at bedding down
155:40 - the knowledge that you've developed um
155:42 - as some of you may know repeating what
155:45 - you've learned with a bit of spacing in
155:47 - between is a highly effective technique
155:50 - of making sure you remember longer and
155:52 - one great way of repeating it is by
155:54 - having to teach someone else okay so
155:57 - that's secret number three which is two
155:58 - is greater than one and I will now see
156:01 - you in the next video okay welcome back
156:04 - in the last video we talked about secret
156:06 - number three which is how two is greater
156:09 - than one in this video I'd like to talk
156:13 - to you about the reality of coding which
156:16 - really is quite intellectually
156:18 - demanding and along with being
156:20 - intellectually demanding it's also quite
156:22 - emotionally demanding and can be quite
156:25 - draining and the reason for that is you
156:27 - spend a lot of your time especially in
156:29 - the initial part of your journey you're
156:30 - going to spend a lot of your time being
156:33 - confused and frustrated uh dealing with
156:36 - a lot of setbacks um and that can be
156:39 - quite hard so secret number four which
156:42 - we're going to talk about in this video
156:43 - is going to be quick it's sounds trivial
156:46 - but it's really really important because
156:48 - it does set you up for Success the only
156:51 - thing is it's kind of hard to remember
156:52 - to do it when you're in the thick of
156:53 - coding so secret number four is called
156:55 - pace yourself and it's really
156:59 - important when I say pace yourself I
157:02 - really mean two things
157:05 - one I recommend you follow a process
157:08 - where you learn something in a finite
157:11 - amount of time that's not too long and
157:12 - then you take a short break for
157:14 - something else then return
157:16 - I do not recommend that you do marathon
157:18 - sessions even though that's what it
157:20 - looks like is normal in shows like
157:21 - Silicon Valley and stuff I personally
157:24 - follow the pomodora technique which is a
157:27 - proven way to keep your learning
157:28 - resilience and redention up I can add
157:32 - more links for you in the in the in the
157:35 - notes to this
157:37 - lesson second thing I'd recommend you do
157:40 - do when it comes to pacing yourself is
157:42 - to learn when to walk away now this
157:44 - sounds really quite silly but it's
157:47 - actually really important getting stuck
157:49 - when you're coding is a very normal and
157:52 - sadly very common and inevitable part of
157:55 - coding coding is just one of those
157:57 - things that can consume your focus
158:00 - completely but the problem with that is
158:02 - that our Focus gets narrower over time
158:06 - and so does our ability to think
158:08 - laterally and creatively solve problems
158:11 - over a single session that extends for
158:14 - too long you will find your cognitive
158:17 - capacities is declining so when we don't
158:20 - solve our problems we'll get frustrated
158:22 - we then feel angry and we want to give
158:24 - up and we want to avoid a situation that
158:26 - discourages us that much right so rather
158:29 - than exhausting ourselves over long
158:31 - sessions I recommend getting up quite
158:33 - frequently doing a little exercise
158:35 - walking the dog meditating listening to
158:37 - some music that improves your State uh
158:40 - you know do things that switch your
158:41 - emotional and mental state and these are
158:43 - all proven techniques to re resetting
158:46 - yourself mentally now I should warn you
158:48 - that when you're in the thck of coding
158:50 - or you feel you're on the verge of a
158:52 - breakthrough or you're really stuck and
158:54 - it's really annoying you that you're
158:55 - stuck it'll really feel like you cannot
158:58 - possibly step away from that problem at
159:00 - that moment you're you're going to feel
159:02 - like that's the worst time to walk away
159:04 - it's so hard to do when you're deep in
159:05 - code I I accept that I recognize that I
159:08 - struggle with this pretty much every day
159:10 - really but I have found out almost
159:12 - universally that when you walk away from
159:15 - the problem especially when you're
159:16 - coding somehow it gets solved
159:18 - subconsciously and when you return back
159:21 - to the problem you tend to solve it much
159:23 - faster or you attack it from a new angle
159:25 - that only could have occurred to you
159:26 - when you release the problem for a while
159:29 - I've made the opposite mistake on
159:30 - several occasions right I made the
159:32 - mistake of breaking my own rules and
159:33 - coding for 4 hours straight or something
159:35 - and then getting massively stuck in the
159:37 - second hour and then I lost the other
159:39 - other two hours because I just
159:41 - stubbornly refused to step back and give
159:43 - it some breathing room and then I come
159:45 - back later on and the solution actually
159:46 - took me 10 minutes so I recognize the
159:49 - concentration very hard to break but
159:51 - concentrating for a long time with great
159:54 - discipline on the wrong thing doesn't
159:56 - mean you're going to find the right
159:57 - solution so take a break have a kit kat
160:00 - do something completely different and
160:01 - come back just as a completely
160:03 - interesting side note and this is not so
160:05 - much of educational value here but there
160:07 - is a phenomenon that you should watch
160:09 - out for when you code very intensely
160:11 - what happens is you you can tend to
160:13 - start dreaming of code and it can
160:16 - actually impact your sleep now I
160:18 - personally have gone through this
160:19 - several times I still go through it when
160:21 - I code too late into the night and then
160:23 - go straight to bed and after a few days
160:25 - of this I'm pretty useless it's just
160:27 - that your brain hasn't shut down
160:28 - properly if you're curious about this
160:30 - this phenomenon is sometimes called the
160:32 - tetris effect and I've added some links
160:34 - in the notes to this lesson as well so
160:37 - just keep in mind to recap that mental
160:39 - tiredness is a very normal part of
160:41 - really getting into code coding is very
160:44 - addictive and Incredibly absorb loing
160:45 - and that's what's fun about it that's
160:47 - what's so rewarding about it but that's
160:48 - also what's so exhausting about it and
160:50 - so it makes it doubly important that to
160:52 - sustain yourself you need to pace
160:54 - yourself and that's what the secret
160:55 - number four is pace yourself so you can
160:57 - be resilient and bounce back keeping
160:59 - these things in mind will make you much
161:01 - more effective in managing yourself on
161:03 - your journey and we know that better
161:06 - self-management means you'll achieve
161:08 - more goals which means you'll be more
161:10 - successful all right that's it I will
161:12 - see you in the conclusion to the section
161:13 - now all right guys congratulations
161:16 - you've reached the end of yet another
161:18 - section and you are making such great
161:20 - progress you're going at such a great
161:22 - Pace that you're going to be done very
161:24 - very soon in the last section we talked
161:26 - about the open Secrets as I call them
161:29 - that um help you learn to code very
161:32 - effectively and so now I think you're
161:34 - ready to actually go into the next
161:36 - section which is going to cover some of
161:37 - the setbacks that many people do
161:39 - encounter I hope you don't but it's very
161:41 - possible that you will and I hope to
161:44 - take you through some techniques that I
161:46 - found incredibly effective at dealing
161:49 - with those with those setbacks
161:50 - constructively and effectively so you
161:53 - should be really proud with with the
161:55 - progress you're making with every
161:56 - passing video you're getting so much
161:58 - closer to your goals um and I hope
162:00 - you're feeling good about that so take a
162:02 - short break and I'll see you in the next
162:05 - video Welcome Back to the next section
162:09 - now all the videos in this section are
162:11 - designed to help you prepare mentally we
162:15 - going to make sure that you have a
162:18 - really really solid unbeatable
162:21 - mindset why is mindset so important it's
162:25 - because the quality of your thinking
162:27 - when confronted with certain problems is
162:29 - what's going to help you see your way
162:31 - through those problems of your hard
162:33 - times and by definition hard times are
162:36 - really hard because setbacks and
162:38 - failures and doubt are really difficult
162:41 - things to deal with the coding journey
162:43 - is filled with these setbacks and it's
162:45 - filled with these negative experiences
162:48 - so it's very very easy to quit it's hard
162:51 - to persist and very easy to quit but how
162:54 - you think about it your mindset is going
162:57 - to be the difference between persisting
162:59 - and quitting and that is the difference
163:02 - between achieving your goals and failing
163:04 - because failure only really happens when
163:06 - you stop trying or when you quit and as
163:09 - you know now my goal and the goal for
163:12 - you in this in this entire course is to
163:14 - do everything we can can to make sure
163:16 - that you don't get discouraged or let
163:18 - the failures cause you to quit we need
163:20 - to make sure that you don't give up so
163:22 - that you achieve your goal of becoming a
163:26 - coda if you were an athlete for example
163:29 - mental conditioning would just be as
163:31 - important as the physical conditioning
163:33 - you would be trained to handle your
163:35 - emotions when you're playing what seems
163:37 - to be a game without any hope if you
163:40 - look at Champions in the sporting world
163:42 - they're usually someone who overcomes
163:44 - the ODS and fights the battle when it
163:47 - seems hard to win winning easy games is
163:50 - is not the mark of a champion fighting
163:52 - back the setbacks with a great attitude
163:55 - is what makes the champion we see this
163:57 - all the time in the sporting world so
163:59 - why shouldn't it be the same for coding
164:02 - I firmly believe that if we train for
164:04 - our learning objectives like we would
164:06 - train for a sport we would get fantastic
164:09 - results instead of a physical Marathon
164:12 - just think of this as training for an
164:14 - intellectual one there no real
164:16 - difference this intellectual marathon is
164:18 - also filled with setback and confusion
164:21 - and doubt and failure and there are
164:23 - certain common themes that have emerged
164:24 - from my experience and my research into
164:27 - how people experience their Journeys to
164:29 - learn to code this section takes those
164:32 - most common themes and trains you to
164:35 - recognize them to see them for what they
164:37 - are to deal with them and not be tripped
164:39 - up by them so you've made it this far
164:43 - which means you've got what it takes to
164:44 - be a Champion for this intellectual
164:46 - Marathon so let's keep going and I'll
164:49 - see you in the next lecture all right
164:52 - one of the first setbacks I think anyone
164:54 - who's learning to code is going to
164:56 - encounter is that sense of complete and
164:59 - utter confusion things just don't seem
165:03 - to make sense initially right there are
165:05 - all sorts of competing words and
165:07 - inconsistent terminology Concepts that
165:10 - you're reading about even at at a
165:12 - beginner level that just do not make Mak
165:15 - sense you cannot understand them you
165:17 - don't know exactly what they're trying
165:19 - to say and your brain really feels
165:21 - overloaded by the information because
165:24 - you're not just reading trying to read
165:25 - and understand each word in that has a
165:29 - specific meaning and so your brain is
165:31 - really working hard to fully absorb the
165:33 - meaning of every word or every sentence
165:35 - while at the same time trying to stick
165:37 - to the overall concept that's being
165:39 - communicated you are definitely not
165:42 - alone the problem is not many people
165:43 - talk about this which is why I'm doing
165:45 - this video so the sense of total and
165:48 - utter confusion is normal and possibly
165:51 - even inevitable often and this is where
165:54 - I want you to really think about it
165:57 - often it's also a signal it could be a
166:00 - signal for example that maybe you've
166:02 - skipped a step
166:03 - somewhere and maybe it's not always the
166:06 - wrong thing skipping a step is only the
166:09 - wrong thing if it wastes your time
166:11 - energy and money or or if it frustrates
166:15 - you so much that you feel like quitting
166:17 - or are discouraged from
166:20 - continuing so if you're feeling confused
166:23 - the first thing to ask yourself is why
166:26 - am I in this
166:27 - position why am I doing something that
166:30 - is confusing me so much what's the
166:32 - reason for this confusion could it be
166:35 - that the resource is not right for me
166:38 - could it be that I've have jumped too
166:39 - far
166:40 - ahead the second reason is much more
166:43 - likely if you're feeling discouraged and
166:45 - frustrated it's usually reason number
166:48 - two because reason number one just makes
166:51 - you go find a better resource once you
166:54 - are confident and have strong
166:56 - fundamentals reason one stops being a
166:59 - reason it actually stops causing
167:01 - frustration or fear or at least happens
167:03 - much less often with experience you
167:06 - learn to recognize reason one so well
167:09 - that you immediately correct your course
167:11 - of action but initially reason number
167:14 - two which is that you've jumped too far
167:16 - ahead can cause all sorts of doubts and
167:19 - emotional reactions and that's why it's
167:22 - such a dangerous setback for many
167:25 - people so the best way to tackle this is
167:28 - to assume that you've driven into some
167:30 - sort of dead end some dead end alley so
167:33 - reverse your car back up and go back to
167:36 - the last resource that you were really
167:38 - comfortable with that is the last
167:41 - learning that you felt you had
167:43 - mastered it should be the learning
167:46 - objective immediately before this dead
167:49 - end that you've gone
167:50 - down then once you get there ask
167:53 - yourself what is a smaller Next Step
167:56 - than the one that I previously took that
167:58 - got me all
167:59 - confused if you look carefully you will
168:02 - see a smaller step that'll get you there
168:05 - typically the confusion happens when you
168:08 - try and jump over three steps at a time
168:10 - rather than just the one next best step
168:13 - and really that's all you need to do now
168:16 - it may sound frustrating that you have
168:18 - to do that and you may think it's going
168:19 - to take you more time but I promise you
168:21 - taking a smaller step and not getting
168:24 - stuck is much faster than trying to LEAP
168:27 - prematurely to a bigger step and falling
168:30 - down a hole it's important to build up
168:33 - slowly into the lesson that got you
168:35 - confused so much now I totally respect
168:39 - and understand that we're all impatient
168:41 - but if you're in a hurry to get
168:43 - someplace the quickest route is always
168:45 - the one you know you can navigate rather
168:48 - than the random experimental route that
168:50 - looks shorter but you have no idea what
168:52 - it's all about for now let's recap
168:54 - quickly being confused and lost is
168:56 - common and it's simply a signal that
168:59 - you've jumped a little bit too far ahead
169:01 - assume that you could have gotten to
169:03 - this point by taking slightly smaller
169:05 - steps so go back and give yourself
169:08 - smaller quicker wins it may take you a
169:10 - little more time but in the long run it
169:13 - takes a lot less time when you don't get
169:15 - stuck and confused okay I'll see you in
169:18 - the next section okay welcome back in
169:21 - the last video we talked about one of
169:22 - the most common setbacks which is the
169:25 - feeling of absolute and utter confusion
169:28 - in this video we're going to talk about
169:30 - something related and just as common but
169:33 - very very different at the same time
169:35 - it's the sense of being completely
169:38 - overwhelmed now it's important to
169:41 - distinguish the two types of feeling
169:44 - overwhelmed
169:45 - one is when you're overwhelmed because
169:48 - there's just too much information it's
169:50 - like drinking from a fire hose this
169:52 - you're just taking on too much
169:53 - information that's one type the second
169:56 - type happens quite often when you start
169:59 - to learn something you start to learn to
170:01 - code for example and you realize as you
170:03 - go along just how much you don't know
170:06 - and how much there is to know and
170:09 - suddenly you realize that to achieve
170:11 - your learning goals and objectives it's
170:13 - going to take a lot more learning than
170:15 - you had originally planned and that can
170:17 - feel very very overwhelming so that's
170:19 - the second type of overwhelm and I refer
170:22 - to that as an estimation error you've
170:24 - not estimated correctly how much you're
170:26 - going to have to learn to achieve the
170:27 - goal and the plan you've set out for
170:29 - yourself so two types for these two
170:32 - types typically there are three reasons
170:34 - a total of three reasons that could
170:36 - explain one or both of these types of
170:39 - overwhelm so we're going to talk about
170:41 - the types and the reasons for feeling
170:44 - those types of of overwhelm in this
170:45 - video so feeling overwhelmed comes from
170:49 - three reasons as I've mentioned one is
170:53 - you've skipped steps and jumped ahead
170:56 - two you've not quite had a specific
170:59 - enough Focus resulting in you doing far
171:02 - too much and three you've underestimated
171:05 - the size of the goals
171:06 - specifically how much you're going to
171:08 - have to learn in order to achieve your
171:10 - goal now we've covered the first one
171:13 - that is skipping ahead and having jumped
171:15 - too far ahead in the previous video and
171:17 - confusion and the solution and my
171:19 - recommendations are the same so I'm not
171:21 - going to cover that again here just
171:23 - return to that video anytime you need to
171:25 - remind yourself let's look at reason
171:27 - number two what happens when you're
171:30 - feeling overwhelmed from having to
171:31 - absorb way too much information what
171:34 - could the reason for that be well that
171:37 - feeling is a signal that you're
171:39 - absorbing way more information than you
171:42 - can process which typically Happ happens
171:44 - because you're trying to do too much so
171:47 - the solution is to ask yourself why do I
171:49 - feel like this and then write down all
171:52 - the pieces that you're simultaneously
171:54 - attacking all the things that you're
171:56 - simultaneously doing that's making you
171:57 - feel this way and really ask yourself
172:00 - honestly why they need to be done
172:03 - simultaneously why do I need to do all
172:05 - these things at the same time do they
172:07 - really need to be done at the same time
172:10 - so instead of having them as a giant big
172:12 - list of things to do just rewrite them
172:15 - as a sequence of steps and make sure and
172:19 - I cannot emphasize this enough but make
172:21 - sure that each step in that sequence is
172:25 - the minimum effective dose for the next
172:28 - step and that all these steps taken
172:31 - together are each 100% necessary not
172:35 - nice to have but 100% necessary to
172:39 - achieve your learning objectives in some
172:42 - senses each step that you're looking at
172:45 - here is the learning objective of the
172:47 - previous step and it telescopes upwards
172:50 - that way so follow this recipe and break
172:53 - it down now I've said this before and
172:55 - I'm going to say it again yes this
172:57 - approach may make you feel like you're
173:00 - extending your time to completion it's
173:02 - going to take you longer to get there
173:04 - and that really can feel disappointing
173:06 - and stressful and frustrating I
173:07 - completely empathize but also let me
173:10 - promise you that that is just an
173:13 - appearance it's going to feel that way
173:15 - but it's not actually going to be that
173:17 - way it is going to perhaps take you
173:18 - longer in the short term over the next
173:20 - few days but it's saves you a lot of
173:23 - time in the long term because you're not
173:25 - going to get stuck that often and you're
173:28 - certainly not going to be so discouraged
173:30 - that you just throw your hands up in the
173:31 - air and say I'm not doing this and then
173:32 - you lose a few months so please please
173:35 - trust me on this until you see it
173:36 - working for yourself follow these
173:38 - suggestions do less which is doing more
173:41 - and be absolutely clear that each step
173:44 - needs to feed into the very next step
173:46 - after it so the mindset that you need to
173:49 - have as you go through this process in
173:51 - this training is that feeling
173:52 - overwhelmed is really quite natural and
173:54 - a very normal part of the learning
173:56 - process especially when you're extending
173:58 - outside your comfort zone which is
174:00 - always a good good thing so the mindset
174:04 - and the feeling of overwhelm how you
174:06 - relate the two is by recognizing that
174:08 - that feeling of overwhelm is a valuable
174:10 - signal not something to be afraid of but
174:12 - a good piece of information
174:14 - and it's teaching you to manage yourself
174:16 - and to plan better if you feel like
174:18 - quitting that's normal too just remember
174:21 - that this new mindset you have is meant
174:23 - to prevent you from quitting so instead
174:25 - of giving up in your goal just change
174:27 - your approach to one that's better
174:28 - suited to achieving your goal which is
174:30 - what this entire video is all about now
174:33 - let's talk very briefly about question
174:35 - number three or rather reason number
174:37 - three if you're feeling overwhelmed
174:40 - because you've suddenly realized that
174:41 - you underestimated how much work you're
174:44 - going to have to do how much there is to
174:46 - learn then the main question you need to
174:48 - ask yourself is do you still want to
174:50 - achieve this goal so you end up really
174:52 - having to revisit your goals and plans
174:54 - and say do I really still want this am I
174:57 - still committed to achieving this look
174:59 - hard at your plans and goals from
175:01 - section one and if the answer is yes
175:04 - then adjust your learning goals from
175:06 - section one to reflect the additional
175:08 - steps it's going to take you've got
175:10 - enough learning and training now to know
175:12 - how to redesign your plan and do it in a
175:15 - way that's
175:16 - sustainable however if you decide you
175:19 - don't really want to continue to learn
175:20 - to code then that is your choice but if
175:24 - you're thinking this I would encourage
175:26 - you to not take that decision to not
175:29 - proceed because you're feeling
175:32 - intimidated if you decide not to proceed
175:35 - don't let it be because you're giving up
175:36 - but because you have other better
175:38 - priorities for your time okay so let's
175:42 - recap the typical reasons why why coding
175:44 - is overwhelming falls into two types or
175:47 - categories one is just the share
175:48 - information overload and the second is
175:50 - the realization that you've
175:52 - underestimated how much learning is
175:54 - required for your specific goals both
175:56 - are solvable problems because both are
175:58 - just signals and they're common they're
176:01 - normal and they can be dealt with very
176:03 - effectively using the tips and
176:04 - techniques I've suggested in this video
176:07 - okay let's move to the next video okay
176:09 - welcome back in the last video we
176:12 - learned to accept that feeling over
176:14 - welmed is a normal and natural signal
176:16 - and can be a useful signal that actually
176:19 - helps us improve our plan so that we can
176:21 - achieve our learning objectives in a
176:23 - better way in this video we are going to
176:27 - talk about something that affects every
176:29 - single person on Earth doubt
176:33 - specifically self-doubt we all doubt
176:36 - ourselves and no matter what we see the
176:39 - truth is everyone is out there doubting
176:42 - themselves fairly
176:44 - constantly we are all much better at
176:47 - looking confident than feeling confident
176:49 - and that's also true of coders there is
176:52 - a term for this among super high
176:55 - Achievers many of them report
176:57 - experiencing what is known as imposter
177:00 - syndrome which is the feeling that they
177:03 - don't really deserve their success and
177:06 - they may be caught out anytime now for
177:08 - being
177:09 - frauds so why am I telling you all this
177:12 - if big Achievers in all walk of Life
177:14 - feel doubt and even feel like they may
177:17 - be frauds then feeling doubt when you're
177:20 - learning a new and difficult skill is
177:22 - totally okay that's a normal healthy
177:25 - time it's fine you're okay it may feel
177:29 - like you're not fast enough or not
177:31 - talented enough to learn to code but
177:34 - you're wrong it just feels that way this
177:38 - is a great time to ask your Mentor or
177:40 - model on whether they felt it and how
177:43 - they dealt with with it I guarantee they
177:46 - felt it and have struggled with it I did
177:48 - too and all my mentors did too a lot
177:52 - I've included the first blog I ever
177:54 - wrote about this as a resource to this
177:56 - video If you read some other resources
177:59 - in this course you would have seen this
178:01 - is a recurring theme this theme of Doubt
178:06 - there is no great trick to beating self
178:08 - doubt it boils down to two fairly
178:11 - mechanical things one except this is
178:14 - normal Universal and perfectly okay it's
178:17 - an important mindset to have then choose
178:21 - deliberately to ignore it your doubts
178:24 - and fears are only the voices in your
178:26 - head they are not actual facts the fact
178:29 - is that you cannot do this task in front
178:31 - of you yet remember one of the resources
178:34 - I referred to earlier Carol Dre's book
178:36 - called mindset in that book she talks
178:39 - about how people sometimes think that
178:41 - they cannot do something whereas the
178:42 - better way of thinking of it the more
178:44 - productive and accurate way of thinking
178:47 - of it is that you cannot do this right
178:49 - now thinking that you can never do it is
178:52 - an opinion thinking that you can't do it
178:54 - right now is a fact and it implies you
178:57 - can do it soon having that mindset is a
179:00 - growth mindset and it helps to remind
179:03 - yourself that everything is learnable it
179:05 - just takes time and effort the second
179:07 - mechanical step that will be part of
179:10 - your mindset going forward is to Simply
179:12 - keep at it that's it there's no magic
179:15 - just keep at it we've talked about
179:17 - practice revisit that section maybe read
179:20 - a little bit more Let it take a little
179:22 - bit more time it takes the time it takes
179:25 - but setbacks to your time plans are
179:29 - something I cover in the next video so
179:31 - we'll wait for that for now just
179:32 - remember that if you can't do it that is
179:35 - just one snapshot in time for this
179:37 - moment you cannot do it you will
179:39 - eventually be able to do it just like at
179:41 - first you probably sucked at Dy driving
179:44 - or at writing and now you can hold a
179:47 - heated debate with someone while driving
179:49 - and you can answer phone calls while
179:51 - writing it will come to you don't worry
179:55 - just keep moving forward heck it's not
179:58 - even my advice it's advice from nobody
180:02 - is going to hit as hard as life but it
180:04 - ain't about how hard you hit it's about
180:06 - how hard you can get hit and keep moving
180:09 - forward how much you can take and keep
180:11 - moving forward that's how wi it is done
180:15 - so when you're feeling doubt don't
180:17 - assume that this is a signal that you're
180:19 - not good enough doubt is not really a
180:22 - signal it's a human condition thing it
180:25 - is our inner dialogue and it's usually
180:27 - an opinion not a fact just focus on the
180:30 - facts you're going to learn to code
180:32 - that's a fact okay enough motivational
180:35 - speaking I will see you in the next
180:37 - video Welcome Back in the last video we
180:40 - talked about self-doubt and some of the
180:42 - mindsets you need to have to effectively
180:45 - tackle it how common it is how Universal
180:48 - it is and how it's not really that much
180:50 - of a problem to deal with if you know
180:53 - how similarly in this video we're going
180:55 - to talk about the frustration that comes
180:58 - from coding taking the kind of time it
181:01 - does unfortunately it does take more
181:03 - time than you expect and that's almost
181:06 - universally the case in one of the
181:08 - previous videos on myths we talked about
181:10 - one of the myths being that this is
181:11 - something that you can do really quickly
181:13 - for example you may be tempted to
181:14 - believe that you can knock together your
181:16 - next startup in your garage or your dor
181:18 - room in a weekend the popular myth
181:21 - around this is unfortunately not true so
181:23 - the question then is what is the mindset
181:25 - that you need to deal with the
181:27 - inevitable time it's going to take and
181:29 - let me say this again progress is going
181:32 - to be slower than you hoped that is
181:34 - almost always the way it is it's just a
181:37 - fact so knowing that what sort of
181:42 - mindset do you need to make sure that
181:44 - you're not going to give up that's what
181:46 - we're going to answer in this video so
181:49 - knowing that it's a fact that it's going
181:50 - to take more time than you expect or
181:53 - plan doesn't really make it much easier
181:55 - to accept does it but it is worth
181:58 - remembering that what we're now dealing
182:00 - with is not really learning anymore what
182:03 - we need to do is develop a mindset about
182:06 - patience specifically the patience to
182:08 - work until we achieve our goal now this
182:10 - may sound like the most common sense
182:12 - stuff to you like why are you telling me
182:15 - this Zubin I know all this yes you do
182:18 - everybody does and yet almost everybody
182:20 - experiences the frustration it's because
182:23 - there is a gap between what we know and
182:25 - what we believe about ourselves in a
182:27 - situation so what's really important is
182:29 - to cultivate in yourself the mindset of
182:31 - patience and discipline and it's not
182:34 - just about coding the reason we know
182:36 - this Open Secret and the reason we all
182:38 - are aware of this mindset in theory is
182:40 - because it works in every area of life
182:42 - and in fact I'd argue it's particularly
182:44 - relevant in coding for someone who's new
182:47 - to the journey of learning how to code I
182:50 - would actually encourage you to view it
182:52 - as a form of training see programming as
182:55 - a craft because that's really what it is
182:57 - you have to have a Craftsman's mindset
182:59 - you need to Apprentice yourself and all
183:02 - crafts take time to master it's a slow
183:05 - deliberate and steady process and
183:08 - through it you will also learn to
183:10 - appreciate that estimating coding tasks
183:13 - is actually hard you'll learn to do it
183:16 - much much better with practice no doubt
183:18 - but it'll give you a newfound empathy
183:20 - for the idea that you can knock together
183:22 - something very quickly in a few hours
183:24 - the reason why this mindset of patience
183:26 - and discipline is critical is because
183:29 - there is a real danger that you will run
183:30 - out of patience and give up and we don't
183:33 - want that right sometimes in some
183:36 - circumstances it is okay to decide not
183:39 - to do it for example where you're in an
183:41 - entrepreneur and you run out a Runway
183:44 - and you only needed to code for the sake
183:46 - of building a certain product so maybe
183:49 - you ran out of Runway maybe you found a
183:51 - technical co-founder maybe you found a
183:53 - prototyping tool online that's a more
183:56 - efficient path to achieving your goal in
183:59 - that case it sort of makes sense to not
184:01 - code if the coding was only a means to
184:04 - that end but if you intend to learn to
184:06 - code because you want to be a coder then
184:09 - losing patience is dangerous because it
184:12 - will cause you to take shortcuts and
184:15 - waste more time and effort or it'll
184:17 - cause you to give up in which case
184:19 - you'll never become a coder so here are
184:21 - some ways for you to overcome the
184:23 - discouragement of slow progress one go
184:27 - back to the section on goals and plans
184:30 - and the five ws and refresh yourself on
184:33 - why you want to code why did you want to
184:35 - learn to code in the first place and is
184:37 - that reason something that still
184:39 - resonates do you still really really
184:40 - want it when you really want something
184:43 - and the reason why you want something is
184:45 - still very fresh in your mind you will
184:48 - not give up that's just how the human
184:49 - mind works number two remind yourself of
184:53 - the simple but inconvenient math of
184:55 - learning something new success is equal
184:58 - to time plus effort there's no getting
185:00 - around it but it also means that taking
185:03 - longer means more success because it's
185:04 - linked to time you know I personally
185:07 - struggled with this situation and this
185:09 - mindset so many times I mean progress
185:11 - for me was so slow I ran out of Runway I
185:15 - ran out of patience and then I ran out
185:17 - of confidence at one time I had more
185:19 - money than I had time at another time I
185:21 - had more time than I had money and each
185:24 - time I adjusted my plan to suit my
185:27 - specific circumstances that's actually
185:29 - how I discovered the concept of the
185:31 - minimum effective dose to get the
185:33 - outcome I considered adequate given my
185:36 - limited resources and then I guess my
185:40 - life changed a little bit when I read a
185:41 - certain letter that Tim Ferris included
185:43 - in his book tools of Titans I've
185:47 - provided a link in the resources section
185:49 - to this video this letter summarized the
185:52 - whole issue of slow progress brilliantly
185:55 - It's a letter from a coach to Tim Ferris
185:57 - and I've included an except of this
186:00 - letter in the course resources but you
186:02 - know what I recommend getting the book
186:03 - it's worth it even just for that one
186:05 - letter definitely read it in fact the
186:09 - first word of that letter sums up the
186:12 - mindset you need I'm not going to tell
186:14 - you what it is cuz you've got to go and
186:15 - find it yourself okay that's enough for
186:17 - now I'll see you in the next video hey
186:20 - welcome back in the last video we talked
186:23 - about how slow progress can be we saw
186:26 - that slow progress is an inevitable part
186:29 - of learning complex skills initially it
186:33 - takes ages we seem completely
186:36 - incompetent in fact there is a
186:39 - well-known framework for understanding
186:41 - the stages that every human being has
186:43 - has to go through as they travel from
186:45 - being a newb to being a master here it
186:48 - is and unfortunately I don't have a
186:51 - source for the drawing other than the
186:53 - Reddit link I found it at it's a
186:55 - fantastic drawing and it sums it up
186:58 - beautifully I've added the Reddit Link
187:00 - in the resources section to this video
187:03 - as you can see moving from step two to
187:06 - step three is the hardest it's really
187:09 - hard and it's that truff of Despair that
187:11 - overcomes a lot of people
187:14 - so in this video we're going to talk
187:15 - about getting stuck
187:18 - why because that happens a lot in coding
187:21 - and you need the right strategies and
187:23 - mentality around it let me assure you
187:27 - this happens to senior experience
187:29 - programmers too I've added another
187:32 - resource to this video which is a quora
187:34 - post on getting stuck in programming
187:36 - just for example sake it's normal and
187:39 - common it happens at all levels you just
187:42 - get get better at dealing with it mainly
187:44 - through better strategies that come from
187:47 - your
187:48 - experience personally the first few
187:50 - months I got stuck a lot I mean let's be
187:53 - honest console errors look like a mess
187:58 - they are absolutely bizarre looking and
188:00 - are definitely not beginner friendly
188:03 - it's just this crazy jumble of text and
188:05 - weird words and numbers it makes no
188:07 - sense and debugging really does feel
188:11 - frustrating and mysterious so I got
188:12 - stuck and stuck and stuck and stuck it
188:15 - made me so angry because often I was
188:17 - following somebody else's tutorials and
188:20 - then things a change in some library or
188:23 - package or the the operating system or
188:25 - something and so the tutorial is no
188:27 - longer up to date and people are writing
188:30 - new tutorials but I'm stuck in the old
188:32 - one don't know about the new one and so
188:35 - my projects pretty much wasted or at
188:37 - least it feels like that to me so my
188:40 - suggestion is this when when an error
188:42 - happens the first thing to tell yourself
188:44 - is okay this is now going to take me
188:47 - some time accept it I don't know how
188:49 - much time so best not to be in a hurry I
188:52 - guess maybe better not to expect to
188:54 - resolve it today it would be great if I
188:56 - could but it's very possible this may
188:58 - take a few days next ask yourself can I
189:02 - make any sense of this error message
189:04 - look for any clue that you can Google
189:06 - about and then you Google the errors and
189:09 - keep searching till you find someone
189:11 - that has handled something similar so
189:13 - sometimes it could be a small error or
189:14 - bug in your code and you need to step
189:16 - away and then you'll see it the point is
189:18 - you step away and then you slowly build
189:21 - up the skill of troubleshooting your
189:22 - errors and Google and stack Overflow are
189:25 - your friends but it does take a lot of
189:27 - patience and effort to read through all
189:30 - the results carefully and to understand
189:32 - where this error is coming from that
189:34 - also takes
189:35 - experience sometimes people use terms
189:37 - and words interchangeably and that can
189:40 - cause a lot of confusion for you so just
189:42 - just keep patient this is part of the
189:44 - learning process and remember pace
189:46 - yourself we've talked about this pace
189:47 - yourself so you can be sustainable
189:50 - unfortunately as we talked about in the
189:51 - last video it's going to take the time
189:53 - it takes and as you experience these
189:55 - sort of frustrations and getting stuck
189:58 - more often you do get faster at
190:00 - diagnosing and resolving the issues but
190:03 - if you rush too much on a new era then
190:06 - you run the risk of making mistakes
190:08 - that'll cost you even more time but I
190:10 - find and I'm sure this is a consolation
190:13 - to you that the first time I try
190:15 - anything I rarely get it right I make
190:17 - mistakes and come up against obstacles I
190:19 - hadn't planned on the second time well
190:22 - that's a different story the second time
190:24 - is usually a lot faster it takes me
190:26 - typically about onethird the time of the
190:28 - previous Tri and that's true of
190:31 - diagnosing and solving errors too so the
190:34 - mindset to have here is not to blame
190:37 - yourself but recognize this getting
190:39 - stuck issue as a necessary and
190:41 - unavoidable part part of coding and an
190:44 - important part of your learning
190:46 - experience also remember that the first
190:49 - few times are the worst like anything
190:50 - else the first few times are the worst
190:52 - it's going to be slow and frustrating
190:54 - needs a lot of patience and focus on not
190:56 - rushing yourself things are going to
190:58 - break things are going to make no sense
191:00 - sometime you're going to get stuck in a
191:02 - hole and you're not going to know how to
191:03 - get out of it for a few hours that's
191:06 - just how it is and it's okay sometimes
191:08 - you've chased the wrong angle and you
191:10 - need to rewrite an entire chunk of code
191:13 - I've had to do that several times even
191:15 - recently I thought I'd research the
191:17 - library pretty well and used it in a
191:20 - small project 5 days later I found out
191:22 - that the library does not actually do
191:24 - something the exact way I needed it to I
191:27 - had designed my app the wrong way it was
191:29 - my fault and I could either rewrite my
191:31 - code to fit this library or start
191:33 - researching again to find another
191:35 - library or write my own code from
191:39 - scratch instead of using that Library
191:42 - all these options were going to take me
191:43 - time and I found that out after being
191:46 - stuck for a few days so i' already lost
191:48 - time I had made the mistake of rushing
191:51 - another 2 hours of reading on the
191:53 - library would have given me the
191:54 - information I needed to design my app
191:57 - right from the start and saved me
191:59 - potentially over 8 days so getting stuck
192:03 - is normal it's part of the experience
192:05 - don't rush yourself don't let despair
192:07 - overcome your desire to be creative
192:09 - through code this is one of the less fun
192:11 - parts of being a developer there is no
192:12 - doubt so just focus on the fun parts to
192:14 - keep your motivation up and to conclude
192:17 - let me show you something else from one
192:19 - Kora user reading it definitely made me
192:22 - feel better so don't worry about getting
192:24 - stuck just keep moving forward and now
192:27 - let's move forward to the next video
192:30 - Welcome Back in the last video we talked
192:33 - about getting stuck a lot and how that's
192:36 - fairly normal but also there are very
192:38 - good mindsets and techniques to deal
192:39 - with that problem in this video we're
192:42 - going to talk about another very common
192:44 - source of setbacks for coders which is
192:47 - making unfavorable
192:50 - comparisons as humans we tend to compare
192:53 - ourselves with others that's normal but
192:56 - it's almost always
192:57 - unfavorable and unhelpful because it has
193:01 - a particularly negative effect when it
193:04 - impacts your confidence as well I know
193:06 - quite a few people who think that coding
193:09 - is what they show in the movies or on TV
193:12 - nope it's not not equally don't assume
193:14 - that you can build the same sort of
193:16 - application that Google can after all
193:19 - they have thousands of developers
193:21 - working on every small line of code when
193:23 - you feel this way and find that you're
193:25 - making these sort of demoralizing
193:28 - comparisons speak to an experienced
193:30 - Mentor or model or someone who's done
193:33 - what you're trying to do they will give
193:35 - you a perspective that is closer to
193:37 - reality and look if you're going to
193:40 - compare yourself then do it in these two
193:42 - ways is one if they can do it I can two
193:48 - two if they could do it in 1976 or in
193:52 - 1996 when the world didn't even have the
193:54 - kind of resources we now have and there
193:57 - was no Google and no stack Overflow then
194:00 - it's much easier for me to do it now or
194:03 - rather it was much harder for them and
194:06 - I've got it easy compared to them so
194:09 - even if you secretly think you're not as
194:11 - smart as they are
194:13 - fine I don't agree but fine you don't
194:16 - need to be you can do what they can do
194:19 - cuz you've actually got it easier just
194:22 - remember that Bill Gates and Steve wnc
194:24 - and Mark Zuckerberg and Jack dorsy are a
194:27 - bunch of self-taught folks who taught
194:30 - themselves in a world where resources
194:31 - were significantly harder to access than
194:34 - they are today so if they can do it with
194:37 - those constraints you can absolutely do
194:39 - it with all the material freely
194:41 - available on on your fingertips today
194:44 - the mindset to have here is that it's
194:46 - never been easier to become a coder and
194:48 - it's easier for me to do it than it was
194:50 - for them okay let's move to the next
194:53 - video okay welcome back everybody in
194:57 - this video we now conclude the section
194:59 - on the setbacks and the corresponding
195:02 - mindsets that'll help you overcome those
195:05 - setbacks this section is one of the most
195:08 - important in the entire course because
195:11 - this is the section that I think you
195:13 - will keep coming back to over the months
195:15 - and years that you try to teach yourself
195:17 - to code because it's the one that's
195:19 - going to help you overcome a lot of
195:21 - those obstacles and you're going to
195:23 - remember a lot of the things I say here
195:25 - when you encounter those
195:27 - obstacles it's not hard to learn to code
195:31 - but it is a difficult task to persist in
195:34 - learning to code so this section is so
195:37 - important so fundamental to your success
195:41 - in learning to code that I'm going to
195:43 - spend this conclusion video just
195:45 - wrapping up and recapping all the key
195:48 - messages from each of the videos in the
195:50 - section so that you also have it in the
195:52 - one place let's keep
195:55 - going so the key ideas in this section
195:58 - are the
195:59 - following one learning to code is very
196:04 - confusing everything you read is going
196:06 - to feel confusing at first the mindset
196:08 - you need to have is it's okay it's
196:11 - normal it's just a signal that maybe
196:14 - you've skipped ahead too far and you
196:16 - need to wind back just a little bit
196:19 - reverse out of the situation back out
196:21 - slowly and then break your next step up
196:24 - into smaller pieces into smaller next
196:27 - steps go for the quick wins so your
196:29 - confidence stays up and you have a
196:32 - strong sense of your own
196:34 - progress idea two you're feeling
196:37 - overwhelmed yep that's fairly common and
196:40 - normal too and it's usually two types of
196:42 - being overwhelmed one is from too much
196:44 - information and the other is from
196:46 - finding out that you may have
196:47 - underestimated how much you need to
196:50 - do both apply very commonly to learning
196:54 - complex skills that's always a hard
196:56 - thing to do but you know it's very
196:58 - rewarding when you persist feeling
197:01 - overwhelmed is a useful signal as well
197:03 - it tells you that maybe you're biting
197:04 - off more than you can chew mentally so
197:07 - again break it down smaller pieces make
197:09 - it easier to digest often we're just
197:12 - trying to pile our priorities one on top
197:14 - of the other instead stop step back
197:19 - separate your priorities so that there
197:21 - steps along a path and not one big
197:23 - jumbled
197:25 - pile test each step to make sure it's
197:28 - 100% necessary to achieve your
197:32 - goals make sure that without taking that
197:35 - step you cannot achieve your
197:38 - goal number three you're feeling a lot
197:41 - of self doubt this is totally normal and
197:44 - Universal it's a human thing it just
197:47 - proves you're human that's good right
197:50 - remind yourself that it is not that you
197:52 - cannot do something it's that you cannot
197:55 - do something as yet this is the sign of
197:58 - a growth mindset next remind yourself
198:02 - that the only way to do it is by doing
198:04 - it over and over again just keep going
198:09 - it will click into place in time
198:11 - guaranteed and if you need extra
198:13 - inspiration remember Rocky it ain't
198:16 - about how hard you hit it's about how
198:19 - hard you can get hit and keep moving
198:21 - forward number four progress is so slow
198:26 - yes it is progress is always slow for
198:29 - new skills progress demands that you
198:32 - have patience and persistence for extra
198:35 - help go back to your five ws and remind
198:38 - yourself of your why why are you doing
198:41 - this
198:42 - the danger is not that you can't do it
198:45 - it's that you will lose patience and
198:47 - quit if your why is important enough you
198:50 - won't quit it's that simple it's not
198:53 - easy but it's simple and think of it as
198:56 - math success is always equal to effort
198:59 - plus time and since time is half the
199:02 - equation the more time you spend the
199:05 - more progress you're going to make for
199:07 - super inspiration read that letter from
199:09 - coach s to Tim Ferris included in the
199:12 - book tools of
199:14 - Titans number five getting stuck a lot
199:18 - yep that's normal it's part of the
199:20 - experience of programming at all levels
199:23 - of experience you deal with it first by
199:26 - reminding yourself that maybe this is
199:28 - going to take a little more time than
199:29 - you had planned that's okay got to
199:31 - accept it then slowly start
199:34 - investigating the problem and unravel it
199:36 - piece by piece it is not possible to
199:39 - learn to code without having to start
199:41 - over on some things that is just a
199:44 - normal part of coding so don't fight it
199:47 - and it will be easier to deal with but
199:49 - the first few times are always always
199:52 - very hard and always takes you a lot
199:55 - more time but every time you do it you
199:57 - get faster and you get better number six
200:01 - comparing yourself to others for example
200:04 - I'm not like Zuck if you do compare
200:07 - yourself then do it in a way that favors
200:10 - you for example
200:12 - if Zach can do it you absolutely can and
200:16 - if Steve Jobs and wnc and Bill Gates
200:19 - could do it without any of the resources
200:21 - you have today conveniently at your
200:23 - fingertips then recognize it was much
200:25 - harder for them which means you can
200:28 - absolutely do it okay I think you've got
200:32 - some formidable tools and mindsets and
200:34 - weapons Here In Your Arsenal to pursue
200:36 - your dream to code let's wrap this up so
200:39 - that we can get you started on your
200:40 - journey as soon as possible I'll see you
200:43 - in the next
200:48 - video congratulations guys you've made
200:51 - it to the end I am so incredibly excited
200:54 - for you and proud of you and what we've
200:56 - done together this is fantastic look
200:59 - you've got your training shoes on you
201:00 - are so ready you are so ready for the
201:02 - marathon of learning to code and I would
201:04 - argue you're actually ready to learn
201:06 - pretty much any new skill that you want
201:07 - this just happens to be about coding for
201:09 - this course right I hope you enjoyed
201:11 - yourself as much as I did um sharing
201:13 - with you all the the stuff that I've
201:15 - learned over the years and if you still
201:18 - here till this very end point um that
201:20 - means you've got the ability to persist
201:22 - and you know what I say the only thing
201:24 - that stands between you and your goal is
201:26 - time and effort and lots of practice but
201:30 - if you've made it this far then that
201:32 - means you're willing to put in the work
201:33 - which is fantastic hopefully through the
201:36 - help of this course you've now got tools
201:39 - and Frameworks that will help you reduce
201:41 - the amount amount of time and effort
201:42 - required to achieve your learning
201:44 - objectives but there's no getting around
201:46 - the fact that time and effort is what
201:47 - it's going to take so I have no doubt
201:49 - that you're going to get there and I'm
201:51 - really excited that you've come to the
201:52 - end couple of things just um sort of
201:54 - housekeeping towards the end one if you
201:57 - could keep contributing to the Q&A as
201:59 - you go through your Learning Journey
202:01 - that would be most valuable to all of us
202:03 - selfishly I would love to hear how this
202:05 - course has helped and how you've
202:07 - personally experienced some of the
202:08 - things I've talked about in this course
202:10 - but also I think the rest of this
202:11 - student Community would get a lot from
202:13 - knowing that other students their peers
202:16 - could be like models and mentors to them
202:19 - in showing them their personal
202:21 - application of some of the lessons from
202:23 - this uh course so if you do have some
202:25 - stuff like that to share please please
202:27 - please share it on on the Q&A and also
202:30 - reach out to me on Twitter and and share
202:32 - it on Twitter because that's another
202:33 - great way to show the world that you've
202:35 - made such good progress that you've got
202:37 - the initiative and the drive to do what
202:39 - you're doing so definitely share it on
202:41 - the Q&A and on Twitter finally I think
202:44 - it's safe to say that now is a really
202:46 - good time for you to pause and save the
202:48 - moment like celebrate because you've
202:50 - taken an enormous Leap Forward in your
202:53 - demonstration of your willingness to do
202:56 - what it takes do whatever it takes to
202:58 - win and to achieve your learning
203:00 - objective like I said no doubt that
203:02 - you're going to make it you're going to
203:03 - nail it keep going don't stop and if
203:05 - there's anything you need I'm right here
203:07 - all right good
203:09 - luck