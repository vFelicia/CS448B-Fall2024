00:00 - Hi, welcome to the CSS zero to hero course,
in this course, you're going to completely
00:06 - learn how to use CSS from the ground up, we're
going to cover every single concept or every
00:12 - major concept in CSS, and really build up
our knowledge of it. So before we move on,
00:18 - I just wanted to give you some motivation
on what you're going to be doing in this course.
00:23 - So you can, you know, really get excited about
the course and start jump, you just jump straight
00:28 - into learning. So first of all, let's look
at some of the stuff that we've done over
00:33 - the course. Now we start with a base website.
And over time, we style this and change up
00:38 - the website using every technique that we've
learned. So you can see that we've created
00:43 - multiple grids, colors, we've changed this
completely and transformed the website in
00:47 - every single way. We've also created things
like gradients. And we've also styled change
00:53 - our custom fonts, colors, and backgrounds.
We cover all of this in depth throughout the
00:58 - course. And we do it step by step so that
you don't rush through and forget anything.
01:03 - At the end of the course, there's also a little
challenge here, where you try to bring all
01:08 - your skills together and style a website from
scratch. Now there is a solution video, if
01:13 - you need it, maybe you just want to see another
opinion on it. But pretty much you're going
01:17 - to bring all the skills you learned in this
course together and create this nice website.
01:22 - It's responsive, it's got all sorts of layout
features. And it also has animations, you
01:28 - can see just like that. So that's some of
the actual website stuff we're going to be
01:34 - doing in the course. But why don't we look
at some of the code that we've written. So
01:39 - I created this file from the start, I didn't
have it at the start of this course. But at
01:44 - the end, you can see that we've written now,
well over 100 lines of code here. And I although
01:51 - it may look intimidating. Now, I do explain
every single part of it, so that at the end,
01:56 - you can just read this straightaway and understand
what's going on in an instant. There's also
02:02 - the styling for our solution video or for
the solution to the challenge here. So you
02:07 - can see we've got a bunch of stuff here. And
like I said, it may look confusing, but once
02:12 - we move on, this will make a lot more sense.
So that's pretty much it for the little achievements
02:19 - video for this course, I hope you're a little
bit motivated and excited to go forward and
02:23 - start learning about CSS is a pretty exciting
topic. And it can really advance your web
02:29 - development if you don't already know it.
Alright, let's get straight into it.
02:32 - Hi, welcome to the CSS zero to hero course,
in this course, you're going to completely
02:33 - learn how to use CSS from the ground up, we're
going to cover every single concept or every
02:34 - major concept in CSS, and really build up
our knowledge of it. So before we move on,
02:35 - I just wanted to give you some motivation
on what you're going to be doing in this course.
02:36 - So you can, you know, really get excited about
the course and start jump, you just jump straight
02:37 - into learning. So first of all, let's look
at some of the stuff that we've done over
02:38 - the course. Now we start with a base website.
And over time, we style this and change up
02:39 - the website using every technique that we've
learned. So you can see that we've created
02:40 - multiple grids, colors, we've changed this
completely and transformed the website in
02:41 - every single way. We've also created things
like gradients. And we've also styled change
02:42 - our custom fonts, colors, and backgrounds.
We cover all of this in depth throughout the
02:43 - course. And we do it step by step so that
you don't rush through and forget anything.
02:44 - At the end of the course, there's also a little
challenge here, where you try to bring all
02:45 - your skills together and style a website from
scratch. Now there is a solution video, if
02:46 - you need it, maybe you just want to see another
opinion on it. But pretty much you're going
02:47 - to bring all the skills you learned in this
course together and create this nice website.
02:48 - It's responsive, it's got all sorts of layout
features. And it also has animations, you
02:49 - can see just like that. So that's some of
the actual website stuff we're going to be
02:50 - doing in the course. But why don't we look
at some of the code that we've written. So
02:51 - I created this file from the start, I didn't
have it at the start of this course. But at
02:52 - the end, you can see that we've written now,
well over 100 lines of code here. And I although
02:53 - it may look intimidating. Now, I do explain
every single part of it, so that at the end,
02:54 - you can just read this straightaway and understand
what's going on in an instant. There's also
02:55 - the styling for our solution video or for
the solution to the challenge here. So you
02:56 - can see we've got a bunch of stuff here. And
like I said, it may look confusing, but once
02:57 - we move on, this will make a lot more sense.
So that's pretty much it for the little achievements
02:58 - video for this course, I hope you're a little
bit motivated and excited to go forward and
02:59 - start learning about CSS is a pretty exciting
topic. And it can really advance your web
03:00 - development if you don't already know it.
Alright, let's get straight into it.
03:01 - So in this video, I'm going to be giving a
quick introduction to the syllabus of the
03:02 - course. Now it is quite a long video. So if
you don't want to watch it, or if you don't
03:03 - really want to know an in depth analysis on
what the course is going to be covering, then
03:04 - you can go ahead and skip this video. All
I say is that please make sure that you read
03:05 - the prerequisites lecture that came before
this. Now, there are some very important details
03:06 - in there and some skills that you need to
know to move on with this course. And if you
03:07 - don't know them, you're going to have a very
difficult time picking up some of the language.
03:10 - Now there's only one real prerequisite, which
is HTML. But you can go ahead and read that.
03:17 - And just make sure that you have all the skills
necessary. Alright, so let's get started.
03:21 - And the first thing I want to talk about is
the section structure. So the section is just
03:27 - a it's a bunch of lectures. So these are video
lectures. And they're made in an interactive
03:33 - way. So you can see in this picture here,
I am coding along with a nice preview on the
03:39 - side showing what what our progress looks
like. So at the end of each section is a 10,
03:46 - a 10 question multiple choice quiz that covers
all of the skills learned in that section.
03:52 - So it's really encouraged to go and just try
it out and see if you know everything. And
03:57 - then that way you can diagnose yourself and
see maybe there's some skills that you're
04:00 - fuzzy on or you need to revisit. And on top
of that, I really encourage everyone who is
04:06 - following along in the course, to not just
watch and be a passive consumer, you know,
04:10 - really go out and try and use your skills
because otherwise you're not going to learn
04:15 - it. Otherwise, you're just gonna end up having
the information on your head. And especially
04:19 - when it comes to development programming,
you know, experiences everything, you can't
04:24 - just watch lectures and just magically be
able to do it. So I encourage you to go off
04:31 - and follow the lectures and try and really
use the skills that you learn in your own
04:35 - time and that will make sure that you have
the highest retention possible. So let's get
04:41 - straight into it. The first section, which
is the section we're in right now is the introductory
04:46 - section. So setting up the course and we also
install all the programs and software necessary
04:51 - to set up our working environment. So you
can follow along it's not necessary but it
04:56 - is highly recommended. Because if you're using
maybe Something else that you're not experienced
05:01 - with, you may have a hard time getting used
to the program and things like that. So I
05:06 - recommend you follow along and set up the
environment just like I do. So the second
05:10 - question of sorry, the second section is the
introduction to CSS. Now, unlike the first
05:17 - section, this is going to be looking at introducing
the actual CSS language, we're going to be
05:23 - looking at some theory behind it, where it's
used and what kind of a difference it makes,
05:28 - we're also going to be looking at creating
and linking our own CSS document to our page.
05:34 - So the third section is going to be looking
at our first real part of CSS. So these are
05:39 - the selectors and properties. Now, again,
you don't need to know any of these terms.
05:44 - I'm just going over like a kind of spit ball
kind of effect here, just trying to just skim
05:49 - over everything. So here we're going to learn
about a very important concept, which are
05:54 - selectors and properties, and how they really
play into CSS, we're also going to be learning
05:59 - about the different types of selectors and
where to use each one, depending on the situation.
06:03 - So you're going to learn that as well. next
section is where we start using the real power
06:10 - of CSS. So we're going to start using colors.
And we're going to be applying those colors
06:14 - to our page. So we're going to be learning
about different color types, how kind of a
06:19 - little bit of how colors are set up on the
computer. So things like RGB or other color
06:24 - codes, and then we're going to use them and
apply them using CSS to backgrounds and text
06:29 - and all sorts of other things. The next section
is going to be looking at mainly at text.
06:34 - So we're going to be looking at trying to
change the field style and look of text. So
06:40 - we're going to be changing the fonts the size,
we're also going to be changing the bolding,
06:45 - there are so many different things that you
can do in the section. And we're going to
06:48 - cover all of them then. So the next section
is where we will kind of take a turn from
06:54 - looking at styling and looking now at layout.
So we're going to be learning some more fundamental
07:00 - CSS concepts related to layout, we'll talk
about those when we get to it, then we're
07:04 - going to be applying them to actually change
the style or the layout of our page. So we're
07:09 - going to be moving items around, we're going
to resize them and do all sorts of things
07:14 - with them once we get to that point. The next
section we're going to look at is called Flexbox.
07:19 - Now I'm sure you've heard of this if you've
looked into any web development, but pretty
07:23 - much it's an alternate way to mess around
with the layout in CSS, and it is quite new.
07:29 - But it is a pretty commonly used concept today,
especially for Responsive layouts, making
07:34 - websites that can work on all devices. So
it's a pretty important concept there. So
07:39 - we're going to focus on the theory behind
Flexbox. First, talking about how it works,
07:43 - how it's set up. And then we're also going
to be applying it to real life talking about,
07:48 - you know, where it can be used some of the
benefits, and then actually using it in our
07:53 - own projects by creating our own Flexbox and
messing around with it. So we're going to
07:58 - do that as well. So the next section is pretty
similar to Section seven, it's going to be
08:03 - looking at a another alternative to using
normal layout features. in CSS. It's called
08:08 - grid. And there are a lot of similarities.
But we're also going to be talking about the
08:13 - differences. So along with going over a comprehensive
overview of kind of how grid works, we're
08:20 - also going to be going over some of the similarities
and differences kind of comparing it to Flexbox.
08:25 - And then we're going to talk about, you know
which one you should use in each individual
08:30 - situation. So the next section is probably
one of my favorites because it really puts
08:36 - all of the older kind of websites from the
new sites and separates them the modern sites
08:41 - from the old sites, and we're going to be
looking at animations and transitions. So
08:46 - first, we're going to look at transitions
and how to use pseudo selectors. Again, don't
08:49 - worry about our means to create these nice
smooth transitions. And then we're also going
08:55 - to be learning how to manipulate them. So
kind of change how a transition looks, we're
09:00 - also going to learn how to create a flight
and manipulate our own animation. So we create
09:05 - these animations from scratch using CSS. And
then we can kind of change them and change
09:11 - how they look based on what we want. So the
last section is a really interesting section,
09:17 - which kind of summarizes everything and test
your skills. So it starts with a 30 question
09:22 - final exam, which is a bunch of questions
from every single section or topic that we've
09:27 - covered. And it is it is a final exam. So
there is like a passing grade and everything
09:33 - like that. But again, if you fail, there's
no real consequences to it. It's just kind
09:39 - of a diagnostic tool to test where you are
in your CSS knowledge. And after that, it's
09:44 - followed by a really nice challenge, which
can help you know, really see where you're
09:50 - at, not from a theoretical standpoint, but
from an actual practical standpoint. So this
09:54 - challenge is going to be talked about later
and when to get to that point, but pretty
09:59 - much you're going to Be styling a website
from scratch, you're going to be given a blank
10:04 - HTML document or Well, it's not blank, it's
going to have content. But you're going to
10:08 - be given an HTML document with no styling.
And you have to style it yourself based on
10:12 - a list of
10:13 - So in this video, I'm going to be giving a
quick introduction to the syllabus of the
10:19 - course. Now it is quite a long video. So if
you don't want to watch it, or if you don't
10:24 - really want to know an in depth analysis on
what the course is going to be covering, then
10:29 - you can go ahead and skip this video. All
I say is that please make sure that you read
10:33 - the prerequisites lecture that came before
this. Now, there are some very important details
10:38 - in there and some skills that you need to
know to move on with this course. And if you
10:43 - don't know them, you're going to have a very
difficult time picking up some of the language.
10:46 - Now there's only one real prerequisite, which
is HTML. But you can go ahead and read that.
10:50 - And just make sure that you have all the skills
necessary. Alright, so let's get started.
10:55 - And the first thing I want to talk about is
the section structure. So the section is just
11:00 - a it's a bunch of lectures. So these are video
lectures. And they're made in an interactive
11:03 - way. So you can see in this picture here,
I am coding along with a nice preview on the
11:07 - side showing what what our progress looks
like. So at the end of each section is a 10,
11:11 - a 10 question multiple choice quiz that covers
all of the skills learned in that section.
11:23 - So it's really encouraged to go and just try
it out and see if you know everything. And
11:25 - then that way you can diagnose yourself and
see maybe there's some skills that you're
11:29 - fuzzy on or you need to revisit. And on top
of that, I really encourage everyone who is
11:31 - following along in the course, to not just
watch and be a passive consumer, you know,
11:36 - really go out and try and use your skills
because otherwise you're not going to learn
11:43 - it. Otherwise, you're just gonna end up having
the information on your head. And especially
11:48 - when it comes to development programming,
you know, experiences everything, you can't
11:49 - just watch lectures and just magically be
able to do it. So I encourage you to go off
11:54 - and follow the lectures and try and really
use the skills that you learn in your own
11:56 - time and that will make sure that you have
the highest retention possible. So let's get
12:00 - straight into it. The first section, which
is the section we're in right now is the introductory
12:04 - section. So setting up the course and we also
install all the programs and software necessary
12:09 - to set up our working environment. So you
can follow along it's not necessary but it
12:13 - is highly recommended. Because if you're using
maybe Something else that you're not experienced
12:17 - with, you may have a hard time getting used
to the program and things like that. So I
12:22 - recommend you follow along and set up the
environment just like I do. So the second
12:31 - question of sorry, the second section is the
introduction to CSS. Now, unlike the first
12:37 - section, this is going to be looking at introducing
the actual CSS language, we're going to be
12:42 - looking at some theory behind it, where it's
used and what kind of a difference it makes,
12:46 - we're also going to be looking at creating
and linking our own CSS document to our page.
12:49 - So the third section is going to be looking
at our first real part of CSS. So these are
12:54 - the selectors and properties. Now, again,
you don't need to know any of these terms.
12:56 - I'm just going over like a kind of spit ball
kind of effect here, just trying to just skim
13:02 - over everything. So here we're going to learn
about a very important concept, which are
13:06 - selectors and properties, and how they really
play into CSS, we're also going to be learning
13:08 - about the different types of selectors and
where to use each one, depending on the situation.
13:11 - So you're going to learn that as well. next
section is where we start using the real power
13:14 - of CSS. So we're going to start using colors.
And we're going to be applying those colors
13:20 - to our page. So we're going to be learning
about different color types, how kind of a
13:24 - little bit of how colors are set up on the
computer. So things like RGB or other color
13:31 - codes, and then we're going to use them and
apply them using CSS to backgrounds and text
13:37 - and all sorts of other things. The next section
is going to be looking at mainly at text.
13:42 - So we're going to be looking at trying to
change the field style and look of text. So
13:52 - we're going to be changing the fonts the size,
we're also going to be changing the bolding,
13:59 - there are so many different things that you
can do in the section. And we're going to
14:07 - cover all of them then. So the next section
is where we will kind of take a turn from
14:11 - looking at styling and looking now at layout.
So we're going to be learning some more fundamental
14:15 - CSS concepts related to layout, we'll talk
about those when we get to it, then we're
14:18 - going to be applying them to actually change
the style or the layout of our page. So we're
14:29 - going to be moving items around, we're going
to resize them and do all sorts of things
14:37 - with them once we get to that point. The next
section we're going to look at is called Flexbox.
14:42 - Now I'm sure you've heard of this if you've
looked into any web development, but pretty
14:50 - much it's an alternate way to mess around
with the layout in CSS, and it is quite new.
14:53 - But it is a pretty commonly used concept today,
especially for Responsive layouts, making
14:56 - websites that can work on all devices. So
it's a pretty important concept there. So
15:00 - we're going to focus on the theory behind
Flexbox. First, talking about how it works,
15:03 - how it's set up. And then we're also going
to be applying it to real life talking about,
15:09 - you know, where it can be used some of the
benefits, and then actually using it in our
15:15 - own projects by creating our own Flexbox and
messing around with it. So we're going to
15:19 - do that as well. So the next section is pretty
similar to Section seven, it's going to be
15:24 - looking at a another alternative to using
normal layout features. in CSS. It's called
15:28 - grid. And there are a lot of similarities.
But we're also going to be talking about the
15:31 - differences. So along with going over a comprehensive
overview of kind of how grid works, we're
15:39 - also going to be going over some of the similarities
and differences kind of comparing it to Flexbox.
15:44 - And then we're going to talk about, you know
which one you should use in each individual
15:50 - situation. So the next section is probably
one of my favorites because it really puts
15:55 - all of the older kind of websites from the
new sites and separates them the modern sites
15:59 - from the old sites, and we're going to be
looking at animations and transitions. So
16:03 - first, we're going to look at transitions
and how to use pseudo selectors. Again, don't
16:08 - worry about our means to create these nice
smooth transitions. And then we're also going
16:12 - to be learning how to manipulate them. So
kind of change how a transition looks, we're
16:18 - also going to learn how to create a flight
and manipulate our own animation. So we create
16:24 - these animations from scratch using CSS. And
then we can kind of change them and change
16:30 - how they look based on what we want. So the
last section is a really interesting section,
16:36 - which kind of summarizes everything and test
your skills. So it starts with a 30 question
16:41 - final exam, which is a bunch of questions
from every single section or topic that we've
16:45 - covered. And it is it is a final exam. So
there is like a passing grade and everything
16:50 - like that. But again, if you fail, there's
no real consequences to it. It's just kind
16:53 - of a diagnostic tool to test where you are
in your CSS knowledge. And after that, it's
16:58 - followed by a really nice challenge, which
can help you know, really see where you're
17:06 - at, not from a theoretical standpoint, but
from an actual practical standpoint. So this
17:13 - challenge is going to be talked about later
and when to get to that point, but pretty
17:18 - much you're going to Be styling a website
from scratch, you're going to be given a blank
17:23 - HTML document or Well, it's not blank, it's
going to have content. But you're going to
17:27 - be given an HTML document with no styling.
And you have to style it yourself based on
17:31 - a list of
17:32 - based on a list of tasks given in the document.
Now, don't worry too much about that. But
17:35 - pretty much there is a solution video that
I created to style it based on how I want
17:39 - the website to look. But again, it's not kind
of like an iron fist thing, you can go and
17:44 - be creative with it once you get to that point.
Because once you learn all that CSS, what's
17:50 - the point, if you just have to conform to
something, you can really unleash your creative
17:55 - freedom through CSS, once you learn all the
skills necessary. So again, it will be talked
17:58 - about in a lot more detail once we get to
that point. But for now, that's just a quick
18:01 - overview of what it's going to look like.
From here. Alright, so there's a quick overview
18:04 - of what the course is going to go over some
of the topics. Now, again, this isn't a, you
18:09 - know, kind of a strict video on, you know,
this is what we're going to learn. And if
18:13 - you don't learn it, that's it. It's just kind
of showing you what you're going to be getting
18:20 - out of the course, so that you can really
get a view into it before you start working
18:26 - on the course. Alright, let's get started.
18:28 - based on a list of tasks given in the document.
Now, don't worry too much about that. But
18:32 - pretty much there is a solution video that
I created to style it based on how I want
18:35 - the website to look. But again, it's not kind
of like an iron fist thing, you can go and
18:41 - be creative with it once you get to that point.
Because once you learn all that CSS, what's
18:45 - the point, if you just have to conform to
something, you can really unleash your creative
18:50 - freedom through CSS, once you learn all the
skills necessary. So again, it will be talked
18:54 - about in a lot more detail once we get to
that point. But for now, that's just a quick
18:59 - overview of what it's going to look like.
From here. Alright, so there's a quick overview
19:05 - of what the course is going to go over some
of the topics. Now, again, this isn't a, you
19:11 - know, kind of a strict video on, you know,
this is what we're going to learn. And if
19:17 - you don't learn it, that's it. It's just kind
of showing you what you're going to be getting
19:22 - out of the course, so that you can really
get a view into it before you start working
19:27 - on the course. Alright, let's get started.
19:29 - So in this video, I'm just going to be talking
about some of the software that we're going
19:35 - to be using in this course. Now, there's not
a lot of actual software, since most of the
19:39 - stuff we're going to be doing is built straight
into CSS and HTML. But we do need a text editor.
19:40 - And if you want to go ahead and use Notepad,
go ahead. But I wouldn't really recommend
19:45 - that because it is quite hard to use when
you're developing things. So I recommend this
19:48 - text editor right here. It's called Sublime
Text, and gives you all of the color coding
19:52 - and formatting that you need, it makes things
really easy for you. So you can go ahead to
19:58 - the website. Here, it's attached to the lecture
resources, if you go ahead and click in the
20:03 - top left corner, in the bullet list icon,
you can go ahead and find the lecture contents
20:08 - and downloadable resources. So go ahead, check
out this website. And depending whether you're
20:13 - on Windows or Mac or Linux, you go ahead and
download this. And then it should be pretty
20:19 - much it. So this is what its gonna look like
when you're inside, I was just typing a little
20:23 - bit of stuff here making things making sure
things were working. So there you go, this
20:28 - is what it's gonna look like, once you download
it, we'll go through and actually set everything
20:33 - up as we go through this course. Alright,
let's move on. So before we move on, I just
20:43 - want to talk about finding project files.
Now, I do do a lot of code throughout each
20:48 - lecture. And if you want to keep track of
those, or maybe have some sort of working
20:51 - reference of what's going on, then I highly
recommend that you go and check out the GitHub
20:54 - repository that I created for all the content
of this course. Now, if you don't know what
20:57 - Git is, or how to use it, don't worry, I'm
going to show an alternative to that in just
21:01 - a second, using this platform. But pretty
much this is going to contain all the history
21:02 - of every single lecture. Now, if you know
how to use Git, you can download this and
21:05 - check out each state. But if you don't know,
then all you have to do is head over to the
21:09 - main page. And right here under commit, it's
pretty much going to show every single lecture
21:12 - changes. So for example, I have seven to eight
item alignment, so I can click on it. And
21:16 - when I click on this, it shows all of the
changes I have made to both files or any files
21:21 - that I've changed. So for example, you can
see here, it has one changed file. And you
21:27 - can see I've added a bunch of stuff here.
So you can kind of review what I've done over
21:32 - the lecture. So you can just go ahead and
check it out. I've attached this to the lecture
21:36 - resources, if you want to go and look at it.
Now, this does contain all of the history,
21:38 - all of the things that I've done over the
course. So you can go review, maybe look at
21:42 - the code. And you can also download it, you
can download the actual file or the the repository
21:45 - from here. So you can just download that very
easily. And other than that, you can find
21:51 - all of the project files on here, if you ever
need them. So if you want to, you know, maybe
21:57 - bookmark this or keep this somewhere or Notepad,
just to make sure that you have a reference
22:02 - of it throughout the course in case you ever
want to go and review the contents or changes
22:06 - of some lecture. You will have it there. Alright,
let's move on.
22:13 - So in this video, I'm just going to be talking
about some of the software that we're going
22:17 - to be using in this course. Now, there's not
a lot of actual software, since most of the
22:21 - stuff we're going to be doing is built straight
into CSS and HTML. But we do need a text editor.
22:25 - And if you want to go ahead and use Notepad,
go ahead. But I wouldn't really recommend
22:28 - that because it is quite hard to use when
you're developing things. So I recommend this
22:35 - text editor right here. It's called Sublime
Text, and gives you all of the color coding
22:38 - and formatting that you need, it makes things
really easy for you. So you can go ahead to
22:42 - the website. Here, it's attached to the lecture
resources, if you go ahead and click in the
22:44 - top left corner, in the bullet list icon,
you can go ahead and find the lecture contents
22:49 - and downloadable resources. So go ahead, check
out this website. And depending whether you're
22:56 - on Windows or Mac or Linux, you go ahead and
download this. And then it should be pretty
23:01 - much it. So this is what its gonna look like
when you're inside, I was just typing a little
23:06 - bit of stuff here making things making sure
things were working. So there you go, this
23:11 - is what it's gonna look like, once you download
it, we'll go through and actually set everything
23:15 - up as we go through this course. Alright,
let's move on. So before we move on, I just
23:21 - want to talk about finding project files.
Now, I do do a lot of code throughout each
23:27 - lecture. And if you want to keep track of
those, or maybe have some sort of working
23:32 - reference of what's going on, then I highly
recommend that you go and check out the GitHub
23:39 - repository that I created for all the content
of this course. Now, if you don't know what
23:45 - Git is, or how to use it, don't worry, I'm
going to show an alternative to that in just
23:49 - a second, using this platform. But pretty
much this is going to contain all the history
23:54 - of every single lecture. Now, if you know
how to use Git, you can download this and
24:10 - check out each state. But if you don't know,
then all you have to do is head over to the
24:17 - main page. And right here under commit, it's
pretty much going to show every single lecture
24:20 - changes. So for example, I have seven to eight
item alignment, so I can click on it. And
24:26 - when I click on this, it shows all of the
changes I have made to both files or any files
24:32 - that I've changed. So for example, you can
see here, it has one changed file. And you
24:40 - can see I've added a bunch of stuff here.
So you can kind of review what I've done over
24:46 - the lecture. So you can just go ahead and
check it out. I've attached this to the lecture
24:52 - resources, if you want to go and look at it.
Now, this does contain all of the history,
24:58 - all of the things that I've done over the
course. So you can go review, maybe look at
25:04 - the code. And you can also download it, you
can download the actual file or the the repository
25:10 - from here. So you can just download that very
easily. And other than that, you can find
25:17 - all of the project files on here, if you ever
need them. So if you want to, you know, maybe
25:23 - bookmark this or keep this somewhere or Notepad,
just to make sure that you have a reference
25:29 - of it throughout the course in case you ever
want to go and review the contents or changes
25:34 - of some lecture. You will have it there. Alright,
let's move on.
25:38 - So today, I'm going to be giving a quick introduction
to CSS, we're going to be going through what
25:45 - it actually is, why it's used and what actually
does CSS do. So before we get started, if
25:53 - you're just starting out this course and you
don't really know the prerequisites, make
26:03 - sure that you do have a little bit of HTML
experience. It's not recommended. Sorry, it's
26:09 - not needed. But it's highly recommended because
we're going to be using a lot of HTML in this
26:13 - course. And although we're not going to be
writing any directly, it would be really helpful
26:16 - to know some so I do offer a free HTML course.
It's really quick one and a half hours, you
26:25 - should be go good to go and up and running
in just one or two days. So if you don't know
26:34 - any HTML, you can go and check that out. And
if you do know, HTML, continue watching along.
26:38 - So first of all, let's get started, what actually
is CSS. So if you don't know what it stands
26:43 - for already, it's called Cascading Style Sheets.
So from that name, you can pretty much assume
26:48 - that this is used to style websites. So unlike
HTML, which is used to create structure and
26:55 - actual website content, this is mainly used
to give it that visual flair to make the websites
27:00 - look good. So CSS is pretty much what makes
a website standout from websites from the
27:06 - early days from the early 2000s, things like
that. So that's what really makes a website
27:10 - stand out is the CSS or the styling. So this
pretty much goes hand in hand with HTML. As
27:17 - it said, Here, they work almost consistently
together. And they're always used all like
27:25 - all the time together. So let's go ahead and
check out some pages that look with CSS and
27:32 - without. So you can see here that this is
the page with CSS. So you can change all of
27:42 - the layout options. You can make fonts, font
changes, text manipulation, all sorts of things,
27:46 - which we're all going to be doing in this
course are learning to do. And this is the
27:52 - website without HTML, sorry, without CSS looks
pretty standard, right? Obviously, this looks
27:56 - just like a normal website doesn't have any
HTML, apart from some font changes. But you
28:00 - can see that the difference that something
like this mix, CSS will completely change
28:04 - the way a website looks if it's used correctly.
So the next line is just a little bit of information
28:09 - about CSS, we're going to be going way more
in depth into all of these points later. So
28:13 - a CSS file is saved in the dot CSS format,
we're going to be doing that in the next few
28:18 - videos. There's some information about selectors
and things like that, like I said, you can
28:23 - just read through this, I'm not going to go
through it, because we're going to talk about
28:27 - it way more in detail in the next few sections.
But for now, this is just a little bit of
28:32 - general information about CSS. Alright, so
now that you know what CSS is, why don't we
28:35 - go ahead and get started working with CSS.
28:37 - So today, I'm going to be giving a quick introduction
to CSS, we're going to be going through what
28:41 - it actually is, why it's used and what actually
does CSS do. So before we get started, if
28:45 - you're just starting out this course and you
don't really know the prerequisites, make
28:49 - sure that you do have a little bit of HTML
experience. It's not recommended. Sorry, it's
28:54 - not needed. But it's highly recommended because
we're going to be using a lot of HTML in this
29:00 - course. And although we're not going to be
writing any directly, it would be really helpful
29:04 - to know some so I do offer a free HTML course.
It's really quick one and a half hours, you
29:08 - should be go good to go and up and running
in just one or two days. So if you don't know
29:11 - any HTML, you can go and check that out. And
if you do know, HTML, continue watching along.
29:14 - So first of all, let's get started, what actually
is CSS. So if you don't know what it stands
29:20 - for already, it's called Cascading Style Sheets.
So from that name, you can pretty much assume
29:25 - that this is used to style websites. So unlike
HTML, which is used to create structure and
29:29 - actual website content, this is mainly used
to give it that visual flair to make the websites
29:34 - look good. So CSS is pretty much what makes
a website standout from websites from the
29:38 - early days from the early 2000s, things like
that. So that's what really makes a website
29:44 - stand out is the CSS or the styling. So this
pretty much goes hand in hand with HTML. As
29:50 - it said, Here, they work almost consistently
together. And they're always used all like
29:53 - all the time together. So let's go ahead and
check out some pages that look with CSS and
29:56 - without. So you can see here that this is
the page with CSS. So you can change all of
30:00 - the layout options. You can make fonts, font
changes, text manipulation, all sorts of things,
30:01 - which we're all going to be doing in this
course are learning to do. And this is the
30:07 - website without HTML, sorry, without CSS looks
pretty standard, right? Obviously, this looks
30:09 - just like a normal website doesn't have any
HTML, apart from some font changes. But you
30:14 - can see that the difference that something
like this mix, CSS will completely change
30:18 - the way a website looks if it's used correctly.
So the next line is just a little bit of information
30:23 - about CSS, we're going to be going way more
in depth into all of these points later. So
30:30 - a CSS file is saved in the dot CSS format,
we're going to be doing that in the next few
30:34 - videos. There's some information about selectors
and things like that, like I said, you can
30:38 - just read through this, I'm not going to go
through it, because we're going to talk about
30:42 - it way more in detail in the next few sections.
But for now, this is just a little bit of
30:50 - general information about CSS. Alright, so
now that you know what CSS is, why don't we
30:56 - go ahead and get started working with CSS.
30:57 - So in this video, we're going to be creating
and linking a CSS stylesheet. So we're not
31:02 - actually going to be doing with anything with
it yet, we're just going to be creating it
31:06 - and linking it so that we can get started
and actually learn some of the properties
31:10 - in CSS. Alright, let's get started. So the
first thing I want to do is go ahead and create
31:21 - my CSS file. So what I'm going to do is go
into my Sublime Text or my text editor. Now,
31:26 - if you're not using this, and you know how
to use the other text editor that maybe you're
31:35 - using some something else like Visual Studio,
go ahead and use that if you know the shortcuts.
31:39 - But for now, I am going to use Sublime Text
on Sublime Text. To create a new file, you
31:45 - go Ctrl or Command n depending on what operating
system you're on. Once you're there, you can
31:52 - use Ctrl S to go ahead and save the file.
And right now I'm here. And what I want to
31:58 - do is create a new folder, a new directory
in my course content folder. Again, you can
32:05 - set this up however you like. But the way
I like doing it is creating a folder for every
32:11 - type of file. So that for example, when the
website gets very big, when you have multiple
32:16 - pages, multiple style sheets, everything stays
organized. So I'm going to go ahead and create
32:21 - that directory. Go ahead into my CSS folder
here. And I'm going to name this style dot
32:26 - CSS. So dot CSS, D is the file format used
to save CSS documents, and style, just kind
32:33 - of the standard name you use when you're saving
CSS documents. So once I go ahead, and I'm
32:40 - going to go ahead and save that. Now I have
my stylesheet created. But we don't actually
32:46 - have anything yet, because right now our HTML
page is blank and our CSS file is blank. So
32:50 - this is where knowing a little bit of HTML
comes in handy. First of all, I'm going to
32:54 - go ahead and create my boilerplate. I just
typed in HTML and hit tab. Again, I talked
32:59 - all about this in my other courses talking
about HTML. But there we go, we're going to
33:05 - go ahead and do that. I'm just going to say
my website here. And once that's done, I'm
33:10 - going to go ahead and link it. So how do we
actually do this? Well, what you want to do
33:16 - pretty much is just go into here and into
your head into the head portion of your website,
33:18 - you're going to go ahead and create a link
tag. So if you just take the link and hit
33:23 - tab in Sublime Text, it's going to create
the tag for you. So let's go ahead and break
33:28 - this down here. REL stylesheet is pretty much
saying that we're linking to a stylesheet.
33:30 - But then type says it's a CSS stylesheet.
So this is just kind of a more specific identifier.
33:35 - And then we have the href. So in the href.
This is where we're going to put the URL to
33:43 - our stylesheet. So if you don't already know
how to write file URLs, pretty much what we're
33:49 - going to do is first up move back in directory,
because right now we're inside here and there's
33:56 - no CSS. We want to go back to the top level.
So Going to go dot dot slash. Now remember,
34:03 - we're up here, I want to go into CSS. So I
hit CSS slash, and then style dot CSS, which
34:10 - has our endpoints or final destination. So
this is pretty much your basic link tag, this
34:19 - is how it works. You have all of your stuff
here and you created it. And from there, you
34:25 - can go ahead and pretty much do whatever you
want. So right here, I have my stylesheet
34:34 - linked and everything's working. But we don't
actually know if it works yet. So in the next
34:39 - video, we're actually going to be going through
and testing our stylesheet, I'm going to show
34:43 - you a few ways that you can do that. Alright,
let's move on. So today, I'm going to be showing
34:50 - you how you can test your CSS stylesheet.
So we've already created the file and linked
34:55 - it. But now we're actually going to go ahead
and test it because we don't know if this
35:01 - is working or not. So obviously, we don't
know anything about CSS yet. We don't know
35:07 - about selectors or properties or how to do
anything with them. But I just want you to
35:14 - keep this in mind so that when you know how
to do them, it becomes very easy to test these
35:22 - style sheets. So for a style sheet to work,
we need all of the properties that are in
35:34 - this file to appear on the page. So the easiest
way we can test it is but just by writing
35:41 - a random, obvious property, that's going to
change the way the website looks. If it's
35:47 - not working, then we know that something's
wrong with our link. So I'm going to go ahead
35:53 - and just create a property here. Now, you
don't know how to do any of this. So don't
35:55 - worry about it. We're going to learn how to
do all of this later. But what you want to
36:01 - do pretty much is create a random property,
you can go ahead and copy this on for now,
36:06 - I'm going to go ahead and refresh the page.
And you can see that this is bright red. Now
36:13 - if I go ahead and make the link wrong. So
if I, for example, remove a letter, you can
36:17 - see that it's still white, which means that
this isn't working. So this is pretty much
36:23 - the easiest way that you can test your stylesheet.
If it's working, it's just writing some random,
36:29 - obvious properties don't make them completely
non visible, you want to make sure that you
36:34 - can actually see the difference on the page.
And then you want to go ahead and refresh
36:38 - it. And if it's working, you will know that
this stylesheet is linked properly. Alright,
36:40 - let's move on.
36:41 - So in this video, we're going to be creating
and linking a CSS stylesheet. So we're not
36:44 - actually going to be doing with anything with
it yet, we're just going to be creating it
36:49 - and linking it so that we can get started
and actually learn some of the properties
36:58 - in CSS. Alright, let's get started. So the
first thing I want to do is go ahead and create
37:03 - my CSS file. So what I'm going to do is go
into my Sublime Text or my text editor. Now,
37:07 - if you're not using this, and you know how
to use the other text editor that maybe you're
37:13 - using some something else like Visual Studio,
go ahead and use that if you know the shortcuts.
37:17 - But for now, I am going to use Sublime Text
on Sublime Text. To create a new file, you
37:24 - go Ctrl or Command n depending on what operating
system you're on. Once you're there, you can
37:30 - use Ctrl S to go ahead and save the file.
And right now I'm here. And what I want to
37:35 - do is create a new folder, a new directory
in my course content folder. Again, you can
37:40 - set this up however you like. But the way
I like doing it is creating a folder for every
37:45 - type of file. So that for example, when the
website gets very big, when you have multiple
37:51 - pages, multiple style sheets, everything stays
organized. So I'm going to go ahead and create
37:56 - that directory. Go ahead into my CSS folder
here. And I'm going to name this style dot
38:02 - CSS. So dot CSS, D is the file format used
to save CSS documents, and style, just kind
38:10 - of the standard name you use when you're saving
CSS documents. So once I go ahead, and I'm
38:16 - going to go ahead and save that. Now I have
my stylesheet created. But we don't actually
38:22 - have anything yet, because right now our HTML
page is blank and our CSS file is blank. So
38:28 - this is where knowing a little bit of HTML
comes in handy. First of all, I'm going to
38:35 - go ahead and create my boilerplate. I just
typed in HTML and hit tab. Again, I talked
38:41 - all about this in my other courses talking
about HTML. But there we go, we're going to
38:44 - go ahead and do that. I'm just going to say
my website here. And once that's done, I'm
38:51 - going to go ahead and link it. So how do we
actually do this? Well, what you want to do
38:59 - pretty much is just go into here and into
your head into the head portion of your website,
39:07 - you're going to go ahead and create a link
tag. So if you just take the link and hit
39:14 - tab in Sublime Text, it's going to create
the tag for you. So let's go ahead and break
39:23 - this down here. REL stylesheet is pretty much
saying that we're linking to a stylesheet.
39:28 - But then type says it's a CSS stylesheet.
So this is just kind of a more specific identifier.
39:34 - And then we have the href. So in the href.
This is where we're going to put the URL to
39:44 - our stylesheet. So if you don't already know
how to write file URLs, pretty much what we're
39:48 - going to do is first up move back in directory,
because right now we're inside here and there's
39:51 - no CSS. We want to go back to the top level.
So Going to go dot dot slash. Now remember,
39:58 - we're up here, I want to go into CSS. So I
hit CSS slash, and then style dot CSS, which
40:05 - has our endpoints or final destination. So
this is pretty much your basic link tag, this
40:10 - is how it works. You have all of your stuff
here and you created it. And from there, you
40:16 - can go ahead and pretty much do whatever you
want. So right here, I have my stylesheet
40:24 - linked and everything's working. But we don't
actually know if it works yet. So in the next
40:29 - video, we're actually going to be going through
and testing our stylesheet, I'm going to show
40:34 - you a few ways that you can do that. Alright,
let's move on. So today, I'm going to be showing
40:41 - you how you can test your CSS stylesheet.
So we've already created the file and linked
40:47 - it. But now we're actually going to go ahead
and test it because we don't know if this
40:54 - is working or not. So obviously, we don't
know anything about CSS yet. We don't know
40:58 - about selectors or properties or how to do
anything with them. But I just want you to
41:03 - keep this in mind so that when you know how
to do them, it becomes very easy to test these
41:11 - style sheets. So for a style sheet to work,
we need all of the properties that are in
41:15 - this file to appear on the page. So the easiest
way we can test it is but just by writing
41:21 - a random, obvious property, that's going to
change the way the website looks. If it's
41:25 - not working, then we know that something's
wrong with our link. So I'm going to go ahead
41:30 - and just create a property here. Now, you
don't know how to do any of this. So don't
41:34 - worry about it. We're going to learn how to
do all of this later. But what you want to
41:39 - do pretty much is create a random property,
you can go ahead and copy this on for now,
41:45 - I'm going to go ahead and refresh the page.
And you can see that this is bright red. Now
41:53 - if I go ahead and make the link wrong. So
if I, for example, remove a letter, you can
41:55 - see that it's still white, which means that
this isn't working. So this is pretty much
41:57 - the easiest way that you can test your stylesheet.
If it's working, it's just writing some random,
42:01 - obvious properties don't make them completely
non visible, you want to make sure that you
42:04 - can actually see the difference on the page.
And then you want to go ahead and refresh
42:09 - it. And if it's working, you will know that
this stylesheet is linked properly. Alright,
42:14 - let's move on.
42:15 - So in this video, I'm going to be talking
about CSS selectors. I'm also going to be
42:20 - going through what they do and what types
of selectors there are. So you're probably
42:24 - wondering what a selector actually is, because
we haven't actually talked about this at all.
42:25 - And it's pretty much one half of everything
that you do in CSS. So as you know, you have
42:29 - two different documents, you have your HTML
document, which is kind of your structure
42:33 - gives all of the different text and content
of the page. And then you have your CSS document,
42:39 - which is going to be for all the styling.
Now because the two documents are kind of
42:42 - disconnected, you can't just go and type random
things and have them appear where you want
42:48 - them, you need a way to actually assign these
styles and properties to elements on the page.
42:51 - So we do this with something called selectors.
So selectors pretty much a way of grabbing
42:56 - an element from an HTML document, and then
styling it. So it's kind of like a target
43:02 - in a way. There are many different types of
selectors. And they all work in different
43:09 - ways and are used for different purposes.
So I'm going to be going through three with
43:16 - you in this video. So the first one is the
element selector. The element selector is
43:21 - the most basic of all of them, pretty much,
what you do is you find the name of the target
43:28 - that you want to select or target. So in this
case, it would be the paragraph tag or the
43:30 - p tag. And then you have the selector here.
So pretty much how a selector works is you
43:34 - just type out the selector. And then you have
curly braces, and then you have your properties,
43:39 - we'll go that will go with this in much more
depth towards the end of this section. So
43:47 - you go through and you select, you type out
your tag name. And pretty much what that's
43:52 - going to do is select all of the elements
on the document with that tag name. So there
44:03 - we go. That is the first one. The next is
the class selector. So the class selector
44:07 - is very similar to the element selector, except
it goes by class name. So you can see here
44:11 - that we have some class attributes here, we
assign the class, don't worry, we'll go through
44:16 - with this in the next video. But you can see
we assigned the class to these values. And
44:23 - pretty much all we have to do to references
is type dot, which is the class prefix for
44:30 - CSS, and then the name of the class and then
again, the properties. So you can actually
44:34 - use this cloud. The reason that we use classes
over things like element selectors, is because
44:39 - you can apply this class to specific items,
and it's only going to style those specific
44:46 - items. So for example, maybe if you had a
subtitle, and you only wanted to style that
44:55 - subtitle, you would go through and actually
apply that class to your subtitle, your element,
45:02 - whether it's a paragraph or a header. And
from there, you're going to go through and
45:07 - add it. So there we go. The next What I want
to talk about is the id selector. So these
45:16 - two, the class and id selector are pretty
much identical, you have your attribute where
45:19 - you assign the class or ID. But the only difference
is the prefix here is a hash symbol or an
45:25 - octave Thorpe or hash tag. So then you type
up the name of the ID, and it puts it here.
45:32 - Now, I am going to go through and actually
talk more about why when we should use classes
45:36 - and IDs. And I'm going to talk about some
of the differences between them. And although
45:42 - they look very similar, we actually have different
very different purposes for them, based on
45:46 - how you use them in your HTML document. So
those are some of the basics of selectors,
45:51 - like I said, we're gonna go through and pretty
much use this all the time during our course.
46:00 - So we're gonna go through use them and add
the properties. So it's pretty good that you
46:06 - get familiar with these now, so that when
we move on, this becomes kind of like second
46:10 - nature.
46:11 - So in this video, I'm going to be talking
about CSS selectors. I'm also going to be
46:16 - going through what they do and what types
of selectors there are. So you're probably
46:20 - wondering what a selector actually is, because
we haven't actually talked about this at all.
46:25 - And it's pretty much one half of everything
that you do in CSS. So as you know, you have
46:30 - two different documents, you have your HTML
document, which is kind of your structure
46:33 - gives all of the different text and content
of the page. And then you have your CSS document,
46:38 - which is going to be for all the styling.
Now because the two documents are kind of
46:39 - disconnected, you can't just go and type random
things and have them appear where you want
46:46 - them, you need a way to actually assign these
styles and properties to elements on the page.
46:49 - So we do this with something called selectors.
So selectors pretty much a way of grabbing
46:53 - an element from an HTML document, and then
styling it. So it's kind of like a target
46:56 - in a way. There are many different types of
selectors. And they all work in different
46:59 - ways and are used for different purposes.
So I'm going to be going through three with
47:03 - you in this video. So the first one is the
element selector. The element selector is
47:08 - the most basic of all of them, pretty much,
what you do is you find the name of the target
47:14 - that you want to select or target. So in this
case, it would be the paragraph tag or the
47:21 - p tag. And then you have the selector here.
So pretty much how a selector works is you
47:25 - just type out the selector. And then you have
curly braces, and then you have your properties,
47:31 - we'll go that will go with this in much more
depth towards the end of this section. So
47:35 - you go through and you select, you type out
your tag name. And pretty much what that's
47:45 - going to do is select all of the elements
on the document with that tag name. So there
47:48 - we go. That is the first one. The next is
the class selector. So the class selector
47:52 - is very similar to the element selector, except
it goes by class name. So you can see here
47:55 - that we have some class attributes here, we
assign the class, don't worry, we'll go through
48:03 - with this in the next video. But you can see
we assigned the class to these values. And
48:12 - pretty much all we have to do to references
is type dot, which is the class prefix for
48:20 - CSS, and then the name of the class and then
again, the properties. So you can actually
48:26 - use this cloud. The reason that we use classes
over things like element selectors, is because
48:30 - you can apply this class to specific items,
and it's only going to style those specific
48:35 - items. So for example, maybe if you had a
subtitle, and you only wanted to style that
48:41 - subtitle, you would go through and actually
apply that class to your subtitle, your element,
48:44 - whether it's a paragraph or a header. And
from there, you're going to go through and
48:48 - add it. So there we go. The next What I want
to talk about is the id selector. So these
48:55 - two, the class and id selector are pretty
much identical, you have your attribute where
49:02 - you assign the class or ID. But the only difference
is the prefix here is a hash symbol or an
49:08 - octave Thorpe or hash tag. So then you type
up the name of the ID, and it puts it here.
49:15 - Now, I am going to go through and actually
talk more about why when we should use classes
49:21 - and IDs. And I'm going to talk about some
of the differences between them. And although
49:25 - they look very similar, we actually have different
very different purposes for them, based on
49:28 - how you use them in your HTML document. So
those are some of the basics of selectors,
49:31 - like I said, we're gonna go through and pretty
much use this all the time during our course.
49:35 - So we're gonna go through use them and add
the properties. So it's pretty good that you
49:41 - get familiar with these now, so that when
we move on, this becomes kind of like second
49:46 - nature.
49:47 - So in this video, I am going to be teaching
you how to how to add classes in IDs to our
49:52 - document here and actually start using some
of these selectors. Now, I'm not going to
49:57 - teach you any of the properties yet, because
we're going to cover that in a little bit
50:02 - later in this section and in the next few
sections. But I'm just going to be teaching
50:07 - you how to get familiar with classes and IDs,
because they are by far the most commonly
50:11 - used selectors in CSS, I mean, sometimes very
uncommonly, you'd see some elements, selectors,
50:15 - and other types of selectors, which we're
going to go over in the next few videos. But
50:19 - the two most common that you're going to see
are our classes and IDs. So let's go through
50:23 - and get started. Now I have a bunch of HTML
content here, we're actually going to be using
50:28 - this and adding on to it for the rest of the
course, we're going to be styling this website
50:31 - fully. But let's actually go through and start
adding these classes and IDs. So the first
50:38 - thing you need to note, before we move on,
is that classes and IDs are different, you
50:42 - can't just use them interchangeably. And I'm
going to explain why in the next video. But
50:47 - for now, let's just pretend that they are
the same. And we can use them interchangeably
50:53 - because they have almost the same methods
of application. So let's go ahead now the
50:58 - first thing you want to do is identify the
element that you want to target. So first
51:04 - of all, let's just say I wanted to maybe make
the color of this red. Okay, so the color
51:10 - of this title. Now that we know we've targeted
it, we want to actually go through and edit
51:15 - it. So first thing, how do you think we would
go through and do this now if you're thinking
51:22 - going through and adding an element selector
or maybe adding some inline styles, if you
51:27 - know what that is, then you are right, partially,
but the only problem is that if there are
51:32 - any other h ones on this page, then it will
style all of them as well. And because we
51:39 - only want to style this title, that wouldn't
be really effective. So the best way to do
51:45 - this would be to use a class or an ID, I'm
going to go ahead and use a class. So the
51:51 - way the way you would do this is go through
and type in class as your attribute. And you
51:55 - would again, put this into the opening tag
of whatever target element you want to style.
52:00 - And in here, you're putting, you're gonna
put your class name. Now, if this isn't where
52:06 - you put your CSS prefix, this isn't where
you put the dots. As I explained in the last
52:12 - video, here, you're just going to type the
name of the class. So I'm going to go through
52:16 - and type a title, just like that. And you
can name this whatever you want. But I'd recommend
52:21 - keeping it short and sweet. You don't want
it to get too long, because then it's going
52:27 - to be really hard to work with. So once you've
applied that, and we go ahead and refresh
52:33 - the page, you can see that nothing's actually
there, it hasn't started working yet. That's
52:35 - because we haven't applied any styles. So
when we go over here, we need to actually
52:40 - select our element. So I'm going to go ahead
and add the prefix for a class, which is dot,
52:51 - and then the name of the class, which is title.
Then I'm going to open up these brackets and
52:57 - get started. So what I want to do here is
now apply on my properties. I'm going to be
53:04 - explaining you to you how to do all of this
in the next in future videos. of a for now,
53:13 - all you need to know is that the first thing
you need to do is select an element using
53:20 - some method. And then you're going to add
the properties. So I'm going to go ahead and
53:29 - refresh the page. And you can see it works
just like that. Now to prove to you that this
53:34 - works, I'm actually going to go through and
style just this about me right here, blue.
53:38 - So you can see we have more than one h2 on
the page, but there's only one h1. But let's
53:42 - say we wanted to only style this the about
me and we didn't want to style every single
53:47 - h2, what I would do is go ahead and add a
class of subtitle to our target element. And
53:53 - then here I would select it
53:55 - So in this video, I am going to be teaching
you how to how to add classes in IDs to our
54:01 - document here and actually start using some
of these selectors. Now, I'm not going to
54:07 - teach you any of the properties yet, because
we're going to cover that in a little bit
54:14 - later in this section and in the next few
sections. But I'm just going to be teaching
54:23 - you how to get familiar with classes and IDs,
because they are by far the most commonly
54:28 - used selectors in CSS, I mean, sometimes very
uncommonly, you'd see some elements, selectors,
54:32 - and other types of selectors, which we're
going to go over in the next few videos. But
54:41 - the two most common that you're going to see
are our classes and IDs. So let's go through
54:48 - and get started. Now I have a bunch of HTML
content here, we're actually going to be using
54:53 - this and adding on to it for the rest of the
course, we're going to be styling this website
54:59 - fully. But let's actually go through and start
adding these classes and IDs. So the first
55:04 - thing you need to note, before we move on,
is that classes and IDs are different, you
55:08 - can't just use them interchangeably. And I'm
going to explain why in the next video. But
55:13 - for now, let's just pretend that they are
the same. And we can use them interchangeably
55:20 - because they have almost the same methods
of application. So let's go ahead now the
55:28 - first thing you want to do is identify the
element that you want to target. So first
55:31 - of all, let's just say I wanted to maybe make
the color of this red. Okay, so the color
55:37 - of this title. Now that we know we've targeted
it, we want to actually go through and edit
55:43 - it. So first thing, how do you think we would
go through and do this now if you're thinking
55:48 - going through and adding an element selector
or maybe adding some inline styles, if you
55:52 - know what that is, then you are right, partially,
but the only problem is that if there are
55:58 - any other h ones on this page, then it will
style all of them as well. And because we
56:04 - only want to style this title, that wouldn't
be really effective. So the best way to do
56:07 - this would be to use a class or an ID, I'm
going to go ahead and use a class. So the
56:15 - way the way you would do this is go through
and type in class as your attribute. And you
56:19 - would again, put this into the opening tag
of whatever target element you want to style.
56:23 - And in here, you're putting, you're gonna
put your class name. Now, if this isn't where
56:28 - you put your CSS prefix, this isn't where
you put the dots. As I explained in the last
56:32 - video, here, you're just going to type the
name of the class. So I'm going to go through
56:36 - and type a title, just like that. And you
can name this whatever you want. But I'd recommend
56:40 - keeping it short and sweet. You don't want
it to get too long, because then it's going
56:44 - to be really hard to work with. So once you've
applied that, and we go ahead and refresh
56:47 - the page, you can see that nothing's actually
there, it hasn't started working yet. That's
56:52 - because we haven't applied any styles. So
when we go over here, we need to actually
56:57 - select our element. So I'm going to go ahead
and add the prefix for a class, which is dot,
57:00 - and then the name of the class, which is title.
Then I'm going to open up these brackets and
57:05 - get started. So what I want to do here is
now apply on my properties. I'm going to be
57:09 - explaining you to you how to do all of this
in the next in future videos. of a for now,
57:17 - all you need to know is that the first thing
you need to do is select an element using
57:24 - some method. And then you're going to add
the properties. So I'm going to go ahead and
57:31 - refresh the page. And you can see it works
just like that. Now to prove to you that this
57:39 - works, I'm actually going to go through and
style just this about me right here, blue.
57:43 - So you can see we have more than one h2 on
the page, but there's only one h1. But let's
57:51 - say we wanted to only style this the about
me and we didn't want to style every single
57:56 - h2, what I would do is go ahead and add a
class of subtitle to our target element. And
58:01 - then here I would select it
58:02 - just like that and give it its color. So you
can go ahead and try this if you want. Don't
58:09 - try and do anything crazy. If you know what
Go ahead, but for now, let's just go ahead
58:14 - and stick with that. And there you go. You
can see we've styled that blue and it hasn't
58:19 - changed. Anything else? So that's working
perfectly seems to be going fine. And we're
58:20 - selecting everything. But what if we wanted
to use IDs. So let's just say that this right
58:24 - here, this contact us, we wanted to use an
ID for it. Now, for now, we don't actually
58:29 - know why we want to use an ID. But let's just
pretend that we do know why. So what I would
58:35 - do is go ahead and use the ID attribute. So
I'm going to go ahead and add that. And I'm
58:42 - going to say contact dash us. Now, usually,
in CSS classes or IDs, you would use these
58:46 - dashes right here, instead of dots or uppercase,
or any other naming convention, this is just
58:50 - kind of the standard way to do it. Now we
don't have to style it, I can't just go ahead
58:55 - and do this, this wouldn't work. The reason
being the prefix here is a.so. css would interpret
58:59 - this as a class and not an ID, instead, we're
going to have to use our author Thor or hash,
59:05 - then why don't we go ahead and color this
one, green. Okay, let's go ahead and refresh
59:10 - the page and check this out. And you can see
that it has this kind of olive green color,
59:16 - so it's working great. So there we go, you
can see that we've worked with some of these
59:20 - selectors and applied some of our IDs. Now,
you can go ahead onto the GitHub repository,
59:25 - pull it, download it, do whatever you want.
If you don't know how to use Git, I do have
59:39 - a free course on that as well. But it's very
easy. You can go back to any state and time,
59:46 - check it out and play, play around with these
trying and replicate this and add your own
59:52 - classes and IDs and try and you know, figure
out how things work here. So yeah, that's
59:56 - pretty much the basics of adding classes and
IDs. In the future, we're going to use some
60:00 - more complicated selectors, which don't actually
involve having to directly reference some
60:04 - of these. So those are going to get pretty
complicated, but we're going to build up to
60:09 - that point. So let's move on. So in this video,
I'm going to be talking about a very important
60:16 - concept in CSS. So this is a pretty important
concept, because it's pretty much going to
60:19 - change the way that you use selectors. Right
now, we're just assuming that all of these
60:22 - selectors kind of work in the same in a similar
way. We don't actually know why. They're why
60:31 - they exist. I mean, why is there a class and
an id selector when they both do the same
60:42 - thing. So that's what I'm going to be explaining
in this video. And it all comes down to one
60:52 - concept called specificity. So specificity
is pretty much talking about the overriding
60:55 - or rewriting of properties in CSS. And it's
pretty much this concept that different selectors
61:01 - are more powerful than others in a sense.
So for example, if you had two selectors,
61:10 - on one element, one of them said the color
was blue, and one of them said the color was
61:17 - green, the more powerful there the more specific
selector would end up overriding the other
61:21 - ones and applying that property to the element.
So there's this really helpful article here
61:25 - from w three schools. If you need some more
help on this, or you don't really understand
61:30 - it, you can go ahead and read this. There's
a lot of numbers involved like this. But you
61:34 - know, you can go ahead and read this, but
I'm just going to explain it in Word terms,
61:38 - because these numbers tend to get really confusing.
And they end up meaning the same thing at
61:44 - the end of the day. So let's go ahead and
get started. Now, I think it's really helpful
61:50 - if we start from the ground up. So I've removed
all of the styling that we applied in the
61:57 - last video. So first of all, I'm going to
go ahead and create an element selector. So
62:01 - on all h twos, I want the color to be blue,
or actually I'm going to make it red. So there
62:06 - we go. Now we know that every single h2 is
red. Okay? Well, let's just say for our about
62:13 - me right here, I'm going to add a class, okay.
And I'm going to call this about me, and I'm
62:22 - going to add it to my h2. Now in my in my
styles, here, we're going to use the class
62:29 - selector and say the color is blue. So this
is where we have a confliction. You can see
62:39 - that one selector says the color is red, but
one selector says the color is blue. So what
62:47 - are we supposed to do about this? Which one
do you think is going to prevail, I mean,
62:53 - you can just have both red and blue at the
same time, you can see that blue is actually
63:02 - more specific. So you can see that elements
are or actually selectors have different powers.
63:07 - And the more powerful they are, the more specific
they are. The higher they are, the higher
63:14 - they're going to be on the scale and the higher
the chance of having or applying the right
63:27 - just like that and give it its color. So you
can go ahead and try this if you want. Don't
63:36 - try and do anything crazy. If you know what
Go ahead, but for now, let's just go ahead
63:44 - and stick with that. And there you go. You
can see we've styled that blue and it hasn't
63:50 - changed. Anything else? So that's working
perfectly seems to be going fine. And we're
63:52 - selecting everything. But what if we wanted
to use IDs. So let's just say that this right
63:55 - here, this contact us, we wanted to use an
ID for it. Now, for now, we don't actually
63:59 - know why we want to use an ID. But let's just
pretend that we do know why. So what I would
64:05 - do is go ahead and use the ID attribute. So
I'm going to go ahead and add that. And I'm
64:11 - going to say contact dash us. Now, usually,
in CSS classes or IDs, you would use these
64:16 - dashes right here, instead of dots or uppercase,
or any other naming convention, this is just
64:21 - kind of the standard way to do it. Now we
don't have to style it, I can't just go ahead
64:27 - and do this, this wouldn't work. The reason
being the prefix here is a.so. css would interpret
64:33 - this as a class and not an ID, instead, we're
going to have to use our author Thor or hash,
64:42 - then why don't we go ahead and color this
one, green. Okay, let's go ahead and refresh
64:48 - the page and check this out. And you can see
that it has this kind of olive green color,
64:53 - so it's working great. So there we go, you
can see that we've worked with some of these
65:00 - selectors and applied some of our IDs. Now,
you can go ahead onto the GitHub repository,
65:10 - pull it, download it, do whatever you want.
If you don't know how to use Git, I do have
65:17 - a free course on that as well. But it's very
easy. You can go back to any state and time,
65:22 - check it out and play, play around with these
trying and replicate this and add your own
65:29 - classes and IDs and try and you know, figure
out how things work here. So yeah, that's
65:34 - pretty much the basics of adding classes and
IDs. In the future, we're going to use some
65:40 - more complicated selectors, which don't actually
involve having to directly reference some
65:44 - of these. So those are going to get pretty
complicated, but we're going to build up to
65:49 - that point. So let's move on. So in this video,
I'm going to be talking about a very important
65:51 - concept in CSS. So this is a pretty important
concept, because it's pretty much going to
65:55 - change the way that you use selectors. Right
now, we're just assuming that all of these
66:02 - selectors kind of work in the same in a similar
way. We don't actually know why. They're why
66:10 - they exist. I mean, why is there a class and
an id selector when they both do the same
66:14 - thing. So that's what I'm going to be explaining
in this video. And it all comes down to one
66:20 - concept called specificity. So specificity
is pretty much talking about the overriding
66:24 - or rewriting of properties in CSS. And it's
pretty much this concept that different selectors
66:31 - are more powerful than others in a sense.
So for example, if you had two selectors,
66:38 - on one element, one of them said the color
was blue, and one of them said the color was
66:44 - green, the more powerful there the more specific
selector would end up overriding the other
66:50 - ones and applying that property to the element.
So there's this really helpful article here
66:57 - from w three schools. If you need some more
help on this, or you don't really understand
67:05 - it, you can go ahead and read this. There's
a lot of numbers involved like this. But you
67:10 - know, you can go ahead and read this, but
I'm just going to explain it in Word terms,
67:14 - because these numbers tend to get really confusing.
And they end up meaning the same thing at
67:18 - the end of the day. So let's go ahead and
get started. Now, I think it's really helpful
67:20 - if we start from the ground up. So I've removed
all of the styling that we applied in the
67:26 - last video. So first of all, I'm going to
go ahead and create an element selector. So
67:32 - on all h twos, I want the color to be blue,
or actually I'm going to make it red. So there
67:46 - we go. Now we know that every single h2 is
red. Okay? Well, let's just say for our about
67:52 - me right here, I'm going to add a class, okay.
And I'm going to call this about me, and I'm
67:58 - going to add it to my h2. Now in my in my
styles, here, we're going to use the class
68:05 - selector and say the color is blue. So this
is where we have a confliction. You can see
68:13 - that one selector says the color is red, but
one selector says the color is blue. So what
68:24 - are we supposed to do about this? Which one
do you think is going to prevail, I mean,
68:29 - you can just have both red and blue at the
same time, you can see that blue is actually
68:36 - more specific. So you can see that elements
are or actually selectors have different powers.
68:41 - And the more powerful they are, the more specific
they are. The higher they are, the higher
68:46 - they're going to be on the scale and the higher
the chance of having or applying the right
68:50 - selector property. So what we're going to
do is actually go through and talk about the
68:54 - different powers or specificities, or specifics
of each selector and we're going to see which
68:57 - one is most powerful. So right now We know
that the element selectors are less powerful
69:04 - than the class. But there is actually two
more that are more powerful than the class
69:10 - selectors. So I'm going to go ahead and apply
this about me class to another h2. Now I know
69:15 - it's not really going to make much sense.
So I'm actually just going to rename it to
69:21 - subtitle. Okay, so I'm going to go ahead and
add this to services as well. subtitle, there
69:25 - we go. Let's go ahead and refresh the page.
Oh, whoops, forgot to actually change the
69:28 - class name. with CSS fun. There we go. So
now we have two blue sub titles and one red.
69:36 - So you can see that the class will overwrite
the header, or sorry, the element tag. But
69:45 - there are like I said, there are still two
that are more powerful. The next after the
69:52 - class is the ID. So I'm going to go over here
to services and add an ID of services, oops,
69:58 - services. All right. Now, what I'm going to
do is go into my CSS file, and use the id
70:04 - selector. color green. So I'm going to go
ahead and refresh now. And you can see that
70:10 - it's right here, it's green. So now that we
know the ID is going to overwrite the class,
70:16 - and the class is going to overwrite the header.
So there is still one more that is more powerful.
70:22 - And that is called inline styling. So we don't
actually know what inline styling is. But
70:28 - pretty much we don't need to use a CSS file
to do inline styling. All we need is the element
70:35 - and the HTML file. So why don't I go ahead
and use services here, because we're kind
70:40 - of on a roll, and I want to use this again.
So what I'm going to do is a style, which
70:47 - is the attribute. And then here, we add all
of our CSS properties, no selector nothing.
70:53 - So I'm going to say here, that color is still
blue. And we don't actually, still blue is
70:59 - part of the CSS color collection, we'll explain
all of those in future sections. So if I go
71:04 - ahead and refresh, now, you can see that it
is blue, and it overrides the ID, the class
71:12 - and the header here. So pretty much there
are, there's an order here that you need to
71:19 - take away from this video. headers are the
least specific, they kind of applied to everything,
71:24 - and they're not that powerful. The class selector
is above that, and then the ID and then the
71:32 - inline styling, or the style attribute. So
if you follow this order, you will pretty
71:43 - much you can predict what is going to be the
outcome and which styles are going to be followed.
71:46 - So this is a pretty useful tool and in CSS,
and it pretty much allows you to structure
71:51 - your file in a way that makes sense to other
people when they're reading it. But there's
71:55 - still one more question we need to answer.
What's the difference between a class and
72:00 - an ID. Apart from the obvious specificity
difference, we actually use classes and IDs
72:05 - in different situations. And they're pretty
simple. Classes are meant to be used multiple
72:10 - times. So if you have done any programming
before, you'll know that a class is kind of
72:14 - like a blueprint, it's made so that you can
create multiple objects from it. But the thing
72:19 - is, an ID is supposed to be only for one thing,
it'll work for more than one. But the convention
72:25 - is, you're only supposed to use an ID for
one single element. So for example, let's
72:28 - take this file we have here we have three
sub titles, and one for the about me section.
72:32 - In this structure, what we would do is create
a sub title class for every sub title on the
72:36 - page, then we'd apply it to it. Now the reason
we're doing this is because we can have multiple
72:40 - h2 is on this page. So we only want to apply
it to the subtitles. But then for our bio
72:48 - about me here, there's only going to be one
of them on this whole document, which means
72:53 - we're going to use the ID of about me. And
then from there, we can go and apply our styles
73:02 - and do all of that. So that's just the main
difference between classes and IDs. And now
73:09 - that you know how to use them, you can actually
go through and apply them properly in real
73:13 - world scenarios. So that's just a very important
thing to keep in mind. You're only supposed
73:19 - to use IDs once and classes can be used multiple
times. Alright, let's move on.
73:22 - selector property. So what we're going to
do is actually go through and talk about the
73:25 - different powers or specificities, or specifics
of each selector and we're going to see which
73:31 - one is most powerful. So right now We know
that the element selectors are less powerful
73:35 - than the class. But there is actually two
more that are more powerful than the class
73:36 - selectors. So I'm going to go ahead and apply
this about me class to another h2. Now I know
73:39 - it's not really going to make much sense.
So I'm actually just going to rename it to
73:43 - subtitle. Okay, so I'm going to go ahead and
add this to services as well. subtitle, there
73:46 - we go. Let's go ahead and refresh the page.
Oh, whoops, forgot to actually change the
73:51 - class name. with CSS fun. There we go. So
now we have two blue sub titles and one red.
73:57 - So you can see that the class will overwrite
the header, or sorry, the element tag. But
74:03 - there are like I said, there are still two
that are more powerful. The next after the
74:08 - class is the ID. So I'm going to go over here
to services and add an ID of services, oops,
74:14 - services. All right. Now, what I'm going to
do is go into my CSS file, and use the id
74:21 - selector. color green. So I'm going to go
ahead and refresh now. And you can see that
74:25 - it's right here, it's green. So now that we
know the ID is going to overwrite the class,
74:31 - and the class is going to overwrite the header.
So there is still one more that is more powerful.
74:38 - And that is called inline styling. So we don't
actually know what inline styling is. But
74:49 - pretty much we don't need to use a CSS file
to do inline styling. All we need is the element
74:58 - and the HTML file. So why don't I go ahead
and use services here, because we're kind
75:04 - of on a roll, and I want to use this again.
So what I'm going to do is a style, which
75:11 - is the attribute. And then here, we add all
of our CSS properties, no selector nothing.
75:16 - So I'm going to say here, that color is still
blue. And we don't actually, still blue is
75:22 - part of the CSS color collection, we'll explain
all of those in future sections. So if I go
75:28 - ahead and refresh, now, you can see that it
is blue, and it overrides the ID, the class
75:32 - and the header here. So pretty much there
are, there's an order here that you need to
75:35 - take away from this video. headers are the
least specific, they kind of applied to everything,
75:40 - and they're not that powerful. The class selector
is above that, and then the ID and then the
75:45 - inline styling, or the style attribute. So
if you follow this order, you will pretty
75:48 - much you can predict what is going to be the
outcome and which styles are going to be followed.
75:53 - So this is a pretty useful tool and in CSS,
and it pretty much allows you to structure
75:58 - your file in a way that makes sense to other
people when they're reading it. But there's
76:03 - still one more question we need to answer.
What's the difference between a class and
76:11 - an ID. Apart from the obvious specificity
difference, we actually use classes and IDs
76:12 - in different situations. And they're pretty
simple. Classes are meant to be used multiple
76:15 - times. So if you have done any programming
before, you'll know that a class is kind of
76:19 - like a blueprint, it's made so that you can
create multiple objects from it. But the thing
76:23 - is, an ID is supposed to be only for one thing,
it'll work for more than one. But the convention
76:30 - is, you're only supposed to use an ID for
one single element. So for example, let's
76:35 - take this file we have here we have three
sub titles, and one for the about me section.
76:40 - In this structure, what we would do is create
a sub title class for every sub title on the
76:47 - page, then we'd apply it to it. Now the reason
we're doing this is because we can have multiple
76:54 - h2 is on this page. So we only want to apply
it to the subtitles. But then for our bio
76:59 - about me here, there's only going to be one
of them on this whole document, which means
77:04 - we're going to use the ID of about me. And
then from there, we can go and apply our styles
77:08 - and do all of that. So that's just the main
difference between classes and IDs. And now
77:12 - that you know how to use them, you can actually
go through and apply them properly in real
77:17 - world scenarios. So that's just a very important
thing to keep in mind. You're only supposed
77:23 - to use IDs once and classes can be used multiple
times. Alright, let's move on.
77:28 - So in this video I am we are going to be looking
at pseudo selectors. So this is a special
77:35 - type of selector that is used commonly in
interactivity with your website. So this is
77:45 - usually visible only when something is done
on the website. So it's a pretty it's pretty
77:49 - cool feature. And it's used very commonly
throughout CSS. And once we get to the animations
77:56 - and transitions part, we're actually going
to be used soon as we be we're going to be
78:01 - using pseudo selectors a lot. So let's get
into it. Now, there's a few pseudo selectors
78:06 - I want to cover here. There's a lot of number
of only going to be covering the main ones
78:11 - that are we're going to be using. So before
we go on, I'm just going to show you what
78:14 - a pseudo selector actually is. So usually
what you would do is, after a selector, you
78:18 - would add a colon, and then the name of the
pseudo selector. So this is just an example
78:23 - of one of them. And then the properties will
apply normally. Now watch what happens when
78:25 - I hover over our h2 here, you can see that
it's working perfectly. And when we hover
78:27 - over it, it is turning red. Now, obviously,
it doesn't apply to this subtitle, or the
78:30 - services part here. Because again, these are
all separate classes. And obviously, with
78:33 - specificity and everything like that, they
won't apply. So there we go. We have everything
78:38 - working here. And that's one of the pseudo
selectors, which is hover. So let's move on
78:42 - to some of the next ones. Now, there's also
two that I'd like to talk about, which is
78:48 - first child and last child. So the concept
behind child and parent elements is that right
78:53 - here, if we look Actually, this is a little
bit complicated example, let's look at this
78:58 - unordered list here, we have an A ul unordered
list, and then we have three allies. Okay,
79:03 - so pretty much this is going to be the first
child because it's placed inside of the UL,
79:09 - the second is going to be the second child,
and then this is going to be the third child.
79:14 - So you can see here that this is kind of the
relationship between child and parent. And
79:18 - what we can actually do is specify which one
we want to select. So if I go over here and
79:24 - select all URLs, and then of course, the colon
for the pseudo selector, and select first
79:27 - child, now, I'm just going to say set the
color to steel blue as well. Okay, so I'm
79:31 - gonna refresh the page, and you can see that
it's not working. Now, although it might seem
79:37 - like you want to put the URL first, obviously,
because, again, you're looking for the first
79:41 - child of the URL, this isn't actually how
you're supposed to write it. Instead, you're
79:47 - supposed to write the element that you're
trying to select, which in this case is our
79:52 - list item, or our Li. So now if I go ahead
and refresh the page, you can see that the
80:00 - first one here is going to be blue, it's a
little bit of a confusing rule to get around.
80:10 - But once you get used to it, it becomes very
easy. We also change this to last or last
80:17 - child like this. And then what's going to
happen is it's going to select the last one.
80:23 - Now, there's also one more that I'd like to
talk about quickly, which is nth child. So
80:28 - I'm just going to show you how this thing
works and child. And then in brackets, you
80:32 - put the number here. So when you're going
to put here is pretty much what number of
80:38 - the child you want to style. In this case,
I want every second Li child to be colored
80:42 - steel blue. So throughout the page, every
second Li that is inside of a that is the
80:47 - child element is going to be styled blue,
go ahead and refresh the page, you can see
80:51 - that works there. So there's actually one
more selector that I want to talk about, at
80:55 - least for children, and that is the only child
selector. So I think it makes perfect sense,
80:59 - pretty much what we're trying to look for
is something that there's only one child inside
81:02 - of it. So for example, nothing on this page
here actually has one child. But why don't
81:09 - we go ahead and add that. So under this list,
I'm just going to temporarily remove these
81:13 - here, just like that. All right, let's go
ahead and save, make sure it's working. There
81:17 - we go. Now, what I'm going to do is go ahead
and select this. So I'm going to say Li by
81:23 - car. And I'm going to say only child. So pretty
much what this is saying is for every Li that
81:29 - is the only child of its parent. And you can
see this, the UL does only has one child.
81:37 - So I'm going to go ahead and give it a color
of purple, for example. And you can see that
81:42 - it works perfectly. But what would happen
if I tried this on, let's just say for example,
81:47 - the TD is here. Okay, so I'm going to go ahead
and add a new one TD, only child. And I'm
81:53 - also going to give this a color of purple.
81:56 - So in this video I am we are going to be looking
at pseudo selectors. So this is a special
82:00 - type of selector that is used commonly in
interactivity with your website. So this is
82:05 - usually visible only when something is done
on the website. So it's a pretty it's pretty
82:09 - cool feature. And it's used very commonly
throughout CSS. And once we get to the animations
82:15 - and transitions part, we're actually going
to be used soon as we be we're going to be
82:18 - using pseudo selectors a lot. So let's get
into it. Now, there's a few pseudo selectors
82:22 - I want to cover here. There's a lot of number
of only going to be covering the main ones
82:30 - that are we're going to be using. So before
we go on, I'm just going to show you what
82:35 - a pseudo selector actually is. So usually
what you would do is, after a selector, you
82:40 - would add a colon, and then the name of the
pseudo selector. So this is just an example
82:46 - of one of them. And then the properties will
apply normally. Now watch what happens when
82:52 - I hover over our h2 here, you can see that
it's working perfectly. And when we hover
82:56 - over it, it is turning red. Now, obviously,
it doesn't apply to this subtitle, or the
83:01 - services part here. Because again, these are
all separate classes. And obviously, with
83:04 - specificity and everything like that, they
won't apply. So there we go. We have everything
83:09 - working here. And that's one of the pseudo
selectors, which is hover. So let's move on
83:15 - to some of the next ones. Now, there's also
two that I'd like to talk about, which is
83:20 - first child and last child. So the concept
behind child and parent elements is that right
83:24 - here, if we look Actually, this is a little
bit complicated example, let's look at this
83:29 - unordered list here, we have an A ul unordered
list, and then we have three allies. Okay,
83:36 - so pretty much this is going to be the first
child because it's placed inside of the UL,
83:44 - the second is going to be the second child,
and then this is going to be the third child.
83:51 - So you can see here that this is kind of the
relationship between child and parent. And
83:54 - what we can actually do is specify which one
we want to select. So if I go over here and
83:59 - select all URLs, and then of course, the colon
for the pseudo selector, and select first
84:04 - child, now, I'm just going to say set the
color to steel blue as well. Okay, so I'm
84:08 - gonna refresh the page, and you can see that
it's not working. Now, although it might seem
84:13 - like you want to put the URL first, obviously,
because, again, you're looking for the first
84:18 - child of the URL, this isn't actually how
you're supposed to write it. Instead, you're
84:22 - supposed to write the element that you're
trying to select, which in this case is our
84:26 - list item, or our Li. So now if I go ahead
and refresh the page, you can see that the
84:36 - first one here is going to be blue, it's a
little bit of a confusing rule to get around.
84:42 - But once you get used to it, it becomes very
easy. We also change this to last or last
84:47 - child like this. And then what's going to
happen is it's going to select the last one.
84:56 - Now, there's also one more that I'd like to
talk about quickly, which is nth child. So
85:06 - I'm just going to show you how this thing
works and child. And then in brackets, you
85:09 - put the number here. So when you're going
to put here is pretty much what number of
85:13 - the child you want to style. In this case,
I want every second Li child to be colored
85:19 - steel blue. So throughout the page, every
second Li that is inside of a that is the
85:28 - child element is going to be styled blue,
go ahead and refresh the page, you can see
85:38 - that works there. So there's actually one
more selector that I want to talk about, at
85:43 - least for children, and that is the only child
selector. So I think it makes perfect sense,
85:49 - pretty much what we're trying to look for
is something that there's only one child inside
85:53 - of it. So for example, nothing on this page
here actually has one child. But why don't
85:58 - we go ahead and add that. So under this list,
I'm just going to temporarily remove these
86:03 - here, just like that. All right, let's go
ahead and save, make sure it's working. There
86:11 - we go. Now, what I'm going to do is go ahead
and select this. So I'm going to say Li by
86:18 - car. And I'm going to say only child. So pretty
much what this is saying is for every Li that
86:26 - is the only child of its parent. And you can
see this, the UL does only has one child.
86:32 - So I'm going to go ahead and give it a color
of purple, for example. And you can see that
86:34 - it works perfectly. But what would happen
if I tried this on, let's just say for example,
86:36 - the TD is here. Okay, so I'm going to go ahead
and add a new one TD, only child. And I'm
86:41 - also going to give this a color of purple.
86:43 - Now let's go ahead and refresh and see what's
going on. All right. So you can see that that
86:47 - TD right here, it's somewhere in this table,
nothing's actually happening. That's because
86:50 - as we can see here, there is nothing on this
page where there's only one TD as a child.
86:55 - So that's just one thing to keep in mind.
Sometimes pseudo selectors won't actually
86:59 - style anything if they don't exist. So there
we go. That's pretty much for the basic children
87:06 - kind of pseudo selectors. Let's move on to
some other students, selectors. Now, there
87:12 - are selectors of this type that are actually
specific to certain elements, and one of them
87:14 - is the anchor tag or the a tag. So I'm just
going to go ahead and create an anchor tag
87:22 - under this h2 here. Oh, whoops. Okay, and
I'm just going to give it a link or an endpoint
87:30 - of Google. So just like that. Okay, there
we go. So in here, I'm just going to say Click
87:39 - here to go to Google. Pretty simple. At Tag.
Hopefully everyone knows how to do this. There
87:45 - we go, we have our link there. So I click
on it takes me there, pretty standard stuff.
87:52 - Now, we can actually create pseudo selectors
for this. So I'm going to be giving you two
87:58 - for now. Now, there are many, many more. But
these are the two main ones you need to focus
88:05 - on. The rest of them are kind of generalized.
And these are the main two that you're going
88:09 - to be using. So I'm going to create them here.
And remember, you're using the element name,
88:14 - you can use the class if you want, it's not
limited to single element names, actually,
88:17 - why don't I go ahead and do that, I'm going
to give it an ID, because again, we only have
88:22 - one of these on the page, I'm going to give
it an ID of Google link, just like that. So
88:27 - now I'm gonna go ahead and reference that
in here. So remember, it's just the name of
88:34 - this electric Google dash link, in this case,
and then the colon. So here, I'm going to
88:38 - go ahead and say, link. Okay, so this is the
first pseudo selector. And then there's also
88:40 - a second one. Don't worry about what I'm typing
for. now. I'll explain both of these in just
88:43 - a second. Alright, so let's look at the first
one here, Google link, like, pretty much what
88:47 - this is saying is, if you've ever been on
a web page, you know that there is a difference
88:52 - between before you click on the link and after,
there's kind of some stylistic changes. So
88:56 - that's where pseudo selectors actually come
into play. The website has of those has those
89:02 - defined properties. And they actually change
the way that the link looks before and after
89:07 - it is clicked. So I'm going to go ahead and
do it here. Link is the unvisited link, remember,
89:10 - so I'm going to go ahead and give it a color
of blue. And then when it's clicked, I'm going
89:14 - to go ahead and give it a color of red tie
blue there. Remember, usually, the default
89:15 - is that it is going to be purple like this
color here. Let's go ahead and refresh the
89:17 - page, you can see that it's actually read
now. Now, obviously, I can't really go back
89:18 - in time, and change the link so that it doesn't
look clicked. But you can see how powerful
89:20 - this the pseudo selectors are, because you
can do so many different things. And once
89:25 - we learn more properties, you can actually
change different parts of the page. And it
89:27 - becomes very powerful to use these pseudo
selectors. So that's just one thing to keep
89:30 - in mind. All right. So there we go. We've
covered most of the pseudo selectors, I'm
89:37 - actually going to go ahead and add that hover
property there back in case anyone wants to
89:39 - use the project files. So there we go. We've
covered everything here. And we've added all
89:42 - of our pseudo selectors. So like I said, there's
many more, I've linked a couple articles that
89:44 - help you to look at all of the different pseudo
selectors. And most of them, you're not really
89:50 - going to use very often, they are useful in
any way, because they're usually you just
89:53 - use some basic pseudo selectors like hover
and active, which I haven't actually covered.
89:57 - But things like that. So you're not really
going to use all of them. But I just wanted
90:01 - to give you an introduction to the main ones,
so that when it comes time to use them, you
90:05 - have the tools to finish the job or create
that effect that you've always wanted. Alright,
90:10 - let's move on.
90:11 - Now let's go ahead and refresh and see what's
going on. All right. So you can see that that
90:17 - TD right here, it's somewhere in this table,
nothing's actually happening. That's because
90:21 - as we can see here, there is nothing on this
page where there's only one TD as a child.
90:26 - So that's just one thing to keep in mind.
Sometimes pseudo selectors won't actually
90:30 - style anything if they don't exist. So there
we go. That's pretty much for the basic children
90:35 - kind of pseudo selectors. Let's move on to
some other students, selectors. Now, there
90:39 - are selectors of this type that are actually
specific to certain elements, and one of them
90:43 - is the anchor tag or the a tag. So I'm just
going to go ahead and create an anchor tag
90:48 - under this h2 here. Oh, whoops. Okay, and
I'm just going to give it a link or an endpoint
90:57 - of Google. So just like that. Okay, there
we go. So in here, I'm just going to say Click
91:03 - here to go to Google. Pretty simple. At Tag.
Hopefully everyone knows how to do this. There
91:07 - we go, we have our link there. So I click
on it takes me there, pretty standard stuff.
91:11 - Now, we can actually create pseudo selectors
for this. So I'm going to be giving you two
91:15 - for now. Now, there are many, many more. But
these are the two main ones you need to focus
91:20 - on. The rest of them are kind of generalized.
And these are the main two that you're going
91:30 - to be using. So I'm going to create them here.
And remember, you're using the element name,
91:34 - you can use the class if you want, it's not
limited to single element names, actually,
91:36 - why don't I go ahead and do that, I'm going
to give it an ID, because again, we only have
91:41 - one of these on the page, I'm going to give
it an ID of Google link, just like that. So
91:47 - now I'm gonna go ahead and reference that
in here. So remember, it's just the name of
91:58 - this electric Google dash link, in this case,
and then the colon. So here, I'm going to
92:00 - go ahead and say, link. Okay, so this is the
first pseudo selector. And then there's also
92:03 - a second one. Don't worry about what I'm typing
for. now. I'll explain both of these in just
92:08 - a second. Alright, so let's look at the first
one here, Google link, like, pretty much what
92:12 - this is saying is, if you've ever been on
a web page, you know that there is a difference
92:18 - between before you click on the link and after,
there's kind of some stylistic changes. So
92:21 - that's where pseudo selectors actually come
into play. The website has of those has those
92:25 - defined properties. And they actually change
the way that the link looks before and after
92:28 - it is clicked. So I'm going to go ahead and
do it here. Link is the unvisited link, remember,
92:38 - so I'm going to go ahead and give it a color
of blue. And then when it's clicked, I'm going
92:45 - to go ahead and give it a color of red tie
blue there. Remember, usually, the default
92:51 - is that it is going to be purple like this
color here. Let's go ahead and refresh the
93:03 - page, you can see that it's actually read
now. Now, obviously, I can't really go back
93:10 - in time, and change the link so that it doesn't
look clicked. But you can see how powerful
93:17 - this the pseudo selectors are, because you
can do so many different things. And once
93:21 - we learn more properties, you can actually
change different parts of the page. And it
93:29 - becomes very powerful to use these pseudo
selectors. So that's just one thing to keep
93:33 - in mind. All right. So there we go. We've
covered most of the pseudo selectors, I'm
93:38 - actually going to go ahead and add that hover
property there back in case anyone wants to
93:44 - use the project files. So there we go. We've
covered everything here. And we've added all
93:49 - of our pseudo selectors. So like I said, there's
many more, I've linked a couple articles that
93:54 - help you to look at all of the different pseudo
selectors. And most of them, you're not really
94:02 - going to use very often, they are useful in
any way, because they're usually you just
94:07 - use some basic pseudo selectors like hover
and active, which I haven't actually covered.
94:10 - But things like that. So you're not really
going to use all of them. But I just wanted
94:15 - to give you an introduction to the main ones,
so that when it comes time to use them, you
94:20 - have the tools to finish the job or create
that effect that you've always wanted. Alright,
94:28 - let's move on.
94:29 - Today, we're going to be looking at Advanced
selectors. So right now, we've looked at our
94:35 - basic selectors, or class selectors, element
selectors, and Id selectors. And we've also
94:39 - looked at some pseudo selectors, which is
very useful. But now we're going to look at
94:45 - some of the more advanced selectors. Now,
you're not going to use these every day. They're
94:50 - not used very commonly, but it just shows
what you can actually do with these selectors,
94:54 - because there is a lot. So there's a bunch
of advanced selectors. And I'm actually going
94:59 - to be breaking these down into two parts,
we're going to be looking first at our basic
95:04 - advanced selectors. And I know that sounds
a little bit contradictive. But we'll get
95:09 - into that in just a second. And then after
that, we're going to be talking about attribute
95:15 - selectors, which are probably the hardest
type of selector to get used to. Alright,
95:18 - let's get started. So the first thing I want
to talk about is how you actually set up these
95:23 - selectors. Now, these sometimes contain one,
two, or sometimes even three elements in one
95:28 - selector. So I'm going to be going through
these and talking about how they all work.
95:32 - So the first selector I'm going to be talking
about is something called the adjacent sibling
95:36 - selector. So pretty much what this does is
selects every single element that directly
95:39 - follows a different element. So I'll show
you how to set this up. Let's first take a
95:43 - look at our HTML page every over here, sorry.
Now you can see we have our services, which
95:46 - is an h2, and then we have an a tag. Now first
thing I'm going to do is actually go ahead
95:53 - and get rid of these two, I'm going to actually
comment them out. You can do this with Ctrl,
95:57 - slash, like that. So if you type control slash
comments here with which pretty much just
96:02 - renders it useless, it doesn't run or anything
like that. Let's get started. So the first
96:05 - thing I want to do is go ahead and set this
up. So I want to be able to apply styles to
96:12 - every a tag or anchor tag that comes directly
after an h2. So the way to set this up is
96:17 - all you have to do is go the element that
you Want to be the first element. So in this
96:23 - case, it's going to be our h2. And then afterwards,
it's going to be the element that you want
96:28 - after, which is our a tag. So you want h2
plus a. So this is pretty much saying every
96:35 - anchor tag that follows an h2. So then we
can pretty much just set the style however
96:40 - we want. So I'm going to say color is red,
just like that. Now remember, this isn't any
96:44 - there is no pseudo selector on this, if you
could add it if you wanted to. Because this
96:49 - is still a selector. Remember, I'm not going
to add any. So I'm going to go ahead and refresh
96:52 - the page. And you can see it turns red again.
So that's the first type of selector. Next
96:54 - thing I want to look at is the general sibling
combinator, or selector. So this is a little
96:58 - bit more difficult to understand. But All
in good time, it's once you get used to it,
97:08 - it becomes much easier to understand. So pretty
much what the general sibling selector does,
97:12 - is goes for the same kind of idea as this
selector here, it looks for elements that
97:18 - go directly after one another, except they
have to be sharing the same parents, okay.
97:22 - So for example, let's see our input here our
form, we have an input and a text area, or
97:27 - a button followed by a text area, for example.
So what we're going to do here is I want to
97:33 - style every button that's followed by a text
area, except in this case, they have to share
97:38 - the same parent. So what we're going to do
is go and say, every button, which is going
97:43 - to be the next one, or the final one, which
is eight here. So sorry, it's actually going
97:48 - to be text area. Right, because that's the
first element here, which is our text area.
97:51 - And then this symbol followed, and then it's
going to be a button, like that. So this is
97:56 - seeing every button that is followed, or that
is after a text area, but they're in the same
98:02 - parent. So from here, we can go and style
it however we want. So in this case, I'm going
98:08 - to go ahead and just say the color is purple.
Oops. Now if we go ahead and refresh, you
98:17 - can see that the button color is purple. So
like I said, the main difference between these
98:22 - two is that the first one is going to be styling
elements that follow each other no matter
98:24 - where they are on the scale. So if you actually
look up here, they don't share any parents,
98:28 - they're completely separate elements. Whereas
here, they have to follow each other. And
98:31 - I'll actually demonstrate that quickly. If
we change this to a plus here. and refresh,
98:34 - the style is still going to work because they
are directly preceded. But the only thing
98:39 - is if they aren't. So for example, I'm just
going to actually move this button out of
98:42 - the form.
98:43 - Today, we're going to be looking at Advanced
selectors. So right now, we've looked at our
98:46 - basic selectors, or class selectors, element
selectors, and Id selectors. And we've also
98:49 - looked at some pseudo selectors, which is
very useful. But now we're going to look at
98:54 - some of the more advanced selectors. Now,
you're not going to use these every day. They're
98:59 - not used very commonly, but it just shows
what you can actually do with these selectors,
99:02 - because there is a lot. So there's a bunch
of advanced selectors. And I'm actually going
99:06 - to be breaking these down into two parts,
we're going to be looking first at our basic
99:11 - advanced selectors. And I know that sounds
a little bit contradictive. But we'll get
99:15 - into that in just a second. And then after
that, we're going to be talking about attribute
99:19 - selectors, which are probably the hardest
type of selector to get used to. Alright,
99:21 - let's get started. So the first thing I want
to talk about is how you actually set up these
99:24 - selectors. Now, these sometimes contain one,
two, or sometimes even three elements in one
99:26 - selector. So I'm going to be going through
these and talking about how they all work.
99:29 - So the first selector I'm going to be talking
about is something called the adjacent sibling
99:35 - selector. So pretty much what this does is
selects every single element that directly
99:40 - follows a different element. So I'll show
you how to set this up. Let's first take a
99:44 - look at our HTML page every over here, sorry.
Now you can see we have our services, which
99:51 - is an h2, and then we have an a tag. Now first
thing I'm going to do is actually go ahead
100:00 - and get rid of these two, I'm going to actually
comment them out. You can do this with Ctrl,
100:07 - slash, like that. So if you type control slash
comments here with which pretty much just
100:12 - renders it useless, it doesn't run or anything
like that. Let's get started. So the first
100:18 - thing I want to do is go ahead and set this
up. So I want to be able to apply styles to
100:27 - every a tag or anchor tag that comes directly
after an h2. So the way to set this up is
100:34 - all you have to do is go the element that
you Want to be the first element. So in this
100:41 - case, it's going to be our h2. And then afterwards,
it's going to be the element that you want
100:50 - after, which is our a tag. So you want h2
plus a. So this is pretty much saying every
100:56 - anchor tag that follows an h2. So then we
can pretty much just set the style however
101:02 - we want. So I'm going to say color is red,
just like that. Now remember, this isn't any
101:10 - there is no pseudo selector on this, if you
could add it if you wanted to. Because this
101:22 - is still a selector. Remember, I'm not going
to add any. So I'm going to go ahead and refresh
101:31 - the page. And you can see it turns red again.
So that's the first type of selector. Next
101:36 - thing I want to look at is the general sibling
combinator, or selector. So this is a little
101:39 - bit more difficult to understand. But All
in good time, it's once you get used to it,
101:42 - it becomes much easier to understand. So pretty
much what the general sibling selector does,
101:45 - is goes for the same kind of idea as this
selector here, it looks for elements that
101:50 - go directly after one another, except they
have to be sharing the same parents, okay.
101:55 - So for example, let's see our input here our
form, we have an input and a text area, or
102:04 - a button followed by a text area, for example.
So what we're going to do here is I want to
102:11 - style every button that's followed by a text
area, except in this case, they have to share
102:16 - the same parent. So what we're going to do
is go and say, every button, which is going
102:20 - to be the next one, or the final one, which
is eight here. So sorry, it's actually going
102:24 - to be text area. Right, because that's the
first element here, which is our text area.
102:27 - And then this symbol followed, and then it's
going to be a button, like that. So this is
102:40 - seeing every button that is followed, or that
is after a text area, but they're in the same
102:46 - parent. So from here, we can go and style
it however we want. So in this case, I'm going
102:51 - to go ahead and just say the color is purple.
Oops. Now if we go ahead and refresh, you
102:54 - can see that the button color is purple. So
like I said, the main difference between these
103:00 - two is that the first one is going to be styling
elements that follow each other no matter
103:09 - where they are on the scale. So if you actually
look up here, they don't share any parents,
103:14 - they're completely separate elements. Whereas
here, they have to follow each other. And
103:17 - I'll actually demonstrate that quickly. If
we change this to a plus here. and refresh,
103:24 - the style is still going to work because they
are directly preceded. But the only thing
103:29 - is if they aren't. So for example, I'm just
going to actually move this button out of
103:32 - the form.
103:33 - Just like that seems like the button disappeared
there. Let's go ahead and redo that. Okay,
103:37 - so we have the button back. Now I'm going
to go ahead and change this back to our symbol
103:43 - there. And if we go ahead and refresh, you
can see that the button right there, it doesn't
103:48 - actually have that styling anymore, because
although they directly follow each other,
103:54 - they're not under the same parent. So that's
just one minor difference. Alright, let's
103:58 - move on to the next one. It's called the child
selector. So this is probably the most basic
104:06 - out of all of these advanced selectors. And
pretty much what is saying is every single
104:10 - child have a certain element. So I'll give
you an example. Here, we have an Li and a
104:17 - ul, this is pretty basic, all you have to
do is type ul, which is going to be a parent.
104:29 - And then this symbol or the greater than symbol,
and Li so this is gonna say every single Li
104:34 - inside of a ul, open up the brackets. And
let's start to color this time to blue. I'm
104:42 - just gonna say that. And remember, specificity
is at play here. Now, like I said, the specificity
104:47 - rules, once you use these advanced selectors
get quite complicated. But for example, if
104:50 - we actually look at the Li here, the style
for this, we can see that the Li with the
104:54 - pseudo selector is actually more specific
than the this general selector. So I'm going
105:06 - to go ahead and comment that out. Now if we
refresh the page, you can see that it's blue.
105:11 - So that's just one thing to keep in mind with
these advanced selectors. They can get pretty
105:16 - complicated. And that's why we use the numbers,
the zeros, ones, twos, things like that, is
105:20 - to be able to classify these once we get and
start using these advanced selectors. Like
105:25 - I said, usually you won't use these in your
general use. So I'm not going to go over specificity
105:36 - especially because usually, you'll group up
all of these styles into one selector. Okay,
105:40 - so that's the child selector. The next one
is very similar to the child selector, but
105:46 - instead of having direct children, there's
actually something called a descendant. So
105:50 - I'm just going to go ahead and edit this a
little bit. I'm going to have an Li okay,
105:56 - but then I'm going to create an ordered list
inside of the Output training to create an
106:02 - Li and put the ordered list inside of that.
So pretty much what's going on here is I'm
106:08 - creating an ordered list or a numbered list
inside of a list item that is inside of a
106:13 - ul. So a little bit complicated. But we'll
get to that in just a second. So I'm going
106:19 - to create an Li inside of this. And I'm going
to say, my numbered list item, just like that.
106:23 - Alright, now I'm going to go ahead and refresh
the page. And you can see we have a list item
106:28 - here with our item. All right, so let's get
started on using this descendant selector.
106:31 - So I'm going to get started, first thing I
want to do is actually set this up. So first
106:36 - thing we're going to have is the parent. Okay,
so in this case, it's going to be our ul,
106:42 - remember, because that's the top level. But
then I'm going to select the Li here, but
106:48 - I'm not going to put our greater than symbol.
So that's the big difference. This is the
106:53 - descendant selector, and then this is going
to be our child selector. So that's just the
107:00 - main difference, it's very easy to miss, just
make sure that you don't mess that up. So
107:07 - now I'm going to select the color and set
it to four. Now let's just say green. All
107:15 - right, now let's go ahead and refresh the
page. And you can see that all of the lies
107:21 - inside of there are going to be green, right?
Only problem is our ordered list right here
107:25 - is actually purple, right? And of course,
you know, our list here is getting a little
107:31 - bit complicated. So I'm going to go ahead
and comment this out. Remember, this is a
107:34 - very specific selector. Now, if I go ahead
and refresh, both of them are green. All right.
107:39 - So what do you need to take away from this,
it's pretty much what this is saying is any
107:44 - Li that eventually boils back or propagates
up if you have done any programming before,
107:48 - that goes up to N A ul, okay, so I'll just
show you what that means. In this case, the
107:54 - Li is a direct child of the UL, right. But
then we have another Li in here, which is
107:55 - a child of n o l, which is just child of an
Li, which is a child of the UL, right. So
108:00 - as you move up and up, it eventually comes
back to the UL as the parent element. So the
108:07 - main difference you need to take away from
this is that the child selector is selecting
108:11 - any direct children. So anything here would
not apply, because we're actually
108:15 - Just like that seems like the button disappeared
there. Let's go ahead and redo that. Okay,
108:19 - so we have the button back. Now I'm going
to go ahead and change this back to our symbol
108:24 - there. And if we go ahead and refresh, you
can see that the button right there, it doesn't
108:29 - actually have that styling anymore, because
although they directly follow each other,
108:32 - they're not under the same parent. So that's
just one minor difference. Alright, let's
108:36 - move on to the next one. It's called the child
selector. So this is probably the most basic
108:42 - out of all of these advanced selectors. And
pretty much what is saying is every single
108:46 - child have a certain element. So I'll give
you an example. Here, we have an Li and a
108:50 - ul, this is pretty basic, all you have to
do is type ul, which is going to be a parent.
108:56 - And then this symbol or the greater than symbol,
and Li so this is gonna say every single Li
109:00 - inside of a ul, open up the brackets. And
let's start to color this time to blue. I'm
109:09 - just gonna say that. And remember, specificity
is at play here. Now, like I said, the specificity
109:12 - rules, once you use these advanced selectors
get quite complicated. But for example, if
109:17 - we actually look at the Li here, the style
for this, we can see that the Li with the
109:23 - pseudo selector is actually more specific
than the this general selector. So I'm going
109:28 - to go ahead and comment that out. Now if we
refresh the page, you can see that it's blue.
109:33 - So that's just one thing to keep in mind with
these advanced selectors. They can get pretty
109:38 - complicated. And that's why we use the numbers,
the zeros, ones, twos, things like that, is
109:44 - to be able to classify these once we get and
start using these advanced selectors. Like
109:49 - I said, usually you won't use these in your
general use. So I'm not going to go over specificity
109:55 - especially because usually, you'll group up
all of these styles into one selector. Okay,
110:00 - so that's the child selector. The next one
is very similar to the child selector, but
110:03 - instead of having direct children, there's
actually something called a descendant. So
110:06 - I'm just going to go ahead and edit this a
little bit. I'm going to have an Li okay,
110:12 - but then I'm going to create an ordered list
inside of the Output training to create an
110:16 - Li and put the ordered list inside of that.
So pretty much what's going on here is I'm
110:19 - creating an ordered list or a numbered list
inside of a list item that is inside of a
110:24 - ul. So a little bit complicated. But we'll
get to that in just a second. So I'm going
110:29 - to create an Li inside of this. And I'm going
to say, my numbered list item, just like that.
110:34 - Alright, now I'm going to go ahead and refresh
the page. And you can see we have a list item
110:37 - here with our item. All right, so let's get
started on using this descendant selector.
110:39 - So I'm going to get started, first thing I
want to do is actually set this up. So first
110:42 - thing we're going to have is the parent. Okay,
so in this case, it's going to be our ul,
110:48 - remember, because that's the top level. But
then I'm going to select the Li here, but
110:52 - I'm not going to put our greater than symbol.
So that's the big difference. This is the
110:56 - descendant selector, and then this is going
to be our child selector. So that's just the
111:01 - main difference, it's very easy to miss, just
make sure that you don't mess that up. So
111:05 - now I'm going to select the color and set
it to four. Now let's just say green. All
111:09 - right, now let's go ahead and refresh the
page. And you can see that all of the lies
111:11 - inside of there are going to be green, right?
Only problem is our ordered list right here
111:16 - is actually purple, right? And of course,
you know, our list here is getting a little
111:20 - bit complicated. So I'm going to go ahead
and comment this out. Remember, this is a
111:24 - very specific selector. Now, if I go ahead
and refresh, both of them are green. All right.
111:30 - So what do you need to take away from this,
it's pretty much what this is saying is any
111:33 - Li that eventually boils back or propagates
up if you have done any programming before,
111:35 - that goes up to N A ul, okay, so I'll just
show you what that means. In this case, the
111:37 - Li is a direct child of the UL, right. But
then we have another Li in here, which is
111:42 - a child of n o l, which is just child of an
Li, which is a child of the UL, right. So
111:47 - as you move up and up, it eventually comes
back to the UL as the parent element. So the
111:50 - main difference you need to take away from
this is that the child selector is selecting
111:54 - any direct children. So anything here would
not apply, because we're actually
111:58 - this one wouldn't apply, because the ordered
list is actually a child of the Li remember,
112:05 - but when you're using the descendant selector,
what actually happens is, if it is contained
112:09 - inside of a ul at all, then use or apply the
styles. So I'm going to go ahead and demonstrate
112:15 - this. Now. Let's go ahead and actually remove
this Li remember, because once you get to
112:20 - this point, CSS gets a little bit complicated.
This is going to end up styling everything
112:29 - inside it. So I'm actually just going to remove
this and leave it just the ordered list. So
112:37 - right now, we have the ordered list as a child
of the UL. Now I'm going to go ahead and refresh.
112:41 - And you can see it still stays the same, because
we have this style applied. But why don't
112:43 - we go ahead and remove this, what do you think's
going to happen? Well, you can see here that
112:49 - this stays blue, remember, because of our
direct child selector, but then this doesn't
112:54 - have any style at all. So this Li works perfectly.
It is a direct child of the UL, which means
113:00 - it's going to be colored with the style specified.
The only problem is this Li is a direct child
113:07 - have the ordered list, which is completely
separate from this one. So the styles aren't
113:11 - going to be applied on this one. On the other
hand, if we did have our descendant selector
113:18 - enabled, it's going to style both of them
because remember, the Li is a child of the
113:23 - oil, and the oil is a child of the UL. So
just keep that in mind, there's a big difference
113:30 - between the two, you might be able to miss
it, it could really mess up your code. So
113:37 - just make sure to keep that in mind. Alright,
so those are pretty much the basic advanced
113:43 - selectors, those are the four that you're
mainly going to use. Again, there's many more,
113:47 - but they are quite difficult. And we're not
going to cover them because they're not very
113:51 - useful. So there we go. Those are the four
selectors that you can use. Go ahead and practice
113:55 - them as much as you want. You know, try messing
them around, open up some HTML files and just
114:01 - see what you can do with them. All right,
let's move on.
114:06 - this one wouldn't apply, because the ordered
list is actually a child of the Li remember,
114:11 - but when you're using the descendant selector,
what actually happens is, if it is contained
114:15 - inside of a ul at all, then use or apply the
styles. So I'm going to go ahead and demonstrate
114:20 - this. Now. Let's go ahead and actually remove
this Li remember, because once you get to
114:25 - this point, CSS gets a little bit complicated.
This is going to end up styling everything
114:29 - inside it. So I'm actually just going to remove
this and leave it just the ordered list. So
114:33 - right now, we have the ordered list as a child
of the UL. Now I'm going to go ahead and refresh.
114:39 - And you can see it still stays the same, because
we have this style applied. But why don't
114:47 - we go ahead and remove this, what do you think's
going to happen? Well, you can see here that
114:56 - this stays blue, remember, because of our
direct child selector, but then this doesn't
115:00 - have any style at all. So this Li works perfectly.
It is a direct child of the UL, which means
115:05 - it's going to be colored with the style specified.
The only problem is this Li is a direct child
115:09 - have the ordered list, which is completely
separate from this one. So the styles aren't
115:12 - going to be applied on this one. On the other
hand, if we did have our descendant selector
115:16 - enabled, it's going to style both of them
because remember, the Li is a child of the
115:20 - oil, and the oil is a child of the UL. So
just keep that in mind, there's a big difference
115:26 - between the two, you might be able to miss
it, it could really mess up your code. So
115:30 - just make sure to keep that in mind. Alright,
so those are pretty much the basic advanced
115:34 - selectors, those are the four that you're
mainly going to use. Again, there's many more,
115:41 - but they are quite difficult. And we're not
going to cover them because they're not very
115:47 - useful. So there we go. Those are the four
selectors that you can use. Go ahead and practice
115:55 - them as much as you want. You know, try messing
them around, open up some HTML files and just
115:59 - see what you can do with them. All right,
let's move on.
116:01 - Welcome back. So in this video, I am going
to be talking about the last type of selector.
116:05 - These are called attribute selectors. They're
a little bit complicated once you get started,
116:10 - but once we actually start using them, they
become very easy to use. So first of all,
116:15 - what is an attribute selector? Well, as we
know, in HTML, we can actually add attributes
116:20 - to all of our elements. So for example, this
image here has an attribute of source which
116:26 - tells the image tag where the source of the
images. But what we can actually do in CSS
116:32 - is use these to our advantage, we can select
certain elements that for certain attributes
116:37 - and their values. So for example, let's go
ahead and try and rewrite this subtitle class
116:41 - here. So we know if we go over here that all
of our, all of our subtitle classes are used
116:45 - in h2. So what I want to do is actually rewrite
this in terms of our attribute selector. So
116:49 - what we do is first start off with our tag
name, which is h2. But then inside of some
116:55 - square brackets, what we do is type attribute
is equal to value. Okay, so obviously, we're
116:58 - not going to do it like this, we're going
to have to select some sort of attribute.
117:00 - What this allows us to do is actually select
certain things or certain elements based on
117:03 - their attributes. So in this clip, in this
case, we want to select everything that has
117:07 - the attribute of class, and we want to make
sure that the class itself is subtitled. Okay.
117:10 - Now, you do not need quotation marks for these,
unlike how they were in HTML, you can see
117:16 - we do need quotation marks, but in CSS, we
don't actually need them. Alright, so there
117:21 - we go. We have rewritten our class here. But
we've read we've but we've written it in a
117:24 - way that allows us to select it based on its
act on the attribute of it itself. So let's
117:28 - go ahead and refresh the page and see what
happens, you can see that this state exactly
117:31 - the same. Now nothing has changed. If I go
ahead and change this back to dot subtitle,
117:35 - just like that, refresh the page, you can
see nothing's changed. So that's pretty basic.
117:39 - Now, it doesn't just have to be class, we
can select it based on many different things.
117:46 - So for example, if I wanted to select this
image over here, I'm going to go over to the
117:51 - bottom, I could say image, image, and then
every and then the source has to be equal
117:56 - to something. All right. So there we go. Now
we've done that. But there's actually more
118:00 - than one type of selector. Now, usually, this
is the basic one where you just equate one
118:05 - side to the other. But there's actually many
more types of selectors, which allow you to
118:11 - kind of modify the attribute selectors and
make them much more powerful than they are
118:15 - right now. So how do we do this? Well, I'm
going to be covering just a few of them with
118:24 - you today, and showing you how you can use
them. So we have two images on this page.
118:29 - Now both of them are located in this image
folder. Is there do you think that there's
118:34 - any way that we can select both of them in
one go using an attribute selector? Well,
118:38 - there actually is. So here's what we have
to do. First of all, let's find the common
118:43 - factor between these two images. They both
are contained inside this folder. So they
118:50 - both start definitely start with this path,
dot dot slash IMG slash, both of them are
118:52 - going to contain this. And if we actually
go back and look, you can see that both images
118:57 - actually do contain this link here, wherever
the other images, there it is. So there we
119:02 - go. Now we've done that. But remember that
this is direct equating this has to be equal
119:05 - to this. And unfortunately, neither of them
are equal to that. So how do you think we
119:09 - fix this? Well, all we have to do is put a
carrot behind the attribute, just like this.
119:13 - So what this says is every single image where
the source contains or starts with, sorry,
119:16 - yeah, starts with this piece of information,
what comes after, it doesn't matter. But what
119:19 - we're doing is selecting all of the images
where the source attribute starts with this
119:23 - value right here. So this is you can already
see how powerful this is. Now, if we go ahead
119:32 - and refresh the page, obviously, we can't
see anything because we didn't add any styles.
119:40 - But I'm going to go ahead and add a quick
style for you. Or you don't need to know how
119:47 - to do this,
119:48 - Welcome back. So in this video, I am going
to be talking about the last type of selector.
119:54 - These are called attribute selectors. They're
a little bit complicated once you get started,
119:59 - but once we actually start using them, they
become very easy to use. So first of all,
120:02 - what is an attribute selector? Well, as we
know, in HTML, we can actually add attributes
120:07 - to all of our elements. So for example, this
image here has an attribute of source which
120:13 - tells the image tag where the source of the
images. But what we can actually do in CSS
120:19 - is use these to our advantage, we can select
certain elements that for certain attributes
120:22 - and their values. So for example, let's go
ahead and try and rewrite this subtitle class
120:32 - here. So we know if we go over here that all
of our, all of our subtitle classes are used
120:37 - in h2. So what I want to do is actually rewrite
this in terms of our attribute selector. So
120:41 - what we do is first start off with our tag
name, which is h2. But then inside of some
120:45 - square brackets, what we do is type attribute
is equal to value. Okay, so obviously, we're
120:47 - not going to do it like this, we're going
to have to select some sort of attribute.
120:51 - What this allows us to do is actually select
certain things or certain elements based on
120:55 - their attributes. So in this clip, in this
case, we want to select everything that has
120:59 - the attribute of class, and we want to make
sure that the class itself is subtitled. Okay.
121:06 - Now, you do not need quotation marks for these,
unlike how they were in HTML, you can see
121:13 - we do need quotation marks, but in CSS, we
don't actually need them. Alright, so there
121:18 - we go. We have rewritten our class here. But
we've read we've but we've written it in a
121:23 - way that allows us to select it based on its
act on the attribute of it itself. So let's
121:31 - go ahead and refresh the page and see what
happens, you can see that this state exactly
121:36 - the same. Now nothing has changed. If I go
ahead and change this back to dot subtitle,
121:40 - just like that, refresh the page, you can
see nothing's changed. So that's pretty basic.
121:44 - Now, it doesn't just have to be class, we
can select it based on many different things.
121:47 - So for example, if I wanted to select this
image over here, I'm going to go over to the
121:52 - bottom, I could say image, image, and then
every and then the source has to be equal
121:58 - to something. All right. So there we go. Now
we've done that. But there's actually more
121:59 - than one type of selector. Now, usually, this
is the basic one where you just equate one
122:03 - side to the other. But there's actually many
more types of selectors, which allow you to
122:08 - kind of modify the attribute selectors and
make them much more powerful than they are
122:12 - right now. So how do we do this? Well, I'm
going to be covering just a few of them with
122:17 - you today, and showing you how you can use
them. So we have two images on this page.
122:22 - Now both of them are located in this image
folder. Is there do you think that there's
122:26 - any way that we can select both of them in
one go using an attribute selector? Well,
122:29 - there actually is. So here's what we have
to do. First of all, let's find the common
122:34 - factor between these two images. They both
are contained inside this folder. So they
122:37 - both start definitely start with this path,
dot dot slash IMG slash, both of them are
122:40 - going to contain this. And if we actually
go back and look, you can see that both images
122:42 - actually do contain this link here, wherever
the other images, there it is. So there we
122:46 - go. Now we've done that. But remember that
this is direct equating this has to be equal
122:54 - to this. And unfortunately, neither of them
are equal to that. So how do you think we
122:57 - fix this? Well, all we have to do is put a
carrot behind the attribute, just like this.
123:02 - So what this says is every single image where
the source contains or starts with, sorry,
123:07 - yeah, starts with this piece of information,
what comes after, it doesn't matter. But what
123:13 - we're doing is selecting all of the images
where the source attribute starts with this
123:18 - value right here. So this is you can already
see how powerful this is. Now, if we go ahead
123:21 - and refresh the page, obviously, we can't
see anything because we didn't add any styles.
123:24 - But I'm going to go ahead and add a quick
style for you. Or you don't need to know how
123:31 - to do this,
123:32 - I'm actually going to make it a little bit
more obvious. So you don't need to know how
123:37 - to do this. We're going to cover it later.
But you can see now both images are covered
123:43 - in black. Okay. So there we go. That's just
one way, one of the selectors we can do, we
123:46 - can also change this to $1 sign, and in this
case, it's going to be make sure that the
123:53 - source attribute ends with this value. Okay.
So there we go, we can do that. Obviously,
124:01 - the style isn't going to work anymore, because
this doesn't apply. But there's also another
124:05 - one that we can do, which is using a star
the multiplication symbol. And pretty much
124:10 - what this is, is if it contains it anywhere,
anywhere in the the value for beginning and
124:17 - middle doesn't matter. As long as it contains
this. It's going to be there. So I'm going
124:25 - to go ahead and refresh and you can see now
that works because both of them do contain
124:30 - this. So those are the three basic ones, but
there's also some more complicated selectors
124:37 - now I'm going to go ahead and cover them.
But you don't exactly need to know these,
124:43 - because they're a little bit complicated.
So I'm just going to go ahead and do them.
124:48 - The first one is called a whitespace attribute
selector. So pretty much, if you don't know
124:56 - this already, you can actually add multiple
classes to something in HTML. So I'm actually
125:02 - going to go ahead and add another class to
the subtitles. And I'm just going to call
125:05 - it just something random particle subtitle.
Obviously, it's a little bit confusing, but
125:08 - just bear with me. So you can actually add
multiple classes or multiple arguments separated
125:14 - by white spaces or spaces, inside these inside
these attributes. Now, obviously, this is
125:18 - specific to some very small, a very small
number of attributes, where you can do this
125:25 - now just keep that in mind. For now, what
we're going to do is go forward and start
125:34 - using this. So I'm going to go ahead and select
anything that contains this, this class specifically.
125:43 - Now I couldn't do you know, maybe the attribute
selector where it ends in this or contains
125:52 - it, but there is another selector that we
can use. So I'm going to go ahead and say
125:57 - h2. And of course, the attribute is class.
And it's this symbol, whoops, it's this symbol,
126:00 - okay, and then equals, and then our value
in this in this case, it's going to be our
126:05 - class, which is article subtitle. All right.
So now we can go ahead and add whatever you
126:10 - want. So I'm actually going to go ahead and
give it a background. Now, again, you do not
126:16 - need to know what this is yet. I'm just trying
to vary up the properties a little bit here.
126:21 - So let's go ahead and refresh the page and
see what happens, you can see that a green
126:25 - background has been added to this, I'm not
going to try hovering over that it's a little
126:32 - bit different compensate, but you can see
that a green background has been added to
126:38 - it. Now, this could be used for a using a
contain attribute selector. But this is a
126:43 - little bit more specific. And it only works
for things that are separated by whitespace.
126:48 - So if you want to isolate certain elements
that contain a certain class x, for example,
126:54 - you can do it with these class attributes.
And that would work perfectly. So the next
126:59 - selector I'm going to talk about is a little
bit more complicated. And it's very similar
127:05 - to the first step, the first one that we talked
about, which was the general attribute selector,
127:11 - the one where, where it's exactly quality.
But there's a little bit of a difference here.
127:15 - There's actually one exception to this. Now,
I'm going to go ahead and demonstrate it here.
127:20 - Okay. So pretty much what this is saying is
fine, every h2, where the class is equal either
127:24 - equal to directly article dash subtitle, or
article dash subtitle with a dash. So, again,
127:27 - it does have to start with this. So it can't
just be containing followed by a dash, it
127:33 - does have to start with this. So why would
you want to use something like this? Why can't
127:38 - you just use the exact equality? Well, this
is a pretty basic site right here. Now, we're
127:43 - not really doing anything complicated, or
any multiple stylesheets or anything like
127:47 - that. But sometimes when you have want to
have multiple elements, or you want to build
127:52 - libraries, you can create multiple elements
that are followed by an ID. So for example,
127:56 - just list them here. I'm gonna actually put
this in a comment. So I could have subtitle,
128:01 - dash, and then some Id like that subtitle,
dash, and then again, some ID. So you can
128:03 - see why we would use something like this,
pretty much. What you want to do is select
128:07 - everything that
128:08 - I'm actually going to make it a little bit
more obvious. So you don't need to know how
128:13 - to do this. We're going to cover it later.
But you can see now both images are covered
128:18 - in black. Okay. So there we go. That's just
one way, one of the selectors we can do, we
128:23 - can also change this to $1 sign, and in this
case, it's going to be make sure that the
128:29 - source attribute ends with this value. Okay.
So there we go, we can do that. Obviously,
128:34 - the style isn't going to work anymore, because
this doesn't apply. But there's also another
128:39 - one that we can do, which is using a star
the multiplication symbol. And pretty much
128:44 - what this is, is if it contains it anywhere,
anywhere in the the value for beginning and
128:50 - middle doesn't matter. As long as it contains
this. It's going to be there. So I'm going
128:55 - to go ahead and refresh and you can see now
that works because both of them do contain
129:03 - this. So those are the three basic ones, but
there's also some more complicated selectors
129:07 - now I'm going to go ahead and cover them.
But you don't exactly need to know these,
129:13 - because they're a little bit complicated.
So I'm just going to go ahead and do them.
129:15 - The first one is called a whitespace attribute
selector. So pretty much, if you don't know
129:19 - this already, you can actually add multiple
classes to something in HTML. So I'm actually
129:24 - going to go ahead and add another class to
the subtitles. And I'm just going to call
129:28 - it just something random particle subtitle.
Obviously, it's a little bit confusing, but
129:31 - just bear with me. So you can actually add
multiple classes or multiple arguments separated
129:33 - by white spaces or spaces, inside these inside
these attributes. Now, obviously, this is
129:34 - specific to some very small, a very small
number of attributes, where you can do this
129:38 - now just keep that in mind. For now, what
we're going to do is go forward and start
129:44 - using this. So I'm going to go ahead and select
anything that contains this, this class specifically.
129:50 - Now I couldn't do you know, maybe the attribute
selector where it ends in this or contains
129:54 - it, but there is another selector that we
can use. So I'm going to go ahead and say
129:58 - h2. And of course, the attribute is class.
And it's this symbol, whoops, it's this symbol,
130:01 - okay, and then equals, and then our value
in this in this case, it's going to be our
130:05 - class, which is article subtitle. All right.
So now we can go ahead and add whatever you
130:07 - want. So I'm actually going to go ahead and
give it a background. Now, again, you do not
130:11 - need to know what this is yet. I'm just trying
to vary up the properties a little bit here.
130:15 - So let's go ahead and refresh the page and
see what happens, you can see that a green
130:19 - background has been added to this, I'm not
going to try hovering over that it's a little
130:20 - bit different compensate, but you can see
that a green background has been added to
130:25 - it. Now, this could be used for a using a
contain attribute selector. But this is a
130:28 - little bit more specific. And it only works
for things that are separated by whitespace.
130:30 - So if you want to isolate certain elements
that contain a certain class x, for example,
130:35 - you can do it with these class attributes.
And that would work perfectly. So the next
130:40 - selector I'm going to talk about is a little
bit more complicated. And it's very similar
130:46 - to the first step, the first one that we talked
about, which was the general attribute selector,
130:52 - the one where, where it's exactly quality.
But there's a little bit of a difference here.
131:02 - There's actually one exception to this. Now,
I'm going to go ahead and demonstrate it here.
131:06 - Okay. So pretty much what this is saying is
fine, every h2, where the class is equal either
131:12 - equal to directly article dash subtitle, or
article dash subtitle with a dash. So, again,
131:18 - it does have to start with this. So it can't
just be containing followed by a dash, it
131:25 - does have to start with this. So why would
you want to use something like this? Why can't
131:33 - you just use the exact equality? Well, this
is a pretty basic site right here. Now, we're
131:41 - not really doing anything complicated, or
any multiple stylesheets or anything like
131:45 - that. But sometimes when you have want to
have multiple elements, or you want to build
131:50 - libraries, you can create multiple elements
that are followed by an ID. So for example,
131:55 - just list them here. I'm gonna actually put
this in a comment. So I could have subtitle,
132:02 - dash, and then some Id like that subtitle,
dash, and then again, some ID. So you can
132:10 - see why we would use something like this,
pretty much. What you want to do is select
132:15 - everything that
132:16 - has subtitle and then the dash in it. And
you're probably also wondering, okay, why
132:20 - can't you just use one or the other selectors
like something that starts with it? Well,
132:26 - sometimes this is contained in a chain, or
sometimes there's multiple dashes. And on
132:34 - top of that, some sometimes it may change,
you know, maybe this could be in the middle
132:40 - of 15 other classes. So you can see why you'd
want to use something like this. And although
132:45 - it's not used very commonly, it's still very
important to know. Alright, so those are pretty
132:49 - much all of the advanced Arctic attribute
selectors. Like I said, You aren't going to
132:51 - use these very commonly. But again, it is
good to know they are very powerful selectors.
132:56 - So yeah, that's pretty much it. Go ahead.
Like I said, with every single video practice,
132:58 - and just try using the selectors on your own.
All of the project files are available on
133:02 - GitHub, the they the link to the repository
was posted at the beginning of the course.
133:07 - So you can go ahead and check that out if
you want to download the files and work with
133:10 - them. But other than that, there we go. That's
pretty much it for selectors now we can actually
133:14 - move on and start using CSS. Alright, let's
move on.
133:16 - has subtitle and then the dash in it. And
you're probably also wondering, okay, why
133:20 - can't you just use one or the other selectors
like something that starts with it? Well,
133:25 - sometimes this is contained in a chain, or
sometimes there's multiple dashes. And on
133:29 - top of that, some sometimes it may change,
you know, maybe this could be in the middle
133:33 - of 15 other classes. So you can see why you'd
want to use something like this. And although
133:38 - it's not used very commonly, it's still very
important to know. Alright, so those are pretty
133:42 - much all of the advanced Arctic attribute
selectors. Like I said, You aren't going to
133:48 - use these very commonly. But again, it is
good to know they are very powerful selectors.
133:54 - So yeah, that's pretty much it. Go ahead.
Like I said, with every single video practice,
133:59 - and just try using the selectors on your own.
All of the project files are available on
134:05 - GitHub, the they the link to the repository
was posted at the beginning of the course.
134:15 - So you can go ahead and check that out if
you want to download the files and work with
134:19 - them. But other than that, there we go. That's
pretty much it for selectors now we can actually
134:25 - move on and start using CSS. Alright, let's
move on.
134:28 - I'm not really going to talk a lot in this
video because there's not really much to talk
134:33 - about, but this video and the next are very
important because right now you're probably
134:38 - just piecing things together about the whole
way that we use CSS. And we've had to use
134:45 - a couple properties here and there, but you
Probably don't actually know what these brackets
134:47 - do, or how selectors work or how any of this
is actually put together. So that's what I'm
134:50 - going to be doing in the next few videos is
explaining how all of this comes together.
134:56 - And once we learn that, we can actually move
on to the fun part, which is using CSS and
135:01 - styling this website. So first thing I want
to explain is properties. Now, we've talked
135:06 - a little bit about properties here and there,
because we've needed them to demonstrate points
135:10 - on how selectors work. Now, obviously, it
might have been better if we use properties
135:14 - first. But in my opinion, it's better that
you learn selectors before you learn properties.
135:19 - Because if you learn selectors First, you'll
be able to understand the premise or the theory
135:23 - behind CSS, and how things work. Whereas if
you just learn properties first, then most
135:28 - of your focus will be on how the properties
work and not the selectors. And I feel that
135:35 - it's much more important that you learn the
selectors before the properties so that you
135:38 - can actually understand CSS and how it works
as a whole. So that aside, let's move on to
135:45 - properties. Now, like I said, we've used these
a little bit in the past, we haven't actually
135:49 - talked about them in detail. So this is a
property. Now, they're contained within selectors.
135:53 - And they pretty much define the way that CSS
is used on what goes into the CSS. Now a selector
136:04 - is going to target the element. But the actual
properties are what give it its change. And
136:11 - what make it what it is, without the or without
properties than the selectors would be completely
136:16 - useless. So let's go ahead and talk about
the parts of properties. Now first of all,
136:20 - a colon is always needed, you cannot use a
property without a colon and a semi colon,
136:25 - the colon comes after the property. Now the
property is pretty much defining what is going
136:29 - to change the color, the background, the positioning,
the height, the width, there are so many properties
136:34 - out there. And they are all used in different
ways. And then next is the value. Now, most
136:37 - of the time, you can actually use multiple
types of values. But for something like color,
136:41 - there are very specific rules that you need
to use for them. And we're actually going
136:45 - to be learning those rules and how to use
colors in the next section. But for now, the
136:50 - just think of the value as a key or Well,
not a key, the value is sort of the guideline
136:57 - towards the property, the value is like the
value to the attribute that actually defines
137:02 - what's changing. and the value actually gives
it that change. So just keep that in mind.
137:08 - So that's pretty much it for properties, it's
very simple. And we're going to get lots of
137:12 - exposure to them as we move through the course.
But for now, all you need to keep in mind
137:14 - is that properties have two components, the
actual property itself, which is kind of the
137:18 - guideline on what's changing, followed by
a colon, and then the value itself, which
137:21 - is going to be the change or the type of change
that happens in our our element. So what happens
137:28 - through our selector, and at the end of it
all, you always put a semi colon, if we remove
137:35 - the semi colon, it's not going to work. So
yeah, that's pretty much it for properties.
137:42 - Let's move on. So this is going to be the
final video on or in this section, we're not
137:49 - really going to be doing anything or styling
the website. But for now, I just want to talk
137:56 - a little bit about a very important part of
CSS. Now, this is pretty much going to define
138:01 - the way that you look at CSS. And we've written
a lot of CSS code here. Well, we're not really
138:05 - looking at properties yet. But we've covered
a lot of different selectors and how they
138:09 - work. But now we need to put the two together,
we know what properties are. And we definitely
138:18 - know what selectors are. So we need to know
how these two work together. Now, I've talked
138:25 - a little bit about this in the past, but we
haven't actually gone through it in detail.
138:33 - So that's what I'm going to be doing in this
video. So first of all, if you look at all
138:37 - of the CSS code, we can see a pattern involved
here. First of all, in every single one of
138:44 - these there are these curly braces. And on
top of that in every single one, there is
138:52 - some italicized text, which is due to the
development tool that we're using, but there's
138:57 - some italicized text, and then some other
text here, and there's always a colon and
139:04 - a semi colon. And on top of that before every
first curly brace, there's always going to
139:13 - be some form of text here, which is our selectors.
But how do these actually work together? So
139:21 - this is very important for something called
the CSS a general rule. And it's pretty much
139:26 - going to teach you how all CSS is supposed
to look. So first of all, there's always three
139:31 - parts to your
139:32 - I'm not really going to talk a lot in this
video because there's not really much to talk
139:37 - about, but this video and the next are very
important because right now you're probably
139:40 - just piecing things together about the whole
way that we use CSS. And we've had to use
139:43 - a couple properties here and there, but you
Probably don't actually know what these brackets
139:48 - do, or how selectors work or how any of this
is actually put together. So that's what I'm
139:53 - going to be doing in the next few videos is
explaining how all of this comes together.
139:58 - And once we learn that, we can actually move
on to the fun part, which is using CSS and
140:02 - styling this website. So first thing I want
to explain is properties. Now, we've talked
140:06 - a little bit about properties here and there,
because we've needed them to demonstrate points
140:10 - on how selectors work. Now, obviously, it
might have been better if we use properties
140:12 - first. But in my opinion, it's better that
you learn selectors before you learn properties.
140:15 - Because if you learn selectors First, you'll
be able to understand the premise or the theory
140:19 - behind CSS, and how things work. Whereas if
you just learn properties first, then most
140:22 - of your focus will be on how the properties
work and not the selectors. And I feel that
140:28 - it's much more important that you learn the
selectors before the properties so that you
140:32 - can actually understand CSS and how it works
as a whole. So that aside, let's move on to
140:38 - properties. Now, like I said, we've used these
a little bit in the past, we haven't actually
140:42 - talked about them in detail. So this is a
property. Now, they're contained within selectors.
140:50 - And they pretty much define the way that CSS
is used on what goes into the CSS. Now a selector
140:58 - is going to target the element. But the actual
properties are what give it its change. And
141:03 - what make it what it is, without the or without
properties than the selectors would be completely
141:10 - useless. So let's go ahead and talk about
the parts of properties. Now first of all,
141:15 - a colon is always needed, you cannot use a
property without a colon and a semi colon,
141:21 - the colon comes after the property. Now the
property is pretty much defining what is going
141:27 - to change the color, the background, the positioning,
the height, the width, there are so many properties
141:32 - out there. And they are all used in different
ways. And then next is the value. Now, most
141:38 - of the time, you can actually use multiple
types of values. But for something like color,
141:45 - there are very specific rules that you need
to use for them. And we're actually going
141:50 - to be learning those rules and how to use
colors in the next section. But for now, the
141:54 - just think of the value as a key or Well,
not a key, the value is sort of the guideline
141:59 - towards the property, the value is like the
value to the attribute that actually defines
142:04 - what's changing. and the value actually gives
it that change. So just keep that in mind.
142:08 - So that's pretty much it for properties, it's
very simple. And we're going to get lots of
142:13 - exposure to them as we move through the course.
But for now, all you need to keep in mind
142:17 - is that properties have two components, the
actual property itself, which is kind of the
142:20 - guideline on what's changing, followed by
a colon, and then the value itself, which
142:24 - is going to be the change or the type of change
that happens in our our element. So what happens
142:30 - through our selector, and at the end of it
all, you always put a semi colon, if we remove
142:36 - the semi colon, it's not going to work. So
yeah, that's pretty much it for properties.
142:41 - Let's move on. So this is going to be the
final video on or in this section, we're not
142:47 - really going to be doing anything or styling
the website. But for now, I just want to talk
142:53 - a little bit about a very important part of
CSS. Now, this is pretty much going to define
142:58 - the way that you look at CSS. And we've written
a lot of CSS code here. Well, we're not really
143:05 - looking at properties yet. But we've covered
a lot of different selectors and how they
143:13 - work. But now we need to put the two together,
we know what properties are. And we definitely
143:18 - know what selectors are. So we need to know
how these two work together. Now, I've talked
143:24 - a little bit about this in the past, but we
haven't actually gone through it in detail.
143:30 - So that's what I'm going to be doing in this
video. So first of all, if you look at all
143:35 - of the CSS code, we can see a pattern involved
here. First of all, in every single one of
143:42 - these there are these curly braces. And on
top of that in every single one, there is
143:50 - some italicized text, which is due to the
development tool that we're using, but there's
143:54 - some italicized text, and then some other
text here, and there's always a colon and
143:58 - a semi colon. And on top of that before every
first curly brace, there's always going to
144:07 - be some form of text here, which is our selectors.
But how do these actually work together? So
144:14 - this is very important for something called
the CSS a general rule. And it's pretty much
144:19 - going to teach you how all CSS is supposed
to look. So first of all, there's always three
144:24 - parts to your
144:25 - to your selector here, there is the selector
itself. There's the curly braces, which actually
144:29 - represents something called a CSS block. And
then there's the properties. So first of all,
144:33 - let's talk about the selector. Now, we all
know that selector defines what elements you're
144:36 - trying to collect or target on your HTML page.
A selector can look any different way it can
144:41 - look like this with some weird symbols. It
could have colons and pseudo selectors or
144:45 - it can just It looks something very plain
like this. But we all know that they do something
144:52 - different. And over the last few videos, we've
been covering what selectors actually do.
144:58 - So now what we're going to do is go through,
and I'm going to teach you how this selector
145:03 - plays in with everything else. So we have
our selector over here, this could be anything,
145:07 - an element selectors, pseudo selector attribute
selector like one of these. But for now, we
145:11 - have our selector. So this is going to target
some element on a page. Now, the part we haven't
145:15 - talked about is something called the CSS block.
So pretty much once you select something,
145:20 - you need to define all of your styles. And
as we know, all of your styles have to go
145:26 - in between these two curly braces. So that's
what we call a CSS block. The curly braces
145:33 - define the beginning and end of this block.
And it can be empty, it doesn't need to have
145:38 - anything inside it. But what's going on here
is this block is going to contain all of the
145:43 - styles that are then going to be targeted
towards our selector. And then of course,
145:47 - we have the properties. So all of these have
only had one property where you can actually
145:51 - do more than one property. So a property looks
like this property, a colon, and then a value,
145:55 - and a semicolon. So the property is going
to be the name of the actual style, this can
146:03 - be color background, and we're going to learn
a bunch of these throughout this course. But
146:08 - this could be anything. On the other hand,
the value has to be sort of targeted or matching
146:13 - the style of the property. So for example,
if this was a color, we can use pixels, because
146:18 - pixels are for size. So there are many different
ways that you can use these different values.
146:21 - And they all depend on your property. So what
I didn't show you is you can actually have
146:23 - more than one property. Now these can be in
any style, as long as they have the semi colon
146:28 - and the colon. And they come inside the block.
So this can be property to add value to. And
146:32 - you can put pretty much as many styles as
you want in here. So for example, if you wanted
146:36 - to style a subtitle, and you wanted to change
the font size, the color, and the background
146:41 - all at the same time, you don't need to create
three separate CSS blocks, you can do it all
146:44 - in one. And that's the real power of CSS is
that you don't have you can keep your code
146:48 - concise and clean, without having to create
all of these different blocks. So this is
146:50 - pretty much the general rule, you have to
follow this pretty much for all of the CSS
146:57 - you write using a selector and then different
properties contained inside of a block. So
147:00 - like I said, we're going to get much more
experience with actually using CSS, as we
147:02 - delve more into CSS and learning all of the
different features it has to offer. Alright,
147:03 - let's move on.
147:04 - to your selector here, there is the selector
itself. There's the curly braces, which actually
147:08 - represents something called a CSS block. And
then there's the properties. So first of all,
147:12 - let's talk about the selector. Now, we all
know that selector defines what elements you're
147:16 - trying to collect or target on your HTML page.
A selector can look any different way it can
147:21 - look like this with some weird symbols. It
could have colons and pseudo selectors or
147:25 - it can just It looks something very plain
like this. But we all know that they do something
147:35 - different. And over the last few videos, we've
been covering what selectors actually do.
147:38 - So now what we're going to do is go through,
and I'm going to teach you how this selector
147:43 - plays in with everything else. So we have
our selector over here, this could be anything,
147:47 - an element selectors, pseudo selector attribute
selector like one of these. But for now, we
147:52 - have our selector. So this is going to target
some element on a page. Now, the part we haven't
147:56 - talked about is something called the CSS block.
So pretty much once you select something,
148:03 - you need to define all of your styles. And
as we know, all of your styles have to go
148:10 - in between these two curly braces. So that's
what we call a CSS block. The curly braces
148:17 - define the beginning and end of this block.
And it can be empty, it doesn't need to have
148:24 - anything inside it. But what's going on here
is this block is going to contain all of the
148:28 - styles that are then going to be targeted
towards our selector. And then of course,
148:33 - we have the properties. So all of these have
only had one property where you can actually
148:39 - do more than one property. So a property looks
like this property, a colon, and then a value,
148:45 - and a semicolon. So the property is going
to be the name of the actual style, this can
148:51 - be color background, and we're going to learn
a bunch of these throughout this course. But
148:57 - this could be anything. On the other hand,
the value has to be sort of targeted or matching
149:03 - the style of the property. So for example,
if this was a color, we can use pixels, because
149:08 - pixels are for size. So there are many different
ways that you can use these different values.
149:11 - And they all depend on your property. So what
I didn't show you is you can actually have
149:17 - more than one property. Now these can be in
any style, as long as they have the semi colon
149:23 - and the colon. And they come inside the block.
So this can be property to add value to. And
149:29 - you can put pretty much as many styles as
you want in here. So for example, if you wanted
149:34 - to style a subtitle, and you wanted to change
the font size, the color, and the background
149:42 - all at the same time, you don't need to create
three separate CSS blocks, you can do it all
149:46 - in one. And that's the real power of CSS is
that you don't have you can keep your code
149:52 - concise and clean, without having to create
all of these different blocks. So this is
149:54 - pretty much the general rule, you have to
follow this pretty much for all of the CSS
149:55 - you write using a selector and then different
properties contained inside of a block. So
149:59 - like I said, we're going to get much more
experience with actually using CSS, as we
150:03 - delve more into CSS and learning all of the
different features it has to offer. Alright,
150:06 - let's move on.
150:07 - So this is the start of a new section. And
now that we've learned all we need to know
150:13 - about selectors, we're going to actually start
styling up our website and making it look
150:18 - good. So first of all, let's just talk about
coloring. In general, I mean, what is coloring?
150:23 - And what are we supposed to do with it. So
as we know, we already have a bunch of colors
150:29 - here. And they all look fine. But what we're
actually trying to do here is color our website
150:34 - in a way that makes it look modern, and appealing
to users. So we're going to be learning a
150:48 - bunch of different techniques that you can
use to color your website. Now we've already
150:54 - used one in the past, and it's a very common
one. And that is, of course, the color property.
150:59 - Now we're going to be talking more about this
in the next video and using it in depth. But
151:04 - first thing I want to talk about is the different
types of colors, because there's actually
151:08 - more than one. So first of all, we've all
used and while you've at least seen me use
151:12 - the colors have given by name so for example,
red, green, blue, and purple. But there's
151:19 - actually more than that there's so much more
to colors than just those names, because as
151:24 - you know, they're actually quite limiting,
you can't really change the color and choose
151:29 - as you want. So what I'm here to teach you
about is the three different types of colors
151:36 - and how they work. So the first one is obviously
the CSS color codes or names. And what they
151:42 - do is is pretty much given a name, and they
each have a designated color. So this is a
151:48 - really easy way for testing colors. For example,
if you want to test if a property works, as
151:55 - we saw at the beginning of this course. And
you can also use them for you know, maybe
152:00 - quick fixes or trying to just try out different
colors. But once you get into the really specific
152:06 - detailed web design, and once you start producing
your website properly, you're going to want
152:11 - more than just the color CSS gives you. So
I've actually attached to the lecture resources,
152:18 - this website here, you have a bunch of different
CSS color codes. And you can see that there's
152:25 - actually a huge range of them, we only use
the basic ones that are quite vibrant and
152:31 - they really hit the eyes very hard. But you
can see there's actually a lot more than what
152:37 - we just use. The only problem is nobody wants
to memorize all of these different names.
152:42 - So what we're actually going to be doing is
learning how to use these two, which are the
152:47 - ones I'm going to be talking about in this
video. So first of all, let's talk a little
152:50 - bit about hex code. Okay. So first of all,
I have a color picker over here just to demonstrate
152:55 - how this whole thing works. We actually don't
need this for now. So I'm going to discipline
153:01 - full screen. So this is a color picker that
I found on Google, you can go ahead and search
153:06 - it anywhere. But I like using Google's provided
one, because it provides you with both the
153:10 - hex code and the RGB code. Don't worry, we'll
talk about those in just a second. So first
153:13 - of all, you can slide up and down this thing
and choose whichever color you want. And you
153:19 - can see that these two codes change. So what
do they actually mean? Well, first, let's
153:24 - talk about the hex code. So we all know that
when you're normally using numbers, you range
153:30 - from zero to nine. So any given number in
this new in that numeral system can be made
153:36 - up of 012, and all the way up to nine. So
in that case, there's 10 possible combinations.
153:37 - But in hex code, there's actually 16 different
possible combinations, you can go from zero
153:40 - to nine, and then A to F. So for example,
let's just take this right here, this could
153:45 - actually be converted into a number if we
wanted to, suppose B, actually stands for
153:49 - 12, because it goes zero to nine, and then
a B, so 12. And you can actually convert this
153:56 - into a number, which is very interesting.
So I'm not really going to be talking about
154:02 - the applications of hex code in this in this
video, because that goes all the way down
154:10 - into computer science. And we're not really
looking at that now. But one thing we can
154:16 - do is actually create colors based on this.
So first of all, you'll notice that our code
154:20 - here starts off with a hashtag. And then you
have six digits. So each one can have 16 possible
154:23 - combinations. But as we know, color any color
is made up of either red, green, or blue,
154:28 - at least on the computer for the standard
color palette. So it's made up of red, green,
154:33 - and blue. Now basically, this hex code is
split up into three two digit pairs. So the
154:36 - first pair of numbers is meant to represent
the amount of red in the color, the second,
154:40 - the amount of green, and the third, the amount
of blue, RGB. And these parents can range
154:43 - from 00, which means none of that color to
F F, which is the highest value. Remember,
154:46 - hexadecimal goes from zero to f. So I'm just
going to choose something very basic here,
154:51 - like a standard blue. You can see here that
this is the purest blue that you can get.
154:56 - Pretty much what this is saying is the first
two is 00, which means there's no red, the
155:00 - second pair, or Yeah, the second pair is also
00, which means no green. But then the third
155:07 - is F F, which means all blue. So this is pretty
easy. So if we go to something like white,
155:14 - for example, this would have f, f, f, f, f
f, which is all red, or green, or blue, which
155:20 - actually creates white. And if we chose black,
you can see that that's zero. So this is a
155:26 - pretty hard thing to understand. Once you
get into some of these more complicated colors.
155:32 - Again, we don't really use hexadecimal in
normal in normal use, when we're creating
155:35 - colors or writing code, we don't really use
these numbers. So it's actually much easier
155:39 - to work with RGB codes. So RGB is a little
bit different in the style that it's written.
155:45 - But it all represents the same concept. Pretty
much there are three numbers here. And these
155:50 - aren't hexadecimal numbers, these are just
normal numbers, you have three numbers, the
155:53 - first for red, the second for green, and the
third for blue, just like this one, except
155:57 - in this case, the numbers can go from zero
to 255, zero being the minimum and 255 being
156:02 - the maximum. So this is actually much easier
to read. Let's go back to our blue here. And
156:08 - I'm actually just going to write the code
here. So you can see that there's zero red,
156:15 - zero blue, and 255. Sorry, is your red zero
green, and 255 blue, which is the maximum.
156:28 - And obviously, you can see that once we go
back to those complicated colors. When you
156:32 - look here, it's quite complicated to understand.
But when we look at the RGB code, we can see
156:35 - that there's a moderate amount of red, a large
amount of green and large amounts of blue,
156:41 - and therefore it should theoretically be a
cold color. Now again, you don't really need
156:45 - to know how to construct these QR codes from
your head, they're quite hard to understand.
156:50 - So what I would recommend is when you're designing
these colors, or designing these, these websites,
156:55 - I would recommend you just go and use a color
picker, too much easy too much, much easier
157:00 - to decide. And you can also get a lot more
experience hands on experience with these
157:04 - colors rather than memorizing all the theory
behind them. So both of these will work fine
157:07 - and in the next video I'm going to show you
how to actually use these codes in our in
157:11 - our website and actually use them to style
and color text. Alright, let's move on.
157:20 - So this is the start of a new section. And
now that we've learned all we need to know
157:27 - about selectors, we're going to actually start
styling up our website and making it look
157:29 - good. So first of all, let's just talk about
coloring. In general, I mean, what is coloring?
157:34 - And what are we supposed to do with it. So
as we know, we already have a bunch of colors
157:42 - here. And they all look fine. But what we're
actually trying to do here is color our website
157:47 - in a way that makes it look modern, and appealing
to users. So we're going to be learning a
157:51 - bunch of different techniques that you can
use to color your website. Now we've already
157:52 - used one in the past, and it's a very common
one. And that is, of course, the color property.
157:55 - Now we're going to be talking more about this
in the next video and using it in depth. But
158:03 - first thing I want to talk about is the different
types of colors, because there's actually
158:07 - more than one. So first of all, we've all
used and while you've at least seen me use
158:11 - the colors have given by name so for example,
red, green, blue, and purple. But there's
158:15 - actually more than that there's so much more
to colors than just those names, because as
158:20 - you know, they're actually quite limiting,
you can't really change the color and choose
158:25 - as you want. So what I'm here to teach you
about is the three different types of colors
158:34 - and how they work. So the first one is obviously
the CSS color codes or names. And what they
158:41 - do is is pretty much given a name, and they
each have a designated color. So this is a
158:45 - really easy way for testing colors. For example,
if you want to test if a property works, as
158:49 - we saw at the beginning of this course. And
you can also use them for you know, maybe
158:54 - quick fixes or trying to just try out different
colors. But once you get into the really specific
159:00 - detailed web design, and once you start producing
your website properly, you're going to want
159:05 - more than just the color CSS gives you. So
I've actually attached to the lecture resources,
159:09 - this website here, you have a bunch of different
CSS color codes. And you can see that there's
159:17 - actually a huge range of them, we only use
the basic ones that are quite vibrant and
159:24 - they really hit the eyes very hard. But you
can see there's actually a lot more than what
159:31 - we just use. The only problem is nobody wants
to memorize all of these different names.
159:35 - So what we're actually going to be doing is
learning how to use these two, which are the
159:42 - ones I'm going to be talking about in this
video. So first of all, let's talk a little
159:47 - bit about hex code. Okay. So first of all,
I have a color picker over here just to demonstrate
159:51 - how this whole thing works. We actually don't
need this for now. So I'm going to discipline
159:55 - full screen. So this is a color picker that
I found on Google, you can go ahead and search
160:01 - it anywhere. But I like using Google's provided
one, because it provides you with both the
160:06 - hex code and the RGB code. Don't worry, we'll
talk about those in just a second. So first
160:11 - of all, you can slide up and down this thing
and choose whichever color you want. And you
160:15 - can see that these two codes change. So what
do they actually mean? Well, first, let's
160:17 - talk about the hex code. So we all know that
when you're normally using numbers, you range
160:23 - from zero to nine. So any given number in
this new in that numeral system can be made
160:28 - up of 012, and all the way up to nine. So
in that case, there's 10 possible combinations.
160:36 - But in hex code, there's actually 16 different
possible combinations, you can go from zero
160:42 - to nine, and then A to F. So for example,
let's just take this right here, this could
160:50 - actually be converted into a number if we
wanted to, suppose B, actually stands for
160:53 - 12, because it goes zero to nine, and then
a B, so 12. And you can actually convert this
161:00 - into a number, which is very interesting.
So I'm not really going to be talking about
161:05 - the applications of hex code in this in this
video, because that goes all the way down
161:11 - into computer science. And we're not really
looking at that now. But one thing we can
161:16 - do is actually create colors based on this.
So first of all, you'll notice that our code
161:25 - here starts off with a hashtag. And then you
have six digits. So each one can have 16 possible
161:32 - combinations. But as we know, color any color
is made up of either red, green, or blue,
161:37 - at least on the computer for the standard
color palette. So it's made up of red, green,
161:42 - and blue. Now basically, this hex code is
split up into three two digit pairs. So the
161:47 - first pair of numbers is meant to represent
the amount of red in the color, the second,
161:51 - the amount of green, and the third, the amount
of blue, RGB. And these parents can range
161:55 - from 00, which means none of that color to
F F, which is the highest value. Remember,
161:59 - hexadecimal goes from zero to f. So I'm just
going to choose something very basic here,
162:03 - like a standard blue. You can see here that
this is the purest blue that you can get.
162:13 - Pretty much what this is saying is the first
two is 00, which means there's no red, the
162:19 - second pair, or Yeah, the second pair is also
00, which means no green. But then the third
162:24 - is F F, which means all blue. So this is pretty
easy. So if we go to something like white,
162:29 - for example, this would have f, f, f, f, f
f, which is all red, or green, or blue, which
162:33 - actually creates white. And if we chose black,
you can see that that's zero. So this is a
162:38 - pretty hard thing to understand. Once you
get into some of these more complicated colors.
162:41 - Again, we don't really use hexadecimal in
normal in normal use, when we're creating
162:43 - colors or writing code, we don't really use
these numbers. So it's actually much easier
162:46 - to work with RGB codes. So RGB is a little
bit different in the style that it's written.
162:48 - But it all represents the same concept. Pretty
much there are three numbers here. And these
162:53 - aren't hexadecimal numbers, these are just
normal numbers, you have three numbers, the
162:58 - first for red, the second for green, and the
third for blue, just like this one, except
163:03 - in this case, the numbers can go from zero
to 255, zero being the minimum and 255 being
163:08 - the maximum. So this is actually much easier
to read. Let's go back to our blue here. And
163:15 - I'm actually just going to write the code
here. So you can see that there's zero red,
163:21 - zero blue, and 255. Sorry, is your red zero
green, and 255 blue, which is the maximum.
163:28 - And obviously, you can see that once we go
back to those complicated colors. When you
163:33 - look here, it's quite complicated to understand.
But when we look at the RGB code, we can see
163:37 - that there's a moderate amount of red, a large
amount of green and large amounts of blue,
163:42 - and therefore it should theoretically be a
cold color. Now again, you don't really need
163:49 - to know how to construct these QR codes from
your head, they're quite hard to understand.
163:54 - So what I would recommend is when you're designing
these colors, or designing these, these websites,
163:59 - I would recommend you just go and use a color
picker, too much easy too much, much easier
164:05 - to decide. And you can also get a lot more
experience hands on experience with these
164:13 - colors rather than memorizing all the theory
behind them. So both of these will work fine
164:17 - and in the next video I'm going to show you
how to actually use these codes in our in
164:23 - our website and actually use them to style
and color text. Alright, let's move on.
164:29 - So in this video, I am going to be starting
to color and style our website. So we're going
164:32 - to go through and use the selector skills
that we've learned in the previous section
164:38 - to actually go through and start adding some
color. On top of that, we're going to be using
164:44 - the skills we learned about hex code and RGB
color codes to vary up our style or method
164:50 - of coloring things. Because in the past, like
I've said, we've just used some basic techniques
164:55 - with CSS color codes. And now we're going
to be working with our own custom colors.
165:00 - So first of all, let's go ahead and start
adding some classes to this website to get
165:05 - it set up for our styling. So first thing
I did is actually started from a clean slate
165:09 - because it was getting quite messy before
and I thought that it would be better if we
165:14 - started from scratch. So the first thing I'm
going to do is go ahead and add a class or
165:21 - an ID actually, I think would be better to
our title, since there's only one of them.
165:27 - So we're gonna go ahead and add an ID of title.
And hopefully, you know how to do this from
165:31 - the skills you learned in the last section.
Let's also go ahead and add some classes for
165:36 - our paragraph text. And because of course,
we have more than one paragraph, we're actually
165:40 - going to go ahead and use a class. So I'm
going to use this. And I'm going to say, paragraph.
165:48 - Or I'm just going to say para shortening text.
So I'm going to go ahead and copy this class
165:58 - on to our other paragraphs, instead of writing
it down. There we go. So the next thing I
166:05 - want to do is go ahead and add some classes
to this list here just for convenience. So
166:10 - I'm going to go ahead and add a class for
a list item. Now, obviously, we're not going
166:14 - to use all of these in one go. But I was just
considering to add them so that when we get
166:20 - into it, we can actually go ahead and use
them without having to go ahead and add these
166:26 - classes every single time. So there we go,
we did that. Let's also go ahead and add a
166:33 - class to our link, link. And now we have our
table items. We're going to leave this for
166:39 - now because it might take a long time. Oh,
we'll we'll style this when we get later into
166:49 - our section. So there we go, we did that.
Now the last thing I want to do is just go
166:55 - ahead and add a couple classes to our inputs
here. So I'm going to go ahead and add some
167:03 - classes. So class is form input. And this
is actually quite commonplace to add, or write
167:10 - class names and Id names with these. So with
dashes, instead of you know snake case, which
167:16 - is using capital letters in like that. It's
just a convention in CSS. So let's go ahead
167:21 - and add the same class here. Just like that.
There we go. And we'll also we're also going
167:27 - to go ahead and add a subtitle class to our
subtitles, I'm gonna go ahead and do that.
167:33 - There we go. Just copy that. And over to our
other subtitles. And once we're done with
167:38 - that, we'll move on and start coloring our
text. Right, there we go. So everything's
167:42 - looking good. That means nothing has gone
wrong. Let's go ahead and start styling our
167:45 - text. So first thing I want to do is style
our header here. So obviously, you don't really
167:47 - want to go crazy with text colors. It's more
for backgrounds. But I think we'll just experiment
167:48 - a little bit for this video with some of our
colors. So first of all, I'm going to need
167:54 - to select it. This is the first part of our
general rule. So because it's an ID, I'm going
168:01 - to go hash, and then title, open up our block
with our curly braces. And now we're going
168:03 - to start writing our property. So if you don't
know this already, the property is going to
168:08 - be color. This is the text of the the color
of the text. And I know it doesn't look like
168:14 - it since it doesn't say tech stash color,
similar to a bunch of other properties. But
168:20 - this is the way to color your text. So here,
we can go ahead and type a property or sorry,
168:27 - our value. Now before we've used colors, like
steel blue, which is a CSS color code. But
168:31 - now let's go ahead and challenge ourselves
and start actually messing with these colors
168:35 - using our own color picker. So first of all,
I want to choose a color that I really like.
168:42 - And I'm going to go for a sort of deep orange.
So we don't want to go for something too dark.
168:46 - But we also don't want to go for something
too light so that it's hard on the eyes. Now
168:50 - I think a color like this is good. Now how
would we actually implement this? Well, we
168:55 - just copy and paste it. And if you're thinking
that that's the right way, well, then you're
169:00 - right, it's actually very easy. All you have
to do is copy your hex or RGB code and paste
169:05 - it into
169:06 - So in this video, I am going to be starting
to color and style our website. So we're going
169:10 - to go through and use the selector skills
that we've learned in the previous section
169:13 - to actually go through and start adding some
color. On top of that, we're going to be using
169:20 - the skills we learned about hex code and RGB
color codes to vary up our style or method
169:25 - of coloring things. Because in the past, like
I've said, we've just used some basic techniques
169:29 - with CSS color codes. And now we're going
to be working with our own custom colors.
169:35 - So first of all, let's go ahead and start
adding some classes to this website to get
169:40 - it set up for our styling. So first thing
I did is actually started from a clean slate
169:45 - because it was getting quite messy before
and I thought that it would be better if we
169:51 - started from scratch. So the first thing I'm
going to do is go ahead and add a class or
169:58 - an ID actually, I think would be better to
our title, since there's only one of them.
170:05 - So we're gonna go ahead and add an ID of title.
And hopefully, you know how to do this from
170:10 - the skills you learned in the last section.
Let's also go ahead and add some classes for
170:16 - our paragraph text. And because of course,
we have more than one paragraph, we're actually
170:20 - going to go ahead and use a class. So I'm
going to use this. And I'm going to say, paragraph.
170:25 - Or I'm just going to say para shortening text.
So I'm going to go ahead and copy this class
170:31 - on to our other paragraphs, instead of writing
it down. There we go. So the next thing I
170:35 - want to do is go ahead and add some classes
to this list here just for convenience. So
170:38 - I'm going to go ahead and add a class for
a list item. Now, obviously, we're not going
170:42 - to use all of these in one go. But I was just
considering to add them so that when we get
170:48 - into it, we can actually go ahead and use
them without having to go ahead and add these
170:53 - classes every single time. So there we go,
we did that. Let's also go ahead and add a
170:58 - class to our link, link. And now we have our
table items. We're going to leave this for
171:02 - now because it might take a long time. Oh,
we'll we'll style this when we get later into
171:04 - our section. So there we go, we did that.
Now the last thing I want to do is just go
171:09 - ahead and add a couple classes to our inputs
here. So I'm going to go ahead and add some
171:13 - classes. So class is form input. And this
is actually quite commonplace to add, or write
171:18 - class names and Id names with these. So with
dashes, instead of you know snake case, which
171:22 - is using capital letters in like that. It's
just a convention in CSS. So let's go ahead
171:26 - and add the same class here. Just like that.
There we go. And we'll also we're also going
171:32 - to go ahead and add a subtitle class to our
subtitles, I'm gonna go ahead and do that.
171:39 - There we go. Just copy that. And over to our
other subtitles. And once we're done with
171:44 - that, we'll move on and start coloring our
text. Right, there we go. So everything's
171:49 - looking good. That means nothing has gone
wrong. Let's go ahead and start styling our
171:54 - text. So first thing I want to do is style
our header here. So obviously, you don't really
172:00 - want to go crazy with text colors. It's more
for backgrounds. But I think we'll just experiment
172:05 - a little bit for this video with some of our
colors. So first of all, I'm going to need
172:08 - to select it. This is the first part of our
general rule. So because it's an ID, I'm going
172:13 - to go hash, and then title, open up our block
with our curly braces. And now we're going
172:19 - to start writing our property. So if you don't
know this already, the property is going to
172:24 - be color. This is the text of the the color
of the text. And I know it doesn't look like
172:30 - it since it doesn't say tech stash color,
similar to a bunch of other properties. But
172:35 - this is the way to color your text. So here,
we can go ahead and type a property or sorry,
172:41 - our value. Now before we've used colors, like
steel blue, which is a CSS color code. But
172:47 - now let's go ahead and challenge ourselves
and start actually messing with these colors
172:50 - using our own color picker. So first of all,
I want to choose a color that I really like.
172:57 - And I'm going to go for a sort of deep orange.
So we don't want to go for something too dark.
173:02 - But we also don't want to go for something
too light so that it's hard on the eyes. Now
173:07 - I think a color like this is good. Now how
would we actually implement this? Well, we
173:10 - just copy and paste it. And if you're thinking
that that's the right way, well, then you're
173:14 - right, it's actually very easy. All you have
to do is copy your hex or RGB code and paste
173:19 - it into
173:20 - into here just like that. Now if I go ahead
and refresh the page, you can see that that
173:23 - color is being reflected on our title. Now
I would recommend instead of using your hex
173:33 - code, go ahead and add an RGB code. And I'll
tell you why later in this section, but for
173:39 - now, just think that this is better because
it's a little bit more flexible, and you can
173:46 - change it easily. So on top of that, use an
RGB color code really allows you to mess around
173:49 - with the colors in a way that if you didn't
know hex code you wouldn't be able to. So
173:52 - for example, let's say I wanted to increase
the amount of blue in this, all they would
173:58 - have to do is go ahead and just change it.
Let's say I wanted to go with 150. Blue, you
174:02 - can see that that color has completely changed
by adding more blue. By doing it, we've kind
174:07 - of mixed around the colors and created this
pinkish color. Imagine you're working with
174:12 - a color palette, instead of a digital kind
of weird color mixer. Think of you have a
174:17 - giant pile of red, green and blue. And what
you're doing here is changing all of the proportions
174:20 - to get just the color you want. So let's go
ahead and change this color back to nine.
174:26 - There we go. Now we have our orange color
there. So let's go ahead and also style up
174:32 - our, our subtitles here. And one common thing
that you do with hierarchies of text. So for
174:38 - example, titles and then sub titles and paragraph
is usually your titles or your high up on
174:44 - the hierarchy are going to have very dark
colors. And then your sub titles are things
174:49 - that are lower on the hierarchy are going
to have around the same color scheme, but
174:54 - they're going to be a little lighter. So what
I'm going to do is just go ahead to my color
175:00 - picker and drag this up a little bit. Of course,
you could do this by just increasing all of
175:04 - the values. But I actually prefer to use the
color picker because I could really see what's
175:09 - going on. So I'm going to choose something
a little bit lighter, maybe something around
175:13 - here. Again, we don't want it to be too light,
because then it's going to be too hard on
175:18 - the eyes. So I think I'm going to go something
around here. So we're going to go ahead and
175:25 - copy the code. Now let's go ahead and add
our selector. So I'm going to go dot subtitle,
175:30 - because remember, it's a class, then I'm going
to use my property color and paste in our
175:36 - RGB color code. Let's go ahead and refresh
the page. And you can see that our subtitles
175:45 - have been colored down. So there we know everything
is working really well for now. And we're
175:49 - starting to get the hang of this. Now I recommend
you go ahead and try this on your own. Again,
175:55 - the whole point is to be styling a website
as you go along. So I recommend you go ahead
176:00 - and mess around with your own colors. Again,
you can just find this color picker by going
176:05 - to Google, if you don't really like it, you
could always go to another color picker on
176:10 - search for one. But you can go ahead choose
your own colors. If you don't like orange,
176:13 - you can go with blue, maybe something a little
colder. It's totally up to you just get some
176:20 - practice with using colors on different types
of texts, and get some more practice using
176:25 - CSS on your own. Alright, let's move on.
176:28 - into here just like that. Now if I go ahead
and refresh the page, you can see that that
176:33 - color is being reflected on our title. Now
I would recommend instead of using your hex
176:38 - code, go ahead and add an RGB code. And I'll
tell you why later in this section, but for
176:42 - now, just think that this is better because
it's a little bit more flexible, and you can
176:43 - change it easily. So on top of that, use an
RGB color code really allows you to mess around
176:46 - with the colors in a way that if you didn't
know hex code you wouldn't be able to. So
176:49 - for example, let's say I wanted to increase
the amount of blue in this, all they would
176:52 - have to do is go ahead and just change it.
Let's say I wanted to go with 150. Blue, you
176:59 - can see that that color has completely changed
by adding more blue. By doing it, we've kind
177:03 - of mixed around the colors and created this
pinkish color. Imagine you're working with
177:04 - a color palette, instead of a digital kind
of weird color mixer. Think of you have a
177:10 - giant pile of red, green and blue. And what
you're doing here is changing all of the proportions
177:14 - to get just the color you want. So let's go
ahead and change this color back to nine.
177:18 - There we go. Now we have our orange color
there. So let's go ahead and also style up
177:22 - our, our subtitles here. And one common thing
that you do with hierarchies of text. So for
177:27 - example, titles and then sub titles and paragraph
is usually your titles or your high up on
177:32 - the hierarchy are going to have very dark
colors. And then your sub titles are things
177:37 - that are lower on the hierarchy are going
to have around the same color scheme, but
177:41 - they're going to be a little lighter. So what
I'm going to do is just go ahead to my color
177:46 - picker and drag this up a little bit. Of course,
you could do this by just increasing all of
177:52 - the values. But I actually prefer to use the
color picker because I could really see what's
177:58 - going on. So I'm going to choose something
a little bit lighter, maybe something around
178:04 - here. Again, we don't want it to be too light,
because then it's going to be too hard on
178:08 - the eyes. So I think I'm going to go something
around here. So we're going to go ahead and
178:13 - copy the code. Now let's go ahead and add
our selector. So I'm going to go dot subtitle,
178:17 - because remember, it's a class, then I'm going
to use my property color and paste in our
178:21 - RGB color code. Let's go ahead and refresh
the page. And you can see that our subtitles
178:26 - have been colored down. So there we know everything
is working really well for now. And we're
178:31 - starting to get the hang of this. Now I recommend
you go ahead and try this on your own. Again,
178:41 - the whole point is to be styling a website
as you go along. So I recommend you go ahead
178:49 - and mess around with your own colors. Again,
you can just find this color picker by going
178:53 - to Google, if you don't really like it, you
could always go to another color picker on
178:58 - search for one. But you can go ahead choose
your own colors. If you don't like orange,
179:03 - you can go with blue, maybe something a little
colder. It's totally up to you just get some
179:07 - practice with using colors on different types
of texts, and get some more practice using
179:12 - CSS on your own. Alright, let's move on.
179:20 - So in this video, we are going to be covering
background colors. Now, I know it's a little
179:29 - bit intimidating considering we've never actually
done backgrounds before. But it's very similar
179:35 - to colors in the values that he uses. The
only difference is is what it's actually styling.
179:42 - So I'm going to be teaching you how to create
backgrounds on your website. Now, obviously,
179:50 - we're not going to go all crazy and start
creating backgrounds for everything. Because
179:53 - we haven't gotten into we haven't gotten into
layout yet. And without layout backgrounds
179:57 - aren't really usable. Because sometimes, especially
with colors, it just doesn't really look that
180:02 - good. So what we're actually going to do is
go through and just practice with our background
180:03 - for now. So the first thing I need to do is
actually look for something to create a background
180:09 - on. And we all know what a background on text
looked like. Now, we don't actually know why
180:14 - the background goes all the way to the edge
yet. We haven't gotten we haven't gotten into
180:19 - layout yet. Once we do, you'll know how to
change that. For now though, I think it's
180:24 - really fitting to go through and style this
whole page. So firstly, what selector Do we
180:30 - need to use? Considering that we're trying
to select everything? How are we supposed
180:35 - to create a background on every single item?
Do we go through and select everything and
180:40 - add that background? Well, we actually look
at a look at our HTML page, you can see that
180:48 - all of our text here is contained inside of
our body tag. So the easiest way to select
180:54 - this, because again, there's only one of our
body, we can just use an element selector.
180:59 - So I'm going to go ahead and select it with
body. So usually, you would actually put tags,
181:04 - elements selectors at the top. So I'm going
to go ahead and do that now. Open up our block
181:11 - using those curly braces. And now we can add
our background. So first of all, the property
181:14 - used to Select and Color background is called
background color. But we're not actually going
181:18 - to use that because background is much easier
considering that you can actually go and also
181:23 - select images and URLs instead of colors.
It's much more flexible, and I prefer using
181:27 - it over background color. So I'm going to
go ahead and select that as my property. So
181:32 - from now, you can just go ahead and add your
value. Similarly to color. You can use an
181:39 - RGB code, hex code or a CSS color even if
you want so I'm going to go ahead and set
181:44 - it as red And just worn your eyes because
it's quite puffing. So you can see that now
181:50 - our entire site has been styled red. Now,
obviously, I don't want this, this doesn't
181:53 - really look very good. So I'm going to go
ahead and erase this property for now. And
181:57 - we're going to go through and choose a color.
So I would recommend choosing something a
182:01 - little bit light. So I'm going to go for about
a light turquoise or light blue, something
182:04 - like this. So now I'm going to go ahead and
copy my RGB code. And here, I'm going to go
182:08 - ahead and add my background property and paste
in my RGB code. Now if we go ahead and refresh
182:10 - the page, you can see we have this really
nice light blue, which kind of fits in with
182:16 - our oranges. Now, because it's a little bit,
it doesn't really look that good on this light
182:21 - orange, I'm going to go ahead and dampen it
a little bit. So the easy way to do this with
182:32 - RGB is to just go ahead and drop all of the
values this way, you stay in the same proportions,
182:38 - but you're just darkening everything. So I'm
going to go ahead and darken our subtitles.
182:43 - So I'm going to reduce everything by 20 or
so. So this becomes let's just say 200. And
182:49 - this becomes 148. And obviously, these don't
have to be exact, and this can become 30.
182:54 - So these don't have to be exact, like I said,
we're just darkening the titles, you can see,
183:02 - you can see that they got a little bit darker,
and it looks better on this color. Alright,
183:07 - there we go. So that's pretty much how to
style backgrounds. Now, you can go ahead and
183:12 - apply this to pretty much anything you want.
So if I actually go ahead and style our subtitles
183:17 - with our blue background, obviously, it won't
look that good, but it works perfectly fine.
183:22 - So there we go. That's pretty much how to
add color to backgrounds. And in the next
183:26 - video, I'm going to be teaching you how to
actually change the type of background that
183:28 - you're using. Because obviously, sometimes
you want to actually change the background
183:32 - and use maybe a custom image, or you want
to link to an image online. So I'm going to
183:39 - be teaching you how to do that in the next
video. So let's just go and refresh the page.
183:46 - Keep that normal. Alright, let's move on.
183:49 - So in this video, we are going to be covering
background colors. Now, I know it's a little
183:54 - bit intimidating considering we've never actually
done backgrounds before. But it's very similar
184:00 - to colors in the values that he uses. The
only difference is is what it's actually styling.
184:05 - So I'm going to be teaching you how to create
backgrounds on your website. Now, obviously,
184:11 - we're not going to go all crazy and start
creating backgrounds for everything. Because
184:16 - we haven't gotten into we haven't gotten into
layout yet. And without layout backgrounds
184:20 - aren't really usable. Because sometimes, especially
with colors, it just doesn't really look that
184:24 - good. So what we're actually going to do is
go through and just practice with our background
184:27 - for now. So the first thing I need to do is
actually look for something to create a background
184:32 - on. And we all know what a background on text
looked like. Now, we don't actually know why
184:37 - the background goes all the way to the edge
yet. We haven't gotten we haven't gotten into
184:43 - layout yet. Once we do, you'll know how to
change that. For now though, I think it's
184:50 - really fitting to go through and style this
whole page. So firstly, what selector Do we
184:55 - need to use? Considering that we're trying
to select everything? How are we supposed
184:58 - to create a background on every single item?
Do we go through and select everything and
185:03 - add that background? Well, we actually look
at a look at our HTML page, you can see that
185:09 - all of our text here is contained inside of
our body tag. So the easiest way to select
185:15 - this, because again, there's only one of our
body, we can just use an element selector.
185:20 - So I'm going to go ahead and select it with
body. So usually, you would actually put tags,
185:27 - elements selectors at the top. So I'm going
to go ahead and do that now. Open up our block
185:34 - using those curly braces. And now we can add
our background. So first of all, the property
185:39 - used to Select and Color background is called
background color. But we're not actually going
185:43 - to use that because background is much easier
considering that you can actually go and also
185:48 - select images and URLs instead of colors.
It's much more flexible, and I prefer using
185:52 - it over background color. So I'm going to
go ahead and select that as my property. So
185:59 - from now, you can just go ahead and add your
value. Similarly to color. You can use an
186:08 - RGB code, hex code or a CSS color even if
you want so I'm going to go ahead and set
186:13 - it as red And just worn your eyes because
it's quite puffing. So you can see that now
186:17 - our entire site has been styled red. Now,
obviously, I don't want this, this doesn't
186:22 - really look very good. So I'm going to go
ahead and erase this property for now. And
186:27 - we're going to go through and choose a color.
So I would recommend choosing something a
186:35 - little bit light. So I'm going to go for about
a light turquoise or light blue, something
186:38 - like this. So now I'm going to go ahead and
copy my RGB code. And here, I'm going to go
186:42 - ahead and add my background property and paste
in my RGB code. Now if we go ahead and refresh
186:48 - the page, you can see we have this really
nice light blue, which kind of fits in with
186:54 - our oranges. Now, because it's a little bit,
it doesn't really look that good on this light
187:01 - orange, I'm going to go ahead and dampen it
a little bit. So the easy way to do this with
187:12 - RGB is to just go ahead and drop all of the
values this way, you stay in the same proportions,
187:20 - but you're just darkening everything. So I'm
going to go ahead and darken our subtitles.
187:24 - So I'm going to reduce everything by 20 or
so. So this becomes let's just say 200. And
187:28 - this becomes 148. And obviously, these don't
have to be exact, and this can become 30.
187:32 - So these don't have to be exact, like I said,
we're just darkening the titles, you can see,
187:38 - you can see that they got a little bit darker,
and it looks better on this color. Alright,
187:43 - there we go. So that's pretty much how to
style backgrounds. Now, you can go ahead and
187:49 - apply this to pretty much anything you want.
So if I actually go ahead and style our subtitles
187:56 - with our blue background, obviously, it won't
look that good, but it works perfectly fine.
188:00 - So there we go. That's pretty much how to
add color to backgrounds. And in the next
188:05 - video, I'm going to be teaching you how to
actually change the type of background that
188:08 - you're using. Because obviously, sometimes
you want to actually change the background
188:11 - and use maybe a custom image, or you want
to link to an image online. So I'm going to
188:19 - be teaching you how to do that in the next
video. So let's just go and refresh the page.
188:26 - Keep that normal. Alright, let's move on.
188:28 - So in this video, we're going to be looking
at a different type of background in CSS.
188:33 - So now that we've covered basic color types,
and we've also covered a little bit of background,
188:39 - and using background tracks, we're going to
move on to an alternate way of creating backgrounds.
188:43 - And that's through background images. So right
now we know the basics of coloring, so we
188:47 - were able to call it a text. Now with our
own custom colors using a color picker, we
188:53 - can also go ahead and use our own, you know,
backgrounds and things like that with our
188:57 - own colors. But now what I want to cover is
looking at different types of backgrounds
189:03 - themselves. So in this case, we're going to
be looking at images. So first of all, when
189:10 - we want to set the background to an image,
we can just go ahead and add an RGB color
189:17 - code, we're going to need to go and actually
link to an image. So I'm going to show you
189:25 - a really easy way of doing this, the first
thing we're going to need is an image. And
189:30 - for this method, you can actually use images
with from the internet without having to download
189:34 - them using URLs. So show you how to do that
now. So if I go ahead and search for a landscape
189:42 - image, just like this. And now we want to
look for a sort of low resolution one, we
189:47 - don't want to do too big, I think this will
be pretty good, it's going to look a little
189:53 - bit weird, but just for this purpose, we're
going to use it. So now what we need to do
189:57 - is get the URL link to this image. So you
can do this by right clicking on it. And then
190:02 - you're going to go ahead and click on copy
image address. Okay, so what this is going
190:04 - to do is get the actual link to the image
itself. Right now this link is going to Google
190:09 - Images. But what we actually need is the link
to the image itself. So there we go, we have
190:14 - that set up. Now we need to go ahead and add
the image to the page. So under here, I'm
190:20 - going to just erase this color code for now.
And I'm going to show you how to add our image.
190:26 - So there's this thing in CSS, they're called
functions. Now, we're not really going to
190:29 - go very in depth about them. But pretty much
what they do is they take a few inputs, they
190:33 - process them, and they give an output. So
the first example of a function that we've
190:37 - already used is this right here, it takes
three inputs A red, a green, and a blue, does
190:42 - some magic behind the scenes, and then gives
us a color back. So what we're going to do
190:46 - here is use another function called URL. So
what this is going to do is take in the link
190:49 - or to the URL, and then it's going to find
that image and set it. So in quotations, it
190:57 - doesn't have to be in quotations, just remember
that you're going to paste in your image.
191:02 - So remember, I just copied this from the image
address. And now we have it here. So we have
191:04 - the image. Let's go ahead and check it out
on our website. So there we go. You can see
191:11 - that whoops, you can see that our image is
set here. Now there's a few issues, obviously
191:17 - with the repetition and everything, but we're
not going to be covering those until maybe
191:22 - in a few videos. Where we talk about some
other background properties. But there we
191:25 - go for now, we've actually set our image and
now it is set on our website. So when you
191:33 - think of a URL, you're most likely thinking
of linking to google images or some sort of
191:42 - web URL. But that's not the only type of URL
that we can use a URL is just a link to an
191:49 - endpoint. This right here is a URL, it's just
not linking to a website, it's instead linking
191:54 - to a local picture, or stylesheet, or whatever
you're trying to link to. So what I'm actually
191:59 - going to show you is that we can use these
local URLs in here. So I'm going to erase
192:05 - this a little bit longer. Now, I'm going to
paste in our new URL here, go ahead and refresh
192:09 - the page. And now you can see that it still
works perfectly. Because again, it's linking
192:12 - to an endpoint, it's just not on our website,
it's instead stored on our local machine.
192:17 - So there we go, we have that set up now. But
there's actually another way that you can
192:21 - set background images. And this goes the same
for background colors. So why I like to use
192:26 - the background property is because you can
set anything you want in one go. You can set
192:31 - it as a color as an image, and he do many
other things. But instead, you can actually
192:35 - use very specific properties that work for
specific value. So for example, in this case,
192:40 - we can use background image. And from here,
we can go ahead and copy paste the URL, like
192:45 - that, make sure to add your semicolon. Now
I'm going to go ahead and erase this and show
192:51 - you that it still works perfectly fine. So
you see I refresh the page, and it's still
192:56 - working. And this goes the same for for background
colors, you can go ahead and add a background
192:59 - color, and then add some random RGB value
just going to go for a full black for now.
193:03 - And you can see that it still works. The only
problem is if I go ahead and paste in that
193:06 - URL here. Oh, what if I go ahead and paste
in that URL here,
193:10 - So in this video, we're going to be looking
at a different type of background in CSS.
193:14 - So now that we've covered basic color types,
and we've also covered a little bit of background,
193:23 - and using background tracks, we're going to
move on to an alternate way of creating backgrounds.
193:30 - And that's through background images. So right
now we know the basics of coloring, so we
193:36 - were able to call it a text. Now with our
own custom colors using a color picker, we
193:41 - can also go ahead and use our own, you know,
backgrounds and things like that with our
193:47 - own colors. But now what I want to cover is
looking at different types of backgrounds
193:53 - themselves. So in this case, we're going to
be looking at images. So first of all, when
193:58 - we want to set the background to an image,
we can just go ahead and add an RGB color
194:04 - code, we're going to need to go and actually
link to an image. So I'm going to show you
194:10 - a really easy way of doing this, the first
thing we're going to need is an image. And
194:15 - for this method, you can actually use images
with from the internet without having to download
194:22 - them using URLs. So show you how to do that
now. So if I go ahead and search for a landscape
194:32 - image, just like this. And now we want to
look for a sort of low resolution one, we
194:37 - don't want to do too big, I think this will
be pretty good, it's going to look a little
194:43 - bit weird, but just for this purpose, we're
going to use it. So now what we need to do
194:49 - is get the URL link to this image. So you
can do this by right clicking on it. And then
194:54 - you're going to go ahead and click on copy
image address. Okay, so what this is going
194:59 - to do is get the actual link to the image
itself. Right now this link is going to Google
195:05 - Images. But what we actually need is the link
to the image itself. So there we go, we have
195:10 - that set up. Now we need to go ahead and add
the image to the page. So under here, I'm
195:15 - going to just erase this color code for now.
And I'm going to show you how to add our image.
195:32 - So there's this thing in CSS, they're called
functions. Now, we're not really going to
195:37 - go very in depth about them. But pretty much
what they do is they take a few inputs, they
195:42 - process them, and they give an output. So
the first example of a function that we've
195:45 - already used is this right here, it takes
three inputs A red, a green, and a blue, does
195:50 - some magic behind the scenes, and then gives
us a color back. So what we're going to do
195:55 - here is use another function called URL. So
what this is going to do is take in the link
196:01 - or to the URL, and then it's going to find
that image and set it. So in quotations, it
196:07 - doesn't have to be in quotations, just remember
that you're going to paste in your image.
196:12 - So remember, I just copied this from the image
address. And now we have it here. So we have
196:19 - the image. Let's go ahead and check it out
on our website. So there we go. You can see
196:26 - that whoops, you can see that our image is
set here. Now there's a few issues, obviously
196:32 - with the repetition and everything, but we're
not going to be covering those until maybe
196:37 - in a few videos. Where we talk about some
other background properties. But there we
196:40 - go for now, we've actually set our image and
now it is set on our website. So when you
196:44 - think of a URL, you're most likely thinking
of linking to google images or some sort of
196:48 - web URL. But that's not the only type of URL
that we can use a URL is just a link to an
196:53 - endpoint. This right here is a URL, it's just
not linking to a website, it's instead linking
196:59 - to a local picture, or stylesheet, or whatever
you're trying to link to. So what I'm actually
197:05 - going to show you is that we can use these
local URLs in here. So I'm going to erase
197:10 - this a little bit longer. Now, I'm going to
paste in our new URL here, go ahead and refresh
197:16 - the page. And now you can see that it still
works perfectly. Because again, it's linking
197:21 - to an endpoint, it's just not on our website,
it's instead stored on our local machine.
197:25 - So there we go, we have that set up now. But
there's actually another way that you can
197:30 - set background images. And this goes the same
for background colors. So why I like to use
197:36 - the background property is because you can
set anything you want in one go. You can set
197:41 - it as a color as an image, and he do many
other things. But instead, you can actually
197:46 - use very specific properties that work for
specific value. So for example, in this case,
197:51 - we can use background image. And from here,
we can go ahead and copy paste the URL, like
197:59 - that, make sure to add your semicolon. Now
I'm going to go ahead and erase this and show
198:06 - you that it still works perfectly fine. So
you see I refresh the page, and it's still
198:12 - working. And this goes the same for for background
colors, you can go ahead and add a background
198:17 - color, and then add some random RGB value
just going to go for a full black for now.
198:22 - And you can see that it still works. The only
problem is if I go ahead and paste in that
198:27 - URL here. Oh, what if I go ahead and paste
in that URL here,
198:32 - just gonna link to it straight. So if I go
ahead and add the URL to the color, it's not
198:38 - going to work, because this is specifically
for colors. Alright, so there we go. That's
198:42 - pretty much it. For background images, it's
quite easy to use, all you have to do is make
198:45 - sure that you have a working URL, you can
just test it by putting it in and seeing the
198:49 - backroads loading properly. And from there,
just use your URL function and a suitable
198:54 - property, such as background or background
image, and you should be good to go. Alright,
198:59 - let's move on. So in this video, we're going
to be looking at some more background properties.
199:02 - Now we're not going to be looking at all of
them. Because most of these aren't really
199:08 - useful. And they're not really used in everyday
life. But what I'm going to be doing is showing
199:10 - you the main properties that you can use with
backgrounds that can really change how your
199:13 - backgrounds look. So we're actually going
to be covering covering only two in this video.
199:16 - So that's background size, and background
repeat. So the first thing I want to cover
199:21 - is background repeat, because I think it's
the most important. So you can see we have
199:26 - our background there, I already set the height
and width, don't worry about these values
199:30 - or the properties or anything. Again, we'll
talk about those later in this in this course.
199:33 - But for now, you can see that we have our
background here, which is actually inside
199:36 - of a div. So I set the div height and width.
And now there's a background here. So I want
199:42 - to mess around with this background and see
what I can do. So first of all, you'll notice
199:46 - that we can see here that we have so for example,
two or three or four of the same image. And
199:52 - pretty much what's happening is the image
is being repeated, so that it can fill up
199:56 - all of the content space. Now this is done
by default, because again, all of the values
200:00 - and pixels and the dimensions are absolute.
They're not like other programs where you
200:06 - can just throw a picture on there, and it'll
automatically resize. When you're working
200:10 - with web development. It takes those raw dimensions,
it just plugs them straight into the website.
200:15 - So that's why we need to do a little bit of
styling. So you can see that this image is
200:23 - big enough. And remember, because this is
a direct image, what's happening here is we
200:27 - have an image tag, and then the image is just
being plugged straight in there. Whereas with
200:31 - here, we don't actually have an image tag,
what we have is an empty div, which is just
200:41 - think of it if you don't know what that is
think of it as a container. It has a width
200:51 - and height of this much. But then this is
an empty box. All we're doing is filling it
200:56 - with this image. So instead of plugging the
image straight in, we're just filling an empty
201:03 - box with these images. And of course, the
image isn't big enough to fill it. So what
201:08 - we have to do is or what HTML actually does
by default is repeat this. So if you don't
201:12 - want that there is an easy way to fix it.
Now it's probably not going to give you the
201:15 - result that you expected. But what you're
going to do is go ahead and say background
201:19 - background, dash repeat Pretty much you can
either set this to no repeat, which is the
201:24 - default. Or you Oh, sorry, no repeat is the
default. Yeah. So repeat is going to be the
201:31 - default value. But if you want to set it to
no repeat, this is pretty much going to remove
201:37 - that repeating property. Now, although it
might look like now this image is going to
201:44 - cover the whole thing, watch what happens,
you can see that it only takes up that small
201:49 - box. And this might look like it just resized
everything. But if I go ahead and add a background
201:55 - color to this, like that, and I'm just gonna
say red. And I go ahead and refresh the page,
202:03 - you can see what's actually happening here
is that we have the image, and it's not taking
202:13 - up the full image if I go ahead and set this
to repeat.
202:23 - just gonna link to it straight. So if I go
ahead and add the URL to the color, it's not
202:38 - going to work, because this is specifically
for colors. Alright, so there we go. That's
202:40 - pretty much it. For background images, it's
quite easy to use, all you have to do is make
202:45 - sure that you have a working URL, you can
just test it by putting it in and seeing the
202:55 - backroads loading properly. And from there,
just use your URL function and a suitable
203:00 - property, such as background or background
image, and you should be good to go. Alright,
203:05 - let's move on. So in this video, we're going
to be looking at some more background properties.
203:11 - Now we're not going to be looking at all of
them. Because most of these aren't really
203:19 - useful. And they're not really used in everyday
life. But what I'm going to be doing is showing
203:25 - you the main properties that you can use with
backgrounds that can really change how your
203:29 - backgrounds look. So we're actually going
to be covering covering only two in this video.
203:34 - So that's background size, and background
repeat. So the first thing I want to cover
203:38 - is background repeat, because I think it's
the most important. So you can see we have
203:44 - our background there, I already set the height
and width, don't worry about these values
203:49 - or the properties or anything. Again, we'll
talk about those later in this in this course.
203:53 - But for now, you can see that we have our
background here, which is actually inside
203:59 - of a div. So I set the div height and width.
And now there's a background here. So I want
204:09 - to mess around with this background and see
what I can do. So first of all, you'll notice
204:14 - that we can see here that we have so for example,
two or three or four of the same image. And
204:20 - pretty much what's happening is the image
is being repeated, so that it can fill up
204:26 - all of the content space. Now this is done
by default, because again, all of the values
204:30 - and pixels and the dimensions are absolute.
They're not like other programs where you
204:34 - can just throw a picture on there, and it'll
automatically resize. When you're working
204:39 - with web development. It takes those raw dimensions,
it just plugs them straight into the website.
204:46 - So that's why we need to do a little bit of
styling. So you can see that this image is
204:53 - big enough. And remember, because this is
a direct image, what's happening here is we
204:56 - have an image tag, and then the image is just
being plugged straight in there. Whereas with
205:00 - here, we don't actually have an image tag,
what we have is an empty div, which is just
205:05 - think of it if you don't know what that is
think of it as a container. It has a width
205:09 - and height of this much. But then this is
an empty box. All we're doing is filling it
205:16 - with this image. So instead of plugging the
image straight in, we're just filling an empty
205:21 - box with these images. And of course, the
image isn't big enough to fill it. So what
205:29 - we have to do is or what HTML actually does
by default is repeat this. So if you don't
205:31 - want that there is an easy way to fix it.
Now it's probably not going to give you the
205:37 - result that you expected. But what you're
going to do is go ahead and say background
205:44 - background, dash repeat Pretty much you can
either set this to no repeat, which is the
205:51 - default. Or you Oh, sorry, no repeat is the
default. Yeah. So repeat is going to be the
205:55 - default value. But if you want to set it to
no repeat, this is pretty much going to remove
206:01 - that repeating property. Now, although it
might look like now this image is going to
206:07 - cover the whole thing, watch what happens,
you can see that it only takes up that small
206:12 - box. And this might look like it just resized
everything. But if I go ahead and add a background
206:18 - color to this, like that, and I'm just gonna
say red. And I go ahead and refresh the page,
206:23 - you can see what's actually happening here
is that we have the image, and it's not taking
206:28 - up the full image if I go ahead and set this
to repeat.
206:32 - Now the background is taking up the full image.
So I'm actually just going to go ahead and
206:44 - set this to a basic steel blue, I think that's
one of my favorite CSS named colors. So there
206:54 - we go. Now that we know how to adjust the
repet repetition of these backgrounds, why
207:01 - don't we go ahead and actually talk about
background size, because that's the important
207:04 - one, that's going to allow us to fill this
whole container. So first of all, now that
207:10 - we know the background repeat just changes,
if it repeats or not, we need to know how
207:15 - to alter the size, we can do this using a
property called background size. So I'm going
207:21 - to go ahead and actually erase this, we don't
need it for now, just like that. So you can
207:25 - actually go ahead and set the size of the
background. And remember, depending on whether
207:32 - you set it to repeat or not, this is going
to change your effect. So right now, it's
207:38 - still on repeat since we removed that property.
But pretty much the way to manipulate this
207:43 - is the first value is going to be the height.
So for example, let's say I wanted to take
207:48 - up 50 pixels, then with a direct space, remember,
no commas nothing, you're going to then enter
207:52 - the width. So I'm going to say maybe 100 pixels.
Let's go ahead and refresh now. And you can
207:58 - see that because our repeat is actually off.
Sorry, our repeat is on, we can see that it
208:02 - just keeps repeating until this whole space
is filled up. Now, obviously, it's going to
208:04 - be pretty hard to get this exactly at the
dimensions. If I actually go ahead and set
208:11 - this to 400 pixels. And 70%, we didn't really
talk about percentages much, you can see it's
208:13 - still repeating. So it's very hard to get
this working in the way that you want it to
208:18 - cover the whole thing exactly, even if you
use the direct values. So there's actually
208:21 - a keyword that you can use to fix this up.
All you have to do is type cover here. So
208:24 - if I go ahead and refresh, you can see now
the image takes up the full width. And although
208:29 - it sacrifices the quality, pretty much what's
happening here is this cover value is going
208:32 - to resize the image based on the dimensions
just right to that it fits this whole thing.
208:35 - There's also one more keyword that you can
use, which is called contain. But the only
208:41 - problem is with contain is it's going to resize
it as much as possible. The only problem is
208:47 - it trying to resize it without messing with
the proportions. So let's say that this is
208:53 - maybe a two to one ratio. So for every two
widths, there's one height. So let's just
209:01 - use that as an example. Basically, what's
happening here is that no matter how much
209:06 - you stretch this, you cannot go the full way
without stretching it off the screen. So contain
209:11 - doesn't do that. Instead, it just repeats
the image. Now if we actually change this
209:13 - back to cover, you can see that it does cut
off part of that image because it just stretches
209:19 - it out the full way until the image color
or the background covers the full width. So
209:28 - there you go. That's pretty much it for background
size. Now I would recommend going instead
209:31 - not with the sizing option pixels, but instead
using the cover keyword or the contain keyword,
209:35 - if you know that your proportions are right,
or if you need it for some other purpose.
209:38 - So yeah, pretty much those are the two main
other background properties that you're going
209:43 - to be using. Obviously, there's many more,
but they're not as useful. And they don't
209:50 - really make as much of a difference as these
two. Alright, let's move on.
209:57 - Now the background is taking up the full image.
So I'm actually just going to go ahead and
210:04 - set this to a basic steel blue, I think that's
one of my favorite CSS named colors. So there
210:10 - we go. Now that we know how to adjust the
repet repetition of these backgrounds, why
210:15 - don't we go ahead and actually talk about
background size, because that's the important
210:20 - one, that's going to allow us to fill this
whole container. So first of all, now that
210:24 - we know the background repeat just changes,
if it repeats or not, we need to know how
210:29 - to alter the size, we can do this using a
property called background size. So I'm going
210:37 - to go ahead and actually erase this, we don't
need it for now, just like that. So you can
210:43 - actually go ahead and set the size of the
background. And remember, depending on whether
210:45 - you set it to repeat or not, this is going
to change your effect. So right now, it's
210:49 - still on repeat since we removed that property.
But pretty much the way to manipulate this
210:53 - is the first value is going to be the height.
So for example, let's say I wanted to take
210:58 - up 50 pixels, then with a direct space, remember,
no commas nothing, you're going to then enter
211:01 - the width. So I'm going to say maybe 100 pixels.
Let's go ahead and refresh now. And you can
211:05 - see that because our repeat is actually off.
Sorry, our repeat is on, we can see that it
211:11 - just keeps repeating until this whole space
is filled up. Now, obviously, it's going to
211:15 - be pretty hard to get this exactly at the
dimensions. If I actually go ahead and set
211:20 - this to 400 pixels. And 70%, we didn't really
talk about percentages much, you can see it's
211:25 - still repeating. So it's very hard to get
this working in the way that you want it to
211:29 - cover the whole thing exactly, even if you
use the direct values. So there's actually
211:33 - a keyword that you can use to fix this up.
All you have to do is type cover here. So
211:38 - if I go ahead and refresh, you can see now
the image takes up the full width. And although
211:42 - it sacrifices the quality, pretty much what's
happening here is this cover value is going
211:52 - to resize the image based on the dimensions
just right to that it fits this whole thing.
211:58 - There's also one more keyword that you can
use, which is called contain. But the only
212:04 - problem is with contain is it's going to resize
it as much as possible. The only problem is
212:12 - it trying to resize it without messing with
the proportions. So let's say that this is
212:16 - maybe a two to one ratio. So for every two
widths, there's one height. So let's just
212:23 - use that as an example. Basically, what's
happening here is that no matter how much
212:29 - you stretch this, you cannot go the full way
without stretching it off the screen. So contain
212:35 - doesn't do that. Instead, it just repeats
the image. Now if we actually change this
212:41 - back to cover, you can see that it does cut
off part of that image because it just stretches
212:47 - it out the full way until the image color
or the background covers the full width. So
212:54 - there you go. That's pretty much it for background
size. Now I would recommend going instead
212:59 - not with the sizing option pixels, but instead
using the cover keyword or the contain keyword,
213:04 - if you know that your proportions are right,
or if you need it for some other purpose.
213:11 - So yeah, pretty much those are the two main
other background properties that you're going
213:14 - to be using. Obviously, there's many more,
but they're not as useful. And they don't
213:19 - really make as much of a difference as these
two. Alright, let's move on.
213:27 - So in this video, we're going to be talking
a little bit more about RGB colors. But we're
213:32 - actually going to be adding one more feature
to this. So right now we've talked about RGB,
213:37 - which is our basic color set. We have a red,
a green and a blue. There's actually one more
213:41 - that we're missing out on the can really improve
the quality of our colors. And that's a or
213:45 - alpha. So right now you can see we have an
RGB color code. But what if we wanted to add
213:49 - this mysterious alpha component? What will
we do? So I'm actually going to go ahead and
213:53 - use it as the background. Well, the first
thing you need to do is change the RGB name
213:57 - to RGB a. And in this way, we've completely
changed the way the color looks. Now if we
214:00 - go ahead and refresh the page, nothing's changed.
But now we can actually manipulate that alpha
214:05 - value. So all we have to do is after green
Sorry, blue, keep getting those two mixed
214:08 - up. After the final value, you're gonna add
another comma. And here is where you can put
214:13 - any value between zero and one. So now that
you know what you can do with it, alpha is
214:17 - pretty much the transparency or opacity of
a color zero, meaning it's completely transparent,
214:21 - you can't see it at all. And one, meaning
it's fully visible. Think of this in percentages.
214:28 - For example, zero is 0%, and one is 100% 0.5,
would be 50%. So if you think of it that way,
214:34 - you can really think about opacity in a much
easier way. So I'm going to go ahead and actually
214:38 - set 0.4. So right now we're at zero or 40%
opacity. Now, if we refresh the page, you
214:43 - can see that the color is still there, it's
just a lot lighter. Now, you're probably asking
214:47 - like, why don't you just go and maybe make
the color lighter? Well, it's actually much
214:53 - easier to control it this way. And on top
of that, if you want things like maybe fading,
215:00 - or you want to maybe change a color fade into
a different one, you can't really just change
215:06 - the color every time, because in animation,
it's much easier to just change the opacity,
215:11 - reduce it or increase it, then change the
color every time. So it's also much easier
215:14 - to use RGB a colors when you're trying to
just control the overall look of a color.
215:19 - So usually, when you're using just simply
RGB colors, you can only get a certain look.
215:25 - But once you add opacity into the mix, you
can completely change the way that it looks.
215:29 - So pretty much here's the takeaway they're
supposed to take from this video, you can
215:34 - have a fourth component to an RGB color, which
is a now this becomes an RGB a color. Now
215:41 - this a value stands for alpha, or opacity
or transparency, whatever you want to call
215:48 - it, then this value isn't like just from zero
to 255. Instead, you have to set a value between
215:54 - zero and one. If you think of it in terms
of percentages, it becomes a lot easier, zero
215:59 - being the no or zero, when there's no transparency,
sorry, when they're when it's fully transparent.
216:03 - And then one being when it's completely visible.
Alright, so that's pretty much it for this
216:06 - RGBA color scheme, it's very easy to use,
you don't really need to use a color picker.
216:10 - For that, you can just think about how opaque
you want it. And from there, you can set your
216:14 - value. All right, let's move on.
216:15 - So in this video, we're going to be talking
a little bit more about RGB colors. But we're
216:18 - actually going to be adding one more feature
to this. So right now we've talked about RGB,
216:22 - which is our basic color set. We have a red,
a green and a blue. There's actually one more
216:27 - that we're missing out on the can really improve
the quality of our colors. And that's a or
216:34 - alpha. So right now you can see we have an
RGB color code. But what if we wanted to add
216:37 - this mysterious alpha component? What will
we do? So I'm actually going to go ahead and
216:40 - use it as the background. Well, the first
thing you need to do is change the RGB name
216:43 - to RGB a. And in this way, we've completely
changed the way the color looks. Now if we
216:48 - go ahead and refresh the page, nothing's changed.
But now we can actually manipulate that alpha
216:51 - value. So all we have to do is after green
Sorry, blue, keep getting those two mixed
216:57 - up. After the final value, you're gonna add
another comma. And here is where you can put
217:03 - any value between zero and one. So now that
you know what you can do with it, alpha is
217:07 - pretty much the transparency or opacity of
a color zero, meaning it's completely transparent,
217:09 - you can't see it at all. And one, meaning
it's fully visible. Think of this in percentages.
217:13 - For example, zero is 0%, and one is 100% 0.5,
would be 50%. So if you think of it that way,
217:21 - you can really think about opacity in a much
easier way. So I'm going to go ahead and actually
217:26 - set 0.4. So right now we're at zero or 40%
opacity. Now, if we refresh the page, you
217:30 - can see that the color is still there, it's
just a lot lighter. Now, you're probably asking
217:38 - like, why don't you just go and maybe make
the color lighter? Well, it's actually much
217:44 - easier to control it this way. And on top
of that, if you want things like maybe fading,
217:52 - or you want to maybe change a color fade into
a different one, you can't really just change
217:58 - the color every time, because in animation,
it's much easier to just change the opacity,
218:03 - reduce it or increase it, then change the
color every time. So it's also much easier
218:10 - to use RGB a colors when you're trying to
just control the overall look of a color.
218:15 - So usually, when you're using just simply
RGB colors, you can only get a certain look.
218:19 - But once you add opacity into the mix, you
can completely change the way that it looks.
218:29 - So pretty much here's the takeaway they're
supposed to take from this video, you can
218:34 - have a fourth component to an RGB color, which
is a now this becomes an RGB a color. Now
218:44 - this a value stands for alpha, or opacity
or transparency, whatever you want to call
218:48 - it, then this value isn't like just from zero
to 255. Instead, you have to set a value between
218:56 - zero and one. If you think of it in terms
of percentages, it becomes a lot easier, zero
219:02 - being the no or zero, when there's no transparency,
sorry, when they're when it's fully transparent.
219:07 - And then one being when it's completely visible.
Alright, so that's pretty much it for this
219:12 - RGBA color scheme, it's very easy to use,
you don't really need to use a color picker.
219:18 - For that, you can just think about how opaque
you want it. And from there, you can set your
219:25 - value. All right, let's move on.
219:27 - So in this video, this is going to be talking
about the last feature with using colors.
219:32 - And it's a little bit hard to grasp at first.
But once you start using it, you can really
219:40 - get used to it. So we're going to be working
with gradients in this video on for now, I'm
219:47 - just going to go ahead and erase this background.
And I'm just going to have a single color.
219:54 - So I'm just going to say steel blue. And I'm
going to also erase this color property. So
219:59 - now we have a background of the steel blue
color. There we go. So now it's working. So
220:01 - pretty much if you don't know what a gradient
is already, it's kind of a transition between
220:06 - two colors. So it's not just a sharp, red
to blue in one go. It smoothly green, you
220:12 - know, moves or diffuses from through the colors.
So for example, you start just completely
220:17 - red. And then you move up along and as as
you go up, it gets more and more blue. So
220:24 - you're sort of mixing between the two colors.
So if you've ever done any painting before,
220:30 - you're used, maybe coloring pencils, if you
kind of use paint and draw between the two
220:35 - colors, depending on the proportions between
them, it's going to make sort of a purple
220:40 - ish, and then it transitions like that. So
pretty much that's what's going on here without
220:45 - gradients is we're transitioning between two
colors. Now of course, you can do more than
220:51 - two, you can put three, four, you can put
as many colors as you want. But pretty much
220:58 - what you have to take away from this is that
a gradient is just a transition between a
221:03 - number of colors. Okay, so now that we know
what a gradient is, let's go ahead and get
221:08 - started adding them. So there are actually
two types of gradients, radial and linear.
221:10 - So radial gradients are circular, they kind
of move outwards from a center. And depending
221:15 - on the percentages or how much you want of
each color, it's going to change the way the
221:22 - gradient looks. A linear gradient on the other
hand is the one that I described earlier,
221:28 - a smooth red transition to blue, it could
go from left to right, top to bottom and even
221:34 - diagonally depending on how we define the
direction later in this video when we start
221:40 - creating our gradients, alright, let's get
started. So the first thing I want to work
221:43 - with is linear gradients. So the way to do
this just with our RGBA or a URL, all we have
221:51 - to do is type linear dash gradient. Just like
that. And from here, we can start defining
221:56 - our directions. So if you don't already know
about directions already, pretty much there
222:01 - are four different positions top, bottom,
left and right. And you can also combine the
222:08 - two to create corners. So for example, top
right would be the top right corner. So first
222:14 - of all, what you're going to want to do is
type two. And then you're going to say the
222:21 - name of the direction. So in this case, I'm
just going to say two, right. So what this
222:26 - is going to be saying is you want the grid
to move to the right side. So it's going to
222:34 - be going this way. Now, there's also another
way to do this I'll talk about in just a second.
222:38 - But for now, let's leave it like this. And
then after your comma, you're going to add
222:42 - as many colors as you want. So in this case,
I'm going to add red, and blue. And remember
222:47 - to separate them also by a comma. Let's go
ahead and refresh and see what's happening,
222:51 - you can see that we have a red slowly transitioning
into a blue to the right side. So remember,
222:58 - it starts with the first color and moves on.
Let's go ahead and add a green in there, and
223:06 - then a steel blue, and then a blue. Now we
have four colors that are slowly transitioning,
223:11 - we have a red, that slowly transition into
a green, and then a steel blue, you can sort
223:24 - of see it there and then a blue. And just
saying we don't actually have to use these
223:32 - name colors, I just wanted to use them because
it looked it was quite easy to look at. So
223:38 - what we can actually do and here's your first
use for Opacity is you can go ahead and let's
223:46 - just take a random color here. So to write
Remember, this is starting here, we're going
223:50 - to paste in that color. But then we're going
to finish it with an RGB a color,
223:54 - So in this video, this is going to be talking
about the last feature with using colors.
224:00 - And it's a little bit hard to grasp at first.
But once you start using it, you can really
224:05 - get used to it. So we're going to be working
with gradients in this video on for now, I'm
224:11 - just going to go ahead and erase this background.
And I'm just going to have a single color.
224:16 - So I'm just going to say steel blue. And I'm
going to also erase this color property. So
224:21 - now we have a background of the steel blue
color. There we go. So now it's working. So
224:27 - pretty much if you don't know what a gradient
is already, it's kind of a transition between
224:34 - two colors. So it's not just a sharp, red
to blue in one go. It smoothly green, you
224:39 - know, moves or diffuses from through the colors.
So for example, you start just completely
224:43 - red. And then you move up along and as as
you go up, it gets more and more blue. So
224:49 - you're sort of mixing between the two colors.
So if you've ever done any painting before,
224:54 - you're used, maybe coloring pencils, if you
kind of use paint and draw between the two
225:02 - colors, depending on the proportions between
them, it's going to make sort of a purple
225:06 - ish, and then it transitions like that. So
pretty much that's what's going on here without
225:13 - gradients is we're transitioning between two
colors. Now of course, you can do more than
225:18 - two, you can put three, four, you can put
as many colors as you want. But pretty much
225:26 - what you have to take away from this is that
a gradient is just a transition between a
225:30 - number of colors. Okay, so now that we know
what a gradient is, let's go ahead and get
225:36 - started adding them. So there are actually
two types of gradients, radial and linear.
225:42 - So radial gradients are circular, they kind
of move outwards from a center. And depending
225:46 - on the percentages or how much you want of
each color, it's going to change the way the
225:51 - gradient looks. A linear gradient on the other
hand is the one that I described earlier,
225:57 - a smooth red transition to blue, it could
go from left to right, top to bottom and even
226:03 - diagonally depending on how we define the
direction later in this video when we start
226:08 - creating our gradients, alright, let's get
started. So the first thing I want to work
226:16 - with is linear gradients. So the way to do
this just with our RGBA or a URL, all we have
226:22 - to do is type linear dash gradient. Just like
that. And from here, we can start defining
226:32 - our directions. So if you don't already know
about directions already, pretty much there
226:35 - are four different positions top, bottom,
left and right. And you can also combine the
226:39 - two to create corners. So for example, top
right would be the top right corner. So first
226:44 - of all, what you're going to want to do is
type two. And then you're going to say the
226:48 - name of the direction. So in this case, I'm
just going to say two, right. So what this
226:53 - is going to be saying is you want the grid
to move to the right side. So it's going to
227:02 - be going this way. Now, there's also another
way to do this I'll talk about in just a second.
227:09 - But for now, let's leave it like this. And
then after your comma, you're going to add
227:15 - as many colors as you want. So in this case,
I'm going to add red, and blue. And remember
227:23 - to separate them also by a comma. Let's go
ahead and refresh and see what's happening,
227:31 - you can see that we have a red slowly transitioning
into a blue to the right side. So remember,
227:40 - it starts with the first color and moves on.
Let's go ahead and add a green in there, and
227:46 - then a steel blue, and then a blue. Now we
have four colors that are slowly transitioning,
227:52 - we have a red, that slowly transition into
a green, and then a steel blue, you can sort
227:59 - of see it there and then a blue. And just
saying we don't actually have to use these
228:08 - name colors, I just wanted to use them because
it looked it was quite easy to look at. So
228:16 - what we can actually do and here's your first
use for Opacity is you can go ahead and let's
228:22 - just take a random color here. So to write
Remember, this is starting here, we're going
228:27 - to paste in that color. But then we're going
to finish it with an RGB a color,
228:33 - like that. And pretty much what's what's going
to happen is this is going to be a slowly
228:38 - fading out color, just like this. So you can
see what's happening is we start with a fully
228:42 - functional color, which has a full track or
a has no transparency at all. And we slowly
228:47 - slowly make it fade more and more out until
we can't see the picture at all, or the color
228:54 - in this case. So yeah, that's pretty much
a great way of looking at it. And that's pretty
228:58 - much it for linear gradients. Let's talk about
actually making diagonal gradients now. So
229:03 - we know that we can have to write, we can
also have to top for example, if you wanted
229:08 - to start from the start from the bottom, just
like that. And you can see now it goes up.
229:13 - But what if we wanted to make it diagonal.
So let's say we wanted to finish in the bottom
229:17 - right corner, what you would do is just type
it out like this to bottom right. Now if we
229:22 - refresh the page, you can see that it slowly
goes down and fades out just at the bottom
229:24 - right. So there we go. That's pretty much
it for positioning. But there's actually another
229:27 - way to do this, and it's through angles. So
if you don't already know how to use angles,
229:30 - then you can pretty much skip this step because
it's quite hard to get the use of it. But
229:32 - once you learn how to actually work with angles,
and you know how to, you know, move them around
229:40 - things like that, it becomes very easy to
work with them. So let's say you wanted them
229:54 - to go in a very specific direction. So for
example, you wanted it to end somewhere here.
230:01 - Now, obviously, you can't use words for positioning,
because they only work at certain places such
230:08 - as the corners. So if you wanted to do this,
you're going to have to go ahead and use angles.
230:16 - So first thing I'm going to do is go ahead
and erase this part because we're not using
230:22 - positioning, and then we're going to go ahead
and type our angle. So the first thing I'm
230:31 - going to do is define the place that I wanted
to end. So let's say this time I wanted to
230:39 - add on the left here. So what I'm going to
do is go ahead and say minus 90, because remember
230:46 - what's happening here is we want it to just
flip completely around. So let's say this
230:57 - is our starting angle is zero, and we go all
the way down minus 90. So if you don't already
231:04 - know 90 is kind of a quarter turn. And what's
going to happen is from here, we can type
231:09 - D, G, or degrees. And this is going to set
the angle that we wanted. So let's go ahead
231:15 - and refresh the page. You can see that now
it goes from right to left. Now this is a
231:19 - pretty bad example considering we can just
do this normally, by typing to left. Well,
231:24 - why don't we go ahead and choose something
a little bit more specific. So I'm going to
231:30 - go 146 degrees. So just remember that pointing
upwards is kind of the starting position.
231:33 - And then we turn 90 degrees, and then just
a little bit over halfway. And I think that's
231:41 - not a very good example. So I'm going to go
with 160. Now you can see once I refresh the
231:48 - page that it ends, sort of around the corner,
but not exactly on. And if I actually go ahead
231:53 - and add something like maybe 215 or something
like that, go ahead and refresh, you can see
232:01 - that they are ending in different places,
it's a lot more specific. Now, it's not very
232:03 - obvious with this kind of fading color. But
what's happening here is we can directly control
232:06 - where we want our gradient to end. So that's
one way of using linear gradients. Now let's
232:11 - go ahead and talk about the next type of gradient,
which are radial gradients. So first of all,
232:17 - I'm just going to erase this whole thing here
because I don't really need it. Now, radial
232:22 - gradients don't work in the same way that
linear ones do instead of having a specified
232:27 - direction. So for example, you want to go
from Right to left or from top to bottom,
232:32 - instead, what happens is we can actually define
the percentages or proportions of each color
232:36 - that we want. The next thing I'm going to
talk about is actually this background size.
232:42 - So one thing you need to note is that you
cannot specify the cover, background size
232:49 - or anything like that for these radial gradients,
because they just won't work. So what we're
232:55 - gonna have to do is go ahead and remove this.
There we go. Now let's go ahead and add our
232:59 - radial gradient. So I'm going to go ahead
and type radio dash gradient,
233:03 - like that. And pretty much what's what's going
to happen is this is going to be a slowly
233:12 - fading out color, just like this. So you can
see what's happening is we start with a fully
233:20 - functional color, which has a full track or
a has no transparency at all. And we slowly
233:24 - slowly make it fade more and more out until
we can't see the picture at all, or the color
233:28 - in this case. So yeah, that's pretty much
a great way of looking at it. And that's pretty
233:34 - much it for linear gradients. Let's talk about
actually making diagonal gradients now. So
233:39 - we know that we can have to write, we can
also have to top for example, if you wanted
233:45 - to start from the start from the bottom, just
like that. And you can see now it goes up.
233:50 - But what if we wanted to make it diagonal.
So let's say we wanted to finish in the bottom
233:53 - right corner, what you would do is just type
it out like this to bottom right. Now if we
233:59 - refresh the page, you can see that it slowly
goes down and fades out just at the bottom
234:05 - right. So there we go. That's pretty much
it for positioning. But there's actually another
234:14 - way to do this, and it's through angles. So
if you don't already know how to use angles,
234:19 - then you can pretty much skip this step because
it's quite hard to get the use of it. But
234:24 - once you learn how to actually work with angles,
and you know how to, you know, move them around
234:27 - things like that, it becomes very easy to
work with them. So let's say you wanted them
234:31 - to go in a very specific direction. So for
example, you wanted it to end somewhere here.
234:35 - Now, obviously, you can't use words for positioning,
because they only work at certain places such
234:40 - as the corners. So if you wanted to do this,
you're going to have to go ahead and use angles.
234:46 - So first thing I'm going to do is go ahead
and erase this part because we're not using
234:51 - positioning, and then we're going to go ahead
and type our angle. So the first thing I'm
234:55 - going to do is define the place that I wanted
to end. So let's say this time I wanted to
235:01 - add on the left here. So what I'm going to
do is go ahead and say minus 90, because remember
235:06 - what's happening here is we want it to just
flip completely around. So let's say this
235:12 - is our starting angle is zero, and we go all
the way down minus 90. So if you don't already
235:19 - know 90 is kind of a quarter turn. And what's
going to happen is from here, we can type
235:26 - D, G, or degrees. And this is going to set
the angle that we wanted. So let's go ahead
235:34 - and refresh the page. You can see that now
it goes from right to left. Now this is a
235:40 - pretty bad example considering we can just
do this normally, by typing to left. Well,
235:46 - why don't we go ahead and choose something
a little bit more specific. So I'm going to
235:51 - go 146 degrees. So just remember that pointing
upwards is kind of the starting position.
235:55 - And then we turn 90 degrees, and then just
a little bit over halfway. And I think that's
235:58 - not a very good example. So I'm going to go
with 160. Now you can see once I refresh the
236:03 - page that it ends, sort of around the corner,
but not exactly on. And if I actually go ahead
236:05 - and add something like maybe 215 or something
like that, go ahead and refresh, you can see
236:12 - that they are ending in different places,
it's a lot more specific. Now, it's not very
236:16 - obvious with this kind of fading color. But
what's happening here is we can directly control
236:23 - where we want our gradient to end. So that's
one way of using linear gradients. Now let's
236:30 - go ahead and talk about the next type of gradient,
which are radial gradients. So first of all,
236:35 - I'm just going to erase this whole thing here
because I don't really need it. Now, radial
236:43 - gradients don't work in the same way that
linear ones do instead of having a specified
236:48 - direction. So for example, you want to go
from Right to left or from top to bottom,
236:53 - instead, what happens is we can actually define
the percentages or proportions of each color
237:00 - that we want. The next thing I'm going to
talk about is actually this background size.
237:06 - So one thing you need to note is that you
cannot specify the cover, background size
237:10 - or anything like that for these radial gradients,
because they just won't work. So what we're
237:15 - gonna have to do is go ahead and remove this.
There we go. Now let's go ahead and add our
237:20 - radial gradient. So I'm going to go ahead
and type radio dash gradient,
237:23 - just like that. And now what we can do is
specify a certain amount of colors. So for
237:27 - example, I'm just going to start out with
red and blue. Now if we refresh the page,
237:30 - you can see it starts off red, and ends and
blue. But we can actually add more than two
237:32 - colors, just like with our, our linear gradient
there, what we can actually do is go ahead
237:36 - and type in let's For example, let's just
say green as an example. Now if we refresh
237:42 - the page, you can see that we've added a third
color. Now, if we wanted to change the proportions,
237:47 - so for example, let's pretend that this blue
is taking up too much space, we don't want
237:53 - that much, we can actually specify how much
we want of each. So let's change the proportions,
237:58 - what we can do is go ahead and add percentages.
So what I'm going to do first is go and specify
238:07 - what I want here. Now one thing to note is
that these have to be in order, you have to
238:11 - have the minimum percentage, or the smallest
percentage at the start, and then the largest
238:15 - at the finish. So I'm going to go ahead and
start off with something small, like 20%,
238:22 - then I'm going to have let's say 40%, blue,
and 55% green. So now if I go ahead and refresh
238:29 - the page, you can see that there is a lot
more green and a lot less blue, and red. So
238:41 - the final thing I want to cover for radial
gradients is the shape. Now you can actually
238:45 - specify the shape that you want. Now right
now I have an ellipse or sort of oval shape,
238:50 - we can actually change it, all we have to
do is type the name of the shape. Now there
238:54 - are two values, you can put here ellipse,
which is the default, and circle, I'm going
239:00 - to go ahead and type circle. Now if I go ahead
and refresh, you can see that this is in a
239:10 - much more circular shape, rather than the
previous oval. And although it's not a perfect
239:14 - circle, obviously, our proportions aren't
going to change what it looks like. Alright,
239:17 - so that's pretty much it for gradients. There's
quite a lot to learn about these. And there's
239:23 - a lot more features that you can cover. But
for now, I think this is great. Now what I'm
239:27 - going to do is go ahead and just create another
gradient, another linear gradient right under
239:32 - this one, just so you can see what it looks
like. So for example, I'm going to go ahead,
239:37 - and maybe let's just go for the body background
for now, I'm going to go ahead and actually
239:48 - add a linear gradient gradient here. And I'm
going to say, let's just say to bottom, because
239:56 - again, we wanted this kind of stretch from
top to bottom. So now what we're going to
240:01 - do is start off very strong. So we're going
to have our main RGBA color, or RGB, whoops,
240:08 - our main color here. So I'm going to copy
this. So this is going to be a fully, fully
240:15 - visible color, starting from the top, and
then we're going to end with a much less visible
240:23 - color. So there you go. Now let's go ahead
and refresh the page. And you can see that
240:28 - maybe there's a little bit of an error there.
Oh, yeah, forgot to spell it. There we go.
240:35 - Now we can go ahead and refresh. And you can
see it's still not working so much errors,
240:38 - you're probably Yep, forgot the got the parentheses
there. Just make sure that you're doing this,
240:44 - right, because sometimes you can make some
silly errors. So for example, if you look
240:51 - here, we were actually we were missing a bracket.
So now if we go ahead and refresh, there we
240:59 - go. It's a lot better now. So we start off
with a nice, fully visible color, and we end
241:07 - off with a less visible color. Alright, so
there we go. That's pretty much it for gradients,
241:12 - you can go ahead and download this file from
the project, you can go ahead and look at
241:15 - how everything works here, mess around with
it, see what you can do, because there is
241:19 - a lot to gradients and although they're not
used everyday, they're still very useful tools,
241:22 - and they can really help you out in your web
development careers. Alright, let's move on.
241:26 - just like that. And now what we can do is
specify a certain amount of colors. So for
241:32 - example, I'm just going to start out with
red and blue. Now if we refresh the page,
241:37 - you can see it starts off red, and ends and
blue. But we can actually add more than two
241:43 - colors, just like with our, our linear gradient
there, what we can actually do is go ahead
241:47 - and type in let's For example, let's just
say green as an example. Now if we refresh
241:57 - the page, you can see that we've added a third
color. Now, if we wanted to change the proportions,
242:02 - so for example, let's pretend that this blue
is taking up too much space, we don't want
242:06 - that much, we can actually specify how much
we want of each. So let's change the proportions,
242:12 - what we can do is go ahead and add percentages.
So what I'm going to do first is go and specify
242:18 - what I want here. Now one thing to note is
that these have to be in order, you have to
242:28 - have the minimum percentage, or the smallest
percentage at the start, and then the largest
242:37 - at the finish. So I'm going to 
go ahead and start off with something small,
242:47 - like 20%, then I'm going to have let's say
40%, blue, and 55% green. So now if I go ahead
242:57 - and refresh the page, you can see that there
is a lot more green and a lot less blue, and
243:04 - red. So the final thing I want to cover for
radial gradients is the shape. Now you can
243:10 - actually specify the shape that you want.
Now right now I have an ellipse or sort of
243:21 - oval shape, we can actually change it, all
we have to do is type the name of the shape.
243:27 - Now there are two values, you can put here
ellipse, which is the default, and circle,
243:38 - I'm going to go ahead and type circle. Now
if I go ahead and refresh, you can see that
243:46 - this is in a much more circular shape, rather
than the previous oval. And although it's
243:52 - not a perfect circle, obviously, our proportions
aren't going to change what it looks like.
243:57 - Alright, so that's pretty much it for gradients.
There's quite a lot to learn about these.
244:01 - And there's a lot more features that you can
cover. But for now, I think this is great.
244:08 - Now what I'm going to do is go ahead and just
create another gradient, another linear gradient
244:16 - right under this one, just so you can see
what it looks like. So for example, I'm going
244:24 - to go ahead, and maybe let's just go for the
body background for now, I'm going to go ahead
244:31 - and actually add a linear gradient gradient
here. And I'm going to say, let's just say
244:35 - to bottom, because again, we wanted this kind
of stretch from top to bottom. So now what
244:39 - we're going to do is start off very strong.
So we're going to have our main RGBA color,
244:43 - or RGB, whoops, our main color here. So I'm
going to copy this. So this is going to be
244:50 - a fully, fully visible color, starting from
the top, and then we're going to end with
244:56 - a much less visible color. So there you go.
Now let's go ahead and refresh the page. And
245:02 - you can see that maybe there's a little bit
of an error there. Oh, yeah, forgot to spell
245:06 - it. There we go. Now we can go ahead and refresh.
And you can see it's still not working so
245:11 - much errors, you're probably Yep, forgot the
got the parentheses there. Just make sure
245:14 - that you're doing this, right, because sometimes
you can make some silly errors. So for example,
245:18 - if you look here, we were actually we were
missing a bracket. So now if we go ahead and
245:23 - refresh, there we go. It's a lot better now.
So we start off with a nice, fully visible
245:27 - color, and we end off with a less visible
color. Alright, so there we go. That's pretty
245:31 - much it for gradients, you can go ahead and
download this file from the project, you can
245:35 - go ahead and look at how everything works
here, mess around with it, see what you can
245:42 - do, because there is a lot to gradients and
although they're not used everyday, they're
245:47 - still very useful tools, and they can really
help you out in your web development careers.
245:51 - Alright, let's move on.
245:52 - So in this video, we're going to be talking
about some of the different types of units
245:56 - in CSS. So so far, we've been working with
some basic coloring techniques, we've learned
246:01 - about selectors, and then different properties.
And then we've learned about some of these
246:05 - different values, but we haven't actually
learned what all of these different things
246:10 - mean this this PX this percentage, and we
don't actually know how they work. So what
246:13 - I'm going to be doing today is talking about
some of the different types of units and how
246:21 - you can identify which one to use. So first
thing I want to talk about is the difference
246:25 - between the two types of units which are absolute
units, and rarely have units. So firstly,
246:29 - we have to talk about some of the units we've
already been using, for example, pixels. Now
246:34 - pixels is a little bit special, I'll explain
you. I'll explain it to you in just a second.
246:37 - But pretty much the commonly used absolute
units are things like centimeters, millimeters
246:41 - and inches, which are absolute, they it's
not dependent on anything else. If you set
246:46 - it as one inch, it's going to be one inch
long, no matter if you're doing it on a phone,
246:48 - or an ultra wide TV. So that's what absolute
units are, they aren't affected by anything
246:52 - around them. The second group are relative
units. And these are a little bit different.
246:57 - Relative units are usually dependent on something.
So for example, our percentage unit here is
247:03 - dependent on the parent elements while unit.
So for example, if this service image here
247:06 - or here, has a width of 70%, that means that
the parent element of this service image or
247:10 - this service image right here, which in this
case is our body, take 70% of its width of
247:16 - its total width. So the whole way through
of the body is 100%. And 70% is going to be
247:21 - somewhere around here, because that's what
we set it as now notice that when I start
247:26 - resizing this, you can see that it still takes
up 70%. And obviously, right now it doesn't
247:32 - work because I haven't refreshed the page.
But you can see, no matter how small I make
247:36 - it, it's only going to take up 70% of the
total body width. So this is really good for
247:42 - something like a responsive design. Because
what happens is when you're using absolute
247:44 - units in a responsive design, let's say you
set this width as 200 pixels on a phone, it's
247:49 - going to appear very large, whereas on an
ultra wide TV, it's going to appear too small.
247:56 - So using something like percentages would
be very useful, because then you could resize
248:00 - your window here, however you like it and
still have that look that you want. So that's
248:06 - pretty much it for percentages. But there's
also a lot of different relative values that
248:10 - we can use. And I'm going to go through all
of these in just a second. But the first thing
248:17 - I want to talk about is this special unit,
which is pixels. Now pixels is a little bit
248:21 - different. Now, although it is considered
an absolute unit, it is actually relatively
248:24 - scale based on what device you're on. So if
you don't already know your screen right now
248:27 - that you're watching this video on is made
up of a bunch of little tiny pixels. Now there's
248:35 - this concept in computing, it's called DPI,
it's pretty much used to calculate the resolution
248:39 - of your screen. And depending on the number
of pixels you have, the resolution is going
248:43 - to change. So on low DPI, tablets or things
like that, anything that has a very low resolution.
248:48 - So for example, if you're on YouTube, and
you've changed your resolution to four ADP,
248:52 - what's going to happen is then the video is
going to sort of adjust how many pixels are
248:58 - in that video. Now, I'm not going to get too
deep into how pixels are changed and things
249:04 - like that. But pretty much what happens is
on high resolution devices, these pixels aren't
249:10 - going to appear the same as on low resolution
devices, because obviously, this is taking
249:14 - up only 400 pixels of height. And if you have
an ultra high display a very high definition
249:17 - TV 400 pixels is only going to be about half
of what it is here. So what actually happens
249:22 - in this is on these high DPI displays, each
pixel in this unit is actually taking up multiple
249:28 - pixels relative to the resolution of the display.
So for example, on a TV, every pixel, according
249:37 - to this height would actually take up something
like four pixels. So this is to give it that
249:41 - absolute illusion. Now although it is in theory,
or at its core relative, when you're when
249:49 - you're actually using it, it is an absolute
value. So that's just one thing you need to
249:54 - keep in mind. Now don't worry too much about
pixels, you know, redefinitions, things like
249:58 - that. But we're not focusing on that. For
now, we're just focusing on how we can use
250:05 - different values for different things. So
let's go ahead and cover some of the different
250:11 - units that we can use for absolute unit. So
the easiest way to do this is through changing
250:18 - the size of the text. Now again, we're going
to cover this much later in this section.
250:24 - So don't worry about that too much. So the
first one we can use is centimeters. So I
250:30 - can see the font size is two centimeters.
Now, if I refresh the page, you can see that
250:34 - it is a lot bigger. Remember, if you actually
took a ruler and measured the font size, you
250:40 - would get two centimeters. There's also many
more such as millimeters and inches and pretty
250:44 - much everything in between. So you can see
that's also a lot smaller. So we have our
250:48 - standard pixels here, but there's actually
a few more that we can use. Now they're not
250:52 - very they're not used that commonly so I'm
not really going to go over them that much.
250:59 - But there Is he there, there are some other
units that you can use instead of pixels that
251:05 - kind of follow that same formula. So there
is something called PT, which are points,
251:08 - and it's a little bit bigger than a pixel.
So if I go ahead and refresh that, you can
251:12 - see that that actually gets a little bit taller.
Go ahead and change that back to pixels, you
251:17 - can see that does get quite a little bit taller.
And there's also PC. Again, it's quite similar
251:25 - to px and PT. But in this case, a PC is a
lot bigger. So you can see how much bigger
251:37 - it actually is. Actually, one PC is 12 points.
So that's just shows you how much bigger it
251:43 - is. So there we go. That's just a little bit
of some of the other absolute values. Now
251:53 - let's cover relative values. So the first
one, the first one that we actually already
251:58 - covered was percentage. So we already looked
at, you know, our percent symbol over here,
252:04 - which pretty much takes up, again, a certain
size or whatever value of its parent element.
252:10 - But there's actually many more that I want
to cover. The first one I'm going to look
252:16 - at is E M. So pretty much what if what I do
here is it's going to represent the size relative
252:23 - to the current standard font size. So let's
just pretend that we know that this font size
252:28 - is value, let's just call it F, what's going
to happen is if we set the body font size
252:34 - to two, em, you're going to double everything
or double it based on F, which is our font
252:39 - size. So if I set to em here, just like that,
and go ahead and refresh the page, you can
252:49 - see that all of the text is double the standard
font size. So again, this is completely relative
252:55 - to the standard font size. So I'm actually
going to go ahead and erase this here and
253:01 - start using style tags. Instead, I feel like
it's just going to be a lot easier to you
253:06 - know, move around and easy, easily move that
around. So now we've covered percent an EM
253:10 - so those are the two main types of relative
units. But there's actually two more that
253:16 - I want to cover, which is view width and view
height. So in web design, and in development,
253:21 - in general, there's this thing called the
viewport, which is pretty much the dimensions
253:26 - of whatever you're viewing it on. So in this
case, our viewport would be the bodies width,
253:30 - and then the bodies height. So VW and VH,
view, view width and view height actually
253:34 - allow you to work with
253:35 - So in this video, we're going to be talking
about some of the different types of units
253:42 - in CSS. So so far, we've been working with
some basic coloring techniques, we've learned
253:51 - about selectors, and then different properties.
And then we've learned about some of these
253:55 - different values, but we haven't actually
learned what all of these different things
253:58 - mean this this PX this percentage, and we
don't actually know how they work. So what
254:00 - I'm going to be doing today is talking about
some of the different types of units and how
254:04 - you can identify which one to use. So first
thing I want to talk about is the difference
254:11 - between the two types of units which are absolute
units, and rarely have units. So firstly,
254:15 - we have to talk about some of the units we've
already been using, for example, pixels. Now
254:20 - pixels is a little bit special, I'll explain
you. I'll explain it to you in just a second.
254:23 - But pretty much the commonly used absolute
units are things like centimeters, millimeters
254:26 - and inches, which are absolute, they it's
not dependent on anything else. If you set
254:27 - it as one inch, it's going to be one inch
long, no matter if you're doing it on a phone,
254:31 - or an ultra wide TV. So that's what absolute
units are, they aren't affected by anything
254:36 - around them. The second group are relative
units. And these are a little bit different.
254:40 - Relative units are usually dependent on something.
So for example, our percentage unit here is
254:44 - dependent on the parent elements while unit.
So for example, if this service image here
254:48 - or here, has a width of 70%, that means that
the parent element of this service image or
254:53 - this service image right here, which in this
case is our body, take 70% of its width of
255:01 - its total width. So the whole way through
of the body is 100%. And 70% is going to be
255:10 - somewhere around here, because that's what
we set it as now notice that when I start
255:17 - resizing this, you can see that it still takes
up 70%. And obviously, right now it doesn't
255:22 - work because I haven't refreshed the page.
But you can see, no matter how small I make
255:28 - it, it's only going to take up 70% of the
total body width. So this is really good for
255:39 - something like a responsive design. Because
what happens is when you're using absolute
255:43 - units in a responsive design, let's say you
set this width as 200 pixels on a phone, it's
255:49 - going to appear very large, whereas on an
ultra wide TV, it's going to appear too small.
255:54 - So using something like percentages would
be very useful, because then you could resize
255:58 - your window here, however you like it and
still have that look that you want. So that's
256:03 - pretty much it for percentages. But there's
also a lot of different relative values that
256:06 - we can use. And I'm going to go through all
of these in just a second. But the first thing
256:14 - I want to talk about is this special unit,
which is pixels. Now pixels is a little bit
256:18 - different. Now, although it is considered
an absolute unit, it is actually relatively
256:22 - scale based on what device you're on. So if
you don't already know your screen right now
256:26 - that you're watching this video on is made
up of a bunch of little tiny pixels. Now there's
256:32 - this concept in computing, it's called DPI,
it's pretty much used to calculate the resolution
256:34 - of your screen. And depending on the number
of pixels you have, the resolution is going
256:37 - to change. So on low DPI, tablets or things
like that, anything that has a very low resolution.
256:42 - So for example, if you're on YouTube, and
you've changed your resolution to four ADP,
256:44 - what's going to happen is then the video is
going to sort of adjust how many pixels are
256:50 - in that video. Now, I'm not going to get too
deep into how pixels are changed and things
256:54 - like that. But pretty much what happens is
on high resolution devices, these pixels aren't
256:57 - going to appear the same as on low resolution
devices, because obviously, this is taking
256:59 - up only 400 pixels of height. And if you have
an ultra high display a very high definition
257:02 - TV 400 pixels is only going to be about half
of what it is here. So what actually happens
257:06 - in this is on these high DPI displays, each
pixel in this unit is actually taking up multiple
257:11 - pixels relative to the resolution of the display.
So for example, on a TV, every pixel, according
257:17 - to this height would actually take up something
like four pixels. So this is to give it that
257:23 - absolute illusion. Now although it is in theory,
or at its core relative, when you're when
257:27 - you're actually using it, it is an absolute
value. So that's just one thing you need to
257:32 - keep in mind. Now don't worry too much about
pixels, you know, redefinitions, things like
257:37 - that. But we're not focusing on that. For
now, we're just focusing on how we can use
257:43 - different values for different things. So
let's go ahead and cover some of the different
257:48 - units that we can use for absolute unit. So
the easiest way to do this is through changing
257:56 - the size of the text. Now again, we're going
to cover this much later in this section.
258:00 - So don't worry about that too much. So the
first one we can use is centimeters. So I
258:02 - can see the font size is two centimeters.
Now, if I refresh the page, you can see that
258:04 - it is a lot bigger. Remember, if you actually
took a ruler and measured the font size, you
258:07 - would get two centimeters. There's also many
more such as millimeters and inches and pretty
258:10 - much everything in between. So you can see
that's also a lot smaller. So we have our
258:14 - standard pixels here, but there's actually
a few more that we can use. Now they're not
258:19 - very they're not used that commonly so I'm
not really going to go over them that much.
258:24 - But there Is he there, there are some other
units that you can use instead of pixels that
258:33 - kind of follow that same formula. So there
is something called PT, which are points,
258:38 - and it's a little bit bigger than a pixel.
So if I go ahead and refresh that, you can
258:40 - see that that actually gets a little bit taller.
Go ahead and change that back to pixels, you
258:43 - can see that does get quite a little bit taller.
And there's also PC. Again, it's quite similar
258:48 - to px and PT. But in this case, a PC is a
lot bigger. So you can see how much bigger
258:54 - it actually is. Actually, one PC is 12 points.
So that's just shows you how much bigger it
258:58 - is. So there we go. That's just a little bit
of some of the other absolute values. Now
259:02 - let's cover relative values. So the first
one, the first one that we actually already
259:07 - covered was percentage. So we already looked
at, you know, our percent symbol over here,
259:10 - which pretty much takes up, again, a certain
size or whatever value of its parent element.
259:15 - But there's actually many more that I want
to cover. The first one I'm going to look
259:20 - at is E M. So pretty much what if what I do
here is it's going to represent the size relative
259:27 - to the current standard font size. So let's
just pretend that we know that this font size
259:32 - is value, let's just call it F, what's going
to happen is if we set the body font size
259:37 - to two, em, you're going to double everything
or double it based on F, which is our font
259:42 - size. So if I set to em here, just like that,
and go ahead and refresh the page, you can
259:48 - see that all of the text is double the standard
font size. So again, this is completely relative
259:56 - to the standard font size. So I'm actually
going to go ahead and erase this here and
259:58 - start using style tags. Instead, I feel like
it's just going to be a lot easier to you
260:10 - know, move around and easy, easily move that
around. So now we've covered percent an EM
260:15 - so those are the two main types of relative
units. But there's actually two more that
260:19 - I want to cover, which is view width and view
height. So in web design, and in development,
260:26 - in general, there's this thing called the
viewport, which is pretty much the dimensions
260:30 - of whatever you're viewing it on. So in this
case, our viewport would be the bodies width,
260:35 - and then the bodies height. So VW and VH,
view, view width and view height actually
260:39 - allow you to work with
260:40 - work with this viewport in a very easy way.
So one v w or v h is equal to 1% of the total
260:47 - body width or body height. So remember, this
isn't based on the parent element, this is
260:52 - based on the total viewport, this could be
the HTML document the body tag, it depends
260:57 - on what you're viewing it on. So for example,
if I go ahead and change the width here to
261:03 - 70 v w, this is pretty much equivalent to
70 times 1% of the total viewport. And obviously,
261:07 - if I go ahead and refresh the page, you can
see it gets just a little bit bigger because
261:12 - there's actually a viewport itself is bigger
than the body tag, which is the parent element.
261:16 - Now we'll talk about that later in the course,
because it's quite advanced. But what you
261:24 - can see here is that right here, it doesn't
actually affect it because the body is almost
261:33 - completely equivalent to the viewport. But
for example, if we wanted to set the font
261:39 - size of one of these TDs to 70% would be which
we, which would be 70% of this T row, it would
261:47 - actually look completely different from 70
v w, which is 70% of the total viewport. So
261:52 - that's just one thing I want to keep in mind,
you can also set more than 100%, it doesn't
261:58 - have to be completely set in stone. So if
I actually wanted to say VH. So 400 times
262:03 - 1% of the view height, what would happen here
is that this image would become four times
262:11 - the total height of the viewport. So that's
just also one thing to keep in mind. So I'm
262:20 - going to go ahead and change this back to
pixels. We'll just keep that with the same
262:25 - because it doesn't really make that much of
an impact. Okay, so there we go. Those are
262:31 - some of the different units in CSS, I've actually
attached a little reference sheet that you
262:36 - can use, you can refer to, to this to this
lecture, you can go ahead click on it. And
262:40 - if you want to revise any of these you can,
but just a fair warning, you're not really
262:44 - going to be using a lot of these units, the
main ones you're going to use, you're most
262:52 - likely pixels and percent. But for some cases,
you're going to want to use some other units.
262:57 - So although absolute units are still useful
in some cases, so for example, if you want
263:01 - a very specific dimensions or viewport on
your screen, so for example, if you only want
263:06 - users to access something on the phone, then
or a very specific phone, then you can go
263:13 - ahead and use pixels because it's going to
look the same no matter what phone people
263:18 - use, because it's all going to be the same.
The only problem is is when people start using
263:23 - different devices using absolute values are
going to look very different based on On what
263:27 - device you're using. And that's why you should
kind of stick to using these, these relative
263:33 - units instead of using things like pixels,
centimeters and millimeters. So things like
263:36 - em percent view width and view height would
be very, very useful, because then you can
263:40 - scale it based on whatever device you want.
So for example, it's going to look the same,
263:45 - or at least this width, whether you're using
it on a phone, or a desktop computer, because
263:47 - again, it takes up 70% of the width no matter
what it is. So that's just some of the basics
263:52 - about some of these units. Now, like I said,
you don't need to know these by heart, you
263:57 - can just go ahead and keep them at the back
of your head. And once we start using them
264:06 - and start using them in our, you know, font
layout, things like that, we'll actually start
264:10 - using these units a lot more, and they will
make a lot more sense. So this is just a quick
264:15 - introduction to these units and why we should
use them. And you're not supposed to be going
264:19 - ahead and you know, completely mastering every
single one by now. Alright, let's move on.
264:24 - work with this viewport in a very easy way.
So one v w or v h is equal to 1% of the total
264:29 - body width or body height. So remember, this
isn't based on the parent element, this is
264:33 - based on the total viewport, this could be
the HTML document the body tag, it depends
264:39 - on what you're viewing it on. So for example,
if I go ahead and change the width here to
264:43 - 70 v w, this is pretty much equivalent to
70 times 1% of the total viewport. And obviously,
264:49 - if I go ahead and refresh the page, you can
see it gets just a little bit bigger because
264:54 - there's actually a viewport itself is bigger
than the body tag, which is the parent element.
265:02 - Now we'll talk about that later in the course,
because it's quite advanced. But what you
265:13 - can see here is that right here, it doesn't
actually affect it because the body is almost
265:18 - completely equivalent to the viewport. But
for example, if we wanted to set the font
265:24 - size of one of these TDs to 70% would be which
we, which would be 70% of this T row, it would
265:31 - actually look completely different from 70
v w, which is 70% of the total viewport. So
265:36 - that's just one thing I want to keep in mind,
you can also set more than 100%, it doesn't
265:39 - have to be completely set in stone. So if
I actually wanted to say VH. So 400 times
265:44 - 1% of the view height, what would happen here
is that this image would become four times
265:50 - the total height of the viewport. So that's
just also one thing to keep in mind. So I'm
265:57 - going to go ahead and change this back to
pixels. We'll just keep that with the same
265:59 - because it doesn't really make that much of
an impact. Okay, so there we go. Those are
266:04 - some of the different units in CSS, I've actually
attached a little reference sheet that you
266:09 - can use, you can refer to, to this to this
lecture, you can go ahead click on it. And
266:14 - if you want to revise any of these you can,
but just a fair warning, you're not really
266:20 - going to be using a lot of these units, the
main ones you're going to use, you're most
266:26 - likely pixels and percent. But for some cases,
you're going to want to use some other units.
266:31 - So although absolute units are still useful
in some cases, so for example, if you want
266:38 - a very specific dimensions or viewport on
your screen, so for example, if you only want
266:42 - users to access something on the phone, then
or a very specific phone, then you can go
266:47 - ahead and use pixels because it's going to
look the same no matter what phone people
266:57 - use, because it's all going to be the same.
The only problem is is when people start using
267:05 - different devices using absolute values are
going to look very different based on On what
267:10 - device you're using. And that's why you should
kind of stick to using these, these relative
267:15 - units instead of using things like pixels,
centimeters and millimeters. So things like
267:21 - em percent view width and view height would
be very, very useful, because then you can
267:27 - scale it based on whatever device you want.
So for example, it's going to look the same,
267:32 - or at least this width, whether you're using
it on a phone, or a desktop computer, because
267:39 - again, it takes up 70% of the width no matter
what it is. So that's just some of the basics
267:46 - about some of these units. Now, like I said,
you don't need to know these by heart, you
267:51 - can just go ahead and keep them at the back
of your head. And once we start using them
267:57 - and start using them in our, you know, font
layout, things like that, we'll actually start
268:03 - using these units a lot more, and they will
make a lot more sense. So this is just a quick
268:09 - introduction to these units and why we should
use them. And you're not supposed to be going
268:13 - ahead and you know, completely mastering every
single one by now. Alright, let's move on.
268:17 - So the next few videos are going to be focused
on font and text manipulation. So we're going
268:30 - to be working with actually changing how this
text looks. First thing I want to talk about
268:34 - is there's actually two parts to this section,
text manipulation and font manipulation. And
268:38 - although they sound like the same thing, they're
actually very different. So the first part
268:42 - in this video, we're going to be covering
text manipulation. Now, there's not that much
268:45 - to look at. But pretty much the difference
between the two is that text manipulation
268:51 - is looking at things that you can change no
matter the font. So for example, something
268:56 - like sizing would not apply, because the size
is going to be based obviously on the font
269:01 - itself. So basically, things like underlining
or capitalization are going to be completely
269:04 - regardless of the font, you can change them
no matter what they do. But things like bolding
269:10 - and things like size, bolding, things like
that, they are completely dependent on the
269:15 - font, because again, the font decides how
it how the font itself is going to look. So
269:20 - it decides the size, the bolding, and just
the overall style. So the first part in this
269:27 - video, we're going to be covering text manipulation.
And in the next few videos, we're going to
269:34 - be looking at actual font manipulation. So
things like external fonts, which is probably
269:37 - the most exciting part of this course, and
things like weight and bolding. Alright, let's
269:41 - get started. So the first two things I want
to cover are text decoration and text transform.
269:47 - So these are properties that are going to
be relating to the style of the text. Now
269:55 - I know I just said that fonts. And mostly
styling is dependent on the font. But in this
270:01 - case, these these properties don't actually
rely on the font at all. So let's get started.
270:11 - So the first thing I'm going to talk about
is text decoration. So although it sounds
270:14 - like you can do a bunch of cool things with
this, the only real thing that you can do
270:21 - is change the lining of the text. So we're
going to go ahead and work with this anchor
270:28 - tag here. So I'm going to go ahead and add
a cloud, there's already a class there, actually,
270:32 - we can just go ahead and select it. So I'm
going to go dot link, like that. And now what
270:38 - I can actually do is change the lining of
this right here. So by default, anchor tags
270:43 - have a text decoration of underline, there's
actually three more properties that we can
270:46 - use. So that the property to use it, it's
called text dash decoration, it's pretty obvious.
270:53 - Now the first one I'm going to look at is
none. So this completely removes the line
270:58 - from our links, they're completely gone, you
don't have them anymore. The next one, which
271:07 - is the one by default is underlined, like
that. So that's our normal link, then you
271:11 - have line through which is line dash through.
And it's pretty obvious what that does just
271:15 - put the line straight through. And then of
course, there's the overlying which is the
271:20 - line on the top. So there we go. Now we have
a line on the top. Now, although you won't
271:25 - see the the two that we just showed line through
and overlap very commonly, it is very common
271:30 - to see underline and text decoration none
applied. Because sometimes I'm sure you've
271:33 - seen this in websites all over the place,
you can hover over links, and they may be
271:37 - changed color. Again, we'll be learning how
to do that in this course. But you know, they
271:40 - might change color and do all sorts of things,
but you usually don't see them with an underline.
271:46 - So that's where this property comes into play.
So I'm just going to change this back to underline,
271:50 - just to make things a little interesting.
Next thing I'm going to do is go ahead and
271:53 - cover the next property, which in this case
is text transform. So you can see that we
272:00 - have a bunch of text here. And let's say maybe
we're working as a freelancer and our client
272:04 - wants us to capitalize all of our text. How
are we going to do that? Now obviously, we're
272:10 - not going to go through and capitalize every
single individual word that's going to basically
272:12 - be suicide. Although it is possible, it could
take a lot of time. So the easiest way to
272:16 - do it is using the text transform property.
So I'm just going to go ahead and do this
272:22 - on the whole body. For now, the property to
this is text dash transform, pretty easy to
272:28 - memorize, or learn these because they don't
really require any weird memorization tactics.
272:33 - So now what you can do is go ahead and add
our value. So there are three different values
272:38 - that you can use for this uppercase, lowercase
and capitalize. So because we want to capitalize
272:39 - everything, we can go ahead and type capitalize.
Now if we refresh the page, you can see every
272:42 - single word is capitalized without us having
having to actually change the text. You can
272:46 - also go ahead and use the other two, which
are lowercase and uppercase.
272:51 - So the next few videos are going to be focused
on font and text manipulation. So we're going
272:55 - to be working with actually changing how this
text looks. First thing I want to talk about
273:03 - is there's actually two parts to this section,
text manipulation and font manipulation. And
273:08 - although they sound like the same thing, they're
actually very different. So the first part
273:14 - in this video, we're going to be covering
text manipulation. Now, there's not that much
273:17 - to look at. But pretty much the difference
between the two is that text manipulation
273:19 - is looking at things that you can change no
matter the font. So for example, something
273:26 - like sizing would not apply, because the size
is going to be based obviously on the font
273:37 - itself. So basically, things like underlining
or capitalization are going to be completely
273:40 - regardless of the font, you can change them
no matter what they do. But things like bolding
273:43 - and things like size, bolding, things like
that, they are completely dependent on the
273:45 - font, because again, the font decides how
it how the font itself is going to look. So
273:49 - it decides the size, the bolding, and just
the overall style. So the first part in this
273:53 - video, we're going to be covering text manipulation.
And in the next few videos, we're going to
273:57 - be looking at actual font manipulation. So
things like external fonts, which is probably
274:00 - the most exciting part of this course, and
things like weight and bolding. Alright, let's
274:01 - get started. So the first two things I want
to cover are text decoration and text transform.
274:06 - So these are properties that are going to
be relating to the style of the text. Now
274:09 - I know I just said that fonts. And mostly
styling is dependent on the font. But in this
274:14 - case, these these properties don't actually
rely on the font at all. So let's get started.
274:21 - So the first thing I'm going to talk about
is text decoration. So although it sounds
274:24 - like you can do a bunch of cool things with
this, the only real thing that you can do
274:30 - is change the lining of the text. So we're
going to go ahead and work with this anchor
274:37 - tag here. So I'm going to go ahead and add
a cloud, there's already a class there, actually,
274:47 - we can just go ahead and select it. So I'm
going to go dot link, like that. And now what
275:00 - I can actually do is change the lining of
this right here. So by default, anchor tags
275:08 - have a text decoration of underline, there's
actually three more properties that we can
275:14 - use. So that the property to use it, it's
called text dash decoration, it's pretty obvious.
275:16 - Now the first one I'm going to look at is
none. So this completely removes the line
275:20 - from our links, they're completely gone, you
don't have them anymore. The next one, which
275:25 - is the one by default is underlined, like
that. So that's our normal link, then you
275:31 - have line through which is line dash through.
And it's pretty obvious what that does just
275:37 - put the line straight through. And then of
course, there's the overlying which is the
275:41 - line on the top. So there we go. Now we have
a line on the top. Now, although you won't
275:50 - see the the two that we just showed line through
and overlap very commonly, it is very common
275:55 - to see underline and text decoration none
applied. Because sometimes I'm sure you've
276:00 - seen this in websites all over the place,
you can hover over links, and they may be
276:05 - changed color. Again, we'll be learning how
to do that in this course. But you know, they
276:10 - might change color and do all sorts of things,
but you usually don't see them with an underline.
276:16 - So that's where this property comes into play.
So I'm just going to change this back to underline,
276:21 - just to make things a little interesting.
Next thing I'm going to do is go ahead and
276:27 - cover the next property, which in this case
is text transform. So you can see that we
276:34 - have a bunch of text here. And let's say maybe
we're working as a freelancer and our client
276:36 - wants us to capitalize all of our text. How
are we going to do that? Now obviously, we're
276:39 - not going to go through and capitalize every
single individual word that's going to basically
276:43 - be suicide. Although it is possible, it could
take a lot of time. So the easiest way to
276:48 - do it is using the text transform property.
So I'm just going to go ahead and do this
276:56 - on the whole body. For now, the property to
this is text dash transform, pretty easy to
277:04 - memorize, or learn these because they don't
really require any weird memorization tactics.
277:08 - So now what you can do is go ahead and add
our value. So there are three different values
277:16 - that you can use for this uppercase, lowercase
and capitalize. So because we want to capitalize
277:20 - everything, we can go ahead and type capitalize.
Now if we refresh the page, you can see every
277:25 - single word is capitalized without us having
having to actually change the text. You can
277:28 - also go ahead and use the other two, which
are lowercase and uppercase.
277:31 - And that will obviously put everything in
uppercase for you. But now you're starting
277:35 - to see a little bit about why these are text
manipulation and not font manipulation. Again,
277:41 - it doesn't matter what font you're using,
whether you're using some weird symbol font,
277:46 - or Times New Roman, you can always use these
to capitalize it, no matter what the font
277:50 - is. On top of that, you can also move around
these lines, it's not dependent on the font
277:55 - at all. So that's just a little bit about
our text manipulation properties. So the next
278:01 - feature I want to cover is text align. So
this is a little bit different from the other
278:07 - two that we've covered. Because it's not really
focused on the styling or decoration of our
278:12 - text. Instead, it's going to be focused on
the justification or alignment of it. So if
278:17 - you've ever used any text editor, for example,
Microsoft Word, or Google Docs, anything like
278:22 - that, you'll know that you can justify your
text and align it to your site. So there are
278:27 - four main ones that are included in CSS left,
right, center and justify. So I'm going to
278:31 - breeze through the quick the first three ones,
because it's quite easy to use. But then the
278:39 - last one I'm going to talk about a little
bit in more detail. So in order to achieve
278:46 - this, you can go ahead and add text align
property. And here, I'm just going to go center
278:49 - as an example. And you can see that now everything
is aligned. So the list items are a little
278:55 - bit weird, they don't actually move the decoration
to the center, when you align it to the center,
279:07 - but other than that all of the text is now
aligned to the center. So now let's talk about
279:13 - justify. Now we're not going to go through
left and right, because we already know that
279:19 - but what justify actually does, I'm just gonna
show you here is pretty much it takes all
279:25 - of the text, and it kind of matches it. So
it's all fit in the same way, if you if it
279:32 - makes sense. So although it might not fit
everything, the same length, what happens
279:35 - is all of this text is now stretched out as
far as possible. So although you might not
279:36 - be able to see a direct difference, let's
just look at this paragraph here, we're going
279:39 - to just end off this property without changing
it, you can see that without the justify alignment,
279:43 - all of these are different. So what actually
what the justify actually does is it sets
279:51 - all of the lines to the same length. So I'm
going to go ahead and add that justify back.
279:56 - So you can see this used a lot in research
papers, and, you know, academic papers, essays,
280:01 - things like that. This justification is used
a lot. And although it's not very, it's not
280:07 - really used very commonly, it's still a very
good feature if you have big bodies of text,
280:13 - if you're trying to you know, make everything
look very streamlined. Alright, there we go.
280:15 - So those are the four or sorry, three different
types of text manipulation properties that
280:21 - you can use, and along with their respective
value. So I encourage you to go ahead and
280:24 - try this out on your own, you can do a lot
of things with these three values alone, you
280:29 - can really change how the page looks. Alright,
let's move on.
280:35 - And that will obviously put everything in
uppercase for you. But now you're starting
280:39 - to see a little bit about why these are text
manipulation and not font manipulation. Again,
280:43 - it doesn't matter what font you're using,
whether you're using some weird symbol font,
280:47 - or Times New Roman, you can always use these
to capitalize it, no matter what the font
280:52 - is. On top of that, you can also move around
these lines, it's not dependent on the font
281:00 - at all. So that's just a little bit about
our text manipulation properties. So the next
281:09 - feature I want to cover is text align. So
this is a little bit different from the other
281:15 - two that we've covered. Because it's not really
focused on the styling or decoration of our
281:20 - text. Instead, it's going to be focused on
the justification or alignment of it. So if
281:25 - you've ever used any text editor, for example,
Microsoft Word, or Google Docs, anything like
281:31 - that, you'll know that you can justify your
text and align it to your site. So there are
281:38 - four main ones that are included in CSS left,
right, center and justify. So I'm going to
281:43 - breeze through the quick the first three ones,
because it's quite easy to use. But then the
281:50 - last one I'm going to talk about a little
bit in more detail. So in order to achieve
281:57 - this, you can go ahead and add text align
property. And here, I'm just going to go center
281:59 - as an example. And you can see that now everything
is aligned. So the list items are a little
282:03 - bit weird, they don't actually move the decoration
to the center, when you align it to the center,
282:08 - but other than that all of the text is now
aligned to the center. So now let's talk about
282:15 - justify. Now we're not going to go through
left and right, because we already know that
282:19 - but what justify actually does, I'm just gonna
show you here is pretty much it takes all
282:23 - of the text, and it kind of matches it. So
it's all fit in the same way, if you if it
282:28 - makes sense. So although it might not fit
everything, the same length, what happens
282:31 - is all of this text is now stretched out as
far as possible. So although you might not
282:35 - be able to see a direct difference, let's
just look at this paragraph here, we're going
282:41 - to just end off this property without changing
it, you can see that without the justify alignment,
282:47 - all of these are different. So what actually
what the justify actually does is it sets
282:50 - all of the lines to the same length. So I'm
going to go ahead and add that justify back.
282:55 - So you can see this used a lot in research
papers, and, you know, academic papers, essays,
283:00 - things like that. This justification is used
a lot. And although it's not very, it's not
283:04 - really used very commonly, it's still a very
good feature if you have big bodies of text,
283:10 - if you're trying to you know, make everything
look very streamlined. Alright, there we go.
283:16 - So those are the four or sorry, three different
types of text manipulation properties that
283:20 - you can use, and along with their respective
value. So I encourage you to go ahead and
283:26 - try this out on your own, you can do a lot
of things with these three values alone, you
283:35 - can really change how the page looks. Alright,
let's move on.
283:41 - So in this video, we're going to be talking
about the other half of overall text manipulation.
283:44 - And in this case, we're going to be looking
at different font properties. So in this video,
283:49 - we're going to be looking at three font size,
font weight and font style. So first thing
283:54 - I want to look at is font size. So right now
we have our pretty standard text here, right.
284:00 - So I'm just actually going to go ahead and
erase our text transform from our previous
284:05 - video. So now we have our text here. And what
I want to do is change the size of this. The
284:09 - only problem is I want to use a responsive
design. So what I'm going to do is go ahead
284:12 - and first use our font size property. And
then I'm going to go ahead and say let's just
284:18 - say 1.25 em. So what happens here is make
this 25% more than the standard font size.
284:24 - Now you can see it's a little bit bigger,
but it's not as big as doing something like
284:30 - two n. So there we go. Now that we've done
that, we can also go ahead and actually use
284:35 - pixel values, if we wanted to 40 pixels for
example, the only problem is this is going
284:39 - to set everything consistently. So you can
see all of the sizes are the same, it doesn't
284:47 - matter if they're a header, or while it does
actually matter. But because in the CSS defined
284:56 - code, all of these headers actually have to
em but if we actually removed all of these,
285:02 - they would be the same. So using something
like two e n, would be great, because what
285:07 - actually happens is now everything stays consistent.
And it's also a relative unit. So that's always
285:12 - good, because it stays responsive. So there
we go. That's pretty much it for font size,
285:17 - I'm going to go ahead and actually change
this to one point 15 am, I think that's good.
285:25 - So there we go. That's the first one. Now
let's go ahead and talk about font weight.
285:32 - So this is a little bit more complicated.
So pretty much what font weight decides is
285:36 - the bolding of a text or a font. So the values
for this can range from zero, which is nothing
285:41 - all the way to? Well, pretty much infinity.
The only problem is, most fonts only support
285:44 - up to 800, or 900. Because, again, for each
value, there is a different bolding stage.
285:50 - So most fonts are only going to go up to maybe
100, or 900, some of them can go even higher.
285:56 - But in theory, you can make these values as
big as you want. The only problem is, it's
286:03 - not really going to show any change if you
make them very big. So there we go. That's
286:08 - pretty much it for font weight, let's go ahead
and start adding it to our website. So let's
286:13 - say I wanted to make our title a little bit
bolded. So I'm going to go ahead and say font
286:21 - dash weight. And now I'm going to go ahead
and specify a value. Let's go ahead and start
286:27 - with zero and see what happens, you can see
that nothing actually happens. But pretty
286:32 - much like I said before, most fonts only support
certain values. So for example, 100 would
286:38 - be a very specific kind of bolding, 200 300
400 and all the way up to as much as the font
286:44 - supports. Now usually, the convention for
this is you're supposed to go up in hundreds
286:51 - from 100. That's kind of like the minimum
supported font size. So if I go ahead and
286:59 - set 100. Here, you can see it's very thin.
And if I go ahead and set it as 800, which
287:05 - is usually the highest that you should go
realistically, this is kind of the standard
287:12 - for each one. So there you go, you can set
it to something like 600, which isn't very
287:21 - commonly seen, like I said, fonts only support
certain bolded ness, if that makes sense.
287:26 - But you can go ahead and play around with
this. And like I said, depending on the font,
287:31 - it's going to change what the text actually
looks like. So there we go. That's pretty
287:36 - much it for font weight, I'm going to go ahead
and actually just set this to 400, which is
287:42 - the standard font right there. So 400 is the
normal, it's like normal bolding, no bolding
287:44 - and don't make it very thin. So that's kind
of what it's the normal range. So there we
287:49 - go. That's it for font weight. Now let's go
ahead and look at font style. So just like
287:54 - font sizes for size and font weight is for
bolding font style is for italic sizing. So
288:00 - I'm going to go ahead and actually italicize
a small piece of text here. So let's just
288:05 - go ahead into this. And I'm going to take
this first part, and actually just cut it
288:11 - out. I'm going to create a span tag. So a
span tag is sort of an if you don't know it's
288:18 - an inline day. It's an inline container tag,
which allows you to contain a certain pieces
288:22 - of text without you know disrupting the flow
or moving them on to their own line. So I'm
288:28 - going to give it a class, I'm just going to
say italics, I guess that would work. So then
288:34 - I'm going to go ahead and use the class selector
italics. Open this up. Now we're going to
288:40 - go ahead and start working on adding our italicizing.
So what you can do for this is called font
288:45 - style. And although most of the selectors
these days are quite easy to remember, italics
288:50 - and font style don't usually go hand in hand.
So it might be a little hard to remember this
288:58 - one. So there's three different values they
can use for this normal, which is pretty much
289:04 - the same as setting the font weight is 400
doesn't do anything, or it actually will change
289:08 - it back to its normal state. Then you have
italic, which is to italicize it, and then
289:15 - you have oblique, which is a little bit more
italic size. So let's go ahead and just add
289:22 - the basic one. I'm gonna go and type metalic
here. Now if we refresh the page, you can
289:27 - see that where it is, there we go. It's right
there
289:32 - So in this video, we're going to be talking
about the other half of overall text manipulation.
289:40 - And in this case, we're going to be looking
at different font properties. So in this video,
289:46 - we're going to be looking at three font size,
font weight and font style. So first thing
289:54 - I want to look at is font size. So right now
we have our pretty standard text here, right.
290:02 - So I'm just actually going to go ahead and
erase our text transform from our previous
290:06 - video. So now we have our text here. And what
I want to do is change the size of this. The
290:11 - only problem is I want to use a responsive
design. So what I'm going to do is go ahead
290:19 - and first use our font size property. And
then I'm going to go ahead and say let's just
290:26 - say 1.25 em. So what happens here is make
this 25% more than the standard font size.
290:30 - Now you can see it's a little bit bigger,
but it's not as big as doing something like
290:38 - two n. So there we go. Now that we've done
that, we can also go ahead and actually use
290:42 - pixel values, if we wanted to 40 pixels for
example, the only problem is this is going
290:50 - to set everything consistently. So you can
see all of the sizes are the same, it doesn't
290:55 - matter if they're a header, or while it does
actually matter. But because in the CSS defined
290:56 - code, all of these headers actually have to
em but if we actually removed all of these,
291:00 - they would be the same. So using something
like two e n, would be great, because what
291:07 - actually happens is now everything stays consistent.
And it's also a relative unit. So that's always
291:13 - good, because it stays responsive. So there
we go. That's pretty much it for font size,
291:19 - I'm going to go ahead and actually change
this to one point 15 am, I think that's good.
291:23 - So there we go. That's the first one. Now
let's go ahead and talk about font weight.
291:27 - So this is a little bit more complicated.
So pretty much what font weight decides is
291:31 - the bolding of a text or a font. So the values
for this can range from zero, which is nothing
291:35 - all the way to? Well, pretty much infinity.
The only problem is, most fonts only support
291:41 - up to 800, or 900. Because, again, for each
value, there is a different bolding stage.
291:46 - So most fonts are only going to go up to maybe
100, or 900, some of them can go even higher.
291:50 - But in theory, you can make these values as
big as you want. The only problem is, it's
291:58 - not really going to show any change if you
make them very big. So there we go. That's
292:01 - pretty much it for font weight, let's go ahead
and start adding it to our website. So let's
292:06 - say I wanted to make our title a little bit
bolded. So I'm going to go ahead and say font
292:08 - dash weight. And now I'm going to go ahead
and specify a value. Let's go ahead and start
292:14 - with zero and see what happens, you can see
that nothing actually happens. But pretty
292:17 - much like I said before, most fonts only support
certain values. So for example, 100 would
292:24 - be a very specific kind of bolding, 200 300
400 and all the way up to as much as the font
292:27 - supports. Now usually, the convention for
this is you're supposed to go up in hundreds
292:30 - from 100. That's kind of like the minimum
supported font size. So if I go ahead and
292:33 - set 100. Here, you can see it's very thin.
And if I go ahead and set it as 800, which
292:36 - is usually the highest that you should go
realistically, this is kind of the standard
292:38 - for each one. So there you go, you can set
it to something like 600, which isn't very
292:39 - commonly seen, like I said, fonts only support
certain bolded ness, if that makes sense.
292:40 - But you can go ahead and play around with
this. And like I said, depending on the font,
292:45 - it's going to change what the text actually
looks like. So there we go. That's pretty
292:52 - much it for font weight, I'm going to go ahead
and actually just set this to 400, which is
292:58 - the standard font right there. So 400 is the
normal, it's like normal bolding, no bolding
293:04 - and don't make it very thin. So that's kind
of what it's the normal range. So there we
293:07 - go. That's it for font weight. Now let's go
ahead and look at font style. So just like
293:11 - font sizes for size and font weight is for
bolding font style is for italic sizing. So
293:18 - I'm going to go ahead and actually italicize
a small piece of text here. So let's just
293:20 - go ahead into this. And I'm going to take
this first part, and actually just cut it
293:25 - out. I'm going to create a span tag. So a
span tag is sort of an if you don't know it's
293:33 - an inline day. It's an inline container tag,
which allows you to contain a certain pieces
293:37 - of text without you know disrupting the flow
or moving them on to their own line. So I'm
293:43 - going to give it a class, I'm just going to
say italics, I guess that would work. So then
293:48 - I'm going to go ahead and use the class selector
italics. Open this up. Now we're going to
293:53 - go ahead and start working on adding our italicizing.
So what you can do for this is called font
294:02 - style. And although most of the selectors
these days are quite easy to remember, italics
294:10 - and font style don't usually go hand in hand.
So it might be a little hard to remember this
294:15 - one. So there's three different values they
can use for this normal, which is pretty much
294:23 - the same as setting the font weight is 400
doesn't do anything, or it actually will change
294:31 - it back to its normal state. Then you have
italic, which is to italicize it, and then
294:35 - you have oblique, which is a little bit more
italic size. So let's go ahead and just add
294:40 - the basic one. I'm gonna go and type metalic
here. Now if we refresh the page, you can
294:44 - see that where it is, there we go. It's right
there
294:50 - is a little bit more. The font, the font is
a little bit a little bit more italic size.
295:00 - So there we go. Now let's go ahead and set
it as the other value which is oblique. And
295:07 - you might notice a little bit of a difference.
So it's not immediately obvious, but it's
295:13 - actually just a little bit more italicize.
So like I said, it's not very good. noticeable.
295:20 - But that's just one thing to keep in mind.
So there we go, I'm just going to change this
295:27 - back to italic. And that's pretty much it
for the three different font manipulation
295:32 - techniques. Now, although I didn't cover font
family, which is what I'm going to cover in
295:37 - the next video, these are the pretty much
three basic ones that you can use to work
295:48 - with text without changing the font itself.
So you can go ahead and work with changing
295:52 - the font weight, you know, make it bolded
or italicized, you can also change the size.
295:58 - So you can really do a lot with this. But
font family is a little bit more complicated,
296:04 - which is why I want to leave it for its own
video. All right, let's move on.
296:09 - is a little bit more. The font, the font is
a little bit a little bit more italic size.
296:16 - So there we go. Now let's go ahead and set
it as the other value which is oblique. And
296:22 - you might notice a little bit of a difference.
So it's not immediately obvious, but it's
296:29 - actually just a little bit more italicize.
So like I said, it's not very good. noticeable.
296:36 - But that's just one thing to keep in mind.
So there we go, I'm just going to change this
296:45 - back to italic. And that's pretty much it
for the three different font manipulation
296:50 - techniques. Now, although I didn't cover font
family, which is what I'm going to cover in
296:54 - the next video, these are the pretty much
three basic ones that you can use to work
297:00 - with text without changing the font itself.
So you can go ahead and work with changing
297:04 - the font weight, you know, make it bolded
or italicized, you can also change the size.
297:08 - So you can really do a lot with this. But
font family is a little bit more complicated,
297:11 - which is why I want to leave it for its own
video. All right, let's move on.
297:14 - So in this video, we're going to be talking
about the last property related to text and
297:18 - fonts. And that is font family. So I'm going
to talk a little bit about that. But in the
297:25 - next few videos, we're going to actually looking
at how to include external fonts, which is
297:30 - going to be a very fun activity. And that's
going to really change the way that we use
297:34 - CSS. But before we do that, we need to learn
about font families. So first of all, if you
297:41 - don't already know, a font family is basically
a collection of fonts that have similar features.
297:45 - So there are three main font families that
you can use serif, sans serif, and monospace.
297:50 - So first of all, let's talk about serif fonts.
So serif fonts have these small lines on the
297:55 - end of some letters, and pretty much every
or a lot of the academic papers. And well
297:58 - printed documents use these serif fonts. So
right now, for example, our font is a Sarah
298:01 - because you can see these tiny lines at the
end of some of the letters. So these are used
298:07 - very commonly on like I said, papers, essays,
you know, journals, anything that's pretty
298:12 - much printed out or given to you physically,
is usually going to use a serif font. But
298:18 - unfortunately, it makes it very hard to read
on the computer. So there's actually a another
298:28 - group of fonts, that which is the sans serif
group. And if you don't know sans serif groups,
298:34 - are basically the fonts that don't have those
lines, if it's not obvious enough, from name.
298:40 - So right now, this is a serif font. A sans
serif font, on the other hand, would not have
298:45 - those lines, it would look a lot cleaner,
and easier to read. Now, a lot of the websites
298:51 - that you use today, so for example, pretty
much all the news websites, if you've used
298:56 - WordPress before that also uses Sarah sorry,
sans serif fonts unless you specify otherwise,
299:00 - Google Facebook, pretty much every website
that you see commonly today, the big ones,
299:04 - usually always use Sans Serif fonts, because
they're much easier to read. So those are
299:07 - the two main groups. But like I said, there's
also a third one, which is called mono space.
299:11 - So mono space is pretty much where all of
the characters have the same width. So they
299:16 - all take up kind of the same space each character.
Whereas something like this, you can see that
299:20 - each letter kind of takes a different amount
of space, depending on what the letter is.
299:25 - So some pretty good examples of a sarafan
are Times New Roman, which is probably the
299:29 - most famous, and Georgia. Some pretty good
examples of Sans Serif fonts are Arial and
299:33 - Calibri. If you've ever used Google Docs before,
Calibri is a pretty common font. And then
299:41 - a pretty good example of a monospace font
is Korea new if you know what that is. Korea
299:47 - news, one of the monospace fonts but like
I said, there's many more out there that you
299:53 - can use. Like I said, it all depends on what
family you pick, and what what kind of result
299:58 - you're trying to achieve out of your fonts
or you're trying to make it readable Are you
300:03 - making a paper or a journal, it all depends
on what you want out of your while document.
300:10 - So in this case, because we're doing or creating
a website, we're gonna want to use Sans Serif
300:14 - fonts. So in order to specify a font family,
or in specific a font, you're gonna have to
300:21 - use the font family
300:23 - So in this video, we're going to be talking
about the last property related to text and
300:28 - fonts. And that is font family. So I'm going
to talk a little bit about that. But in the
300:34 - next few videos, we're going to actually looking
at how to include external fonts, which is
300:40 - going to be a very fun activity. And that's
going to really change the way that we use
300:44 - CSS. But before we do that, we need to learn
about font families. So first of all, if you
300:46 - don't already know, a font family is basically
a collection of fonts that have similar features.
300:53 - So there are three main font families that
you can use serif, sans serif, and monospace.
300:55 - So first of all, let's talk about serif fonts.
So serif fonts have these small lines on the
300:59 - end of some letters, and pretty much every
or a lot of the academic papers. And well
301:04 - printed documents use these serif fonts. So
right now, for example, our font is a Sarah
301:08 - because you can see these tiny lines at the
end of some of the letters. So these are used
301:13 - very commonly on like I said, papers, essays,
you know, journals, anything that's pretty
301:16 - much printed out or given to you physically,
is usually going to use a serif font. But
301:21 - unfortunately, it makes it very hard to read
on the computer. So there's actually a another
301:26 - group of fonts, that which is the sans serif
group. And if you don't know sans serif groups,
301:31 - are basically the fonts that don't have those
lines, if it's not obvious enough, from name.
301:37 - So right now, this is a serif font. A sans
serif font, on the other hand, would not have
301:42 - those lines, it would look a lot cleaner,
and easier to read. Now, a lot of the websites
301:47 - that you use today, so for example, pretty
much all the news websites, if you've used
301:51 - WordPress before that also uses Sarah sorry,
sans serif fonts unless you specify otherwise,
301:55 - Google Facebook, pretty much every website
that you see commonly today, the big ones,
301:59 - usually always use Sans Serif fonts, because
they're much easier to read. So those are
302:05 - the two main groups. But like I said, there's
also a third one, which is called mono space.
302:13 - So mono space is pretty much where all of
the characters have the same width. So they
302:19 - all take up kind of the same space each character.
Whereas something like this, you can see that
302:27 - each letter kind of takes a different amount
of space, depending on what the letter is.
302:34 - So some pretty good examples of a sarafan
are Times New Roman, which is probably the
302:40 - most famous, and Georgia. Some pretty good
examples of Sans Serif fonts are Arial and
302:45 - Calibri. If you've ever used Google Docs before,
Calibri is a pretty common font. And then
302:53 - a pretty good example of a monospace font
is Korea new if you know what that is. Korea
302:57 - news, one of the monospace fonts but like
I said, there's many more out there that you
303:02 - can use. Like I said, it all depends on what
family you pick, and what what kind of result
303:07 - you're trying to achieve out of your fonts
or you're trying to make it readable Are you
303:12 - making a paper or a journal, it all depends
on what you want out of your while document.
303:15 - So in this case, because we're doing or creating
a website, we're gonna want to use Sans Serif
303:21 - fonts. So in order to specify a font family,
or in specific a font, you're gonna have to
303:26 - use the font family
303:27 - property. So if you go ahead and set font
family. Now, this isn't just for setting the
303:34 - family. This is also for spreading the specific
fonts. And I'll talk about that in just a
303:39 - second. So I'm going to go ahead and say sans
serif. So this is the font family that I want
303:50 - and watch what happens to our page. Now, you
can see that it looks completely different.
303:54 - We can actually read everything and it looks
a lot cleaner. So that's why I like san serif
303:59 - fonts. And that's why most developers much
prefer Sans Serif fonts over serif fonts,
304:03 - you can see that it just looks a lot easier
on the eyes. It's just much easier to read
304:09 - and use. But like I said, you can you don't
just have to specify the family you can actually
304:15 - specify the specific font. And you can actually
do this using the comma separator. So first
304:16 - of all, I'm basic set times new roman as the
main font. And then I'm going to insert a
304:19 - comma, and then serif. So I'll explain this
right now, first of all, if a font has more
304:21 - than one word or it's separated by spaces,
you're going to need to use quotation marks
304:24 - to contain it. Now, the second thing is this
comma here, pretty much what's going to happen
304:29 - is, if Times New Roman is available, use that
as the font. But if it isn't available, then
304:35 - fall back to the standard serif font. So you
can actually include more than just Times
304:41 - New Roman on here. So you can include three
or even for layers sometimes. But for now,
304:46 - we're just going to use two and we'll talk
about including very specific fonts in the
304:50 - next two videos, where we're going to be including
these external fonts. So there we go. Pretty
304:56 - much what this is saying is set the font family,
in this case, the font, as Times New Roman,
305:04 - but if Times New Roman isn't available, maybe
you know, if you're using an external font,
305:10 - maybe this server has crashed, or maybe it's
just not available on the browser, then use
305:14 - the serif family, there's the general serif
font. So if I actually go ahead and remove
305:19 - this, you're not going to see much of a difference
between Times New Roman and Sarath. Like I
305:24 - said, you can see there's not much of a change
because it pretty much the same thing. But
305:31 - it is there. And if you use a different Sarah
font, such as Georgia, there will be some
305:35 - sort of a difference between the two, you
can see that now, although they aren't exactly,
305:40 - they aren't exactly the same, you can see
they both contain those lines, things like
305:45 - that. So that's why you commonly use more
than more than one fonts, just in case maybe,
305:51 - if you're using a different browser, maybe
someone's using a very old browser, like Internet
305:56 - Explorer six or seven, then you can use some
of the older fonts. So there you go. That's
306:04 - pretty much it. For font families, it's really
not that hard to grasp. And once you really
306:09 - get into it, it becomes a very, very useful
tool. So I'm going to go ahead and actually
306:14 - just change this. But like I was saying, it
becomes a very useful tool, once you get into
306:18 - the later parts of web development, because
changing the font can completely change the
306:23 - look of your site. So that's just one thing
you want to keep in mind. Alright, let's move
306:29 - on.
306:30 - property. So if you go ahead and set font
family. Now, this isn't just for setting the
306:36 - family. This is also for spreading the specific
fonts. And I'll talk about that in just a
306:40 - second. So I'm going to go ahead and say sans
serif. So this is the font family that I want
306:49 - and watch what happens to our page. Now, you
can see that it looks completely different.
306:52 - We can actually read everything and it looks
a lot cleaner. So that's why I like san serif
306:56 - fonts. And that's why most developers much
prefer Sans Serif fonts over serif fonts,
307:00 - you can see that it just looks a lot easier
on the eyes. It's just much easier to read
307:05 - and use. But like I said, you can you don't
just have to specify the family you can actually
307:11 - specify the specific font. And you can actually
do this using the comma separator. So first
307:15 - of all, I'm basic set times new roman as the
main font. And then I'm going to insert a
307:23 - comma, and then serif. So I'll explain this
right now, first of all, if a font has more
307:28 - than one word or it's separated by spaces,
you're going to need to use quotation marks
307:33 - to contain it. Now, the second thing is this
comma here, pretty much what's going to happen
307:39 - is, if Times New Roman is available, use that
as the font. But if it isn't available, then
307:48 - fall back to the standard serif font. So you
can actually include more than just Times
307:53 - New Roman on here. So you can include three
or even for layers sometimes. But for now,
307:57 - we're just going to use two and we'll talk
about including very specific fonts in the
308:00 - next two videos, where we're going to be including
these external fonts. So there we go. Pretty
308:06 - much what this is saying is set the font family,
in this case, the font, as Times New Roman,
308:13 - but if Times New Roman isn't available, maybe
you know, if you're using an external font,
308:18 - maybe this server has crashed, or maybe it's
just not available on the browser, then use
308:22 - the serif family, there's the general serif
font. So if I actually go ahead and remove
308:28 - this, you're not going to see much of a difference
between Times New Roman and Sarath. Like I
308:34 - said, you can see there's not much of a change
because it pretty much the same thing. But
308:43 - it is there. And if you use a different Sarah
font, such as Georgia, there will be some
308:48 - sort of a difference between the two, you
can see that now, although they aren't exactly,
308:53 - they aren't exactly the same, you can see
they both contain those lines, things like
308:59 - that. So that's why you commonly use more
than more than one fonts, just in case maybe,
309:05 - if you're using a different browser, maybe
someone's using a very old browser, like Internet
309:09 - Explorer six or seven, then you can use some
of the older fonts. So there you go. That's
309:15 - pretty much it. For font families, it's really
not that hard to grasp. And once you really
309:20 - get into it, it becomes a very, very useful
tool. So I'm going to go ahead and actually
309:24 - just change this. But like I was saying, it
becomes a very useful tool, once you get into
309:31 - the later parts of web development, because
changing the font can completely change the
309:37 - look of your site. So that's just one thing
you want to keep in mind. Alright, let's move
309:42 - on.
309:43 - So in this video, we are going to be looking
at actually using some external fonts. We've
309:49 - looked at fonts and text, and we know how
to manipulate it now. But we don't actually
309:54 - know the one crucial piece, which is using
external fonts. So your computer will most
309:59 - likely come preloaded with a bunch of different
fonts. If you use things like Microsoft Word,
310:02 - or, you know, maybe Google Docs, things like
that. They all come with pre loaded fonts.
310:07 - And although Google Docs technically isn't
on your computer, we'll just leave it in there
310:11 - for now. So obviously, we have a lot of fonts
to choose from in CSS. But first of all, how
310:17 - do we actually know which fonts to use? And
what if we don't have the font? I mean, you
310:23 - know, maybe it doesn't come with our computer,
how are we supposed to get it? Well, the first
310:27 - thing that I would recommend doing is going
and getting fonts from the internet. Now,
310:31 - if you don't already know this, most people
would think that you know, the fonts that
310:39 - you have are set for life, you can't download
anymore. Well, fonts are actually a huge growing
310:45 - industry. And there are so many different
fonts out there that you can use, and you
310:48 - can even make your own. So there's obviously
a lot more fonts to choose them than what's
310:51 - provided on your computer. So in this video,
I'm going to be teaching you how to go and
310:56 - find your own fonts. And then in the next
video, we're going to be including it into
311:03 - our project. So the first source I'm going
to recommend here, which is actually only
311:09 - source, but it's called Google fonts, it was
put together by Google. And it's a collection
311:13 - of 915 font families. So you can see we have
a bunch of different fonts here. And when
311:17 - I say font families, just think fonts default,
because
311:20 - So in this video, we are going to be looking
at actually using some external fonts. We've
311:23 - looked at fonts and text, and we know how
to manipulate it now. But we don't actually
311:27 - know the one crucial piece, which is using
external fonts. So your computer will most
311:31 - likely come preloaded with a bunch of different
fonts. If you use things like Microsoft Word,
311:36 - or, you know, maybe Google Docs, things like
that. They all come with pre loaded fonts.
311:41 - And although Google Docs technically isn't
on your computer, we'll just leave it in there
311:44 - for now. So obviously, we have a lot of fonts
to choose from in CSS. But first of all, how
311:50 - do we actually know which fonts to use? And
what if we don't have the font? I mean, you
311:56 - know, maybe it doesn't come with our computer,
how are we supposed to get it? Well, the first
312:02 - thing that I would recommend doing is going
and getting fonts from the internet. Now,
312:06 - if you don't already know this, most people
would think that you know, the fonts that
312:14 - you have are set for life, you can't download
anymore. Well, fonts are actually a huge growing
312:21 - industry. And there are so many different
fonts out there that you can use, and you
312:25 - can even make your own. So there's obviously
a lot more fonts to choose them than what's
312:31 - provided on your computer. So in this video,
I'm going to be teaching you how to go and
312:36 - find your own fonts. And then in the next
video, we're going to be including it into
312:45 - our project. So the first source I'm going
to recommend here, which is actually only
312:50 - source, but it's called Google fonts, it was
put together by Google. And it's a collection
312:53 - of 915 font families. So you can see we have
a bunch of different fonts here. And when
313:01 - I say font families, just think fonts default,
because
313:04 - you know, when you think of it as a family,
you think there's multiple fonts, but there's
313:09 - actually only one and then you can change
the bolding and other settings, we'll go over
313:17 - that a little bit later in this video. So
you can head over to this, I've linked it
313:24 - in the lecture resources, or you can just
copy the link here from video. And it's going
313:28 - to take you to this site. So there's actually
915 families on this site, which is a lot
313:32 - to choose from. Now you can see that there
are even you know things in different languages.
313:36 - There's all sorts of different styles, maybe
from different general families. So this could
313:39 - be from, you know, a sensory family. This
could be from a Sarah family. So you can see
313:44 - that there are so many different choices that
you can use. And depending on what type of
313:49 - website you want to create, you can actually
choose the fonts that you want. So I'm gonna
313:55 - actually go through now and start picking
some fonts. So what I would recommend is just
314:05 - go through and look at the many different
fonts you have here. So for example, I think
314:10 - this is a very nice font. So what I'm going
to do is just go ahead and click this plus
314:19 - icon And what it's going to do here it says
there's one family selected, right? If you
314:23 - open it up, you can see that our font has
been selected. Now we're going to work on
314:27 - embedding this in the next video. But for
now, I just want to leave it like this. So
314:32 - you can see that we can actually go ahead
and customize our font now. So for example,
314:37 - if I wanted to choose some different bolding,
so for example, you can see, this is a font
314:45 - weight of 100. And this is a font weight of
900. So you can select as many as you want.
314:49 - But you can see that we actually have a load
type here. So the reason that this is given
314:55 - is because we are including this from the
internet, obviously. So if you try to pull
315:03 - too many resources from an intranet or from,
you know, outside of your local machine, it's
315:06 - going to really slow down the load time of
your website, because obviously, it's not
315:14 - instantaneous, you need to send over requests,
and there's a whole lot that goes behind.
315:19 - So while I would recommend is not trying to
select every single one of these weights,
315:23 - only select the ones that you think you're
going to need. So for example, for now, I'm
315:29 - just going to select the regular and the bolt.
Now, I don't want any italics. So I'm just
315:36 - going to exclude this. And you can see that
our load time is fast. So we're okay. So you
315:43 - can see that apart from our buildings, we
can actually select some of some of the stuff
315:48 - from here. So instead of having to go into
our selection, we can actually just go and
315:53 - straight select it. From here, we can also
change the size if we wanted to. And then
315:59 - we can click the plus icon. So you can go
ahead and play around with those when you
316:04 - include your own fonts. But for now, I think
I'm just going to go with the default size
316:09 - and just add a bolded. So now I'm going to
go ahead and actually include a second font,
316:15 - because it's pretty common in web development
and web design to include at least two fonts,
316:21 - you know, maybe one for headings, and one
for text. So I'm going to go ahead and find
316:27 - something that kind of fits in with the later
font that we have here, I'm going to just
316:32 - select it back to the default size. So I'm
going to try and find something that kind
316:43 - of matches this. It doesn't have to be obviously
exactly the same. It can just be something
316:47 - that you know, kind of fits in the theme,
or makes the website look kind of complements
316:51 - the other font. So I think this is good. It's
actually Sarah serif. So I don't I'm not going
316:55 - to use it, you can see those lines there.
I'm looking for a sans serif font. Let me
316:58 - see. So I think this is a pretty good font.
So what I'm going to do is go ahead and add
317:02 - this as well just click on that plus icon.
And now we can actually customize both fonts.
317:07 - So I'm going to go ahead and add that bold
700 as well, you can see that the load time
317:10 - is moderate now because of course, we're including
more than one font, but we don't need to worry
317:13 - about that too much. So there we go. We have
that setup now. So there we go. That's pretty
317:17 - much it for Google fonts. And you know, using
all these different fonts, now you can go
317:22 - ahead and customize it. Choose whatever makes
your website look good, or maybe whatever
317:24 - you want. But just make sure that you choose
a font that really works with your website
317:30 - well and make sure you don't include too many
different weights. So you can keep the load
317:32 - time within Bay. So in the next video, we're
actually going to go through and start importing
317:36 - this into our website. And I'm going to teach
you some really good failsafe tricks in case
317:45 - Google Fonts fails. Alright, let's move on.
317:47 - you know, when you think of it as a family,
you think there's multiple fonts, but there's
317:53 - actually only one and then you can change
the bolding and other settings, we'll go over
317:58 - that a little bit later in this video. So
you can head over to this, I've linked it
318:04 - in the lecture resources, or you can just
copy the link here from video. And it's going
318:06 - to take you to this site. So there's actually
915 families on this site, which is a lot
318:11 - to choose from. Now you can see that there
are even you know things in different languages.
318:14 - There's all sorts of different styles, maybe
from different general families. So this could
318:17 - be from, you know, a sensory family. This
could be from a Sarah family. So you can see
318:21 - that there are so many different choices that
you can use. And depending on what type of
318:23 - website you want to create, you can actually
choose the fonts that you want. So I'm gonna
318:29 - actually go through now and start picking
some fonts. So what I would recommend is just
318:32 - go through and look at the many different
fonts you have here. So for example, I think
318:38 - this is a very nice font. So what I'm going
to do is just go ahead and click this plus
318:42 - icon And what it's going to do here it says
there's one family selected, right? If you
318:45 - open it up, you can see that our font has
been selected. Now we're going to work on
318:49 - embedding this in the next video. But for
now, I just want to leave it like this. So
318:54 - you can see that we can actually go ahead
and customize our font now. So for example,
318:57 - if I wanted to choose some different bolding,
so for example, you can see, this is a font
319:02 - weight of 100. And this is a font weight of
900. So you can select as many as you want.
319:07 - But you can see that we actually have a load
type here. So the reason that this is given
319:15 - is because we are including this from the
internet, obviously. So if you try to pull
319:22 - too many resources from an intranet or from,
you know, outside of your local machine, it's
319:27 - going to really slow down the load time of
your website, because obviously, it's not
319:32 - instantaneous, you need to send over requests,
and there's a whole lot that goes behind.
319:38 - So while I would recommend is not trying to
select every single one of these weights,
319:43 - only select the ones that you think you're
going to need. So for example, for now, I'm
319:48 - just going to select the regular and the bolt.
Now, I don't want any italics. So I'm just
319:55 - going to exclude this. And you can see that
our load time is fast. So we're okay. So you
320:01 - can see that apart from our buildings, we
can actually select some of some of the stuff
320:05 - from here. So instead of having to go into
our selection, we can actually just go and
320:11 - straight select it. From here, we can also
change the size if we wanted to. And then
320:15 - we can click the plus icon. So you can go
ahead and play around with those when you
320:20 - include your own fonts. But for now, I think
I'm just going to go with the default size
320:24 - and just add a bolded. So now I'm going to
go ahead and actually include a second font,
320:29 - because it's pretty common in web development
and web design to include at least two fonts,
320:33 - you know, maybe one for headings, and one
for text. So I'm going to go ahead and find
320:41 - something that kind of fits in with the later
font that we have here, I'm going to just
320:46 - select it back to the default size. So I'm
going to try and find something that kind
320:56 - of matches this. It doesn't have to be obviously
exactly the same. It can just be something
321:01 - that you know, kind of fits in the theme,
or makes the website look kind of complements
321:07 - the other font. So I think this is good. It's
actually Sarah serif. So I don't I'm not going
321:13 - to use it, you can see those lines there.
I'm looking for a sans serif font. Let me
321:17 - see. So I think this is a pretty good font.
So what I'm going to do is go ahead and add
321:21 - this as well just click on that plus icon.
And now we can actually customize both fonts.
321:26 - So I'm going to go ahead and add that bold
700 as well, you can see that the load time
321:31 - is moderate now because of course, we're including
more than one font, but we don't need to worry
321:35 - about that too much. So there we go. We have
that setup now. So there we go. That's pretty
321:40 - much it for Google fonts. And you know, using
all these different fonts, now you can go
321:46 - ahead and customize it. Choose whatever makes
your website look good, or maybe whatever
321:49 - you want. But just make sure that you choose
a font that really works with your website
321:52 - well and make sure you don't include too many
different weights. So you can keep the load
321:59 - time within Bay. So in the next video, we're
actually going to go through and start importing
322:06 - this into our website. And I'm going to teach
you some really good failsafe tricks in case
322:11 - Google Fonts fails. Alright, let's move on.
322:13 - So in the previous video, we started looking
at what type of fonts we can use in our website.
322:18 - Now we're going to go through and actually
include them. So first of all, let's just
322:22 - look at our website. For now we have all of
our fonts setup, we have a bunch of text manipulation,
322:28 - ready to go and working on the website. But
now what I'm going to do is actually go through
322:32 - and start using these external fonts. So we're
not going to use this Arial font anymore,
322:33 - so I'm going to go ahead and erase that. And
also for the font weight, I'm also going to
322:41 - go ahead and erase that because there's some
issues with it that I'll talk about in just
322:46 - a second. So there we go. Now that we removed,
all of the properties will be directly affected
322:52 - by the font. Let's go ahead and work on setting
up our website with these external fonts.
322:57 - So the first thing you'll notice here is that
when you go over to your Google fonts, it
323:03 - gives you this link tag to include. So this
link tag is pretty much going to link to Google
323:10 - fonts and pull them from their servers. So
this is what you're going to need to copy
323:14 - right here. You're just going to copy this
and up in your HTML document, you're going
323:16 - to paste your link tag above your stylesheet.
Now make sure you post it above this above
323:20 - your stylesheet because you want to have the
fonts ready so that when your stylesheet comes
323:25 - along and the compiler is reading it, all
of the fonts are already there and ready to
323:29 - go. So there we go. Now that everything's
linked and set up, why don't we go ahead and
323:33 - see what happened on our website. Obviously,
we removed the font You can see that nothing
323:35 - actually happens. So, by doing this, we don't
actually set up our website to use our fonts,
323:41 - we're just bringing them into our website.
Now what we need to do is go through in CSS
323:48 - and start utilizing these fonts, so that we
can see the changes on the website. So on
323:52 - top of that, this, there's this little text
here that allows you to do you know, you can
323:57 - just copy the style straight, but I'm going
to go ahead and do it manually. So first of
324:02 - all, let's go ahead and add our body font.
So I'm going to go ahead and say, font family.
324:10 - And now we're going to go through and select
our font. So we included two fonts, Leto and
324:17 - sorrow boon we're going to go through is go
ahead and see which one we want to use. So
324:23 - I'm going to use Leto for the body text. So
right here in quotes, I'm going to go ahead
324:29 - and say, Leto, just like that. And now let's
go ahead and refresh the page. And you can
324:35 - see how much of a difference that makes. Now
using this new font, everything has changed,
324:40 - it makes the website look completely different
from what it used to be. So there we go, we've
324:44 - included that. But let's go ahead and include
our second font here. So I'm going to go through
324:51 - and actually add it on the title and the subtitle.
And remember going back to specificity, the
324:58 - class and Id selectors are going to be more
specific than the body selectors. So our font
325:03 - family is going to override the body font
family. So let's go ahead and add that. Right
325:08 - there. Just like that. And let's go ahead
and add it to our subtitle as well. All right,
325:14 - well, let's go ahead and see what happens.
So you can see that, although the difference
325:18 - is quite subtle, it's still changed the font
of the titles and subtitles. And you can see
325:22 - why using two fonts on your website makes
it look a whole lot better. So there we go.
325:26 - We've added all of our fonts. But the only
problem is, we know that what what's happening
325:29 - beside behind the scenes is that this link
tag is going to Google servers, pulling these
325:34 - fonts, and then including them in our website.
But what if it fails? What if there's no internet
325:39 - connection, or what if it's down, maybe the
Google Fonts servers themselves are down.
325:43 - This is where we need to use the trick we
learned in the font families video, in which
325:50 - we can actually add a backup font to this.
And if we actually go on Google Fonts right
325:57 - here, you can see they already do this. Now,
because the sans serif family is included
326:02 - by default, what's going to happen is, normally
it's going to use the font specified. But
326:09 - if there's some problem, and we can't get
these fonts, maybe Google servers are down,
326:13 - it's going to go over to the next font. And
we know that sans serif is included on every
326:17 - single machine, which means that it's going
to work fine. So let's go ahead and do that.
326:21 - Now. If you remember, all we have to do is
go ahead and add a comma, and then put the
326:28 - name of the family, which in this case is
sans serif. We're going to do this for the
326:37 - other two as well.
326:39 - So in the previous video, we started looking
at what type of fonts we can use in our website.
326:48 - Now we're going to go through and actually
include them. So first of all, let's just
326:53 - look at our website. For now we have all of
our fonts setup, we have a bunch of text manipulation,
327:00 - ready to go and working on the website. But
now what I'm going to do is actually go through
327:06 - and start using these external fonts. So we're
not going to use this Arial font anymore,
327:11 - so I'm going to go ahead and erase that. And
also for the font weight, I'm also going to
327:18 - go ahead and erase that because there's some
issues with it that I'll talk about in just
327:23 - a second. So there we go. Now that we removed,
all of the properties will be directly affected
327:30 - by the font. Let's go ahead and work on setting
up our website with these external fonts.
327:34 - So the first thing you'll notice here is that
when you go over to your Google fonts, it
327:38 - gives you this link tag to include. So this
link tag is pretty much going to link to Google
327:43 - fonts and pull them from their servers. So
this is what you're going to need to copy
327:45 - right here. You're just going to copy this
and up in your HTML document, you're going
327:50 - to paste your link tag above your stylesheet.
Now make sure you post it above this above
327:55 - your stylesheet because you want to have the
fonts ready so that when your stylesheet comes
328:00 - along and the compiler is reading it, all
of the fonts are already there and ready to
328:06 - go. So there we go. Now that everything's
linked and set up, why don't we go ahead and
328:09 - see what happened on our website. Obviously,
we removed the font You can see that nothing
328:12 - actually happens. So, by doing this, we don't
actually set up our website to use our fonts,
328:17 - we're just bringing them into our website.
Now what we need to do is go through in CSS
328:22 - and start utilizing these fonts, so that we
can see the changes on the website. So on
328:28 - top of that, this, there's this little text
here that allows you to do you know, you can
328:37 - just copy the style straight, but I'm going
to go ahead and do it manually. So first of
328:46 - all, let's go ahead and add our body font.
So I'm going to go ahead and say, font family.
328:49 - And now we're going to go through and select
our font. So we included two fonts, Leto and
328:56 - sorrow boon we're going to go through is go
ahead and see which one we want to use. So
329:01 - I'm going to use Leto for the body text. So
right here in quotes, I'm going to go ahead
329:10 - and say, Leto, just like that. And now let's
go ahead and refresh the page. And you can
329:17 - see how much of a difference that makes. Now
using this new font, everything has changed,
329:21 - it makes the website look completely different
from what it used to be. So there we go, we've
329:27 - included that. But let's go ahead and include
our second font here. So I'm going to go through
329:35 - and actually add it on the title and the subtitle.
And remember going back to specificity, the
329:39 - class and Id selectors are going to be more
specific than the body selectors. So our font
329:43 - family is going to override the body font
family. So let's go ahead and add that. Right
329:47 - there. Just like that. And let's go ahead
and add it to our subtitle as well. All right,
329:52 - well, let's go ahead and see what happens.
So you can see that, although the difference
329:57 - is quite subtle, it's still changed the font
of the titles and subtitles. And you can see
330:01 - why using two fonts on your website makes
it look a whole lot better. So there we go.
330:06 - We've added all of our fonts. But the only
problem is, we know that what what's happening
330:10 - beside behind the scenes is that this link
tag is going to Google servers, pulling these
330:14 - fonts, and then including them in our website.
But what if it fails? What if there's no internet
330:16 - connection, or what if it's down, maybe the
Google Fonts servers themselves are down.
330:20 - This is where we need to use the trick we
learned in the font families video, in which
330:27 - we can actually add a backup font to this.
And if we actually go on Google Fonts right
330:34 - here, you can see they already do this. Now,
because the sans serif family is included
330:39 - by default, what's going to happen is, normally
it's going to use the font specified. But
330:44 - if there's some problem, and we can't get
these fonts, maybe Google servers are down,
330:47 - it's going to go over to the next font. And
we know that sans serif is included on every
330:58 - single machine, which means that it's going
to work fine. So let's go ahead and do that.
331:03 - Now. If you remember, all we have to do is
go ahead and add a comma, and then put the
331:07 - name of the family, which in this case is
sans serif. We're going to do this for the
331:11 - other two as well.
331:12 - And this one as well. Now, of course, this
is going to change based on the font that
331:18 - you use. And I'm actually going to show you
this right here. Let's remove both of these
331:19 - and add a serif font. So this would be considered
a serif font. Let's go ahead and add that.
331:23 - Now if we go ahead and look at the family,
well, it's actually not not serif. It's a
331:27 - different family called cursive. But you can
see just to prove that point that the family
331:31 - is going to depend on the font itself. So
we explained a little bit about font families
331:37 - in that video. And obviously, all of them
have different characteristics. So of course,
331:41 - like I said, it depends completely on the
type of font. So if I go ahead and see the
331:47 - family there, you can see that that sans serif.
But if we use something like this font, it's
331:51 - going to be a different font family. So that's
just one thing you need to keep in mind is
331:56 - that you want to make sure your fallback font
is both included on every machine. And it's
332:01 - kind of similar to our font here. Now, if
I actually go ahead and erase this, now let's
332:08 - go ahead and see, obviously, there is a visual
difference, but it still has that same style.
332:14 - There's no lines, it's clean to read. It's
just straightforward. So that's one thing
332:20 - you want to make sure of. Alright, so that's
pretty much it for fonts. Next, we're going
332:23 - to move on to layout, which is really gonna
change the way that this website looks. Alright,
332:32 - let's move on.
332:33 - And this one as well. Now, of course, this
is going to change based on the font that
332:39 - you use. And I'm actually going to show you
this right here. Let's remove both of these
332:43 - and add a serif font. So this would be considered
a serif font. Let's go ahead and add that.
332:46 - Now if we go ahead and look at the family,
well, it's actually not not serif. It's a
332:51 - different family called cursive. But you can
see just to prove that point that the family
332:57 - is going to depend on the font itself. So
we explained a little bit about font families
333:05 - in that video. And obviously, all of them
have different characteristics. So of course,
333:10 - like I said, it depends completely on the
type of font. So if I go ahead and see the
333:16 - family there, you can see that that sans serif.
But if we use something like this font, it's
333:27 - going to be a different font family. So that's
just one thing you need to keep in mind is
333:34 - that you want to make sure your fallback font
is both included on every machine. And it's
333:42 - kind of similar to our font here. Now, if
I actually go ahead and erase this, now let's
333:50 - go ahead and see, obviously, there is a visual
difference, but it still has that same style.
333:57 - There's no lines, it's clean to read. It's
just straightforward. So that's one thing
334:02 - you want to make sure of. Alright, so that's
pretty much it for fonts. Next, we're going
334:04 - to move on to layout, which is really gonna
change the way that this website looks. Alright,
334:10 - let's move on.
334:11 - So the next few videos are going to be focused
on CSS layout. So we're pretty much done,
334:17 - at least for now with coloring and text and
all of the cool features we can do with them.
334:21 - But now we're gonna actually go through and
start using our skills with different well,
334:25 - new skills that we can actually put together
and create really, really nice, awesome websites.
334:28 - So layout is probably one of the most powerful
tools that you can use in CSS and completely
334:32 - change the way your website looks. But before
we move on, we need to learn a little bit
334:37 - of theory behind how CSS works. So there's
this concept in CSS called the box model,
334:40 - and it's pretty much the the what happens
is every Simple element is surrounded by an
334:43 - invisible box. Now this box has different
layers, which we're going to explain in the
334:46 - next video. But all of these boxes are touching
together, they're kind of connected, what
334:49 - you can do is actually change the shapes of
these boxes and change the shapes of the layers
334:54 - in order to move things around, and position
them on a page in a way that makes the website
334:58 - look much better. Now, obviously, this isn't
the only way of shaping your website, there
335:02 - are so many different methods, Flexbox, and
grid, and we're all going to cover them later
335:09 - in this course. But for now, this is the basic
kind of layout features that you need to use,
335:18 - so that you can move on and start using some
of the most complex features. So this is kind
335:30 - of what that invisible box looks like. So
at the center is where your content is. Now
335:35 - I'm going to explain this in just a second,
all of these little terms, padding, border
335:42 - and margin. But you can see that the center
contains the content. But then the other three
335:46 - layers are something completely unknown. And
we're going to be going through and explaining
335:50 - what those do. But for now, just understand
that you have the content on the center. But
335:54 - then there's this invisible box around it,
that is split up into three layers. So let's
335:58 - go over the first one, which is the padding.
Now the padding represents the space between
336:03 - the content and the border of the content.
Now you can see up in this model, we have
336:08 - this padding section, and then we have a border.
So pretty much what the border does is it
336:15 - separates the content and the padding from
the margin. But pretty much let's just assume
336:16 - for now that the margin kind of move things
around, and it doesn't actually move the content
336:21 - around, what padding is supposed to do is
it's basically supposed to give more room
336:26 - around the content itself, it's not really
meant to move the content around. So it'll
336:31 - make some more sense when I go over margin
if you don't understand it now, but let's
336:36 - move on to the next layer. The border is pretty
much the divide, or the separation line between
336:39 - the content, the padding and the margin. So
borders can be styled and changed. And by
336:43 - default, they're invisible. But we can actually
go through and change how they look which
336:48 - we're going to be going through in a couple
videos time. So the border doesn't actually
336:53 - create any spacing or anything itself, unless
you wanted to. But pretty much what the border
336:59 - is supposed to be is kind of that division
line. So the last layer that I want to talk
337:08 - about is the margin. So just like how the
padding is supposed to give spacing, or well
337:11 - padding around the content, the margin is
supposed to move the content around and give
337:14 - it space between other elements. So while
the padding is used for internal space, the
337:18 - margin is used for external space and is made.
So that to give room and spacing around external
337:23 - elements. So for example, if you have an image
and then some text under it, you can use the
337:28 - margin of the text to kind of push it down
from the image, whereas the padding will just
337:36 - kind of make internal space. Now, although
it's not the best example, as we go on and
337:43 - start using it, you'll get this a lot more
if you don't already. Alright, so that's pretty
337:49 - much it for the box model. It's a very, very
simple concept. But it can be really used
337:54 - to a very high potential, and it does contain
a lot of features that we're going to be going
337:59 - over in the next few videos. Alright, let's
move on.
338:02 - So the next few videos are going to be focused
on CSS layout. So we're pretty much done,
338:07 - at least for now with coloring and text and
all of the cool features we can do with them.
338:12 - But now we're gonna actually go through and
start using our skills with different well,
338:17 - new skills that we can actually put together
and create really, really nice, awesome websites.
338:23 - So layout is probably one of the most powerful
tools that you can use in CSS and completely
338:27 - change the way your website looks. But before
we move on, we need to learn a little bit
338:30 - of theory behind how CSS works. So there's
this concept in CSS called the box model,
338:36 - and it's pretty much the the what happens
is every Simple element is surrounded by an
338:43 - invisible box. Now this box has different
layers, which we're going to explain in the
338:48 - next video. But all of these boxes are touching
together, they're kind of connected, what
338:52 - you can do is actually change the shapes of
these boxes and change the shapes of the layers
338:58 - in order to move things around, and position
them on a page in a way that makes the website
339:02 - look much better. Now, obviously, this isn't
the only way of shaping your website, there
339:07 - are so many different methods, Flexbox, and
grid, and we're all going to cover them later
339:12 - in this course. But for now, this is the basic
kind of layout features that you need to use,
339:18 - so that you can move on and start using some
of the most complex features. So this is kind
339:26 - of what that invisible box looks like. So
at the center is where your content is. Now
339:32 - I'm going to explain this in just a second,
all of these little terms, padding, border
339:37 - and margin. But you can see that the center
contains the content. But then the other three
339:44 - layers are something completely unknown. And
we're going to be going through and explaining
339:46 - what those do. But for now, just understand
that you have the content on the center. But
339:48 - then there's this invisible box around it,
that is split up into three layers. So let's
339:52 - go over the first one, which is the padding.
Now the padding represents the space between
339:56 - the content and the border of the content.
Now you can see up in this model, we have
340:01 - this padding section, and then we have a border.
So pretty much what the border does is it
340:06 - separates the content and the padding from
the margin. But pretty much let's just assume
340:11 - for now that the margin kind of move things
around, and it doesn't actually move the content
340:23 - around, what padding is supposed to do is
it's basically supposed to give more room
340:26 - around the content itself, it's not really
meant to move the content around. So it'll
340:31 - make some more sense when I go over margin
if you don't understand it now, but let's
340:35 - move on to the next layer. The border is pretty
much the divide, or the separation line between
340:38 - the content, the padding and the margin. So
borders can be styled and changed. And by
340:41 - default, they're invisible. But we can actually
go through and change how they look which
340:45 - we're going to be going through in a couple
videos time. So the border doesn't actually
340:49 - create any spacing or anything itself, unless
you wanted to. But pretty much what the border
340:53 - is supposed to be is kind of that division
line. So the last layer that I want to talk
340:59 - about is the margin. So just like how the
padding is supposed to give spacing, or well
341:05 - padding around the content, the margin is
supposed to move the content around and give
341:09 - it space between other elements. So while
the padding is used for internal space, the
341:13 - margin is used for external space and is made.
So that to give room and spacing around external
341:19 - elements. So for example, if you have an image
and then some text under it, you can use the
341:24 - margin of the text to kind of push it down
from the image, whereas the padding will just
341:29 - kind of make internal space. Now, although
it's not the best example, as we go on and
341:32 - start using it, you'll get this a lot more
if you don't already. Alright, so that's pretty
341:35 - much it for the box model. It's a very, very
simple concept. But it can be really used
341:39 - to a very high potential, and it does contain
a lot of features that we're going to be going
341:45 - over in the next few videos. Alright, let's
move on.
341:48 - So now what we're going to be doing is going
through and starting to use the first layer
341:51 - of the box model, which in this case is the
content itself. So although not technically
341:56 - a layer of this invisible box, it's still
a big part of layout, and the shaping of things
342:02 - on your document, because the way you shape
and while style, your content is going to
342:08 - completely change how the rest of the box
models affected your padding and your margin.
342:12 - So what we're going to be doing is going through
and using some of these. And if you actually
342:16 - remember, right here, we have already used
the two main features of shaping content,
342:20 - height and width. So we've already pretty
much learned these properties. But I'm going
342:26 - to go through and do a couple more examples
just so you can get the shape of things and
342:31 - how to use them. So first thing I want to
talk about is the units that you should use.
342:38 - So usually on a page, the best way to do this
is using pixels or some absolute unit for
342:43 - height. But then for width, use a relative
units such as v w, or percentage. Now we do
342:47 - this because although height is very, very
hard to determine responsively at least, they
342:48 - kind of stay the same as you move down so
the height is going to kind of stay consistent.
342:51 - The only problem is the width completely changes
everything. So the width of devices is very
342:57 - different from place to place. So a phone
would be quite a small width whereas you know
343:02 - full screen TV would be very wide width. So
that's why you use relative units for width
343:08 - is that you can keep it consistent. Or still,
you can keep both of the values consistent
343:12 - while still using different units. So let's
go through and actually use it on this image
343:16 - here. So the first thing I want to do is go
ahead and give this a class, we're actually
343:21 - I'm going to give it an ID. So I'm going to
give it an ID of about us image, just like
343:26 - that. All right, now, let's go ahead and select
it here, I'm going to go hash about us image.
343:34 - Remember the id selector. And now what we're
going to do is go through and start adding
343:38 - our, our properties. So the first thing I'm
going to add is the height. So I'm just going
343:42 - to make this a cool 300 pixels, just to see
how it is. And most of this is very experimental,
343:48 - you're not supposed to go through and change
everything. And, you know, well, well you
343:51 - are, but you're not supposed to go through
and set everything to a constant value. So
343:52 - you're supposed to, you know, play around,
see what works. And then once you're familiar
343:54 - with it, and once you know what you want,
you can leave it as it is. So there we go,
343:58 - we set the height. Now, obviously, this with
the width of the image itself is always relative,
344:01 - but I'm going to go ahead and change it anyways,
I'm going to go ahead and say the width is
344:06 - 60 v w. Now, you could always say 60%, it
would pretty much be the same thing. But I'm
344:11 - going to go ahead and use v w here just to
344:13 - So now what we're going to be doing is going
through and starting to use the first layer
344:16 - of the box model, which in this case is the
content itself. So although not technically
344:20 - a layer of this invisible box, it's still
a big part of layout, and the shaping of things
344:26 - on your document, because the way you shape
and while style, your content is going to
344:31 - completely change how the rest of the box
models affected your padding and your margin.
344:35 - So what we're going to be doing is going through
and using some of these. And if you actually
344:41 - remember, right here, we have already used
the two main features of shaping content,
344:44 - height and width. So we've already pretty
much learned these properties. But I'm going
344:49 - to go through and do a couple more examples
just so you can get the shape of things and
344:56 - how to use them. So first thing I want to
talk about is the units that you should use.
344:59 - So usually on a page, the best way to do this
is using pixels or some absolute unit for
345:03 - height. But then for width, use a relative
units such as v w, or percentage. Now we do
345:07 - this because although height is very, very
hard to determine responsively at least, they
345:12 - kind of stay the same as you move down so
the height is going to kind of stay consistent.
345:16 - The only problem is the width completely changes
everything. So the width of devices is very
345:23 - different from place to place. So a phone
would be quite a small width whereas you know
345:27 - full screen TV would be very wide width. So
that's why you use relative units for width
345:33 - is that you can keep it consistent. Or still,
you can keep both of the values consistent
345:37 - while still using different units. So let's
go through and actually use it on this image
345:41 - here. So the first thing I want to do is go
ahead and give this a class, we're actually
345:52 - I'm going to give it an ID. So I'm going to
give it an ID of about us image, just like
345:58 - that. All right, now, let's go ahead and select
it here, I'm going to go hash about us image.
346:08 - Remember the id selector. And now what we're
going to do is go through and start adding
346:13 - our, our properties. So the first thing I'm
going to add is the height. So I'm just going
346:21 - to make this a cool 300 pixels, just to see
how it is. And most of this is very experimental,
346:26 - you're not supposed to go through and change
everything. And, you know, well, well you
346:30 - are, but you're not supposed to go through
and set everything to a constant value. So
346:35 - you're supposed to, you know, play around,
see what works. And then once you're familiar
346:40 - with it, and once you know what you want,
you can leave it as it is. So there we go,
346:50 - we set the height. Now, obviously, this with
the width of the image itself is always relative,
346:55 - but I'm going to go ahead and change it anyways,
I'm going to go ahead and say the width is
347:02 - 60 v w. Now, you could always say 60%, it
would pretty much be the same thing. But I'm
347:08 - going to go ahead and use v w here just to
347:12 - actually, you know what, we have V w here
already, so I'm going to go ahead and add
347:17 - percentage, there we go. Now, of course, you
could use whichever unit you want, they're
347:18 - gonna mean pretty much the same thing. Obviously,
apart from the different viewports, and things
347:20 - like that, but they're pretty much the same
for our purposes. So you can use whichever
347:27 - one you want. So there we go, we've changed
it. Now if we go ahead and resize of most,
347:33 - you can actually go ahead and see that the
width is going to be pretty much the same,
347:39 - well, the height stays constant. So one thing
I want to talk about is a really cool feature
347:43 - that we can use in Chrome. And you can see
that's a little bit weird there. But we'll
347:50 - worry about it, we'll worry about that later,
is a really cool feature that allows you to
347:57 - actually change the viewport of your Chrome
window without actually having to use different
348:01 - devices. So if you go ahead and click on the
icon, just right click anywhere on the page,
348:07 - click on Inspect, and it's going to bring
you here to this page. And you can actually
348:09 - select any device you want from the drop down
menu and see how it would look on that on
348:14 - that device. So I can pretty much do whatever
I want here. If I wanted to select an iPad,
348:18 - even an iPad Pro, you can actually see what
it would look like on the device. So this
348:23 - is a really useful feature that you can use
to make sure that your website works everywhere,
348:28 - instead of having to go and upload it somewhere
and then view it on all those different devices.
348:41 - You can also set select this responsive design,
which I really liked, because then you can
348:46 - change the size however you want. Just like
that you can see, and it will work perfectly.
348:54 - So yeah, that's great. And you know, if maybe
if you don't want to use these devices from
348:57 - this drop down menu, you can actually go through
and change the size here, which is really
349:02 - useful. So I'm going to go ahead and close
this off now. And you can see that our website
349:08 - is looking good. Obviously, our image here,
it looks quite weird. But like I said, it's
349:13 - all about experimentation, you're supposed
to go through and see what works. And obviously,
349:16 - you don't have to use an absolute value. It's
not set in stone, but you're supposed to go
349:21 - through and see what works for you. And from
there, you can set the value. So this is just
349:29 - kind of a little experimental thing to teach
you how to use these features. But like I
349:33 - said, this website's all about what this course
is all about practicing and getting experienced
349:38 - with this. So you can go through, check out
the project files and play around with these
349:46 - values yourself, really get a feel for how
this works. So that's pretty much it for content
349:51 - resizing, it's very easy, there's only two
properties you need to know. And pretty much
349:55 - the rest of the box model is also quite easy.
But it's good that we learn it step by step
350:00 - so that we master every stage and by the end
of it, we'll really know how to master the
350:06 - layout and really manipulate our page in the
best possible way. Alright, let's move on.
350:10 - actually, you know what, we have V w here
already, so I'm going to go ahead and add
350:18 - percentage, there we go. Now, of course, you
could use whichever unit you want, they're
350:25 - gonna mean pretty much the same thing. Obviously,
apart from the different viewports, and things
350:29 - like that, but they're pretty much the same
for our purposes. So you can use whichever
350:32 - one you want. So there we go, we've changed
it. Now if we go ahead and resize of most,
350:38 - you can actually go ahead and see that the
width is going to be pretty much the same,
350:43 - well, the height stays constant. So one thing
I want to talk about is a really cool feature
350:44 - that we can use in Chrome. And you can see
that's a little bit weird there. But we'll
350:48 - worry about it, we'll worry about that later,
is a really cool feature that allows you to
350:53 - actually change the viewport of your Chrome
window without actually having to use different
351:00 - devices. So if you go ahead and click on the
icon, just right click anywhere on the page,
351:05 - click on Inspect, and it's going to bring
you here to this page. And you can actually
351:10 - select any device you want from the drop down
menu and see how it would look on that on
351:15 - that device. So I can pretty much do whatever
I want here. If I wanted to select an iPad,
351:20 - even an iPad Pro, you can actually see what
it would look like on the device. So this
351:26 - is a really useful feature that you can use
to make sure that your website works everywhere,
351:32 - instead of having to go and upload it somewhere
and then view it on all those different devices.
351:38 - You can also set select this responsive design,
which I really liked, because then you can
351:43 - change the size however you want. Just like
that you can see, and it will work perfectly.
351:47 - So yeah, that's great. And you know, if maybe
if you don't want to use these devices from
351:52 - this drop down menu, you can actually go through
and change the size here, which is really
351:56 - useful. So I'm going to go ahead and close
this off now. And you can see that our website
352:01 - is looking good. Obviously, our image here,
it looks quite weird. But like I said, it's
352:05 - all about experimentation, you're supposed
to go through and see what works. And obviously,
352:07 - you don't have to use an absolute value. It's
not set in stone, but you're supposed to go
352:14 - through and see what works for you. And from
there, you can set the value. So this is just
352:22 - kind of a little experimental thing to teach
you how to use these features. But like I
352:28 - said, this website's all about what this course
is all about practicing and getting experienced
352:33 - with this. So you can go through, check out
the project files and play around with these
352:39 - values yourself, really get a feel for how
this works. So that's pretty much it for content
352:45 - resizing, it's very easy, there's only two
properties you need to know. And pretty much
352:52 - the rest of the box model is also quite easy.
But it's good that we learn it step by step
352:58 - so that we master every stage and by the end
of it, we'll really know how to master the
353:05 - layout and really manipulate our page in the
best possible way. Alright, let's move on.
353:10 - So in this video, we're going to be focusing
on one of the parts of the box model, which
353:15 - are mortars. So in the previous video, I talked
a little bit about some of the different layers
353:21 - of the box model and how they work. But in
this video, we're actually going to be focusing
353:27 - on manipulating one of those layers, which
is the border. And although it's not the really
353:34 - the main part of the whole box model idea,
it's still a pretty useful skill to know and
353:41 - it really helps you understand how the box
model comes together. Alright, let's get started.
353:47 - So for the next few videos, we're mainly going
to be working with the images simply because
353:52 - they're just easier to manipulate and set
the layout over something working with something
353:56 - like that. text or titles, things like that.
So we're going to be working with our circular
354:02 - gray here that we created in a previous video,
as well as this custom image. So let's get
354:07 - started. So now there are many different styles
that you can use to style the borders. But
354:11 - we're going to be using the main shorthand
that allows us to style everything all at
354:15 - once. So the property is similar to our background
property here, all you need to type is border,
354:19 - whoops, you do on the image. So I'm going
to go here on our radial gradients. And I'm
354:24 - going to start adding our border. So let's
go ahead and get started. So what I'm going
354:31 - to do is just type border. And remember, every
single element has a box around it has this
354:36 - box model or invisible box. So it doesn't
matter what you choose, you can always style
354:40 - these elements, it might look weird on some
elements like this text here, but you can
354:45 - do it with everything. So there are three
main parts to this element here. First is
354:51 - going to be the size. So we'll talk about
that in a second, then you're going to have
354:57 - the style, which is probably the main part.
And then finally, you're going to have the
355:03 - color. So now that we have this, we can go
ahead and start talking about this. So size
355:06 - is pretty similar to you know, changing the
size of an image, for example, yeah, it can
355:07 - be in pixels percent or em, it doesn't matter,
I'm going to go with pixels for now. Now,
355:10 - the usual range for a border is somewhere
between, you know, one and three or four pixels,
355:13 - we can go much thicker than that, depending
on what you need. So I'm going to go ahead
355:18 - and show you want to pixels looked like. So
remember separated by a space. Now we're going
355:23 - to go over the style. So there are many different
styles you can use on your borders. But there's
355:28 - three main ones that we're going to talk about,
or sorry, four main ones, we're going to talk
355:34 - about dotted, dashed, solid and double. Now
normally, you're going to see solid, that's
355:38 - pretty much the most common one, I'll show
you the other versions of this in just a second.
355:44 - So I'm going to go ahead and type solid, and
now come to the color. So as we learned refer
355:50 - before this can be a named color, this can
be an RGB code, or even a hex code, I'm going
355:54 - to go ahead and just choose a darkish blue,
I think that will fit in really well with
355:59 - the page. And in fact, you know what, let's
not, let's not use the color picker, let's
356:03 - just use our RGB color skills. And take the
color of the background, which is here. So
356:08 - we're going to take those four. And I'm going
to go back to our image here and paste it
356:16 - in. And now what I'm going to do is just darken
everything. And if you remember, the darker
356:22 - it gets the higher oak sorry, the lower all
of these values get. So I'm just going to
356:24 - lower them all by about 50. So here, I'm just
going to go 154. Now, again, this doesn't
356:29 - have to be exact, or anything you can, you
can put really, whatever you want here, but
356:33 - I'm just trying to darken everything, I'm
just gonna make this 200. Let's go ahead and
356:37 - refresh the page and see how our border looks.
Now. Let's scroll down. So there's the problem,
356:42 - we actually forgot a semicolon here on the
end of the background. So that's one thing
356:48 - you need to keep in mind. There we go. Now
it's working. And you can see and I did actually
356:52 - change the color there just to test it out.
And you can see, there we go, we have our
356:55 - background. So obviously, it's pretty obvious
here with our bright red color there. But
356:56 - what I'm actually going to do is go ahead
and just play around with some of these and
357:00 - see if we can change the features. So first
thing I'm going to do is go ahead and change
357:06 - the height. So I'm going to go ahead and set
it as 10 pixels. For example, you can see
357:13 - that they open up the height sorry, the size,
you can see that that gets a lot thicker,
357:19 - so you can change it depending on how you
want your border to look like. So now let's
357:26 - go ahead and change the style. So let's go
ahead and try out some of these other styles.
357:33 - So first, I'm going to try dotted. So you
can see now we have a dotted border. Now let's
357:38 - go ahead and try dashed.
357:40 - So in this video, we're going to be focusing
on one of the parts of the box model, which
357:45 - are mortars. So in the previous video, I talked
a little bit about some of the different layers
357:52 - of the box model and how they work. But in
this video, we're actually going to be focusing
358:00 - on manipulating one of those layers, which
is the border. And although it's not the really
358:08 - the main part of the whole box model idea,
it's still a pretty useful skill to know and
358:15 - it really helps you understand how the box
model comes together. Alright, let's get started.
358:20 - So for the next few videos, we're mainly going
to be working with the images simply because
358:24 - they're just easier to manipulate and set
the layout over something working with something
358:31 - like that. text or titles, things like that.
So we're going to be working with our circular
358:36 - gray here that we created in a previous video,
as well as this custom image. So let's get
358:42 - started. So now there are many different styles
that you can use to style the borders. But
358:46 - we're going to be using the main shorthand
that allows us to style everything all at
358:50 - once. So the property is similar to our background
property here, all you need to type is border,
358:58 - whoops, you do on the image. So I'm going
to go here on our radial gradients. And I'm
359:04 - going to start adding our border. So let's
go ahead and get started. So what I'm going
359:10 - to do is just type border. And remember, every
single element has a box around it has this
359:13 - box model or invisible box. So it doesn't
matter what you choose, you can always style
359:19 - these elements, it might look weird on some
elements like this text here, but you can
359:25 - do it with everything. So there are three
main parts to this element here. First is
359:28 - going to be the size. So we'll talk about
that in a second, then you're going to have
359:31 - the style, which is probably the main part.
And then finally, you're going to have the
359:34 - color. So now that we have this, we can go
ahead and start talking about this. So size
359:40 - is pretty similar to you know, changing the
size of an image, for example, yeah, it can
359:44 - be in pixels percent or em, it doesn't matter,
I'm going to go with pixels for now. Now,
359:48 - the usual range for a border is somewhere
between, you know, one and three or four pixels,
359:51 - we can go much thicker than that, depending
on what you need. So I'm going to go ahead
359:55 - and show you want to pixels looked like. So
remember separated by a space. Now we're going
359:59 - to go over the style. So there are many different
styles you can use on your borders. But there's
360:04 - three main ones that we're going to talk about,
or sorry, four main ones, we're going to talk
360:09 - about dotted, dashed, solid and double. Now
normally, you're going to see solid, that's
360:13 - pretty much the most common one, I'll show
you the other versions of this in just a second.
360:18 - So I'm going to go ahead and type solid, and
now come to the color. So as we learned refer
360:24 - before this can be a named color, this can
be an RGB code, or even a hex code, I'm going
360:31 - to go ahead and just choose a darkish blue,
I think that will fit in really well with
360:37 - the page. And in fact, you know what, let's
not, let's not use the color picker, let's
360:42 - just use our RGB color skills. And take the
color of the background, which is here. So
360:46 - we're going to take those four. And I'm going
to go back to our image here and paste it
360:58 - in. And now what I'm going to do is just darken
everything. And if you remember, the darker
361:03 - it gets the higher oak sorry, the lower all
of these values get. So I'm just going to
361:08 - lower them all by about 50. So here, I'm just
going to go 154. Now, again, this doesn't
361:13 - have to be exact, or anything you can, you
can put really, whatever you want here, but
361:18 - I'm just trying to darken everything, I'm
just gonna make this 200. Let's go ahead and
361:20 - refresh the page and see how our border looks.
Now. Let's scroll down. So there's the problem,
361:29 - we actually forgot a semicolon here on the
end of the background. So that's one thing
361:33 - you need to keep in mind. There we go. Now
it's working. And you can see and I did actually
361:39 - change the color there just to test it out.
And you can see, there we go, we have our
361:45 - background. So obviously, it's pretty obvious
here with our bright red color there. But
361:50 - what I'm actually going to do is go ahead
and just play around with some of these and
361:57 - see if we can change the features. So first
thing I'm going to do is go ahead and change
362:09 - the height. So I'm going to go ahead and set
it as 10 pixels. For example, you can see
362:16 - that they open up the height sorry, the size,
you can see that that gets a lot thicker,
362:20 - so you can change it depending on how you
want your border to look like. So now let's
362:25 - go ahead and change the style. So let's go
ahead and try out some of these other styles.
362:29 - So first, I'm going to try dotted. So you
can see now we have a dotted border. Now let's
362:37 - go ahead and try dashed.
362:38 - And you're kind of getting the idea of how
this works. Let's see doubled, I think or
362:43 - double actually, I think that's probably the
best other than solid. Yeah, you can see that
362:49 - that looks pretty nice. Here, we have that
double border. It's pretty useful in styling,
362:55 - but it's not really used very commonly. So
the last thing I want to go ahead and change
363:02 - is the color. So I'm going to go ahead and
just take a color from the color picker, I
363:10 - don't really feel like going through the whole
RGB process again, let's go ahead and just
363:15 - take this color, it's quite dark. Let's go
ahead and refresh our page and see what it
363:16 - looks like. And now you can see the color
has changed. So you can see the borders are
363:21 - not only useful for just changing the style
of this of an image or a box or any box in
363:27 - that for that matter. They're also useful
for showing how the box model works. So I'm
363:31 - going to go ahead and change this back to
solid so you can get a better view. So if
363:37 - you remember in the last video we talked about
the different layers of the wall model, and
363:43 - we remembered that the padding was used to
separate or create spacing between the content
363:49 - and the border. In this case, you can see
that the border and the content are directly
364:01 - touching, which means there is pretty much
no padding at all, because there's no space
364:07 - in between them. On top of that, you can see
that this border is also touching also elements
364:13 - on the page or other elements on the page.
So like, for example, this table, there's
364:19 - a little bit of space between the header and
the image. But that's due to other margins.
364:26 - We'll talk about that when we get later in
this section. And so you can see that this
364:31 - doesn't have much margin either. So you can
start to see here how this whole box model
364:35 - comes together and how you can see what's
going on. So yeah, that's a pretty useful
364:39 - way to kind of look at the box model and see
how everything comes together. In the next
364:44 - few videos, we're going to be looking at the
other layers of the box model. And then we're
364:48 - going to bring it all together and start really
changing up this the way this website looks.
364:53 - Alright, let's move on.
364:54 - And you're kind of getting the idea of how
this works. Let's see doubled, I think or
365:01 - double actually, I think that's probably the
best other than solid. Yeah, you can see that
365:07 - that looks pretty nice. Here, we have that
double border. It's pretty useful in styling,
365:13 - but it's not really used very commonly. So
the last thing I want to go ahead and change
365:20 - is the color. So I'm going to go ahead and
just take a color from the color picker, I
365:25 - don't really feel like going through the whole
RGB process again, let's go ahead and just
365:31 - take this color, it's quite dark. Let's go
ahead and refresh our page and see what it
365:42 - looks like. And now you can see the color
has changed. So you can see the borders are
365:47 - not only useful for just changing the style
of this of an image or a box or any box in
365:53 - that for that matter. They're also useful
for showing how the box model works. So I'm
365:59 - going to go ahead and change this back to
solid so you can get a better view. So if
366:05 - you remember in the last video we talked about
the different layers of the wall model, and
366:10 - we remembered that the padding was used to
separate or create spacing between the content
366:15 - and the border. In this case, you can see
that the border and the content are directly
366:18 - touching, which means there is pretty much
no padding at all, because there's no space
366:21 - in between them. On top of that, you can see
that this border is also touching also elements
366:26 - on the page or other elements on the page.
So like, for example, this table, there's
366:31 - a little bit of space between the header and
the image. But that's due to other margins.
366:36 - We'll talk about that when we get later in
this section. And so you can see that this
366:40 - doesn't have much margin either. So you can
start to see here how this whole box model
366:43 - comes together and how you can see what's
going on. So yeah, that's a pretty useful
366:52 - way to kind of look at the box model and see
how everything comes together. In the next
367:01 - few videos, we're going to be looking at the
other layers of the box model. And then we're
367:08 - going to bring it all together and start really
changing up this the way this website looks.
367:13 - Alright, let's move on.
367:14 - So in this video, we're going to be moving
on to the next two main layers of our box
367:19 - model. And in this video, we're going to be
talking about margin and padding. So you kind
367:23 - of already have an idea of what these two
are, we've talked about them. In the first
367:26 - video, we've talked about what they do, we
haven't actually talked about how to manipulate
367:31 - them. So in this video, what I'm going to
be doing, what I'm going to be doing is going
367:39 - through and working with these two properties
to actually manipulate our layout. And that's
367:43 - when the real power of the box model shows.
So let's go ahead and get started. The first
367:46 - thing I want to do is go ahead and choose
the right thing to manipulate. And in this
367:49 - case, the best thing to work with is an image
right here, because it's very easy to see
367:53 - and see the changes when you when you do these
margin padding changes. And it's also very
368:00 - useful to have a border here, which I added,
you can really see the difference between
368:07 - margin and padding and see which one is responsible
for what. So let's get started. Now similar
368:12 - to the rest of the properties, the naming
is pretty straightforward. In this case, we're
368:18 - going to go ahead and use the shorthand margin
property. But I'm also going to be showing
368:22 - you a few other ways, which I didn't show
you with the border. Because these are a little
368:25 - bit easier. And they're kind of hard to understand
if you just use the shorthand property, so
368:30 - I'm going to be just building it from the
ground up. So the first property I'm going
368:35 - to look at is, of course, the shorthand margin
property, and how to add margin and padding
368:42 - to all sides at the same time. So in case
you didn't know, this is called top, this
368:49 - is called bottom, this is left and this is
right. But I'm sure you know that especially
368:53 - with working with multiple backgrounds, things
like that. And pretty much the same throughout
368:55 - all of CSS. So let's get started. So the first
thing I'm going to do is go ahead and find
368:59 - my image. And then I'm going to choose which
box model layer I want to manipulate. I'm
369:06 - going to go ahead and work with padding first,
because it's a little bit easier to understand.
369:14 - And we're going to go and work with margin.
So we're just going to type out cutting here.
369:19 - And now what we're going to do is go and start
adding whatever we want. So remember, if you
369:26 - add just one value, it's going to add it the
same value to all sides. So I'm going to say
369:30 - for example, right now 20 pixels. Now if I
go ahead and refresh the page, you can see
369:38 - that there is 20 pixels of space in between
all sides of our image. So you can see 20
369:44 - pixels on the left on the right on the top
and on the bottom. So you can see what's going
369:52 - on here with our padding free increase this
value, for example, it's going to it's going
369:56 - to almost double and now we have 40 pixels
on each side. So that's just a little bit
370:00 - of information about padding, you can see
the spacing between the content, and the border
370:05 - is getting a lot bigger. Now let's go ahead
and change this to margin and see what happens.
370:14 - So I'm actually just going to completely remove
this and refresh the page. So now let's go
370:18 - ahead and add our 40 pixel margin, we'll just
say for now, so you can really see the difference.
370:26 - So now you can see that the content or the
space between the content and the border is
370:33 - still the same. There's no spacing at all.
But you can see that everything around it
370:40 - has kind of been pushed down. And remember,
it's adding margin to all sides, there's 40
370:45 - pixels between the border and the left side
of the page, the border and the top side,
370:50 - the border on the right and the border and
the bottom. So you can see that margin is
370:53 - moving the image itself around the page, whereas
the padding is just adding space inside the
370:58 - image. So now let's go ahead and talk about
some of the more specific properties in case
371:05 - you wanted to maybe style specific sides.
So I'm going to go ahead and change this back
371:11 - to padding, just like this. And now we can
go ahead and see our differences a lot more
371:13 - clear. So what you can actually do is add
a dash and then the name of the side to it.
371:21 - To actually specify which side you want the
padding to be added to. So let's just say
371:22 - I wanted to add it to the right side. Now
if I refresh the page, you can see that all
371:30 - of this still stays the same. But on the right
side, there is 40 pixels of padding. You can
371:33 - do this with as many as you want. So you can
go padding top, for example. And I want 100
371:40 - pixels on the top, and let's just say on the
bottom. And remember, always with the dash,
371:44 - I just want only five pixels. Now if we go
ahead and refresh the page, you can see it
371:49 - looks quite unbalanced, but you have 100 pixels
on the top, we have 40 pixels on the right
371:55 - and five on the bottom. Now obviously, this
gets a little bit tedious after a while, after
371:59 - you keep you know doing padding right top
bottom left, top right, top right, bottom
372:03 - left, and it gets quite irritating after a
while. So what I'm going to do is show you
372:06 - a really cool shorthand that you can use to
style them all at the same time. So we're
372:11 - going to go back to using our shorthand property.
372:13 - So in this video, we're going to be moving
on to the next two main layers of our box
372:18 - model. And in this video, we're going to be
talking about margin and padding. So you kind
372:23 - of already have an idea of what these two
are, we've talked about them. In the first
372:28 - video, we've talked about what they do, we
haven't actually talked about how to manipulate
372:33 - them. So in this video, what I'm going to
be doing, what I'm going to be doing is going
372:39 - through and working with these two properties
to actually manipulate our layout. And that's
372:43 - when the real power of the box model shows.
So let's go ahead and get started. The first
372:46 - thing I want to do is go ahead and choose
the right thing to manipulate. And in this
372:50 - case, the best thing to work with is an image
right here, because it's very easy to see
372:56 - and see the changes when you when you do these
margin padding changes. And it's also very
373:02 - useful to have a border here, which I added,
you can really see the difference between
373:05 - margin and padding and see which one is responsible
for what. So let's get started. Now similar
373:11 - to the rest of the properties, the naming
is pretty straightforward. In this case, we're
373:15 - going to go ahead and use the shorthand margin
property. But I'm also going to be showing
373:19 - you a few other ways, which I didn't show
you with the border. Because these are a little
373:24 - bit easier. And they're kind of hard to understand
if you just use the shorthand property, so
373:29 - I'm going to be just building it from the
ground up. So the first property I'm going
373:33 - to look at is, of course, the shorthand margin
property, and how to add margin and padding
373:38 - to all sides at the same time. So in case
you didn't know, this is called top, this
373:41 - is called bottom, this is left and this is
right. But I'm sure you know that especially
373:45 - with working with multiple backgrounds, things
like that. And pretty much the same throughout
373:53 - all of CSS. So let's get started. So the first
thing I'm going to do is go ahead and find
374:01 - my image. And then I'm going to choose which
box model layer I want to manipulate. I'm
374:05 - going to go ahead and work with padding first,
because it's a little bit easier to understand.
374:09 - And we're going to go and work with margin.
So we're just going to type out cutting here.
374:15 - And now what we're going to do is go and start
adding whatever we want. So remember, if you
374:21 - add just one value, it's going to add it the
same value to all sides. So I'm going to say
374:34 - for example, right now 20 pixels. Now if I
go ahead and refresh the page, you can see
374:44 - that there is 20 pixels of space in between
all sides of our image. So you can see 20
374:49 - pixels on the left on the right on the top
and on the bottom. So you can see what's going
374:56 - on here with our padding free increase this
value, for example, it's going to it's going
375:04 - to almost double and now we have 40 pixels
on each side. So that's just a little bit
375:10 - of information about padding, you can see
the spacing between the content, and the border
375:13 - is getting a lot bigger. Now let's go ahead
and change this to margin and see what happens.
375:18 - So I'm actually just going to completely remove
this and refresh the page. So now let's go
375:23 - ahead and add our 40 pixel margin, we'll just
say for now, so you can really see the difference.
375:28 - So now you can see that the content or the
space between the content and the border is
375:35 - still the same. There's no spacing at all.
But you can see that everything around it
375:40 - has kind of been pushed down. And remember,
it's adding margin to all sides, there's 40
375:45 - pixels between the border and the left side
of the page, the border and the top side,
375:52 - the border on the right and the border and
the bottom. So you can see that margin is
375:57 - moving the image itself around the page, whereas
the padding is just adding space inside the
376:02 - image. So now let's go ahead and talk about
some of the more specific properties in case
376:06 - you wanted to maybe style specific sides.
So I'm going to go ahead and change this back
376:08 - to padding, just like this. And now we can
go ahead and see our differences a lot more
376:12 - clear. So what you can actually do is add
a dash and then the name of the side to it.
376:15 - To actually specify which side you want the
padding to be added to. So let's just say
376:19 - I wanted to add it to the right side. Now
if I refresh the page, you can see that all
376:23 - of this still stays the same. But on the right
side, there is 40 pixels of padding. You can
376:26 - do this with as many as you want. So you can
go padding top, for example. And I want 100
376:30 - pixels on the top, and let's just say on the
bottom. And remember, always with the dash,
376:32 - I just want only five pixels. Now if we go
ahead and refresh the page, you can see it
376:35 - looks quite unbalanced, but you have 100 pixels
on the top, we have 40 pixels on the right
376:37 - and five on the bottom. Now obviously, this
gets a little bit tedious after a while, after
376:38 - you keep you know doing padding right top
bottom left, top right, top right, bottom
376:39 - left, and it gets quite irritating after a
while. So what I'm going to do is show you
376:41 - a really cool shorthand that you can use to
style them all at the same time. So we're
376:43 - going to go back to using our shorthand property.
376:46 - And now we're going to go ahead and add four
values separated by spaces, but it's a little
376:49 - bit confusing at first, okay, so just bear
with me. Now, what I'm going to do is for
376:50 - the left, I don't want anything. So let's
just start from the start from the top. So
376:53 - on the top, I want 100 pixels, like that.
On the right, I want 40 pixels. On the left,
376:54 - I don't want anything, so I'm just going to
say zero. Now, you could say zero pixels.
376:55 - But in this case, we don't want anything at
all. So it doesn't really matter which one
376:56 - you choose, I just prefer to put a zero there.
And then of course, on the right, or sorry,
376:59 - on the bottom, we want five pixels. Now let's
go ahead and refresh and see what happens.
377:00 - It stays pretty much it looks must have confused,
confused, something over there. So 100. On
377:05 - the top, we have 40 on the right, and on the
bottom of the so there's the problem. On the
377:08 - bottom, we want five pixels, and on the left,
we want zero. So you can see it gets quite
377:14 - confusing after some time. So you can see
that now it's exactly the same. So here's
377:18 - what you have to kind of remember, the first
one is the top, the second is the right, then
377:22 - the bottom and left. So an easy way to remember
this is by looking at the pieces of the border,
377:28 - if you draw a diagonal line straight in half,
you style the top on the right first, and
377:33 - then the bottom on the left. So just keep
that in mind and you'll be fine. So if you
377:37 - if you ever forget, you can always go and
check online, there's a lot of references
377:39 - talking about these different values here.
And I'm actually just going to go ahead and
377:41 - change it to margin for a second. So you can
see what's going on. Now you can see if I
377:45 - change the margin, actually, it stays in the
same position. But instead of adding internal
377:48 - space, it's adding external space. So that's
just one thing to keep in mind. But like I
377:53 - said, if you want to go ahead and review this,
you can always find some resources online,
377:56 - there's a lot going on there. Now let's talk
about shortening this into actually only two
377:58 - sections, because let's just say on the top
and bottom, you want a certain margin, but
378:00 - then on the left hand, right you want another
this is a pretty common thing that you you're
378:02 - going to want to do in CSS. So I'm going to
show you how to do that, all you have to do
378:03 - is go ahead and shorten it to two values,
I'm actually going to go ahead Yeah, I'll
378:04 - go with margin. The first two values are going
to be for the top and bottom at the same time.
378:05 - So I'm going to go ahead and add 80 pixels
of padding, Oh, whoops, 80 pixels. There we
378:06 - go. And now for ourselves whoops, now for
our second value, it's going to be our left
378:07 - and right values at the same time. So I'm
going to go ahead and add 40 pixels doesn't
378:08 - matter the order, because this is always going
to be for the top and bottom, this is always
378:09 - going to be 40, left and right. So just make
sure that they are equal. So let's go ahead
378:10 - and refresh. And now you can see the left
and right have kind of stayed a little bit
378:11 - shorter. Whereas the top and bottom are very
the margin is very big. As you can see here,
378:12 - the top and bottom is double the left and
right. So that's a nice shorthand that you
378:13 - can use to style to different or Well, two
different sides. So for example, now, if you
378:14 - split, if you can just take this part and
this part style, the style and at the same
378:15 - time, and then you take the left and right
and do the same thing with them. So I know
378:16 - that's a lot to take in. And there's a lot
of different ways. But just remember, if you
378:17 - ever get confused, you can either use the
internet, or just use margin dash and then
378:18 - the position. But other than that, all you
need to know for now is the concept. You just
378:19 - need to know how margin and padding work and
how you can actually manipulate them what
378:20 - they do. I mean, what do you do when you say
the margin left is 10 pixels. So just make
378:21 - sure that you know that, you know when you
add a certain space to a position, you're
378:22 - basically changing the spacing between something
and another thing based on what whichever
378:23 - layer you chose. So for example, if you chose
padding, you're going to be changing the spacing
378:24 - between the content and the border. So that's
pretty much it for margin and padding. Now
378:25 - we're going to get a lot more experience with
this as we go through the course and style
378:26 - more things. But for now, just make sure you
know how to use the shorthand properties,
378:27 - you know how to use all these different shortcuts.
Now you don't need to memorize them, you just
378:28 - need to know kind of how they work. Obviously,
memorizing them is good. But if you, if you
378:29 - forget them, don't worry too much about that.
Just make sure you know how to use these properly.
378:30 - And that's pretty much it. Let's move on.
378:31 - And now we're going to go ahead and add four
values separated by spaces, but it's a little
378:32 - bit confusing at first, okay, so just bear
with me. Now, what I'm going to do is for
378:33 - the left, I don't want anything. So let's
just start from the start from the top. So
378:34 - on the top, I want 100 pixels, like that.
On the right, I want 40 pixels. On the left,
378:35 - I don't want anything, so I'm just going to
say zero. Now, you could say zero pixels.
378:36 - But in this case, we don't want anything at
all. So it doesn't really matter which one
378:37 - you choose, I just prefer to put a zero there.
And then of course, on the right, or sorry,
378:38 - on the bottom, we want five pixels. Now let's
go ahead and refresh and see what happens.
378:39 - It stays pretty much it looks must have confused,
confused, something over there. So 100. On
378:40 - the top, we have 40 on the right, and on the
bottom of the so there's the problem. On the
378:41 - bottom, we want five pixels, and on the left,
we want zero. So you can see it gets quite
378:42 - confusing after some time. So you can see
that now it's exactly the same. So here's
378:43 - what you have to kind of remember, the first
one is the top, the second is the right, then
378:44 - the bottom and left. So an easy way to remember
this is by looking at the pieces of the border,
378:45 - if you draw a diagonal line straight in half,
you style the top on the right first, and
378:46 - then the bottom on the left. So just keep
that in mind and you'll be fine. So if you
378:47 - if you ever forget, you can always go and
check online, there's a lot of references
378:48 - talking about these different values here.
And I'm actually just going to go ahead and
378:49 - change it to margin for a second. So you can
see what's going on. Now you can see if I
378:50 - change the margin, actually, it stays in the
same position. But instead of adding internal
378:51 - space, it's adding external space. So that's
just one thing to keep in mind. But like I
378:52 - said, if you want to go ahead and review this,
you can always find some resources online,
378:53 - there's a lot going on there. Now let's talk
about shortening this into actually only two
378:54 - sections, because let's just say on the top
and bottom, you want a certain margin, but
378:55 - then on the left hand, right you want another
this is a pretty common thing that you you're
378:56 - going to want to do in CSS. So I'm going to
show you how to do that, all you have to do
378:57 - is go ahead and shorten it to two values,
I'm actually going to go ahead Yeah, I'll
378:58 - go with margin. The first two values are going
to be for the top and bottom at the same time.
378:59 - So I'm going to go ahead and add 80 pixels
of padding, Oh, whoops, 80 pixels. There we
379:00 - go. And now for ourselves whoops, now for
our second value, it's going to be our left
379:01 - and right values at the same time. So I'm
going to go ahead and add 40 pixels doesn't
379:02 - matter the order, because this is always going
to be for the top and bottom, this is always
379:03 - going to be 40, left and right. So just make
sure that they are equal. So let's go ahead
379:04 - and refresh. And now you can see the left
and right have kind of stayed a little bit
379:05 - shorter. Whereas the top and bottom are very
the margin is very big. As you can see here,
379:06 - the top and bottom is double the left and
right. So that's a nice shorthand that you
379:07 - can use to style to different or Well, two
different sides. So for example, now, if you
379:08 - split, if you can just take this part and
this part style, the style and at the same
379:09 - time, and then you take the left and right
and do the same thing with them. So I know
379:10 - that's a lot to take in. And there's a lot
of different ways. But just remember, if you
379:11 - ever get confused, you can either use the
internet, or just use margin dash and then
379:12 - the position. But other than that, all you
need to know for now is the concept. You just
379:13 - need to know how margin and padding work and
how you can actually manipulate them what
379:14 - they do. I mean, what do you do when you say
the margin left is 10 pixels. So just make
379:15 - sure that you know that, you know when you
add a certain space to a position, you're
379:16 - basically changing the spacing between something
and another thing based on what whichever
379:17 - layer you chose. So for example, if you chose
padding, you're going to be changing the spacing
379:18 - between the content and the border. So that's
pretty much it for margin and padding. Now
379:19 - we're going to get a lot more experience with
this as we go through the course and style
379:20 - more things. But for now, just make sure you
know how to use the shorthand properties,
379:21 - you know how to use all these different shortcuts.
Now you don't need to memorize them, you just
379:22 - need to know kind of how they work. Obviously,
memorizing them is good. But if you, if you
379:23 - forget them, don't worry too much about that.
Just make sure you know how to use these properly.
379:24 - And that's pretty much it. Let's move on.
379:25 - So this is a pretty important video, because
we're talking about a concept that is going
379:26 - to be used constantly in the next few sections.
And it's a very, very important part of CSS,
379:27 - and kind of defines the way that you look
at documents. So the two properties that we're
379:28 - going to be looking at are float, which is
the less important one and display, which
379:29 - is the very important properties that we need
to learn. So let's cover float first, because
379:30 - it's an easier thing to approach. But before
we start for both of these elements, you need
379:31 - to understand the concept of inline and block
level elements. So first of all elements have
379:32 - a certain display type, which we're going
to be manipulating in the next property. This
379:33 - display type pretty much defines the behavior
of the elements. So there are two main display
379:34 - types block and inline. So pretty much if
we look at our HTML document, here we go through
379:35 - and you can see all of these tags, creating
these tags create a sort of a sort of display
379:36 - behavior for the content inside them. So the
block level element, what it basically does
379:37 - is move moves everything onto its own section,
its own while block. So an example of one
379:38 - of these elements would be a p tag, you can
see that if this was an inline element would
379:39 - be flowing with the rest of the things. But
you can see here, despite the margin, this
379:40 - is moved on to its own section, it's not playing
or moving after the image, it's moved on to
379:41 - its own section, and everything after it comes
after Well, the block. On the other hand,
379:42 - an inline element is something that won't
really move anything onto its own section,
379:43 - it's going to keep it keep it intact, it's
not going to move it or change it in any way,
379:44 - it's just going to leave it how it naturally
occurs on the page. So an example, a very
379:45 - good example of one of these would be a span
tag, because what a span tag pretty much does
379:46 - is it's used to contain some piece of content
in an inline style. So for example, this italics
379:47 - class would be a perfect representation of
an inline tag, what we're trying to do is
379:48 - I telesign, some text. And if the span was
a block level element, this text here, this
379:49 - italic size, text would be moved on to its
own section, so everything preceding it would
379:50 - come before it. And then there would be a
new line with the text. And then after it
379:51 - would come the rest of the text. So you can
see there that the inline and block level
379:52 - tags really make a difference depending on
what you want to use it for. So what we're
379:53 - going to be doing in this video is going through
and learning how to change the display type
379:54 - of these different elements. But first, let's
talk about float. So again, these tags come
379:55 - with a natural display type and how they are
placed on the page is how they naturally occur.
379:56 - But there's actually a way to change the way
that they look. And this is done using float.
379:57 - So if you just listen to the name there, what
element pretty much does is change how the
379:58 - element will float on the page. So I'll go
ahead and do do some examples here. For example,
379:59 - let's just take this gradient here, this div.
So I'm going to go and look for it the service
380:00 - image, I'm going to say set the float and
I'm going to say it float to the right and
380:01 - watch what happens. You can see that now what
happens is pretty much this just flows over
380:02 - to the right side of the page. And it also
changes all the content after it. So you can
380:03 - see that this content here has now been pushed
up. So this kind of shows how a little bit
380:04 - of how flow works. And this doesn't just have
to be with images, we can do it with text
380:05 - as well. So if I go through and choose something
like this element over here, this some link
380:06 - here, so I'm going to go ahead on this link.
And I'm going to say it float to the right.
380:07 - Now let's go ahead and refresh the page. And
you can see that that kind of flows over to
380:08 - the right and everything before it is now
kind of pushed up where it was. So you can
380:09 - think of this as kind of a kind of a Tetris
puzzle block. When you're moving something
380:10 - over, everything is going to be pushed up
or moved around as well. So to fit the page
380:11 - so you can kind of think of it in that way.
Now obviously, once you start getting some
380:12 - really a lot of experience with float, you
can kind of predict where everything is going
380:13 - to move on the page. But floats are really
useful for laying out documents. Especially
380:14 - if you want to kind of Have position images
next to text or move things around in a way
380:15 - that looks more like a proper document. So
I'm going to remove that float. And I'm just
380:16 - going to do it with our image over here, which
with our image, our about us image. So I'm
380:17 - going to go ahead and say it floats over to
the right.
380:18 - So this is a pretty important video, because
we're talking about a concept that is going
380:19 - to be used constantly in the next few sections.
And it's a very, very important part of CSS,
380:20 - and kind of defines the way that you look
at documents. So the two properties that we're
380:21 - going to be looking at are float, which is
the less important one and display, which
380:22 - is the very important properties that we need
to learn. So let's cover float first, because
380:23 - it's an easier thing to approach. But before
we start for both of these elements, you need
380:24 - to understand the concept of inline and block
level elements. So first of all elements have
380:25 - a certain display type, which we're going
to be manipulating in the next property. This
380:26 - display type pretty much defines the behavior
of the elements. So there are two main display
380:27 - types block and inline. So pretty much if
we look at our HTML document, here we go through
380:28 - and you can see all of these tags, creating
these tags create a sort of a sort of display
380:29 - behavior for the content inside them. So the
block level element, what it basically does
380:30 - is move moves everything onto its own section,
its own while block. So an example of one
380:31 - of these elements would be a p tag, you can
see that if this was an inline element would
380:32 - be flowing with the rest of the things. But
you can see here, despite the margin, this
380:33 - is moved on to its own section, it's not playing
or moving after the image, it's moved on to
380:34 - its own section, and everything after it comes
after Well, the block. On the other hand,
380:35 - an inline element is something that won't
really move anything onto its own section,
380:36 - it's going to keep it keep it intact, it's
not going to move it or change it in any way,
380:37 - it's just going to leave it how it naturally
occurs on the page. So an example, a very
380:38 - good example of one of these would be a span
tag, because what a span tag pretty much does
380:39 - is it's used to contain some piece of content
in an inline style. So for example, this italics
380:40 - class would be a perfect representation of
an inline tag, what we're trying to do is
380:41 - I telesign, some text. And if the span was
a block level element, this text here, this
380:42 - italic size, text would be moved on to its
own section, so everything preceding it would
380:43 - come before it. And then there would be a
new line with the text. And then after it
380:44 - would come the rest of the text. So you can
see there that the inline and block level
380:45 - tags really make a difference depending on
what you want to use it for. So what we're
380:46 - going to be doing in this video is going through
and learning how to change the display type
380:47 - of these different elements. But first, let's
talk about float. So again, these tags come
380:48 - with a natural display type and how they are
placed on the page is how they naturally occur.
380:49 - But there's actually a way to change the way
that they look. And this is done using float.
380:50 - So if you just listen to the name there, what
element pretty much does is change how the
380:51 - element will float on the page. So I'll go
ahead and do do some examples here. For example,
380:52 - let's just take this gradient here, this div.
So I'm going to go and look for it the service
380:53 - image, I'm going to say set the float and
I'm going to say it float to the right and
380:54 - watch what happens. You can see that now what
happens is pretty much this just flows over
380:55 - to the right side of the page. And it also
changes all the content after it. So you can
380:56 - see that this content here has now been pushed
up. So this kind of shows how a little bit
380:57 - of how flow works. And this doesn't just have
to be with images, we can do it with text
380:58 - as well. So if I go through and choose something
like this element over here, this some link
380:59 - here, so I'm going to go ahead on this link.
And I'm going to say it float to the right.
381:00 - Now let's go ahead and refresh the page. And
you can see that that kind of flows over to
381:01 - the right and everything before it is now
kind of pushed up where it was. So you can
381:02 - think of this as kind of a kind of a Tetris
puzzle block. When you're moving something
381:03 - over, everything is going to be pushed up
or moved around as well. So to fit the page
381:04 - so you can kind of think of it in that way.
Now obviously, once you start getting some
381:05 - really a lot of experience with float, you
can kind of predict where everything is going
381:06 - to move on the page. But floats are really
useful for laying out documents. Especially
381:07 - if you want to kind of Have position images
next to text or move things around in a way
381:08 - that looks more like a proper document. So
I'm going to remove that float. And I'm just
381:09 - going to do it with our image over here, which
with our image, our about us image. So I'm
381:10 - going to go ahead and say it floats over to
the right.
381:11 - See that. So now you can see that it floats
over to the right. And now everything before
381:12 - it has kind of been pushed up onto this section
here. So there we go. Now it's working, and
381:13 - everything is looking great. Now let's look
at the next property, which is display. So
381:14 - display is pretty much a way of changing the
display property of an element that it naturally
381:15 - comes with. So of course, we know things like
a div or a paragraph tag come as a block level
381:16 - element, whereas something like a span or
a bolding tag would come as an inline element.
381:17 - So what we're going to be doing is going through
and changing these properties. Now, I didn't
381:18 - actually cover the properties of float, which
I'm going to go over in just a second. But
381:19 - what I'm going to talk about is the different
properties of display. So of course, you have
381:20 - the standard inline and block, which is pretty
obvious, but then you have a few others. So
381:21 - the one that I'm going to be covering here
is none now. So what the display none property
381:22 - does is pretty much just completely, almost
remove the element from the page. Now it doesn't
381:23 - actually remove it. But what happens is the
entire that invisible box that contains everything
381:24 - just suddenly disappears, you can't see it
anymore, it doesn't take up any space. It's
381:25 - just completely gone from the page. So I'm
going to show you what that looks like right
381:26 - now. Let's go ahead. And for example, let's
just say that this table is kind of annoying,
381:27 - we don't really want it here. So what I'm
going to do over here in my table is given
381:28 - a class of site table. Now I'm going to go
ahead and select it here, dot site dash table,
381:29 - and I'm going to say display is none. Now
watch what happens, you can see that that
381:30 - table completely disappears. And it doesn't
even take up the space anymore. It's not like
381:31 - the table. It's just invisible or not, not
what not visible, but it's completely gone.
381:32 - Now, this is very, very commonly used once
you start using JavaScript. And would you
381:33 - start making your site's interactive to maybe
create web games or hide something, maybe
381:34 - create some sort of hidden token, it can be
used for all sorts of things. So this is a
381:35 - very useful display property. So I'm going
to go ahead and remove that. Now the next
381:36 - one I want to talk about, I'm actually going
to, I'll just keep it there, if we decide
381:37 - to use it later. The next one I'm going to
talk about is inline block. So we know that
381:38 - we have two different display types, inline,
and block. But there's actually a combination
381:39 - of the two, which is a little bit hard to
understand. But once we start using it, you
381:40 - can see how useful it is. So inline block
is a little bit Well, like I said, it's a
381:41 - little bit hard to understand. But pretty
much what it does is take features from both
381:42 - inline and block level elements and combines
them together. So we know that inline elements
381:43 - do not move anything onto their own line,
we know that they stay in their place, they
381:44 - don't touch anything or move anything around.
Whereas block level elements, move them onto
381:45 - the new line. Now, what happens is that in
light, or this inline block element takes
381:46 - that new sticks that sort of new line feature
and removes it completely, it does not move
381:47 - anything onto its own new line. But what the
block level elements do is they actually create
381:48 - some spacing around the element once it's
moved on to its new block. So the inline block
381:49 - element then takes this and puts it into itself.
So the inline block element pretty much keeps
381:50 - everything in the same line, but creates that
block level spacing that can be found in other
381:51 - block level elements. So let's go through
and actually demonstrate how this works. I'm
381:52 - going to go back to my table and add our inline
block display property here, inline block.
381:53 - See that. So now you can see that it floats
over to the right. And now everything before
381:54 - it has kind of been pushed up onto this section
here. So there we go. Now it's working, and
381:55 - everything is looking great. Now let's look
at the next property, which is display. So
381:56 - display is pretty much a way of changing the
display property of an element that it naturally
381:57 - comes with. So of course, we know things like
a div or a paragraph tag come as a block level
381:58 - element, whereas something like a span or
a bolding tag would come as an inline element.
381:59 - So what we're going to be doing is going through
and changing these properties. Now, I didn't
382:00 - actually cover the properties of float, which
I'm going to go over in just a second. But
382:01 - what I'm going to talk about is the different
properties of display. So of course, you have
382:02 - the standard inline and block, which is pretty
obvious, but then you have a few others. So
382:03 - the one that I'm going to be covering here
is none now. So what the display none property
382:04 - does is pretty much just completely, almost
remove the element from the page. Now it doesn't
382:05 - actually remove it. But what happens is the
entire that invisible box that contains everything
382:06 - just suddenly disappears, you can't see it
anymore, it doesn't take up any space. It's
382:07 - just completely gone from the page. So I'm
going to show you what that looks like right
382:08 - now. Let's go ahead. And for example, let's
just say that this table is kind of annoying,
382:09 - we don't really want it here. So what I'm
going to do over here in my table is given
382:10 - a class of site table. Now I'm going to go
ahead and select it here, dot site dash table,
382:11 - and I'm going to say display is none. Now
watch what happens, you can see that that
382:12 - table completely disappears. And it doesn't
even take up the space anymore. It's not like
382:13 - the table. It's just invisible or not, not
what not visible, but it's completely gone.
382:14 - Now, this is very, very commonly used once
you start using JavaScript. And would you
382:15 - start making your site's interactive to maybe
create web games or hide something, maybe
382:16 - create some sort of hidden token, it can be
used for all sorts of things. So this is a
382:17 - very useful display property. So I'm going
to go ahead and remove that. Now the next
382:18 - one I want to talk about, I'm actually going
to, I'll just keep it there, if we decide
382:19 - to use it later. The next one I'm going to
talk about is inline block. So we know that
382:20 - we have two different display types, inline,
and block. But there's actually a combination
382:21 - of the two, which is a little bit hard to
understand. But once we start using it, you
382:22 - can see how useful it is. So inline block
is a little bit Well, like I said, it's a
382:23 - little bit hard to understand. But pretty
much what it does is take features from both
382:24 - inline and block level elements and combines
them together. So we know that inline elements
382:25 - do not move anything onto their own line,
we know that they stay in their place, they
382:26 - don't touch anything or move anything around.
Whereas block level elements, move them onto
382:27 - the new line. Now, what happens is that in
light, or this inline block element takes
382:28 - that new sticks that sort of new line feature
and removes it completely, it does not move
382:29 - anything onto its own new line. But what the
block level elements do is they actually create
382:30 - some spacing around the element once it's
moved on to its new block. So the inline block
382:31 - element then takes this and puts it into itself.
So the inline block element pretty much keeps
382:32 - everything in the same line, but creates that
block level spacing that can be found in other
382:33 - block level elements. So let's go through
and actually demonstrate how this works. I'm
382:34 - going to go back to my table and add our inline
block display property here, inline block.
382:35 - Now I'm going to go ahead and refresh the
page and see what happens. So you can see
382:36 - that it's kind of kept on the same line. But
it's given that sort of spacing or well block
382:37 - level spacing that you can't really find with
a normal inline element. If I actually go
382:38 - ahead and change this to inline here, you'll
see this very apparent, you can see that that
382:39 - click here to Google text has now moved around.
It's a little bit of a weird box here. So
382:40 - you can see the difference between an inline
element and an inline block element. So there
382:41 - you go. inline block is a very useful display
property. You can use it a lot in your website
382:42 - to maybe layout grids, and all sorts of things
like that. And we're actually going to be
382:43 - using some very special display properties
later in this course called flex and grid,
382:44 - which are really going to help us create these
beautiful grids and layouts that can transform
382:45 - our website. Everywhere. So that's pretty
much it for display. Now let's go on to talk
382:46 - about some of the other float properties,
because I kind of wanted to save it for last.
382:47 - So we already know that there are two main
float properties, which are left and right.
382:48 - But there's actually a few more that we can
use that are sort of different. And they're
382:49 - not very conventional, but they're still apparent.
And they can well change the way that while
382:50 - a palette, an element floats on the page.
So the first one is the most interesting one
382:51 - is the one that is, well, the only real floating
element, which is called inherit. So you can
382:52 - see here that we have Child Elements and parent
elements. Now, what's really interesting is,
382:53 - what can happen is if we have, let's say,
a div with an h2 and an image in it, what
382:54 - we can do is pretty much set the divs float
as right. And we can set the one of the child
382:55 - elements such as the h2, we can set its float
as inherit, what's going to happen is it's
382:56 - going to take the float property of the parent
element. Now, you're probably asking why this
382:57 - would be useful at hoc at all? Well, pretty
much, what you can do is you can actually
382:58 - lay out multiple elements without having to
specify their float as long as their children
382:59 - and parents. So for example, if you have an
element that's maybe four or five levels deep,
383:00 - and you don't want to specify the float every
time, you can just use an inherit element
383:01 - to move everything to the right side, with
only specifying the float once to the last
383:02 - value I want to talk about is the is the non
value. So this is kind of the default value
383:03 - that you're going to see if you don't specify
anything. And it's pretty much just going
383:04 - to keep the item in its place. It's not going
to change its float or display, and it's pretty
383:05 - much not going to move it around at all. It's
not the same as display none, though, it doesn't
383:06 - really remove anything, what float none pretty
much does, it's just leaves it where it naturally
383:07 - occurs in the text. So for example, if you
have a block level, div tag, and you've set
383:08 - its float to none, then it's just going to
appear as a block level elements is not going
383:09 - to move around or do anything similar. So
there you go. That's pretty much it for floats,
383:10 - and displays. We're going to be working with
these a lot throughout the rest of this course.
383:11 - And they're very important property. So I
recommend you get some practice with them,
383:12 - and start using them. So you can see all of
the different ways that you can use the display
383:13 - and flow properties in your website. Now,
apart from the box model, and a few other
383:14 - ways displays and floats are a very common
way or at least a word of manipulating your
383:15 - website and making it look really good. So
without it, the website is just kind of everywhere,
383:16 - all the elements are scattered around. But
if you want to really make the website, look
383:17 - how you want it to look, you need to use this
in combination with a few other features that
383:18 - we are going to learn in the future in order
to make your website look great. Alright,
383:19 - let's move on.
383:20 - Now I'm going to go ahead and refresh the
page and see what happens. So you can see
383:21 - that it's kind of kept on the same line. But
it's given that sort of spacing or well block
383:22 - level spacing that you can't really find with
a normal inline element. If I actually go
383:23 - ahead and change this to inline here, you'll
see this very apparent, you can see that that
383:24 - click here to Google text has now moved around.
It's a little bit of a weird box here. So
383:25 - you can see the difference between an inline
element and an inline block element. So there
383:26 - you go. inline block is a very useful display
property. You can use it a lot in your website
383:27 - to maybe layout grids, and all sorts of things
like that. And we're actually going to be
383:28 - using some very special display properties
later in this course called flex and grid,
383:29 - which are really going to help us create these
beautiful grids and layouts that can transform
383:30 - our website. Everywhere. So that's pretty
much it for display. Now let's go on to talk
383:31 - about some of the other float properties,
because I kind of wanted to save it for last.
383:32 - So we already know that there are two main
float properties, which are left and right.
383:33 - But there's actually a few more that we can
use that are sort of different. And they're
383:34 - not very conventional, but they're still apparent.
And they can well change the way that while
383:35 - a palette, an element floats on the page.
So the first one is the most interesting one
383:36 - is the one that is, well, the only real floating
element, which is called inherit. So you can
383:37 - see here that we have Child Elements and parent
elements. Now, what's really interesting is,
383:38 - what can happen is if we have, let's say,
a div with an h2 and an image in it, what
383:39 - we can do is pretty much set the divs float
as right. And we can set the one of the child
383:40 - elements such as the h2, we can set its float
as inherit, what's going to happen is it's
383:41 - going to take the float property of the parent
element. Now, you're probably asking why this
383:42 - would be useful at hoc at all? Well, pretty
much, what you can do is you can actually
383:43 - lay out multiple elements without having to
specify their float as long as their children
383:44 - and parents. So for example, if you have an
element that's maybe four or five levels deep,
383:45 - and you don't want to specify the float every
time, you can just use an inherit element
383:46 - to move everything to the right side, with
only specifying the float once to the last
383:47 - value I want to talk about is the is the non
value. So this is kind of the default value
383:48 - that you're going to see if you don't specify
anything. And it's pretty much just going
383:49 - to keep the item in its place. It's not going
to change its float or display, and it's pretty
383:50 - much not going to move it around at all. It's
not the same as display none, though, it doesn't
383:51 - really remove anything, what float none pretty
much does, it's just leaves it where it naturally
383:52 - occurs in the text. So for example, if you
have a block level, div tag, and you've set
383:53 - its float to none, then it's just going to
appear as a block level elements is not going
383:54 - to move around or do anything similar. So
there you go. That's pretty much it for floats,
383:55 - and displays. We're going to be working with
these a lot throughout the rest of this course.
383:56 - And they're very important property. So I
recommend you get some practice with them,
383:57 - and start using them. So you can see all of
the different ways that you can use the display
383:58 - and flow properties in your website. Now,
apart from the box model, and a few other
383:59 - ways displays and floats are a very common
way or at least a word of manipulating your
384:00 - website and making it look really good. So
without it, the website is just kind of everywhere,
384:01 - all the elements are scattered around. But
if you want to really make the website, look
384:02 - how you want it to look, you need to use this
in combination with a few other features that
384:03 - we are going to learn in the future in order
to make your website look great. Alright,
384:04 - let's move on.
384:05 - So today we're going to get started with a
new topic in CSS. And this is a very exciting
384:06 - one, because we're going to start learning
more about very advanced layout techniques.
384:07 - So in the past, we've learned about two pretty
basic layout to learn about floats and displays
384:08 - and the box model, but they're not really
enough to create the best websites possible.
384:09 - To do that, we're going to need some extra
advanced techniques, which is what we're going
384:10 - to be covering in the next three sections.
In this first section, we're going to be looking
384:11 - at CSS Flexbox. Now we're going to give a
quick or I'm going to give a quick introduction
384:12 - to it. In this video, we'll be talking a little
bit about what it is, how it works, and how
384:13 - you can apply it and what you can do with
it. But for now, we're just going to go ahead
384:14 - and get started with it. So first of all,
what actually is Flexbox. So if you don't
384:15 - know already, Flexbox stands for flexible
box. And similar to the box model. It's a
384:16 - concept in CSS, or a feature that allows you
to create and arrange items or elements very
384:17 - easily. So it's a great alternative to using
something like the box model or floats or
384:18 - displays if you want to create very responsive
websites or lay out your items in a way that
384:19 - makes it look great. So this is an alternative
to using those traditional techniques that
384:20 - were using earlier versions of CSS. So the
Flexbox or the main Flexbox is split into
384:21 - two different components. You have the container
and the flex items. So the container is the
384:22 - parent element, it's what is going to become
the container for all of the items now. Usually
384:23 - what you would do is use this on a div or
some other form of container element. And
384:24 - then use some special properties which we're
going to be covering in the next video to
384:25 - create the flex container. But then the next
part is the flex items. So this can be pretty
384:26 - much anything you want images, links, spans
whatever you want, you can add them as flex
384:27 - items and this is what makes up the flex box.
Now What you can do with these two components
384:28 - is actually use different properties to manipulate
them and create really nice layout like this
384:29 - one that we have here. And that's what we're
actually going to be covering in the next
384:30 - few videos is learning how to manipulate the
container as well as the items inside. So
384:31 - what can you actually do with Flexbox? Well,
you know that you can create these nice responsive
384:32 - grids, but what would you actually use them
for? Well, although it might not be apparent,
384:33 - pretty much all pages these days use some
form of CSS layout, whether it be the box
384:34 - model, or Flexbox, or CSS Grid, which we're
going to be covering in the next section,
384:35 - there are so many ways that it can be used.
Flexbox is mainly used to layout a website
384:36 - or create different components. So for example,
the top of the page is going to contain your
384:37 - sidebar, that's one flex item. And then you
have the right side of your page, which takes
384:38 - up maybe 30% of the page. And that's your
or Yeah, so the top is your menu, for example.
384:39 - And then the side on the right is your sidebar,
and you have the rest is content and you have
384:40 - little widgets everywhere. And you can start
to see how this all connects together, you
384:41 - can create really good looking websites by
creating one huge flex container, and then
384:42 - creating a bunch of separate items, putting
all of your different things in those items.
384:43 - So it's pretty much just a way to layout your
website. Now in the past, we've used floats
384:44 - to move images around. And we've used also
margin and padding to push things up and down.
384:45 - But that's not a really efficient way, it's
more of a kind of hack to move things around.
384:46 - And using something like Flexbox pretty much
lets you do all of this naturally. Alright,
384:47 - so there we go. That's a little introduction
to Flexbox. And how it works. Now what we're
384:48 - going to do is go ahead and go onto our machine
and start creating some flex containers. Alright,
384:49 - let's move on.
384:50 - So today we're going to get started with a
new topic in CSS. And this is a very exciting
384:51 - one, because we're going to start learning
more about very advanced layout techniques.
384:52 - So in the past, we've learned about two pretty
basic layout to learn about floats and displays
384:53 - and the box model, but they're not really
enough to create the best websites possible.
384:54 - To do that, we're going to need some extra
advanced techniques, which is what we're going
384:55 - to be covering in the next three sections.
In this first section, we're going to be looking
384:56 - at CSS Flexbox. Now we're going to give a
quick or I'm going to give a quick introduction
384:57 - to it. In this video, we'll be talking a little
bit about what it is, how it works, and how
384:58 - you can apply it and what you can do with
it. But for now, we're just going to go ahead
384:59 - and get started with it. So first of all,
what actually is Flexbox. So if you don't
385:00 - know already, Flexbox stands for flexible
box. And similar to the box model. It's a
385:01 - concept in CSS, or a feature that allows you
to create and arrange items or elements very
385:02 - easily. So it's a great alternative to using
something like the box model or floats or
385:03 - displays if you want to create very responsive
websites or lay out your items in a way that
385:04 - makes it look great. So this is an alternative
to using those traditional techniques that
385:05 - were using earlier versions of CSS. So the
Flexbox or the main Flexbox is split into
385:06 - two different components. You have the container
and the flex items. So the container is the
385:07 - parent element, it's what is going to become
the container for all of the items now. Usually
385:08 - what you would do is use this on a div or
some other form of container element. And
385:09 - then use some special properties which we're
going to be covering in the next video to
385:10 - create the flex container. But then the next
part is the flex items. So this can be pretty
385:11 - much anything you want images, links, spans
whatever you want, you can add them as flex
385:12 - items and this is what makes up the flex box.
Now What you can do with these two components
385:13 - is actually use different properties to manipulate
them and create really nice layout like this
385:14 - one that we have here. And that's what we're
actually going to be covering in the next
385:15 - few videos is learning how to manipulate the
container as well as the items inside. So
385:16 - what can you actually do with Flexbox? Well,
you know that you can create these nice responsive
385:17 - grids, but what would you actually use them
for? Well, although it might not be apparent,
385:18 - pretty much all pages these days use some
form of CSS layout, whether it be the box
385:19 - model, or Flexbox, or CSS Grid, which we're
going to be covering in the next section,
385:20 - there are so many ways that it can be used.
Flexbox is mainly used to layout a website
385:21 - or create different components. So for example,
the top of the page is going to contain your
385:22 - sidebar, that's one flex item. And then you
have the right side of your page, which takes
385:23 - up maybe 30% of the page. And that's your
or Yeah, so the top is your menu, for example.
385:24 - And then the side on the right is your sidebar,
and you have the rest is content and you have
385:25 - little widgets everywhere. And you can start
to see how this all connects together, you
385:26 - can create really good looking websites by
creating one huge flex container, and then
385:27 - creating a bunch of separate items, putting
all of your different things in those items.
385:28 - So it's pretty much just a way to layout your
website. Now in the past, we've used floats
385:29 - to move images around. And we've used also
margin and padding to push things up and down.
385:30 - But that's not a really efficient way, it's
more of a kind of hack to move things around.
385:31 - And using something like Flexbox pretty much
lets you do all of this naturally. Alright,
385:32 - so there we go. That's a little introduction
to Flexbox. And how it works. Now what we're
385:33 - going to do is go ahead and go onto our machine
and start creating some flex containers. Alright,
385:34 - let's move on.
385:35 - So in this video, we're going to be going
ahead and creating our first flex container
385:36 - or Flexbox. Now, I already have some apparatus
set up here so that we can get started straight
385:37 - away without having to go and do anything
with any of the styling. And this is the best
385:38 - way to really see how Flexbox works. Because
without it, you know, it's just kind of look,
385:39 - it's gonna look kind of weird, all the invisible
backgrounds and things. So I think this is
385:40 - the best way to really see demonstrate how
Flexbox works. Alright, let's get started.
385:41 - So well, it's actually quite easy to set up
a flex container, the hard part is creating
385:42 - how you want, but it uses the display property
just like any other item on this page. So
385:43 - when we set the display to block or inline,
block or inline, we do all of that. But we
385:44 - can actually set it to flex. And what that's
going to do is create our flex container.
385:45 - So all we have to do is go ahead and find
our parent element, the container that we
385:46 - want, and I already have the class set up
here. If you want to go ahead and do this
385:47 - on your own, you can, like I said, if maybe
if you want to copy these styles, for example,
385:48 - you can go ahead and check out the project
files. But like I said, you can just go ahead
385:49 - and create your own setup so that you can
start working with it. So first of all, we're
385:50 - going to go ahead and find our parent element.
So in this case, these are going to be our
385:51 - items in the future. And then this div is
our main element. So I'm going to go over
385:52 - here. And I will go into go ahead and give
it the display property of flex. Now, instead
385:53 - of doing something like block or inline block,
instead, we set it to flex. And what this
385:54 - is going to do is create our flex container.
Now watch what happens. You can see now that
385:55 - instead of having it just in a row, all of
these items have been spaced out accordingly.
385:56 - Now all of the default values of all of the
flex properties have now been set up now that
385:57 - our display mode has been activated. Now in
the next few videos, we're actually going
385:58 - to be going through and manipulating these
properties. For example, changing the order,
385:59 - we're going to change the size and width of
these. And we're going to go ahead and justify
386:00 - and align the content. But that's for a future
video. For now, all you need to know is that
386:01 - by setting the display property to flex on
a parent container, it's going to set up all
386:02 - the default values of the flex properties
and create the flex container that we want
386:03 - to work with in the next few videos. Alright,
let's move on.
386:04 - So in this video, we're going to be going
ahead and creating our first flex container
386:05 - or Flexbox. Now, I already have some apparatus
set up here so that we can get started straight
386:06 - away without having to go and do anything
with any of the styling. And this is the best
386:07 - way to really see how Flexbox works. Because
without it, you know, it's just kind of look,
386:08 - it's gonna look kind of weird, all the invisible
backgrounds and things. So I think this is
386:09 - the best way to really see demonstrate how
Flexbox works. Alright, let's get started.
386:10 - So well, it's actually quite easy to set up
a flex container, the hard part is creating
386:11 - how you want, but it uses the display property
just like any other item on this page. So
386:12 - when we set the display to block or inline,
block or inline, we do all of that. But we
386:13 - can actually set it to flex. And what that's
going to do is create our flex container.
386:14 - So all we have to do is go ahead and find
our parent element, the container that we
386:15 - want, and I already have the class set up
here. If you want to go ahead and do this
386:16 - on your own, you can, like I said, if maybe
if you want to copy these styles, for example,
386:17 - you can go ahead and check out the project
files. But like I said, you can just go ahead
386:18 - and create your own setup so that you can
start working with it. So first of all, we're
386:19 - going to go ahead and find our parent element.
So in this case, these are going to be our
386:20 - items in the future. And then this div is
our main element. So I'm going to go over
386:21 - here. And I will go into go ahead and give
it the display property of flex. Now, instead
386:22 - of doing something like block or inline block,
instead, we set it to flex. And what this
386:23 - is going to do is create our flex container.
Now watch what happens. You can see now that
386:24 - instead of having it just in a row, all of
these items have been spaced out accordingly.
386:25 - Now all of the default values of all of the
flex properties have now been set up now that
386:26 - our display mode has been activated. Now in
the next few videos, we're actually going
386:27 - to be going through and manipulating these
properties. For example, changing the order,
386:28 - we're going to change the size and width of
these. And we're going to go ahead and justify
386:29 - and align the content. But that's for a future
video. For now, all you need to know is that
386:30 - by setting the display property to flex on
a parent container, it's going to set up all
386:31 - the default values of the flex properties
and create the flex container that we want
386:32 - to work with in the next few videos. Alright,
let's move on.
386:33 - So in this video, we're going to be covering
two of the properties of our flex container,
386:34 - direction and wrap. So right now we have everything
set up. We have five flex items here labeled
386:35 - A to E, and then we also have our container.
But now we're going to go through and start
386:36 - manipulating it. So the first thing I want
to talk about is flex direction. So pretty
386:37 - much right now it's laid out in a row here,
but what we can actually do is specify the
386:38 - direction that we want our items to go in.
We can also reverse the order using a special
386:39 - suffix. Let's get started. So the property
that we're going to use is flex direction,
386:40 - flex dash direction. And you add this to the
container to the flex container. So here we're
386:41 - going to specify either row or column row
is the default value, and it's going to be
386:42 - going in a direction to the right side of
the container. We also have column, which
386:43 - is what we kind of saw before. And you can
see it's a little bit better spaced out. And
386:44 - you can see it goes A to E, except it goes
in a column. Now, that's pretty easy to understand.
386:45 - But we can also go reverse. So instead of
A to E, it goes eat a, all we have to do is
386:46 - add dash reverse to column a row, and it's
going to flip the direction that our item
386:47 - is going in. Let's refresh. And now you can
see it's going in reverse. We can also do
386:48 - the same thing with row or pretty much any
other value for this property here. You can
386:49 - see now it goes E to a, and it also goes in
the opposite way to the left side of the page
386:50 - instead of to the right side. So that's it
for flex direction, it's very easy to understand,
386:51 - I'm just going to go ahead and set it back
to wrote the default. The next item I want
386:52 - to talk about is flex wrap. So this is a little
bit more complicated to understand. But once
386:53 - we start using it, it gets quite easy. Pretty
much when you wrap an item, it's going to
386:54 - move it to a new row or column to avoid the
exceeding the maximum length. So for example,
386:55 - if we had more than the specified amount of
items here, so if we had a, b, c, d, e, and
386:56 - then F, G, H, I and all the ways to K or L,
we don't want it to keep going on forever.
386:57 - So what we want to do is once it gets to a
certain length, rump length, wrap it around
386:58 - and move it to a new line. So I'm actually
going to go ahead and do that here. I'm going
386:59 - to go ahead and copy all of these items, pretty
much double it. And then I'm going to say
387:00 - f, g, h, i and j. And now let's go ahead and
refresh the page and see how this looks. You
387:01 - can see we have now abcdefg H I J. And of
course it's not going past the page yet, but
387:02 - we can actually wrap this around and see how
it looks. So all we have to do is add the
387:03 - flex dash wrap property. And now we can either
specify we can specify one of two values,
387:04 - wrap and no rap. So I'm going to go ahead
and say rap. Now if we go ahead and refresh
387:05 - the page, you can see that instead of kind
of squeezing in the space or changing the
387:06 - spacing, it just moves this to a new row,
we can also go ahead and use rock reverse,
387:07 - which pretty much revolves, it does the exact
same thing, but it reverses the order. So
387:08 - now if we go ahead and refresh, you can see
that this whole thing is kind of flipped.
387:09 - Now normally, you won't see rapper verse used.
So I would just go ahead and learn how to
387:10 - use rap and no rap. Now, of course, if you're
going to go ahead and use no rap, it's usually
387:11 - because of some inherited value, because again,
no rap is the default value that's used, so
387:12 - you won't really see it commonly in CSS. Let's
go ahead and set the property back to wrap.
387:13 - So those are the two main properties that
we're going to cover in this video is wrap
387:14 - and flex direction. Now, of course, these
are two very basic properties, but they're
387:15 - still very useful. And you can really see
how this can be used commonly inside our website
387:16 - and inside web development as a whole. Alright,
so that's pretty much it for these two properties.
387:17 - Let's move on to some of the other properties
that we can use on our flex container in CSS.
387:18 - So in this video, we're going to be covering
two of the properties of our flex container,
387:19 - direction and wrap. So right now we have everything
set up. We have five flex items here labeled
387:20 - A to E, and then we also have our container.
But now we're going to go through and start
387:21 - manipulating it. So the first thing I want
to talk about is flex direction. So pretty
387:22 - much right now it's laid out in a row here,
but what we can actually do is specify the
387:23 - direction that we want our items to go in.
We can also reverse the order using a special
387:24 - suffix. Let's get started. So the property
that we're going to use is flex direction,
387:25 - flex dash direction. And you add this to the
container to the flex container. So here we're
387:26 - going to specify either row or column row
is the default value, and it's going to be
387:27 - going in a direction to the right side of
the container. We also have column, which
387:28 - is what we kind of saw before. And you can
see it's a little bit better spaced out. And
387:29 - you can see it goes A to E, except it goes
in a column. Now, that's pretty easy to understand.
387:30 - But we can also go reverse. So instead of
A to E, it goes eat a, all we have to do is
387:31 - add dash reverse to column a row, and it's
going to flip the direction that our item
387:32 - is going in. Let's refresh. And now you can
see it's going in reverse. We can also do
387:33 - the same thing with row or pretty much any
other value for this property here. You can
387:34 - see now it goes E to a, and it also goes in
the opposite way to the left side of the page
387:35 - instead of to the right side. So that's it
for flex direction, it's very easy to understand,
387:36 - I'm just going to go ahead and set it back
to wrote the default. The next item I want
387:37 - to talk about is flex wrap. So this is a little
bit more complicated to understand. But once
387:38 - we start using it, it gets quite easy. Pretty
much when you wrap an item, it's going to
387:39 - move it to a new row or column to avoid the
exceeding the maximum length. So for example,
387:40 - if we had more than the specified amount of
items here, so if we had a, b, c, d, e, and
387:41 - then F, G, H, I and all the ways to K or L,
we don't want it to keep going on forever.
387:42 - So what we want to do is once it gets to a
certain length, rump length, wrap it around
387:43 - and move it to a new line. So I'm actually
going to go ahead and do that here. I'm going
387:44 - to go ahead and copy all of these items, pretty
much double it. And then I'm going to say
387:45 - f, g, h, i and j. And now let's go ahead and
refresh the page and see how this looks. You
387:46 - can see we have now abcdefg H I J. And of
course it's not going past the page yet, but
387:47 - we can actually wrap this around and see how
it looks. So all we have to do is add the
387:48 - flex dash wrap property. And now we can either
specify we can specify one of two values,
387:49 - wrap and no rap. So I'm going to go ahead
and say rap. Now if we go ahead and refresh
387:50 - the page, you can see that instead of kind
of squeezing in the space or changing the
387:51 - spacing, it just moves this to a new row,
we can also go ahead and use rock reverse,
387:52 - which pretty much revolves, it does the exact
same thing, but it reverses the order. So
387:53 - now if we go ahead and refresh, you can see
that this whole thing is kind of flipped.
387:54 - Now normally, you won't see rapper verse used.
So I would just go ahead and learn how to
387:55 - use rap and no rap. Now, of course, if you're
going to go ahead and use no rap, it's usually
387:56 - because of some inherited value, because again,
no rap is the default value that's used, so
387:57 - you won't really see it commonly in CSS. Let's
go ahead and set the property back to wrap.
387:58 - So those are the two main properties that
we're going to cover in this video is wrap
387:59 - and flex direction. Now, of course, these
are two very basic properties, but they're
388:00 - still very useful. And you can really see
how this can be used commonly inside our website
388:01 - and inside web development as a whole. Alright,
so that's pretty much it for these two properties.
388:02 - Let's move on to some of the other properties
that we can use on our flex container in CSS.
388:03 - So in this video, we're going to be talking
about two very important elements or what
388:04 - properties that can be used to justify and
align flex items inside of container. So we're
388:05 - going to be talking about two main properties,
one of them is going to be responsible for
388:06 - the horizontal alignment, and the other for
the vertical alignment. So let's talk about
388:07 - them. The first one which is for horizontal
alignment is called justify content. Now,
388:08 - both of these ello, both of these properties
actually contained three main values which
388:09 - are shared between the two of them. And then
each of them can take two special values,
388:10 - which actually align them in a pretty different
way than you would expect. So let's talk about
388:11 - justify content. Now first of all, you'll
notice that these are a little bit stretched
388:12 - out, don't worry about that for now, that's
just because of the added height to the container
388:13 - will talk about that in just a second. But
let's get started. So the first three properties
388:14 - that are pretty common are flex start, flex
end, and center. So flex start is going to
388:15 - be where the container starts, which in this
case is on the left. On the other hand, the
388:16 - end is going to be the opposite. So on in
this container, it's on the right and then
388:17 - center positions in the middle. So what I'm
going to do here is just set it as center
388:18 - for now. And you can see that now all of our
eyes limbs have been centered in the middle
388:19 - here. If I said something like flex end, and
remember, it does contain a dash in there,
388:20 - it's going to move everything to the end of
the container here. So those are the three
388:21 - main values. Let's talk about the two special
ones now. Now, pretty much these ones are
388:22 - going to be messing a little bit with the
spacing between these, but they are still
388:23 - related to alignment, because it's changing
the spacing in a way that does actually align
388:24 - our elements here. So the two main values
are space around and space between. So let's
388:25 - talk about space between first, what happens
is that space, the spacing between the flex
388:26 - items is created so that it's all equal. And
it creates equal divisions to move everything
388:27 - on well, equally divided from each other on
the same row. On the other hand, space around
388:28 - actually creates spacing on all sides of the
item. So instead of just creating them between,
388:29 - it's going to create them between some of
the flex items and the edges. So though, that's
388:30 - the main difference between the two, and it
depends on what you really want. So for example,
388:31 - if you want a centered kind of item or a centered
Flexbox, what you would do is use the space
388:32 - around property. Whereas if you wanted something
to be stretched out, you would use the space
388:33 - between property.
388:34 - So in this video, we're going to be talking
about two very important elements or what
388:35 - properties that can be used to justify and
align flex items inside of container. So we're
388:36 - going to be talking about two main properties,
one of them is going to be responsible for
388:37 - the horizontal alignment, and the other for
the vertical alignment. So let's talk about
388:38 - them. The first one which is for horizontal
alignment is called justify content. Now,
388:39 - both of these ello, both of these properties
actually contained three main values which
388:40 - are shared between the two of them. And then
each of them can take two special values,
388:41 - which actually align them in a pretty different
way than you would expect. So let's talk about
388:42 - justify content. Now first of all, you'll
notice that these are a little bit stretched
388:43 - out, don't worry about that for now, that's
just because of the added height to the container
388:44 - will talk about that in just a second. But
let's get started. So the first three properties
388:45 - that are pretty common are flex start, flex
end, and center. So flex start is going to
388:46 - be where the container starts, which in this
case is on the left. On the other hand, the
388:47 - end is going to be the opposite. So on in
this container, it's on the right and then
388:48 - center positions in the middle. So what I'm
going to do here is just set it as center
388:49 - for now. And you can see that now all of our
eyes limbs have been centered in the middle
388:50 - here. If I said something like flex end, and
remember, it does contain a dash in there,
388:51 - it's going to move everything to the end of
the container here. So those are the three
388:52 - main values. Let's talk about the two special
ones now. Now, pretty much these ones are
388:53 - going to be messing a little bit with the
spacing between these, but they are still
388:54 - related to alignment, because it's changing
the spacing in a way that does actually align
388:55 - our elements here. So the two main values
are space around and space between. So let's
388:56 - talk about space between first, what happens
is that space, the spacing between the flex
388:57 - items is created so that it's all equal. And
it creates equal divisions to move everything
388:58 - on well, equally divided from each other on
the same row. On the other hand, space around
388:59 - actually creates spacing on all sides of the
item. So instead of just creating them between,
389:00 - it's going to create them between some of
the flex items and the edges. So though, that's
389:01 - the main difference between the two, and it
depends on what you really want. So for example,
389:02 - if you want a centered kind of item or a centered
Flexbox, what you would do is use the space
389:03 - around property. Whereas if you wanted something
to be stretched out, you would use the space
389:04 - between property.
389:05 - So there we go. Those are some of the little
items or values that you can use under justify
389:06 - content property. Now let's move on to align
items. So this is the property that aligns
389:07 - it vertically. Now by default, it's set to
stretch, which is what we can see here. So
389:08 - it just stretches all the way across down
to the bottom of the container, we can actually
389:09 - change this. So let's go ahead and add this
property align items. Now what we're going
389:10 - to do is change it to center. So just like
before, we have three main values, flex, start
389:11 - flex, and and center, you can see that immediately.
Now all of these items are still spaced in
389:12 - between, but they have been moved to the center
here. So you can see here that on the Align
389:13 - items, this has been arranged vertically,
it this is the start at the top and the and
389:14 - the bottom and the flex end is well at the
bottom of the container, justify content says
389:15 - the flex start is on the left side, and the
flex end is on the right. So there we go,
389:16 - you can see what this is what this looks like
right here is when we align the items, it
389:17 - centers it in between the top and the bottom.
So let's go ahead and just see what the other
389:18 - values look like. So for example, flex start.
So for, let's just say you want to keep the
389:19 - height of these items the same, you don't
want to stretch them, this is what you would
389:20 - do, you could also set it to flex and if you
wanted something to appear at the end of the
389:21 - page. And yeah, that's pretty much it for
those three main values. Now let's talk about
389:22 - the two special values. So these are a little
bit different because they don't follow some
389:23 - general convention. But the two values are
baseline and stretch. Now we've already covered
389:24 - stretch a little bit in the beginning of this
in which we could set stretch as our default
389:25 - value. And all that does is just align it
all the way through from top to bottom. But
389:26 - baseline is a little bit different. Now unfortunately,
we can't really see the effect, apparent right
389:27 - here. But pretty much what happens is that
all of these items, no matter their size,
389:28 - are aligned to a baseline. Now if I actually
go and add some inline styles to override
389:29 - some of these, so for example B, I'm going
to let's just say I'm going to make the line
389:30 - height, which is a property we haven't actually
learned yet, what we're going to do is just
389:31 - set the line height to whoops, real problem
there, I'm going to set this to 100 pixels,
389:32 - like that. And now what I'm going to do is
go ahead and refresh the page and see what
389:33 - happens, you can see that this is a little
bit higher, but they're all aligned on the
389:34 - same line, you can see that the fonts here
have been changed a little bit not really
389:35 - not really apparent here. But you can see
the heights are different, but they're still
389:36 - all in the same line. So that's what baseline
actually does it just no matter the size,
389:37 - or the font text or anything, it's all going
to keep them or it's going to keep them all
389:38 - on the same baseline. And that's what it does.
Alright, so I'm going to go ahead and remove
389:39 - this inline style, since we don't need it.
And those are pretty much the two main alignment
389:40 - properties. Now if you wanted to align something
to the center of a Flexbox, what you would
389:41 - do is just set justify content and jaw and
align items, both of them to the center. And
389:42 - what that's gonna do is just align everything
to the center of the flex box. So that's what
389:43 - I've just done here is I've set both of them
to center so that way on top, it's centered
389:44 - between the top and the bottom as well as
the left and the right. Alright, let's move
389:45 - on.
389:46 - So there we go. Those are some of the little
items or values that you can use under justify
389:47 - content property. Now let's move on to align
items. So this is the property that aligns
389:48 - it vertically. Now by default, it's set to
stretch, which is what we can see here. So
389:49 - it just stretches all the way across down
to the bottom of the container, we can actually
389:50 - change this. So let's go ahead and add this
property align items. Now what we're going
389:51 - to do is change it to center. So just like
before, we have three main values, flex, start
389:52 - flex, and and center, you can see that immediately.
Now all of these items are still spaced in
389:53 - between, but they have been moved to the center
here. So you can see here that on the Align
389:54 - items, this has been arranged vertically,
it this is the start at the top and the and
389:55 - the bottom and the flex end is well at the
bottom of the container, justify content says
389:56 - the flex start is on the left side, and the
flex end is on the right. So there we go,
389:57 - you can see what this is what this looks like
right here is when we align the items, it
389:58 - centers it in between the top and the bottom.
So let's go ahead and just see what the other
389:59 - values look like. So for example, flex start.
So for, let's just say you want to keep the
390:00 - height of these items the same, you don't
want to stretch them, this is what you would
390:01 - do, you could also set it to flex and if you
wanted something to appear at the end of the
390:02 - page. And yeah, that's pretty much it for
those three main values. Now let's talk about
390:03 - the two special values. So these are a little
bit different because they don't follow some
390:04 - general convention. But the two values are
baseline and stretch. Now we've already covered
390:05 - stretch a little bit in the beginning of this
in which we could set stretch as our default
390:06 - value. And all that does is just align it
all the way through from top to bottom. But
390:07 - baseline is a little bit different. Now unfortunately,
we can't really see the effect, apparent right
390:08 - here. But pretty much what happens is that
all of these items, no matter their size,
390:09 - are aligned to a baseline. Now if I actually
go and add some inline styles to override
390:10 - some of these, so for example B, I'm going
to let's just say I'm going to make the line
390:11 - height, which is a property we haven't actually
learned yet, what we're going to do is just
390:12 - set the line height to whoops, real problem
there, I'm going to set this to 100 pixels,
390:13 - like that. And now what I'm going to do is
go ahead and refresh the page and see what
390:14 - happens, you can see that this is a little
bit higher, but they're all aligned on the
390:15 - same line, you can see that the fonts here
have been changed a little bit not really
390:16 - not really apparent here. But you can see
the heights are different, but they're still
390:17 - all in the same line. So that's what baseline
actually does it just no matter the size,
390:18 - or the font text or anything, it's all going
to keep them or it's going to keep them all
390:19 - on the same baseline. And that's what it does.
Alright, so I'm going to go ahead and remove
390:20 - this inline style, since we don't need it.
And those are pretty much the two main alignment
390:21 - properties. Now if you wanted to align something
to the center of a Flexbox, what you would
390:22 - do is just set justify content and jaw and
align items, both of them to the center. And
390:23 - what that's gonna do is just align everything
to the center of the flex box. So that's what
390:24 - I've just done here is I've set both of them
to center so that way on top, it's centered
390:25 - between the top and the bottom as well as
the left and the right. Alright, let's move
390:26 - on.
390:27 - So for the first part of this section, we've
been talking about a lot of the properties
390:28 - that we can use for the actual flex container.
So you can see that we've covered five here,
390:29 - the display type, which is to create the container,
the direction wrap, and our content alignment
390:30 - properties. But we haven't actually talked
anything about the items themselves, because
390:31 - we've just been looking at the container.
So that's what we're going to be doing over
390:32 - the next few videos is looking at some of
the properties that we can use on our items
390:33 - themselves to change how they look. And that's
when the real power of Flexbox comes in, and
390:34 - really shows how it can be used. So the first
item that we're going to be covering or property
390:35 - in this case is flex item order. Now, instead
of adding this directly to the container,
390:36 - we can actually go through and add this to
the flex items themselves. So I'm going to
390:37 - hold Ctrl or Command if you're on Mac, and
go ahead and add our style property to all
390:38 - five of these flex items, because what we're
going to actually have to do is add this property
390:39 - to all of our items, seems like a new line
was created there. Let's get started. So pretty
390:40 - much what we're going to be doing is using
a property to change the positioning or order
390:41 - in this case of our flex items. So I'm going
to go ahead and create that multiple cursor
390:42 - feature again. And the property we're going
to use is order. Now what we can do is go
390:43 - ahead and start specifying our order. So pretty
much what we're going to do is go through
390:44 - and change what this looks like and how this
looks like in our place here. So what we're
390:45 - going to do is go and specify our values.
And then we're instead of having it from A
390:46 - to E, we're actually going to go through and
add something to make these properties look
390:47 - in a different way instead of having to actually
move all of these around. So instead of moving
390:48 - the divs around, and you know changing all
of them, we're actually going to go through
390:49 - and specify some numbers. So let's get started.
So what we're going to use for this is numbers.
390:50 - Now, this ranges from one all the way up to
as many numbers or as many items as you have,
390:51 - and the default value is zero. And this is
just going to keep it in its position. But
390:52 - we can actually specify the number to see
where it lands. So let's just say that I want
390:53 - D first, what I'm going to do is go ahead
and under my order property, add a one, just
390:54 - like that. Now I'm going to go ahead and add
E, so I'm going to set my order to two. Now
390:55 - if you've worked with computers before, you
might think that it starts with zero, but
390:56 - in this case, zero is our default value. So
we're not actually going to be using that.
390:57 - So I have D then E. Now let's say I would
be next. So I'm going to put it under the
390:58 - third position. Now for C or actually a, I'm
going to put as the fourth position, and C
390:59 - is the last. So let's see if this holds up
here, we refresh the page d V AC. So you can
391:00 - see that we can actually change the order
of these flex items directly from our CSS
391:01 - instead of having to go through and move them
around. Now you might know you might be wondering
391:02 - why this could be useful at all. Now, although
might not be apparent here because we haven't
391:03 - actually gotten, we're using the JavaScript.
Once you start making your website interactive,
391:04 - this becomes a very useful features. Because
you can't just go through and program something
391:05 - to move the divs around in your HTML document
without using some sort of file reading. Instead,
391:06 - it's much easier to just add a style to it,
where you can change the order, maybe even
391:07 - randomly. So you can see how this would work.
And although like I said, although it's may
391:08 - not be useful in this case, it will definitely
be useful once you start learning about JavaScript
391:09 - and start making your websites interactive.
So that's a little bit about flex order. Now
391:10 - just one thing, you don't actually have to
use it with an inline style tag. But it would
391:11 - be much easier considering that if without
it, you'd have to go and add an individual
391:12 - class to every single item. Now, of course,
it's much easier to just go ahead and add
391:13 - a style tag to each of these. But if you want
to use it with a class method, maybe you already
391:14 - have an existing class, you can go ahead and
do that. There's nothing wrong with that.
391:15 - I'm just using this because it's a lot more
convenient and easy to use. Alright, so that's
391:16 - pretty much it about flex order. It's quite
easy to learn once you know how to find the
391:17 - positions of items and how you know how to
order them in the right way. As long as you
391:18 - know the number of items you have, it's very
easy to position them just the way you like
391:19 - it. Alright, let's move on.
391:20 - So for the first part of this section, we've
been talking about a lot of the properties
391:21 - that we can use for the actual flex container.
So you can see that we've covered five here,
391:22 - the display type, which is to create the container,
the direction wrap, and our content alignment
391:23 - properties. But we haven't actually talked
anything about the items themselves, because
391:24 - we've just been looking at the container.
So that's what we're going to be doing over
391:25 - the next few videos is looking at some of
the properties that we can use on our items
391:26 - themselves to change how they look. And that's
when the real power of Flexbox comes in, and
391:27 - really shows how it can be used. So the first
item that we're going to be covering or property
391:28 - in this case is flex item order. Now, instead
of adding this directly to the container,
391:29 - we can actually go through and add this to
the flex items themselves. So I'm going to
391:30 - hold Ctrl or Command if you're on Mac, and
go ahead and add our style property to all
391:31 - five of these flex items, because what we're
going to actually have to do is add this property
391:32 - to all of our items, seems like a new line
was created there. Let's get started. So pretty
391:33 - much what we're going to be doing is using
a property to change the positioning or order
391:34 - in this case of our flex items. So I'm going
to go ahead and create that multiple cursor
391:35 - feature again. And the property we're going
to use is order. Now what we can do is go
391:36 - ahead and start specifying our order. So pretty
much what we're going to do is go through
391:37 - and change what this looks like and how this
looks like in our place here. So what we're
391:38 - going to do is go and specify our values.
And then we're instead of having it from A
391:39 - to E, we're actually going to go through and
add something to make these properties look
391:40 - in a different way instead of having to actually
move all of these around. So instead of moving
391:41 - the divs around, and you know changing all
of them, we're actually going to go through
391:42 - and specify some numbers. So let's get started.
So what we're going to use for this is numbers.
391:43 - Now, this ranges from one all the way up to
as many numbers or as many items as you have,
391:44 - and the default value is zero. And this is
just going to keep it in its position. But
391:45 - we can actually specify the number to see
where it lands. So let's just say that I want
391:46 - D first, what I'm going to do is go ahead
and under my order property, add a one, just
391:47 - like that. Now I'm going to go ahead and add
E, so I'm going to set my order to two. Now
391:48 - if you've worked with computers before, you
might think that it starts with zero, but
391:49 - in this case, zero is our default value. So
we're not actually going to be using that.
391:50 - So I have D then E. Now let's say I would
be next. So I'm going to put it under the
391:51 - third position. Now for C or actually a, I'm
going to put as the fourth position, and C
391:52 - is the last. So let's see if this holds up
here, we refresh the page d V AC. So you can
391:53 - see that we can actually change the order
of these flex items directly from our CSS
391:54 - instead of having to go through and move them
around. Now you might know you might be wondering
391:55 - why this could be useful at all. Now, although
might not be apparent here because we haven't
391:56 - actually gotten, we're using the JavaScript.
Once you start making your website interactive,
391:57 - this becomes a very useful features. Because
you can't just go through and program something
391:58 - to move the divs around in your HTML document
without using some sort of file reading. Instead,
391:59 - it's much easier to just add a style to it,
where you can change the order, maybe even
392:00 - randomly. So you can see how this would work.
And although like I said, although it's may
392:01 - not be useful in this case, it will definitely
be useful once you start learning about JavaScript
392:02 - and start making your websites interactive.
So that's a little bit about flex order. Now
392:03 - just one thing, you don't actually have to
use it with an inline style tag. But it would
392:04 - be much easier considering that if without
it, you'd have to go and add an individual
392:05 - class to every single item. Now, of course,
it's much easier to just go ahead and add
392:06 - a style tag to each of these. But if you want
to use it with a class method, maybe you already
392:07 - have an existing class, you can go ahead and
do that. There's nothing wrong with that.
392:08 - I'm just using this because it's a lot more
convenient and easy to use. Alright, so that's
392:09 - pretty much it about flex order. It's quite
easy to learn once you know how to find the
392:10 - positions of items and how you know how to
order them in the right way. As long as you
392:11 - know the number of items you have, it's very
easy to position them just the way you like
392:12 - it. Alright, let's move on.
392:13 - So in this video, we're going to be talking
about three very important properties that
392:14 - come with Flexbox which are flex grow, flex,
shrink and flex basis. Now, although it might
392:15 - not seem like it, these actually are completely
responsible for the responsive power of Flexbox.
392:16 - And it's what really makes it what it is today
and why it's used so commonly over things
392:17 - like floats and display types. So first of
all, if we look at it, now, it might seem
392:18 - that flex grow and shrink, just specify the
width and height. And although they sort of
392:19 - do, they are very different when it comes
to the core concept and how it's decided.
392:20 - So the first thing we need to do is talk about
the flex basis property, because from there,
392:21 - we're going to define everything else. Now,
we all know that we have five items here,
392:22 - and they take up a certain amount of space
each. But you can see that there's all of
392:23 - this extra room here on the side. So what
actually happens is these properties work
392:24 - to define how the extra space or this remaining
excess space is divided up between them. And
392:25 - from there, we can actually specify the width
based on the you know, browser width, and
392:26 - it's all responsive. So it's all decided completely
based on the browser and on the properties
392:27 - that you define. So the first thing I'm going
to do is go ahead and actually add this property
392:28 - to all of them. And I'm gonna explain why
in just a second. And why we need to do that.
392:29 - So what I'm going to do is first download,
I'm going to go ahead and add the flex grow
392:30 - property, and the flex shrink property. Now
we're not going to use all these in one go,
392:31 - we're just going to do this gradually, and
then our flex basis. Okay, so let's talk about
392:32 - flex basis. First, what this does is it pretty
much defines the minimum width of an item
392:33 - or a flex item. So this can be any value doesn't
just have to it doesn't have to be a specific
392:34 - number or unit. So for example, I'm going
to go ahead and set this as maybe 100 pixels
392:35 - for each one as its minimum width, we go ahead
and refresh the page. And now you can see
392:36 - it's a lot wider. But you can see that there's
still this extra space. So this is where our
392:37 - flex grow property comes in. Now what happens
is, if I actually go ahead and go to all of
392:38 - them, and set them all as one, what this is
pretty much going to say is every flex item
392:39 - is going to get the same amount of extra space.
So you can see that this gets if all of them
392:40 - are one, they all get the same amount. Let's
go ahead and see that when we refresh the
392:41 - page, you can see now there's only a little
bit of margin, which is normal. But all of
392:42 - them are divided up equally. Now that we've
set them as one. But what happens if we go
392:43 - ahead and actually change this value? Let's
go ahead and for example, set our fifth item
392:44 - as to maybe. So now you can see that, although
it's not much bigger, it is a little bit bigger.
392:45 - So what this is pretty, I'm gonna go ahead
and set it to actually something a little
392:46 - bit bigger, so it's more obvious. So you can
see now this is a lot bigger than the other
392:47 - items. So pretty much what this is saying
is our fifth item, this container item is
392:48 - going to get five times as much excess space
as the rest of the items here. So one thing
392:49 - you need to know about flex grow is that you
need to add this property to every single
392:50 - one of them and make sure that they have a
defined value. If they don't, if you want
392:51 - them just to give them a default space, give
them a value of one. And this is because what
392:52 - happens is when you don't give them any value.
If you give this flex grow property to anything,
392:53 - it's going to eat up all that extra space.
Let's go ahead and demonstrate this. Now,
392:54 - I'm going to go ahead and erase all of this,
all of these flex grow properties just temporarily.
392:55 - And then I'm going to leave it on this one.
Now I'm going to set it to one. Now you might
392:56 - expect this is to be just a little bit bigger.
But let's see what actually happens. If we
392:57 - go ahead and refresh the page, you can see
that this is actually bigger than when we
392:58 - set this to flex this flex grow property to
five. So what's going on here, pretty much
392:59 - what's happening is the default value for
our flex grow property is actually zero, which
393:00 - means it's going to remain the same width,
and it's not going to take up any excess space.
393:01 - So pretty much what's happening is when we
set this to one, everything else is not taking
393:02 - any excess space, leaving it all to that one
value. So all of that extra space is taken
393:03 - up by this block here. And you can see that
and it's proved proven because there is still
393:04 - no excess space here, since it's all taken
up out by this property. So what I would recommend
393:05 - is before we learn the flex
393:06 - So in this video, we're going to be talking
about three very important properties that
393:07 - come with Flexbox which are flex grow, flex,
shrink and flex basis. Now, although it might
393:08 - not seem like it, these actually are completely
responsible for the responsive power of Flexbox.
393:09 - And it's what really makes it what it is today
and why it's used so commonly over things
393:10 - like floats and display types. So first of
all, if we look at it, now, it might seem
393:11 - that flex grow and shrink, just specify the
width and height. And although they sort of
393:12 - do, they are very different when it comes
to the core concept and how it's decided.
393:13 - So the first thing we need to do is talk about
the flex basis property, because from there,
393:14 - we're going to define everything else. Now,
we all know that we have five items here,
393:15 - and they take up a certain amount of space
each. But you can see that there's all of
393:16 - this extra room here on the side. So what
actually happens is these properties work
393:17 - to define how the extra space or this remaining
excess space is divided up between them. And
393:18 - from there, we can actually specify the width
based on the you know, browser width, and
393:19 - it's all responsive. So it's all decided completely
based on the browser and on the properties
393:20 - that you define. So the first thing I'm going
to do is go ahead and actually add this property
393:21 - to all of them. And I'm gonna explain why
in just a second. And why we need to do that.
393:22 - So what I'm going to do is first download,
I'm going to go ahead and add the flex grow
393:23 - property, and the flex shrink property. Now
we're not going to use all these in one go,
393:24 - we're just going to do this gradually, and
then our flex basis. Okay, so let's talk about
393:25 - flex basis. First, what this does is it pretty
much defines the minimum width of an item
393:26 - or a flex item. So this can be any value doesn't
just have to it doesn't have to be a specific
393:27 - number or unit. So for example, I'm going
to go ahead and set this as maybe 100 pixels
393:28 - for each one as its minimum width, we go ahead
and refresh the page. And now you can see
393:29 - it's a lot wider. But you can see that there's
still this extra space. So this is where our
393:30 - flex grow property comes in. Now what happens
is, if I actually go ahead and go to all of
393:31 - them, and set them all as one, what this is
pretty much going to say is every flex item
393:32 - is going to get the same amount of extra space.
So you can see that this gets if all of them
393:33 - are one, they all get the same amount. Let's
go ahead and see that when we refresh the
393:34 - page, you can see now there's only a little
bit of margin, which is normal. But all of
393:35 - them are divided up equally. Now that we've
set them as one. But what happens if we go
393:36 - ahead and actually change this value? Let's
go ahead and for example, set our fifth item
393:37 - as to maybe. So now you can see that, although
it's not much bigger, it is a little bit bigger.
393:38 - So what this is pretty, I'm gonna go ahead
and set it to actually something a little
393:39 - bit bigger, so it's more obvious. So you can
see now this is a lot bigger than the other
393:40 - items. So pretty much what this is saying
is our fifth item, this container item is
393:41 - going to get five times as much excess space
as the rest of the items here. So one thing
393:42 - you need to know about flex grow is that you
need to add this property to every single
393:43 - one of them and make sure that they have a
defined value. If they don't, if you want
393:44 - them just to give them a default space, give
them a value of one. And this is because what
393:45 - happens is when you don't give them any value.
If you give this flex grow property to anything,
393:46 - it's going to eat up all that extra space.
Let's go ahead and demonstrate this. Now,
393:47 - I'm going to go ahead and erase all of this,
all of these flex grow properties just temporarily.
393:48 - And then I'm going to leave it on this one.
Now I'm going to set it to one. Now you might
393:49 - expect this is to be just a little bit bigger.
But let's see what actually happens. If we
393:50 - go ahead and refresh the page, you can see
that this is actually bigger than when we
393:51 - set this to flex this flex grow property to
five. So what's going on here, pretty much
393:52 - what's happening is the default value for
our flex grow property is actually zero, which
393:53 - means it's going to remain the same width,
and it's not going to take up any excess space.
393:54 - So pretty much what's happening is when we
set this to one, everything else is not taking
393:55 - any excess space, leaving it all to that one
value. So all of that extra space is taken
393:56 - up by this block here. And you can see that
and it's proved proven because there is still
393:57 - no excess space here, since it's all taken
up out by this property. So what I would recommend
393:58 - is before we learn the flex
393:59 - property in the next video, just go ahead
and add this flex grow property to every single
394:00 - item or container if you plan to use it. So
now if we go ahead and refresh the page, you
394:01 - can see that that's working great now what's
the advantage of
394:02 - property in the next video, just go ahead
and add this flex grow property to every single
394:03 - item or container if you plan to use it. So
now if we go ahead and refresh the page, you
394:04 - can see that that's working great now what's
the advantage of
394:05 - Using this, before we move on to our next
property, if I actually resize this window,
394:06 - right here, I'm just gonna resize it, you
can see that when it grows, it still takes
394:07 - up the same proportions of excess space. Now
we'll talk about getting smaller in just a
394:08 - little bit. But you can see here that it does
actually take up the same proportion. And
394:09 - that's where the really responsive power of
Flexbox comes in, is when you're resizing
394:10 - your windows and browsers and there's all
of the different devices, this actually stays
394:11 - the same. So let's move on to our next property.
Now flex shrink. So we know that the basis
394:12 - for the minimum width is 100 pixels, that's
the minimum it can go. But when we actually
394:13 - shrink this down, and all of these get smaller,
I'm actually going to go ahead and move the
394:14 - flex wrap property from here because it's,
it's some little intrusive here. And although
394:15 - it's not good for this, it's not good for
this example, we'll go ahead and use it later.
394:16 - So when we go ahead and actually shrink this
window, you can see that that proportion is
394:17 - actually lost. So what's going on here, pretty
much when you go below the minimum width,
394:18 - whether it's defined on our flex basis, or
the minimum width of the of the, of the container
394:19 - item itself, what's happening is that proportion
is completely removed, and you go to the default
394:20 - value of flex shrink. So flex shrink is similar
to flex grow, except what happens is it defines
394:21 - the rate of shrinkage of each container item
again, relative to the rest of the items.
394:22 - So in this case, what we have to do is go
ahead and look at how this trig property works.
394:23 - The default value for this, unlike flex grow
is one, not zero. So what this is saying is
394:24 - shrink each item at the same rate as all the
other items. And that's why we can see that
394:25 - once we go under the minimum height, or sorry,
minimum width, you can see that all of those
394:26 - items begin to look the
394:27 - same.
394:28 - So what I'm going to do here is actually go
ahead and show you how to manipulate this.
394:29 - And this is where the real responsive power
comes in. And where you can really change
394:30 - how everything looks on different devices,
all we have to do is go ahead and specify
394:31 - the value that we want here. And one thing
to note is that if you don't want something
394:32 - to shrink, you can just set the value to zero.
So for example, if I wanted to remove the
394:33 - shrinkage of our fourth item here, well let
me go with our first item. Right here, all
394:34 - I have to do is go ahead and shet set, sorry,
our shrink value to zero. And what this is
394:35 - going to say is don't shrink the item, even
if it goes below, do not shrink the item at
394:36 - all, let everything else shrink. Let's go
ahead and see how this looks on our site.
394:37 - So we're going ahead, we're removing that
space. But you can see that our first value
394:38 - does not shrink at all. So there we go. Now
let's go ahead and start adding our shrinkage
394:39 - values to the rest of our items here. So what
I'm going to do is first add a value of one
394:40 - to all of them, just like this, just to keep
everything the same. And now what we're going
394:41 - to do is go ahead and start manipulating them.
So first of all, let's go ahead and say that
394:42 - we want our middle value to shrink three times
as fast. So we're gonna go over to our middle
394:43 - value and change the flex shrink to three
times. So now we go ahead and refresh the
394:44 - page. And when we shrink it, you can see that
that value shrinks three times as fast as
394:45 - everything else. So you can see that and it's
pretty apparent there. So there we go. That's
394:46 - pretty much it for our three values. Now one
thing I forgot to mention is if your flex
394:47 - shrink is one and it's not there on purpose,
you can actually go ahead and remove it since
394:48 - the default value is one forgot to mention
that in the when I started changing them.
394:49 - But there we go. Now what I'm going to say
is, why would you use something like this
394:50 - flex grow and flex shrink, when you're laying
out entire pages based on Flexbox, you want
394:51 - to make it as responsive as possible, you
don't want to go and you know, have it looked
394:52 - completely different on one device to the
other. What you can actually do is use this
394:53 - to change the look of a website, depending
on what device you're on. So for example,
394:54 - you can use this property to change the look
of a website on a mobile phone versus on a
394:55 - widescreen TV, it's going to be completely
different. And you can do this using only
394:56 - a few properties instead of having to go and
define entire styles for separate devices.
394:57 - So from here, we can actually really see the
true cloud power of Flexbox. From here, we
394:58 - can go ahead and actually model our website
with just a few styles that are very streamlined
394:59 - and efficient to change the look of a website
completely on different devices. So I hope
395:00 - that was a little bit easy. To understand
now, I know it's quite hard to wrap your head
395:01 - around. But this is the core concept of Flexbox.
And it's what really makes Flexbox what it
395:02 - is. So if you understand this, the rest of
Flexbox, and using it is going to be a breeze.
395:03 - Alright, let's move on. So in this video,
we're going to be moving on from flex grocery
395:04 - in basis and actually talking about a really
useful shorthand property that can summarize
395:05 - all three of these into an even more streamline
method. So in the past video, I talked just
395:06 - briefly about the flex property. And pretty
much what it is, is a shorthand to use the
395:07 - flex grow shrink and basis property in one
go. So we can use this to our great advantage,
395:08 - because instead of adding all of these properties
to every single one of these items, we can
395:09 - actually just summarize it down into one simple
property. So let's go ahead and talk about
395:10 - it. Pretty much the flex property, which is
the property that we're going to be using
395:11 - follows or takes in three values, the grow
the shrink, and the basis. So what we're going
395:12 - to do is first add our growth. In this case,
it's one, and then we're going to add our
395:13 - shrink, which is the default value of
395:14 - one.
395:15 - And that's just a little tip, if you don't
actually have that defined, just go ahead
395:16 - and set it as the default value. So just a
quick summary grow the default is zero, which
395:17 - means it's not growable. The default string
value is one, which means shrink it at the
395:18 - rate of everyone else. And then the there
is no default for the basis property, unless
395:19 - you use something like auto. So what you can
do is go ahead and define that as 100 pixels.
395:20 - Now, what we're going to do is go ahead and
do it for the rest of these items, flex, flex
395:21 - just the property. Here, we're going to go
one, which is the grow three, which is the
395:22 - shrink, and again, 100 pixels for the basis.
And you can start to see kind of the rhythm
395:23 - that I'm getting into here, five for the grow
one for the shrink, which is the default,
395:24 - and 100 pixels for our basis.
395:25 - Let's go ahead and do it for this one.
395:26 - And like I said, you can see the rhythm here,
and you can just go ahead and do this very
395:27 - quickly, without having to manually go through
and add all three of these properties. One,
395:28 - one, and 100 fixes.
395:29 - All right, now let's go ahead and erase all
of these other unnecessary properties. Now
395:30 - that we have our flex property and restart.
So if we did this, right, pretty much what's
395:31 - going to happen is everything is going to
look the same, since all of our values are
395:32 - still working, we just threw them into a shorthand.
Let's go ahead and first before we refresh,
395:33 - check out the behavior. Whoops, something's
going wrong there. Yeah, there we go. So let's
395:34 - just check out the behavior, we shrink B get
smaller D doesn't shrink at all. And we when
395:35 - we size up, our last value gets bigger. Let's
go ahead and refresh the page and see if this
395:36 - worked. So when we shrink, D is supposed to
stay the same, and B gets smaller. There we
395:37 - go. So D stays the same, and B gets smaller.
And if we enlarge it, you can see that C gets
395:38 - larger. So there we go, you can see how all
of this works. Instead of adding three properties,
395:39 - we can actually just go ahead and do this
in one straight swoop, just go through and
395:40 - add all of all three values using one property,
the flex property. Alright, let's move on.
395:41 - So this is going to be the last video on Flexbox.
And I'm sure that we've summarized all of
395:42 - the different things that you can do with
Flexbox in this section, and then you can
395:43 - go off and start using it and creating all
sorts of really cool responsive websites and
395:44 - layouts with it. But for now, what we're going
to be doing is going through and learning
395:45 - the final property. Now we've learned how
to align all of the elements at the same time
395:46 - in our flex container, we learned how to align
it both vertically and horizontally, but we're
395:47 - actually going to be doing is learning how
to align each item. And remember, because
395:48 - each item is laid out with width wise in a
certain way, we can only align it vertically.
395:49 - So just keep that in mind for now. So let's
get started. Now in order to align it vertically,
395:50 - we use the Align items property to work with
and align all of these. So in this case, what
395:51 - we did with our container is aligned all of
them to center. But what we're going to be
395:52 - doing now is going through and aligning each
individual item using a special property called
395:53 - align itself. Now one thing to note is that
this property will override the Align items
395:54 - property if you have it enabled. So for example,
if I wanted to align this to the top, it would
395:55 - override our center and what The line this
only only and only this item to the top. So
395:56 - let's get started. First thing I want to do
is go ahead and add the property. And remember,
395:57 - we have to go and add it just like everything
else. So I'm going to go through and add it
395:58 - now. So first thing I'm going to do is go
and let's just take our first item, for example.
395:59 - Where is it? There we go. So now I'm going
to go ahead and add a line self. And now we
396:00 - can go ahead and add our different values.
So let's go ahead and get started, I'm going
396:01 - to go ahead and try something just like with
the normal values, let's go ahead and save
396:02 - flex start. So just like our other values
with our default container, what we can actually
396:03 - do is align them with the same values. So
center flex start and flex end. So let's go
396:04 - ahead and refresh the page. And you can see
now that that specific item, which is D, or
396:05 - the first item is aligned to the start of
the flex container, whereas the rest of the
396:06 - items are aligned to the middle, which is
based on the Align items property that we
396:07 - had on our container. So now let's go ahead
and create a sort of V shape out of all of
396:08 - our items here. So what I'm going to do is
first go and add our flex, sorry, aligned
396:09 - self property to all of our values, here are
all of our container items. And now what I'm
396:10 - going to do is start styling them. So we know
that the first one is at the start, we want
396:11 - the second one here to be in the center. So
although it's already defined, I'm just going
396:12 - to say center to make everything a little
easier to read. Now we're going to go ahead
396:13 - and look for the third one, which needs to
be at the bottom. So what I'm going to say
396:14 - here is flex
396:15 - end.
396:16 - And let's go ahead and refresh working so
far. Our fourth one has to be on the same
396:17 - level as he so we're going to keep that in
the center here, wherever it is, let's see.
396:18 - Yep, it's the fourth one centered. And now
we want our final one to be at the top as
396:19 - well. So it is a little confusing to read
with the orders. But after a little bit of
396:20 - looking, you can see how this whole thing
works. Now obviously, it's a little bit out
396:21 - of proportion because of our sizes here. But
you can see that our thing is still responsive.
396:22 - It's still resizing in the same way, we just
aligned the items differently. Alright, so
396:23 - there you go. That's pretty much how this
works. And one thing to note that before we
396:24 - move on is you can't actually use stretch
and baseline on a line self, they just don't
396:25 - work because they are kind of container specific
properties and they won't, they work off of
396:26 - values of the container. So aligning it on
an item just wouldn't really work in the same
396:27 - way. So that is one thing you need to keep
in mind is that you can only use these three
396:28 - values. Alright, so like I said, we were moving
on and learning about all of the different
396:29 - alignments. And now that we've learned how
to align each item, we can really use this
396:30 - along with our flex property and some other
Flexbox properties on the container to create
396:31 - a really nice responsive layout. So I encourage
you to go ahead and try this on your own,
396:32 - create your own flex layouts, and don't even
just use these blocks, you can go through
396:33 - and use images and forums and all sorts of
things. And just style them in a way that
396:34 - makes the website look good. Because now that
you've learned the tools to create a responsive
396:35 - container, you can go through and actually
start practically applying it to the real
396:36 - world. Alright, let's move on. So in this
video, we're going to be looking at grid versus
396:37 - Flexbox. Now in the previous section, we looked
at Flexbox as a whole, we looked at all the
396:38 - different container properties, we also looked
at some of the other properties that we can
396:39 - use on our items. But today, we're going to
be looking at a different type of well layout
396:40 - property, and that is grid. So before we get
started, I'm going to give a little introduction
396:41 - to grid and what it actually is. So similar
to Flexbox grid is a display type that's going
396:42 - to allow us to work with our layout and our
CSS in a different way. So again, they are
396:43 - both completely all complete alternatives
to some of the other layout features that
396:44 - were used in the older times and in other
versions of CSS. So what we're going to be
396:45 - doing is again, in this section, going through
looking at the different types, and what we
396:46 - do with grid, and how it actually all fits
together.
396:47 - So now that we know some of the similarities,
let's look at the differences. So although
396:48 - they are both alternatives to our, to our
different layouts, what we can actually do
396:49 - is look at how they work at a core level.
And although they are completely the same
396:50 - in what they achieve and their core goals,
they are completely different in how they
396:51 - work. So first of all, the grid system is
a lot more manual it requires well it doesn't
396:52 - require but you can control your container
in a much easier way. So you can really customize
396:53 - your layout and see how everything fits together
with a lot more tools. So one of the the main
396:54 - difference is how the grid system focuses
on both the width and height. So although
396:55 - Flexbox does have some height features, it's
mainly focused on the width of flex items
396:56 - in the container. Whereas grid is focused,
very focused on providing both tools for width
396:57 - and height to create Well, a grid. And that's
really the reason for the name is because
396:58 - it is more focused on creating a grid, providing
tools for columns and rows, and all sorts
396:59 - of things that we're going to cover in the
next few videos looking at, you know, some
397:00 - of the tools that we can use in grid and the
inherent differences between grid and Flexbox.
397:01 - So I hope that was a really in depth view
at the differences between grid and Flexbox.
397:02 - And we will go through and talk more about
them as we go through the section, you know,
397:03 - learning more tools and properties that we
can use on our grid. Alright, so I hope that
397:04 - you took a lot from this video. And although
you're not really supposed to know anything
397:05 - about how they work, it's good to keep in
mind about some of the differences between
397:06 - them, and draw your own conclusions about
whether you should use grid or Flexbox depending
397:07 - on what type of website or application you
are creating. Alright, let's move on.
397:08 - So in this video, we're going to be starting
creating our different grid items and working
397:09 - with our grids. So I've already created and
set up a little playground or sandbox for
397:10 - our grid here, we've pretty much adopted the
same style as the Flexbox here using all of
397:11 - our different, you know, widths and heights
and all these different blocks. But I encourage
397:12 - you, when you're doing this on your own to
go ahead and experiment around, maybe use
397:13 - some different items. I'm just doing this
because it's easy for demonstrations. Alright,
397:14 - so let's get started. Pretty much grid. And
while Flexbox have very similar ways of activation,
397:15 - they both use a display type or the display
property to set or activate the container.
397:16 - Now the only difference is is is the property
that it or sorry, the value that needs to
397:17 - be used to activate these, which is pretty
fair, which is fairly obvious. So let's get
397:18 - started. First of all, we need to put it on
the container. Remember, we're not working
397:19 - with the items, we're working with the container
as a whole. So all I need to do similar to
397:20 - how we created our flex container is that
of saying Flexbox, or grid box or whatever,
397:21 - all we have to do is type in grid. And what
this will do is set up our grid container.
397:22 - Let's go and refresh. And you can see that
although you know may not appear that nothing
397:23 - has changed, we have activated a whole range
of properties that we can now use on our grid
397:24 - here to set up everything and start creating
our grid. Now you'll notice that when we set
397:25 - up our Flexbox, so many things different so
many different things change. But without
397:26 - grid, we actually need to go through and set
up the grid by ourselves, which is what the
397:27 - whole manual element about it, which is where
the whole manual element comes in is we have
397:28 - to go and create a grid and sort of shape
it in a way that suits our needs. Alright,
397:29 - so that's pretty much it for creating the
grid. Now I know this wasn't a very heavy
397:30 - video, but there are going to be a lot more
concepts that we're going to need to learn
397:31 - in the future. So this is quite an easy video,
just setting up the grid. And now that we've
397:32 - done the easy part, we're going to go through
and start learning some of the more difficult
397:33 - parts of CSS Grid.
397:34 - Alright,
397:35 - let's move on. So in this video, we're going
to be moving on with grid and start creating
397:36 - and setting up this grid to really just define
the style that we want to use for our website.
397:37 - So what we're going to do is go ahead and
get started with some of the two basic properties
397:38 - that we're going to be using, which are template
rows and columns. So unlike Flexbox, we can
397:39 - actually specify the number of grids are well
the number of rows and columns that we want
397:40 - manually and create the exact style that we
want to divide up all our elements. So what
397:41 - we're going to be doing is using two special
properties that we can go ahead and use. And
397:42 - what this is going to do is allow us to split
up our grid into a specified number of rows
397:43 - and columns, which we can then divide the
items up into, and then start specifying the
397:44 - sizes and other parts of these items. So like
I said, we're going to be going through and
397:45 - you know, doing all of this and as we go through.
In this section, we're going to be getting
397:46 - more experienced with rows and columns and
some of the other core concepts in grid that
397:47 - will allow us to really shape up this grid
box that we have right here and start applying
397:48 - it in different places. So Let's get started.
So like I said, the two properties that we're
397:49 - going to be learning today are about template
columns and rows. So pretty much what this
397:50 - does is sets up the grid to start off with
a certain number of rows or columns depending
397:51 - on what property that you're using. And then
from there, you can actually specify the sizes
397:52 - of each column and row. Now, we're not to
changing individual item sizes yet, but we
397:53 - can actually go ahead and change the size
of each individual row or column to create
397:54 - alternating sizes and alternating boxes, which
have alternating sizes. So let's get started.
397:55 - Now the two properties that we need to use,
which are pretty easy to learn our grid, template
397:56 - columns, and rows, don't forget about areas
for now we don't need to know them. Now, what
397:57 - we're going to do is set up our grid template
columns first. So instead of doing something
397:58 - where we might be taken a function or something,
this is actually set up in a really nice and
397:59 - elegant way. And all we have to do is type
out the sizes that we want. And based on the
398:00 - number of sizes or values that we input, it
will decide the number of rows that we want.
398:01 - So I'll give you an example here, let's just
say I'm going to the first row to be 10 pixels
398:02 - wide, which is pretty small. And then I wanted
the second one to be 50 pixels, and the third
398:03 - one to be 10
398:04 - pixels again.
398:05 - So what we're pretty much doing here is setting
up setting it up so that we have three columns.
398:06 - Because we've passed in three values, the
first is going to be about 10 pixels, which
398:07 - is very, very small, the next one is going
to be 50 pixels. And then the last is going
398:08 - to be 10 pixels. Now let's see how this looks.
Now if you don't already know this already,
398:09 - columns are going downwards, not this way.
So just keep that in mind, we refresh the
398:10 - page. And you can see what kind of an effect
that has here,
398:11 - we have
398:12 - a lot of empty space open here. Again, because
we're using absolute values and not relative
398:13 - values. Or at least relative to the box that
we have here, you can see that our boxes here
398:14 - are really divided up in a weird way. So our
first column is 10 pixels very small. And
398:15 - then the second one is it's getting really
mixed up you can see here with our wrapping
398:16 - and all of this different stuff. And of course,
we don't have those lines to show us how our
398:17 - grid is set up. But you can see that doing
something like this would obviously really
398:18 - mess up the grid. Now, obviously, you're not
going to go and set all of this to 10 pixels
398:19 - at 50 pixels. But you can just see what kind
of an effect this has already. We haven't
398:20 - even created any rows yet. And we've already
completely customized the way our grid looks
398:21 - without touching or doing anything. Unlike
Flexbox, we had to actually really go in and
398:22 - specify it in a way that changed everything.
So let's get started on some of the next one,
398:23 - the next one, which is our grid template.
What's it called rows. So what's going to
398:24 - happen here is instead of specifying the columns,
we're going to go ahead and specify the rows
398:25 - and it works in exactly the same way, all
we need to do is pass in a set number of values,
398:26 - and it'll decide what we need for us. And
just one thing to note, these don't need to
398:27 - be the same imagine it imagine it as sort
of a table here, we have three columns going
398:28 - downwards, and three rows going from left
to right. So let's go ahead and specify this
398:29 - year, I'm going to go ahead and say I only
want two rows. So I'm gonna say the first
398:30 - one is 50 pixels. The second one is 250 pixels.
Now let's see how this looks. So you can see
398:31 - again, this whole thing has expanded. And
now our first row is much smaller, and our
398:32 - second row is a lot bigger. So you can see
already what you can do with this. And that
398:33 - you have power as of using these template
columns and rows, as I've explained before,
398:34 - but this isn't a really convenient, or efficient
way to create a nice looking grid. Because
398:35 - how are we supposed to know the elements or
the amounts of each device, especially with,
398:36 - you know, all these different viewports and
sizes, we need to keep this consistent across
398:37 - all devices. So there's actually a really
easy value that we can use, which is called
398:38 - auto. Now if we actually go ahead and set
all of our rows to auto, what's going to happen
398:39 - is it's actually going to divide the space
evenly between the three no matter the size.
398:40 - And I can also even go ahead and do this with
my rows. And now if I refresh the page, you
398:41 - can see this looks a lot better. Now you can
kind of see how the spacing is working here,
398:42 - we have three columns. And obviously there's
nothing in our third column for the bottom
398:43 - row. But then we also have two rows, so it's
kind of split down the middle. And now we
398:44 - have our three elements up here and our fourth
and fifth element down here. So you can see
398:45 - here that what's happening is it's dividing
the space evenly between our elements or our
398:46 - grid. And if we did actually go ahead and
remove on the values and change it to an absolute
398:47 - value, use something like 100 pixels, what's
going to happen is the remaining space is
398:48 - going to be kind of divvied up between the
two columns. And obviously, it doesn't look
398:49 - like it here, because we don't have spacings
enabled. There's a bunch of things going on
398:50 - behind the scenes. But what happens is the
remaining space is kind of divided up between
398:51 - the two columns. So you can see already that
with these values, we can create some really
398:52 - nice looking grids without even having to
do much work. Now, what I would recommend
398:53 - is, instead of going and specifying all of
our absolute values, go ahead and just create
398:54 - the number of columns and rows that you want,
while also using auto values. Because later
398:55 - in the future, what we're going to do is learn
some techniques to split up our items and
398:56 - make them look a lot larger without having
to change the size of the columns and rows.
398:57 - Because it is a much easier, it's much easier
to work with our items rather than the grid
398:58 - itself. Alright, so that's pretty much it
for template columns and rows. Now, like I
398:59 - said, just for any other exercise, I recommend
you to go ahead and play with this on your
399:00 - own. Try and create your own custom grids
and throwing images and all sorts of things
399:01 - in there, play around with it, and try and
see what you can create. And just try and
399:02 - come up with this many cool crazy ideas as
possible. Because there is a lot you can do
399:03 - with just these two. Properties, which are
grid template columns, and grid template rows.
399:04 - Alright, let's move on. So in this video,
we're going to be looking at some more properties
399:05 - relating to the grid container. Now, these
properties are very similar to the ones we
399:06 - learned in Flexbox, which is actually somewhere
up here, where we've learned how to justify
399:07 - and align items in different ways. But there
are very similar concepts. The only problem
399:08 - is some of the values and the properties themselves
are actually kind of different. So we need
399:09 - to go ahead and look over those differences.
So that we can get used to interchanging these
399:10 - properties between the two without kind of
affecting our understanding of the properties.
399:11 - So what I'm going to be doing in this video
is going and teaching you in this video how
399:12 - to align and justify our items both horizontally
and vertically. So let's start with the first
399:13 - one, which is very similar to Flexbox. And
it is the justify content property. So just
399:14 - like we've learned before, this is going to
justify it on kind of the horizontal axis
399:15 - instead of on the vertical axis. So for example,
if we were to center these items, what we
399:16 - would do is we'll push them all to the center,
instead of moving them up and down. So there
399:17 - we go. Let's go ahead and get started with
this, I'm going to go ahead and create a new
399:18 - property here justify content. Now, just like
with our previous property, there are three
399:19 - main values that are used both in our justify
content property, and the aligned content
399:20 - property, which we're going to learn in just
a second. The only problem is in our Flexbox
399:21 - section, we looked at them and they did have
a prefix, which are flex start and flex end.
399:22 - So basically, like I said, these are sort
of do signify the start and end of the flex
399:23 - box depending on what axes you're aligning
your items on. But instead of adding that
399:24 - prefix here, we're just going to say start
and and center, instead of something like
399:25 - grid start or granddad, they don't use any
of that prefixes. All that's included are
399:26 - the three main keywords. So it's a lot simpler
to understand. And but it is a little bit
399:27 - harder when you start using both Flexbox and
grid, and you get the two very mixed up or
399:28 - confused. So let's go ahead and do that. Now.
I'm just going to go ahead and justified the
399:29 - content to the center. Why don't I go ahead
and do it or justify it to the end this time
399:30 - just to spice
399:31 - things up a little bit.
399:32 - If I refresh the page, you can see that our
template columns, and that's the key word
399:33 - there template are ignored, and everything
is completely aligned to the right side of
399:34 - our grid. So we can also do it just like with
our previous properties in our Flexbox, we
399:35 - can also align it to the start and do pretty
much whatever we want with these. So the next
399:36 - value, or the next two values that we're going
to use for this property are space around
399:37 - and space evenly, which is a little bit different
from space between. So they both work in the
399:38 - same way, in that they create spacing between
the items to give them to you all even them
399:39 - out in the grid. But the only difference is
on our Flexbox we actually used space between
399:40 - whereas on our grid, we're using the value
space evenly. So I'm going to go ahead and
399:41 - show you that here. I'm going to just go ahead
and say space evenly. Like that. Now if I
399:42 - refresh the page, you can see that although
it doesn't actually show up here, maybe because
399:43 - of a developer error or something like that,
we now have our it Here spaced evenly, just
399:44 - like we can see here in this grid box. Now
there are remember spaces between or before
399:45 - and after our first items, and that's the
key word there. You can see instead of saying
399:46 - between it says evenly. And pretty much, what
this is saying is, we're actually going to
399:47 - space them evenly, not just put space in between
them. So like I said, I talked about a lot
399:48 - of uses of these in the previous section,
but we're not going to go over those now.
399:49 - So let's go ahead and try out the next value,
which is space around. And when we refresh
399:50 - the page, you can see that this looks pretty
much exactly the same. Now, of course, we
399:51 - don't have lots of space or room to work with
here. So you're not going to see the direct
399:52 - impact or differences between these. So for
now, let's just consider them the same purpose.
399:53 - Like I said, we've used both of these in the
past, and you know exactly what they do. So
399:54 - now let's go ahead and get started with our
next value or sorry, property, which is our
399:55 - align content property. Now, instead of using
align items, we're using aligned content.
399:56 - So that's just one thing to keep in mind.
But I'm going to go ahead and say is aligned
399:57 - content. And before that, let's actually go
ahead and give it a little bit more height,
399:58 - I'm going to say maybe 500 pixels, refresh
the page. And obviously, these stretch out,
399:59 - we don't have any defined heights for them.
But we don't have to worry about that for
400:00 - now, I'll go ahead and change that in just
a second. So what I'm going to do is go ahead
400:01 - and start playing around with some of these
properties. Now, what's actually really interesting
400:02 - is for our align items, we can actually use
both space evenly and space around. But we
400:03 - also we also have our space between property
from our Flexbox section. So if I go ahead
400:04 - and try that out now,
400:05 - space in between,
400:06 - and refresh the page, you can see what happens
is that we have our space between right there
400:07 - just as we've signified and it's not spaced
evenly. Remember if there's no space, before
400:08 - or after our top and bottom items. So that's
a really cool feature to keep in mind with
400:09 - our aligned content, property. And of course,
along with space evenly and space around,
400:10 - we also have our three standard values, just
go ahead and show you that here are three
400:11 - standard values, which are center start and
end. So I can go ahead and show you that
400:12 - now. Start
400:13 - out or sorry, line content to the end. And
that will push everything down to the bottom
400:14 - of bottom of the page. So there we go. There's
a lot to digest. In this video, there's a
400:15 - lot of different properties to cover and memorize.
But don't worry about all that for now just
400:16 - understand which property does which. And
everything will just fall naturally into place.
400:17 - And remember, if you ever forget how to do
something, you can always go and both review
400:18 - the lectures or just Google it. It's really
that simple. There are tons of articles and
400:19 - helpful resources out there to help you decide
or figure out some of the properties you may
400:20 - have lost or forgotten in your time using
CSS. So there we go. That's pretty much it
400:21 - for aligning content, it's quite easy in terms
of properties. Although there are a lot of
400:22 - values once you start using them and getting
used to some of the subtle differences, everything
400:23 - will just fall naturally into place. As I
said before, alright, let's move on. So in
400:24 - this video, we're going to be looking at another
feature of our grids here, and that is going
400:25 - to be column, column gaps column and row gaps.
So we've looked at aligning content, we've
400:26 - looked at creating columns and rows. Now we're
going to look at the final piece that kind
400:27 - of connects everything together for our containers,
which are gaps. So we've talked about how
400:28 - our grid is kind of set up, we have our boxes,
we have our columns and our rows. And then
400:29 - we can actually change these or override them
using our justification here, I'm actually
400:30 - going to go ahead and erase these or comment
them out just for this lecture. So we can
400:31 - create some good demonstrations here. So what
I'm going to be doing is going through and
400:32 - talking about these gaps. And they're actually
pretty important when it comes to the whole
400:33 - thing because you can completely change the
way a grid looks by creating spacing. And
400:34 - obviously, if you've seen any websites, and
really look closely at it, you'll understand
400:35 - the importance of spacing in websites, they
really bring everything together and create
400:36 - sort of a hierarchy that's easy on the eyes
if you've taken any UX or design. So let's
400:37 - get started. Now what I'm going to be doing
is going ahead and creating these column and
400:38 - row gaps. So the first the first one I want
to talk about is column gaps. And just as
400:39 - we were working with our call template columns
and template rows, the the properties that
400:40 - we need to use are pretty similar. So first,
I'm going to go ahead and start with our columns.
400:41 - Now the property that we're going to be using
is grid column gap. And you can obviously
400:42 - kind of associate these together to memorize
them or maybe learn them easier. But besides
400:43 - that, we're going to go ahead and get this
started. Now, of course, this only takes one
400:44 - value, we don't need to specify any more,
because what we're going to be doing is giving
400:45 - each while each column A gap between them.
So let's go ahead and give it a value, I'm
400:46 - just going to go ahead and say 150 pixels.
To make it a little bit evident, go ahead
400:47 - and refresh the page. And although it may
not be obvious, immediately, you can kind
400:48 - of see that these columns are a little bit
more spaced out now. Now, of course, there's
400:49 - no lines to kind of show you the visualization.
But you can kind of deduce from this, that
400:50 - there is definitely a bigger gap between the
columns. Now that we've specified it. So now
400:51 - what I'm going to do is go ahead and actually
change this and give it a row gap. So very
400:52 - similar to our previous previous property,
we're going to use grid row gap. And this
400:53 - is pretty much the exact same thing, except
it specifies the gap between rows. So this
400:54 - is probably going to be a lot more obvious
here, what I'm going to do is just going ahead
400:55 - and saying 300 pixels, and notice how the
gap of this place kind of gets bigger. You
400:56 - can see now that there is a much bigger gap
between our top row and our bottom row. So
400:57 - that's pretty easy. But obviously, you don't
want to go through and specify these every
400:58 - single time. So there's actually a really
nice shorthand property that we can use to
400:59 - bring this all together, I'm going to go ahead
and actually, I'll keep these for now, and
401:00 - then I'll erase them
401:01 - when we're done.
401:02 - So instead of specifying which axes you want
to do it on, or which axis sorry, you can
401:03 - just say grid gap. And what this is going
to do is just create the gap instantly, where
401:04 - you can pass in two values and specify it
or do it all in one go. So this takes the
401:05 - column first. And then the row, kind of just
how template columns goes first. And template
401:06 - rows go first in a shorthand, which we haven't
actually talked about. But we'll get to that
401:07 - later. For here, what we're going to do is
specify our column first, which is 150 pixels,
401:08 - and our row gap next 300 pixels. Now, I'm
going to go ahead and erase these other values
401:09 - that we don't need and refresh the page. So
I actually made a little mistake there, and
401:10 - I put the column before the rows or if I cause
any confusion there. So what I'm going to
401:11 - do is actually just go ahead and change this
really quickly. So that this will work. Now
401:12 - if I go ahead and refresh, you can see that
they look exactly the same. Again, sorry for
401:13 - that mix up. Just remember that the row or
the row size comes before the column size,
401:14 - just keep that in mind. So there we go. Now
we have our grid gap setup. Now this is pretty
401:15 - much it for our well, column gap or row gap
are all of these gaps for our grid layout.
401:16 - Now, there's really not that much to it, it's
very easy to set up. But once you do that,
401:17 - it becomes very easy to sort of work with
your grid along with the other properties
401:18 - to create some really nice looking layouts.
And once we start learning some more of the
401:19 - properties in the next few videos, you can
really maximize the use of the grid layout
401:20 - in CSS. Alright, let's move on. So now we're
going to be moving on to a little bit more
401:21 - complex, the more complicated parts grid,
and in this video, we're going to be covering
401:22 - quite a big topic, it's going to be a lot
to chew. And don't worry, if you don't get
401:23 - it on the first try. We're going to go through
this slowly, and we're going to go through
401:24 - it step by step so that we can learn everything
about this. So in this video, we're gonna
401:25 - be learning about the real true power of grid
and more we're going to be learning is how
401:26 - to rearrange and resize items based on starting
at starting and ending points. So that's what
401:27 - we're going to be doing today. The first thing
we need to do is obviously go and go to our
401:28 - grid container on our HTML file, since we
need to specify the start and end points of
401:29 - each item individually. So let's get started.
Now the first thing I'm going to do is actually
401:30 - go ahead and remove all of these values because
it'll be much easier to see and understand
401:31 - what's going on. When we just have these fives
here, what I'm actually going to do is go
401:32 - ahead and add a sixth item just to break even
here and make everything look great. So I'm
401:33 - going to go ahead and choose another color.
something random here, maybe a purple. Do
401:34 - we have that? Yeah, we do have that will be
a green something. Actually, let's just go
401:35 - for a nice dark orange something here. And
we're going to go ahead and copy that. And
401:36 - now we have a sixth values to break even here.
So what we're going to be learning in this
401:37 - video is how to, like I just said resize items,
and there are actually a few. There we go,
401:38 - we have our colors have now, we do have a
few different shorthands and properties that
401:39 - we can use to set this up. So the first thing
we need to learn is the lines and the concept
401:40 - of lines. So we do know that we have our columns
and our rows. Well, what's happening here
401:41 - is that each column starts and ends or well,
each column is designated a certain line.
401:42 - So for example, this would be line one beginning
here, this would be line two, and then this
401:43 - would be line three. And then for our rows,
we have our line one and our line two. So
401:44 - what we can actually do is say set, set this
item to go from line one to line three, and
401:45 - from row line one to row, line two. And we
can do this using a few properties and some
401:46 - shorthand, and some other keywords and other
other things that we can do to set this whole
401:47 - thing up. So one thing you need to keep in
mind that is that lines are the basically
401:48 - the core concept, the most important part
of grid, it's what makes grid what it is,
401:49 - all of the properties that we've learned,
are all kind of revolving around lines, and
401:50 - the model is created by those lines. So that's
just one thing to keep in mind. Alright, let's
401:51 - get started. So the first thing I'm going
to do is talk about how to start an end at
401:52 - certain item at a designated area. So we're
going to go through and specify the start
401:53 - and end points. Now there are many different
ways to do this. But we're going to start
401:54 - with the basic sort of syntax that we should
use to set this up. And then we'll move in
401:55 - some into some of the more advanced syntax
to set this thing up and start creating shorthands
401:56 - and other shorts of properties. So let's go
ahead and get started. What I'm going to do
401:57 - is select what item I want, let's just go
ahead and say the first item. And now what
401:58 - we need to do is go ahead and set read column
like this.
401:59 - So what I need to do from here is up whoops,
what I need to do from here is to specify
402:00 - a start and an end point. And they are separated
by a slash. So the start point is going to
402:01 - be the starting column line. So I'm going
to say one, and the end point is going to
402:02 - be well, the ending, and I'm just going to
say two, or Yeah, I'm gonna say two or three.
402:03 - For now, I'm just going to go ahead with three.
Now if I go ahead and refresh the page, you
402:04 - can see what's going on here. Now, obviously,
it looks really weird with all of these different
402:05 - items here, and they're being rearranged in
a different way. What's happening is we're
402:06 - starting at line one, and then we're going
to end at line three. And you can see that
402:07 - although it's not resizing properly, it still
does take up that space in an invisible way.
402:08 - So we have our item two at the start of line
three, and everything is pushed right past
402:09 - it overriding those template rows and columns
that we created. Now let's go ahead and specify
402:10 - our next value, which is the grid row value.
So what we're going to do here is just with
402:11 - our first one, we're going to set a start
and an end point and separate them by a slash.
402:12 - So what I'm going to do is go ahead and say,
start at row one. And we're going to whoops,
402:13 - and we're going to end again, let's just go
ahead and say line two, just like this. Now
402:14 - I'm going to refresh the page. And you can
see nothing's happened because it does start
402:15 - at one and end at two. Let's go ahead and
set three right there. So now you can see
402:16 - what's going on here. Although it didn't,
it didn't show anything before when we had
402:17 - one to two, because it already took up that
space. When we set it to 123, you can see
402:18 - that everything has now been pushed again,
and the space has been separated accordingly.
402:19 - So you can kind of see the power of this already,
you can create all sorts of layout menus and
402:20 - sidebars, just by using this syntax alone.
And it is very powerful. But there's also
402:21 - many different ways to do it, which we're
going to be covering over the next few videos.
402:22 - Now instead of specifying an endpoint or an
end line. Because these can get quite confusing,
402:23 - you don't know where line start and where
lines end. And it does get quite confusing,
402:24 - especially when you have very big grids with
lots of different columns and rows. So instead
402:25 - of this, you can actually specify the distance
that you want it to take up. So the keyword
402:26 - that you can use for this is span. What this
is going to say is start at some line, whichever
402:27 - one you choose, and span or take up a certain
amount of well spaces depending on what value
402:28 - you're using. So for now, I'm going to say
span two, and here. I'm also going to change
402:29 - this to span two. Now let's refresh and see
what happened. You can see that nothing has
402:30 - changed. Of course because They are exactly
the same thing, you start at column one. And
402:31 - you take up two more spaces, you go up two
more lines, you start at row one, and then
402:32 - you go down two more lines. So you start at
line 112, just like that. And this is a much
402:33 - easier way to work with grid columns and rows,
because you can kind of see what you're doing,
402:34 - instead of just specifying start and end points
like this, you can actually kind of visualize
402:35 - the what you're doing with your grids, and
how big you want to make your items. So that's
402:36 - pretty much it for these different items.
Now, there are, like I said, many different
402:37 - shorthands that you can use, which we're going
to be learning in just a few videos time.
402:38 - But this is kind of the basic idea of specifying
these items, you can go through and you can
402:39 - set start and end point, add points based
on the different lines and the sort of model
402:40 - created by the grid. And then you can set
how big you want each item to be. Alright,
402:41 - let's move on. So today we are going to be
covering or looking at the last feature of
402:42 - our grid section. And it's pretty much just
a summary of what we did here, but using a
402:43 - shorthand. So you can see that we have our
grid column and our grid row. So we identify
402:44 - our starting and ending points for both axes.
But there's actually a way that you can do
402:45 - this whole thing in one go. And usually when
you're developing what websites, you're going
402:46 - to want to do this, you don't want to go and
do each of these properties individually.
402:47 - For all of them, you're going to want to do
it quick and fast for both axes. And that's
402:48 - how you get the maximum out of grid. So what
we're going to be using is something called
402:49 - the grid area property. And just like before,
pretty much what happens is this is a shorthand
402:50 - that summarizes these two in one property.
So it is a little bit confusing to get your
402:51 - head around the
402:52 - starting and ending points. So I'm just going
to go through it with you. So right now I
402:53 - have changed this part a little bit of kind
of messed around with the column starts and
402:54 - ends so that you can differentiate between
the values. So pretty much what the first
402:55 - value we're going to input just like here
is going to be your row starting point. So
402:56 - you're going to go ahead and input two in
this case, because we want to match this exactly.
402:57 - And the next instead of your row end is actually
your column starting point. So then we're
402:58 - going to put one. Now from here, this is where
a lot of people get mixed up and confused.
402:59 - Pretty much what's happening is just how like
with margin, you go top right, bottom left,
403:00 - or with any other kind of property that deals
with those kind of multiple value scenarios,
403:01 - what's going to happen here is you have the
row column start, and then you have the row
403:02 - column. And so just keep that in mind. And
everything will work out for you. So all you
403:03 - have to do is go ahead and say two, one. And
now we're going to put our row end. Remember,
403:04 - we have row start column, start row end, and
then column end. So here we're gonna put span
403:05 - to Now remember, this can be a span value,
or an end value, it doesn't actually matter.
403:06 - So you can do whatever you want here. And
then of course, the column ending value, which
403:07 - in this case is span three. Should now what
we're going to do is go ahead and and just
403:08 - comment these out for now and see if anything
has changed. And you can see, of course, it
403:09 - hasn't. Since we pretty much summarize this
into our shorthand, we don't actually have
403:10 - a use for these anymore, so I'm going to go
ahead and get rid of them. So now that you
403:11 - know how to do it, let's talk about some of
the benefits of this. Now, when you're creating
403:12 - a grid, you're creating a huge practical system,
most likely, you're going to be organizing
403:13 - pages into headers, and sidebars, and all
sorts of things. And you don't want to go
403:14 - and input those two for each one, it gets
a little bit confusing after a while. So it's
403:15 - much easier if you just have one property
that can summarize both the column and the
403:16 - row in one clean swoop. And then you can apply
them to all of your different pieces. So your
403:17 - sidebar would go and start and end here, then
your header would go here and you get the
403:18 - idea. So that's pretty much it for grids and
grid area, there's a lot to cover. And of
403:19 - course, practice makes perfect with these
kinds of things. But the more you use it,
403:20 - the more you will understand how to sort of
work with it and play around with some of
403:21 - the tricks that really get grid to work properly.
Now these tricks can't really be taught, because,
403:22 - of course, they're personal to the user, the
developer and what kind of work they're doing.
403:23 - So there's always shortcuts and all sorts
of little tricks you can use with these properties
403:24 - to really lay out your website related to
your special field of development or work.
403:25 - Alright, let's move on. So this is going to
be starting a brand new section. And we're
403:26 - actually going to be looking at a very cool
and useful feature in CSS. Now, of course,
403:27 - this isn't a very old or considered a essential
feature, but it's still very useful. And it
403:28 - can help you make your website look a lot
better. So in this section, we're going to
403:29 - be covering everything to do with movement
on your page. So things like animations, transitions,
403:30 - and some other features that you can use to
sort of change the way your website looks
403:31 - without actually changing it, in a sense.
Now, of course, this will make a lot more
403:32 - sense once we go forward and start working
with some of the properties. But the first
403:33 - one I want to talk about in this video is
our transition property. So there is a lot
403:34 - to cover in this video. And transition is
actually a shorthand for four different properties.
403:35 - So there's going to be a lot to work with
and talk about, so I'm going to go through
403:36 - it a little bit slow. But once you get to
the end of this video, you'll understand everything
403:37 - about transitions and how to work with them.
Now you can see I've touched up this website
403:38 - a little bit using any all of the skills that
we've learned in this section selectors, displays,
403:39 - margins, all sorts of things like that, including
styling the button just with a little creativity.
403:40 - And now we have our page kind of a little
bit better laid out for our animation. So
403:41 - the main part that we're going to be focusing
on is our contact us section, and notably
403:42 - our Submit button. So this is the main kind
of focus piece of this section. So pretty
403:43 - much right now we have a static page, there's
nothing moving nothing changing positions
403:44 - or properties or anything like that. And right
now, what I want to do is focus on the submit
403:45 - button to create some transitions. Now pretty
much what's going to happen is we're going
403:46 - to use pseudo selectors to change the state
of this button.
403:47 - Or change some of the properties in it. So
for example, the background or the text color,
403:48 - or anything like that, and then we're going
to use the transition property to make it
403:49 - appear smooth. So that's one thing to keep
in mind, the transition property itself isn't
403:50 - that big of a deal. But the real work goes
behind the pseudo selectors and how you use
403:51 - them. So let's get started. The first thing
I want to do is use a pseudo selector to change.
403:52 - Let's just go with the background for now.
So what I'm going to do is use my class that
403:53 - I added, you can go ahead and add this on
your own if you're following along. And then
403:54 - I'm going to use a pseudo selector. And I'm
just going to say for now, let's go with hover,
403:55 - which is a pretty common pseudo selector.
Now, just to test this, that this works, I'm
403:56 - going to change the color to black, because
again, there could always be issues. Let's
403:57 - refresh hover, it's black, you can see that
it's already working, it's just not smooth.
403:58 - So let's go through and start changing some
of these properties. What I'm going to do
403:59 - is change the background to a lighter shade,
I'm actually going to just use the color picker
404:00 - here, I'm going to go ahead and use a lighter
shade of blue, something that would indicate
404:01 - that you're hovering over. So I'm going to
go ahead and do that. And for now, we're just
404:02 - going to stick with one property. Well, once
we go forward, we're actually going to add
404:03 - more and more properties to make it look a
lot cleaner. Let's go ahead and refresh. See
404:04 - if that works, you can see that it is a much
lighter shade. And it looks like a proper
404:05 - hover on a website. So let's get started.
Now we have our Submit button or our base
404:06 - class, the one that's always active, and our
special pseudo class, which kind of uses specificity
404:07 - to override our base class in certain conditions,
in this case, the hover. Now what we're going
404:08 - to do is add our transition property. So what
we do is go to our base class. And we're going
404:09 - to set our transition property here. And now
we have a bunch of different values to input.
404:10 - The first is going to be the property that
you want to well transition because remember,
404:11 - the property is basically going to smooth
it out and move the property on one hand and
404:12 - from the base class slowly to the other in
a nice, clean, automated way. So if you want
404:13 - to select all of your properties, you can
just hit all, but I wouldn't recommend that
404:14 - unless you unless you want to shorten things
or smooth over time, because sometimes your
404:15 - classes can change. And it can cause errors
in the long run. So what I would do is for
404:16 - now I'm just going to select the specific
property that I want. Next thing I want to
404:17 - talk about is the duration. So this is pretty
much the time it's going to take to move from
404:18 - one property or one value to the other. Now
this can be anything. Now you would specify
404:19 - this in seconds or milliseconds depending
on what you want to choose. I'm going to go
404:20 - ahead and use seconds. So I'm going to say
two seconds. And s by the way is the unit
404:21 - for seconds in case you didn't know. The next
we want to go is talk about the sort of transition
404:22 - style So this is probably the most complicated
thing to work with, because there's a lot
404:23 - of different styles and haven't really used
them in daily life. But it's pretty easy.
404:24 - Pretty much what you're going to do is decide
what kind of a change do you want? Do you
404:25 - want it to go straight from A to B? Do you
want it to be smooth or speedy. And what I'm
404:26 - going to do is just run through some of the
main ones you have here. So the first one,
404:27 - and the most common one is going to be ease
typing is, and pretty much what this does
404:28 - is it's kind of the standard transition, it
goes is it goes straight from A to B, then
404:29 - you have linear, which is not very commonly
used, especially in transitions. But it just
404:30 - goes straight from A to B without any, you
know, speed changes or anything like
404:31 - that.
404:32 - And you also have a couple more, there is
one called ease in out like this. And you
404:33 - can pretty much just read this a name, it
goes it eases using the previous one that
404:34 - I just talked about. But of course in that
404:35 - order.
404:36 - So those are pretty much the three, or the
sorry, the four common ones that you would
404:37 - use. And of course, there's a bunch more,
but these are really the main ones that you
404:38 - would work with here. So pretty much let's
start working with our transition property
404:39 - here. So I'm actually going to go with ease
and out just to spice it up a little bit,
404:40 - not use the basic ones. And then the last
property that we're going to select is the
404:41 - delay. So pretty much what's going to happen
is when you hover over it right now there's
404:42 - no delay, it's zero seconds, the animation
plays instantly. Or what you can actually
404:43 - do is set a delay that you can use to let's
just say after you hover, wait two seconds,
404:44 - and then play the animation. So let's just
go ahead and set a delay of one second. And
404:45 - that offer the semicolon a lot to digest there,
I know. But um, don't worry about it just
404:46 - leave, it's just keep it there for now. And
if you don't understand it, we'll break it
404:47 - down and do some more examples. Let's go ahead
and refresh the page. So what I'm going to
404:48 - do is hover over my button here, you can see
that it's going to wait whoops. So I'm going
404:49 - to hover over. Now we're going to wait. And
you can see after one second, it turns into
404:50 - that kind of shade that we want it. Now I
feel like we're going to remove that one second
404:51 - delay, because we don't need it. And I'm actually
going to shorten this down 2.5 seconds. Now
404:52 - what I want to do is refresh the page. And
now you can see it's a lot faster. Now once
404:53 - you get into this range of one, you want to
start using milliseconds. So we're going to
404:54 - go 300 ms, which is milliseconds.
404:55 - Let's refresh the
404:56 - page. And like I said, just play around with
this tinker with it and see how it works.
404:57 - So you can see when we do this, that it changes
the color. And when we hover over it changes
404:58 - back. So now you can see the difference between
not having a transition and having it. Let's
404:59 - comment this out for a second. And you can
see how that works. Without the transition,
405:00 - it looks kind of jarring and quick and sharp.
It doesn't really look appealing. But when
405:01 - you add that transition, it just completely
changes everything. Now why don't we go ahead
405:02 - and try out some of the other styles because
it's much easier to show you how these styles
405:03 - works, rather than just explaining them. So
let's go ahead and see linear.
405:04 - So
405:05 - pretty much what's going to happen, it just
goes straight from A to B, no speech changes
405:06 - or anything. Of course, with something this
small, it's not very noticeable. But when
405:07 - you have translations and all these different
changes, then it will definitely be noticeable.
405:08 - So there you go, you have a linear transition
there. Now let's go ahead and try our ease
405:09 - transition, refresh it. And you can see that
it is a lot faster. And like I said, not very
405:10 - noticeable. But we can see a clear difference
in the speed and agility or what not agility
405:11 - but the kind of curves of the transition,
it starts out very fast in towards the middle
405:12 - and gets a little bit slower. And then towards
the end, it's much faster. Now of course,
405:13 - it would be easier to demonstrate if it wasn't
300 milliseconds. Let's go ahead and see this
405:14 - when it is on a higher time, so you can see
kind of how that works there. So there we
405:15 - go. Those are the different types of transition
types. That's probably the hardest property
405:16 - to or sorry value to work with. And then after
that, everything becomes a lot
405:17 - simpler.
405:18 - So now let's go ahead and start adding some
more properties here to make this a little
405:19 - bit more interesting. I'm going to go ahead
and add some padding. So I'm going to say
405:20 - when it's hovered over pretty much double
the padding, so 20 pixels, 30 pixels. Now
405:21 - here, what we're going to do is either use
a comma to separate the different property
405:22 - That we want to use. Or we can just erase
all of this and say all. Now we refresh it.
405:23 - And you can see that that gets a lot bigger,
let's change that back to about 500 milliseconds.
405:24 - Make that a lot shorter. And now you can see
it gets bigger. On top of that, the sorry,
405:25 - the background changes. Now, of course, you
can do so many different changes with this,
405:26 - you can maybe change the color, the font size,
even the weight. And once we learn some of
405:27 - the translation, or sorry, transformation
functions, we can do a lot more with it. But
405:28 - for now, we need to stick with the basics
of the transition concept. So before we move
405:29 - on, there's one thing I need to talk about.
And those are the prefixes that we need to
405:30 - use for browser support. So I think is with
much newer CSS versions is that not all browsers
405:31 - support them, they all compile in a different
way. And some of them don't support these
405:32 - newer properties, especially in the older
version. So for example, Internet Explorer
405:33 - seven, Internet Explorer eight, all of those
very old browsers, which people still use,
405:34 - won't be able to see this property. Now you
have two solutions to this, either use a fallback,
405:35 - which is you know, if the transition doesn't
work, just maybe have a fallback image or
405:36 - don't play it at all. Or you can use a browser
support prefix. So each one or each type of
405:37 - browser has a different prefix, but the main
ones are for Chrome and Safari, we need to
405:38 - use WebKit, like this. And remember, you need
to start it with a dash and end it with a
405:39 - dash like this. Then you one for Mozilla Firefox
is going to be dash m o z. And then of course,
405:40 - for some of the other browsers like opera,
you would use Oh, whoops, online, would you
405:41 - Oh, for that. And those are pretty much the
three main ones. Now. WebKit is pretty much
405:42 - an essential, it covers two browsers at once.
Now, of course, and result is also still important.
405:43 - opera is important, but not as important as
these other two. Now one thing you need to
405:44 - note is you can't just string these together,
you can't go dash WebKit dash smalls dash
405:45 - O, you have to use separate property. So you
have to go and copy each one, and it is a
405:46 - pain. But if you want the maximum browser
support, you need to do this. So of course,
405:47 - if we refresh the page, nothing's gonna happen
here. But anybody who's using an older browser,
405:48 - if I was testing this on maybe Internet Explorer
seven, would see a clear difference between
405:49 - before and after we added these browser support
prefixes. So that's pretty much it for transitions.
405:50 - Now, there is a lot to cover, and we will
work with them throughout the future. But
405:51 - all you need to do is go ahead, select pretty
much any element you want, and start playing
405:52 - around with it, add some different properties,
maybe go and change the pseudo selector. So
405:53 - for example, if you want it to be active or
something like that, or if you click it, you
405:54 - want to change some of these properties. There's
a bunch of pseudo selectors out there. And
405:55 - combining that with the transition property
and the skills you've learned in CSS, you
405:56 - can really make this website or whatever website
you're working on interactive, without even
405:57 - having to learn any animation, or proper transformation
properties. Alright, let's move on. So in
405:58 - this video, we're going to be covering different
transform properties. And this is going to
405:59 - be quite a long video. Just like the transition
video, we do have a lot to cover. There's
406:00 - many different values and functions that we
need to use to complete this. But it is a
406:01 - pretty essential step of this section. So
let's just get straight into it. So firstly,
406:02 - what we're going to be using in this video
are actually not values, their functions.
406:03 - Now, just like this RGB thing is a function
that takes a bunch of inputs and gets a value
406:04 - out. Or maybe something else. Well, it seems
like this is the only one on the page. But
406:05 - what we're going to be doing is using a bunch
of functions that take in inputs, and actually
406:06 - physically change what this is on the page.
Now obviously, all of these do physically
406:07 - change what they are on the page. But instead
of inputting absolute or direct values, this
406:08 - kind of processes in a different way behind
the scenes. So let's just jump straight into
406:09 - it. First thing we need to learn is the property.
Now we're going to use our button again, and
406:10 - I'm going to be using a value called transform.
So what we're going to do is plug in a bunch
406:11 - of different values in here and see how it
affects this. So pretty much we have two different
406:12 - sections of this video, we have our physical
change properties or our movement, so our
406:13 - translation and our scaling, and then we also
have our different rotation properties, or
406:14 - Well, I should say functions, but there we
go. So we're going to have our Translation
406:15 - in our scale, so our physical changes, and
then our rotation. And at the end, I'm going
406:16 - to throw in a nice shorthand function that
summarizes all of it. So let's start with
406:17 - our physical changes. So the first thing we
need to learn about is translate. So we're
406:18 - only going to be covering 2d translations
for today, because 3d can get very complicated
406:19 - very quick. And it's not really useful in
day to day life or developer life, unless
406:20 - you're making something that specifically
needs it. So we're just going to cover 2d
406:21 - translations, and other function transformation
functions for
406:22 - today.
406:23 - So pretty much what this is going to do is
taken two different values, one of them is
406:24 - going to be the Y shift and the x shift. And
it's going to actually shift physically shift
406:25 - the elements to that position. So for example,
if you said, I want to move this button or
406:26 - this image a little bit to the left, and I
wanted to move, or let's just say 10 pixels
406:27 - to the left, and I wanted to move it 10 pixels
up, it would do that. And of course, there
406:28 - are many different ways to do it. But what
we're going to do is use this translate method
406:29 - to really change the way that this whole thing
works. So what we're going to do is are we're
406:30 - going to use an alternative method to you
know, something like margin or grid or all
406:31 - of those. So the first thing you want to do
is specify the x axis value. Now, in case
406:32 - you haven't, you know, learned about graphs,
or you maybe forgot it, pretty much, what
406:33 - happens is the x axis is going to be your
left and your right shift, right is going
406:34 - to be your positive value, so anything above
zero, and if you want to shift it left, you
406:35 - use negative values. And then of course, the
second value is the y axis. So up as positive
406:36 - and down is negative. So let's start with
our x shift, I'm going to just go ahead and
406:37 - say 50 pixels here. So I want to shift it
pick 50 pixels to the right. And remember,
406:38 - we don't need we need to, we don't need to
say anything like to write or anything like
406:39 - that, we just need to specify the value, then
we throw in a comma. And here, what we're
406:40 - going to do is add our Y axis shift. So here,
I'm also going to say, let's just go with
406:41 - 30 pixels, refresh the page, see what happens.
Now, we can see here that it's actually staying
406:42 - exactly the same. It's not moving. It's not
changing anything here. But you can see that
406:43 - when we hover over it, it does actually move.
So what's going on here. Now, here's where
406:44 - you have to be careful about where you add
your properties, you can see that I added
406:45 - it to our pseudo selector instead of our base
class. And that's one thing or one point I
406:46 - just wanted to make about these pseudo selectors
is that if you add them on, maybe here, it's
406:47 - not just going to inherit it magically and
put it on the base class, you do need to be
406:48 - specific. Remember, these two are completely
different classes, it's just that some of
406:49 - them are being overridden. So for example,
our background and our padding already exist.
406:50 - So what happens is that all of these styles
are already applied. And then the new styles
406:51 - here are overridden. But this is a completely
new property, it doesn't actually
406:52 - exist on our base class. So just make sure
that you don't make that mistake. Let's go
406:53 - ahead and paste that on the base class. I'll
do it just above the transitions. Now refresh
406:54 - the page, and it's translated perfectly. So
now that we've done that, I want to talk about
406:55 - browser support for a second. Now all of these
are very new features to CSS, you do need
406:56 - to make sure that you add your browser prefixes.
So WebKit, mas, and O. Now, I'm not going
406:57 - to go through and add it for all of them.
I'm just going to leave it blank for now.
406:58 - But you need to keep in mind that if you want
the maximum support on your on your page on
406:59 - your site, you want to make sure you include
those prefixes. So there we go, we've covered
407:00 - it translates. Now let's work with our next
value, which is going to be scale. So scale
407:01 - works in a similar way to how maybe increasing
the padding would work. What's gonna happen
407:02 - is you're going to go and you're going to
type in scale, which is the name of the function,
407:03 - and then you're going to pass in a decimal
value, it doesn't have to be a decimal, but
407:04 - pretty much what you're going to do is just
say, let's say I want to scale this up by
407:05 - two and a half times, what's gonna happen
is this is going to size up by two and a half,
407:06 - we refresh, you can see that it's gotten a
lot bigger, and padding and all of that it
407:07 - doesn't really apply or change anything here.
It just scales everything up by two and a
407:08 - half. So you can obviously see some of the
issues here with margin and padding and all
407:09 - sorts of things like this. So be pretty careful
when you do this. You don't want to mess up
407:10 - your page or change your style, or anything
like that. You just want to make sure that
407:11 - you can scale without having to to mess with
the layout of your page. So that's for scale,
407:12 - and all of the physical properties. Now let's
move on to some of the rotation properties.
407:13 - So the first two, we're going to cover or
sorry, the first one I'm going to cover is
407:14 - pretty simple. It's just a standard rotate.
But then after that, I'm going to cover two
407:15 - really special ones, which are actually skewing
on different axes. So we'll get to that in
407:16 - just a second. Let's refresh the page. So
the first one I'm going to use is rotate,
407:17 - and this takes one value, obviously, it's
going to be our degree value. So if you don't
407:18 - remember from our gradient section, what happens
pretty much here is we rotated kind of circularly.
407:19 - Well, not for this one. But we can use degrees
to actually change the angle or direction
407:20 - of our gradient. So for example, 90 degrees
B, a 90 degree shift, so would go to the right,
407:21 - and then negative 90 degrees would go the
other way. So it would go to the left. So
407:22 - if you just remember that you'd be doing great
here. So let's just say I wanted to use minus
407:23 - 45 degrees, and remember the symbol for it.
So what's gonna happen pretty much this is
407:24 - going to shift slightly, or will not shift,
but it's going to rotate. And you can see
407:25 - what happens there. Now, if this was minus
90, it will pretty much flip. So it was facing
407:26 - up vertically. And I'll actually show you
that now. But pretty much what you're doing
407:27 - here is just rotating it around it center,
and changing the rotation of it. Pretty simple,
407:28 - pretty easy to use. So now let's talk about
the two special ones. So pretty much what's
407:29 - going to happen here is they're going to skew
them along certain axes. Now, this is really
407:30 - hard to explain. And most likely, nobody will
get it if it explained. So the only real way
407:31 - to show it or the only real way to teach it
is by showing it. So what I'm going to do
407:32 - is use skew. And you can see we have our shorthand
and we also have skew x and skew y. So what
407:33 - I'm going to select this skew x first, and
pretty much this is going to shift it or rotate
407:34 - it along the x axis instead of its center.
So remember, the X is kind of
407:35 - a horizontal rod. So just kind of imagine
a stick or a paper attached to a rod and you're
407:36 - rotating it around that rod. So now let's
go ahead and input our value just like before,
407:37 - we're going to use degree values. So I'm going
to go 45 degrees positive, we refresh the
407:38 - page. And obviously, it looks quite weird,
because it's pretty hard to simulate these
407:39 - kinds of things. But you can see that pretty
much what this has happened is rotated along
407:40 - that axis. So if I go negative 45, it's going
to go the other way, just like that. And you
407:41 - can kind of see how that works. Now if we
change this to skew y, it's going to go it's
407:42 - going to do this exact same thing. But it's
going to be on the opposite axis. So it's
407:43 - going to be on a vertical rod. So just imagine
that, refresh the page, and you can see how
407:44 - that is working. Now obviously, it is very
hard to see and visualize. So I wouldn't encourage
407:45 - you to use skew X or Y. If you want to rotate
something you should most likely stick or
407:46 - you should try and stick to the three I just
covered. So the last value we're going to
407:47 - be talking about or the last function is going
to be our matrix function. So this is going
407:48 - to be a shorthand to summarize everything
into one go. And pretty much from here, what
407:49 - we're going to do is pretty much just summarize
everything in one clean swoop. So pretty much
407:50 - this takes six arguments. And one thing you
do have to note is it doesn't take rotation
407:51 - into account, it only works with skews, so
you just have to keep that in mind. If you're
407:52 - planning to rotate it, you should probably
add that as a as another function. So let's
407:53 - get started. What we're going to do is go
ahead and work with our matrix function. So
407:54 - we're going to erase this. And we're going
to go ahead and add our matrix. Now these
407:55 - six arguments do follow a very, very specific
pattern or a order. So we're going to have
407:56 - to go through it slowly so that you can understand
it. And it is a little bit out of order, logically,
407:57 - so we're just going to take our time this.
Now the first value is going to be your x
407:58 - scale. Now one thing I forgot to mention is
that we were actually using shorthand. shorthand
407:59 - functions to avoid all the mess with scale
x and scale y and just shorten things up.
408:00 - So one thing you do need to keep in mind is
that every scale component or function like
408:01 - this will have an x and a y value. And what
we pretty much did is summarize them down
408:02 - into one or into those shorthand functions.
So we can just do it really easily. But here
408:03 - it's actually split up into different functions.
So let's To start with our scale x. Now one
408:04 - thing to note is that if you want to keep
it the same, all you have to do is input one,
408:05 - pretty much this is not typing pretty much
what this is going to happen. Or what this
408:06 - is going to do is say set this button or object
or element one times as big as itself, which
408:07 - is, of course, just going to result in the
same. So the next is your skew y and your
408:08 - skew x. Now if you don't want to do anything,
you set it to zero. But if you do want to
408:09 - skew it along the axes, you do have to use
decimal
408:10 - decimal values here. And one thing also to
note is that you don't have to include the
408:11 - unit's like we did before. So no PX or mm
or dagger do anything like that, you just
408:12 - include the numbers. So you do include decimal
points here. So I'm just going to go quick
408:13 - 45 on both of these. And remember, this is
actually 45 degrees, so keep that in mind.
408:14 - Next thing we're going to do is input our
scale y. So again, you do have scale x and
408:15 - scale y, if you want to keep it the same,
set it to one, and then you have your translate
408:16 - x and translate y. So I'm going to say 100
pixels. Whoops, 150. Remember, pixels pixels.
408:17 - So this is a little bit confusing, but it's
don't try not to use it that much only use
408:18 - it if you really have to, or if you want to
shorten code down. But I would recommend not
408:19 - using this function very often. It's quite
clunky and ordered, and it doesn't really
408:20 - allow for freedom. So just keep that in mind
when you're using it. Let's refresh. And you
408:21 - can see our new item here scaling is, of course,
the same it shifted on the x and y axes. So
408:22 - you can see that here, it doesn't create that
rotation that you may be expecting, because
408:23 - remember, it is a skew on individual axes.
Just remember that. And of course, our scale
408:24 - on the x and y is one, our translation of
x is 100. So it's about this much. And then
408:25 - our translation of y is 50. So there we go,
we have everything set up. And now it's pretty
408:26 - much just all working, we have our shifts
our movements here, and we also have our scaling.
408:27 - So go ahead and try these out on different
elements, it doesn't just have to be with
408:28 - a button, you can use this on Grid Elements,
although some of them may not work. You can
408:29 - use this on images, text, all sorts of things,
these work on any element, and they can really
408:30 - help you to style your website without having
to use some of the traditional methods that
408:31 - we've learned. Alright, let's move on. So
in this video, we're going to be looking at
408:32 - CSS animations. So we've looked at transitions
and some of the different transformation functions
408:33 - that we can use to sort of work with our elements
in a different way. But now we're going to
408:34 - be learning another essential component, which
are animations. So we're going to be covering
408:35 - this over the next few videos. And for the
first one, we're going to be creating the
408:36 - animation. So first of all, what are the advantages
of using an animation? Well, firstly, when
408:37 - you're using a transition, you have to apply
those specific styles to everything you want
408:38 - to perform a transition with. But with an
animation, you can define the changes once
408:39 - and then apply them to anything. So for example,
let's just say I wanted to create an animation
408:40 - that turns something from red to black, or
sorry, turns the background from red to black,
408:41 - then you can apply it to any item. Whereas
if you use transitions, you'd have to go through
408:42 - and go through every single element, change
the suit of selectors, and do all sorts of
408:43 - things. On top of that, when you're using
animations, you can play something at the
408:44 - start, instead of having or with a delay instead
of having to wait for some event to happen
408:45 - with a pseudo selector. So pretty much what
happens here is you can say, we can pretty
408:46 - much just remove this image completely from
the page or translate it at the
408:47 - start
408:48 - when the page is first refreshed. We can also
use this to really make our website interactive
408:49 - and change the way this website looks completely.
So let's get started. Now, first thing you
408:50 - need to realize is that these animations are
completely custom, custom. You can name them
408:51 - whatever you want and do whatever you want
inside them. There are a few keywords that
408:52 - we need to use to get this set up. Now an
animation is split up into something called
408:53 - keyframes. Now pretty much each animation
has at least one at least two keyframes. So
408:54 - you have the starting and the ending. And
then you can add keyframes in between to decide
408:55 - the different stages of the animation. So
to define an animation, all you have to do
408:56 - is go at keyframes. So in this case Is the
prefix and keyframes is going to be our keyword.
408:57 - And then you name the animation. I'm just
going to say, translate elements just like
408:58 - that. Now you can name this whatever you want.
Remember, it's completely up to you, then
408:59 - you're going to open it up with brackets.
So now it's a little bit different to how
409:00 - we've been using CSS, we can just define styles
and expect it to work perfectly. There are
409:01 - two different ways or two different main ways
that we can define our keyframes. So pretty
409:02 - much the kind of standard way of writing one
of these keyframes is typing out the the keyword.
409:03 - So for example, I'm just going to type example
here. Now, of course, if in a real world scenario
409:04 - wouldn't be like this, it would be a number
or a percentage, or an actual keyword, but
409:05 - it wouldn't just say example, then you're
going to create these curly braces, again
409:06 - inside of our keyframes. And here, you would
type the styles at this stage. So for example,
409:07 - if I wanted a red background, you would type
it here. So what I'm going to do is talk about
409:08 - the first two keywords, which are to and from.
So first of all, let's start with from, so
409:09 - this is pretty much going to be your initial
starting point. And then two, which is going
409:10 - to be your ending starting or ending point
sorry, here, what you're going to do is type
409:11 - in whatever you want. So for example, let's
just say our, I'm actually going to change
409:12 - this black to red, since that's what the or
sorry, red to black, red to black. Now here,
409:13 - I would say start from when the background
is red. Now there doesn't have to be anything
409:14 - here. But it would be recommended that you
do start with something unless you're going
409:15 - for something specific after that. And then
here to, I'm going to say at the end of it,
409:16 - make sure the background is black. Now, of
course we don't have to work with timings
409:17 - or anything here, because that's all decided
when we add and work with the animation on
409:18 - our element. So there we go, we have a define.
Now these are the first this is the first
409:19 - way to do something. But what if you wanted
more than one background, you can't just add
409:20 - two background properties in one go. So instead
of this, what we use is percentages. So you
409:21 - can say at 0%, you want to have some special
properties. So I'm going to say background
409:22 - is red. And then you can say at 100%. So at
the end of the animation, this is when it's
409:23 - 100% complete the background to be black.
Now, the direct advantage to using this, you
409:24 - can actually add more than more than two stops.
So for example, I can go at 50%, I want the
409:25 - background to be yellow.
409:26 - Now realistically, you can add as many properties
here as you want, it doesn't really change
409:27 - anything. But of course, you want to try and
limit the amount of properties you add or
409:28 - sorry, stops or keyframes to maybe six or
seven at the max. Now unless you're doing
409:29 - something very specific. Maybe you want strobe
lights or something like that, you're going
409:30 - to want to keep it limited. So there we go,
we have these steps here. But the last thing
409:31 - I want to cover is that you don't just have
to work with one property. What if we wanted
409:32 - to translate something. So what I can do is
actually set the Transform, remember, it is
409:33 - a property. And then I can say translate this.
So by zero pixels and zero pixels. So of course,
409:34 - we don't actually have to type out this property.
What I'm going to do is now copy this over.
409:35 - And so 50% of the way we want it to translate
by 10 pixels, and 10 pixels. And at the end
409:36 - of it, we want to translate by 20 pixels and
20 pixels. So you can see how this works.
409:37 - So for example, let's just say we wanted to
enlarge something and change the color from
409:38 - red to black. We can do it just like this
except maybe using scale or padding or any
409:39 - other way that you choose whichever one whichever
one you think is best for the specific website
409:40 - you're developing. Now one thing I'm going
to mention is that the kind of convention
409:41 - is to keep these curly brackets on the same
line. But if it is getting a little bit long
409:42 - like this one, you can definitely open and
close them just like I'm doing here. Don't
409:43 - be limited by the whitespace. It's not really
a defining factor. You can space these however
409:44 - you want. But usually you're not going to
use more than one property on a keyframe like
409:45 - this. If you do have a giant animation, something
with, you know backgrounds, transforms and
409:46 - margins you're going to want to, you know,
space it out make it easy for people to read.
409:47 - So this doesn't just have to be multiples
of 10. This could be 30% 37% way 37% of the
409:48 - way through, it could be 25 you could split
it into quarters, you could do pretty much
409:49 - anything you want with this But the key thing
you have to remember is you're designing your
409:50 - own animation, you're going to want to fit
it to how you want. So for example, if you
409:51 - just wanted to enlarge something, you didn't
really you don't really have to use these
409:52 - percentages you can just use to and from or
from and to, since you only have two stops,
409:53 - but if you want to do something like multiple
color change, then you most likely want to
409:54 - switch to percentages. So you want to go from
0% to 33% 66%, you know, work with it, just
409:55 - kind of see how everything works together
and design the animation based on what you
409:56 - need. So this is the video based on designing
the animation. Now in the next video, we're
409:57 - actually going to be adding our animation
and start working with it, to change it based
409:58 - on what we need for each element. Alright,
let's move on. So in this video, we are going
409:59 - to be adding the animation that we created
in the previous video to one of our elements.
410:00 - And then we're actually going to be going
through and working with it in the next video.
410:01 - So first of all, let's just recap what we've
done. So far. In the previous video, we created
410:02 - some keyframes for animation, I talked about
all the different units, and how you can actually
410:03 - set these values. And we covered all of that.
But now that we've actually created our animation,
410:04 - it's time to go through and add them to some
of our elements. So this is going to be quite
410:05 - a short video because it is quite easy to
just go ahead and add the animation. But there
410:06 - is a lot to cover about the different properties
of animations, which we're going to be talking
410:07 - about in the next video. So let's get started.
The first thing is to find a suitable item
410:08 - that we can apply this to. So obviously, this
is used with translation and background colors.
410:09 - So we can pretty much apply it to anything
on this page. For now I'm just going to go
410:10 - with our about me text right there. So the
first thing I'm going to do is go ahead and
410:11 - select it by adding a class, it looks like
where is it hold on, let's see seems to be
410:12 - have lost and all this. It's got to be somewhere
there we go about me. So he already has a
410:13 - class subtitles. So what we're going to do
is, well, actually, there's already stuff
410:14 - applied there. So it would be much better
if we actually added an ID to it using specificity.
410:15 - And we're just going to say about
410:16 - me
410:17 - just like that. Now what I would recommend
you keep your animations and keyframes at
410:18 - the bottom so that if you ever need to reference
them, you can just scroll down and see all
410:19 - of them there. So what I'm going to do is
go ahead and select this. So I'm going to
410:20 - go hash, and then about me, open up the curly
braces. And now what we're going to do is
410:21 - go and start adding our animation. So this
is pretty easy to do, all you have to do is
410:22 - use one property animation name. And you can
see a little shorthand there. But we're going
410:23 - to be covering that a little bit later. Let's
go ahead and add that. And here we're going
410:24 - to put the name of our animation. So this
would be red to black. And remember, it's
410:25 - going to be the exact name of the animation
that we specified here. So let's go ahead
410:26 - and refresh the page, see how this works.
And you can see that nothing's happening.
410:27 - So this is something that I want to cover
in the next video because we're actually going
410:28 - to be working with some of the properties.
But for now, all you need to know is that
410:29 - we do need to apply some special properties
for the animation to start running. So for
410:30 - now, all we've done is taken the keyframes
just slot them on to the about me title. And
410:31 - in the next video, we're going to go and actually
set this up so that we can start seeing it
410:32 - moving, changing the times and actually making
the animation come to life. Alright, let's
410:33 - move on. So now we're actually going to be
going ahead and covering the different properties
410:34 - that we can do in our little CSS stylesheet.
Here, we're going to go through, we're going
410:35 - to add some of these different animation properties.
And we're actually going to start working
410:36 - with it so that we can really get into how
the animation works and how we can work with
410:37 - it. So let's get started. Now, I'm only going
to be covering some of the basic properties
410:38 - here. But there are many more out there. There
are so many different ways that you can work
410:39 - with these animations and change their properties
or how they work. Well, what we're going to
410:40 - do is go ahead and use some of these basic
functions, so we can get this up and running
410:41 - and working. So let's get started. The first
one, I want to talk about an animation duration.
410:42 - And this is probably the best or well not
really the best, but it's the most important
410:43 - one, because pretty much what happens is the
animation duration is going to actually allow
410:44 - your animation to run. So what I'm going to
do here is first of all set up this function
410:45 - here. And pretty much the default value of
this property here it's actually zero. And
410:46 - that's why in the last video, this wasn't
running at all, we added the animation, but
410:47 - because the default value is zero, pretty
much the animation style starts and finishes
410:48 - at the exact same time. Well, not really.
But we can't see it at all the time is zero.
410:49 - So we're going to do here is specify a second
value here. So I'm going to go ahead and say
410:50 - two seconds, which is quite fast. So I'm actually
going to go ahead with four seconds. Now if
410:51 - we refresh the page, you can see that that
animation does play. And you can see it kind
410:52 - of works like that, it goes from red to yellow
to black. So that's the first thing about
410:53 - the animation that you'll notice it goes,
it stops, and then it finishes. And we're
410:54 - going to be using some of the other properties
to actually change how this work and maybe,
410:55 - you know, repeat it over and over again and
do all sorts of things with them. So the next
410:56 - property I'm going to be covering is the sort
of style of how the property works. So we've
410:57 - already covered the name of the property,
which is obviously applying the property or
410:58 - the animation itself. We've also talked about
the duration. But now we're going to be talking
410:59 - about the style. So pretty much the style
is probably the hardest property to learn
411:00 - about kind of how, you know, we looked at
transition properties or styles. And those
411:01 - were the hardest, this is pretty much the
exact same. So pretty much what happens here
411:02 - is that this style is going to define the
speeds, or how the animation works out. So
411:03 - all we have to do is go ahead and type out
animation. Animation, dash, sorry, timing
411:04 - function. There we go. And now from here,
we can apply the different speeds or
411:05 - styles.
411:06 - So I'm going to be talking about the main
ones. And you can probably recognize these
411:07 - from the transitions video. So we have ease,
which is the normal one you can see there.
411:08 - And then we also have a few more. So let's
go ahead and check it out. We have linear,
411:09 - of course, which is just straight, there's
no speed changes, or weird anything like that,
411:10 - you can see just go straight down. So you
can see a very clear difference there, especially
411:11 - here, unlike the transition. Whereas with
ease, it would stop in the middle and then
411:12 - speed back up. Whereas linear, it just goes
straight. Of course, we also have ease in
411:13 - and ease out and ease in out just like we
covered before. So there we go, I'm going
411:14 - to leave it at linear, because I think it
looks the best. There we go. And you can see
411:15 - we've set that speed curve there. So now let's
talk about the next property, which is going
411:16 - to be the animation delay. So the delay is
a little bit of a weird case here, because
411:17 - you can use positive values. But you can also
use negative values, which is a little bit
411:18 - confusing, but let's talk about it here. So
I'm going to go ahead and add an animation
411:19 - delay, just like that. And here, I'm going
to specify a delay time. So for example, two
411:20 - seconds. Now, of course, this works perfectly.
we refresh waits two seconds, and then the
411:21 - animation plays just like you would normally.
But what if we added a negative to here, what
411:22 - do you think would happen? If we refresh,
you can see it's already at yellow. So what's
411:23 - pretty much happening here is that it starts
when the animation is zero, which is the default,
411:24 - it starts right as the page loads. But if
you go negative two, it's pretty much acting
411:25 - as if you're already two seconds into the
animation. That's kind of how negative values
411:26 - work here. Now, obviously, there's no real
application for this unless you're looking
411:27 - for something really, really niche that you
need it. But this isn't really widespread
411:28 - or used. very commonly, it's just a really
cool thing to know about animation delays.
411:29 - So the next thing we're going to cover is
the iteration count. And I talked about this
411:30 - a little bit when we started the duration.
And it's pretty much going to say how many
411:31 - times this thing is going to loop over. So
we can use the property animation iteration
411:32 - count. And here, what we're going to do is
apply our the number of times we wanted to
411:33 - iterate. So for example, if I wanted to, to
iterate or loop over two times, I could refresh,
411:34 - of course, it starts a little bit early, and
it goes another time. And there we go after
411:35 - that is finished, so it went over two times.
Now there's also a really special value you
411:36 - can use here, which is infinite. And then
this means that this is just going to keep
411:37 - going over and over pretty much forever until
you terminate the page or close it or even
411:38 - change something. But when this is set, it's
gonna keep looping over and over again pretty
411:39 - much forever. So there we go. Now let's go
ahead and talk about the shorthand property.
411:40 - And pretty much what we're gonna do here,
whoops, actually, we need to cover one more
411:41 - value before we use that shorthand. And that's
going to be our animation direction. So this
411:42 - is the final value just like you're seeing
here before we started, but it's actually
411:43 - pretty useful unlike something like the negative
animation delay value here. Pretty much what
411:44 - this is going to say is the starting and ending
points of the animation. So for example, let's
411:45 - go ahead and add that property their animation
direction. And now we're going to talk about
411:46 - the four main values for this function. Of
course, the default value is going to be normal,
411:47 - which is just like that. And that, of course,
plays from 0% to 100%, just like normal. And
411:48 - I'm actually going to set this iteration to
two times and remove the delay. Just like
411:49 - that, so that we can get the full picture
here. So if we refresh the page, you can see
411:50 - that it's just normal, it goes from start
to finish. And then you have your opposite
411:51 - way, which is reverse. So pretty much what
happens here is it goes from 100% to 0%. And
411:52 - the properties aren't flipped, they stay exactly
the same. So if you look at this, it goes
411:53 - back in time, all the way to its starting
position. So the other two, which are a little
411:54 - bit more complicated to understand, are alternate.
So just like this, so alternate pretty much
411:55 - means it's going to go forward and then go
backward. So it kind of bounced back, you
411:56 - can see there, so it goes from zero to 100.
And then in the same animation, well not the
411:57 - same. It goes from 100 to zero. And then of
course, just like with our first two, you
411:58 - have alternate reverse, which does still the
alternation, but it starts at 100, instead
411:59 - of at zero, so it's kind of going to start
here and then go back to it starting and bounce
412:00 - back to 100.
412:01 - Let's look at that here. You can see it goes
up, and then it bounces all the way back to
412:02 - its starting position. So there we go. That's
pretty much how this whole thing works.
412:03 - And those are the four are actually here,
it's five main main functions and or sorry,
412:04 - properties. What we're going to have to do
here is summarize all of them because there
412:05 - is a lot to cover. And you're not going to
add five animations every time, especially
412:06 - when you have to use all of the different
browser support tools and prefixes. And it
412:07 - gets really complicated after some time. So
what I'm going to do is use a very cool shorthand
412:08 - that just summarizes everything for us. So
we don't even have to use our animation name
412:09 - here, we can just cover it all once in our
animation shorthand, so I'm going to do it
412:10 - here, animation. So the first, this takes,
of course, five values, your first value is
412:11 - going to be your animation name, which is
red to black. Your next value is going to
412:12 - be the duration, which is a pretty important
one. So we're going to set it the same at
412:13 - four seconds, your next value is going to
be your timing function or your speed. So
412:14 - we're going to set it linear here. And then
next is going to be your delay. Now we removed
412:15 - that there, but we do have to put that delay.
So I'm just going to say zero. Next, I'm going
412:16 - to put the iteration count, which is two.
And finally the direction which is alternate.
412:17 - Whoops, alternate reverse. Now you can see
that does get a little bit long there. So
412:18 - I'm going to leave both of these versions
on in the project file for you to decide for
412:19 - yourself. Now let's refresh the page, see
what happens. Oh, whoops, forgot the pixels.
412:20 - Sorry, forgot the second value there. Let's
refresh. And now you can see that it goes
412:21 - from the back to the start, just like we had
here. So like I said that shorthand is a little
412:22 - bit hectic to memorize and you know, learn
all of the different values. But there is
412:23 - always Google if you forget the order or anything
like that. And what makes this really useful.
412:24 - If you want to add any browser freebet for
prefixes like this, you can easily do that.
412:25 - And then just copy this over for the different
prefixes. So you can go here, here, here and
412:26 - put your different prefixes. So I have from
Mozilla, we have from Microsoft, so Internet
412:27 - Explorer. And then of course, we have our
opera. So we have four different prefixes
412:28 - here and five values for one element, you'd
have to put 20 properties just to get this
412:29 - all covered. Now, you can probably see the
advantage of using something like this, with
412:30 - that shorthand over all of the really clunky
properties. Alright, so that's pretty much
412:31 - it for animation properties, or the different
types of animations or ways you can manipulate
412:32 - these animations. Of course, there is once
you learn this, there's a lot of power that
412:33 - can go into it. You can create all sorts of
different animations, grow styles, and then
412:34 - you can really manipulate them just by using
these five values. We didn't even we didn't
412:35 - even have to touch the animation to make it
look completely different. So that's pretty
412:36 - much it. Now we've covered a lot of features
in CSS. And in the next section, we're actually
412:37 - going to be going through and styling the
website from scratch as a challenge. So you're
412:38 - going to have a challenge to style a website.
And then the solution is the video I'm going
412:39 - to show you and that's where you're really
going to get challenged to use all of the
412:40 - skills you've learned in this section. Maybe
touch up on some things that you may not have
412:41 - been comfortable with, or you may have been
fuzzy on. Alright, let's move on.
412:42 - So now that you've learned pretty much all
of the basic skills, or some of the more advanced
412:43 - skills as well, in CSS, it's time to move
on and start working on a challenge. So pretty
412:44 - much in this challenge, you are given an unstyled
website, which by the way, a zip, or a packaged
412:45 - file of all of the files that you can use
to get started is available for download on
412:46 - this Udemy lecture. So what you can do is
just go ahead and download that, and it's
412:47 - going to prompt you and bring up this page.
So you can see, we have a lot of stuff See
412:48 - here, and I'm actually going to zoom out,
just to get a better view of it. But there's
412:49 - a lot of raw images, raw HTML, there's no,
there's no styling on it at all. And what
412:50 - your job is to do is to follow these objectives
here, given here, just follow them and obviously,
412:51 - don't follow them to the core to the bone,
you can, you know, make any attendance upended,
412:52 - you know, amendment sorry, to, to these lists
of tasks as you like, but pretty much, you're
412:53 - just gonna have to style this website from
scratch using the techniques that we've learned
412:54 - coloring the layout grid Flexbox animations,
just completely revamped this website. Now
412:55 - one note is I do have my own solution video
posted in on the next lecture. But it is quite
412:56 - long, so you don't have to watch that. But
if you want to see how I did it, maybe you
412:57 - want to, you know, review everything or get
a little view on some of the topics, you can
412:58 - always watch that but don't feel forced or
don't feel like you have to watch that lecture.
412:59 - If you don't want to watch it, all you have
to do is click on it the bulleted list icon
413:00 - and just tick off the lecture, just make sure
that if you want it to mark as complete, just
413:01 - tick off the lecture make sure that it is
finished. And then you don't have to watch
413:02 - it. But other than that, we have this website
that is just completely unstyled. And we have
413:03 - to go and style it. Now just to show you this
is what our website here looks like I'm going
413:04 - to actually refresh the page. So you can see
that nice fade in, we have a sidebar, which
413:05 - we styled and created borders for. And we
also have a nice image grid. So you can see
413:06 - there that is responsive. So if I go and actually
resize the window, you can see there that
413:07 - it is responsive, we have a little bit of
image changing there. And it is just overall
413:08 - a responsive website. So this is how it looks.
And there you go, you can see we've changed
413:09 - the backgrounds, we've imported our own custom
fonts. And we use Flexbox and grid to set
413:10 - up this website along with animations, you
can see a nice transition in color there.
413:11 - So we're going to be doing all of this in
the solution video. Again, you don't have
413:12 - to watch it, you can either copy what it looks
like on this page. Or instead, you can just
413:13 - go and do whatever you want. Pretty much just
take the content I give you and style it however
413:14 - way. And I would encourage you to either go
on the video lab website, or the q&a section
413:15 - of this course and post what you've got, you
know, show off your skills and show off what
413:16 - you can create out of this website, it's really
encouraged to you know, share it with the
413:17 - community, and everyone can learn from each
other and the skills. So don't feel limited
413:18 - by anything you've learned in this course,
if you want to do something very specific
413:19 - that you haven't learned or you forgot how
to do just for you feel free to use Google,
413:20 - this isn't a test, it's more of a fun activity
to see how far you've gotten in CSS. So that's
413:21 - just one thing to keep in mind. Alright, I
will see you in the solution video. So in
413:22 - this video, we're going to get started and
start finishing up this website, we're going
413:23 - to, you know, do all of the skills and use
everything we've learned over the course to
413:24 - get this all set up and running. Alright,
let's get started. So the first thing I want
413:25 - to do is just flip the page over here with
my HTML. And then we're going to get started
413:26 - straight away. So before we start anything,
I think we need to link a CSS stylesheet,
413:27 - I'm actually just going to go ahead and close
off our previous site. Because what's happening
413:28 - here is we have our actual site set up. But
we need to start working on our CSS through
413:29 - an external stylesheet as we've been doing
for the last well for most of this course.
413:30 - So we're going to get started with that. We're
going to use Ctrl or Command n to create a
413:31 - new file. And then I'm going to save it in
my CSS folder here. And I'm going to call
413:32 - it style dot CSS. All right, there we go.
So the next thing I want to do is start laying
413:33 - out what we need for the website. And what
I like to do before I start is just kind of
413:34 - get myself in the right mind frame by setting
out the kind of phones I want to use, the
413:35 - different colors, everything like that. So
what I'm going to do is just create a comment
413:36 - Up here using this notation. I've used it
a couple times throughout the course. And
413:37 - what we're going to do is in here, we're going
to type out all of the stuff we need. So I'm
413:38 - going to say primary font. Whoops. So we have
our primary font, here, we have our secondary
413:39 - font.
413:40 - And now we have our different colors. So what
I like to do for my colors is have my RGB
413:41 - code, do whatever here, and then you have
the name of the color. So this would be for
413:42 - example, black, pretty much. So we're going
to do that in just a second. But first of
413:43 - all, let's just go and find the fonts that
we want to use. We're not going to import
413:44 - them yet. But we just want to look and see
what kind of fonts we need. So what I'm going
413:45 - to do is just choose two here, pretty randomly,
again, usually most websites will use at maximum
413:46 - three fonts, but you should use or maybe two
fonts, one for headers, and one for normal
413:47 - text. So I'm going to go ahead and use later,
we used it previously to pretty nice font.
413:48 - And we're also going to go ahead and for our
headers, we're going to use Roboto condensed,
413:49 - so we have normal Roboto here, but we're going
to use the condensed version. So for the primary
413:50 - font, it's going to be later. And for our
secondary, which is for pretty much headers
413:51 - and subtitles, things like that, it's going
to be Roboto condensed. Alright, there we
413:52 - go. Let's go ahead and check out the website.
And the color scheme is blue, and orange.
413:53 - So if you made your website using a different
color scheme, don't worry about it, it doesn't
413:54 - really matter. But what we're going to do
is go ahead and try and find some blues and
413:55 - oranges. So I'm going to find for each color,
a main color, so pretty dark, bold color,
413:56 - and then one that's a little bit lighter and
easier on the eyes. So let's start off with
413:57 - blue here, I'm going to go with quite a dark
kind of blue something around here. And I'm
413:58 - going to copy that in. And I'm going to say
dark blue, although it's not really dark,
413:59 - dark blue. But I'm going to say that and paste
in the code. Now let's go with a lighter blue.
414:00 - Now we can always use RGBA color codes. But
again, doing this allows us more freedom in
414:01 - the long run when we start working with everything.
So let's go ahead and just copy that. And
414:02 - this is going to be our light blue. Now let's
move on to orange. So again, these are very
414:03 - opposing colors. That's why I chose them.
So we're going to go again with quite a striking,
414:04 - you know, very bold orange. So something like
this would be good. So I'm just going to say
414:05 - the bold orange. And again, it doesn't really
matter what you give these, your names, as
414:06 - long as you kind of understand them, you can
name them whatever you want. And then we're
414:07 - going to go with a lighter orange. So something
around here. Now what I like to do, if you're
414:08 - trying to create a lighter color, is just
look for something on the this side of the
414:09 - spectrum closer towards the higher values
of the RGB. So if it's low, it's most likely
414:10 - going to be dark, you can see that in effect
here. So I'm going to go ahead and say in
414:11 - light orange, is just like that. Alright,
so we've set up our color schemes now. So
414:12 - we have everything written down and ready
to go. But next thing we need to do is actually
414:13 - link the stylesheet because we haven't linked
it yet. So what I'm going to do in my head
414:14 - here is create a link tag, hit tab. And now
we're going to reference it just like before,
414:15 - we need to go back one directory, we use dot
dot. Now we're up here in our challenge directory.
414:16 - So previously, we were here. Now we'll jump
back up to challenge. Now we need to jump
414:17 - back forward one into the CSS directory. And
then from there, we need to reference the
414:18 - file, which is style dot CSS.
414:19 - Just like that, refresh the page. And of course,
nothing's gonna visibly change because we
414:20 - haven't written anything down yet. But that's
a pretty good first task. So again, none of
414:21 - these have to be in order, as I said in the
last video, so we're just going to go ahead
414:22 - and fix up these images because they are quite
big. So that's what I'm going to do. First,
414:23 - I'm going to go ahead and reference all the
images for now. Now we can go and change the
414:24 - classes and do specificity later. But for
now, I'm just going to specify them and group
414:25 - them all at once. So I'm going to set their
width to 400 pixels, and their height 200
414:26 - pixels. Now, obviously, I've kind of created
a, a, I really don't like absolute values.
414:27 - But for something like this, it isn't, it's
kind of necessary. And we can work with the
414:28 - relative newness or the responsiveness of
these images later. So let's go ahead and
414:29 - refresh see how it looks. So now we know for
sure that our images are working fine. And
414:30 - of course, you can see how the absolute values
are kind of stretching this out. They're not
414:31 - kept in proportion. But for now we don't need
to worry about that. So there we go. We've
414:32 - resized our images, and now we can see everything
a lot more clearly. So we have our images
414:33 - set up. The next thing I want to do is actually
set up our page. To have two sections, we
414:34 - want to have our content section. And we want
to have our sidebar. So we have our sidebar
414:35 - section, I'm actually going to create a divider
there, our sidebar section and our main section.
414:36 - So that's what we're going to do. So I'm sorry,
our content section. So we have a main div
414:37 - here, which clot groups everything together.
So in my eyes, the best way to do this would
414:38 - be using a grid. So what I'm going to do is
select the class main. Although now that I'm
414:39 - looking at it, we could probably just use
an ID instead. So I'm going to go ahead and
414:40 - change the ID to main, remember, there's only
one main on the whole page. So it's not like
414:41 - we need to use a class. And from here, we'll
get started. So the first thing I want to
414:42 - do is set the display type to grid. Right.
So this is going to obviously set up a grid.
414:43 - Now, we won't be able to see anything here
pretty obviously. But now we're going to start
414:44 - working with it. So pretty much what I have
vision for the change is we have our content
414:45 - section, which is taking up the majority of
the page, and then we have our posts section.
414:46 - So our post section is going to be much smaller,
it's going to be while a sidebar, that's kind
414:47 - of the definition of it. And it's going to
take up a small portion on this side of the
414:48 - page. So that's what I'm going to do here,
I'm going to create two columns. So one of
414:49 - the grid template columns, just like that,
and I'm going to set them to 70% and 30%.
414:50 - Now, instead of using auto auto, which would
just change them to the exact same height,
414:51 - we're now giving the first column a preference.
So it's going to be a little bit bigger than
414:52 - the second one, we refresh. And it's working
great. Now, what I recommend that you do while
414:53 - you're doing this is always try and go and
see how your page looks in different viewpoints.
414:54 - So if you go ahead and you click on Inspect
anywhere on your page, you can actually go
414:55 - and use your Chrome responsiveness kind of
thing here to check out how your page would
414:56 - look on different devices. So I would recommend
using this over resizing the browser, because
414:57 - resizing, the browser actually shows some
inaccuracy. So you can really see how it would
414:58 - look like on your phone, or you know, maybe
an iPad or a tablet or something like that
414:59 - without having to actually go on those tablets.
So there we go. Now what I'm going to do is
415:00 - go ahead and manipulate this a little bit.
So I'm going to go ahead and create a grid
415:01 - gap. to separate the two, I'm going to say
it's about 50 pixels. There we go. And, yeah,
415:02 - let's you can see now that that gap has been
created. And if we go ahead and inspect the
415:03 - page, you can see let me go to a phone, actually,
you can see that there's a gap there a clear
415:04 - gap. And at least for now, it's not very evident.
But once we start, you know, creating borders
415:05 - and things like that, we can really see this
in a much better way. So there we go. That's
415:06 - great and working fine. So now that we've
set up the set that up, I want to do something
415:07 - that we actually should have done at the beginning,
which is add classes here because you can
415:08 - see that although I've added the main classes
myself, we still want to be able to, you know,
415:09 - group subtitles together or paragraph text,
so that once we start doing all of the important
415:10 - stuff, like importing images, and all sorts
of things like that, we want to be able to
415:11 - group all of them or style all of them together
at the same time. So that's what I'm going
415:12 - to do here. First thing I want to do is add
a class of subtitle to all of the subtitles,
415:13 - just pretty obvious. Now again, some of them
are h1, some of them are h tos and all sorts
415:14 - of things like that. So I'm going to go class
415:15 - is subtitle. And here as well, class is subtitle.
Now, we kind of want all of the subtitles
415:16 - to be relatively the same size. But you can
see here that there's actually a mini topic
415:17 - which we want to be smaller. So what I'm going
to do is change the class and change this
415:18 - actually to topic,
415:19 - subtitle.
415:20 - So now we can specify this in a more specific
way. So instead of having to use the subtitle
415:21 - class, we can actually go and talk about this
in a different way. So there we go. Now let's
415:22 - go ahead and start looking at some of the
other parts of the site. Oh, we actually still
415:23 - have more, you can see we have a lot of stuff
here. So what I'm going to do is actually
415:24 - add classes to each of these posts, because
they are going to be a little bit different
415:25 - considering the grid situation that we have
here. So I have six posts. So I'm going to
415:26 - set their class to post title,
415:27 - like that.
415:28 - And what I want to do is also set some of
the other stuff. So here, for example, our
415:29 - paragraphs, or kind of our descriptions and
our posts, I want to also create a class for
415:30 - those. So I'm going to say class, I'm going
to say post text, or post description, it
415:31 - doesn't really matter, whichever one you are
comfortable with. And we're going to leave
415:32 - these blank for now. And actually also go
ahead and add a class to these dips. Because
415:33 - remember, the more we can specify The better
our page is going to look. Now obviously,
415:34 - we're just doing baseline kind of stuff here.
If we ever need to specify something in the
415:35 - future, you just go and add a class, a class
to that. So there we go, we have everything
415:36 - set up. Now we've added our classes. So the
next thing I want to do is go ahead and import
415:37 - my different fonts. So firstly, let's go ahead
and check out our little documentation mini
415:38 - documentation there. And we're going to start
selecting some of these fonts. So first thing
415:39 - I want to do is download or import in Leto.
So I'm going to go and select Leto. And here,
415:40 - I'm going to go ahead and just copy that link.
Or actually, before that, let's go ahead and
415:41 - add some more families so that we can import
it all at the same time. So we have our Roboto
415:42 - condensed, there we go. add that. Now what
we're going to do is go ahead and whoops,
415:43 - didn't mean to do that. Now, we're going to
go ahead and select some other fonts here
415:44 - or sorry, weights here. So I'm going to select
bold 704. Later, I'm going to also select
415:45 - bold 700. And we're also going to go with
a light. So the load time is moderate, it's
415:46 - not going to, you know be very easy on the
site. But it is worth it. Because these are
415:47 - all the fonts that we need. And without them,
the site would look completely different.
415:48 - So let's go ahead and import those. I'm going
to go into my index and insert the link right
415:49 - below here. So I'm going to do that oh, because
actually, we need to put the stylesheet below
415:50 - the below the fonts, remember, because we
need the fonts to load in first. So there
415:51 - we go, we have that important. Now what we're
going to do is just go ahead and copy these
415:52 - onto our onto here, just for reference. Now
we are going to, you know, put these and specify
415:53 - these different selectors, obviously, but
for now, I just want to leave them in there.
415:54 - So it just in case we forget some of these
fallbacks or anything like that, we're just
415:55 - going to keep that there. For reference, I'm
going to actually put that in our little notepad
415:56 - there. So now let's go ahead and refresh the
page. And obviously, we won't see much of
415:57 - a change since we just add added classes.
But there we go, we have our kind of hierarchy
415:58 - set up to start working with our website.
So let's go ahead and start using these fonts.
415:59 - Now, what I'm going to do first is select
everything that has a class of
416:00 - subtitle, right here.
416:01 - And what I'm going to do is paste in this
font family, or actually, before we do that,
416:02 - why don't we use the CSS specificity chart,
we're going to start by selecting everything
416:03 - that has the class of key, so all paragraphs,
so I'm going to do the lips, I'm going to
416:04 - select all classes, all paragraph elements.
And I'm going to give them that later font
416:05 - family. So what this is going to do is style
everything. And if we don't like that, what
416:06 - we can do instead is just go and change the
font family. So that for example, if maybe
416:07 - we want to have a different font, maybe it's
a subtitle or some special text, we can just
416:08 - easily specify it without having to go through
and you know, specify each one every single
416:09 - time. So it's a much easier way. So now that
we are starting to do this, we can actually
416:10 - start to see flaws here. So for example, we
also want the list items to be styled. So
416:11 - I'm going to do select all allies,
416:12 - allies.
416:13 - And now I'm going to paste in that same font
family, and refresh. And you can see that
416:14 - that is now working we have everything set
up here. And you can see there's also a little
416:15 - bit of text here. So you can kind of start
to notice bugs in you know, maybe HTML that
416:16 - you've written or anything like that, you
can easily start to notice bugs in it, once
416:17 - you start styling it. So this is most likely
an indentation error. Maybe this text ended
416:18 - up outside the paragraph tag, so I'm going
to look for it. It is next to our l eyes.
416:19 - And you can see it is right there. So what
I'm going to do is just erase that we started
416:20 - out, we start up our p tag. And I'm going
to create a new one under it just to make
416:21 - things a little cleaner. Now I refresh and
that is working. This is most likely an error
416:22 - with indentation, things like
416:23 - that.
416:24 - So now we have our paragraph text, everything
like that set up. What I'm going to do is
416:25 - now work on our headers. So I'm going to start
off with our h ones. And I'm going to give
416:26 - it that header font family. So I'm going to
Ctrl x which is cut or Command x if you're
416:27 - on Mac. And I'm going to paste that in refresh.
And you can see that that is worked on our
416:28 - heading here. Now we're going to do it on
all of our h twos, which remember if you've
416:29 - kind of looked at the code, our our subtitles,
do that and now those have also been styled.
416:30 - So just by doing that our page has been completely
transformed. We've you know, imported this
416:31 - custom font and laid out our site in a way
that just makes it look a lot better. So that
416:32 - is working fine. So There we go, we have this
set up, and it is working fine. Now what I
416:33 - want to do is go ahead and start working on
some of other layout features on this page.
416:34 - Once we get into that, we can start tackling
coloring and formatting and all the other
416:35 - things after we've used the fonts. So let's
get started. What I want to do first is working
416:36 - on our little image grid here. So we don't
actually have a proper grid setup, which is
416:37 - what I'm looking to fix in this in this part
of the video. So I'm going to go ahead and
416:38 - do that. Now. I'm going to first of all, select
it. So we're going to look for that class
416:39 - that we use, which is image grid. So we're
going to go into here and select that using
416:40 - dot image dash grid. And there are many different
ways to create a grid these days, but the
416:41 - way I'm going to use to make it a lot easier
is just use Flexbox. So we've already used
416:42 - grid once Flexbox would be a great way to
solve this. So let's go ahead and refresh
416:43 - the page. And now you can see that we have
created a little Flexbox here. So we have
416:44 - that set up. And obviously you can see that
it is pretty badly laid out right after creating
416:45 - the Flexbox. So we're going to tackle that
problem now. Now, there are actually only
416:46 - two commands that we need to fix this, we
can go and set up our flex grow and shrink
416:47 - to make it just how we like it. But there
is an easy workaround to it, the first thing
416:48 - we want to do is turn wrapping on. So we're
going to say flex wrap, wrap. And this is
416:49 - just going to move everything on to a new
line, which is pretty easy. You can see there
416:50 - that that is working fine now. And when I
resize the page or turn it into full width,
416:51 - you can see that that creates a nice three
by three image grid. But even if we go into
416:52 - our inspector or change the responsiveness,
it also resizes accordingly. The last thing
416:53 - I want to do is change it so that it's not
kind of you know, placed like this, I want
416:54 - to kind of make it in the center of the page.
So what I'm going to do is just use the simple
416:55 - justify content property and set that to center.
Now we refresh, and you can see that this
416:56 - has been realigned to the center of the page.
And remember, we do have a sidebar here, which
416:57 - is kind of, you know, giving us the illusion
that it's not taking up the space, it actually
416:58 - should be. But it is centered. So it's centered
to that 80% of the page, you do need to keep
416:59 - that in mind when you're working with this.
Once you start working with coloring, you'll
417:00 - really start to see the page come together.
So the last thing I want to do is kind of
417:01 - create a gap between some of these images
because they don't look that good when they're
417:02 - just slammed together, you want to create
some kind of contrast between colors. So we're
417:03 - going to use a nice special selector. To do
this, we're going to select every single image
417:04 - inside of the grid instead of having to place
new classes on them. So what I'm going to
417:05 - do is go ahead and select dot image grid,
and then this symbol, which is the greater
417:06 - than symbol, and then image. So this is every
image inside of our image grid, open that
417:07 - up. And we're just going to give it a margin
of 10 pixels very easy, we don't need to work
417:08 - with anything else, refresh the page, and
that margin has been added. So you can see
417:09 - how that looks a lot better now that we've
done it. And it's still responsive when we
417:10 - you know, change the display, maybe to iPad
or anything like that you can see it is still
417:11 - responsive, it's not changing it at, it's
not changing it at all. So that's really good.
417:12 - So there we go, I'm going to set that up.
So now that we have our image grid set up,
417:13 - the last thing I want to work with is this
right here. So it says in our objective list,
417:14 - we want to move this image onto the side.
So there you could use Flexbox, or grid, this
417:15 - is a pretty simple scenario. So what I'm going
to do, instead of doing that is just use a
417:16 - simple float. So I'm going to give this an
ID since we only need to do this as a one
417:17 - time thing. So I'm going to go ahead and look
for that image, give it an ID of image, one,
417:18 - because it is the first image on the page.
You can name this anything you want, depending
417:19 - on the purpose of the
417:20 - element. But I'm going to give it that class
there. So I'm going to set it as image one,
417:21 - just like this. So what I'm going to do is
go ahead and give that a float of right, just
417:22 - like that. And whoops, forgot the id selector
there, we refresh the page. And now that is
417:23 - working fine. Now obviously, you can see there
is a little bit of an issue with the spacing.
417:24 - So we're going to use a quick fix for this
and give it a margin of about 15 pixels. So
417:25 - this is going to kind of push everything to
the side. And obviously you can see there
417:26 - are still issues with positioning and everything.
But that's kind of the you know, issue with
417:27 - using floats and things like that you can't
really control where the spacing is going
417:28 - to go. So what I'm going to do to fix this
is just increase the height a little bit.
417:29 - So instead of setting a height of 200 pixels,
I'm going to go ahead and set it to maybe
417:30 - 250. Now we're going to refresh and it's almost
there. We're going to actually use 300 pixels.
417:31 - Now, of course, in a normal scenario, you
wouldn't have to use this, you know, maybe
417:32 - you would want to use a grid or Flexbox, like
I specified here. But like I said, you can
417:33 - pretty much use whatever creative methods
you deem necessary. And this is much easier
417:34 - because again, there are only three items
and using something like a grid, or a Flexbox
417:35 - wouldn't really be practical in this situation.
So there we go, we have this, this and this
417:36 - laid out just perfectly. Now we're gonna go
ahead and tackle some of the other parts of
417:37 - this site. So we have our little image grid
here, we have things like this, let's go ahead
417:38 - and check out our item list here. So we do
have animations, which we're going to leave
417:39 - for last, we have our image grid. And there
we go. So our next task is going to be creating
417:40 - those borders. So we did create our post here.
So remember, we have our post class. So let's
417:41 - go ahead and select that. I'm going to go
ahead and say dot post. So first thing I'm
417:42 - going to do is go ahead and set a border.
So this is going to be our first use of the
417:43 - color scheme that we created. So I'm going
to say to pixels, because monnit, that big,
417:44 - solid.
417:45 - And now we're going to go ahead and copy a
color from up here. So I'm going to go ahead
417:46 - and use a dark blue. Just like that, copy
it in just like an RGB color code.
417:47 - We've done it many times before, refresh,
and we have our borders. Now, obviously, there
417:48 - are some issues with margining. So what I'm
going to do is give each of those a margin
417:49 - of about 10 pixels, just like our images,
refresh the page, and it's working. So there
417:50 - we go, we have our posts, and they are separated.
Now, pretty much we do have some internal
417:51 - padding issues, which is normal, we'll go
ahead and style those in just a second. But
417:52 - first of all, if you can start to see our
sidebar working here, we have that little
417:53 - grid gap. And we have our the start of our
second column there. So it's working great.
417:54 - Let's go ahead and start working with our
margins here. So first thing I'm going to
417:55 - select is our post title. So I'm going to
go ahead and say post title. Now you can do
417:56 - this in two ways. Since there's only one h2
and every post, you could go and say it like
417:57 - this. Or you can use this class that we created.
So we're going to actually just go ahead and
417:58 - use that. So what I'm going to say is give
it a margin on the left of maybe five pixels.
417:59 - And now what that's going to do is push that
inside. And we're going to have to do the
418:00 - same for our paragraph text. So I'm going
to go ahead and add our post text class here,
418:01 - I must have forgotten it. So we're going to
go on dot post text and give that the same
418:02 - margin. There we go. And now we have everything
pushed in. So there are still margining issues
418:03 - there. You can see that with some of these
here. So I'm actually going to go ahead and
418:04 - also give our text a right margin. And again,
this is all about experimentation. So go ahead,
418:05 - and you know, play around with this and see
what really works for you. And you can see
418:06 - that now that's really fixed that up. And
we have our posts sorted. So there we go,
418:07 - we have everything working. Now let's go ahead
and try and work with more of our color scheme.
418:08 - Because right now, it's pretty blank here.
So what I'm going to do is go ahead and just,
418:09 - you know, use this color scheme in a better
way. So firstly, I'm going to give the page
418:10 - a background. So what I'm going to do is give
the whole page so I'm going to use the body
418:11 - selector. I'm actually going to do that at
the top. So I'm going to use the body selector
418:12 - body. And I'm going to give it a color, or
sorry, background, a background and I'm going
418:13 - to give it our light blue color, just like
that. Oh, let's copy the name as well, you
418:14 - just want to copy the color code, remember.
And there we go. Our whole page now has a
418:15 - light blue color. Now, I'm actually going
to go ahead and use an RGBA because this isn't
418:16 - light enough. So that's what I meant about
flexibility at the beginning of the video,
418:17 - you can go ahead and change the colors based
on your main four here. So I'm going to give
418:18 - this about point five, just make it a little
bit lighter on the eyes. You can see that
418:19 - looks a lot better now. So now that we've
done that, I'm actually considering changing
418:20 - the border color here. So what I'm going to
do is go ahead and find it. And instead of
418:21 - using our blue, I'm going to use a bold orange
so it's going to be quite striking on the
418:22 - eyes there. So I'm going to go ahead and do
that. And there we go. We have our dark orange
418:23 - there. Now what I'm going to do is specify
this and select our sidebar class. So I'm
418:24 - going to go ahead and do that right below
all of these. So I'm going to go dot sidebar.
418:25 - And I'm going to give it a background of a
light orange. So it's going to create a nice,
418:26 - a nice contrast, in effect tabin. And again,
I copied the name. So I'm going to go ahead
418:27 - and give it that background that we need,
which is our light orange. Now I refresh the
418:28 - page. And oh, something must Oh is selected
subtitle went on to the wrong one. So I'm
418:29 - going to paste that in here. And there we
go. Now refresh the page, and we have that
418:30 - orange background color there. So we could
you know, do some color changes and mess around
418:31 - with these. But for now, I think this is fine.
We don't really need to change these in any
418:32 - way. For now. So we have our orange background,
we've kind of incorporated this color scheme
418:33 - very well. So we're going to do a little checkup
of our sections here. So we've laid out our
418:34 - content, we've created our margins, or spacing,
things like that, we pretty much have everything
418:35 - set up here, except for our links and our
hovers and our transitions.
418:36 - So this is going to be the final part of the
video, we're going to go we're going to set
418:37 - up our, you know, maybe our changes our resizes,
things like that, and then we're going to
418:38 - finish off the solution, it is getting quite
long. And I want to keep this short. So let's
418:39 - get started. So first thing I'm going to do
is work with our links. Now, we haven't actually
418:40 - added anything to the links. So that's what
I'm going to do first of all, now I kind of
418:41 - left it up to you what you want to add to
the links, but what I'm going to do is just
418:42 - go and check out each of these. So I'm going
to go click on all of them. And I'm just going
418:43 - Oh, whoops, I went into the href. And here,
I'm just going to add lorem ipsum and some
418:44 - dummy text, like that. So now we're going
to use because I don't really feel like going
418:45 - and adding a whole bunch of classes and selectors,
I'm going to use our special advanced selector
418:46 - there. So inside of our sidebar here, we're
actually inside of our post, sorry, we're
418:47 - going to go post and then our a or our anchor
tag. Now we're going to go ahead and work
418:48 - with these. So I'm going to refresh the page,
make sure they're there. So first thing we
418:49 - need to do is give it that left right margin
that we need, remember, because to space it
418:50 - out a little bit, then what I'm going to do
is say text decoration none. So pretty much
418:51 - what this is going to do. Oh whoops, didn't
need to add that text, what I'm going to do
418:52 - is give it a text decoration property of none.
So pretty much what this is going to do is
418:53 - change this. So that pretty much instead of
having this underline, it's just going to
418:54 - be blank text. So this looks a lot cleaner,
especially when we go ahead and add our um,
418:55 - our fonts, so I'm going to do that next. So
remember, we have it added to our paragraphs
418:56 - or allies. And I think it only makes sense
if we added to our anchor tags, as well. So
418:57 - I'm going to go ahead and add that whoops.
So I'm going to add that there. And now we
418:58 - have that font, so it's looking great again.
So now let's go ahead and start adding some
418:59 - pseudo selectors. So we have our basic colors.
Now all of these are already clicked. But
419:00 - pretty much we have our post color. So I'm
going to say the post color is going to be
419:01 - our that dark blue that we had. So this is
before it's clicked remember. So dark blue.
419:02 - Copy that in and set this as the main color.
And now we're going to combine our special
419:03 - selectors with a pseudo selector. Now, we
haven't actually seen this before, but it's
419:04 - pretty easy to do, you just add it onto the
element. And the only thing that we're going
419:05 - to change remember is going to be the color
of the text there. So I'm going to go and
419:06 - find our light blue. And I'm going to paste
that in. So now when we hover over it, it
419:07 - should change the color to a light blue. That's
working great. Now let's add our transition.
419:08 - So I'm going to use the transition property.
Now I'm not going to use any of the prefixes.
419:09 - But if you're using an older browser, you
want to support it or you want browser support,
419:10 - you should always use this. So now I'm going
to specify specify what I want in the transition.
419:11 - So I'm only going to use the basic properties.
So I'm going to say maybe point five seconds,
419:12 - hover out sorry, point five seconds color.
And yeah, that's pretty much it. So let's
419:13 - go ahead and fresh. Now we hover over it and
it takes 0.5 seconds to change color. Now
419:14 - we could of course go and you know add our
special styles for our transition. But I'm
419:15 - only going to use the two basic ones here,
which is the time and the property. So we've
419:16 - changed that. Now we have our link color change.
The last thing we need, or the last two things
419:17 - is the image grow. And the page animation
sequence, which is going to be our sidebar,
419:18 - and our, our main section here kind of fading
in if if it makes sense. So that's what we're
419:19 - going to do here. First thing I'm going to
do is go and set the image grow. So what I'm
419:20 - going to do is go somewhere, where's my image,
I'm selecting my images. If there's none here,
419:21 - I can just go and change that. Now, what I'm
going to do is first create our image hover,
419:22 - just like that. And I Oh, yeah, I forgot I
put that up at the top here. So I'm going
419:23 - to create my image hover. And here, I'm going
to put in what I need. So I want to, you know,
419:24 - increase the height. So I'm going to say,
the height is going to be 250 pixels. And
419:25 - the width is going to be 500 pixels, because
we want that two to one aspect ratio. So now
419:26 - we refresh hover over an image becomes bigger,
we hover over an image becomes bigger. So
419:27 - now what we want to do is add that transition
property. So we're going to go again, point
419:28 - five seconds,
419:29 - and we're going to add two properties. So
we're going to go height and width separated
419:30 - by a comma, refresh. And of course, it seems
to be a little problem there. Whoops, I forgot
419:31 - to
419:32 - add that
419:33 - misspelling here. Now we do that and it changed
it. Now you can see that there is a little
419:34 - bit of a weird kind of transition effect there.
So it increases the width fully, and then
419:35 - it increases the height. So what I'm going
to do to fix that is just use the all property.
419:36 - So what this is going to do is transition
the height and the width together. When I
419:37 - refresh, you can see that that styles or moves
everything together, because pretty much what's
419:38 - happening is it's overriding our our width
property, it's just setting it instantly,
419:39 - and then it's changing the height, which we
don't want. So I'm going to set that there,
419:40 - you can see that's working great. So what
we're going to do now is go ahead and create
419:41 - that fade in effect that we needed for our
content and sidebar. So first thing I want
419:42 - to do is go ahead and select both of them.
So I'm going to select our content. And I'm
419:43 - going to select our sidebar. And now what
I'm going to do is start creating our animation.
419:44 - So the first thing we need to do is create
keyframes. So I'm going to go add keyframes,
419:45 - and then the name of our animation, let's
just call it fade in for now. So the next
419:46 - thing I need to do is select my, the different
time stamps I want. So I'm going to use the
419:47 - from and two keywords to do this from and
to. Now we're going to use a property that
419:48 - we haven't actually learned before. And hopefully
you Google this and try to find it when doing
419:49 - the challenge. And it's actually called opacity.
So this allows us to go from opacity of zero,
419:50 - no percents, no pixels, just straight number
to opacity one, just like our RGB a color
419:51 - code, now we're going to do is just refresh
the page, obviously, we're not going to see
419:52 - anything, just make sure that everything is
still running the same. So I'm going to go
419:53 - ahead and now add our animations to both of
these sections or both of these block here.
419:54 - Sorry, blocks. So I'm going to go ahead and
say the animation name is going to be fade
419:55 - in. We're also going to set the duration.
Remember, we always need a duration to two
419:56 - seconds, refresh the page. Hopefully this
works. And you can see that it now fades in.
419:57 - So there we go, we have our page set up and
working, we refresh here, we can hover over
419:58 - images and make them look better. And it just
looks really cool over also, you know, we
419:59 - pretty much set up this page from scratch.
And now we have it all working, we have our
420:00 - fonts, and everything seems to be looking
great. Alright, let's move on. So you've reached
420:01 - the end of the course now. So before we move
on, I want to congratulate you it very few
420:02 - people who ended up starting the course make
it to the end. And it does take a lot of discipline
420:03 - to learn everything and stick to it throughout
the course. So I just like to say well done.
420:04 - And it's great that you're here with me. But
now that you've learned CSS what what is there
420:05 - to do next? I mean, should I just stop and
use my skills? Or are there other things that
420:06 - I need to learn. So I'm going to give you
this helpful guide to maybe get you off your
420:07 - feet and start learning new skills progressing
your careers. So I'm going to talk about it.
420:08 - Now before we move on. Let's just take a second
and recap what position we're in right now.
420:09 - So by now you should have pretty good proficiency
in both html5 and CSS three, which are just
420:10 - the latest versions of the two. So you should
know all of the concepts and inner workings
420:11 - behind CSS and how it works so you can really
see how a page is fit together using everything
420:12 - so box models Flexbox responsive this things
like that. By now, you should have the skills
420:13 - to style your website in pretty much any way
that you want. If you want to make it, you
420:14 - know, a very rustic or vintage feel. Or if
you want to lay it out in a nice modern design,
420:15 - you should be able to layout your website
with as much creative freedom as you want.
420:16 - But here are some skills that you should learn,
learn next. So there are three main front
420:17 - end technologies that are called the Big Three.
So you've already covered two of them, which
420:18 - are HTML and CSS. The third one, and arguably
the most important is JavaScript. Now, JavaScript
420:19 - is the programming language, it's kind of
what makes a website come to life, it gives
420:20 - it that interactive feel. And you can also
change things in a much easier way. And without
420:21 - JavaScript, you can't really grab the essence
of web development as a whole, you need it
420:22 - to be able to bring your website together
and really take it to the next level. So that's
420:23 - one skill that you should definitely learn
next, if you're planning on continuing. Now,
420:24 - once you've learned JavaScript,
420:25 - then you have to go on and choose what kind
of career path you want to go down. If you're
420:26 - planning to go down a front end route, so
you're only developing things that you know,
420:27 - you're only changing the look and feel of
the website, on the main mainframe, then you
420:28 - should start learning some more advanced skills
on either of the big three. So I've let I've
420:29 - left some examples there. So there are lots
of libraries, frameworks, that things people
420:30 - have created. So you can go and research some
of these. Some of them I would recommend for
420:31 - CSS, or some of the pre processors, which
are sass and less. So I would recommend you
420:32 - go and check those out. You can also look
at some JavaScript frameworks. So things like
420:33 - react ESX, and also some other libraries.
So bootstrap, Font Awesome, and semantic UI.
420:34 - So again, don't take all of those, as you
know, you're trying to wrack your brain and
420:35 - keep all those in your memory. Just go and
do some research on what where you want to
420:36 - go and what kind of skills you should learn
next, those who are looking to go into server
420:37 - architecture. So more back end development,
people who are looking to fix up the processing
420:38 - website, saving users or, you know, delivering
specified content should look into some back
420:39 - end architecture and programming languages.
So for example, Django would be one for web
420:40 - development or server development for the
web. And it is made or powered by Python,
420:41 - you also have PHP and a JavaScript, which
is JavaScript web server, which is called
420:42 - node j, s. And then you have some others like
Ruby and dotnet. So there are so many out
420:43 - there, you can always go and research and
you'll find tons of options. So there you
420:44 - go. So that's pretty much it. We've covered
everything on CSS, we've talked about grids,
420:45 - Flexbox. And pretty much everything there
is to know about the basic concepts behind
420:46 - CSS, when you can start specializing and going
into very specific details. And obviously,
420:47 - it's ever expansive, you're never going to
have to stop learning. So by the time you're
420:48 - watching this, there could be an entirely
new version of CSS out with a ton of new features.
420:49 - So never stop learning and always keep, you
know, taking up new skills and trying to learn
420:50 - more about the skills that you already have.
So that's one thing I would recommend to keep
420:51 - in mind and just continue down this path and
you will eventually end up as a web developer
420:52 - that can really create things to his or her
creative freedom. Alright, thanks for taking
420:53 - the course.