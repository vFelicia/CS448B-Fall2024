00:08 - hey everybody and welcome to live
00:11 - streaming with Jesse a live coding with
00:13 - Jesse and today we're gonna do something
00:17 - different I thought we'd do some react
00:21 - native so I have a react native project
00:24 - that I'm nearly finished with and I
00:29 - don't know that it's gonna work out how
00:33 - I wanted it to so I anticipated doing
00:36 - some work with Redux and react native
00:38 - but here's my problem I don't know if
00:43 - you can see this we make it a bit bigger
00:46 - I was trying to update my packages and
00:54 - it's it's just hanging I can't I tried
00:57 - restarting my computer and doing it
01:00 - again so I'm not sure if this is gonna
01:04 - work like that but what we can do is we
01:09 - can do some other work so right now I'm
01:11 - running two different branches
01:12 - I'm running a the master branch which
01:16 - has all the same functionality but it
01:18 - doesn't use Redux and then I have a
01:20 - Redux branch so what we should be able
01:23 - to do if if this won't work is just
01:27 - switch back to the master branch and
01:28 - then work off of that branch and and
01:32 - everything should still work fine so
01:38 - just to introduce you to what we're
01:42 - working on this is a flashcard app this
01:45 - is the final project for the react nano
01:48 - degree from Udacity so this is how I'm
01:53 - implementing that project I'm sure
01:56 - there's a lot of different ways that it
01:57 - could be done basically what it does is
02:02 - it lets you create decks of flashcards
02:06 - and then you can quiz yourself on them
02:11 - so run it through quickly
02:14 - so these are the decks I can click on
02:16 - one of these decks and we can start the
02:19 - quiz and I could answer obviously you
02:25 - see the u.s. they'll need some work so I
02:29 - click the first one to be correct the
02:32 - second one will do in correct us to show
02:33 - how the grading works basically you make
02:35 - the the question and the answer and you
02:40 - can toggle back and forth between the
02:42 - question and the answer and then once
02:44 - you're done it gives you the score in
02:46 - this case we got a 50% and then you can
02:49 - also add cards so this I don't think
02:53 - will work right now but let's just try
02:57 - to add one yeah see it's not going to
02:58 - work because this branch is trying to
03:03 - use redux to do this but all the redux
03:06 - packages are not installed so let's
03:08 - dismiss that go back and you're also
03:12 - able to add a new deck this is not gonna
03:15 - work most likely as well let's submit
03:18 - that oh you know what I don't think I
03:20 - hope that went up to redux yet so that
03:24 - didn't throw an error yet but that's how
03:27 - it's supposed to work all right yeah
03:30 - this still is not working so let's just
03:33 - cancel that for now and switch over to
03:37 - our other branch
03:48 - okay I do want to probably have to
03:52 - restart this
03:59 - there we go okay let's run yarn quickly
04:05 - in this branch I'd like to at least test
04:08 - to see if it was something I was trying
04:13 - to do on the branch or if it's something
04:15 - wrong with this computer we'll let that
04:23 - go for a minute just to see see what's
04:26 - going on but let's check out a little
04:30 - bit of the code they make this a bit
04:34 - bigger
04:38 - and let me say hey to everyone in the
04:43 - live chat before we start to put it it's
04:52 - uh Nance and says you broke it yes I
04:54 - somehow I broke the Arne I don't I don't
04:58 - know what I did
04:59 - alright see that's not that's still not
05:01 - working so let's just quit that and
05:07 - let's refresh
05:15 - hmm maybe I'll restart the server this
05:25 - actually the first time I've tried to
05:26 - run this on this computer I've been
05:29 - developing this on my my laptop so it's
05:36 - probably why I'm having problems I
05:37 - didn't it didn't allow enough time
05:39 - before the stream to test everything out
05:41 - but here's some of the code that we're
05:44 - working with and I guess since we
05:48 - haven't ever worked with react native on
05:51 - this stream I'll do a little intro it's
05:54 - going to be really familiar if you're if
05:56 - you've been watching what we're doing
05:58 - with react but there are a few
06:00 - differences so I'm just going to run
06:01 - through the differences quickly just to
06:05 - make it a little bit easier to to
06:07 - understand what's going on and why we
06:10 - had to do things a little differently
06:12 - let's see dragon hunter said am I too
06:15 - late no no I haven't said yeah and
06:19 - nobody's too late yet we haven't haven't
06:23 - really started anything let's see
06:42 - yes I am using using Adam okay heart
06:47 - should also asked about your PR Arshad
06:49 - I'm testing that pool request
06:51 - so I've downloaded it to a different
06:54 - branch and I'm testing it I think I
06:56 - ended up using the service that you
07:00 - recommended the M lab setting up a
07:05 - MongoDB database and that was all
07:10 - working I think my problem still is the
07:14 - email thing
07:15 - so the was a email mail trap for some
07:22 - reason it still doesn't work I think you
07:25 - had mentioned something about possibly
07:27 - the port's being blocked by my network
07:29 - I'm thinking that that's the problem
07:31 - because I've had issues before with
07:35 - ports in the past so I know the the
07:40 - ports are kind of on lockdown here so
07:43 - what I'm gonna do and this is why I
07:46 - decided not to livestream that because
07:48 - I'm not going to try to do any work on
07:50 - that project until I'm gonna go home on
07:55 - my home network where I have more
07:57 - control over what ports or blocks I'm
08:00 - gonna test everything out there
08:02 - hopefully it all works out then and then
08:08 - if it works out I'll merge it all just
08:11 - gonna have to come up with some other
08:12 - way to do testing I guess from you know
08:18 - from work from my office so anyway
08:21 - that's why I haven't merged yet and
08:23 - that's why we're not working on it right
08:24 - now so hopefully at least don't know if
08:29 - it still doesn't work at home then maybe
08:31 - it's something else but from everything
08:34 - that I've tried doing with it it's it's
08:37 - probably a port thing so I'll have more
08:41 - info about that tomorrow
08:44 - alright so let me go no no beer it so I
08:51 - forget to shave yeah
08:53 - I have not Harsha is asking change
08:58 - support 25 I changed I tried port 25 I
09:01 - tried port for something whatever the
09:04 - other one you recommended was I tried
09:06 - all this porch nothing worked so yes
09:09 - I'll just I'll try it out at home
09:15 - Trieste if I'm drunk I am NOT drunk now
09:19 - I haven't been any alcohol today
09:23 - actually for a while I don't remember
09:25 - the last time I drank okay let's let me
09:33 - start my timer and
09:43 - okay so we're just going to go over some
09:45 - code first and then maybe we'll try to
09:48 - do some updates
09:50 - maybe with with the UI so sorry about
09:53 - the misleading title really did want to
09:56 - work with with redux but and so I figure
10:01 - out what's going on with yarn we could
10:05 - do work with redux and reasonably expect
10:08 - that it would do what we want it to do
10:09 - but I have no way to test it so let's
10:14 - check this out first of all well we'll
10:18 - start at the beginning here with our app
10:21 - dot J's file obviously you know we make
10:24 - this a bit bigger for you all so the
10:29 - setup for package.json is is actually
10:33 - should look pretty similar to any other
10:36 - react project and then I've added in our
10:38 - standard linting that we've been using
10:41 - on all our projects with with prettier
10:43 - and standard Jass you notice a little
10:47 - bit something's a little different
10:48 - instead of react strips we have react
10:50 - native scripts right so everything is is
10:52 - going to say you know react native
10:56 - instead we're using expo which it brings
11:04 - in expo does a lot of stuff you'll see
11:06 - us bringing in some components and
11:08 - things from expo we're importing it in
11:12 - various parts of our app it also comes
11:15 - with an app that you can download and
11:19 - then allows you to test out the app on
11:23 - your phone and debug and everything you
11:26 - know right there so let's see all right
11:32 - so not a lot going on with the
11:35 - package.json let's check out our app j/s
11:38 - okay so we're bringing in you know react
11:42 - just like normal we have let's go over
11:48 - some of the navigation because now the
11:49 - navigation is probably one of the
11:52 - biggest differences between react and
11:54 - back native that I've dealt with so far
11:56 - so if you notice we're bringing in we're
11:58 - not using react router we're using react
12:01 - navigation we're bringing in a tab
12:03 - navigator and a stack navigator so the
12:09 - the navigation is definitely see where
12:15 - I'm pulling this in okay so here's the
12:19 - the first part I have a tab navigator
12:23 - and now this obviously these are the
12:26 - tabs at the top or if if you're on
12:28 - Android the tabs are at the top if
12:30 - you're on iOS the tabs at the bottom one
12:32 - of the cool things about react native is
12:35 - the there are some standard components
12:38 - that get rendered differently based on
12:41 - whether you're on iOS or Android so
12:44 - it'll use like the native styling
12:47 - options for those which is really cool
12:51 - you don't have to worry about doing that
12:52 - yourself so in this case we added some
13:00 - some tabs we have a list view tab and a
13:03 - deck view tab this is really
13:05 - straightforward right we have our screen
13:08 - right this is the label tab our label
13:10 - this is what the user will see and then
13:13 - we say what component is going to render
13:17 - so you can see all our views over here
13:20 - our react components so we just tell the
13:24 - Navigator what component to display as
13:26 - the view when you click on that
13:28 - particular tab so super easy notice we
13:32 - do import this so it's very similar to
13:34 - react router in those terms but we have
13:40 - we also have some options so you can
13:43 - style your tab bar okay just your basic
13:46 - basic options colors and things like
13:49 - that but then we also have the stack
13:52 - navigator and think of the stack
13:53 - navigator like if you were to click on
13:55 - buttons within the app you wouldn't want
13:59 - the views to change right but you don't
14:01 - want every single view to be
14:03 - on your tabs that you would have to
14:05 - weigh too many tabs so this is where all
14:08 - the rest of them the rest will come into
14:10 - play so we're bringing in the tabs here
14:14 - so we're actually so we've we've named
14:19 - this tab navigator tabs right we saved
14:21 - it to that constant so we're pulling all
14:23 - of this in and then in addition to that
14:26 - we're adding a screen for what we call
14:29 - it work for a deck view our new question
14:32 - view our quiz view and you saw all those
14:35 - views when we did the demo a few minutes
14:39 - ago right so that's how navigation works
14:43 - so some elements are familiar but that
14:48 - was definitely something I had to grab
14:50 - my head around you know to understand I
14:53 - was coming from you know browser mode
14:56 - using you know react router so a little
15:00 - bit different for that let's see as far
15:04 - as this page is concerned I think that's
15:07 - all you don't want to go over maybe this
15:11 - since it's this here we'll talk about
15:12 - this we have this style sheet dot create
15:15 - and you'll notice I guess it's hard to
15:18 - see on this base we'll go to another
15:19 - page here so maybe it's a little bit
15:22 - more obvious where's your stuff there we
15:25 - go
15:25 - so we're using style sheet create we
15:29 - don't have to do it this way but there's
15:30 - a performance improvement if you add
15:33 - your Styles in like this and then you
15:37 - know this is just a JavaScript object
15:39 - and then we can put it in here so on our
15:42 - view we have style
15:43 - we just have style style container so
15:45 - then everything under container is
15:49 - applied to this component right you'll
15:52 - notice there are no there's no
15:55 - indication of pixels or anything like
15:57 - that everything in react native is just
16:02 - just straight numbers okay so they don't
16:04 - you know we don't have like VH or pixels
16:09 - or eeehm
16:10 - whatever you want to will you normally
16:12 - use in the browser obviously we're still
16:14 - doing since this is a JavaScript object
16:16 - we're camel casing everything we're
16:19 - actually importing colors so we have a
16:21 - color CAS file and we're just bringing
16:24 - in the colors from there so we have
16:27 - purple and white coming in let's see I
16:36 - have just some some test data up here so
16:39 - this will actually be gone in the the
16:42 - production version of this app but I
16:45 - needed some test data to work on before
16:48 - I had everything set up and working
16:51 - okay we're using async storage instead
16:54 - of local storage so there isn't local
16:57 - storage on your your device the
17:00 - equivalent would be async storage
17:02 - depending on your device whether it's
17:04 - iOS or Android the database that's
17:06 - holding that in the background will be
17:09 - different but you don't have to worry
17:10 - about that a sink storage takes care of
17:12 - all that and you have a simple API to
17:15 - use that so for now it's just get item
17:18 - right so we're safe everything is just
17:21 - saved as key value pairs so all of our
17:24 - our decks are saved with under the key
17:27 - decks right and then so in this
17:32 - particular case we're just getting
17:34 - everything all of them and then we're
17:36 - just looping through them all let's see
17:44 - there's oh okay the only other
17:47 - difference you'll see we don't have divs
17:48 - or P tags right we have views so instead
17:53 - of a div you're probably going to want
17:54 - to use view wherever you would normally
17:57 - use a div and instead of a P tag you
17:59 - want to use text that's just in general
18:03 - so you would never just have text right
18:07 - normally you could have just text inside
18:10 - of a view that isn't wrapped in a
18:12 - component but you can't do that in react
18:13 - native you have to have any text wrapped
18:16 - inside of a text tag so that's that's
18:21 - probably the other really big difference
18:23 - so
18:24 - probably the way you do routing and then
18:26 - the views and text instead of divs and P
18:31 - tags probably the biggest biggest
18:35 - differences I guess I could show on let
18:43 - me show one that has input so you can
18:51 - see with the inputs it's actually not
18:53 - that it's not that different from what
18:57 - you would normally see the cool thing
18:59 - though is we don't have to worry as much
19:02 - about styling inputs so by default
19:05 - depending on what you're using you get
19:08 - that default device style so so that's
19:14 - kind of nice you can of course style it
19:16 - however you want but if you if you
19:19 - didn't want to worry about that you get
19:20 - default styling which is cool all right
19:24 - so let's let's actually do some some
19:29 - coding with this and let me see how much
19:32 - time I have I do want to answer
19:33 - questions I know I see the live chat is
19:35 - a lot going on in there right now so I
19:37 - will as soon as this pommeroy time is up
19:39 - I'll go and answer some questions and
19:42 - then we'll see how much time we have I
19:44 - have a meeting in about an hour
19:46 - so I can't go any longer than that and I
19:50 - need to get I need to get some data
19:52 - ready for the meeting so probably need
19:55 - to end no later than like 45 minutes
19:59 - from now okay
20:03 - looks like my app froze on my
20:12 - my device so I'm gonna restart it so we
20:15 - can actually see what's going on well
20:18 - that's well that's working let's go back
20:22 - over here and we
20:38 - let's see okay here we go all right so
20:43 - it's back we're back here let's um let's
20:47 - take a look at the UI and see where we
20:50 - could have some improvements here one
20:52 - thing that I've noticed probably could
20:55 - be improvement is uh we need these
20:59 - titles need to be bigger and uniform
21:00 - throughout right now they're not uniform
21:02 - throughout so we can we also need that
21:09 - let's add a card because a couple of
21:14 - cards so that we can see the UI so that
21:19 - should be good but your notice right now
21:20 - here's my biggest problem the UI doesn't
21:25 - automatically update when you add a card
21:26 - so right now the data is there so the
21:36 - data for those two new cards that we
21:38 - just put in is there in a sink storage
21:41 - so but it's not reflected yet so what
21:46 - I'd have to do then is reload and when
21:49 - we reload you'll see it's it'll be
21:50 - reflected see so now we have our two
21:52 - cards okay so now we can see our quiz
21:59 - all right so we have our question and
22:02 - answer and we have this is the second
22:10 - question right so so that works now but
22:16 - what I need to have happen and this is
22:18 - why I was starting to implement Redux I
22:20 - mean also it's the data is a little bit
22:22 - cleaner with Redux anyway but I wanted
22:29 - to try to get that automatic refresh but
22:33 - since we can't really get Redux working
22:35 - right now we're gonna put that on hold
22:36 - and instead we're going to work a little
22:37 - bit on the UI so here's what I'd like to
22:40 - do these buttons are way too big in
22:44 - proportion to the other text on the page
22:46 - so the text inside the buttons as well
22:48 - as the title and everything so let's
22:50 - just do some style
22:51 - and lesson react native the stylings not
22:55 - it's not that different but it is a
22:58 - little bit odd to get used to a unitless
23:03 - styling okay so we're we knew we're deck
23:08 - view okay so we're in our deck view and
23:11 - let's go down to our styles and let's
23:17 - check out our font size I think we can
23:19 - definitely for our title we can double
23:21 - that font size and I think that'll still
23:24 - look look pretty good our number I think
23:31 - the numbers fine for right now that's
23:33 - that this area right here and you can
23:35 - see we've already seen since we have my
23:38 - device is connected to my computer right
23:40 - now and so it's Auto refreshing every
23:43 - time we change something which is nice
23:45 - so this is a lot nicer size I think I'll
23:48 - stick with that for now and let's maybe
23:50 - adjust these a bit I want to keep the
23:53 - buttons large enough so that they can
23:55 - comfortably be clicked by users even if
23:58 - the user happens to have a large thumb
24:03 - so I'm hesitant to make the buttons any
24:07 - smaller but I would like to make the
24:11 - proportions a bit nicer so let's check
24:15 - out our button let's see how we have
24:19 - this here so our text let's make another
24:26 - another we're gonna it only this works
24:30 - like a class but you know what I'm
24:31 - saying it's not really a class since
24:37 - this is just a JavaScript object that
24:39 - we're gonna call this button text and
24:47 - I call this button text I guess I don't
24:50 - have I don't have space between these
24:54 - and let's make the button text let's see
25:00 - what 20 looks like I think it might be a
25:03 - bit too big but we're gonna try it out
25:04 - so we'll go font size 20 and we'll leave
25:14 - the color alone right now let's see what
25:18 - this looks like
25:19 - oops we didn't put it I didn't apply it
25:22 - so here's what we need to do and that's
25:25 - not a comma so let's take this this text
25:29 - we're actually going to use we're going
25:32 - to apply it to both of these and we need
25:37 - to add style and let's go with styles
25:44 - dot button text
25:51 - okay now we'll save that and see how it
25:55 - looks okay not bad not bad so you can
25:58 - see this I think that that font size is
26:02 - more appropriate given the size of our
26:05 - buttons okay not bad I still don't
26:11 - really love the proportions though oh it
26:20 - would probably better if we had a title
26:22 - of this deck that it was more reasonable
26:26 - so let's add a deck let's see okay
26:39 - that's a little bit bigger I'm gonna
26:41 - submit that and once again we actually
26:44 - have to manually reload this to get it
26:46 - to show up here we go here's our test
26:49 - deck okay this is not bad not bad
27:04 - okay let's let's check out our whoops Oh
27:11 - interesting
27:13 - I have to do something like that maybe
27:17 - if there are no cards then let's disable
27:21 - that start quiz how about that let's add
27:24 - that in right now because you know we
27:27 - don't really want that behavior so I
27:28 - don't know if you saw that but when I
27:29 - click start quiz since there's no cards
27:33 - that automatically takes me to the score
27:35 - screen and obviously we can't get a
27:40 - score if there are no cards so let's
27:43 - change that so right now on that button
27:47 - to start the quiz we have on press and
27:49 - then we navigate to the quiz but what we
27:54 - want to do instead is check first to see
27:57 - if there are any cards and if there
27:59 - aren't cards we don't want to navigate
28:03 - so let's remove this yeah let's remove
28:10 - this and we're going to bring it up here
28:22 - that's
28:32 - and the navigation so I don't know about
28:37 - you but before I started react native I
28:41 - was afraid that it would just be way you
28:44 - know just so much more different that I
28:46 - wouldn't I wouldn't be able to to catch
28:49 - on very quickly but you could see I mean
28:52 - this is very much like what we what
28:56 - we're used to so let's see we're gonna
29:02 - need to put let's let's make this so
29:06 - that it can handle our clicks on both
29:08 - buttons so what we need to bring in then
29:11 - is the view and the deck and so here
29:21 - what we can bring in there is
29:37 - oops I don't know why get rid of that
29:42 - what did I call that handle navigation
29:47 - navigation and what did we call it we
29:52 - quiz so that you was quiz and then we
30:00 - did bring in where did we get that from
30:05 - oh okay
30:08 - we're already bringing in deck here so
30:13 - okay and let's copy this
30:31 - and for this one we're going to bring in
30:37 - new question
30:44 - so if you notice here normally we would
30:47 - put an on click here for a button but
30:50 - it's it's on press for react native
30:53 - which makes sense we're not not clicking
30:55 - you know this is all touchscreen alright
31:01 - let's see question you need to put in
31:09 - view and then yeah this should be fine
31:16 - the way it is let's save that and we'll
31:27 - click it
31:27 - let's see if it works
31:33 - whoops no she's not the fine
31:36 - whoops I didn't say
31:51 - all right let's chat again my addition
31:57 - is not a function
32:09 - what did I do wrong okay now it's
32:14 - working all right great
32:17 - so it's working and it looks like it's
32:21 - taking us to the right place and it's
32:24 - passing the data we can double-check
32:26 - that it's faster data by going to
32:27 - something actually does have data yeah
32:29 - and those are the right question
32:31 - oops sorry I didn't realize I didn't
32:33 - know this on the screen I'll do this
32:35 - again this we can see this one it is
32:39 - passing the right card data and it's
32:42 - obviously going to the right spot so now
32:45 - that we've implemented that we can say
32:50 - at least for this on press so we're
32:59 - gonna say if my shirts yes we're gonna
33:09 - say if deck questions dot length is
33:21 - greater than zero
33:35 - okay I've had questions length greater
33:37 - than zero
33:38 - I didn't want to deck all right let's
33:41 - see if I work no we're ready
34:12 - okay I'm getting an error be so against
34:15 - something
34:17 - my
34:35 - whoops let's try to make this irregular
34:39 - otherwise
34:55 - no questions
35:00 - all right let's make this
35:09 - oops
35:14 - all right so basically what I want to do
35:15 - with this there's no questions is
35:17 - indicate to the user that they need to
35:19 - add a question so for right now
35:33 - right now that's gonna be a console.log
35:35 - which obviously isn't gonna help the
35:36 - user that much on a device but at least
35:39 - this will remind me what I intend to do
35:41 - with this in case we don't get get to it
35:43 - during the stream all right so my timer
35:49 - is up so let me set my five-minute timer
35:53 - and oh there we go
35:56 - getting more useful feedback here that's
36:06 - my old code
36:14 - very uh there we go okay so that I keep
36:21 - forgetting you can't see my screen okay
36:23 - so I'm on this test deck now and I'm
36:25 - hitting the start quiz button you can
36:26 - see that feedback there and it's not
36:30 - doing anything but if we go to our other
36:32 - deck where we do have cards we hit start
36:35 - quiz and it does work so that's what
36:38 - we've that's what we've done here is
36:40 - just made sure that you can't start the
36:41 - quiz unless there are actually cards so
36:44 - the next step which we may or may not do
36:45 - on this dream would be to add some sort
36:48 - of visual feedback to the user to remind
36:50 - them that you need to add a card first
36:54 - okay so let me go let me restart that
37:02 - five-minute timer since I went back and
37:05 - did some work let's see I'm gonna go
37:07 - through mmm
37:08 - questions alright let me go through the
37:12 - question just see what's here we may or
37:14 - may not do another Pomodoro session
37:16 - since I do have a meeting coming up soon
37:19 - all right so I'm gonna scroll up and try
37:22 - to work my way down through as many
37:24 - questions as I can
37:25 - [Music]
37:28 - oops you guys can see that but or not
37:35 - also forgot to mention this but there's
37:38 - a live stream going on now from the
37:40 - chrome Developers Conference
37:43 - so if check that out I was watching it a
37:47 - little bit of it earlier and some
37:50 - interesting stuff so I don't know what
37:54 - the times are for everything that I
37:55 - think is going on pretty much all day
37:57 - today
38:16 - paka says i'm trying to master react
38:19 - before going on redux what do you guys
38:21 - think I don't know that you need to
38:26 - master react before getting to before
38:30 - getting to Redux yeah I mean if you end
38:39 - up working on a project project where it
38:41 - makes sense to use Redux
38:43 - I'd say go for it because there are
38:46 - definitely some times where Redux is
38:48 - going to help you significantly and
38:51 - keeping your app keeping the dataflow on
38:55 - your app more sensible so if you're
38:59 - building absolute that they don't really
39:01 - need it then don't worry about it but
39:04 - it's a good thing to know so I mean it's
39:07 - not the only option either right there
39:09 - there are other options for handling
39:10 - your data other than Redux so you may
39:12 - not need to use Redux you could go with
39:15 - what it mob X which I have not used yet
39:20 - but in general when a question is like
39:24 - do I need to master this before doing
39:25 - this my answer is almost always no like
39:29 - you don't need to just learn learn what
39:31 - you need to do for that whatever makes
39:33 - the most sense for your projects and
39:35 - it's not it's not really an either/or
39:38 - thing with these different technologies
39:39 - you can learn them both as you go
39:44 - alright hey Sebastian says update yarn
39:47 - ok cool why I did not try to update yarn
39:50 - yet so I would do that to try to fix my
39:52 - my issues with this dragon on just said
39:57 - a broken yarn still faster than NTM not
40:01 - in this case although I've heard the
40:03 - newer versions of NPM are pretty fast
40:05 - too I haven't seen data as to which
40:07 - one's faster but I think it's better
40:11 - ok Harshit says clean clean the cache
40:16 - and yarn ok I want to try that
40:30 - three thinks I sound drunk on the stream
40:34 - so do I actually sound drunk on the
40:40 - stream I don't know you know how it is
40:42 - when you hear your own voice recorded it
40:45 - always sounds weird to you so my voice
40:47 - always sounds weird I'm not a good judge
40:50 - I guess
40:58 - okay actually let me try this now since
41:07 - we'll try to clean that out and see if
41:12 - that will work
41:16 - Harshit says which version of yarn are
41:19 - you using one per point one cause
41:21 - problems for me yeah you know what I
41:32 - think I'm using a later version of yarn
41:35 - on my laptop because I just I recently
41:37 - upgraded iron on my laptop like sometime
41:40 - within the last two weeks or so so I'm
41:43 - definitely using an older version here
41:46 - so I mean let's give it a shot
41:56 - see maybe maybe something will happen
41:59 - here but okay see Z ohm boy says why do
42:09 - you use Pomodoro app what are the
42:11 - benefits
42:13 - Harshit mentions it helps to manage time
42:16 - and track work yeah definitely so in
42:18 - this case on the stream I also use it to
42:21 - help me to break up the stream and
42:23 - remember to stop coding and check out
42:26 - the live chat answer some questions and
42:28 - then also to remember to stop answering
42:30 - questions go back to the live chat but I
42:32 - do use it even when I'm not streaming
42:34 - and it does help it helps break up the
42:36 - work into manageable chunks keep me on
42:39 - track and keep me taking regular breaks
42:41 - because often it's it's easy for me at
42:44 - least to keep working on a problem and
42:47 - I'm stuck and I keep trying things and
42:48 - trying things and it doesn't work but if
42:50 - I step back and take a break even if
42:52 - it's just for a few minutes for some
42:54 - reason my brain just it needs that
42:58 - little break and then when I come back
42:59 - to it I can i often either solve the
43:02 - problem or I realize you know what there
43:05 - are better things for me to do right now
43:06 - this isn't really a main issue you know
43:11 - I may have been working really hard on
43:13 - some side thing that wasn't essential
43:15 - for the product to launch so I like that
43:22 - little break it really helps I find I'm
43:24 - a lot more productive when I'm using the
43:26 - Pomodoro timer let's see well based on
43:31 - the amount of questions I'm seeing in
43:33 - the live chat I think I should try to
43:34 - get through the questions now and not
43:37 - hey all right you got through it all
43:41 - awesome okay so if you didn't see what
43:45 - just happened there if any of you ever
43:48 - run into a similar problem where yarn
43:50 - just is hanging and not working try yarn
43:53 - cache clean as your command
43:57 - Harshit just mentioned that and thank
43:59 - you for that advice and that worked for
44:02 - me so everything installed now I would
44:07 - want to double check and test this on
44:09 - the other branch as well but we saw I
44:12 - was having the problem on both branches
44:14 - so since it worked on this branch I'm
44:17 - assuming that'll work on the other
44:18 - branch I'm not going to test it right
44:20 - now because we still have changes here
44:22 - that I want to commit first anyway so
44:28 - cool
44:29 - that'll work so maybe I would actually
44:32 - like to have everything finished and
44:34 - turn this project in today so I don't
44:35 - know if we'll work on this more on the
44:37 - stream it depends on whether or not my
44:39 - project passes the review so we'll see
44:43 - if it doesn't pass and I have more work
44:45 - to do maybe we'll do another stream on
44:46 - this otherwise I'll have to implement
44:48 - all the Redux stuff on my own but in any
44:52 - case whenever the project passes then I
44:55 - can I can show you on the ship might not
44:57 - do a whole stream about it but I can
44:59 - show you the finished product and of
45:02 - course it's on my github profile so you
45:07 - can check out the code whenever you want
45:09 - all right so let me just run through the
45:11 - rest of these questions here let's see
45:31 - okay dragon hunter says set in 8vd with
45:38 - android studio why Expo I'm not sure
45:42 - about the first part of that statement
45:44 - but it why use Expo instead of Android
45:48 - studio I'm using Expo because that's how
45:53 - so within the Udacity course that's how
45:56 - we were taught to do app development so
46:00 - I could use Android studio but but this
46:07 - was just the the quickest way to get
46:10 - everything set up
46:16 - alright see the whisper in your ears
46:20 - says that's that's actually the name
46:23 - says hey let me ask you I've been trying
46:27 - to choose full stack frame work and
46:29 - everything came down to meteor or sales
46:31 - apparently there is nothing more
46:34 - dominant these days but people say
46:36 - meteor is dead now
46:39 - Harshit says meteor is not that dead
46:42 - dragon hunter says if pearl is not dead
46:45 - yet then nothing is that I guess the
46:49 - whisper in the ears is kind of weird
46:51 - because meteor has so many stars in
46:52 - github so let's see yet to be honest
47:02 - with you I've seen really cool things
47:04 - done with meteor I don't know about
47:07 - numbers as far as how how many people
47:10 - still use meteor if it's if it is dying
47:13 - I don't really know but from what I've
47:16 - seen built with meteor it's it it was
47:19 - certainly very capable so generally I
47:23 - don't really do full stack stuff here
47:25 - I'm more front-end although we do
47:28 - include some back-end stuff when we need
47:30 - to so I don't know that I'm the best
47:33 - person to give you advice on and it's
47:36 - our framework to choose
47:40 - let's see but maybe if somebody here
47:43 - watching is
47:44 - stack or has an opinion that way you
47:48 - know please share that in the live chat
47:50 - okay all right sory says guys you're
47:58 - wasting your time this is not realistic
48:00 - go elsewhere good luck
48:04 - okay so not sure what would I did that
48:10 - upset three but I guess the streams not
48:15 - for everybody
48:19 - see I'm not sure what he means by
48:22 - realistic I mean this this actually
48:25 - really is a project that I'm doing so I
48:31 - it's realistic for me this is how I work
48:34 - so let's see a harsh it says in response
48:42 - I have already cloned and tested the app
48:44 - yesterday so I'm not wasting my time
48:49 - let's see
49:02 - okay so the whisper New Year's is saying
49:05 - it's still talking about the question of
49:07 - a full-stack framework is saying
49:09 - JavaScript doesn't have a dominant stack
49:11 - like like laravel for PHP Harshit says
49:16 - use pug with express it's really
49:19 - powerful okay Harshit says it gives
49:29 - flexibility
49:43 - okay so I'm not gonna read everything
49:46 - but there's a debate here about whether
49:48 - or not Express is capable in the same
49:54 - way as a full-stack framework is a
49:56 - dominant framework so the debate seems
49:58 - to be from well you can add things to
50:02 - Express to basically do everything that
50:04 - you want it allows a lot of flexibility
50:06 - like that but on the other hand it's not
50:11 - like ready to go you know right off the
50:14 - bat to do everything you need so let's
50:22 - see
50:26 - somebody's mentions happy use H API it's
50:30 - a framework I've never used that so I
50:32 - can't comment on it
50:45 - shree mentions do you know what async
50:51 - async' EO is that a sink that supposed
50:54 - to be a sink I don't really know
50:55 - no I'm I'm not I'm not aware of what a
51:00 - sink EO is Jamal says is this the
51:07 - Udacity project yes it is the Udacity
51:10 - project so it's it's project three of
51:13 - that react nano degree for Udacity so
51:19 - the it's the final project so as soon as
51:23 - I'm done with this and it gets accepted
51:25 - then I'm officially done with the nano
51:28 - degree and and I passed so really
51:31 - excited if you all been watching you
51:33 - know like it's been taking up a lot of
51:35 - my time doing the the nano degree so I
51:37 - learned a lot through this but I'm
51:39 - definitely excited to not spend all my
51:41 - my Saturdays and doing this I'd much
51:46 - rather to have some time to spend with
51:47 - the kids and I'm sure they would rather
51:51 - let me spend time with them as well
51:54 - let's see
51:58 - [Music]
52:14 - [Music]
52:15 - all right sir II said you really can't
52:18 - do this any more than five minutes I'm
52:24 - not sure what I was doing at the time
52:25 - when when you said that tree so I guess
52:30 - if you could elaborate maybe I'll answer
52:33 - but I can't when was that 153 yeah I'm
52:36 - not sure what I was working on at that
52:37 - time sure he also says you can't do it
52:42 - yeah I don't remember what I was working
52:45 - on at the time hard should ask if I need
52:52 - a PR in this project two already cloned
52:54 - and tested it actually hard should I
52:56 - appreciate the offer but I don't feel
52:58 - comfortable taking any PRS for this
53:00 - project since it is for a course so I
53:04 - need to I need to do it all myself since
53:08 - it's for course otherwise as you all
53:10 - know I'm perfectly you know happy to
53:14 - collaborate on projects I'm not I'm not
53:18 - one that needs all the control over
53:20 - things I realized that you all bring a
53:24 - lot of expertise to the table so I'm
53:29 - quick to admit whenever I need to take
53:34 - the help of someone else but in this
53:36 - case since it is for a class and I'm
53:37 - being graded in a sense on this I'm
53:41 - gonna have to figure it out on my own
53:43 - but again thanks for the offer I
53:46 - appreciate that and then certainly after
53:49 - I turn it in if we want to keep working
53:51 - on this I'm definitely open for that if
53:54 - we want to try to make it better and
53:56 - actually launch it as an app that's cool
53:58 - too I think I'll probably still work on
54:00 - it I'd like to maybe have my kids be
54:03 - able to use it to help them study so
54:07 - that's something I'm definitely
54:09 - definitely open to
54:22 - rook says those unitless CSS values are
54:27 - pixels can you use REM as well I'm not
54:31 - sure if they're exactly pixels
54:35 - I don't recall in that part of the
54:37 - course when they explained that I don't
54:38 - recall exactly what they are so I don't
54:43 - know maybe somebody knows but I don't
54:45 - know if they translate exactly to what
54:46 - what pixels would be let's say like if
54:50 - you are in a browser on a mobile device
54:51 - I don't think you can't so ATS also
54:57 - about using a.m. or REM I don't think
54:59 - you can use any units I actually haven't
55:02 - tried but I'm pretty sure that you
55:06 - you're not supposed to use units with
55:07 - that so if you didn't if you don't
55:10 - remember that part it when we're doing
55:12 - the CSS or the styles for in react
55:17 - native there are no units so normally
55:20 - you would see pixels or EMS or something
55:22 - here but we don't use units
55:31 - all right harsh it says I guess the unit
55:33 - is relative to device yeah I think
55:35 - that's how it works it all depends on
55:38 - the I guess the device pixel ratio well
55:44 - and that I don't know there it's hard to
55:47 - talk about it without a unit right but I
55:50 - think it does depend on the the
55:53 - resolution of the screen and size of the
55:55 - screen let's see harsh that says hey
56:05 - Jessie did you hear about Adam IDE check
56:07 - out Adam that I oh yeah actually I I saw
56:10 - something about the Adam IDE I may end
56:15 - up checking out at some point
56:18 - so we'll see maybe I'll test it out we
56:21 - could use on a stream or something when
56:25 - I first heard about it I thought I
56:26 - didn't really need any of that
56:28 - functionality but it would still be cool
56:30 - maybe to take a look at and just just to
56:32 - show everyone John Hanson says the start
56:37 - quiz button looks wider odd yeah let me
56:40 - reload see if it'll work
56:44 - there we go yeah let's check that out
56:51 - actually you're right to start quiz
56:53 - button does look wider interesting I'll
56:59 - have to check that out later on to see
57:03 - if it if it really is wider I mean
57:07 - there's there's yeah it is odd yeah I
57:11 - definitely want them to be the same I
57:13 - don't want one to be wider than the
57:14 - other I may change how these buttons
57:16 - look as well right now at this point I'm
57:21 - not as worried about the Styles because
57:22 - I just need to get this turned in before
57:24 - the deadline so unfortunately it's not
57:27 - gonna look awesome
57:28 - but I just need to fit all the project
57:32 - requirements so I can always style it
57:37 - later on
58:03 - save some debate about between view and
58:07 - reacts which I'm kind of skipping over a
58:10 - bit to look for more questions okay
58:17 - Blake says if I learned react what I
58:19 - also know almost all of react native
58:26 - well it depends on how much you mean by
58:29 - almost all you would know a lot you
58:32 - would know a lot of it so the concepts
58:38 - are the same right so the idea that you
58:44 - have these components that get rendered
58:48 - into something else right that's that's
58:49 - entirely the same but in terms of like
58:54 - specifically how you do things right
58:57 - there are some differences but I mean I
59:01 - pointed out to me at least the big
59:03 - differences for me and learning it and
59:05 - you see they weren't really that big of
59:07 - a deal so I didn't think it was that big
59:13 - of a stretch to move from react to react
59:16 - native okay now I don't know if I went
59:18 - even deeper and try to do something more
59:20 - complex than just a flash card app maybe
59:22 - I would run into some more issues but I
59:27 - think going for me at least going from
59:33 - not using react to do web development to
59:36 - using react was a much harder transition
59:39 - than transitioning from react to react
59:41 - native so that was just my experience
59:46 - but it just didn't seem that hard to
59:50 - translate the concepts into building
59:53 - something you know for phone than doing
59:56 - web development
60:06 - so Blake s so what do you think I should
60:08 - learn yes so Blake I think to be honest
60:20 - with you it depends on what your goals
60:23 - are for for learning right
60:26 - I mean learn whatever you enjoy you know
60:28 - or learn what you need to do for the
60:30 - projects that you're doing but react
60:35 - right now is growing it's continuing to
60:38 - grow there are a lot of react jobs the
60:40 - pay-for react developers is nice so if
60:45 - you enjoy working with react I said go
60:47 - for it I mean are there alternatives
60:50 - that are popular yeah there are
60:52 - alternatives that are popular but I I
60:56 - just I see react more and more in job
61:01 - listings so if your goal is to get a job
61:03 - doing this type of thing then you know
61:06 - it would be I don't think it would be
61:09 - wrong to go with react but it's just a
61:13 - pow mean if you check out to you and you
61:15 - really like you there are jobs for view
61:18 - developers if you check out angular and
61:20 - you love that then they're still you
61:22 - know there are a lot of jobs for that so
61:24 - definitely test out different things but
61:30 - I think you'd be fine if you did want to
61:34 - go with react I think you'd be fine from
61:36 - a from the standpoint of having
61:38 - marketable skills
61:47 - all right I got to keep an eye on the
61:49 - time here okay so I'm good probably
61:53 - about like 10 more minutes I'm going to
61:54 - try to get through the rest of these
61:55 - questions I think I can do it
62:03 - Blake asks well he's asking Harshit
62:06 - would you agree that there's bigger
62:07 - support base and react our [ __ ] says yes
62:10 - yeah I would agree as well John Hanson
62:15 - says does one need to use native if a
62:19 - create react app has a responsive layout
62:22 - or does this all go further than how
62:24 - react deliver is different from desktop
62:26 - to Android iOS etc Mobile portable apps
62:31 - yes
62:32 - yeah so you could potentially do like in
62:36 - one of our previous projects we use
62:38 - create react app just for a regular
62:40 - react app and then we were able to save
62:43 - it to our desktop and run it and it
62:45 - looked a lot like a native app but it
62:47 - really wasn't a native app right so to
62:50 - get more of the benefits of a native app
62:52 - you go with react native right so in a
62:55 - if you're doing just a regular react app
63:00 - you could make it seem like it was a
63:02 - native app but really it wouldn't be the
63:05 - underlying code is still JavaScript HTML
63:07 - CSS when you're using react native the
63:10 - underlying code becomes native code for
63:14 - that device so depending on where your
63:17 - iOS or Android you know it's different
63:19 - but we're no longer talking about just
63:23 - HTML CSS JavaScript that's what you see
63:26 - when you develop but what actually ends
63:28 - up getting delivered to the device is
63:30 - the native code
63:33 - so there's definitely under the hood
63:36 - there's a big difference but then you
63:38 - also have access to more more on the
63:42 - device so I know there's the support is
63:45 - pretty good for let's say a browser like
63:48 - Chrome to access a lot of things on the
63:50 - device but it's never going to be as
63:53 - and I shouldn't say never but it's it's
63:55 - not as good released now in terms of
63:59 - having direct access to all the
64:01 - functions on a device and I imagine
64:05 - there's definitely some performance
64:07 - improvements as well when you could do
64:10 - it like that so if you if your goal is
64:13 - to build an app that people can download
64:14 - from an app store then definitely use
64:19 - react native if you're not that worried
64:22 - about that and it's something that would
64:24 - make more sense to be a website that
64:26 - could potentially also act like like an
64:29 - app you know progressive web app then
64:31 - you know you could just use normal react
64:47 - let's see alright so blake link
64:50 - something i'm not gonna have time to
64:51 - read through this but the question the
64:53 - the link for the question is react je s
64:56 - vs. JS versus static what should I do
64:59 - so I'm gonna unfortunately I think if I
65:03 - want to be done in time let's let me
65:06 - save that and if I get through the rest
65:08 - of the live chat maybe I'll try to come
65:09 - back to it if I have time
65:19 - Brooke says in that logical and error
65:22 - try wrapping the arrow function in
65:24 - parentheses okay that must have been we
65:26 - were getting errors there so as we
65:28 - worked it out sorry I didn't see that
65:29 - when I was working on it there okay
65:31 - thanks thanks for helping that Roger
65:36 - says maybe you should make a video about
65:38 - how to keep up with your videos maybe I
65:42 - will do you all think that I need to do
65:43 - that have some instructions there are
65:47 - quite a few videos now and some are
65:50 - better than others I mean I'm I'm not
65:53 - gonna lie you all are very nice about it
65:54 - but I know there's some times when I
65:57 - have a goal for a stream and it just
65:59 - doesn't happen and it's just a failure
66:02 - for the most part other times we get a
66:05 - lot of stuff done and it's really cool
66:06 - but I mean that's what it's supposed to
66:09 - be right the goal of the stream isn't
66:11 - like let's get as much done as possible
66:14 - let's let's see what it's like for
66:17 - somebody to get through their work and
66:19 - sometimes fail all right rich Rishabh
66:26 - says hey man pretty excited for the
66:28 - stream working on it from last 8 months
66:31 - really excited to see if I missed
66:33 - something as per standards cool awesome
66:45 - five Huff says good morning hey how's it
66:49 - going rishabh says I've been writing
66:53 - services on meteor and consuming
66:55 - services with react native it's great
66:57 - for middle level apps alright that's
66:59 - cool that's cool let's I'm glad to hear
67:02 - you have some experience with react
67:04 - native so maybe for future projects when
67:07 - we use it you'll be a great resource for
67:09 - us then let's see and and we'll glue
67:17 - wopo sorry if I'm mispronouncing your
67:19 - name but I know Lupo says for the pages
67:24 - using the stack navigator do you have to
67:26 - import stack navigator from react native
67:29 - navigation another quick walkthrough on
67:32 - how the screen Navigator works would be
67:33 - cool okay yeah no problem let's check
67:35 - out that navigator again so I'm going to
67:37 - go back into app touch ass and let's
67:41 - check out so right now we're importing
67:43 - tab navigator and stack navigator from
67:47 - react navigation and then what we will
67:51 - we have or - so here's our main
67:53 - navigator alright well we have a home
67:56 - screen we have a deck new question and
68:01 - quiz yes we base we just have four views
68:04 - then for home we're actually importing a
68:09 - whole nother navigator because we want
68:11 - the home view to have tabs so in that
68:13 - case we've created another navigator the
68:16 - tab navigator and within tab navigator
68:18 - we have two views list view deck whew
68:21 - alright so we have four main views and
68:25 - then we have this home screen actually
68:27 - is split up into two two different parts
68:30 - so I guess that's what five in total so
68:35 - that's how we you know we bring that in
68:37 - and now that we've done this alright and
68:40 - we've we've linked all this up here in
68:42 - app j/s which is our route component now
68:46 - when we go into something like let's go
68:49 - to list view because that's home when we
68:52 - go into this view
68:55 - we can do navigation so we can actually
69:01 - do this so we have this on press this
69:03 - props navigation navigate deck right so
69:07 - we can navigate right to that view
69:10 - called deck which we added in here so
69:14 - the view is called deck and it goes to
69:17 - the screen the component of deck view
69:21 - and and for all of our sub components we
69:24 - can do that we can just run that
69:27 - navigate this props navigation navigate
69:31 - and go right there and this isn't all we
69:33 - can do there are a lot of other options
69:34 - for for what you can do with a navigator
69:37 - but this is the one that I'm using most
69:39 - often potentially this might be the only
69:42 - way that I'm doing things because the
69:44 - apps pretty simple
69:46 - and then I happen to be passing some
69:48 - data along as well which is nice to be
69:51 - able to do that but that's optional so
69:59 - hopefully that that helps I can show you
70:02 - I guess the touch as well so am i
70:05 - bringing this in
70:14 - this times no that's my status bar then
70:18 - I guess it's enlist you
70:37 - I guess it just gets added in I was
70:39 - looking to see if there was someplace
70:41 - where we had to add in the tabs but I
70:43 - don't think we did so when we when we
70:45 - choose tab navigator and we say what we
70:48 - want each one to be so we want it to
70:51 - display as decks and new deck and then
70:53 - we give it some options
70:54 - just for styling then automatically on
70:59 - the home the home screen it just adds
71:05 - those tabs and it knows what views what
71:09 - components from here we've given it the
71:12 - list view new deck for you so you don't
71:14 - actually have to plug that in anywhere
71:16 - it's just it's it's there let's go back
71:19 - to one of those views as you can see so
71:23 - there we go there's our tabs so
71:26 - hopefully that that helped to help
71:30 - understand that like I mean that's like
71:32 - just a really simple thing it took me a
71:35 - while to read through documentation and
71:37 - watch the videos and figure out how that
71:39 - all works together so if anyone is
71:42 - having trouble getting that after my
71:43 - very quick explanation don't worry about
71:46 - it I definitely needed a little while
71:49 - for that all to sink in in the process
71:57 - Thiago says our ask do you think the
72:01 - react nanodegree is a good idea are you
72:03 - enjoying it I am enjoying it so like I
72:07 - said I'm just I'm busy so I'm not
72:09 - enjoying having to spend all that time
72:11 - away from my family but I've learned a
72:14 - lot from it so it's pushed me to do
72:18 - things that I probably would not have
72:20 - pushed myself to do so I I like it I
72:28 - think it was worth it I wish I paid the
72:32 - full price for the course and then a few
72:34 - weeks later they had a sale for Half
72:37 - Price
72:37 - so my only regret is that I didn't wait
72:40 - for the sale and get it for Half Price
72:43 - but otherwise it's been great I
72:46 - especially really like
72:48 - the code reviews so when you turn in a
72:50 - project it gets reviewed by someone and
72:52 - they go through and let you know what
72:56 - you could have done better or if you
72:57 - didn't meet some of the requirements and
72:59 - they give you suggestions so that was
73:02 - really helpful because I don't usually
73:03 - have people reviewing my code and so
73:08 - that was helpful and that really pushed
73:09 - me you know to go back and say no do it
73:12 - again that's not the best way you could
73:14 - have done it and so yeah so I definitely
73:17 - learned a lot I've come a long way
73:20 - between these streams and the help that
73:22 - you are giving me and the react
73:24 - nanodegree I learned quite a bit in
73:28 - these last you know a few months of
73:31 - doing this it's I'm pretty amazed at how
73:36 - far I've come you know in terms of my
73:40 - abilities with react in just that short
73:43 - amount of time
73:45 - so I think I'll end up doing a video
73:48 - like a review of my thoughts on the
73:50 - course when I'm done with it
73:52 - so maybe sometime in November I'll be
73:54 - able to make that and I'll put that on
73:56 - my my youtube channel and just kind of
73:59 - go through what I what I thought but as
74:01 - of right now I say it was worth it oh
74:08 - cool Alexander says the in terms of the
74:11 - pixels they are di P density independent
74:14 - pixels awesome
74:15 - whoo I figured that there was there was
74:18 - some explanation for it but thanks for
74:21 - that so the the unitless let's see were
74:26 - not so the unitless values here that
74:31 - we're using for react native are
74:33 - actually device independent pixels was
74:36 - that it density independent pixel sorry
74:38 - I'm setup density independent pixels
74:42 - let's see which table uh
74:46 - alright mujtaba
74:49 - sorry if I'm mispronouncing Apple each
74:51 - table says Jesus was sent by God to
74:53 - teach people teaching is like being a
74:56 - prophet but people do never appreciate
74:58 - many things in life though
75:00 - if the knowledge is free of charge
75:03 - great yeah actually unfortunately you're
75:09 - right if if something's free people do
75:11 - usually take it for granted and don't
75:13 - appreciate it quite as much so it's
75:16 - great that free code camp is free but
75:19 - sometimes just in talking to people no
75:21 - one's come out and said it but
75:23 - occasionally I get the feeling that
75:27 - sometimes people don't take free code
75:29 - camp as seriously as some of the other
75:32 - people that teach code for profit you
75:35 - know that that cost money when I think
75:38 - what we have is free code camp is really
75:39 - high-quality and it's it's amazing and
75:42 - I'm allowed to talk about my stream I
75:44 - mean sometimes my stream is a mess but
75:46 - the other people that that do videos and
75:48 - that work on the free code camp website
75:51 - and the forum you know and all the
75:53 - different things that free code camp has
75:54 - going on it's great quality it's amazing
75:57 - what we've been able to do just with
75:58 - volunteers and keep it all completely
76:00 - free of charge so it is really good and
76:04 - I hope people realize that in this case
76:06 - free does not mean that it's somehow
76:09 - below the quality of other things I mean
76:12 - I I think free code camp in in many
76:15 - cases is a better quality than some of
76:18 - the paid paid courses that I've taken
76:21 - and that I've seen so anyway thanks for
76:24 - that much table I appreciate you saying
76:27 - that
76:29 - let's see Saucon says redux ugh it
76:33 - doesn't make sense to me the generator
76:35 - thing looks so high-level stuff would
76:37 - you use thunks saga observer or anything
76:41 - else I've used thunk so thunks pretty
76:45 - simple I've used it I have not had
76:47 - experience with saga yet so I I'll
76:51 - probably end up working with it at some
76:53 - point I just kind of like to know what
76:55 - it's like and what the differences
76:56 - between thunk and saga but if you're
77:00 - having trouble with saga I would check
77:01 - out funk it seemed it's really simple to
77:04 - use at least in my experience it's
77:11 - I should ask what mirroring software I'm
77:13 - using it's called
77:14 - visor let me see if I can bring it up so
77:18 - yeah I don't know if you can see that
77:19 - now you can't see that on the bottom
77:22 - uh-huh because my my thing some way let
77:25 - me move this oops let me move this you
77:29 - can see a little bit so visor that's the
77:33 - icon there I guess that's really small
77:35 - but it's it's called it's what is it V Y
77:39 - SOR visor
77:45 - let's see let me see the time oh man I
77:49 - got a rep let me go really quickly
77:50 - through the rest of the live chat and
77:51 - then I got a go to my meeting I can't be
77:55 - late to this meeting the head of my
77:56 - department is going to be in this one
77:57 - and my boss will be in it so definitely
78:01 - got to finish up quickly here so I'm
78:04 - gonna skip the comments so sorry I won't
78:06 - be able to read all the comments but I
78:07 - do want to get to the questions Schlow
78:11 - bird says how do I get an overview of
78:13 - all the JavaScript frameworks I just use
78:14 - basic js4 now and I don't know which
78:17 - with with which frameworks I should
78:19 - start
78:20 - I don't program for a living I don't
78:23 - know that there's a resource off the top
78:26 - of my head I don't know a resource that
78:27 - good there's an overview I imagine it
78:30 - probably exists somewhere so I'll tell
78:34 - you what send me a message on Twitter or
78:37 - something and then I'll send if I can
78:39 - find something I'll send it to you if I
78:44 - had more time in the stream I try to
78:46 - look something up right now so sorry
78:48 - about that but coming back for another
78:51 - stream or send me a message or something
78:52 - on Twitter and I'll try to help you out
78:55 - as best I can
78:57 - oh cool harsh it says there's a material
79:01 - design framework for react native so
79:04 - it's react native material design github
79:07 - I Oh awesome that sounds really cool
79:10 - like I said I'm not gonna do it now
79:12 - because I need to turn this in the
79:14 - deadlines almost here but after I turn
79:16 - it in if I do some extra work I
79:19 - I may end up using that okay all right
79:24 - hard should I see what you're saying
79:25 - about the SendGrid keys I'll test that
79:28 - out later on maybe after my meeting
79:34 - okay harsh it's asking about how to find
79:39 - freelance work yeah so like I don't have
79:42 - time to answer right now cuz I gotta go
79:44 - to my meeting but hard [ __ ] ask me that
79:46 - send me a message on Twitter or ask me
79:49 - in tomorrow stream and we can go over
79:51 - that in more depth I do have some advice
79:53 - I used to freelance for a few for like
79:55 - three years so I definitely have some
79:57 - advice on that so I'm happy to help you
80:00 - out with that
80:21 - world's s what's the disadvantage of PHP
80:24 - I don't work that much with PHP but one
80:29 - thing that I've noticed with PHP that I
80:30 - don't really like and I don't I haven't
80:33 - that looked at a lot but I have a
80:34 - co-worker that's dealt with it a lot and
80:35 - it's been a problem is the different
80:37 - versions of PHP don't always work well
80:40 - together so he's worked on some legacy
80:43 - projects where he can't upgrade to newer
80:45 - versions of things because of issues
80:48 - with different PHP versions supporting
80:50 - different things so it's kind of he's
80:53 - kind of stuck and I'm afraid at times it
80:55 - can be a security issue because he has
80:58 - to run things in different versions of
81:00 - PHP we've inherited this you know this
81:02 - old code and so we have to keep
81:05 - different versions running and try to
81:07 - keep track of what will work on these
81:08 - different versions I don't really like
81:11 - that it seems like with JavaScript
81:13 - there's not that much of an issue like
81:16 - everything's always backwards compatible
81:18 - at least I haven't really run into
81:21 - anything like that so that's the at
81:23 - least for me the only did like bad thing
81:25 - I've run into with PHP and maybe there's
81:27 - a way around that and I just don't know
81:29 - it because I'm not I don't use PHP that
81:32 - much but otherwise you know and I know
81:35 - people that they make good money you
81:38 - know doing things with PHP and they do
81:39 - really cool stuff with it so so I don't
81:44 - think there's a problem using it Harshit
81:50 - says we you stream react native tomorrow
81:52 - maybe it depends on how much I get done
81:55 - on this project today I'm gonna work on
81:57 - it
81:57 - later on today so we'll see if I get it
82:00 - finished and I turn it in
82:01 - I may not stream about it if I if I
82:04 - don't then I probably will stream so
82:08 - maybe the answers may be all right so I
82:12 - got through everything sorry I had to
82:14 - skip over a lot of the comments and I
82:15 - couldn't give as good of answers as I
82:17 - normally do I guess that I'm just
82:19 - running out of time so I will be back
82:21 - tomorrow most likely in case I'm crazy
82:23 - unless something crazy happens I'll be
82:26 - around the same time around 2 p.m.
82:28 - Eastern time tomorrow and thank you so
82:31 - much for all your your help during this
82:33 - and a lot of great discussion in a live
82:36 - chat I love when that happens you're
82:38 - helping each other out and helping me
82:39 - out so it's just awesome but anyway I
82:43 - have to go and go to a meeting now so
82:47 - I'll be back tomorrow and until then
82:50 - have a great day