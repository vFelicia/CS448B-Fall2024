00:53 - [Music]
00:59 - hey this is steve with dabble lab
01:01 - welcome to uh day five of our alexa
01:05 - development series
01:08 - for those of you that find the video
01:10 - development i always forget to do that
01:12 - to turn that off um for those of you
01:14 - that were uh here previously welcome
01:16 - back and for anybody who's new uh
01:18 - welcome today
01:19 - we are going to be
01:23 - turn that up
01:27 - uh turn that off um yeah today we're
01:30 - gonna be talking about uh well first of
01:32 - all actually if um if anybody is
01:34 - planning on going to the
01:36 - voice summit if you don't know about it
01:38 - it is the largest
01:40 - tech event of the year for voice
01:42 - development stuff if anybody is planning
01:44 - to go there
01:46 - uh uh it's the end of this month let me
01:48 - let me know i'd love to uh to connect
01:50 - and say hello
01:51 - also if you are planning to go or
01:53 - thinking of going and you haven't gotten
01:55 - tickets we you can go if you go to
01:57 - voicesummit.ai
02:00 - and uh register and use the um there's a
02:03 - discount code
02:05 - dabble d-a-b-b-l-e that will give you a
02:08 - 20
02:09 - uh discount if you are planning on going
02:10 - to that but let me know if you're
02:11 - planning on going i'd love to uh connect
02:13 - and say hello in person
02:16 - okay uh today
02:18 - we're going to be talking about
02:21 - multi-turn dialogues and also
02:24 - data persistence
02:26 - in dynamo db and the certification
02:29 - process i'm gonna i'm not going to try
02:32 - to fit this into the free code camp
02:35 - skill that we've been working on just
02:37 - because i don't have a good example for
02:39 - that and i really want to
02:40 - try to make these two topics clear
02:43 - so i'm going to
02:45 - use just i'm going to go we're going to
02:47 - create two new skills to go through each
02:50 - one of these topics so that it doesn't
02:52 - get confusing hopefully or that's what
02:54 - i'm trying to uh to do with it and uh
02:57 - and then we'll also talk about the skill
02:59 - certification process we're not quite
03:00 - ready to
03:02 - fully um submit the free code camp skill
03:05 - yet so i was hoping we might get a a
03:08 - chance to submit it for live review but
03:11 - we're not gonna we're not gonna be able
03:12 - to do that i don't think uh so um but we
03:15 - will talk about this uh skills
03:17 - certification process so these are our
03:19 - goals for today recap yesterday we
03:23 - looked at using slots
03:25 - and we talked about custom slots and
03:28 - entity resolution yesterday and i think
03:30 - yesterday was a lot got some feedback it
03:32 - went went kind of uh quick for the
03:35 - timeline we had and although we got it
03:38 - all worked into the uh the skill project
03:41 - um
03:42 - part of the reason i want to try to
03:43 - break these two topics that we're going
03:45 - to be talking about today out is so that
03:48 - it's uh it's not as confusing but we've
03:50 - got the um
03:52 - we have the repo
03:54 - now out there it's been out there for
03:56 - two days but if you're just coming back
03:57 - i will post
03:59 - the link to the
04:01 - there you go that is the the github repo
04:03 - so um if you uh you want to grab the
04:06 - code it has been updated except for this
04:09 - link here i don't think is the
04:11 - most current link i'll change that
04:14 - though
04:14 - um and uh
04:17 - we are ready ready to go so we're gonna
04:20 - we're gonna start like i said with
04:21 - multi-turn dialogs
04:23 - and um
04:25 - we're gonna do that using the
04:30 - management console so i'm gonna i'm
04:32 - gonna go over to developer.amazon.com
04:36 - and there's there's kind of two ways
04:38 - that you can do multi-turn dialogues we
04:40 - talked uh yesterday or the day before
04:43 - about what they were multi-term
04:44 - dialogues are dialogues where you're
04:47 - going to go back and forth with
04:48 - alexa so you might ask alexa for
04:52 - something but before the intent can be
04:55 - fulfilled alexa's got to get more
04:56 - information from you or the skill does
04:58 - and so there's sort of a back and forth
05:00 - so for example like
05:02 - um ordering a pizza i think is the
05:04 - example that i used when we were talking
05:05 - about this before if you if you had an
05:08 - intent that was a order pizza intent to
05:10 - fulfill that intent you might need the
05:12 - pizza size toppings all of that kind of
05:14 - good stuff and to get that
05:17 - you would go and go back and forth with
05:19 - a multi-turn dialogue to get the
05:21 - information that you needed to fulfill
05:23 - the intent so that's what we're going to
05:25 - walk through i did a tutorial on this a
05:27 - while back
05:29 - and i'm going to use the uh the the same
05:32 - example but the example that we're going
05:34 - to use is an example for a
05:38 - um
05:39 - like a sales coaching skill so uh and uh
05:43 - i think that will work so we're we're
05:45 - talking about the dialog interface i
05:46 - said there's two ways to do this you can
05:48 - do it through the dialogue interface
05:50 - which
05:51 - the the back and forth is managed by the
05:54 - alexa service you can also uh look at
05:58 - within your skill code you can look at
06:00 - the request
06:02 - and find out if the um slots have been
06:05 - filled or not and if not then you can
06:08 - prompt the user with a different
06:10 - response and that's going to be the
06:11 - second example that we're going to show
06:13 - uh or talk about today and then with
06:15 - that one i'm also going to get into the
06:17 - persistence part so
06:19 - let's um let's get started
06:21 - uh welcome back
06:24 - [Music]
06:29 - okay um what's the question free code
06:31 - can't by any chance uh livestream uh
06:35 - voice 18 summit we will be there uh
06:41 - i'm
06:44 - live stream of voice 18. i'm not sure
06:46 - what that is can you can you post um
06:49 - info on that
06:51 - so i'm not sure i'm understanding that
06:53 - question but um i'll i'll get back and
06:55 - look at the questions again in just a
06:57 - second here so i'm gonna start a new
07:00 - skill and
07:02 - i'm going to call this
07:04 - sales coach
07:08 - and custom skill
07:16 - for the skill service for the lambda
07:18 - function for the back end i am
07:20 - going to
07:22 - use the uh vui tester which i'll show
07:24 - you in just a second which is a great
07:26 - way to
07:28 - to just kind of get a really
07:31 - quick back end set up for development
07:34 - stuff so um
07:36 - let me uh let me go do that right now
07:38 - actually so uh if you to get the
07:42 - the
07:44 - if you go to the github the alexa
07:47 - github.com alexa
07:49 - there's a repo in there called cookbook
07:53 - and
07:54 - it's got a lot of cool examples and
07:57 - stuff in it so i would encourage you to
07:59 - go check it out and
08:02 - i from time to time just poke through
08:03 - there and see what's in there and one of
08:05 - those times i came across
08:07 - uh in the tools folder this folder here
08:12 - this um
08:14 - this here this vui testing tool
08:19 - uh and there's a step-by-step
08:21 - walkthrough
08:22 - but um it i'm gonna just i'm gonna cheat
08:25 - a little bit here for the walk through
08:26 - they they zip up the project but there's
08:29 - a shortcut way to do this that i'll show
08:32 - you so um i'm going to go into the
08:34 - source code and grab the
08:36 - the code for
08:38 - this uh lambda function here and
08:43 - what this does is is just echoes back
08:45 - requests that are coming from alexa so
08:47 - this is a um
08:49 - a skill service for
08:51 - really just for testing and so oops
08:57 - so that's what we're going to be using
08:58 - it for so let me go back over here to
09:00 - aws now and
09:03 - to lambda
09:05 - and the trick so you don't have to zip
09:06 - it up and
09:08 - deploy it
09:11 - i'll show you what you can do
09:13 - when you
09:14 - create your lambda function for it
09:19 - if you use one of the alexa blueprints
09:21 - remember i mentioned this i guess day
09:23 - one now
09:24 - the alexa blueprints have
09:27 - the
09:28 - skills kit sdk
09:31 - in them so i'm gonna just grab this one
09:33 - i'm gonna be overwriting all the code
09:35 - but i'm doing this just so i don't have
09:36 - to zip and upload and i'm going to call
09:39 - this sales coach
09:43 - like that
09:44 - and
09:46 - basic execution role is good
09:49 - and then um
09:51 - i'm gonna create the function and like i
09:54 - said i'm gonna
09:56 - get rid of all of the boilerplate code
09:58 - there i'm i'm just using
10:00 - this for the um
10:03 - the sdk that is included with it so um i
10:06 - need to set up my
10:09 - trigger
10:10 - [Music]
10:14 - there and let me get rid of the code
10:17 - here
10:22 - well while that's loading i'll
10:24 - set up the trigger
10:25 - [Music]
10:30 - endpoint
10:32 - and i'm not talking through all this
10:34 - because we had covered this earlier but
10:36 - if you've got any questions as i'm going
10:38 - through this uh leave those in the um in
10:40 - the chat and we'll cover those
10:44 - uh
10:46 - [Music]
10:50 - actually i could just disable this too
10:52 - but
10:53 - [Music]
10:54 - add that
10:56 - [Music]
11:01 - know why this is not pulling up the code
11:04 - here
11:39 - i don't know what it's doing there we go
11:42 - all right um and so then i'm just
11:45 - copying oops
11:47 - i need i'm going to just paste in this
11:50 - here so
11:51 - copying it
11:53 - and then just pasting this in like this
11:57 - so again this uh the the code that i'm
11:59 - copying and pasting in here is just
12:01 - gonna echo back anything that it gets
12:02 - from the
12:04 - alexa service so it's just for testing
12:08 - and i'm gonna save that
12:10 - [Music]
12:17 - and i think we're good uh we need to
12:21 - grab the arn remember from
12:24 - earlier and then we're going to
12:26 - take the the amazon resource name and
12:29 - add it to our skill endpoint over here
12:33 - and we'll save that save the endpoint
12:44 - for some reason the trigger
12:48 - didn't save
12:53 - [Music]
12:57 - let's see
13:00 - if that fixed it
13:02 - copy this to the clipboard
13:04 - [Music]
13:07 - okay that time it's saved so i think
13:10 - we're good
13:11 - um
13:14 - yeah we'll just leave it like that for
13:16 - now okay so we're so we're good there
13:18 - now um now let's get into the the
13:20 - interaction model and this is uh this is
13:23 - where we're gonna spend the uh the next
13:25 - few minutes talking about the multi-turn
13:26 - i'm gonna just set the
13:29 - invocation name first to sales coach
13:32 - that
13:33 - save the model and now um
13:38 - i'm gonna uh i'm gonna create a an
13:41 - intent a custom intent where uh that
13:44 - we're gonna use as our multi-turn
13:46 - example so i'm going to add an intent
13:49 - called
13:50 - set goals
13:59 - intent
14:01 - and
14:02 - the
14:03 - the reason i'm i'm doing this with the
14:05 - the ui you could do all this with the
14:06 - json editor but i'll show you the json
14:08 - in a minute it can get um it can get uh
14:12 - hard to follow quick so
14:14 - if you're going to use the dialog
14:15 - interface you probably want to uh start
14:19 - at least doing it through the um the
14:22 - the graphical uh
14:23 - skill builder which is actually really
14:25 - nice especially for for doing this you
14:28 - can of course do all this uh
14:30 - in code and json and and deploy it with
14:33 - the uh the cli like we have been doing
14:36 - up to this point but
14:38 - um for this it'll be a lot easier to
14:40 - show i think going through the the
14:42 - graphical user interface here so
14:44 - um first we need a sample utterance uh
14:50 - and we'll just say set my goals
14:55 - and
14:56 - um now this is where we're going to get
14:58 - in the multi-turn so let's say that we
15:01 - want to
15:02 - we're trying to figure out what the user
15:05 - is going to need to do for their sales
15:07 - activity
15:08 - and so
15:09 - to do that we might want to know like
15:11 - what's their sales goal for the month um
15:14 - what do they what's their goal for the
15:16 - average value of a customer and
15:19 - um what's their goal for uh total
15:22 - prospects that they're going to contact
15:24 - and then we could use that to to give
15:27 - them maybe feedback that says this is
15:29 - what your closing rate's going to need
15:30 - to be to hit your goal if your
15:34 - total revenue goal is x and the average
15:36 - customer value is why we're not going to
15:38 - do that part because that's sort of
15:40 - outside the multi-turn part but that
15:42 - that's the idea behind this so
15:44 - what we need is we need their
15:47 - their
15:48 - total
15:50 - sales goal
15:53 - we need
15:55 - their
15:58 - [Music]
16:01 - average
16:03 - customer
16:05 - value
16:07 - and we need their
16:11 - total
16:12 - prospects
16:20 - contacted so um so we need three values
16:23 - so we're going to collect three values
16:26 - and for this example all of the values
16:28 - are numbers so we can use a built-in
16:31 - slot type there's a
16:32 - a number slot type and we'll use that
16:34 - for all of them so the total sales is a
16:36 - number
16:38 - the
16:38 - average customer value is a number and
16:41 - then the total prospect
16:44 - that's the number i'm going to change
16:46 - this to
16:51 - total
16:52 - prospects
16:56 - contacted
16:58 - um
17:00 - okay
17:01 - let me go back over here
17:03 - now what i need to do so now i've got my
17:05 - my intent and
17:07 - i've got
17:08 - my slots that i want to get information
17:12 - on now i need to configure each one of
17:13 - these slots so that um
17:16 - i've got some options here so uh by
17:18 - default i can go down here like this
17:22 - the uh
17:23 - the slots aren't required by default but
17:26 - for this example i'm gonna say to to
17:28 - fulfill this intent to give them back uh
17:32 - some information about
17:34 - how what their sales closing rate needs
17:36 - to be uh i need all of those values so
17:38 - i'll say that
17:39 - this
17:40 - slot total sales goal is required
17:44 - and i'm gonna prompt them so if if the
17:47 - slot value doesn't come over with the
17:48 - request or is not filled
17:51 - then i'm going to say
17:54 - what is your
17:58 - total
18:01 - sales goal for the month
18:06 - and we'll just do one for right now you
18:08 - might want to say that
18:09 - in different ways just to make it less
18:13 - redundant and repetitive and then the
18:15 - user might respond
18:17 - and this is where i'm going to take the
18:19 - value that they provided
18:21 - or this is the slot and then dollars
18:25 - something like that or my
18:29 - my goal is
18:37 - and then i would just like we we have
18:39 - been doing use some additional samples
18:42 - and then down here what i can do to make
18:44 - sure that i've got the right response
18:46 - from them i can confirm each slot
18:49 - and i'm going to do that for
18:53 - just for for this example
18:57 - uh okay and i'm gonna say
19:00 - uh let's see
19:04 - so your goal
19:07 - for the month
19:10 - is
19:13 - dollars
19:16 - [Music]
19:20 - did i hear that
19:21 - did i get that right
19:24 - and this is where i'm looking for a yes
19:27 - or no to confirm this
19:30 - okay
19:32 - so
19:32 - now i i basically need to do the same
19:34 - thing for each of these other slots
19:39 - so the next one same thing i'm going to
19:42 - require this
19:43 - and i'm asking for the customer value so
19:48 - what is the average
19:51 - [Music]
19:55 - value of a new sale
20:03 - and maybe
20:05 - how much
20:07 - will
20:09 - the average
20:11 - customer
20:14 - spend maybe
20:16 - something like that this is an example
20:19 - and then the user is going to say
20:21 - something like
20:25 - [Music]
20:33 - dollars
20:34 - or the average
20:38 - customer will spend
20:48 - okay and we'll just
20:50 - go with those two for right now and then
20:52 - we
20:53 - want to uh require
20:56 - um
20:57 - a confirmation so we'll say
21:00 - uh
21:04 - i heard you say the
21:09 - customer
21:12 - will spend
21:16 - deal all the errors
21:18 - right
21:21 - okay
21:22 - and then we've got to do this one more
21:24 - time and then we're gonna be good
21:28 - so uh same thing here and what do we got
21:31 - um so total prospects
21:35 - how many
21:39 - prospects will you need to contact
21:44 - to
21:48 - get
21:49 - a single sale
21:53 - [Music]
21:55 - and then the user might just say
22:05 - a number in this case or
22:09 - [Music]
22:11 - maybe they'll say that with prospects
22:14 - [Music]
22:35 - [Music]
22:40 - okay
22:42 - and then we're gonna confirm this too
22:47 - so
22:48 - you'll
22:50 - contact
23:05 - is that right
23:12 - and then there we go okay so now um now
23:15 - we we have our dialog uh pretty much set
23:19 - up here let me show you the uh the json
23:21 - editor show you what's going on
23:23 - at this point so you can see here um
23:27 - that we've got our our slots with the
23:29 - samples and then we we've also got our
23:31 - dialogue down here and this is why i
23:34 - said this gets a little bit more uh
23:35 - confusing because there's a an id that
23:38 - goes with uh with each one of these
23:40 - which you can manually create
23:43 - but um
23:45 - i'm not
23:46 - going to do that which is why i'm using
23:48 - it from here and then you tie that id to
23:50 - the prompt that's
23:51 - going to come back for the confirmation
23:53 - so if you're using the
23:55 - dialog management
23:56 - you probably want to do that like i said
23:59 - through through here so we're just about
24:02 - done with this example except for um i'm
24:05 - gonna go back to my intent
24:07 - to the uh the sales goal intent here and
24:10 - um
24:12 - i'm going to what am i going to do let's
24:14 - con we're going to confirm that the
24:16 - intent itself so
24:18 - we just went through and we confirmed
24:20 - that we had the right value for each one
24:22 - of the slots
24:23 - now that we do we can confirm everything
24:26 - if we want to do that
24:27 - and
24:28 - i might say
24:29 - so
24:30 - your
24:32 - [Music]
24:33 - monthly goal
24:36 - is
24:44 - your
24:46 - average customer will
24:49 - spend
24:51 - [Music]
24:57 - and
24:58 - you'll contact
25:04 - total prospects
25:25 - we good
25:29 - all right
25:30 - so uh so now once we've gone through the
25:33 - entire dialogue at the end uh
25:36 - we're gonna confirm the intent with this
25:39 - here and so now i think we're probably
25:42 - done let's save that
25:44 - and build it and then we'll
25:48 - test it out
25:52 - so this is going to take a second here
25:57 - i'll read the questions as i'm going
25:58 - through here
26:09 - yeah i am that that's part of why i'm
26:11 - gonna split this out um
26:14 - bencat um
26:16 - i'm gonna do separate
26:18 - uh separate skills today rather than
26:20 - putting it all in the free code camp
26:22 - skill because
26:23 - yeah i saw that i saw that comment from
26:26 - you yesterday and i think that's uh
26:27 - probably a good comment it might be
26:28 - getting
26:30 - a little there might be a little bit too
26:31 - much going on in there so i will um i'll
26:34 - separate it out today
26:36 - especially for the next one persisting
26:38 - because um
26:39 - that will have some code this really
26:41 - doesn't have uh much code so
26:43 - not a big deal but i think we are ready
26:46 - to test let's give it a try
26:48 - um just need to enable testing first
27:12 - okay so i've got testing enabled now
27:15 - i'm going to just uh
27:17 - check i can't remember what i used for
27:19 - my
27:20 - invocation i think it was set my goals
27:22 - but let me just confirm that
27:36 - um
27:39 - i'll just try it
27:42 - alexa
27:44 - ask sales coach to set my goals
27:50 - what is your total sales goal for the
27:51 - month
27:53 - five thousand dollars
27:56 - i'm not sure what went wrong
27:57 - [Music]
28:00 - alexa
28:02 - ask sales coach to set my goals
28:06 - what is your total sales goal for the
28:07 - month
28:08 - five thousand dollars
28:11 - sorry something went wrong
28:14 - let's see what went wrong
28:25 - oh
28:27 - this is what went wrong
28:30 - i
28:31 - used the wrong this isn't set yet so
28:35 - let me change that
28:38 - [Music]
28:41 - not sure how i ended up doing that i
28:43 - thought i set that right but that is
28:46 - what's wrong
28:48 - let me just make sure i didn't do it on
28:49 - the other ones and then we'll rebuild
28:51 - this
28:55 - average customer that looks good
29:01 - total prospects
29:03 - that looks good
29:04 - so i have to build this again so it's
29:06 - going to take a second
29:27 - hey startup santana
29:29 - how are you doing today welcome back
29:34 - and loca hey
29:46 - all right
29:50 - almost done here building
29:55 - okay
29:56 - let's give it a try again
29:59 - alexa ask sales coach to set my goals
30:04 - what is your total sales goal for the
30:05 - month five thousand dollars
30:09 - so your goal for the month is five
30:10 - thousand dollars did i get that right
30:13 - yes
30:15 - how much will the average customer spend
30:19 - twenty
30:20 - dollars i heard you say the average
30:23 - customer will spend twenty dollars right
30:26 - right
30:28 - how many prospects will you need to
30:30 - contact to get a single sale
30:32 - 500.
30:36 - so you contact 500 prospects is that
30:39 - right
30:40 - that's right
30:42 - so your monthly goal is 5 000
30:45 - your average customer will spend 20
30:48 - and you'll contact 500 prospects we good
30:51 - we're good
30:55 - your endpoint received a request here's
30:57 - a breakdown the request type is intent
31:00 - request alexa stop
31:03 - so that response that i'm getting uh at
31:06 - the end there that is the response
31:08 - that's coming from that vui test tool so
31:10 - the the back end skill it's just like i
31:12 - said echoing back everything that it um
31:14 - that it heard or that it got from the
31:16 - request
31:17 - so you could see from this example
31:20 - that uh is
31:22 - a multi-turn
31:25 - dialogue using the dialog management so
31:28 - i didn't have to do anything to
31:30 - uh to in the code to do that so that's
31:33 - um
31:34 - that's one way of doing it the the other
31:36 - way of doing it is to actually look at
31:40 - the requests that are coming over
31:42 - and that is in the code and that is what
31:46 - we're gonna do
31:47 - next and i'm going to i just
31:51 - um i pushed out a template on skill
31:54 - templates i haven't
31:56 - published a tutorial or anything on it
31:57 - but i literally just pushed it out today
31:59 - for this example because i i hadn't done
32:02 - this example with the um ask
32:05 - 2.0 sdk yet so
32:07 - it's actually
32:09 - fumbling around with it for a little bit
32:11 - but i think i've got it all figured out
32:12 - now and so
32:14 - it's the um attributes starter template
32:18 - is the one that we're gonna
32:20 - we're gonna use so i'm going to um
32:24 - come over here
32:25 - and this one we're gonna do from code
32:27 - but i'm going to start with the
32:29 - the skill template and show you
32:32 - what's going on in there so
32:35 - let's
32:37 - let's go like this so we'll go um
32:57 - [Music]
33:08 - okay so it's this um this template right
33:10 - here the attributes starter
33:18 - and um
33:19 - a couple of a couple of things in here
33:22 - that i'll i'll go over so um
33:27 - for first of all the um the basic
33:29 - starter and if you just go um ask new
33:33 - it
33:33 - just uses the um
33:36 - the core sdk so uh there's uh the ask
33:40 - sdk
33:41 - dash core
33:43 - and for this to work you need to have
33:45 - the uh the full sdk so that's one thing
33:48 - that's different in the template this
33:49 - here
33:50 - so it's uh uh ask sdk
33:54 - and then
33:55 - what's gonna um what's gonna happen here
33:57 - and this is a variation of the basic
33:59 - starter template so uh the it's the same
34:03 - kind of flow where
34:04 - it is gonna ask
34:06 - you for your name
34:08 - and then um down here in when you
34:10 - respond uh when the user responds now
34:13 - here the uh the difference now is
34:16 - it's gonna use the um
34:20 - attributes manager
34:21 - to
34:23 - pull the attributes back
34:25 - so get the persisted attributes
34:29 - and also to save the attributes so
34:32 - what's happening here is the very first
34:34 - time somebody responds
34:37 - we get the name from the slot
34:40 - and
34:41 - in the model
34:43 - again it's the same model and everything
34:45 - as the uh the basic starter template but
34:48 - here's the um
34:50 - for the my name intent here's the sample
34:52 - so they can just respond with their name
34:54 - or steve is my name or my name is steve
34:57 - or i am so those are the examples so
35:00 - when that
35:01 - slot the value for that slot comes over
35:04 - the first time it's being set
35:08 - or being used as part of the speech text
35:10 - but if
35:12 - if it's not in the database so this is
35:15 - going to be persisted to dynamodb
35:18 - if it's not in dynamodb
35:20 - then we set the value of the an
35:24 - attribute
35:25 - called name value here
35:27 - and
35:28 - then
35:29 - we persist it back to the database and
35:31 - what wires that up to happen
35:35 - is
35:39 - this down here
35:41 - so this has changed also from the the
35:44 - the basic starter
35:46 - uses or if you just use like ask new as
35:49 - the starting point um i think that's
35:51 - called the greeter template
35:53 - it uses um
35:55 - custom here
35:57 - and uh so this is changed to standard
36:01 - and then you can add
36:03 - this
36:05 - with
36:06 - table name and this is going to be the
36:08 - name of the table that's created
36:11 - in dynamodb
36:12 - and you can change that to whatever and
36:14 - then with auto create is basically
36:18 - basically saying you know go out and
36:20 - create the dynamodb table
36:22 - the
36:24 - thing with that is you need to have
36:25 - permission to create the two actually
36:27 - let me show you the error and then i can
36:28 - uh talk through what's going on there so
36:30 - um
36:32 - uh so let's uh let's deploy this
36:35 - what is this
36:49 - so i'm pushing this out
37:15 - yeah venkat i can share this code too if
37:17 - you want i don't have this in a repo but
37:20 - actually i mean this exact one but i'm
37:23 - not changing anything from the skill
37:25 - template so you can grab it from there
37:30 - but
37:31 - setting up the permissions in lambda is
37:33 - um
37:37 - it's got to be done and i don't think i
37:38 - put that in the uh the readme
37:40 - on the skill templates template i need
37:42 - to do that
37:54 - i'm not sure if there will be a live
37:55 - stream of voice summit i hope there is
37:57 - um i'll i'll be there like i said so
38:00 - i'll try to live stream some if i can i
38:02 - hope
38:03 - i hope they're covering it i would i
38:05 - would guess that they are but i don't
38:07 - know that for sure
38:09 - uh
38:10 - okay so um now if uh let's go
38:16 - let's go back over here
38:29 - alexa
38:31 - attribute starter
38:36 - there was a problem with the requested
38:37 - skills response okay
38:40 - so um i've got attribute starter here
38:43 - but you can hear the the error that i'm
38:45 - getting and um i'll go through remember
38:48 - how we did testing a couple of days ago
38:50 - i'll go through that process again just
38:52 - so you can see how you would uh debug it
38:55 - i know what the error is because i run
38:56 - into it but i'll just step through the
38:58 - the process again here so if you go to
39:02 - test
39:04 - and
39:13 - and this is this is kind of the um the
39:15 - easiest way to to debug if you're just
39:18 - getting going but there's a lot lot
39:20 - better debugging processes and if
39:22 - anybody is uh interested in that the um
39:25 - check out be spoken tools they've got a
39:28 - really
39:29 - good set of tools for
39:32 - for testing and debugging
39:34 - but let me let me do this uh so open
39:50 - and you can see no output so we got an
39:53 - error there but i'm going to just copy
39:54 - the request
39:57 - and go
39:59 - over here
40:02 - to my my lambda functions and then
40:05 - here's the
40:06 - function that was created for the
40:07 - attributes starter
40:19 - hey khalid
40:22 - all right
40:23 - uh
40:24 - let's see so now um
40:27 - so i'm gonna set up a test event here
40:30 - and
40:32 - just paste in that request that i copied
40:35 - from the uh the developer portal and
40:37 - i'll just call this
40:39 - launch request
40:44 - and save it
40:47 - and then when i run the test here i get
40:49 - more information you can also look at
40:51 - the cloud watch logs like we did earlier
40:53 - but i like doing it this way it uh seems
40:55 - quicker than digging through the logs
40:58 - um and so in here if i look at the the
41:02 - error
41:03 - um i can see it's the dynamodb
41:06 - persistence adapters thrown in error and
41:09 - it could not create the table uh alexa
41:11 - data
41:13 - and
41:14 - this is um
41:17 - because the role doesn't have permission
41:19 - to do that so that's basically what's
41:21 - going on here so
41:23 - when the
41:25 - when the ask cli
41:27 - pushes out the lambda function it also
41:30 - creates
41:31 - a role for the function to run with
41:35 - and it uses i think by default the
41:40 - basic execution role as a template
41:43 - so in this case
41:45 - my basic execution role does not have
41:48 - permission to uh to create tables and
41:51 - dynamodb or any any of that stuff so
41:53 - what i'm going to do is i'm going to go
41:55 - to the role that was created for
41:58 - the
42:01 - attribute starter which is this here and
42:03 - you can tell because it names it the
42:04 - same thing and i'm just going to add
42:07 - permissions
42:09 - to uh allow it to create the the
42:11 - dynamodb table and i can do that by just
42:13 - going
42:15 - attach
42:17 - policies
42:20 - and
42:22 - this is loading here but i'm going to
42:24 - find
42:26 - the the
42:27 - dynamodb if you just searched
42:34 - and
42:40 - i think for this i need the full access
42:44 - so
42:46 - i'm going to add full access
42:49 - i could prob i could probably like
42:52 - modify this this is probably more
42:54 - permission than it needs it but um
42:59 - for this i'm gonna go ahead with it
43:03 - okay so now that i've uh now that i've
43:06 - provided permission
43:08 - i should be able to uh to try this again
43:13 - so alexa open attribute starter
43:17 - i'm not sure
43:23 - alexa
43:25 - open attribute starter
43:29 - hello there what is your name
43:31 - steve
43:33 - sorry i can't understand the command
43:36 - please say again
43:38 - steve
43:39 - oh you know what
43:42 - hello what it's nice to meet you
43:46 - okay um
43:49 - alexa
43:51 - open attribute starter
43:54 - hello there what is your name steve
43:58 - i remember you you told me your name was
44:00 - what
44:02 - so you can see what the code's doing
44:04 - here is it's um
44:08 - it's saving the what the user says the
44:11 - first time
44:13 - uh back to the uh the dynamodb
44:15 - uh source that was created and let me
44:17 - show you that actually too
44:19 - how we do it oh yeah we're good on time
44:22 - um so
44:25 - if i go to dynamodb here
44:45 - and go to tables
44:50 - and so there
44:51 - there's the table that was created there
44:55 - and if you go to items
45:03 - you can see there's just this one record
45:05 - that was created here
45:10 - and somebody was asking me on the um i
45:12 - think on the alexa slack channel
45:14 - yesterday or recently
45:16 - uh how the
45:19 - how the records are associated with the
45:21 - users and the answer is this
45:23 - there's a unique
45:24 - user id
45:26 - value that is
45:29 - uh the
45:31 - associated with the the amazon account
45:33 - that's set up for
45:35 - the device
45:36 - i believe i don't think it's unique to
45:39 - the user if there's multiple users but
45:41 - i'm not 100 sure on that but uh anyway
45:44 - it's that id that allows us to tie
45:48 - the information back so if the next
45:50 - person comes in that's using a different
45:52 - device or a different account and does
45:54 - the same thing
45:56 - then they would of course get you know
45:58 - whatever value they set
46:00 - and you can see the value here the
46:02 - property um that was set what
46:06 - if i change that here
46:08 - [Music]
46:10 - to steve
46:11 - try it again
46:14 - alexa open attribute starter
46:18 - hello there what is your name
46:20 - steve
46:22 - i remember you you told me your name was
46:25 - steve
46:26 - yeah so it so it's pulling it here like
46:29 - like you can see from the uh
46:31 - the um dynamo back end and it's pretty
46:35 - easy to uh to wire up uh it's the
46:39 - ask sdk 10 was a little bit easier or it
46:43 - was literally like one line so i had to
46:45 - fumble
46:46 - around a little bit to uh to get it
46:48 - working with the 2.0 but i'll um just
46:52 - walk through that again now all the code
46:54 - is in now in the attribute starter and
46:56 - the um skill templates but
46:58 - you need the the full sdk first of all
47:02 - um
47:03 - and then
47:04 - the
47:05 - second main thing and this is what
47:08 - stumped me the longest is
47:11 - um
47:12 - this by
47:13 - in the other examples like if we look in
47:16 - to probably even this one
47:19 - but any of the other templates that i've
47:20 - looked at this is
47:23 - custom here and so to to use that that
47:27 - needed to be changed to uh standard
47:29 - and then um this with table name
47:34 - and then with auto create table and
47:37 - with that all wired up then you can use
47:39 - the
47:40 - uh like i said earlier
47:42 - the um
47:44 - uh persistence manager attributes
47:47 - manager
47:48 - it to uh to manage the um the the values
47:52 - to pull them back out of the back end
47:54 - and to uh to save
47:56 - and there's now there's
47:58 - now
47:59 - an adapter that you can use so you can
48:01 - persist data or not an adapter but with
48:03 - the persistence manager you you can
48:05 - persist data to
48:06 - um sources other than dynamodb also
48:09 - which i haven't done yet myself i plan
48:12 - to play around with that so maybe you
48:14 - want to save it to like my sequel or
48:16 - couchdb or or or something like
48:19 - that
48:20 - and that is an option now using this but
48:23 - i haven't tested that out
48:26 - but um i think that is pretty close to
48:30 - what i wanted to cover for this for
48:33 - attri for saving attributes so we've
48:34 - talked about let's see where we are we
48:36 - talked about the
48:39 - multi-turn dialogues
48:41 - check um data persistence
48:44 - uh
48:46 - we did that demo and then the skill
48:48 - certification process um like i said
48:50 - we're not going to submit the
48:52 - uh the free code camp skill today but
48:57 - let's go take a look at that
48:59 - just got a couple more minutes here so
49:05 - what we would do
49:07 - in
49:07 - the in the process
49:16 - um so
49:18 - if
49:20 - not if i'm hoping when uh we submit this
49:22 - free code camp skill um once we've gone
49:26 - through it and we've tested it and
49:28 - retested it ourselves and gotten some
49:30 - beta testers and gotten feedback and
49:33 - everybody says this is great let's
49:36 - publish it out for the world to enjoy
49:39 - then
49:39 - you would go over here to
49:41 - the distribution
49:51 - and
49:56 - and make sure that you've got everything
49:58 - filled out here and we looked at this is
50:00 - all
50:01 - in the skill manifest the
50:04 - skill manifest so skill.json which is
50:11 - here it's all this information but you
50:13 - want to make sure that this is uh this
50:14 - is all filled out um the example phrases
50:19 - your icons are set your category is set
50:22 - you probably want some uh some keywords
50:24 - here i don't know if they're required or
50:26 - not uh but uh you probably want to have
50:28 - those
50:29 - definitely the privacy urls and the
50:31 - terms url i know
50:33 - i'm almost positive the privacy url is
50:36 - required i'm pretty sure terms are also
50:40 - and then
50:43 - you'll need to answer these privacy and
50:45 - compliance questions here
50:48 - so does the skill allow users to make
50:51 - purchases or spend real money and in our
50:53 - case no
50:54 - does it collect personal information no
50:57 - is the skill uh directed or targeting
51:00 - children no in our case
51:02 - um although there's some smart kids out
51:04 - there that are coding so
51:06 - maybe they would want to
51:08 - check out free code camp um does the
51:11 - skill contain advertising and no and
51:13 - then there's the export compliance here
51:15 - and then for the testing instructions
51:18 - unless there's something specific in
51:20 - there you need to do i usually just say
51:21 - no special
51:24 - instructions
51:27 - and then save and continue
51:31 - and then
51:32 - here who should have access to this
51:34 - skill
51:36 - public is the world you can also publish
51:39 - skills for an organization
51:41 - through alexa for business and then
51:46 - you select where you want the skill to
51:48 - be
51:49 - available so the
51:51 - you wanted to select specific countries
51:54 - you would just select the countries or
51:57 - regions that you wanted available and
51:58 - alexa is not available in all these
52:00 - regions yet but
52:02 - i'm sure it's not far off so you want to
52:05 - go ahead and select the uh the regions
52:07 - that you want and then save and continue
52:09 - and then um the the process
52:13 - it really um depends on a few things but
52:16 - um you know how complex the skill is and
52:18 - some other things but the process
52:19 - has been pretty quick in my experience
52:22 - um a few days maybe and
52:24 - uh
52:25 - if you do get um
52:28 - rejected for or don't pass certification
52:31 - for any reason
52:32 - the the the information that you get
52:34 - back is pretty clear so
52:36 - it's really pretty quick to uh to
52:39 - resolve the problem if there is a
52:40 - problem
52:41 - and the last thing that i'll show you
52:43 - and we are running up on our
52:46 - time is the analytics and because we um
52:51 - i had sent this out uh to uh for beta
52:54 - testing we've got some um we've got some
52:56 - analytics in here so over the last seven
52:59 - days there's been 53
53:01 - sessions and 162 utterances probably a
53:04 - lot of those are mine during testing but
53:07 - i can see um you know a breakdown of
53:09 - which intents are or called and um
53:13 - yeah get uh
53:15 - you get some some good metrics back on
53:18 - you know what's
53:20 - being used and and what uh
53:23 - what the users are
53:26 - most interested in and or using most in
53:29 - terms of the uh the intents
53:32 - and i think that is
53:35 - gonna cover it that is our uh that is it
53:38 - for today any questions let me
53:41 - look down here
53:45 - how many alexa related slack channels
53:47 - are there um
53:49 - there's really just one that uh
53:53 - that i am
53:55 - familiar with or i go to and it's
53:57 - alexisslack.com
54:01 - and it's pretty active
54:04 - let me see
54:06 - let me just pull it up here
54:08 - yeah this is it actually here it's um
54:11 - it's pretty active uh and uh so this is
54:14 - the one that i uh i monitor
54:16 - and um i am steve t
54:20 - here so if you uh if you have any
54:23 - questions and or
54:25 - thoughts and you want to direct them to
54:26 - me this is this is the one that i'm
54:28 - looking at
54:32 - let's see
54:35 - any other questions before we wrap it up
54:37 - and get ready for the weekend
54:46 - let's see
54:50 - okay it looks like it looks like that's
54:53 - it
54:53 - well hey thanks so much everybody i i
54:56 - hope this was um useful and valuable to
54:58 - you if uh if you have any other um
55:01 - questions after the
55:03 - the live cast is done you can leave
55:04 - those on the youtube channel um we also
55:08 - have uh if you're not subscribed to the
55:10 - data lab youtube channel we've got um i
55:12 - try to do like
55:14 - a new video once a week it's not always
55:16 - once a week but um uh at least a few
55:19 - times a month so if you go to youtube
55:22 - i'll pull it up real quick
55:28 - uh slash dabble lab and the tutorials
55:31 - that i'm working on right now are mostly
55:33 - updating the ones that were already out
55:35 - there for the 2.0 sdk and i've got i've
55:39 - got three or four of them that i'm just
55:40 - about done with that i'm going to start
55:42 - publishing pretty quickly here
55:44 - and if you're
55:47 - just getting going with this stuff
55:48 - there's um
55:51 - beginning node.js for alexa development
55:53 - kind of gets into the node in javascript
55:55 - topics
55:57 - uh which
55:58 - is sort of in the context of developing
56:01 - alexa skills but
56:03 - again i'm pushing stuff out here trying
56:05 - to uh to do that like once a week and uh
56:09 - and yeah in the last thing is uh
56:13 - skilltemplates.com
56:14 - if you go over here this is um this
56:18 - these are
56:19 - really
56:20 - mostly like starter templates and what i
56:22 - what i'm trying to do with
56:23 - skilltemplates.com is put examples out
56:26 - that are not not super complicated that
56:29 - are really kind of focused on you know
56:31 - one learning ideas so some of the um the
56:35 - i really the
56:37 - templates that are the examples uh that
56:39 - amazon provides are
56:41 - really good and thorough but
56:43 - sometimes they can get pretty complex
56:45 - especially if you're just getting
56:46 - started so my
56:47 - my goal with these templates is to make
56:50 - them as simple as possible and you can
56:52 - subscribe here to to get updates when
56:55 - there's new templates
56:56 - published and i'm trying to do a video
56:58 - with each one of the templates i haven't
57:00 - i haven't done that yet
57:02 - and uh and yeah last thing if you're
57:04 - going to uh to the voice summit or you
57:06 - want to go to the voice summit go to
57:08 - voicesummit.ai and um
57:10 - hit me up on slack or um
57:13 - youtube or twitter and let me know that
57:16 - you're going i'd love to connect and say
57:18 - hello in person
57:20 - thanks so much again i hope you enjoyed
57:22 - and have a great weekend
57:47 - you