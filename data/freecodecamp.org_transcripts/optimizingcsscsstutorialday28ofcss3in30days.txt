00:00 - good day everybody welcome back to css3
00:02 - in 30 days today is day number 28 and
00:04 - instead of coding in this lesson we're
00:06 - going to spend a little bit of time
00:08 - talking about optimizing your css3 good
00:12 - clean code is always a great idea here
00:14 - are some hot tips on optimizing your
00:17 - css3 first of all code better you got to
00:20 - do the work right the first time don't
00:22 - rely on optimization tools to make you a
00:25 - good css3 coder as i always like to say
00:29 - crap in crap out that simply means if
00:32 - you are putting something terrible into
00:34 - the machine something terrible will come
00:36 - out no matter how much you prettify or
00:39 - optimize or compress
00:40 - the darn thing if you're doing a bad job
00:43 - in it's going to be a bad job coming out
00:45 - so remember crap in crap out when coding
00:48 - your css use shallow selectors instead
00:51 - of really long and messy redundant
00:53 - selectors and that simply means if you
00:55 - can select simply the id of awesome
00:58 - don't select div
01:00 - paragraph tag span m id of awesome
01:05 - just simply using the id of awesome is
01:08 - good enough that in and of itself is
01:10 - smart css3 coding utilize good code
01:14 - organization so instead of when you have
01:16 - an idea for a style just throwing it at
01:18 - the bottom of your css style sheet
01:21 - find out where a good place for that
01:23 - piece of code is and a nice little tip
01:27 - is put a table of contents in a comment
01:30 - up at the very top of your style sheet
01:32 - if you have a really big and heavy css
01:34 - style sheet have some organization and
01:37 - have a way that you in the future can
01:39 - revisit your code or if you're handing
01:41 - off the project to somebody else they
01:43 - can see what the heck you were doing use
01:46 - shorthand where possible so instead of
01:48 - margin top 20 pixels margin right 20
01:51 - pixels margin bottom 20 pixels margin
01:54 - left 20 pixels just say margin 20 pixels
01:58 - and treat your css 3 like it is art
02:02 - it's not just letters in a code editor
02:06 - it's your art it's your craft it's what
02:08 - makes the web run or at least it what
02:11 - it's what makes the web look good so
02:14 - treat it like it is art because
02:16 - arguably it is
02:18 - hot tip number two validate your code
02:21 - sometimes the smallest error in your
02:23 - code can cause the biggest headache so
02:25 - be smart and use one of those free and
02:27 - awesome tools out there like this one
02:29 - it's just cssportal.com css dash
02:32 - optimize all you got to do is google css
02:35 - optimizer or optimize your css there's a
02:37 - lot of tools out there this is one that
02:39 - i found and i'll just show you real
02:40 - quick how it works so i have some css
02:43 - here queued up i'm just going to hit
02:44 - paste
02:46 - relatively short css file but what i'm
02:49 - going to do is i'm going to optimize it
02:51 - by compressing it
02:53 - and choosing different settings here in
02:55 - the tool so standard let's see let's
02:57 - make it
02:58 - let's start here highest no readability
03:00 - smallest size if you have a production
03:03 - ready style sheet that you want to have
03:06 - ready to go then you can have it at its
03:08 - highest compression because you don't
03:09 - need to be able to read it and modify it
03:11 - that's for developers only when you want
03:12 - to be able to
03:14 - see all your code easily see the
03:16 - organization the table of contents the
03:17 - comments everything like that
03:19 - production ready live sites you don't
03:22 - really need to have it be that readable
03:24 - so i'm going to say highest this option
03:27 - preserve css you can save the comments
03:29 - hacks and so on and so forth by default
03:30 - they have it turned off i would keep it
03:32 - off for now if you're having it be
03:33 - highly compressed you can sort the
03:35 - selectors it says use this with caution
03:37 - it may change the behavior of your css
03:38 - code because it's not a perfect tool
03:41 - sorting properties you can even sort the
03:43 - properties by i don't know what method
03:45 - they're sorting them but you can test it
03:47 - out and see what it does or you can
03:49 - leave it off
03:50 - you can also regroup selectors
03:53 - optimize shorthands all of these sorts
03:55 - of things are things that you can do
03:56 - better by
03:58 - coding better in the first place so my
04:00 - first tip was code better
04:02 - that saves you from having to sort your
04:04 - selectors and sort your properties just
04:07 - code properly so that you're not putting
04:08 - crap into the machine so it's gonna spit
04:10 - crap out that's why it has cautions
04:13 - optimize shorthands you can do safe
04:15 - optimizations or all optimizations some
04:17 - shorthands may be a little bit buggy so
04:19 - that's why you can use safe
04:20 - optimizations
04:22 - compress colors uh if you're using the
04:25 - the color pound three three three three
04:27 - three three you could simply say pound
04:29 - three three three and that's what this
04:31 - is going to do compressing font weights
04:33 - that will help you save some keystrokes
04:35 - or at least some kilobytes in your css
04:38 - file
04:39 - lowercase selectors this says it's
04:42 - lowercasing the element names for html
04:44 - xhtml but nobody cares about xhtml
04:46 - anymore so don't worry about that and
04:48 - any other elements here like remove
04:50 - unnecessary backslashes or remove the
04:52 - last semicolon little tip is in your
04:55 - code you don't actually have to have
04:58 - a semicolon on your last style so for
05:01 - example here
05:03 - in this entire selector final shadow
05:05 - typo right here this one doesn't
05:07 - actually need a semicolon but i always
05:10 - do it by default because i don't want to
05:11 - get into the habit when i'm writing
05:13 - vanilla css
05:14 - to forget the semicolon but in your
05:17 - production ready site
05:19 - and you're compressing your code you can
05:22 - have at it
05:23 - you can discard invalid properties and
05:24 - add a time stamp for when it was
05:26 - optimized up to you process that css
05:28 - lets you know what when what went on so
05:30 - it's saying uh if you're because i'm
05:33 - using css3 it's not it doesn't know
05:35 - what's going on so what i can do down
05:36 - here if i didn't want
05:39 - invalid properties i can discard them
05:40 - but i actually want them because i'm
05:41 - using css3 so here is the output right
05:44 - here this is one line so i'm going to
05:46 - copy that
05:49 - and show you what that looks like so
05:50 - this is the the the original file and
05:53 - this is what it would look like
05:56 - compressed
05:57 - that's it
05:59 - crazy
06:01 - it almost seems too short but that's
06:02 - that's what it is so right here i have
06:04 - about 39 lines of css right here i've
06:06 - got technically one line it's just one
06:08 - really long line so and that's all the
06:11 - browser will load so that's both
06:13 - validating and compressing it's letting
06:14 - you know any sort of messages here that
06:16 - you might need to know so that is a neat
06:18 - little tool the other thing which we
06:20 - just did was compress your css so when
06:22 - you're developing you want that css to
06:24 - be highly readable and easy to navigate
06:26 - with your comments the spacing the
06:28 - organization your table of contents the
06:30 - hacks and everything like that
06:31 - instructions for developers or
06:33 - co-developers but in like i said those
06:35 - production ready sites like a live
06:37 - client site or a live application web
06:39 - application you don't need all of that
06:41 - stuff because
06:42 - who's going to be reading that other
06:44 - developers who click developer inspect
06:45 - tools and read your css that's really it
06:48 - so in those live sites you don't need
06:51 - all of the all the organization all the
06:54 - comments and everything like that
06:56 - so
06:57 - what you can do a little tip is have a
07:00 - developer
07:01 - css file that is your let's call it
07:04 - app.css
07:06 - and then you have a folder called
07:07 - production and then in there you have
07:10 - another app.css the productionapp.css
07:13 - is the file that you would use to
07:17 - load that
07:18 - when you're doing the live site but when
07:20 - you're developing on the server you just
07:22 - simply use your developer version now to
07:24 - show you how you can kind of do that
07:27 - let's uh let's do an example here so
07:29 - codekit is one of my favorite developer
07:31 - tools codekit is a paid application
07:33 - there's a free trial uh it's
07:35 - codekitapp.com i highly suggest you
07:38 - support this guy it's just a single dude
07:40 - i don't know if he's single or not he is
07:42 - just a developer who builds an awesome
07:46 - tool called codekit i truly love it it's
07:49 - only like 30 bucks you can actually pay
07:51 - what you want anywhere between you know
07:53 - 25 and 35 bucks or whatever it is
07:56 - so i would recommend supporting him
07:58 - codekitapp.com
08:00 - basically this is like an all-in-one
08:02 - compression
08:03 - output developer tool
08:05 - you can you can do a ton with it but in
08:07 - a very basic way you can optimize your
08:10 - css
08:11 - and even compress images and do
08:13 - everything like that and have it
08:14 - automatically output into a folder that
08:17 - you want so for example i have a
08:20 - folder here called theme styles
08:23 - and then a couple
08:25 - css files here i can actually say output
08:27 - style compressed i can choose how i want
08:29 - it to be compressed
08:30 - and
08:31 - i can change the path so
08:34 - let me say i'm going to create a new
08:36 - folder called
08:37 - production like we just talked about and
08:40 - it's going to say
08:43 - the min
08:45 - production.css you can call whatever you
08:46 - want but i'm going to say
08:48 - this it's going to take that file and
08:50 - it's going to
08:51 - you know turn it into
08:53 - something when i hit process boom
08:56 - it's going to do that it compiled so in
08:58 - here now we have a production file
09:01 - called thememin production.css let's
09:02 - check it out
09:04 - so it's got all of the css
09:06 - that was in the original
09:08 - theme css
09:10 - so all of this
09:11 - is now compressed but i'm not
09:13 - overwriting this it's just got another
09:15 - file now the magic of this is i can have
09:18 - it run automatically
09:20 - when this file changes or builds so it's
09:22 - checking this file when it changes
09:24 - re-output so as a little example if i
09:26 - just delete everything and just say body
09:29 - font size 12 pixels and leave it at that
09:31 - and save
09:33 - it's going to re-output
09:35 - it just processed it and now that file
09:38 - is that
09:39 - so it automatically happens so you don't
09:41 - need to resave copy and paste take it
09:42 - down do this that and all the other
09:44 - things and i'm just going to change that
09:45 - back because that was a very important
09:47 - file so i'm going to go back hit save
09:49 - it's going to compile bam everything is
09:51 - back
09:52 - there we go so i would highly suggest
09:54 - using codekit for those production uh
09:56 - for deving and then needing production
09:58 - ready files you can optimize
10:00 - a ton of stuff
10:02 - but because this is css we're just going
10:03 - to talk about that the other thing that
10:05 - you can do is preload your css in the
10:08 - browser so
10:09 - uh you can improve the performance and
10:12 - the loading time of your styles on your
10:14 - websites by simply adding the following
10:17 - code link preload href and whatever your
10:20 - css is as styles so you're basically
10:22 - using the rel attribute to tell the
10:24 - browser to preload this file as a style
10:27 - and it will just check a little bit
10:29 - earlier and load that style up so
10:30 - there's less waiting time other thing
10:32 - you can do is lighten up those
10:34 - frameworks so bootstrap and other
10:37 - similar frameworks are notoriously heavy
10:39 - meaning that there are a lot of files
10:41 - functions assets and code that you
10:43 - simply do not need in the website maybe
10:46 - you're just using the framework for like
10:48 - the grid or button styles or base styles
10:51 - if that's the case for you then when you
10:54 - download the framework either remove
10:56 - everything except what you plan on using
10:59 - or just download specific files from the
11:02 - framework that you need
11:03 - load it up into your website your
11:05 - application and make that will make the
11:07 - resources quicker to load instead of
11:09 - using all of bootstrap you can just use
11:11 - this part of bootstrap that you actually
11:13 - need one last thing that i want to leave
11:15 - you with is learn a pre-processor
11:17 - language now i do have a course on sas
11:19 - you can check that out afterwards but
11:22 - you need to take advantage of a css
11:23 - preprocessor like sas or less and
11:26 - they'll not only save you coding time
11:28 - but they'll give you more flexibility
11:30 - when it comes to styling and you can
11:31 - export highly optimized images and
11:33 - create production-ready sites and
11:35 - applications uh but it's a really nice
11:37 - tool to know
11:39 - when coding i'm here coding vanilla css3
11:42 - and while it's great i'm
11:44 - spending a lot of time typing things
11:46 - that i don't need to type if i'm using a
11:48 - preprocessor i won't talk too much about
11:50 - that but i'd highly suggest checking out
11:53 - my course learn sas so those are my tips
11:56 - for optimizing that css code better
11:59 - validate compress
12:01 - preload lighten up those frameworks
12:04 - learn a preprocessor language and check
12:06 - out tools like codekit css optimize
12:10 - and i put a resource in the
12:13 - in the file in day number 28 called
12:15 - shorthand properties teaches you a
12:16 - little bit about using shorthands and a
12:19 - little bit of
12:20 - of how to improve your
12:22 - css coding so thanks for spending a
12:26 - little
12:27 - 15 minutes or so learning a little bit
12:29 - of theory and why you should optimize
12:31 - your css see you tomorrow in day number
12:33 - 29.
12:34 - [Music]