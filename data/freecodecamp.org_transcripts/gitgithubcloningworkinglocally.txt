00:00 - Alright, so we've talked about Git and
GitHub, we've talked about how to use
00:04 - GitHub and how to introduce changes to
projects but we haven't really talked
00:09 - about how you would actually work on
those projects on your own computer in
00:13 - your own text editor or IDE. To do that,
you need to clone the repository. Now,
00:19 - we've talked about branching, we talked
about forking, so those are kind of ways
00:23 - of making copies of code. When you
clone you're also making a copy of the
00:29 - code. But first, let's talk about what
working locally means. When you're
00:34 - working on github.com you're working
totally on what's called the remote
00:39 - repository but part of what's cool about
Git is that it's distributed which means
00:45 - you can have a copy of the entire
project on your own computer with no
00:49 - network connection and continue your
work. But to do that you have to work
00:53 - locally on your own machine. When you
clone you can do it easily from github.com
00:58 - either in an IDE, in GitHub desktop
app, or using the terminal. That brings
01:06 - down a copy to your local computer you
can still communicate with the remote
01:10 - repository that will still be stored on
github.com. You'll have to sync these
01:15 - changes manually, they don't happen
automatically, and also you should know
01:20 - that your co-workers your colleagues are
also communicating with the remote
01:25 - repository so when you push up changes
from your local copy of the repository
01:31 - when you push those up to GitHub
someone else can pull those changes to
01:35 - their own local environment and see your
changes or continue work. So just to
01:40 - recap when you want to bring repository
down and work on it in your own
01:44 - development environment, you'll clone the
repository.