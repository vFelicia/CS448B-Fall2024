00:00 - hey guys welcome to this series on how
00:03 - to make a youtube playlist app using the
00:06 - youtube api
00:09 - okay guys so here we have the app that
00:11 - we're going to be creating today simple
00:13 - youtube playlist app that pulls in all
00:16 - the information using the youtube
00:19 - api
00:21 - including these thumbnails here the
00:23 - title description
00:24 - uh even the video
00:26 - so basically what it does
00:28 - is i've created a playlist here on my
00:31 - youtube channel
00:33 - and the link for
00:35 - all the stuff i give you links for all
00:36 - will be in the description
00:38 - um and there's 12 videos in here
00:42 - so
00:43 - this playlist
00:45 - uh
00:45 - will be pulled into our app you can see
00:48 - the order is the same in our app here
00:51 - i always pulled in using the youtube api
00:54 - right
00:56 - cool so let's get started so the first
00:58 - thing we want to do
01:00 - uh we probably want to create a central
01:02 - div here in the middle where it's white
01:05 - and then this div is
01:08 - built into sections
01:10 - so there's a header another section and
01:12 - the main bit
01:14 - um so let's build that section
01:17 - so jump into youtube into codepen
01:20 - um first thing i just want you to check
01:22 - that you have
01:23 - a few things
01:25 - ready
01:26 - so jump into the settings cog at the
01:28 - side of the css
01:30 - and make sure you have normal eyes and
01:33 - auto prefix on
01:35 - these will just help
01:36 - your uh the app
01:38 - just look the way it should in different
01:40 - applications
01:42 - save and close that and we're ready to
01:44 - go
01:45 - so
01:46 - let's create uh
01:48 - this central div
01:50 - and we're using emmet again so instead
01:52 - of writing
01:53 - div div with a class equals
01:56 - container etc
01:58 - we're just going to say dot container
02:01 - and hit the tab button
02:03 - and there we go it's written the div out
02:05 - for us
02:07 - so inside the container
02:09 - we have the header where the logo sits
02:12 - so we can just say
02:13 - header
02:14 - tab
02:16 - and we have a section where the video
02:19 - sits so we're going to say section
02:22 - then we're going to say
02:24 - video
02:25 - and hit tab
02:27 - and emmet
02:28 - has given us a section
02:30 - um
02:31 - tag
02:33 - because we just said section there was
02:34 - no dot or hash in front of that
02:37 - but then we followed it with hash
02:40 - video so that said hey
02:42 - the id is going to be video because
02:44 - hashes id
02:46 - then we're going to have a main section
02:48 - right where all the uh all the list type
02:52 - items are so
02:55 - let's start
02:57 - by
02:57 - [Music]
02:58 - giving the background its color so body
03:02 - we want a background
03:04 - a color
03:07 - of eee so very
03:10 - slightly darker white basically
03:14 - that's because our container
03:18 - um is white so let's um give it a width
03:22 - of
03:23 - 560 pixels
03:26 - uh let's give it a height of
03:29 - 100 view hey of viewport high vh
03:33 - right and what that means is
03:36 - all the visible area of the screen so
03:38 - not when you scroll down or sideways
03:40 - this is the viewport this is what you
03:42 - can view so 100 vh is 100 of the screen
03:46 - and vw is view width so that's 100
03:49 - widthways
03:51 - right we still can't see it so let's
03:53 - give it a background color
03:57 - background color of
03:59 - hash ffff so that's the same as saying
04:01 - hash
04:02 - f free time i have six times are writing
04:06 - white
04:07 - so now we can see we've got a little bit
04:09 - of a bit of a block here on the left
04:12 - let's put that down the middle by saying
04:14 - margin
04:15 - we want zero margin at the top and
04:17 - bottom
04:18 - but on the left and right we want it to
04:20 - be the same so that would center it
04:22 - because they have to be the same so
04:23 - that's auto
04:25 - cool
04:27 - so the next thing we should do is
04:29 - probably let's put this logo in here
04:31 - right
04:32 - so um i'll have the link
04:35 - uh
04:36 - to the logo in the description i'm just
04:38 - gonna copy it here
04:40 - um so we're going to say img because we
04:43 - use an emmet
04:45 - we want it to have a class so
04:49 - dot logo
04:51 - this is so in the css we can change it
04:54 - then hit tab
04:56 - we want then to fill out the src
04:59 - with
05:00 - the actual
05:02 - location of the image
05:05 - so here's the location for me
05:08 - and it's a bit too big
05:10 - so
05:11 - let's change that let's go to logo in
05:14 - the css
05:16 - let's change it to
05:18 - width
05:19 - 120
05:23 - all pixels that's cool so that's getting
05:25 - better
05:26 - but if you notice
05:28 - on here when we scroll up
05:32 - this and the header the video on the
05:34 - header stays in the same place
05:37 - right
05:39 - and if we did that now you can see the
05:42 - youtube is disappearing
05:44 - so let's fix that before we go any
05:46 - further so
05:48 - i'm just going to go above the logo and
05:50 - say yo
05:53 - header tags
05:55 - i want you to stay fixed to the top so
05:59 - we say position
06:02 - fixed
06:04 - right
06:05 - doesn't look like it did that much but
06:07 - if i scroll now
06:08 - and i'm scrolling you can see the scroll
06:10 - bar here
06:11 - it's staying where it is
06:13 - right okay so
06:15 - let's make this
06:17 - image central send centralized
06:20 - we can do that by saying text
06:23 - align
06:26 - center
06:28 - right
06:32 - he says
06:36 - ah
06:37 - so we need to give it
06:39 - so it's centered so if i go
06:42 - background
06:43 - color
06:45 - red
06:47 - you'll see the actual background of it
06:50 - is only a small amount and we want it to
06:52 - be the full width
06:54 - right so we want it to be also 560
06:57 - pixels
06:58 - because when you make something fixed
07:01 - you're taking out the floor of the
07:02 - document
07:03 - so normally with a div you go header
07:06 - main
07:07 - and it'll carry on going down the page
07:09 - one after another
07:10 - what fixed has done is it's taken out
07:12 - that flow
07:13 - and it's just saying hey i'm just going
07:15 - to stay at the top because you told me
07:17 - to
07:18 - so
07:19 - with that
07:20 - it has
07:22 - got rid of its width that it would
07:24 - inherit
07:25 - from the container it was in right
07:27 - so anything you'd inherit
07:30 - has got rid of so width
07:33 - 560 pixels
07:36 - and now that texture line works look if
07:38 - i take that off
07:40 - it goes across there
07:42 - because now it knows what width it has
07:45 - right that's good for now
07:47 - so
07:48 - let's put in
07:49 - that video right
07:53 - and
07:54 - the way you can get this video
07:57 - embedded you can do straight from
07:59 - youtube
08:00 - if i jump into youtube this is our
08:02 - playlist
08:03 - and i click on one of the videos and
08:05 - this is with any video right
08:08 - you go down here to
08:10 - let's zoom in a little bit uh share
08:14 - and click on that
08:16 - you'll see this embed
08:19 - and this is the whole link this is the
08:21 - whole code even to what we need so you
08:24 - can copy out there
08:26 - or i'll link it as well or whatever
08:28 - video you want
08:30 - and we can just basically inside this
08:33 - section of the id of video we can just
08:36 - paste that in there
08:39 - right but it looks a little bit funny
08:41 - right so
08:42 - the video is scrolling and we don't want
08:44 - that to happen
08:46 - and
08:47 - this
08:48 - header
08:50 - is
08:51 - kind of sitting on top of it
08:53 - so why don't we
08:55 - make this section the section
08:58 - uh the same position fixed as the header
09:01 - well it also needs the width
09:04 - the text line doesn't really matter to
09:06 - it so why don't we just tag on to here
09:08 - by saying call on section
09:11 - so now these have both the same things
09:13 - going on
09:14 - and then i scroll the video stays there
09:18 - but you can see that
09:19 - now the header has disappeared
09:21 - underneath it
09:23 - because
09:24 - in the html the section has come after
09:26 - the header so it says well we're the
09:28 - same we're both fixed
09:30 - the hierarchy is the same
09:33 - but i actually come lower down than you
09:35 - in the html so i'm going to sit on top
09:37 - of you
09:38 - so the way we can fix that
09:41 - is say
09:42 - okay header
09:44 - sorry okay section
09:48 - we actually need you to start lower down
09:51 - the page
09:53 - so we want you to at the top be 50
09:56 - pixels away from the top
09:59 - and there we go just let it breathe a
10:01 - little bit
10:02 - how about we give some padding to this
10:05 - youtube logo so let's go to dot logo and
10:08 - say padding
10:11 - 10 pixels
10:13 - and it actually has 10 pixels on the
10:14 - left and the right as well but it
10:16 - doesn't affect it so we're going to
10:17 - leave it saves us writing out like zero
10:20 - pixels here right it's the same thing
10:23 - we don't need it
10:24 - so 10 pixels
10:26 - looking pretty good i scroll and it
10:28 - stays where it stays where it is right
10:30 - that's important
10:33 - okay so now on to the main section
10:36 - what we want to do here is
10:40 - we need an image
10:42 - and
10:43 - the details
10:45 - so we could probably fit these in just
10:46 - one container and split this container
10:48 - too right so
10:50 - we're going to do that very semantically
10:53 - jump into our html
10:55 - and we're going to
10:57 - create an article
10:59 - and hit tab
11:00 - an article is just a very semantic way
11:03 - of basically saying
11:05 - this is kind of the main container of
11:07 - what holds our content you can use in
11:10 - different ways but
11:11 - for this where we're going to use
11:13 - multiple articles so we know what they
11:15 - are they're an article right so
11:18 - what we need to do with the article then
11:20 - we need to give it
11:21 - two things it needs an image so img
11:26 - with a class
11:27 - of thumb
11:29 - hit tab
11:32 - and
11:33 - we're gonna fill in that source
11:35 - uh
11:37 - i've got a link here i'll leave you the
11:39 - link in the description
11:41 - and put that right here in the sauce
11:47 - and
11:49 - now you see a problem
11:51 - we'll carry on
11:53 - we also want a container
11:56 - a div with a class of
11:59 - i don't know details
12:01 - hit tab
12:04 - and then this
12:06 - div will have
12:08 - h4 that's going to hold our title
12:13 - and the p so the p tab and that's going
12:15 - to be our description so
12:17 - i am a description
12:22 - right
12:23 - so that's all the article needs to have
12:25 - right
12:26 - so it needs an image tag
12:30 - inside
12:32 - an article and a div
12:34 - with details inside of article
12:36 - as you can see it's right up here now
12:39 - and this the header doesn't seem to have
12:42 - a background
12:43 - so there's a couple of things we need to
12:44 - do
12:45 - jump into our css
12:47 - and for this header
12:49 - so this is header and section we can
12:51 - just give it a background
12:54 - color
12:55 - of
12:56 - that white color which is three f's
12:59 - hashtag free apps now it's disappeared
13:01 - but we know the article's still hiding
13:03 - back
13:04 - here so
13:07 - you've got to remember the article the
13:09 - main section this main section here
13:12 - is in the
13:13 - the flow of the page still
13:16 - now the section and this header
13:19 - i've jumped out of
13:21 - the main flow
13:23 - so effectively main
13:25 - is the first
13:26 - thing on the page
13:29 - that's still in the flow so that is at
13:31 - the top as well
13:32 - so what we can do then for that is
13:36 - we can
13:37 - give main some padding
13:40 - to bring it down looks like main
13:43 - curly brackets padding
13:47 - and we want to give it uh something like
13:52 - so it's got a big padding from the top
13:54 - so it's gonna be like 378 pixels from
13:56 - the top right
13:58 - but we also wanted to have some on the
14:00 - sides so 18 pixels
14:04 - uh and we don't want the bottom to be
14:05 - 370 so we can just give the bottom 10
14:08 - pixels
14:09 - and if we end it there 18 pixels will
14:12 - work for left and right because we
14:14 - haven't specified the left side after
14:17 - the bottom
14:19 - and that's fine to do
14:21 - right so now it's actually visible
14:23 - the image is a little bit big so why
14:25 - don't we deal with that why don't we say
14:27 - the thumb
14:28 - because we give the image a class of
14:30 - thumb
14:31 - we want you to be
14:33 - height of 70 pixels
14:37 - all right
14:38 - that's looking pretty good and you can
14:40 - do it with if you want
14:42 - um
14:43 - but i think because some of the
14:45 - thumbnails are different aspect ratios
14:49 - so i think it just looks better that
14:52 - they're all the same height
14:55 - so that's what i did on this so
14:57 - we're getting there we're getting closer
14:59 - now
15:00 - now we need this div container here
15:02 - to be at the side here
15:05 - so we're going to do that by
15:08 - jumping into
15:11 - our article
15:15 - and we need to say yo article why don't
15:18 - you display as a flexbox container so
15:21 - display flex
15:24 - and as you can see it's coming the side
15:26 - of it
15:27 - it's a little bit disjointed right this
15:29 - is kind of down
15:31 - the reason is because these have their
15:33 - own margins and paddings
15:35 - the p and the h4
15:37 - so let's pull them off now let's
15:40 - let's do some styling of the typography
15:43 - i'm going to do it at the top because
15:46 - i like to have my typography
15:48 - out of the way at the top
15:50 - so
15:51 - the way we do this we're going to use
15:54 - something in scss
15:58 - it's called mixing and basically what
16:00 - that does is
16:02 - it gives you some pre-arranged code
16:05 - which then you can use over and over
16:07 - again so it's kind of like
16:09 - um a variable but in css
16:13 - so to do this
16:14 - we want to basically say
16:18 - we're creating a mixing so at mixing
16:20 - then we're going to give it a name
16:22 - so we want to create a section of code
16:25 - called font base which we can then
16:28 - import into multiple
16:30 - um
16:31 - css
16:32 - blocks
16:34 - so we want to take off the padding
16:37 - right
16:38 - and we want to take off the margin
16:43 - and we want to do a few things we want
16:45 - to give it a line height
16:49 - of
16:51 - 1.3
16:53 - which is basically
16:55 - if this paragraph carried on going down
16:57 - the the distance between
16:59 - the actual
17:01 - bottom of this line and top of the next
17:03 - line that's the line height so we've
17:04 - just increased it effectively by 0.3
17:08 - and we want to then say font weight
17:12 - 600 to make it bold
17:15 - now you notice nothing happened here
17:17 - that's because we haven't called
17:19 - fontbase
17:20 - so let's do that
17:22 - we're saying hey h4
17:24 - we want you to be
17:26 - uh to include fontbase so the way you do
17:29 - it you say at include so you're
17:31 - including it
17:33 - then just call the name front base
17:36 - you can see that just jumped up then
17:37 - because now it has the padding and
17:39 - everything else taken off it
17:42 - the p tag
17:44 - we also want that to be um
17:47 - including our font base
17:50 - so include
17:51 - font base and watch what it does
17:54 - boom there you go
17:56 - but now
17:58 - they're the same and in our
18:00 - visual this is gray and smaller
18:03 - so let's do gray and smaller then let's
18:05 - do that now
18:06 - so color
18:08 - which is how you get the font color
18:10 - just kind of call it gray because i know
18:11 - that's a
18:12 - good color and we want to make the text
18:14 - smaller so we're going to say font
18:17 - size
18:20 - um
18:21 - 0.7
18:23 - rem
18:26 - there we go smaller uh and we're using
18:28 - rem which is the relative elements uh so
18:31 - it's relative to
18:33 - the browser default size
18:36 - so most browsers are 16 pixels default
18:39 - font size
18:40 - so we're saying b point seven of that
18:44 - right okay so
18:46 - it's not looking bad
18:48 - let's add a few more of these articles
18:50 - in here let's just copy and paste this
18:52 - article
18:54 - copy
18:59 - all right so just copy and paste the
19:00 - notes down the page
19:02 - uh here we go so we need to now start
19:04 - adjusting some
19:06 - some paddings right
19:10 - so the way we're going to do that is
19:13 - um our article
19:16 - so if we jump down to our article
19:18 - our article is only display flex at the
19:20 - moment so it needs a few things
19:23 - we want this
19:25 - this details to sit in the middle
19:29 - of
19:31 - kind of the whole article
19:33 - so we can say align items
19:36 - center and that
19:38 - that aligns centrally you see it just
19:40 - move down
19:43 - we need to give it some of that padding
19:45 - so we need to say padding
19:48 - we want to be padded at 8 pixels at the
19:50 - top
19:51 - and 12 pixels
19:53 - left and right
19:55 - so that's looking a bit closer
19:58 - um
20:01 - now we need
20:03 - a little bit more gap here
20:05 - notice how we have a little gap here
20:07 - so we want to do that on the video
20:10 - description right so we'll just go
20:12 - underneath the thumb to keep
20:14 - in the right thing so we want to say dot
20:16 - details
20:19 - we want to say yo
20:21 - dot details give us some padding
20:25 - you can give us
20:27 - eight pixels at the top and bottom and
20:29 - 22 pixels at the left and right side
20:32 - which pulls away cool
20:35 - it's looking very close
20:38 - so now we need to just
20:41 - do this hover right have this nice
20:42 - little blue hover over it
20:46 - so we can go into article
20:48 - and we can use another css
20:50 - um helper which is
20:53 - and or ampersand
20:55 - hover
20:56 - that basically says
20:59 - article will replace the and so in css
21:02 - you would normally say article
21:05 - hover
21:06 - you do it that way
21:08 - you don't need to do that in
21:10 - scss you can just say and hover
21:13 - and it knows you're dealing with
21:14 - whatever you're inside of because we're
21:17 - still inside of these curly brackets
21:18 - right
21:20 - so and hover
21:22 - so the articles hover we want to have
21:25 - a border
21:27 - of
21:29 - two pixels
21:30 - solid
21:31 - and we want this red color which is hash
21:34 - ff9999
21:37 - right
21:39 - so now when we hover
21:40 - there you go
21:42 - but it's looking a little funky when we
21:44 - they're kind of moving about
21:47 - and that's because
21:49 - you're adding a border
21:51 - when you hover over it
21:53 - so yeah adding to the size of the
21:56 - article
21:58 - so
21:59 - what you can do is just say
22:02 - border this is on the article itself
22:05 - two pixels solid white
22:09 - or we can use that f f it's totally up
22:12 - to you it's the same so now it already
22:14 - has a board on it but you can't see it
22:16 - so when we hover over it
22:18 - it doesn't jump about
22:21 - now we need to round the edges of this
22:24 - little red container and our thumbnails
22:27 - so let's do that let's say
22:29 - border dash radius
22:32 - um
22:35 - 8 pixels for this little red thing
22:40 - there you go it's looking pretty cool
22:43 - and we want to do that on our thumbnail
22:45 - as well so let's say
22:47 - border dash radius
22:50 - let's say 4 pixels on this one
22:59 - okay so four pixels on that one
23:02 - and it's looking pretty good we're
23:03 - pretty close to the end i think
23:05 - um
23:07 - the only thing i want to do is i just
23:09 - want to add
23:10 - um
23:12 - i just want to add
23:15 - a margin zero auto to my article
23:21 - just so it's gonna always be in the
23:24 - middle
23:25 - of
23:26 - that main container and it should be
23:28 - anyway
23:29 - but um just to be sure
23:32 - right okay
23:33 - and there you have it
23:34 - we have a scrollable
23:37 - list
23:38 - the video stays where it is the header
23:40 - stays where it is and you can scroll
23:42 - down
23:44 - obviously we don't have to click
23:45 - functionality
23:47 - in yet that's going to be down in the
23:48 - javascript and the jquery in the next
23:50 - video
23:51 - but in the next video we're going to
23:52 - actually look at how to set up the api
23:56 - uh how to get an api key
24:00 - and how to make the calls and make all
24:02 - this information dynamic does mean we
24:04 - pull a bit of this information out of
24:06 - here
24:07 - um
24:08 - so
24:09 - you've wasted your time a little bit but
24:11 - not too much because when the result
24:13 - comes in you'll see how cool it is
24:16 - okay guys so quick refresher this is the
24:18 - application that we're making simple
24:20 - little app we can click on
24:23 - the items and the video changes at the
24:25 - top
24:26 - all this information is pulled
24:27 - dynamically
24:29 - from youtube
24:31 - and how we did that was i created a
24:34 - little playlist on youtube called
24:36 - youtube i've linked that as well so you
24:39 - can get straight to that playlist
24:41 - and this has 12 videos in it
24:43 - and what we are doing
24:46 - we're actually
24:48 - saying to youtube hey
24:50 - go get this playlist we want the image
24:53 - the title and the description and some
24:55 - video information so we can display it
24:59 - so let me show you first
25:02 - the
25:03 - youtube docs so here we are
25:06 - the link for this is in the description
25:08 - as well
25:09 - um and
25:12 - we're interested in playlist items and a
25:14 - list of those playlist items you can see
25:17 - on the left here
25:18 - but you can see there's all sorts here
25:20 - there's channels comments you can get
25:22 - comments from them
25:24 - subscriptions thumbnails
25:27 - lots of information we can pull from the
25:29 - youtube api
25:31 - so
25:33 - uh what we're going to do is we're going
25:34 - to have a little place i'm going to
25:35 - click on javascript here
25:37 - and
25:38 - i know there's different bits of
25:40 - information you can get i know we just
25:42 - want snippet
25:44 - so i'm just going to say yep text
25:46 - snippet
25:47 - we've got 12 videos but we can bring
25:49 - back 20 videos to our playlist
25:52 - and what we need to do is
25:54 - if we put in our playlist id here
25:58 - which is this for me i'll link i'll put
26:00 - this in the link as well so you can use
26:01 - it
26:02 - and if we click execute
26:06 - you can see here
26:09 - create a weather app using an api part
26:11 - one html
26:13 - we go down all the thumbnail stuff here
26:16 - again part two here
26:18 - and all the videos are listed here so
26:20 - it's made that request
26:22 - for us in the documentation
26:24 - so we can actually see if this is going
26:26 - to work
26:28 - and if the information coming back is
26:29 - what we actually want
26:31 - and it is so that's cool and it sends
26:33 - that request to this url here
26:37 - so
26:38 - we're going to do the same
26:41 - and to do that first of all we need
26:45 - the youtube api enabled
26:48 - and we also need an api key so
26:52 - effectively a password right
26:54 - so how we do that is i've given you a
26:56 - link to
26:57 - um
27:00 - this in in the in the description
27:03 - uh we need to go to
27:07 - let me find this really quick
27:11 - we're going to go to this
27:13 - which is your developers console
27:17 - right
27:18 - what's actually there so it should when
27:21 - you come here on the link on the
27:22 - developers console link
27:25 - it'll be something like this you might
27:26 - not have all these boxes but don't worry
27:28 - just yet
27:30 - what i need you to do is
27:32 - next to where it says google apis new
27:35 - project
27:36 - i need to click on there yours probably
27:38 - doesn't say new project
27:41 - but whatever is at the side of google
27:43 - apis click on it
27:45 - and click this little plus symbol right
27:47 - here
27:49 - right because you want to create a new
27:50 - project
27:52 - type whatever your project name is in
27:54 - i'm not going to do it because i already
27:55 - have one click create
27:59 - then that'll create it for you there
28:01 - might be a little bit of a time delay
28:02 - you might have to wait for it to go
28:04 - through the process of it but after a
28:06 - minute or so
28:08 - you should be able to then select
28:11 - your project from in here so i'm going
28:14 - to select new project
28:16 - and then we want to
28:19 - enable the youtube api so we'll do that
28:22 - by just clicking enable apis and
28:24 - services right here
28:27 - and searching
28:28 - so i'm going gonna search youtube
28:31 - and there's four apis here
28:33 - we want youtube data api
28:36 - v3
28:37 - right
28:38 - because this is just getting provided
28:41 - information form such as videos
28:43 - playlists etc
28:45 - so click on that one
28:47 - and click the big blue enable button
28:51 - it'll do this spinny thing and it'll
28:53 - take a while to enable it again
28:56 - but once it's enabled what we need to do
28:58 - is
28:59 - we then need to get an api key which is
29:02 - effectively the password
29:04 - so if you watch the last video we did uh
29:07 - the weather app video
29:09 - you'll know that we could just send the
29:11 - request and get information back
29:13 - this time we don't have
29:15 - that ability
29:16 - we need to
29:17 - send with it our information
29:20 - so
29:21 - on the left hand side you can see
29:23 - credentials so just click that you see
29:26 - i've got one listed here already
29:28 - but you can create credentials right
29:31 - here this little blue thing
29:33 - and you want to create api key so click
29:36 - on that
29:37 - and there's a new api key right so you
29:40 - can just
29:41 - copy that out there
29:44 - and that's what we're going to be using
29:45 - okay
29:46 - so
29:48 - where do we start
29:50 - let's jump into our code
29:53 - and let's make this request
29:55 - let's just
29:56 - move this js right up here
29:59 - so we're using jquery so make sure we've
30:01 - got jquery installed
30:03 - by clicking the little cog at the side
30:05 - of the js which is the settings cog go
30:08 - to quick add at the bottom at the bottom
30:11 - you see i've got in my recent jquery
30:14 - you might have it down here just jquery
30:16 - there so click on that
30:19 - save and close
30:20 - and jquery is installed ready to use
30:23 - right
30:24 - so
30:26 - how do we start this off well we need to
30:28 - start off with a container for jquery to
30:30 - work in
30:32 - so we say
30:33 - dollar for hey jquery we're about to use
30:36 - you
30:37 - so he's saying
30:38 - when the document so that's the page is
30:41 - the document
30:43 - when that document is ready
30:45 - i want you to do something so doing
30:48 - something is a function
30:50 - curly brackets and that's the container
30:53 - for jquery right
30:55 - so now we can start running
30:58 - jquery stuff
31:01 - instead of just plain javascript which
31:04 - makes the api call a lot easier
31:06 - so
31:07 - what we want to do first is we want to
31:09 - just set it up so we have the
31:12 - information our fingertips to use later
31:15 - so let's set it up for
31:17 - using our api key so let's create a
31:19 - variable called key
31:21 - and what we want to do is
31:23 - we want
31:24 - to just copy and paste
31:26 - so copy and paste from
31:28 - your credentials your key
31:31 - we want to copy and paste that straight
31:33 - into
31:35 - our document
31:36 - into our variable here
31:39 - so that's my
31:40 - key
31:42 - now
31:43 - we also need the playlist id to send it
31:46 - to right
31:47 - so
31:49 - let's go and get that playlist
31:52 - id so
31:54 - if i go to the playlist so this is the
31:56 - actual playlist page look
31:59 - the way you can get the id is going to
32:02 - the
32:03 - address bar at the top
32:05 - and the last little bit where it says
32:07 - list equals
32:10 - after the equals that's the playlist id
32:12 - so let's copy that out there
32:15 - i'll put the link in the description for
32:16 - you
32:18 - let's call this var
32:20 - play
32:21 - oops
32:22 - play
32:24 - list i
32:26 - d
32:27 - equals
32:29 - and put that in quotes
32:31 - there we go playlist id
32:33 - now
32:35 - the last bit of information is
32:38 - where the api call um
32:41 - where the api call is right
32:44 - what are we actually sending the api
32:45 - call to
32:47 - so we go back to the documents
32:49 - the youtube docs
32:52 - and that was here look
32:54 - so we filled all this stuff in before
32:58 - this is the request http request i'll
33:01 - link this in the description also
33:05 - and what we can do is then just copy
33:06 - that
33:07 - i'll make another variable called
33:11 - uh url
33:13 - and we'll set it in between
33:16 - um quotes and there we go that's our
33:19 - three bits of information
33:21 - ready to
33:23 - get everything else going
33:25 - right and with these we've got one
33:27 - actual piece of information we also need
33:29 - to send with it which is the options so
33:33 - if you look back here
33:35 - um we we are sending a few bits of
33:37 - information we're sending snippet
33:41 - which basically gets those things like
33:43 - thumbnail title etc
33:45 - and max results so 20 whatever and a
33:48 - playlist id
33:50 - and when you send all this information
33:52 - to here along with your api key
33:56 - then it will send the response
33:58 - um but all these are options so we
34:01 - actually need to
34:02 - send that with the request so let's
34:05 - create another variable and in this
34:07 - variable call it options
34:10 - is going to be an object
34:13 - because this is what
34:14 - the youtube api expects to receive
34:19 - so it's an object
34:21 - um
34:22 - and the object is going to have um
34:26 - a few things so it's going to have that
34:28 - part
34:30 - and that part was called snippet right
34:34 - it also needs
34:36 - our key which we have at the top so
34:38 - we're just basically copying it into
34:40 - here now
34:42 - so key and we're gonna
34:44 - access
34:45 - the key variable
34:47 - to this place here
34:49 - it needs to know how many results we
34:51 - want so max results oops sorry max
34:56 - results
34:58 - um we said 20 but you know we have 12 in
35:01 - our playlist but it's maximum so it's
35:03 - fine
35:04 - and then we also need to know which
35:07 - playlist
35:09 - is going to
35:11 - um
35:13 - it's going to get the information for
35:16 - so
35:17 - all the stuff on the left is stuff um
35:20 - youtube
35:21 - has specified the names of so you see it
35:24 - all here
35:26 - you know parameters here playlist id max
35:28 - results tells you all about in the docs
35:31 - and we're just basically
35:33 - sending what i want so playlist id is
35:35 - coming straight from this variable
35:38 - right
35:39 - so on to the request
35:42 - so we want to say hey
35:44 - um
35:45 - let's
35:47 - let's create a function
35:49 - and it's going to load the vids right so
35:51 - it's going to load our videos load vids
35:55 - um and what that actually is going to do
35:59 - it's going to send a request
36:01 - so dollar
36:03 - so we're using jquery here so saying hey
36:06 - jquery
36:07 - um
36:10 - you have a function called get json
36:12 - let's use that it's already already
36:15 - built in it's a pre pre-made code
36:18 - um
36:20 - but i need a few bits of information
36:22 - with this so youtube needs a few bits of
36:24 - information
36:26 - it needs a url
36:28 - which we have we've already got that so
36:29 - url
36:32 - i also need
36:34 - a bunch of options including the key
36:36 - etcetera
36:38 - so we have that so we're going to say
36:39 - options and then it's going to take that
36:41 - from that variable
36:43 - um
36:44 - and after
36:46 - after i've sent the request and you give
36:47 - me the options
36:49 - um i'm going to return something
36:51 - so i need to do something so doing is a
36:54 - function
36:56 - so i'm going to do something after i
36:58 - return the data
37:01 - but you need to tell me what you want
37:03 - this data to be called
37:05 - so within this parentheses we're going
37:07 - to type data
37:09 - we can call this whatever we want
37:11 - um
37:13 - but it needs to be able to access it uh
37:14 - we need a name to be able to access it
37:17 - so
37:18 - let's console
37:20 - log
37:22 - this data right
37:24 - we also need
37:25 - to call
37:27 - the function
37:29 - so call it load
37:31 - vids
37:33 - so we're calling above it and the
37:34 - function is underneath right
37:37 - let's see what happens
37:40 -  sex son
37:59 - so we'll inspect the elements
38:02 - so we can get to the console here we go
38:04 - in our console
38:09 - i just need to get to
38:12 - logs so here we are logs
38:15 - zoom in you see right here there's an
38:17 - object
38:18 - if we open this object
38:20 - you can see oh there's items in here
38:24 - oh
38:25 - from 0 to 11 so there's 12 items
38:28 - so this is going to be our information
38:30 - right snip it there we go we asked for
38:32 - that
38:33 - and it's telling us our channel titled
38:35 - channel title the playlist
38:38 - um
38:39 - create a weather app
38:41 - um thumbnails are in here as well
38:44 - um video ids in here
38:46 - so this has given us
38:48 - everything we need right here
38:51 - so
38:53 - what should we do first
38:56 - why don't we we'll just close this off
38:59 - why don't we dynamically change this
39:01 - video
39:03 - to the very first video
39:06 - in
39:06 - the playlist so instead of
39:08 - writing it out in html
39:11 - like this
39:13 - we can now
39:15 - get rid of the iframe
39:18 - so delete the iframe from
39:20 - uh your html
39:23 - because we're actually gonna
39:27 - create
39:28 - uh
39:30 - that dynamically from the api
39:32 - so
39:34 - how to do that
39:35 - well
39:37 - we need it to be
39:39 - um
39:42 - a new function right so we're going to
39:44 - call this
39:45 - i guess function
39:49 - function
39:50 - main vid
39:54 - and this main vid function
39:57 - is basically going to
39:58 - find
40:00 - the container for that which is section
40:02 - with an id of vid
40:04 - so it's going to find
40:06 - that
40:08 - and then it's going to inject
40:11 - something into it so let's say
40:13 - hey jquery dollar symbol
40:16 - find
40:17 - something called
40:21 - video
40:22 - i think that's called hashtag video
40:25 - so
40:26 - find something called hash video
40:28 - and what i want you to do is
40:30 - i want you to change the html that's
40:33 - within those tags
40:35 - to
40:36 - uh something
40:39 - something new
40:41 - right
40:43 - so i'm going to use
40:44 - backticks to do this
40:47 - um
40:48 - just going to make sure
40:50 - i've copied it correctly from here so
40:53 - ctrl x
40:55 - and basically backticks
40:57 - is
40:59 - allows us to inject
41:02 - variables directly into
41:04 - um
41:07 - into the string
41:08 - rather than having to close the string
41:10 - add a plus sign add a variable add
41:12 - another plus sign open a string up
41:15 - backticks
41:17 - not quotes they're backticks
41:20 - lets us just
41:22 - do that lets just even
41:25 - have spaces so line breaks and it
41:27 - doesn't affect it so
41:29 - lets just copy and paste our
41:33 - iframe from our html into the document
41:39 - right
41:41 - it's a bit of a long thing
41:45 - so we're kind of cool now right so
41:49 - i'm just gonna get rid of this this
41:50 - playlist information here actually
41:53 - um
41:56 - so it's actually ready to run so we just
41:58 - need to run this main main video
42:00 - function from inside here
42:02 - so basically saying
42:05 - make the api call
42:07 - then
42:09 - load
42:10 - this function called mainvid
42:14 - there you go
42:15 - then once mainvid is run
42:18 - find a video
42:19 - um section
42:22 - and inject this html
42:25 - but this isn't dynamic yet right
42:28 - because we have this hard-coded id here
42:33 - so what we need to do is
42:35 - and this is why we use backticks
42:37 - delete after it says embed forward slash
42:42 - delete that bit of code
42:44 - to the quotes right
42:47 - delete that
42:49 - and i want you to add dollar symbol
42:52 - curly brackets
42:54 - id just make sure your curly brackets
42:57 - end up closing
43:00 - so now it's looking for a variable
43:03 - called id so we need to supply it
43:06 - so what we need to do is
43:10 - we need to send id to it so we're
43:13 - sending id
43:14 - then we're going to name it here saying
43:16 - yo
43:17 - you're going to receive something called
43:18 - id so you can use it
43:21 - now
43:23 - we need to find the id of let's say the
43:27 - first
43:28 - let's say the second one because it's a
43:29 - different color
43:32 - we're going to find the actually we'll
43:33 - include the first one we need to find
43:34 - the id of the first video in the
43:37 - playlist
43:39 - so the way we do that is we say
43:42 - create a variable called id
43:44 - and set that equal to
43:46 - data
43:49 - um now we need to go find out where it
43:51 - is so inspect element
43:55 - let's go to console here's my logs again
43:58 - so
44:00 - data is object because this is what we
44:02 - named it so this is our very root
44:04 - element so
44:06 - data
44:08 - i mean to go into items
44:11 - this is because items is an array it's
44:13 - not an object so the zero f item
44:17 - in that array
44:20 - then this is not the video id and it's
44:24 - going to snip it
44:26 - then we need to go to resource id
44:29 - and video id
44:30 - so it's quite a long path
44:33 - so
44:34 - let's see if i remember data
44:36 - dot snippet
44:41 - dot oh so data dot
44:44 - items was it items
44:47 - um
44:48 - add the zero position
44:53 - then we want to jump inside snippet
44:56 - then there was the resource
44:58 - id
44:59 - then there was the video id
45:02 - right and that's what we want
45:05 - and there you go
45:07 - so we've created a variable called id
45:09 - which has got the video id
45:11 - passed it to mainvid then mainvid here
45:15 - has used it within the string
45:17 - so that's pretty cool right we're
45:19 - getting that dynamically now
45:21 - okay so the next thing to do
45:23 - we need to
45:27 - get all these filled out so we need to
45:29 - kind of say hey
45:32 - for each item in that array
45:37 - we want to do something so
45:40 - how we're going to do this we want to
45:42 - loop through each
45:44 - item in that array
45:47 - so
45:49 - let's create another function
45:51 - so that's the main video function let's
45:53 - create a function called
45:55 - results
45:58 - loop all right
46:01 - what results loop is going to do
46:04 - is it's going to basically add
46:07 - each one of these pre-made
46:09 - so it's not going to inject the
46:10 - thumbnail then inject the title then
46:12 - inject the description
46:14 - it's going to make this up
46:16 - here then put it in so we're going to
46:19 - make the html up in here
46:22 - so
46:23 - let's do that then so we're basically
46:26 - going to copy
46:28 - i'm going to cut one of these articles
46:30 - out
46:32 - so cut an article
46:35 - then you can actually delete
46:37 - every other one of the articles right we
46:39 - don't need the articles anymore
46:42 - so we've got one in our clipboard
46:44 - so what the results loop does is it says
46:46 - hey
46:48 - i want you to select
46:50 - um the main
46:53 - container so doing that with jquery so
46:56 - select
46:57 - the main container
47:00 - and what i need you to do is
47:02 - change the
47:03 - this is what not this is not what we're
47:05 - doing we're not changing the html but
47:06 - i'll show you
47:08 - i'll show you what you might think so we
47:10 - want to change the html
47:12 - using those back ticks instead of quotes
47:17 - a couple new lines
47:19 - and we want you to add
47:22 - this
47:24 - article thing
47:25 - right
47:27 - so
47:30 - if we call results loop now
47:33 - so we want to
47:34 - do the api call
47:36 - change the main video
47:39 - and once we change the main video
47:41 - we then want to add
47:43 - stuff to that that main section
47:46 - so we call result
47:48 - results
47:50 - i think loop from inside our call
47:56 - and there you go it's added one of those
47:59 - things
48:01 - so
48:03 - what we actually wanted to do is we want
48:05 - to say like
48:06 - okay so for each one of these
48:10 - um
48:11 - items
48:13 - we want you to add
48:15 - another one and another one right
48:19 - so
48:21 - the results loop
48:22 - needs to fill this information out with
48:25 - its dynamic data
48:28 - so let's send
48:30 - all the data to results loop so then
48:34 - results loop
48:36 - let's say look you're getting this data
48:38 - in
48:39 - now results loop wants to
48:43 - run through these things so
48:45 - it needs to create its own thumbnail so
48:48 - let's call var thumb
48:52 - and set that equal to
48:54 - well let's have a look
48:56 - inspect element
49:00 - so
49:00 - console
49:02 - let's have a look where it is
49:04 - so
49:05 - we need to go inside an item
49:08 - array and the thumbnail is inside
49:12 - inside items side snippet inside
49:15 - thumbnails right and we're going to take
49:17 - the
49:18 - the medium one i think
49:22 - yeah medium
49:24 - dense url right it's quite a long path
49:27 - so
49:28 - the thumbnail is called
49:31 - and we want to
49:35 - basically
49:38 - go into the data
49:41 - now we need to go into
49:44 - an item
49:47 - then we need to go into the snippet
49:49 - then into the foam
49:51 - nails
49:53 - then into the medium
49:56 - medium
49:58 - spell
49:59 - medium
50:00 - then into url
50:03 - now there's a problem with this
50:05 - so let's try and replace
50:08 - this url of the thumbnail
50:10 - which is in the sauce tag
50:13 - using
50:14 - you know delete it using dollar symbol
50:18 - curly brackets
50:19 - then putting the thumb in there then
50:21 - close curly brackets if you haven't
50:23 - closed them
50:25 - now it hasn't done it
50:27 - and the reason it's not done it is
50:28 - because
50:30 - item needed a position right because it
50:32 - was in an array
50:33 - because there's multiples of these
50:34 - things
50:35 - so if i did give it a position of zero
50:40 - it would pull that in so
50:43 - set the main variable form data
50:47 - item the zero position
50:50 - um
50:51 - where have i gone wrong
50:52 - here snippet
50:54 - item
50:56 - medium dot url
51:00 - so i inspect on this
51:07 - so object
51:10 - items
51:12 - the zeroth item
51:14 - snippets
51:16 - okay
51:18 - so
51:20 - items there we go
51:24 - so
51:25 - that will work
51:26 - right
51:28 - but i have to specify the location
51:32 - so
51:33 - what we need to do is
51:35 - for doing this for one item you don't
51:37 - want to be copying and changing this one
51:39 - we can use uh
51:40 - for each loop
51:42 - or in jquery it's just called an each
51:44 - loop
51:46 - so let's set up that each loop
51:48 - so we're saying hey jquery
51:52 - for
51:54 - each this is a jquery
51:57 - jquery built in function
52:00 - javascript does the same for each
52:02 - so it's saying for each
52:06 - data so the data you gave me so for each
52:08 - of the datums data in the items array
52:13 - now items already has multiple as has 12
52:15 - right
52:16 - so we're saying for each of those 12
52:20 - i want you to do something so function
52:23 - right
52:25 - so this is our
52:27 - function
52:28 - uh what i want to do is
52:31 - i is the number you're on so 0 1 2 all
52:34 - the way to 11 in our case
52:37 - i want you to go through and
52:39 - rename they're all called item now so i
52:41 - can access them same item
52:44 - so let's take this variable for call
52:47 - form let's move this inside
52:51 - and let's also
52:54 - take this
52:56 - main
52:57 - with the html right we'll take this cut
53:00 - that
53:00 - and we'll go inside here
53:03 - right
53:05 - so still doing the same thing
53:09 - but why don't we replace this zero
53:13 - we don't need that anymore we need to
53:15 - now say
53:16 - hey
53:16 - you're already looping through these
53:18 - items
53:20 - right
53:21 - so
53:23 - i'll let you do that so instead of
53:25 - writing data item zero if we just write
53:28 - item
53:31 - that's changed now
53:33 - it's only changed once
53:35 - so effectively it's looping through each
53:36 - of the items
53:40 - and changing the inner html
53:42 - so on the 11th time that's the last one
53:46 - so that's the last thing it does
53:48 - we don't want that to happen this is
53:49 - what i was saying earlier
53:51 - we want to not
53:53 - change the inner html
53:55 - we want to append a new bit of that
54:00 - onto the dom each time
54:02 - so change.html to dot append
54:06 - and see what it does
54:08 - there we go so now
54:12 - we need to fix that but now
54:15 - we have
54:17 - all the thumbnails at least
54:19 - so now we have the thumbnails let's do
54:21 - it for everything else so
54:23 - let's call var title
54:26 - we want to set the title equal to item
54:28 - dot snip it
54:31 - dot title because that's where it is in
54:33 - that object when we go look in the
54:35 - console
54:37 - so now
54:39 - title is that why don't we change
54:42 - what's in between the h4 tags let's
54:45 - delete where we wrote title
54:48 - dollar symbol
54:50 - curly brackets title and just make sure
54:53 - you finish recurve brackets
54:56 - you see all the titles are now
54:58 - dynamically here
55:00 - right
55:02 - same with description let's do that so
55:04 - var
55:05 - d-e-s-c equals
55:07 - item dot snippet
55:11 - dot description
55:14 - right
55:16 - then let's go into the p tag delete
55:18 - everything within the p tag
55:21 - dollar sign curly brackets d e s c
55:25 - closing curly brackets
55:28 - and there you have it but they're giant
55:31 - right
55:32 - we don't want that much of a description
55:34 - in these things
55:36 - so we can use javascript to remove
55:40 - everything over 100 characters right and
55:43 - how we do that is we say
55:45 - go to our
55:46 - desk variable and at the very end just
55:49 - before the semicolon
55:51 - just type dot sub sub
55:55 - string sorry lowercase sub string
55:59 - and
56:00 - it needs two arguments he needs to know
56:02 - where it starts so it starts at the very
56:04 - first
56:06 - letter zero
56:08 - and for how long so a hundred
56:11 - hundred letters
56:12 - there we are we've cut it down
56:14 - dramatically now
56:17 - so the only thing left to do is
56:20 - um
56:21 - when we click on one of these because at
56:23 - the moment doesn't do anything
56:25 - we need to
56:27 - update that
56:28 - video um
56:31 - and we actually need to
56:33 - pull some information from the api so it
56:36 - knows where to go so
56:38 - let's
56:40 - let's do that so let's say
56:43 - we're gonna actually
56:46 - say hey when the main is clicked on
56:50 - um
56:51 - find out what has been clicked on in
56:53 - that main
56:55 - and
56:57 - change the video so
56:58 - it looks a little something like this so
57:00 - select
57:01 - select the thing called main
57:05 - and
57:07 - when it is clicked so dot on
57:10 - so this is basically saying it's an
57:11 - event what event is it going to be
57:14 - so when it's clicked
57:18 - you can do something it's a function
57:22 - right and let me show you this so let's
57:24 - do alert
57:27 - hello
57:30 - hopefully it lets me do this in codepen
57:31 - so when i click on the main it should
57:32 - say hello right
57:34 - there you go
57:39 - and it's going to go through it
57:42 - 11 times maybe
57:44 - i didn't expect that so
57:47 - we don't want that to happen right
57:49 - because we could say
57:51 - when
57:52 - the article is clicked on but we we
57:54 - don't want to add multiple
57:57 - multiple event handlers for each item
57:59 - because we don't know how many items
58:00 - we're going to do and that's why we're
58:01 - using main so we're saying when we click
58:03 - on main
58:05 - what i actually want you to do
58:07 - is i want you to
58:11 - dig down
58:13 - to find
58:14 - the article element
58:18 - right
58:19 - because the article has the information
58:21 - we want
58:23 - right
58:24 - and don't forget the
58:26 - comma there before the function
58:29 - so
58:31 - we need to
58:35 - when it's clicked on we need to send
58:38 - some information back to
58:41 - the main video function right because
58:44 - that's what changes that video
58:47 - so we need to find the id of that video
58:52 - so whenever we click on one of these
58:55 - we need to find the id of that video
58:58 - but we haven't
58:59 - given these articles that id
59:02 - so we need to do that
59:04 - right so this is how we do that
59:07 - in this article
59:10 - so in our main top end
59:13 - we want to give it a class right
59:17 - um
59:18 - let's call it class item
59:22 - right
59:23 - and
59:25 - we also want to
59:28 - inject the video id into
59:32 - the article
59:34 - and this is how we do it
59:36 - we are making something called a data
59:38 - key
59:39 - and we want to say hey curly
59:42 - doll symbol curly brackets
59:46 - vid
59:46 - and your curly brackets and
59:49 - your quotes
59:50 - so
59:52 - what's happening here is
59:54 - we have now made this
59:58 - extra
59:59 - um
60:00 - calling for a
60:02 - vid variable so let's create that
60:05 - vavvid
60:07 - equals
60:08 - and what does the vid equal it actually
60:10 - equals the video id
60:12 - right so let's let's put that into item
60:15 - dot snippet
60:17 - dot
60:18 - resource
60:20 - i d
60:22 - dot video
60:24 - id
60:26 - now that's where the the video id is in
60:29 - if your console logged it that's where
60:30 - it is right
60:32 - so now this data key holds the video id
60:37 - so if we go back to this
60:40 - event listener that we're making where
60:41 - we can click on the main
60:43 - it will dig down to the article
60:46 - and now it's
60:47 - digged its way down to the article
60:50 - we can pull in
60:51 - pull out that video id because it's
60:53 - stored in the data key of the article
60:56 - right
60:57 - so
60:58 - let's create a variable called id
61:01 - and id wants to be
61:03 - you want to basically select
61:06 - this
61:07 - element so we've clicked on it it's dug
61:09 - down to the article so select this
61:13 - and select
61:14 - this
61:15 - items basically this articles
61:18 - um
61:19 - element called data
61:21 - dash key
61:22 - right
61:23 - so select that data key
61:26 - right which will be individual for each
61:28 - video
61:30 - and we could then say um
61:34 - why don't you alert
61:38 - why don't we alert the id so let's see
61:42 - so
61:43 - hopefully this works so when i click on
61:45 - this one
61:46 - it's giving me this id lock
61:49 - and it's going to go for them
61:51 - it's going to go through it 11 times
61:52 - okay brilliant
61:58 - that is sorry that is because
62:00 - let's do let's fix this now shall we
62:03 - that is because we have
62:05 - written this main
62:06 - this is my fault i should have been
62:07 - clearer
62:09 - so this whole on click
62:11 - um
62:13 - event event listener
62:15 - we've written this inside
62:17 - this append right
62:20 - so we've written inside this
62:22 - each loop
62:24 - and we don't want it inside that each
62:26 - loop
62:26 - in fact we want this just out on its own
62:30 - so copy it so alert id is your last
62:32 - thing you have curly brackets and a
62:35 - parentheses and a colon cut that out
62:39 - right so that was my bad
62:42 - so that can actually live
62:45 - right down at the bottom
62:47 - just leave your
62:48 - jquery container stuff
62:50 - clear so i'm just going to delete some
62:51 - of this space
62:55 - and just copy and paste it in there
62:59 - right
63:00 - looking better
63:03 - right cool
63:05 - so now
63:07 - when i click on one of these it
63:08 - shouldn't do it 11 times
63:11 - once
63:12 - there we go
63:14 - so
63:15 - that's because i wrote this
63:17 - accidentally still inside
63:20 - of
63:21 - this each loop so i've seen
63:23 - okay each time i click on the main
63:26 - oh sorry for when i click on the main
63:29 - for each one of these items
63:32 - i want you to alert and that's what it
63:34 - was doing that's why it kept going on
63:35 - and going on
63:38 - so
63:39 - now we don't want to alert the id what
63:41 - we want to do is we want
63:42 - to call
63:46 - this main video because
63:49 - we can pass in an id and the id will
63:51 - change and it will update the html it
63:54 - will update
63:55 - the video right
63:57 - so let's call it let's call
63:59 - main
64:01 - vid
64:02 - and let's send
64:04 - that new variable this data key
64:07 - ascend it in its parentheses
64:10 - to that function again
64:13 - this should be we should be very close
64:14 - here so when i click on this
64:16 - here we go now it's changing
64:20 - and that's pretty much all there is to
64:22 - it
64:22 - um
64:24 - a few little things i guess when we
64:26 - scroll down we saw this
64:28 - you know the white stuff has ended right
64:32 - so we can just
64:33 - go into our css
64:36 - and i think this was because
64:39 - we set a
64:42 - height of vh here
64:44 - so we can take that off
64:46 - and there you go straight to the bottom
64:48 - no vh
64:50 - clicking through
64:52 - and
64:53 - they all work we probably don't need the
64:56 - console
64:57 - log now in
65:00 - where was it in when it comes into our
65:02 - load vids
65:04 - we can delete that
65:06 - you don't really have that in production
65:07 - code
65:08 - there you go i hope that was easy enough
65:10 - for you uh
65:12 - clear enough to follow
65:14 - so we pulled in all the information we
65:16 - needed to using variables
65:19 - we sent the request in functions load
65:22 - and
65:22 - the load called it
65:24 - and we basically said
65:26 - hey youtube url here's your settings
65:29 - your options
65:31 - now return me something called data with
65:33 - all the information in it
65:36 - then we
65:38 - call the main vid
65:40 - which
65:41 - took the id from the very first video
65:45 - and loaded it this is mainvid right
65:47 - underneath
65:49 - went to the html and injected
65:52 - with the new id
65:54 - from this
65:56 - zero off position
65:57 - into it
65:59 - we then call the results loop
66:02 - we then call the results loop
66:05 - uh just taking our space and stuff uh
66:08 - and basically the results loop
66:10 - took in the data from that api call
66:14 - and for each item it created
66:16 - variables of what we needed
66:20 - then
66:21 - appended to the main so didn't change
66:23 - domain
66:24 - the whole html it added to the main each
66:27 - time
66:28 - an article
66:30 - this is the article
66:32 - i'm just gonna go across
66:34 - add an article to it
66:37 - with the dynamic data for
66:40 - each
66:42 - array item
66:44 - so you know each
66:48 - in the items it was an array i had 11. i
66:51 - actually had 12 different items
66:54 - so go through that
66:56 - each time
66:58 - putting these variables in place
67:01 - and then
67:02 - when i click
67:04 - dig down to the article
67:09 - find
67:10 - the data key with inside this article
67:14 - then call that main video again with the
67:17 - new id and that's why it updates
67:21 - okay guys i hope that wasn't too
67:23 - difficult like i said earlier and i hope
67:25 - you got a lot out of it please comment
67:28 - subscribe and like the video thanks for
67:31 - joining me and
67:32 - i'll see you in the next video