02:46 - all right
02:48 - hi everyone welcome back to another live
02:51 - stream
02:52 - if you don't know me my name is gwen and
02:55 - i run a youtube channel
02:58 - called faraday academy or i do mostly
03:01 - vjs and django content if you're
03:04 - interested in that the link is in the
03:06 - description below
03:08 - so
03:09 - today
03:10 - i'm going to be building the last
03:13 - free code camp project
03:16 - or the last front-end one of the series
03:18 - again in vjs
03:20 - and
03:21 - it's the pomodoro clock so
03:24 - yeah you can find this on free code
03:26 - camp's
03:28 - website
03:29 - so
03:30 - i do want to show you so about five
03:32 - years ago
03:34 - i think
03:35 - uh yeah around five years ago when i was
03:38 - looking for my first
03:39 - developer job
03:41 - um i built this clock you can see the
03:44 - background image is broken now but
03:46 - it basically had a timer
03:49 - and
03:50 - i could
03:51 - change the time
03:53 - and i could take a break if i wanted to
03:57 - start oh good it start and pause and etc
04:02 - so i thought that was kind of cool i can
04:04 - find all my old projects and rebuild
04:05 - them now five years later
04:08 - um okay so let me close
04:11 - that
04:12 - of course this is kind of space shippy
04:15 - looking
04:16 - you know it doesn't look great so
04:18 - hi anish hi tech stats
04:21 - good to see you again
04:23 - so
04:24 - i'm gonna close that um
04:26 - in my repo so this is also linked in the
04:28 - description below so you can see free
04:30 - code camp
04:31 - projects view
04:33 - in my github
04:34 - and
04:36 - i
04:37 - let me so in the pomodoro clock folder i
04:40 - have a readme
04:41 - with some of the requirements of a
04:42 - pomodoro clock
04:44 - basically a timer a
04:46 - special timer with a special name
04:50 - and this is the mock-up that i have so
04:54 - pomodoro
04:55 - short break long break and then i'm
04:58 - thinking about having a settings
05:01 - file or settings menu and pop-up
05:04 - so
05:05 - um
05:07 - yeah users can change the amount of time
05:09 - for each thing like the amount of time
05:12 - for the actual pomodoro clock or the
05:14 - short break of the long break
05:17 - and i have all of those in the
05:20 - requirements here
05:22 - all right so i'm going to go ahead and
05:24 - get started so this time actually
05:27 - let me zoom in actually there
05:29 - so this time i'm using um
05:33 - of course for ujs vcli to bootstrap the
05:35 - project and then i'm going to be using
05:39 - uh beautify
05:41 - for the ui components and design i used
05:44 - bootstrap a couple times incline once
05:47 - um
05:48 - but i just really like vidify i think it
05:51 - it'll
05:52 - give us a nice design it's way more than
05:55 - we need for this project but
05:58 - yeah we can just use what we need out of
06:00 - the library
06:01 - so
06:02 - let me go to my terminal so i'm in free
06:04 - code camp projects view
06:07 - and i'm gonna
06:10 - cd into the
06:11 - pomodoro clock folder
06:15 - and now
06:16 - in this folder i've read me and mockups
06:19 - i'm going to create my app in this
06:20 - folder so i'll use view create
06:23 - and then app name i'll just call it
06:26 - pomodoro
06:28 - or pomodoro app actually because i think
06:30 - that's the standard that i've been using
06:32 - for the rest of the apps
06:38 - okay
06:40 - so i'm gonna actually manually select
06:43 - features this time
06:46 - so
06:48 - i don't need a router or view x
06:51 - again
06:52 - um
06:54 - css yes so that's the one i want i want
06:57 - to use sas
06:59 - so
07:00 - do that um island with air prevention
07:04 - only yeah normally i do
07:06 - prettier or something but
07:09 - for the stream i just like
07:12 - fewer
07:13 - uh issues with
07:16 - i guess non-error linting
07:21 - lint on save is fine
07:24 - dedicated config files
07:27 - all right
07:29 - so while that's bolding
07:33 - hi sassy how are you
07:38 - so that should take a minute to build
07:40 - and then i'll go ahead and pull up the
07:44 - beautify documentation
07:48 - so
07:51 - i can't remember if it's beautify.js
07:54 - all right
07:55 - here's the documentation
08:03 - and
08:04 - basically
08:05 - [Music]
08:06 - yeah they recommend
08:08 - a cli
08:10 - install as a cli plugin so it'll set up
08:13 - everything it needs to set up for me
08:16 - and then
08:24 - i believe
08:26 - oh no it's going to create all this for
08:28 - me so i think i won't have to import
08:30 - anything else on my own i'll just do
08:32 - view add vidify
08:35 - and i'm still waiting for
08:38 - the project to build
08:51 - all right it's almost done poking
08:54 - generators that's a good sign
09:01 - additional dependencies
09:06 - i'm good i'm happy
09:09 - to be
09:09 - uh
09:10 - able to stream on free code camp today
09:14 - um
09:17 - let's see
09:18 - cd pomodoro okay
09:20 - good so it's built and now let me go
09:22 - into
09:24 - my app
09:28 - is vidify similar material ui in react
09:31 - yeah beautify is a material
09:34 - design framework
09:36 - um
09:37 - material ui i haven't used that for a
09:39 - while but i think
09:42 - i mean the look of it is definitely
09:44 - gonna be
09:45 - but i don't know how similar
09:47 - all the components are and stuff what
09:49 - they offer versus what vitify offers
09:54 - um
09:55 - okay so
09:57 - i'm in my app let me open this in a code
09:59 - editor
10:06 - and now i will run
10:09 - the development server
10:18 - and i should be able to open it
10:20 - localhost
10:21 - 8080.
10:26 - cool
10:27 - and i have my
10:31 - vue.js boilerplate
10:33 - oh yeah before i do anything here
10:36 - because i want
10:37 - um viewify to set itself up for me so
10:40 - before i change files on my own i'm
10:42 - going to do
10:43 - oh wait not npm i'm going to do view add
10:46 - viewify
10:48 - to add that cli plugin
10:55 - there are uncommitted changes yes i know
10:56 - about those
11:11 - all right
11:14 - so it's asking me to choose a preset
11:17 - and i'm just going to do
11:19 - the recommended one
11:35 - so this will add all the setup and
11:37 - config for me
11:41 - yeah
11:43 - so
11:47 - let me run the server again
12:12 - it does take a while for this to build
12:28 - all right
12:32 - so anyway
12:34 - in source here
12:36 - in app um
12:39 - vidify added all the
12:43 - beautify components here
12:45 - and then they set up my app
12:48 - oh wait it's in here yeah they set up
12:50 - the v app wrapper
12:53 - and then
12:57 - yeah v content for me to put my main
13:00 - content in
13:01 - and then they gave me this app bar that
13:03 - i'm not actually going to use for this
13:05 - because i'm going to use
13:07 - some tabs
13:09 - so i'm going to go ahead and get rid of
13:11 - that
13:15 - all right so that got rid of it and now
13:17 - the rest of the
13:21 - beautify components here i'm going to go
13:23 - ahead and get rid of those as well
13:25 - and those are in hello world
13:29 - so let me just delete the hello world
13:32 - component
13:34 - delete that
13:36 - and
13:37 - i'm going to create a new file
13:40 - which will be
13:43 - i guess i'll just call it pomodoro.view
13:48 - and in here let me put a template
13:55 - just a div for right now
13:59 - and now let me import that component
14:01 - into here instead of hello world
14:04 - so pomodoro
14:15 - and pomodoro
14:18 - okay
14:21 - components
14:23 - pomodoro
14:28 - okay so now this component is registered
14:31 - and now my page only says clock
14:35 - all right so now i need to
14:40 - look at my mockup so i'm going to be
14:42 - doing most of the styling first at least
14:45 - getting these tabs and then some kind of
14:47 - box in the middle for the timer and
14:50 - getting all this to display
14:52 - and then i'm going to start
14:54 - making the actual timer function
14:58 - so first i'm going to get some tabs i
15:02 - think
15:03 - so let me go to beautify
15:05 - and search for tabs
15:13 - v tabs component
15:16 - this is fine
15:19 - if i go down
15:22 - i can see some more examples
15:27 - like this one
15:29 - where everything is contained
15:31 - in one box and i believe this is inside
15:33 - a card because that's pretty similar to
15:35 - what i want
15:39 - yeah it's inside a card
15:42 - and then
15:43 - they have the v card title
15:46 - um
15:47 - i don't know if i'll have a title but
15:49 - i definitely want tabs so
15:52 - let me
15:54 - go into pomodoro now
15:56 - i'll just delete this row and let me add
15:59 - a v
16:00 - card
16:03 - and then
16:06 - v tabs
16:15 - all right
16:16 - and so i need a v model for the current
16:19 - tab
16:22 - um
16:23 - background color color
16:26 - grow
16:27 - i wonder what grow is
16:32 - oh i think it's where it
16:34 - stretches the whole width of the
16:36 - container
16:38 - maybe
16:40 - i can try it so
16:42 - let me first v-model
16:45 - the tabs
16:47 - and
16:49 - i'm gonna say
16:53 - i guess i'll say timer type
16:55 - because my tabs are all
16:58 - uh if the pomodoro long break or short
17:02 - break
17:02 - so i have to create those here
17:05 - in a script tag
17:08 - i'll create
17:10 - a data method
17:12 - so
17:16 - oh wait
17:21 - didn't need that all right
17:23 - i'm gonna do timer type
17:26 - and this will be
17:31 - i guess i'll
17:33 - do one
17:36 - um
17:39 - because the
17:40 - i think the tabs
17:44 - will default to a number like zero one
17:46 - two
17:48 - unless i denote that it's a string
17:51 - so let me actually do zero
17:54 - okay
17:55 - and
17:57 - now let me put some actual tabs in here
18:00 - so
18:01 - it's v tab and that will give me the
18:03 - title at the top
18:06 - and then
18:08 - i could loop through tabs
18:11 - or
18:12 - yeah i think i'll loop through the tabs
18:14 - so let me
18:17 - do i guess tab titles
18:20 - as an array i'm going to call this
18:22 - pomodoro
18:24 - and
18:26 - the next one
18:29 - short break
18:31 - and the next one
18:34 - long break
18:38 - and i'll just do a v tab here
18:43 - oh and then
18:45 - a v
18:46 - 4 directive inside
18:48 - and so i'll do
18:52 - title
18:53 - [Music]
18:54 - i guess tab
18:56 - in
18:57 - tab
18:59 - titles
19:01 - and then i need a key here
19:03 - so key
19:06 - and that will be just tab because those
19:08 - are all unique names
19:10 - so oops
19:12 - i can
19:14 - close that
19:17 - and then close the tab
19:20 - and then inside
19:22 - the tab of course i want to display the
19:25 - title let me zoom in one
19:28 - okay and then i want to display the
19:30 - title so
19:32 - i'll say tab
19:35 - so let me see
19:36 - how this looks
19:40 - and
19:43 - all right so i see i think this is just
19:45 - the card
19:48 - don't think it's showing anything
19:56 - okay there's a v card there's v tabs
19:59 - inside
20:02 - and
20:06 - v item group
20:12 - okay
20:13 - so
20:14 - i have
20:16 - the tab let me see what i'm
20:18 - missing here from the dock so
20:22 - okay they're just looping through
20:24 - the tabs there
20:27 - and i wonder
20:31 - because i have the light theme
20:34 - but it doesn't seem to have anything
20:36 - inside of it anyway but i could change
20:38 - this to dark i think
20:41 - there
20:44 - and
20:45 - that didn't do anything
20:46 - so let me undo
20:48 - i'll have to look up themes later
20:51 - but
20:52 - let me see
20:55 - why the tabs aren't displaying
20:58 - so let me
21:00 - open this up
21:06 - okay so in
21:08 - the item group
21:16 - tab slider yeah so the tabs aren't
21:18 - displaying at all
21:20 - um
21:24 - so
21:26 - i'm showing tab in tab titles
21:36 - yeah everything should be working
21:39 - let me take this card and put it more
21:43 - in the center of the page or further
21:44 - down so i can see better so class equals
21:48 - i'm going to give it a margin top
21:50 - of eight
21:53 - okay so that bring the cut brought the
21:55 - card down
21:57 - and now i'm gonna
21:59 - give it
22:00 - a width
22:03 - so
22:05 - i think i can say
22:08 - let's see
22:10 - um
22:15 - promise circular
22:16 - okay i don't know if it has classes for
22:18 - width
22:19 - so i'm just going to add some styling
22:21 - here so i can style the card a little
22:23 - bit
22:25 - so
22:26 - i'm going to say
22:29 - style
22:32 - and
22:33 - let me go ahead and use sass here
22:35 - so i'll do laying equals
22:38 - sass
22:41 - and then i'll do
22:44 - um
22:46 - what is it it's probably a v
22:49 - the class is probably called v card too
22:53 - oh i did okay thanks
22:59 - i'll go and fix that
23:02 - uh
23:03 - tab
23:05 - tab titles
23:06 - oh i did okay
23:11 - thanks
23:12 - okay so here i'm gonna do
23:18 - oh now it's failed to compile
23:20 - oh it doesn't like the dot
23:22 - um anyway i can just real quick
23:26 - yeah the
23:28 - um the class is v card so i'm going to
23:31 - reference the v card class
23:35 - and do
23:36 - um
23:37 - a width
23:39 - i'm gonna set a width of
23:40 - i don't know 400 pixels
23:47 - okay
23:48 - not not wide enough
23:52 - let me just set it for 600 then
23:59 - all right that looks okay
24:01 - and now i want it centered on the page
24:04 - so
24:06 - um
24:07 - i could do a grid system which would
24:10 - probably belong in the app component
24:12 - so i could do here
24:15 - like
24:16 - v container
24:21 - and then close that and then
24:25 - the
24:26 - row
24:32 - okay
24:32 - oops
24:36 - and then inside i'll do a
24:38 - v
24:40 - column
24:42 - and then
24:44 - small of six columns
24:48 - and offset
24:50 - small of
24:53 - three columns
24:56 - okay so let me put the quotes around
24:57 - that too i think i need quotes
25:02 - all right
25:07 - okay that's pretty good
25:10 - and
25:14 - all right now i need the actual card
25:16 - content inside
25:18 - so
25:22 - let's see
25:24 - okay get out of that component now i
25:26 - have v tabs here
25:29 - and then after
25:31 - so outside of v tabs
25:33 - i'll put
25:34 - oh no it has to be inside of the tabs
25:38 - so let me see what component i use for
25:40 - that
25:41 - okay it's v tabs
25:44 - items
25:45 - b tabs items
25:48 - and then that's also v modeled to the
25:50 - current tab
25:54 - so let me do
26:00 - uh
26:00 - v
26:01 - tabs
26:04 - items
26:05 - v model
26:08 - and this will be
26:12 - i guess timer type
26:18 - okay and then inside of vtabs items
26:22 - i would think it's v yeah v tab item
26:27 - inside and then
26:30 - okay they're looping through
26:32 - and they're also doing a card inside i
26:35 - guess to give it some spacing
26:39 - and then they're giving it the prop flat
26:41 - so i think i'm going to do the same
26:42 - thing
26:45 - so
26:47 - let me copy this
26:52 - all right
27:04 - and
27:10 - okay now i have to fix these tab items
27:16 - so
27:17 - right now i'm just going to work off a
27:18 - one tab so i'm going to completely get
27:20 - rid of the
27:22 - loop
27:24 - color basil i don't think so
27:29 - um
27:32 - oh there's nothing inside of the card
27:35 - so
27:36 - what should i put in here
27:38 - i'll put
27:40 - i guess just
27:42 - a placeholder for now so zero zero
27:45 - zero zero
27:51 - okay cool
27:52 - a timer
27:55 - and now
27:58 - so also inside but that's not giving me
28:00 - any spacing for some reason
28:02 - i thought it was going to give me
28:06 - spacing
28:07 - but
28:09 - that's okay i can add a padding class
28:11 - here then
28:12 - so class equals padding
28:15 - all of
28:17 - five
28:19 - let's see
28:21 - yeah that's better
28:22 - and now let me add
28:25 - buttons here so
28:28 - the
28:30 - is it vbtn or v button
28:35 - i can't remember
28:37 - all right button
28:45 - this one thing i love about the beautify
28:46 - docs is that they have so many
28:48 - playgrounds so you can test out the
28:50 - buttons
28:52 - in the browser here
28:57 - but i just want
28:59 - basic button
29:01 - yeah it's vbtn
29:05 - so
29:06 - i'll do
29:09 - vtn
29:11 - and then i need three buttons so start
29:15 - and then
29:16 - v btn
29:19 - stop
29:24 - and then
29:27 - reset
29:31 - and the start button will be
29:34 - um
29:35 - i guess i can is it color or variant
29:38 - so i can do primary for the start button
29:43 - okay cool
29:46 - and actually these look kind of weird
29:47 - next to each other i wonder
29:49 - i know there's a button group somewhere
29:51 - here so let me see
29:54 - what the button group looks like
30:00 - oh this looks like they've updated this
30:03 - i haven't looked at it in a long time
30:06 - okay multiple
30:10 - toolbars
30:13 - um
30:16 - let me see how it looks with a button
30:17 - group where's their basic
30:19 - example
30:25 - so
30:28 - vbtn toggle
30:32 - actually i don't want
30:36 - toggle
30:40 - maybe i'll just leave separate buttons
30:45 - yeah oops didn't mean to get out of
30:48 - there yeah i'll just leave separate
30:49 - buttons for now
30:51 - um
30:53 - let's see
30:55 - are these let me make the timer bigger
30:58 - so i can use some of their
31:01 - font classes
31:06 - and
31:07 - what would i call it oh type in their
31:09 - typography section
31:11 - text and typography
31:21 - okay
31:23 - material design
31:26 - so
31:33 - okay these are
31:34 - their defaults anyway
31:38 - but
31:39 - i think there's a list of classes
31:43 - for bigger smaller
31:47 - i guess maybe
31:52 - i guess maybe that was some other
31:53 - framework i'm thinking of
31:55 - all right so
31:57 - i guess what i'll do here is just
32:01 - add a class of
32:04 - time
32:06 - and then
32:08 - here i'll do
32:11 - time and style that class
32:14 - by the way i'm using sas
32:16 - if you haven't seen indented syntax
32:18 - before it's not the default syntax
32:21 - but it's just the one that i usually
32:23 - prefer
32:26 - i think it's a bit easier to read and
32:28 - write and you also get some other
32:30 - shortcuts that i don't believe are in
32:33 - the regular syntax for sas
32:38 - um
32:39 - but you can do basically the same things
32:42 - so
32:43 - for time
32:44 - i'm going to set a font size and let me
32:47 - just look first
32:49 - at what this font size is
32:54 - so in the h1
32:57 - and computed
33:00 - i can see
33:03 - font size is 32 pixels right now
33:08 - so let me do
33:12 - let me try 80 pixels
33:15 - make it really big
33:19 - okay
33:20 - i think that's good it should be a big
33:22 - timer
33:23 - now the font weight is
33:31 - i wonder if that's just
33:35 - the default i think
33:36 - it's using roboto yeah it's using roboto
33:40 - um
33:41 - i don't know what i have available to me
33:43 - but i can try
33:45 - setting the font weight so it's not so
33:46 - thick
33:48 - and do like a 400
33:53 - okay cool i like that better
33:56 - all right
33:59 - um so that's good
34:02 - um i can also do
34:04 - text
34:05 - align
34:08 - center
34:11 - yeah i like that
34:13 - and now i guess i should start
34:17 - doing the actual timer and then i can
34:20 - fix other things as they go along
34:23 - so
34:24 - for the timer i'm going to use
34:26 - of course javascript set interval
34:29 - actually this is kind of bothering me
34:31 - real quick so let me
34:33 - um go back to tabs
34:35 - just for one second and
34:41 - use that prop to stretch them
34:44 - i think
34:46 - i think it's this grow prop that will
34:48 - stretch them all the way across the page
34:54 - the third tab looks bigger yeah because
34:56 - it there's this blank space on the edge
34:59 - there
35:01 - so let me
35:04 - okay so in here i'll use grow
35:09 - yeah and now it's it's completely
35:12 - stretched out all the way across and
35:13 - looks much better and with this centered
35:16 - and then the buttons i'll figure out
35:17 - what to do with them
35:19 - at some point
35:21 - and then add icons to the buttons too
35:25 - um actually let me go ahead and do that
35:27 - since i'm already
35:29 - doing the styling here so with the
35:31 - buttons
35:33 - um
35:34 - actually the stop button i'm going to
35:36 - give it a color of
35:39 - error
35:42 - yeah
35:44 - okay i have these and actually i'm going
35:46 - to go ahead and get the icons
35:50 - for the buttons
35:51 - because i can do that in a minute
35:56 - and
35:57 - where is it
36:01 - okay so when beautify when i added it as
36:03 - a vcli plugin i think that it it set
36:07 - this up for me but i can check
36:11 - so in the plug-ins vidify
36:15 - and no it didn't
36:25 - okay so
36:26 - i want
36:27 - material design
36:33 - um it's already doing everything else
36:35 - for me so
36:36 - i think i'll just add the icons object
36:39 - here
36:41 - icons
36:44 - and then
36:45 - icon font
36:48 - which should be mdi i think i think
36:51 - that's what i usually use so icon font
36:56 - and then
36:58 - mdi
37:01 - and
37:04 - yeah let me see if now so let me go in
37:07 - the start
37:09 - and
37:12 - try to add an icon there
37:25 - um
37:27 - where is it yeah v icon
37:29 - and then i can
37:31 - pass in the name of the icon that i want
37:34 - so
37:34 - the icon
37:36 - and then i'll do mdi dash
37:40 - whatever the name of the icon is
37:43 - so let me see if there's a start icon
37:48 - it takes a minute to load
37:51 - or no i want a play button so maybe it
37:53 - will be play
37:59 - yeah i kind of like the circle one
38:01 - play circle outline
38:05 - so let me do mdi dash
38:08 - play dash circle
38:11 - dash
38:13 - outline
38:18 - okay cool
38:19 - and now i have the icon
38:22 - in the button now it doesn't look great
38:26 - because i think i have to give it a left
38:28 - prop
38:31 - yeah so it pulls it away from
38:33 - the text
38:34 - and then let me try to make it small too
38:37 - and see
38:37 - if that looks better
38:40 - yeah i think that fits in with the
38:42 - button size that i have
38:44 - so now let me do the same thing for the
38:46 - rest of the buttons
38:48 - so for stop
38:52 - and
38:56 - let's see oh yeah
38:58 - i'll copy that
39:02 - and then i have to figure out
39:04 - it would be nice if there was just stop
39:06 - circle outline
39:08 - oh there is
39:10 - nice
39:11 - and then reset
39:13 - um what would reset be called
39:18 - um
39:23 - what was the first thing
39:25 - i typed in start
39:31 - yeah i think
39:34 - restart
39:36 - that's a good one
39:38 - so let me do
39:40 - restart
39:43 - restart
39:47 - yeah and see
39:51 - uh oh wait i accidentally changed
39:55 - the stop one
40:00 - so
40:07 - okay now
40:11 - and now i can change the reset button
40:15 - so
40:17 - restart
40:22 - okay cool i think there is actually a
40:24 - refresh one
40:25 - but
40:27 - or okay reload
40:29 - never reload one restart
40:32 - looks good i really like how
40:34 - that looks for some reason
40:37 - maybe i'm just seeing something
40:39 - new
40:42 - okay so
40:43 - let me center these buttons and give
40:46 - them a little bit of spacing
40:50 - um
40:53 - so i can
40:56 - put i guess i can put a wrapper around
40:58 - the buttons
41:00 - and i could give it a class of
41:04 - button group
41:11 - okay then
41:14 - close the div
41:21 - and now
41:25 - um actually
41:28 - so
41:28 - these buttons or the button groups
41:30 - inside of the card
41:32 - so i can also
41:35 - do a display flex
41:38 - and then
41:40 - align
41:42 - items
41:44 - center
41:45 - is it a line or is it justify
41:49 - no no no it's justify
41:54 - justify
41:57 - content
42:04 - maybe it's not
42:06 - oh oh yeah that makes sense it's because
42:11 - um
42:16 - what was i saying oh yeah it's because
42:18 - i'm doing flex here
42:20 - and i have two i have the button group
42:23 - and then i have this
42:25 - and then i have the h1
42:28 - yeah
42:29 - so you're right flex direction column
42:33 - flex
42:36 - column
42:39 - yeah and then here
42:43 - which i mean i already had this though
42:45 - so
42:47 - but now i think i can do
42:51 - justify
42:53 - cont
42:54 - content center
43:00 - um
43:01 - or let me just look up flex
43:04 - their
43:05 - flex
43:07 - classes real quick
43:10 - okay so they have justify
43:16 - okay it's just justify
43:21 - justify center
43:25 - and i thought because now i'm doing it
43:27 - as a column it would be justify center
43:29 - let me see
43:31 - no i think it's a line items
43:34 - center
43:41 - let's see flex-a-line
43:44 - align items
43:48 - i have a line center
43:54 - okay
43:56 - cool
43:57 - that's good now i'm going to give these
43:58 - like a margin of just a few pixels in
44:01 - between the buttons
44:03 - and
44:05 - see
44:08 - um
44:11 - so
44:12 - i'll just add them
44:15 - as classes here so
44:18 - let's do
44:20 - or actually
44:26 - oh i don't have it here but i'll just
44:27 - add it down here
44:29 - vbtn
44:31 - and then
44:33 - add it as a
44:35 - margin
44:40 - let's see
44:41 - margin
44:43 - left margin right
44:47 - is there a margin y
44:49 - i can't remember i'll just do margin
44:52 - and then do
44:54 - um
44:55 - zero for top and bottom
44:57 - and then
44:58 - two pixels
45:00 - for left and right
45:03 - yeah
45:05 - i think that's pretty good it separates
45:07 - the buttons a little bit
45:10 - all right i'm happy with this
45:15 - and now
45:19 - um
45:21 - yeah this is probably the best looking
45:23 - of all the projects
45:24 - that
45:26 - i've made so far
45:28 - so i almost want to take a second just
45:31 - look look at it i think it looks pretty
45:34 - nice
45:34 - um
45:36 - so now yeah let me set up the timer
45:39 - so in here
45:41 - i'm going to need some methods
45:44 - methods and object
45:47 - and i'm going to need start
45:50 - and then
45:54 - a pause yeah i'm just going to use stop
45:56 - for pause
45:58 - because
45:59 - there's really no difference thanks
46:02 - i don't think i don't see any difference
46:04 - between stop and pause because this is
46:06 - just stopping the timer and resetting is
46:08 - what actually actually resets the timer
46:14 - so
46:15 - uh i have start now i'll need stop
46:20 - and
46:23 - reset
46:31 - okay
46:32 - so
46:34 - i think on my old pomodoro i did have
46:36 - pause but i had no stop
46:39 - so i think it was just like
46:41 - renaming
46:44 - of it
46:46 - uh start stop
46:49 - reset
46:50 - okay
46:51 - so i'm going to start with this the
46:53 - start one
46:54 - which i need a set interval
46:57 - and
46:59 - pass it a function
47:02 - and then i need the interval
47:05 - to run every one second so
47:08 - wait 1 000 milliseconds
47:12 - and then
47:15 - so
47:16 - every second i'm going to have to
47:18 - recalculate
47:20 - the minutes and seconds here
47:25 - so
47:27 - i'm gonna
47:28 - one i'll need these on data so i'll need
47:33 - minutes
47:37 - and let's see
47:43 - uh
47:44 - yeah because i'll need to make these
47:45 - strings at some point because i need
47:47 - leading zeros on them
47:50 - um
47:53 - hmm
47:54 - let me make them a string and see
48:01 - uh
48:04 - okay so let me do this then let me do
48:08 - total seconds
48:11 - which will be a number
48:14 - so it starts off with
48:16 - the default
48:18 - is
48:20 - well no
48:21 - based off of the timer type
48:24 - okay so let me just lay these out so i
48:26 - need a display
48:27 - minutes and a display seconds right
48:30 - and those will both be strings
48:34 - and then i need some kind of actual
48:37 - total
48:39 - time that i can recalculate every second
48:42 - and then change or update the display
48:44 - times
48:46 - um so let me
48:51 - do
48:54 - well should i call it total i think
48:56 - inside of these minutes and seconds i
48:58 - should put them inside of a display
49:00 - object anyway so
49:02 - let me put these inside
49:05 - and then
49:08 - so inside of display
49:10 - and then
49:14 - let me say total seconds
49:20 - and actually this i could do that as a
49:23 - computed property
49:28 - um no no because i'm going to reset the
49:32 - number of total seconds if they change
49:34 - to like pomodoro short break long break
49:36 - okay so i'll have total seconds
49:38 - and the default
49:40 - again will be 25 so 25 minutes i have to
49:44 - put that in seconds so 60 seconds
49:48 - okay
49:50 - so i think
49:53 - i think that's good
49:56 - right and then let me put the display
50:01 - actually up here now
50:03 - so
50:07 - let me see
50:12 - um so this will be
50:13 - [Music]
50:15 - a display dot minutes
50:20 - and then
50:23 - this
50:24 - display dot
50:26 - seconds
50:32 - okay and it's still displaying the same
50:34 - thing
50:36 - because i have those
50:38 - as strings down here
50:41 - now the total seconds
50:44 - let me look at the total seconds
50:48 - oh i did
50:49 - get view devtools in brave so just in
50:52 - case i'm having to look at this a lot
50:55 - i'll open the brave browser so you can
50:57 - see it better
50:59 - okay so in pomodoro
51:01 - [Music]
51:02 - yeah total seconds is fifteen hundred
51:06 - okay so now i want to start
51:09 - um actually so now i need to initialize
51:14 - figure out how i'm going to initialize
51:16 - these the seconds here
51:20 - so i could actually do
51:23 - these as computed properties
51:27 - computed
51:30 - then
51:36 - um
51:37 - and then based off of the total seconds
51:40 - the display minutes and display seconds
51:42 - updates
51:45 - so i think that's what i should do right
51:53 - but then
51:56 - yeah then i would i guess i would call
51:58 - them i would get rid of them in data and
52:00 - then just call
52:03 - uh oh display
52:06 - minutes
52:08 - and
52:10 - display
52:11 - seconds
52:14 - and computed
52:16 - and then based off of the total seconds
52:20 - so
52:22 - let's see
52:24 - for minutes
52:28 - i would just return
52:31 - total
52:32 - oh yeah and then i have to check if it
52:34 - needs a leading zero
52:38 - okay but first let me do total seconds
52:41 - times
52:45 - 60.
52:50 - then i have to
52:53 - wait
52:54 - no no
52:55 - yeah
52:56 - no no it's divided by 60. it's like
52:58 - that's going to be a really big number
53:00 - of minutes
53:02 - so total seconds divided by
53:05 - divided by 60
53:08 - and then
53:09 - floor it so math.floor
53:15 - and then
53:18 - this one will be
53:19 - [Music]
53:24 - display
53:28 - so this one i'll have to do the
53:29 - remainder just like trim the seconds off
53:32 - the end
53:34 - so
53:38 - i'll do
53:44 - okay so total
53:47 - yeah total seconds
53:49 - divided
53:50 - or
53:51 - i think i can just do
53:53 - the modulus right
53:57 - and get the remainder of seconds
54:01 - that should work and now i have to check
54:04 - so
54:07 - here i'm going to do const seconds
54:10 - equals
54:12 - um
54:15 - total
54:16 - seconds
54:18 - actually not const
54:20 - this would be let seconds is total
54:22 - seconds
54:23 - modulus
54:25 - 60
54:26 - and now i need to check
54:28 - if that's a string so if
54:32 - no i mean if it's less than 10 so if
54:34 - it's a single digit i need to
54:36 - append elite oh
54:39 - give me an error so i need to append a
54:40 - leading zero if it's single digit or the
54:43 - clock's gonna look really weird
54:46 - so if
54:49 - seconds
54:50 - is
54:53 - less than
54:57 - ten
55:05 - i kind of don't want to change between
55:11 - strings and numbers here
55:18 - um so if seconds is less than 10 i guess
55:22 - i could return
55:26 - a leading zero
55:28 - plus
55:30 - seconds
55:32 - that would turn it into a string
55:34 - otherwise
55:36 - i would just return
55:39 - seconds
55:47 - oh am i missing something oh total
55:49 - seconds is not defined
55:52 - oh it's this that total seconds
55:56 - yeah this dot
55:58 - total seconds and this dot total seconds
56:05 - okay so i'm gonna actually need this
56:08 - same logic
56:09 - inside of
56:11 - display minutes
56:14 - so
56:19 - i could do another
56:21 - method here to call
56:23 - like if seconds is greater than 10 so i
56:25 - can do
56:27 - um
56:31 - format
56:32 - time
56:36 - let's see
56:40 - um okay so let me do format time and
56:44 - move this
56:49 - out of here i guess
56:53 - so it would be
57:02 - um
57:04 - yeah let me move all this logic into
57:05 - here
57:09 - minutes could probably not need the
57:11 - leading zero
57:13 - the thing is if i don't have a leading
57:15 - zero here then
57:18 - it's going to change like this whole
57:20 - timer would shift to the left
57:22 - so it's going to move around the page i
57:24 - want everything to stay in the same
57:26 - place so the same number of digits i
57:29 - guess
57:34 - okay so
57:37 - i'm just going to pass in time as a
57:38 - number so time
57:42 - return a string
57:46 - if times less than 10 return zero plus
57:48 - time
57:49 - so now i can call format time
57:53 - oh else
57:54 - i need to return something so
57:56 - return
57:57 - time
57:59 - dot to string
58:02 - just to make it always return a string
58:07 - so now
58:08 - i can do
58:11 - i can always call the format
58:13 - time function
58:16 - and then do the same thing here
58:22 - where i can do
58:24 - const
58:26 - minutes equals
58:29 - that and then
58:30 - return
58:33 - format time
58:34 - minutes
58:40 - okay
58:41 - this will be cons too
58:45 - all right and now i need to put these in
58:47 - the
58:50 - shouldn't it be less than oh yeah i
58:53 - thought that was less than for something
58:55 - yeah thank you
58:59 - oh tom that's why i was wondering why
59:02 - you had that i thought maybe i was
59:04 - forgetting an html tag
59:06 - you're right thanks everyone it's less
59:08 - than
59:11 - okay so now let me put these in the dom
59:13 - display minutes
59:17 - and
59:18 - display
59:20 - seconds
59:26 - oh format time oh it's this dot format
59:29 - time
59:33 - um
59:36 - where is it where is it yeah here
59:40 - i have to call the method
59:43 - okay so this dot format time
59:49 - cool
59:50 - sweet
59:51 - so now i just need to start the timer
59:56 - all right
59:58 - so i have the set interval here
60:01 - so first let me
60:03 - [Music]
60:04 - make a method
60:06 - on the start button so i'll do
60:09 - at click equals
60:12 - start and i'll go ahead and add all
60:14 - these at click so for stop
60:17 - it's at click equals
60:20 - stop
60:25 - for reset it's at click equals
60:29 - reset
60:33 - all right
60:38 - okay
60:40 - so i am
60:43 - starting a set interval here
60:48 - and
60:51 - um so in set interval every second i'm
60:54 - gonna have to
60:58 - recalculate the total seconds
61:02 - so i'm basically gonna just minus one
61:04 - second off of total seconds
61:06 - i guess
61:08 - uh so total seconds minus equals one
61:18 - and
61:19 - oh it's this dot total seconds this dot
61:21 - total
61:22 - seconds let me see how that is
61:29 - sweet cool
61:32 - all right but there's no way of stopping
61:34 - it now
61:35 - so i'm gonna let that keep counting down
61:39 - so to stop it i need to actually have a
61:41 - reference to
61:45 - this interval so that i can clear it
61:50 - what if the time is at zero i haven't
61:52 - gotten there yet the time it's probably
61:54 - going to count down to negative numbers
61:56 - right now
61:57 - um
61:59 - but it's not there yet
62:03 - so
62:04 - thank you
62:06 - um
62:08 - let's see so i have display oh i don't
62:10 - need this display anymore because i have
62:12 - those in computed now
62:13 - i do need so i need a reference to this
62:16 - timer i'm kind of waiting to see what
62:18 - happens if the minutes
62:20 - are correct when it counts down
62:24 - five
62:30 - yay
62:31 - cool
62:33 - so now i need a reference to the timer
62:35 - instance
62:36 - that
62:38 - i start
62:40 - so
62:40 - i guess i'm just going to call it timer
62:42 - instance
62:44 - and
62:49 - um
62:50 - yeah i'll
62:52 - start it with null i guess
62:57 - so
62:59 - i have a timer
63:00 - instance and i'll set this dot interval
63:04 - so this dot timer instance
63:09 - so now i have a reference to the timer
63:11 - instance
63:14 - as long as i don't start multiple
63:16 - instances because then i'll just have no
63:18 - reference to them
63:20 - so what i can do here is use this dot
63:24 - clear interval
63:28 - um oh and then pass it no no it's not
63:30 - this
63:31 - what am i doing
63:33 - it's a
63:35 - this dot timer instance so i can clear
63:37 - interval on the timer instance
63:42 - and then for reset
63:44 - i'll go ahead and do this so i can call
63:46 - this.stop which will clear the interval
63:48 - in case it hasn't already been cleared
63:51 - and then i can
63:52 - reset the time
63:55 - so for right now i'll just do
63:58 - because i'm i'm not dealing with the
64:00 - breaks yet
64:02 - so i guess i'll just do
64:04 - this.total seconds is 25 times 60.
64:09 - so total
64:11 - seconds
64:12 - is 25
64:15 - times
64:16 - 60
64:17 - when i reset it
64:23 - okay
64:24 - yeah and that's one reason why i wanted
64:26 - to use vidify today because i knew it
64:27 - would be a little bit easier to make a
64:30 - nice looking app
64:31 - versus just trying out kind of different
64:34 - design frameworks each time
64:37 - all right
64:38 - start
64:41 - stop
64:43 - okay
64:44 - start
64:46 - goes down again
64:48 - stop
64:51 - stop
64:53 - stop
64:55 - oh because i click start twice okay
64:57 - we're going to have to fix this bug
65:00 - reset
65:02 - i'm going to have to refresh
65:04 - so if i only click it
65:06 - once and then stop
65:09 - you know i'm
65:10 - doing a clear interval on it
65:13 - so i can do start
65:17 - stop
65:20 - reset
65:21 - okay that all works but if i do start
65:24 - and then start again
65:27 - and then start again
65:28 - see how fast it's counting down keep
65:31 - clicking start
65:34 - and then i stop
65:35 - and
65:37 - because i lost references to all of
65:39 - those
65:40 - intervals that i started
65:42 - all right
65:43 - let me clear that so i'm going to have
65:45 - to do some kind of check here
65:49 - uh so before i start
65:52 - i should actually
65:56 - reset should be disabled when it's
65:57 - running that's a good idea
66:01 - um
66:04 - uh so here let me just do this real
66:06 - quick so
66:08 - let me do this dot
66:10 - stop before it started
66:13 - so now i can't
66:19 - so if i click start multiple times here
66:22 - it doesn't matter
66:24 - if i click stop it still works
66:27 - okay so reset disabling reset
66:32 - it's a feature
66:35 - yeah i don't have to work as long as my
66:36 - timer goes faster
66:39 - um
66:42 - okay so
66:44 - reset how do i so how do i know because
66:48 - let's say i clear interval here
66:53 - um
66:55 - let me actually see
66:57 - what it is after i clear the interval
67:01 - because i don't think it's a is it a
67:03 - fault does it is it a falsie value
67:07 - let me see
67:11 - okay so inside
67:12 - pomodoro what is interval right now
67:17 - okay let me refresh it
67:19 - because the timer instance should be
67:21 - null starting out
67:23 - yeah timer instance is null right now
67:26 - so let me start
67:30 - stop
67:33 - reset yeah it's still pointing to the
67:35 - same timer instance
67:38 - even after i stop or refresh
67:41 - so what i could do
67:44 - is in reset
67:47 - i could clear that instance
67:50 - so that
67:57 - uh
67:58 - no no no no that won't work never mind
68:01 - that was faulty logic
68:04 - okay
68:08 - um what should i do then
68:13 - so i could set a boolean
68:16 - maybe i'll set a boolean like timer
68:18 - going or something and that way i can
68:20 - know so i can disable the reset button
68:23 - like if timers started
68:28 - um
68:29 - unless someone else has a better idea
68:30 - that's what i'm going to do
68:32 - so
68:36 - is
68:38 - is running
68:41 - is running
68:44 - is that a good idea so it starts off as
68:47 - false
68:48 - and then in
68:54 - in start i'll do
68:57 - this dot
68:58 - is
69:04 - no because
69:06 - so reset
69:09 - if i want them to only be able to reset
69:11 - if it's already stopped
69:17 - then
69:18 - i need to know if it's currently running
69:24 - yeah
69:27 - so i think i'll just automatically in
69:29 - the start function i'll do is running is
69:32 - true
69:34 - and
69:35 - in stop
69:38 - i'll do
69:39 - this dot is
69:41 - running is false
69:46 - oh and then let me get go to the button
69:48 - now in reset
69:51 - i'll do disabled here so i'll put
69:55 - disabled equals
69:58 - is
69:59 - running
70:00 - so if it's running it will be disabled
70:02 - let me see if that works
70:05 - um
70:07 - yeah it should i guess it should be
70:09 - disabled here or if it matters
70:11 - so now when i start now that it's
70:13 - running it's disabled when i stop it
70:18 - it works again
70:22 - okay cool
70:25 - um
70:26 - what's next
70:28 - let's see
70:31 - oh i wanted to add a progress bar
70:35 - oh and i need to do the brakes let me do
70:37 - the brakes first how how is that going
70:40 - to work
70:43 - um
70:47 - so for short break and long break
70:49 - actually
70:50 - i only want to
70:53 - change the time here i want all of these
70:55 - features still here
70:57 - so
70:59 - i wonder if i could do
71:02 - so really all i want is one tab
71:10 - so i wonder if there are events
71:12 - let me look at tabs again here there
71:14 - must be an event i can capture
71:17 - and just change
71:20 - the time
71:26 - let's see
71:28 - so okay yeah i'm in tabs
71:31 - and now
71:33 - in the api i can see events
71:37 - okay so there's a change event emitted
71:41 - when the tab is changed
71:43 - and this is in the vtabs component
71:48 - so
71:49 - i can capture that here
71:53 - i think i can so let me do
71:56 - at change
71:59 - equals
72:02 - one second
72:09 - making sure i can see everything all
72:11 - right
72:13 - um
72:18 - what was i just doing oh yeah so at
72:20 - change equals
72:24 - um
72:26 - what should i call this so
72:29 - change
72:34 - change
72:35 - tab
72:36 - change
72:38 - timer type
72:40 - timer type
72:44 - and then i can make a method for that
72:47 - so
72:49 - do it here
72:56 - and i should so i should get the number
72:59 - of the tab i think
73:01 - so let me just log out that number
73:05 - and see if that changed because i don't
73:07 - know if i'm going to be intercepting
73:11 - their event
73:14 - so
73:15 - yeah let me
73:16 - see sorry
73:18 - um
73:22 - okay
73:24 - let me open the console
73:27 - oh wait
73:29 - change timer type
73:31 - is
73:32 - not defined on the instance but
73:34 - referenced during render
73:37 - oh i think this is an old error
73:43 - v content is deprecated
73:46 - oh right right
73:48 - use v main instead well i
73:50 - i set it up from
73:52 - their
73:53 - um
73:55 - their cli so that's weird
73:58 - i remember so they changed this this is
74:01 - something that vidify
74:03 - changed so
74:05 - but i might as well update it
74:08 - so it only takes a second okay so it
74:10 - wants me to use a v main wrapper instead
74:12 - of the content
74:15 - so let me see if that went away if it
74:17 - still works
74:20 - yeah
74:23 - okay so
74:27 - now when i change tabs
74:29 - yeah it's showing me the tab numbers
74:35 - wait
74:36 - long break to
74:42 - that one
74:44 - okay yeah
74:45 - so now i see the tab so i need to change
74:48 - the time based off of the tabs
74:50 - so i should have the times stored
74:52 - somewhere
74:56 - and
75:02 - um so i have tab titles
75:05 - here
75:07 - and i wonder if i should do objects
75:10 - because i need the number of time for
75:13 - each one of these
75:15 - so i think what i'm going to change this
75:17 - to
75:19 - is
75:23 - so here i'm going to do current timer
75:28 - i'm going to break everything so current
75:29 - timer
75:31 - and then here i'm going to do
75:37 - timers
75:39 - and i'm going to change these into
75:41 - objects
75:48 - oh yeah name
75:50 - and wait let me fix
75:54 - uh fix all this
75:58 - all right so
75:59 - current timers
76:01 - which
76:04 - is actually this so this needs to be
76:08 - each one needs to be its own object
76:12 - so the name and then
76:15 - i'll put
76:18 - time
76:20 - or i'll put minutes
76:24 - minutes will be 25
76:27 - for this timer
76:28 - because we'll just assume they don't
76:30 - want to time seconds for right now
76:39 - okay and now i'll put
76:42 - minutes for a short break will be five
76:44 - minutes
76:46 - and then
76:49 - oops
76:53 - for a long break
76:57 - it will be
77:05 - um minutes i don't know so some people
77:07 - do 25 some people do 10
77:11 - but
77:11 - hopefully i'll get around to doing a
77:13 - settings menu in this stream so they can
77:15 - change the time for it
77:18 - um oh yeah
77:21 - there we go so timers is a whole
77:25 - array of objects now current timer
77:31 - is the index of where the timer is in
77:34 - the array
77:36 - so
77:39 - i'm gonna have to change
77:41 - okay so here's the v model so i'll
77:43 - change this to current timer
77:46 - and then
77:49 - timers
77:52 - so where are my tab titles
77:56 - oh they'll be in here so
78:00 - um
78:03 - timers what did i call that i can't
78:05 - remember what i called it already
78:07 - yeah it's just timers
78:09 - so for
78:12 - timer in timers
78:16 - and i'll set the key as timer
78:19 - dot name
78:21 - and then this will be the same thing so
78:23 - timer dot name
78:28 - and does it work
78:30 - wait i have
78:33 - timer type is not defined on the
78:35 - instance but reference during render
78:39 - um
78:40 - oh yeah v model timer type so this
78:42 - should also be current timer
78:48 - and then
78:51 - i'll just update the method name to
78:52 - match so current
78:54 - timer
78:56 - and then
78:59 - change
79:02 - this will be
79:03 - current
79:04 - timer
79:06 - okay
79:11 - so
79:12 - now this should all work
79:14 - and
79:17 - this actually you know
79:19 - you know i might not even want this
79:21 - inside
79:23 - because all these tabs are is inside of
79:25 - the card here
79:26 - and
79:27 - i don't even need this inside of a tab
79:29 - item i could just not have any tab items
79:31 - since i want this to stay in perpetuity
79:36 - i don't want it to to move or change
79:38 - when the tabs change i just want the
79:40 - number to change so i'm capturing the
79:42 - event of the tab change
79:44 - but i don't actually want
79:47 - all of this
79:50 - inside so i think i can just get rid of
79:53 - all these tab items here
79:56 - and
80:01 - see if that works
80:05 - oh no
80:08 - um
80:09 - didn't really like it
80:17 - okay never mind
80:19 - apparently
80:21 - it
80:22 - does not work
80:28 - so i guess i need
80:30 - tab items
80:34 - um
80:38 - so how do i make this
80:40 - stay then
80:42 - i mean what if i what if i just take the
80:44 - card out
80:48 - and
80:52 - if i take this v card outside of tabs
80:58 - oh because i left it inside
81:00 - so let me see what happens if i take it
81:02 - outside
81:04 - oh yeah that works perfectly
81:09 - so maybe it was just because
81:12 - i had that inside of tabs let me try to
81:15 - get rid of these then
81:16 - i think i just made a mistake
81:20 - yeah it was because i accidentally kept
81:22 - this stuff inside of the v tabs
81:25 - okay so i didn't need that that's good
81:31 - can we refactor the tab
81:35 - um yeah we could
81:42 - we need to even this whole component is
81:44 - only 111 lines long
81:48 - um
81:49 - if we were to take out some of the logic
81:53 - the tabs really only takes up
81:56 - like
81:57 - this is all the tabs is
82:00 - all the v tabs
82:01 - it's these like
82:03 - eight lines of code
82:06 - so it's not that much
82:08 - we could probably eventually move
82:11 - i guess some of this stuff out
82:14 - or maybe just move everything out into
82:16 - components
82:18 - let me get rid of this color basil
82:19 - because
82:20 - i don't know why it's there
82:26 - okay
82:28 - so now
82:30 - like 30 minutes left
82:33 - okay so timer works
82:36 - shows up so i'm getting the event so
82:38 - what do i want to do with this event i
82:40 - want to change the type
82:43 - so what i'll have to do is change the
82:44 - current
82:46 - oh cool yeah so that that should be easy
82:49 - because i can change the current timer
82:53 - yeah if i have time at the end i will
82:56 - refactor
82:58 - current timer
83:00 - equals
83:05 - i guess just numb
83:07 - because that will
83:09 - be zero one or two
83:13 - and then
83:15 - okay so if the current timer is zero one
83:18 - or two i need to calculate i need to
83:20 - recalculate total seconds
83:23 - so when the tab changes
83:25 - i'm going to have to call
83:32 - reset
83:37 - yeah i'm gonna have to call reset
83:40 - here
83:43 - and pass in
83:47 - the total seconds i guess no
83:52 - um
83:56 - okay so i'm setting the current timer
84:01 - let's say i i call the method
84:03 - change current timer i changed the
84:05 - current timer now i have to recalculate
84:07 - the seconds
84:09 - so
84:11 - i should be calling reset this dot
84:14 - reset because i do want i want to stop
84:17 - the timer and i also want to reset it
84:20 - but
84:21 - i need to be passing in
84:24 - yeah let me i need to be passing in the
84:26 - minutes
84:28 - so
84:32 - yeah because i'll be able to get the
84:33 - minutes off of here
84:35 - and then calculate so i'm going to pass
84:37 - in the minutes
84:39 - and then this is going to be minutes
84:43 - minutes times 60.
84:46 - so here i'll have to pass in
84:51 - the
84:52 - this dot timers
84:54 - the num the index of which timer i want
84:59 - of the current timer
85:01 - this dot timers
85:03 - dot minutes yeah and then i'll get the
85:05 - minutes of the current timer so
85:07 - dot minutes
85:10 - past the timer object
85:14 - do i need the object for anything else
85:16 - other than minutes
85:18 - because i'm also going to be calling
85:19 - this reset from here
85:22 - so
85:27 - yeah i'm going to be calling reset from
85:29 - here
85:30 - so i need to do
85:33 - i need to also pass in the minutes here
85:40 - so i wonder
85:41 - i guess i just do the same thing
85:43 - only it will be
85:45 - this i don't need this dot
85:50 - so
85:51 - i'll pass in the minutes there too
85:54 - when i click reset
85:57 - okay
86:02 - sweet
86:03 - let me see if this works
86:06 - yeah it works i can stop
86:10 - i can reset no i can't
86:13 - okay so reset doesn't work
86:16 - but the reset here does work
86:19 - let me
86:21 - make sure there are no errors
86:24 - yeah so this works
86:26 - but for some reason when i start it
86:29 - stop it reset that doesn't work anymore
86:33 - so i have some kind of a bug here
86:37 - um oh timers is undefined oh oh right
86:42 - um
86:44 - num
86:45 - so i obviously can't do this
86:48 - so i need to do
86:50 - current
86:52 - timer
86:53 - because there's no num there
86:56 - so now i can go into
86:58 - timers
87:00 - pass in the current timer which is the
87:01 - index of the timer and do dot minutes so
87:05 - i should be able to do that
87:10 - let's see
87:14 - stop
87:15 - reset okay sweet
87:18 - i am happy about this
87:22 - reset
87:28 - okay so there are a couple things so the
87:31 - timer
87:32 - let's see
87:34 - what were we talking about earlier
87:36 - oh yeah
87:38 - the timer will count down to negative
87:40 - numbers
87:41 - so we should stop it
87:43 - and
87:47 - um
87:50 - so i should set
87:53 - kind of a catch-all in here
87:57 - so
87:59 - if
88:03 - this dot
88:04 - total
88:08 - you should change the interval
88:11 - to
88:12 - 10 milliseconds
88:16 - oh to play with people
88:18 - i think so i i want to do a settings
88:21 - menu so people can change their own
88:24 - intervals here
88:27 - oh let me actually see
88:30 - yeah that'll just count down real fast
88:35 - oh yeah like a stopwatch timer that's
88:37 - kind of it looks cool though
88:41 - all right undo
88:44 - um
88:46 - all right so if this dot
88:48 - total
88:50 - um
88:52 - oh yeah total seconds it's right below
88:54 - it
88:55 - okay so total
88:57 - seconds
89:01 - is
89:02 - less than or equal to zero
89:08 - then
89:11 - i'll call
89:13 - this dot stop
89:16 - and return out of the function
89:22 - and i think so i think that should work
89:27 - and just to test that out
89:30 - i will do
89:36 - well
89:37 - i guess i'll do this
89:39 - so
89:40 - i'm going to temporarily change this to
89:42 - being
89:43 - 5 seconds
89:47 - start
89:55 - sweet so it reset because
89:58 - um
89:58 - because the timer's not going anywhere
90:00 - it must have called the stop function
90:02 - and that's why reset isn't disabled
90:04 - anymore
90:06 - cool
90:07 - so let me undo that
90:10 - and
90:13 - um
90:15 - okay so
90:16 - total seconds
90:21 - this actually should be computed because
90:23 - right now i'm just
90:25 - betting on this being 25
90:29 - but if i do make
90:33 - this was actually easier than i thought
90:36 - yeah
90:38 - so what if i make a settings menu so
90:41 - that the user can update
90:45 - these
90:47 - these settings
90:51 - um
90:58 - let's see what would a settings menu
91:00 - look like
91:04 - i don't have a router in my app
91:07 - so i don't want to route them
91:09 - i don't want to bother
91:11 - installing it so let me do a dialogue
91:16 - click me
91:22 - all right
91:28 - form dialogue yeah so i could have some
91:31 - basic form elements in a dialog like
91:34 - this
91:36 - um
91:38 - yeah i think i'll borrow this
91:41 - so
91:43 - let me and actually the dialog is
91:45 - definitely going in its own component
91:49 - because that's going to be too much
91:51 - so
91:52 - user
91:55 - settings
91:57 - or let me just do not user says i don't
92:00 - really have users
92:02 - um
92:03 - dialog
92:05 - settings dialog dot view
92:08 - let me do a template
92:10 - and then
92:14 - i'll
92:17 - copy some of this
92:21 - let me open this again
92:23 - okay
92:26 - um
92:27 - close yeah let me close it
92:31 - okay so let me
92:34 - copy
92:39 - this
92:43 - and for right now
92:48 - yeah i'll just
92:50 - i'll just see so i don't want the row i
92:52 - just want a dialog
92:56 - and
92:58 - go ahead and close the card
93:00 - close the dialog
93:04 - and i need to
93:05 - first
93:07 - v model so persistent means
93:10 - i can't just close it by clicking
93:12 - outside
93:14 - which is good for a form
93:16 - oh cool it gives me an animation too
93:20 - so i have to click the close button
93:25 - um and now i need
93:27 - i need a v model so i have to pass that
93:29 - in via props so let me
93:32 - do
93:34 - a script tag here
93:38 - and
93:39 - props
93:41 - let's see
93:44 - what
93:46 - i guess i'll just have a dialog
93:48 - prop and this will be a boolean
93:52 - so i'll do type
93:54 - boolean
93:55 - and
93:56 - required is true
94:04 - okay
94:07 - um
94:10 - what else
94:12 - oh yeah let me import this component so
94:14 - i can start
94:15 - playing with it
94:20 - um
94:21 - oh yeah in script tags i'll do
94:23 - import
94:26 - settings
94:28 - dialog from
94:32 - settings dialog dot view
94:36 - and then here i'll have to register the
94:38 - components
94:40 - so
94:42 - settings dialog
94:50 - i know i didn't mock up this dialogue
94:52 - but
94:53 - um because this is just the basics
94:55 - because i thought maybe i wasn't even
94:56 - going to get to it because all of these
94:58 - have taken a little bit longer than i
95:00 - thought
95:02 - but
95:03 - i guess the timer isn't that hard to do
95:06 - so
95:09 - um
95:14 - let's see so user can choose timer yeah
95:16 - so this is where i thought
95:18 - i was going to do they can select
95:21 - and this isn't even real clear how i
95:23 - wrote this user can choose timer short
95:25 - break or laundry oh no i think i was
95:27 - talking about the the tabs here
95:30 - um
95:32 - oh yeah here is where i was
95:34 - talking about settings so user can set
95:36 - the number of minutes for each type of
95:38 - timer
95:40 - yeah and this will be actually the last
95:42 - requirement besides some optional things
95:44 - i had
95:46 - in case i
95:47 - needed more stuff to do
95:51 - so they can set the number of minutes
95:53 - for each timer so i guess it would just
95:54 - be like three input boxes
95:57 - and then they can
95:59 - update the minutes if they want
96:03 - so
96:09 - um what am i doing
96:13 - oh yeah i imported the settings dialog
96:16 - so now i can put it in here
96:18 - so i'll put it
96:21 - do i really have two cards
96:23 - yeah i do have two cards that's fine
96:25 - so i'll put it here
96:29 - oops
96:31 - and
96:32 - i need to pass in a dialogue
96:36 - boolean
96:39 - so
96:40 - let me
96:42 - do that and then i need to create the
96:44 - dialog boolean here
96:53 - let me do after timers i guess
96:56 - so
96:57 - dialogue
96:59 - and
97:01 - i'll do false
97:07 - oh i did it inside of timers
97:10 - so
97:11 - let me
97:13 - yeah do it after timers
97:16 - ah wait
97:17 - wait
97:21 - okay dialog is false
97:23 - i'm passing that in here
97:25 - oh right so the thing that i'm doing
97:28 - here i'm passing it in as a prop
97:30 - but i'm still using this activator
97:32 - button so i actually need to turn this
97:34 - off
97:36 - get rid of that
97:39 - and
97:44 - just put some text here
97:47 - as a placeholder
97:50 - okay and now i need
97:53 - some kind of a settings button on the
97:55 - page
97:56 - and i think what i'm going to do is a
97:57 - floating ax a
97:59 - floating action button
98:03 - since i'm using material anyway so
98:06 - floating
98:08 - floating action buttons
98:16 - i need some water
98:26 - ah i feel like i've been talking forever
98:29 - does anyone have any questions
98:31 - suggestions
98:34 - anything anything else to talk about
98:38 - um
98:40 - okay
98:42 - let me do floating yeah i think i can
98:45 - just steal one of these
98:48 - and these are just regular buttons
98:51 - where is it
98:53 - oh it's a v button but it's just set
98:56 - as
98:58 - fab it's given this fab prop
99:02 - um
99:03 - okay so i'm gonna
99:06 - copy this
99:08 - let's see
99:11 - and let me put it
99:14 - just on the page somewhere
99:17 - actually it shouldn't even be inside a v
99:19 - card
99:20 - so i wonder if i should put this in app
99:23 - let me try it here
99:25 - v button
99:27 - oops
99:28 - [Music]
99:38 - okay
99:42 - why is maestro
99:45 - oh it is that teacher
99:49 - he confused with maestro
99:52 - um
99:54 - let's see
99:59 - okay
100:00 - wait i have a dialogue
100:02 - and
100:03 - mdi plus so let me do mdi
100:06 - settings and just guess that there's a
100:08 - settings icon
100:10 - or is it gear
100:13 - oh cool
100:14 - it might be gear icon
100:20 - it's not gear either
100:22 - let me actually look at icon
100:28 - so
100:28 - material design
100:32 - setting
100:36 - this page
100:37 - always takes me a while to load for some
100:39 - reason
100:44 - yeah what is what is this one oh it's
100:46 - cog outline
100:51 - uh so mdi
100:53 - cog
100:55 - outline
100:59 - let's see what this one is yeah this is
101:01 - good except for the color color is not
101:04 - nice
101:06 - but
101:07 - let me do
101:08 - secondary for the color
101:13 - yeah that's okay
101:16 - um let's see so this is left
101:21 - let me do right
101:29 - okay
101:30 - and that actually doesn't look bad there
101:34 - it doesn't look great but it doesn't
101:35 - look bad
101:38 - and it's away from everything else
101:41 - so now if i click it i need to
101:49 - what do i need to do open the dialog
101:52 - yeah well i don't want small though let
101:54 - me
101:56 - oh no i do want small i do want small
101:59 - all right
102:00 - maybe top right
102:03 - let me try
102:05 - top
102:07 - right
102:08 - no then it's over the tab i would
102:10 - actually like it on the page up here
102:13 - but then i'm gonna have to do
102:16 - this
102:18 - in the parent
102:20 - so
102:21 - i have to do
102:24 - in app
102:28 - um
102:30 - so here
102:37 - did it change back to pink
102:39 - did i copy i think i copied the right
102:41 - wrong thing
102:44 - ah i don't know what just happened
102:46 - that's weird
102:48 - oh well
102:49 - secondary
102:52 - uh top
102:57 - right
103:02 - oh wow that's off the page
103:05 - okay so that should probably be inside
103:08 - of the container then
103:10 - so
103:12 - let me
103:14 - put it here
103:20 - yeah
103:21 - which is why
103:23 - that's a big reason why i use vs code
103:25 - vim instead of regular vim now
103:28 - because of copy pasting
103:34 - um oh yeah and this was cog cog
103:37 - outline
103:39 - so
103:40 - why
103:41 - let me see
103:44 - um
103:45 - let me try inside the row then
103:48 - otherwise i'm going to look in devtools
103:50 - and see
103:53 - why it's doing that
103:58 - nope it doesn't doesn't like it okay
104:02 - so
104:05 - it is absolute let me try getting rid of
104:08 - absolute
104:11 - okay
104:12 - so now that puts it here which isn't
104:14 - actually bad
104:15 - up here
104:17 - and then i think if i move to outside of
104:19 - the row it would go
104:21 - more towards here
104:22 - but since everything is so centered
104:24 - right now i think i'll just leave it
104:25 - here
104:27 - but now
104:29 - i need to
104:32 - i need to have data inside this
104:34 - component
104:36 - so
104:38 - and i know this is
104:40 - not too important but i just
104:42 - i like to have a return statement
104:45 - keep everything
104:47 - the same
104:48 - so
104:50 - let me do
104:51 - return
104:55 - and
104:58 - i'll have
105:00 - what will i call it here so i'll call it
105:02 - dialog from here
105:05 - so i'll have dialog as false
105:08 - and then
105:11 - when they click
105:13 - on the button
105:15 - it sets
105:17 - wait at click
105:18 - so at a click event it sets
105:21 - dialog to
105:23 - true
105:26 - okay and then i need to pass in that
105:28 - dialogue to pomodoro so
105:32 - let me pass in
105:34 - dialogue
105:37 - as
105:39 - dialog
105:41 - if i had view x i wouldn't need to
105:44 - be passing
105:46 - to grandchildren but there's so few
105:47 - components
105:49 - i guess it's okay
105:50 - i'm just passing one thing
105:53 - okay so dialogue i passed it into
105:55 - pomodoro so now i need to receive it in
105:57 - pomodoro
105:59 - via props here so let me do props
106:03 - wait
106:04 - uh props object
106:06 - and i'm getting dialogue
106:10 - which is
106:14 - the type is
106:16 - boolean
106:18 - required
106:20 - is true
106:24 - all right and now
106:26 - i didn't put it here oh yeah i did put
106:28 - it here so let me take it off of there
106:37 - okay so i have dialogue
106:39 - and
106:40 - i'm passing in dialogue here
106:45 - okay what else do i need to do then
106:49 - oh sweet it opens
106:51 - oh but it's persistent and i have no
106:53 - close button
106:54 - let me
106:55 - add the buttons then
106:58 - so let me go back to dialog in here
107:01 - dialog in here
107:07 - and
107:08 - where was the
107:10 - form one
107:12 - yeah i'm just going to keep copying from
107:13 - here
107:15 - so
107:15 - [Music]
107:18 - vcard actions
107:25 - all right i won't be able to set
107:27 - dialogue to false from in the component
107:30 - i'm gonna have to
107:36 - yeah i don't have
107:41 - um
107:42 - i'm gonna have to call an event or a
107:44 - method or something
107:49 - or just install vue x for one small
107:51 - thing
107:53 - uh where was i where is it okay so in
107:56 - pomodoro now
107:58 - no no in settings dialog
108:02 - inside of card i'm going to add
108:05 - the actions
108:11 - and
108:17 - dialogue i can't do dialogue is false
108:21 - so
108:23 - um
108:25 - should i do a custom event
108:31 - i haven't used events in so long because
108:34 - i've pretty much just
108:37 - used vuex or
108:39 - past things between components
108:42 - um
108:45 - should i do yeah let me try doing a view
108:47 - custom event
108:50 - view custom event
108:59 - okay so
109:02 - emit events so it's basically
109:05 - the same as doing
109:09 - listening to the kebab case version
109:17 - right and i think in view three actually
109:19 - this syntax got better too
109:22 - so maybe i don't
109:24 - yeah maybe i'll skip events
109:27 - and
109:29 - oh wait it didn't throw an error
109:31 - i changed props
109:33 - yeah avoid mutating prop directly so
109:35 - that's just a warning actually
109:38 - um
109:40 - oh yeah but now it doesn't open now
109:42 - because i changed the prop from
109:45 - inside
109:47 - um
109:48 - inside the child component
109:51 - um so let me let me just pass down a
109:53 - method see how that works
109:55 - i think that will be easier
109:57 - so methods
110:00 - let me do
110:03 - close mo
110:05 - not closed modal because it's called
110:06 - dialogue so close dialogue
110:09 - and
110:10 - this dot
110:13 - dialog equals false
110:16 - and then i'll have to pass the method in
110:19 - to pomodoro here
110:22 - so i would have to pass in
110:24 - close dialogue
110:29 - equals close
110:31 - dialogue
110:34 - and then
110:37 - let's see
110:39 - close dialogue yep
110:40 - it's spelled correctly so
110:43 - that's okay that's an app
110:45 - now i need another prop
110:48 - so
110:48 - i have to do close dialogue
110:53 - type is a function
110:56 - acquired is true
111:01 - and now i need to pass this in
111:05 - okay so accepted in props now i need to
111:06 - pass it into settings dialog
111:09 - so close
111:11 - dialog
111:13 - equals
111:14 - close
111:17 - dialog
111:19 - and now
111:21 - at the event oh yeah i need to do
111:24 - um
111:29 - that
111:37 - okay so now i have closed dialog and now
111:42 - let's see
111:45 - let me try to do it
111:47 - in the cancel button
111:48 - and call close
111:50 - dialogue
111:51 - at click
111:53 - so i don't like how long this
111:56 - line is
111:58 - all right
111:59 - let me do the same thing here so
112:01 - save
112:06 - okay
112:10 - oh it doesn't like it
112:12 - invalid handler for click
112:15 - got undefined
112:18 - okay
112:20 - so it didn't like
112:22 - whatever i did
112:26 - um
112:32 - let's see make sure i'm clicking close
112:35 - oh no
112:36 - wait it
112:38 - closed just fine
112:39 - okay i just needed to refresh i guess
112:42 - so for save
112:44 - i'm going to have a different method so
112:46 - here i'll do save
112:49 - yeah i'll just call it save because
112:51 - there's nothing else going on
112:54 - so after props i need to do
112:57 - methods here
113:00 - and i'll do
113:07 - i just tried to click your close button
113:09 - on the screen
113:12 - that would be really cool if i could do
113:14 - interactive live streams where
113:16 - people could type
113:18 - and
113:20 - hit buttons i guess if i did glitch or
113:22 - something i don't know how many people
113:23 - could be in there though it might crash
113:27 - um
113:28 - that's i think that's the future of live
113:30 - streaming the next evolution will be
113:32 - interactive streams
113:37 - yeah the save method could
113:39 - and since the data is in there
113:42 - i guess yeah that's a good idea so
113:45 - let me just
113:46 - receive that then
113:49 - so save
113:52 - would be of type
113:54 - function and
113:56 - required is true oh
114:00 - uh
114:01 - wait
114:03 - so
114:09 - um
114:11 - and click yeah so that will call the
114:13 - parent and now
114:16 - get out of there so now in here
114:19 - i'll need to
114:21 - have a save method that i pass in
114:24 - so let me put this on some new lines
114:31 - okay
114:34 - settings okay so now i need to make a
114:37 - save method
114:39 - and
114:44 - or i should
114:45 - should i do save yeah because there's no
114:47 - other save functionality in the app so i
114:50 - can just call it save
114:52 - so let me do save
114:57 - and i will need to call this dot close
115:02 - dialog though
115:05 - because i do want it to close when i hit
115:07 - save so let me try that out
115:12 - okay
115:14 - save yeah it closes fine
115:17 - all right
115:19 - yeah you're right it makes more sense to
115:21 - put it in there so now i need the form
115:23 - items in here and i also want a header
115:26 - so
115:28 - let's see
115:29 - oh i have four minutes um
115:34 - i wonder if i should
115:35 - one second
115:39 - yeah let me try to get as much done as i
115:41 - can
115:42 - so
115:48 - um
115:49 - the card title
115:51 - yeah i want the title
115:55 - so let me put this in my settings dialog
116:01 - and get rid of that
116:06 - here
116:07 - i'll do
116:09 - i'll just put settings
116:12 - and then
116:14 - here
116:17 - i'll do
116:18 - v
116:19 - card
116:21 - uh
116:23 - text
116:25 - and then in here i'll put the form items
116:30 - so
116:33 - what should i put
116:34 - i guess just input
116:38 - and then
116:40 - let me find
116:43 - oh wait wait that's not what i want i
116:45 - want text
116:48 - fields
116:54 - and then i think
116:57 - i can get a number here
116:59 - or yeah i can put the type as whatever i
117:01 - want
117:07 - prefix and suffix
117:15 - yeah i can add validation i won't have
117:17 - time to do validation
117:19 - for it unfortunately
117:21 - but let me just get a basic text field
117:24 - then
117:25 - and
117:29 - you have the text field
117:33 - that's it
117:35 - and i'll put it inside here oops
117:39 - so
117:39 - [Music]
117:41 - oh wait
117:50 - i'll make it self-closing
117:53 - and then
117:54 - label
117:56 - will be
117:58 - pomodoro
118:00 - and i'll make three of these
118:02 - so
118:06 - was it short
118:09 - um
118:11 - actually i can loop over these
118:13 - so i need to pass in my timers
118:19 - to this now so let me pass in this whole
118:22 - timers object
118:25 - to settings
118:27 - so i'll pass in timers equals timers
118:33 - and
118:38 - let's see
118:40 - now i can loop through oh let me receive
118:42 - it first
118:43 - so
118:44 - put it before save
118:46 - so
118:47 - timers
118:50 - um type
118:52 - is
118:54 - um
118:55 - no array
118:56 - array
118:58 - required equals
119:01 - is true
119:09 - okay and
119:14 - yeah so the text fields
119:17 - yeah this is what i want to loop through
119:19 - i guess
119:20 - oh but then i have to save
119:23 - hmm
119:27 - i'm gonna have to save the unless i want
119:30 - to directly
119:31 - v-mod no i can't
119:34 - i'm going to have to set the default
119:36 - as the timer amount and then save the
119:41 - new amount that's entered and it is 12
119:44 - right now
119:45 - so
119:48 - i'm not sure
119:51 - okay
119:54 - i'm just
119:57 - messaging free code camp
120:06 - all right
120:08 - and
120:10 - yeah it's getting more complicated
120:13 - so
120:14 - um
120:18 - what i can do
120:22 - is
120:23 - okay so
120:25 - i can loop through and display here
120:27 - that's easy enough
120:29 - but i want to actually
120:33 - save a new time so actually my v model
120:36 - here has to be something new
120:38 - um
120:40 - so this is going to have to be
120:44 - updated timers
120:49 - and i think
120:52 - that i can set a default
120:54 - on
120:58 - data here so i could do
121:02 - my default
121:04 - timers
121:06 - and this could be an array
121:08 - of times and then
121:09 - [Music]
121:11 - uh
121:12 - i could say when this component is
121:14 - mounted
121:16 - is this the best way to do it
121:18 - i don't know
121:20 - i'm just trying to
121:23 - get this
121:25 - um
121:26 - done or thought through i guess
121:30 - we want more minutes
121:32 - um
121:34 - yeah i don't want to hold it up too much
121:36 - longer
121:37 - but unmounted so on mounted i could set
121:40 - these default timers
121:42 - to be whatever i pass in as timers
121:46 - to start so
121:49 - i could do
121:50 - let's see if i loop through this dot
121:53 - timers
121:55 - dot map
121:57 - the result will be
121:59 - default
122:01 - timers
122:04 - and
122:05 - dot map
122:07 - and then i get the timer in here so
122:09 - that's an object that's a timer object
122:12 - and then i can return
122:15 - um
122:17 - what have i returned oh yeah timer dot
122:20 - is it time or time
122:22 - oh minutes minutes
122:27 - okay i think that will work
122:31 - and now i have a brand new array in here
122:34 - that i can v model to
122:37 - so i can loop through
122:41 - here i can do
122:43 - v4
122:46 - equals
122:48 - um
122:50 - did i really call it default
122:53 - why is it called default
122:55 - i should be calling this like updated
122:59 - updated timers
123:03 - updated timers
123:06 - yeah this isn't a perfect solution
123:08 - really but
123:11 - i guess it can be refactored because
123:13 - then if they don't update anything
123:16 - am i just going to save everything
123:17 - anyway
123:19 - oh i already called it updated timers
123:21 - here
123:22 - wait what is oh
123:25 - it's complaining oh yeah i don't have
123:27 - the bind key yet so
123:31 - so let me do
123:32 - updated
123:35 - timers
123:37 - and then
123:39 - set a key here
123:41 - to be
123:45 - um
123:47 - what do i want for the key
123:50 - let me just do
123:52 - oh i didn't even
123:54 - let me do time
123:57 - timer in
123:59 - or timer and then i
124:02 - in
124:04 - updated timers and then the key can just
124:06 - be i right here
124:12 - okay and then the v model
124:15 - will be
124:17 - updated timers i
124:21 - so
124:23 - it will be that at that index in the
124:25 - array
124:26 - where the timer will model to that index
124:29 - basically
124:32 - okay
124:34 - so
124:35 - data property must be a function
124:39 - did i do that
124:40 - oh yeah
124:43 - uh
124:44 - let me
124:45 - change this
124:47 - oh and then i have to return from here
124:49 - too
124:50 - oh wait
124:51 - uh return an object
124:55 - and then
124:59 - let me just do updated
125:01 - timers
125:05 - what
125:06 - why isn't my shift button working oh
125:08 - there we go
125:09 - and
125:11 - this is an empty array
125:15 - okay
125:18 - okay it doesn't
125:21 - like what i'm doing oh yeah it does
125:23 - sweet
125:25 - awesome so let me look at the v model
125:27 - then
125:30 - um
125:32 - in the which component is that in
125:36 - it's
125:40 - oh yeah it's inside of settings the
125:42 - settings dialog component
125:45 - so i have
125:48 - okay so i have props
125:51 - which are the timer objects the timers
125:53 - array of objects and then i have in my
125:56 - component data i have updated timers
126:01 - sweet
126:04 - cool
126:08 - it does change it to a string as soon as
126:10 - i
126:12 - change this
126:14 - but um then i could just save let me see
126:18 - if i can set up the save function in
126:20 - just a few minutes
126:22 - um
126:27 - so in save i can pass the updated timers
126:33 - um
126:35 - let's say
126:37 - let's say i just passed the updated
126:39 - timers
126:40 - that's like an easy way
126:42 - to save this
126:46 - and then
126:49 - what do i do in here
126:54 - um
126:57 - where's the save function
127:00 - so save will take
127:03 - updated timers
127:06 - and the easiest easiest thing to do i
127:08 - mean this has no validation or anything
127:10 - so just hope i'm typing in actually i
127:14 - can do the easiest form of html
127:16 - validation and say that
127:19 - the type of this is a number
127:22 - so they can't put in anything else
127:25 - oh yeah and then it won't change to a
127:27 - string either
127:29 - let me validate that real quick
127:32 - but
127:33 - it shouldn't change to a string does it
127:35 - or is does it just do that for every
127:36 - html input
127:38 - okay let me open the settings dialog
127:41 - again
127:43 - and now when i change a timer
127:45 - yeah it still changes to a string
127:47 - oh well that's fine
127:51 - um
127:53 - now
127:54 - i can do so i can loop through
127:58 - timers
128:00 - so i can loop through
128:03 - this dot
128:08 - um
128:13 - yeah i could loop through this dot
128:14 - timers
128:18 - and then update
128:20 - values or what should i do i should loop
128:23 - through updated timers right
128:28 - or no i could i should
128:30 - do this dot timers equals
128:33 - this dot
128:35 - timers
128:40 - dot map
128:44 - and then
128:47 - do timer
128:49 - and then
128:51 - i could do return
128:55 - updated
128:58 - timer
128:59 - uh
129:02 - no no what am i doing i'm not even
129:03 - thinking right now
129:05 - um
129:06 - i could do
129:07 - timer
129:10 - no i need to return an object so
129:13 - i need to
129:15 - get everything that's already on timer
129:17 - in the object which would just be the
129:19 - name and then i'll overwrite the minutes
129:22 - so the minutes will be overwritten
129:25 - by
129:26 - updated
129:28 - timers
129:30 - at the index of whatever this is in the
129:33 - loop so
129:35 - at that index
129:37 - so i can do that
129:41 - updated timers
129:43 - yeah because this is an array updated
129:45 - timers is an array
129:48 - and
129:49 - that will put just that one value into
129:52 - minutes
129:54 - and that will overwrite the minutes
129:55 - that's already in
129:57 - the timer in this dot timers okay let's
130:00 - see if this works
130:02 - and actually
130:05 - um this needs to be a number so
130:08 - let me parse it real quick
130:11 - so parse int
130:16 - because i'm not dealing with seconds so
130:18 - i'm just gonna
130:20 - yeah i don't want anything else just
130:22 - minutes
130:23 - so
130:24 - parse int
130:25 - it's default base 10 update timers okay
130:30 - let me close this and refresh
130:33 - let's see
130:38 - oh
130:39 - oh yeah
130:40 - because that is not
130:45 - um wait let me see
130:47 - let me change this to two
130:50 - save
130:51 - yeah short break is two now long break
130:53 - is ten this is twenty oh because the
130:56 - default
130:57 - is that okay
131:00 - well
131:01 - um can i
131:03 - in data does anyone know if i can
131:04 - reference
131:06 - um
131:07 - this as the default
131:10 - like timers
131:13 - this dot
131:14 - current timer
131:16 - well i'll have to do this here too so it
131:19 - would be this dot
131:21 - this dot current timer
131:23 - and then
131:28 - no i have to watch
131:29 - this dumb idea i'd have to watch it
131:34 - so
131:35 - i would have to watch the changes
131:38 - in these and then update total seconds
131:41 - and that's what i should be doing
131:43 - to probably add that and computed
131:46 - so whenever anything in timers changes i
131:48 - can update
131:50 - the total seconds
131:52 - um but you can still i mean this still
131:54 - works
131:55 - it's just you have to change the tab
131:57 - before you can see it working
131:59 - and then you can still start
132:02 - stop reset
132:03 - all right
132:04 - so
132:05 - i have to log off here um feel free to
132:10 - you know make a pr raise an issue create
132:13 - a suggestion
132:15 - um
132:17 - i appreciate everyone who's made
132:19 - suggestions raised issues ashik paul i
132:23 - think that's how you pronounce it
132:24 - he
132:25 - contributed a couple times to the other
132:27 - projects i've been doing made them a
132:29 - little bit better
132:30 - um
132:32 - awesome thank you anish i appreciate
132:34 - that and thanks for chatting everybody i
132:37 - appreciate the chat and not talking to
132:39 - myself that's that always feels nice
132:42 - so yeah here are the five projects
132:46 - uh some of them better than others
132:47 - today's was probably
132:49 - the best looking project
132:51 - that
132:53 - pretty much works but could use some
132:55 - some tlc
132:57 - some help in some ways
132:59 - yeah if you have any suggestions for me
133:01 - also leave them in the comments below
133:04 - and i hope to see you in another live
133:07 - stream
133:08 - thanks sashi thanks everybody take care