00:00 - Hello everyone on freako camp 
today wanting to learn about  
00:04 - low code. Now if you're looking to spin up 
apps fast with out of the box UI components,  
00:08 - this is the course for you. My name is Ania, 
and I'm a software developer, YouTube tutorial  
00:14 - creator, and your video instructor for this low 
code course. In this course, you will learn all  
00:20 - about local solutions by building three financial 
apps. These apps will be number one, a trade  
00:27 - dashboard for brokers to log their trades, as well 
as track their commissions, as well as communicate  
00:33 - with our back offices via an integrated message 
sender, places slack API number two is going to  
00:39 - be a crypto dashboard using coin API service to 
get live prices. As well as utilizing Twitter's  
00:45 - API to send text messages your friends or 
family about any changes you see instantly.  
00:50 - And the re invoice tracker that communicates with 
an external database using graph qL API allows  
00:57 - you to embed instructional videos for those using 
it. Now, these three apps might sound intimidating  
01:03 - to you, if you're not super well versed in using 
API's and building up front ends for them. But the  
01:08 - whole point of local solutions is that it takes 
the pain out of doing both of these things. Think  
01:14 - of low code as platforms that essentially give you 
all the UI components you need. So for example,  
01:19 - tables, graphs, text boxes, you name it, and then 
also give the option to integrate them using pre  
01:25 - configured inputs for API's. This type of solution 
is perfect for personal trackers on your finances,  
01:31 - in house apps that needs to be spun up quickly, 
or perhaps proof of concept prototypes looking  
01:36 - for investment. And that is only the tip of 
the iceberg. stick around to the end of the  
01:41 - tutorial for the where to go next section 
to see what other things you can build. So  
01:47 - that leads me nicely into what exactly we 
are going to be covering in this course.  
01:51 - In this course, we will look at low code versus no 
code, setting up retort compatible integrations,  
02:00 - building a trade dashboard, 
where they get crypto dashboard,  
02:04 - building an invoice tracker, and of course where 
to go next. Now the only prerequisite I ask of you  
02:11 - before starting is to have a basic understanding 
of how API's work before starting this course. Or  
02:16 - if you don't know what API's are, or feeling up to 
it, please do have a go at following along anyway,  
02:22 - I will be taking things super slow and covering 
everything as we go to make this course as  
02:26 - accessible to as many people as possible. Okay, 
so what are we waiting for? Let's do as always,  
02:34 - please do hit that sub button as it really does 
help out this channel and providing you with free  
02:38 - courses and tutorials. Your support is really what 
makes freako camp what it is today. Let's start  
02:46 - with exactly what locode It's located in the least 
amount of words is a way for developers to create  
02:52 - applications quick with a minimal efforts. 
Most local platforms allow developers to drag  
02:57 - and drop visual blocks of existing code into a 
workflow to create any application they wish. The  
03:03 - main advantages of low code apart from it being 
a huge time saver is that a developer can just  
03:09 - jump right in. To create an app in a business. You 
don't have to learn what frameworks they're using,  
03:13 - how they like to work, you don't need to create 
a GitHub account even or create any components.  
03:19 - And the best part for me is that you don't have to 
write any tests for them. Now that we have covered  
03:25 - low code, how is that different to no code? Well, 
as the name would suggest, no good solutions  
03:30 - are for those with zero coding knowledge at all. 
Simply drag and drop things to create an app. And  
03:36 - that's it. And whilst you might be like, Oh, well, 
why don't I just use that was no code solutions  
03:41 - can be pretty powerful, they are often quite 
limiting, especially when it comes to wanting to  
03:46 - integrate databases. In addition to this, it can 
result in Apps being created without the proper  
03:52 - expertise needed to maintain them. So if something 
goes wrong, for example, or needs to be changed,  
03:57 - that is going to be an issue. And not to mention 
security concerns or compliance issues that  
04:02 - could result from that too. All in all, a no good 
solution was perfect for building some things. So  
04:08 - things like password projects that don't rely on 
databases can end up being a huge headache farther  
04:13 - down the line when use in a professional setting. 
For this tutorial, we are going to be using a tool  
04:21 - called Rito. So here's the tool we're going to 
use it is free to use on a trial basis. And the  
04:27 - best part about it is that it comes with all 
of these fantastic integrations already done  
04:31 - for us. So there really is a lot underneath trying 
to cover the main ones that I use on a day to day  
04:37 - basis in this tutorial. So these ones right here. 
Okay, so I hope you're excited. Let's do it.  
04:54 - Okay, so let's get to creating our first app 
which is going to be a trade dashboard using the  
05:00 - Google Sheets API. So here's what your dashboard 
should look like once you have signed up to retool  
05:08 - the low code platform. And I am just going to 
create a new app by actually adding a resource  
05:16 - fast. So I'm just going to 
gravitate to the Resources tab,  
05:20 - we're going to start off by connecting 
the resource that we need. In this case,  
05:23 - it's of course going to be a Google Sheet. 
So let's just gravitate to the resources.  
05:30 - And I am going to not use the sample Google 
Sheets, I'm going to create a new resource,  
05:35 - select Google Sheets, and I'm just going to choose 
to call it let's just call it traits for now.  
05:43 - Please make sure to select the read and write 
if you plan on adding data from your app to the  
05:48 - Google Sheet. If you don't want to just want to 
read the data, but you want it to be interactive,  
05:52 - make sure that this read and write option is 
selected. And there we go. We of course need  
06:00 - to authorize our retort to talking to our Google 
Sheets. So it's going to go ahead and do that by  
06:07 - clicking Authorize. And going through these steps. 
Okay, wonderful. So now we have connected return  
06:16 - to our personal Google Sheets by allowing Rito to 
speak to our Google Drive, essentially. So that is  
06:24 - done. Now let's go to creating a new app with 
this resource. So I'm just going to click  
06:32 - Create a new app now. And let's go ahead 
and name it. So I'm going to call it trades  
06:39 - dashboard. Okay, so pretty easy trades 
dashboard, if I can only spell trades dashboard.  
06:47 - Okay. And there we go. This is our app, it's 
got some default stuff here. But don't worry,  
06:54 - let's actually maybe get rid of all this for now. 
So I'm just gonna delete the default query that  
06:59 - this comes with, and make a new query. Okay, 
so here we are, here's the central list of  
07:08 - all the resources. So all the resource 
when we were just on the resource tab,  
07:13 - including the new resource we made called traits. 
So I'm just going to select that one. Okay,  
07:24 - so now that we have that resource, just 
going to maybe make this a little bit bigger.  
07:31 - Please make sure the action type is read data 
from a spreadsheet. So because we want to be,  
07:36 - you know, reading the data from our spreadsheet, 
and of course, we need to tell the platform, which  
07:43 - spreadsheet we want from our Google Docs. So I 
know that my spreadsheet is called trades. So I'm  
07:51 - just going to sell at that. But you will see all 
your Google Sheets essentially here as an option.  
07:57 - Okay. and wonderful. If I run this query, you will 
actually see a preview of all the data. So that is  
08:05 - really useful. And the next thing I want to do is 
actually get that shown in a table. So before we  
08:12 - do that, I'm just going to delete this table. 
And I'm actually going to rename this query to  
08:18 - trades, perhaps get trades, that's a bit 
better in terms of mutability. So get trades.  
08:26 - And then I am just going to drag in a table. Now, 
once you have done this, you will see the table  
08:35 - actually uses the data from get trade. So that was 
really simple, we really didn't need to do much.  
08:41 - That is because we are currently on the gap trade 
query. Okay, so it's automatically using that data  
08:47 - for us to create this wonderful table based on 
the query data. Okay, so this looks pretty simple,  
08:56 - right? all we've done is drag a table making sure 
that we are on the get trades query as we do it.  
09:03 - Now I'm going to show you this little left 
sidebar as it's super useful, I think it's  
09:08 - very powerful when it comes to dealing with 
more complex I guess results. And if we  
09:17 - now look here at the queries and transformers, 
you will see the get trade query Of course,  
09:22 - but you will also see how this data is returned. 
So you will see the data comes as an array of  
09:29 - objects. Okay. And that is what we are using to 
essentially create the table. It is something that  
09:36 - I'm probably more comfortable using in terms 
of coding. So it can be really useful to you  
09:42 - if you are a dev that is that prefers to work in 
this type of way. Okay, I think let's move on.  
09:52 - The next thing I'm going to show you is 
actually how to personalize some of these  
09:58 - columns. So there's a lot we can do with these 
columns. For example, let's select the first  
10:05 - one. Now say I know this column, I want it to come 
in the format of dates. And I want it to be more  
10:15 - readable, I can simply select the column type 
to be a date. And you will see how the timestamp  
10:23 - has now changed to have the month, day. And 
here. So that's just been formatted for me.  
10:30 - We can of course do other things, we can 
filter them. So if you click on the column,  
10:35 - it will filter. And then you can also do things 
such as you know, change the background color.  
10:43 - So I can simply select a column and type in 
the color red. Of course, you can use hex code,  
10:51 - and RGB as well. Or you can simply type the 
term red, the platform is pretty intuitive  
10:57 - when it comes to that. Another thing that 
you can do is let's maybe look at the  
11:05 - price. So if I click on The Price column, I can 
make sure that this is showing up in US dollars,  
11:14 - simply by selecting the US dollar option. And we 
can do the same for commission. So once again,  
11:22 - I'm just going to click on the commission, 
USD column. And from the column type,  
11:33 - I'm just going to make that show up in dollars, 
too. Great. So there are a few different  
11:40 - styles you can run with, I'm just going to space 
this out. So it's a bit more readable for us.  
11:49 - There we go. Okay, and wonderful. Now, another 
super useful thing you can do is not only  
11:59 - create tables from your data, but also create 
graphs super easily. So I'm talking pie charts,  
12:07 - bar charts, anything you really wish. So to 
do this, I'm actually just going to click  
12:13 - off the table and using the same query, so making 
sure you also only get treats query, I'm just  
12:20 - going to drag in a bar chart. So here we go, 
I've just dragged on n, it's gonna move around.  
12:34 - Okay, so there we go. And now, so you can see 
the x axis value is the timestamp. And I can also  
12:45 - change this around to make more sense, 
I'm just going to hide some of these,  
12:50 - I'm going to hide these three in order to 
make the x axis the timestamp on the y axis,  
12:58 - the commission in US dollars. Okay. So 
there we go, we can see it causes very  
13:04 - small just because we have that very large 
commission one on that, let's just make  
13:10 - it a little bit dark as you can see it and 
wonderful. So we have now plotted essentially,  
13:16 - the amount of commission that is made by de, okay, 
and it was really painless. So that is another  
13:25 - thing you can do with the data that we are getting 
from the get trades query. Okay, I'm just going  
13:35 - to show you how to create another chart, this 
time, just gonna move this around a little bit.  
13:43 - This time, let's make it a pie chart. So once 
again, all I'm gonna have to do is change the  
13:50 - data sets. This time, I'm just going to have the 
commission by US dollars, and I want to do it by  
13:57 - broker. So to do this, I was simply get the value 
labels and select broker. And there we go. Now we  
14:06 - can see exactly how much each broker is making, 
what percentage of the pie for the desk they are  
14:12 - making. And of course, we can change the colors 
around a bit too. So let's go ahead and do that.  
14:21 - Okay, wonderful. This is really interactive, 
you can interact with pieces of the pie as well,  
14:27 - all of these components come not just visually, 
but also with a bunch of extra cool features too.  
14:34 - So it really is quite advanced in terms of 
handling data and transforming it into graphs.  
14:42 - Okay, I'm just going to show you one more 
example that we can do that would really fit  
14:47 - this trade dashboard. So I'm just going 
to use the bar chart again for this.  
14:54 - And this time, I'm going to actually 
select the x axis to be To the broker.  
15:01 - Okay, so we know what percentage of the pie each 
broker is making this time, I want to see exactly  
15:07 - how much commission the broker is making, okay. 
So I can see that Annie Glover's made around 25k.  
15:15 - And she's made around to 70% for the 
desk, okay, 70% of the total for the desk.  
15:24 - Wonderful. Okay, so this is looking pretty good on 
all just from one Google Sheet at the moment. The  
15:33 - next thing I'm actually going to do is show you 
how you can now add more data to the Google Sheet.  
15:42 - Okay, so we're displaying the data, but we want to 
not only read the data we want to write data to.  
15:49 - And to do this, I want to be able to add 
a trade, but from the platform. Okay,  
15:56 - hopefully that makes sense. Let's carry 
on. So to do this, I'm actually going to  
16:03 - use a modal. So let's just go ahead and select 
the modal component. And I'm going to just drag it  
16:10 - up here. Okay. For the button text, 
I'm actually gonna change this to  
16:17 - add a trade. And then let's just change the 
button color to go with a red. And yeah, okay,  
16:27 - now that we have the pop up working, the first 
thing I'm gonna do is actually make this a form,  
16:32 - because we're gonna have to submit the form. So 
I'm just going to drag in the form component,  
16:37 - just like so. Okay, so that is done, we have 
created a form. And now it's gonna make this a bit  
16:48 - smaller. Now we're gonna have to 
drag in things into our form. Okay.  
16:56 - So, the first thing I'm going to do is 
actually just drag in some text, because  
17:01 - this is what we're going to want to give some 
information about what kind of data goes into our  
17:08 - trade essentially. So I'm just going to drag in 
some text to let the user know that this is for  
17:15 - a ticket, and this is going to be the buy side. 
Okay, so here's the text, the Asterix on the  
17:22 - text mean that this is going to be in bold, just 
going to get rid of this and write by sight,  
17:30 - and then also get rid of the emerging and 
perhaps has made the background green,  
17:35 - you can apply custom styling, I will be 
showing you how to do this. But for now, just  
17:40 - stick with me, this is something that I will be 
showing you how to do later. Okay, so we have  
17:47 - the buy side, the next thing we're going to do 
is just make the sell side to why we're here. So  
17:54 - I'm just going to drag in another text component. 
And I'm just going to edit this to say sell side,  
18:00 - and also get rid of the emoji. And once 
again, let's make the background red,  
18:06 - you will notice the text has changed to be 
white to make this more readable. That is a  
18:11 - feature that is built into the low code platform. 
However, if you want to change this, as mentioned,  
18:16 - the option to add your own custom CSS will also 
be available to I'll show you how to do this.  
18:23 - Okay, now we have the past by side and the 
sell side, the first thing we want to do  
18:28 - is start putting in some inputs. So we have you 
know, what is corresponding to the Google Sheet.  
18:34 - So that means products and entity, a timestamp, 
the volume and so on. So the first thing we do  
18:42 - is just put in a text input like so. Okay, I can 
also choose to position the writing at the top  
18:51 - if I want. And I'm just going to 
give this a label of entity like so  
18:57 - I can also make this a required field. So just 
by ticking this little checkbox right here. Okay.  
19:04 - And that is done, we have created our first 
input, this input is going to be for the entity  
19:10 - that is going to have made the trade. Now, let's 
actually create a second one because obviously,  
19:16 - I'm gonna have a buy side and sell side each one 
need an entity. So once again, I'm just going to  
19:21 - make this go to the top instead of going to the 
left, and I'm going to make this a required yet.  
19:32 - Wonderful. So now that we have an entity for 
the buy side and an entity for the sell side,  
19:38 - the next thing we're gonna do is actually 
have something for the products because  
19:41 - we're gonna have to choose what kind 
of product this is to go in our table.  
19:47 - So I'm going to choose to make this a drop down 
just so people can't enter whatever they wish.  
19:52 - So I'm going to search for the drop down 
option. And once again, when we are here,  
19:59 - we have a label And then we also have the values. 
So at the moment, the values that appear are 123.  
20:06 - I want this to be product. So I'm just going to 
put in some standard products that you would see.  
20:22 - If you're trading the Brent, do you buy crude 
oil. So it's going to put some in here for now.  
20:26 - This is, of course, just for demonstration 
purposes, you can make this whatever you'd  
20:31 - want, making sure it's an array of 
strings separated by commas. Okay,  
20:38 - so we have August, September, October, 
November, December, it's gonna copy all of that.  
20:46 - And it's gonna paste it. And instead of grant, 
I'm gonna change this to do by fastline. Crude.  
20:58 - Wonderful, then perhaps, let's have 
just some straight up futures. So  
21:08 - okay. Just gonna change this from Brandt fastline 
to Brent. crude, huge, I mean, yeah, that's fine.  
21:29 - Again, this is just for, you know, demonstration 
purposes. So now if I go here, I can select a  
21:36 - product that is only from that list. So this is 
how you would do that. I'm just going to change  
21:43 - this label to be product as well, and make 
this a required field. Okay, wonderful. So  
21:51 - now that is done. And I've shown you how you can 
do that, of course, you can make your own This is  
21:57 - just for demonstration purposes. Let's actually 
do it for the other side, too. It's going to  
22:05 - check this works. So is required field, if 
I don't pick one, yes, a red thing shows up.  
22:13 - Okay. Now that we have done that, I'm 
just going to stick it on the other side,  
22:19 - too. And there we go. Hey, wonderful. I mean, I 
think this is pretty neat. If I was still working,  
22:29 - this sort of thing would be extremely useful, 
and extremely time saving when it came to,  
22:35 - you know, keeping track of your trades. So 
the next thing we'll do is actually use a  
22:40 - number input, this time to put in the price of 
the product that was traded. So I'm just going  
22:47 - to drag in a number input, and I'm just going to 
change the label to be price. US dollars. Okay,  
22:56 - price US dollars, and then some put at the top, 
let's make it required field as well, we are here.  
23:05 - gonna copy it, and put it on the other side, 
too. Okay, so that is looking quite good,  
23:14 - we've got some number inputs, I'm just going 
to copy again. Because we also need to put in  
23:22 - the volume traded. So I'm just gonna 
use another number input for this,  
23:27 - the volume and KB and copy it to the other side 
to the the sell side too, because you know,  
23:35 - someone's buying this on someone's selling 
this. Okay, I'm just going to make this a  
23:43 - little bit bigger, so it's easier to work 
with and you can see a little bit better.  
23:54 - And there we go. So now we've copied 
it, we have two things for the volume,  
24:01 - we can also make sure that this is in currencies, 
so I'm just going to format this as currency.  
24:09 - So great, that makes a lot more sense. So now we 
know that whatever is being put into here will be  
24:16 - the format of a currency. And for this one, we're 
not really going to do anything at the moment.  
24:23 - Okay, now I'm just going to copy this again as we 
want another input for the commission, right. So  
24:30 - let's change the label to commission rate. And 
once again, I am just going to copy this using  
24:37 - the copy command on my keyboard and move it to 
the salsa. Okay, so now each side has pretty much  
24:46 - the same on it. And of course, I'm just going to 
change this to be top positions for all of them,  
24:51 - just because I think it's a lot neater and we 
can actually see what is on each label for this  
24:59 - one It's not actually letting me go to the top. 
So, I mean, we could just get rid of the label,  
25:06 - maybe let's do that. I guess we don't need it 
if we can have, you know, like a placeholder. So  
25:17 - yeah, maybe let's do that. I'm just going to 
work on how you can see this a little bit better.  
25:22 - So I'm just actually going to move this 
down here. Okay, wonderful. So that is,  
25:29 - I think that's a lot better for this video. 
Now you can see everything. Okay. So we've  
25:36 - got a bunch of stuff, we're still not done yet. I 
saw need to, I guess, calculate the exact amount  
25:43 - commission made and which broker made it. So to 
do this, I'm actually going to use a statistic.  
25:52 - I'm just going to search for statistic, and 
then just drag it and drop it. Here. We go.  
26:02 - Great. I'm just going to change this to be the 
title of commission. I'm going to do a little  
26:08 - calculation here. Okay, and just display it to the 
user, as well as use this to put into our Google  
26:16 - Sheet later. So we've call this commission. 
Okay, I'm actually going to use oops, I have  
26:26 - misspoke permission. Okay, commissioners to two 
s's commission, commission. Okay, okay, I think  
26:37 - that's fine. Right? To get their commission, 
I'm actually going to have to do a bit of a  
26:42 - calculation. So let's do that in the value. I'm 
going to get up these syntax, we're reasonable. So  
26:48 - we need these two curly braces, like so. And 
I'm going to grab whatever is the number input  
26:57 - to us right value, whatever I put into there, was 
applied by 1000. And then also multiplied by the  
27:09 - commission rate. So commission rate value, 
whatever I put in that, multiply it by the  
27:16 - price, hold on, that should 
be volume. So what is this?  
27:20 - Yeah, okay, whatever the volume is, what abide by 
the Commission, I'm just going to change this to a  
27:26 - four. Okay, and that should be the value. So now 
let's test it out. If I just fill these in. Now,  
27:36 - guys, because volume multiply by commission rates, 
and that will give me the commission that I have  
27:43 - made on this side of the tickets. Okay. So 
this is cool, I'm essentially just generating  
27:49 - a number based on the inputs that have been put 
in. And let's just do the same on the other side.  
27:56 - So I'm just going to copy this using the copy 
command on my keyboard. And I'm just going to  
28:01 - change this here to be number input three, 
and the commission rate for the bicep, okay,  
28:08 - so just change out these numbers. And now, I'm 
just going to test this out. So let's put in the  
28:18 - volume. Let's do 100 kV and make 
the course commission rate 0.05.  
28:29 - And great, that gives me 500 not lbs though, 
let's just make it we don't need a suffix.  
28:38 - Great. So nearly that the next thing that I want 
to do for this ticket, so that's quite cool,  
28:45 - right, we sort of at least done one input based 
on some calculations. So we don't have to do that.  
28:54 - This, usually when I was a broker, we would 
have to, you know, like, do the calculation  
28:58 - in our head or use a calculator. And this way, we 
just calculate commission for us. Okay, so we've  
29:04 - got everything. And the last thing I'm gonna do is 
actually pass through which broker did this trade.  
29:11 - So for this, as we have, you know, like a set set 
amount of brokers that are working on this desk,  
29:17 - I'm actually going to use a drop down. So I'm 
just going to select the drop down, I'm going to  
29:24 - get rid of the label care, because we can just 
have, we can have a placeholder instead. So select  
29:35 - broker, and we are actually meant to do 
that for above as well. So let's do that.  
29:39 - Again. For the we're going to get rid of the label 
and just put, you know, like select product, and  
29:46 - again for this to select products and get 
rid of the Okay. Okay. Right now we don't  
29:57 - want the verb to be 123 right? This is just 
default values, we want it to look like this.  
30:03 - So I'm going to change the values. And who 
are our workers? Well, we've got Annie Glover.  
30:10 - We have David Astra. We have Jeremy Lin. And we 
have Sam Sammy. Yeah. Cool. That's it. Wonderful.  
30:26 - And once again, I'm just gonna use my copy command 
to copy this and make another one for the bicep.  
30:32 - Okay, great. So this is looking good, we have 
now completed our module, we have now completed  
30:39 - a way for us to just going to maybe move this 
out a little bit better to make it look nicer.  
30:44 - But we are now essentially 
completed a way to add trades  
30:47 - to our table by using this little 
pop up modal with required fields.  
30:53 - Okay, the next thing we need to do is actually 
make something happen if we click Submit. So  
30:59 - other moments, obviously, nothing happens. All the 
fields are required are giving us our messages,  
31:06 - I need to essentially make a new query that 
instead of getting trades, we'll add a trait  
31:12 - to tip. So to do this, I'm going to go back here 
create new, just select the new resource query.  
31:23 - Let's just rename this to add, Fred. Great. Make 
sure the resource is so the trades list. And then  
31:36 - what I need to do is make the action 
type and of course choose a spreadsheet.  
31:42 - So the spreadsheet was trades. Let's do that 
for a trade. So select a sheet trades, then,  
31:54 - okay, this is looking good. And then I need 
to change the action type. So the action type,  
32:05 - I want to be append data to spreadsheet, okay, 
because we want to add a new essentially line to  
32:11 - our spreadsheet. So this is how we would do it, 
and the values to append. So this is going to be  
32:18 - an array. And we need to add an array of objects, 
just like we saw in the left sidebar, we need to  
32:25 - keep the structure the same. So to this to this 
array, my first object is going to be a timestamp,  
32:34 - just like in our table. And for the time set, the 
value is going to be just today's date. So this  
32:41 - is a bit of JavaScript, I'm using a date object 
to essentially add today's exact date, whenever  
32:49 - we add a trade to the dashboard, which will then 
be sent to our Google Sheet. Okay. So new date is  
32:58 - going to be the timestamp. Okay, if you know 
JavaScript, you know what this will return.  
33:06 - If you don't, please do have a Google of the date 
object. And let's carry on. So I'm just going to  
33:13 - make sure it was formatted correctly. Cool. The 
next thing that we need to add is the entity  
33:22 - and the entity. Let's do the let's do the by side 
fast. Hold on. This is not something's wrong here.  
33:39 - I don't see why this should be wrong, maybe 
let's just carry on and it will update. Okay,  
33:45 - so let's focus on the buy side. First, we're 
going to add the buy side first, and then  
33:49 - the sell side. So two lines to our spreadsheet 
essentially. So the entity is going to be the  
33:57 - first text input component that we used. So 
up here, the entity is text input one, because  
34:05 - we're doing the by side, first we're adding the by 
side trade to our dashboard. text input one value.  
34:13 - Okay, so we've got the entity, the next thing 
we're gonna do is product. So it's really easy,  
34:19 - we're literally just finding the component on our 
dashboard, and using it value. The next thing I'm  
34:25 - gonna do is actually we need the direction to 
so we said there's going to by side, I can just  
34:31 - hard code this to the buy side because we didn't 
need to select the direction, we should know that  
34:37 - you know, like if it's under the buy side, the 
green title, this is going to be a biotech trip.  
34:43 - Now it says other product. So just like we found 
the other component. This time, we're going to  
34:48 - find the drop down, which is called select one 
if we hover over it as the bit in the blue,  
34:54 - and I'm going to get the value of that. The next 
thing I'm going to add is deep Price in US dollars  
35:01 - making sure by the way that these what the 
keys are the same as the headers of our columns  
35:12 - in our Google Sheet table and the prices do is 
going to be once again let's just hover over it  
35:22 - and we're going to get the value of whatever 
we put in this number input. Okay, hopefully  
35:28 - this is making sense the more we go along the next 
thing we'll do is the volume kb. So the volume k b  
35:38 - is going to be well let's have a look at what 
component is and it's text input number input  
35:45 - three sorry. So number input three value so 
great. Next we need to do the commission rate.  
36:00 - So I'm just going to do commission rates hold 
on how did I spell commission because I've been  
36:03 - making loads of mistakes commission out whoops, we 
have misspoke commission here. So commission here  
36:10 - has a one. So for the sake of it here, I'm just 
going to spell it the way I wrote it in my table  
36:15 - because as I mentioned, it has to be exact has 
to be the same spelling otherwise this will not  
36:20 - work. So commission rate I'll change it later. 
But just bear with me for now. Sometimes I do  
36:26 - think making mistakes like this is the easiest 
way of understanding how this is all working.  
36:31 - Hopefully you see now that why 
this needs to be exact because  
36:34 - it has to be exactly the same as the column 
column title likes or commissions but with one  
36:44 - okay. So we're going to put what are we going to 
put in this column where we're going to put the  
36:51 - what is this number input five value, so number 
input five values, whatever I put in this input,  
36:58 - that is going to be my commission right? 
Great. The next thing we need to do is  
37:05 - get the commission USD which I've misspelled 
here again, and I clearly wasn't having a very  
37:10 - good day with this word Commission's but with 
with two M's and one s is time in US dollars,  
37:18 - I promise I will fix this commission US dollars is 
going to be well we know this is going to be the  
37:23 - statistic, right, it's going to be the thing 
that we figured out. So I'm going to go into  
37:27 - statistic, the statistic too. So let's 
select statistic two, and once again value  
37:35 - that and the last thing we should do is just 
put the broker that did it. So broker and then  
37:43 - we need to go into the drop down I believe was a 
drop down. But let's just double check, maybe hold  
37:52 - on, it wasn't called drop down was it done value 
is not defined. Okay, so that doesn't exist here.  
38:00 - Let's just have a look. Okay, find a select 
four is not called drop down, select for value.  
38:07 - Wonderful. So now we have done everything 
for the buy side. If we run this, it should  
38:13 - essentially add a row to our table, but we need 
the sell side too. So okay, cell size, I'm just  
38:21 - going to copy all of this that we've done so far. 
And we now need to adjust it for this cell side.  
38:27 - So I'm going to copy it, paste it. And 
now I'm just going to change these to be  
38:34 - this number. direction is going to be sell 
product is going to be selected. To price USD  
38:45 - is going to be number input to volume q b is 
gonna be number input for this is going to be  
39:06 - statistic one and select three. Okay, great. So 
we've done it. I'm going to save this get rid of  
39:18 - this comma, we don't need to save this. And okay, 
I'm just going to now fix this because you know,  
39:26 - like it's better to have everything correct case 
we've changed that in here. I'm going to get  
39:34 - the trades again to see if that has worked. 
Okay, so commission rate commission rate good.  
39:41 - It's messed up with our grass, 
but we'll fix that a bit later.  
39:45 - Okay, so now that we fixed this billing 
commission, commission rate commission rate  
39:54 - we need to hook up our Submit button. So to do 
this, we are going to have to create offers event  
40:00 - handler. If I click on the submit button, an 
event event has actually been generated for us.  
40:08 - So I'm just going to click here to 
show you what is going to happen  
40:12 - is I'm going to run the query add trade selected, 
add trade, because we are currently on that query.  
40:18 - And on submit, I'm going to add a trade. So on 
submit, essentially, I'm going to run this query,  
40:26 - I'm going to run that add trade query. 
Okay, as soon as I press the submit button.  
40:32 - Great. So that is looking good. I can also add 
confetti, just for fun. We confess to you so that,  
40:40 - you know like when I press the Submit confetti 
gets thrown as well. And another thing I could  
40:46 - do is also rerun the get trades query. So the 
previous query worked to get all the trades,  
40:52 - I can run that query. So after we added the 
trade to the bottom two, we can run the get  
40:57 - query get trades query again. Okay, so that we 
can actually see them in the browser itself.  
41:04 - So that is looking good. I think let's test it 
out. So let's just make sure that we enter all of  
41:11 - these, I'm going to put tests, tests. September, 
September, just making this up. Really, I don't  
41:20 - really know what September brought fastline. 
Price is at the moment and say 6555. Let's  
41:27 - also put it at 44. Make this up, find find put in 
some brokers and click Submit. Whoo, and confetti,  
41:40 - we have run the Add trades crew. We're getting 
some errors. Why is it red? It hasn't been  
41:46 - added? Why is this? Let's have a deeper dive 
into this. Okay, so that has not been added?  
41:56 - It should appear at the bottom here. 
It has not. Why is this happening?  
42:05 - Got it took one bite at the moment. Let's go 
back in here and have a look again at what  
42:13 - we thought were values were pending. Okay, 
we've got an error message commission are  
42:17 - we did not spend we did not correct commission 
spelling here. Okay, fine, fair enough. We go,  
42:23 - these error messages are super handy. I mean, 
already, I know why this has not worked.  
42:30 - And click Save. Okay, so let's 
try it again. I prayed, sir met.  
42:38 - Okay, no errors. Now, let's have a look. So that 
has not been added to the boss. But let's see if  
42:49 - it's been added to my Google Sheets. And it 
has. Wonderful. So we've added these trades,  
42:57 - this is working. Whoo. We've added the two 
new trades. We broken a few things along the  
43:03 - way like the bar charts, but don't worry, 
it's a step by step process with the get  
43:09 - queries and not get run, though, so the sorry, 
the get trade query did not get run however.  
43:14 - So if I actually manually run this, you will 
see the new trades. So why is this not working?  
43:22 - Let's try again. It could just be a bit 
too slow as in we're adding and then we're  
43:30 - getting but the get is running before the Add 
trade. Now this seems to be okay. Okay, well,  
43:38 - there's another way to do this, which is actually 
probably better. We can also just change this.  
43:48 - I think that big volume wasn't great. 
Okay, so we can we obviously, that's  
43:58 - that time. Nope, didn't work. Okay. So we 
can do this another way, I can actually  
44:06 - make this run after the query runs after the 
ad trade query runs. So to do this, I would  
44:15 - just click on the Add trades query again, and 
on a success trigger, so after this query runs,  
44:22 - get the trades. Okay, so this is actually a bit 
more foolproof. And let's check it out at a trade  
44:33 - and then just change it so we can see a little 
bit of a difference. And then call this test new  
44:41 - and test new. Click Submit. Okay, let's see if 
that has worked. So now let's go to the last  
44:51 - page and one of us. Okay, that has worked. We 
have done it. We have added new trade and it's  
44:57 - showing on our dashboard. Amazing. I'm 
really pleased with how this is looking.  
45:06 - So cool, we've done this, I'm just going to change 
this to add a new trade. Okay. And now let's also  
45:15 - based on everything we have learned, we're going 
to do a bit of repetition, and just make another  
45:20 - modal using everything that we have learned so 
far. So I'm doing this, you know, for muscle  
45:24 - memory. And also to make it a lot more realistic 
and the sort of trade dashboard that you would see  
45:30 - at a brokerage, because you don't only have 
trades that have two sides of a buy and sell side,  
45:37 - you can also have someone just selling some 
brand futures online. So I'm going to create  
45:42 - a new pop up modal, very similar to this one, 
but this time, it's going to be a custom trade.  
45:48 - Once again, it's just a pop up modal, maybe 
let's call this custom, add custom trade.  
45:57 - And then let's make it green. Okay, and this 
time, I am going to allow the person to select  
46:06 - a direction, and it's only going to be, you 
know, like not double sided is gonna be one side.  
46:11 - So once again, I am going to Well actually, we 
don't really have to make this. Okay, so let's  
46:20 - just make this create a custom trade, get rid of 
the emoji using the Asterix to make this bold.  
46:28 - And then let's make it yellow, because yellow 
is quite neutral color. There we go. Okay,  
46:35 - let's do it, the first thing we do is just drop 
in an input, this input is going to be a just  
46:42 - a text input or the trade direction, which we're 
going to end up either buy or sell. The next thing  
46:48 - I'm going to do is just put another text input, 
this time, it's going to be for the entity. So  
46:54 - let's change this up to be entity. And let's put 
some placeholder text, enter. company name. Okay.  
47:04 - So there we go, just make a capital. And 
now we've got the traduction got the entity,  
47:11 - this time, let's grab a drop down for the product. 
So this is going to be for what kind of product we  
47:17 - want to select, essentially, label it as product. 
And the drop down. Well, I've already done this.  
47:25 - So once again, I'm just going to get an array of 
strings separated by commas. Okay, so that is how  
47:31 - we put in values. So there we go, we've done it, 
we put in an array of strings separated by commas,  
47:39 - to signify the items in our drop down. The 
next thing we'll do is actually put a number  
47:45 - input. So let's drag that in here and give 
it the label of price USD. And I'm actually  
47:52 - going to format this to be currency, so that 
we can only put in numbers that have a currency  
47:59 - format. The next thing we're going to do is 
just copy this so using the copy command,  
48:06 - and I am going to use this to have my volume 
in KB, on formatted so just a standard format.  
48:15 - Once we have that, once again, just going to use 
my command to copy and paste another number input.  
48:23 - This time, however, the label is going to say 
commission rate, because that is where I'm  
48:28 - going to put the number value for my commission 
rate. And now that we have that, if you remember,  
48:34 - the next thing we did is actually use the 
statistic component. So I'm dragging and dropping  
48:41 - it in here. And we are going to essentially use 
this to calculate our commission. So the total  
48:48 - commission for this ticket based on so we're 
going to use this syntax of two curly braces  
48:53 - to pick out an element and this case it's number 
input eight, and its value. Okay, so dot value,  
49:02 - whatever the value of that input is multiplied by 
1000. And multiplied by the commission rate, which  
49:09 - is number input nines value. That is how I have 
chosen to calculate my commission for this ticket.  
49:18 - Okay, so let's just take this out, I'm going 
to put volume 100, KB and commission rate 0.05.  
49:25 - And number 100, multiply it by 1000 multiplied 
by 0.005. Indeed, gives me 500. And the format  
49:36 - of that as dollars. So this is looking good. It's 
calculating it correctly, everything's looking  
49:42 - wonderful. The next thing I'm going to do is 
actually use another drop down. So if you remember  
49:48 - from the previous modal we did, we actually had a 
drop down for the brokers. So once again, I'm just  
49:55 - going to put broker and once again, I'm just going 
to go back and copy it. Just to me. get exactly  
50:00 - the same, because we need to paste in the broke 
options. And once again, it's an array of strings,  
50:08 - followed by commas to essentially split them out 
as individual items. Okay, so we've done that  
50:16 - we've done everything here, the next thing 
we need to do, we didn't put it in a form.  
50:22 - So let's go ahead and do that. Put in the form. 
And then let's just work all these things. And  
50:29 - so just move them in, we could have not really, 
you don't have to make this a form, you can just  
50:34 - put a button, but this way is a better 
practice. Essentially, if you did the button,  
50:42 - you could have just done the same thing, you 
know, attach an event to it. So like a trigger,  
50:50 - but we're not going to, okay, this is a much 
better way of doing this. So there's our form. Now  
50:56 - let's hook up the submit button. So I'm just going 
to click on the submit button. And of course,  
51:03 - we need an event handler for this. So here we go. 
I'm going to say that if we submit the button,  
51:12 - I want to run the query add trait, and I want that 
to trigger. However, this won't make sense, right?  
51:21 - Because the Add trade query will trigger the other 
modal because we picked out all the different  
51:29 - components for this. Okay, the add a trade even 
if I felt all these things out, we'll essentially  
51:37 - use the not the custom trade options. But the 
previous modal that we built, this is not correct,  
51:43 - we need to build a new query. So once again, 
I'm going to click new resource. And once again,  
51:52 - let's rename this, I'm going to rename this to 
add custom trade, it's going to be pretty much  
51:57 - the same as our trade. So the spreadsheet we 
need for this is trades. And here action type,  
52:04 - I'm going to say append data to a spreadsheet. 
So just like add trade, essentially save this  
52:10 - save, just like our trade. However, the only 
difference is the values to append will be  
52:15 - different. But we're going to use this as a 
template. So I'm just going to paste all this,  
52:21 - this up so you can see it better. I'm 
going to delete this, I guess second row,  
52:26 - because that was a second row. And now 
we're going to append one row. And let's  
52:32 - change these values up a bit. So timestamp, new 
date, that'd be fine. That'd be today's date,  
52:37 - entity, well, I want to grab another text input 
This time, I want to grab text input threes value,  
52:45 - okay, that's because it's this component that 
we need to grab it's text input, oops, four,  
52:51 - actually, text input four. Okay, so I'm just gonna 
move around a little bit text input for its value,  
52:58 - that's gonna be the entity. Now direction is 
going to be okay, we could actually make this  
53:07 - perhaps we shouldn't make this something else 
text in Book Three, perhaps we should be more  
53:11 - strict and say, you know, it should just be 
a buy. Or it could just be a sell rather than  
53:17 - someone being able to enter whatever they 
want. So I'm going to use another option for  
53:22 - this that is available to us just be a bit more 
strict. I'm going to use this segmented control.  
53:29 - So I'm going to grab that and just whack that 
in here. It really is that easy. And this time  
53:37 - I'm going to I'm just going to delete 
this. move everything up again.  
53:43 - Oops. Okay. So now we have this, 
let's put the values as by Sal.  
53:52 - Okay, and labels, I'm going to put buy 
and sell as well. Okay, so now you go.  
53:59 - And do you thought about is going to 
buy. Wonderful. Now, we don't want  
54:16 - so now I'm going to get these segmented control 
one value. Okay. Great. value. Wonderful.  
54:28 - Cool. Let's carry on product is going to be 
select five. The next one's gonna be text  
54:36 - input seven. So once again, I'm just going to be 
finding out reading off the blue whenever I hover  
54:44 - over each component, that is 
essentially the components name.  
54:48 - This is going to be number input eight. This 
is going to be number input, nine and then  
54:56 - commission rate that's fine. This is going to use 
it Step three, so let's change that to a three.  
55:04 - And then we just need the broker I believe. So 
this is this select, just change the number on  
55:12 - that to be a six, wonderful. And let's click 
Save. Okay, let's test it out, we also need to,  
55:24 - of course, make sure that the submit button is 
triggering the correct query. So we need to change  
55:30 - this to add custom trade. And then once again, 
that's maybe send some confetti. Great. Now, if  
55:38 - you remember from the previous thing, there's one 
more thing we need to do and onsuccess trigger,  
55:42 - we need to get the trades again, so they can 
see the new trades in our table. Wonderful.  
55:50 - Now, let's get to testing this out. Okay, 
so let's do it, I'm just gonna put in some,  
55:58 - oops, I'm gonna put in, I'm just gonna move this 
down a bit, click Add Custom trade, just gonna put  
56:08 - test, custom trade like this a sell product, 
and then just put in some random price,  
56:19 - volume and say 200 commission rate 2.05. That is 
looking like the correct commission amount. And  
56:26 - let's make the broker Annie Glover. Now I'm just 
going to click Submit, the confetti goes off. And  
56:32 - there we go. We have added our custom trade 
is one line this time I can see it. So the get  
56:39 - trades query has also ran once this add custom 
trade query has run. Wonderful. This is looking so  
56:48 - fantastic. We've added some we've added a custom 
trade, we've added a I guess double sided trade,  
56:58 - this is looking great. One more thing to do. 
And that is integrate our Slack channel. Okay.  
57:14 - Before we do this, let's actually fix these, 
as I said, when I rerun the query and change  
57:21 - some of the column names, this actually broke. 
So I'm just going to change these best parts give  
57:27 - as a title. So commissioned by percentage that is 
meant to be and this one is meant to be daily desk  
57:35 - commission obviously doesn't look like that now, 
but that's what it's meant to be. And this one,  
57:42 - this was meant to be this Yeah, how much is 
broken made? So perhaps let's call it commission  
57:52 - in US dollar. Okay. Cool. Now, so to do this, I'm 
just going to delete this drag in a new bar chart.  
58:07 - Now the x axis, oops, we need to make sure that 
it's getting the correct query. So get trades,  
58:14 - get all the trades data. And now let's 
make sure that the x and y axis correct.  
58:22 - So I just want to use commission in US dollars. 
But let's do the x axis first. So by broker oops.  
58:33 - And then we want the commission 
was dollar. So let's hide these  
58:37 - three. Wonderful. Okay, so that one is fixed 
with Sony to fix those two, but perhaps,  
58:47 - let's do the slack integration first. Okay. So 
the first thing we need to do is just use this  
58:55 - form, just like that. Let's 
move this out of the way. Okay.  
59:06 - And let's create a new resource. So I'm just 
going to create a new resource. This time,  
59:12 - I'm going to actually go back to here and go 
back to my resources tab, and create a completely  
59:18 - new one, and then just use the that's fine to 
slack. Because this has been pre configured for  
59:24 - us by return already. So I'm just going to find 
it wherever it is. I know it exists there is  
59:30 - okay. Now, what should we call this resource 
just for our knowledge in this app, I'm gonna  
59:37 - call it slack API. Now we need to get a web 
hook to make this work. So to do this, let's go  
59:46 - to slack. and easy way to do is just click 
right here to create a slack webhook. And  
59:52 - I'm just going to sign in with Google. 
So I'm just going to click here. Okay,  
59:57 - it looks like you're new to slack. Create 
a new one. Place, create a new workplace.  
60:04 - What's the name of your company, 
I'm just going to go and as  
60:09 - demo next. team working right now, retool,  
60:18 - to call this low code costs great. To Do you 
want to email. Let's, let's skip this for now.  
60:31 - Wonderful, and open this in slack. So now if we go 
to slack, there we go. I have created a workspace,  
60:39 - essentially. And there's no one in here. This 
is, of course, just for me at the moment. Now  
60:45 - let's get to hooking this up to our platform. 
So for this, we need a web hook. Right? So  
60:51 - let's get to it. This is step one. Now step two is 
the web hook to integrate the Slack channel with  
60:58 - my platform. And just go back here, create a web 
hook. And there we go. Now that I have a channel,  
61:05 - this is a lot easier. Choose a channel, low code 
costs. So all my messages is going to go here and  
61:11 - add a covering web hooks. So here's my web hook 
URL, literally a few steps to do this super easy.  
61:18 - Just whack that in there. And we don't want 
to create a new app. So let's go back to  
61:24 - resources. And then back to our trades dashboard. 
So we've added that new resource let's carry on.  
61:35 - So the first thing I'm going to do is, 
what should we do first, I am going  
61:41 - to just use some text. So I'm going to make 
a text area, this time, not a text input.  
61:48 - And then what should we call this, 
I'm gonna call this create message.  
61:57 - And then maybe let's get an emoji. I'm going to 
get a writing emoji for this cute, maybe let's  
62:04 - make it a little bit smaller. And you can also 
input images in here. So let's go ahead and just  
62:08 - put slacks logo in to serve Herman knows what this 
is, what's going to Google's like logo for this,  
62:16 - we're just going to use one that's 
hosted online, just for this tutorial.  
62:23 - So I'm just going to copy one from free 
social media icons, copy image address,  
62:33 - then just put it in here like so. So there we 
go, we have our slack logo from the internet,  
62:44 - it is hosted online, off the internet, we've 
just got it. Next thing I want to do is actually,  
62:52 - I'm just going to grab the text again, 
and this is we're going to display  
62:56 - what we are going to send. So like a little 
preview, I'm going to call it slack preview.  
63:03 - Okay, and once again, let's whack in an emoji 
I'm going to put in speech football emoji.  
63:10 - Okay, looking very cute. Once again, the Asterix 
are there to make it the text bold, okay.  
63:17 - If I get rid of them, that is what it looks like. 
Okay, so with and without the little asterixis. So  
63:27 - now I can use this, just make a little container, 
actually, I'm going to put a container in here  
63:36 - to make a little bit smaller, and  
63:39 - move the form up as well. Because all these 
things are in a form currently. move that down.  
63:49 - And in here, let's change the background perhaps. 
So I can be really precise with the background. Or  
63:54 - I could just choose a premade one is up to us. 
Okay, so there we go. That's a bit lighter now.  
64:01 - And in the slight preview, I want to preview what 
I'm typing. So I'm going to grab the text again.  
64:08 - So we get wiser. And this time in the value, 
rather than just having some text, I am going  
64:18 - to use this pre written piece of code that I have. 
Okay, so this is some pre written code. This isn't  
64:25 - a coding course, this is essentially just 
some HTML, I'm not really going to go through,  
64:32 - hopefully you know your HTML. If not, please 
do do some googling at this point in time,  
64:38 - or you can just, you know, pause this and just 
take this from me. Essentially, I've done some  
64:45 - custom code, okay, which you will see styled 
in a bit. And I'm going to use the ritual  
64:49 - syntax. So once again, the two curly braces 
to get whatever the value of my text area is.  
64:56 - So text area, dot value now This means that 
whatever I type will show up in the container  
65:03 - below. Before we move on, I'm going to show 
you how to add some custom CSS. So to do this,  
65:11 - you just need to click on these three dots right 
here, and click on this scripts thing and styling.  
65:18 - And then just click on the CSS part, to add custom 
CSS to this whole app. So here is my custom CSS,  
65:30 - I'm just going to paste it once again, this is not 
really a coding course, this is just some custom  
65:34 - CSS to style, the divs and tags that I previously 
put in, there's gonna save that. And then you got  
65:43 - the styling has been applied. Wonderful. Now, if 
I actually type some tags into the Create message,  
65:51 - you will see that being previewed in my slack 
preview component that I have custom built.  
66:00 - Great, this is looking good. Let's perhaps also 
change the button color, let's make it a bit more  
66:06 - like slack. And then give it purple. Awesome. So 
we've done this. And now of course, we need to  
66:14 - hook up the submit button. So for this, I need my 
I need to make a new query, I'm going to add a new  
66:22 - resource. And then I'm going to essentially search 
or we might refresh this, I need to search for the  
66:32 - slack resource that we just created. So here I'm 
going to go resource and search for slack API.  
66:40 - Great. So we have the slack API. Now, we just need 
to use our resource syntax to post a message to  
66:49 - the Slack channel we chose. So this is the message 
that's going to be sent. I'm going to write user,  
66:56 - current user first name. So this is essentially 
saying that whatever is going to be sent to  
67:02 - slack is going to have user dot dot, and 
what whoever's using it. So currently,  
67:06 - as a first name, this is going to return an error 
because I'm the current user. And then let's have  
67:14 - the message itself. So I'm going to go 
into the text area again and get the value.  
67:21 - Okay. So that's our query. Let's save that. Let's 
also perhaps, okay, so, okay, so that's cool. If I  
67:33 - press submit, at the moment, you'll see nothing's 
happening, because we don't have an event handler.  
67:39 - on submit, I need to get the query for perhapses 
rename this, I'm going to rename this to send  
67:48 - message. Now you'll see if I run this 
query, there you go. That is working.  
67:56 - So there we go. There's our incoming message. If I 
run that query, that will work. So I'm just going  
68:01 - to type another message into so check this as 
working. That's a lot more like. Okay, so now,  
68:12 - it's still likes it. So that is good. Everything 
is working as it should. Wonderful. Okay.  
68:21 - Let's carry on. So this is looking good. This is 
what our app will look like if we preview it. So  
68:30 - I'm just going to preview it. Now. As you can see, 
this would look like if you share the link with  
68:36 - anyone, we have a table, we can also add trades 
via the murderdolls whether it's you know, a trade  
68:43 - or two directions that will add two lines, we're 
just a custom trade our one line to table. Great.  
68:52 - We have a few more things to do before moving 
on. I can of course, also just add something here  
69:01 - saying you know, this is Ania. This is current 
user first name, so that will bring back Ania  
69:09 - as I am the current user and my first name is 
Ania. or friend. I'm just going to get rid of  
69:15 - that let's not have all friend. Let's just have 
my name dashboard. Okay, even though technically,  
69:23 - maybe we should have had a friend because if there 
is no current user and first name, it will just  
69:27 - say this is dashboard. But whatever, this is fine. 
Okay, I can also make this we don't have to just  
69:38 - use the little Asterix is I can use HTML in here 
too. So for example, I can use h1 or let's make  
69:47 - this an h2 tag. And if I want to be more specific 
with my styling, there is of course the option to  
69:54 - add more custom CSS right here. Okay, so you can 
really go to town on the seiling, that is going to  
70:02 - be completely up to you. Before finishing this, 
let's actually fix these two, I guess the bar  
70:11 - chart and the pie chart, as we said, changing 
the table, column names seem to broke this.  
70:18 - So once again, I'm just going to select this 
graph right here. And I am simply just going to  
70:28 - as the data source thing, probably the 
easiest thing to do is just delete this.  
70:33 - And then once again, use this syntax 
rutile syntax to get to the trades,  
70:38 - and get all the data from the trades. 
Wonderful. So that is that you can't  
70:44 - really see because it's very light. And we did 
add a trade with a huge amount of commission,  
70:51 - which, of course, is just being very tall 
right now. There we go. So you've added  
70:56 - a few of these. Wow. So that is why it's looking a 
bit different a little bit bad, it's just because  
71:03 - one has a very tall number. Okay. So once again, 
this is what it is looking like, wonderful.  
71:15 - Okay, now let's go ahead and preview what 
this looks like on our custom made URL.  
71:23 - And there we go, here is our custom dashboard. 
Just one more to do. And that is the brokers  
71:33 - because I can see that's not reflecting correctly. 
So I'm just going to once again, you get rid of  
71:40 - this data source, type it in again. Okay, so 
get played data, let's hide the rest of these.  
71:50 - Okay. And there we go. So that 
is looking way more correct,  
71:54 - just based on the new trays that we added, 
which just had like a ridiculous volume. Okay,  
72:01 - and that is it. Hopefully, you've learned 
a lot. In this first part of the tutorial,  
72:07 - we have covered quite a lot. We've covered how to 
essentially use data from Google Sheets, and also  
72:15 - learn how to integrate, and also learn how to 
integrate slack API in order to create your own  
72:21 - custom dashboard. And, of course, customize the 
CSS as well as a lot of other things too. Now that  
72:28 - we've covered this, let's move on to working with 
rest API's. In the next section. I'll see that.  
72:42 - Okay, now in this section, we're gonna learn 
how to build our own personal crypto app using  
72:47 - the coin API and Twilio API to send messages. 
So let's do it. The first thing I'm going to do  
72:54 - is add a resource. So I'm just going to click on 
Resources here and create a new resource. This is  
73:00 - going to be a REST API. So let's call this coin 
API, just like that. And now I'm going to find  
73:10 - the API. So this is the API I'm going to use for 
this tutorial. And we're going to have to get a  
73:17 - key for this. So we can actually use this. 
So I'm just going to get a free API key.  
73:25 - Click here. And to get my free API key, I'm just 
going to put in my email address in gmail.com,  
73:37 - earlier, Kubo developer,  
73:42 - and get a free API key. So that should 
now be emailed to me. Let's check it out.  
73:50 - And there we go. We have our API key, please keep 
it safe. So I'm just going to copy this. And now  
74:00 - in here, this is where we want to have to put our 
API key at the moment, I am just going to put it  
74:09 - in the header as a string. Okay, so make sure 
that is the string. And then let's get to the  
74:17 - documentation to see what we should use as the key 
for this API key. So I'm going to go back here,  
74:25 - we don't need this anymore. And let's check out 
the API docs, I will be deactivating this key. So  
74:31 - please do use your own. This will not be valid 
anymore at the time, this tutorial goes live. So  
74:39 - here we go. Here is everything that we need. There 
is a bunch of different data here. What I'm going  
74:47 - to get for now, I'm just going to get the base 
URL. So we can use all of these endpoints in our  
74:54 - app. And I'm literally just going to copy let's 
copy the sandbox one actually. Use a sandbox.  
75:02 - And I'm going to just put it here as the base 
URL. And then we need to find out what the key  
75:10 - needs to go under. So let's just have a 
little scroll. There we go. So this is  
75:16 - what we're going to have to have X coin API 
key, Copy that. And once again, is a string,  
75:24 - I'm just going to paste it in here. So that is 
looking good. This is all we really need in order  
75:30 - to be able to communicate with the quaint API. So 
I'm just going to click Create resource. Great.  
75:40 - And let's create an app using a Korean 
API. So I'm going to call this crypto dash,  
75:48 - board create. Wonderful. So now we will see a 
query has already been made. We have a little  
75:57 - reminder for us on how to use this base URL that's 
really handy. Please read the HTTP Doc's query API  
76:03 - for more information on how to use this API. Thank 
you very much. So now that we have that done,  
76:09 - let's go to creating a table, it's going to use 
all the quotes for the crypto currencies. So to do  
76:16 - this, I'm going to actually, I think we can shut 
this one down now. So I want to get the quotes. So  
76:22 - I'm simply going to go here to get the correct 
endpoint. And I can use this data right here.  
76:31 - So this is what I'm going to get back. If 
I use this GET request, I will get back  
76:38 - objects that look like this that have, you know, 
a symbol ID, exchange time exchange, so on, so on,  
76:46 - and ask price, a bid price and everything else 
that we need. So I'm just going to copy this,  
76:55 - just like that. And then whack it in here. 
We don't need this extra one because we have  
77:01 - the little dash here already.  
77:05 - And now just to check this works, let's actually 
pick a symbol ID to filter by. So let's just say  
77:22 - this one. Okay, so you will see here that was now 
URL parameter. And now we also need to put Well,  
77:33 - that is correct the excellent API key here again, 
and the headers, so it's going to get this and  
77:38 - put it in here, we don't need to specify, we 
don't have to put it as a string because it  
77:42 - automatically gets converted to a string for 
us. So now if we run this here, you will see  
77:49 - the response, which at the moment isn't coming 
back with anything, perhaps it's nice to be a.  
77:57 - Okay, well, let's just get 
all the currencies for now.  
78:04 - And there we go, here is our response, we 
have managed to successfully get all that  
78:11 - data. So we've got the data. Now let's put it in 
the app. So that is our first query done. We can  
78:18 - of course, rename it, let's rename it to make 
this more usable, I'm going to call it quotes,  
78:23 - because that is what it is. It's 
just the quotes for all the prices.  
78:28 - Okay. Great. So now that we have that, I'm just 
going to perhaps make this a little bit smaller,  
78:36 - like so. And then let's just drag in a table, this 
is going to be super painless. Here's our table.  
78:45 - And you'll see that it's already managed to 
sort of decide that this is what we want.  
78:52 - So it's just picked out the first query that 
we did. It's got the query here to the query  
78:58 - as quotes we've just called it quote, and it's 
got all the data from our quotes. query. Okay,  
79:07 - so I'm just going to move this around. So you 
can see we've got similar due time exchange time  
79:13 - point of view, I asked price, ask size, basically 
everything that we got in the response here.  
79:27 - Wonderful. So that is very intuitive. We 
really didn't have to do much. I'm actually  
79:32 - going to show you how you can personalize this 
table. So what if I don't really like the way  
79:40 - that the API gave me all these keys, I 
don't want them as my own table headers,  
79:45 - so I can change them. I could simply go in 
here and call this symbol ID. Just like that.  
79:54 - And then maybe let's change all of 
these. Do we want the time exchange  
80:00 - We could just keep time coin API, so I can also 
hide this one. To do this, I can simply just click  
80:10 - on this little icon right here and it disappears. 
Time coin API. Let's also rename this time  
80:19 - moyen API. And then I can also say this is quite 
cool. I can say that the column type is a date  
80:31 - time original timezone, which will change it to a 
date format. For me, so that is pretty cool. Now  
80:39 - the ask price, let's make that ask price, like 
so. And then I'm actually going to change this  
80:48 - to reflect a price small, so let's pick that 
from here. We could use float, or we could use US  
80:57 - dollars, if we want, like, so it's totally up to 
us. Okay, so it could look like this, if we wish.  
81:11 - Now let's do the Ask sighs. Oh, yeah, if you 
click on these, it automatically filters by this  
81:18 - column. That's quite cool. So we've got the ask 
price. Now let's do the Ask size. Just like that.  
81:26 - And then maybe let's make this a float. So I'm 
going to make a float. Okay. So once again,  
81:36 - that is looking good. Or you can make it 
a full integer. It's totally up to you.  
81:44 - Okay, so we've done the Ask 
size, let's do the bid price now.  
81:51 - But price. And then let's 
also make this US dollars.  
82:02 - It would seem not many people 
are trading on the COO coin spot.  
82:09 - Now, let's also do the bid size. So I'm just going 
to change that here. To want bid size. So I'm  
82:18 - going to keep the size, I'm just going to rename 
it. And once again, I'm going to make this a note.  
82:28 - And then we should also probably have lost 
train. So I'm going to have lost trade too.  
82:34 - Now this is interesting, because we're 
going to have to this is an object.  
82:37 - So we're going to have to learn how to work 
with that object. Because we don't want this to  
82:42 - appear like this, we actually want to go into 
the object to get a value. So let's do that.  
82:48 - So to do this, I would use the mapper, and I'm 
going to use the keyword self so that it knows  
82:55 - I'm talking about that particular component. 
And then I'm going to go into the object  
83:01 - and pick out the time coin API. It's quite 
nice that there's auto populating for me  
83:07 - the time coin API. So now if I look here, you will 
see that that is exactly what's been picked up for  
83:14 - the last trade, I've essentially have a look at 
the request and the response or the response.  
83:21 - So I've gone this is what was returned to me 
for last trade. And that's what was trying to  
83:25 - put in itself. But I said no, I want the last 
trade time coin API. So hopefully that makes  
83:34 - sense. Now, let's also perhaps format this to 
be a date. So date, let's say original time set.  
83:47 - Wonderful. Okay, so this is looking really good.  
83:54 - We can of course also move them around. So 
perhaps maybe lets us move the bid size,  
84:02 - then the bid price. So the bid and the ask are, 
you know next to each other. And that is looking  
84:09 - great. Wonderful. Now, I can of course also 
personalize this further, if I want, I can  
84:19 - add a color. So background color. 
For this, you can just type red,  
84:26 - or green or you can be more specific type 
put in hex colors to the choice is completely  
84:33 - up to you. But I'm quite happy with this looking 
the way it is right now. It's already come with  
84:41 - pagination for us, which is really useful. 
I just want to do one more thing and that is  
84:45 - add an option for us to be able to search. So 
essentially, we want to be able to filter out  
84:51 - so filter by the symbol ID. Okay. So 
I'm just going to do that up here.  
85:00 - So to do this, I'm actually going to find a 
component that has a text input. So I'm just going  
85:06 - to grab that whack it here, I'm going to make it 
a bit longer. And let's change the label to say  
85:15 - such like so. And then I'm going to actually leave 
a placeholder to so for example, and symbol ID.  
85:27 - Okay, so we've done that, of course, at the 
moment, it's not really linked up to anything. So  
85:32 - that is our next job, let's get to linking this 
up so that it works. To do this, I'm actually  
85:37 - going to go back to my quote, I'm just going to 
make this a little bit bigger. So remember, at  
85:42 - the beginning, we tried to filter. So we use this 
because you're trying to filter by symbol ID. So  
85:51 - since you're going to bring that back in, but 
instead of filter Id like this, I am going to  
85:58 - essentially just going to get rid of that. So 
I'm going to use this syntax, I am going to  
86:06 - find the text input one text input, once I'm 
literally finding this component I'm reading  
86:12 - the blue offered. So I know that this component is 
called text input one for this platform. And I'm  
86:18 - just going to get the value. Okay. So now whatever 
I type into this is essentially going to be  
86:26 - this. And now I just need to make this trigger 
on change. So we need an event handler for this,  
86:36 - the event handler is going to be a change because 
we're not submitting anything. I just want it to  
86:40 - change as I type. And it's going to trigger the 
query that is going to read the quotes. query.  
86:50 - Okay. So that is the event that's going to 
trigger as soon as I start typing, like so.  
86:57 - So I've just searched by symbol, and you will 
see, all the symbols with BTC have been filtered,  
87:06 - I can of course go. That's just maybe type Gemini 
spot, BTC SGD. Gemini spot, and let's see if it's  
87:14 - changing. Okay, so that is changing. It's got 
anything with Gemini spot here now. Brilliant.  
87:26 - This is looking really cool. Just gonna go, maybe 
it's changes back to BTC for now. Wonderful.  
87:38 - Okay, so now we've got our quotes coming through, 
and our search is working, let's carry on. The  
87:46 - next thing I want to do is just get all the main 
cryptocurrencies that I want to I guess monitor  
87:52 - and another table right here. So let's go 
ahead and do that. For this, I'm actually  
87:58 - going to get in make a new query but using 
the same API, so let's use the resource query  
88:07 - to make this bigger for us. And this query, 
I'm just going to call current seats.  
88:18 - It's got quotes, we've got currencies. And 
for this one, well, I just want to get a few  
88:25 - currencies with their little images. So I 
know that this exists here, because I've  
88:29 - had a look at this before the end point, I want 
to get all to essentially filter out specific  
88:36 - cryptocurrencies that I want, but also include 
all that assets and stuff is somewhere, look,  
88:47 - here we go. Assets but also filtered by certain 
coins. So I'm going to grab this one. And I'm just  
88:54 - gonna walk it in here. So if you want to asset 
filter asset and let's watch, shall we get? I want  
89:00 - to get well, let's get a Bitcoin. Let's also get a 
theory and maybe I'm just gonna put a few in here.  
89:15 - Maybe require an RTC.  
89:28 - Okay. So I'm literally just 
using the documentation here.  
89:32 - And I know this is what's 
going to be returned. Okay.  
89:40 - So that is what is going to happen. Let's save 
and run. Oh, yes, we also need to put in the API  
89:48 - key again. So once again, just in the header 
section. And what was this called? Oops.  
89:59 - paste that in here. Yeah, save it. And 
then we also need this one and seven, one.  
90:09 - Okay, so now if you look at the response,  
90:14 - wonderful. Okay, so we're getting 
the Bitcoin, the light coin,  
90:21 - the tea, the coin, Dogecoin, aetherium, finance, 
coin cadorna coin and die. I don't really know  
90:27 - what that one is, but it was on there, so I just 
put it in as well. Okay, so we filled it out just  
90:34 - a few from the API, the next thing I want to do 
is use this ID coin to get an image. But first of  
90:40 - all, let's just work them in a table. So once 
again, I'm just going to drag a table across,  
90:47 - super easy. And it's pretty much guessed that 
that's the one we want. I think it's because  
90:52 - we are on it was selected on it. So it naturally 
just goes to that one. It's getting the currencies  
90:58 - query, and they gave me the days from it. If you 
want to see more of these, what exactly these come  
91:07 - backwards, so you see currencies. And that is the 
data. So we're getting all the currencies data.  
91:12 - And then you can go further into each object in 
the data array to so that is essentially just  
91:20 - the response, but maybe a bit more workable in 
terms of being a developer and wanting to get  
91:25 - the correct properties from the response. Okay, 
so that is, I just got that by clicking this left  
91:32 - panel, right here. I'm going to minimize it for 
now. But if you ever want to see it, it's just,  
91:38 - it's just right, that cool. So now we have 
our most popular quote are the ones we chose,  
91:46 - sorry, the the, our chosen kryptos 
that we want to keep an eye on.  
91:50 - Let's get to personalizing this table a bit more 
again. So for this one, I'm actually just going to  
91:58 - Okay, yeah, let's keep the asset. D, I want 
that. That is fine. Type crypto. I mean,  
92:06 - we sort of know that. So I'm going to get rid 
of that. I don't want this, I don't want this.  
92:11 - I do want the name, let's perhaps switch 
this around the we're going to put name  
92:19 - actually don't want a bunch of this 
stuff. I really only care about  
92:23 - the volume, one de USD and the price.  
92:28 - Just delete, or hide, sorry, delete is probably 
the wrong word. So let's use this one volume  
92:37 - on the US dollar. And then let's change 
this to of course, US dollar. Oh.  
92:48 - And then the price USD, I'm just gonna put 
price, and then make sure that there's dollars.  
92:58 - Okay, another icon, I want the 
icon to be at the beginning.  
93:04 - Okay, great. So we've done that before I 
actually get to putting the images in using a,  
93:12 - we're going to do a little bit of JavaScript for 
that. I'm actually going to now show you how to  
93:17 - put in Twilio API in order to send a text message 
to your friends and family from this platform.  
93:24 - So I think, yeah, that's let's do it. So to 
do this, I'm actually going to go back to my  
93:30 - resources page. And I'm going to create new and 
this time, let's actually search for Twilio. So  
93:40 - Twilio is one of the API's that comes already sort 
of with retail as a resource. You can of course,  
93:48 - you know, get in touch with them if there's 
something that's missing, but luckily, Twilio is  
93:53 - here. So let's just go ahead and click it. And I'm 
going to call this just Twilio API, Twilio. One L.  
94:06 - Okay, so now let's go to Twilio. I don't really 
want this anymore. For now. Let's go to Trulia.  
94:17 - Just gonna click here and sign up for a 
Twilio account. I can get a Twilio API.  
94:35 - And what is it asking us for? It's asking 
us for an account s ID and an auth token.  
94:39 - So let's go ahead and find that. And now I want 
to use the SMS service. And I'm just building  
94:53 - a guess what's the most alerts and 
notifications? How do you want to do this  
95:00 - I don't know, with code or the minimal 
code to admin walk out, okay? JavaScript.  
95:11 - Get Started. Okay, perfect. So we've got an 
account s ID, it's going to take that, whack it in  
95:19 - here. And then autocon, share once again, I won't, 
this won't be active. So please do use your own.  
95:29 - When doing this tutorial, these will 
not work any more. And then just crucis.  
95:36 - Wonderful. So that is it back to resources, 
I want to create a new app. So we have our  
95:42 - Twilio API ready, let's actually set 
these down because we are done now  
95:47 - with those. And let's go back here. And I'm 
going to click import from query library.  
95:54 - And then I'm just going to 
find the Twilio API. Wonderful.  
96:03 - So we've done that. And the next thing 
I'm going to do is actually create a form.  
96:11 - Okay, so this form is essentially where I am going 
to send text messages from. So let's go ahead  
96:23 - and maybe make this a little bit nicer. So I can 
essentially drag items in here, I'm going to drag  
96:33 - some text. In here, I'm just going 
to say send a text quick. So using  
96:44 - send a text quick. So this is to make it bold. We 
don't need this anymore. Perhaps we'll put in an  
96:52 - emoji though. Anyway, they are quite fun. So I'm 
gonna put in a little mobile phone number, yeah.  
97:10 - Wonderful. So you've got some text. And now let's 
actually put in some inputs. So I need the input,  
97:17 - because I need to know exactly who I'm going to 
text, I'm going to maybe put in this number input,  
97:22 - let's use a number input, maybe this won't really 
be the best one. Now, let's not use this one.  
97:29 - So I'm just gonna delete that one. 
Let's just use the text input.  
97:38 - Just because I didn't want to select a number, 
I actually want to put in quite a long number.  
97:42 - So let's put a number here. Okay, we can 
of course, you can start this up however  
97:55 - you wish, you can position it like this, I 
think that looks maybe a little bit better.  
98:01 - So we've got a phone number here. The 
next thing you want to do is make this  
98:12 - look okay. I mean, you can you can go wild, okay, 
it's gonna be totally up to you how you want  
98:18 - this to look. You can spend hours starting 
up, I don't want this to be about styling,  
98:24 - I want it to be about, you know, getting getting 
the job done, and then styling afterwards.  
98:30 - So we've got that the next thing I'm going to 
do is just put in a text input below here, and  
98:35 - this is going to be for the actual message itself. 
So perhaps maybe there's a better one than this.  
98:47 - Let's maybe use this different one, okay. But to 
delete that, you can use a bigger one as well,  
98:51 - we can use a text area, but I think 
I prefer so let's use the text area.  
99:01 - Again, just put that up the top. 
Once again, let's maybe call this  
99:15 - message. I can just spell message message and then 
enter value or enter text it is up to you. Okay,  
99:31 - so I think this is looking good. We can have this 
as a required field. So let's make this a required  
99:37 - field. And then you can do a bunch of other stuff 
to to really sort of personalize the whole thing.  
99:51 - Okay, so now that we have that, maybe let's 
make this a little bit smaller now. Wonderful.  
99:59 - So now, let's get To hooking it up. So we're 
going to do this with these two values. So  
100:08 - first off, I want you to just going to 
change the color of this just because I can.  
100:11 - So this is how you do something like 
that. You can change the button color  
100:16 - to whatever color we wish now. So you have the 
Twilio API. Okay, so I essentially want to post  
100:28 - to my Twilio API. So let's get the docs out again.  
100:37 - So let's carry on with this. So we've got our C 
ID, we've got our auto token, let's get a trial  
100:43 - number. So this is going to be our 
trial number, choose this number.  
100:52 - Okay, so this is now our new phone number. 
I'm just going to make a note of this.  
101:01 - Okay, so now that we have that, we need to 
figure out how we're going to use this in order  
101:09 - to send text messages. So I'm going to get the 
Quickstart docs. And then just go to node j. s.  
101:19 - Twilio REST API. So this is the request that 
we're going to have to make that makes sense.  
101:29 - API operation, oh, it's already done it for 
us. That's really handy. So I want to post.  
101:35 - So this is for addresses. I 
just want the one for messages.  
101:43 - So there's a lot in here, but I'm just 
impressed the retort already have this,  
101:48 - I pretty much didn't really need to do the 
messages at all. So messages, messages, messages.  
101:58 - messages, Jason. Okay, got it. Okay, so 
now in here, where we already have the  
102:09 - account, si D, we've already done that part. 
So two, two is going to be the text input.  
102:16 - So I'm going to grab text input two, once 
again, this is how we would do it. And here,  
102:20 - I'm gonna grab text input two, and get its 
value. And that's the two and then the body.  
102:31 - So I'm just going to get the body of text area 
one, text area, one body, okay. And then the from.  
102:50 - We're gonna have to have a from which isn't 
actually on here. But that's fine. We're  
102:54 - going to add it now. So from and then 
here's where I'm going to put my saved  
103:05 - new phone number, because there's going to be 
my Twilio phone number. So just like that. Okay,  
103:11 - and let's try it out. So I'm just going to 
save that. Let's rename this to send text.  
103:24 - And I'm just going to put in my phone number into 
here as a test using the country code that I'm in.  
103:36 - Hello, me. At the moment, this Submit button 
isn't really hooked up. But if I run this, that  
103:45 - should work. So query ran successfully. I'm just 
going to wait for my text. I got a text. Whoo.  
103:59 - Can you see that? Pretty cool. Okay. Nice. So 
we've done that that works. And it's actually  
104:08 - instead of me running it here manually. I want 
it to run if I click the submit button. So let's  
104:14 - click on this Submit button here. And I'm just 
going to have to add an event listener for an  
104:20 - event handler, sorry. And that's going to be the 
query send text. That is correct. I'm happy with  
104:26 - that syntax trigger. And I also do things like 
send confetti. So when the summit happens, I can  
104:36 - just send some confetti. So let's try that 
again. Hello, me summit. Oh, confetti us run  
104:44 - committees, I guess, thrown at us was the 
trigger was the buzzer has been clicked. Okay,  
104:49 - cool. And once again, let's check 
with that as well. I got a text.  
104:53 - Wonderful. I've got another text. Amazing. 
So that is how we would link up the  
105:00 - Twilio API, and how we would link it up to 
this text input and this text input and make it  
105:08 - run at when we click the submit button. So this 
is looking pretty good. We've got our cryptid  
105:13 - dashboard, we can filter this table right here, we 
also have a separate table here for crypto coins  
105:21 - that we've specifically wanted to keep an eye 
on. And we can send a text using Twitter's API  
105:27 - directly from our platform. Now, one last thing, 
we can of course, you know, personalize this  
105:35 - loads, I can make a beautiful header if I want 
to. So you can just call this I don't know,  
105:43 - let's call it my crypto dashboard. It's completely 
up to you how you would like to do this. So  
105:50 - perhaps Yeah, maybe let's sign up a little bit, 
just while we are here. Let's put in some text.  
106:03 - So again, if I want to use my current name, 
I can use current user and the first name.  
106:09 - Or if that doesn't exist, I'll just say 
Hello, friend. That's exactly what this  
106:13 - code is saying. I'm going to say, welcome Ania 
or friend, to your group to. So just like, so.  
106:33 - There we go. Great. Okay, so the 
last thing we'll do is actually  
106:39 - use the icons here. And this is 
going to involve some, I guess,  
106:43 - advanced coding, I say advanced, a little bit 
more advanced of what we're doing now. So what  
106:49 - I want to do is essentially use these ID icons to 
get an image. So let's go ahead and do that. Now.  
106:57 - The first thing I'm going to do is actually create 
a new query resource query using the coin API.  
107:05 - So let's go back to the coin API documentation, 
because I want to get these images to coin API.  
107:14 - And then General, here, get all asset icons. 
That's what I want on the asset icons for this.  
107:29 - So to do this, I would simply get the asset 
icons. There we go, here we go, I can get  
107:38 - these. And I could just pass through an icon size 
too. So I'm going to copy this, mock that in here.  
107:46 - And let's make them better to access. So once 
again, however, I'm going to have to get the  
108:00 - API key. And then just lock that in 
here, too. And click Save and Run.  
108:10 - Let's rename this query to 
images, to so it's more readable.  
108:17 - And now, the query comes back with all of our 
images, as long as the as well as the asset ID.  
108:24 - So if I was just to grab this, and then just paste 
it in the URL, you will get the asset. Wonderful.  
108:33 - So we've got that now we need to essentially 
put the icon URL sort of in here based on  
108:40 - the asset ID. So we're going to have to add some 
JavaScript to do this to pass the images. So I'm  
108:47 - just going to click here, and I'm actually going 
to create a custom column that I'm going to call  
108:54 - icon. Okay, and in here, I'm just 
gonna use an image tag like so.  
109:04 - Closing image tag, and I'm going to use lodash 
here. So the source for this is going to be this  
109:10 - is obviously for my retail syntax, I'm going to 
use find, this isn't a JavaScript tutorial. So I'm  
109:18 - just going to provide you with a code. I'm going 
to get the images data, and then that's the first  
109:23 - parameter and the second parameter is going to 
be a function. So the function it's going to have  
109:30 - just gonna pass through for object and then open 
up the curly braces and return asset ID equals  
109:43 - current row, so current row of this table, asset 
D. Okay, so there we go. And then just do dot euro  
110:01 - Nice. And obviously, let's make 
sure that this is a string.  
110:26 - Okay, so now I'm just going to actually 
move this custom one right here.  
110:34 - Hard this icon. And we need to render this 
as pure HTML that we go. So now that we have  
110:56 - render those as HTML, that has now worked, we're 
getting all the icons show up. Pretty neat.  
111:08 - Okay, so now we can also preview this. 
So this is what our app will look like.  
111:18 - and wonderful. Brilliant, I'm really happy 
with that the header is sticky. Everything  
111:24 - else is pretty responsive. And I can 
share this via this URL to whoever I  
111:30 - wish. Awesome. So that is a crypto app. Hopefully 
you found this useful. I can now create your own  
111:36 - crypto apps to using the coin API, Twilio API 
and resource. I'll see you in the next lesson.  
111:49 - Okay, so in this part, we're going to learn how 
to create an invoice tracker using a graph qL API,  
111:55 - as well as learn how to embed videos into 
the platform. So let's do it. For this, I'm  
112:02 - going to have to start a database, I like to use 
data stacks. So I'm just going to log in that I'm  
112:09 - going to click on Data stocks. And I'm just going 
to click try for free. Okay, now I've already  
112:17 - created an account. So I'm just going to click 
here and just select an account to work with.  
112:26 - Great, so when I'm here, I'm 
going to create a new database.  
112:30 - And then I'm just going to get started clicking 
the Get Started button. And what should we call  
112:35 - our database? Let's call it in, or says, and 
the keyspace name is going to be invoice says  
112:45 - his space, just making it super easy 
for you to follow along with. Okay,  
112:53 - and then I'm going to select Europe because I'm 
in Europe and just create a database, is it.  
113:05 - Okay, so once we are here, we 
just have to wait for this status  
113:09 - to connect at the moment, it's pending, 
I'm probably going to cut this out. So  
113:15 - okay, so the status not active, but let's go ahead 
and click here. So this is important, we're gonna  
113:22 - have to have all of this information. But first, 
let's go ahead and connect to our graph qL API.  
113:28 - Now, this is essentially the URLs 
that we're going to use in order to  
113:34 - hook up the graph API to our platform. So I am 
just going to select this right here. And that's  
113:45 - going to open up our playground. However, we need 
to get our API key or kasandra token. So this is  
113:53 - what it looks like. And we're gonna have to put 
it in here in order to communicate with this  
113:57 - and communicate with it in our retort app 
too. So I'm just going to go to Settings.  
114:05 - And then select admin user and generate the token.  
114:10 - So here we go. Here is our token. I'm just 
going to copy that. Please do make a note of  
114:16 - it somewhere, just to make things easier. And to 
communicate with this playground. I would just  
114:22 - click that, like so. So that is looking good. 
That works. We've proven it works. So now let's  
114:29 - go back to our retail app. I'm just going to 
get rid of this. And let's create a resource.  
114:36 - So this resource create new I'm 
going to search for the graph qL API.  
114:45 - And in the headers This time, I'm going to put 
this token as a string, and then here is going  
114:54 - to say kasandra token I'm just going to paste it 
like so. And then the URL, the base URL for this,  
115:05 - well, it's not going to be this, it's 
actually going to be. So if you go back here  
115:12 - to the documentation, graph, QL.  
115:28 - It's going to be the invoice keyspace. But the 
first thing we need to do is actually create some  
115:34 - data. Okay, so let's just put this in there for 
now. So this is the URL that we want to be able  
115:41 - to interact with. So I'm just going to put that as 
the base URL, like so. And then I'm just going to  
115:50 - name this graph. Well, 
invoices and create resource.  
116:04 - Okay, so now that we've done that, let's create an 
app. I'm going to call this invoice FACA, like so.  
116:18 - So now we're connected to our database, 
we're actually connected to the database  
116:22 - key space, okay, because we use the URL for 
the key space, but there's nothing in there  
116:30 - yet. So there's two things we're going to do 
with this, we're actually going to make our  
116:34 - app retrieve data but also add data through the 
app to just to get started there, I'm just going  
116:42 - to put some dummy data into our database first. 
So I'm going to do this using some mutations.  
116:51 - So back here, under the schema, I'm actually going 
to create a table, it's going to be mutation,  
117:00 - this is going to be called an always says, create 
a table for the invoices, open up some ups.  
117:13 - Do you actually want that so the queue 
space name? Well, we know this is invoices.  
117:26 - Key space, the table name is going 
to be just going to call it invoices.  
117:39 - And we need to get some partition 
keys, I'm going to have us it's  
117:51 - going to be an ID and the ID is actually 
going to be a string. So type. basic  
118:04 - text, the ID are the values that are going to 
be allowed are going to be Name column company,  
118:23 - which is also going to have a type  
118:30 - of basic text. Space this up a little bit maybe  
118:42 - we're also going to have a value of 
the invoice which is going to be a  
118:48 - float. So the idea is essentially the 
invoice ID will reference the company name  
118:53 - is to just a company name is a string, the 
value is going to be the value of the invoice.  
118:58 - We're also going to have a paid or not 
paid, which is going to be a Boolean.  
119:08 - And we're going to have a timestamp which 
is actually going to be a text that is like  
119:20 - a timestamp but I'm just going to do tags just to 
make our lives a bit easier. Okay, and just click  
119:29 - Done. So we've run that we've created 
a table. The table name is invoices,  
119:33 - and it has an ID a company a value, a paid or not 
paid and a timestamp. Wonderful. So we've created  
119:39 - a table now let's get to adding an invoice ID to 
our table. So for this we can now use the docs.  
119:50 - I'm going to have to  
120:02 - go to this URL again. Okay, so I'm just 
going to replace this with that URL.  
120:09 - And I'm going to get to the Cassandra token 
again, so we can talk to our key space.  
120:16 - And then I'm just going to write a mutation 
to add an invoice. So insert invoices,  
120:21 - that's what we want. So it's gonna be mutation, 
and then invoices, so you can go like invoice  
120:31 - one, for example, and then insert invoices. 
Now I'm just going to have the value.  
120:44 - So what did we have in here, 
again, where we had the ID,  
120:56 - we can actually just see these here. So 
Id as a string, we're going to invoice  
121:03 - one. And then we're also going to have company 
which is also a string, let's go aren't besties  
121:14 - cup cakes, limited spaces out so you can see a  
121:28 - paired true time stamp slew that for now, 
value. And we'll have this is a float.  
121:39 - So let's do 200 oh one, okay. And the 
timestamp took us to today's time some.  
121:55 - So we're going to use the ISO one,  
122:02 - it's going to put as a string, okay. And then 
let's make it maybe a month back, just like so.  
122:09 - So there's one invoice. Let's see if that 
works. And then I'm just actually going to  
122:18 - so those are our values. And then let's just 
return the values. idea for works. Okay, so that's  
122:28 - what we've added one invoice while I'm here, 
let's just add a few. So just make this zero to  
122:39 - your two, this is going to be Motley Crue just  
122:48 - paid true. And then this make this the 10th. The 
value is going to be for I don't know this much  
122:58 - about again, I'm not going to add a lot. I'm just 
going to do this for demonstration purposes. So  
123:04 - maybe let's add like, just one more. For 
now. Who asked me Have I missed her call?  
123:20 - Then to get paid? Let's do some false, then let's 
make this the 14th. The value is going to be for  
123:31 - course you've got three or Ruiz invoices. And now 
let's just do one more. Just because I want to  
123:40 - have the highest harco id 
again, maybe? And then can you  
123:49 - fit. Okay, so we've got four invoices in 
our database at the moment, let's see if  
123:56 - we can get them into our app before we start 
adding stuff to our database from the app.  
124:01 - So I'm going to go back here.  
124:09 - Delete that one, we don't want 
this one, I'm going to create a new  
124:13 - resource query. And this time, 
I'm going to use the graph qL API.  
124:18 - And now I need to retrieve my data. So I know how 
to do this. If you want to use the documentation,  
124:25 - just refer back to this. I need to 
get all the data and that will look  
124:33 - like this query where we used to get all of 
them so we could just write our own in the  
124:39 - graph qL playground and see if it works. 
So I'm just going to comment out for now.  
124:46 - Use the docs. So if I want to get all the 
invoices, it's gonna be a query and then invoices  
125:04 - Id value timestamp was a company.  
125:19 - Wonderful. So this is the correct query to get all 
four of our invoices, I'm just going to copy it.  
125:29 - And then just put it in.  
125:33 - Now the URL, it's asking me for the URL again, no 
worries, though, I'm just going to copy this here.  
125:41 - Seems that we didn't get the 
correct. We want this one.  
125:45 - Yeah, okay, so I'm just going to change this 
to be the one we pre made. Okay, wonderful.  
125:55 - You can, of course, just create one from 
here too. But as we've already made it,  
125:59 - I'm going to use this one right 
here. And just click Save and Run.  
126:08 - And great. So we now have all four invoices 
ready to use for our app. So the nice thing  
126:18 - about this here is you can actually see 
the queries and mutations available to you.  
126:21 - So it's taken them directly from the docs in 
the playground that have been generated for us.  
126:28 - Great. So now that we have that, I'm 
just going to actually delete this.  
126:40 - And then let's make a new table by 
using this new query that we just have.  
126:47 - Okay, so I'm going to rename this to something.  
126:50 - Let's call this graph QL. invoices. Okay. 
So now instead of this data like this,  
126:59 - so this is some like default data, I don't want 
this, we're going to have to use our query.  
127:05 - So we're going to get the graph qL invoices data, 
just like that. And now, this is a great time for  
127:13 - using this because that's obviously not working. 
That's not enough, we need to get the data,  
127:18 - but then we also need to get the invoices, 
and then we also need to get the values.  
127:23 - So I'm going to do invoices, and then bodies. 
and wonderful. So we now have thanks to our  
127:32 - little left sidebar, we now have all the four 
invoices in our dashboard that we need. Great.  
127:50 - It's gonna make this a little bit 
bigger. Okay, so let's carry on.  
127:58 - Once again, maybe let's do some personalization. 
So I'm going to change this to invoice reference,  
128:05 - just to be super clear about what that is this 
value, well, I think value should be fine. But  
128:11 - maybe let's make it US dollars. So I'm just 
going to choose dollars. And the time stamp,  
128:18 - I'm just going to change this maybe to the 
date. So I'm just going to change this to  
128:24 - date, and then use the date original timezone. To 
change that into a date format, which is easier  
128:33 - for us to read. Company I'm happy with company, 
maybe let's just make it like a capital C.  
128:42 - And this paired, so I can 
change this to a checkbox.  
128:48 - Great. And now these are the ones are paid. And 
these are the ones that aren't paid. But we want  
128:53 - to be able to edit this right, so we'll do that in 
a bit. Just gonna maybe make this smaller again.  
128:59 - Before we move on, I'm actually just going to show 
you how to create headers that aren't I guess tied  
129:06 - to the top. So to do that, obviously, we're in 
the header. Now that is not correct. I'm going  
129:10 - to move this down to the main section. I don't 
really want anything in the header this time.  
129:18 - Because I don't want the header to essentially 
appear on the published app. So by leaving it  
129:24 - blank, that's exactly what will happen. So this 
time, I'm going to actually just make a container.  
129:33 - Make your own this big and I 
can change the color of this  
129:36 - container if I wish I can make 
it like this. greeny color.  
129:43 - Oops. greeny color. Cool. And then in 
here, I'm just going to essentially  
129:51 - put in maybe like an invoice tracker. 
So I want to title put in a title  
130:05 - And as the value I could just use HTML 
like this and put in voice, cracker.  
130:16 - Okay, and that will work, too. Voice.  
130:44 - And then maybe let's put some more text here.  
130:49 - Hello Ania or friend, this is 
your custom invoice tracker,  
131:09 - I mean, there's really a bunch of stuff we can do,  
131:11 - we can add an image, we want to put 
in a little image of an invoice.  
131:20 - So then I can just simply select 
this. And then I actually have  
131:26 - some images on my image out, which I like 
to store. So I'm just going to use that.  
131:32 - Okay, so that is an image from my imager. And 
I'm just going to replace that URL, like set.  
131:40 - So we've now got a title. This is what it 
looks like if you preview the app and you  
131:44 - want to share it via the URL. So you see the 
other head has now gone, that is the main  
131:49 - header. Okay, let's go back to editing 
the app. Now, we can actually create  
132:02 - things super easily just by dragging and 
dropping charts. So if I want to create a chart,  
132:08 - I would simply drop this in here. And then it's 
going to get my graph qL invoice data. Now we can  
132:15 - be really specific about what kind of data we 
want to feed into this graph. So let's do it.  
132:23 - Once again, going into data is not enough, we 
need to go into the invoices and get the values.  
132:30 - Okay, so just like for the table, 
we need to be a bit more precise.  
132:34 - So now it's done about invoice and value. However, 
what if we don't want this? What if we want to do  
132:40 - it by value and date? So we can easily do that, 
I would simply have to just change the x axis  
132:48 - values. So other moments ID, I can choose 
timestamp. And it really is that easy.  
132:56 - Okay, so I can put value here instead. And at the 
bottom, I could put dict. Okay. Obviously, oops,  
133:10 - we have to make that a little bit better 
in order to see that in a nicer way. Okay.  
133:26 - So we've now created a graph to let us 
know what days we made the most money on,  
133:32 - you can edit this way further, like say I want to 
change the color of this, I can of course do that,  
133:38 - too. Wonderful. So the next thing I want 
to do is actually also maybe create a pie  
133:48 - chart. So let's go ahead and do that. I'm 
going to show you how to create a pie chart.  
133:55 - Grab that here. And this time, I want to just 
select pie chart. Once again, I need to go into  
134:00 - the invoices, values. And great. Again, I if I 
don't want this to do it by invoice by ID, I can  
134:13 - change it up. So to do this, maybe again, 
let's do this by Okay, I want to change the  
134:25 - colors though. So I could just go around 
and change a bunch of colors if I wish.  
134:31 - Again, we're not gonna be splitting it by these. 
So let's change that. Let's do it by paid or not  
134:39 - paid. So the green is how many haven't paid paid 
white invoices. And this is how many of them  
134:44 - paid. So that's quite a good statistic. I 
think that's quite a good one to keep that.  
134:49 - And I can also do things like put these in 
containers. So let's maybe do that just to  
134:54 - make it look a bit nicer. So I'm going to grab 
a container Want to stick this in the container?  
135:05 - Okay, and now I can put a title, or just some 
text that will look like it's part of the  
135:14 - same container. So if I do this, and I just put, 
let's make this maybe an H, three tag this time  
135:31 - paid versus on paid. And then we 
will just make sure that it's in the  
135:39 - middle. Okay? Cool. We can, of course, 
put more things in this container if we  
135:47 - wish. So maybe let's go ahead and do that. 
It's totally up to you, we can even do oops,  
135:59 - we can even put on another graph, maybe two. So  
136:02 - show how many clients have given 
the most money. So once again,  
136:13 - we will now need to go into the data in voice 
says earlier is to get that data. And this time.  
136:26 - Let's do it by company. So now we 
can see which company has essentially  
136:33 - given us the most money. And again, maybe let's 
change that to a different color. Wonderful.  
136:47 - Okay, so this is starting to shape up really 
nicely. If you let's move that a bit further.  
136:58 - Oops, down here. Just so we have a bit more space 
for these things, we don't need to squish them up.  
137:05 - For example, we actually 
want to put a video up here,  
137:10 - I'm just going to make some 
space. For that to happen.  
137:24 - Let's give this a title to secondary invoices. 
By value. Maybe let's get rid of this one. And  
137:31 - then also give this one a title. So this should be 
paid versus on. Paid versus paid versus on paid.  
137:49 - Okay. I'm going to stick this table up here.  
138:08 - Move this container down a bit.  
138:13 - And just elongate that just in case we 
get more invoices coming through. Okay.  
138:30 - So now I'm going to show 
you how you can also embed  
138:33 - videos if you wish. So for this, I'm just going 
to maybe, let's also give it a title, have you  
138:45 - done your tax returns is sort of 
like a reminder, if you're managing  
138:51 - these platforms, right, and a lot of people are 
using them, you might want to remind them to do  
138:56 - something that is important. So have you 
done your tax return, and then maybe let's  
139:07 - I don't know what we want to do with this.  
139:09 - I actually don't like the way this looks. So 
let's get rid of that. And I'm going to use a  
139:12 - text instead. So I'm going to 
put some text in just like so.  
139:24 - And then make it centered. Let's make 
this like an H, there's the paragraph.  
139:33 - Let's have a play around. You can of course 
edit these even more. That's the beauty of  
139:44 - this low code platform. Okay, so have you done 
your tax return and then let's put in a video.  
139:54 - So to add a video, I would simply just drag this 
in here so I'm just going to put it And here.  
140:04 - And I'm just going to I mean, yeah, that's a great 
video, but maybe you should do something that is  
140:13 - to do with taxes. So you can obviously put your 
own video, I'm just going to use one of YouTube  
140:19 - tax return us just because we are 
dealing with dollars. So let's  
140:26 - just give a video on that. This is from 2020. 
But, I mean, I know we're in 2021. But I'm just  
140:37 - gonna use this one, just so you can see what that 
whoops looks like, needs to get this, get the URL  
140:48 - and just put it in there. Okay, wonderful.  
140:54 - So this is looking really good. let's 
preview what this looks like on the app.  
141:10 - Okay, so this is what you would look like it 
would look like to anyone that you shared it with  
141:15 - looking or some very minimal, we did very 
minimal start to it, you can of course,  
141:19 - style this up as much as you want. All the 
components come already pre made, you can  
141:26 - style them up with just by changing colors, or 
texts. Or you can go that little bit farther  
141:32 - by changing the CSS just like we did in the 
first video. Okay, one more thing to do.  
141:40 - And that is I'm going to show you how to 
add an invoice and also update an invoice.  
141:47 - Let's get things going by creating a new resource 
query. This time, I'm just going to make this  
141:54 - bigger. So this time, we need to figure out 
where to actually add data to our database.  
142:02 - So to do this, let's first off practice in our 
playground. So I'm just going to comment this out,  
142:08 - and then write a mutation using the docs 
provided in order to insert a new invoice. So  
142:16 - I'm just going to essentially use this Doc's to 
help me we are going to be writing a mutation. If  
142:23 - you're not super well versed in graph qL, I would 
recommend Of course, doing a tutorial previously  
142:28 - on it as this is not a graph qL tutorial. This is 
a local tutorial for those, you know, who already  
142:33 - have some graph qL knowledge but of course, please 
don't let that stop you. Let's carry on. So for  
142:40 - this mutation to create a new invoice, I was 
simply need to create a mutation, which is going  
142:46 - to look like this, this invoice is going to be 05 
and I'm just going to put insert invoices, and in  
142:55 - here the values that I need to essentially 
create my invoice. So the value for this  
143:05 - is going to be ID invoice 005 as a string. 
And then I'm going to have the float of 10.1  
143:18 - a timestamp which I'm just going to use as a 
string just to make our lives a lot easier.  
143:25 - So I'm just going to use this format here. And 
perhaps Let's change things up a little bit.  
143:30 - Maybe let's just change this to 15 Okay, just to 
mix it up a bit. So we've got the ID we've got the  
143:39 - value we've got the timestamp Next we need company 
unpaid. So let's say a company let's write company  
143:48 - and then of course this is going to be stream 
so I'm just gonna put Aeneas abacha says they're  
144:01 - limited and is Abacuses limited 
fine. Is that how you spell Abacuses?  
144:07 - I don't even know. And he is ant 
eater. mittens limits. Okay, let's  
144:15 - unpaved, this is gonna be a Boolean, as we 
said, and I'm gonna say false. Okay. So this  
144:21 - is how I would expect the mutation would 
look like if I was to create a new one, but  
144:26 - let's check it out. So let's go ahead and run 
it. validation error sub selection Christ.  
144:36 - Sent invoices. All right, okay, we need 
to return something. So let's just return  
144:43 - some values. And I'm just going to attend 
an ID just to see if it works. Okay,  
144:47 - wonderful. And that has worked. So we know this is 
the mutation we need. So let's grab it and use it.  
144:56 - So I'm just going to go back to I'm going to 
just copy this actually first, back to here.  
145:04 - And on this query, I'm just going to paste this in 
here like so. Okay, we know this is the mutation,  
145:12 - we know this works, we, we now need to replace, or 
the, the ID the value of the title of the company,  
145:18 - and paid with staff from our platform. Okay? So 
for this, maybe let's just, let's just check, it  
145:26 - works from this here, this platform actually here 
to the students just to invoice six, and was six,  
145:34 - this change the value and the change of timestamp? 
And let's just save this and run it just to check  
145:42 - again. Okay, that has worked. Our response is, our 
query has run successfully, we've got a response.  
145:48 - So this query works. Let's rename this 
to add invoice to make a more readable,  
145:54 - okay. And now let's get to replacing all 
the values with stuff from our platform. So  
146:01 - how are we going to do this, we need to replace 
all these values, we'll probably make a modal  
146:09 - we're going to have to have an ID, this is 
a string, as we said, has to be a string.  
146:16 - Okay. So just like that, and I'm going 
to replace whatever we pass through this  
146:21 - as the ID. Next, we need the company. And 
the company is also going to be a string.  
146:28 - So let's replace whatever we 
pass through here as the company.  
146:35 - Great, we've got the ID, we've got the 
company, let's do the timestamp next.  
146:42 - And this is also going to be a string, 
we've chosen this to be a string  
146:46 - just for this demo. And there we go timestamp. 
Okay, now let's move on to the value,  
146:53 - the value is going to be a float, remember. 
So we're going to have to put float for that.  
147:01 - And then we're going to just grab the 
value and replace it here. So whatever  
147:05 - we pass through the body, it's going to be the 
value. And that's it. I know we also need to pay  
147:12 - and pay it is going to be a Boolean, then 
we're going to replace paid with page.  
147:20 - Wonderful. And this I'm just going to have 
as I do, it doesn't really matter. Okay,  
147:27 - great. So we are sort of that now our variables 
have generated for us below, based on what we have  
147:36 - just written most recently. So now I think 
it's time to essentially create our modal.  
147:46 - Okay, so, to create a new invoice, I am going 
to have to just like we did if you remember,  
147:57 - in the first tutorial, with creating 
traits, we're going to do the same.  
148:04 - So let's grab our knot button, we 
need a modal, drag it down here.  
148:14 - Let's perhaps rename this to add invoice, 
invoice. Okay. And now maybe we want to  
148:30 - change the button to be red. Why not? 
Or maybe green greens less angry.  
148:37 - Okay, so got a modal, let's start 
dragging stuff into the modal.  
148:42 - So for this, I am going to essentially put in 
all the inputs that we need to create an invoice.  
148:48 - So this will include everything we have just, 
I guess, stated our variables. So let's do our  
148:55 - first one, I'm going to drag in a text input. And 
then I'm going to put a placeholder placeholder of  
149:02 - enter invoice reference, this is going to 
be essentially the ID of the invoice. Okay,  
149:10 - so there we go invoice reference. The next thing 
we need is this time again, let's actually have  
149:16 - a text input. And then this is going to be 
let's make this the company. So label company  
149:26 - name. Then let's have a another 
text input for the timestamp.  
149:36 - Or actually, no, let's not have that. Let's 
actually make a date selection for this.  
149:44 - So I'm going to change this to this 
let's change this invoice amount.  
149:53 - Now let's make this let's get rid of this 
actually and make a user number input instead.  
150:01 - Let's get the number input this time,  
150:04 - just going to drag it in here. Let's change the 
label. Let's make the label say invoice. amount.  
150:15 - Great. And I'm just going to delete this using 
my keyboard commands. Okay, so that is now gone.  
150:24 - So we have the image reference, we have the 
company name, we have the invoice amount,  
150:28 - what else do we need? We need the actually, 
there's another one we can use. Okay,  
150:36 - let's use the currency one. So I'm just 
going to drag that in here. And once again,  
150:41 - invoice amount. And then once again, use 
my keyboard to delete that one. So now we  
150:47 - now got our currency one that's formatted 
zytek currency. Okay, that makes a lot more  
150:53 - sense. The numbers now will come in currency 
format. Wonderful. Okay. Now, we need to.  
151:09 - Now let's pick the date time picker. 
So I'm just going to search date picker  
151:17 - and grab that and just whack it in to here. Okay, 
just like that. And now we have a date selector.  
151:28 - So I'm going to use this for my timestamp 
essentially, carry on. The next thing I need to  
151:33 - do is the paid or not paid. So as the brilliant, 
I'm simply going to look for a checkbox.  
151:39 - So I'm going to use this right here. And 
just write paid. Question mark. Easy.  
151:46 - So that is now it, let's maybe add some text to 
make it really obvious to the user what this is  
151:53 - for. I'm just going to drag that in and put 
add a new invoice. There we go add a new  
152:01 - invoice just as a title right here, it doesn't 
look super great. Of course, we can edit it,  
152:08 - I can center this, if I want just to make 
things look a lot nicer. So that we go.  
152:17 - Cool. It's going to move these down a little bit 
just to make it a little bit more spaced out and  
152:26 - just I think look better, in general. Okay, so the 
next thing we should do is actually make something  
152:34 - happen once is filled out. And for this, I'm 
going to use a button. In the previous tutorials,  
152:40 - I did make a form. In this one, I'm going to 
show you how to do without form. So I'm just  
152:44 - going to use a button instead, to essentially 
trigger a query if all the values are filled out.  
152:53 - So let's go back in here, and now that 
we have our variables, I'm going to use  
152:59 - the Rachel syntax to pick out components and 
the values as the variables. So for the ID,  
153:06 - well, we know that the text input 
one here, value is going to be the  
153:12 - ID of the invoice. So I'm going to grab text 
input one value, okay, do you see the blue  
153:18 - text showing up? That is the components name. 
Okay. Next we do the company. So this is going  
153:25 - to be text input two's value, the timestamp 
which is going to be the number input value.  
153:35 - Okay. I think it is number input value, maybe it's 
not number input number input. And that input in  
153:44 - one is not defined. Okay, so let's go back here 
and just double check that now that is the invoice  
153:51 - type number invoice. Number two value is the value 
of the invoice, okay? And this is date picker one.  
154:01 - Find. So date picker, one is going to be the 
timestamp and his copy is cut that out sorry, and  
154:06 - put it under value. And this is going to be date 
picker, date type date. Yep, that's the one date  
154:13 - time picker. There's format to string because we 
did say that time something needs to be a string.  
154:20 - Cool. And finally, let's get the little checkbox. 
So it's just checkbox one, as you saw by the blue,  
154:29 - little writing. Great. Okay, so we've done it, 
we have picked out all the variables that we need  
154:39 - based on the input values. And now we just need 
to hook up the button to trigger this query.  
154:47 - So essentially, because we are on the query 
already add invoice. This is sort of done  
154:51 - for us the queries are invoice and if we click 
the button, this will trigger the query. Okay.  
154:59 - Great. Just because I like it, I'm gonna put some 
confetti here too, if we click the button. Okay,  
155:06 - so now let's save this and test it out 
invoice reference. Let's go ahead and put.  
155:17 - Okay, so that's Ron, but obviously that we didn't 
add anything because there's nothing in here.  
155:21 - So let's put invoice 07 
company name, I'm going to put  
155:28 - Tony's turtle next limited invoice 
amount to 123. And let's pick a date.  
155:44 - Sure, there we go and just select paid and submit.  
155:48 - So we have just submitted it we have added an 
invoice then that was that seems to have worked,  
155:55 - awesome query ran successfully, but 
we won't see it in our platform. Okay.  
156:03 - This is because we need to run another query after 
all this is done, we can do it let I'll show you  
156:11 - how we can do it here in the event handlers. So 
once this, we click this button, we essentially  
156:16 - send an invoice we create a new invoice, but I 
can also ask it to get all my invoices again.  
156:23 - So I'm going to run the graph qL invoices query 
that we previously wrote. So if we click it, it  
156:29 - will add an invoice but also get all the invoices. 
So let's test that out. Let's add another invoice  
156:36 - or a I'm just gonna change the price again, 
and just change the date and click Submit.  
156:44 - So now you will see here, amazing invoice ate 
and invoice seven and are visible in my table  
156:53 - because the graph qL invoices query has run. If 
you remember from my first tutorial, you can also  
157:01 - do it on the query itself. So after the query 
ran has run successfully, has ran successfully,  
157:07 - it is totally up to you. Okay, whichever one works 
best for what you are making at that moment in  
157:14 - time. Okay, so this is looking fantastic. I'm 
really pleased with how far we have gotten,  
157:22 - we have been able to get data from our database. 
But we're also not adding data to our database  
157:28 - from the platform itself. Great. And finally, 
I'm going to show you how to update an invoice.  
157:36 - So for this, I am once again going to create 
a new query, let's just go here, query source  
157:44 - query. And let's rename this to update invoice 
just to be super clear about what we are doing.  
157:51 - Now, I'm just going to save that and I'm 
actually going to just copy this mutation,  
157:56 - because essentially, to update an invoice, we have 
this mutation right here. I'm just gonna paste  
158:04 - that. And then I'm just gonna change oops, just 
change this to say, update invoice instead of  
158:12 - insert invoice as per the graph qL playground 
documentation. Okay, so it's exactly the same  
158:18 - apart from your updating, moonboys, not adding 
one. And now we need to actually pick out  
158:25 - the correct components of values for this. So I 
want to pick out whatever row I interact with.  
158:33 - So to do this, I'm going to grab the Table 
Table, what is it table one, table one,  
158:41 - I'm going to use something called record update to 
do this, the record update is actually a property  
158:48 - of the table, please feel free to mess around 
with it, it might seem quite complex for now,  
158:53 - as it's probably not something you've come across 
before, but just know that it's a property of the  
158:57 - table to update rows and just pass to a zero to 
make sure that we are the first item of the array  
159:06 - and grab the ID of whatever row we are in. Okay, 
and do the same for this wherever we are and we  
159:13 - want to grow the company. And whatever role 
we are in we want to grow up the timestamp.  
159:25 - And whatever row when we want to grab the value. 
I'm also going to parse float the value just to  
159:36 - make sure that it's accepted. in case anything 
goes wrong. I just want to wrap it in a pass float  
159:45 - as this has to be a float value and paid again 
let's whatever row we are and we are grabbing  
159:52 - the paid value. Okay. So that is it. Let's check 
it out. I'm not sure why it's red. Maybe when we  
160:02 - save this, it'll go away. But I am confident 
that this is the correct code. Okay, now one  
160:08 - more thing, we actually need to enable editing for 
all of these. So enable, enable, enable enable.  
160:18 - Great, now we just need an event handler. So 
this time, I'm just going to choose the change  
160:25 - option, and then trigger update invoices. Okay, 
so let's run this, it's going to minimize this,  
160:36 - click Save. And now we need to do one more thing. 
Once we update the invoice, we also need to  
160:43 - run the graph qL invoices query to refetch all 
the invoices. So I'm going to do that on success.  
160:50 - So after the query has run, and 
has been successful, I want to get  
160:53 - all the invoices again. So now let's try it out, 
I'm just going to change this and save changes.  
161:04 - And great, so that has worked, that is 
updated, wonderful. Everything is looking good.  
161:12 - Okay, and we can see here the 
query has run successfully.  
161:15 - Amazing. Okay, and it's picked out in boys three, 
because that is the invoice that we are wonderful.  
161:23 - Now I can I could rename this to, you know, 
get invoices, it would make a lot more sense  
161:28 - as that is what we are doing. And will might make 
much more sense with what I've written below. So  
161:32 - add invoices, and update invoice, that would be 
better. But you know, then you'd have to change  
161:38 - that everywhere you've used in the app. So 
for now, I'm just going to get rid of it  
161:42 - and just keep it as graph qL invoices for now. 
Okay, wonderful. And let's check out our app.  
161:50 - So this is what our app looks like it is now 
finished. If I interact with one of these and save  
161:58 - the change, you will see that that has worked. 
Everything is looking good. Amazing. Okay, and  
162:08 - it's also updating all the graphs are dependent 
on this data. So the bar chart and the pie charts,  
162:15 - too. Okay, so I hope that video was useful, we 
have now completed three low code solutions,  
162:23 - all very different, or practicing a lot of 
different API's and a lot of different techniques.  
162:29 - So hopefully, there was a lot for you to take 
away from this course. Next up, where to go next.  
162:42 - Okay, so hopefully, you've learned a lot by 
building three completely different financial  
162:46 - apps, I tried to make each tutorial very 
different to really sort of maximize your  
162:52 - potential for gaining knowledge. Now, if 
you're not particularly into financial apps,  
162:58 - there's a bunch of other stuff you can build to. 
If you go to the retail site, you can actually  
163:02 - see a bunch of different templates that you can 
click on in order to get to coding straight away,  
163:08 - using them as a template. Some great examples 
are a custom CRM, a admin panel, a stripe refund  
163:16 - tool. So you can imagine you're just working 
at a maybe small business and you need to  
163:22 - figure out a way to allow everyone on the team 
to issue refunds quickly, you can build a stripe  
163:29 - refund tool that looks like this. Other 
things you can build on s3 file exporter,  
163:36 - and get hub PR dashboard, a Firebase admin panel, 
a customer success panel, customer support tools,  
163:46 - inventory management, and image annotator and 
machine learning image labeler. And so, so much  
163:55 - more. The potential for this is really 
quite large. And I hope you can have a go  
164:01 - at creating your own dashboards today. Thanks 
so much for watching, and I'll see you soon.