00:00 - with the Observer design pattern if an
00:02 - object is modified it broadcasts to
00:04 - dependent objects that a change has
00:06 - occurred one example is the model view
00:09 - controller architecture when the view
00:11 - updates the model changes event handlers
00:14 - are another example of the Observer
00:15 - design pattern these are functions that
00:17 - will be notified when a certain event
00:19 - fires when you use the ad event listener
00:22 - function in JavaScript you would
00:23 - basically using the Observer pattern
00:25 - this is very similar to the publication
00:27 - subscription pattern now here is a a uml
00:30 - diagram from Wikipedia that kind of
00:32 - explains the pattern so we have a
00:34 - subject right here now a subject
00:36 - maintains a list of observers and
00:38 - facilitates adding or removing observers
00:40 - so you can register new observers you
00:42 - can unregister or subscribe and
00:45 - unsubscribe you can also uh notify The
00:48 - Observers and when you notify The
00:50 - Observers it's going to you look down
00:52 - here to the function definition for
00:54 - Observer and observer collection call
00:55 - observer. notify so it's going to call
00:57 - notified for each Observer this is the
01:00 - the overall Observer and then you you
01:02 - can make instances of the Observer
01:04 - concrete Observer a concrete Observer B
01:07 - and so then on the subject when you call
01:09 - notify observers it's going to call this
01:11 - function so each Observer is notified
01:14 - let's go back and look at some actual
01:15 - code so here's the definition of the
01:19 - subject and we are going to create an
01:21 - observer array there's four different
01:24 - functions in the in the subject we have
01:27 - subscribe Observer where we're just
01:29 - going to pass s an observer object and
01:31 - then push that Observer object onto the
01:33 - array then we have unsubscribe Observer
01:36 - where basically we just um find The
01:38 - Observer object try to find the index of
01:41 - the Observer object that you passed in
01:43 - and then we're going to um splice the or
01:45 - this is basically just taking out the
01:47 - Observer from the array we notify
01:49 - observers this is where we can just
01:51 - notify one Observer we pass in The
01:53 - Observer we find the index and then
01:55 - we're going to call the the observer.
01:59 - notify
02:00 - on the index number of of the The
02:03 - Observer we passed in so only one
02:05 - Observer is being notified then we have
02:07 - notify all observers where we're
02:08 - basically going to notify every observer
02:11 - in that array observers do length it's a
02:13 - for for Loop and we're going to go
02:15 - through each um each observer in the
02:17 - array and notify so let's go down and
02:19 - look at what the observer looks like now
02:21 - this is a pretty basic example of an
02:23 - observer and the main thing about the
02:25 - Observer is that you need to have a
02:26 - notify function in this case we're just
02:29 - going to conso log Observer and then the
02:31 - number of the Observer is notified but
02:34 - obviously in a real example you'll
02:35 - probably do something a little more
02:37 - detail than this but let's go down to
02:41 - where we create the objects so we're
02:43 - going to create a new subject object
02:45 - that was the first we reviewed up there
02:47 - and then VAR Observer one equals new
02:49 - Observer one now here we're just we can
02:51 - pass in things when we're creating the
02:52 - Observer here we're just passing in the
02:55 - number of the Observer and the main
02:56 - reason for that is so you can see in the
02:57 - console what number is being notified so
03:00 - we're creating the four observers now
03:02 - we're going to Subs all these observers
03:04 - are going to subscribe so subject.
03:06 - subscribe The Observer and observer 1 2
03:09 - 3 4 and I'm going to take off the the
03:10 - comment for this so we have subject.
03:13 - notify Observer Observer 2 so if we run
03:17 - that you can see just Observer 2 is
03:20 - notified and now I'm going to do
03:22 - something else we're going to subject.
03:23 - unsubscribe now Observer 2 has been
03:25 - unsubscribed and now we're going to take
03:27 - off this comment subject. notify all
03:30 - observers and we run that so this was
03:33 - the first thing we got from the notify
03:35 - Observer Observer 2 and then this is
03:38 - what happened with the notify all
03:40 - observers we have Observer 1 three and
03:43 - four you can see Observer two is not
03:45 - notified because it's been unsubscribed
03:48 - well that's just a basic example of the
03:49 - Observer pattern thanks for watching my
03:52 - name is Bo KS don't forget to subscribe
03:54 - and remember use your code for good