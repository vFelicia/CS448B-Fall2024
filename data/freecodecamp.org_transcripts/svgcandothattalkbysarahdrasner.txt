00:00 - hey everybody thanks for coming back
00:02 - after lunch I know we all had like lots
00:04 - of food and wine and stuff
00:07 - but we're gonna be talking about
00:08 - something that I find really exciting
00:10 - this afternoon and hopefully you do too
00:13 - that the title of this talk is SPG can
00:15 - do that part of the reason why I'm
00:17 - giving this talk is because SVG as a
00:19 - graphics format is just capable of so
00:22 - much and I think we're just at the tip
00:25 - of the iceberg for really touching on
00:27 - all of those capabilities so yeah like I
00:30 - said my name is Sarah Dresner this is a
00:31 - photo of me as a child and my mom and my
00:34 - relationship with Authority
00:36 - I'm a senior developer advocate at
00:39 - Microsoft I just started so that's
00:42 - exciting and I just think SVG is a total
00:46 - party you can kind of make your party
00:49 - yourself or you can have JavaScript be
00:50 - the event coordinator get it event okay
00:54 - there's gonna be lots of bad jokes where
00:55 - that came from
00:57 - and we can do so many cool things with
00:59 - it so some of you already might know the
01:02 - benefits of SVG but just in case you
01:04 - don't let's go over some of those it's
01:06 - crisp on any display it's built with
01:08 - math so basically any time you're making
01:11 - an SVG you're just plotting a few
01:14 - coordinates and the computer is drawing
01:16 - all those coordinates out for you so
01:18 - it's not like bitmaps
01:19 - where you know if you make something
01:21 - really big or really small it loses
01:23 - clarity and it kind of loses pieces of
01:26 - it so that's really nice it has less
01:28 - less HD I always mess that part up at
01:31 - less HTTP requests to handle did it
01:35 - alright cool
01:37 - it can have no age to be a request to
01:39 - handle because you can have it directly
01:41 - in line unlike other images where you
01:43 - have to make requests from other sources
01:45 - as we move into HTTP 2 this is less of
01:48 - an issue but we're not quite there yet
01:50 - so for the time being SVG is really
01:52 - awesome for that it's easily scalable
01:55 - for responsive one of my favorite things
01:57 - it's in the name scalable vector
01:59 - graphics that means that you can make it
02:01 - adjust to any kind of viewport and well
02:04 - definitely going to be doing stuff with
02:05 - that today it's a really small file size
02:09 - if you design for performance if you
02:11 - design for performance is an important
02:13 - part of that so
02:13 - we'll talk about that today as well it's
02:16 - easy to animate again one of my favorite
02:18 - things I wrote a literal book of us hat
02:20 - it has a navigable Dom which means that
02:23 - you can reach right inside of it and
02:25 - move certain pieces around so if you
02:28 - have a flat image where everything is
02:30 - just kind of presented in front of you
02:32 - in order to make an arm move or
02:33 - something you'd have to go in and cut
02:35 - out pieces of it in order to you know
02:37 - kind of move them around these are
02:39 - literally just Dom nodes that you can
02:41 - slap classes on that you can do all of
02:43 - the same things that you do with HTML
02:46 - elements with so that's really cool we
02:49 - talked about how it's and now it has a
02:50 - navigable Dom it also can be accessible
02:53 - because it has a navigable DOM and it's
02:55 - fun remember when we used to have fun
02:57 - fun's cool yeah cool all right so with
03:04 - all of the Pens that I'm going to be
03:06 - showing today I I made all of these
03:08 - demos but I'm gonna be showing you some
03:10 - work that other people made as well to
03:12 - kind of showcase them but I'll
03:15 - definitely have their names at the top
03:16 - of them and then also I make the slides
03:19 - open source so you can check them out
03:20 - later SVG is such a flexible medium we
03:30 - can do so much with it we can manage
03:32 - state even with within it and do all
03:34 - sorts of beautiful effects so I actually
03:37 - hope that this is the last year I have
03:38 - to show this slide
03:40 - people think that SVG is really not well
03:43 - supported because years past it wasn't
03:45 - but look at all that green
03:46 - we got Opera Mini we never get off from
03:49 - Annie that's just amazing and you know
03:53 - it says ie 11 there but it actually goes
03:54 - back to ie 9 with partial support on ie
03:56 - 8 I don't know why can I use doesn't
03:58 - show you all of that information but if
04:00 - you're not using SVG because you think
04:02 - it's poorly supported you can update
04:04 - that information in your mind as well so
04:08 - what does the scalable mean when we talk
04:10 - about scalable vector graphics you can
04:12 - see here we place the graphic directly
04:14 - inline in the HTML and it has width and
04:15 - height attributes which keep it to that
04:17 - size but then when I take those out it
04:19 - adjusts and it fills that entire area
04:22 - which means that if I wanted to you know
04:24 - make it constrained to the viewport
04:26 - width
04:27 - or the viewport height I can do so or if
04:30 - I want to put it inside of a flexbox
04:32 - or grid or percentage you name it so
04:35 - that's really nice because everything
04:37 - stays totally consistent and is
04:41 - positioning in CSS keeping you down
04:44 - sometimes it but it kind of bothers me
04:47 - SVG might just be your answer you saw
04:49 - all of those things that were inside of
04:51 - the SVG we're staying exactly at their
04:53 - coordinates no matter what we were doing
04:55 - to it that's really awesome for
04:57 - positioning you can kind of just throw
04:59 - all of the like crazy CSS stuff to the
05:02 - wayside and position things within
05:04 - SVG it even has text as a side note I
05:07 - did this to myself on the plane on the
05:09 - way here I was drinking wine and
05:11 - watching a horror movie and splashing in
05:13 - my face anyway SVG allows you to do
05:17 - create create advanced effects like this
05:20 - type lock up and it can look really
05:22 - slick and professional while still using
05:24 - actual accessible text that's so nice
05:27 - for Responsive which also means that in
05:30 - terms of animation we can create
05:32 - something that's fully responsible and
05:34 - scalable in every direction and the
05:37 - animation values are working within that
05:39 - coordinate system so they'll to stay
05:41 - totally sits totally stable even if
05:44 - you're changing the sizes of them and
05:46 - moving things around and adjusting it
05:50 - these type of positioning refinements
05:52 - are really really wonderful if you have
05:54 - a ton of information on smaller screens
05:57 - like mobile and you don't want to show
05:58 - all of the information at once if you
06:00 - have tons of icons and you need to kind
06:02 - of collapse that view you can do really
06:04 - advanced layout effects where you're
06:06 - showing and hiding that information with
06:08 - only a small amount of kilobytes so it
06:12 - doesn't necessarily have to be you know
06:14 - squishy either we don't just squish
06:16 - things back and forth when we make
06:17 - responsive design let's do some real
06:20 - responsive design so I made a huggy
06:23 - laser Panda factory because you know we
06:25 - need to know where huggy laser pandas
06:27 - come from and that's where they come
06:30 - from so if we have the huggy laser panda
06:32 - on desktop we it's actually comprised of
06:35 - three different SVG's we've got one for
06:38 - the top part and one for the side and
06:40 - one for the
06:40 - other side and then on mobile they're
06:42 - going to stack and reconfigure you can
06:44 - see that middle part that one on the
06:46 - side that's magenta is actually just
06:48 - being transformed translated and kind of
06:51 - moving over to the side so if we have
06:54 - the paint the Panda factory running we
06:56 - have our Panda getting painted to be a
06:59 - panda then we have our Panda getting
07:01 - lasered and then we have our Panda
07:03 - getting hug heed you know like you have
07:05 - in real life and then when we scale it
07:09 - down to mobile everything can kind of
07:11 - reconfigure and reconfirm and all of
07:14 - this works on old Android Android
07:16 - devices old windows phones and it's only
07:19 - 13 kilobytes so if we look into the code
07:23 - here what we'll actually see is that I
07:25 - have a timeline that's wrapped in a
07:27 - function that's named appropriately in
07:29 - case in this case the naming it
07:30 - appropriately is like function paint
07:32 - Panda and I really literally have a
07:34 - click event listener to reach rigor that
07:36 - time line but you'll see all of the
07:38 - functions are scoped to the SVG's itself
07:42 - so the design and the functions are all
07:45 - organized in the same way so if I need
07:47 - to update something everything stays
07:48 - totally organized we can also use that
07:52 - stability for page transforms so react
07:55 - is really awesome because it helps us
07:57 - manage state in a really responsible
07:58 - manner I made this with react and green
08:01 - sock what green sock has an animation
08:02 - API react coordinates the state while
08:05 - green sock coordinates all of the
08:07 - intermediary values so we're showing the
08:10 - transition from page to page and all SVG
08:13 - will stabilize all of our graphics while
08:16 - we do so so in this example I have this
08:20 - concept of screens
08:21 - I'm toggling the screens forward and
08:23 - then they wrap back around to the to the
08:25 - beginning screen and then we have a
08:27 - timeline function that can choreograph
08:28 - all of the animation but something
08:30 - that's really cool about the green sock
08:32 - animation API is this thing called SVG
08:35 - origin here or this thing called clear
08:38 - props here the clear props will actually
08:40 - allow us to remove any inline styles
08:42 - that are set on that element or that Dom
08:45 - ref so I can remove those if we need to
08:48 - recalculate values or put it into
08:51 - another position so here's another one I
08:53 - made with view
08:54 - next which I love view is a front-end
08:58 - framework that is very similar to react
09:00 - in that it's the V of MVC you probably
09:03 - are familiar with it next is a really
09:06 - quick and easy way to get server-side
09:08 - rendering with view and it allows you to
09:11 - do routing and all sorts of code
09:13 - splitting without stepping outside of a
09:15 - view file and because we're using SVG
09:17 - for all of these animations everything
09:19 - States totally stable Nux also gives us
09:22 - page transition hooks so we can hook
09:24 - into the animation and make it different
09:26 - per page so all the ways that the
09:28 - mountains are changing and the text is
09:29 - changing changes per page so if you'd
09:32 - like to check out the code I have a repo
09:34 - for it and also a demo site that you
09:36 - that's live that you can check out too
09:38 - I'm showing the slide so you can get a
09:40 - sense of how those j/s hooks work we
09:43 - have these different page routes and if
09:46 - you want to plug into them there's a
09:47 - bunch of different page hooks per page
09:50 - the one that's really important here is
09:52 - this transition mode and that's super
09:55 - cool because when you have a transition
09:57 - mode in view what it will do is it'll
10:00 - allow that component to completely
10:02 - unmount but it'll wait for the animation
10:04 - to fully fade-out then it will unmount
10:07 - and the other thing will wait until it's
10:09 - done so you don't have to write any like
10:11 - messy callbacks which is what you
10:13 - usually end up having to do when you
10:14 - write that kind of code so this is from
10:18 - code wraps it's a similar concept but
10:20 - it's built in a different way the fixed
10:21 - content lies beneath and once we move
10:24 - the content up it gets revealed and all
10:26 - at the same time that SVG path is
10:29 - changed through path data ID and this is
10:32 - done with animate is not green sock this
10:36 - pen by Sullivan Nolan uses transitioning
10:39 - effects and morphing this is back to
10:42 - green socks morph SVG and you can see
10:45 - how it's really captivating and again
10:47 - because we're using SVG stays totally
10:49 - stable for mobile but we can also use
10:53 - SVG for the layout itself when we were
10:56 - making this page for web animation
10:57 - workshops our branding is all these
10:59 - triangles so we wanted to make some
11:01 - interesting page layouts those little
11:04 - triangles between the sections are
11:06 - little pieces of SVG where we
11:08 - said preserve aspect ratio none which
11:11 - means that it's always gonna scale in
11:12 - every direction with the container so
11:15 - usually you don't want that right if
11:16 - it's like a face or something we don't
11:18 - want that it's gonna be like and that's
11:21 - a technical term for that but in terms
11:25 - of page layout that's exactly what we
11:27 - want
11:28 - cool so SVG can also be super tiny if
11:33 - you look at this HP archive graphic it's
11:36 - a breakdown of all of what we're
11:38 - transmitting over the web right all of
11:40 - the kind of content break down so we've
11:42 - got a bunch of video we've got a bunch
11:44 - of fonts and scripts and stylesheets but
11:46 - images is huge images is two-thirds of
11:50 - what we deliver over the internet for
11:53 - everybody so I love this quote you can't
11:57 - be a web performance expert without
11:59 - being an image expert it's actually
12:01 - pretty true if you think about it if you
12:03 - think about that last graphic if you're
12:04 - not thinking about the size of your
12:06 - graphics then you're really doing
12:08 - yourself a disservice I was asked to I
12:10 - used to be a consultant before I worked
12:12 - for Microsoft and this company hired me
12:14 - because they had ten page 10-second page
12:16 - load times and just by optimizing the
12:19 - SVG's on their site I brought the the
12:22 - site speed down to less than two seconds
12:25 - that's all of those seconds of
12:27 - deployment and performance all came from
12:29 - the graphics so how did I do that
12:33 - well not all SVG graphics are created
12:35 - equal we have everything drawn with math
12:37 - but if you have tons and tons of path
12:39 - points and you're not not optimizing
12:41 - correctly it can really bulk your files
12:43 - so I really like using SVG oMG again
12:46 - these are like linked up in the slides
12:48 - if you want to check them out later
12:49 - SVG oMG is by Jake Archibald it uses a
12:52 - lot of service workers so if you have a
12:54 - bunch of settings in it it will remember
12:57 - the next time you go there which i think
12:58 - is super cool it uses SVG oh the last
13:02 - one under the hood which is terminal
13:03 - based so if you're more comfortable with
13:05 - your terminal you can use SVG oh but I
13:07 - suggest you pair it with SVG oh gooey
13:09 - because the way that you optimize
13:11 - actually affects the way that that SVG
13:13 - will look the middle one is Peter Colin
13:15 - ridges SVG editor it's like a 15 year
13:18 - old rails app that I just keep in there
13:20 - cuz like I'm a neck
13:21 - I like it still probably a little less
13:24 - useful but really really still kind of
13:26 - fun I also wrote a post for CSS tricks
13:30 - called high-performance SVG's that was
13:32 - all of the process that I went through
13:34 - to reduce the size of those SVG's for
13:37 - that consulting gig so in this pen I
13:41 - have this little draggable thing and
13:43 - it's a little spaceman and he's standing
13:45 - on the moon and the cow keeps scaring
13:47 - him as he goes over the moon and it's
13:49 - touch enabled for mobile and that whole
13:52 - SVG is 2 kilobytes so you can do really
13:57 - kind of cool effects and you know show
13:59 - really really information interesting
14:01 - information and have things be super
14:03 - small so while we're looking at this
14:06 - let's take a gander at what's happening
14:08 - under the hood because I ran into a
14:10 - gotcha when I was trying to build this
14:12 - so at first I was like oh ok I'm gonna
14:14 - make this like thing that's like a null
14:17 - object you know around with this cow and
14:20 - I can spin that and it can also detect
14:23 - if there are collisions with like get
14:25 - pout and get bounding client wrecked or
14:27 - get B box for that little astronaut head
14:30 - but then it was firing all the time and
14:32 - I was like what's going on I think the
14:34 - browser is wrong no the browser is not
14:36 - wrong what was happening once I started
14:39 - you know putting like you know borders
14:41 - around it and kind of understanding of
14:43 - this a little bit more is that the
14:45 - browser doesn't see diagonals the
14:47 - browser only sees in rectangles so to
14:50 - give you a better idea of what that
14:52 - means if you look at the bounding box
14:54 - stroke of these rotating elements this
14:56 - is what the Dom sees so I just think
14:58 - that's crazy like look at that circle
15:00 - that's so weird
15:02 - so sometimes in order to debug things
15:05 - like this you do actually have to think
15:07 - like the browser not like yourself okay
15:10 - back to the late of SVG's because there
15:12 - they have the potential to be so small
15:14 - SVG is the perfect time to use something
15:17 - like a loader a lot of loaders are
15:19 - really ugly and a lot of loaders are
15:22 - using gifts which are really heavy if
15:25 - you have a heavy and ugly gift maybe you
15:27 - should think about updating it this
15:29 - graphic when I was given this given this
15:33 - graphic by the designer this is
15:34 - smashing magazines checkout experience
15:36 - it was 35 kilobytes and I brought it
15:39 - down to 6 kilobytes just by optimizing
15:42 - it correctly and that includes the
15:44 - animation and everything so SVG's can
15:48 - make other graphics smaller there's this
15:50 - thing called SVG JPEG dot SVG and by
15:56 - this guy named siya and this is not like
15:58 - a particular graphic that I found but
16:00 - you can see that just dropping in any
16:02 - graphic that I had around which is my I
16:04 - am happy Marge Simpson you know we
16:07 - brought the file size from 38 kilobytes
16:10 - to 16 kilobytes just by switching it to
16:12 - an SVG and creating an image mask over
16:15 - the kind of repeated you know images if
16:18 - a bit mask has a lot of the same colored
16:20 - squares it's still mapping out all of
16:21 - that territory where an SVG can say like
16:24 - take the bounds of these things and
16:26 - don't paint them just show this one
16:29 - color so that's pretty cool
16:32 - SVG can be accessible we mentioned this
16:34 - before there's actually like a ton of
16:36 - ways that SVG can be accessible and it's
16:38 - like can be kind of complicated but nine
16:41 - times out of 10 this is what you're
16:43 - gonna need in order to make an SVG
16:45 - accessible so I'm just gonna dive into
16:47 - that really quick so we write Aria
16:50 - labeled by and then a title and that
16:52 - title it has to be the first thing that
16:55 - follows that SVG tag that title also has
16:58 - to have a unique ID on it otherwise it
17:01 - won't be picked up by jaws and in Nvidia
17:03 - devices just writing title is not enough
17:05 - we also have roll of presentation on the
17:09 - SVG itself what that'll do even for your
17:12 - icons you should be doing this it'll
17:13 - allow it and screen readers to know that
17:16 - it's an image and not announce
17:17 - everything inside if you want it to
17:20 - announce things inside you move that to
17:22 - a roll group so that's some of the ways
17:24 - that you can make it responsive I also
17:26 - like writing Lang you know whatever
17:28 - language it is so that you know
17:29 - somebody's using an screen reader in
17:32 - another language the computer does the
17:33 - hard work for them that's pretty cool
17:36 - so there's a resource with support
17:39 - charts there's also this article by
17:41 - Heather that she wrote for CSS tricks
17:43 - she spent like every weekend going to
17:47 - the library checking every
17:48 - different device this whole big labor of
17:51 - love for the community so definitely
17:53 - check out that article she did a great
17:55 - job with it
17:56 - SVG can be styled like text this is kind
17:59 - of like not too fancy but something that
18:02 - you a lot of people kind of come to me
18:04 - and ask me about so let's cover it real
18:06 - quick someone on Twitter asked me about
18:08 - this they made an SVG sprite sheet and
18:11 - they're not styling it along with the
18:13 - text they wanted everything you know if
18:14 - they change that line of text for it to
18:17 - pick that up so really so this is the
18:20 - question code I left it exactly how it
18:22 - was and the secret trick here that you
18:25 - may or may not know about is that you
18:27 - change the fill to current color camel
18:29 - cased and that will just make it reflect
18:32 - whatever it is so right now I just have
18:34 - that line with a class that says color
18:36 - red on it and it's picking up that color
18:38 - so if you are using SVG icons for your
18:41 - site that's a really quick way to not
18:43 - have a headache whenever you're working
18:44 - with it SVG can bounce we can make a
18:49 - ball bounce with SVG really easily
18:51 - without any Lant animation libraries
18:53 - using a requestanimationframe if we have
18:56 - this bounce ball bouncing we can use a
18:58 - little physics to kind of drum up the
19:01 - bounce of the ball and we can make the
19:02 - radius bigger and we can do all of that
19:04 - midstream so I'm using view again here
19:08 - and there's some info that I'm not sure
19:10 - showing here but here's the gist of it
19:13 - we've got data we've got the total like
19:15 - height of everything we've got the
19:17 - radius we're incrementing things based
19:19 - off of a quick event and then we're we
19:22 - have gravity that increases the vertical
19:24 - speed horizontal speed increments from
19:26 - the horizontal position all of these
19:28 - things I learned from like just pulling
19:30 - things out of physics books so you don't
19:32 - have to invent all of this stuff from
19:34 - scratch you can steal ideas that have
19:36 - been around for a really long time this
19:39 - pen by Tiffany ray side is one of my
19:42 - favorite animations of all time she's
19:43 - not using any library or anything at all
19:46 - she's spinning up pieces of the SVG
19:48 - applying physics and even these like
19:50 - crazy bounces to to it also she
19:53 - manipulates the SVG path values when it
19:55 - hits the wall she's just kind of a
19:58 - master so if you don't already follow
19:59 - her on Twitter a code pen you should
20:01 - definite
20:02 - go do that SVG can snap in order to
20:06 - create some you know really really
20:08 - beautiful effects we're gonna use some
20:10 - es6 template template literals which
20:12 - you're probably all familiar with but
20:14 - just in case you aren't I'm just gonna
20:15 - say something about them really quickly
20:17 - previously we had string concatenation
20:19 - and all of that printed out to this
20:22 - which was really hard to read and it was
20:24 - kind of ugly and it was kind of
20:26 - error-prone because it was hard to read
20:27 - and now we have awesome template
20:30 - literals that when you put things in
20:31 - backticks
20:32 - we can just manipulate strings really
20:35 - really readily and what does that have
20:36 - to do with SVG well SVG all of those
20:41 - paths inside in Venice Fiji are really
20:43 - just a bunch of strings of commands and
20:47 - they have these curve values and all of
20:49 - the letters mean a certain thing and
20:51 - draw certain kind of curves and create
20:53 - certain kind of paths so I really like
20:55 - this kind of path Explorer tool if
20:58 - you're not familiar with the way that
21:00 - SVG works you can go and play with this
21:02 - I also wrote about it in my book if you
21:05 - want to you know something that's a
21:07 - little bit more traditional and if we
21:09 - know enough about how those curves are
21:11 - made updating them is very simple with
21:15 - something like template literals when
21:17 - we're building out these paths we start
21:20 - with a move - and then we can create
21:22 - those curves by using things like C and
21:26 - Q so we give it a handle and then we
21:28 - give it another point and the computer
21:30 - draws a curve for us how cool is that
21:32 - you can like plot three points and the
21:35 - computer draws a curve I just think
21:37 - that's great so that's really neat and
21:40 - then we can plot the points we have a
21:42 - bunch of different coordinate values
21:44 - that were updating and it's so flexible
21:46 - we can make effects like this
21:57 - so you might have noticed that that SPG
21:59 - was distorting at the end there so let's
22:01 - kind of cover distortion really quickly
22:03 - and big and how you can do that
22:06 - so distortion filters are really awesome
22:08 - there was this great code code drops
22:11 - demo with a bunch of buttons and
22:12 - definitely the most you know impressive
22:15 - technique was you hit a button and this
22:16 - little ripple effect came out and what
22:19 - they're doing in order to create that is
22:21 - they're using a filter called turbulence
22:24 - and you can animate this filter in
22:28 - JavaScript you can't do it in CSS it's
22:29 - not an animate scible property we're
22:31 - kind of like hacking the speck here and
22:33 - manipulating it because there's just a
22:35 - bunch of numbers but I would say that
22:37 - from manipulating filters and pushing
22:40 - the doms boundaries and stuff and doing
22:42 - things I'm not supposed to do I would
22:45 - suggest setting the filter on a timer
22:46 - like applying it when you need it and
22:48 - taking it off when you don't because it
22:50 - is performance and sensitive it's not
22:52 - really hardware accelerated so we can
22:55 - make things like this pool and that's
22:58 - pretty fun because the way that this is
23:00 - done is by applying that filter and
23:02 - using an image to distort anything
23:05 - that's beneath it so we can have tons
23:07 - and tons of path values like you see
23:09 - here everything under the pool is also
23:12 - getting updated too and we can do it
23:14 - really really simply all we're doing is
23:16 - we're taking that distortion filter in
23:19 - that image and we're basically making it
23:21 - scale down hit the wall and scaling up
23:24 - and we're also animating the filter so
23:35 - we can do like really really crazy
23:37 - effects and when I made this pan I
23:39 - wasn't really thinking about like the
23:40 - political climate so it's a weird one to
23:47 - show but we can by animating filters we
23:50 - can also make things like a realistic
23:52 - candle that's drawn with math that's
23:54 - really really fun in order to make this
23:59 - I have a few different pieces that I
24:01 - just kind of traced off of a candle
24:03 - photo so I just made this in Illustrator
24:06 - and then made a gradient that's attached
24:08 - to it and then I
24:09 - they're not actually blue but I have a
24:11 - bunch of different path values that I'm
24:13 - going to set on a for loop and I'm gonna
24:15 - morph between those path values for each
24:18 - second and plot them along a time line
24:20 - but I also am using a filter and it's
24:23 - this GUI filter that Lucas beber created
24:26 - so he has some prior art here he's
24:29 - actually using this with divs you can
24:31 - make an SVG filter and apply it to HTML
24:33 - you don't only have to use SVG so that's
24:36 - pretty cool so a lot of people use this
24:39 - kind of GUI effect it's a blur filter in
24:41 - a contrast filter applied at the same
24:43 - time so yeah we cannot because you know
24:47 - that standard deviation of the filter is
24:49 - just using numbers we can have
24:51 - JavaScript update those numbers
24:52 - requestanimationframe knows how to
24:54 - update numbers so we can do that we go
24:57 - through all of the path values and then
24:59 - we've got a little math dot random
25:00 - opacity because nature is just a little
25:02 - unpredictable and then we can use that
25:05 - effect to create smoke with math SVG can
25:11 - do on the fly logo adjustment this demo
25:15 - was made by leav aroo-whoo if you don't
25:17 - follow her already you should probably
25:19 - go do so because she makes all sorts of
25:21 - crazy great things but basically you're
25:24 - allowed to update these logos on the fly
25:26 - which i think is super great if you have
25:27 - to collaborate with a designer it keeps
25:29 - on not making their mind up and you're
25:30 - like they're like Oh change it out here
25:33 - oh no it like fat is in oh no flat is in
25:37 - you can kind of make all of these things
25:40 - really really adjustable so you don't
25:41 - have to keep changing things up and she
25:44 - made this with a tool called MA though
25:45 - that she built that's basically so that
25:48 - you can drum up sites using HTML and CSS
25:51 - with very little JavaScript which is not
25:53 - very useful for us but I'm pretty sure
25:56 - that almost everyone in this audience
25:57 - has a family member that's like hey can
26:00 - you make me a web site and if you do
26:03 - this is a really good thing to show them
26:05 - because they with just a little bit of
26:07 - training they can make their own website
26:09 - and you can get on to your real life
26:11 - work
26:12 - SVG can draw itself too so let's say we
26:17 - have a shape and that's the stroke of
26:20 - that shape is dashed
26:22 - but we make the - all the way around
26:26 - that entire shape it's the length of the
26:28 - entire shape that offset the offset
26:32 - between those two dashes is animatable
26:35 - so we can have an SVG draw all onto the
26:39 - page just using CSS or something so I
26:42 - made this pen to kind of celebrate New
26:44 - Year's and there's like you know the
26:52 - fireworks are that kind of idea and pew
26:54 - and yeah that's this pen by Chris Gannon
26:59 - is also really awesome he does this that
27:01 - same effects if you don't follow him you
27:04 - should go follow him because he I think
27:06 - he's just pretty much a genius he's also
27:08 - doing this with clip path it's super
27:10 - cool you can also interact with an SVG
27:14 - we can manipulate it and interact with
27:17 - it on the fly as well so if since it has
27:20 - a navigable navigable Dom you can do all
27:22 - sorts of things with it again I'm using
27:25 - view here to like update the text and
27:27 - make random lines and allow the user to
27:30 - kind of play with the SVG graphic as
27:32 - much as they want to I can also animate
27:35 - it if I want to and have them be in
27:37 - charge of that as well and I made this
27:41 - demo too long so we're all gonna watch
27:44 - it so it's gonna play the animation but
27:48 - the coolest part of all of this is I'm
27:50 - gonna play this animation it's still a
27:51 - graphic so I can still download it and
27:54 - it's going to respect all of the
27:56 - positions that were set during that
27:58 - animation so even though I'm animating
28:00 - it it's still in all of those places
28:02 - it's still a graphic that they can hand
28:04 - out to their friends or something so
28:07 - here inside the HTML template we can
28:09 - create some semantic form elements and
28:11 - then we can bind them to these methods
28:13 - where we're creating and kind of
28:15 - drumming up pieces of the SVG on the fly
28:19 - we use s we can use SVG to respond to
28:22 - things that the blog that the browser is
28:25 - doing so we have this like little Wally
28:27 - pen I don't know if you've seen the
28:28 - movie Wally but I really like it
28:30 - he has a little cockroach friend and
28:33 - he's you know kind of reaching out for
28:35 - him every
28:36 - the user moves across the page so what
28:39 - we have here and we have a bit more code
28:41 - than that but basically we have these at
28:43 - mousemove events and I've created an
28:46 - entire timeline for him reaching his
28:48 - arms out complete with eases and then I
28:50 - plot that along that progress of the
28:53 - timeline along with the coordinate so
28:55 - the user can control all of that and it
28:57 - stays really really lifelike so in order
29:02 - to make that pen we had to clip and mask
29:04 - things so SVG can clip and mask things
29:07 - SVG offers this thing called clip path
29:09 - which is really nice because if you
29:11 - looked at his arms they had to kind of
29:13 - reach out from somewhere right I can't
29:15 - just keep tucking everything behind over
29:17 - everything else in order to make it look
29:19 - realistic it has to clip out parts of
29:22 - his arm so we were able to do that with
29:24 - clip paths and if you use something
29:28 - called mask you can use opacity so clip
29:31 - paths will just kind of respect the
29:33 - geometry but something like a mask we
29:36 - can create something with an you know
29:38 - like a gift masking with all of these
29:40 - SVG patterns and you know slowly unveil
29:42 - them we create a mask and F's and and
29:45 - put inside of it the image that we want
29:47 - to use and then we have we apply it to a
29:50 - rect that also has a pattern associated
29:52 - with it so I learned this technique from
29:54 - yoke cyl who has like a whole bunch of
29:56 - pens like this that are super super
29:58 - awesome she also has the most
30:01 - comprehensive you know collection of SVG
30:04 - and CSS clip paths so if you need to
30:06 - learn about them or you're confused
30:08 - about them this is all like interactive
30:10 - and you can play with it and the code is
30:12 - open source I also kept getting confused
30:15 - between the difference between clip
30:16 - paths and masks so I wrote a CSS tricks
30:19 - article that you can look at too that
30:20 - defines the differences between them CSS
30:23 - has tricks has pretty good SEO so I knew
30:25 - I could just go look at my own resource
30:27 - again and again if I got confused again
30:29 - and since SVG also has text you can have
30:34 - that clip that masking applied a text
30:37 - and do things like have your users
30:38 - update text to this pen by Knoll Delgado
30:42 - is probably the most famous and also my
30:45 - favorite example of this clipping and
30:47 - masking that's paired with animation
30:50 - SVG can signify something changing so I
30:53 - kept going in between different time
30:55 - zones for my work and I you know
30:57 - couldn't remember where all my
30:59 - co-workers were what time it was and I
31:01 - could have just made a dial that just
31:02 - showed what time things were but by
31:05 - changing the SVG and making that dial
31:08 - that associates that change in time I
31:10 - get a better sense of whether or not
31:12 - it's day or night and I can ping them or
31:14 - not and they're probably with their kids
31:16 - or something like that
31:18 - but while I was working on this
31:19 - something interesting I found was I used
31:21 - to use this thing called moment jeaious
31:23 - that kind of allowed me to work with
31:24 - time data and understand where everybody
31:28 - was you know in terms of like daylight
31:30 - savings time but there's actually a
31:32 - native method called to local time
31:34 - string that offers all of these defaults
31:37 - like hours and minutes and all sorts of
31:41 - things so that actually respects all of
31:43 - those daylight savings time so you can
31:45 - eliminate a big library like moment you
31:49 - can use SVG's view box as a camera this
31:52 - is one of my favorites you might already
31:54 - know this but when you have something
31:56 - like a graphic when SVG is plotting all
31:58 - of those points to draw those
32:00 - coordinates it's doing so on a big piece
32:03 - of graph paper basically and that piece
32:05 - of graph paper is endless it's just this
32:07 - giant coordinate system and in order to
32:09 - see inside of that SVG and know where to
32:12 - plot those coordinates and what you're
32:14 - looking at you have a thing called a
32:16 - view box and the view box is made up of
32:18 - 4 values 0 0 that's x and y where to
32:21 - start it off and then width and height
32:23 - so if I wanted to update this view box
32:27 - to just look at these little houses or
32:29 - something I would have to you know
32:31 - update them to 215 1 by 160 42 by 20 so
32:37 - SVG also has a native method called get
32:39 - B box and that will return this object
32:43 - that has X Y width and height for
32:45 - anything that's inside the SVG that's
32:48 - cool that sounds a little familiar that
32:50 - might be what we need to maybe enemy
32:53 - or you know update it on the fly so here
32:56 - I'm just you know using that to update
32:58 - the view box and then if I take that out
33:00 - it will go right back to where it was so
33:03 - I'm just setting the attributes based on
33:05 - that so then we can do something like
33:07 - this data visualization where we're
33:09 - zooming in on a certain country in order
33:11 - to show different pieces of information
33:13 - and again because it's SVG it's all
33:16 - totally scalable for mobile and it's so
33:19 - small because it's just one path that's
33:21 - drawn we can also make a flowchart I'm
33:25 - basically this is just a giant SVG and
33:28 - we're just like moving things based on
33:30 - the user input and like then people can
33:33 - pick a certain thing and then they can
33:35 - go to you know a different kind of
33:37 - output so we can make you know
33:38 - interactive flowcharts this one is
33:41 - really cool this is like a game that
33:43 - somebody made updating the view box
33:45 - where they're like placing little
33:47 - household items and stuff but we can do
33:51 - better we can do like a big game so so
33:55 - let's make a game and that will be the
33:57 - last thing we do this afternoon so if we
34:01 - have a game about a hipster elephant
34:03 - that's going to go get tacos but his
34:06 - friends keep texting him to change plans
34:08 - and you're supposed to try to go get the
34:10 - tacos but avoid the text messages and
34:13 - like there's margaritas for extra bonus
34:16 - points
34:17 - oops so you can basically move this guy
34:21 - around and like your heart meter goes up
34:23 - and down and if you lose the game you
34:26 - become hangry and you have to watch a
34:28 - movie you already saw and if you win the
34:31 - game you could tweet out your score it's
34:32 - based on real-life events so how do we
34:36 - use SVG in order to create this we're
34:38 - using react to manage all the state for
34:40 - that application if you know how to
34:42 - manage say for an application you can
34:43 - probably already make a game too so
34:46 - we're using SVG threeways we have it
34:48 - directly inline in the HTML for loops we
34:51 - have background images for things like
34:53 - tacos we're not really you know updating
34:55 - the tacos we're just kind of throwing
34:56 - them across so they don't have to do
34:58 - anything super special and we have
35:00 - things that are inline directly in react
35:02 - so let's look at that last one really
35:04 - quickly
35:05 - if we have this is a slightly older pen
35:08 - so yes I know I'm using react create
35:10 - class I wouldn't use that now I would
35:11 - use class extends so if we have the
35:14 - initial state of that score that's at
35:16 - 500 and then you know we're setting the
35:19 - game to start because they can play it
35:21 - again they can you know get to the end
35:22 - and decide to replay so we're setting
35:24 - the score back to 500 if they do so we
35:27 - don't want them to have too much you
35:29 - know winning too much or losing too much
35:31 - and then we have this update score that
35:33 - will either like end the game or win the
35:35 - game if it gets to a certain amount but
35:38 - then and my highlighter is not on this
35:41 - it's on the dots but it should be on the
35:43 - heart meter and that heart meter we're
35:45 - passing down this dot state score so you
35:48 - might have noticed that heart meter at
35:49 - the top of the at the top of the game
35:52 - that was kind of keeping track of our
35:54 - score so basically we have this SVG and
35:57 - that SVG is actually really really big
35:59 - because I want to use whole numbers for
36:01 - this I don't want to use like twenty
36:03 - seven point two five or something to
36:05 - update the score when he's a thousand or
36:07 - zero so it's really big and then we have
36:10 - the weight that's this stop prop score
36:13 - and in our racks in SVG in order to
36:16 - update it we have an X Y width and
36:19 - height just like the bounding box so we
36:21 - can update that on the fly and because
36:24 - it's SVG we can make it super small then
36:26 - for the size of the screen that we need
36:28 - and on desktop it's a certain size and
36:30 - on mobile it's a different size with
36:32 - media queries all of that and we didn't
36:36 - even get to any data visualization I
36:38 - wrote a book about SVG animation this is
36:41 - not my book this is my friend making fun
36:43 - of me I don't have a man blob animal
36:46 - that's not even my last name I do have a
36:50 - real or any book I think I have like a
36:53 - fancy chicken or something that's cool
36:56 - yeah thank you so much for coming today
36:59 - I appreciated
37:09 - thank you so much Sarah those animations
37:12 - totally blew my mind and I love how you
37:15 - shout it out so many other creators in
37:17 - your talk weight us Fred the love yeah
37:19 - yeah there's some a lot of them we have
37:22 - time for one quick question what
37:25 - resources would you recommend to get
37:27 - started creating awesome SVG's like the
37:29 - ones you showed yeah actually I think a
37:31 - misconception that a lot of people have
37:32 - is that you have to be a designer in
37:34 - order to make things with SVG you don't
37:36 - there's tons of free SVG's online that
37:39 - you can go play with free pick with a K
37:42 - no CK free pick com has tons of free
37:46 - vectors that you can use the noun
37:48 - project also has a bunch of free vectors
37:50 - so you can just you know download them
37:52 - and start playing with them and
37:53 - animating them and manipulating them
37:55 - awesome thank you Sarah definitely go
37:58 - buy her book if you want to learn more
38:01 - [Applause]