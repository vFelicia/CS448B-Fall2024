00:07 - hey everybody welcome to live coding
00:08 - with jesse i'm jesse and i'm so sorry
00:10 - that i'm late getting started i'm five
00:12 - minutes late i haven't been this late
00:15 - and i can't even remember how long so
00:17 - really really sorry uh it was just crazy
00:20 - i had
00:21 - i don't know like less than 10 minutes
00:23 - before it was supposed to start um
00:25 - somebody called and i had to go meet
00:27 - them and when i was on my way back i um
00:31 - my boss came into my office and
00:33 - so
00:34 - anyway
00:36 - so i can go all day without anyone
00:38 - talking to me at work and then
00:40 - for whatever reason in the last 10
00:42 - minutes i had two people
00:44 - have to talk to me so
00:47 - oh well that happens
00:50 - so
00:52 - hopefully it didn't annoy you
00:54 - you all too much
00:56 - um but uh today we're going to work on a
01:00 - a different component
01:02 - so
01:04 - we need
01:07 - i don't know if y'all remember
01:09 - we had a component that was a page for
01:12 - all the faculty profiles and i'll show
01:14 - you in a second uh what everything looks
01:17 - like
01:17 - and
01:19 - before
01:20 - we were pulling in all this markup that
01:22 - we had gotten from the old database just
01:24 - a bunch of html formatted like as is and
01:27 - we did our best with
01:29 - some regular expressions to change some
01:32 - of the markup and with
01:34 - css
01:36 - to make it look good but we had said
01:38 - we're just going to do this kind of
01:40 - hacky stuff because we don't have time
01:43 - to go back through each one of these
01:44 - pieces of content and actually change
01:46 - the markup
01:47 - well now that i have some student
01:49 - workers that are just flying through
01:51 - every task that i give them which is
01:53 - awesome i decided like all right well
01:56 - now i do have
01:58 - you know people that can do this so
02:00 - i'm gonna have them do this so i went
02:02 - through and i made custom fields
02:04 - for all the different pieces so like the
02:07 - title
02:08 - the person's name their title um
02:11 - their phone number their email uh their
02:15 - um like a pdf upload for their
02:18 - curriculum vitae so we have all these
02:20 - pieces broken out now
02:23 - so
02:24 - when you try to pull in that data it
02:26 - doesn't look right anymore so we need to
02:28 - grab those pieces
02:31 - individually
02:32 - and display them
02:34 - you know as we want so it's not going to
02:37 - look
02:39 - completely different from what we had
02:40 - before
02:41 - uh but it's definitely going to be nicer
02:43 - so that's what we're going to work on
02:44 - today
02:45 - and um i i think we got a good shot at
02:48 - getting it done i'd like to finish up
02:49 - before
02:50 - definitely before one
02:53 - because uh 1 pm we have that um alexa
02:57 - skills live stream starting so i don't
03:01 - want to stream during that in case i'm
03:03 - sure some of you all may want to watch
03:05 - that so
03:06 - i'm gonna try to end before then
03:09 - okay
03:11 - uh just gonna check the chat and say
03:13 - what's up before we get to the code
03:16 - all right stephen says thanks for
03:17 - messaging me back i have a lot to think
03:19 - about oh you know what no problem
03:22 - um
03:23 - yeah no problem steven
03:25 - um
03:27 - if y'all didn't see at the end of last
03:28 - the last stream from uh yesterday i
03:30 - showed off a bunch of uh stephen's
03:33 - websites that he's been working on and
03:34 - they're awesome really awesome so if you
03:36 - get a chance check out the last
03:39 - i don't know 10 minutes or so of
03:40 - yesterday's stream
03:42 - and um
03:43 - you know check out you see some i think
03:46 - really good examples of websites for
03:49 - uh this is like some hotels and
03:51 - apartments and things like that
03:55 - all right let's see
03:59 - um
04:01 - all right so we got a question about
04:03 - laptops for beginners i'm gonna answer
04:05 - questions after we do our first coding
04:06 - session so just hang in there
04:09 - and um and i'll talk about that i see in
04:12 - the chat some some others are giving you
04:14 - some good answers there as well so
04:16 - uh if you want to hear what i have to
04:17 - think um i'll i'll tell you later on in
04:19 - the in the stream
04:21 - but i may not have better advice than
04:24 - the other people in the stream though
04:26 - all right let me show the code
04:31 - there we go all right i just want to
04:33 - start out by
04:34 - thanking
04:36 - um chris brown for this pull request
04:40 - so in our documentation we just said to
04:42 - run npm dev
04:44 - and
04:46 - for some reason i thought with the newer
04:48 - versions of npm you could just do npm
04:51 - dev and you could leave out the run but
04:53 - maybe you can maybe i was mistaken i
04:55 - often use yarn
04:56 - and to tell you truth when i do use npm
04:58 - i always include the run
05:01 - just out of habit
05:02 - so
05:03 - i'm not sure
05:05 - either way
05:07 - it's good that we change this to say npm
05:09 - run dev in case somebody's running an
05:11 - older version of
05:12 - of um
05:14 - npm
05:16 - you know it'll still work for them so
05:17 - thank you for that i went ahead and
05:19 - merged that in
05:22 - and anyone else is interested in
05:24 - submitting pull requests if you see
05:26 - something that's messed up in one of the
05:29 - repositories we have a lot you can check
05:31 - them you know check them all out
05:32 - anything in this uh fus hyphen marcom
05:37 - uh you know feel free to go in here and
05:40 - check them out and
05:41 - you can open an issue
05:44 - if you just want to point out something
05:45 - that's wrong or you could actually you
05:47 - know submit a pull request and
05:50 - you know have a good chance of getting
05:51 - it pulled in
05:52 - you know it'll be something nice for
05:54 - your
05:55 - your github portfolio if you're
05:57 - interested
05:58 - uh also i do have my own github profile
06:01 - for some of my personal projects so feel
06:04 - free to browse through there a lot of my
06:06 - stuff's also you know
06:07 - open source and free for anybody to use
06:09 - so
06:10 - um
06:14 - sorry i got distracted by the live chat
06:17 - so anyway just putting that out there
06:18 - that um you know there's a lot more here
06:22 - and on my portfolio that that don't make
06:24 - it on on the streams that we've been
06:26 - doing lately
06:28 - uh so we have like electron apps uh
06:31 - react native stuff going on so
06:34 - a lot more stuff
06:36 - all right let's
06:39 - let's go over
06:42 - here well let's just say
06:48 - navigate here to the faculty so we have
06:52 - um our education faculty
06:56 - right and we will need
07:00 - we're actually going to need to change
07:01 - this as well now that we have the data
07:03 - displayed in a different way um but
07:06 - right now let's go
07:09 - let's go to dr susan poyo
07:13 - i know susan
07:15 - and her family and she's awesome so
07:17 - we're gonna go
07:18 - i'm gonna go here
07:22 - i actually helped maintain the website
07:24 - for her husband
07:26 - her husband's website so
07:30 - uh
07:31 - cool so what we have here actually
07:33 - i think i just figured out another tasks
07:35 - that i could give to the um
07:39 - the student workers
07:40 - uh it might not be a bad idea to get rid
07:42 - of these details sections
07:47 - so we'll see once they get through what
07:49 - i gave them earlier today then i'll give
07:50 - them that one
07:51 - but for now you can see it's missing a
07:54 - lot we used to have
07:56 - a photo here and some information
07:59 - um and a link to a pdf all gone
08:03 - but if we check out in wordpress
08:05 - let's go back to wordpress and let's
08:07 - find uh the same let's go
08:14 - the same professor
08:18 - look we can see that we have all these
08:19 - fields so we do we have an image now
08:21 - that's under the featured image oops i
08:24 - forgot to start my timer let's start
08:25 - that out
08:26 - um so we have a display name so this is
08:30 - um
08:31 - i guess
08:33 - small distinction but kind of important
08:35 - when the title of the post has the last
08:38 - name first which is good
08:42 - i think um
08:43 - for sorting things by alphabetical order
08:45 - and trying to find it that'll make it
08:46 - easier but the display name we want it
08:49 - to be
08:50 - nicer right and it's always nicer to
08:52 - have your name in the right order
08:54 - so we have this display name now
08:57 - and this allows for some customization
08:59 - if
09:00 - a certain professor prefers to have
09:02 - maybe like all their
09:04 - degrees or titles or something
09:06 - afterwards then that's changeable and it
09:09 - won't really affect you know the
09:11 - official name
09:12 - um or the slug
09:16 - because that's separate than i was
09:17 - displayed we have a feel for job title
09:20 - phone email and then we can upload that
09:23 - cv
09:24 - we also have this search field so this
09:26 - is uh
09:28 - going to help us out with our
09:31 - our search feature that we haven't quite
09:33 - finished yet
09:36 - one of the biggest problems that we
09:38 - hadn't
09:39 - fully solved was
09:41 - how do we know what page these pieces of
09:43 - content are going to because we have a
09:45 - lot of pieces of content in wordpress
09:47 - all these custom post types that don't
09:49 - necessarily equate to a single page
09:53 - on the site and not only that
09:56 - but since we have that that router
09:58 - function in our
10:00 - server.js
10:02 - file it's not always clear what the url
10:06 - should be
10:07 - just from getting the data from the post
10:10 - so the solution
10:12 - at least the solution that i came up
10:13 - with was every single
10:16 - post
10:17 - of all the custom post types is going to
10:19 - have this this field right so this
10:21 - search field
10:23 - and in that search field
10:25 - we'll put in
10:26 - what the url to the actual page is
10:29 - supposed to be
10:31 - so then when this piece of content comes
10:33 - up in a search
10:35 - and you click to go to the full page
10:38 - it will take you to this page
10:41 - so and that's also going to help for
10:43 - pieces of content that may not actually
10:46 - have their own page so those sample
10:48 - courses that we were working with
10:50 - yesterday those won't exist on their own
10:53 - pages
10:54 - right the the course schedules
10:57 - those will always exist mainly on the
11:00 - program page they could potentially
11:02 - exist elsewhere but primarily what we'll
11:04 - want to do with those
11:06 - is put the link
11:07 - to that
11:09 - that program page that major or
11:11 - graduate program or
11:15 - associate's degree something like that
11:17 - it'll link to there
11:20 - so this is going to make
11:22 - finishing up that search feature so much
11:25 - easier i mean that was that was the main
11:28 - issue that was left for us to solve
11:30 - there's still some other things that
11:32 - need to happen before that's ready to go
11:35 - but those are all things that i'm really
11:36 - confident that that we can solve
11:40 - all right so
11:42 - um
11:43 - the rest of it you can see is is just
11:45 - whatever was left over all the content
11:47 - is still in this
11:48 - uh large
11:50 - uh content editor spot and it looks like
11:52 - it's still a bit of a mess
11:54 - so i probably need to do a little video
11:57 - of me going through one of these and
11:59 - cleaning it up
12:00 - and then give that to my student workers
12:02 - so that they can watch the video learn
12:04 - how i want it done and then go through
12:06 - all the content and remove a lot of this
12:08 - junk so you know all the details tags
12:11 - all these
12:12 - you know spaces
12:14 - right uh between there
12:16 - so
12:17 - we're gonna assume we're not gonna mess
12:19 - with this stuff and styling this because
12:21 - we're gonna assume it's gonna be cleaned
12:22 - up
12:23 - probably get cleaned up today or by
12:26 - tomorrow morning
12:30 - so all we're going to worry about today
12:32 - is getting the stuff in here
12:34 - and this image
12:36 - displayed on the page properly
12:38 - and if we have time
12:40 - we'll go back through as well to that
12:43 - faculty list where we display the names
12:44 - of all the faculty of a particular
12:46 - department and we'll make sure that the
12:49 - correct info displays there as well
12:53 - all right enough talk let's code
12:59 - so
13:00 - let me first things first let's pull in
13:02 - that the latest updates
13:05 - get pool i recommend starting your day
13:07 - out or anytime you open a new project
13:09 - throughout the day with a get pool
13:11 - just to make sure that you have the
13:13 - latest changes if you're working off of
13:15 - a fork update your fork
13:17 - uh from whatever the uh
13:20 - original repo uh is
13:23 - that way
13:24 - uh
13:25 - it could be a mess if you start working
13:28 - and then later on find out there were
13:29 - updates then you're gonna have to fix
13:31 - merge conflicts and depending on how
13:33 - many conflicts you have that could just
13:36 - take up your whole day
13:38 - and uh that happened to me last night
13:40 - with the um
13:42 - the react native app that i'm working on
13:45 - and
13:46 - it was kind of disappointing that i
13:48 - didn't get very much done
13:49 - because i had to work through all these
13:50 - merge conflicts
13:54 - okay
13:55 - major
13:57 - we're not going to be working with that
13:58 - we need to work with
14:00 - faculty yep so faculty.js is what we're
14:03 - going to work with and if we have time
14:05 - we'll we'll also work with
14:06 - facultylist.js
14:10 - all right great
14:12 - so you can see right now not really a
14:14 - lot going on we just pulled things in as
14:16 - is
14:18 - but
14:19 - we can now get rid of
14:23 - a lot of this stuff
14:26 - so i'm going to leave for now
14:29 - this
14:30 - because it's possible
14:32 - that
14:33 - there are some images within the the
14:36 - body content of some of these profiles i
14:39 - haven't seen it but it's possible so
14:41 - let's leave that in for now
14:43 - we can take out the whole thing with our
14:45 - our cv
14:49 - and then for now
14:51 - the details page
14:57 - let's see
15:02 - uh the the details of it looks like we
15:04 - still should be taking this out
15:07 - to be honest with you that's
15:08 - that's kind of weird
15:10 - let's double check that so we do have oh
15:13 - you know what
15:16 - uh because we're doing a case sensitive
15:18 - i believe if we change this to case
15:19 - insensitive it'll actually change this
15:22 - so
15:23 - it'll just look nicer for now like i
15:25 - said i'm gonna have that
15:27 - that fixed uh but this should work so if
15:29 - we add that i it'll make it case
15:31 - insensitive
15:34 - um
15:36 - great and then in terms of you know this
15:39 - piece here that's that's totally fine
15:41 - what we need to do is add in
15:43 - a few things we can also remove this
15:48 - regular expression
15:51 - see if we can get rid of anything else
15:54 - i don't think so
15:58 - okay
16:02 - let's take a look in
16:03 - graphical
16:05 - what data we're going to get and uh how
16:07 - we can when get get to it
16:10 - so
16:11 - let's see instead of menus
16:14 - we're gonna go to
16:17 - faculty
16:19 - let's see if this will be enough to get
16:21 - us what we need
16:22 - great
16:23 - um faculty node id title link
16:28 - we don't need
16:29 - a link right now
16:33 - um id
16:35 - we don't really need the id either do we
16:40 - uh let's copy in what we're getting
16:42 - already so
16:43 - we should have a query
16:50 - queries
17:04 - where am i i'm missing these
17:07 - where is it
17:15 - data
17:16 - no lib there we go in the left folder
17:20 - okay so here's our queries so we can go
17:23 - to faculty
17:30 - are use in fact which which query are we
17:32 - using here
17:35 - profile
17:37 - okay so we're using the profile query
17:41 - um
17:43 - yeah so let's grab
17:46 - all of this
17:48 - just to get
17:49 - a realistic picture of what data we're
17:51 - bringing in
18:00 - there we go
18:02 - all right so this will show us what
18:03 - we're actually getting
18:05 - and this is it
18:06 - and
18:07 - let me you know let me get rid of
18:08 - content because it's just taking up a
18:10 - lot of space
18:12 - for me to get rid of content and then
18:14 - now we're going to add in
18:16 - what should the field names be
18:21 - might be able to just check here
18:23 - actually
18:29 - let's check faculty and then we can get
18:31 - a list
18:39 - yeah okay faculty
18:54 - edges node
18:58 - there we go
18:59 - now we're at the right place
19:04 - all right cool so we have our cv field
19:06 - so we'll definitely need that we need
19:08 - our cv field
19:10 - we need our
19:12 - all right we're gonna have subfields for
19:14 - this one so
19:21 - class field id
19:25 - value all right let's try value for this
19:30 - value
19:31 - okay
19:34 - move back
19:35 - all right
19:36 - um and this so for people who aren't
19:39 - familiar with graphql
19:40 - uh this is just a tool
19:43 - um
19:44 - graph graphical uh is just a tool
19:48 - to search through your graphql content
19:51 - so you just put in your end point
19:53 - up here
19:55 - and then you can actually just kind of
19:56 - step through your they call your schema
19:59 - so that's what we're stepping through to
20:01 - figure out what the
20:03 - what all our options are and it's a lot
20:07 - faster to do it in here
20:08 - than to try to put it in uh save it like
20:12 - in our code save it refresh everything
20:15 - maybe it's an error maybe it's not so
20:17 - this is a lot faster so once we get the
20:20 - data we want showing up here we can just
20:22 - copy and paste that into our project uh
20:25 - and we are going to be pretty sure that
20:27 - it's going to work
20:30 - okay so
20:32 - we had that
20:33 - let me go up again author
20:38 - display name there we go so we want
20:41 - display name
20:44 - and do all of these
20:47 - i bet all of these need
20:51 - value
20:52 - okay
20:54 - kind of annoying to have to do value for
20:56 - all of them but
20:57 - um
20:59 - it's uh
21:02 - it's not like we have to type it in
21:04 - anymore we type it in once we have it
21:05 - we'll copy and paste and we're done
21:08 - um
21:10 - nikki says graphical love that auto
21:12 - complete uh it rocks yeah for sure it's
21:15 - so useful
21:18 - so you see the autocomplete's actually
21:20 - finding the fields in the schema that
21:22 - work so if i start to type something and
21:24 - i don't see anything come up
21:25 - autocomplete i know that it's the wrong
21:27 - thing and it's not going to work
21:30 - all right so where do we just hit
21:32 - display name
21:34 - email
21:36 - so that email field
21:40 - and then
21:44 - featured image
21:48 - so we're actually going to be using the
21:50 - featured image now
21:51 - and i'm definitely going to have to go
21:53 - in
21:54 - let me throw a job title just walk
21:56 - before i forget
21:59 - value i think that's all we need so for
22:01 - the featured image
22:06 - let's go into media item
22:24 - all right there's a lot here source url
22:39 - uh we could do source url i was hoping
22:41 - that we could find
22:45 - some of the um
22:47 - how they they break in wordpress will
22:49 - automatically break an image down into
22:51 - multiple sizes so it's hoping we could
22:53 - take advantage of that
22:59 - i'm not seeing anything like that here
23:03 - and this is
23:30 - hmm
23:40 - okay so i'm guessing
23:42 - either
23:44 - source url or uri is going to be what we
23:46 - need
23:47 - so let's throw them both in here and see
23:49 - what we get
23:57 - all right
24:02 - okay so
24:04 - each one of these
24:07 - is going to represent
24:09 - a
24:10 - a faculty member
24:14 - so we have
24:15 - dr daniel kempton who's the dean here
24:18 - um
24:22 - okay so here's that featured image the
24:24 - source url
24:26 - okay so the source url is definitely
24:28 - what we want
24:31 - the uri
24:33 - is not helpful to us so let's get rid of
24:35 - that uri
24:37 - um i i definitely want to try to put in
24:50 - let's try this details
24:57 - i want to try media details
25:00 - okay and we have subfields here to see
25:02 - what that will give us
25:04 - sizes
25:06 - yes all right let's let's do that
25:09 - media details
25:11 - sizes
25:13 - and oh we have more
25:15 - so let's decide this might be what we
25:17 - need media sizes
25:20 - um
25:21 - yeah let's go with
25:24 - um
25:26 - source url for our sizes
25:29 - this might be exactly what we were
25:30 - looking for
25:34 - okay so all right check this out so
25:37 - here's our source url
25:39 - let me make this bigger hopefully y'all
25:41 - can see
25:42 - so
25:48 - our source url for our featured image is
25:50 - going to be the full size image as is
25:53 - like as it was uploaded so that's almost
25:56 - always going to be not what we want
25:57 - because it's going to be too big
25:59 - but then when you
26:02 - now this setting can be adjusted in
26:04 - wordpress right but usually by default
26:06 - depending on your theme
26:08 - it's going to be it's going as soon as
26:10 - you upload an image to wordpress it's
26:11 - going to take that image and break it
26:13 - down into multiple sizes
26:16 - so
26:17 - in this
26:19 - particular case this image has been
26:21 - broken down into three
26:23 - sizes
26:24 - so this is like your thumbnail like your
26:26 - small thumbnail 100 by 100
26:28 - a little bit larger thumbnail 150 by 150
26:31 - now of course this also involves some
26:33 - some cropping right because the original
26:35 - image is probably not square
26:37 - i don't remember what it is actually um
26:41 - but your thumbnail is always going to
26:43 - involve some cropping and then we have
26:45 - this
26:46 - this other source i'm assuming smaller
26:48 - than the original image
26:51 - 300 by 293
26:55 - so
26:56 - depending on the original image you may
26:58 - have even more sizes so it could be that
27:01 - the original image here is just not that
27:03 - big so it only gave us three sizes uh
27:06 - but
27:08 - if you happen to have um
27:11 - a really large image you may get a bunch
27:14 - of sizes
27:16 - uh now what we can do here
27:18 - is
27:20 - let's see
27:21 - file with height
27:24 - reference size name let's let's throw a
27:27 - name in here as well
27:28 - because right now this doesn't really
27:30 - help us if we wanted to use that
27:32 - right how how do we know which one is
27:34 - the best size
27:36 - so i'm hoping that name
27:38 - will give us some insight if we add name
27:41 - in here
27:44 - there we go
27:45 - so it says thumbnail medium and then
27:48 - this one is the 2017 thumbnail avatar so
27:51 - this is that theme specific
27:53 - so
27:54 - wordpress
27:55 - themes can do a lot
27:58 - and in particular
27:59 - this 2017 theme that is the theme that
28:02 - we currently have activated we don't
28:03 - really need it
28:05 - so we may end up deactivating it at some
28:07 - point but
28:10 - for whatever reason the 2017 theme
28:13 - needed 100 by 100 images
28:16 - so
28:18 - it's adding in another
28:21 - automatic uh cropping resizing
28:25 - point for these images right so like i
28:27 - said this source
28:29 - file is probably not that big so it only
28:31 - gave us medium but potentially we could
28:33 - have lots of different ones a small
28:35 - medium
28:36 - large
28:37 - i'm not sure if there's one above that
28:39 - but i've seen a lot more and like i said
28:41 - these are customizable so we may
28:44 - end up going in at some point and making
28:47 - our own custom image sizes
28:50 - we don't really have a use for it right
28:52 - now
28:52 - but i can see that happening in the
28:54 - future but anyway this is perfect this
28:56 - is exactly what we need and what this
28:58 - will allow us to do then
29:00 - is
29:01 - look for
29:02 - our image sizes
29:04 - if we have an image size that would work
29:07 - better
29:08 - let's say like let's say we want medium
29:11 - we'll use medium
29:12 - and then
29:13 - [Music]
29:15 - probably end up using media queries for
29:17 - this let's see how this will work
29:22 - hmm
29:25 - yeah we'll see how this goes this is
29:27 - going to be interesting because normally
29:28 - i would use media queries
29:31 - for this
29:33 - no no no what am i thinking we're going
29:35 - to use source set for this
29:37 - source set
29:38 - why am i thinking media queries
29:40 - um
29:43 - okay i just saw a question here it's a
29:45 - good question uh michael cruz says did
29:47 - these new categories come automatically
29:48 - from wordpress or is it something that
29:50 - student workers did
29:51 - so all the student workers did was
29:53 - upload a featured image
29:56 - the breaking it down into these
29:58 - different sizes
30:00 - that happened automatically from
30:01 - wordpress
30:03 - okay so i can't
30:05 - i think there are some automatic sizes
30:07 - that happen with wordpress but then
30:09 - there are usually some that are custom
30:11 - that come with your theme and then you
30:13 - can customize it even further if you
30:14 - want
30:17 - uh usually there's it's not there's
30:19 - nothing in the ui
30:21 - of the admin panel that lets you do that
30:22 - unless you get a plug-in so you it does
30:25 - involve some some php
30:29 - all right but this is awesome i think
30:31 - this is everything we need
30:34 - so i mean we'll find out if it's not
30:36 - everything we need but for now i'm going
30:40 - to copy
30:43 - this
30:46 - and add it
30:48 - here
30:50 - so right after our content
30:53 - whoa
30:58 - what's wrong with this here
31:01 - unexpected tab character all right so
31:04 - it's just a formatting thing i think
31:06 - we're fine
31:14 - all right cool so now that we have this
31:16 - let's test it out and try to grab
31:18 - uh one of these pieces of data oh you
31:20 - know what i didn't check that value for
31:24 - the cv
31:25 - okay cool that does work i just wanted
31:27 - to
31:28 - make sure that this value is giving us
31:31 - a url
31:33 - and it is so that's awesome and notice
31:35 - what our url is it's not pointing us to
31:38 - our wordpress site you know that's
31:40 - that's at wp.franciscan.university
31:43 - this url is pointing us to
31:45 - our google storage
31:47 - uh bucket
31:49 - right because we set that up i think we
31:51 - set that up on
31:53 - on the stream but anyway we set it up so
31:55 - that
31:57 - anything we upload to wordpress goes
31:59 - automatically to google storage and it
32:01 - is served from there so nothing
32:04 - stays on our currently our digitalocean
32:07 - droplet that houses that wordpress
32:09 - installation
32:11 - and we don't have
32:12 - a um
32:15 - a database on that droplet either
32:18 - so
32:19 - i may keep
32:21 - our wordpress installation on that
32:22 - droplet
32:24 - because right at this point it's so
32:26 - lightweight
32:28 - it may work
32:30 - we'll see the other option that i've
32:32 - thought about is hosting it with next
32:40 - michael says my beautiful query
32:43 - yeah yeah the query is quite a mess now
32:46 - right it's just yeah
32:48 - um we could work with query fragments if
32:51 - we wanted to to make it look a little
32:52 - bit cleaner
32:53 - but i'm okay with this for now uh one
32:56 - thing we may end up doing though is like
32:58 - this featured image this is a really
33:00 - good candidate to be a fragment because
33:02 - we're probably going to reuse this for
33:04 - other queries
33:06 - so at some point we'll probably do that
33:08 - if
33:09 - in graphql a query fragment is basically
33:11 - like pulling out a piece of a query
33:13 - making it a variable and then all we'd
33:15 - have to do is just pop that variable in
33:17 - instead of having all of this
33:22 - okay
33:23 - all right my timer is up for that
33:25 - pomodoro session so let's take a short
33:27 - break
33:28 - i'm doing a lot of explanations so we're
33:30 - not moving that fast for those of you
33:32 - who are pretty advanced apologies for
33:34 - that but i don't really i don't want to
33:36 - lose the beginners um
33:38 - and if you're a beginner and you're
33:40 - you're kind of lost here feel free to
33:42 - ask any questions you know i'm doing my
33:44 - best to try to explain but
33:46 - it's def
33:47 - i'm probably missing a lot of things
33:59 - all right
34:01 - all right so first question away from
34:03 - the the very beginning of the stream in
34:05 - the first minute here is uh kim
34:09 - kim chun says what laptop do you suggest
34:11 - for a beginner
34:13 - um
34:14 - it kind of depends on your budget
34:16 - so
34:18 - i really like my macbook pro i think
34:21 - it's a 2015 it was the last model that
34:23 - had the uh the full hdmi port uh so that
34:27 - was important for me because i didn't
34:28 - want to buy adapters for uh for hdmi
34:31 - stuff
34:32 - um i really like it i've heard that
34:35 - people aren't as happy with the newer
34:36 - models of the macbook pro
34:38 - so i don't know but i don't have
34:40 - personal experience with it my wife has
34:43 - um a regular macbook
34:45 - and um
34:47 - that's fine for her she does
34:49 - uh javascript ruby and um like
34:52 - blockchain development stuff on it
34:55 - uh so
34:57 - that works
34:59 - it does kind of depend too on what
35:00 - you're trying to run
35:05 - sorry for the yawn
35:07 - so
35:09 - i think you're good with with those
35:11 - options but they can be pricey
35:15 - there's so many different options with
35:17 - uh with pcs it's
35:19 - i mean i i don't even know where to
35:20 - begin uh to give you advice for that uh
35:23 - if you want to go
35:25 - the less expensive route you could try
35:28 - getting a chromebook and then setting up
35:30 - a cloud development environment like
35:32 - through something like like cloud9
35:35 - and then
35:39 - you'd you'd have a really cheap
35:41 - operating system that doesn't get
35:45 - it doesn't get bugs or you know malware
35:48 - anything like that and
35:51 - you'd be able to log into your dev
35:52 - environment from anywhere i mean there
35:54 - are advantages too but
35:56 - so if you're looking to spend the least
35:57 - amount of money to get into it i would
35:59 - go with the chromebook
36:01 - uh and then you can always invest later
36:03 - on like i didn't get my macbook pro till
36:05 - i picked up a client
36:07 - and
36:08 - uh
36:08 - the cost of the macbook pro was only
36:10 - like 10 of what i was making on that
36:12 - project so i thought all right fine like
36:16 - this is gonna help me out uh with my
36:19 - with this project
36:20 - so i'm gonna go for it
36:23 - uh so if you're just starting out you
36:25 - don't have any high paying clients yet
36:26 - may not want to go straight for the
36:28 - macbook pro
36:29 - unless you have a lot of money lying
36:31 - around
36:32 - that's my advice
36:36 - steven says
36:38 - if you don't want to spend a ton of
36:39 - money
36:40 - uh you could go with a macbook air okay
36:43 - i forgot about the air so the macbook
36:45 - air is is less expensive but but still
36:48 - more expensive than you're gonna pay for
36:50 - a chromebook
36:51 - for most chromebooks
37:07 - sabin says um
37:09 - more ram and a solid state drive is good
37:12 - yeah that's true if you're gonna go like
37:14 - the pc route or linux and like really
37:16 - customize and like pick exactly what you
37:19 - want make sure the solid state drive is
37:22 - is really nice to have and more ram is
37:25 - always better than less ram
37:50 - all right benny says can someone give me
37:52 - an explicit description of what
37:53 - component did update does also i think i
37:56 - had a condition when i said that it kept
37:59 - running repeatedly
38:01 - all right you know what
38:04 - there's some of those life cycle methods
38:06 - that that they're kind of getting rid of
38:08 - um
38:09 - i want is component did update one of
38:11 - those
38:19 - i don't think component did update did
38:21 - is is one of the
38:23 - old ones so i think you can still use it
38:31 - i mean like it says and from what i
38:33 - remember without looking it up i i'd
38:35 - probably look it up myself um if i had
38:38 - that question um decided to explain it
38:41 - so i'm just saying i don't it's not
38:42 - fresh in my mind but component did
38:44 - update
38:46 - goes off whatever you put in there will
38:48 - run after the component
38:50 - updates
38:52 - so
38:53 - something changes in state
38:56 - re-render happens right if component
38:58 - needs updated it updates
39:01 - and then that that runs
39:04 - i mean that
39:07 - i don't know if that's uh
39:10 - an official
39:12 - sounding explanation there but
39:15 - i mean i would i would probably look it
39:17 - up
39:18 - um
39:19 - in the react documentation they do a
39:21 - good job of explaining usually uh what
39:23 - things mean
39:24 - okay
39:26 - so i'm gonna go back and do another
39:28 - pomodoro session after this session
39:31 - i'll answer all the questions that are
39:34 - left so we're just gonna do one more
39:35 - session today
39:37 - uh so that you all if you want to have a
39:40 - chance to catch that that next stream
39:41 - about uh alexa skills
39:44 - okay
39:45 - so we have our data we have what we need
39:48 - let's make sure that we can actually get
39:50 - that data and display it on the page
39:52 - um
39:53 - let's see i guess we can get that
39:56 - uh display name
39:58 - field
40:01 - yeah
40:04 - all right so let's look at what we
40:05 - already have because we we're already in
40:08 - um
40:09 - make sure i save that
40:11 - in
40:12 - faculty.js we're already bringing that
40:14 - data in so we don't have to go through
40:16 - that process
40:18 - but we're using the apollo
40:21 - query
40:22 - component
40:23 - and
40:24 - we pass it a query prop
40:27 - tell it what query we want to use and
40:29 - then
40:30 - we pass it the data
40:32 - in this case it's the type that we're
40:34 - pulling from
40:36 - from the url it goes through our routing
40:38 - function in server.js and it sends it
40:40 - here
40:45 - so
40:46 - down here currently all we're getting is
40:50 - content and we we
40:53 - so up here we have data
40:56 - this props type dot edges
41:00 - zero right so that's how we've gotten
41:04 - the data that we need
41:06 - let's see do this
41:27 - why do we have result here what are we
41:29 - using it for
41:30 - oh okay
41:32 - we're using it up here
41:43 - that's weird
41:47 - faculty
41:48 - oh okay i see why we're doing it like
41:50 - that so we're this is more like a
41:51 - universal code so we're not explicitly
41:53 - saying faculty here we're using the type
41:56 - uh so potentially this component could
41:58 - be reused for other stuff it's about to
42:00 - get really specific so probably won't be
42:01 - able to uh anymore
42:03 - um but let's go
42:07 - our content node.content
42:11 - so we're going to edges zero
42:16 - and we should be able to
42:18 - [Music]
42:22 - know about content uh so let's make
42:31 - um
42:37 - i'd say
42:42 - faculty
42:49 - equals
42:50 - [Music]
42:56 - trying to avoid having to type all this
42:58 - stuff in
43:04 - all right
43:06 - so
43:07 - now
43:09 - let's add in a div
43:14 - and let's do an h1
43:17 - and say
43:20 - what do we have
43:22 - faculty
43:24 - dot can't remember what we called in a
43:28 - display name field
43:41 - dot value
43:47 - all right so if i've done this right
43:49 - this should tell us uh this should give
43:51 - us that that value of the display name
43:54 - field
43:55 - and what did i do i forgot my closing
43:57 - div
44:02 - okay
44:05 - all right let's check it out
44:07 - yay here we are dr susan poyo
44:11 - cool
44:12 - uh so now we know we can get the data
44:15 - pull it in so now it's just the time to
44:19 - build this component out and we'll build
44:21 - it out we'll style it a bit and
44:26 - hopefully it looks nice
44:28 - and you can see after i've added that
44:30 - that i in our regular expression to make
44:32 - it case insensitive it has now changed
44:36 - how this looks still looks pretty
44:38 - terrible
44:39 - um but at least we can see the content
44:41 - now so i'm definitely gonna have uh my
44:44 - my student workers clean up this this
44:48 - markup uh manually
44:50 - um
44:52 - it'll free up time for us
44:54 - to build out more components and things
44:56 - if we don't have to mess with trying to
44:58 - work around this this kind of really
45:00 - terrible markup
45:08 - all right
45:10 - so for right now let's just get the date
45:11 - on the page and then we'll style it
45:16 - so let's try this uh this image next
45:20 - this one's gonna be fun
45:22 - um i don't
45:24 - well
45:26 - let's see if material ui has anything to
45:29 - do with
45:34 - images do they not they have an image
45:36 - avatar
45:41 - so do they not have an image
45:48 - yeah this is not what we need okay
45:50 - that's fine just wanted to double check
45:52 - to see if they had something built out
45:54 - for
45:55 - uh for images so we're just going to use
45:57 - source set
45:58 - and it's been a while since i've i've
46:00 - actually typed out source set you know
46:02 - from scratch and not just copy and
46:04 - pasting so let's check out the uh the
46:06 - mdn
46:11 - uh article about this
46:17 - all right
46:19 - so we're gonna skip over the y
46:21 - responsive images
46:23 - we already know we want it
46:25 - uh so let's let's check this out
46:30 - here we go
46:31 - so here's sour said if you're not
46:32 - familiar with it
46:34 - it's really cool so
46:36 - you you put in
46:37 - like it looks like a normal image tag at
46:39 - first right starts out the same but then
46:43 - we instead of just our source and then
46:46 - you know our old or whatever we put in
46:48 - here
46:50 - we have
46:50 - more uh
46:52 - properties more attributes so we have
46:54 - the source set and in the source set we
46:57 - give it
46:59 - some more file names
47:00 - um or
47:04 - urls you know paths to our images
47:07 - so each one of these corresponds to a
47:09 - different size image
47:11 - and then we say
47:15 - what
47:16 - what width
47:18 - this should correspond to
47:23 - we have our sizes which these are like
47:25 - media queries right they look like media
47:27 - queries
47:39 - so
47:44 - now this uses w unit not pixel as you
47:47 - might expect to see this real size
47:51 - okay cool
47:52 - um
47:54 - if you want i'm going to paste this in
47:55 - the description if you want to read more
47:57 - about this uh it's it's super useful so
48:00 - you can check that out if you want
48:02 - i'm just kind of skimming through this
48:03 - just to give me a refresher so i make
48:05 - sure i use the right syntax
48:08 - basically the only thing i'm i'm taking
48:10 - from here is
48:11 - make sure that
48:13 - these are the the actual image widths
48:17 - and then
48:24 - space the width of the slot the image
48:26 - would take
48:28 - okay and then this number is the screen
48:31 - width but this number is the
48:34 - the width that the image will actually
48:37 - need to take up
48:38 - uh and i thought you could
48:44 - okay so you can do um viewport with so
48:48 - that's good to know because i don't
48:50 - always have set a certain number of
48:52 - pixels it's usually like a percentage of
48:55 - the page so we can use viewport with we
48:57 - can't use the percent symbol but we can
48:59 - use viewport with which represents you
49:02 - know it's it's a number between 0 and
49:03 - 100 right so that represents
49:06 - the same thing as percentage width you
49:08 - know basically
49:09 - so we're going to you probably use that
49:12 - instead of pixels here
49:15 - um
49:17 - but yeah uh
49:19 - this is so if you've never seen this in
49:21 - action hopefully i can get it working
49:23 - and
49:24 - it it's so cool it's just super useful
49:27 - uh last thing i want to check is
49:31 - i guess that's it
49:42 - okay
49:43 - all right cool so uh the nice thing is
49:45 - there's a fallback
49:47 - and we notice we still have this source
49:50 - so on older browsers i'm not usually
49:52 - worried about older browsers but it's
49:54 - nice to know
49:55 - on older browsers it'll just ignore this
49:57 - stuff and just load this
49:59 - right so by default
50:01 - here they're loading the largest version
50:03 - of the image
50:04 - so
50:06 - uh and i guess that's
50:09 - um that makes sense and then that way
50:13 - it'll be able to cover it'll still look
50:15 - good no matter what right it'll take a
50:17 - little bit longer to load but it'll
50:18 - it'll look good since it's the largest
50:20 - image
50:21 - all right let's just copy and paste this
50:24 - whole thing
50:27 - and edit it as as needed
50:37 - okay here's the tricky part
50:41 - we're not always going to have our
50:43 - images right so
50:46 - um
50:49 - if we have
50:51 - actually
50:54 - oh what is this john's saying react
50:56 - image will also take another component
50:59 - uh to do lazy loading along with using
51:02 - source set built in
51:05 - all right this is worth checking out
51:07 - because lazy loading is um it's actually
51:09 - on our issues list in github right now
51:12 - so
51:13 - uh maybe we can just add it in right now
51:18 - it's important it's just importing image
51:20 - from react image
51:28 - all right let's look it up quick let me
51:30 - see how much time i have
51:32 - all right you know what let's save lazy
51:34 - loading for another stream i i agree and
51:36 - i think lazy loading is a good idea but
51:38 - i don't think there's any way that i can
51:40 - uh do that and get the rest of these in
51:43 - so
51:46 - um
51:48 - yeah let's let's just wait um
51:51 - for this so
51:54 - here's what we'll do
51:57 - in
51:58 - first things first let's just replace uh
52:00 - some of these these image files
52:05 - let's look up our schema again so we
52:07 - know how to get there so what is this
52:10 - featured image
52:13 - media details
52:17 - so featured image source url is going to
52:19 - be our default
52:24 - and we're going to need to change these
52:25 - up to use
52:35 - um
52:44 - that's weird why is it doing this
52:56 - oh okay i know why it's doing that
52:58 - because i need
53:00 - trying to use template literals straight
53:02 - in html and that's not working we need
53:04 - to go to javascript land for template
53:06 - literals to work
53:08 - and down here i don't actually need a
53:10 - template literally
53:14 - all right so here's what we need
53:18 - faculty
53:20 - featured
53:23 - image
53:25 - right
53:27 - featured image source url
53:33 - right
53:34 - okay
53:40 - and for this one
53:44 - we're going to say
53:50 - and use our template literal syntax here
53:53 - to put in faculty featured feature image
53:56 - source is it featured yeah ed
54:00 - featured
54:04 - featured image source url okay so
54:07 - what what this is gonna do
54:10 - then is anything we put
54:14 - if you're not familiar with template
54:15 - literals we use this backtick instead of
54:17 - normal quotes and then we can put a
54:19 - dollar sign curly bracket and then
54:22 - anything in between this opening and
54:23 - closing curly bracket is now javascript
54:26 - and so it allows us to do cool things
54:28 - within strings without having to
54:30 - concatenate a lot of stuff together
54:40 - okay
54:41 - all right let's see
54:50 - yeah let's put in
54:54 - let me just copy and paste this really
54:56 - quick
55:06 - and um
55:07 - let's see factory feature mr oh so
55:10 - instead of source url we want to go to
55:15 - this
55:18 - media details
55:21 - sizes
55:28 - details
55:30 - sizes
55:37 - i'm probably going to want to take these
55:39 - out and make them variables at some
55:41 - point because this is going to get crazy
55:42 - in a second
55:49 - sizes dot filter
55:53 - and within our filter we're going to say
55:57 - um
56:00 - image
56:04 - dot
56:07 - name
56:10 - oops
56:21 - oops
56:23 - all right with this image.name
56:26 - equals
56:28 - thumbnail
56:31 - and then for this one we're going to say
56:34 - image.name
56:37 - equals
56:38 - medium
56:42 - what is this
56:48 - there you go
56:49 - okay and then for our widths
56:52 - uh we can actually go in here and say
56:55 - along with our name we're gonna to say
56:58 - oops
56:59 - that's not exactly what i want
57:02 - to return
57:03 - image name
57:05 - equals thumbnail and then
57:11 - if if we do have the image name equals
57:13 - thumbnail
57:14 - um
57:16 - then we want to return
57:19 - um
57:21 - image
57:23 - dot
57:25 - source url is that gonna work
57:30 - no it's not
57:33 - uh what am i doing wrong here
57:36 - all right help me out
57:39 - filter
57:41 - should automatically then return
57:45 - anything
57:48 - all right do i need to add a map onto
57:50 - here then is that my problem
57:52 - so filter is going to return anything
57:54 - that fits that
57:57 - so i need to put dot map
58:01 - and then dot map is going to be
58:05 - image
58:08 - and we'll return
58:15 - source url
58:20 - expected token
58:33 - michael says you really need to see how
58:34 - the images look on each screen with
58:36 - before doing this yeah yeah i know i
58:38 - just want to get it in here first we'll
58:40 - get some images in just to see
58:42 - uh what's going on and then we'll adjust
58:44 - it
58:46 - but what did i just do here that messes
58:48 - up all right our filter
58:50 - actually sizes filter images
58:54 - dot map
58:56 - should be
58:57 - image
59:00 - why can i not do that
59:19 - i'm
59:20 - pretty sure i have some weird some
59:22 - syntax error going on here but i'm not
59:27 - i don't know what's
59:30 - happening is it mad because i'm trying
59:33 - to do all this inside of a template
59:35 - literal
59:39 - yeah i mean this is a bit much let's
59:40 - just
59:42 - let's take this out and do
59:45 - const
59:47 - thumbnail
59:49 - equals
60:02 - are we still getting this
60:11 - oops
60:12 - you're right i put equals equals
60:17 - thank you
60:20 - actually that's this is a case where
60:22 - using this font actually was not helpful
60:24 - so
60:27 - johnson i think jesse likes to see how
60:29 - many lines of code he can get into one
60:31 - file before he breaks vs code
60:34 - yeah when i'm just doing things i
60:36 - definitely throw in like everything
60:41 - but uh this is this is gonna end up
60:43 - being much cleaner so i think it's fine
60:45 - that we we pulled this out and so now we
60:48 - can do the same thing for the next one
60:50 - and call this
60:52 - medium
60:57 - and go for the medium
61:01 - medium size here and then we can get rid
61:04 - of all this
61:08 - great and uh
61:10 - we put in let's go
61:13 - with
61:14 - let's see if we can get a width here and
61:17 - what value we get i'm hoping it's just a
61:19 - number yes all right just a number so
61:21 - this width will tell us how wide the
61:23 - image is so then
61:25 - here where we're supposed to say how
61:26 - wide the image is we can just pop in
61:28 - that that value
61:31 - for
61:32 - width
61:33 - so
61:37 - yeah we're going to want to
61:45 - this is going to end up getting a little
61:47 - bit complicated
61:58 - instead of source url
62:02 - we go
62:04 - image with and so then down here we can
62:08 - say
62:19 - um
62:35 - come there with
62:38 - and
62:46 - this is getting so crazy
62:49 - medium width
62:50 - all right
62:52 - excellent
62:53 - um for our source url we can also do
62:56 - this
62:57 - um
62:58 - let's see
63:01 - i believe
63:05 - media details
63:09 - with
63:27 - yep you do details with wow this is 400
63:30 - widths it's not a really big image
63:34 - um
63:39 - so we can
63:41 - go in here and say
63:49 - image with
63:51 - equals
63:54 - and this is going to be faculty featured
63:56 - image media details
63:58 - this one will be a lot easier
64:04 - with
64:05 - okay wonderful
64:17 - oops
64:21 - image with
64:30 - okay
64:32 - i just want to see this on the page
64:35 - no syntax error no closing tag for the
64:38 - image all right
64:40 - i noticed that at first and then
64:45 - went through a lot of stuff
64:47 - no
64:48 - image is not defined
64:50 - where's the image not defined
64:53 - where am i using image
65:06 - oh
65:39 - oh
65:52 - you know what i just thought too
65:53 - i hope
65:54 - that susan foyo's profile actually does
65:57 - have a medium size in the thumbnail size
66:00 - yay it worked all right cool it worked
66:04 - and we should be able to get different
66:06 - images now
66:08 - maybe
66:10 - maybe
66:16 - maybe it's just falling back to the
66:18 - source let's see what we have
66:21 - oh i know what happened
66:23 - we actually need to put
66:26 - all of this stuff
66:29 - beforehand
66:32 - ah this is gonna make it just just a
66:35 - little bit more complicated
66:37 - okay so uh here's the problem
66:40 - it'll be easier to see over here
66:42 - so
66:45 - for the source url we're getting the
66:46 - full url so that's why that's still
66:48 - working but for these ones
66:50 - in the source url for our our smaller
66:53 - sizes we're not getting the full url not
66:55 - only that
66:57 - but we're not really getting enough to
66:58 - do this right so this part here is going
67:01 - to be different so it's not like we can
67:03 - just have this as a constant
67:06 - so
67:09 - this is going to be so tricky
67:14 - all right let's check out sizes again
67:16 - and see what we have to work with
67:22 - file
67:23 - all right let's see what file gives us
67:34 - ah same thing
67:36 - what else do we have name file with
67:39 - height
67:43 - ah
67:49 - we need the full url
67:59 - how can we get the full url
68:05 - okay we could do a
68:07 - a regular expression that gave us
68:09 - everything before the last slash could
68:12 - we could we not can we do that
68:16 - and then that's going to be our url that
68:18 - we use
68:20 - and we will prepend that onto here
68:33 - oh good idea nikki says see if a
68:36 - featured image lets you query for base
68:38 - url or something
68:40 - all right cool let's uh
68:42 - go back here i'll tell you guys
69:14 - okay
69:15 - yeah we don't have that so
69:18 - i think probably our best bet would be
69:20 - regular expression
69:22 - or something
69:24 - that would give us
69:25 - just what we need
69:27 - up to here
69:32 - and then we could use that
69:37 - down here
69:39 - um
69:41 - and and add that in right before
69:44 - our
69:45 - thumbnail
69:47 - file name
69:55 - okay
69:57 - um my timer went up and
70:01 - yeah we have about 15 minutes before the
70:03 - other stream starts so i'm gonna go back
70:04 - to the chat answer some questions so i
70:06 - definitely didn't get it
70:08 - finished this uh
70:10 - source
70:12 - uh this using these the source set on
70:15 - this image tag definitely took up
70:17 - a lot more time
70:19 - uh than i had hoped so we didn't get all
70:22 - the fields in
70:24 - but we definitely got through the most
70:26 - difficult of all the fields
70:29 - the rest are just text one of them is a
70:32 - download but we just need one url for
70:33 - that and not all these multiple
70:36 - things going on here
70:37 - so that's what we do we just go down
70:39 - through and add in
70:41 - this data
70:44 - and then style it
70:46 - so what i'm thinking for styles
70:50 - is
70:51 - on mobile it's going to be you know
70:54 - dr susan poyo um probably the image
70:58 - after
70:59 - and then it'll have the title
71:02 - phone number email and then a link to
71:06 - download the
71:07 - curriculum vitae
71:10 - the only change i might make is if i'm
71:12 - gonna have the title at the top maybe
71:14 - i'll have her
71:15 - if i'm gonna have her name at the top i
71:17 - may have her her title
71:19 - right beneath it
71:23 - i mean the other potential thing is you
71:25 - know what if we had the image first
71:29 - i don't know
71:31 - i'll have to see how it looks
71:33 - but that's my idea on a larger screen
71:36 - i'd like to have the image here
71:41 - and then all the information
71:44 - you know right on the side
71:47 - or flipped around
71:48 - i guess it doesn't really matter we
71:50 - could we could have the image
71:51 - aligned either side but otherwise it'll
71:55 - it'll be side by side so there'll be
71:56 - columns
72:00 - so
72:01 - let me know what you think about those
72:04 - i guess the
72:05 - layout
72:06 - options in the chat and now i'm going to
72:14 - go back to
72:16 - the live chat and i need to find where i
72:19 - where i left off
72:21 - i do not remember
72:25 - oh cool i found it
72:41 - okay michael uh creole's asking about uh
72:45 - how chrome auto formats json um says
72:48 - firefox um dev does it automatically
72:51 - does chrome have an extension it does
72:54 - um
72:55 - all right nikki says json formatter is
72:57 - the chrome extension that does that is
72:58 - that what i'm using
73:00 - yeah json formatter that's what i use
73:05 - so that's how we get
73:07 - um
73:10 - where's that this
73:12 - so this is json normally it would just
73:14 - be all together and
73:17 - nearly impossible to read
73:19 - this makes it look pretty
73:31 - uh stephen says gotta miss a stream have
73:33 - a creative meeting for the next hour i
73:34 - will come back and see if you're still
73:36 - on later oh well uh good luck with with
73:39 - your meeting and thanks for being here
73:41 - for for as long as you could
73:55 - oh michael
73:56 - mentioned using an id
73:58 - for the key in in the map yeah you know
74:01 - what i probably will need to use
74:06 - am i using map anywhere
74:10 - no actually i don't think i will need it
74:13 - i i mean i'm assuming you're talking
74:15 - about this maybe you talk about
74:16 - something else but
74:17 - uh since it's not actually html is
74:20 - that's coming out i don't think i'll
74:21 - need it it's just being saved to a
74:23 - variable
74:25 - uh just as a string
74:54 - all right so uh eric zorn says hey hey
74:57 - how's it going thanks for joining us
74:59 - harshit says hi hey harshit how's it
75:01 - going
75:05 - harsh it i did go ahead and uh i
75:07 - cancelled that zeit account we're using
75:09 - for javascript af
75:12 - uh so i think we have like 20
75:14 - at least 20 more days of it if we need
75:16 - to do anything with it
75:21 - if the account's not completely canceled
75:23 - it just dropped down to the free the
75:25 - free tier instead of the whatever tier
75:27 - we were on
75:38 - john says what happens if one or more of
75:40 - those endpoints does not have an image
75:42 - url does graphql return an error uh or
75:44 - fail
75:48 - all right that's that's actually
75:49 - interesting
75:50 - what happens if we try to get data that
75:53 - it isn't there
76:00 - i'm gonna have to look into that i will
76:09 - i would hope it would just return the
76:10 - rest of the data
76:12 - but to tell you truth i i don't
76:14 - remember what happens
76:17 - it's hard to believe that i haven't had
76:18 - that situation come up yet
76:21 - but that's a really good question
76:23 - definitely need to test that out
76:33 - okay michael says i think you get a null
76:35 - value
76:36 - okay
76:37 - oh i should say they had had to go for
76:39 - uh dinner time see you har
76:41 - actually i'm super hungry right now i
76:42 - could go for something
76:44 - uh um it's lunchtime right now so for me
76:58 - and hardship recommends using react
77:00 - image as well
77:06 - uh
77:07 - gia
77:08 - says i'm here i'm new here and i want to
77:11 - ask
77:12 - is this project for work or is this a
77:14 - side project this one is for work
77:24 - okay cool so nikki saying
77:27 - that the
77:29 - if we try to get some data uh with a
77:32 - graphql query and that data doesn't
77:34 - exist it'll just return null for that
77:37 - piece of data
77:38 - uh it
77:39 - it won't throw an error unless we mark a
77:41 - field as required so that's that's very
77:44 - good to know but what we'll have to do
77:46 - is account for that in our
77:49 - in our react component so we'll need to
77:51 - set up a check
77:54 - for instance with image to say
77:56 - if image is not equal to null
78:00 - then try to render this you know
78:02 - otherwise don't don't render it uh
78:04 - because then we we could actually end up
78:06 - getting an error
78:08 - even if we don't get it from graphql
78:09 - we'll get it here in uh in our component
78:14 - so
78:15 - i had intended to put checks like that
78:17 - in
78:18 - uh but
78:19 - for the sake of time i thought oh we'll
78:21 - leave that off
78:22 - um
78:23 - and if we get an error at that point it
78:25 - would kind of almost be like it better
78:27 - for a better teaching moment to say okay
78:30 - let's fix this error
78:41 - uh on mpg says i'm a beginner and trying
78:44 - to follow
78:45 - all right awesome yeah definitely ask
78:47 - ask as many questions as you need to
78:49 - i'll do always uh try to do my best to
78:52 - explain things but
78:54 - i'm sure you you have other questions
79:09 - what i just explained about um handling
79:12 - null values uh you all just are talking
79:14 - about in the chat so you all know
79:17 - i don't have to tell you you all know
79:18 - how to how we handle that
79:41 - so
80:19 - oh okay nikki saying that we could have
80:21 - used array.fine
80:23 - that's yeah you know what i don't use
80:25 - dot fine often so it didn't even cross
80:27 - my mind um but
80:30 - that's a good idea so instead of uh
80:32 - doing the filter
80:38 - i'm interested uh would there be any um
80:41 - performance
80:42 - benefits to using find instead of filter
80:46 - if so
80:47 - you know i could definitely
80:49 - switch that up
80:52 - if not then i may just end up leaving it
80:54 - as filter
80:56 - because that works
81:04 - i see that nikki said you need to pass a
81:06 - callback function and then do the
81:07 - equality check and he nikki said that
81:10 - way earlier than i figured it out uh so
81:13 - here
81:14 - um so thanks nikki sorry i didn't look
81:16 - over in the chat the chat was pretty
81:18 - pretty busy today so it was it was tough
81:20 - for me to try to keep up when i was was
81:23 - coding
81:32 - i see a lot of you noticed my double
81:34 - equal sign in the arrow function which
81:36 - of course doesn't work
81:38 - thank you for letting me know
81:56 - phoenix says wouldn't it be better if
81:57 - the image is in the center yeah i um i
82:00 - just kind of wanted to get the image on
82:01 - the page there but you're right there
82:03 - there's definitely some
82:04 - uh
82:05 - some styling that could could happen
82:07 - there that would make it look better
82:27 - michael says can can you set up a
82:29 - constant base url and then append a file
82:31 - name to it
82:33 - well yeah that's what i'd like to do um
82:35 - the problem with the url is just that
82:38 - it's not
82:42 - so this part of it
82:44 - would remain the same no matter what
82:46 - for across the board for everything that
82:48 - ever gets uploaded
82:50 - but this part here this 2018 and then 06
82:54 - these are folders and it's based on the
82:56 - year and the month that that particular
82:59 - piece of content was actually uploaded
83:02 - so these will change so i need some way
83:04 - to get these values so right now these
83:07 - values aren't here
83:09 - they're only on the source url
83:11 - so that's why i need some way to just
83:14 - get this
83:15 - and if i just get that then of course i
83:18 - would have it and i could just you know
83:21 - uh
83:22 - prepend it
83:23 - to the source url down here
83:26 - and everything should should work out
83:30 - so that's the thing so i'm thinking
83:33 - regular expression might be the way to
83:35 - go here
83:36 - to pull this
83:37 - this piece
83:39 - [Music]
83:41 - but i'm not sure
83:49 - uh michael says i know it's a design
83:51 - question but i'm wondering why the cv
83:52 - link
83:54 - needs to be in a prominent position it's
83:56 - like putting an employee's resume at the
83:58 - top of their company's link
84:01 - yeah you know what you're right i
84:03 - the cv in the current website is towards
84:06 - the top but
84:07 - you're right it doesn't need to be and
84:09 - we just left it there because we pulled
84:11 - in the markup as is
84:13 - but maybe it would be better at the
84:15 - bottom
84:16 - you know maybe we the first thing
84:19 - maybe we don't want to show users a link
84:21 - to download a pdf right away
84:27 - actually i kind of like that idea of
84:28 - putting it at the bottom
84:33 - because i'm i'm a big um
84:36 - proponent of
84:38 - of not using
84:40 - uh pdfs
84:42 - online if you can avoid it because
84:44 - you know
84:46 - if you'd make that html instead of in a
84:48 - pdf uh it would be
84:51 - i don't know how screen readers handle
84:52 - pdfs but
84:54 - i know they can handle html so be better
84:56 - for that
84:57 - it would also be better for search
84:58 - engine optimization
85:00 - uh for searching
85:02 - so
85:03 - you know whatever is in that pdf is not
85:05 - going to show up in our search on the
85:08 - site it's not going to show up in a
85:10 - google search right google search does
85:12 - not actually scan through pdfs unless
85:15 - they've started doing that now and i
85:16 - don't know about it right so that
85:18 - content is essentially locked away
85:23 - so
85:25 - if we can avoid using the pdf completely
85:27 - i'd be okay with that
85:29 - um but if we can't avoid it putting it
85:31 - down the bottom
85:33 - i guess would be okay and it's just it's
85:36 - a better user experience to be able to
85:37 - just go right to the page and get the
85:39 - info i can't stand especially when i'm
85:41 - on my phone i go to somebody's website
85:43 - usually like a restaurant website and i
85:46 - go to the menu page and it doesn't tell
85:48 - me the menu it just says here's a pdf
85:51 - then i have to download the pdf on my
85:53 - phone
85:54 - open it up and read it i may not even go
85:58 - to the restaurant i'm just trying to see
85:59 - what they have and then i've got this
86:01 - restaurant's pdf on my phone until one
86:03 - day when i i finally decided to go into
86:05 - my downloads folder and clean it out
86:09 - anyway all right sorry about my pdf rant
86:12 - let's go back to the last
86:37 - uh world says what's the benefit of
86:38 - using server-side rendering like next.js
86:41 - uh nikki says seo and performance so
86:43 - search engine optimization and
86:44 - performance yeah for sure uh that's
86:47 - i mean that that's the answer i don't
86:50 - there may be some other benefit but
86:51 - those to me are always the the big too
87:01 - okay nikki says find has better
87:03 - performance than filter
87:05 - so uh
87:06 - filter loops over everything in the
87:08 - array find stops after it finds a match
87:11 - all right okay that's definitely cool um
87:15 - what time is it
87:16 - i'm crossing over into the other one so
87:19 - i just want to see really quick
87:22 - um
87:24 - would
87:26 - i don't know what the syntax is for fine
87:28 - can i just replace
87:30 - find with
87:35 - with this
87:43 - it's worth a
87:44 - shot and i can't i can't do it
87:58 - alright i'll switch it back for now and
88:00 - then i'll just look up fine on mdn
88:02 - um
88:03 - i didn't think it would work but stuff
88:05 - like that's always worth a shot because
88:07 - if it works it saves you a lot of time
88:26 - nikki says for this use case the
88:28 - performance difference would be
88:29 - extremely small though uh
88:32 - just training that es6 array methods
88:34 - muscle
88:37 - yeah you're right i mean it's
88:39 - it's cool if i get it in there and it
88:40 - works then great but it's not it's
88:42 - probably not going to really make a
88:43 - difference a noticeable difference
88:45 - but it'd be good to use the the better
88:47 - of the two
88:50 - uh christopher brown says why not embed
88:52 - the pdf and have it like an accordion
88:58 - yeah um
89:00 - is there
89:02 - some type of
89:04 - i'm assuming there's some type of uh
89:06 - react
89:08 - um plug-in that can
89:12 - easily help us embed a pdf i'd be open
89:15 - to that we do it elsewhere on the site
89:17 - for other types of content so
89:18 - uh we use this service to do it though
89:20 - called calameo um
89:24 - but if there was something in react that
89:26 - would work
89:29 - uh i'd be open to that
89:31 - still not quite as good as the um
89:34 - html
89:35 - is doing in html but
89:37 - it's it's better than having to download
89:40 - the pdf
89:48 - all right michael cruz said so
89:49 - everything before the last slash yeah
89:51 - for sure that's exactly right um
89:55 - so we just need
89:56 - yeah everything before the last slash we
89:58 - need to save that and use that as the
90:00 - base url
90:03 - oh okay nikki says you wouldn't need the
90:05 - additional map since find will return
90:08 - that element
90:09 - not an array
90:11 - oh okay cool
90:12 - so that'll actually clean things up
90:14 - quite a bit
90:15 - so i'm definitely going to try to use
90:17 - find because
90:18 - it's it's gonna have the added advantage
90:20 - of cleaning that up because it looks a
90:22 - mess right now
90:27 - all right michael creole says screen
90:29 - readers don't handle pdfs at all
90:31 - okay that's good to
90:32 - know and you know what if if i can try
90:35 - to push to have the professors put that
90:38 - content
90:39 - from the pdf into their profiles instead
90:43 - i can use that as a really good reason
90:46 - for screen readers right i mean who's
90:48 - going to argue against trying to make
90:49 - things accessible are you going to look
90:51 - like a terrible person if you don't care
90:53 - about
90:54 - you know people who are blind or vision
90:56 - impaired not being able to have your
90:58 - content so that's
90:59 - that's an automatic loss of the argument
91:01 - right
91:25 - the world says the menu pdf classic lol
91:28 - yeah i mean there are a lot of
91:31 - restaurant
91:32 - websites that are so so terrible
91:35 - especially when i travel i look up
91:37 - restaurants more often than i do when
91:39 - i'm at home
91:41 - and sometimes i just want to say like
91:42 - i'm just going to go to this restaurant
91:44 - and say like do you want me to make you
91:45 - a website right like
91:48 - um
91:49 - but then i i talked myself out of that
91:50 - because that would be a terrible idea
91:52 - i'd be doing these tiny websites for
91:54 - restaurants and probably not making that
91:55 - much money it would just be a big hassle
91:57 - but
91:58 - um
92:00 - i i just
92:02 - they're so bad i just want to do it
92:03 - sometimes
92:27 - oh okay cool so nikki's giving me some
92:29 - code here uh we may as well do it right
92:32 - now
92:33 - this would be pretty simple
92:35 - um
92:36 - so
92:37 - let's replace all these filters
92:40 - with
92:41 - find
92:42 - and then inside um
92:45 - the find
92:47 - i guess
92:49 - that would work but then we don't need
92:50 - map anymore so let's get rid of
92:55 - this
93:14 - whoa what just happened
93:28 - there we go
93:34 - so
93:37 - why is this not working
93:45 - all right cool
93:48 - let's see if i did that right this time
93:51 - definitely cut this down a bit so i
93:53 - really like that
94:01 - cool it
94:02 - worked and we can we can verify that
94:06 - actually let's see
94:08 - yep it works so we we have these here
94:11 - awesome
94:12 - um nikki thank you for that
94:16 - i like that that's a lot cleaner
94:36 - michael says christopher brown do you
94:37 - work for adobe
94:39 - so christopher's keeps on talking about
94:42 - the the pdf so
94:44 - um
94:46 - let's see
94:49 - chris is about to start going to uh
94:51 - boise code works because i couldn't get
94:53 - anyone to hire me having just done free
94:55 - code camp and a pro bonus i for my
94:57 - school
94:58 - all right cool
95:02 - um yeah good luck with uh
95:05 - uh with your your learning and with your
95:08 - job search
95:24 - all right cool got through everything in
95:26 - the live chat if i missed your question
95:27 - i'm really sorry please put it in the
95:29 - comments below this video or dm me on
95:31 - some social media platform
95:33 - um
95:34 - thank you for all the help
95:37 - definitely uh it was very helpful a lot
95:39 - of the suggestions that you had and i'll
95:42 - probably
95:43 - i don't know if i'll finish this
95:44 - component on tomorrow's stream or if
95:46 - i'll finish it up myself off stream
95:48 - we'll see
95:49 - but we'll probably still be working in
95:50 - react tomorrow
95:51 - uh probably stream again around the same
95:54 - time as we did today
95:57 - so thanks again for everything and thank
95:58 - you for watching
96:00 - i'll see y'all tomorrow and until then
96:02 - have a great day
96:19 - i got signed out
96:21 - of youtube somehow and so the stream
96:24 - keeps going all right
96:29 - how did this happen
96:40 - all right now i'm gonna stop streaming
96:41 - for real let's see if it works this time