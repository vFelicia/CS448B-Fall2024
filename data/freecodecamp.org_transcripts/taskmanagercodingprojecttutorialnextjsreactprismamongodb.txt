00:00 - this full stack web development course
00:02 - is designed to equip you with the skills
00:05 - to create a robust scalable Task Manager
00:08 - application from scratch the course
00:11 - integrates the dynamic duo of nextjs and
00:13 - react on the front end with Prisma as
00:16 - the omm for efficient database
00:18 - management using mongodb you'll gain a
00:20 - deep understanding of setting up your
00:22 - development environment designing apis
00:25 - managing databases and deploying a fully
00:28 - functional web application that
00:30 - efficiently handles real world tasks
00:32 - Wilson from the code dealer developed
00:34 - this course hello everyone in to this's
00:37 - video we're going to be creating a to-do
00:38 - list application that has sign up and
00:40 - sign in so here is the profile of the
00:44 - user that is currently signed in uh we
00:47 - can click the user and then we're going
00:49 - to be able to sign out or manage the
00:51 - account also we are going to implement a
00:55 - top loader here so when I navigate to
00:57 - the important tasks you're going to see
00:59 - there going to be a loader here okay and
01:02 - when I go to completed you're going to
01:04 - see the tasks that are completed and you
01:07 - also going to see the load as I navigate
01:09 - to other
01:10 - pages okay and uh so this is the main
01:13 - page we can uh create a new
01:16 - task I'm going to say
01:19 - hello
01:21 - world and then I'm just going to say
01:24 - hello
01:27 - world okay world
01:30 - and uh here I'm just going to set a
01:32 - random date and then uh we can toggle if
01:35 - the task is completed or it's important
01:38 - so I'm just going to make this important
01:40 - and complet it it's not going to be
01:42 - completed so when I click create task
01:45 - you're going to see there it is the
01:47 - newly created task is going to be at the
01:49 - top hello world we can togg or completed
01:53 - so when I click complete as you can see
01:55 - we have we have a toast that shows us
01:58 - the task has been updated we can you
02:00 - know update the task as well as as many
02:03 - times as you want uh we can also delete
02:07 - any of these tasks when I delete it's
02:10 - going to show us the task has been
02:13 - deleted all right and uh so when I go to
02:19 - the do it now page you're going to see
02:22 - the hello world is going to be there but
02:23 - when I click
02:25 - incomplete it's it's no longer here so
02:28 - it's completed as you can see now the
02:30 - Hello World Is Now Inc
02:32 - completed okay and uh this uh project is
02:36 - also uh
02:38 - responsive we can click I mean we can
02:41 - also add the task from this pattern here
02:43 - as well okay so to show you the project
02:46 - responsive I'm going to make the screen
02:49 - smaller so I am going to select for
02:53 - iPhone 12 Pro as you can see it looks
02:56 - even good on iPhone we can create task
03:00 - we can you
03:01 - know show the sidebar and hide the
03:05 - sidebar uh here's how it looks okay it's
03:10 - uh really
03:12 - responsive as you can see the sideb is
03:14 - going to be hidden on smaller screens
03:18 - okay we have multiple ways to create the
03:20 - tasks so we have a task and this button
03:23 - here so this pattern is always is always
03:25 - going to be at the top so when I make
03:27 - the screen even smaller as you can see
03:30 - it's always going to be at the top so
03:32 - when you scroll all the way down here
03:33 - you can still click and add a new task
03:36 - you can open and close the
03:40 - sidebar okay so that's it for the
03:42 - demonstration for this project so I just
03:45 - want to show you why I was away I was on
03:47 - holiday and the other thing I was also
03:49 - building my website so it's still under
03:53 - development so I'll just show you a
03:55 - quick demonstration so here's the
03:58 - homepage
04:00 - all right and uh we can toggle the light
04:04 - and dark
04:06 - mode okay and uh we have the courses
04:09 - page so it's
04:11 - loading and uh here's the only video I
04:15 - have at the moment because I'm still
04:16 - testing so you can you know kind of uh
04:20 - sign up for the if you want to see the
04:22 - video uh some resources so if you want
04:26 - to see more you have to sign in lessons
04:29 - you can click of these lessons you can
04:31 - watch it on YouTube you can view the
04:33 - source code and we can go to the blogs
04:36 - so this data is just random so I was
04:38 - just testing how it would look and style
04:41 - this page and this is how it's going to
04:44 - look
04:45 - like okay I'm still making the content
04:48 - for this website so maybe next year I
04:51 - should have a lot of content to put here
04:54 - uh let's say we want to
04:57 - um we want to watch this video so when I
05:00 - click it's going
05:01 - to take us to the signin page and then
05:04 - let's sign in so if by the way if you
05:06 - want to send me an email about anything
05:08 - just you know my email
05:10 - already um just go to the uh to the
05:13 - about section on YouTube you can see my
05:15 - email or you can see it when I send in
05:17 - there was my email there so now uh we
05:20 - can go to
05:24 - courses and I can click this
05:27 - video and uh
05:30 - oops we're going to be able
05:32 - to watch this
05:35 - video okay and uh there's going to be
05:38 - the description here we can
05:41 - also change the theme to a light theme
05:47 - we can open the sidebar
05:49 - here oh I need to fix this button here
05:52 - on on the light theme so it doesn't show
05:54 - nicely here so I'm just going to change
05:56 - this color
05:57 - here uh we can now now go back to the
06:00 - homepage we can go to the resources we
06:02 - can see resources we can
06:05 - filter uh these resources also the
06:08 - lessons we can filter if we have a lot
06:10 - of
06:11 - lessons uh I didn't put the filtering
06:13 - system on the blog section but I'm still
06:16 - developing this
06:17 - website uh I'll will let you know if
06:20 - there's more stuff that have that have
06:22 - been added but uh if you want to check
06:25 - it out just uh visit the Cod dealer.com
06:27 - and you can check it out for yourself
06:31 - okay so yeah uh I'll see you in the
06:34 - video all right so I'm going to start by
06:36 - creating a new project so go to the
06:38 - terminal make sure you're in the folder
06:40 - which you want your project to be in I'm
06:42 - going to run MPX and then create and
06:44 - then next app and then we're going to be
06:47 - using the latest version I'm just going
06:49 - to name this app my tasks you can name
06:52 - this whatever you
06:53 - want so you're going to be asked if you
06:56 - want to use uh typescript you can select
06:59 - yes one no it's up to you I'm going to
07:01 - be doing yes and then T1 CSS yes we're
07:04 - not going to be entirely using T1 CSS
07:07 - but we might want to use some utility
07:08 - classes from Tailwind so I'm just going
07:11 - to do yes and then no for the source
07:13 - directory and then yes for the up rter
07:16 - and then it's going to create the
07:18 - project for you just wait it's going to
07:21 - take a few seconds depending on how
07:22 - quick your internet
07:25 - is
07:28 - okay uh it should be done by
07:32 - now okay so once it's done you can CD
07:35 - into that folder or you can manually
07:37 - open the folder like this and
07:39 - then select that folder and then select
07:42 - now we're in the folder let's go to the
07:46 - terminal so in the terminal we can run
07:50 - mpm
07:53 - runev uh this should be in Local Host
07:56 - 3000 so this is the final project
08:00 - okay so
08:03 - um it should be Local Host
08:09 - 3000 okay it's taking time to compile
08:12 - I'm going to close
08:15 - this okay so let's go in the app
08:18 - directory in the page we're going to
08:20 - collapse the main first off let's see if
08:23 - it's working there it is there's the
08:24 - stter page I'm going to collapse the
08:28 - main and remove
08:33 - this okay and then there's an empty main
08:36 - let's go to the global CSS in the global
08:40 - I'm just going to get rid of everything
08:42 - except the Tailwind
08:44 - utilities okay so now it's empty so um
08:49 - let's see what can we start with let's
08:52 - start
08:53 - with uh the global okay so uh in here
08:59 - here I'm just going to set a background
09:01 - color and a font size and a color a def
09:04 - color of white in the
09:07 - body okay so body like this actually I
09:11 - think I will return back some Styles
09:14 - here uh I'll leave the root as it is and
09:18 - the
09:19 - media I'll just get rid of stuff in the
09:22 - body and then why do I have Auto
09:25 - completion okay here I'm going to do
09:28 - background color so this is the
09:31 - 188 188 okay black color and then the
09:34 - default color is going to
09:36 - be white okay so this is our nice
09:39 - background I'm going to give it a height
09:44 - of 100
09:46 - VH okay that's for the body so let's
09:49 - start with the sidebar and then we do
09:53 - the main content so for the sidebar I'm
09:57 - going to create some components
10:03 - components
10:05 - components for styling it's up to you
10:07 - you can use SAS or you can use start
10:10 - components but I'm way I'm very used to
10:14 - start components
10:16 - npm it's up to you what what you use so
10:20 - uh styled
10:25 - components
10:27 - components okay so what we need to do
10:30 - now is just work on the
10:33 - sidebar okay so for the
10:38 - sidebar
10:40 - um let's create a oops a new folder in
10:43 - here it's going to be
10:49 - sidebar and then we're going to create
10:51 - another component it's going to be
10:56 - button okay so let's start with the
10:57 - sidebar let's say sa a sidebar here
11:00 - sidebar.
11:01 - TSX so this is going to be a client
11:04 - component so make sure you do use client
11:07 - at the top we're using next
11:09 - 13 use
11:11 - client okay so we should have a
11:15 - sidebar so uh we want to uh render the
11:22 - sidebar okay so where can we show this
11:27 - sidebar
11:29 - uh let's create a new
11:31 - folder let's name
11:34 - it
11:36 - um
11:40 - providers you can create it outside of
11:42 - this app directory that's fine but what
11:45 - is better to create in the app
11:47 - directory okay so let's go to the
11:51 - layout lay out in here above the
11:55 - children we're going to render the side
11:58 - Side
11:59 - Bar
12:03 - sidebar okay so we should have a sidebar
12:06 - right
12:06 - here okay sidebar
12:11 - so uh we need to display Flex the sideb
12:16 - and the main content so I'm just going
12:19 - to go to the page I'm just going to
12:23 - say main
12:26 - oops
12:27 - content
12:30 - wrong
12:32 - spelling
12:34 - content okay so there sideb content so
12:37 - we're want to display Flex so this is
12:39 - the sidebar and the content so to do
12:42 - that to display Flex we need to go to
12:45 - the layout so the sidebar and the
12:47 - children so we're going to put this in a
12:51 - wrapper okay so the rapper is going to
12:55 - be in the providers I'm just going to
12:56 - name it global
12:59 - Styles
13:02 - provider
13:04 - dot so the global sty provider you can
13:08 - it's a TSX file
13:11 - okay Global
13:14 - oops style
13:17 - provider.
13:19 - TSX like that so this is going to be use
13:22 - client as well it's a client
13:25 - component okay we're going to create a
13:28 - boiler PL like this uh we're going to
13:31 - create an
13:32 - interface interface let's name it
13:36 - props okay so it's going to be children
13:40 - in here it's going to be the react node
13:43 - so it's going to be our app which is
13:45 - going to be the children so here
13:47 - children and this is should be a
13:49 - fragment so make sure you destructure
13:52 - here children from props okay so we
13:56 - we're going to wrap our entire
13:57 - application with uh Global provider
14:02 - so if we go to the
14:06 - layout here we need to wrap this with
14:09 - the
14:11 - global style provider like
14:14 - that and then take this and WRA the
14:17 - children as well okay so whatever Styles
14:21 - we put in the global are going to be
14:22 - reflected in the entire
14:24 - application so here I'm going to say con
14:27 - global
14:29 - you can name it Global Styles oops
14:33 - Styles equal to
14:37 - styled and then dot
14:40 - div like
14:42 - that
14:44 - oops start
14:47 - div
14:52 - uh
14:54 - shift for some
14:57 - reason my escapee button is not working
15:03 - okay I'm using a gaming keyboard so it
15:05 - doesn't have this tempor R so I have to
15:09 - hold shift out and escape to do this so
15:12 - it wasn't working okay so you take this
15:16 - and put it
15:18 - here okay so make sure you import St
15:21 - from style components like this if
15:24 - you're using
15:25 - components okay so to see if this is
15:28 - working we can do background and then
15:31 - let's set to Red so as you can see now
15:34 - the background is set to Red that means
15:36 - it's
15:37 - working so uh in here what I'm going to
15:41 - do uh I'm just going to give it a
15:44 - padding padding padding top and bottom
15:48 - I'm just going to set that to
15:50 - 2.5 RAM and then I'm going to do display
15:55 - Flex display flex and then Gap
15:59 - I'm going to set the the Gap to 2.5 Ram
16:01 - as well and then I'm going to set the
16:03 - height to
16:05 - 100% let's save okay so there it is so
16:09 - now we just need to go back to the
16:11 - sidebar here we're going to do
16:14 - con
16:16 - sidebar sidebar styled we're going to
16:19 - style this sidebar equal to
16:22 - styled so for the sidebar uh this should
16:26 - be well I think this uh
16:29 - na okay we can do st.
16:33 - na style. na like
16:37 - that
16:43 - oops okay styn so make sure you import
16:47 - style from style
16:49 - components like that oops import styled
16:53 - from style components uh copy this and
16:55 - replace this wrapping div
16:59 - okay so uh what we're going to do
17:03 - now we need some variables for our
17:06 - colors so just in case we want to change
17:08 - this to light dark mode whatever color
17:10 - you want to change so what I'm going to
17:13 - do I'm going to introduce some variables
17:18 - okay so what I'm going to do for that
17:19 - I'm going to uh provide you with the
17:22 - file which has
17:24 - variables so some of these variables
17:26 - we're not using them so these are the
17:29 - variables I'm using
17:31 - for code
17:33 - dealer.com
17:36 - so this is my website I'm using so these
17:39 - variables here so I was a bit lazy to
17:42 - kind of so here we have light and dark
17:45 - mode okay so so these variables you're
17:48 - going to see here are the variables that
17:49 - are used here okay so now I am this
17:55 - website is still under development by
17:56 - the way so it might be a bit slow to
18:00 - your teste so we have lessons we have
18:02 - resources and stuff all right so what
18:05 - I'm going to do is I'm just going to
18:07 - take those variables which I used in the
18:09 - project I'm going to create a new folder
18:12 - not not inside components but inside app
18:14 - I'm just going to name this
18:17 - context context I'm just going
18:21 - to put a copy a file here called themes
18:25 - so these are just variables for the
18:26 - colors we're not going to be using
18:29 - a lot of these variables okay so we're
18:33 - just going to be using a
18:35 - few okay so the ones we're not using you
18:37 - can remove them later on okay so here is
18:40 - just uh an object so we have a default
18:44 - this should be like a dark mode that's
18:46 - the default and then we have a light
18:48 - mode you can add as many themes as you
18:50 - want so this this just an array of
18:53 - objects that has color variables in
18:55 - there okay so we have name color
18:58 - whatever okay so now uh what we're going
19:01 - to do we're going to be creating a
19:04 - global context provider I'm just going
19:06 - to say Global I'm just going to you can
19:09 - name it Global context provider or just
19:11 - Global provider that's entirely up to
19:15 - you okay provider.
19:20 - JS okay so now in here it's going to be
19:25 - client
19:27 - component going to be a
19:29 - client so in the global uh we're going
19:32 - to
19:33 - create
19:35 - um context for the
19:38 - updating and the actual context okay so
19:43 - here we have importing the create
19:45 - context and use
19:48 - State okay uh we also need use
19:52 - context so we're going to be
19:55 - creating
19:56 - export con
19:59 - Global should be Global
20:01 - context is go to create context and then
20:05 - export cons
20:09 - global
20:11 - global update context just in case we
20:14 - want to update this context and then
20:17 - we're going to do
20:18 - export con Global
20:21 - provider uh the children we're going to
20:23 - wrap it's going to be our entire
20:25 - application so we're going to wrap with
20:26 - the global
20:28 - provider and then here we're just going
20:30 - to uh
20:34 - return okay I'm just going to get rid of
20:37 - this Global
20:38 - State uh okay
20:42 - so we have the
20:46 - update okay so we have the context
20:49 - provider uh the value here is not going
20:51 - to be the global State we're going to
20:53 - pass some Val values here later on so
20:55 - the first one we need is theme which is
20:58 - going to be the variables of our colors
21:00 - so that's the theme that's why I'm using
21:03 - theme but we haven't created the theme
21:06 - state yet so we need to create a state
21:09 - for the theme okay so I'm going to say
21:11 - con it's going to be selected theme so
21:14 - the selected Theme by default it's going
21:17 - to be zero one because arrays are zero
21:20 - um zero index based so if you remember
21:24 - our colors is an array of objects so
21:26 - zero is the first object
21:28 - and the variables within there so that's
21:30 - the first theme zero if you have another
21:32 - theme it's going to be one the second
21:34 - one is going to be one and so on okay so
21:38 - um so we have the selected theme set to
21:40 - zero and then I'm going to do con theme
21:44 - equal to
21:45 - themes we need to import themes and then
21:48 - select the theme so by default the theme
21:50 - is going to be the
21:54 - first so the themes this an uh an array
21:59 - themes it's an array and then the
22:01 - selection is going to be zero that's the
22:04 - the index here in the state and then we
22:06 - are putting that to the state which is
22:08 - selected theme which is zero if we shift
22:10 - that to one if we update the state it's
22:12 - going to be one it's going to be the
22:13 - next theme okay so we are sending that
22:17 - value here so for us to be able to use
22:20 - these
22:21 - values uh we need to go to
22:24 - the uh
22:26 - providers
22:28 - providers uh we need to create another
22:31 - one called
22:32 - context provider because the page the
22:35 - layout this is a server
22:38 - component provider so we cannot use the
22:43 - client client we can use uh the client
22:46 - like um States like use effect or use
22:50 - use state in here the component must
22:55 - have uh use client at the top for us to
22:58 - be able to use that okay so TSX context
23:02 - provider.
23:04 - TSX
23:06 - use
23:08 - client react functional component and
23:12 - Export we're going to do interface
23:16 - props oops interface
23:20 - props so here we're going to do children
23:23 - it's going to be react
23:24 - node and then here be the children so we
23:30 - need to do Global
23:32 - provider
23:35 - Global
23:37 - Pro
23:39 - provider and make sure you import Global
23:42 - provider and then wrap the children like
23:45 - that get rid of the
23:49 - div okay
23:53 - so like that so now we should be able to
23:57 - have
23:58 - access to the state but we haven't
24:02 - wrapped our entire application yet with
24:04 - this context provider so go to the
24:08 - layout and we need to wrap this with the
24:13 - context provider okay so uh I'm going to
24:17 - do
24:20 - context
24:22 - provider like that and then
24:26 - wrap perfect so how do we know if it's
24:31 - working well if you remember in the
24:34 - global provider we sending theme as a
24:36 - value so we need to get this value the
24:38 - theme okay so let's see what the theme
24:40 - this theme is so here when we have over
24:43 - it shows you what it has so let's go to
24:47 - the sidebar so for us to get
24:50 - theme um we need a way for us to
24:54 - get oops to get this theme okay so for
24:58 - us to get that theme we need to create
25:02 - two more
25:03 - functions okay not we need one function
25:06 - to get the theme but we need one
25:07 - function to update and one
25:09 - to get whatever values here we are
25:13 - sending okay and for the update updating
25:16 - as well so for us we need to
25:20 - export for us to be able to use the
25:23 - context export const we're going to be
25:26 - use Global state
25:28 - okay and then it's going to return um
25:31 - use
25:32 - context okay so it's a function
25:34 - returning use context and then we're
25:36 - going to be using the global context
25:38 - okay so now we're good to use the the
25:41 - values we are sending here but just in
25:43 - case we want to update we need to do the
25:45 - same thing for the global update and
25:48 - then we're going to be using the global
25:49 - update
25:50 - context okay so for us to be able to
25:53 - access these values we need
25:56 - to get them from from use Global State
25:59 - okay so what we need to do go back to
26:01 - the sidebar we can say con let's dist
26:05 - structure we need to get the theme okay
26:08 - equal to use
26:11 - global
26:15 - global
26:17 - uh use
26:19 - Global
26:22 - State I hate this auto completion is
26:25 - issu okay
26:28 - glob state it should be coming
26:31 - [Music]
26:34 - from let's do
26:41 - at app and then slash
26:46 - context Global
26:48 - provider okay so now let's C
26:56 - this uh uh what issue do we have
27:00 - here
27:02 - theme okay so let's go
27:05 - back the theme we're sending theme
27:12 - Here State let's go back to the
27:16 - sidebar and let's click
27:20 - this okay this is rather
27:24 - weird
27:26 - um
27:39 - okay I'm just trying to see why uh the
27:42 - theme is not
27:54 - working and
27:56 - find
28:02 - okay let's uh try this uh go back to
28:06 - sidebar let's do
28:11 - context context let's see what we have
28:17 - context okay so it's undefined so we
28:20 - must have done something
28:22 - wrong so let's go to the
28:26 - provider
28:29 - okay so yeah this is oops context
28:32 - provider it should it should be Global
28:37 - provider provider like that the one
28:40 - coming from the context not Glo I didn't
28:43 - notice I was using Global style
28:46 - provider okay so this should be Global
28:50 - provider like that so if we go back to
28:53 - the sidebar if I
28:56 - save
28:59 - uh say Global okay go
29:03 - back so here I'm just going to set as an
29:06 - empty object for
29:08 - now okay so now if I go back to the
29:11 - sidebar as you can see now we have an
29:14 - object which is the a property of theme
29:17 - at the moment but we are going to
29:18 - destructure this we are only want to get
29:21 - the theme and then let's see this in the
29:24 - console as you can see now we have those
29:26 - variables
29:28 - for the colors
29:30 - okay by the way I'm using uh I'm using
29:34 - it I'm using um an extension called
29:38 - console ninja so I don't need to go to
29:40 - the browser to check the console I can
29:42 - check I can see it from here without
29:43 - going in the browser okay so now let's
29:47 - uh Begin The Styling so for us to be
29:49 - able to
29:50 - access this uh the theme Styles not the
29:53 - Styles I mean the variables in the
29:56 - Styles so we're going to pass this as is
29:57 - a prop in here going to name it theme
29:59 - and then we pass the theme we're going
30:01 - to be able to access it here so uh what
30:04 - I'm going to do I'm going to start by
30:07 - giving it a width okay a width and a
30:11 - height so for the
30:14 - width for the width I am going to do
30:18 - props okay so I'm the props that we have
30:21 - so we have um
30:24 - props uh we oop
30:28 - we're going to do props do theme do
30:32 - sidebar
30:34 - width okay so this is the we have a
30:36 - variable called cyber
30:39 - WID okay uh let's check it out let's
30:44 - inspect the sidebar to see if it has the
30:46 - width okay as you can see now it has the
30:49 - width nice that's pretty
30:52 - good so uh Side by with uh what we're
30:56 - going to do now I'm going to give it a
31:00 - position of
31:03 - relative position relative and I am
31:07 - going to give it a background
31:09 - color
31:10 - background it's going to be prop props
31:13 - do theme uh so the color I'm going to
31:16 - give it is going to be color
31:18 - bg2 color
31:21 - bg2 okay so Props and then the prop we
31:24 - want is called theme and then the
31:26 - variable is color
31:28 - pg2 and then I'm going to give it a
31:31 - border so the border is going to be two
31:33 - P two pixels solid and then the color is
31:36 - going to be border color border color uh
31:41 - color number two I believe border color
31:43 - two that's the variable
31:44 - name and then I'm going to give it a
31:46 - border
31:48 - radius of one ram like that so there it
31:54 - is okay so
31:58 - um seems like
32:03 - inspect
32:04 - inspect okay so we want to display Flex
32:07 - these items so the nav and the main okay
32:10 - we want to display Flex that so now uh
32:13 - we need to go back to the global STS
32:17 - provider so that's where we need to do
32:19 - uh the display
32:21 - Flex okay actually we have a display
32:24 - Flex here Global
32:25 - Styles uh uh let me see why it would be
32:31 - working
32:36 - inspect H Global star
32:39 - provider uh let's go back to the
32:45 - layout okay so it's I don't know
32:50 - why it's not
32:56 - working
33:02 - okay uh open
33:04 - This Global
33:13 - Styles I have no idea why it's it's not
33:16 - working but it
33:17 - should uh have a flex let me inspect
33:20 - this
33:25 - so
33:27 - okay so like this it should yeah it
33:29 - should have a
33:32 - flex which is weird I don't know why
33:34 - it's not
33:38 - working okay let's leave it for
33:52 - now okay actually let's try to restart
33:55 - this project let's see
33:58 - why it's not working as
34:06 - intended okay so let's
34:23 - refresh okay I think I might know why
34:26 - this is an issue so let's go to the
34:30 - context
34:32 - provider uh what I'm going to do is I'm
34:35 - going to do a use
34:38 - effect okay
34:41 - so um going to go here I'm going to
34:45 - create a state I'm going to say is
34:49 - ready set is ready so here I am going to
34:53 - do react to use effect so
34:57 - I'm only going to display
35:00 - when the
35:02 - page okay so when the page is is uh you
35:07 - know fully loaded so I'm going to set a
35:09 - set
35:11 - timeout set time out uh after 200
35:17 - milliseconds after 200 milliseconds and
35:19 - then I'm going to set is ready to
35:22 - True okay um if is not ready I'm just
35:28 - going to return now and
35:31 - then I'm going to
35:35 - save okay nice so
35:38 - now there it
35:40 - is for some reason there's a weird uh
35:44 - thing going on with the Border I don't
35:46 - know
35:48 - why let me
35:51 - inspect
35:53 - n oh it's border right it should be
35:57 - border if we go to the sidebar it should
36:01 - be just border not border
36:04 - right okay so now we have the border for
36:08 - the
36:10 - sidebar um let's just focus on the
36:14 - sidebar
36:18 - content uh I think I'll close everything
36:20 - for now if we need it we can open it
36:25 - later
36:28 - okay so for the sidebar I am going to
36:30 - start with let's start with the
36:36 - profile let's do
36:39 - profile so we have profile and then we
36:42 - have
36:43 - profile
36:46 - overlay overlay I'm going to explain
36:50 - where this T later and then we have an
36:56 - image so so make sure you import image
36:57 - from next
36:59 - image and then the width I'm going to
37:02 - set that to
37:04 - 70 and then height I will also set it to
37:08 - 70 okay so for the source I am going to
37:13 - just put an image in the public folder
37:16 - it's called Avatar one you can put
37:18 - whatever image you want so this is
37:21 - temporary uh when we connect with our
37:24 - click authentication we're going to be
37:25 - using that image
37:27 - so here I am just going to do
37:31 - Avatar
37:34 - Avatar
37:36 - 1.png I think it should show
37:46 - now it
37:48 - should okay there it is uh because this
37:51 - public folder is already been saved so
37:53 - we don't need to import like that we can
37:55 - just do it like this we don't don't need
37:56 - to include the public
37:58 - folder okay so we have the image uh
38:04 - let's make sure this image is in a
38:08 - container
38:11 - image all right so after that we are
38:15 - going to have an
38:20 - H1 and then we're going
38:22 - to name
38:25 - this um
38:31 - uh
38:32 - oops let's do a span actually
38:39 - span where is the
38:46 - calculator okay I'm just going to put a
38:49 - fake
38:50 - name so we have the name and the
38:55 - image okay after that uh we are going to
38:59 - do
39:00 - some na
39:03 - items we're going to do
39:05 - Ur
39:07 - n
39:09 - items feel free to
39:12 - use uh tail in CSS by the way feel free
39:17 - um I'm also going to create a new folder
39:20 - I'm just going to name it
39:22 - UTS inside the
39:25 - app
39:30 - UTS um I'm just going to add a file in
39:33 - here in the U it's called menu so here
39:35 - it's just uh the menu so we have the ID
39:39 - title
39:41 - icon and
39:43 - Link so uh we the
39:48 - first item here it's an array of objects
39:52 - the first item is going to be the
39:54 - homepage the second one is going to be
39:56 - the input important the third one is
39:58 - going to be the completed and then the
40:00 - fourth one is going to be do it now so
40:02 - the icon we need to import these icons
40:04 - so it's importing from
40:07 - icons so what I'm going to do is I'm
40:09 - going to paste another file here it's
40:12 - icons so some of these icons we're not
40:14 - going to be using them so we I'm going
40:16 - to delete this later on I'm just pasting
40:18 - the icons in here they're coming from
40:20 - font awesome what we need to do is get
40:24 - the font awesome CDN
40:31 - CDN uh what you can
40:36 - do F awesome
40:41 - CDN where's the
40:44 - CDN okay so copy
40:47 - this copy the link tag so uh what you
40:51 - can do is you can use react icons or you
40:55 - can use Font awesome it's up to you so
40:58 - go back to the
41:00 - layout here we're just going to do head
41:03 - and then I'll just p
41:05 - in the link of the
41:09 - CDN okay so change this to like this and
41:14 - then save so hopefully we should have
41:15 - some icons oops we're not looping the
41:19 - menu yet so what we need to do is Loop
41:21 - this map this okay so we go to the
41:26 - sidebar we that's where we're going to
41:28 - do the magic of mapping
41:31 - through so here we need to do menu we
41:33 - need to import
41:37 - that so we need to
41:40 - import
41:43 - menu at
41:46 - SL
41:48 - app then you toose and then menu like
41:52 - that so I think this a default
41:55 - export
41:57 - okay
41:58 - so like that so now we just need to map
42:01 - through
42:05 - this do
42:07 - map
42:11 - item okay so now we need to
42:16 - return let's just return a div but we're
42:20 - not returning a div we're going to
42:22 - return An Li okay so here we're going to
42:26 - return an all you can give it a class
42:28 - name of nav item if you
42:31 - want and then in here we're going to do
42:36 - item do icon and then we're going to
42:40 - import a link from next link and then
42:44 - it's going to be item. link not path
42:49 - we're going to go to the link and then
42:52 - here it's going to be icon item. title I
42:56 - believe like that so there it
43:01 - is nice pretty
43:04 - good so um what we need to
43:08 - do is when I
43:11 - click uh this
43:14 - lii I want to push to the link
43:20 - okay I'm going to say
43:23 - con
43:25 - handle
43:27 - and a
43:29 - click and a
43:32 - click okay so here I'm going to do
43:33 - router do
43:36 - push I'm going to say link I'm going to
43:39 - push to the link I'm going to say Link
43:41 - in here going be a
43:45 - string be router so we need to import
43:48 - router con router equal to use router
43:52 - from next
43:53 - navigation and then save
43:57 - handle click okay copy this
44:01 - function uh here on the AL we do
44:07 - on click oops let's do a class name
44:11 - first
44:12 - actually so for the class name I'm going
44:16 - to give it a na item so let's do a
44:18 - template
44:19 - literal
44:22 - oops uh templ Lal and then let's do na
44:28 - item okay after that we are going to do
44:30 - on
44:32 - click on click let's do a cic
44:37 - function and then here item. link so
44:40 - when you click it's going to Route the
44:42 - item.
44:43 - link perfect
44:46 - so I'm going
44:49 - to
44:50 - also uh get the path
44:54 - name okay so the path name name so when
44:56 - I click completed it's going to go to
44:58 - completed so I want to get the path
45:01 - name okay so to get the path name I'm
45:05 - going to say
45:06 - con path name equal to use path name the
45:12 - path name hook coming from next
45:15 - navigation okay like that
45:20 - so um I want
45:23 - to make sure this give this green active
45:26 - here so the the pathum that's active is
45:29 - going to have this
45:30 - green green color here on the side okay
45:33 - so when I click this it's going to be
45:35 - the active one when I click this it will
45:37 - be the active one and so forth
45:40 - okay
45:42 - so uh path
45:45 - name here I'm going
45:47 - to do like this I'm going to say path
45:50 - name if path name equal
45:54 - to
45:57 - path name equal to
46:01 - link okay it's instead of doing item.
46:04 - link I'm just going to do this
46:07 - Con uh
46:10 - link you go to item. link okay like that
46:15 - instead of so I can just do link
46:18 - here so if it it's equal to link the pth
46:21 - name goal to link I'm going to set that
46:23 - to active otherwise not an empty string
46:27 - okay so if it's like this to this link
46:30 - it's going to be active if I'm on this
46:32 - link it's going to be active Okay and
46:35 - the other one is going to be an empty
46:37 - string perfect so instead of item. Link
46:40 - here I'm just going to do
46:43 - Link Link let's make it
46:48 - shorter all right so I don't
46:52 - think okay so uh we just need to add the
46:57 - sign out button it's not functional but
47:02 - actually we're going to add it later we
47:04 - need to create a button component which
47:05 - we don't have yet so now let's style
47:11 - this let's go down to the
47:14 - Styles let's start with the items so
47:19 - this I'm going to put up here I'm going
47:21 - to do
47:22 - display
47:24 - Flex uh let's do Flex direction to
47:27 - column justy content space
47:31 - between like that all
47:34 - right so I'm just going to say
47:39 - button I'm just going to put in empty
47:42 - button there okay so it's not just to
47:45 - put a
47:48 - placeholder all right so I'm going to
47:51 - give it a color so the color here I'm
47:54 - going to do color
47:56 - I going to do color gray three gray
47:58 - number
47:59 - three and then I'm going to Target the
48:03 - profile so for the profile I'm going to
48:05 - say margin top and bottom actually not
48:09 - top and bottom everywhere 1.5
48:11 - RAM and then I am going to do position
48:16 - relative and then I'm going to do a
48:19 - padding one ram top and bottom and then
48:24 - 0.8 left and right
48:27 - and then I'm going to do order radius
48:31 - I'm going to do one
48:32 - r with a
48:34 - radius and then I am going to
48:38 - do cursor I'm going to set that to
48:41 - pointer and then font weight I'm going
48:43 - to set that to
48:45 - 500 and then I'm going to give it a
48:47 - color so for the color I'm going to give
48:50 - it a color gray zero or you can give it
48:54 - a color white
48:57 - okay I think gr zero does the job
49:00 - fine okay I am going to do
49:04 - display
49:05 - flex and then align items align items to
49:11 - Center all
49:13 - right so
49:16 - now I'm going to save
49:24 - this all right so let me inspect so we
49:28 - have the profile
49:31 - overlay
49:33 - uh use a
49:36 - button okay so now we need to do the
49:39 - profile
49:42 - overlay
49:43 - okay so I after
49:48 - the here I'm going to do do
49:52 - profile
49:54 - overlay
49:57 - overlay I'm going to do
50:00 - position
50:03 - absolute position absolute I'm going to
50:05 - do top zero left zero and then with 100%
50:11 - height 100% I'm going to do a backdrop
50:16 - filter I'm going to do blur I'm going to
50:18 - give it a a
50:24 - blur oops
50:26 - BL I'm going to set that to 10
50:29 - pixels and then I'm going to give it a z
50:32 - index and a background and the
50:33 - transition and the Border
50:36 - radius like that and then finally I'll
50:39 - give it an opacity of
50:42 - 0.2 and a border of two
50:46 - pixels so there it is so it's not that
50:50 - bright but it's there that's it's like
50:52 - the overlay okay so when we have a it's
50:56 - going to be more bright
51:00 - okay nice so after that I am going to
51:05 - Target the H1
51:09 - within within the profile I'm going to
51:11 - give it a font size of 1.2 Ram like
51:15 - that uh I think I'll do display Flex
51:20 - Flex Direction column like
51:23 - that okay I think
51:26 - I think that does it uh
51:30 - reduce I think the line it is way way
51:34 - too
51:35 - much let me check here actually we're
51:38 - using different fonts so I'm going to
51:40 - change the
51:41 - font I leave it as is actually line
51:45 - height I'm going to do
51:47 - 0.04
51:51 - oops uh
51:54 - 0
51:57 - seven let's do
52:04 - two
52:07 - 1
52:10 - 0.9 I don't know just find what you
52:22 - like I say I don't know
52:42 - ah okay I'll leave it like
52:45 - that okay
52:48 - so I am going to
52:51 - Target the
52:53 - image and then I'm going to Target the
52:55 - H1 I'm going to set position relative
52:59 - and give them Z index of
53:02 - one okay so for the
53:05 - image I'm going Target the image again
53:08 - I'm going to say Flex
53:10 - shrink I'm going to do zero I'm going to
53:13 - set display inline block overflow to
53:15 - Hidden and I'm going to give it a
53:19 - transition of
53:21 - 0 5 seconds is like that
53:28 - nice all right so I'm still going to
53:31 - give it WID and height of 100% of um 70
53:35 - pixels and the actual
53:38 - image
53:41 - with width and
53:44 - height it's already been
53:47 - set okay so nice it's looking pretty
53:50 - good so we just need to work on the H
53:54 - have
53:57 - effect
53:59 - okay
54:01 - so from let me collapse this profile
54:05 - overlay
54:07 - collapse so we have the
54:11 - image okay so I'm just collapsing this
54:13 - so I can see where I'm going with the
54:19 - Styles okay so what I'm going to do
54:22 - after the image I'm going to collapse
54:26 - I'm going to
54:27 - Target the direct
54:30 - H1 uh within
54:35 - the uh where are we still in the
54:39 - profile
54:42 - yep
54:44 - so I am going to clamp the font
54:50 - size
54:54 - okay so I'm just going to clamp the font
54:56 - size so depending on the screen size
54:59 - it's going to be smaller and smaller and
55:00 - smaller and smaller and
55:03 - smaller okay so I'm going to give it the
55:06 - margin left as well of one
55:10 - ram and line height of 100% like
55:14 - that okay I think I'll reduce this to
55:18 - 0.8 0.8 but in the original I'm
55:22 - using I'm using one ram so it's to you
55:26 - like that so that's good so now we need
55:31 - to do on H when we have this
55:36 - profile it should be end H so when we
55:39 - have the
55:41 - profile what time is it when we have the
55:44 - profile I want the profile
55:46 - overlay
55:48 - profile
55:50 - overlay I am going to give it opacity of
55:54 - one
55:55 - opacity one and then the Border I'm
55:58 - going to set it to border two pix two
56:00 - pixels and
56:02 - then a color of Border color too like
56:06 - that so when we have her as you can see
56:10 - now
56:11 - nice and the
56:14 - image remember we are we have set the
56:18 - parent of the image the Overflow to
56:20 - Hidden so the scale I'm going to do 1.1
56:24 - when you have as you can see so the
56:26 - Overflow of the parent of the image is
56:27 - set to Hidden so the image is not going
56:29 - to overflow the
56:31 - container okay nice nice uh
56:35 - effect so now now we have that so we
56:40 - just need to style the items
56:43 - here so I'm going to be collapsing the
56:46 - profile for now and then we have
56:51 - enough
56:53 - items
56:55 - n
56:58 - items
57:01 - okay so for the na
57:04 - items
57:07 - um I'm going to give it a
57:15 - padding
57:17 - padding uh I'm just going to set it to 0
57:21 - 2.6
57:22 - RAM and one ram
57:25 - top and bottom point
57:28 - 6 and
57:30 - then actually this should be enough item
57:34 - the Ali the list item like
57:37 - this all
57:40 - right uh I'm going to set the padding
57:43 - left to
57:46 - 2.1 2.1 Ram like
57:50 - that
57:52 - okay so you you can set this in one line
57:56 - if you want so
57:58 - top like this right like this bottom
58:04 - like this and then left
58:07 - 2.1 like that we save the
58:11 - line okay so I'm going to do a
58:17 - margin margin um I'm going to
58:21 - do 0.3 Ram and
58:26 - zero I'm going to do display
58:29 - grid display
58:33 - grid okay so the grid is going to be the
58:35 - icon and the text okay so grid template
58:39 - columns so the icon I wanted to occupy
58:42 - space of 40 pixels and then one5 for the
58:45 - text like
58:47 - that okay so what we also need to
58:51 - do is we're going to set the C to
58:54 - pointer
58:56 - cursor
58:58 - pointer uh we also need to set the
59:00 - position to
59:03 - relative all right position set to
59:07 - relative so um what we need to do now is
59:11 - do an
59:15 - after an
59:17 - after oops after so when it's
59:22 - active actually the after think is this
59:24 - when we have her you know it comes like
59:27 - this that's the after I think this is
59:29 - the before s element the green thingy
59:32 - okay so now um I'm going to set position
59:38 - absolute I'm going to oops
59:42 - position
59:44 - absolute I'm going to set the content
59:47 - with zero top left
59:50 - zero uh height 100% And Z index one
59:55 - and then I'll give it a bit of a
59:58 - transition okay like that so the width
60:01 - is zero when we have a the width is
60:02 - going to be 100% okay it's going to
60:05 - transition to
60:07 - 100% okay so that's that
60:10 - so uh we need to
60:14 - do the before Su element as
60:18 - well okay so some of the stars are quite
60:21 - as similar here
60:26 - but uh let's I'm just going to give it a
60:30 - different color so it's going to be
60:32 - color green dark so this one green dark
60:36 - so it should
60:37 - be okay so that's the before I'm going
60:40 - to give it a border top
60:42 - radius top left radius
60:45 - and and Border top um and Border bottom
60:49 - left radius 5 pixels like that so when
60:52 - we have that's where the that's when the
60:54 - magic is going to happen okay so
61:00 - um I think I'm just going to tag the
61:03 - anchor tag I'm just going to say the
61:04 - font weight to
61:07 - 500 uh okay so when we have this
61:11 - item when we
61:13 - have I am going
61:16 - to set the width of the after to 100%
61:20 - okay as you can see
61:21 - now it's uh looking pretty good
61:28 - it doesn't look it doesn't appear to be
61:29 - nicely centered we're going to fix
61:33 - this okay so after the
61:35 - hover I I think before the
61:39 - hover here instead of keep I'm not I'm
61:42 - not going to keep nesting here so after
61:44 - the anchor tag I'm just going to Target
61:47 - the I tag I'm going to display flex and
61:50 - center and give it a different color
61:54 - like
61:56 - that all
61:59 - right
62:01 - perfect
62:03 - so um
62:06 - now what we need to do
62:10 - again
62:13 - is
62:16 - I an here I think I'll
62:20 - just I give it a
62:23 - transition and the Z
62:29 - index okay like
62:31 - that
62:33 - so um after this I am going to Target
62:39 - the
62:40 - active n
62:43 - item I just TG the
62:46 - active so we have
62:49 - active so for the active I am going to
62:52 - set the background color
62:56 - to active nav link like that so that's
63:00 - the
63:01 - active and then I'm going to
63:05 - Target the it
63:07 - tag so the color I'm going to say that
63:10 - to
63:12 - color icons
63:17 - two like
63:19 - that okay so it looks looking pretty
63:23 - good
63:25 - all right so we haven't created the
63:26 - pages yet
63:28 - so and then the a tag so I'll just do
63:32 - like this and a tag okay so icons to
63:37 - like
63:38 - that perfect
63:41 - so uh the other thing that's left is the
63:43 - before Su
63:44 - element so I am going to
63:48 - do do
63:51 - active do active
63:55 - before like that and then the
63:58 - width is going to be
64:02 - 0.3.3 Ram like that so there it
64:07 - is
64:10 - okay so we have
64:14 - that I
64:18 - think um just targ the
64:23 - button just going to give it a
64:25 - margin I'm going to say 1.5
64:31 - R all
64:33 - right so for some
64:36 - reason I feel
64:39 - like uh it's not nicely
64:46 - centered is it let me inspect
64:51 - this it's not like nicely sent it as I
64:55 - like it
65:02 - to
65:05 - active
65:09 - Okay align
65:15 - items
65:23 - Center it's not
65:31 - aligned okay it also depends with the
65:33 - font you're using so line
65:43 - height okay line
65:53 - height
65:56 - L
65:58 - ping top
66:00 - 0.6 the bottom should be
66:06 - 0 six as
66:09 - well
66:11 - 0.6 okay so yeah uh let's get
66:16 - rid of uh Lite in here let's set that to
66:23 - zero
66:25 - all
66:27 - right I mean
66:45 - uh let me inspect
66:53 - again
66:55 - line height oops not the active but the
66:59 - anle
67:02 - tag n item a line
67:07 - height
67:18 - zero align items
67:22 - Center
67:31 - uh align items to Center so the items
67:34 - should be centered but we need to
67:37 - fix so top
67:41 - 0.6 let's do
67:44 - 0 7 and bottom
67:49 - 0.7 as
67:52 - well like
67:55 - that so it should
67:58 - look pretty
68:03 - good okay you can increase this padding
68:07 - actually so bottom let's let me make it
68:09 - a bit
68:11 - bigger eight so this one should be
68:14 - nine nine like that so you can kind of I
68:19 - use your eyes to kind of see the
68:22 - balance all right so the reason why it's
68:26 - different because there's a button here
68:27 - so if there's more space here for the
68:29 - button it's going to
68:31 - look
68:33 - identical okay so that's pretty much it
68:35 - for the sidebar now we just need
68:38 - to uh build these pages that we want so
68:43 - we're going to
68:44 - have
68:47 - important
68:51 - important so it's going to be a page
68:54 - to
68:57 - TSX okay use
69:02 - client react functional component and
69:05 - Export this should be
69:10 - important I'm going to copy this so with
69:14 - important uh we need another page called
69:17 - completed so in next it this is how we
69:20 - do
69:20 - Pages as long as you put a folder in the
69:23 - app directory and have a page. TSX or
69:26 - page as inside it will be recognized as
69:29 - a page and the name of the folder will
69:32 - be the actual route of that page so we
69:35 - have the completed so this will be the
69:36 - route completed okay and then if as long
69:40 - as you have page TS TSX in here we are
69:44 - good to go and then this should
69:46 - be
69:50 - completed
69:52 - completed and then we have let me check
69:56 - what route is
69:58 - this oh I've disabled
70:01 - the routing so it should be
70:07 - incomplete
70:11 - incomplete
70:13 - incomplete like that and then we should
70:16 - have a page do
70:19 - TSX and then paste it and then we're
70:22 - going to have
70:30 - incomplete like that so when we go back
70:32 - we should be able to route to these
70:36 - Pages
70:38 - nice okay so the active you can put the
70:41 - color to white if you don't like this
70:43 - color the current one or you can put it
70:45 - to Green it's up to you what you decide
70:48 - to
70:49 - use all right
70:51 - so let's start with um
70:54 - the
70:56 - content we're not going to do the
70:58 - content we're just going to do this
70:59 - background
71:01 - here for that let's go to the
71:05 - layout so in the
71:07 - layout uh first of I'm just going to
71:10 - close everything
71:13 - layout okay so in the layout what we
71:16 - need to
71:18 - do um I'm going to set this with to
71:25 - 100% all
71:30 - right um I'm going to put a div
71:34 - here so the width I'm just going to say
71:37 - width I'm going to do class I'm going
71:40 - say width full so this utility coming
71:43 - from T and CSS so it basically means
71:45 - width 100% so the width is% right now
71:48 - like this with
71:51 - four okay
71:54 - so uh we need
71:59 - to kind of uh give
72:03 - it a
72:07 - background so here we're going to Target
72:11 - so the
72:13 - main that's what the background
72:16 - is
72:20 - okay I just copy this color here
72:31 - let me check
72:36 - again okay so the Overflow
72:49 - Alo okay so for this
72:52 - one
72:55 - uh we need to create a
72:57 - component which is called
73:01 - tasks
73:03 - okay so the tasks are going to have
73:08 - this background here okay so on each
73:11 - page we're going to render the
73:13 - tasks so we are going to go to
73:17 - components and we're going to create
73:21 - tasks tasks
73:24 - and then in there we're going to create
73:26 - tasks to
73:28 - TSX and then react functional
73:31 - component export and
73:34 - then in the H page we're going to render
73:37 - the
73:40 - tasks okay like that so the Tas tasks
73:44 - it's going to be dynamic later on so
73:47 - here we have the
73:48 - tasks uh we are going to say con oops
73:52 - not in here here but in the
73:55 - tasks H
73:58 - tasks
74:00 - styled equal to
74:07 - styled make sure you import style
74:10 - components and make sure this is a
74:12 - client
74:14 - component use client I'm going to copy
74:17 - the task style and I'm going to replace
74:20 - here and then I'm going to
74:22 - save all right
74:25 - so now we should have tasks here what we
74:28 - need to do is sty
74:30 - this so to start this I'm going to give
74:33 - it a width of
74:35 - 100% uh we need to get the theme which
74:38 - is our
74:40 - variables theme from equal to use Global
74:45 - state is This Global State yeah and then
74:48 - let's pass this as a prop so we can have
74:50 - access to it down here and I'm going to
74:54 - set the
74:56 - background background color to props and
74:59 - then it's going to be color bg2 and then
75:01 - I'm going to set a border two pixels
75:04 - border color number two and then I'm
75:06 - going to give it a border
75:07 - radius one ram and then a pading a
75:12 - pading
75:14 - of pading of two
75:17 - RAM and then I'm going to set overflow
75:21 - y overflow y to Auto you're going to see
75:25 - why we're setting to
75:28 - Automatic
75:30 - Auto and then I'm going to get rid of
75:33 - the scroll
75:35 - bar so I'm going to say this 0.5 frame
75:39 - the
75:41 - width okay so now there is our tasks
75:46 - tasks tasks
75:49 - okay
75:51 - so now now let me
75:56 - see height you can say that
76:00 - to let me set
76:05 - this with
76:14 - full wait a minute wait I to say the
76:17 - height all this should be here
76:22 - right
76:25 - anyways
76:31 - um task task task task
76:34 - task okay so by the way the height
76:38 - should it should
76:40 - just be full already I don't know why uh
76:52 - inspect
76:57 - ah I think I know why so if we go to
76:59 - page we just need to return the
77:02 - tasks like
77:05 - that so the tasks we can wrap it instead
77:09 - of a div we can make it a
77:14 - main like
77:16 - that all right so now we have the Tas
77:21 - tasks uh
77:24 - what we
77:25 - need
77:28 - now I'm just thinking what's
77:33 - next okay so now yeah what we need to do
77:36 - is
77:40 - do we can do
77:43 - authentication
77:45 - authentication so to the authentication
77:48 - uh we need to use
77:50 - click so I'm going to open a new
77:52 - terminal here so let's install click so
77:56 - let's see what click
77:59 - is
78:00 - Click so
78:03 - click uh it's a way for us to do
78:05 - authentication so to install click we
78:07 - need to copy this that's the first
78:10 - step and then we install clck so the
78:14 - next step is setting Environ environment
78:17 - variables okay so we need to create EnV
78:23 - do
78:25 - Loco in the root
78:27 - here do e NV
78:32 - local like that for some reason
78:37 - sometimes it gives me an error while I'm
78:39 - trying to install something I don't know
78:41 - I think it's a internet problem now it's
78:43 - working okay so now we have
78:46 - click uh we have to create
78:50 - um environment local
78:53 - and then the next step would be
78:57 - to create a
79:00 - provider it should be called clck
79:02 - provider or o provider you can name it
79:04 - whatever you want I'm just going to say
79:07 - o
79:10 - provider
79:11 - provider.
79:15 - TSX okay um so the next step is import
79:20 - and click like this
79:27 - and uh we need to wrap up with the click
79:31 - provider
79:32 - which is going
79:36 - to have like a click
79:40 - O Okay so uh let's start
79:46 - with actually to make it
79:49 - easier we don't need to uh create a
79:54 - separate file for this we can just do
79:56 - use this
79:59 - directly
80:01 - uh get rid of
80:04 - oops get rid of this let's go
80:08 - to the
80:13 - layout like that and then we just need
80:15 - to
80:17 - wrap our entire application with the CL
80:21 - provider
80:24 - okay so even the HTML should be
80:34 - wrapped all right I'm going to copy this
80:38 - and I'm also going to delete this
80:41 - terminal like that so we've wrapped with
80:44 - clck
80:47 - provider okay so now it's working uh let
80:51 - me see
80:55 - I don't know what's the
80:59 - issue uh if there's an issue I think we
81:02 - might also want to restart this project
81:04 - because we did not restart
81:06 - it
81:08 - npm
81:15 - runev all right and also I think the
81:18 - next step would be actually we need to
81:20 - create a
81:21 - middleware
81:23 - so we need here to create a file here
81:26 - called
81:30 - middleware
81:31 - TS like that so that's the next
81:36 - step and then let's just copy this this
81:39 - for pro uh Rod
81:42 - protection okay so let's save this
81:46 - save let's go
81:49 - back so now it's not going to work
81:54 - because we don't have a secret key in
81:57 - the in local so let's go to docs for
82:01 - click and then click dashboard make sure
82:03 - you create an account uh I have already
82:06 - an exist some projects already existing
82:09 - so create a new application add
82:12 - application I'm going to
82:14 - say my
82:17 - tasks like this uh you can click as many
82:21 - providers as you want I think the
82:22 - limited you have is three providers if
82:24 - you're using a free free
82:26 - tier in this case I am going to be using
82:30 - Google and email that's it I'm not going
82:32 - to use anything else so you can show
82:35 - more you can click whatever providers
82:37 - you want to use for signing in I'm going
82:39 - to create the
82:41 - application and then I'm going to copy
82:44 - the P the public key and the secret so
82:49 - I'm going to change this to don't use
82:51 - this and I'm going to P paste here for
82:55 - the secret
82:57 - key um let me check the name is should
83:01 - have okay so yeah it's already there so
83:04 - now we have the secret so it
83:07 - should it should send us to the login
83:09 - page okay so now when I refresh we're in
83:13 - the login page we're not going to be
83:15 - able to access to access the root page
83:19 - of our application so what we need to do
83:22 - now
83:24 - now we need so if we go to the
83:27 - middle you can see all the routes are
83:31 - protected so what we can do is we can
83:33 - set a a public uh public middle so
83:38 - public not public middle public route uh
83:42 - routes so if you want the homepage to be
83:44 - public you can set it to be public okay
83:46 - but in this case I want the hom page not
83:48 - to be public so this is fine I'm just
83:51 - going to get rid of these
83:54 - comments uh I'll get rid of the comments
83:58 - so the home page is
84:01 - protected okay so what I'm going to do
84:04 - I'm going to have a sign up page and a
84:06 - sign in so I want this to be in a signin
84:09 - page so what I'm going to do is I'm
84:11 - going to create those
84:13 - pages so I am going to
84:17 - create a
84:20 - signin signin page
84:25 - page.
84:28 - TSX oops react functional component and
84:34 - Export use
84:37 - client this should be sign
84:40 - in signin
84:44 - page oops I'm going to copy this I am
84:48 - going to
84:49 - create a new page it should be sign
84:55 - up sign
84:57 - up I am going to say page to
85:01 - TSX and then I'm going to say sign up
85:05 - page okay so the sign
85:09 - in um what I'm going to do I'm going to
85:12 - go to EnV
85:14 - local EnV loc you can put random stuff
85:18 - here it's fine uh EnV local I'm going to
85:24 - say
85:26 - next next
85:30 - Public public I'm going to do
85:34 - click and then sign
85:38 - in sign in url so the sign in url for
85:42 - this one is going to be what did you
85:46 - name it it's going to be sign in okay so
85:48 - it's going to be slash
85:51 - signin sign in like this that's going to
85:55 - be the sign in Euro so instead it's not
85:57 - it's not going to be using this random
85:59 - page it's going to have our own URL sign
86:02 - in url and
86:04 - then uh next public CL sign in Euro and
86:11 - then we have sign
86:13 - out sign up so this should shouldn't be
86:15 - sign out it should be sign
86:19 - up sign up so this should be sign
86:25 - up uh is this sign up yep sign
86:29 - up and then we have after sign
86:33 - up after sign in uh let's go to the
86:37 - homepage or you can just do slash like
86:39 - this and then we can do after sign out
86:43 - we can do to we can after sign
86:47 - out
86:50 - um oh after sign in and after sign
86:54 - up we can go to URL like
86:59 - that okay and
87:03 - then
87:06 - redirect public no no no I don't think
87:09 - we have a sign out do we after sign
87:12 - out I think we have a sign out so we're
87:15 - going to do
87:17 - login or sign in sign in sign in like
87:21 - that okay so let's save
87:24 - this so I'm going to go to Local Host
87:32 - 3000 so it should be sign
87:38 - in okay signing
87:45 - page sign in why is it showing
87:51 - the
87:53 - okay sign in page but it's not showing
87:57 - the
88:02 - form uh I don't know why it's not
88:04 - showing the form here the sign
88:12 - in sign
88:14 - in so uh I'm going going to go to layout
88:18 - I don't want to show this side
88:21 - bar
88:24 - uh do not want to show the sidebar okay
88:26 - so I'm going to do a
88:31 - condition I only want to show this
88:33 - sidebar when there's a user signed in
88:36 - okay so what I'm going to do I am going
88:40 - to get the user ID from out so this is a
88:42 - server component so we're
88:44 - able we're able
88:47 - to do this like
88:50 - con user
88:52 - ID equal to
88:56 - out out
89:00 - from uh
89:04 - click okay so we need to import
89:09 - out from
89:11 - click
89:13 - okay so like
89:17 - this oh like that so us ID so if we have
89:22 - user
89:23 - ID that's when we want to show the
89:25 - sidebar
89:27 - okay so the sidebar is not there for
89:30 - some
89:31 - reason uh did not see the
89:36 - form
89:38 - okay let's go to in
89:41 - local let's just check if the names are
89:46 - correct send in
89:50 - url
89:53 - uh make sure these URLs are correct this
89:56 - the environment uh
89:59 - environment
90:01 - environment variables are correct so I'm
90:04 - just double checking to see if they are
90:07 - correct URL okay let's save
90:12 - this let's
90:18 - refresh
90:20 - okay
90:22 - sign in page it's weird I don't know why
90:24 - it's not
90:26 - showing so for the secret uh get rid of
90:31 - this and then just put something random
90:34 - here like that
90:38 - so now let's try to refresh this restart
90:42 - the
90:43 - project since we've updated the EnV
90:50 - local
90:54 - okay so I'm going to go back to the
90:59 - Local
91:02 - Host
91:17 - 3,000
91:19 - uh I don't know what's going on here
91:30 - okay okay I think I think I know
91:34 - why uh let's go back to the page so we
91:37 - have the sign in we need to import the
91:42 - component I forgot to do that
91:45 - so here we need to do sign
91:48 - in sign in from clck
91:52 - like this import the component the sign
91:55 - in component and save so we should have
91:57 - a sign in component here there it
92:00 - is okay uh we are going to be styling
92:03 - this later so leave this da for now
92:04 - because we're going to be using this for
92:06 - styling so we have the sign in uh when I
92:10 - do sign up we don't have this component
92:13 - we need this component as well so if we
92:16 - go sign
92:20 - up oops
92:25 - we need
92:27 - sign sign
92:31 - up like
92:33 - that save so we can switch between sign
92:37 - in and sign up sign in and sign
92:40 - up okay so now we need to sign up go
92:45 - sign up continue with
92:49 - Google and then I'm going to use my my
92:51 - email so if you have any questions you
92:53 - can email me for some reason my
92:56 - connection is really slow today so
92:58 - that's why it's taking forever
93:01 - to do anything that requires
93:05 - internet uh Let me refresh so
93:10 - slow okay so I just realized I had
93:15 - copied the wrong key so it was set to
93:19 - the code dealer so just change it to
93:21 - whatever application you're using in
93:23 - this case if you have only one
93:24 - application you don't need to change
93:26 - anything it should be probably be
93:28 - working by now so in this case I'm just
93:30 - going to change it to the correct
93:32 - application and then I'm just going to
93:34 - copy the correct key so as you can see
93:36 - the key is changing okay so I'll copy
93:39 - the correct one and then I'll just
93:41 - replace here and then just go to the
93:43 - sign up page I've already signed up uh
93:46 - with my Google account I'm just going to
93:48 - refresh this uh it should be able to
93:50 - work in a minute okay so I've already
93:52 - going to sign up and sign up with my
93:54 - Google account so you should be able to
93:55 - log to sign up don't go to sign in go to
93:58 - sign up to create an account first and
94:00 - then you're going to be able to log in
94:01 - like this okay after that you're going
94:04 - to be able to log in after you created
94:06 - your account so now here's the main page
94:09 - homepage so we need to start by
94:12 - creating uh we need to be able to create
94:15 - this
94:16 - tasks okay so to do that we are going to
94:20 - start with
94:22 - inst I'm just going to stop the project
94:25 - uh we're going to install a few things
94:27 - so we're going to run npm I at Prisma SL
94:32 - client I I'm pretty sure we've installed
94:34 - this in the beginning I can't remember
94:36 - but it's fine we can reinstall it and
94:39 - then we're going to also
94:42 - install
94:45 - um I think Prisma only Prisma with the
94:50 - client okay like
94:53 - that uh let's do at
94:57 - latest like that and then let's hit
95:00 - install so hopefully it should take only
95:03 - a few seconds okay that's that's that's
95:05 - it so if we go to the
95:10 - Prisma Prisma in it so we need to in
95:15 - initialize uh our data source which our
95:18 - database so we're going to be using
95:19 - Prisma and mongodb so the data is going
95:23 - to go to mongodb so we need to run
95:26 - Prisma in
95:28 - it
95:30 - uh okay we need the one that include a
95:33 - data
95:36 - source okay so copy
95:39 - this uh there should
95:41 - be
95:45 - init uh it's not
95:49 - here init
96:00 - it's taking ages to
96:02 - load data source
96:06 - anyways like this so you copy this
96:11 - Prisma in it initialize we're going to
96:13 - initialize the data source we're going
96:15 - to say that to mongodb not SQL and then
96:17 - just WR
96:19 - mongodb
96:22 - DB and it's going to
96:25 - generate it's going to generate a EnV
96:28 - file as well as a Prisma
96:31 - folder so in the
96:33 - Envy there's going to be the database
96:36 - URL don't change the url name what we're
96:38 - going to do is just going to
96:42 - mongodb
96:46 - mongodb so when you go to
96:50 - mongodb
96:53 - uh this is the wrong
96:56 - side
97:05 - mongodb okay it's taking AES
97:08 - load okay so go to sign in sign
97:14 - in sign in uh with your
97:19 - account and then go to database click
97:22 - connect copy the node URL copy
97:26 - that if you copy just paste it here and
97:29 - then put your password okay put your
97:32 - actual password and then after here you
97:36 - put your database name instead of my DB
97:38 - just put the name my tasks like this my
97:44 - tasks and then uh just put your url here
97:48 - and then it should work but now uh what
97:51 - I'm I'm going to do I'm just going to
97:52 - put my own URL off of this screen
97:57 - because it's my
97:58 - personal
98:01 - URL I I would want to change the
98:03 - password again after this
98:05 - so
98:07 - um I just pasted
98:13 - mine okay so I've pasted
98:20 - mine
98:22 - all
98:25 - right now so we have the in view file
98:29 - with the database
98:31 - URL so after we've initi
98:35 - initialized uh the data source to mongod
98:38 - DV uh the next Source uh the next step
98:41 - is to generate but only after we create
98:45 - a model so here we're going to create a
98:48 - model uh let's name it
98:52 - uh what should we name our model let's
98:53 - name it task task you can name it tasks
98:56 - whatever you want let's name it task
98:59 - okay or post so uh I think I just name
99:02 - it
99:04 - task and then we are going to have an ID
99:07 - it's going to be
99:10 - string string and then we're going to
99:13 - map
99:15 - this like that and then we have the
99:17 - title
99:19 - description and then we have
99:22 - date the date is also going to be a
99:26 - string
99:28 - okay okay so we have uh ID
99:32 - title date description and then we're
99:35 - going to have is completed it's going to
99:37 - be a Boolean false by default and then
99:40 - we're going to have is
99:42 - important so it's going to be also a
99:45 - bulling and default is going to be false
99:47 - as well okay and then we're going to
99:49 - have created it
99:51 - dat time and then updated it and then
99:54 - we're going to have the user ID which is
99:56 - going to be the ID of the currently
99:58 - signed in user okay uh it's going to be
100:01 - a string as well all right so that's it
100:04 - for this one we just need to run
100:07 - npx
100:10 - npx uh
100:12 - Prisma and then we're going to do
100:14 - generate like
100:18 - that okay nice so now let's go to
100:23 - MPX Prisma for
100:28 - Studio let's see what we have I'm going
100:31 - to close
100:32 - this okay so we have the task task model
100:35 - as you can see now we have all of the
100:37 - fields we don't have anything
100:40 - yet okay so we need to start by creating
100:44 - an API
100:45 - folder uh let's name it a it should be
100:48 - in the app it should be API
100:52 - and then we are going to
100:54 - have
100:58 - task H tasks we're going to create a
101:01 - route. TS in
101:05 - there all right so we're going to have a
101:08 - few functions in here so we're going to
101:11 - export U export
101:13 - async so the function we're going to
101:15 - have in here is going to
101:18 - be post let's start by post post first
101:21 - and then we're going to do
101:24 - request it's a request
101:28 - object not request but request like that
101:32 - and then I'm going to have a try
101:36 - catch and then here we're going to have
101:38 - CG we're just going to
101:42 - say
101:44 - error
101:46 - creating task like that and then we're
101:49 - going to return
101:51 - and new
101:54 - next
101:57 - response like
102:00 - that uh I don't know why I
102:03 - have let me check to see
102:11 - why
102:15 - okay so we should have an error in
102:19 - here
102:28 - oops
102:30 - error so for the error I'm just going to
102:33 - say error creating
102:37 - task all right and then I'm going to
102:41 - have a
102:46 - status
102:48 - okay next response
102:54 - all right so now uh we're going to see
102:57 - uh why we're getting the error it should
102:59 - be next response. Json
103:04 - actually next response. Json
103:08 - so let's save
103:12 - it all
103:16 - right so
103:19 - instead uh
103:22 - uh error creating task
103:26 - yep now uh we need to duplicate
103:32 - this so we are going to
103:35 - get error getting
103:40 - tasks getting
103:42 - tasks uh after get we need to
103:46 - put we can make some
103:49 - updates
103:52 - error
103:55 - updating updating task
104:01 - task and then we're finally going to
104:04 - have a
104:07 - delete error
104:11 - deleting
104:14 - deleting
104:19 - task
104:26 - all right so
104:29 - now creating
104:36 - updating okay so now we have the methods
104:40 - that we want so we have the post get put
104:44 - delete okay so let's start by creating
104:48 - some
104:49 - tasks okay
104:51 - so uh the only way we can create is if
104:54 - we logged
104:56 - in so I'm going to D
105:00 - structure we're going to get the user
105:03 - ID user ID from
105:06 - out that is coming from
105:09 - CL like that that's how we get the user
105:11 - ID so if we don't have the user ID if
105:16 - not user ID it's going to be
105:19 - unauthorized
105:21 - okay so we're just going to
105:23 - return we're going to
105:26 - return a next
105:28 - respon response so this it should
105:34 - be
105:36 - Json like that it should be unauthorized
105:40 - okay if
105:42 - so we're going to
105:45 - get uh the
105:48 - title we're going to title this
105:51 - description
105:54 - date okay so we have the
105:57 - date uh we have
106:00 - completed completed and we have
106:05 - important
106:07 - important title description date
106:09 - completed
106:11 - important okay and then we're going to
106:13 - do a
106:14 - wait we're going to do request tojson
106:19 - like that
106:22 - okay so uh let's do some validations you
106:26 - can do these validations one by one but
106:28 - I'm just going to do them in a
106:31 - single block so I'm going to do if if no
106:36 - title
106:37 - description or date I'm just going to
106:40 - say missing by the way it's remembering
106:43 - what I'm uh what I've done in the
106:45 - original project so missing required
106:48 - Fields okay
106:51 - like
106:52 - that so after that uh we need
106:57 - to do
107:00 - if if
107:02 - title do length is less than
107:06 - three
107:09 - length is less than
107:14 - three uh we're going to do title
107:18 - must be at Le three characters long okay
107:23 - and then finally we are going to create
107:25 - the task we're going to say
107:27 - task equal to
107:31 - await so for us to be able to create we
107:34 - are going to be using uh Prisma for us
107:37 - to put the the date in the
107:39 - database okay so what we need to do is
107:43 - we need to create a
107:46 - folder in the app let's name it U
107:51 - oh I've already created the folder okay
107:54 - so let's go to
107:55 - U we're going to create a new file it
107:58 - should be
108:00 - connect so this is what we're going to
108:02 - be using to connect to the database okay
108:05 - TS like
108:07 - that so we're going to
108:09 - import Prisma
108:12 - client so I'll show you the
108:14 - documentation input pleas
108:18 - client so here is how we do it so to set
108:21 - a new client so we're going to
108:24 - import Prisma client and then we're
108:28 - going to say let Prisma and then we're
108:31 - going to say that to Prisma
108:35 - client okay so uh now what we need to do
108:40 - is we're going to
108:43 - check
108:46 - if if
108:48 - process do
108:51 - EnV do node EnV equal to
108:56 - production we're going to say Prisma new
108:59 - client like this we're going to
109:01 - initialize a new new client
109:06 - else else we're going to say if not
109:10 - Global
109:13 - Prisma and then we're going to also
109:17 - initialize a new
109:19 - client
109:23 - we're going to set the global to the
109:26 - Prisma I'm going to set the pisma to the
109:29 - global okay now uh we
109:33 - have an issue uh let's see if it's not
109:36 - working we're going to fix it later by
109:39 - the way we're going to export default
109:42 - Prisma
109:44 - uh Let's ignore this the type checking
109:48 - here uh we can ignore here here you know
109:51 - so we shouldn't have warnings anymore so
109:54 - now we are going
109:56 - to import in the in the in the root
110:00 - we're going to import Prisma so
110:05 - const task equal to await Prisma it's
110:09 - remembering what I was doing in the
110:10 - original project await Prisma so we need
110:13 - to import the Prisma from Ms task.
110:17 - create so make sure it's Auto completing
110:19 - here when when I do uh Prisma when I
110:23 - imported Prisma when I do dots it should
110:25 - show task okay or whatever name you you
110:28 - give into your model okay so make sure
110:34 - you're importing here from import
110:37 - Prisma from mws if you export it as
110:40 - default you should import it like this
110:42 - or as a modu you can inut like this okay
110:46 - uh let's go ahead and create a new
110:53 - task okay so to create a new task we
110:56 - have everything that we
111:00 - need uh here we just have to do
111:03 - data so the data we're going to put in
111:06 - the
111:07 - title the description I'll get rid of
111:10 - the
111:12 - user
111:13 - okay uh I'll save
111:16 - so it should be
111:21 - uh completed important so what did we
111:24 - name those
111:26 - properties oh the code
111:29 - is is completed we say that completed
111:34 - and then we have is important we said
111:36 - that to
111:38 - important and then finally we have the
111:40 - user
111:41 - ID where we don't need to do like this
111:44 - user ID because they have the same name
111:45 - so we can just leave it like this like
111:47 - user ID so the user ID is coming from
111:50 - whatever current currently logged in
111:52 - user from the cler okay so we have that
111:56 - so now we just need
111:58 - to return and next response
112:03 - tojson the status doesn't matter
112:06 - here okay uh we can just do like this
112:09 - task like that okay so we have a way a
112:13 - method to create this task the task so
112:16 - now we need to put this to the test so
112:18 - we need to create
112:20 - some components for us to be able to to
112:23 - create this we need to create a front
112:25 - end
112:26 - component so for us I'm just going
112:30 - to uh go back to the app I'm just going
112:33 - to put a
112:34 - form for us to be able to
112:37 - create okay so um just
112:42 - thinking uh what component did I
112:48 - use
112:51 - okay so I'm just trying to think what
112:54 - component I've
112:58 - used
113:04 - H I'm just trying to
113:11 - think okay okay okay
113:15 - okay okay so I'm just going to
113:18 - create a new
113:22 - component I'm just going to say
113:25 - model models like
113:28 - that I might be able to create a dynamic
113:32 - model but I
113:33 - just okay I'll just create it in here
113:36 - create
113:39 - content
113:42 - content create content.
113:46 - TSX uh create content yep it should be
113:50 - use client a client
113:53 - component use
113:58 - client it's a functional component we're
114:00 - going to
114:01 - export and we're going to go to the
114:05 - page the main
114:07 - page instead of returning only the
114:11 - tasks I am going to return a
114:17 - fragment okay a react frag doent and
114:20 - then here I'm going to tasks T actually
114:24 - no we are going to go inside the
114:29 - tasks in here I am going to say create
114:33 - content like that so I'm going to render
114:37 - the component that we just created so
114:38 - I'm just going to stop the Prisma client
114:41 - from
114:43 - running um Prisma Studio not client so
114:47 - we're going to run mpm runev
114:50 - mpm run
114:54 - Dev so let's wait for it to load so
114:58 - while we're waiting I was thinking
115:02 - to do
115:04 - the inputs in the global state but I'll
115:07 - just do it here to make it easier for
115:08 - you and quicker than doing in the global
115:12 - state in the context so I'm just going
115:14 - to do
115:16 - con title just to make it easier set
115:20 - title so make sure you import use state
115:23 - from
115:24 - react so we have use
115:27 - State okay um use title and then we need
115:33 - the description we need the date we need
115:37 - the completed
115:39 - con
115:42 - completed completed and then we need the
115:47 - important important
115:51 - okay so all right I'm just doing this
115:54 - state in an easy
115:56 - way in an easy way to understand okay
115:59 - and
116:01 - uh we have the we have the state for all
116:04 - of our inputs okay so now we have the
116:06 - the tasks that's still showing I think
116:10 - we need to refresh the
116:17 - page
116:18 - right
116:22 - uh oh it's on
116:24 - [Music]
116:27 - 3,1 because the original project is
116:31 - running on
116:36 - 3,000
116:39 - uh why is it asking me to sign in
116:41 - continue with
116:45 - Google all right so now I am in the
116:48 - application so so it says create content
116:50 - here so we need some
116:53 - inputs uh for
116:55 - us okay
116:58 - so we are going to create some
117:02 - inputs we are going to be making this
117:08 - as a form I guess let's make it a
117:13 - form okay and we're going to have I'm
117:17 - not sure if we can put H1 in the form
117:20 - uh
117:22 - create a
117:25 - task and then we are going to have input
117:31 - control input control it's a div and
117:33 - then we're going to have a
117:35 - label label it's going to go to the
117:39 - title and then it's going to be
117:43 - title that's the label and then we're
117:45 - going to have an
117:47 - input input
117:50 - and then this input is going to have a
117:54 - bunch of things so we're going to have a
117:56 - value the value ID let's set it to
118:00 - title and then it's going to give a
118:02 - value the title which is the state
118:05 - value and then
118:07 - type it's going to be
118:10 - text and then
118:12 - name it's going to be title and then on
118:18 - change uh change I am going to do a
118:21 - handle change handle change I don't have
118:24 - this function yet but the name of
118:28 - the uh the event it's going to be the
118:31 - title okay so handle change we're going
118:34 - to change the
118:36 - title we haven't set the handle change
118:38 - yet and I'm just going to do a
118:41 - placeholder
118:44 - placeholder
118:46 - uh I'm just going to paste in a generic
118:49 - quick Place holder in
118:51 - here all right so now
118:54 - we we have that
118:58 - type we don't need to type it's already
119:01 - here okay so now we have the input input
119:05 - control we just need to duplicate this a
119:07 - few more
119:10 - times
119:11 - uh
119:13 - duplicate so we going to have
119:16 - description for the other
119:18 - one
119:20 - okay so I'm just going to paste
119:22 - in so the description is going to be a
119:25 - text
119:27 - area so description it's going to be a
119:30 - text area instead of an
119:32 - input okay and then put the rows to
119:34 - four I'm just pasting it to speed this
119:37 - up and then we don't have this handle
119:40 - change function yet so make sure the
119:41 - name matches the state okay the
119:44 - state and we are also going to have a
119:48 - date
119:49 - so the the value is going to be date on
119:53 - change it's going to be handle change of
119:55 - the date both we set it to a string the
119:58 - type is going to be a date as
119:59 - well and
120:02 - finally uh we are going to
120:06 - have we're going to have an input
120:10 - control get rid of this and then
120:14 - completed we're going to set that
120:18 - to a string okay so here it's a Boolean
120:23 - completed for so we're going to set that
120:26 - to a string and then we're going to send
120:28 - that as a
120:30 - string okay completed so make sure the
120:34 - name uh it matches here okay so the name
120:39 - and the handle change matches and the
120:40 - state matches as well and the ID match
120:42 - make sure this three things match okay
120:46 - so this is a check box by the way we're
120:48 - going to be triggering true and
120:52 - false okay and finally we have the
120:57 - 14 we have the one
121:01 - for so instead of completed so this
121:05 - one should
121:07 - be
121:11 - important important like
121:15 - that okay so the only thing that's me
121:19 - missing is going to be the submit
121:22 - button okay dot
121:25 - submit
121:28 - ptn okay we're going to do
121:31 - button
121:33 - type
121:35 - submit next time
121:40 - type
121:42 - submit okay and then we're going to just
121:45 - say submit it doesn't matter if I'm
121:47 - using a span okay so now let's refresh
121:51 - this hand change is not there we don't
121:53 - have this function yet so let's go ahead
121:56 - and create the handle change
121:59 - function okay so I'm going to do
122:02 - const handle change so the handle change
122:06 - we're going to be it's going to be a
122:08 - little bit little bit Dynamic so name
122:13 - String and
122:15 - then we're going to also take the event
122:19 - I'm I'm just going
122:20 - to do a change event like that or you
122:26 - can do
122:28 - any okay uh this is be a bit messy I'll
122:31 - just do
122:36 - any okay so uh now uh we're going to run
122:41 - a
122:43 - switch okay so the first one is going to
122:47 - be we're going to switch switch name
122:50 - okay so based on the name we're going to
122:53 - you know
122:55 - dynamically do the input so we're going
122:58 - to do case title we're going to set the
123:02 - title to e. target. value and then we're
123:04 - going to break and then case description
123:07 - we're going to set description okay
123:09 - we're going to handle the change for the
123:10 - description we're going to get the it.
123:13 - target. value whatever we're typing in
123:15 - the input we're setting that to the
123:17 - description okay and uh we have
123:20 - date same thing for
123:25 - completed all right and same thing for
123:29 - important and default we're just going
123:31 - to break okay so what we're doing the
123:34 - name the name which is the the name we
123:38 - set here so the input is a name so the
123:42 - name is going to be this one okay so the
123:44 - name of the input is
123:47 - date so name if the name is
123:52 - date so name is date and also name make
123:55 - sure it matches here
123:58 - okay and then if the name is date we're
124:01 - going to get the input for the date if
124:03 - it's completed we're going to set
124:05 - completed like that so now we should be
124:08 - able to have handle change working but
124:12 - seem to be not working
124:14 - currently uh let's
124:17 - refresh uh
124:21 - nothing okay
124:23 - so the handle change doesn't seem to be
124:27 - working at the moment uh let's see
124:32 - why and a
124:42 - change okay so yeah we are using all of
124:45 - our state
124:47 - values
124:56 - all
124:59 - right let me try
125:12 - to let's try to see
125:17 - so
125:19 - okay so for some reason it's not showing
125:22 - in oh because the color is
125:24 - white okay it's working but uh the color
125:28 - is
125:29 - white okay so yeah it's working don't
125:32 - worry it's just the color is white set
125:34 - to white but it's
125:36 - working so what we need to do is a way
125:39 - to submit this so we we have a post
125:43 - method if you remember so for us to
125:46 - handle the requests we need to we're
125:48 - going to be using xos so we're going to
125:50 - do npm I
125:53 - xos all right so now we need to do con
125:58 - we're going to handle
126:00 - submit okay so for the handle submit
126:03 - we're going to do e do prevent
126:05 - default like
126:08 - that okay
126:11 - um this should be a
126:17 - form okay
126:19 - and on
126:21 - submit we should handle
126:24 - submit okay so when we submit we're
126:26 - going to run that
126:28 - function all right so now let's
126:32 - save so what we're going to do uh we're
126:35 - going to take the state values all of
126:37 - those values we're going to do const
126:41 - task all of the state values we're going
126:43 - to put them in an object and then we're
126:46 - going to send them title description
126:48 - date completed
126:50 - important okay so it's it's an
126:54 - object and then we're going to send that
126:56 - object we're going to do a try catch uh
127:00 - we're going to say
127:02 - cons r equal to
127:06 - await await
127:09 - exos post uh we need to make sure this
127:12 - is an
127:15 - async
127:17 - async okay
127:20 - it's going to be a API tasks okay uh
127:24 - make sure it should be API SL tasks or
127:26 - whatever name you've named yours
127:30 - tasks okay uh I'm going to say
127:33 - if uh response do data do error if we
127:39 - have an
127:40 - error we are going to do a
127:44 - toast we need to install react H
127:47 - toast
127:49 - react hot
127:52 - toast uh this one okay
127:56 - documentation uh copy this
127:59 - install go to the
128:01 - terminal we install react hot
128:05 - toast so we have
128:08 - toast we're going to do
128:10 - toast
128:14 - oops toast do
128:17 - error so make sure you import the toast
128:22 - okay here import toast from react hold
128:26 - toast okay we we're not going to be able
128:28 - to see anything yet because we need to
128:31 - kind of wrap our
128:33 - application with the toast provider okay
128:37 - uh what we can
128:38 - do uh let's go to the documentation we
128:41 - just need to
128:42 - import
128:46 - toaster like this and and we can go to
128:49 - the context we can edit in the context
128:51 - actually context
128:53 - provider uh we
128:57 - can like
128:59 - this and then we can do a toast
129:04 - uh here toaster like that so it should
129:08 - be able to work if you have any
129:10 - errors so uh let's go to the
129:15 - application create so
129:20 - now we can do an
129:25 - error here
129:29 - toast do error we can
129:32 - do something when wrong like
129:36 - that and then we have to conso the
129:40 - [Music]
129:41 - error okay so after this we are going to
129:47 - do
129:50 - uh
129:52 - if actually I will just do a success for
129:56 - now and we're going to do some
129:59 - conditions later okay so
130:04 - now we should be able to create a task
130:07 - let's see if we have any errors at all
130:10 - we're going to find out so I
130:15 - think let's try
130:17 - it I'm just going to put random
130:20 - data date I'm just going to put
130:22 - something
130:23 - random like that I'm going to
130:27 - submit okay it says task created
130:29 - successfully I don't know how I'm not
130:31 - sure about I'm not so sure about that
130:34 - but let's
130:36 - console the task if we create if we
130:39 - create
130:41 - something
130:45 - um let's CG
130:52 - task I'm just going to put some random
130:54 - data here submit again okay seems like
130:58 - we're creating a task and the user ID is
131:00 - being added as well so yeah we are we
131:02 - are indeed creating the tasks we're
131:05 - creating the task uh what we need to do
131:08 - now is fetch and display the task tasks
131:14 - so fing the
131:16 - tasks uh it's not that
131:19 - it's not that difficult to
131:22 - do okay so we just uh do a get request
131:25 - and
131:27 - then do and then display the task so
131:29 - we're going to mainly do that in our
131:31 - context and then we're going to display
131:33 - our
131:35 - tasks okay so I think for now I'll take
131:39 - a break and then I'm going to continue
131:41 - okay so now let's work on retrieving our
131:45 - tasks so now we can create the task
131:48 - tasks so we need to to retrieve the
131:50 - tasks go to the rout and we're going to
131:54 - go to the
131:55 - get get function here so we just going
131:59 - to do the standard we're going to get
132:01 - the user
132:02 - ID user ID coming from us and then here
132:05 - we're just going to check if we don't
132:06 - have the user ID we're going to
132:09 - retrieve the tasks uh linked to this
132:12 - specific user who signed in okay so
132:16 - we're going to say con
132:19 - tasks equal to tasks a wait Prisma do
132:24 - tasks task. find
132:26 - manyu so this is the task model so we
132:29 - need to find manyu where the user ID
132:33 - matches the current currently logged in
132:36 - user okay so we're just going to say
132:38 - where user
132:41 - ID okay so we're just going to get the
132:44 - logged in
132:47 - user okay so let's by the way let's run
132:51 - I'm just going to stop this go to the
132:55 - terminal let's run uh Prisma Studio to
132:59 - see if we have our data in the Prisma
133:01 - studio so I'm going to
133:04 - refresh okay as you can see our data
133:06 - that we created is there okay so now we
133:09 - just want to retrieve that data so here
133:13 - we can
133:14 - return uh these tasks okay so we're
133:17 - going to return next next response and
133:21 - then the tasks
133:23 - okay so we need to do a
133:28 - get
133:29 - uh on this endpoint here on the tasks
133:32 - endpoint so we're going to do that in
133:35 - the context because we want to access
133:38 - the data anywhere that we want to so I'm
133:41 - going to
133:44 - go to the where's the context context
133:46 - context
133:50 - yeah so let's go to the global I think
133:52 - we can do it in the
133:55 - global okay and um I'm going to create a
133:59 - few functions let's start with uh
134:02 - getting all of the
134:05 - tasks I'm going to say
134:08 - const all
134:11 - tasks tasks it's going to be an async
134:16 - function Okay so all tasks I'm going to
134:20 - also have a loading State here I'm going
134:22 - to say
134:23 - con is
134:26 - loading is
134:28 - loading okay so here I'm going to do a
134:33 - try catch and then I'm going to set
134:36 - loading to True here and then I'm going
134:38 - to say con uh result equal to
134:43 - await await
134:46 - exos but we're going to do do a get
134:48 - method so make sure you
134:50 - import exio we're going to do a get
134:53 - method so/ API and then tasks so let's
134:57 - make sure exos is imported like this
135:01 - okay and um so the
135:06 - result uh what we're going to do is
135:08 - we're going to create uh a state for the
135:12 - tasks okay uh we could have used
135:16 - um we could have used a different way to
135:20 - handle this data okay we could have used
135:24 - a use reducer or
135:25 - something okay and then we're going to
135:27 - say const uh let's do
135:30 - tasks tasks okay so it's going to be an
135:34 - empty array or in
135:37 - initial um here we're just going to put
135:41 - the data in the array so first off let's
135:44 - see what we have CG response to data
135:48 - let's run a use effect here so
135:51 - react react. use
135:55 - effect uh use effect like
135:59 - that and then on initial render we are
136:02 - going
136:04 - to run the O task
136:07 - function okay so we should be able to
136:10 - see something in the
136:12 - console uh I'm going to
136:16 - inspect
136:18 - okay and there it is so we have an array
136:21 - we're getting the items or you can you
136:24 - know if you're using console ninja
136:25 - you're going to be able to see this in
136:27 - here okay so we're getting the data uh
136:31 - we putting that data into this array
136:35 - um so now we just we're just going to
136:39 - update the state with the actual data
136:42 - okay and then we're just going to set
136:43 - the loading to
136:45 - false uh let's console this error
136:48 - and then we're going to
136:50 - do
136:52 - toast
136:54 - toast something went wrong like that an
136:59 - error all right so
137:01 - now um actually we don't need
137:05 - this now uh we are going
137:08 - to send this data in here not select the
137:13 - theme but in this case we want to send
137:15 - the tasks in here
137:18 - so we're going to have access to the
137:20 - tasks in here since it's in the context
137:24 - so now let's go to
137:28 - the uh
137:31 - tasks okay
137:33 - here so we have this create here I'm
137:36 - just going to get rid of this we're
137:38 - going to create a model for that okay
137:43 - so here we are going
137:45 - to start with the title so we're going
137:49 - to create an
137:51 - interface
137:52 - interface uh we're going to have a
137:55 - title title is going to be a string and
137:59 - then we're going to have
138:02 - tasks tasks I'm just going to
138:06 - do any for
138:08 - now okay so now uh we are going
138:13 - to
138:16 - display and H1 here and then it's going
138:19 - to be the
138:21 - title it's going to be the title No Time
138:25 - title because we didn't destructure here
138:27 - we need to destructure the properties
138:29 - and then we're going to display the
138:31 - title
138:33 - here okay so now we've displayed the
138:36 - title I'm just going to create a div I'm
138:39 - going to name this
138:40 - tasks tasks and then give it another
138:43 - class called grid as
138:45 - well okay like that and then we are
138:48 - going to get the
138:51 - tasks uh we're getting the theme Here we
138:54 - need to get the tasks as
138:56 - well like that uh why do we have an
139:01 - issue oh wait is it
139:04 - tasks so wait we need to give this a
139:07 - different
139:09 - name
139:12 - um we don't need to get it from here
139:16 - actually
139:19 - we're going to pass it somewhere else uh
139:23 - wherever we're entering this task
139:26 - component okay so here I am going to map
139:30 - the tasks tasks and then I'm going to
139:34 - return a
139:35 - task okay so in this case we're
139:37 - returning a div but I'm going to
139:40 - create I'm going to create a new
139:43 - component called task
139:46 - item task
139:48 - ask item.
139:50 - TSX it's going to be a client
139:53 - component use
139:55 - client react
139:59 - functional
140:00 - function
140:03 - uh we are going to go back here instead
140:06 - of returning a task div like this we're
140:08 - going to return a
140:12 - task task
140:15 - item okay
140:18 - so for this one I'm going to do task.
140:22 - ID like
140:25 - this okay so also
140:30 - here we can do I think we
140:33 - can do
140:36 - this and then we just spreading all of
140:39 - those properties okay we're just going
140:41 - to go to the task item uh we're going to
140:44 - do an
140:46 - interface
140:49 - okay
140:52 - interface uh task should
140:55 - be let me check
140:58 - well it's an
141:05 - object
141:09 - okay so here we're going
141:12 - to
141:15 - get these properties
141:19 - okay say it does not exist on
141:23 - type task task
141:34 - task uh let me double check task item
141:44 - task okay I don't know why it says that
141:46 - let me PR to any for now uh let's
141:52 - see uh in the task item we're going to
141:57 - show display this
141:59 - data so we have an
142:02 - H1 which is going to have a title and
142:05 - then P
142:07 - description and then we're going to
142:11 - have a
142:14 - date a date
142:17 - okay so this this statee is not going to
142:19 - be
142:21 - formatted uh
142:25 - tasks it's undefined because we did not
142:28 - pass the tasks in here so what we need
142:31 - to do is we're going to do con tasks
142:35 - tasks equal to use
142:39 - Global State and then we are going to
142:42 - pass the tasks in
142:45 - here all right
142:49 - uh is it Global
142:53 - state or Global context can't remember
142:56 - yes Global state so what's the
143:01 - issue okay so this should be a client
143:05 - component use
143:09 - client use
143:12 - client all right so the error should
143:15 - disappear now so now as you can see we
143:16 - have the task but we're going to format
143:19 - this date in a different way not like
143:21 - this
143:23 - okay so we do have the tasks uh let's go
143:27 - back to the task
143:30 - item task
143:32 - item
143:33 - um the date I'm going to give it a class
143:37 - of date class
143:39 - name date so let's see why we have an
143:44 - issue
143:46 - here
144:03 - uh okay I'm just going to leave it it
144:05 - any I'm I'm quite new to sub script so I
144:08 - don't know why it's
144:10 - complaining okay so
144:12 - now after the date we're going to go on
144:16 - the
144:17 - footer I'm just going to name this task
144:22 - footer task
144:24 - footer I'm going to have a button in
144:26 - here
144:28 - button and then it should have a
144:32 - class class name of
144:34 - completed
144:37 - completed and
144:40 - uh is should have te text of
144:44 - completed
144:45 - completed
144:47 - all
144:49 - right
144:53 - and what
144:55 - else so this should be is
145:02 - completed
145:05 - okay instead of doing this I'll just get
145:07 - the individual properties from
145:10 - here title string description
145:15 - date
145:17 - this should
145:19 - be is
145:23 - completed is completed
145:26 - okay uh we also need to get the ID which
145:29 - is going to be a
145:33 - string all
145:35 - right uh
145:39 - okay I'll get rid of
145:45 - this
145:48 - okay
145:51 - so I'm going to do a conditional here so
145:56 - I'm going to check if it's completed or
145:58 - not
146:01 - completed okay so it's a conditional
146:04 - Rend of this button here I'm going to
146:07 - cut this I'm going to say is
146:11 - completed okay if it's completed I will
146:13 - do this
146:14 - button else it's going to
146:18 - be
146:23 - incomplete
146:24 - [Music]
146:27 - uh be
146:32 - incomplete incom incomplete not
146:35 - incompleted so incomplete so we have
146:38 - completed and
146:42 - incomplete
146:45 - incomplete
146:47 - not incompleted incomplete like that
146:50 - okay so if it's completed it will show
146:52 - this otherwise it will show this okay um
146:57 - after the after that
147:00 - we are going to do a few more
147:03 - buttons so we are going to
147:07 - have uh Let's
147:11 - do let's do
147:14 - edit edit uh and then for the edit we're
147:19 - going to have an icon code edit make
147:23 - sure you import this
147:24 - icon from 's icons okay so we have
147:32 - edit edit so this should be a button
147:36 - instead of a
147:39 - div button edit and then we're going to
147:43 - have a
147:45 - delete uh but
147:47 - button
147:50 - delete and then we're going to have a
147:52 - delete
147:55 - icon
147:58 - delete I think it's called
148:02 - trash so we import the trash icon and
148:04 - then we save so we should have those
148:07 - icons
148:10 - okay uh for some reason the text is not
148:14 - showing let's refresh this I don't know
148:17 - why it's still not showing so
148:21 - description okay seems like we have an
148:23 - error
148:24 - somewhere so here I'm going to pass
148:27 - those
148:30 - properties uh pass those properties like
148:32 - that and then I'm going to
148:35 - save okay so now those properties are
148:38 - showing great great
148:41 - so now it's only a matter of styling
148:44 - let's start with um let's let's give it
148:46 - a title shall we so for for the
148:50 - title I'm just thinking what what title
148:52 - we should give this let's name it all
148:55 - tasks okay all tasks and then let's
148:58 - let's go ahead and style
149:00 - this all right so for the styling we are
149:04 - going to start with let's start with the
149:10 - H1 H1 I'm going to give it a font
149:15 - size
149:18 - uh wait oh I could have SW we had done
149:24 - the before element before the green
149:27 - thingy I think I've removed those tiles
149:29 - by by accident but any I'm just going to
149:32 - paste those tiles so here we're just
149:35 - going
149:36 - to uh copy this and then we've done we
149:40 - have done this H1 before by the way I've
149:43 - accidentally accidentally removed these
149:45 - tiles I think and then position to
149:49 - relative and then after is this
149:52 - green thing here I think I removed by
149:59 - accident okay and
150:01 - uh next
150:04 - tasks so next what we
150:08 - want
150:10 - um
150:13 - tasks uh okay tasks we need to do a
150:19 - grid okay but
150:22 - after after these
150:25 - tasks I am going to do a
150:28 - create
150:31 - task create
150:33 - task okay and then we're going to have a
150:38 - plus plus icon make sure you import the
150:41 - icon and then we're going to do add new
150:44 - task add new
150:47 - task like
150:48 - that so this should be a
150:52 - button like that and
150:57 - uh there it is add new
151:00 - task okay so what we're going to do now
151:04 - let's do the
151:06 - Styles uh let's start
151:09 - with so here we're just going to do a
151:13 - create task Styles we're going to do the
151:15 - other ones in the global so
151:18 - create
151:20 - task okay so the create task is going to
151:23 - be let me go to Local Host
151:28 - 3000 uh continue with
151:31 - Google so
151:34 - the so the task going to be this box
151:37 - here
151:38 - okay that's going to be for creating a
151:41 - new
151:42 - task so to create task I'm just going to
151:45 - give it a dis play flex and Center
151:49 - everything and then I am going to give
151:52 - the
151:53 - Gap Gap it should be something like 0.5
151:56 - Ram oops
151:59 - 0.5 RAM and also I'm going to give it a
152:03 - height height I am going to set that to
152:07 - 16
152:09 - Ram okay and the color and font weight
152:14 - and a border radius and also a border of
152:17 - three pixels all right so it should
152:22 - be something like uh like this
152:29 - okay uh I don't know yeah okay so
152:32 - sometimes it's taking a while to
152:33 - retrieve the user so this is the box
152:37 - like this okay so let's uh we've done
152:40 - the styles for that I'm just going to
152:42 - give it a h
152:44 - effect and H
152:49 - on H I'm going to set to gray five and
152:52 - the color to gray zero like that so
152:56 - let's see when we have like that but we
152:58 - need to give it a
152:59 - transition let's give it an ease
153:01 - transition 0.3 seconds should have like
153:04 - a nice
153:06 - transition all right so there it is we
153:10 - have a nice
153:11 - transition uh what we're going to do now
153:14 - is we're going to style
153:17 - the grid okay so the grid we're just
153:19 - going to put it in the global provider
153:23 - so
153:24 - Global Styles style
153:27 - provider I'm going to do dot
153:30 - grid so here I'm going to say display
153:35 - grid okay so I want the grid to be
153:38 - responsive I'm going to say grid
153:40 - template columns I'm going to do repeat
153:44 - and then I'm going to do Auto
153:47 - auto
153:49 - fail fail and then min max the minimum
153:53 - width is going to be 300 pixels and then
153:55 - it's going to automatically you know
153:58 - resize okay and I'm going to give it a
154:02 - gap gap of 1.5
154:06 - Ram like that you can give it whatever
154:08 - Gap you want that's entirely up to
154:11 - you all right and uh yeah that's it for
154:15 - the grid uh we need to see what we also
154:19 - need to starty go back to the
154:24 - tasks uh we need to style the tasks
154:30 - tasks
154:31 - okay um let's start
154:36 - with uh
154:40 - tasks so let's let me check this one
154:43 - should have it's loading the tasks
154:47 - okay so the task item is what we need to
154:51 - style okay I need to give it this style
154:53 - here so uh we need to go to the task
154:58 - item and give it you know the Styles
155:02 - so task
155:05 - item
155:08 - con task
155:11 - item
155:15 - styled so make sure you import start
155:18 - components like that and
155:21 - then you are going to replace
155:24 - this I'm going to give it a padding a
155:27 - background color of color icons number
155:31 - two like that and then uh we are also
155:36 - going to give it a box
155:38 - Shadow a box
155:41 - Shadow like
155:43 - that and uh there's
155:48 - is okay so border set to border color
155:55 - two but color two seems to be
156:04 - wrong okay let me check to see why the
156:08 - Border color to is not
156:12 - working uh for now let's just do the
156:15 - styles
156:16 - height 16
156:19 - RAM and then we're going to display flex
156:22 - and give it a
156:24 - gap okay
156:27 - so there's an a gap
156:31 - here okay so
156:35 - now we
156:39 - need let me check to see why what a
156:43 - color to I'm just trying to see if I
156:45 - this in my
156:47 - variables border color
156:53 - to
156:58 - okay it seems like I do have border
157:01 - color
157:05 - to
157:07 - but let me inspect see why it's not
157:14 - working
157:22 - okay so the
157:24 - background okay because we did not
157:27 - include we did not include the theme the
157:31 - theme prop okay so we don't have access
157:33 - to the
157:34 - colors
157:36 - const we're going to do
157:40 - theme I'm going to use Global
157:43 - State and then I'm going to pass it as a
157:46 - prop Here
157:48 - theme and let's save we should be able
157:51 - to
157:53 - see what we have okay uh the other thing
157:57 - that we need to do
157:59 - now I am going
158:03 - to let's go to all
158:07 - tasks let's give it margin
158:13 - top margin
158:17 - now let's do two R top and bottom and
158:19 - then zero left and
158:22 - right let's increase this to
158:25 - four wait tasks styled task
158:36 - styled okay so what we need to give this
158:39 - is should be the tasks so we need to
158:41 - select the
158:43 - class tasks
158:47 - like
158:48 - that uh in this case we're going to put
158:51 - it back to
158:53 - two okay or 2.53 I don't know that's
158:57 - entirely up to
158:58 - you okay so
159:00 - now
159:03 - uh we just need to give it a bit of
159:06 - spacing this one should go at the bottom
159:09 - here so what I'm going to do uh for the
159:12 - I
159:13 - think I will
159:16 - uh
159:21 - create I'm just trying to think how I
159:24 - could put it at the
159:29 - bottom task
159:36 - item
159:44 - okay
159:53 - H display let me inspect
160:04 - this it should have imine zero Auto
160:14 - somewhere
160:16 - okay so the date it is margin top to
160:20 - Auto okay so task
160:27 - item
160:32 - date date margin top to Auto so it's
160:38 - going to have leave spacing for you know
160:43 - in between
160:44 - here okay as you can see now we have the
160:48 - spacing okay so that's what we're
160:51 - looking
160:52 - for so we need to format this state like
160:56 - this instead of like
160:58 - this okay um so for us we're going to
161:01 - create a new utility utility function to
161:06 - format the date I'm going to say
161:11 - format date
161:13 - tojs Okay so we're just going to use
161:16 - this to format the date to
161:18 - whatever date that we want
161:23 - okay uh like what I showed you so that's
161:26 - how we have to format the date so I'm
161:29 - going to say
161:30 - export
161:32 - second we're just going to export
161:34 - default format
161:36 - date okay and then we're going to pass
161:38 - in the date we're going to format
161:41 - here okay uh for us to make this easy
161:46 - we're going to be using moment npm I
161:52 - moment so moment is a package that can
161:55 - be used to format dates okay so here
161:57 - we're just going to
161:59 - return
162:00 - moment and then we're just going to pass
162:02 - in the date we're going to format so
162:04 - we're going to do day month and year
162:07 - like this so that's how we're going to
162:08 - format the date and then we're just
162:10 - going to export default
162:12 - here
162:14 - export default for my date so uh let's
162:18 - go back to task
162:22 - item where we have the
162:26 - date here we just need to
162:30 - import format
162:35 - date format
162:38 - date and then we just pass in the date
162:41 - not as an object so we just need to
162:44 - import that
162:48 - uh it should be format date and it's
162:51 - exported as
162:53 - default okay so we should have the date
162:59 - formatted
163:01 - uh okay so here's the date it's
163:04 - formatted to our
163:07 - liking all
163:09 - right so now we just need to style these
163:13 - other stuff here
163:15 - so let's go back to the task item and
163:18 - style the rest of the items there so uh
163:22 - let's start with the
163:26 - H1 okay so we have the date let's do
163:33 - H1 H1 I'm going to give it a font size
163:36 - of 1.5 R and a font weight of 600 you
163:39 - can give it the color you want and then
163:42 - I'm going to select
163:44 - task
163:46 - footer here I'm just going to do display
163:49 - flex and Center align items to Center
163:52 - and give it a gap of 1.2 RAM and then
163:55 - I'm going to Target the button in there
163:57 - I'm just going to give it a border none
164:00 - and outline of none and set the curer to
164:03 - pointer and I am going to Target the
164:08 - icon icon I'm going to give it color
164:12 - gray too and the font size of 1.4
164:16 - all right so let's
164:19 - refresh it's taking ages to load my
164:21 - internet connection is really slow okay
164:23 - so now we just need to display to set
164:26 - the edit actually to give it a
164:28 - margin uh left of
164:32 - Auto okay do
164:35 - edit margin left to Auto like
164:40 - that
164:41 - um so I'm going to Target
164:47 - the incomplete do
164:51 - completed and is it incomplete do
164:55 - incomplete incomplete I'm going to say
164:58 - display inline block and give the
164:59 - padding a back color and the Border
165:03 - radius okay so the other thing that I
165:05 - want to give it is going to
165:09 - be different colors okay so by default
165:14 - said to danger but want to change the
165:16 - completed to Green
165:19 - completed it should have color green
165:23 - back green dark like
165:25 - that okay so there's our tasks so we
165:29 - have in it's wrong spelling for
165:33 - incomplete so it should be
165:37 - incomplete incomplete like that
165:40 - and we need to also what do we need here
165:52 - okay I'm just trying to
165:56 - see okay we haven't added the sign up
165:58 - button yet we're going to add that later
166:03 - on okay so we have a caser to
166:06 - pointer so when I click here we want to
166:09 - toggle a
166:10 - model
166:12 - okay so first off I'm going to change
166:15 - this font to make to match whatever font
166:19 - I'm using here okay so the font I'm
166:22 - using there uh let me double check what
166:26 - the name of the font I'm
166:28 - using so it's called n
166:31 - nunito Nito I don't know how to
166:33 - pronounce it so here we are going
166:36 - to import
166:39 - it instead of enter it's just n like
166:43 - that and then
166:49 - Nito
166:50 - Nito okay so we have sub subsets it
166:53 - should be Latin as it
166:56 - is um we need the font
167:00 - weights so we're going to do
167:03 - weight so I'm just going to do all the
167:05 - way to 800 all the way up to 800 I don't
167:08 - know if it is 900 so let's leave it up
167:12 - to
167:13 - 800 like that make sure you put a
167:16 - comma and then subsets should be Latin
167:20 - yeah and then here instead of iner it
167:24 - should be
167:25 - Nito so that's going to be the font size
167:29 - not the font size I mean the font family
167:31 - okay so now as you can see it's using
167:34 - the
167:34 - correct font family so what we need to
167:38 - do now is um let's start with the sign
167:42 - out
167:43 - button sign up button so it's in the
167:51 - sidebar okay
167:54 - so sidebar I'm just going to close
167:57 - everything make sure it's
167:59 - clean
168:02 - components it's going to be in the Side
168:06 - Bar okay so here in button it should be
168:11 - a sign out button we're going to create
168:14 - a component for the
168:16 - button okay
168:19 - so button I'm going to do button.
168:24 - TSX it's a client component use
168:29 - client react functional component and
168:31 - Export so this button is going to have a
168:34 - lot of
168:35 - properties okay let's start with an
168:39 - icon
168:41 - icon is going to be optional it's going
168:45 - to be react.
168:49 - node react node and then we're going to
168:52 - have
168:53 - name name it's going to be also
168:57 - optional it's going to be string and
169:00 - then
169:02 - background background it's going to be
169:05 - optional I'm just going to paste in the
169:07 - rest of the the properties but so we
169:11 - have the
169:12 - selector and then we have the padding
169:14 - optional border radius optional font
169:17 - weight optional font size optional so
169:19 - everything here these are the properties
169:20 - that we so we have the double
169:23 - click okay we don't want the double
169:25 - click
169:26 - actually uh we are not going to use a
169:29 - blob are we so we don't want this blob
169:32 - here we don't want that the
169:36 - Border okay uh we don't want this
169:39 - property or this okay so I think these
169:42 - are the properties that we want here
169:45 - we don't this uh select a property as
169:49 - well okay so now I think we have the
169:53 - basic so the type we going have submit
169:55 - type of button or reset okay so here
170:00 - we're going to get the
170:03 - properties the
170:07 - structure why is it not Auto autoc
170:12 - completing
170:13 - okay uh we got the properties so now we
170:18 - are just going to utilize those
170:21 - properties first off I'm going to get
170:23 - the theme
170:26 - con
170:27 - theme Global State like that and then
170:32 - we're going to pass the theme
170:36 - Here theme equal to
170:40 - theme okay and uh let's do Style
170:48 - what is the issue
170:55 - here what's the
171:05 - issue I don't know what the issue is
171:09 - about and then we just set those
171:11 - properties to the Styles
171:13 - okay
171:22 - uh all right so now we just
171:25 - set those properties padding and then
171:29 - we're just setting to the padding so we
171:31 - can
171:32 - do a default padding here as well okay
171:37 - this a default padding if we don't set
171:39 - one a border radius we can give it a
171:42 - default border radius if we don't set
171:45 - one okay but uh I don't think I need a
171:48 - border radius by
171:50 - default actually we can have one so the
171:53 - font weight let's set it 500 by
171:57 - default font size uh we can leave it as
172:01 - it is
172:04 - border like
172:07 - that I think that would do
172:10 - it why do I have an issue here because
172:12 - there's no comma
172:17 - okay so we have default
172:21 - properties so here we're just going to
172:23 - get rid of this and then we are going to
172:26 - put in the if we have the
172:30 - icon only if we have the icon we're
172:33 - going to
172:34 - display the
172:36 - icon and then we're going to have
172:40 - name
172:43 - name span actually I was thinking to do
172:47 - a blob let me see if I did no I didn't
172:49 - do it here so this it's not necessary
172:52 - I'll
172:53 - save okay so what we need to do
172:58 - now uh let's
173:00 - do
173:02 - con button
173:05 - styled like that and then I'm going to
173:10 - copy like
173:13 - this uh make sure we import
173:18 - styled like that and then we
173:21 - save so we
173:24 - should uh wait where are we supposed to
173:27 - render the button
173:32 - again okay so in the sidebar here we are
173:36 - going to render the
173:41 - button okay so I'm trying to think
173:46 - uh because we're going to be importing a
173:49 - button as well
173:51 - from we're going to import it from um
173:55 - clar okay so I'm trying to think how I'm
173:59 - going to
174:01 - display but I'll just do
174:05 - this um sign
174:08 - out sign
174:10 - out and then it's going to have a
174:12 - position of relative
174:16 - okay and then I'm going to do button in
174:20 - here the component we
174:22 - created button like that and then we
174:27 - just need to pass those
174:28 - properties that we created so I'm just
174:31 - going to paste in those properties so we
174:34 - have the sign out the
174:35 - name uh select a button login I'm going
174:38 - to get rid of the
174:40 - selector and then we have the padding
174:44 - border radius font weight font
174:47 - size and then I'm going to pass in the
174:49 - icon
174:51 - prop
174:53 - icon equal to I'm going to do log
174:58 - out
175:00 - icon and then on
175:03 - click we don't have the sign out yet I'm
175:07 - going to
175:09 - save uh let's refresh we should have a
175:13 - button so there it is there's the sign
175:15 - out
175:16 - button
175:18 - okay so uh we are going to sty
175:28 - that all right I'm just trying to
175:34 - think
175:43 - okay
175:45 - M 1.5
175:48 - R okay so okay we need to give it margin
175:52 - 1.5
175:53 - frame so
175:56 - M margin
175:59 - bottom 1.5
176:04 - FR how many is this yep
176:09 - mb6 so it should have mb6 for margin
176:12 - bottom 1.5 r
176:15 - like that
176:17 - mb6 okay so now we just need to go ahead
176:20 - and start this
176:25 - button okay uh I think we need to give
176:27 - it a left as
176:30 - well so we
176:36 - have
176:40 - um so we have a padding for this one so
176:43 - padding
176:46 - but imine so it should be everywhere
176:50 - so M6 then around it should be around so
176:55 - it should be M6 okay so now we just need
176:59 - to go and start this
177:03 - pattern so we go down
177:07 - here yeah let's start with the let's
177:10 - give a display Flex let's start with the
177:13 - position
177:14 - position relative we could we could use
177:17 - some St um some tail in CSS by the way
177:20 - position relative and then I'm going to
177:22 - give display flex and align
177:24 - Center and then I'm going to give it a
177:26 - color overflow of
177:29 - hidden actually we don't need the
177:30 - Overflow because we're not going to do
177:32 - some effects I was planning to do some
177:34 - half effects on the
177:37 - button uh there it is it's looking
177:39 - pretty good so far and then I'm going to
177:41 - Target the
177:42 - icon I'm going to give it margin
177:45 - right of one
177:48 - ram and then I'm going to give it a
177:50 - color of white or you can give it gray
177:54 - zero to I think I'll give it color gray
177:59 - zero to make it not that
178:04 - bright let's do gray three let's see
178:06 - what we
178:09 - have uh seems to be not
178:12 - working
178:17 - okay so the theme prop is included
178:21 - here I'm going to inspect to see why the
178:29 - color we
178:36 - 900 okay for some reason the
178:42 - color is not showing
178:52 - okay color gray three Oh wrong wrong
179:03 - spelling okay I think I'll also do the
179:09 - text
179:11 - uh did I do color here
179:15 - click okay so for the click we're going
179:17 - to do on
179:18 - click we're going to say that to
179:22 - click type uh we need to set the type to
179:27 - type
179:30 - okay uh we didn't do the color so let's
179:33 - do the color in here instead so color uh
179:37 - instead of color white let's do
179:40 - gray color gray to I think
179:44 - okay and uh when we have her we're going
179:47 - to let's do a
179:51 - transition
179:52 - transition let's do ease let's do in and
179:56 - out
179:57 - actually and
179:59 - then when we have
180:02 - a we're going to set that to gray
180:06 - zero uh man connection is like really
180:10 - weird for
180:12 - me all right as well as
180:16 - uh the
180:21 - icon so we want the icon to also change
180:26 - color okay so now we should try
180:31 - to we also need to do this transition in
180:34 - the icon
180:36 - itself uh let's do sign
180:40 - out sign out
180:42 - clck
180:52 - uh
180:56 - oh the sign out is here okay okay okay
181:04 - okay user button so in the user button
181:08 - that's where the sign out is so if I
181:10 - click here uh in the original here so
181:12 - the sign out is here
181:14 - so this
181:19 - one okay I can make it
181:22 - trigger this one okay we don't have a
181:25 - sign out method I'm not sure if we have
181:32 - one I think we do have one so we need to
181:36 - to import the sign
181:41 - out so sign out
181:44 - we need to
181:46 - import sign out from use click hook use
181:51 - click hook make sure you import the use
181:54 - click
181:55 - hook and then we need to do router con
181:59 - router equal to use router from next
182:04 - notification and then we're just going
182:06 - to
182:08 - push okay after we sign
182:12 - out
182:19 - uh one
182:24 - click on click here we are just going
182:30 - to go to the
182:34 - sidebar here
182:36 - click so the sign out we've imported in
182:39 - the
182:41 - wrong wrong component
182:47 - it should be in
182:50 - here it seems like we have route
182:57 - already use
183:02 - CL okay so
183:05 - now is
183:08 - it it just
183:12 - click okay so it's a cic
183:22 - function we have sign out like that but
183:26 - it's going to take in a cbic
183:28 - function
183:39 - okay router.
183:42 - push we just going to go sign
183:45 - in sign in like this so let's see if
183:49 - this
183:51 - works uh let's go ahead and sign
183:56 - out click okay so now we've signed out
184:01 - we can continue with
184:04 - Google and then it's going to lead us
184:07 - back to the
184:08 - homepage
184:10 - okay so now we can sign out
184:15 - uh what we need to do
184:17 - now we need to be able
184:20 - to you know toggle so when
184:24 - I click this create task we want to be
184:27 - able to toggle that okay so I think I'll
184:32 - take a break for now and then I'll be
184:34 - back on the next video when we are going
184:36 - to be working on the toggling of the
184:39 - model I'll see you in the next one okay
184:41 - welcome back so now
184:44 - I think uh let's start by implementing a
184:47 - loading bar at the top here so let me
184:49 - show you what I mean so if I go to my
184:52 - website if I click one of these links as
184:54 - you can see there's a top loader here a
184:57 - bar we're going to be using a package
184:59 - called react top loader so it's called
185:03 - react actually it's called next top
185:07 - loader like
185:10 - that so copy this command let's open a
185:15 - new
185:16 - terminal uh let's
185:21 - install Okay so that's what we need to
185:23 - do so let's go to the
185:25 - layout by the way so currently it only
185:29 - works with
185:31 - links okay so make sure whatever you're
185:34 - using to route with is a
185:37 - link um let's
185:40 - go to the layout
185:44 - so let's
185:45 - import the top loader next
185:49 - loader like this import next loader from
185:52 - nextjs top loader let's go above the
185:56 - context in the body here we're just
185:58 - going to say next top loader like that
186:02 - and then we're just going to put a few
186:04 - properties so the properties the first
186:07 - one I'm just going to give it a height
186:09 - I'm just going to say that to two
186:10 - pixels uh the next thing that we want is
186:14 - going to be
186:15 - color color let's say that to Red for
186:18 - status red um the other thing that we
186:23 - need is an using
186:25 - functionality so we're going to be using
186:27 - a
186:28 - cubic
186:30 - cuic Basia I don't know how to pronounce
186:33 - this is it Bia or Basia I don't know how
186:37 - to pronounce
186:38 - it beier I don't know I think it's
186:42 - French uh but now we're going to go and
186:46 - put some
186:49 - properties uh this one should be
186:52 - zero okay and this one should be one you
186:56 - can kind of generate this there's a
186:58 - generator for this properties it's
187:01 - called
187:03 - cubic B here if you go here you can kind
187:07 - of generate you know these properties
187:09 - and then you can copy whatever
187:11 - properties you want you can simulate see
187:14 - what it looks like so now let's see if
187:17 - it's working so now as you can see when
187:20 - I click the
187:22 - link it's working okay but I'm just
187:25 - going to change this color here uh I am
187:28 - going to go to the themes and I'll I'll
187:30 - copy the green dark I'll just copy the
187:33 - hex value and then I I'll
187:36 - paste uh I guess it didn't
187:39 - work I'll
187:41 - copy this green
187:45 - and paste so we should have a nice green
187:47 - color by the way if you want to get rid
187:49 - of this loading spinner here you can so
187:52 - you can just say spinner short spinner
187:56 - you can just turn that to false okay and
187:59 - then you have to refresh the
188:00 - page okay so now we have that uh the
188:03 - loading uh let's move to the next
188:06 - chapter
188:08 - so uh let me
188:12 - see
188:18 - okay uh for
188:22 - now we want to fetch this
188:25 - data when we have the user so sometimes
188:28 - there might be an
188:31 - issue so let's go to the
188:35 - context so if we have the
188:38 - user I'm going to say
188:41 - if user and and then we're going to
188:44 - fetch this the tasks so let's just get
188:48 - the user oh like this so con
188:53 - user like this Con to user and then use
188:55 - user coming
188:58 - from uh clck next next JS okay then
189:02 - we're going to fet the data when we have
189:04 - the
189:06 - user okay but nothing happens it doesn't
189:10 - update so once we have the user we want
189:13 - to reender this so we're just going to
189:15 - rerender based on the user like
189:17 - that so
189:19 - refresh okay perfect so now it
189:24 - works all right so
189:28 - now
189:30 - we need to do
189:33 - loading let's do CSS
189:38 - loaders Spinners okay I think I I'll
189:42 - just take any of this
189:44 - Spinners I'll take
189:48 - this all
189:52 - right uh
189:56 - copy and go
189:59 - to the global I'll just paste those
190:02 - tiles
190:03 - in and then uh we just need to create a
190:07 - span with a class of
190:09 - loader so let's go to the context
190:16 - provider context provider
190:20 - here we're just going to
190:25 - return a div and then let's put a span
190:30 - class
190:31 - name
190:33 - loader like that okay so if you see a
190:38 - loading here so here uh let's do a class
190:41 - name let's give with
190:44 - width
190:46 - four and height
190:49 - four and then we're going to do
190:52 - Flex item
190:56 - Center and then justify
191:00 - Center okay so it's basically Flex
191:03 - centering it
191:06 - here okay for the
191:09 - color uh you can give it that green
191:12 - color if you want
191:14 - to um if you go to the
191:20 - themes uh oops we need to go to the
191:27 - themes I think I'll give it this grade
191:29 - in color here can't remember which
191:31 - gradient it is
191:34 - so oh it's oh it's a border we cannot do
191:38 - a gradient on a
191:39 - border uh
191:41 - let's
191:46 - primary green
191:49 - green let's take the light one to see
191:52 - how it looks
191:55 - like all right so now let's refresh
192:01 - this oh I think we
192:04 - need did I copy the wrong one color
192:08 - green
192:10 - light I don't know why the green light
192:12 - looks
192:18 - white okay
192:20 - so okay so I think this will
192:24 - do um when it's loading we also want to
192:28 - do it for this one we're just going to
192:30 - do that later but for
192:32 - now I think what we need to do is delete
192:36 - the task and edit so let's start by
192:40 - delete here I'm just going to create a
192:45 - dynamic route okay so to delete we're
192:48 - going to delete based on ID okay and
192:51 - then inside the ID we're going to create
192:53 - route.
192:55 - TS and then
192:58 - export it's going to be async and
193:02 - then it's going to
193:04 - be function
193:08 - delete
193:11 - delete uh let's just copy a boiler plate
193:17 - here
193:20 - delete okay so we're going to do
193:24 - response should be a request actually no
193:27 - response
193:32 - request all right so we're going to do a
193:35 - try
193:37 - catch try
193:41 - catch like that that and then we're
193:43 - going to do a
193:47 - cogg and return we're just going to
193:50 - return next
193:52 - response we need to import next
193:57 - response like that all right so for us
194:02 - to delete we need the user ID and we
194:05 - also need to get the ID from uh from the
194:10 - params okay so uh what we're going to
194:13 - do in here we're going to get the
194:19 - params
194:22 - params and
194:25 - then we're going to get the ID like that
194:29 - params and then we're going to distract
194:31 - and get the
194:33 - ID okay so we are going to say
194:39 - const user
194:41 - ID
194:43 - so make sure we import the all the out
194:47 - and then we're going to get D structure
194:49 - the ID from
194:52 - params okay like
194:55 - that so uh we just going to check if we
194:59 - don't have the ID and then we're not
195:02 - going to be authorized to delete
195:04 - anything okay so we're going to delete a
195:06 - task B on the ID so we're going to say
195:08 - cons task equal
195:11 - to uh we need to import the Prisma from
195:15 - the connect from the U from the U here
195:20 - connect find
195:22 - unique so this is actually not find
195:24 - unique so do task
195:28 - dot uh should be
195:32 - delete delete where the user ID okay
195:38 - where ID is equals to
195:41 - whatever ID ID we are sending through
195:45 - the from the uh
195:47 - client okay so we're going to delete
195:50 - whatever ID matches this one what id was
195:53 - sending from the client so I'm going to
195:54 - show you what it looks
195:57 - like uh we're going to get rid of these
196:00 - console logs by the way later on so this
196:02 - is just for debugging to see how things
196:04 - are
196:06 - working and then we're just going to
196:10 - return so uh now what we need to
196:13 - do is we need
196:17 - to we need to um send the ID okay from
196:22 - the client so let's work on the
196:26 - delete so for the delete uh let's go to
196:29 - the
196:30 - global I'm want to say
196:34 - const uh
196:37 - delete task equal to
196:40 - async async so it's going to take in the
196:46 - ID
196:49 - okay going taking the ID so here we're
196:52 - going to do try
196:54 - catch try catch and then we are going to
196:59 - say
197:02 - CG error and then we are going to uh do
197:07 - toast toast.
197:10 - error something went wrong
197:13 - okay so we're going to do con
197:16 - response equal to
197:18 - exos ex. delete and then tasks and then
197:25 - ID okay so the ID we're going to pass in
197:28 - here we're going to delete that
197:30 - item all right and then uh we are going
197:33 - to say
197:35 - toast do success task deleted when we
197:38 - delete the task so after that I am I'm
197:42 - just going to refresh all tasks okay
197:45 - after we delete we're going to get the
197:47 - update refresh the tasks so we have to
197:51 - send the function here delete T by the
197:54 - way we need to also send is loading
197:56 - because we need to do the loading
197:58 - state so uh let's go to all
198:04 - tasks uh the component all
198:09 - tasks all
198:11 - tasks
198:16 - okay all tasks or
198:18 - tasks okay so for
198:23 - loading
198:25 - GED okay let's get the loading here is
198:32 - loading is
198:34 - loading let's create a component for
198:39 - it loading
198:44 - actually doesn't matter uh we just need
198:47 - add that class
198:53 - name okay
198:56 - so
198:58 - if if is not
199:01 - loading not
199:07 - loading so if it's not loading we are
199:10 - going to uh
199:15 - uh do
199:16 - this
199:27 - else like
199:32 - that okay
199:41 - so
199:42 - okay so it should have loading there as
199:46 - you can see
199:48 - loading okay but for this
199:53 - loading
199:56 - uh is
200:02 - loading let me say
200:06 - let
200:08 - con is
200:10 - loading
200:13 - equal to
200:15 - True okay so I'm just going to get rid
200:18 - of this for now is loading equal to
200:22 - true so it should be loading here let's
200:26 - tell
200:29 - this
200:31 - plus tasks
200:36 - loader okay
200:40 - so span
200:44 - uh I can't remember the name it should
200:46 - be
200:49 - loader like that so it should spin
200:53 - here uh we need to Center
200:57 - this let's do can I think
201:02 - withd
201:04 - four uh
201:07 - Flex item
201:10 - Center justify
201:13 - Center
201:16 - okay
201:18 - uh
201:24 - height all right I think we can put it
201:27 - the center here I think it makes sense
201:30 - or you can do it individually I don't
201:32 - know it's up to you I think I'll just do
201:34 - one loader like
201:40 - this okay and and
201:45 - uh I
201:46 - think that's it I'll just put the
201:50 - proper I put
201:54 - here like that and then get rid of
201:57 - this okay and we should have like a
201:59 - loader for a split second here you can
202:02 - put like a skeleton loader as so it's up
202:04 - to
202:07 - you
202:09 - okay nice
202:12 - so you can get rid of the main loader if
202:14 - you want
202:16 - to but uh that's up to
202:20 - you now uh now that we have the loader
202:23 - let's work on the delete so we need to
202:26 - go to the task
202:28 - item task item and then we need
202:33 - to do a me function for
202:38 - delete okay so for that we are going to
202:43 - delete one
202:46 - click we're going to run a quic
202:52 - function okay so for delete now we're
202:56 - just going
202:58 - to get the delete
203:02 - task is that what we've named
203:05 - it yep delete
203:09 - task like that and then we just need to
203:11 - pass in the ID of the task that we want
203:14 - to
203:15 - delete all right and
203:21 - uh
203:24 - uh delete task and then we pass in the
203:27 - ID which we already have
203:31 - here okay so hopefully when I click this
203:33 - it should
203:35 - delete nothing happened
203:39 - seems okay it did delete
203:42 - but there's an issue
203:47 - fetching the
203:52 - data okay uh
203:55 - let's
204:00 - create create content let's create more
204:05 - items shall
204:10 - we
204:13 - submit okay submit submit submit submit
204:16 - submit submit okay so we should have a
204:18 - lot of items Let me
204:21 - refresh okay so there it is I'll get rid
204:25 - of this
204:26 - create so let me try to delete this oops
204:33 - delete
204:39 - delete delete Okay so
204:44 - it's
204:45 - working but I don't want this blinking
204:49 - effect let me see if there's a way
204:53 - around
204:56 - it let's try
205:01 - to let's get rid of the loader actually
205:06 - let's just leave the main
205:10 - one
205:13 - okay let's get rid of this
205:20 - loader okay so it
205:23 - should work like
205:25 - this but it's taking a bit of time
205:28 - there's a delay when you
205:31 - delete so it's up to you if you want to
205:34 - you can put a
205:40 - loader
205:42 - yeah there's a delay uh we need to fix
205:46 - that we'll fix that uh in the coming
205:54 - section okay
205:56 - so yeah we can delete now we can delete
206:00 - so we need to work on
206:02 - [Music]
206:03 - the
206:04 - editing which is the put method we
206:10 - did
206:11 - for some reason I need to click twice to
206:14 - delete so let me double check the
206:21 - function task
206:25 - item
206:28 - onclick why do I need to click
206:39 - twice so click
206:42 - nothing happens click again something
206:43 - happens okay I don't know why I need to
206:46 - click
206:47 - twice
206:49 - um but I'm going to fix that later
206:52 - on yeah we we have an error as well here
206:55 - so we'll fix it later now let's just
206:58 - work on the editing so when I click
207:00 - complete I want to toggle incomplete as
207:03 - well okay and uh I think I'll do that in
207:06 - the next video okay so I just realized
207:09 - when we were deleting we had to click
207:11 - twice for us to delete the item um I was
207:15 - missing and await because I using async
207:19 - so it doesn't give you a warning
207:21 - unfortunately so we have to make sure we
207:24 - do
207:25 - await like that that's why we're getting
207:27 - record does not exist because we click
207:30 - twice okay so now let's save so
207:34 - now let's click now it's deleting we
207:38 - don't need to click twice anymore and
207:40 - also the pop up uh the toast is not
207:44 - showing okay uh we had a wrong input may
207:49 - I had the wrong input not you but I had
207:51 - the wrong one so it should be just react
207:53 - hot toast like this then save so when I
207:57 - click it should be able to show the
207:59 - toast
208:01 - okay so the next step uh I
208:06 - think let me go to the all tasks I'm
208:10 - just going to
208:13 - Cog all of the
208:17 - tasks responds to data let's inspect to
208:20 - see what we
208:22 - have I'm going to
208:27 - refresh okay so we have four
208:31 - items uh all of them should be completed
208:36 - I
208:40 - guess
208:43 - okay so we need to
208:46 - get we need to create some items which
208:49 - are not
208:52 - completed okay but these some of these
208:54 - that are completed it doesn't show it's
208:57 - completed I think we might have made an
208:59 - error somewhere so let's go to task
209:02 - item uh it's completed so it's completed
209:05 - it should show this completed button so
209:08 - I don't know where we have made an error
209:10 - let's go to
209:12 - tasks oh yeah here so it should be task
209:16 - is
209:18 - completed is completed like this so it
209:21 - should be green now okay so now this is
209:24 - the completed task we need to show the
209:27 - uncom the incomplete tasks so first off
209:31 - let's just create
209:32 - more content which is
209:36 - not
209:40 - completed
209:42 - not
209:46 - complete completed
209:50 - one some random
209:53 - date uh let's just
209:57 - submit random
210:03 - submit submit
210:06 - submit okay so now we should have decent
210:09 - amount of data to work with
210:11 - uh let's refresh or we're going
210:14 - to refresh by the way when we
210:18 - are we're going to refresh when we
210:21 - are uh creating a task when we when
210:23 - we're creating a model so we're not
210:25 - doing that yet so now we need to
210:28 - display uh the
210:30 - completed the to-do and the important
210:33 - tasks so what we need to do is create
210:36 - those pages we have those pages already
210:39 - but we just need to display the data
210:42 - okay so for that uh let's start
210:45 - with the completed so this is easy by
210:48 - the way to do the completed tasks so for
210:53 - completed uh we are just going to do a
210:58 - filter
211:00 - con
211:03 - uh completed
211:07 - tasks equal to we're going to say tasks
211:11 - do
211:12 - filter and then we are going
211:16 - to get a task and then we're going to
211:22 - return task that is
211:26 - completed is
211:30 - completed okay so the tasks that are
211:32 - completed uh that have been
211:35 - completed task do completed equal to
211:37 - True okay so this should be completed
211:40 - tasks
211:42 - completed tasks okay when the complet
211:45 - equal to true and then uh we
211:49 - should have an array containing
211:53 - completed
211:55 - tasks
211:57 - okay uh there it is four we have four
212:01 - items here so this is the array it is
212:03 - completed tasks which is equal to true
212:06 - so I'm just going to pass that into our
212:09 - stage
212:12 - complet the
212:14 - tasks I'll get rid of the
212:18 - console as well as this console here
212:20 - I'll get rid of
212:22 - it so we have the completed
212:27 - page where is the
212:31 - complete
212:34 - incomplete okay so this is the page for
212:37 - the
212:38 - completed it's going to be easy
212:41 - so we just need to
212:43 - say
212:45 - const we are going to get completed
212:50 - tasks okay from the
212:53 - State Global
212:56 - context and then here we are just going
212:59 - to return the tasks
213:02 - component tasks and then we just
213:08 - pass uh the tasks okay like this the
213:12 - title we setting that to completed tasks
213:16 - and then the tasks is the completed
213:18 - tasks so when I visit the page completed
213:21 - hopefully we should be able to see
213:23 - completed task like this okay so now we
213:25 - have the completed tasks we have all
213:28 - tasks
213:30 - completed and now we need to do the
213:34 - important so we're doing the same thing
213:37 - as well for the important we're just
213:39 - basically filtering
213:41 - the task to get the
213:45 - important okay so
213:49 - con
213:52 - important
213:53 - important tasks uh we're going to filter
213:56 - and then we're going to return where
213:58 - important is set to
214:02 - True
214:04 - okay so and
214:07 - also uh so we have import completed
214:12 - important we
214:15 - also want incomplete tasks okay so con
214:20 - incomplete
214:22 - incomplete
214:24 - tasks uh we just going to
214:27 - return uh it's completed equal to false
214:31 - okay so I'm just going to send those
214:33 - values here
214:35 - important and incomplete tasks
214:39 - tasks okay so
214:42 - important just go to the important page
214:45 - we're just going to do the same drill
214:47 - here so con we are going to
214:51 - get uh this is the
214:53 - important important tasks from the
214:56 - global
214:58 - State all right so we are going to get
215:02 - the component the task component and
215:05 - then we just put important task like
215:07 - this so we should be able to have the
215:09 - page now so if go to
215:11 - important uh it seems like there's an
215:14 - issue with the important let's go to the
215:18 - global so is
215:22 - important equal to
215:25 - True uh let
215:27 - me c this let me console log to
215:31 - see what's the important is showing
215:36 - important tasks uh let's go to the
215:39 - console and see the result so important
215:43 - tasks we do have an array here for the
215:46 - important
215:48 - uh what's the property
215:54 - though okay so is important okay is
216:01 - important is
216:03 - important okay we do have the
216:06 - items I do not know
216:09 - why we have an
216:14 - issue okay so now it seems to be showing
216:18 - now all tasks
216:20 - important completed okay don't worry
216:24 - about this one we need to give a key so
216:27 - we
216:29 - are okay so which component do I not
216:33 - have a key on let's go to the
216:37 - tasks so we have a key here
216:41 - I don't
216:42 - know uh let me find
216:45 - map map to see where I didn't put a
216:49 - key okay here we didn't put a key so we
216:52 - need to make sure we put a key here key
216:55 - we can just put anything anything that
216:57 - is unique so let's put item title or ID
217:01 - if we do have one we do have an ID so we
217:04 - put the key hopefully that error should
217:07 - go
217:09 - away uh I do not know why it's still
217:12 - there okay it's gone
217:14 - now so now we can navigate to this pages
217:18 - so the only page that is
217:20 - left is the incomplete
217:25 - page uh let me go to the global I'm
217:28 - going to copy the
217:31 - incomplete
217:33 - incomplete we are just going to do the
217:35 - same
217:36 - thing
217:38 - destructuring from the global State
217:42 - context and
217:45 - uh we are going to render the
217:49 - tasks tasks
217:52 - component and
217:54 - then this is what we have save so we
217:58 - should this should be yep
218:01 - incomplete
218:07 - important okay so this is completed the
218:10 - important tasks all the tasks do it
218:16 - now all right so I
218:20 - think one of the
218:23 - issue actually we're going to fix that
218:25 - issue later on the item that I click I
218:29 - create first I want it to be at the
218:32 - bottom the latest item I wanted to
218:35 - be at the beginning so we need to do
218:38 - some sorting of the items we're going do
218:40 - that when we uh create our
218:43 - model uh but I
218:46 - think that's pretty much it
218:49 - for the pages so now we need to sort out
218:53 - this button here when we
218:56 - click okay so we want to be able
218:59 - to show the
219:03 - user
219:04 - button
219:07 - okay so uh we're going to do
219:10 - a bit of a hack let me close everything
219:16 - here uh
219:20 - sidebar so we're just going to go for
219:23 - the sidebar we're going
219:26 - to do a bit of a hack to do
219:32 - this sidebar styled okay so so we have
219:37 - the profile
219:39 - overlay I want to add a user
219:42 - button after this image do
219:46 - user I'm going to say
219:49 - BTN okay so this user button I am going
219:53 - to import user
219:56 - button user button from
220:01 - clier all right so it should be imported
220:05 - by now so yeah use a button and let's
220:09 - see so when I click we're going to be
220:10 - able to see your account and you can
220:12 - sign out you can change your
220:15 - AV
220:17 - okay so
220:20 - uh what are we going to do for the user
220:24 - button we are going to
220:28 - set position to
220:31 - Absolute absolute and then Z index I'm
220:35 - going set that to 20 z20 and then top
220:39 - I'm going set that to Z zero and then
220:41 - width I want to say that to
220:44 - four 100% And then
220:48 - height height I'm going to say that to
220:51 - four as
220:53 - well all right
220:56 - uh so when I
220:58 - inspect you should be able to see
221:02 - this pattern
221:04 - here okay so we need to style this
221:09 - pattern more
221:10 - in the Styles so because we're going to
221:12 - do more more
221:15 - Styles okay so now let's
221:20 - uh scroll
221:23 - down for and then we have to find
221:26 - somewhere to style
221:32 - it all right so I'm just
221:38 - thinking um the
221:43 - image I'm just looking at the
221:47 - reference how I did the
221:53 - image okay so let me inspect
221:58 - here
222:00 - so the class name okay so yeah the one
222:04 - that we want we need to select this
222:08 - CL CL root
222:13 - box okay
222:15 - so in the
222:19 - profile uh I am going to
222:22 - select
222:27 - C to let's make it sure it's us a button
222:31 - like this just to encapsulate this in
222:35 - the user button now let's take it out of
222:38 - the profile and and put it separately
222:41 - like this so to make it cleaner so use a
222:46 - button and then we target the root box
222:50 - and then we're going to set the width
222:52 - 100% height 100% so it should be
222:58 - covering uh root box okay so as you can
223:01 - see it's covering the entire width and
223:04 - height all right so and then I'm going
223:06 - to
223:08 - Target the user button
223:12 - box oops copy this class name CL user
223:17 - button box don't copy the Lo locked
223:19 - class copy the ones which are not
223:23 - locked uh and then we go
223:26 - down then we're going to give width and
223:29 - height 100% as
223:31 - well okay and then I'm going to Target
223:33 - the button
223:36 - trigger button
223:38 - trigger
223:40 - and then I'm going to set the width 100%
223:44 - height and then opacity I'm going to set
223:47 - that to
223:49 - zero okay opacity to
223:52 - zero so as you can see it's not there
223:54 - anymore but when I
223:55 - click it shows okay when I click it
223:59 - shows the
224:03 - profile all right it nicely so it's like
224:07 - invisible but when I click it shows it
224:11 - shows the information about
224:12 - the profile okay you can manage this
224:16 - account you can sign out you can delete
224:19 - the account it's up to
224:21 - you okay so the it's
224:25 - invisible as you can see now but we want
224:27 - to get rid of
224:31 - uh I'm not sure if there's an
224:35 - outline but we can get rid of the
224:38 - outline if there is one but I don't see
224:40 - it so if you see it you can just get rid
224:42 - of the
224:44 - outline on active
224:47 - however but I don't see the
224:49 - outline now uh what I want to do I want
224:53 - to do the image okay to make it
224:58 - Dynamic so what I'm going to do
225:02 - now uh
225:04 - image I'm going to get the
225:08 - image from the user from the user
225:12 - object so we're going to
225:16 - con const
225:18 - user go to use
225:21 - user use user object and then we're
225:25 - going to get the
225:26 - user all right so what we're going to do
225:29 - is we're going to destructure for some
225:32 - let's see what the user object
225:34 - is again so I think we've done this
225:37 - before but let's see let's go console so
225:40 - there's the object the user here there
225:44 - it is uh it has some
225:47 - properties uh that we want so we
225:53 - can
225:56 - destructure this here so this is the
225:59 - user so it has the properties that we
226:02 - want so we want the name we want first
226:06 - name
226:08 - and last name and also the image
226:12 - URL okay so let's get those properties
226:16 - so we're going to say
226:17 - cons uh first
226:21 - name last name equal to user like
226:25 - that all right and
226:29 - uh uh what we can
226:33 - do like
226:35 - that and we also need the image
226:40 - URL image URL like
226:44 - that we need that
226:47 - property and it's going to be an empty
226:49 - string if we don't have it and uh yeah
226:54 - we just need to put those properties so
227:00 - instead of doing this uh we're just
227:03 - going to put the image
227:06 - URL like
227:08 - that
227:10 - okay so uh there's an issue here we need
227:14 - to
227:18 - set uh in the
227:21 - config where's the config next config
227:24 - next config okay so in in the next
227:27 - config we need to set where our images
227:31 - are coming from we need to put the link
227:34 - so next config
227:38 - images
227:43 - the domain so we want to set the domains
227:45 - for our
227:47 - images domains we're going to do Local
227:51 - Host and then we are going to
227:55 - do uh output
227:58 - clck this
228:01 - one
228:03 - okay and then uh I'm going to
228:07 - save all right so let's refresh
228:12 - this okay I think we need to refresh
228:15 - this restart the
228:19 - project okay so restart the project mpm
228:25 - randev and uh you just need to
228:30 - reload uh actually uh you
228:37 - should uh
228:44 - okay so it should be working now it's on
228:48 - 3,000 now it's no longer on
228:57 - 3,001 it's taking a while to
229:00 - compile but okay let's do something else
229:02 - while it's
229:06 - compiling uh the other thing
229:11 - that we want is the name so the name as
229:15 - you can see the name is still not the
229:17 - correct name that we
229:20 - want so for that we're going that's why
229:23 - we've
229:24 - extracted your first and last name of
229:27 - the
229:28 - user okay so here I'm going to get rid
229:31 - of this I am going
229:35 - to do first
229:38 - name first
229:42 - name and last
229:47 - name
229:49 - okay uh first name and last name
229:52 - actually it's going to be
229:55 - there first name last
229:58 - name like that and
230:01 - then
230:06 - uh seems like we've been signed out
230:12 - okay let's continue with Google because
230:14 - we are on a
230:17 - new New
230:20 - Port uh inv valid source
230:26 - prop okay so host name this one copy
230:30 - this go to the next
230:38 - config
230:40 - and put this in the domain and let's
230:48 - save all right so now so we have first
230:51 - and last
230:53 - name uh we need to capitalize this so
230:56 - class name capitalize so this will be
230:58 - coming from T and CSS by the way so
231:03 - capitalize so we want the first
231:06 - character of the first name to be
231:07 - capitalized and then the first character
231:10 - of last name to be also capitalized so
231:12 - now let's refresh
231:18 - this it's taking this time to
231:29 - compare all right so now the image is
231:32 - there
231:33 - now okay so that's the that's what we're
231:37 - looking for but but what I'm going to do
231:42 - I am going
231:44 - to change this image you can change you
231:46 - can do manage account and then you
231:49 - can you know change the image if you
231:52 - want to so here and do upload image you
231:57 - can drag the file so what I'm going to
232:00 - do I'm just going to open my public
232:03 - folder and then I'm going
232:06 - to drag that Avatar
232:09 - continue and then now we should have the
232:13 - image we can click and then we can sign
232:15 - out from here we can manage the
232:18 - account we can also sign out from here
232:21 - so the only thing that is left now is to
232:23 - click here and create a new task or we
232:26 - can also add a button here to create a
232:29 - new task up here you're going to see how
232:32 - we can do that later on but for now
232:36 - that's pretty much it we just need to uh
232:38 - work on creating a task okay so now
232:41 - let's start by updating this
232:44 - completed okay so what we're going to do
232:47 - let's open up this route so we had a put
232:52 - method there it is so here we are going
232:55 - to update only one uh one field so uh we
233:02 - let's get the
233:04 - ID the ID of the send in user from out
233:08 - and and the other thing that we want is
233:10 - the property that we want to change so
233:13 - in this case it's going to be the is
233:15 - completed it's going to be the only
233:17 - property that we're going to be changing
233:19 - we also need the ID of the item we're
233:21 - changing the property okay and then
233:24 - we're just going to
233:25 - await uh request to adjacent like that
233:29 - so now uh let's just check if we don't
233:31 - have the user and then we're going to
233:34 - return
233:35 - unauthorized like
233:37 - that and the other thing that we
233:40 - want
233:42 - is uh this should be in the try is the
233:45 - wrong place in the try like that and
233:50 - after that uh let's create a task that
233:53 - we want to update await Prisma task.
233:59 - update and then
234:02 - uh here we just update that task
234:06 - okay so in here we just going to say
234:11 - where ID that's the task we're going to
234:14 - update and then it's
234:17 - completed it's
234:19 - completed uh we just setting that to
234:22 - this property here okay so it's
234:25 - completed property we set it to that
234:27 - property like
234:29 - that okay uh or we can just do this like
234:34 - this okay because it's the same
234:36 - name all right so uh we are updating an
234:42 - item with this ID we're updating the is
234:44 - completed property with whatever
234:47 - property that is that we're sending from
234:48 - the front
234:49 - end all right and then now we're just
234:51 - going to
234:54 - return now we don't need the console by
234:56 - the way we just return the
234:58 - response okay so let's save and uh
235:02 - that's
235:03 - our method for updating so I'm that's
235:07 - pretty much it
235:09 - uh why do I have a delete
235:13 - here okay get rid of
235:17 - this okay so here we have uh put
235:21 - get and post so here we have the delete
235:26 - in the ID we could have done
235:29 - the the editing in this here but it's
235:33 - fine we can do here so now what we need
235:35 - to do is send whatever so when we click
235:39 - here we want to update this item here so
235:43 - let's go
235:44 - to task
235:47 - item so in the task item that's where we
235:50 - want to you know do the function for
235:54 - that okay
235:56 - so actually let's do it in the global
236:00 - global
236:01 - provider and then we do the function and
236:03 - then we get
236:05 - it
236:07 - through
236:09 - through our state
236:13 - so wait a minute so all tasks I'm going
236:16 - to collapse this collapse and then here
236:20 - I'm going to say
236:22 - const update
236:24 - task so here we're going to to send in
236:28 - the ID as well as the property of the
236:32 - task that we want to update in the in
236:36 - this case I'll just do an object here so
236:40 - I'll just do task so this task will be
236:42 - just an object which contains the ID and
236:45 - it also contains the property that
236:48 - Properties or property that we want to
236:50 - change and then we're going to do try
236:53 - catch and then we're going to do
236:55 - const rest equal to await and then it's
236:58 - going to be AOS put but this is the
237:02 - wrong endp point so we're just going to
237:04 - go into
237:05 - tasks API SL tasks and then task
237:09 - okay so now uh let's do a
237:13 - success we need to also call refresh the
237:17 - data here and also let's do a
237:20 - toast not root but
237:24 - toast toast do success task updated like
237:28 - this and then we re fetch the data and
237:32 - then here we are just going to C the
237:34 - error and show an error something went
237:37 - wrong when updating the
237:39 - task okay and uh that's it for update so
237:43 - now we just need to send in the data
237:47 - from so we need to send in the data from
237:49 - the task item so when we click the task
237:52 - item we just need to send in that data
237:55 - all right so uh task
238:04 - item okay so here we are we are doing on
238:10 - click and then we're going to do a cc
238:14 - function okay so now we do have a cc
238:19 - function so we also want to change the
238:25 - status
238:27 - um of this
238:31 - clicked okay
238:33 - so
238:35 - here when we updating what properties do
238:38 - do we want to update so we're sending in
238:40 - object and
238:42 - then in the back end we are getting that
238:46 - property all right so in this case we're
238:48 - going to do
238:50 - const task it's going to be an object so
238:54 - what we mainly need for in this object
238:57 - is the task ID as well as the is
239:02 - completed okay
239:04 - so here I'm going to do ID
239:10 - and
239:11 - then is
239:14 - completed okay and then we are going to
239:17 - set it to not whatever the opposite of
239:20 - whatever it
239:21 - was okay and then we're going to call
239:24 - the
239:26 - update uh
239:29 - update update task like this but we need
239:32 - to get that
239:34 - from
239:36 - here up
239:41 - Date Update task like this and then
239:45 - let's save so hopefully we are going to
239:48 - be able to update the task so let's try
239:51 - to click
239:52 - this we have an
239:54 - error so update task is not a
239:58 - function update task okay so it depends
240:02 - what button we click so we click the
240:04 - completed so this is
240:07 - completed uh
240:09 - uh it's okay so let's copy this and also
240:15 - put it here and the
240:19 - incomplete okay so the incomplete is
240:21 - basically the same thing here so let's
240:24 - save and let's click
240:27 - this okay we still have an
240:30 - issue update task is not a
240:35 - function so let's go back update
240:41 - task okay so
240:45 - let's C
240:48 - here update and also make sure the
240:52 - spelling is correct when you're
240:56 - importing and make sure you save also
240:59 - the file as okay
241:01 - update that was the wrong
241:03 - spelling up task so
241:06 - click okay as you can see it's changing
241:08 - now okay
241:12 - so it's working as
241:15 - expected so now what we want is to
241:18 - create a task so for that we are going
241:21 - to create a
241:23 - model so in This
241:28 - Global uh I'm going to create a model
241:32 - you can if you want to make this model
241:34 - Dynamic you can sort of con
241:39 - I want to do open model so you can put a
241:44 - key here to check to see what what key
241:47 - it is okay
241:50 - so I'm going to say
241:54 - const
241:57 - model model and then set model like that
242:01 - and then we have a key so we can put a
242:03 - key like if the model is equal to this
242:05 - key and then you know
242:08 - we can open that model and stuffff
242:11 - depending on what model okay so if if if
242:14 - like this right we can be like if
242:17 - model if model equal
242:20 - to whatever key and then you know we can
242:24 - do open the
242:26 - model
242:28 - okay uh in this case I'm just going
242:33 - to have this property without a key so
242:38 - set model equal to
242:40 - true and then close model equal to false
242:45 - so this is going to affect all of the
242:46 - models but you can add a key here if you
242:49 - don't want to affect all of the models
242:50 - we have but we're not going to have
242:53 - multiple models so that's why I'm doing
242:55 - it here it's
242:57 - fine and then we're going to have
243:00 - model open close Okay so uh this is the
243:06 - state of the model so
243:09 - currently it's false initially when you
243:12 - click we're going to set it to true when
243:14 - you click this function here and then
243:16 - false when you close the model so now
243:20 - remember with have the
243:23 - model uh in the models oops we have the
243:26 - models so this create we want
243:29 - to kind of show this when we uh
243:33 - click when we
243:35 - click this button here in the tasks so
243:39 - if you go to tasks so there should be
243:42 - create task okay so we want
243:45 - to go to
243:50 - tasks and then we have create tasks here
243:53 - we're going to do onclick and then we're
243:55 - just going to do open
243:57 - model like that and then make sure you
244:01 - get it from the State Global State and
244:05 - then
244:07 - save
244:08 - okay so when you click it's going to
244:10 - open the
244:12 - model okay so now uh let's style this
244:19 - model uh I'm going to close the
244:22 - rout we just need to style the model for
244:28 - now okay so actually I'll create the
244:32 - model the actual model first
244:36 - model
244:38 - TSX it's a functional component use
244:44 - client it's a client component not
244:46 - functional it's going to be a
244:50 - functional functional export here should
244:54 - be
244:57 - model okay so we have a functional
245:00 - component here so what we need to do now
245:02 - in this model is
245:04 - just we need like an overlay so I'm
245:07 - going to say dot
245:12 - model
245:14 - overlay like
245:16 - that all right and then when we click
245:19 - this
245:20 - overlay on click we're going to
245:24 - close we're going to close the model so
245:27 - here we need to get that uh
245:31 - con we need close
245:36 - model like this from Global
245:40 - State all right and um we need to get
245:44 - rid of the consoles by the way now we
245:47 - have this we need to put the
245:52 - content the content of the model so the
245:55 - model is going to be
245:57 - dynamic okay so we're going to create an
245:59 - interface
246:00 - here interface props and then
246:04 - content should be
246:06 - content
246:08 - should be react.
246:11 - node like that and uh we destructure
246:16 - here and then we have the content okay
246:19 - so whenever we render the
246:22 - model we're going to put the content
246:25 - here so uh let's try to render this
246:31 - model so let's go to
246:35 - tasks and then here we're going to to
246:39 - render the model so if model equal to
246:44 - true so we're saying
246:48 - model equal to true and then we're going
246:50 - to render the
246:54 - model uh
246:57 - model so this the spelling is
247:00 - incorrect
247:02 - uh but the comp the content that we want
247:05 - is the create content okay
247:08 - so hopefully when I click this as you
247:11 - can see now it's showing the content the
247:14 - content for
247:16 - creating okay but we cannot close this
247:18 - as well because we have installed
247:21 - this now let me rename this model it
247:24 - should be
247:30 - model all
247:31 - right so that should do
247:34 - it uh
247:36 - yes okay so now uh let's uh start by
247:41 - styling uh what should we start
247:45 - with let's start with the model itself
247:50 - so
247:53 - model con model
247:57 - styled equal to style.
248:01 - div so make sure you import
248:04 - styled from startled components you copy
248:08 - this
248:12 - place
248:15 - model style like that so now what we
248:19 - need to do I'm just going to set
248:20 - position fixed because it's going to be
248:22 - always at the top position fixed and
248:26 - then uh top zero left zero with um I'm
248:30 - going to give it 100% height I'm going
248:33 - to give it 100 VH and then a z
248:36 - index and then I'm going to to do
248:38 - display flex and then I'm going to
248:40 - Center everything justify content and
248:43 - align items to Center okay so it's going
248:45 - to be at the
248:47 - center like that uh we have an issue
248:52 - because uh
248:55 - tasks models
248:59 - model where is the issue with the input
249:02 - okay now it's working so there it is
249:05 - okay so now we need to
249:09 - style we need to
249:12 - style uh the model
249:16 - overlay
249:18 - model
249:20 - overlay okay so for the overlay I'm just
249:22 - going to give it a a dark background
249:24 - color and a position of absolute width
249:26 - and height to
249:28 - 100% okay like that so
249:32 - refresh okay so when I click it opens
249:35 - the overlay but this the content
249:38 - we want it to be uh on top okay so we
249:41 - need to give it uh we need to give it a
249:44 - z index that is
249:46 - higher okay so I'm going to select
249:50 - model
249:52 - content OKAY model content and then I'm
249:55 - going to give it a
249:57 - padding Z index and the with you can set
250:02 - this to Max
250:03 - width Max WID and then withth you set to
250:06 - 100%
250:08 - like that and I when I click nothing
250:11 - happens yet but because we don't have
250:12 - this class
250:14 - here okay so what I'm going to do I'll
250:17 - copy this oops
250:20 - copy and then I'll do like that
250:28 - content and then you we paste so when I
250:32 - click there it is okay
250:36 - nice uh let's keep going with the
250:42 - Styles uh let's go to
250:45 - [Music]
250:49 - the um to the task
250:54 - wait
250:58 - tasks okay to the create content
251:02 - actually let's St this so in the create
251:08 - content we want
251:10 - to style
251:13 - that so we should
251:17 - have
251:19 - const create content styled so this
251:23 - should be a
251:25 - form it's a
251:28 - form so make sure you
251:31 - import styled from start
251:34 - components copy replace
251:38 - place so now we're just going to style
251:41 - this uh let's start with the background
251:44 - so let's get the
251:49 - theme okay so Hand
251:53 - submit we need the
251:56 - theme
251:57 - con theme equal to
252:01 - use Pro
252:03 - State and then we pass that as a prop
252:07 - see here is a
252:09 - prop okay and then we're going to have
252:12 - access to that in the
252:15 - Styles all right now let's start
252:19 - with the
252:22 - H1 I'm going to front size I'm going to
252:30 - clamp okay uh one ram I think I'll do
252:35 - one ram the maximum is going to be one
252:38 - 1.6 and then I'll do actually let's do
252:41 - one 1.2 like
252:46 - that all right and uh F weight I'm going
252:50 - to set that to
252:52 - 600 600 and then I am going
252:57 - to give this a box
252:59 - Shadow a background color and the Border
253:03 - radius okay so let's refresh so we do
253:06 - have a box here
253:09 - ER
253:11 - okay so
253:14 - uh now what we want is to targ the input
253:20 - control
253:25 - input input
253:28 - control I'm just going to set position
253:31 - to relative and the font weight then I'm
253:34 - going to tag the
253:35 - input uh text
253:38 - area text area I'm going to give width
253:41 - of 100% and give no border border of
253:45 - none and then I'm going to say resize To
253:50 - None to none and I'm going to give it a
253:53 - background color and the
253:55 - color like that so let's see so there it
253:59 - is but we haven't actually set the
254:01 - background color for this whole thing
254:04 - but let's keep
254:06 - going uh actually what I would do I'll
254:10 - copy this let's go to the global
254:14 - CSS
254:16 - uh text area
254:20 - button let's said
254:22 - border border To
254:25 - None outline To
254:28 - None like
254:30 - that I think this will do
254:33 - it okay so yeah we don't have any more
254:36 - outlines and both orders
254:38 - anymore okay so now let's continue with
254:41 - the
254:44 - Styles
254:47 - uh okay so now I am going to
254:53 - Target the
254:57 - label okay so so we have the
255:00 - label we should probably start with a
255:05 - label uh for the label I'm going to give
255:07 - it margin bottom and a font size we're
255:10 - just going to clamp that and then I'll
255:13 - Tar this pan
255:15 - within and then I'm going to give it a
255:17 - color of gray number
255:19 - three okay so let's
255:22 - save all right so looks pretty good so
255:27 - the thing that we want to do for now is
255:31 - Set uh we need to set the background
255:35 - color okay so I'm just just wondering
255:37 - like
255:40 - uh where we could uh set the background
255:43 - color but I think we should set
255:45 - it uh in the model
255:49 - content which which uh model
255:58 - content what is the model content model
256:02 - we need to
256:03 - import
256:05 - theme
256:08 - theme okay so make sure we import theme
256:11 - from Global
256:14 - State like that and then we pass it as a
256:19 - prop so we shouldn't have that
256:24 - issue
256:25 - uh let's inspect to see why it's
256:30 - not why it's not showing the background
256:34 - color Okay so
256:43 - oops get rid of the mobile
256:46 - view model
256:51 - content okay so model content doesn't
256:54 - show the
256:58 - background model
257:01 - content okay so we haven't actually set
257:03 - the background so let's give a border
257:05 - radius
257:09 - order radius to one
257:11 - ram and then we're going to give it a
257:14 - background color to color
257:16 - bg2 like
257:19 - that okay
257:22 - uh okay so the shadow is on the input
257:26 - itself but we need
257:29 - to give the bring the shadow
257:32 - here okay so what we can do is is go to
257:40 - the uh create
257:45 - content create content box
257:48 - Shadow and remove this uh actually copy
257:54 - this and go to the
257:59 - content by the way if you want you can
258:02 - remove this content all
258:04 - together the
258:10 - oops where's the model oh there it is so
258:12 - you can move this model content you can
258:14 - put this these styles on the form
258:16 - directly if you want
258:18 - to all right uh yeah I'll do
258:24 - this and there it is uh now we just need
258:27 - to give this uh border radiuses and
258:31 - stuff so let's go to the input
258:35 - control
258:42 - tasks uh we should be create content so
258:45 - input control we need
258:49 - to uh style more okay
258:53 - so um let's see let's see what we need
258:56 - to do first so first off we need to give
259:01 - it uh border
259:05 - radius uh and let's see what
259:09 - color
259:14 - Okay
259:20 - input water
259:27 - radius for radius let's do one
259:33 - ram it should work oh what I said
259:40 - here I think one R is too much let's do
259:44 - 0.5 okay let's see how it looks so it
259:47 - looks all right 0.5 looks
259:49 - okay uh you can you know put whatever
259:52 - you want
259:54 - here uh the other thing I think that I
259:56 - might want to do is reduce this margin
260:02 - bottom I think
260:04 - I'll well I put it to
260:09 - 08 okay so it should be yeah a bit
260:14 - lower I think we have good
260:19 - spacing uh the other thing that we need
260:21 - to style is the
260:24 - button okay but first off uh let me
260:27 - check what styles I used for that button
260:30 - so if you remember this button
260:33 - component here so we need to render the
260:36 - button component
260:40 - component button
260:42 - component type
260:45 - submit okay and then uh we need to give
260:47 - this an
260:49 - icon this should be a soft
260:54 - closing okay and then we have
260:57 - the name should be create task and then
261:02 - we're going to have
261:04 - icon the icon so the icon we're using
261:07 - here let's do
261:10 - plus and make sure you import this plus
261:13 - icon okay and I'm just going to paste in
261:16 - the rest of the properties okay so we
261:19 - have padding but radius font weight font
261:22 - size like that so when I
261:25 - click uh the button is set to Green but
261:27 - it
261:28 - is a lot of padding and also I want to
261:32 - give it a
261:35 - color uh color what did
261:41 - I so we
261:45 - have the pattern is too
261:48 - big that's to
261:51 - 0.8 and then two
261:57 - Ram okay uh I
262:02 - think let's
262:04 - do Flex
262:08 - FX
262:13 - end
262:16 - end can't remember the
262:19 - property I think jusy
262:23 - end okay so I want it to be here at the
262:26 - right here okay uh the
262:30 - color I don't think we have a prop for
262:34 - this one so let's go to the button and
262:37 - do a
262:40 - color okay let's add the
262:47 - color color here and then we're going to
262:50 - do
262:53 - color all
262:57 - right so
263:03 - wait col let
263:07 - let's do gray Zero by default let's
263:15 - see color color color let's check it
263:20 - out I'm the
263:31 - console okay so I'm
263:33 - not really fond of this color
263:39 - let's try
263:45 - color
263:48 - background let's
263:50 - do color
263:55 - green should be
264:00 - light okay I'll get rid of this
264:05 - prop
264:13 - color wait a minute let me check the
264:16 - green
264:17 - light uh let's go to the
264:21 - themes light
264:28 - here green light there's something wrong
264:32 - with this variable here but let's try
264:35 - this purple color
264:46 - I should copy the variable
264:52 - name c primary let's see what that looks
264:56 - like okay I think this is but it doesn't
264:59 - match our theme
265:05 - though
265:07 - okay
265:10 - uh
265:13 - we let me check this one for a
265:19 - minute we want something that is close
265:21 - to our theme so let me look for a button
265:24 - I'll inspect here I'll copy this color
265:28 - here by the way this website is not yet
265:33 - responsive
265:35 - uh
265:37 - okay so I'll copy this color here I like
265:50 - it all right I think this is
265:59 - reasonable and the
266:05 - icon so we need to Target the submit
266:10 - button submit BTN select
266:14 - that uh
266:16 - collapse and then we go and sty that
266:24 - separately okay and then I'm going to
266:26 - take the button submit button BTN
266:29 - button and then I'm going
266:33 - to I'm going to
266:36 - given
266:39 - icon
266:42 - I
266:47 - color okay I
266:50 - think I think that
266:54 - works well when I have
267:04 - her and have uh let's try to set the
267:08 - background
267:16 - color green
267:21 - dark we need to overwrite that with the
267:28 - important
267:31 - uh why is it not working so let's see
267:35 - why
267:41 - inspect it should be just background not
267:44 - background
267:47 - color all right so hopefully it should
267:50 - work okay we need to too
267:54 - important still not
268:04 - working
268:08 - background
268:19 - RGB color primary
268:21 - [Music]
268:25 - dark okay we didn't have that variable
268:27 - so that's why we had an
268:33 - issue and the color
268:38 - should be color
268:41 - white color
268:49 - white I don't know if it's showing was
268:52 - the colors are quite similar okay this
268:54 - is now
269:01 - white okay I think this would do uh
269:05 - let's do
269:10 - transition this should be
269:14 - .3 okay so now let's uh
269:21 - refresh okay so now we can have
269:25 - a I don't know about this white color
269:27 - though you you can try to find whatever
269:29 - color that you
269:33 - want all right and I think the are other
269:36 - things that we need to do is to do this
269:40 - date okay we need to start this you know
269:43 - date
269:46 - icon okay
269:49 - so let's inspect
269:58 - here okay so we need
270:02 - to give this a class
270:06 - this the radio buttons we need to give
270:08 - them a
270:10 - class okay
270:14 - so
270:16 - completed I'm going to give them a class
270:18 - of
270:21 - Toler
270:23 - completed as well as uh this one oh this
270:25 - one is a class of Toler as well so down
270:29 - here I'm going to Target those I want to
270:33 - do display flex and Al items to Center
270:37 - okay and uh there it is I'm just going
270:40 - to do justify
270:43 - content just
270:45 - content now let's do space
270:50 - between
270:54 - okay
270:57 - uh
271:00 - wait not the label I want to do
271:04 - the
271:06 - to completed
271:11 - okay uh
271:17 - Flex black shrink we need to shrink Flex
271:25 - shrink Z
271:31 - zero actually it's
271:34 - grow
271:40 - Flex Pro should be zero right and this
271:45 - one should be Flex
271:50 - one FX
271:53 - one margin bottom there's an issue with
271:55 - margin
272:04 - bottom
272:06 - uh
272:11 - margin Ram
272:14 - here okay and uh yeah there it is I
272:18 - think it's too
272:22 - big
272:24 - Toler
272:28 - label Flex we're going to
272:32 - do Flex one
272:36 - like that so we want
272:40 - this label to fill the entire
272:45 - width okay and this
272:52 - one
272:54 - uh
272:57 - Flex grow zero some
273:03 - reason oh I think give it a
273:08 - width nothing
273:16 - happens let's try
273:19 - this nothing
273:24 - happens okay so we need to remove the
273:28 - width
273:32 - here label and it should be in
273:36 - input in the Toler and then we need to
273:39 - remove remove the
273:42 - width with uh let's set it
273:46 - to
273:51 - initial like
273:55 - that okay so now
273:58 - we if we click this one it should
274:03 - tole and then we just need to set the
274:05 - cursor to
274:06 - pointer okay so we able
274:09 - to to
274:12 - go some reason the cursor pointer is not
274:19 - working but fear not let's go we need to
274:22 - keep going we need to
274:23 - style the
274:29 - date okay so for the date I'm just
274:32 - thinking we need to go to the global
274:37 - CSS so in the global CSS I'm going to
274:40 - Target the
274:45 - input input and then type equal to
274:52 - date I'm going
274:55 - to style the
274:58 - indicator okay so type web kit
275:01 - calendar
275:03 - indicator pick indicator and then filter
275:05 - I'm just going to invert the color the
275:07 - color is black so I'm going to invert it
275:10 - to one which is going to set it white
275:13 - okay it's going to be the opposite of
275:14 - that so we're going to do font size I'm
275:18 - going to make it bigger I'm going to do
275:19 - 1.5
275:20 - frame and I'm am going to set the cursor
275:23 - to
275:24 - pointer so it should be a bit bigger now
275:27 - so when I click we can select the date
275:30 - okay we can
275:32 - toggle so we also need to
275:37 - uh do checkbox as well
275:43 - input uh we need to do
275:47 - checkbox
275:51 - type equal to
275:58 - checkbox okay uh I don't I'm not sure if
276:01 - this is how we start with the
276:03 - checkbox okay so let me
276:11 - CSS check
276:17 - box okay so we should let's see how we
276:20 - can start this
276:25 - checkbox it's the better
276:34 - one
276:44 - okay
276:55 - container okay I get it
276:59 - so this one is going to take us a while
277:01 - so we have to do a lot of positioning
277:03 - and stuff uh you can do this on your own
277:05 - spare time I don't have time
277:07 - to create a
277:10 - custom
277:12 - checkbox okay so we just going to use
277:14 - the default one but I think I'll do this
277:16 - off camera and then I'll just push the
277:18 - changes on the final version that I'm
277:21 - going to upload on GitHub but now we
277:23 - just need to now we are able to add code
277:27 - add
277:29 - stuff
277:32 - hello okay so now we can
277:36 - toggle
277:38 - completed so when I create task should
277:41 - create but it's not refreshing so we
277:43 - need to manually refresh the page for us
277:46 - to see that okay so I'm going to delete
277:49 - so we need to refresh the data every
277:51 - time that we
277:55 - create a new task and as well as we
278:00 - might need to close actually I think you
278:03 - might want to
278:05 - close this right when you create a new
278:09 - task or you want to keep it open it's up
278:11 - to you but but me I'm just going to
278:13 - close it so it's up to you what you want
278:15 - to you can do what you
278:17 - want so create
278:20 - content so we have the submit
278:27 - button submit what function are we
278:30 - calling
278:33 - here
278:35 - okay so for us we need to go into the
278:42 - submit and submit so somewhere here we
278:45 - need to get all
278:51 - tasks tasks or tasks okay
278:56 - so
278:58 - here
279:00 - we are going to do this all
279:03 - tasks we can do this
279:07 - first or we can do this
279:10 - after okay so we are just calling all
279:14 - tasks and you might want to close the
279:16 - model if you want when the task is
279:22 - successful you can close the
279:26 - model okay and I'm just going to say
279:30 - close
279:32 - model like that and make sure sure you
279:36 - get close
279:42 - model uh here close model I'm I'm also
279:46 - going to do one more final one final
279:48 - check here so I'll take
279:51 - this I'm going to say
279:54 - if not
279:57 - data if not response do
280:01 - data do
280:03 - error
280:05 - that's when I want to do this okay so
280:08 - I'm going to
280:10 - save uh
280:12 - test
280:15 - data
280:16 - hello and then I'll put a
280:20 - date put a date to it and then I'm going
280:24 - to to it make
280:26 - important and then I'm going to say
280:28 - completed and then create
280:30 - task okay but the close model did not
280:34 - work um let's see
280:39 - why okay so our tasks is not a
280:45 - function or
280:48 - tasks
280:50 - tasks okay because we're not sending
280:52 - that
280:55 - through okay we need to send
280:58 - all tasks like
281:01 - this so now I think we should be able to
281:04 - do it
281:06 - hello
281:08 - to just add something
281:12 - random and create new task there it is
281:16 - so it's working so we can delete this so
281:20 - next we just need to work on making sure
281:22 - the new task is at the top okay so this
281:25 - is going to be the final part so we're
281:27 - going to look at uh media queries and
281:31 - also I want the newly created data to be
281:36 - at the at the top okay so when we create
281:38 - something it's going at the bottom so
281:41 - I'm just going to add something random
281:44 - and then when I
281:45 - create it's you know down here so we
281:48 - want the newly created one to be at the
281:51 - top so what we're going to do we're
281:53 - going to
281:54 - be uh sorting the data based on the
281:58 - created date okay so we're just going to
282:01 - check uh what date uh it was created
282:05 - okay so what I'm going to do let's go to
282:07 - the global I'm going to close everything
282:10 - here let's open the global context only
282:15 - so uh let's go to all
282:19 - tasks okay so for all tasks uh let's uh
282:24 - sort the data before we put the data in
282:28 - the state okay so what we're going to do
282:32 - uh let's
282:35 - CG response.
282:39 - data we need to get rid of the consoles
282:41 - actually I'm always forget so if we go
282:44 - in the console now we need to refresh
282:48 - this
282:50 - uh so there's a created at date here so
282:55 - we need to
282:56 - sort
282:58 - okay
283:00 - so uh let's
283:03 - say
283:05 - sorted so we're going to return a new
283:08 - array equal to not response we can do
283:12 - yeah response. data response do data and
283:16 - then we're going to sort so it's going
283:19 - to take uh two values so A and B okay so
283:24 - to sort these we just need to subtract A
283:27 - and B
283:31 - okay okay so we're going to return so
283:34 - we're going to return new
283:36 - date okay so it's going to be new and
283:40 - then it's going to be date and then
283:42 - because the date it's in a it's in this
283:46 - format we want to convert it to the
283:49 - proper format that we
283:50 - want so new date and then we're going to
283:54 - say B do created at created at
283:59 - created at like this okay and then Dot
284:04 - get
284:05 - time
284:07 - get time like this subtract a to created
284:12 - it to get time okay so
284:16 - let's let's
284:18 - see
284:20 - CG
284:22 - a
284:25 - b
284:28 - okay actually let's uh console log
284:31 - remove this
284:33 - sorted
284:39 - sorted uh let's
284:42 - refresh so we should be able to see
284:48 - sorted here okay so the newly created
284:51 - array will be at the
284:52 - beginning
284:55 - okay uh and I'm going to put the sorted
284:58 - data as our tasks okay in the state so
285:03 - the data and the state going to be
285:04 - sorted based on the
285:06 - created Created at date okay so the
285:09 - newly created will be at the
285:12 - top okay so if you want to get the
285:14 - opposite effect you don't need to do
285:16 - anything but if you want to get the
285:18 - opposite effect using the sort you can
285:19 - just do a minus B okay like this okay so
285:24 - sometimes I always get confused with
285:25 - this one as well sometimes I start with
285:27 - a minus B and then I realize I need to
285:29 - switch it around so
285:31 - B minus a like that so the newly created
285:35 - data now and let's delete some of
285:39 - these so the newly created
285:42 - data
285:45 - hello
285:47 - world and then I just add something
285:49 - random I'll mark this as important and
285:53 - then I'm going to
285:54 - create uh there it is yellow world so
285:57 - when I go to important you're going to
286:00 - see it it's at the top as well and then
286:03 - completed
286:05 - same thing do it now okay so here we
286:09 - we're getting the ones which are not
286:11 - completed so if you mark it is complete
286:13 - it's change the uh the status it will be
286:16 - in the completed okay and then uh all of
286:20 - the task will be showing here so now
286:22 - what we need to do uh we need to do the
286:25 - media queries okay so for the media
286:28 - queries uh I'm going to
286:32 - inspect so at
286:36 - uh small size which is let's
286:40 - say 750 750
286:45 - pixels at 750
286:48 - pixels I am going to reduce this padding
286:51 - to one
286:54 - ram okay so one
286:57 - ram I think I should do the same for
287:00 - this one in
287:02 - between okay okay let me check how that
287:05 - would look
287:08 - like uh
287:10 - Gap Gap uh let's do one
287:15 - ram okay yeah so Gap one ram I think
287:18 - that makes
287:20 - sense so at
287:23 - 750 we are going
287:28 - to
287:31 - uh let's see what component we need to
287:34 - do this
287:37 - one
287:41 - so the parent
287:44 - of
287:46 - sidebar so let's go to layout actually I
287:48 - think it's the global star provider so
287:52 - we have the children in
287:54 - here okay
287:57 - grid uh Gap okay padding here so at
288:02 - media screen
288:04 - we're going to do
288:06 - end Max
288:08 - width so for our Max
288:12 - width it's going to be the small screen
288:15 - and media
288:17 - screen it should be inside like
288:20 - this okay I need to put my phone on
288:26 - silent okay so max width like this uh
288:31 - padding I'm going to set that to one ram
288:34 - and GAP one ram okay so now as you can
288:37 - see now we set to one ram like that and
288:45 - uh the other thing that we want maybe
288:48 - you can add a transition maybe
288:52 - transition let's see how that looks like
288:56 - okay so there's a bit of a transition so
288:58 - it doesn't snap okay so now what we need
289:03 - to do
289:09 - uh I am going
289:13 - to position fix this
289:17 - nav okay so copy the
289:20 - nav copy this Styles and go to the nav
289:26 - sidebar so I'm going to look for the
289:30 - sidebar there it
289:32 - is
289:36 - okay so I'm going to paste the media I'm
289:38 - going to say
289:39 - position
289:41 - fixed all right so there it is I'm going
289:45 - to give it
289:47 - a
289:49 - height should be
289:54 - 100% like
289:56 - that uh minus actually let's do c minus
290:02 - one ram for the you know that padding
290:06 - like
290:07 - that uh it should be two
290:10 - Ram I think yep like that and let's give
290:15 - it a z
290:16 - index Z
290:19 - index uh 100 or
290:22 - 10 okay so then it will be at the top
290:26 - now so we want it to
290:29 - be translated off screen but let's add a
290:32 - button here first
290:36 - okay uh let's Name
290:42 - It We need to name
290:44 - it dot
290:48 - Togo
290:51 - nav okay so
290:53 - toona let's make it a button
290:56 - actually you can make it a div if you
290:59 - want uh I
291:02 - think
291:04 - I can't remember what
291:08 - I've can't remember the icon name so I
291:11 - need to go to the YouTu and
291:15 - check
291:19 - B
291:21 - edit can't remember what I've named the
291:24 - icon I think it's bars we have like
291:26 - three bars that's that's a that's not a
291:30 - good
291:32 - name okay so there there it
291:35 - is uh I'm going to copy this
291:41 - class I
291:44 - copy I just put it
291:46 - here above the media
291:49 - query position absolute
291:52 - absolute position
291:55 - absolute right we're going to set it to
291:59 - Manus through RAM and then top let's set
292:04 - it
292:05 - to 10 Ram actually let's do five
292:10 - RAM and then let's give it a
292:14 - padding of let's do one R for
292:18 - now and then border top radius top right
292:23 - radius let's do one
292:26 - ram and Border bottom right rise let's
292:31 - do one R and uh
292:34 - we need
292:35 - to give
292:38 - it we need to give it a background
292:41 - color it should be color
292:48 - pg2 I believe this should be the pting
292:51 - should be
292:52 - 0.5 actually no the Border
292:56 - radius
292:58 - 0.5
293:01 - Ram 0.5 Ram
293:06 - uh okay we probably want to
293:10 - animate okay so font awesome I don't
293:15 - know why I was looking at this picture
293:16 - Wednesday oh one of my friends was
293:18 - looking for a costume for Halloween so I
293:20 - was looking to
293:22 - see uh the character she was looking
293:29 - for uh font awesome font
293:32 - awesome
293:38 - oops okay so we need to look for
293:42 - the
293:46 - home um actually menu that's the one we
293:50 - want oh it's called bars
293:54 - actually uh let's do
293:58 - bit all
294:00 - right I'll copy this
294:04 - with the animation and let's go to the
294:07 - icons and
294:09 - replace class
294:14 - name okay and we need
294:19 - Arrow so it should be let's click
294:24 - free Arrow
294:28 - left where's the left
294:31 - Arrow there it is and and let's make the
294:34 - animation it should
294:37 - be yep
294:42 - same uh let's edit
294:45 - here so by the way you can do the icons
294:49 - any way that you prefer but I prefer
294:51 - this
294:54 - way Arrow
294:57 - left class
295:00 - name and then uh let's go
295:06 - so we need to
295:10 - conditionally uh render so let's go to
295:12 - the global State we need to create a new
295:14 - state to see if the sidebar is collapsed
295:17 - or not so I'm going to say
295:19 - con
295:21 - collapsed
295:23 - okay and I'm going to send the
295:27 - collapse yeah collapsed okay so I'm
295:31 - going to check if it's collapsed
295:38 - uh where would sidebar sidebar okay so
295:42 - we need
295:46 - to get the collapsed here
295:50 - collapsed okay so
295:56 - collapsed okay so
296:00 - here
296:02 - so collap
296:04 - so if it's collapsed we are going to
296:06 - show the
296:09 - bars or if it's not collapsed we going
296:13 - to
296:14 - show left Arrow so make sure you Arrow
296:18 - left so make sure you
296:19 - import like this okay from the icons
296:23 - perfect so we should have the
296:27 - animated Arrow here because it's not
296:30 - collapsed Okay so
296:34 - I
296:39 - think
296:41 - uh I might want to increase the pading
296:45 - that border radius to
296:48 - one and
296:50 - border
296:54 - right
296:58 - border
297:01 - right for the top
297:04 - and Border bottom like
297:07 - that okay so let's uh reposition
297:14 - this right minus 3
297:19 - RAM let 2
297:23 - minus 30
297:30 - pixels all right so I think minus 73
297:36 - pixels is
297:38 - good
297:43 - right 73
297:47 - pixels and uh this one should be padding
297:51 - top and
297:52 - bottom let's
297:54 - do 6
297:56 - RAM and one R like
298:01 - that uh doesn't look good it's
298:12 - 2.88 doesn't look good
298:15 - either let's do on both
298:19 - sides and then we' need to
298:23 - uh adjust
298:28 - this okay I think this will do so - 66
298:32 - pixels
298:36 - and
298:37 - top let's do two
298:43 - Ram okay
298:45 - uh
298:49 - 1.8 so you kind of find the balance of
298:52 - what you like okay so now when I click I
298:56 - want to
298:58 - collapse okay
299:01 - so uh
299:16 - uh let's go to the
299:21 - global I'm going to say
299:24 - con collapse
299:28 - menu like
299:30 - that all right so collapse
299:37 - menu we're just going to we did set the
299:40 - collapse me to the opposite of what the
299:43 - state is so by default it's false so
299:45 - when you click it's going to go true or
299:48 - false depending on this
299:50 - state okay so
299:53 - now uh let's just go and run this
299:55 - function here collapse menu is going to
299:58 - be true when we
299:59 - click so let's get the collapse
300:06 - menu uh on
300:11 - click we want to
300:15 - run the collaps
300:19 - menu okay so now let's see if it's
300:21 - changing the icon okay as you can see
300:23 - the icon is changing based on the
300:26 - collapse okay and we'd want
300:30 - to make it go away
300:36 - so uh let's put the
300:39 - collapse
300:41 - collaps as a
300:44 - prop equal to
300:49 - collapsed all right so we're getting an
300:52 - issue here because we're using
300:55 - typescript so we need
300:57 - to say
300:59 - theme I going to set it to any let's not
301:03 - worry about them let's just set the
301:04 - collapse to bullan because this t t
301:07 - script that's why we're getting that
301:08 - warning so we set it to Boolean so we
301:11 - want to check if it's
301:15 - collapsed
301:17 - so
301:20 - collapsed uh I'm going to say
301:24 - transform
301:29 - transform okay and we're going to to
301:34 - translate
301:36 - X okay but actually we need to check
301:40 - first uh props do
301:46 - collapsed do
301:49 - collapsed and then we're going to set it
301:53 - to minus 100 if collapse is equal to
301:58 - True uh we're going to translate x -
302:00 - 100% else 0 to the normal
302:04 - position and then I'm going to do a
302:07 - transition so the transition I'm going
302:09 - to use is going to be a
302:11 - cubic cubic Bia again or basier I don't
302:15 - know how to pronounce it so the one we
302:18 - used it's in the layout so if you go to
302:22 - the layout if you remember here I want
302:24 - to use this animation
302:26 - here I'm going to do a
302:30 - transition transition
302:33 - like
302:35 - this all right so let's see when I
302:40 - click okay so there it is it's going
302:46 - away uh I
302:50 - think it should
302:53 - be let's inspect I want it to be off
303:00 - screen uh let's do
303:14 - now so it's minus
303:20 - 100 okay so I want to leave
303:23 - space like this I
303:26 - think yeah like this so it should be out
303:29 - of the screen so it should beus 107
303:33 - %
303:38 - okay
303:40 - minus
303:42 - 107 I think I'm going to also increase
303:45 - the
303:48 - padding
303:50 - ping top and bottom left and right I'll
303:53 - just do
303:57 - one9
303:59 - Ram like
304:01 - that
304:06 - okay looks quite pretty good uh we just
304:10 - need to rwe
304:13 - this why does it
304:31 - uhing
304:33 - all right so I think
304:36 - minus 69 works
304:39 - fine
304:41 - 69 all right so the nav we
304:46 - can collapse
304:49 - it okay I think that's the effect we're
304:51 - looking for so let's see how it looks on
304:53 - mobile so let's do iPhone
304:57 - 12 so what we can do also is we can
305:00 - reduce the font size
305:03 - I'm looking for Iphone 12 Pro okay so
305:06 - this phone size if it's too big for you
305:08 - we can reduce it
305:11 - so all right you can also Center this
305:15 - around so yeah uh it looks pretty good
305:18 - on smaller screens you can reduce this
305:20 - picture size as
305:24 - well
305:28 - uh okay so I think oh I forgot to do
305:32 - something something
305:38 - so uh
305:41 - collapsed is set to
305:45 - True okay
305:47 - so I need to check
305:52 - something I want the collapse to only do
305:55 - on
305:56 - mobile okay so what I'm going to do I'm
305:59 - going to do media
306:01 - query
306:04 - media
306:06 - query
306:09 - sidebar I'll copy this a cut it should
306:12 - be at the top
306:14 - here position fixed I'm going to cut
306:21 - this uh Tok
306:26 - enough I'm going to say
306:29 - display to
306:31 - none
306:34 - all right so I don't want
306:38 - this and
306:40 - then
306:45 - here
306:50 - display display to
306:53 - block it should be the
306:56 - toona that I want to set the display to
307:01 - block like that and then we
307:06 - save so they should
307:10 - be okay it's still not
307:14 - showing to
307:22 - enough display
307:25 - none oh we need to put the media
307:28 - query oh wait we are in the media so the
307:32 - screen size to
307:35 - off
307:49 - weird Okay so the media query doesn't
307:51 - show
307:52 - there let's do important let's see okay
307:55 - there it
308:01 - is
308:05 - okay so it's
308:12 - collapsed all right
308:14 - so like
308:17 - that all right so now I can collapse
308:21 - this when I make the screen
308:25 - bigger
308:30 - okay so when you're going down like this
308:32 - and then just going to
308:36 - hide all
308:39 - right perfect so the media queries is
308:42 - pretty much done I think the only thing
308:45 - that we can work on
308:47 - is the font
308:53 - size you can copy this media screen size
308:57 - here we can go
309:01 - body
309:05 - uh
309:13 - Global uh at
309:17 - media like that because we're not we
309:21 - canot
309:25 - nest
309:29 - what can reduce the whole thing to 15
309:32 - pixels I
309:37 - think okay or you can do font size I
309:41 - think 50% let's see how this
309:48 - looks I think it's too
309:55 - small all right you can work around this
309:58 - font size here depending on what
310:01 - component and you want to change the
310:03 - font size
310:04 - on all right I think I'll just keep the
310:09 - font size that we
310:10 - have even for smaller screens I think
310:14 - it's it's fine it's fine to me so it
310:16 - depends what you
310:21 - want okay so now um the only thing that
310:26 - that we have I'm going to sign out let's
310:29 - start these Pages
310:31 - here
310:32 - so uh we're just going to do that in
310:34 - line so sign
310:36 - up we're going to do it in line so we're
310:39 - going to say class name
310:44 - Flex item
310:46 - Center justify Center so we want to
310:49 - Center this so we are in sign up so
310:53 - let's see sign
310:55 - up okay so we want to give the height to
310:59 - four
311:00 - Ed
311:03 - full okay so it should be
311:06 - centered here there it is and we want to
311:09 - do the same thing for sign sign
311:13 - in and we should just Center this so
311:16 - it's just basically display Flex align
311:18 - Center we height for to 100% And align
311:23 - items and justify content Center okay
311:26 - and uh that's it we can disable these uh
311:29 - components by the way you can start this
311:31 - however you want
311:32 - if you want to so for example if you
311:34 - want to remove this you can just inspect
311:38 - this and look for a class so this is the
311:40 - class Name by the way you cannot select
311:43 - the locked class so make sure you always
311:44 - select the one which is not locked you
311:46 - copy that and then you style that based
311:50 - on the class that that is not locked so
311:53 - if I want to disable this I can just
311:55 - select the class and then say display To
311:58 - None or whatever you can start this
312:01 - whatever you want
312:03 - okay
312:04 - so I think that's pretty much it let me
312:07 - try to log in back
312:08 - again so sign in so because I'm already
312:12 - have an account I'll go to the signin
312:13 - page and then we're going to continue
312:16 - with
312:18 - Google and voila uh we are in the
312:21 - application
312:23 - now so if you want to make any more
312:25 - tweaks you can do what you want if you
312:27 - want
312:28 - to uh make a request you can send me an
312:30 - email I'm sure you've seen my email
312:32 - already this is my email you can send me
312:34 - an email you can request any video or if
312:37 - you want to see anything in the future
312:39 - you can let me know in the comment
312:41 - section and yeah don't don't forget to
312:43 - like comment and subscribe I'll see you
312:45 - on the next one