00:00 - maps are data structures that store key
00:02 - value pairs in javascript objects are
00:05 - maps maps provide rapid lookup of stored
00:08 - items based on key values and are very
00:11 - common in useful data structures
00:14 - in this video i will show you how to
00:16 - implement a map in javascript to give a
00:18 - better understanding of how they work
00:20 - however normally you would never need to
00:22 - write your own map data structure in
00:23 - javascript because objects provide a
00:26 - very efficient map structure
00:28 - also later in the video i will talk
00:30 - about the map object that was introduced
00:32 - in es6 this has some benefits over using
00:34 - a standard object as a map this is a
00:37 - visual representation of a map so you
00:39 - have these keys that in this case are
00:41 - all months and then you have the values
00:43 - which are what the keys correspond to
00:46 - when you're using a map first you would
00:48 - enter all these key and key value pairs
00:51 - and then later you may want to look up a
00:53 - value so you would look up the august
00:55 - key and it would give you out this value
00:58 - 37.3 now let's look at the code for how
01:01 - you could implement a map in javascript
01:03 - so we have my map equals function and
01:06 - you're going to keep track of two things
01:08 - the collection which is all the things
01:10 - in the map and then
01:12 - the count so the number of items that
01:14 - you have we have the size method where
01:17 - we'll
01:18 - return this.count to get the size of the
01:20 - the map then to set that means just that
01:23 - you're going to add something so you
01:25 - pass in a key and a value
01:27 - and then we're just going to
01:29 - set that key and the value into the
01:31 - collection and we're going to update the
01:33 - count and then for has that just means
01:36 - you're going to check if the map has
01:38 - that key and you're going to return key
01:41 - in this dot collection the in operator
01:44 - returns true if the specified property
01:47 - is in the specified object so now we
01:49 - have git where we're going to
01:52 - pass in the key and we're going to get
01:54 - the value we have a ternary operator
01:56 - here
01:57 - so if the key is in this dot collection
02:01 - if that's true we're going to return the
02:04 - key
02:05 - it's this first section and then else we
02:08 - are going to return null then we're
02:09 - going to be able to delete an item in
02:11 - the map you just pass in the key and if
02:14 - the key is in the collection again we're
02:15 - going to delete that key
02:18 - and you're going to decrement the count
02:20 - so we have one less
02:21 - and the values
02:23 - function here is where we're going to
02:25 - return an array of all the values in the
02:28 - map so we just have a for loop where we
02:30 - push each item
02:32 - into the array and then if there's more
02:35 - than zero items we're going to return
02:37 - that array or we're going to return null
02:39 - and then the clear method you are just
02:41 - going to
02:43 - clear all the items from the map
02:45 - and then we're going to set the item the
02:47 - account to zero
02:48 - okay let's see a quick example of using
02:50 - the map
03:04 - oh and let's change this to map here
03:07 - and we'll run that
03:09 - okay you can see we created a new map we
03:12 - added some items here
03:14 - we have the keys and the values key and
03:16 - value and then here we're going to get
03:18 - the value associated with that key and
03:20 - you can see on the console it's 10
03:22 - and then we're gonna check the size it's
03:25 - four
03:25 - and then we're going to output all the
03:27 - values in the map to an array now i'm
03:29 - going to talk a little bit about the es6
03:31 - map object objects are similar to maps
03:35 - in that they both let you set keys to
03:37 - values retrieve those values delete keys
03:40 - and detect whether something is stored
03:42 - at a key
03:43 - but there are some differences between
03:44 - objects and es6 maps an object has a
03:47 - prototype so there are default keys and
03:50 - a map that could collide with your keys
03:52 - if you're not careful
03:53 - the keys of an object can only be
03:55 - strings or symbols but keys for a map
03:58 - can be any value including functions
04:00 - objects numbers booleans or even not a
04:03 - number you can get the size of a map
04:05 - easily with the size property well the
04:07 - size of an object must be determined
04:09 - manually you're mainly going to want to
04:11 - use a map if you have a collection so
04:14 - let's see an example of using an es6 map
04:19 - now this map is going to have all the
04:21 - functions i showed below but it's also
04:23 - going to have a few more so we're going
04:25 - to be able to do
04:26 - map two map2.has
04:29 - to see if
04:30 - it that has a certain value in the map
04:34 - we're also going to be able to do the
04:36 - entries method this is going to return
04:38 - an array of all the keys in the map the
04:41 - the values method returns all the values
04:43 - in the map and the entries returns all
04:45 - the keys in the map okay and i just put
04:47 - in some more code here um just to show
04:50 - some of the things that you can do with
04:51 - the map object i'm creating two
04:53 - variables this key object is just an
04:56 - empty object key func is just an empty
04:58 - function and then down here you can see
05:00 - you can set
05:02 - strings to values we can also set these
05:05 - objects objects can be a key you can set
05:08 - that to a value this function can be a
05:10 - key you can set that to a value and you
05:12 - can even use not a number as a key and
05:14 - set that to
05:15 - a value
05:16 - we have the size that we showed before
05:18 - on the other map and then here we can
05:20 - get the values of what we added above oh
05:23 - but first this is actually such an equal
05:25 - sign not a minus sign so it should be
05:28 - let map2 equal new map and then the only
05:31 - other thing i need to change is that
05:33 - there should not be parentheses after
05:35 - the size here in my custom map function
05:37 - above i didn't need parentheses but here
05:40 - i don't besides is a is a property and
05:42 - not a method so let's try running that
05:46 - okay you can see i logged the size four
05:48 - we have four items here and then i was
05:50 - able to get all these values up here
05:52 - well that's map thanks for watching my
05:54 - name is beau carnes don't forget to
05:56 - subscribe and remember use your code for
05:58 - good