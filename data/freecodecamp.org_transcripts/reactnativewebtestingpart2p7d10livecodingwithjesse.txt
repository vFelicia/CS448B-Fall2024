00:07 - hey everybody welcome to live coding
00:09 - with jesse i'm jesse and today we're
00:11 - going to continue with some
00:13 - end-to-end testing
00:15 - for our
00:16 - react native web app
00:20 - um so
00:21 - if you're just joining for the first
00:23 - time uh
00:25 - this stream is just me like actually
00:28 - coding i don't rehearse anything
00:30 - i will make mistakes i'll try to do my
00:33 - best to explain what i'm doing feel free
00:35 - to ask questions uh in the live chat or
00:38 - if you're watching this later on you can
00:39 - put the questions in
00:41 - the uh the comments or just shoot me a
00:44 - message on twitter or
00:46 - whatever other social media
00:48 - uh platform that you like
00:52 - and
00:54 - i'll split this up i'll do a 25 minute
00:56 - period of coding and then i'll go answer
00:58 - some questions on the live chat so if
00:59 - you put your question in
01:01 - i'm not ignoring you i will get to it uh
01:04 - just after a bit of coding
01:07 - so we are using react native but we're
01:09 - using something called react native web
01:11 - that will take all of our react native
01:14 - code and make it work in a browser
01:17 - uh so
01:19 - the benefit to doing that is
01:22 - that we can then take that same react
01:24 - native code and run it in
01:27 - android or ios or whatever other
01:30 - platform that works with react native
01:34 - it also
01:35 - is a nicer development experience that
01:38 - we can develop right in the browser
01:41 - and don't have to spend as much time in
01:44 - an emulator
01:45 - which usually takes up a lot more of
01:48 - your cpu
01:50 - and it's it's harder
01:52 - to debug
01:55 - all right so i want to start out by
01:56 - going over this uh pull request that i
01:59 - received so
02:01 - you can check out there's a link in the
02:02 - description for the github repo
02:04 - all the code is open source uh it's it's
02:07 - all in this repo if you want to add
02:09 - something to the code please feel free i
02:12 - have some issues already and you can
02:15 - check those out
02:16 - i'm going to start my timer since we're
02:18 - getting into actual code stuff now
02:20 - um but we did get a um
02:24 - a pull request and
02:26 - i i like the full request and everything
02:29 - that was done in app.js is awesome so
02:32 - basically what it what it had done is um
02:37 - uh
02:38 - made sure that the
02:40 - focus
02:41 - went into the input so
02:44 - here's our our game
02:45 - uh beautiful i know right
02:48 - so what would happen is you put in let's
02:51 - say four
02:52 - and then the input's not focused anymore
02:55 - right so i have to actually click back
02:56 - in here okay so not a good experience i
02:59 - actually had my kids play this game a
03:02 - few days ago and that's why
03:05 - where i got a lot of the issues that i
03:07 - put in over the weekend
03:09 - i was just kind of observing what they
03:11 - were doing
03:12 - uh so now after this pull request the
03:15 - focus will go back
03:17 - um
03:18 - so
03:19 - the the thing i have a question about
03:21 - though
03:22 - and i'm not sure
03:25 - if you're watching
03:27 - so you did this pull request
03:32 - uh
03:33 - seduce
03:34 - sorry not sure how to pronounce that but
03:35 - anyway if you're watching
03:37 - you can just answer me right in the uh
03:39 - in the chat
03:41 - um so
03:43 - i i didn't have an issue where the
03:45 - division this game is supposed to be for
03:47 - children who are just starting to learn
03:50 - uh how to do basic math right
03:53 - so
03:55 - the uh
03:56 - the issue that i had with the division
03:59 - was
04:01 - you would divide like single digit
04:03 - numbers and you could potentially get
04:05 - decimal numbers
04:07 - and
04:08 - children
04:09 - wouldn't be able to do that right
04:11 - they probably don't even have the
04:12 - concept of a decimal yet at that point
04:15 - so i wanted it so that when you divide
04:17 - you'd always get
04:19 - basically you'd always get a whole
04:20 - number answer okay so i think maybe in
04:23 - the issue i didn't explain it clearly
04:27 - correct me if i'm wrong it looks like
04:28 - what this is doing is it's just taking
04:31 - whatever the
04:33 - answer is from the division and it's
04:34 - just rounding it right rounding it it
04:37 - down
04:38 - uh
04:39 - so what i what i actually wanted and i
04:41 - put a little
04:42 - comment here too is what i actually
04:44 - wanted is
04:46 - to make sure that the problem given to
04:50 - the user the division problem
04:53 - would have a whole number answer so for
04:57 - instance 9 divided by 3 is going to give
05:00 - you
05:01 - 3 right just 3. 4 divided by 2 is going
05:04 - to give you 2
05:06 - but 3 divided by 2 is going to give you
05:08 - a fraction or a decimal same way with
05:10 - like 9 divided by 4 right so the user
05:13 - would never be presented with 3 divided
05:16 - by 2 or 9 divided by 4 right
05:18 - so that's more of like what i wanted
05:22 - and i have a couple ideas for how to
05:25 - implement that but if anybody else wants
05:26 - to implement that please go ahead and to
05:29 - do if
05:31 - i guess
05:33 - so like this part of the pull request is
05:36 - great and i'm ready to accept that but
05:38 - this part
05:39 - like i said i think it needs
05:42 - worked a little bit differently and
05:43 - that's that's probably my fault for not
05:46 - um
05:48 - uh for not like explaining it
05:51 - well enough in the issue so
05:54 - maybe i'll
05:58 - copy this as well
06:01 - and put it add it to the issue
06:16 - yeah
06:16 - yeah i didn't really
06:19 - yeah
06:20 - i didn't really provide many ex much
06:22 - explanation or examples okay so
06:25 - hopefully that made sense
06:28 - and we can go back to some of the code
06:31 - the testing code
06:32 - uh let me i do want to say what's up and
06:34 - just check and see who's here who's
06:36 - watching
06:37 - uh so hey everyone
06:40 - i see a lot of you in the live chat
06:44 - um
06:48 - scrolling through really quick
06:56 - okay
06:57 - i already see some questions in there
06:59 - and i will um i'll get to those
07:01 - questions as soon as the timer goes off
07:03 - so uh hang in there
07:06 - and if you can't hang in there right now
07:08 - if you got to go do something that's
07:09 - cool you can always watch the
07:13 - recording of this later on and you can
07:15 - hear my answer to your question there
07:19 - all right so we did some testing
07:22 - and briefly i'll just go through this
07:24 - we're using puppeteer
07:27 - to run a headless chrome browser
07:30 - and then we are
07:33 - simulating what a user would go through
07:37 - and verifying that our app does what we
07:39 - want it to do
07:41 - all right so this is an end to end test
07:44 - uh if you want to check up check out
07:46 - like how we set this up this browser.js
07:49 - options.js and runner.js those are the
07:52 - files you want to check out for the the
07:54 - setup
07:56 - and then the actual test is
07:58 - just this one file for now app.spec.js
08:04 - uh
08:05 - if you want to know more about the tests
08:06 - check out the last stream so we started
08:09 - this in our our last live stream that
08:11 - i'd done a week ago
08:14 - but let's let's jump into this so for
08:16 - now we're just
08:17 - our first test is we're checking to make
08:20 - sure we can actually see the title so
08:22 - like this basically verifies that the
08:23 - page loads
08:25 - and it has the text on it that we want
08:27 - it to have right
08:29 - um we also verify that the hero
08:32 - character can be seen
08:34 - so
08:36 - when i say the hero i mean
08:38 - this little
08:39 - purple square
08:41 - for now
08:43 - uh still need to work out some graphics
08:45 - and a better color scheme for this
08:47 - although my kids did like the colors
08:51 - so
08:52 - all these aren't really
08:54 - this doesn't look great to me
08:57 - it actually may not be bad for kids so
09:01 - we'll see i think i need some more
09:03 - testing
09:04 - user testing before i make a
09:07 - final decision
09:08 - on the colors
09:10 - um
09:12 - let's see so we're testing that and what
09:14 - i'd like to test is
09:16 - also
09:17 - do we have
09:20 - the correct number of uh of enemies
09:24 - uh so
09:27 - right now we're testing addition all
09:30 - right and it we're saying we correct
09:32 - addition problems should reduce the
09:33 - enemies by one
09:35 - right and we we got pretty far along in
09:38 - this but not quite so
09:41 - we have our value one our value two so
09:44 - we're actually getting the the numbers
09:46 - that are on the page for our our problem
09:50 - right so and we're getting the
09:54 - okay and then we're adding these numbers
09:56 - together right so
09:58 - potentially we would do the same test
10:00 - for
10:01 - each mode of the game right which for
10:04 - right now is
10:05 - addition subtraction multiplication and
10:07 - division all right but once we get this
10:09 - addition one working we could pretty
10:11 - much just copy and paste most of it
10:14 - to get it working for the other modes
10:17 - all right so we have it all the way down
10:19 - to where the user would click submit
10:23 - and what we need to do is just figure
10:25 - out okay are there just two
10:29 - elements left
10:30 - uh with the class of enemy
10:34 - so i believe we already added that class
10:36 - i should verify because our test
10:38 - definitely is going to fail if we don't
10:40 - have
10:41 - anything with that class on it
10:43 - so let's go to our
10:44 - app.js and check out our enemies
10:51 - and
10:52 - where's our enemies
10:55 - oops i went too far
10:58 - yep so we do have a class name of enemy
11:01 - on all our enemies
11:04 - all right so let's go back to
11:07 - the test
11:09 - so what we need to do then is just
11:11 - figure out
11:14 - in our our tests how to do this
11:17 - so i'm thinking that we could
11:22 - there's going to be some way to check
11:24 - for the number of enemies so let's go
11:27 - over here to our
11:31 - documentation
11:36 - which i thought i had some documentation
11:38 - open from the last time but i guess not
11:40 - all right so let's
11:43 - let's think what would this be
11:48 - probably not puppeteer documentation
11:51 - look at it maybe
11:56 - just
11:58 - we'll see
12:08 - all right let's check this out this
12:10 - looks like i've been here
12:12 - i've been to this article already
12:16 - and
12:20 - all right
12:21 - let's open up the documentation for both
12:23 - of these
12:48 - i was hoping i'd get lucky and i'd see
12:50 - an example of them doing the same thing
12:53 - instead of having to look at the
12:54 - documentation
12:56 - but i don't think that's going to happen
13:06 - okay
13:08 - all right so let's check out puppeteer
13:13 - api
13:15 - puppeteer is what actually runs the
13:18 - um
13:20 - interactive documentation
13:23 - this is what actually runs the headless
13:25 - browser
13:27 - but we can see we have
13:30 - page
13:34 - a lot of of options with the puppeteer
13:37 - api
13:39 - away page
13:41 - and i don't i don't actually think that
13:44 - puppeteer is going to give us what we
13:45 - want which is why i open jest as well
13:48 - uh
13:49 - let's see if they got a link directly to
13:51 - the docs
13:54 - nope not yarn docks
13:57 - oh well
13:58 - uh
14:01 - ducks
14:02 - here we go
14:06 - mark functions
14:18 - [Music]
14:24 - ah api that's what i want
14:26 - okay
14:35 - i hate to just look through docs when
14:37 - i'm doing the coding but
14:38 - i really don't know what the uh
14:42 - what the
14:44 - correct way to do this is
14:46 - if anybody has an idea or knows uh go
14:49 - ahead and throw it in the chat as well
14:50 - i'll keep trying to look over
14:53 - and
14:54 - see if you have the
14:56 - answer
14:57 - all right so let me make this bit bigger
14:59 - so you can see what i'm doing
15:04 - okay so and just to be clear what i need
15:06 - to do is figure out i need to get the
15:09 - exact number
15:11 - of elements on the page that have the
15:16 - class name of enemy
15:24 - describe only
15:27 - each
15:49 - these are not helping me
15:52 - oh you know what i had last last time
15:54 - now i remember this i had my other
15:55 - computer open and i think that's where i
15:57 - actually had all of the uh
16:01 - the documentation open and i kept
16:03 - checking my other computer that's why i
16:05 - didn't have any documentation open on my
16:07 - machine
16:13 - maybe i still have it open
16:15 - let's check this out
16:22 - and i in fact do have quite a bit of
16:24 - documentation open on my other screen
16:26 - right now
16:28 - uh
16:29 - let's see
16:58 - the
16:58 - the problem
17:00 - with
17:00 - [Music]
17:03 - what i'm doing right now and testing at
17:05 - least for me is
17:08 - so i'm using
17:11 - several different testing
17:13 - like frameworks so potentially like on
17:15 - the same page we could be
17:17 - using things from puppeteer jest mocha
17:20 - or chai
17:21 - right so trying to find
17:24 - the right thing to say
17:26 - in the documentation has been difficult
17:29 - um
17:30 - this is a good time to remind everybody
17:32 - this is not a tutorial this is me trying
17:34 - to figure out how to do things it's
17:36 - supposed to be a realistic look at how
17:39 - a uh a software engineer
17:42 - works
17:44 - sometimes
17:46 - it works out well and i get things done
17:48 - and sometimes i don't
17:52 - all right so let's just try
17:54 - something
17:55 - um so
17:59 - we had just copied and pasted this from
18:01 - up here
18:04 - with this comment so
18:06 - we
18:07 - have our
18:10 - our result now would be after we've
18:12 - clicked submit we're going to check for
18:15 - our inner html
18:17 - and we should be able to expect the
18:19 - result to contain
18:24 - and instead of hero
18:26 - we could say
18:30 - enemy
18:34 - but we want it
18:36 - we want two enemies all right so that's
18:38 - the issue
18:40 - expected number of
18:49 - all right and now is
18:51 - let's see
18:54 - just testing fine number
18:58 - of
19:00 - elements
19:04 - all right so if you couldn't see that i
19:05 - just searched just testing find number
19:07 - of elements with class on page
19:11 - fine selector
19:14 - enzyme
19:15 - we're not using enzyme
19:17 - so
19:18 - that's not gonna work
19:21 - all right
19:22 - let's see
19:26 - jquery get out of here
19:28 - um
19:38 - just you can use click your own
19:47 - all right let's switch it up react
19:50 - and to
19:52 - end testing
20:09 - all right let's look at these for now
20:12 - dawn manipulation strikes me down let's
20:15 - see if we can test the following snippet
20:17 - of jquery because listen so click of it
20:24 - let's fetch current user
20:26 - displays
20:38 - yeah not exactly what we want
20:50 - hmm
21:16 - all right that actually looks like an
21:18 - interesting article but not exactly for
21:20 - what we want to do
21:23 - all right let me check this
21:27 - all right harsha's here what's this
21:34 - and harshit has some ideas
21:37 - are you not using just
21:47 - this is
21:48 - all right harsh is saying you should use
21:49 - cyprus for endang testing
21:53 - all right i've never used cyprus
22:00 - harshan says i'm not using enzyme i know
22:02 - i'm not using enzyme since you're not
22:03 - using jess wait a second
22:06 - wait a second so
22:08 - just is not being used at all in here
22:12 - why does why did i think i'm using yes
22:14 - no that's not what i wanted clicked the
22:16 - wrong thing
22:17 - um
22:20 - so harsh it
22:23 - i mean that actually makes sense though
22:25 - um
22:28 - this is using chai and browser let's
22:31 - just go to cypress really quick then
22:33 - because i don't know what cyprus is
22:43 - so
23:04 - so
23:14 - okay
23:28 - it's like true tree culture
23:31 - okay so the syntax looks very similar
23:34 - to all the normal testing syntax
23:37 - all right so
23:39 - why
23:40 - why what then is better about cyprus
23:42 - than puppeteer
23:48 - it seems like cyprus maybe
23:54 - does more than puppeteer
23:56 - correct
23:59 - uh
24:00 - okay
24:00 - arshad says it'll take time to move to
24:02 - cyprus
24:05 - oh michael said jess was removed from
24:07 - package json so just actually is
24:10 - installed with create react app so it's
24:12 - there it's just not in the package json
24:14 - like it's it's
24:16 - it comes with react scripts
24:20 - all right
24:22 - so let's just make it work with this one
24:24 - then
24:27 - okay harshit says
24:29 - cyprus is a complete framework better ui
24:33 - all right i'll have to check out cypress
24:35 - then
24:37 - uh later on today
24:39 - and see if that's something we want to
24:41 - switch to
24:42 - we're really not that far along with
24:43 - testing so a switch shouldn't be too bad
24:46 - um
24:49 - all right so harsh it's saying we could
24:51 - just check
24:52 - elements.length
24:54 - just check the length okay
25:20 - all right it takes time to move to
25:21 - cyprus
25:30 - sorry i'm looking at the uh
25:35 - looking at the live chat
25:38 - all right so harshit since you know what
25:41 - you're doing here
25:42 - uh help me out here so i need to check
25:45 - the elements dot length
25:50 - so can i get
25:54 - her body
25:56 - html
26:01 - um so do i need to check like could i
26:05 - just directly
26:08 - i guess what i'm asking is
26:10 - am i doing the check off of result off
26:12 - of the inner html then
26:26 - enemies equals
26:42 - contain
26:57 - okay ours is saying don't use result
27:01 - no don't use the result oh i should ask
27:03 - if we could do the live share i don't
27:04 - have the vs code live share uh set up on
27:07 - this computer
27:13 - just don't use result use your css class
27:16 - okay so don't use result use css class
27:19 - okay
27:20 - um
27:40 - yeah i can't use it like but i think my
27:42 - timer went
27:46 - up okay timer went up
27:49 - let's take a break
27:52 - and uh let me answer some questions
27:54 - right now
28:01 - a lot of people just saying hi
28:04 - asking what language this is in
28:06 - it's in javascript
28:16 - um
28:17 - let's see
28:20 - okay here's a question uh carl says i
28:22 - think jesse should take a coding
28:24 - challenge from us and he should program
28:26 - a slot machine game using react native
28:28 - web
28:29 - a slot machine game
28:31 - um i'd never thought of doing that
28:34 - maybe maybe we can do that
28:37 - um
28:39 - carl says next project must be a slot
28:41 - machine or card game using right native
28:43 - web say that you accept the challenge
28:46 - uh i don't know i'll think about it i'll
28:48 - think about accepting the challenge
28:52 - um
28:54 - avia says would you recommend c plus
28:56 - plus for game developing uh i don't
28:59 - i don't know i don't know what the best
29:01 - is for game development so
29:03 - uh
29:04 - i'm not the uh
29:06 - probably the best person to give advice
29:09 - um
29:11 - can you suggest to me a video where i
29:13 - can learn all about the basics of c
29:15 - language uh check out the cs50 courses
29:19 - from harvard
29:21 - they're all on youtube
29:23 - the first
29:26 - maybe like the s
29:28 - third week or third video or something i
29:31 - believe they go over basics of c
29:35 - so check out that i mean it's i don't
29:38 - think it's in the first video but
29:39 - definitely within like the first few
29:41 - videos they uh they go over to see
29:47 - arun asks what is software testing
29:50 - um
29:52 - basically like
29:53 - in in this case we're doing automated
29:55 - testing so we create a program that
29:59 - runs our app and tests it tests the app
30:03 - right you could also do like testing
30:06 - where like an actual person
30:09 - tests your your app
30:12 - uh and that's important too
30:14 - uh to do them both but that that's what
30:17 - i mean by testing
30:26 - creepy ass should i go for microsoft
30:28 - certification for web
30:30 - uh i don't really know i don't know
30:31 - anything about microsoft's web
30:33 - certification
30:44 - uh milano world says i don't know what
30:46 - you do jesse but i'm still learning i'm
30:47 - busy with html css and javascript
30:50 - says that it looks cool
30:52 - um hopefully i'll get there what are you
30:54 - doing uh this is um react native uh and
30:58 - we're doing testing for react native so
31:02 - but keep it up with the html css and
31:04 - javascript uh when you get good with
31:06 - that you can move on and do react if you
31:07 - want
31:10 - uh
31:11 - let's see
31:19 - pa says i am your biggest fan can you
31:22 - please do videos about pie game i really
31:25 - need to know
31:26 - uh i don't know anything about that so i
31:28 - probably won't do videos uh
31:31 - let's see
31:35 - getting
31:36 - almost um
31:40 - hugo says oh this is sort of like pair
31:42 - programming yeah it's it's kind of like
31:44 - uh
31:46 - it's kind of like pair programming
31:48 - except
31:49 - there's a lot more people
31:51 - involved
31:58 - all right um
32:01 - gap says it's like 8 a.m and you're out
32:04 - here coding respect
32:06 - yeah
32:07 - yeah it is so we started at 7 30.
32:10 - um it is early but
32:14 - this is the only time of day that i can
32:16 - like reliably do this this uh coding
32:19 - show
32:21 - uh
32:22 - vika says
32:24 - uh
32:25 - love and saw all your videos nice and
32:27 - very knowledgeable
32:29 - oh thanks i appreciate that
32:32 - uh
32:33 - [ __ ] rod says is java enough for
32:35 - getting a job oh yeah there are a ton of
32:37 - java jobs
32:39 - available so they they hire java
32:41 - developers where i work all the time
32:48 - hugo says cs50 is a bit hard for a total
32:51 - newbie um
32:53 - cs50 could be but i i don't know they
32:55 - search you out really easy like it
32:57 - starts you out with scratch
32:59 - uh so
33:01 - but you're right i mean i didn't do
33:03 - look at even the cs50 videos till i'd
33:06 - already been a developer for a couple
33:07 - years so
33:08 - um
33:10 - i i guess i don't know what it had been
33:12 - like if i had tried it as a total newbie
33:14 - but but it's supposed to be an intro to
33:16 - computer science class
33:19 - um so it's supposed to be okay even for
33:23 - for new people
33:25 - um
33:27 - okay
33:28 - i actually got through the everything in
33:30 - the chat uh if i happen to miss your
33:32 - question just ask it again
33:34 - um
33:36 - or put in the comments or something
33:38 - all right let's go
33:42 - i don't think i'm going to be able to do
33:43 - an entire pomodoro session i'm going to
33:45 - have to
33:46 - finish up before that so
33:50 - let me just mark down
33:52 - where we left off at eight
33:56 - in the chat
34:00 - oops
34:01 - 802
34:03 - so i can come right back to there all
34:05 - right now
34:07 - let's get at the very least this test
34:10 - working before we end or at least try
34:12 - our best to get this test working
34:15 - um
34:17 - this is actually way harder than i
34:18 - anticipated it would be
34:21 - it seems like an easy thing but
34:25 - since i've never done it it's kind of
34:27 - hard
34:28 - okay so let's go back here and say
34:40 - okay so we need to
34:46 - get the number of elements on the page
34:48 - so our our selector is going to be just
34:54 - enemies right is that what it is now i
34:56 - need to double check and make sure it's
34:58 - not enemy
35:00 - yeah
35:01 - i think it is enemy
35:03 - but let's double check
35:06 - enemy yep
35:08 - okay
35:10 - so selectors enemy
35:12 - and
35:23 - i wonder if we could do
35:33 - so like instead of eval
35:35 - body on the page
35:37 - like can we grab
35:40 - to page dot
35:43 - that would be puppeteer
35:46 - it'd be a puppeteer thing
35:49 - so let's type page
35:59 - let's see what we have for our page page
36:01 - on not page on
36:04 - page selector yay all right
36:09 - um
36:10 - returns
36:12 - runs talking query selector within the
36:14 - page if no one what matches return value
36:16 - is null okay so i don't want that i want
36:18 - the number
36:20 - if no one's
36:23 - this should return
36:29 - all right so it'll resolve to an empty
36:30 - array so i'm assuming it would be
36:33 - an array so
36:35 - we need to use
36:37 - dollar sign dollar sign selector
36:48 - delusion dollar sign
36:55 - and let's call this enemies
37:01 - and get rid of this
37:07 - um actually we can just call this
37:09 - let's say
37:16 - number of enemies and we should be able
37:18 - to do dot
37:20 - length right
37:24 - number of enemies is declared all right
37:26 - and
37:29 - let's go
37:30 - number of enemies to equal
37:50 - all right let's see
37:55 - see if that works
37:57 - uh first let me see
38:00 - como's number of enemies
38:02 - okay cool so that's what horseshit is
38:04 - saying too
38:05 - awesome
38:08 - i do want to say like so i took that i
38:10 - don't know five or six minute break and
38:12 - before the break like my brain was just
38:15 - totally flustered right like i was try
38:18 - like i have no idea what to do here um
38:21 - after the break
38:23 - it seemed like it was very clear i just
38:25 - thought like okay fine like i had my
38:28 - brain had accepted the fact that i was
38:30 - mistakenly looking at the wrong
38:32 - documentation
38:34 - uh which harsh it informed me of as well
38:37 - but it just took me a second to wrap my
38:38 - mind around the fact that
38:41 - like the page
38:43 - that we get from puppeteer would have
38:44 - different methods on it
38:46 - so anyway
38:47 - i'm just saying that to say like it's
38:49 - definitely a good idea to take periodic
38:52 - breaks i love the pomodoro
38:54 - technique which is 25 minutes of code
38:56 - 5-minute break
38:59 - it's happened just now to me but it's
39:01 - happened a lot of other times that
39:03 - i'm stuck on a problem because in my
39:06 - mind like i'm thinking this is the way
39:08 - to fix it this is the path but in
39:10 - reality there's
39:11 - that's that's a dead end right i'm
39:14 - that's the wrong way to go about it
39:17 - and then when i take a break and think
39:18 - about something else for a couple
39:20 - minutes and come back to it it's almost
39:22 - like a reset
39:24 - and it just frees up my brain
39:26 - to take a different path
39:29 - right
39:30 - so it's counter-intuitive that taking a
39:33 - time off would help you do something
39:35 - faster
39:36 - but that has happened to me
39:39 - so many times
39:41 - um
39:42 - so anyway definitely recommend that
39:47 - all right cool
39:48 - um so i actually i do want to test this
39:52 - so
39:54 - i want to test the test
39:55 - so let's run yarn e2
39:59 - 2e
40:01 - i think that's what i did
40:03 - let's check it out e2e yep the rne2e
40:06 - should run this
40:08 - and we'll get an idea of whether this
40:10 - works
40:11 - nope all right let's see what the
40:13 - problem is
40:14 - no node found for selector answer inputs
40:18 - oops did we not
40:20 - maybe i didn't do that
40:22 - um app
40:25 - let's go to our app
40:27 - file
40:31 - and let's find our input
40:37 - native id answer input
40:41 - okay we should have an answer input
40:46 - no node found for selector answer input
40:50 - all right let's check that out again
40:54 - type answer input answer
40:57 - what did i do
41:04 - so we're trying to
41:06 - type into answer input and we're going
41:08 - to put the answer in there
41:10 - so this should be correct
41:16 - i'm just i'm going to copy that
41:18 - and then paste
41:20 - so that we have for sure exactly the
41:23 - same thing
41:25 - oh
41:27 - i see what the problem is it was camel
41:29 - case here and it was not camel case
41:32 - there all right let's switch that up
41:33 - then
41:37 - well at least that's an easy fix silly
41:39 - mistake but easy fix
41:45 - usually like in javascript you camel
41:47 - case everything or at least most things
41:50 - but in
41:51 - when you're doing these selectors
41:53 - oh no selective submit did i not put
41:55 - submit on the button
41:57 - um
41:58 - like when you're doing selectors like
42:00 - with css and html the standard is
42:03 - usually to
42:05 - hyphenate things
42:08 - so i tend to just go with that
42:11 - it just bothers me to see camel case
42:13 - stuff in the
42:14 - dom so
42:18 - that's why i do it like that native id
42:20 - submit
42:23 - all right
42:25 - no node found for selective submit now i
42:28 - know we have a button called submit
42:30 - right native id
42:32 - submit
42:33 - right we have answer input they
42:35 - obviously found that
42:38 - submit
42:40 - sub s u b m i t
42:43 - u s-u-b-m-i-t all right we have it
42:50 - let's verify like
42:52 - in the dom
42:54 - that that is there
42:56 - okay so here's our submit button let's
42:59 - inspect it
43:00 - and see
43:02 - it should have the id
43:04 - does it not
43:05 - do we not have the id submit here
43:14 - all right let's check this out
43:15 - s-u-b-m-i-t
43:21 - wait a second that's just weird
43:42 - that's really weird
43:48 - we don't have an id
44:00 - hmm
44:01 - all right
44:02 - let's go back to our code double check
44:04 - what we're doing
44:06 - okay so we have this button
44:09 - we have submit it's it's possible that
44:13 - you can't put a native id on a button
44:17 - i know you can do it untouchable opacity
44:19 - so let's switch it to touchable opacity
44:24 - this is going to take
44:27 - button
44:37 - oh yeah oops
44:42 - there we go
44:47 - touchable opacity
44:50 - there we go
44:52 - and
44:52 - we'll need inside of here
44:56 - um
44:59 - we can't do the title anymore so
45:02 - what we're gonna do whoa hold on
45:08 - oops i guess that went on the wrong one
45:15 - and i guess i need to keep the button in
45:16 - there for that one
45:21 - okay so touchable opacity allows you to
45:24 - kind of like do more with a button
45:33 - so you can check it out we may bring up
45:35 - the documentation in a second touch
45:37 - opacity
45:38 - and let's add inside of there
45:41 - um
45:43 - a view
45:46 - and
45:47 - we'll add text
45:50 - and we'll say
45:52 - submit
45:54 - okay we don't need a title
45:57 - and i think this should work as the bare
46:00 - minimum we need for touchable opacity
46:02 - let's see if that
46:05 - does what we want
46:10 - all right so this the styling is going
46:11 - to be off so like button comes with
46:13 - styling
46:14 - touchable opacity does not so we need to
46:17 - add our own styling which is fine
46:19 - um
46:22 - yep here we go now we have the id submit
46:25 - so let's try that again
46:27 - right so that's kind of good to know
46:28 - evidently you can't directly put an id
46:31 - on a button
46:34 - now that i think about it maybe there is
46:36 - a way to do it and
46:37 - i just need to look it up
46:39 - but i actually almost always use
46:42 - touchable opacity instead of button
46:44 - because i normally want to have
46:45 - different styling anyway
46:49 - all right so
46:51 - now that we verify that the
46:54 - submit id is on the page let's see what
46:57 - error we get now
46:59 - expected undefined to equal
47:02 - okay so we got undefined
47:06 - with our
47:10 - with our test all right so now we
47:11 - actually have an issue with the test
47:14 - so
47:15 - page
47:18 - she said a weight and we wanted a page
47:20 - and we're trying to get the enemy
47:27 - let's see
47:30 - hmm
47:35 - so maybe this doesn't return what i
47:36 - thought it would return okay so i
47:38 - thought it would return
47:40 - oops let's get rid of this stuff we
47:42 - don't need
47:44 - i thought this would return an array
47:51 - with the elements in it
47:55 - let's see what it actually returns
48:01 - so it's it's returning so we it says
48:03 - what is running
48:05 - like what the javascript is so let's see
48:08 - if we can run this
48:10 - we'll go to the console
48:11 - and
48:12 - we'll say document query selector all
48:14 - and i'm assuming we can just put in
48:17 - the
48:18 - enemy
48:24 - oops
48:25 - what do we get here
48:27 - okay we got three which is correct all
48:29 - right so let's see let's do it again but
48:31 - then say dot
48:32 - length and we should get three
48:35 - good now what we should have if we get
48:37 - the right answers is actually two
48:41 - all right so this works let's verify now
48:44 - that that's what we actually wrote
48:47 - in our code
48:48 - so page
48:50 - dollar sign dollar sign dot enemy dot
48:53 - length
48:56 - and
48:57 - here we have
49:00 - page dot mainframe
49:03 - dot dot
49:23 - hmm
49:32 - yeah i mean that looks it looks like
49:34 - that's what we're doing
49:39 - right
49:49 - all right
49:51 - okay harsh it says uh you need to do the
49:54 - length in the next line okay
49:57 - cool
49:58 - so i guess then that that won't work
50:01 - doing the chaining the length on
50:03 - um
50:05 - so let's do
50:09 - let's switch this up and say
50:22 - sorry i'm just
50:24 - i like i need a different keyboard or
50:26 - something
50:27 - uh this is just too different from what
50:29 - i'm used to using at work
50:31 - anyway number of enemies equals
50:34 - enemies dot length
50:40 - we'll change this to enemies
50:43 - all right
50:44 - now let's do the
50:52 - test all right failed why do we fear
50:56 - correct addition answer reduces enemies
50:58 - by one
51:01 - expected 40 equal to hey we got an
51:03 - actual number but it looks like
51:08 - right so this would seem that maybe we
51:10 - got the answer wrong and we actually
51:13 - have four enemies so let's
51:16 - let's see what happens here
51:18 - all right so we're getting these values
51:25 - and
51:31 - we're trying to add the values
51:34 - do we need to do
51:37 - answer equals y1 plus value 2.
51:43 - these are probably coming through as
51:45 - strings
51:46 - maybe we need to have them be not
51:49 - strings
51:51 - what do you think oh
51:53 - harsha just said they are strings all
51:55 - right
52:00 - and harshit says for button you can
52:02 - actually use test id instead of native
52:05 - id and that'll work all right so that's
52:07 - good to know
52:12 - all right um
52:15 - how do we do this is it par parse int
52:17 - right is that
52:19 - let's show this out
52:25 - yeah parse and
52:29 - that's what we want
52:36 - and i think the base
52:38 - is optional so like we already have
52:43 - like the base defaults to
52:46 - base 10
52:48 - i believe
52:49 - maybe not
52:54 - all right anyway
52:56 - parse and
52:59 - oh yeah
53:07 - all right let's parse and and
53:13 - just to be sure let's say base 10.
53:29 - so like this base here like base 10 is
53:32 - like our normal number system like if we
53:33 - put two it would be in binary right so
53:36 - that's where the base is
53:38 - uh i'm not going to i would assume that
53:41 - base 10 is the default but i did i
53:43 - didn't see that it said that in the
53:44 - documentation so i'm not going to assume
53:46 - it i'm just going to put that in there
53:50 - all right let's see if that makes the
53:51 - difference then
53:52 - and we get a correct
53:54 - answer text is not iterable
54:01 - what did i do
54:02 - all right type error text is not
54:05 - iterable
54:29 - okay harsh it says it does default to
54:31 - 10. all right that's cool
54:34 - um
54:35 - what the heck am i doing with this text
54:37 - is not iterable
54:42 - type error
55:40 - hmm
55:42 - uh harsha says pass it like this
55:46 - okay
55:49 - oops
55:56 - versus saying maybe we need to give
55:57 - puppeteer string
56:02 - yeah that makes sense it was getting a
56:03 - string before and now it's ah shoot
56:07 - any is not defined
56:11 - oh the
56:14 - dollar sign is not defined
56:17 - maybe
56:19 - oops template literal sorry
56:21 - didn't catch that
56:22 - thanks for the verification okay
56:28 - and
56:29 - those are curlies all right i think i
56:31 - need to increase my font size
56:36 - not on this screen that you can see but
56:37 - on my other screen because i
56:40 - i couldn't even tell those were curly
56:41 - brackets i thought they were parentheses
56:44 - okay
56:46 - let's give that a shot
56:52 - harsh it's good to be working with you
56:53 - again i love it
56:56 - um
56:57 - sweet and that worked
56:59 - awesome
57:01 - all right cool so
57:03 - at some point i stated i just wanted to
57:05 - at least get this test working and
57:07 - evidently it works
57:09 - um i would say if anybody wants to do
57:12 - other tests like this go ahead but
57:13 - harshit said that
57:15 - uh he wants to switch this over
57:19 - to using cyprus uh which actually is
57:21 - really cool i'm
57:22 - uh i'm interested to see how cyprus
57:25 - works
57:29 - all right cool so
57:32 - let's
57:34 - save this before i finish up with the
57:36 - rest of the questions
57:38 - get status all right
57:41 - those are the files that i i
57:43 - worked on so that makes sense git commit
57:48 - we're going to commit and do am and
57:51 - that's going to let us so
57:55 - i'm gonna say test add test for
58:00 - edition
58:05 - hit push
58:09 - all right cool
58:12 - that should be on github now
58:16 - and i think i got a saw a message in
58:18 - there about this
58:21 - um
58:24 - that pull request that it's updated
58:28 - or something like that did it
58:44 - okay so i'll have to check that out and
58:46 - pull that in because i want to make sure
58:48 - i get through these questions if there
58:49 - are any more questions
58:50 - uh and then get to work on some more
58:53 - react native for uh
58:55 - for my normal job
58:58 - um
59:01 - let's see
59:03 - all right let me go back to
59:05 - [Music]
59:06 - where we started
59:12 - uh gil gilvane give i'm not sure i
59:15 - pronounced that so apologies says i'm
59:17 - from brazil i really like your channel
59:19 - thank you for saying that i i appreciate
59:21 - that thanks for watching
59:23 - um
59:28 - michael added so we were talking about
59:30 - the cs50 course earlier and whether or
59:32 - not it was good for beginners and uh
59:34 - michael creel says
59:35 - uh cs50 is designed for newt
59:39 - excuse me it's designed for noobs if you
59:40 - start at the beginning
59:42 - and i i i do agree i think like so
59:45 - normally your intro to computer science
59:47 - class would be like cs
59:49 - 100 or 101
59:51 - right so cs50 is like
59:53 - uh
59:55 - as far as i can remember the whole idea
59:57 - of the class was that you could come
59:59 - into it
60:00 - like your major in in university could
60:03 - be
60:04 - something totally different than
60:06 - computer science but you could still
60:07 - take this course and
60:09 - and do well and understand it
60:12 - so
60:14 - at least it's it's supposed to be like
60:16 - that um i didn't go through the whole
60:18 - course i just did the first couple of
60:20 - videos
60:22 - so i don't know how difficult it
60:23 - actually gets
60:26 - the first couple videos were
60:28 - we just said i mean pretty
60:30 - pretty easy to understand
60:35 - okay
60:43 - uh
60:44 - sufine says thanks for sharing your
60:46 - knowledge you're welcome thanks for
60:48 - watching
60:56 - um justin says can someone please give
60:58 - me the breakdown of what we're making um
61:01 - sorry i just joined
61:03 - yeah if you want a
61:04 - more in-depth breakdown watch like video
61:08 - one or two video one's kind of rough we
61:10 - had some technical difficulties maybe
61:12 - video two would be better but um
61:14 - basically we're just making an app
61:17 - that helps
61:19 - children to learn basic math
61:22 - it's just they can practice their math
61:24 - problems
61:25 - it it gamifies it a little bit
61:28 - um
61:29 - so it's it's a little bit more fun for
61:31 - them actually so my kids
61:34 - my nine-year-old and my
61:36 - seven-year-old both liked to play it
61:41 - so
61:43 - they were just excited to be able to
61:44 - play any type of game i think
61:59 - hmm
62:08 - okay justin says thank you so it's a
62:10 - game yep yeah it's a game and i'm not
62:12 - like a game developer so
62:15 - um
62:17 - i
62:18 - i like i've done
62:20 - like
62:21 - things that i suppose you could call
62:22 - them games but they're not like legit
62:24 - games before
62:26 - um
62:28 - so this is
62:30 - not at all like if you want to learn how
62:31 - to be a game developer
62:33 - i'm probably not the person you want to
62:34 - learn that from but i do know react
62:36 - native uh and i do know web development
62:39 - um so
62:40 - that's more like where i'm coming from
62:43 - i'm just trying to make a game like
62:45 - really like for my children and
62:48 - i want to try to release this on in the
62:51 - app stores
62:52 - um
62:53 - at some point
62:55 - uh if i think it's decent so that other
62:58 - kids could also potentially get some
63:00 - benefit from it
63:02 - so
63:03 - that's that's why i'm doing this
63:10 - uh justin says you can make whatever you
63:12 - want i just love coding devs oh awesome
63:16 - thank you all right cool well i've
63:18 - gotten through
63:19 - the uh everything in the chat
63:21 - um like i said earlier if i missed your
63:23 - question uh just put it in the comments
63:27 - you can also uh follow me on social
63:29 - media i have so the link to my youtube
63:32 - channel is in the description if you go
63:34 - there i have all my different social
63:36 - media links
63:37 - uh available uh for my channel
63:40 - so check them out if you wanna
63:42 - um you know message me on social media
63:46 - also
63:47 - uh if you like this you know you can
63:49 - follow free code camp and set the
63:51 - notifications so you get notified
63:53 - whenever i'm going to go live
63:56 - occasionally i do some videos and live
63:57 - streams on my own channel if you're
63:59 - interested in that please check that out
64:01 - subscribe
64:02 - um
64:04 - and you'll get notifications for that as
64:05 - well
64:06 - uh i'm gonna try to be back on friday
64:10 - i'm not sure last friday
64:13 - i think i ended up not feeling well and
64:16 - slept in and so i didn't stream so
64:18 - apologies for that but
64:20 - i really want to try to stream at least
64:21 - twice a week so i'm gonna try to get
64:23 - another one in this week so uh just be
64:25 - looking out for that
64:26 - um like i said you'll get the
64:28 - notification if you're subscribed um
64:31 - and
64:32 - i do post on social media uh linkedin
64:35 - facebook twitter and instagram
64:38 - before i stream
64:40 - so
64:41 - you will get
64:43 - updates there uh before a stream happens
64:46 - and if you miss it you can always catch
64:48 - the recording uh later on
64:52 - okay
64:54 - so until next time
64:56 - have a great day uh have a great rest of
64:58 - the week
65:00 - and
65:01 - i don't know what we'll work on next
65:02 - time that'll be
65:04 - to to be decided but until then i'll see
65:07 - you