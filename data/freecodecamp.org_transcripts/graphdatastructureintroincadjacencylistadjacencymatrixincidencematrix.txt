00:05 - the graph data structure is not the same
00:07 - as a graph you may have learned about in
00:08 - math class graphs are collections of
00:11 - things and the relationships or
00:13 - connections between them the data in a
00:16 - graph are called nodes or vertices the
00:19 - connections between the nodes are called
00:21 - edges one example of graphs is a social
00:24 - network where the nodes are you and
00:26 - other people and the edges are whether
00:28 - two people are friends with each other
00:30 - there are two major types of graphs
00:32 - directed and
00:34 - undirected undirected graphs are graphs
00:37 - without any direction on the edges
00:38 - between nodes directed graphs are graphs
00:41 - with a direction in its edges an example
00:45 - of an undirected graph could be a social
00:48 - network uh the nodes are people and the
00:50 - edges are friendships an example of a
00:53 - directed graph could be the internet and
00:55 - web page links the nodes are web pages
00:58 - and the directed edges are links to
01:00 - other Pages which might not necessarily
01:03 - point the other way I'm going to show
01:05 - you three ways to represent a graph the
01:08 - first way is called an adjacency list
01:10 - this representation for a graph
01:12 - Associates each vertex in the graph with
01:15 - the collection of its neighboring
01:16 - vertices or edges in this image a is
01:19 - connected to b b is connected to a and C
01:22 - and C is connected to B this is how you
01:24 - could show a a relationship with
01:28 - text and and here is how you could show
01:31 - this adjacency list with
01:34 - JavaScript this is an undirected graph
01:37 - because it does not show the direction
01:39 - of the edges this can also be more
01:42 - simply represented as an array where the
01:44 - nodes just have numbers rather than
01:46 - string
01:49 - labels another way to represent a graph
01:51 - is to put it in an adjacency Matrix an
01:55 - adjacency Matrix is a two-dimensional
01:58 - array where each nested aray has the
02:00 - same number of elements as the outer
02:03 - array so it's basically a matrix of
02:06 - numbers where the numbers represent the
02:08 - edges zeros means there's no Edge or
02:11 - relationship and ones means there is a
02:14 - relationship this table shows an
02:16 - adjacency Matrix to represent the image
02:19 - you can see that the labels for the
02:21 - nodes are on the top and left now here's
02:23 - a JavaScript representation of the same
02:27 - thing unlike an adjacent list each row
02:30 - of the Matrix has to have the same
02:32 - number of elements as nodes in the graph
02:35 - here we have a 3X3 Matrix which means we
02:38 - have three nodes in our
02:40 - graph an adjacency Matrix can be used to
02:43 - represent a directed graph here's a
02:45 - graph where the second node has an edge
02:48 - pointing toward the first node and then
02:50 - the third node has an edge pointing to
02:52 - the first node notice how the numbers in
02:55 - the array change there are only ones
02:58 - where a node is pointing toward another
03:00 - node and since there are only two points
03:03 - there are only two
03:06 - nodes the final way I will show to
03:08 - represent a graph is an incidence
03:11 - Matrix like the adjacency Matrix an
03:15 - incidence Matrix is a two-dimensional
03:17 - array however the rows and columns mean
03:20 - something else here the adjacency Matrix
03:23 - use both rows and columns to represent
03:25 - nodes an incidence Matrix uses rows rows
03:28 - to represent nodes and the columns to
03:31 - represent edges this means that we can
03:33 - have an uneven number of rows and
03:35 - columns each column will represent a
03:38 - Unique Edge also each Edge connects two
03:42 - nodes to show that there is an edge
03:44 - between two nodes you will put a one in
03:46 - the two rows of a particular column as
03:48 - you can see in the
03:50 - diagram Edge one is connected to nodes A
03:52 - and B now look at the column for Edge
03:55 - one in the incidence Matrix table you
03:57 - will see a one in both the a row and the
03:59 - B row this shows that edge one connects
04:02 - to nodes A and B here is a directed
04:05 - graph for a directed graph use negative
04:08 - one for an edge leaving a particular
04:10 - node and one for an edge entering a node
04:13 - and here is a JavaScript implementation
04:16 - of the incident
04:18 - Matrix graphs can also have weights on
04:21 - their edges so far we have unweighted
04:23 - edges where just the presence and lack
04:26 - of edge is binary zero one you can have
04:28 - different weights to depending on your
04:30 - application a different weight is
04:32 - represented as a number greater than one
04:36 - well now you know about different types
04:37 - of graphs and how to represent them in
04:39 - JavaScript in my next video about graphs
04:42 - I will cover graph traversal
04:45 - algorithms thanks for watching my name
04:47 - is Bo KS don't forget to subscribe and
04:50 - remember use your code for good