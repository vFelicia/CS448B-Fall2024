00:04 - everybody welcome to live coding with
00:07 - Jessie I'm Jessie and today we're gonna
00:10 - make some react components still on that
00:14 - same project that we've been working on
00:15 - but we need some new components so first
00:20 - thing I'm gonna do is just kind of break
00:22 - down what we need where these components
00:26 - are going to be used and then we'll
00:27 - figure out the best way to to lay them
00:30 - out to pull in the data and we'll see
00:33 - how much we can get done in about an
00:35 - hour maybe two Pomodoro sessions also at
00:39 - some point I'll give everybody an update
00:41 - on my my job search and interviews that
00:44 - I've had interviews have coming up and
00:48 - answer any questions that that you all
00:50 - have so let me get my chat window out so
00:56 - I can see what you're saying hey
01:00 - everybody
01:02 - okay it looks like Sreenivasan it's
01:07 - their first time so hey welcome glad you
01:11 - could join us
01:12 - Harsha it's here - hey how's it going a
01:16 - lot of people saying hey just saying
01:18 - everybody and let's go with switch this
01:24 - up nope that's not it
01:30 - where's mine there we go Hey alright we
01:44 - have a couple of first-timers here so if
01:48 - it is your first time this is how it'll
01:50 - go I'll put a Commodore o timer on so
01:52 - it'll be a 25 minute timer
01:54 - I'll stick mostly to the code for 25
01:56 - minutes then I'll take a little break
01:58 - answer some questions and then we'll go
02:00 - back and forth at the end of the stream
02:03 - I'll answer any questions that are left
02:05 - I do have an interview a phone interview
02:08 - for a job at 12:30 my time so that gives
02:13 - me about
02:13 - two hours a little less than two hours
02:16 - so there's going to be a hard limit on
02:18 - how long I can do questions so I can go
02:22 - on that interview but let me show you
02:26 - actually this isn't what I want to show
02:28 - you first I want to show you this so I
02:30 - had someone messaged me on Twitter
02:33 - Hampus Algrim who's creating this and I
02:38 - thought it was pretty cool so it's side
02:39 - view dot app I'll link it in the
02:42 - description here but you can check it
02:48 - out but it seems like you can just kind
02:51 - of drag and drop some code over here and
02:53 - it runs your JavaScript code live and
02:56 - lets you play with all the CSS and the
03:01 - variables the JavaScript variables and
03:03 - things so it looks pretty cool
03:04 - and he said that he's hoping to get a
03:09 - version of it out in November so anyway
03:16 - just thought I would highlight that
03:17 - because he asked me to look at it and it
03:20 - looked kind of cool all right
03:22 - let's let's start off the Pomodoro timer
03:27 - and then I'll show you what we're
03:29 - working on
03:30 - where's my I guess I have to do it here
03:34 - so I'm gonna go to localhost I'm also
03:40 - going to start a end grok server so that
03:43 - you all can check this out as I'm
03:46 - working on it I'm gonna paste a link in
03:50 - here
03:51 - and if you click that link or copy and
03:53 - paste that link into your browser you
03:55 - can see the website as I'm working on it
03:57 - there's also a test version available
03:59 - and that's at GCPD Franciscan University
04:03 - but this one will be the most up-to-date
04:06 - since it'll mirror what we're working on
04:08 - here so this is what we need let me let
04:12 - me just give you kind of a preview of
04:14 - what our options in terms of what
04:15 - components we already have it could
04:17 - maybe use some pieces of them so a good
04:21 - education faculty
04:25 - I'll show you some cards that we're
04:27 - currently using okay so we're gonna
04:30 - create cards that could potentially be
04:33 - similar to this I call these like
04:35 - horizontal cards usually so we would
04:40 - have an image over here and then a
04:42 - little bit of text we could do this but
04:47 - I'm thinking potentially maybe we could
04:49 - also switch it up and have the image on
04:52 - the top and the text on the bottom and
04:55 - have more like a vertical card
04:56 - the reason being we're gonna have more
04:59 - text content than we do here so I think
05:03 - it would look better with more text if
05:05 - we did it the other way but we could
05:09 - potentially use these and it would be
05:11 - pretty easy to use these so we will have
05:18 - cards similar to this but instead of
05:20 - faculty members we're going to have
05:22 - former students so alumni of the
05:24 - university will have their picture will
05:26 - have their name will have what program
05:29 - they were in so business education you
05:33 - know whatever and then there's gonna be
05:35 - a little a little bit of text just maybe
05:37 - a paragraph of them explaining pretty
05:41 - whatever whatever quote we have from
05:43 - them so we need space for all of that
05:46 - and we we may also have a link we can
05:50 - probably leave the link out for now
05:52 - because we don't have a ton of info I'd
05:55 - like to get all the info on one card and
05:58 - so there wouldn't really be a need to
06:00 - link to an entire page for that that
06:02 - person I do see some questions coming in
06:05 - in the chat so if you have questions I'm
06:07 - not ignoring you but I'm just gonna wait
06:10 - until the timer goes off and then I'm
06:12 - gonna answer the question so if you get
06:13 - hanging a little bit or if you can't
06:15 - hang in there right now you can always
06:17 - come back and watch the recording and
06:20 - I'll answer your question at some point
06:23 - so for now in about 22 minutes I can get
06:27 - to your questions so that's basically
06:31 - what I'm trying to do with these this
06:33 - card component we need to display it on
06:36 - its own page like this so you
06:38 - we'll be able to go to a alumni outcomes
06:44 - page and just see a list of all the
06:46 - alumni similar to what we have here it
06:49 - also needs to be displayed on the home
06:51 - page let's go back to the home page down
06:53 - here we're gonna have a section below
06:56 - this financial aid section and it'll
06:58 - have you know potentially maybe like
07:00 - three depending on the screen size it
07:02 - will have maybe three cards across of
07:05 - alumni and we'll figure out you know who
07:10 - the featured alumni will be maybe we'll
07:11 - have a featured category and those will
07:13 - show up we don't need to figure that out
07:16 - right now
07:17 - and then I'd also like it to display on
07:21 - each department home page so we have
07:24 - pages for I guess we just go back to
07:27 - education I believe we have a page for
07:31 - education okay so we have this education
07:33 - page I like down here to have a section
07:37 - and it would automatically grab whatever
07:40 - alumni we have that graduated with an
07:43 - education degree just show up here if
07:46 - there are none then nothing would show
07:48 - up but it'd be good to have that
07:50 - automatically fill out not only for
07:52 - education but for any of the the major
07:55 - program pages okay so that's the plan
08:03 - let's get to the code so I've been
08:07 - looking a little bit about at the code
08:09 - for those cards that we currently have
08:11 - you can see it I have basic let me make
08:14 - this bigger it's probably way too small
08:17 - let's move this over for right now make
08:22 - some space here okay so I have a graph
08:25 - QL query if you're not familiar with
08:27 - graph QL queries you can ask a question
08:29 - and I'll explain them a little bit later
08:31 - but basically all this is doing is just
08:34 - getting some data particularly we want
08:38 - the name of the the alum we want what
08:43 - department they were in and we want that
08:47 - content of what what is there
08:50 - quote what's there their little
08:52 - paragraph okay so that's what we want
08:55 - and then down here we're just getting
08:58 - that data and for this particular
09:02 - component we're looping through all that
09:06 - data and we're we're adding to the Dom
09:09 - these these cards right so for now I
09:16 - actually am using this same faculty
09:19 - cards that we just saw so that's going
09:22 - to be our starting point just to see I
09:25 - figure since we have that card built
09:27 - it's worth it to see if that content
09:29 - would even fit there I don't think it
09:31 - will but it's only going to take us a
09:33 - few minutes to test it and it could save
09:35 - us you know a lot of time if it does
09:38 - work so let's do that right now we're
09:42 - passing in most of the data but we still
09:44 - need to pass in a the content so let's
09:50 - call this content and we'll go alumni
09:55 - node and I believe it is called content
10:01 - but we'll double-check yep content all
10:12 - right so let's save that and now we need
10:15 - a way to get to this this page this
10:17 - alumni list page so we're gonna go to
10:19 - our server EJ yes and let's find where
10:24 - we have alumni so alumni outcomes is the
10:31 - the path at the end of our URL and we
10:34 - want that to go to alumni list so
10:45 - instead of going to our default page
10:47 - component we're gonna make this go to
10:49 - our alumni list component now and I
10:52 - don't really expect this to work on the
10:55 - first try if it does that'll be awesome
11:01 - yeah I'll come alright cool so it didn't
11:12 - work let's see in variant outcomes
11:15 - alright I figured that might be the case
11:17 - so I wasn't sure exactly what format to
11:20 - do this over yet let's get rid of some
11:25 - of this stuff okay so it wasn't sure
11:28 - what format to put this query in because
11:30 - normally we have a separate a whole
11:34 - separate file for our queries but I
11:37 - thought I'd try to do it in line since
11:39 - we haven't done that before and I just
11:43 - guessed what format we put it in
11:46 - so let's whip that up you know really
11:48 - quick here so your fq o
11:55 - query component let's see this is the
12:02 - apollo which we're using apollo so this
12:05 - is the apollo documentation and let's
12:07 - see oh okay you know what i forgot this
12:09 - gql so I have to bring in gql which I
12:15 - don't think I'm bringing in will import
12:16 - gql it won't put that here and then that
12:18 - should that should fix our our problem
12:23 - so let's import it and let's get rid of
12:29 - this import and this import since we're
12:33 - not using them anymore
12:34 - we're brought in gql and then now we'll
12:37 - say gql I believe that's what all we
12:42 - need yep GQ Oh wonderful and we can pop
12:47 - that on the next line it would look
12:49 - nicer give it a little indentation
12:53 - alright that should work make sure our
12:56 - brackets are right I think they are
12:58 - right I checked them out earlier so
13:00 - let's say that to what we have now all
13:05 - right and it doesn't work since X our
13:08 - alumnae outcomes
13:14 - okay so the problem here is maybe our
13:19 - alumni data is not quote alumni outcomes
13:22 - let's check that out
13:24 - so we have the code on github for our
13:28 - our graph QL plug-in or I should say our
13:32 - WordPress plug-in that has a lot of it's
13:36 - doing a lot of different things one of
13:37 - the things that's doing is hooking up
13:39 - our custom post types to graph QL so
13:44 - we'll just check that here and I'll
13:47 - search for alumni outcomes there it is
13:49 - and our graph QL name our single name is
13:54 - outcome or we have outcomes so maybe
13:59 - it's looking for let's see what do we
14:03 - use we use plural maybe it's looking for
14:06 - singular maybe we'll try the singular no
14:13 - same problem my outcome
14:37 - let me check the chat to see if there's
14:40 - some obvious problem that I'm having
14:42 - here actually I just got hey uh let me
14:53 - let me address this right now so hamro
14:56 - says I'm 17 and this is an all caps I'm
14:59 - 17 in a dropout which should I do kill
15:02 - myself
15:03 - hammer oh definitely don't do that all
15:06 - right so don't kill yourself I would say
15:09 - take a deep breath right now and calm
15:11 - down you have a long life ahead of you
15:15 - and you can do a lot of awesome things
15:17 - so number one I would say find somebody
15:22 - you can talk to maybe a counselor doctor
15:27 - or somebody and tell them what you're
15:29 - thinking about so definitely do that
15:32 - before anything else immediately don't
15:36 - don't wait but also you're only 17 years
15:40 - old a lot of awesome things can still
15:43 - happen to you in particular if you learn
15:47 - coding it doesn't really matter if you
15:49 - have a degree you know at least here in
15:51 - the United States that it definitely
15:52 - doesn't matter
15:53 - you can still make money you could
15:55 - freelance making websites right now and
15:57 - still make money there are so many
16:03 - awesome things that could happen you
16:06 - know you could you could end up getting
16:09 - a degree you could end up having
16:11 - multiple degrees if that's what you want
16:12 - to do you could go to a trade school
16:15 - like there's something you could just
16:17 - not go to school at all and still be
16:19 - fine right it's it's entirely possible I
16:23 - got a brother that he just cuts people's
16:27 - grass he does landscaping
16:28 - he just got a really old truck and made
16:33 - enough money to buy this truck and a
16:34 - couple of lawn mowers and he goes around
16:36 - it does that and and he makes a living
16:38 - doing that in the wintertime he shovels
16:41 - people so so you know he's able to pay
16:45 - his rent and pay for everything just
16:47 - like that and you know he doesn't
16:50 - degree for that or anything so basically
16:54 - I'm saying is when you're seventeen it
16:57 - thinks it might be harder to see things
17:01 - in perspective but I'm 30 I'm almost 33
17:08 - I'll be 33 at the end of the month and
17:10 - let me tell you like you have so much
17:13 - ahead of you don't even think about
17:16 - about ending it now so hammer oh I hope
17:22 - you're still there and I hope you heard
17:23 - that if you if you are still there I
17:29 - want you to get my info in the
17:33 - description so I'm on Instagram my
17:35 - YouTube channels there my twitter is
17:37 - there okay message me on there let me
17:40 - know you're all right
17:40 - next time I'm streaming try to come in
17:43 - and let us know you're all right if you
17:46 - want more help getting in touch with a
17:47 - counselor or something let me know I can
17:49 - help you find one if anybody else has
17:54 - any advice in this let us know in the in
17:57 - the chat and hamro I dropped out of
18:04 - college twice and and still ended up
18:10 - getting a degree and I have family a
18:12 - wife where kids job like I have a house
18:14 - so it's uh it's okay just because you
18:23 - drop out it it's it's not the you know
18:26 - it you you haven't ruined your life for
18:29 - anything it's you're totally fine okay
18:35 - that was that was pretty serious I
18:37 - thought I should address that so I'm
18:38 - gonna go back to the code now but I'm
18:40 - gonna keep an eye on the chat tomorrow
18:42 - in case you you message back and I'm
18:46 - serious about reaching out to me okay
18:53 - alright so I had come into a little bit
18:56 - of an issue where it wasn't recognizing
19:01 - the name what I was what I was trying to
19:04 - do here so I pulled that query out of C
19:10 - I pulled this out of a different larger
19:15 - query so I'm guessing it's probably
19:16 - something to do with my syntax that I'm
19:18 - using so let's see oh yes here we are I
19:23 - need some more curly brackets right the
19:34 - solution to so many problems in
19:36 - JavaScript or in this case graph QL seem
19:39 - to just be curly brackets right
19:41 - semicolons and curly brackets that's
19:46 - okay whoa all right we got a different
19:49 - error this progress that's good
19:52 - Wow unknown argument last unfilled
19:55 - alumni outcome Wow all right let's see I
20:08 - do want to check and see whether it
20:11 - should be the singular or the plural
20:14 - cannot query field major program on type
20:18 - alumni outcome good okay so that's I
20:26 - think that's that's what we want so
20:27 - let's try this again all right good we
20:36 - got another error this is a good area
20:37 - this means that C we've gotten something
20:42 - back from graph QL and departments okay
20:51 - we don't want okay I see what happened
20:58 - since we got this query from somewhere
21:02 - else we've kind of copied over an
21:04 - existing component it was set up
21:06 - improperly so let's see we don't want
21:12 - data alumni departments
21:15 - we want data I believe we'll be okay
21:21 - with this let's see if that works we
21:30 - could use our property node of undefined
21:38 - let's let's use our graphical plugin for
21:46 - Chrome I think it's this one yeah
21:49 - let's use this and then we'll be able to
21:55 - see what we're getting and if we're even
21:56 - getting the right thing okay cool
22:00 - so we are getting the right thing here
22:05 - and it is in the form of data and
22:14 - everything's within data so it should
22:17 - have data alumnae outcomes edges okay so
22:25 - that's yeah we got a should be able to
22:35 - say
22:44 - yet when we loop through edges then
22:50 - it'll be known okay so what we want to
22:56 - find is alumni outcomes edges here there
23:09 - we go
23:14 - let's see how that works
23:18 - hey okay it worked awesome
23:21 - so whoa this is a lot more data in here
23:27 - than I thought there would be Wow
23:30 - okay cool so we have images that they're
23:37 - actually displaying pretty well I mean
23:43 - these images are in various formats and
23:48 - all of them are the like the face of the
23:53 - person is clearly visible okay I like
24:00 - that all right not bad so we are pulling
24:05 - in the name and we have this learn more
24:07 - link which will probably get rid of but
24:10 - we don't have the content being
24:12 - displayed so let's let's do that so what
24:20 - we'll do and we're gonna add something
24:24 - in here to our faculty list item so
24:27 - we're gonna add in content as a as a
24:32 - prop where we're destructuring here and
24:34 - then within our card we're gonna say
24:44 - right below this this job title which
24:47 - we're not gonna have let's do let's just
24:52 - copy this
24:55 - and we're gonna check to see here's what
25:03 - we'll do we're gonna check to see if
25:05 - content exists if it does exist and
25:08 - we've passed in content as a prop then
25:11 - we're going to render this component and
25:12 - we're going to render content we're
25:15 - gonna pass it through this decode HTML
25:17 - function and right now we have
25:21 - typography going as its this as a span
25:25 - we do have some styles going on that
25:27 - will probably change the styles but for
25:29 - now we're just this is just a test so
25:31 - let's see what we have it is this is
25:33 - probably gonna look pretty weird yeah
25:36 - okay and yeah it's terrible okay so this
25:44 - is definitely not gonna work Wow yeah
25:47 - some of these are just damn inline
25:50 - Styles yeah so what we need to do
25:53 - instead of passing it to this decode
25:57 - HTML which is not meant to handle all
26:00 - that HTML would probably want to do the
26:04 - dangerously set inner HTML okay and two
26:09 - minutes I'm gonna go back to the chat so
26:13 - hang in there if you have questions okay
26:18 - so let's go with dangerously set inner
26:23 - you know what forget it I'm not gonna go
26:25 - with it because it's it's very very
26:27 - obvious that this is not these this
26:31 - style of card is not going to be able to
26:32 - handle that much that much text content
26:36 - I mean even if we made the cards way
26:41 - bigger what I'm afraid would happen is
26:45 - at some point like there we just have to
26:48 - be white space at the top at the bottom
26:50 - of these images and it's not gonna look
26:52 - right whereas if we do the vertical
26:54 - cards they could expand down without
26:59 - messing with the dimensions of the image
27:01 - so that's what we're going to do let's
27:06 - get rid of our changes here since we're
27:08 - not
27:08 - use this component anymore and let's
27:22 - make a new component and that's the
27:26 - component that we're gonna use with this
27:28 - data if so let's just start with a
27:31 - totally blank component
27:33 - I usually copy and don't do that but
27:36 - maybe it'll be fun to just do something
27:38 - you know right from from scratch so
27:41 - let's go up here to our components and
27:45 - let's add a new file and let's call this
27:49 - alumni card and my time is almost up
27:59 - so what will bring in is will import
28:06 - react because we're gonna need react and
28:11 - see what else we'll need nothing right
28:16 - now let's take a short break and I'm
28:19 - gonna scroll up to the top answer as
28:21 - many questions as I can in five minutes
28:22 - we'll do one more sesh
28:24 - one more Pomodoro session of coding
28:32 - available hi from Istanbul from India
28:37 - awesome welcome psychotic face says my
28:43 - question is will you marry me I'm
28:45 - already married so in in the United
28:49 - States where I'm from you can't be
28:51 - married to two people at once so I sorry
28:55 - if you would ask me like 15 years ago
28:58 - maybe but I can't right now
29:03 - let's see Yusef says you make react look
29:06 - easy I I don't know why I can't
29:08 - understand react reacts I would say
29:13 - first of all I've been working with
29:15 - react for a long time in you know
29:18 - JavaScript land
29:20 - so like I don't know maybe two years now
29:22 - I can't remember exactly so I've been
29:25 - working with it for a while and I
29:27 - struggled with it a lot and I'd still
29:29 - struggle with many things so don't worry
29:34 - if you don't get react right now if you
29:35 - don't understand it just keep practicing
29:37 - you will you will get it we're kind of
29:40 - jumping in in an already developed
29:42 - project that we've been working on for
29:44 - months and months so I can understand
29:47 - why it would be tricky to understand
29:49 - what's you know what's going on then she
29:55 - says how can we lazy load components
29:57 - with loading animations I don't know
30:00 - that's I would want to know a little bit
30:02 - more specifically about what you're
30:04 - using every I assume we're talking about
30:07 - react here so if you give me a little
30:10 - bit more detail about your particular
30:13 - application then maybe I can give you a
30:17 - better answer but I that's kind of broad
30:20 - we have checking in from Kenya hey how's
30:23 - it going
30:24 - Oh more first-timers welcome okay I'm
30:32 - she's just as lazy loading and react
30:34 - please explain okay so if you're gonna
30:38 - try to lazy load and react number one if
30:41 - I was gonna lazy learn something I'd
30:43 - look to see if there are already a
30:45 - package out there that I could just use
30:48 - that would handle that for me
30:49 - hey that number one that's that's not
30:52 - the kind of thing I would want to code
30:54 - myself if I was gonna code it myself you
30:57 - would need to track your scrolling on
31:00 - your page right so you would need to set
31:02 - up an event listener to track the scroll
31:05 - position and you need to track the
31:07 - position of the potential position of
31:11 - what you're going to load and then set
31:13 - it up so that when you get to a certain
31:15 - scroll position and you probably would
31:17 - track this through state right so you
31:20 - would get renders when you get to a
31:23 - certain position then you load that
31:27 - right and react and since this is react
31:30 - gonna say you won't you want to load
31:32 - that through stay
31:32 - so potentially like when you get to the
31:34 - certain position you trigger a state
31:36 - change when that state change it could
31:38 - just be like a boolean right true/false
31:40 - we're gonna load this we're gonna not
31:42 - load this well normally when the page
31:45 - first loads it's a false once you get to
31:47 - a certain point in the page it flips
31:48 - over to true you get a rerender and you
31:53 - load that that bit of of content right
31:57 - so that's how you would lazy load an
31:59 - entire component if you're talking about
32:03 - maybe just lazy loading like an image
32:05 - within a component again my first thing
32:07 - would be go to an existing library okay
32:10 - but if you're gonna do it react you know
32:13 - it would it would be similar really it
32:17 - doesn't matter whether it's an actual
32:18 - react component or just an element
32:20 - inside of a component either way I would
32:22 - use state and track your scroll to
32:26 - handle that hopefully that makes sense
32:35 - live hi from Nepal today the as s says
32:43 - minimum computer knowledge required for
32:44 - programming you gotta know how to turn
32:48 - it on how to install things on your
32:51 - computer how to type and you can get
32:54 - started I mean it's really really
32:56 - minimal you there in browser things that
32:59 - can teach you how to code so you don't
33:00 - really need anything special in terms of
33:03 - computer knowledge you just need to know
33:04 - how to navigate to a web page and then
33:06 - it'll start you off like free code camp
33:08 - will start you off really you're kind of
33:11 - at a low level if you really just need
33:13 - something very very basic you could try
33:16 - scratch search for scratch programming
33:18 - and you don't even really need to know
33:21 - how to type for scratch it's just
33:22 - drag-and-drop blocks but it can teach
33:25 - you the basics of programming you
33:28 - without even being able to code so what
33:31 - I'm sorry without even being able to
33:32 - type it's really good for for kids but
33:35 - it's also a nice introduction for adults
33:36 - in fact in the harbor is computer
33:39 - science 50 course intro to computer
33:41 - science the first week they have you
33:43 - build something in scratch so it's it's
33:46 - you know it's being used to teach
33:49 - college-age students and and above so
33:53 - yeah so I don't be intimidated by
33:56 - getting into programming they're very
33:58 - very simple ways to get started where
34:01 - you need almost no previous knowledge
34:04 - okay
34:05 - my timers up obviously didn't get
34:07 - through all of the questions I see one
34:11 - here at the bottom that I'll answer
34:12 - right now
34:13 - said it from david says jesse you're
34:15 - gonna stream on your personal account
34:17 - today I'm thinking about it so last week
34:21 - I did do two streams on Monday one for
34:23 - free code camp and one on my personal
34:25 - account the links in the description if
34:26 - you're interested you can check out that
34:28 - channel subscribe if you want to get
34:31 - notified when I'm doing videos of going
34:33 - live I might do it so I have a take home
34:36 - coding challenge for a job that I
34:38 - applied for with I believe it was with
34:41 - framed IO in New York City so I would
34:45 - like to stream me doing that that take
34:49 - home problem so they they told me that
34:53 - they expected to take for candidates to
34:56 - spend no more than four hours on it so
35:00 - you know I'll try to stream a little bit
35:02 - of it at least we'll see how it goes
35:04 - though but I might do that this
35:08 - afternoon at some point so Eastern Time
35:10 - this afternoon if you're interested in
35:12 - seeing that it's not gonna be react it's
35:14 - gonna be vanilla JavaScript I'm allowed
35:17 - to use jQuery but I think I'm going to
35:18 - try to do it all with vanilla JavaScript
35:20 - so if you want to see it drop down menu
35:24 - that you can navigate with your like an
35:28 - autocomplete drop-down menu that you can
35:30 - navigate with your arrow keys done in
35:32 - vanilla JavaScript then subscribe to my
35:34 - channel links in the description and I
35:37 - will be live-streaming that hopefully at
35:39 - some point today okay let's reset our
35:44 - timer we're going to do one more
35:45 - Pomodoro timer with this we'll see how
35:47 - much we can get done and so here's where
35:51 - we're going we're gonna build a react
35:53 - component that's going to be a a card
35:56 - component so material design
36:00 - card with an image in it now here's what
36:03 - we can do we're using material you eyes
36:05 - or UI framework we can and should check
36:09 - out wood as material you I already
36:11 - implemented it that can help us right so
36:14 - we don't do that's one of the main
36:15 - reasons to use a UI library so you don't
36:17 - have to build all these from scratch
36:19 - they've done it so let's check out
36:21 - material you I it is just material - UI
36:26 - com copy and paste that and in the live
36:33 - chat so that links in there now and
36:35 - let's just check out card alright so we
36:40 - have different types of cards we have a
36:42 - simple card which it's not what we want
36:44 - we have a media card and let's see that
36:48 - that looks like what we need right we
36:50 - need a media card and let's see what it
36:53 - says by default we use a combination of
36:55 - a development and a background image to
36:56 - display the media it can be problematic
36:58 - in some situations for instance you
37:00 - might want to display video or a
37:01 - responsive image use the component
37:04 - properties use case okay I think I would
37:07 - much rather have the image be an actual
37:12 - image tag as opposed to a background on
37:16 - a div the one of the main reasons being
37:19 - a background on a div is not gonna get
37:22 - picked up by a screen reader so if
37:24 - someone who's using a screen reader
37:27 - would try to go through the content it's
37:30 - not gonna register like here's an image
37:32 - and here's the description of an image
37:34 - right we can't put an alt tag on a
37:36 - background in CSS so let's use this
37:39 - second example which I'm hoping that
37:42 - this will add an image tag it looks like
37:45 - it it will will use the component
37:47 - property image and then we'll get an
37:50 - image tag I'm also hoping that we had
37:55 - lets us put an alt tag it looks like at
37:59 - least we can have a title okay so that's
38:01 - that's better better than nothing so I'm
38:05 - hoping it would just pass these along so
38:07 - let's see we can copy and paste all of
38:10 - this so
38:13 - oh yeah let's let's copy and paste this
38:16 - whole thing for now and see how it looks
38:25 - right see how awesome this is right we
38:32 - have all this to work with you know by
38:34 - default and what we'll do then object
38:38 - fit is not supported okay
38:41 - let's save that for now and then what we
38:48 - can do is go back to our alumni list and
38:51 - instead of importing faculty list item
38:54 - let's import oops we do need to change
38:57 - this so instead of image media card
38:59 - let's change this to what do we call
39:04 - this alumni card so we caught it
39:12 - alumni card you know what I need to
39:15 - rename this so that we stick with our
39:19 - naming convention of capitalized
39:22 - component names so alumni card and then
39:26 - we're gonna export alumni card here okay
39:34 - so we definitely would change that for
39:36 - now we'll leave everything else the same
39:38 - and then in our alumni list
39:41 - let's change faculty list items so every
39:44 - instance of faculty list item will now
39:46 - be changed to alumni card okay and we're
39:55 - gonna pass in all this stuff which
39:57 - shouldn't it shouldn't make a difference
39:58 - if we pass the stuff right now because
40:00 - we're not not actually gonna use any of
40:02 - it so we should still get rendered the
40:05 - card whether it's a default data will
40:07 - just get rendered as many times as we
40:09 - have pieces of data okay cool so it's
40:13 - not bringing in obviously the image I'm
40:17 - assuming they used a relative path for
40:18 - the image so that's not gonna work
40:20 - but we can see our card
40:27 - so it works to render this and we will
40:32 - need to bring over some of the the other
40:36 - stuff that that we've been using so I'd
40:39 - like to bring over our grid system that
40:44 - we had that we had in place should we do
40:48 - that I don't think if we should use the
40:52 - grid system within the card component or
40:53 - not you know I think it's better if we
41:00 - don't put a grid system in the card
41:02 - it'll make our component more versatile
41:04 - right so what we can do though is add
41:06 - our grid system to our list component so
41:12 - that's what we're gonna do
41:14 - let's copy and paste some grid some of
41:17 - this grid system into here so since it's
41:20 - inside our loop or map it's it's going
41:23 - to be as if it was in the component but
41:26 - we're not locked into using the same
41:29 - grid system for every time we use this
41:34 - alumnae card which we're gonna try to
41:36 - recycle this alumni card and use it in
41:38 - at least three locations in the website
41:41 - so this is I think definitely a much
41:45 - better way to go so we have this grid
41:49 - item and we already have this inside a
41:52 - grid container so that's fine we have
41:54 - the grid container we need to move over
41:56 - the class name of classes card so we
42:00 - have this down here whereas our class's
42:06 - card
42:07 - you know what height and max width
42:11 - actually I I don't think I'm gonna bring
42:14 - that over I'd like to see what we get
42:17 - without setting our hide max width just
42:20 - for now so for now let's take out that
42:24 - class name we got all the red squiggles
42:27 - because of indentation so we should I'll
42:29 - save it it should Auto indent and it'll
42:31 - get rid of these red squiggles hopefully
42:35 - it needs a key the key drop we got that
42:38 - on the wrong
42:39 - so let's remove that key prop from there
42:41 - and put the key on here instead there we
42:43 - are all right that looks a lot better so
42:46 - when you are going through data and
42:49 - adding multiples of the same component
42:52 - to a page and react it you need to have
42:56 - a key prop that's unique for each one
42:59 - otherwise you're going to get a warning
43:01 - so won't error out and crash your
43:03 - application but you look at a bunch of
43:04 - warnings all right let's see how that
43:07 - looks now okay that's a lot better and
43:10 - so we have three across so now that we
43:14 - have a different type of card we
43:16 - definitely could switch up how we're
43:18 - displaying this and let's let's add in
43:26 - an image that is actually going to
43:29 - display so we already are bringing in
43:32 - this image object let's add it into our
43:37 - alumni card so that we can display that
43:41 - image instead of this this image that's
43:46 - obviously not working so let's see how
43:49 - we did it here let's pull over a lot of
43:55 - these these props so I'm just gonna copy
44:02 - over all of this and let's start adding
44:06 - these in here so for our headline we're
44:12 - gonna want to use and we can use yeah
44:18 - let's pull over our decode HTML as well
44:22 - just in case we run into some issues
44:24 - with with special characters and things
44:29 - so we can use you know for instance for
44:35 - a profile name we can pop decode HTML in
44:39 - here and have our profile name in there
44:43 - for our content we're gonna add it
44:46 - inside of here
44:49 - it's not
44:51 - well let's just copy this for now and
44:55 - put it in here and let's switch it up
45:00 - and call this content and let's make
45:11 - sure we add content let's take out job
45:16 - title we're not gonna use job title and
45:19 - we're not gonna have a profile link for
45:21 - now we have this image object coming in
45:26 - and we pass in the whole object and then
45:31 - we check so we have multiple attributes
45:36 - on this image object that we can use so
45:38 - that's what we pass in the whole object
45:40 - so I do want to keep this check to make
45:42 - sure we have an image object because we
45:43 - know some pieces of data that we've
45:45 - looked at before don't have images so if
45:48 - it looks for the image and there is no
45:50 - image it's gonna crash it's not gonna
45:52 - render so we need to check first to see
45:55 - if we have an image so I'm gonna grab uh
45:58 - you know what we have this card media
46:00 - let's just type it out by hand so we're
46:05 - gonna check for the image object and so
46:09 - this is like a short-circuit operator so
46:11 - what JavaScript is gonna do when it
46:12 - evaluates an end statement is it's only
46:16 - gonna look at the other side of the end
46:18 - if the first one is true so it'll look
46:21 - at this and say let's go over to this
46:23 - side since we're actually doing
46:24 - something it'll look at this and say
46:26 - does an image object exist like yes or
46:30 - no or is it true Falls right so if not
46:33 - it's just gonna stop and it's gonna go
46:37 - on to the next thing so it won't even
46:39 - look at anything in here if it is true
46:42 - it's gonna go over here and it's gonna
46:44 - look at the other side on the other side
46:46 - we're telling it to render this
46:48 - component right so this is a shorthand
46:50 - way of using a ternary or an if
46:53 - statement so it's it saves you a lot of
46:56 - space inside a react component so I use
46:58 - that frequently okay so if there's an
47:04 - image object
47:05 - let's render this media this card media
47:09 - otherwise we're not going to render it
47:11 - at all and then within this we can get
47:19 - this for our source we can get the image
47:22 - object and then the source URL from the
47:27 - image object whoops
47:29 - put that on the wrong thing class name
47:33 - there we are okay so let's get rid of
47:37 - this static address here and now we're
47:40 - gonna get our source URL from here it's
47:44 - setting the height I'll leave that for
47:47 - now but I'm not sure that's gonna work
47:49 - in our title for now let's just throw in
47:58 - our our alt text as our title but we'll
48:06 - probably change that up okay why is it
48:14 - still giving me this expecting
48:16 - annotation of 12 all right it's an
48:17 - indentation thing all right
48:28 - doesn't want me to wrap this see what
48:31 - it's doing okay cool so we have our
48:37 - images right now I'm just making sure
48:39 - the images show up so I this is crazy
48:45 - so our images are rendering right
48:48 - conditionally depending on whether
48:50 - they're there or not not just the image
48:52 - but that that whole section so if we
48:54 - looked at the code you know all of the
48:58 - the divs and everything that's
48:59 - containing this image would be gone as
49:01 - well we're just not rendering it at all
49:03 - but it looks like so far
49:05 - these images are displaying properly you
49:10 - know there's some like you know maybe
49:12 - that's kind of cut off a little bit yeah
49:15 - so some of these are a little bit off so
49:20 - it may want to do is maybe give a give a
49:23 - little more height here you know allow a
49:27 - little more but we also have to think
49:29 - about like in terms of width like what
49:32 - would happen with with oh yeah so this
49:34 - is cut off okay all right so the images
49:47 - are need a little bit of work I'm trying
49:50 - to find a more reasonable length here
49:52 - but it looks like all of these are okay
49:56 - this is a more reasonable link I could I
49:59 - can live with this if if we had content
50:02 - that was maybe this length it's okay hmm
50:09 - okay this length is good this length is
50:14 - good this is little much at least if
50:18 - we're gonna keep it this this narrow
50:22 - okay let's make these a little bit wider
50:26 - and give our images a little bit more
50:29 - room so right now it's the height is
50:34 - being set to 140 let's bump that up to
50:36 - 200 and see what happens
50:39 - you know let's see what
50:40 - as if we just leave the hide off
50:41 - completely and then let's check our our
50:46 - grid oh yeah so here let's save that and
50:52 - then let's also check our grid which
50:56 - should be on what alumni list yeah okay
51:01 - I think we can switch this up and at
51:09 - least have four claws here I think we
51:19 - could do three okay so we have a column
51:23 - system in this grid so full width is
51:26 - twelve columns so in extra small screens
51:28 - we actually do have full width but on a
51:31 - large screen right now we want these to
51:33 - take up three columns so that means it
51:40 - would be let's try four on here small
51:44 - with the six so basically we would have
51:51 - three combs which means we can fit four
51:53 - cards across on a large screen this one
51:57 - would be only three cards on a medium
51:59 - screen two cards on a small screen an
52:01 - extra small screen should be like a
52:02 - phone we can only fit one so you'll see
52:06 - what I mean in a second when we refresh
52:08 - this okay so now we have a little bit
52:11 - more space our images should have let's
52:15 - see what's going on here
52:17 - okay interesting just make sure images
52:24 - we took out that height let's see what's
52:28 - happening here let's inspect this and
52:32 - see what's going on
52:43 - I want to see if it's still adding a
52:45 - height I don't see it there let's see if
52:57 - there's a a height attribute on any of
53:04 - these no we're good so maybe that
53:16 - Heights just being determined by the
53:18 - width or my hat
53:26 - there it is I was on here okay let's go
53:33 - back here and see what's happening also
53:36 - with our width
53:54 - okay our spacing maybe that's where
53:57 - we're getting let's drop our spacing
54:09 - down a bit let's let's drop it by half
54:12 - and see what we get here I really didn't
54:17 - do much to it I'll strap it on and again
54:24 - that's really weird okay so that didn't
54:27 - do anything either we have a max width
54:39 - on our cards that's why okay I didn't
54:44 - realize that we brought over a max width
54:47 - on our card here let's let's see what we
54:50 - get now okay now we have much wider
54:57 - cards which is gonna allow us to display
55:00 - more text but it also kind of messes up
55:03 - the the images a bit so it seems like
55:10 - the images are still acting like they
55:11 - have a height a max height maybe let's
55:19 - get rid of this for now and let's double
55:26 - check our our media classes media yeah
55:31 - we're not we're not gonna pull that in
55:35 - anymore whoa all right let's just kind
55:43 - of mess with the settings then on our
55:48 - own so let's just let's mess with this
55:54 - one okay so we have an actual image
55:59 - [Music]
56:02 - background sighs see this background
56:06 - shouldn't matter anymore right because
56:09 - we're using an image instead hmm max
56:22 - width height oh we do have a max Heights
56:25 - though and that's coming from all right
56:30 - then okay so our max height is is
56:33 - actually coming from a file that we're
56:37 - using on that page so let's get rid of
56:41 - that let's get rid of that that entire
56:45 - file for now in in terms of just you
56:49 - know importing it on this particular
56:51 - page on our alumni list page so we can
56:56 - see here we're bringing in this faculty
56:59 - dot CSS which I believe yeah let's get
57:04 - rid of that let's get rid of these files
57:05 - completely get rid of this head
57:09 - component completely and see what it
57:12 - looks like without that okay and let's
57:22 - see what we have now okay so now we're
57:26 - displaying everything on these cards but
57:33 - they're gonna be uneven they're gonna
57:35 - display you know much differently
57:48 - okay I'd rather start from this and then
57:53 - try to make them more uniform and at
57:58 - least we know what we're dealing with in
58:00 - terms of being able to see the actual
58:02 - image dimensions okay all right let me
58:14 - check my time Oh two more minutes okay
58:17 - here's what I want to do for the next
58:21 - step I want to see what this content is
58:26 - actually going to look like oh yeah
58:30 - alumni card and we're bringing in the
58:33 - content let's use I always forget how to
58:43 - use this actually you know what I have
58:48 - this we're using it already somewhere
58:51 - we're using this
59:08 - probably in one of these pages let's see
59:12 - page nope so that's that's a query let's
59:15 - just go to our page is cuz I'm pretty
59:17 - sure this component is using what I
59:20 - would want to use yeah so we're gonna do
59:28 - a dangerously set enter HTML and add
59:33 - content in there and so that's what
59:37 - we'll add here and I want to get rid of
59:46 - everything actually I do
59:55 - okay let's see we may have to change and
59:58 - not have a P there like a P tag I was it
60:05 - working this time there was some weird
60:08 - bug where we had to use a span but it
60:11 - looks like this is this is working
60:12 - better okay I definitely don't want to
60:15 - click effect on here so we'll get rid of
60:17 - that at some point but this will show at
60:24 - least we got the HTML tags out of there
60:31 - so it looks like some of the newer
60:33 - profiles that we have are really short
60:35 - and some of the older ones sort of like
60:37 - full page length I mean this one even
60:39 - has you know subheadings and things like
60:42 - that so I think probably will end up not
60:47 - even showing some of the older ones hey
60:50 - I mean this person graduated in 2003
60:53 - this person graduated college before I
60:55 - did so we want to do you know probably
61:00 - some some newer profiles okay all right
61:08 - so that's the the second timer is up so
61:10 - I'm gonna go do some questions now the
61:13 - next step would just be taking these and
61:21 - I guess what I would probably need to do
61:26 - then is only show just a little bit of
61:30 - the text
61:31 - maybe if we wanted to use them all show
61:34 - a little bit and then truncate that and
61:36 - then keep that learn more link and show
61:40 - the full amount of data on a page yes so
61:46 - we could definitely do that that way we
61:49 - get out of it a little bit more uniform
61:51 - in terms of height with these images we
61:55 - would probably do the same thing where
61:56 - we would set a max height but be
61:58 - generous with our max height so that it
62:01 - could show everything but we're not
62:02 - gonna get really huge images like was
62:06 - there's one down here that was really
62:07 - long I can't see it yeah like this one
62:13 - ends up being really long all right so
62:16 - we would we would want to cut down on
62:17 - that some of these images just aren't
62:20 - high enough quality they're they're
62:22 - little pixelated so those would be the
62:26 - next steps and then in terms of
62:28 - displaying them other places we would
62:31 - just want to do a similar thing that we
62:33 - did with this this map our alumni list
62:39 - so we mapped over everything so we can
62:42 - either use this same query and then when
62:46 - we map we could also do a filter first
62:49 - before we map and we do a dot filter and
62:51 - filter out for just those particular
62:55 - students who majored in a certain area
62:59 - right or just the ones that we want to
63:01 - feature on the front page or the
63:04 - alternative would be that we modify our
63:09 - our query so that we only return the
63:13 - data that we want instead of returning
63:15 - everything and looping through it so
63:18 - probably long run it would be better to
63:21 - just get the data that we want but
63:24 - either way for now would work since
63:26 - there's really not that much data it
63:29 - wouldn't be an issue in terms of
63:30 - performance
63:34 - but those would be the next steps I'm
63:38 - gonna commit all this and have it up on
63:41 - the github repo links in the description
63:43 - so if you want to check out what we've
63:44 - done here
63:45 - it'll it'll be available soon after I'm
63:48 - finished and right now I'm gonna go back
63:51 - to the live chat try to figure out where
63:54 - I left off at and answer all your
63:59 - questions or as many as I possibly can
64:11 - let's see preferences our videos are in
64:16 - a playlist as projects I want to see
64:19 - from the start of the project yeah this
64:20 - is project 5 so there's a playlist for
64:23 - project 5 each project has its own
64:26 - playlist oh sorry
64:33 - see on in here so V web code asks why is
64:38 - Redux important also how long did it
64:41 - take you to learn and match the react
64:43 - and redux I would say I'm not a master
64:46 - Redux was tricky but it was still
64:48 - something I learned it maybe I don't
64:50 - know a week or two when I was taking the
64:53 - Udacity react nano degree and we
64:56 - learning Redux you know that portion of
64:59 - it probably took a week or two to be
65:01 - able to build something that
65:03 - successfully used Redux Redux is
65:07 - important when you need when you have
65:09 - some complex state management that needs
65:11 - to happen then that's when Redux is
65:15 - important so for instance if you find
65:18 - yourself passing State down through
65:21 - several levels of child components all
65:24 - right then maybe you might want to think
65:27 - about some state management solution you
65:30 - know other than local state so Redux
65:32 - Apollo has something similar built in
65:35 - now you could use reacts new context API
65:38 - so you Redux isn't the only option
65:41 - there's also mob X so you have some
65:44 - options but when your app starts to get
65:47 - complex and handling state through just
65:52 - local state is starts to get complicated
65:56 - um then you might want to think of a
65:59 - different solution for for handling
66:01 - state and that's where Redux comes in
66:03 - and things like Redux
66:17 - I'm trying to I'm skipping through a
66:19 - little bit so to just get some questions
66:22 - I see there are some comments in here to
66:23 - read out more if I have time but I want
66:26 - to make sure it gets all the questions
66:44 - let's see
66:59 - Melo's asks how are you Jessie do you
67:02 - remember me I remember I kind of
67:05 - remember I'll be loose in the chat so I
67:08 - don't remember what we talked about
67:09 - before but how's it going thanks for for
67:11 - joining us
67:17 - Leonard as says 25 right now just
67:19 - graduating with BS and information
67:22 - system programming and my too late for
67:23 - this profession you were definitely not
67:24 - too late for this profession there are
67:27 - people getting into this profession all
67:28 - the time who are way older than you so
67:32 - definitely that's a frequent question
67:35 - that that I see here and elsewhere
67:38 - definitely not too old I'm in asked how
67:49 - to become a best software engineer
67:53 - practice so the more you build things
67:56 - the better you will be so practice and
67:59 - practice doing things the right way so
68:00 - read the documentation stay up to date
68:04 - on the latest ways of doing things for
68:08 - whatever particular area you're in and
68:12 - you'll you'll get better code with Oh
68:18 - head says you're awesome Jesse Thanks
68:20 - I appreciate that if you web coaches do
68:27 - you know the merge stack yeah what is
68:33 - that express react and node is
68:38 - that mine yeah yeah I mean that's
68:41 - basically what we use like I mean right
68:43 - now we're not using but yeah I'm
68:49 - familiar with with the merge stay
68:52 - Chandan says love from India hey how's
68:56 - it going thank you
68:59 - let's see a key says I tried Gatsby why
69:03 - don't people use it more although I know
69:05 - how much is but I read its ratio right
69:09 - I don't know me gasps Keys gasp he's a
69:12 - great a great tool so I don't know why
69:17 - people don't use it more honestly maybe
69:20 - they just haven't heard about it I'm not
69:21 - really sure but I've been impressed with
69:23 - Gatsby
69:26 - also helmet js4 SEO yeah yeah you want
69:31 - trying to think we're using a helmet to
69:34 - add things into the head tag and react
69:38 - I believe that's what what it's used for
69:40 - so you'd want like your metadata that
69:42 - should go in the in the head head tag
69:46 - for SEO you would use it for that
69:52 - Mila says what do you need to go into
69:56 - electrical engineering
69:58 - I honestly have no idea about electrical
70:01 - engineering so I don't I've never done
70:03 - that kind of thing so I'm really not
70:06 - sure up high from Uganda hey how's it
70:09 - going hey from Bangladesh Hey
70:24 - Fred asks if we'll tackle testing react
70:27 - I'd love to do more with testing I'm not
70:29 - sure when that would happen that we
70:33 - would do a show on testing but I think
70:35 - that's a great idea
70:38 - ray asked what my youtube channel is
70:40 - check the description for this video and
70:42 - you'll find a link to my youtube channel
70:43 - Twitter and Instagram
70:45 - I believe my channel is J or as a Jessie
70:51 - why Bowl I don't even know my channel is
70:53 - maybe it's like Jessie Weigel 29
70:56 - something like that oh yeah Umberto's
71:02 - says Jessie Michael 29 yeah that's it
71:22 - phosphorus says you used Jekyll no I
71:27 - don't I don't remember I don't think
71:30 - I've used Jekyll I I remember looking
71:33 - into it but I'm not sure if I ever
71:34 - actually used it V Webb code says what
71:46 - is react framework like next yes Apollo
71:48 - why do we need them please explain yeah
71:50 - so something like next J s or create
71:54 - react app will help you get started with
71:57 - the react project it'll build out a lot
72:00 - of the structure and handle all your
72:02 - webpack config next also handles things
72:05 - like server-side rendering so you would
72:11 - want to use them to just get a jumpstart
72:12 - on things for react and for most
72:14 - projects they'll work you know you don't
72:16 - need custom webpack stuff going on and
72:19 - that can be a big barrier to entry if
72:22 - you're not a webpack expert like I'm
72:24 - definitely not I don't want to have to
72:25 - mess with that just to get you know a
72:27 - simple react app build Apollo is
72:31 - different Apollo allows you to use
72:39 - really sorry about the onion Apollo
72:42 - allows you to use graph QL with react so
72:45 - it's it's gonna be a it's gonna help you
72:48 - bring that data in make sure you get it
72:50 - where you need to in your app to the
72:52 - right components and help you handle
72:54 - state m40 says how long you been
73:01 - programming I'm currently working on my
73:03 - JavaScript skills and I think I will
73:05 - look for a job in a couple of months as
73:07 - a front-end developer in Poland I've
73:11 - been programming for I think six years
73:14 - now so I think that's great you're gonna
73:20 - be looking for a job I'd say yeah you
73:24 - know and there's no need to really wait
73:26 - to try to find a job you know you could
73:28 - certainly start applying for you know
73:30 - right now and you know all you need to
73:33 - get a job as a programmer
73:35 - to convince somebody that to hire you
73:37 - right it's there's not like some test
73:39 - you have to pass right if you can you
73:43 - know every company is gonna have
73:44 - different things they do in the
73:46 - interview you know different questions
73:48 - they ask somebody might even not ask a
73:51 - technical question but you know don't I
73:55 - would say don't keep thinking like oh I
73:58 - need to get better before I apply you
74:00 - know let let your potential employers
74:03 - decide you know because if you're you
74:07 - know a perfectionist type of person you
74:09 - might keep saying I need to get better I
74:11 - need to get better and meanwhile people
74:13 - with less experience than you or are
74:15 - getting jobs right so you can learn on
74:18 - the job you don't have to do all the
74:20 - learning person and get the job you're
74:22 - always gonna be learning so you may as
74:25 - well get paid for it right
74:26 - that's absolutely I feel V Webb code I'm
74:32 - learning react I want to know why it is
74:35 - the best framework out there I don't
74:36 - know if reacts the best or not right
74:39 - it's react is an option that that will
74:43 - work well there are other options in in
74:47 - JavaScript land that will also work well
74:49 - so I don't think what's the best is the
74:54 - right question it's what is gonna work
74:57 - for for this particular project that I'm
75:00 - working on based on what resources I
75:02 - have what skills that I have and what
75:05 - the what are the requirements for the
75:07 - project
75:09 - teddy bear says are you programming in
75:12 - Mac or Windows I am on a Mac right now
75:16 - Samba desks about which vs code
75:18 - extensions I'm using and which ones are
75:20 - good for yak development get react food
75:23 - truck it will start you out with a bunch
75:26 - of different plugins that basically the
75:29 - majority of the extensions I'm using
75:30 - four vs code have come from react food
75:32 - trucks so look that up it's one
75:34 - extension once you get that it'll come
75:37 - with a lot of other extensions that will
75:38 - help you with react be webco's is can I
75:43 - use WebSocket with react or real-time
75:45 - apps yeah I mean I don't see why you you
75:48 - couldn't
75:48 - use it with react if anybody knows of a
75:52 - reason why you know let me know
75:55 - phosphorus is why Visual Studio code not
75:57 - Adam I found Visual Studio code to be a
75:59 - little faster than Adam I haven't used
76:02 - Adam recently but when I did switch
76:06 - which probably a year ago or so the is
76:10 - code was a bit faster
76:11 - I used to use out in four years I use
76:14 - that V web code says I'm learning react
76:19 - right now and you recommend any udemy
76:20 - courses I have not taken any react udemy
76:23 - courses so I don't know which ones are
76:25 - good or not
76:27 - Alex says will this be archived on this
76:30 - YouTube channel yes it will yeah it'll
76:32 - be available v web says if I build a
76:35 - login system with firebase and react
76:37 - without any back-end can anybody break
76:39 - my app oh I don't know I mean there's
76:42 - always I guess I mean I always assume if
76:48 - somebody had enough time and money and
76:49 - talent they could break anything right
76:51 - so I don't want to say that they
76:53 - couldn't break it but you know if you're
76:56 - relying on in this case Google to handle
76:58 - your database then you know a big
77:02 - company like Google I'm sure has a lot
77:04 - of safeguards in place that you might
77:07 - not think to put in place if you're
77:09 - doing it yourself
77:10 - you know from scratch so it would
77:12 - probably decrease the likelihood of
77:14 - somebody being able to hack into your
77:16 - app watch watch rfo says what do you do
77:25 - i am i get i program i build websites
77:31 - and web apps and particularly with
77:36 - javascript and react kami says what you
77:42 - take on CSS frameworks like bootstrap
77:44 - materialize and CSS with react did they
77:46 - make react up slow you can use
77:49 - materialized and bootstrap with react in
77:52 - fact one of the projects we did use
77:54 - materialized with react the problem is a
77:57 - lot of the the interactive things that
78:00 - happen don't
78:01 - use react state to make it happen so
78:05 - it's you're gonna miss out on a lot of
78:08 - the benefits of react in terms of their
78:11 - their rendering the speed so I would you
78:15 - know instead of materialized use
78:17 - material UI or it's gonna work with
78:19 - reacts state management and I think
78:24 - there is a bootstrap equivalent as well
78:26 - so it's you can make them work but it's
78:30 - not gonna be as optimized as fast as it
78:35 - would be if you used react state
78:37 - management to manipulate the dawn right
78:40 - you never want to manipulate the Dom
78:41 - directly when you're using react you
78:43 - always want to do things through state
78:45 - and with bootstrap and materialize
78:50 - you're gonna be manipulating the Dom
78:52 - directly so better better not to use
78:55 - them master nameless is what's a good
79:03 - simple training project to do to
79:05 - practice coding I mean I just check out
79:08 - some of the projects in free code camp
79:11 - free code camp or check out the projects
79:14 - and to get some ideas for that this is
79:18 - also if you consider turning on your
79:20 - YouTube super chat not for free code
79:22 - camps channel that would be a decision
79:24 - for you know Quincy who's in charge of
79:27 - free code camp on my own channel I don't
79:30 - know maybe I'd turn it on I don't even
79:32 - know if I qualify to be able to turn it
79:33 - on to be honest but you know I've
79:35 - thought about it before but for now I'm
79:37 - you know I'm okay with this the web says
79:41 - is github repo important for getting a
79:43 - job when I am looking to hire candidates
79:46 - which isn't often but I if you have a
79:50 - github repo then I will take a closer
79:53 - look at you as a candidate so I want to
79:56 - see your code and having a github repo
79:58 - makes it very easy for me to see that
79:59 - see what exactly you've contributed so I
80:03 - definitely recommend having a github
80:06 - profile you know with some some of your
80:10 - better work on it if you're trying to
80:13 - look for a job and make sure you put a
80:15 - to that on your resume m40 says is it
80:21 - better to stick with an L a JavaScript
80:23 - or jQuery or maybe both vanilla
80:28 - JavaScript is going to be more versatile
80:30 - and you'll be able to use it you know in
80:32 - more places but it's good to know a
80:35 - little about jQuery because a lot of
80:37 - websites use jQuery so the odds of you
80:40 - having to work on it at some point
80:43 - especially if you're gonna work on old
80:45 - websites for clients or even for
80:47 - companies you're probably gonna see
80:49 - jQuery it's not that hard to learn so
80:51 - wouldn't you know worry about knowing it
80:53 - or not knowing it but you're probably
80:55 - gonna come across it at some point but
80:58 - if you're just trying to really learn
81:00 - you know JavaScript you can stick with
81:04 - another JavaScript and that's gonna be a
81:06 - good way to go and then just pick up
81:07 - jQuery when you when you need it if you
81:09 - ever do Mb terms is what kind of
81:15 - projects can I make with react
81:16 - oh really anything I mean really like
81:22 - anything you that's out there on the
81:23 - internet could probably be built with
81:25 - react is it best to motor with react I
81:27 - don't know but you could you could do it
81:29 - I mean even like native apps you can
81:31 - make with react if you're using electron
81:34 - as well you can make dev subset apps
81:35 - with react so there's a lot you can do
81:38 - with with react
81:41 - MB trem says is there any tutorial for
81:44 - react and firebase for beginners there's
81:47 - probably a tutorial out there I don't
81:48 - really remember one off the top of my
81:50 - head but I bet there there's probably
81:53 - more than one out there
81:55 - the web says how much should I code
81:58 - every day to be really good at coding
82:00 - you know you don't know obviously the
82:04 - more coding you do the better you'll be
82:05 - but I would if you could dedicate like
82:07 - an hour a day then you're gonna keep
82:11 - getting better right if you could do
82:14 - more do more it depends on how much time
82:16 - you have but if you if you're spending
82:19 - your whole day playing video games then
82:21 - maybe spend your own a coding right if
82:24 - you have a job or two jobs and you gotta
82:27 - provide for yourself
82:28 - your family or whoever then try to get
82:31 - that half hour in right but it just it
82:33 - kind of just depends on on you and how
82:36 - much time you really do have Samba and I
82:42 - don't have anything against video games
82:44 - I'm just saying like if your goal is to
82:45 - be good at coding then you know code
82:48 - more if you can't Sam it says is it
82:52 - possible bit of progressive web app with
82:54 - react this front-end and go Lang is back
82:56 - in you can definitely build a pressive
82:58 - web app with react to the front-end I
83:00 - don't know very much at all about Galang
83:02 - but you can pretty much use reacted with
83:05 - whatever back end you want so I'm
83:07 - assuming that that is possible Rajan
83:11 - says which language is best for
83:12 - beginners it kind of depends on what you
83:14 - want to do but if I had to pick I would
83:17 - say javascript is good because you can
83:20 - run it in the browser you don't need to
83:22 - download anything extra
83:23 - Python is also good because the syntax
83:25 - is is pretty simple to understand so
83:28 - those would be my two languages that if
83:32 - you're not interested in web development
83:34 - at all then go with Python if you are
83:37 - interested in web development go with
83:38 - JavaScript Josh
83:43 - Eric Smith says what do you think of
83:45 - WordPress with react we're using
83:48 - WordPress WordPress with react right now
83:50 - headless WordPress I think it's a nice
83:53 - combination because so many companies
83:56 - already run WordPress so if they wanted
83:59 - something more modern then in terms of
84:02 - their front-end with react you could
84:04 - very easily use the data they already
84:06 - have and you know their workflow would
84:08 - change very little in terms of content
84:10 - updating an entry but they could have
84:14 - react you know on the front end use
84:16 - react for you know they're at their add
84:18 - their mobile app and still pull the data
84:21 - from WordPress so I think it's a it's a
84:23 - good combination in some situations I
84:26 - wouldn't use it all the time but I think
84:30 - it's a really nice way to transition
84:32 - people into react without you know
84:37 - causing them to have to learn you know a
84:40 - ton of new stuff
84:41 - for maintenance the web says do you have
84:48 - a CS degree I do not my degrees in
84:52 - business do you have bosses how many
84:54 - projects I need to build a powerful
84:56 - portfolio I don't know what that number
84:58 - is but honestly like I would like to see
85:02 - at least three projects on a portfolio
85:04 - if somebody is trying to apply for
85:06 - something if somebody claims they're an
85:07 - expert at something I want to see a lot
85:09 - more than three projects you know
85:11 - honestly unless those three projects are
85:13 - like amazing and huge then yeah I'd want
85:18 - to say so it depends on what your what
85:20 - kind of role you're trying to get right
85:22 - if it's an entry level like junior
85:24 - developer role then try for three good
85:26 - ones right I'd rather have three good
85:29 - ones then you know ten ones that are
85:31 - just like terrible or just very very
85:33 - basic to do apps or something like that
85:42 - MB trance is is reacting react native
85:45 - same in syntax coding they're very
85:48 - similar there are a few differences
85:50 - between react and react native but if
85:52 - you know react it will be pretty easy to
85:55 - go over into react native if you have
85:58 - been learn react native first which is
86:00 - more rare it will be pretty easy to go
86:03 - and just do things and react so just
86:06 - just a few differences Amara says what
86:13 - are products based companies which
86:15 - provide job opportunities and react Jas
86:20 - there are a lot of companies that use
86:22 - react so obviously Facebook users reacts
86:27 - and then Instagram because right they're
86:30 - owned by Facebook trying to think what
86:33 - else sees your act Netflix users react
86:35 - Eventbrite users react I don't know I
86:41 - don't know the list there if you look up
86:43 - like what companies use react you you'll
86:45 - get a lot of info there's a lot of
86:47 - companies using react right now Go
86:50 - Daddy's websites but with react
86:51 - WordPress is switching over to a lot of
86:54 - stuff being
86:55 - so that company is I believe is called
86:57 - automatic is the the WordPress company
87:00 - so there are a lot of companies using
87:03 - react right now you know just you know
87:05 - do a search even go on like a job board
87:07 - and do a search for react as a keyword
87:09 - and you know you'll see a lot of blood
87:11 - I've been knowing that lately it I there
87:13 - are a lot of jobs chris says how do you
87:23 - solve a design problem more and model
87:25 - there I'm not sure what you mean about
87:28 - model layer but to be honestly I don't
87:31 - use a lot of design tools I'm more of a
87:34 - coder developer and less of a designer
87:36 - so I'm I'm a little bit more comfortable
87:39 - just adjusting some CSS than actually
87:43 - going to something like you know sketch
87:45 - or Adobe XD or you know something along
87:49 - those lines
87:49 - so if I'm already working on the project
87:52 - and there's some design stuff I just
87:54 - switched the code up if it's brand new
87:56 - and I have an action code or anything
87:58 - yet then maybe I would do things in in
88:00 - sketch I you know I do you sketch
88:03 - occasionally the web says thanks Jesse
88:07 - you are helping us a lot oh you're
88:09 - welcome I got to keep an eye on the time
88:12 - all right I'm gonna I got half hour
88:14 - throw my phone interview Eldrick says is
88:18 - it possible for me to learn c-sharp
88:20 - language as a beginner yeah I mean it's
88:23 - possible it's just a matter of sticking
88:26 - with it practicing studying building
88:29 - things Rodrigo says hi Jesse thanks for
88:33 - this lesson what IDE are you using and
88:35 - is it possible to code react for iOS in
88:38 - Linux yeah for sure I'm using Visual
88:42 - Studio code you can code with react on
88:46 - any operating system Windows Mac Linux
88:50 - you know whatever and then you can use
88:52 - react native to build iOS apps so that's
88:56 - definitely possible
88:59 - skee 760 says random question but how do
89:03 - I set up nginx to work with react router
89:05 - on refresh without getting a 404
89:10 - yeah it should be fine so there
89:16 - shouldn't really be anything you need to
89:17 - set up for nginx right nginx just needs
89:19 - to route your traffic all traffic to
89:22 - your server Jas file or whatever using
89:27 - with react router and then react router
89:30 - will handle everything
89:34 - rector I know on refresher that I do 404
89:37 - it's been so long since I've set that up
89:39 - I don't remember what if anything
89:41 - special you have to do I'm assuming that
89:46 - there's some documentation about it
89:48 - though but yeah it's been way too long
89:51 - since I've I've set up nginx manually
89:56 - m40 says I worked with jQuery a little
89:59 - is pretty straightforward but I feel
90:00 - more confident with vanilla JavaScript
90:01 - feel like I can do much more with it
90:03 - yeah I mean vanilla JavaScript you you
90:06 - can end up doing more because you're not
90:08 - locked into the jquery api which it's
90:10 - very versatile but still it there are
90:12 - some restrictions oxygen Exedy says why
90:17 - don't you start a tutorial series on
90:19 - react yes I might it's just you know
90:22 - it's a lot of work to you know actually
90:25 - set up an actual tutorials so you know
90:28 - that's it's potentially you know it
90:31 - could happen though it says what are
90:34 - some new trends you see in the
90:36 - programming industry I I don't really
90:42 - know um new trends there's so much you
90:47 - know new going on all the time right
90:50 - everybody is jumping on the machine
90:55 - learning you know like like all
90:58 - industries are getting in on machine
90:59 - learning some of the coolest stuff now I
91:02 - think or the potential would be most
91:04 - helpful is in the medical industry I
91:06 - think that that's a really awesome place
91:09 - to be because your programming work
91:12 - could actually end up saving people's
91:14 - lives so that's that's awesome also the
91:19 - work with a are so like augmented
91:21 - reality is
91:23 - which you know there are ways to use
91:25 - react JavaScript with that you know and
91:29 - that I think that has a lot more
91:31 - applications than people realize it's
91:33 - not just entertainment gaming but there
91:35 - are applications for industry medicine
91:38 - you know things like that too so those
91:41 - are some of the areas that I think are
91:42 - pretty cool also the cryptocurrencies
91:46 - are great you know not not investment
91:49 - stuff but in terms of having distributed
91:54 - systems for keeping track of things like
91:56 - let's say like real estate ownership
91:59 - you know identification even things like
92:04 - like voting is they're doing tests with
92:07 - using blockchain stuff for that I don't
92:10 - know there's a lot of cool areas where I
92:12 - think it could benefit from a
92:15 - decentralized ledger system that that
92:17 - you have with with these blockchain
92:20 - technologies James tells us how can I
92:29 - learn react you know read the
92:32 - documentation check out some react
92:34 - tutorials so there's there's a lot of
92:36 - them out there depending on how you like
92:38 - to learn you know maybe you want to get
92:39 - a book maybe you want to read blogs
92:41 - videos you know they're they're out
92:43 - there a Martha's window discover the
92:47 - right time to jump into Redux get into
92:50 - Redux if you find your apps if it starts
92:52 - to get really hard to think about your
92:54 - estate and keep your state managed
92:58 - properly then you want to think about
93:01 - Redux or something like it
93:02 - Chris X's design problem model layer I
93:05 - mean I started a Java dev I have a
93:08 - project for myself then I run into a use
93:10 - case to solve and wonder how should I
93:12 - write or add classes to solve it yeah I
93:18 - I mean I'm not a job in dev so I'm not
93:21 - sure specifically what you know what you
93:24 - run into but I mean I do run into cases
93:30 - where the you know things happen in a
93:33 - project and you have to
93:36 - you have to do actually add extra
93:38 - components and things like that so I
93:40 - mean I'm not sure usually my my process
93:45 - is like just get it fixed get it working
93:46 - and then look at how you could do it
93:48 - better you know sometimes it has to be a
93:52 - quick fix you just have to do it the
93:54 - best you can and then hopefully you have
93:56 - time to go back afterwards optimize it
93:58 - you know V Webb says have you managed
94:03 - CSS inside react there's a lot of
94:06 - different ways you could do it
94:07 - you could use regular style sheets and
94:10 - just import them like you normally would
94:12 - you could use CSS nsj components write
94:17 - inline CSS a lot of different ways to do
94:19 - it I'm not really sure which is the best
94:21 - one Omar says is react version 17 going
94:24 - to be a big change in terms of learning
94:26 - it's going to be some big changes but I
94:28 - don't think it's gonna be huge in terms
94:30 - of learning much of react is going to
94:33 - stay the same but there's gonna be some
94:35 - cool new stuff as well the UF says do
94:39 - you think machine learning will take
94:40 - over web development no not really I
94:43 - think a lot of the things the machine
94:45 - learning are is good at it's not
94:48 - necessarily the same thing that makes a
94:50 - web developer good so it it could
94:53 - potentially be used to help as a tool
94:56 - and web development but I don't see it
95:01 - no I I haven't heard of anything let's
95:04 - get that is probably gonna significantly
95:06 - change web development in in the
95:09 - short-term future a few websites what is
95:13 - required to start freelancing as a web
95:14 - developer find somebody who wants to pay
95:18 - you to do web stuff that's it I mean
95:21 - it's depending on your country maybe you
95:23 - need some sort of license to do business
95:25 - but really you just find somebody who
95:30 - one who's gonna pay you to do work and
95:32 - that's about it ego says D you already
95:35 - use reactive databases what do you think
95:37 - about this tech I'm I'm not sure
95:40 - yeah I'm not exactly sure what reactive
95:43 - databases are so I I guess I have no
95:47 - opinion about it right now
95:50 - edmond says hey I'm just an amateur but
95:55 - I need to learn to code learn coding and
95:57 - be a pro at programming need more of
95:58 - your tutorials help out yeah I mean
96:00 - there's it so many tutorials on here
96:02 - like me personally there's I think over
96:07 - 200 videos right now that I've done so
96:12 - there's a bunch for they're just on this
96:15 - channel and then there are a ton of
96:17 - other contributors that have done a lot
96:18 - so definitely this there's a lot of
96:20 - material for you to go through here just
96:24 - with free code camp let's see Aki says
96:30 - thought to mob X versus redux I haven't
96:32 - used my back so I really can't I can't
96:35 - compare amor says is it compulsory to
96:39 - know about component lifecycle perfectly
96:42 - no I mean not perfectly right you need
96:45 - to know enough to make it work right
96:48 - having a general understanding of what
96:50 - the component lifecycle is is definitely
96:52 - important in react m40 says have you
96:56 - heard of red javascript and jquery by
96:58 - john Duquette because i have very good
97:01 - things about the spoken thing about
97:02 - reading it I have not read it so I and I
97:06 - haven't really heard much about it so I
97:08 - can't really give a good opinion on that
97:09 - Ava says why have you chosen Gatsby what
97:13 - problems are solving XS so I'm not using
97:16 - Gatsby for this project
97:21 - Davis eases my uncle Reese's glucose
97:23 - level with a Bluetooth Bluetooth in from
97:25 - implant that's awesome that is really
97:28 - cool Marius wants to know my theme and
97:33 - vision vs code its SETI the you can see
97:37 - how to spell in everything in the
97:38 - description to the video V Webb says
97:42 - what are the main ways to make money
97:43 - after learning coding building building
97:47 - websites working fixing websites so
97:49 - either freelancing or you know getting a
97:52 - job with a company Eva says looks very
97:54 - similar sorry oh yeah yeah no problem
97:57 - I mean we're still using react so you
98:00 - know whether it's reactive gas feed
98:02 - creator a cab
98:03 - next yes whatever you know it's all
98:05 - gonna look very similar so okay I've got
98:09 - the end of the questions and my
98:11 - interview is coming up very soon so I'm
98:13 - gonna take a break here rest my voice
98:15 - for a minute and I will maybe I'll
98:21 - stream later on I know I have two
98:23 - meetings later today so I may or may not
98:26 - stream on my channel but subscribe to
98:30 - the channel turn on notifications links
98:32 - in the description to my channel if I do
98:34 - end up live-streaming you should get in
98:35 - to notification about it and I do have
98:39 - some other videos on there if you'd like
98:40 - to check it out feel free to follow me
98:42 - on Instagram and Twitter links are also
98:44 - in the description so hopefully I'll see
98:47 - y'all soon in any case have a great day
98:50 - thank you so much for watching