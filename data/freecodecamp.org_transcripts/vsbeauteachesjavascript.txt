00:00 - what's the difference between double
00:01 - equal signs and triple equal signs
00:04 - well double equal signs test for
00:06 - abstract equality
00:08 - while triple equal signs uh test for
00:10 - strict equality
00:12 - the difference is that abstract equality
00:14 - will attempt to resolve the data types
00:16 - via type coercion before making a
00:19 - comparison while strict equality will
00:21 - return false if the types are different
00:23 - let me give you an example
00:27 - if we test for abstract equality with
00:29 - two equal signs here
00:32 - we get true in the console
00:34 - however i'm going to just copy this and
00:36 - paste that we're going to put a third a
00:39 - third equal sign and run this again and
00:41 - you can see true that's the first one
00:44 - false that's the second one here
00:46 - so
00:47 - in this using two equal signs returns
00:49 - true because the string three is
00:52 - converted to the number three before the
00:54 - comparison is made
00:56 - with three equal signs it sees that the
00:58 - types are different one's the number and
01:00 - one's a string and then it returns false
01:04 - here's another example
01:10 - you can see
01:11 - that it's showing that true is equal
01:14 - equal to one for abstract equality
01:16 - equals one
01:18 - however
01:22 - if we check it for strict equality so
01:25 - that's the equal equal true equals
01:27 - equals one here is true equal equal
01:29 - equals one with the two equal signs this
01:32 - one is convert to true because in
01:34 - javascript true is one and false is zero
01:39 - however the with the three equal signs
01:42 - this one is not converted so it's false
01:46 - i want to show you another interesting
01:47 - thing with this
01:55 - if we clear the console and run this
01:58 - you can see the last one here
02:00 - um this is true however if we copy this
02:04 - line
02:06 - and we do three equal signs
02:09 - and run this in
02:12 - it will show false at the end this is
02:14 - interesting because it illustrates that
02:15 - string literals are different than
02:17 - string objects so this first part is a
02:20 - string literal this is a string object
02:23 - with the two equal signs it converts the
02:25 - object to the literal to compare them
02:27 - but then when the three equal signs the
02:29 - string literal is very is different than
02:32 - the string object
02:34 - so which one is better to use the two
02:36 - equal signs or the three equal signs
02:39 - well in general it is always best to use
02:41 - the three equal signs that test for
02:43 - strict equality
02:45 - this will increase the clarity of your
02:46 - code and prevent any false positives
02:48 - caused by abstract equality comparison
02:50 - if you do need to compare values of
02:52 - different types first do the conversions
02:54 - yourself and then compare this makes
02:57 - your code more explicit which is always
02:59 - better well thanks for watching my name
03:01 - is beau carnes and remember use your
03:04 - code for good