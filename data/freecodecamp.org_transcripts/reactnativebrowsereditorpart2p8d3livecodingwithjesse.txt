00:06 - hey everybody welcome to live coding
00:08 - with jesse i'm glad to be back it's been
00:11 - a while
00:13 - and uh
00:15 - today we're going to work on
00:18 - our react native browser editor which
00:21 - we started working on
00:23 - a while ago it's been like four or five
00:26 - months so
00:28 - uh
00:30 - just to
00:31 - give a give an intro to the show and the
00:34 - project since this
00:36 - it's been a long time and there's
00:37 - probably a lot of people that are new
00:40 - uh and this
00:42 - in this stream
00:44 - uh what i'm trying to do is work on a
00:46 - real project
00:47 - and i don't rehearse beforehand so
00:50 - there's going to be mistakes but that's
00:52 - the point is just to show you what it's
00:54 - really like to work on something to make
00:56 - mistakes and to
00:59 - to work through those mistakes
01:02 - so
01:04 - the format is
01:06 - i will do
01:07 - 25 minutes where i code and i don't
01:10 - really look at the live chat very much
01:13 - and then i'll take a five minute break
01:14 - i'll look at the live chat and i'll
01:17 - answer questions
01:18 - and i usually do like maybe two sessions
01:21 - like that
01:23 - then at the end i'll look at the live
01:25 - chat and try to answer as many questions
01:27 - as i can so if you have questions
01:30 - just be patient i'll get to them
01:32 - the recording of this live stream is
01:34 - available just a few minutes after the
01:36 - live stream ends
01:38 - so
01:39 - if you have a question but you can't
01:41 - wait for the answer then check out the
01:43 - recording and i'll probably
01:46 - uh answer your question at some point
01:48 - during the stream
01:50 - um
01:52 - feel free to ask ask questions uh if
01:55 - you're a beginner you know don't worry
01:58 - about
01:59 - you know asking questions about even
02:02 - just really basic stuff
02:04 - that's totally fine
02:07 - uh try to keep the live chat positive
02:10 - so um
02:12 - you know i will
02:14 - uh
02:15 - if there's any like
02:17 - harassment or negative stuff or anything
02:19 - like that i'll just block you from the
02:22 - chat so
02:24 - i think that's it
02:25 - in terms of introduction
02:27 - for the stream
02:30 - but
02:31 - in terms of the project what i'm trying
02:33 - to do is
02:35 - i want to get
02:38 - for this demo right we're just
02:42 - using create react app
02:44 - to
02:45 - make a
02:47 - a little proof of concepts
02:50 - so that we can
02:53 - edit
02:55 - react native code in a browser and have
02:58 - it display
03:00 - right there in the browser
03:03 - so very similar to what you would see on
03:06 - freecodecamp.org
03:08 - where
03:09 - you know you have like the split screen
03:11 - and you can type in
03:13 - html
03:15 - and
03:16 - javascript and then have the result
03:19 - appear
03:20 - that's what we want but we wanted to do
03:22 - we wanted to happen with react native
03:24 - code
03:30 - so i just happen to look over the stream
03:33 - someone says can you say the start and
03:34 - end timing uh the streams usually end up
03:37 - being like
03:38 - around an hour
03:41 - sometimes a little bit more than an hour
03:43 - so
03:46 - that's what i'm that's what i'm usually
03:48 - going for
03:50 - and i see a ton of people saying hi so
03:53 - hey everybody
03:54 - uh thanks for watching
03:58 - and
03:59 - i am gonna get started now so
04:03 - i'm gonna bring up a
04:05 - pomodoro timer on my other screen here
04:17 - and i wanted to get started by
04:21 - upgrading packages right so
04:24 - this is the the same project that we
04:26 - left off on months ago i've done nothing
04:29 - to it right so
04:31 - i want the stream to be as realistic as
04:33 - possible sometimes this happens
04:35 - you come back to an old project and
04:40 - i'm coming back to this project
04:42 - after a long time
04:44 - and i want to update the packages
04:48 - right for whatever reason it won't run
04:50 - so i did try to run it just a few
04:52 - minutes ago
04:54 - and
04:56 - i'm not even gonna mess with that error
04:58 - because i know that all my packages are
05:01 - at least
05:02 - you know a few months out of date
05:05 - uh so i'm gonna go through how to how to
05:07 - do an upgrade
05:10 - like like a mass upgrade here so
05:14 - i'm gonna do
05:15 - i'm using yarn
05:17 - uh instead of npm okay so
05:22 - that's just a um
05:24 - an alternative package manager
05:29 - for javascript packages for npm packages
05:32 - so we can do yarn upgrade
05:35 - and then
05:36 - i'm going to give it the flag latest
05:40 - actually let me do upgrade interactive
05:46 - latest i believe that's the
05:49 - that's the command let's see
05:53 - yep that's it all right so
05:58 - i'm going to make this bigger and
06:00 - hopefully the font's big enough i don't
06:02 - know that i could go much bigger and
06:04 - still display things on the screen so
06:11 - this is what happens when you type in
06:15 - when you do yarn upgrade interactive
06:18 - it gives you a little display here
06:21 - that um
06:22 - tells you what packages you're using
06:25 - that are out of date
06:28 - and
06:29 - how out of date it is right so it'll say
06:31 - like
06:35 - this is where you're at this is where
06:36 - you need to go right so
06:38 - and uh it gives you a little like color
06:40 - code right so red means there's been a
06:43 - major update and it's backward
06:45 - incompatible
06:46 - right so that means like there's
06:48 - breaking changes
06:50 - and it looks like all of the stuff it's
06:52 - showing me at the top here is red now
06:54 - there there is more right so as i scroll
06:56 - down it keeps showing me more so you can
06:59 - see
07:00 - a lot of our stuff is
07:03 - it's out of date wow
07:06 - we're almost all into the into the red
07:08 - here right
07:12 - wow
07:15 - i think it just keeps keeps scrolling
07:17 - through so we're not we don't have an
07:19 - endless list of packages it just keeps
07:21 - starting back at the beginning
07:22 - so um
07:26 - yeah see it just keeps scrolling
07:29 - but let's uh let's start somewhere
07:32 - and see
07:35 - what we actually want to update in
07:37 - reality i
07:38 - i really want to try to update
07:42 - everything and then see what happens
07:46 - okay
07:47 - since this is still like a work in
07:49 - progress
07:50 - i'm okay with breaking it right we we're
07:53 - using git so we can always just roll it
07:55 - right back
07:58 - so
08:01 - i can just run
08:03 - now that we've seen it
08:05 - instead of going through and
08:08 - like picking one by one
08:10 - uh what i want let's see better chances
08:16 - i think
08:17 - i'm gonna get out of this so i'm gonna
08:20 - ctrl c to get out of it
08:22 - and then let's go with
08:29 - i'm at
08:34 - let's go with yarn upgrade and i'm going
08:36 - to get rid of the interactive
08:43 - i'm just gonna do upgrade and then i'm
08:45 - gonna say
08:47 - latest
08:49 - and this should do all the upgrading
08:51 - without giving us an option of what to
08:53 - upgrade it's just going to upgrade
08:54 - everything to the latest okay so this is
08:57 - going to take
08:58 - probably a minute or two
09:00 - which is fine because it's going to give
09:01 - me a chance to check the live chat
09:05 - for a little bit
09:08 - now i kind of expect that things aren't
09:11 - going to work when we do this because
09:15 - there's so many breaking changes
09:17 - and that's okay i just
09:19 - now is the time to try to update
09:23 - you you don't want to keep your packages
09:25 - like so out of date all the time right
09:27 - ideally we would have been working on
09:29 - this
09:30 - um
09:30 - and this this whole time in the past
09:33 - four or five months
09:35 - and when a package went out of date we
09:37 - would have updated it okay but that
09:39 - didn't happen
09:41 - so
09:42 - we're gonna try this we're gonna see
09:43 - what errors we get
09:45 - and my plan is
09:48 - if we get
09:50 - if the errors are just so crazy
09:53 - that it's going to take forever
09:55 - then
09:56 - we will just
09:58 - start a new project
10:02 - and basically copy and paste what we
10:03 - need to over since we didn't get that
10:05 - far into this project right wow that was
10:09 - fast
10:14 - i expected that to take longer but that
10:16 - seemed to be kind of
10:18 - it worked well
10:20 - okay
10:21 - um in our package json should be updated
10:24 - so um
10:28 - let's let's check some of these
10:29 - dependencies like all right so our react
10:32 - dependency
10:35 - yeah wow that is
10:37 - is that
10:40 - the latest well
10:42 - okay
10:43 - all right so that did work so
10:45 - let's just try to run it
10:52 - if this actually runs i'm gonna be like
10:56 - really surprised
10:59 - all right so it didn't it didn't run
11:01 - okay
11:10 - um interesting
11:25 - all right well now we got an error we
11:27 - know at least somewhere to start
11:29 - um
11:32 - let's see
11:34 - just
11:39 - checking this out the live chat out just
11:41 - for a second
11:43 - okay
11:44 - um
11:46 - all right so let's check this out in our
11:48 - components
11:51 - workspace
11:55 - dot js
11:57 - i am using visual studio code
12:00 - uh as my my code editor
12:04 - workspace and
12:07 - movie ads workspace.js
12:14 - [Music]
12:23 - and we're getting an error on line
12:27 - 111
12:35 - oh okay so this is a
12:39 - let's see experimental hts configuration
12:48 - oh okay so this is just the config issue
12:50 - so um
12:57 - let's see if it tells us
12:59 - so the experimental decorators option
13:03 - do we have a config
13:17 - i don't think i have a config for my
13:19 - linter right now
13:31 - that was should be
13:35 - yeah babel should be handling this
13:49 - okay
13:58 - so
14:00 - what we've done in this project is we've
14:02 - pulled in a lot of code from another
14:05 - open source project
14:07 - and we're trying to adapt that
14:09 - so this is some of that code from that
14:11 - other project they're using in
14:13 - experimental syntax
14:16 - and so that's where we're getting
14:18 - this this error from uh so what i'm
14:21 - thinking now is
14:23 - at first i thought
14:24 - okay maybe this is just a linting error
14:27 - meaning like our
14:29 - linter linters check your code for
14:31 - errors
14:33 - um
14:35 - and if you're using experimental things
14:37 - you have to tell your linter that like
14:39 - hey i'm gonna use this experimental
14:41 - stuff i know it's gonna look like it's
14:43 - broken but it's not right
14:44 - but
14:46 - now i'm seeing like maybe
14:49 - tonight it's saying parsing error right
14:51 - maybe
14:52 - i'm not actually transpiling that so if
14:54 - you want to use an experimental feature
14:57 - in javascript you need to use a
14:59 - transpiler so you usually it's this this
15:02 - tool called babel and what babel does is
15:05 - it takes your
15:06 - your experimental code
15:09 - and
15:10 - it transforms it into normal javascript
15:13 - that a browser can handle so
15:16 - um
15:20 - if that's the issue then we need to make
15:23 - sure that babel can handle that
15:27 - uh so i do have something in babel
15:31 - for
15:32 - um
15:34 - for decorators right
15:36 - which
15:37 - that's what i i believe that's what we
15:39 - were
15:40 - using
15:42 - yeah
15:44 - uh but for whatever reason
15:47 - this is not working
15:50 - so
15:57 - see
16:00 - let's see
16:10 - let's look at
16:11 - i guess the first thing to look at would
16:13 - be
16:18 - the project i want to see how they set
16:21 - up babel for the uh for the project that
16:23 - i got this code from
16:25 - you might just be able to copy and paste
16:27 - from there and and this would work
16:29 - right so
16:33 - let's do that first
16:34 - so i'm gonna bring over a browser window
16:39 - actually you know i think i have i think
16:41 - i have the project open yep i do
16:48 - there we go let's bring this browser
16:49 - window
16:51 - over so this is the
16:54 - no that's not it
16:58 - i had
17:01 - too many projects open
17:19 - that's sweet
17:27 - okay okay so it's a search for it
17:49 - or i could just check the package jason
17:51 - are we bringing in
18:01 - there we go this is the
18:04 - that's the person that is just doing
18:07 - this so
18:09 - just search for this person on github
18:18 - there we go
18:20 - github knew what i wanted
18:23 - uh okay
18:27 - so let's check out
18:31 - pebble
18:36 - all right that's it that's the same so
18:39 - we got the same babel
18:41 - config
18:45 - make this all bigger
18:50 - team battle config
18:52 - and
18:59 - let's see
19:09 - all right something to chat is saying
19:14 - something to just use
19:17 - okay let's see let's try it let's try it
19:19 - out who is this so uh fred will let's
19:21 - try it out
19:37 - too soon if i use it like this
19:45 - your legacy linter options in your vs
19:47 - code settings they're no longer being
19:49 - used
20:00 - oh interesting
20:05 - yeah i don't want to remove them right
20:07 - now
20:08 - i don't want to deal with that right now
20:10 - okay
20:11 - um
20:16 - all right should we change that
20:20 - and
20:25 - let's do it
20:27 - and it looks like
20:34 - we get a new error is that it
20:38 - i believe we did
20:43 - all right cool so shout out to fred
20:48 - because that seemed to at least get us
20:51 - around like our
20:53 - our linter is still complaining but at
20:55 - least we got past the
20:58 - the air i was afraid that we would have
21:00 - had like similar usage in a lot of other
21:02 - places
21:04 - and
21:05 - it would have been
21:07 - a mess but i guess
21:09 - we don't so
21:12 - that's who we have uh workspace line
21:16 - which is
21:38 - do not use import syntax to configure
21:40 - webpack loaders
21:48 - all right
22:05 - let's check this out and
22:09 - also
22:13 - i think so it has been a while since
22:16 - we've imported this code so it's
22:18 - probably worth checking out this
22:19 - workspace.js file
22:21 - in the uh
22:23 - the repo that we just brought in
22:26 - yeah i mean
22:36 - let's see
22:38 - components workspace
22:41 - uh in case this has been updated since
22:45 - the last time
22:49 - yeah it does it does not look like it's
22:51 - been updated
22:53 - you can see
22:54 - it's june 5th 2017 right so
22:59 - definitely not not updated
23:04 - all right
23:05 - and
23:09 - [Music]
23:20 - my lost track of where i put my pomodoro
23:24 - timer that i had set
23:26 - there it is
23:27 - all right cool in about five or six
23:30 - minutes i'm gonna take a break and i'm
23:32 - gonna answer some questions so
23:35 - just hang in there
23:36 - if you got any questions in the chat
23:42 - all right so let's
23:44 - search for
23:46 - i believe i did copy and paste the
23:49 - the error yep
23:56 - oh cool it looks like it's just a linter
23:58 - thing
23:59 - so
24:30 - interesting
24:31 - okay
24:32 - so
24:33 - esl
24:34 - [Music]
24:39 - so i guess i could just
24:48 - disable that for a line how do i turn
24:51 - off
25:06 - all right so i'm going to stack overflow
25:08 - this seems to just be a linting thing
25:12 - and so
25:13 - i don't remember how to disable eslint
25:16 - for a line so
25:19 - yes i'm disabled
25:23 - oh cool
25:30 - swedes
25:32 - so we should just be able to eslint yes
25:36 - lent disable line and then put the name
25:38 - of what the rule that we want to disable
25:43 - so let's try that out
25:47 - oops
25:48 - there we go
26:01 - yes
26:16 - oops
26:25 - all right let's see if it is
26:27 - nice
26:29 - all right cool so that
26:31 - that actually did work
26:33 - so
26:34 - good to know you can disable a single
26:37 - line
26:38 - in eslint and just disable
26:42 - that particular rule
26:49 - import and body reorder the top all
26:52 - right that's that's easy
26:56 - so let's go to our index.js which
27:04 - it's kind of weird that i had that in
27:06 - there and it ever worked right
27:09 - all right i might just
27:13 - i might have to deal with this
27:15 - this issue because it keeps popping up
27:17 - and annoying me all right we're getting
27:20 - through we're getting through the errors
27:23 - um
27:26 - unexpected use of history
27:29 - no restricted
27:56 - that's weird
28:05 - i would not have thought that
28:08 - that would give
28:11 - i would give this error but
28:14 - i guess so
28:25 - all right let's see if we just can
28:27 - disable this line as well
28:32 - yes
28:34 - disable i already forget what the
28:38 - what i just typed in the other one was
28:41 - what am i looking for
28:45 - what was this eslint
28:47 - disable
28:50 - disable line
29:04 - here's a disabled line no
29:10 - restricted
29:19 - nice
29:32 - uh i took it to take us back to that
29:35 - uh looks like that
29:37 - the little switch that we put in here
29:40 - and is still not working so
29:42 - we're going to take a little break and
29:44 - i'm going to answer some questions and
29:45 - then when we come back we're going to
29:48 - go back to this
29:52 - decorators decorative legacy isn't
29:54 - currently enabled
29:57 - um
29:58 - we're going to look at this decorator
29:59 - issue
30:00 - all right so i'm going to scroll all the
30:03 - way up to the top and go down through
30:05 - and try to answer some questions
30:07 - as many as i can
30:12 - it looks like
30:15 - i may not have access to the questions
30:17 - at the top so there's been a lot of
30:18 - activity in the chat
30:22 - um so if you ask your question like
30:24 - super early like before the stream
30:26 - started i may not see it
30:30 - uh of course of course this is
30:34 - i'll get a question says can i get
30:37 - an eight-digit salary after doing this
30:40 - course
30:41 - probably not
30:44 - eight digits is pretty
30:46 - it's a lot
31:02 - let's see
31:17 - all right so uh oncon says um a very big
31:21 - um beginner and react js want to learn
31:23 - very enthusiastic about the course
31:26 - uh
31:27 - thanks hunca
31:28 - and i just want to clarify so this this
31:32 - live stream is not exactly a course
31:34 - right so
31:36 - this is um
31:41 - it's it's not meant to be a tutorial
31:43 - that where i'll take you through like
31:45 - from beginning to end and you'll learn
31:48 - concepts and things like that
31:50 - this is a look into
31:52 - um
31:53 - like a real project it's a lot of
31:55 - troubleshooting right like we like we
31:57 - have right now is
31:59 - you know we're trying something that you
32:01 - would normally have to do right like
32:03 - projects get out of date you have to
32:05 - update packages this is what happens
32:06 - when you update packages when you wait
32:08 - too long you try to update packages you
32:11 - get errors
32:12 - the errors are in code that i didn't
32:14 - write myself right which is this happens
32:18 - like really at you know you come into a
32:20 - project you inherit someone else's code
32:22 - right so the idea in the stream is to
32:24 - try to be
32:26 - as close as possible to a real developer
32:28 - experience right because
32:30 - um
32:32 - that way
32:33 - uh
32:35 - there are things that you learn from
32:37 - just doing
32:38 - that you wouldn't necessarily learn from
32:40 - a course and that's i think the value in
32:45 - this
32:46 - in this live stream is
32:49 - when things don't go right and there
32:50 - aren't instructions
32:53 - for how to fix it like what do you do so
32:56 - that's what we're doing here so it's
32:58 - it's not exactly a course but
33:00 - hopefully
33:02 - we'll all learn something as we
33:04 - as we could
33:19 - okay it looks like um there were some
33:22 - discussions and like some questions are
33:23 - getting answered like in the chat by
33:25 - other people so i'm going to kind of
33:27 - like scroll
33:29 - past that
33:35 - um abishak is asking about what's what's
33:37 - best
33:41 - software or ai so artificial
33:43 - intelligence
33:50 - and i'm assuming for for a degree so
33:52 - what's best for a degree software or
33:54 - artificial intelligence
33:56 - um i'm not really sure about that one
33:58 - i don't know enough about it to know
34:00 - what what a better degree would be
34:02 - um i mean i do know if like you don't
34:04 - need a degree
34:07 - to do software work
34:10 - but probably if you want to be on like
34:12 - the cutting edge of ai research like in
34:14 - a university
34:15 - they're probably going to want you to
34:17 - have a doctorate's degree
34:19 - i'm assuming i don't know for sure
34:24 - of course
34:26 - there are companies that are also on the
34:27 - cutting edge of ai research that
34:30 - you wouldn't maybe necessarily need to
34:32 - be a doctor have a doctorate degree
34:36 - to work on it
34:39 - saad says what programming language
34:41 - should i start with new to programming
34:43 - which should i start with
34:47 - really you can start with anything
34:50 - uh javascript is an easy one to start
34:53 - with because it can run
34:55 - in the browser
34:57 - uh so
35:00 - and and you can
35:03 - there's a lot of free resources for it
35:06 - it's a nice one to learn it can run
35:08 - client-side and server-side but
35:10 - realistically if you're just starting
35:11 - out just to learn the programming
35:13 - concepts you can start out with anything
35:16 - and you're going to learn the same the
35:18 - same concepts
35:21 - and then switch to
35:23 - you know whatever you you need to but
35:28 - if you want to go the route of like
35:30 - freecodecamp.org and with those lessons
35:32 - then the first programming language
35:34 - you'll learn will be uh javascript
35:37 - all right cool so my
35:39 - timer my five minute timer is up i'm
35:41 - going to start a new pomodoro session of
35:43 - 25 minutes
35:44 - and we're going to get back to the code
35:46 - i'll come back to the questions looks
35:48 - like there's a ton of questions which is
35:50 - awesome so
35:52 - but i'll come back to those questions
35:55 - after
35:57 - after this next coding session
36:00 - all right so
36:03 - i'm going to copy and paste
36:06 - this part
36:09 - so when i get errors like this oh you
36:11 - probably can't see
36:12 - let me
36:15 - you probably can't see the whole message
36:17 - here so um
36:20 - yeah my face is blocking out the entire
36:22 - message but
36:25 - basically when i get an error message uh
36:28 - i i want to try to copy and paste the
36:29 - part that doesn't have
36:32 - uh reference to my project in particular
36:36 - right because when i search for that
36:37 - nobody's gonna have that right so so the
36:40 - name of the file workspace.js i don't
36:42 - want that and i don't want the
36:44 - um
36:46 - like the
36:48 - location of the error in terms of the
36:51 - the line in my file right but
36:55 - if there's anything that seems generic
36:59 - that's what i want to copy and paste so
37:01 - we'll see in a second what i'm what i've
37:03 - decided to copy and paste so
37:06 - i'm going to leave this linting thing up
37:07 - so i can keep referencing it because i'm
37:09 - sure i'll um
37:10 - i'll forget the syntax again
37:12 - all right but i've what i've pasted is
37:15 - this
37:16 - decorators
37:20 - support for experimental syntax
37:21 - decorators legacy isn't currently
37:23 - enabled right
37:28 - and hey there's a whole
37:31 - medium article on it that's interesting
37:34 - i'm going to open the stack overflow as
37:36 - well because that's usually the most
37:38 - helpful but i'm interested to see
37:42 - what is there's an entire
37:45 - medium article
37:47 - that is titled the exact name of the
37:49 - error that we got
37:51 - so
37:54 - that's awesome
37:58 - i don't know that i've ever had that
37:59 - happen before
38:04 - so let's see what we need to do
38:07 - let's see how old this is first
38:09 - okay so it's from this year it's from
38:11 - may 4th so that's relatively new
38:18 - all right let's do this
38:20 - so
38:21 - let me make this bigger so you can kind
38:23 - of see this but
38:26 - this is great i can't believe
38:29 - whoever wrote it who wrote this
38:32 - patrick
38:33 - so shout out to patrick for
38:36 - writing a medium
38:38 - article
38:39 - all about this error
38:42 - all right so we're going to install this
38:45 - new battle plug-in
38:48 - and try to use that instead of the other
38:51 - battle plug-in
38:52 - that we had so
38:57 - it's possible since so much time has
38:59 - elapsed that the old battle plug-in it
39:02 - just isn't supported anymore maybe
39:04 - that's that's why
39:06 - we're having some issues so
39:09 - we're installing that
39:10 - and
39:15 - now let's
39:17 - bumble plug in
39:18 - i think we have a babble rc so that's
39:21 - let's use this one
39:36 - so there there are two different types
39:38 - of configuration files for for babel so
39:40 - that's why there's two different here so
39:41 - you can have a babble.config.js
39:43 - and the syntax is a little different
39:46 - for each one so or you can have a dot
39:48 - babel rc so i believe we have a dot
39:51 - babel rc
39:58 - yep and we do so in our plugins
40:02 - i i'm guessing i can just get rid of
40:05 - this this transform decorators legacy
40:10 - and
40:13 - all right it doesn't like the um
40:16 - the difference in
40:22 - and the quotation works so
40:30 - here we go what is this
40:32 - incorrect type expected
40:35 - oh it thinks i'm trying to use
40:37 - typescript
40:45 - all right and
40:46 - i believe it did say in that
40:48 - thing to restart
40:52 - so
40:58 - let's try it
41:07 - oh no we still getting the same error
41:09 - yep
41:11 - all right let's see
41:14 - so
41:19 - let me double check this
41:34 - shoot
41:40 - all right let's try
41:53 - let's try the stack overflow one
42:14 - looks like is there no
42:17 - all right so i don't think they actually
42:19 - selected an answer that worked
42:21 - but this one does have the most votes
42:24 - which this seems like the same thing
42:32 - the other thing i can think of is
42:35 - maybe
42:36 - since we use create react app it's not
42:38 - picking up this um
42:40 - babel
42:42 - rc file
42:46 - so let's check that out so um
42:49 - create react app
42:52 - is a great tool to start a react
42:55 - project
42:56 - but it does limit you a little bit
43:00 - in stuff like this um so
43:02 - in in
43:04 - like anything that has to do with a
43:06 - custom webpack
43:08 - uh
43:09 - configs which we're starting to get into
43:11 - like webpack
43:13 - uh stuff here so
43:15 - or at least related to webpack
43:18 - so let's go
43:19 - [Music]
43:20 - let's see
43:31 - so i'm just typing in um use
43:34 - dot babble rc with the cr with create
43:37 - react app
43:40 - so
43:45 - when i do um
43:48 - any search i usually try to say
43:51 - i just want stuff from the past year
43:54 - because i don't want out of date
43:58 - out of date stuff there we go using
44:00 - custom
44:11 - let's see what this is this is for a
44:12 - different project but
44:16 - you might have to use cut okay
44:21 - i wasn't sure if we'd have to use this
44:23 - or not but it looks like we might
44:31 - i might have to use customize create
44:32 - react app
44:34 - let me make sure i'm not already using
44:36 - it
44:37 - uh where's our package json
44:47 - yeah
44:48 - all right so
44:52 - let's do that
44:55 - this is actually this is gonna be fun
44:57 - okay so if you need to modify your um
45:04 - create react app
45:07 - um
45:09 - like your webpack config or your babel
45:11 - stuff for create react app there's a
45:13 - plugin you can use called customize
45:15 - create react app
45:19 - actually
45:21 - customize cra
45:23 - right so
45:26 - we're gonna go to their github page
45:32 - so that we can
45:34 - see what we need to add
45:36 - so it does use
45:38 - react app rewired
45:41 - okay which
45:43 - from what i understand react app rewired
45:45 - was like the first way that came out
45:46 - that you could do stuff like this
45:48 - um but it's
45:50 - now customized create react app is kind
45:53 - of
45:56 - sorry
45:57 - this like built on top of that
46:01 - so that's why we need both
46:04 - so let's do this
46:10 - so this potentially could cause problems
46:13 - with create react app projects so
46:17 - only use it if you really need to use it
46:20 - i've had success using it on projects
46:23 - it hasn't like messed up anything before
46:26 - so um
46:30 - but just be aware that
46:32 - you know it can
46:34 - throw things off
46:37 - all right so
46:38 - now that we have that
46:40 - in there let me
46:43 - let me double check to make sure there's
46:45 - we don't need to do anything else
46:47 - usage
46:49 - config overrides
47:04 - all right so we do need a config
47:07 - overrides
47:11 - file and actually
47:22 - oh it doesn't have it i was hoping it
47:24 - would have
47:27 - that would have something in there
47:37 - so
47:47 - sorry
47:48 - what's the name of this file config
47:51 - overrides.js
47:53 - there we go so let's make a config
47:56 - overrides.js file
48:04 - and
48:06 - so we're going to make this just in the
48:08 - root of our project
48:13 - config
48:14 - overrides.js
48:16 - and
48:17 - i'm going to copy and paste
48:28 - just to get us started
48:43 - there we go
48:44 - and
48:45 - a lot of this we don't need like really
48:50 - we i want to add this decorator's
48:53 - legacy
48:55 - and
48:57 - actually disabling eslint is probably
48:59 - not a bad idea since we're getting ldts
49:01 - and errors but this is just in webpack
49:04 - um
49:08 - that's cool whatever is
49:11 - i'll need that
49:13 - and
49:15 - i don't need this
49:20 - all right and
49:21 - so now
49:23 - we don't need these
49:31 - and
49:33 - all right let's see if that'll work i'm
49:35 - gonna manually restart this
49:51 - ah
49:53 - decorate his legacy
50:02 - it's still not working
50:09 - okay
50:26 - hmm
50:40 - i wonder why
50:47 - why are we getting this
50:57 - hmm
51:04 - alright so
51:05 - we have
51:22 - all right it looks like we have
51:24 - everything that
51:26 - we've seen
51:28 - hmm
51:43 - all right let's go back
51:53 - let's get rid of that one
51:56 - and this is about focus
52:01 - okay we haven't looked at this one yet
52:02 - this is just in general how you
52:05 - use
52:06 - babel plugins with create react app so
52:09 - probably not a bad idea to look over
52:10 - this just to make sure that we did it
52:12 - right
52:15 - all right
52:29 - we do we want to use our babble rc
52:32 - okay
52:38 - this might be
52:40 - this might be it
52:42 - so we don't
52:45 - we're not going to pull this in directly
52:52 - we wanted to use battle rc
53:03 - now
53:05 - now it should actually look at our
53:06 - battle rc file
53:28 - oh
53:29 - and i need to change
53:31 - change this
53:33 - all right i can't believe i forgot this
53:35 - okay so before create react app actually
53:38 - starts
53:39 - how did i not see this in the
53:41 - documentation like
53:46 - this is not in here
53:52 - that's kind of weird
53:55 - um
53:57 - okay anyway
54:03 - so
54:05 - uh let's check our
54:08 - package.json file here
54:11 - so
54:14 - we want to run instead of running
54:16 - when our when we run our scripts
54:19 - um
54:20 - instead of running it through react
54:22 - scripts we want to run it through react
54:24 - app rewired
54:30 - and that was that was probably our issue
54:32 - so stuff
54:34 - this may have actually worked before the
54:36 - way we had it and now it
54:39 - so now it will run through react app
54:41 - rewired so let's see
54:44 - on x force override
54:46 - bevel rc is not defined use valve or c
54:49 - is not defined
54:52 - yep
54:54 - you are correct
54:57 - he's battle rushing
55:08 - now it's going to use
55:11 - our new stuff
55:13 - all right we got a new error
55:16 - sweet
55:19 - so let's go back to our code
55:22 - our new error is
55:24 - plug-in preset files are not allowed to
55:27 - export objects only functions
55:34 - whoa
55:39 - this is actually a problem in our node
55:42 - modules
55:48 - that's wild
55:57 - that's pretty crazy because like
56:01 - this is it's a node much
56:04 - uh
56:06 - all right let's look this up
56:09 - and let's get rid of some windows while
56:11 - we're at it
56:18 - maybe
56:19 - are we using we're not using a new
56:22 - version of babble
56:35 - [Music]
56:43 - all right
56:52 - [Music]
56:56 - eight seven six five
56:59 - five
57:00 - you could probably uh
57:03 - what
57:05 - um
57:06 - i
57:07 - hear my kids in the background so that's
57:10 - it
57:11 - they're on their way to school
57:13 - uh there's a question here
57:16 - isn't react native browser just react.js
57:20 - no it's not so
57:21 - what we're trying to do is is say that
57:25 - you can
57:29 - type into a browser window like a
57:33 - like an editor an in browser editor
57:37 - react native code
57:39 - and then have that code actually run and
57:42 - display
57:45 - in the browser
57:46 - right in a little like window in the
57:48 - browser
57:50 - right so
57:51 - we need the code to be converted
57:54 - into
57:56 - something that the browser can
57:57 - understand
57:59 - like on the fly in the browser
58:02 - and so
58:06 - it's it's not um
58:11 - it's not running react native so that it
58:13 - can go in the browser right it's not
58:15 - just that it's it's actually
58:18 - trying to convert the react native code
58:20 - on the fly
58:21 - in the browser
58:23 - the the use case for this is
58:26 - being able to have online tutorials
58:29 - online react native tutorials
58:32 - where someone doesn't have to go through
58:34 - everything necessary to run react native
58:37 - on their local machine and they can just
58:39 - go into the browser
58:41 - and
58:43 - type it in
58:44 - and
58:48 - type in actual react native code and
58:50 - then see what the result would be
58:53 - right
58:58 - um so you're making a thing kind of
59:00 - compiler to javascript yeah basically
59:02 - yeah yeah it's it's like
59:05 - it's going to be like an in-browser
59:06 - compiler of react native to
59:10 - normal javascript
59:15 - okay
59:16 - sorry i got kind of off track from the
59:17 - coding but that was
59:20 - i think i needed to clarify that
59:23 - otherwise what we're doing is not going
59:24 - to make that much sense
59:28 - okay so
59:34 - it looks like
59:48 - babel preset es2015 okay so this is is
59:53 - um i believe related to like a new way
59:57 - that babel's doing its stuff so like you
59:59 - see that it says at sign babble
60:02 - right so this is the way we should be
60:04 - doing it
60:05 - and
60:07 - instead we're doing it this this older
60:09 - way
60:10 - so
60:12 - we need to
60:13 - switch things up so instead of
60:18 - [Music]
60:19 - like for instance a set of reactors
60:21 - should be at battle reactor you need to
60:22 - install uh
60:24 - preset react so
60:26 - that's what we need to do next
60:28 - right now my timer is up though
60:30 - so
60:31 - i'm going to answer some questions okay
60:34 - well you need to pull them out and
60:36 - what
60:37 - um
60:40 - you need to answer some questions and
60:42 - then
60:43 - on our next live stream this is where
60:45 - we'll go so actually
60:48 - if i have time i might try to sort this
60:50 - out before the next live stream
60:52 - um but otherwise
60:54 - then we'll kind of just pick up here
60:57 - with switching over our babel stuff
61:00 - to use the latest and it looks like the
61:02 - reason we didn't see this error before
61:04 - is because
61:06 - our create react app was just completely
61:08 - bypassing our babble rc so we had it in
61:11 - here
61:13 - but
61:13 - it this was never running
61:20 - which i mean that makes sense so
61:24 - anyway let me go to the chat and i'm
61:27 - gonna scroll up to where i left off at
61:29 - i'm gonna try to get as many questions
61:31 - as i can in
61:32 - um
61:33 - so
61:34 - i may not be able to get to all the
61:35 - questions since i do have to start my my
61:38 - normal job so i i'm a
61:40 - software engineer
61:41 - and um
61:44 - so if i don't get your question you can
61:46 - always put it in the comments to the
61:48 - video
61:49 - um and then i can try to answer it
61:52 - later on
61:57 - okay
62:17 - all right
62:18 - so
62:20 - we have a question what is react all
62:22 - right so react is a javascript library
62:26 - um for
62:29 - building apps
62:30 - and so it just it gives you this um
62:34 - it helps mostly with state management
62:37 - and
62:38 - it gives you an html like syntax
62:42 - called jsx that lets you
62:45 - kind of mix together
62:47 - html what looks like html with
62:50 - javascript
62:52 - and create
62:55 - create apps so that's
62:57 - super high level
63:00 - but basically like if you want to make
63:02 - web apps
63:03 - then react helps you do that
63:12 - okay
63:13 - uh dragon stone creation says the fan is
63:15 - noisy can you reduce speed i'm sorry
63:17 - about that you know what i'm right now
63:19 - i'm set up uh in my basement so i
63:22 - believe the uh the heater was running
63:25 - um so apologies for that
63:28 - i
63:30 - i have plans to put up some walls around
63:33 - my work area and uh like soundproof it
63:36 - but
63:38 - hasn't happened yet
63:39 - uh so i'm hoping i can get that done
63:42 - soon
63:44 - and um
63:45 - then the noise won't be an issue so i'm
63:47 - sure you can hear like the garage door
63:49 - shutting now and you could hear my kids
63:50 - coming down so
63:52 - uh not an ideal situation
63:55 - for live streaming but
63:57 - um
63:59 - if i waited for everything to be ideal
64:00 - then i probably would never live stream
64:09 - okay
64:11 - i got a question will you save the
64:12 - stream yeah the stream the stream does
64:14 - get recorded
64:16 - and it's available to watch uh on the
64:18 - free code camp channel
64:21 - and
64:28 - dragonstone creation says if so many
64:30 - packages are outdated in a short time
64:31 - when building a huge project uh won't it
64:34 - be a problem yeah it's definitely a
64:36 - problem uh so i
64:38 - actually yesterday at my my job i went
64:41 - through two of the the apps that were
64:44 - building
64:45 - and i i upgraded all of the packages
64:49 - and i do that pretty regularly because
64:52 - if you wait like we've done here in this
64:55 - project until
64:56 - you get so many things outdated you can
64:58 - see there's a lot of errors that we're
65:00 - working through
65:02 - so it's much easier to say like okay
65:05 - i'm gonna go through
65:07 - and you could just set a time for your
65:09 - project if you really want to like all
65:10 - right once a month i'm going to check or
65:13 - you know whatever amount of time you set
65:16 - you can say i'm going to check the
65:17 - projects
65:18 - if there are some packages that are like
65:20 - really
65:21 - like
65:22 - key packages that you're using you might
65:24 - want to just say every time there's a
65:25 - new release i'm going to read through
65:27 - the release notes see what what
65:30 - is happening
65:32 - if there were less packages we probably
65:34 - would have done that we probably would
65:36 - have read through the release notes on
65:38 - github and seen if there were any
65:40 - breaking changes and then tried to fix
65:42 - those
65:43 - according to the instructions
65:45 - uh that
65:46 - the the um
65:48 - package maintainers set
65:51 - so
65:52 - in this case there was just too much so
65:56 - i thought hey let's just go for it
65:58 - see what happens
66:00 - um
66:01 - also you know this this isn't
66:03 - like um
66:05 - a critical application or anything like
66:06 - that so we could afford to break it okay
66:09 - but yeah in a big app that's like
66:10 - actually in use you'd want to stay on
66:13 - top of this and not let your stuff get
66:14 - out of date
66:19 - um
66:20 - servant says are you coding with expo uh
66:23 - not for this particular project but i do
66:25 - code with expo pretty much every day i
66:28 - do i like expo uh if you're not sure
66:30 - what expo is it's uh
66:32 - it's a set of tools i guess that help
66:35 - you
66:36 - build with react native
66:38 - react native is a way to use react to
66:41 - build
66:43 - mobile apps primarily mobile apps you
66:45 - can build other stuff with it too but
66:47 - the
66:48 - number one use case is android and ios
67:14 - anderson uh silva says i'm a software
67:17 - engineer at google that's awesome
67:20 - i um i did interview with google
67:23 - uh this was probably a year ago and i
67:26 - made it all the way to like when you get
67:28 - on campus and do like uh
67:31 - you know i think it's like five
67:32 - interviews on campus in a day uh but i
67:35 - didn't make it past there so maybe one
67:37 - day i'll interview with him again we'll
67:38 - see but
67:40 - um that's cool
67:45 - i did actually i did a video about it
67:47 - too so if you wanna if anybody's
67:48 - interested in what it's like to
67:50 - interview at google you can check it out
67:52 - uh so i i think it's on the free code
67:54 - cam channel it's also on my channel so
67:56 - uh
67:58 - if you like this stream and want to see
67:59 - more stuff you can check out
68:01 - uh my youtube channel the links in the
68:04 - description
68:19 - uh fred mentioned my node version
68:21 - that i need node 10 plus
68:24 - so
68:27 - i think this is when we were dealing
68:28 - with that
68:29 - that first error that decorator error
68:31 - okay so uh
68:32 - i'm not exactly sure what node version
68:34 - i'm running
68:36 - on my machine right now but i don't know
68:38 - that that would matter
68:42 - would that matter
68:44 - for
68:48 - because i think because we're trying to
68:50 - use it client-side it wouldn't
68:53 - necessarily matter
68:55 - server-side it definitely would
69:20 - luisi's his eunuchs and diamonds are
69:23 - forever
69:26 - actually that's pretty much true eunuchs
69:27 - is everywhere
69:34 - uh cherry vanilla asks what language
69:36 - this is javascript
69:58 - says can we add babble rc to normal
70:00 - react projects
70:03 - oh well i wish i would have seen that
70:05 - earlier because um
70:09 - that that actually was part of our issue
70:11 - is that you can't just add a battle or c
70:13 - to normal recreate react app projects
70:16 - right you have to do
70:20 - customize create react ad so
70:23 - good catch on that one
70:30 - uh charbelle says how will the web
70:32 - editor compile code that's a great
70:34 - question and uh so actually we're using
70:36 - uh service workers
70:38 - so like the compile stuff happens here
70:41 - in our babelworker.js
70:45 - so
70:46 - it basically like
70:49 - we're taking what
70:50 - what happens
70:52 - like
70:54 - on your local machine
70:57 - when you
71:00 - so uh there is a
71:02 - there is a package called react native
71:04 - web which takes react native and
71:08 - converts it into
71:10 - um
71:12 - basically html css and javascript that a
71:15 - browser can use
71:17 - but it does that
71:18 - right locally on your machine
71:20 - so we're taking that
71:23 - and using it
71:24 - in a service worker
71:27 - so that it happens every time you type
71:30 - in
71:32 - something
71:33 - uh in your browser
71:35 - right so like it's it's really cool but
71:37 - that's basically that's how we get it to
71:39 - work is like in place of your local
71:41 - machine
71:42 - we have a service worker running
71:48 - okay
72:05 - uh anderson silva says why are you using
72:08 - a dark theme github
72:10 - uh i just i like dark theme
72:14 - so
72:15 - yeah i have the dark theme github
72:18 - theme so it's
72:19 - [Music]
72:20 - i'm just using a tamper monkey script
72:22 - it's if you look up github dark i think
72:25 - you'll um you'll see like
72:28 - instructions for how to do a github dark
72:30 - theme
72:32 - i just prefer it
72:34 - especially when i'm coding like i have
72:35 - the dark theme on my code editor and to
72:37 - switch to github like it's just this
72:39 - flash of bright
72:41 - uh it when you have the white background
72:43 - so it's better to have as for me at
72:45 - least i prefer to have as much stuff as
72:47 - i can on the
72:49 - dark mode
72:51 - easier on my eyes
72:58 - anderson silva says you don't like linux
73:01 - i like linux
73:08 - oh man and fred fred came through with
73:11 - the uh
73:12 - syntax to disable
73:14 - eslint disable next line so thank you
73:16 - for that i didn't see it in the comments
73:19 - but that would have been helpful
73:21 - um
73:22 - i need to get back in the hang of live
73:24 - streaming since it's been a while of
73:25 - like glancing back and forth at the
73:27 - comments um
73:30 - i'll get there
74:00 - uh looks like there's a lot of
74:02 - discussion about
74:04 - in the chat so i'm still i'm scrolling
74:06 - through looking for questions
74:14 - auggie says hello jesse i'm from
74:16 - indonesia i love to watch yuko's awesome
74:19 - thanks
74:21 - thanks for watching
74:23 - uh
74:25 - let's see you have a question wrote
74:28 - ronique not sure how to pronounce that
74:30 - for sure so apologies if i'm
74:31 - mispronouncing that but anyway it says
74:33 - which platform is easier to deploy from
74:36 - react native or expo i have two mobile
74:38 - apps i want to build i am familiar with
74:39 - react and i have created a simple react
74:42 - native app
74:44 - right unclear
74:46 - all right one clear which is better
74:48 - um i think expo
74:51 - makes it uh easier to deploy like in
74:54 - terms of actually deploying to the app
74:56 - store to deploy and update
74:58 - uh so i would check out expo
75:01 - in general when you're using react
75:03 - native i recommend always using expo
75:06 - unless you have some reason like
75:08 - something you need to do in your app
75:10 - that you can't do
75:11 - with expo and even then you could always
75:14 - start with it and then eject
75:17 - but
75:18 - there
75:19 - there are so many
75:20 - expo handles so much for you um
75:24 - that it just kind of makes it a
75:27 - nicer developer experience
75:29 - so definitely recommend
75:31 - using that for react native
75:35 - [Music]
75:47 - um
75:49 - that boss says do you have a telegram
75:51 - channel or group i don't think we have a
75:53 - telegram
75:54 - i'm not 100 sure like i definitely don't
75:57 - for the live stream
75:58 - i don't know if free code camp does does
76:00 - anybody know free code camp has a
76:02 - telegram
76:05 - it's possible that we do and i just
76:06 - don't know about it
76:10 - um
76:11 - if i want to be an effective full stack
76:13 - developer should i take a cyber security
76:15 - course to be an effective full stack
76:17 - developer
76:18 - uh i don't think it's necessary to take
76:20 - a cyber security course
76:22 - to be full stack
76:24 - um if that's with what you're into and
76:27 - you want to like
76:28 - specialize in that that's fine it
76:31 - definitely wouldn't hurt you but i
76:33 - wouldn't say it's necessary
76:54 - uh santo says can you please use
76:57 - dart mode for browser
77:01 - [Music]
77:03 - dark mode for browser
77:05 - i thought i was using dark mode in my
77:07 - browser i'm not sure santu could you
77:08 - elaborate on that question
77:17 - uh jamal asked would getting a
77:18 - certificate be better than getting a
77:20 - degree because i'm in college and a
77:21 - little lost because of it uh it it
77:24 - depends on what you want to do jamal
77:26 - really um
77:27 - if you want to do like
77:30 - web development
77:32 - then
77:33 - you probably you know don't need a
77:36 - degree you could get and you don't need
77:38 - a certificate either
77:40 - you just need a portfolio you need some
77:42 - experience
77:45 - uh but different different aspects of
77:48 - like coding it it
77:50 - it just depends so like
77:53 - it depends on where you're at
77:55 - what country you're in
77:58 - certain
77:59 - certain places or certain industries
78:01 - still prefer a degree
78:03 - um
78:04 - so you would definitely need to i would
78:06 - need more information let's say to be
78:08 - able to tell for sure right like can you
78:11 - get a good job without a
78:13 - without a degree yeah definitely in
78:17 - in uh some in some type of coding
78:22 - um
78:24 - but if there's something you really
78:25 - specifically want to do then
78:28 - it may be more helpful to get a degree
78:31 - maybe not
79:07 - uh thomas says do you all understand
79:09 - what he's coding i'm new to coding and i
79:11 - have no clue uh thomas don't worry about
79:13 - it like feel free to ask any questions
79:16 - we did just we like we just jumped into
79:18 - this project so
79:20 - um
79:21 - it's it's definitely okay to be a little
79:23 - bit confused like in reality like
79:27 - this is
79:30 - like i'm a little bit lost right we're
79:33 - trying to work through bugs and
79:34 - everything
79:35 - uh so that's
79:37 - uh
79:38 - totally
79:39 - understandable um to be a little lost
79:42 - all right we're just like jumping right
79:44 - back into
79:45 - a project
79:47 - that
79:48 - we haven't some of you have not seen it
79:50 - all before i haven't looked at it in
79:52 - four months so
79:54 - um
79:55 - that's a that's a legitimate
79:57 - uh feeling to have
80:37 - uh
80:38 - let's see
80:40 - just trying to scroll through and find
80:41 - actual questions there's a lot of a lot
80:43 - of comments and stuff
80:59 - uh thomas says uh not a question but
81:02 - just wanted to say thanks for teaching
81:03 - me a lot of concepts that i know now uh
81:06 - your videos have been very helpful thank
81:08 - you i appreciate that
81:14 - um
81:16 - lupendra says is there any relation or
81:19 - similarity between react js and react
81:21 - native uh yeah definitely so
81:23 - um
81:27 - a lot of the concepts are the same um so
81:30 - like the way you handle state
81:32 - uh is the same in react.js and react
81:35 - native uh like the structure of the the
81:39 - jsx syntax is the same uh so uh honestly
81:43 - they're
81:45 - react native and react in terms of how
81:49 - you develop things like from the
81:50 - developer perspective
81:53 - uh of trying to build something with
81:55 - them
81:57 - are very very similar
82:00 - so um
82:01 - you know you're just you're using
82:03 - components
82:04 - to build apps
82:07 - the differences
82:10 - are mainly in
82:12 - what components you can use right so in
82:15 - react you can use what we call like dom
82:18 - primitives so divs spans
82:21 - p tags h h tag stuff like that
82:25 - you can't use that in react native
82:27 - so that's that's probably the biggest
82:29 - difference
82:30 - when you're developing right so there
82:32 - are other tags that come with react
82:35 - native that you would use in in that
82:37 - place but like
82:39 - if whether you start with react native
82:41 - or if you start with react switching
82:43 - from one to the other
82:44 - is
82:45 - not very difficult
83:10 - uh gavin says have you used ionic with
83:13 - react what do you think of it i've never
83:15 - used ionic with react
83:17 - i did use i've used ionic but this was
83:20 - probably like i don't know six years ago
83:23 - i used ionic so i thought it was really
83:26 - cool
83:27 - when i did use it
83:28 - um
83:30 - i probably wouldn't use it now uh ionic
83:32 - is a way to build um
83:36 - mobile apps with javascript
83:38 - so i probably wouldn't use it ionic with
83:41 - react if i wanted to build
83:44 - a mobile app
83:45 - using react i would just use react
83:47 - native
83:50 - so
83:51 - i don't know unless there's some
83:54 - benefit to using ionic with react that i
83:56 - don't know about that's which way i
83:58 - would go
84:01 - if i if i wanted to use java some other
84:05 - javascript framework
84:06 - to build a
84:08 - an app then i probably would go with
84:10 - ionic
84:21 - all right i'm getting down towards the
84:23 - end of the chat
84:26 - so
84:33 - let's see i'm trying to find the
84:35 - questions here
84:36 - okay here's one um
84:39 - why most of programmers are arrogant
84:42 - i don't know
84:45 - i don't know are programmers arrogant um
84:49 - maybe
84:51 - i don't i don't really know
84:55 - maybe that's a psychology question
84:57 - that's not my my area so i hope i don't
85:00 - come off as arrogant
85:02 - if i do i apologize
85:11 - uh there's some uh i saw a few questions
85:13 - about people saying i just joined the
85:15 - stream what are we doing um
85:17 - check out
85:18 - the uh recording
85:20 - and
85:21 - you know go back to the beginning and
85:23 - then uh you'll get a good explanation of
85:24 - what's what's happening
85:34 - uh the i.t thinker says where are you
85:36 - reading the questions from i'm just
85:38 - reading them from the chat so i'm just
85:40 - scrolling down through the chat log and
85:42 - uh and reading the questions
85:46 - decoder says hey i cannot find any of
85:48 - these questions in this chat
85:50 - um
85:52 - yeah maybe it was because i was way back
85:54 - at the beginning of the jet
86:04 - okay
86:05 - is it possible to convert angular to
86:08 - react developer
86:10 - okay so you mean like you
86:12 - you're an angular developer and you want
86:14 - to become a react developer yeah i mean
86:16 - that's definitely possible
86:20 - if the question is is it possible to
86:21 - convert an angular app to a react app
86:24 - then that that would be pretty difficult
86:27 - you would have to like basically rewrite
86:29 - it
86:34 - okay and now the question is which is
86:35 - better angular or react
86:37 - um
86:40 - that it just entirely depends it depends
86:43 - on what you're trying to build um
86:46 - what your team is good with or what
86:48 - you're good with already
86:51 - so that's
86:53 - that's a tough question to answer
86:54 - without any other
86:59 - any other information
87:18 - let's see
87:28 - uh abby scheck says i'm not able to run
87:30 - c plus in windows 10 what should i do
87:34 - i don't i don't have any experience with
87:36 - trying to run c plus in windows 10 so i
87:39 - unfortunately i can't answer your
87:41 - question
87:45 - yeah
87:46 - i don't
87:47 - i don't know the last time i did
87:48 - anything with c plus plus i was in
87:53 - probably in
87:55 - 2009
87:59 - yeah
88:00 - try 2 000 and no it was before that it
88:03 - was probably 2005.
88:06 - so it's been quite a while since i've
88:07 - done anything with c plus plus so
88:09 - uh
88:11 - sorry i can't
88:13 - can't help with that
88:15 - um
88:16 - how many days to learn react oh i i
88:19 - don't know it depends on
88:21 - how much you already know um
88:24 - how many hours per day you can
88:28 - you can dedicate to it
88:36 - uh jaeger says why is common.js and
88:39 - import syntax in that file like both of
88:42 - them
88:43 - to take truth i'm not entirely sure why
88:45 - they're both in there
88:47 - i don't remember if i did that or if
88:48 - that was some code i copied and pasted
88:50 - in
88:52 - i don't know
88:57 - uh
88:58 - truong says uh could you teach us soft
89:01 - skills
89:02 - um
89:05 - i don't know about in the stream
89:07 - uh
89:11 - but i guess um
89:13 - i could talk about soft skills maybe not
89:16 - maybe that would be like better for a
89:18 - video like on my channel
89:20 - i do more like um
89:23 - recorded video tutorials maybe that
89:25 - would be good
89:27 - but it's hard to teach like i could talk
89:29 - about it but teaching it would probably
89:30 - take like a lot of actual like practice
89:33 - and experience and stuff
89:44 - uh carlos says i just want to say thank
89:45 - you for sharing your time and knowledge
89:47 - keep up the good work oh thanks i
89:48 - appreciate it and thanks for watching um
89:52 - abhishek says can you assure can can you
89:54 - talk about the stability of a job
89:56 - without a degree
89:58 - um
90:00 - yeah honestly i
90:03 - here's the way i feel about job
90:04 - stability
90:06 - with or without a degree
90:08 - it seems like
90:12 - at least so i'm coming from the united
90:14 - states um i live near pittsburgh in the
90:17 - united states so it may not
90:19 - it's it's probably different in other
90:21 - places but it seems to me like
90:24 - like i personally don't count on
90:27 - stability uh in my job so um i
90:31 - i'm always trying to be ready like
90:34 - try to keep my res
90:36 - my resume my linkedin updated try to
90:38 - keep my skills updated and
90:42 - because
90:46 - i don't count on always being able to
90:48 - work at the same place that i'm working
90:51 - uh so
90:52 - you have companies like if you're at a
90:54 - small company small companies got a
90:56 - business or get bought out like
90:59 - all the time right so
91:03 - you're probably not going to have much
91:04 - job stability if you're at a startup or
91:07 - a small company but even large companies
91:10 - they they change things they restructure
91:13 - they you know they fire employees
91:16 - things change so frequently
91:19 - that
91:21 - i just
91:22 - think it's better to assume that no
91:24 - matter what
91:26 - you're probably not going to have much
91:28 - job stability right so
91:31 - my assumption for myself is that i'll
91:34 - probably change jobs every few years
91:37 - um
91:39 - and so i just try to keep myself
91:41 - prepared for that
91:43 - so
91:44 - just making sure that i keep track of
91:46 - like what is the most in demand
91:48 - uh what are the most in demand skills
91:50 - right now
91:52 - what should i be learning
91:54 - like trying to go to conferences and
91:57 - um
91:58 - talk to people like in terms of
92:00 - networking and stuff so
92:04 - that's how i i feel i don't i don't know
92:07 - that having a degree
92:09 - would it like in the software
92:12 - engineering field i don't know that
92:13 - having a degree would make you
92:16 - have more or less job stability
92:19 - in other fields like in general just in
92:21 - life
92:22 - having a degree probably would help you
92:24 - to get more jobs because there's still a
92:25 - lot of jobs out there that
92:27 - they just want a degree no matter what
92:28 - even if it doesn't make sense for you to
92:30 - have a degree
92:32 - but if you want to stick with software
92:34 - engineering
92:36 - once you get to the point where you have
92:37 - some job experience the degree really
92:40 - doesn't matter that much for most
92:42 - software engineering jobs
92:49 - hopefully that answered your question
92:54 - um
92:55 - donae says what is best between an
92:57 - android app or a single page app
93:01 - um
93:02 - that
93:03 - that really kind of depends like um
93:06 - on what what you're trying to do
93:08 - uh a single page app would run in the
93:10 - browser
93:12 - um
93:12 - obviously so like an android app is
93:14 - gonna be a mobile app for the phone so
93:17 - it
93:17 - it's i don't know that it's a question
93:19 - of what's the best in general it would
93:21 - be like
93:23 - what what is the goal like what's the
93:25 - what is the app which is supposed to be
93:26 - doing what's the goal
93:32 - um
93:34 - visager says what's the best place for
93:36 - finding a job online for angular or
93:38 - react um
93:41 - this is the places that i like to go for
93:43 - finding a job online so uh
93:46 - believe it or not twitter is a good
93:48 - place if you like let people know on
93:51 - twitter that you're looking
93:53 - i've had a lot of
93:55 - a lot of
93:57 - good luck with uh
94:00 - people contacting me about jobs on
94:02 - twitter
94:03 - uh linkedin
94:05 - uh there's a
94:08 - place what is it called zip recruiter
94:12 - zip recruiter um
94:15 - i like it because
94:17 - they show a lot of like salary
94:19 - information which is good to know
94:23 - like up front
94:25 - and then
94:27 - stack overflow has a job site
94:30 - so those are probably the places that
94:32 - i would recommend
94:34 - uh looking
94:35 - it but that's coming from somebody in
94:37 - the united states if you're in different
94:39 - parts of the world i don't know how
94:40 - helpful those places are there might be
94:43 - other websites that are better
94:45 - but that's where i would
94:46 - i would check
94:50 - uh amir says react native or flutter
94:53 - uh i haven't used flutter so i don't
94:55 - really think i could give a good
94:56 - comparison i do really like react native
95:00 - i've heard good things about flutter but
95:02 - like i just
95:04 - i don't know enough about it i think to
95:06 - really do a good job of of talking about
95:09 - why you would want to use it or not use
95:11 - it compared to react native
95:16 - jmo vlogs says what's your favorite
95:19 - coding language
95:20 - i like javascript i mean it's
95:24 - it's what i code with most often not
95:27 - that i don't like other languages but if
95:29 - i had to pick a favorite i'd probably
95:30 - say job is good
95:35 - um
95:37 - or do novels says can can we watch a
95:39 - recorded version of the session yep the
95:41 - recording will be available
95:42 - probably just a few minutes after i end
95:44 - this one
95:57 - let's see
96:08 - um all right abby scheck says who gets
96:12 - more salary a person with or without a
96:14 - degree
96:15 - and this is from india so i to be honest
96:18 - with you i don't know very much at all
96:19 - about the job market in india so i don't
96:21 - know that i can answer that question
96:25 - so
96:27 - uh if there's anybody from india that
96:29 - has any experience with that please you
96:31 - know maybe uh throw an answer out here
96:33 - or if you're watching the recording
96:35 - maybe later on
96:36 - in the uh
96:40 - in the comments
96:46 - um pat
96:47 - patsell says uh great job how can i how
96:50 - can i become a good programmer can i do
96:52 - that by reading people's code
96:54 - yeah reading other people's code
96:56 - definitely helps give you more ideas
96:58 - about how to do things
96:59 - but i would say more than just reading
97:01 - it is like actually working with it so
97:03 - like if you see an open source project
97:06 - like
97:07 - i think it's even more helpful instead
97:09 - of just reading it try to actually
97:11 - contribute to it
97:13 - then you really start to understand it
97:15 - like how it works
97:16 - and i think that will help you to become
97:19 - a better programmer
97:20 - because you'll
97:22 - hopefully pick up on all the good ideas
97:24 - that other programmers are having and
97:26 - like start incorporating that into your
97:28 - project
97:30 - i know like i i worked on an open source
97:33 - project recently
97:35 - i did some streams on it on my youtube
97:37 - channel it was the react native async
97:40 - storage package
97:41 - and that package was using typescript
97:44 - and so i had to learn typescript to
97:45 - contribute and now i've incorporated
97:47 - typescript into
97:49 - my other projects so it's like i kind of
97:52 - absorbed some of that
97:54 - and and just
97:56 - you know it's made my code better by
97:59 - contributing uh to this other project
98:05 - uh let's see
98:07 - i gotta make sure i keep track of time
98:08 - so i can work all right so we'll do a
98:11 - few more questions uh before i wrap this
98:13 - up
98:14 - um let's see he had a job as a junior
98:17 - dev for eight months and left on good
98:19 - terms i know front end with ujs would
98:22 - you learn back end to go full stack or
98:24 - just look for another front-end position
98:26 - um
98:28 - honestly like if i needed to find a job
98:30 - i needed money i would just look for a
98:32 - front-end position and like try to learn
98:35 - as i go uh if
98:37 - like i really wanted to go full stack
98:39 - and i didn't need a job right away then
98:41 - yeah maybe learn
98:42 - learn back end but so it kind of depends
98:44 - on your situation
98:49 - um can you talk about coding bootcamp
98:52 - thank you i have never done a coding
98:53 - bootcamp so i don't know that much about
98:55 - it my wife did do a coding boot camp and
98:58 - she loved it and she got a job right
99:00 - away
99:01 - um so she did the flat iron school
99:04 - boot camp
99:05 - so
99:06 - i think boot camps can be really helpful
99:09 - but you got to make sure you're going to
99:10 - a good boot camp so do your research
99:12 - first
99:14 - and probably like
99:17 - see you
99:19 - check out where the people are working
99:22 - that have gone through that boot camp
99:24 - right because that's the proof of
99:25 - whether or not the boot camp is gonna
99:27 - get you ready for a job like have people
99:29 - already gone through this boot camp and
99:30 - gotten jobs
99:32 - uh and don't just look at what the boot
99:34 - camp says like
99:36 - look at their
99:37 - people who've actually gone to the boot
99:38 - camp you know and like maybe try to
99:41 - reach out to him on twitter or something
99:43 - and say like hey you did this boot camp
99:45 - like what did you think of it
99:57 - um jmovlog says where's the best place
100:00 - to find conferences talks networking
100:02 - opportunities
100:03 - um
100:04 - let's see
100:08 - you can uh so this might be a weird way
100:10 - to look for conferences but if you go to
100:12 - papercall.io
100:16 - you can search for uh conferences and
100:18 - events and you can search by keyword so
100:20 - you could type in like javascript to
100:21 - react and you could find a bunch of
100:24 - conferences and events
100:25 - um
100:28 - uh there i think it's just tech
100:29 - conferences that they have on there
100:31 - so that might not be a bad way to to
100:33 - check it out
100:42 - andre says
100:44 - i'm assuming this is the question is do
100:46 - i really need to use redux in all react
100:47 - projects you definitely don't need redux
100:50 - in
100:50 - all your react projects
100:52 - so i
100:54 - i rarely use redux in my react projects
100:56 - i only use redux if it gets to the point
100:58 - where it's really the state management
101:00 - starts to get very complex and i feel
101:02 - like it could be helpful to use redux
101:11 - let's see
101:13 - xeno says for half hour i just listened
101:15 - and watched slot of nothing
101:17 - um yeah the at the end of the uh stream
101:20 - we just do question and answer so
101:23 - um
101:26 - yeah so if the coding is the first part
101:29 - of the stream second part is question
101:30 - and answer
101:41 - uh cyberworld asked to when do you start
101:42 - your coding coding is the first so like
101:44 - we're done with the coding at this point
101:46 - so
101:47 - um
101:53 - uh mulik says can you tell me the
101:56 - learning curve to be a front end dev for
101:58 - example html css js likewise yeah i
102:01 - don't know
102:03 - i don't know exactly how to
102:04 - explain the learning curve i guess but
102:06 - yeah like that's that's the way you'd
102:08 - want to go right like if you want to be
102:09 - a front-end developer start with html
102:11 - css javascript then uh maybe check out
102:15 - some sort of framework
102:17 - um
102:18 - like once you learn html css and
102:20 - javascript i would like start building
102:21 - stuff
102:24 - don't wait to actually build stuff
102:27 - and
102:28 - then
102:29 - then you'll start to get a feel for like
102:31 - oh you know i'm doing this
102:33 - this thing over and over again maybe
102:34 - there's some library that does it for me
102:36 - right that's kind of like
102:38 - um
102:40 - i think you kind of naturally
102:42 - need
102:43 - to branch out
102:45 - or want to branch out and learn other
102:47 - libraries and things
103:02 - okay
103:07 - yeah zeno um
103:09 - so i'm yeah i'm not going to code
103:11 - anymore for this stream so like for the
103:13 - first hour we code and then after that
103:16 - we uh
103:17 - do question and answer
103:21 - all right all right last question and
103:24 - then we'll be done it says why react and
103:26 - not view
103:27 - um
103:28 - i i work with react i know react
103:31 - i don't know of you i mean that's really
103:33 - it like i
103:35 - so
103:36 - i work with react at my job
103:38 - and i've been working with react for a
103:40 - while so
103:42 - um that's what i'm good with so that's
103:44 - what i'm gonna work with um
103:46 - if you use a good framework as well i
103:48 - haven't done anything with it but i've
103:49 - heard good things about it
103:51 - so
103:53 - but yeah that's why we're doing we don't
103:55 - react stuff you wouldn't want to watch
103:56 - me do a view stream because i'm no good
103:58 - with you i don't know anything about it
104:01 - all right so anyway thank you so much
104:02 - for watching
104:04 - i'm going to try to stream more
104:05 - regularly um now and get back into it
104:08 - and um
104:12 - yeah so i'm trying to put us today
104:14 - friday yeah so have a great weekend
104:16 - hopefully i'll stream again next week
104:18 - and uh
104:21 - yeah if you want
104:25 - i don't know if i have this up on github
104:27 - yet yet or not i was going to say if
104:29 - anybody wants to try to like load this
104:31 - and work on these bugs feel free
104:33 - but i'm not sure if i have this up on
104:34 - github
104:36 - if i do have it up on github the link
104:37 - will be in the description
104:39 - uh if not i'll try to get it up there
104:41 - and throw the link in the description at
104:42 - some point soon so
104:45 - anyway until next time have a great
104:47 - weekend thank you so much for watching