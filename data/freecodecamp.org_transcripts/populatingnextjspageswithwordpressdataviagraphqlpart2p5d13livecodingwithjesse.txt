00:08 - hey everybody welcome to live streaming
00:10 - with live coding with jesse and i'm
00:12 - jesse sorry i was a few minutes late
00:16 - thanks for your patience
00:18 - so
00:19 - today before i start
00:22 - anything we've got important business
00:25 - so star wars came out if anybody has
00:28 - seen star wars do not say anything about
00:31 - it
00:32 - to me
00:33 - in this chat or
00:36 - at all i'm gonna go see it tomorrow
00:39 - so
00:40 - if anyone says anything about star wars
00:43 - about the new movie or anything that
00:45 - happened in it
00:46 - then you will be permanently banned from
00:48 - the live chat
00:50 - so
00:52 - no spoilers
00:54 - alright so now that that that's out of
00:57 - the way
01:00 - um
01:03 - we have um
01:07 - we have some data coming in now so i've
01:09 - um
01:12 - i've got some stuff working i'm going to
01:13 - show you it's not working exactly how i
01:16 - want it to uh so we'll have to work on
01:18 - that but
01:19 - i'll show you what we have harshit's
01:21 - done a
01:22 - regular expression
01:24 - that achieves everything that we wanted
01:26 - to achieve
01:27 - from what we were talking about
01:28 - yesterday we'll have a nice slug that
01:30 - matches the current site so that the
01:33 - urls are not broken
01:35 - uh for the new site
01:38 - uh also uh just a little update i have
01:41 - been promising for a while to do a video
01:44 - uh review of the udacity react
01:46 - nanodegree so i did one yesterday
01:50 - and unfortunately when i went to look at
01:52 - the recording
01:54 - my face was cut off like from here
01:57 - from here up it was cut off so you could
01:59 - only see my mouth
02:02 - so i did what it i mean i it came out
02:05 - pretty nice in terms of content uh but
02:09 - i can't use it so
02:11 - uh hopefully it maybe i'll try to
02:13 - re-record that soon while it's still
02:15 - fresh in my mind and uh and get that up
02:18 - on my own channel but i know a few
02:20 - people had asked about that
02:23 - so i just wanted to give you all an
02:24 - update
02:26 - um
02:28 - okay
02:29 - let me check the live chat quickly
02:31 - before we start
02:37 - let's see
02:50 - okay um it looks like
02:54 - somebody mentioned
02:57 - net neutrality
02:59 - rook did yeah so i'm sure you all have
03:01 - been hearing about the net neutrality
03:02 - thing
03:06 - yeah
03:07 - i guess
03:09 - i don't really have that much of a
03:11 - comment on it because
03:13 - it happened
03:14 - it got repealed
03:16 - i really can't do anything about it uh i
03:18 - mean i know it's good to you know sign
03:20 - petitions and call and all that but at
03:22 - the end of the day
03:24 - they didn't really listen to people that
03:26 - did that so i don't i just don't know
03:28 - what to think about that
03:30 - um so
03:33 - it still might
03:35 - it might be mitigated depending on what
03:37 - else happens with the government but
03:41 - my opinion on this is
03:45 - personally for me is
03:47 - trying to figure out ways to work around
03:49 - it if the worst happens of what is
03:52 - possible with this so
03:54 - um
03:56 - yeah
03:57 - because ultimately
04:02 - if the government says it like that's
04:03 - how it's going to go businesses can do
04:05 - what they're going to do so
04:07 - we just got to figure out some way to
04:08 - deal with it so anyway that's where i'm
04:10 - at now with that
04:16 - so i don't know uh we'll just have to
04:18 - see how it
04:20 - how everything goes i i only have one
04:23 - internet provider where i'm at uh so
04:26 - i don't really have a choice so whatever
04:27 - they do i'm gonna have to deal with
04:28 - unless i can figure something else out
04:31 - so
04:32 - i'm kind of hoping that
04:34 - my internet providers behind the times
04:36 - on everything like way behind the times
04:38 - like you couldn't even
04:41 - they didn't even accept credit card
04:42 - payments for a really long time
04:44 - so i'm hoping that they're still so
04:46 - behind and they just don't even change
04:48 - anything
04:51 - so that's that's my hope now
04:53 - anyway
04:56 - i just uh i'm no expert on that so i
04:59 - just don't want to say too much because
05:00 - i'm sure i'll say something wrong
05:04 - all right so let me
05:06 - i can't forget to switch my screen huh
05:09 - um
05:12 - all right
05:13 - so
05:16 - i guess i could show the regular
05:18 - expression
05:19 - first
05:20 - let me show you that uh because it's
05:23 - pretty cool
05:25 - oops i got it over here okay so
05:28 - i've pushed this up to github so this is
05:30 - that
05:31 - fcc db migrate uh repository
05:36 - on github and now
05:38 - i've added i've just copy and pasted
05:40 - this right from what harshit gave me
05:42 - uh basically we're taking
05:47 - the post content title
05:50 - which
05:51 - if you remember from yesterday we'll
05:53 - have like titles in it like doctor or uh
05:56 - tlr or father so we don't want those in
06:01 - the
06:02 - slug
06:03 - because the original urls don't have
06:05 - those we just want last name hyphen
06:07 - first name all lower case
06:09 - so we take it first thing we do is we
06:11 - make it all lower case then here's the
06:13 - regular expression that checks you can
06:15 - see we're checking for doctor we're
06:17 - checking for father we're checking for t
06:19 - o r
06:20 - and then if we find anything else as we
06:23 - go along that shouldn't be in there we
06:24 - can add it in right with the same
06:26 - pattern
06:28 - so
06:29 - i don't know enough about regular
06:30 - expressions to read everything that's
06:32 - going on but generally this part is
06:37 - pretty easy to understand
06:39 - okay and then we're replacing a space
06:41 - with a dash
06:43 - heart also included commented outs
06:45 - some stuff that just in case we need to
06:48 - reverse the name so
06:50 - right now all the names are in good
06:52 - order but if we come on some that
06:54 - aren't in the right order we could also
06:56 - correct that here
06:58 - so now as
07:00 - this is what we pass in to create the
07:03 - post
07:04 - in wordpress so now we pass in the slug
07:07 - and it's the name so now we have a
07:09 - custom slug and what it ends up looking
07:11 - like
07:12 - let me
07:14 - move some stuff over to another screen
07:17 - uh when i was working on it earlier so
07:19 - let me move it back so what it ends up
07:21 - looking like
07:24 - is
07:25 - this
07:26 - so you can see the slug in this case is
07:28 - haney eric
07:30 - and you can see the title that we
07:32 - originally had
07:34 - was haney
07:35 - comma doctor period eric
07:38 - right so we went from that
07:40 - and then with that
07:42 - few lines that horseshit gave us there
07:45 - it turned it into this so it's perfect
07:48 - exactly what we wanted so now we have
07:49 - the proper slugs
07:52 - and
07:53 - what i've done with that now
07:56 - is so as a test
08:00 - here's what i've done so it's not ready
08:02 - yet so i took i don't know if if you all
08:04 - have looked at
08:06 - the latest updates to the franciscan
08:08 - site repo
08:10 - on github but harshit added this test
08:13 - page to test out graphql and uh and he
08:16 - was doing some other things with that
08:18 - just as a test and it worked but i've
08:20 - gone in now and i've replaced the
08:24 - the test url with the url for our actual
08:27 - wordpress installation
08:29 - into our init apollo file
08:31 - and then in our our test
08:34 - graphql page right so it's in the pages
08:37 - folder here
08:40 - so in our our test file
08:43 - i've added a little bit so i was getting
08:45 - an error that uh it was returning null
08:48 - so i did add this this little bit in
08:51 - here so
08:52 - uh if loading is true it returns
08:55 - loading
08:57 - and then i added
08:59 - this div so there was an h1 there that
09:01 - was displaying some data like a title
09:04 - so i changed and added this also i added
09:07 - this down here so i passed in
09:11 - to sample query as an option
09:14 - i passed in the variable's name
09:17 - all right and that's basically slug
09:18 - right so
09:19 - and i just manually put in haney eric
09:22 - but eventually what i'll do is i'll
09:24 - replace this
09:26 - with the slug that we're going to grab
09:28 - from the url so right now as a test it's
09:30 - hard coded our next step will be
09:33 - to actually use a variable here and you
09:36 - can see in our post.js
09:38 - we have sample query
09:41 - and
09:42 - it
09:43 - has we're passing in name as a string
09:47 - so this
09:49 - then this variable name this dollar sign
09:51 - name goes here
09:53 - so we're looking up the faculty so the
09:56 - the faculty member the faculty post
09:58 - where name is
10:00 - this variable which will end up being in
10:02 - this case haney hyphen eric
10:05 - okay and then i'm just grabbing
10:08 - some data id title slug content and then
10:12 - some data about the
10:13 - departments right which was our category
10:16 - our custom taxonomy if i'm not using all
10:19 - this data right now but
10:22 - eventually i'll probably use it all so i
10:24 - just just added that in
10:27 - and
10:29 - now
10:30 - here's the weird part
10:33 - of what happened so when i did this
10:36 - i was getting a
10:37 - 403 error let me double check that and
10:40 - confirm that it was a 403
10:46 - uh
10:47 - i've had this open for
10:49 - a while and now i can't
10:51 - get back here we go
10:59 - not the fourth
11:00 - okay so four or three
11:07 - let's see
11:10 - yeah that's all maybe i'll
11:12 - um let's get rid of all this and let me
11:15 - refresh
11:17 - so i'll show you what i
11:19 - got
11:21 - so here's what that page looks like
11:23 - um
11:24 - you don't get the image by default
11:27 - because it's using relative urls
11:33 - so you can see we got that loading first
11:35 - and then the data came in so
11:39 - the images right now are pointing to a
11:41 - folder on localhost that doesn't exist
11:44 - so we'll need to figure out what we're
11:45 - going to do with those
11:48 - but we get all the data that was here
11:51 - right so on this page right the images
11:54 - work
11:55 - we have this data
11:57 - but it's all
11:59 - visible by default and so we we have all
12:02 - of this
12:04 - but it's just
12:06 - you have to click it to actually see it
12:10 - and instead of being
12:11 - in in multiple columns it's all just in
12:14 - one column which is fine
12:16 - uh so
12:19 - that's what we got but if we see
12:23 - we're getting some errors here
12:26 - uh so we're getting a 403
12:30 - and
12:34 - i'm not exactly sure what the problem is
12:36 - or what's going on but to be honest i
12:38 - haven't really taken
12:40 - very much time at all to look at it
12:43 - what i've done is simply check where the
12:45 - data is coming in because we are
12:47 - actually getting the data so you could
12:49 - see obviously we got the data but here's
12:51 - how it went
12:53 - we've got
12:55 - this props data
12:57 - error network error result data faculty
13:00 - edges
13:01 - and it's an array so we went with the
13:03 - first of that array and then node
13:06 - content that's how we get to it all
13:08 - so
13:11 - that's
13:13 - that first of all that's a long way to
13:15 - go
13:16 - and a lot to write but also
13:19 - we should not have to go into the error
13:21 - section right
13:23 - so something's wrong
13:26 - uh so we'll have to
13:31 - we'll have to figure that out at some
13:32 - point i mean realistically we can still
13:34 - continue on with trying to style this
13:37 - page
13:38 - but
13:41 - at some point
13:43 - i think we need to figure out you know
13:45 - what's going on here
13:49 - i mean realistically though
13:51 - it works right so
13:54 - it's not really the end of the world
13:56 - uh let me check the live chat because i
13:57 - see a lot going on over there
14:00 - uh see if you all have any thoughts on
14:02 - this
14:17 - okay control you i want to see it uh
14:21 - server side render
14:30 - oh okay so
14:32 - all right you want to see open wordpress
14:39 - all right so what do you want to see in
14:40 - wordpress um
14:43 - harsh it
14:53 - all right while i'm waiting uh for
14:55 - harsha to respond i'll answer questions
14:57 - some questions that i saw
14:59 - uh christopher asks what exactly does
15:02 - net net neutrality mean
15:07 - and um
15:09 - all right so like i'm not an expert on
15:12 - this so please correct me if i'm wrong
15:14 - and don't take this as being like for
15:15 - sure you know 100 accurate
15:18 - but it's my understanding that net
15:20 - neutralities were some rules put in
15:22 - place
15:24 - a few years ago i don't remember exactly
15:26 - when
15:27 - um
15:28 - that were
15:29 - supposed to guarantee equal access to
15:32 - the internet and it restricted internet
15:34 - service providers from
15:36 - like throttling um or blocking different
15:40 - um
15:42 - uh different areas of the internet uh
15:44 - from from doing things like charging
15:47 - more for certain places in the internet
15:50 - um
15:51 - making we're doing things like making
15:53 - websites
15:55 - uh
15:56 - pay for like i mean there's a lot of
15:58 - weird things that could happen in terms
16:00 - of like segmenting out the internet
16:02 - and uh charging different amounts
16:04 - essentially they could block
16:06 - some parts of the internet
16:08 - you know really
16:12 - so
16:13 - my my understanding
16:15 - that's my understanding so now
16:17 - because that's been repealed uh
16:20 - there may be some other legal things
16:22 - that have to happen before corporations
16:24 - could take advantage i'm not really sure
16:27 - but now corporations could potentially
16:29 - segment parts of the internet and make
16:31 - you pay more like if you just want to
16:32 - access your email it's so much a month
16:34 - but if you want to look at facebook you
16:36 - have to pay more if you want to look at
16:38 - you know
16:40 - um
16:41 - youtube you have to pay more netflix is
16:43 - more
16:44 - i mean it could be weird too i mean
16:45 - think of an internet service provider
16:47 - got into the business of um
16:50 - i don't know for instance let's say uh
16:53 - like comcast somehow bought out netflix
16:56 - right it's probably not gonna happen but
16:57 - what if it did happen comcast bought out
16:59 - netflix
17:00 - comcast then allows everybody access to
17:03 - netflix but you have to pay extra or it
17:06 - completely blocks
17:07 - amazon
17:08 - prime video and hulu and youtube
17:14 - right so i mean you could have weird
17:15 - things like that happening
17:17 - it's not unheard of that big
17:19 - um
17:21 - you know
17:22 - companies like internet providers
17:25 - have partnerships or parent companies or
17:28 - something with
17:29 - you know going on with this kind of
17:30 - stuff so
17:31 - that could happen
17:33 - uh one of the arguments
17:35 - i think against net neutrality was okay
17:37 - well if you introduce competition
17:40 - everything will work itself out on the
17:41 - market but
17:43 - my opinion like i said this is my
17:44 - unqualified opinion
17:46 - um
17:48 - is that
17:49 - uh normally i'm i'm okay with the fact
17:51 - that market forces work pretty well um
17:55 - with some exceptions right so
17:57 - sorry i'm gonna go off on a tangent here
17:59 - i apologize
18:00 - um
18:02 - so there's some exceptions to that right
18:04 - and one exception being if you have a
18:06 - monopoly already in place with high
18:08 - barriers to entry
18:10 - okay so
18:11 - basically meaning
18:14 - you have a sorry for explaining this at
18:16 - a real low level but i'm sure most you
18:18 - already know some of this stuff but i
18:20 - want to make sure i don't leave anybody
18:22 - out who's who's not familiar with this
18:24 - so
18:25 - you have an industry for example like
18:27 - let's say the automotive industry right
18:29 - there's only a few big companies that
18:31 - control the automotive industry and it
18:33 - was even worse before you know back when
18:35 - you just had like ford
18:37 - uh was the huge company what was it ford
18:40 - and
18:42 - was it
18:43 - chevrolet were those the big ones i
18:44 - can't even remember now but back in the
18:46 - day those were like the huge companies
18:48 - and the barrier to entry to get into
18:50 - making automobiles was huge because
18:53 - it cost so much for all the machinery
18:55 - and everything like it's a big barrier
18:57 - entry there's still a big barrier to
18:59 - entry to get in but not as bad as it was
19:01 - so in that case it may it would make
19:03 - sense for the government to step in
19:06 - and
19:07 - regulate that a bit
19:10 - so that it would make it easier for
19:12 - competition
19:14 - to come in right and it would protect
19:17 - consumers from let's say like
19:19 - the price is being jacked up because
19:21 - they had no
19:22 - no options right
19:25 - so
19:27 - with the internet the same thing is
19:29 - happening i think right so for me i
19:31 - don't have any options for the internet
19:33 - right so
19:35 - for me what will happen is if there's no
19:37 - regulations i'll have to accept whatever
19:39 - my internet service provider gives me
19:41 - because i can't go anywhere else
19:44 - okay
19:45 - it would be
19:46 - more reasonable to repeal net neutrality
19:49 - if people legitimately had options you
19:52 - know if everybody everywhere had let's
19:55 - say 10 different companies that they
19:57 - could go with
19:58 - that gave equivalent service
20:01 - then you could reasonably think okay
20:03 - well if one company does this people
20:06 - just go elsewhere
20:08 - and the company that ends up not doing
20:09 - this is going to get all the business
20:12 - that makes sense
20:13 - right
20:14 - you can't jack up your prices or give
20:17 - somebody a worse product if you know
20:19 - your competition is just going to take
20:21 - all your customers but the problem is
20:23 - there's no competition in a lot of
20:25 - places
20:26 - so
20:28 - for some areas i think they'll be okay
20:31 - even with net neutrality repealed as
20:33 - long as there's enough internet service
20:34 - providers that there is still
20:36 - competition but for a lot of people
20:38 - particularly in rural areas
20:41 - it's going to be bad because they have
20:43 - nowhere else to go if the choice is not
20:45 - between two inter inter-service
20:47 - providers it's between having an
20:48 - internet and not having the internet
20:51 - so
20:52 - that's the way that's the way i feel
20:54 - about it so
20:55 - um
20:57 - anyway
21:01 - probably
21:03 - i don't know what's going to happen with
21:04 - it but realistically uh
21:06 - i think the long-term solution to the
21:09 - problem is
21:10 - there has to be more companies
21:12 - that are providing internet
21:14 - something has to happen and whether the
21:16 - government facilitates that a bit
21:19 - you know so be it if it has to happen
21:21 - like that
21:22 - uh
21:23 - generally
21:26 - um and i i studied economics in college
21:28 - so maybe this is some of that coming out
21:30 - but generally i'm against government
21:32 - being too heavy-handed in business
21:34 - because
21:34 - usually they're
21:36 - by the time they actually do anything
21:38 - they're a day late a dollar short so
21:40 - it's like they they're trying to correct
21:42 - problems that really have already worked
21:44 - themselves out in terms of economic
21:46 - stuff and usually their correction ends
21:49 - up causing more problems a few years
21:51 - down the road so
21:54 - i think sometimes it would be better
21:56 - because they're always so reactive right
21:58 - like the problems there by the time they
22:00 - do something the problem's already in
22:02 - the process of working itself out
22:04 - right and in a lot of cases not in every
22:06 - case but in a lot of cases so
22:08 - uh i i think it's a lot of fuss about
22:11 - nothing and they really don't have as
22:12 - much control as they think over
22:14 - economics but in the case of monopoly
22:19 - that is the proper place when the
22:21 - government should step in
22:24 - so
22:25 - in this case i think it would be very
22:27 - reasonable for the government to step in
22:29 - and do something about what's happening
22:31 - and not allow these companies to just do
22:32 - what they want
22:34 - anyway sorry that's my economic uh
22:38 - stream for the day so
22:41 - i'm gonna stop now
22:44 - um all right so back to um a hardship
22:47 - wanted to see the source for wp graphql
22:51 - uh so let's check that out
22:55 - and
22:56 - wp graphql sorry i made you wait for so
22:58 - long harshit
23:00 - uh you could probably see the source
23:02 - code for this as well on their github
23:04 - repo if you didn't want to wait for me
23:08 - i am running version 0.0.22
23:25 - let's see
23:45 - okay christopher said thanks for sharing
23:47 - it uh no problem no problem yeah sorry
23:50 - for anybody who wasn't really interested
23:51 - in hearing that but
23:53 - uh
23:54 - to give a full answer to that question i
23:56 - had to explain myself
23:59 - christopher says will the validity of
24:01 - information be protected still
24:03 - uh yeah that's another issue as well
24:06 - if you have any info that you really
24:08 - don't want other people to know i
24:10 - suggest
24:11 - using
24:14 - a vpn
24:16 - a vpn that you can trust it's a virtual
24:19 - uh private network and you know ad
24:22 - blocking block your
24:24 - block was tracking you things like that
24:27 - um
24:30 - i mean if you don't really have anything
24:31 - that's that interesting that you don't
24:33 - care if people know then don't worry
24:35 - about it but uh potentially you know if
24:38 - you're in a country that
24:41 - um you could get in trouble for the
24:43 - things you do on the internet
24:45 - um
24:46 - then
24:49 - i would maybe definitely think about
24:51 - doing using a vpn
24:57 - yeah and uh yeah my political views i
25:00 - didn't really get political to be honest
25:01 - with you it was more of my my economic
25:03 - perspective which
25:05 - um
25:07 - i actually don't really identify with
25:09 - any of the current political parties in
25:11 - the
25:12 - united states so
25:15 - i have my views on different issues uh
25:18 - that have nothing to do with
25:20 - whatever people from different parties
25:22 - talk about
25:24 - so anyway
25:26 - but i'm not going to talk politics here
25:28 - but yeah my views are my own they do not
25:30 - reflect the views of free code camp or
25:32 - franciscan university of steubenville
25:39 - all right so let's
25:44 - i'm still waiting search four or three
25:46 - in there okay sorry harsh i didn't
25:47 - see that you um that you put that in
25:49 - there it was my fault so i'm gonna
25:52 - search oh no ax
25:55 - thank goodness that um
25:57 - undo and redo work uh in in the browser
26:01 - in chrome
26:03 - uh okay
26:09 - there we go
26:12 - what was it
26:14 - four or three
26:18 - no
26:20 - all right
26:27 - hmm
26:32 - let me go to get him
26:37 - i don't know
26:39 - i really hate using the wordpress code
26:42 - editor so it's just going to be easier
26:44 - i'll find it on github and then i'll
26:45 - look it up in there
26:52 - hmm no 403s huh
26:55 - interesting
27:00 - oh actually that first one looked
27:05 - their error on object clone
27:16 - is that the air i got it looks familiar
27:29 - could not be cloned
27:44 - no that's
28:20 - all right let me look back
28:21 - change default status to 200
28:28 - all right so harsha says i should change
28:30 - my default status to
28:39 - um
28:41 - change the full status of 200.
28:47 - all right
28:48 - so let's figure out where i should do
28:50 - this
28:53 - didn't think i'd be looking through php
28:55 - files today
29:25 - all right well this is
29:28 - no that wasn't it uh that error had to
29:31 - do with the dom
29:33 - um
29:41 - hmm
30:02 - let's see
30:10 - all right so i should
30:13 - where
30:20 - i'm trying to find where to put this
30:22 - default
30:24 - status to 200 i'm not sure where
31:28 - hmm
31:40 - yeah so i'm not finding
31:44 - let's see if
31:47 - status i'm not finding anything
31:50 - in here
31:53 - let's see what other
32:07 - so i wonder
32:09 - what else
32:12 - if there are other files maybe
32:20 - actually let me check
32:22 - let me check what i downloaded here
32:34 - okay yeah so it does have all this stuff
32:47 - all right cool our has a link for
32:49 - me here
32:50 - uh let's check this out
32:55 - thank you harshit
33:01 - public status code 4 3.
33:12 - okay router.php
33:16 - all right let's try to find that then
33:29 - so
33:51 - okay set the default code to 403 to
33:54 - represent unauthenticated requests
33:57 - authenticated request should be set to
33:58 - the status of code to 200.
34:10 - all right so i just need to set this
34:12 - then to 200.
34:28 - all right
34:30 - oh that's a lot of caps
34:32 - i saw it maybe there's just a delay
34:35 - um
34:38 - there must be a delay i think uh
34:41 - hardship between between you and i um
34:45 - but anyway it's it's cool i'm getting
34:49 - i'm getting it all right so let's
34:52 - copy that and change it over so
34:55 - what i'm assuming then is potentially if
34:57 - we use authenticated requests this would
34:59 - have worked without a change right
35:03 - uh but yeah harsha you're right we're
35:05 - only getting data so we don't really
35:07 - need authentication anyway
35:10 - uh so this should be okay to change this
35:13 - we just have to remember if we ever
35:14 - update this plug-in and things don't
35:16 - work we we need to change that again or
35:19 - start authenticating
35:22 - okay
35:23 - i'm not going to copy all that since
35:25 - it's right here
35:30 - update that
35:33 - and now
35:36 - let's see
35:40 - yeah
35:43 - so now we need to change where we're
35:45 - getting the data right
35:49 - so
35:52 - let's see where the data is supposed to
35:53 - be
35:55 - um
35:57 - i guess
35:59 - this will do first
36:12 - um
36:24 - and i saw somebody in a video
36:26 - and they had some command that displayed
36:29 - the json like in a really nice readable
36:31 - way but i can't remember what it was
36:34 - uh
36:35 - so data
36:42 - faculty
36:46 - edges node
36:48 - okay let's do this
36:58 - let's try this
37:09 - there we go oh it was working
37:11 - what's going on now
37:17 - there we go i just had it zoomed in okay
37:20 - cool so now it is working
37:22 - um
37:27 - oh okay cool so uh
37:30 - harshit has um
37:36 - it says json stringify data comma null
37:39 - comma two formats with two spaces
37:42 - uh
37:43 - and then put that in a pre-tag awesome i
37:46 - have to remember that i don't often have
37:48 - to output json you know right to the dom
37:52 - like that
37:53 - uh but
37:54 - that's that's really convenient if you
37:57 - can output it in something that is um
38:01 - uh more readable
38:03 - it it worked out well and even in our
38:05 - case because it wasn't nested that far
38:08 - in the data we needed so it was
38:10 - it was okay
38:12 - all right cool so now
38:14 - let's double check our console just to
38:16 - see
38:18 - to verify that we're not getting errors
38:20 - we should still get errors
38:22 - let me clear that
38:24 - and then refresh
38:27 - we should still be getting errors for
38:28 - the images
38:31 - yeah 404 is for the images
38:34 - and
38:41 - yeah
38:42 - and what else
38:49 - okay this is all fine
38:53 - great all right so
38:56 - now we have this
39:02 - let's think what our nuts oh our next
39:04 - step then is to
39:06 - uh instead of passing
39:08 - just this test string we're actually
39:10 - going to pass
39:12 - uh the variable uh so
39:16 - actually let's go back
39:19 - i'm gonna do this
39:20 - uh let's go in now
39:22 - in our console and
39:26 - let's check react
39:29 - and
39:30 - here
39:33 - let's go with our data
39:35 - variables
39:37 - and then
39:40 - no that's not it that's not what i want
39:43 - um
39:44 - what do we need
39:47 - i should be passing
39:52 - url
39:56 - oh okay i know why this isn't working um
39:59 - what i need to do now is
40:02 - let's grab all this
40:06 - and paste it into faculty
40:12 - and
40:18 - let's see
40:19 - paste that into faculty we're going to
40:21 - change this
40:22 - well let's change every
40:24 - instance of test
40:26 - to faculty
40:28 - and what we should be getting
40:32 - i should have paid more attention to
40:33 - this
40:39 - uh
40:40 - is this id
40:46 - let me see if i can find it um
40:54 - let me just save this for now
40:57 - and then let's go to a page
41:05 - faculty and we're going to go
41:11 - i don't remember how this was
41:12 - e-r-s-h-e-n-n-n-i
41:17 - e-r-i-c okay
41:24 - cool okay so that's what we should have
41:26 - gotten the same data but but the url is
41:28 - different now now here's what we should
41:31 - be getting as well is some extra data
41:34 - here
41:34 - um
41:36 - about
41:40 - props
41:42 - but i can't remember where we get it is
41:44 - it the query there it is okay so router
41:48 - yeah
41:51 - router
41:58 - query
42:00 - id
42:04 - okay so let's try to pass that in then
42:07 - uh
42:08 - oops where's our
42:16 - i had how we did this
42:20 - on the bulletin open on my other screen
42:22 - as well just for reference
42:30 - see
42:32 - let's see if this will work um
42:45 - okay
42:46 - not sure if this will work or not
42:49 - looks like it did not cannot read props
42:51 - of undefined
42:58 - i was wondering if i had access to props
43:00 - there
43:03 - i lost my live chat window here it is
43:06 - okay let me
43:11 - let me check the live chat here
43:21 - okay cool so harsh is saying
43:24 - get into props return query
43:30 - all right so let's put put this in here
43:47 - all right this props
43:50 - query
43:59 - see if that works
44:03 - almost
44:04 - dang it
44:08 - what error am i getting doesn't tell me
44:10 - much
44:20 - okay
44:26 - oh i shouldn't have to return off of
44:28 - that right
44:48 - reproperty props of undefined
44:52 - exactly
44:57 - all right where am i trying to get props
44:58 - at
45:02 - all right what am i doing
45:46 - all right so
45:47 - [Music]
45:53 - static
45:58 - okay
46:00 - so i lost my um my window again
46:04 - all right so yeah we have static guess
46:06 - get initial prop so harsh just let me
46:08 - know
46:11 - um
46:12 - to do
46:13 - static get initial props
46:18 - all right so i've done static get
46:20 - initial props
46:22 - and then
46:28 - okay so we've already done
46:40 - queries
46:43 - scroll to the bottom
46:45 - okay
47:20 - okay i'm trying to uh
47:24 - i'm not sure how much of a delay there
47:26 - is between horizon and i
47:28 - um
47:32 - okay down and then pass
47:37 - and id and then pass it
48:00 - oh okay
48:02 - all right how should let me know i
48:04 - i just realized from your earlier
48:06 - messages
48:07 - um
48:09 - it said destructure id
48:14 - change match
48:20 - to id
48:22 - okay
48:35 - okay
49:06 - probably edges
49:08 - why
49:14 - okay now i'm not getting
49:20 - if you all uh if you can't see the live
49:22 - chat uh harshit's directions to me now
49:25 - are like scroll down scroll up dude
49:28 - i'm just trying to keep up and then
49:30 - there's a delay between us
49:32 - so
49:34 - this might be a good uh application of
49:38 - the um
49:39 - like the pair programming thing where
49:40 - you can both uh like live code together
49:44 - uh like google doc style
50:23 - i know harsha said vs code has that i
50:25 - know i know they have it
50:29 - it's really hot in my office so
50:32 - i'm gonna take off my sweater
50:46 - so
51:00 - okay harsha's saying
51:02 - we got to do something in get initial
51:04 - props
51:31 - uh
51:39 - then i'm not sure what
51:57 - so
52:26 - all right i want to see
52:33 - all right property edges undefined
52:36 - all right i want to see what data we're
52:38 - getting again
53:00 - query id
53:01 - and get an extra browse
53:04 - okay
53:19 - is that where you met harsher
53:21 - that we're going to return query.id
53:40 - are we gonna grab it like here like
53:42 - query
53:44 - id
54:05 - dang
54:08 - there are probably edges
54:12 - hmm
54:36 - okay harsh it's saying return an object
54:42 - he also said come to uh twitter
54:44 - um i'm on my twitter's always open so if
54:47 - you put anything in there i will see it
54:52 - um
54:55 - all right
54:58 - let's
55:02 - let me show you all what we had done
55:05 - previously
55:07 - so
55:08 - preview in the in project one now we
55:11 - weren't using graphql
55:14 - we were using the rest api but when we
55:16 - got get initial props uh
55:19 - we did something like this where we had
55:21 - query and then id and then we were able
55:23 - to use id
55:26 - uh in here
55:28 - and then eventually would we return the
55:30 - data
55:31 - um
55:35 - let's see
55:38 - and the data ended up we you could
55:40 - access it as this props data
55:49 - so if we did that
55:50 - you should be able to access id as this
55:53 - props id
55:59 - right
56:16 - oh goodness who was that rook
56:21 - okay so rook has noticed that our
56:22 - capitalization is off and get initial
56:24 - props so let's see if that has anything
56:27 - to do with it
56:31 - all right so we're actually still
56:34 - we're still getting the same error which
56:36 - is crazy because it certainly should
56:38 - have made a difference
56:42 - um harsh is saying change id to
56:47 - id
56:50 - like this
56:55 - i don't i'm getting the red line so i
56:57 - think that's not gonna
56:59 - still same error what
57:02 - how
57:04 - um
57:05 - is it still type oak
57:13 - i'll get i-n-i-t-i-a-o props
57:17 - all right
57:18 - there we go
57:21 - all right that looks better now
57:28 - no
57:30 - g e t i n
57:32 - i t i a l p r o p s all right so that's
57:38 - that's fine now
58:12 - all right harsh it's saying
58:14 - still return this object id
58:17 - which
58:23 - i don't think
58:50 - i'm going to try to write this exactly
58:51 - how i have it written in the
58:54 - catechetical institute site and it
58:55 - worked
58:57 - static async get initial props
59:07 - let's just go
59:14 - turn it instead
59:30 - all right i'm just spacing this out so i
59:32 - can see
59:39 - why am i getting
59:41 - so many errors
59:47 - so
60:00 - that's weird
60:03 - it's just it's weird that i keep getting
60:04 - the same error no matter what i do up
60:06 - here
60:07 - all right let me see this again so
60:11 - all right
60:15 - i'm going to paste in exactly
60:21 - what i have here
60:24 - and then instead of all this
60:29 - i'm going to return
60:32 - id
60:39 - no
60:44 - all right
60:49 - but then
61:05 - all right let me
61:19 - um
61:29 - oh
61:39 - can i do it like this
62:11 - hmm
62:15 - what did i do
62:17 - messed up some from projects and graphql
62:20 - see twitter alright
62:37 - oh okay
62:39 - closing tag i never put in a closing tag
62:42 - for this h1
62:51 - see
62:58 - okay type string was not provided
63:03 - okay
63:08 - and it didn't show me this props id what
63:11 - is this
63:13 - at least since we didn't error out we
63:14 - can see
63:17 - what we have here
63:20 - let's check out
63:22 - faculty
63:24 - data
63:40 - all right urls
63:42 - url query id
64:09 - i keep forgetting i already have this
64:10 - props
64:11 - destruction
64:13 - all right
64:16 - okay we got it there
64:17 - i wonder
64:19 - if i even need this
64:23 - i don't i don't even need that part
64:27 - okay
64:29 - all right so let's comment it out i have
64:31 - access
64:33 - to this props url query id
64:37 - all right let's see
64:42 - let's see what i can access here
64:45 - um
65:09 - let's see what i have
65:13 - that's not what i wanted
65:18 - james has is web development rewarding
65:20 - uh financially it can be
65:23 - it definitely can be
65:25 - um there are a lot of good jobs out
65:27 - there
65:29 - uh that that pay
65:31 - uh i mean i've seen jobs
65:34 - listed here in the united states that
65:36 - pay over a hundred thousand dollars
65:38 - uh a year plus you know benefits and all
65:41 - that uh for web development
65:44 - but it varies if you're in a small town
65:46 - you know you're not gonna make that much
65:48 - if you're freelancing it just depends on
65:50 - what clients you get you can make a lot
65:52 - less than that or you can make more than
65:54 - that
65:56 - but
65:57 - in general
65:59 - web development is is one of the
66:03 - it pays more than the average job i
66:05 - would say
66:07 - at least in this country i can't speak
66:09 - for what it's like in in other countries
66:43 - yeah okay so rook ass is get initial
66:45 - props not a vanilla react thing can't
66:47 - find it in the react docs
66:48 - it's yeah it's not a vanilla react thing
66:51 - so get initial props is a next js thing
66:55 - so it's used
66:58 - so for instance in this case
67:02 - we've used it
67:04 - here for our um
67:06 - to make our api calls in a way that will
67:09 - still be rendered server side so
67:11 - anything you we do within get initial
67:13 - props in terms of making these calls and
67:16 - getting the data this will be done on
67:18 - the server
67:20 - potentially it could be done on the
67:21 - client as well it works it works both
67:23 - ways
67:24 - and then that data from this call
67:28 - gets added to props here so this props
67:31 - data is now available
67:36 - so
67:37 - it's very useful
67:39 - in
67:40 - to use with next
67:44 - uh in
67:47 - in this case we're not doing you know
67:49 - we're not putting api calls in every
67:51 - component though
67:54 - like that
68:17 - yeah uh wrote notice we were using async
68:19 - await yeah so we're using async await
68:21 - here which did i when i copied it over
68:24 - did i leave the async i think i did we
68:26 - don't really need to
68:28 - um
68:32 - oh you know it doesn't even matter
68:34 - because i
68:35 - i commented this out
68:36 - all right yeah so i didn't need to keep
68:38 - the async and i just didn't realize
68:44 - i didn't realize that i had left it in
68:45 - when i copied it over
68:48 - all right so
68:49 - we're still trying to figure out
68:53 - let's see
69:02 - let's see
69:15 - all right harsh it's asking
69:21 - for this that sample query
69:27 - all right yeah let me or is it
69:33 - let me paste this sample query in there
69:36 - uh in twitter to harsh it
69:40 - it might let me put paste code
69:43 - i wonder if it'll let me paste code in
69:45 - uh the live chat i've never tried it
69:48 - let's see it's gonna look oh no it's too
69:50 - many characters
69:56 - actually it's not bad in in twitter in
69:58 - the direct message if you paste code it
70:01 - actually keeps
70:02 - all your spacing and indentation really
70:05 - nice
70:07 - bruce says
70:08 - your visual studio code looks so amazing
70:10 - with with layouts
70:14 - yeah this
70:15 - i haven't done really that much you know
70:17 - custom with my visual studio code except
70:19 - i switched to the seti theme that's scti
70:23 - so i switched to that theme and
70:28 - i do have a custom you know custom
70:30 - colors
70:31 - uh for my terminal here
70:35 - um
70:37 - that's about it i have
70:40 - the plugins that i have here are just
70:42 - from uh
70:43 - from the react food truck
70:45 - plug-in so you install react food truck
70:48 - and then it installs
70:49 - a bunch of plug-ins that help you out
70:51 - with react
70:53 - i don't even remember what they all are
70:59 - sorry
71:00 - let's keep yawning
71:06 - okay let's go back to our faculty
71:10 - all right so we now have we know we can
71:12 - get
71:14 - the
71:14 - this props
71:17 - query id
71:20 - um
71:22 - we can pass in
71:29 - wait can we pass it in here
71:36 - um
71:42 - this perhaps queen
72:06 - i don't know if this will work maybe
72:08 - this is silly but i thought it was worth
72:10 - a shot
72:12 - no it didn't work
72:14 - um let's see if i
72:20 - can oh
72:49 - i won't have access to that now will i
72:54 - props yeah i didn't think so
72:56 - um
73:12 - so
73:21 - oh no rookie on two
73:24 - it's contagious i have everybody
73:26 - watching yawn
73:33 - all right so let me think why can't
73:36 - i feel like my brain is just stuck here
73:39 - like i've had this problem before
73:42 - and i've solved it before
73:44 - why can't i think of how i've done this
73:46 - before
74:16 - so
74:48 - query wonderful
74:50 - all right so i need to get
74:56 - sure
75:17 - oops
75:24 - all right so
75:27 - let me bring this over that we worked on
75:29 - before which is very similar and it
75:31 - works so
75:33 - in this case
75:34 - uh this is from the bulletin
75:37 - post detail page which plays you know
75:39 - pretty much this
75:41 - it operates in the same way that this
75:42 - page that we're trying to make operates
75:44 - now we have here
75:47 - we're using react router
75:50 - and it makes available this match
75:56 - um
75:59 - slug
76:10 - we're not
76:15 - i don't know that we're doing anything
76:17 - that do i mean other than using next
76:19 - instead of
76:21 - create react app
76:34 - uh irish it's can you paste the
76:38 - the name
76:39 - what do you want me to pay starship
76:44 - all right let's
76:53 - i would have access to query
77:04 - no i don't
77:07 - i don't have access to query id
77:35 - like that
77:40 - nope
77:41 - still not working all right
77:46 - oh the name okay so um
77:53 - here's the name that we've been using
78:01 - and this is the url that
78:03 - assuming you're you're
78:06 - hosting this locally that's the url that
78:08 - we're trying to get to work
78:14 - do not expect this step to take as long
78:17 - as it is
78:18 - especially since we've done something
78:20 - similar
78:22 - in streams before
78:35 - all right um
78:37 - if anybody is just joining just a quick
78:40 - recap
78:43 - we're using
78:44 - graphql with react so we've used next js
78:48 - to create our react app
78:51 - and we're using apollo
78:54 - with
78:55 - graphql
78:57 - and
78:58 - what we're doing here is we're pulling
79:00 - in some data
79:02 - and we've been able to successfully get
79:04 - this data and display it
79:08 - if we hard code in
79:10 - uh the slug of the post that we want and
79:13 - we're pulling this data from wordpress
79:15 - we've installed a
79:17 - plugin to set up graphql in wordpress
79:21 - but what we're trying to do now is get a
79:24 - variable based on the
79:26 - url
79:29 - and then use part of the url
79:33 - to tell
79:34 - apollo you know what we want what data
79:37 - we want and get that back so that's
79:39 - where we're at and that's where we're
79:40 - kind of stuck right now
79:42 - uh we can get that data successfully if
79:45 - we get this props url query id we get
79:48 - exactly the data we want just having
79:50 - trouble getting that data
79:52 - to get passed along
79:55 - uh the closest we got i think was we got
79:57 - something passed along but what was
80:00 - passed along was not what was expected
80:03 - so they expected a string and we did not
80:06 - give
80:06 - a string
80:08 - so
80:09 - that's where we're at right now
80:12 - uh so we have one of our our viewers and
80:15 - contributors here on the live stream uh
80:17 - harshit is
80:19 - working uh on his machine locally to try
80:23 - to solve this and we're also trying some
80:25 - things here on the on the stream
80:28 - uh to try to
80:30 - try to fix this problem
80:36 - let's see
81:05 - hmm
81:07 - let me think about this
82:35 - okay
82:37 - uh bruce asks would you recommend visual
82:39 - studio code or sublime text 3
82:42 - or a tool from jet print jet brains like
82:45 - webstorm or similar
82:46 - i have not used sublime text i've heard
82:49 - good things about it
82:50 - i have used visual studio code and i
82:53 - like it i have not used jetbrains or
82:55 - webstorms but it's my understanding that
82:57 - those are actual ides
82:59 - and that for most web development work
83:02 - uh you don't need all those extra
83:03 - features
83:05 - um that i don't know that from
83:07 - experience that's just what i've heard
83:09 - so
83:10 - if you're just gonna be doing web
83:12 - development
83:13 - then i think you'd be fine with visual
83:16 - studio code or sublime text
83:20 - i was under the impression that sublime
83:22 - text uh was not free to use so if that's
83:26 - an issue
83:27 - and you're looking for something that's
83:29 - free then i'd go with visual studio code
83:35 - i've heard good things about you know
83:36 - jetbrains and webstorm though but
83:39 - i'm just not sure that
83:42 - um
83:43 - that it's necessary to have something
83:45 - that full-featured and you know
83:46 - potentially heavy
83:48 - uh for web development
83:52 - okay let's see
83:55 - i um
84:06 - i'm going to look some stuff up here on
84:07 - my other screen
84:35 - all right
84:37 - all right harsh it says i'm not getting
84:39 - any data from the server it is returning
84:41 - a null array
84:44 - it is making the request though
84:48 - that's interesting
84:55 - uh let's
85:03 - refresh the page
85:04 - all right so the back end's still
85:06 - working
85:10 - let's
85:19 - oops
85:27 - okay so i am able to get the data still
85:30 - in graphic ul
85:33 - uh dimitar says jesse can you explain
85:36 - more about graphql particularly in this
85:38 - project
85:40 - okay so
85:41 - um
85:45 - the
85:49 - so if you're familiar with uh rest apis
85:53 - that was that's a good way to get data
85:56 - it's a lot of sites use rest apis now
86:01 - but
86:02 - uh
86:04 - in a rest api sometimes you have the
86:06 - problem where you need um
86:10 - you need data from multiple endpoints
86:12 - right so the way a rest ipi is set up
86:15 - normally is you know you hit that end
86:16 - point and you get back the data that
86:19 - that endpoint always gives back whether
86:21 - or not you need it so there may be one
86:23 - piece of data you need from there and
86:24 - you get all this other stuff
86:27 - and then there may be some other data at
86:28 - a different endpoint that you need to
86:30 - hit so to render one page you may need
86:32 - to hit multiple endpoints right that's
86:34 - not very efficient what if instead you
86:37 - could send one request
86:39 - tell the api exactly what you need
86:42 - and then it gives you back
86:43 - what you need and only what you need
86:46 - that's graphql
86:48 - so in
86:48 - graphql
86:50 - you get to say
86:52 - what you need
86:53 - so i'll show you here an example so
86:56 - right now in this
86:58 - we're telling it exactly what we want we
87:00 - want to get a faculty member and we want
87:03 - to get a faculty member of a certain
87:04 - name we want the id the title the slug
87:07 - and the content
87:09 - we also want to know what faculty
87:10 - department they're from and we want the
87:12 - id of the department the name and the
87:15 - count meaning how many
87:17 - members of that department are it do we
87:20 - have
87:21 - so
87:24 - what we're going to get back from that
87:26 - is exactly this data nothing more
87:28 - nothing less
87:30 - if we were to try to do something with
87:31 - the rest api
87:34 - we would probably you know we would want
87:35 - to get the faculty member we could
87:37 - narrow it down to a single faculty
87:38 - member but we would get a lot more data
87:41 - you know instead of just id title slug
87:44 - content we would get the date published
87:47 - the date modified
87:49 - we would get
87:52 - lots of info about
87:54 - we would get an excerpt
87:56 - whether or not we even had one
87:59 - we would get
88:02 - a lot of data i wonder if i still have
88:04 - it i don't think i still have it up
88:07 - no i don't i had an example what we get
88:09 - but basically that's what the benefit of
88:12 - using graphql as opposed to you know the
88:15 - normal rest api
88:18 - which we've used in the past we use rest
88:20 - apis with wordpress and react
88:23 - in the past on projects
88:26 - okay uh harsh it says is asking it says
88:29 - name in the query but you're using slug
88:31 - yeah it does do that but um
88:34 - that's how i got it to work i was
88:36 - reading the documentation and for some
88:38 - reason it was working with name and not
88:40 - with slug and in the documentation it
88:42 - was using name as well so i just stuck
88:45 - with that
88:46 - um
88:48 - it looks like harshit has a pull request
88:51 - that
88:53 - might fix this
88:56 - so
88:58 - we will check that out
89:22 - oh
89:28 - all right bruce says need to go but
89:29 - we'll be
89:30 - back thanks appreciate the input uh no
89:32 - problem thanks for uh thanks for
89:34 - watching and uh for joining in uh in the
89:36 - live chat okay so harsh it's pushing a
89:39 - pull request right now uh so
89:43 - um let's uh let me bring this up and
89:46 - then i'll move it over to this screen
89:47 - and we can check out
89:49 - um
89:50 - some of harshit's code and and how he's
89:53 - um
89:54 - tackled this problem
89:55 - uh dimitar says thanks for the
89:57 - explanation yeah no problem hopefully
89:59 - that was
90:01 - you know an okay explanation
90:03 - of uh why we're using graphql
90:17 - okay
90:36 - let's go back here to faculty.js
90:41 - and
90:44 - let's see
90:54 - hmm
91:05 - probably won't work
91:07 - but why not may as well try some things
91:10 - while we're waiting unexpected error has
91:12 - occurred
91:16 - here we go
91:20 - is it
91:33 - yeah did not work
91:36 - this is a reserved word
91:39 - okay
91:49 - yep
91:50 - not working
92:11 - all right
92:13 - let's check get um
92:16 - all right so harshit's pull request has
92:18 - showed up now on github
92:21 - oh and i see in the live chat
92:23 - he has
92:24 - notified me of that as well
92:28 - alright so
92:30 - let's check this out
92:52 - all right
92:53 - har here's what
92:54 - since there's only a few things that
92:56 - have changed i'm gonna do it here i'm
92:58 - just gonna type it in but uh if it works
93:01 - i will merge that pull request so you'll
93:03 - still get credit for the for the pr
93:06 - um
93:06 - but i think it might be a little bit
93:08 - faster for me to just change some of
93:10 - this
93:12 - so
93:14 - let's
93:20 - go whoa
93:28 - that was really weird
93:40 - that's super weird
93:41 - uh if for some reason
93:44 - when i try to copy and paste from github
93:47 - it's giving me
93:52 - way more than i expected
93:56 - okay um
93:59 - yeah that's fine
94:01 - i'll just remove some of this
94:06 - that's weird
94:08 - i can just
94:11 - get this
94:18 - right
94:21 - okay
94:24 - query id return id all right that's what
94:26 - i had anyway i don't know why i tried to
94:29 - um
94:31 - try to mess with that
94:32 - okay so we're going to switch up here a
94:34 - bit
94:36 - and
94:37 - we're going to make
94:39 - let's see if i can copy this properly
94:46 - there we go
94:47 - and then down here
94:51 - we're going to change this to just be
94:55 - id
94:59 - and
95:02 - you don't need two sets of brackets and
95:04 - then in here
95:06 - this is perfect okay
95:09 - so let's see what we get now
95:15 - okay so i'm getting
95:17 - let's see what we're getting
95:27 - okay this is where we were at before if
95:29 - you remember um
95:31 - probably a half hour ago now we this is
95:34 - the error we were getting here is that
95:40 - we required a type of string but that
95:42 - was not provided so let's see
95:45 - let's see why let's see what's happening
95:47 - here so we should be able to see in um
95:51 - in our react dev tools
95:54 - with this data is
95:58 - yeah faculty
96:00 - and
96:03 - um
96:06 - query id
96:19 - huh
96:22 - that's uh
96:32 - all right let's see
96:55 - i
96:56 - should be able to say
97:14 - hmm
97:20 - all right i'm i'm using the react dev
97:22 - tools extension for chrome dev tools so
97:25 - if you if you don't have this on your
97:27 - dev tools it's uh it's an add-on so it
97:29 - doesn't come automatically
97:34 - all right
97:49 - hmm
98:17 - all right let's um
98:19 - bring this back
98:22 - a bit
98:42 - hmm
98:49 - all right so we're still not getting
98:52 - what we need
99:10 - hmm oops let me check i haven't checked
99:14 - the chat in a while
99:16 - um
99:32 - um what this h rook is asking what does
99:35 - hmr stand for uh in devtools
99:39 - um
99:42 - let me see here i don't
99:44 - remember that was oops
99:48 - are we seeing that in
99:51 - oops here we go
99:52 - and the console
99:56 - hmr
100:00 - i don't know what it stands for
100:02 - uh
100:03 - to be honest with you but
100:08 - it's what i always figured it had
100:10 - something to do with
100:20 - yeah it looks like it's it's something
100:22 - to do with webpack
100:26 - hot module reloading that's it
100:30 - the hmr is hot module reloading
100:34 - so that's why when we hit save we can
100:36 - see everything update that's that's what
100:38 - does that
100:40 - i don't know how but that's that's what
100:42 - it's it's doing
100:50 - okay
100:57 - all right so
101:05 - hmm
101:13 - let me try this
101:15 - uh let's see if we're getting
101:33 - uh
101:50 - whoa
101:56 - did it work this time
101:59 - yes i don't know why
102:02 - i do not know why but it worked
102:05 - the only thing that i changed
102:08 - was like console logged id and i hit
102:11 - refresh twice
102:17 - i don't understand that
102:20 - uh
102:21 - now what was
102:23 - is this so yeah here you did a little
102:25 - close yeah
102:31 - all right
102:37 - okay then so
102:39 - let's see what we need
102:40 - uh faculty
102:44 - edges
102:45 - will be this props faculty edges
102:49 - node
102:51 - so the edges zero
102:53 - node content okay
102:56 - so let's
102:58 - get rid of these comments
103:03 - and data faculty edges node content yeah
103:05 - that'll work
103:07 - wonderful let's take this out
103:12 - and see if we can still get the data
103:15 - yay
103:16 - it works
103:19 - all right harshit said uh it probably
103:21 - has something to do with the cache
103:23 - uh i think you're you're right on with
103:25 - that horseshoe we just
103:27 - we kept hitting the cash and
103:30 - who knows who knows how many times we
103:33 - had it right before because i'm sure
103:34 - there's multiple ways to do this
103:38 - yeah martinez is visual studio code
103:40 - available for mac yeah it is it's uh so
103:42 - i'm using it on a mac uh right now
103:45 - um so it's available i think for linux
103:48 - as well so um linux
103:52 - windows of course and mac
103:55 - yay
103:58 - we got it to work
104:00 - okay
104:01 - well we can get rid of this now we don't
104:02 - need that
104:04 - don't need that either
104:08 - wonderful wonderful
104:10 - okay
104:14 - all right just trying to clean things up
104:17 - i think it's pretty clean yep
104:19 - awesome
104:23 - all right
104:25 - good status
104:27 - and let me
104:30 - push this to github
104:32 - actually
104:34 - yeah hold on let me push this to github
104:39 - i'm trying to figure out how i can do
104:41 - this and still merge harshet's pr
104:50 - i'll still merge it and just fix the
104:51 - conflicts
104:52 - um
105:01 - i don't know um
105:22 - so
105:34 - yeah
105:35 - all our tests rain
105:37 - wonderful
105:38 - okay
105:44 - great
105:56 - all right so anyway horseshit i'll pull
105:59 - your i'll merge your pull request and
106:01 - then just fix the conflicts uh since
106:07 - um i ended up pacing a lot of it over
106:09 - anyway
106:15 - oh you're just going to close the pr
106:16 - that's cool too
106:19 - if that's what you want to do
106:27 - okay
106:29 - um
106:32 - hush it says i'm having trouble with
106:34 - your wordpress install
106:39 - what's up with the wordpress install is
106:41 - it not you're not getting data back or
106:43 - what
106:48 - all right so now
106:54 - now what we need to do
106:56 - is
106:59 - style this a bit
107:02 - so we had made the decision
107:05 - i don't know last week at some point i
107:07 - think
107:09 - that
107:11 - we were just gonna pull in all this data
107:14 - uh and then keep it like keep all the
107:17 - html and everything and it's it's pretty
107:19 - messy
107:20 - uh you can see what it looks like here
107:24 - and
107:27 - you know it has all these custom tags
107:29 - that mean something in the old cms but
107:32 - not here
107:34 - so
107:36 - we need to use these tags and style
107:39 - things the way we want
107:41 - eventually
107:43 - we're going to have custom fields for
107:45 - all this data
107:50 - but we're we're not gonna
107:55 - i think it'll take more time to do that
107:57 - than it will to just style what we have
108:01 - so that's what we're gonna do first
108:03 - it'll be a pain at first to get it
108:04 - styled but once it's styled for one
108:06 - it'll be we use the same style for all
108:08 - the faculty
108:10 - all the faculty members so
108:13 - i think it'll work out
108:15 - we may not be able to get exactly the
108:17 - style that we want
108:19 - but we can probably get close
108:24 - and then we can deal with with doing it
108:27 - properly
108:28 - later on you know after the website has
108:30 - to launch
108:32 - and this will help us keep our deadline
108:38 - so
108:39 - not you know ideally i wouldn't want to
108:41 - do it this way but sometimes you just
108:43 - have to
108:45 - you have to think of creative ways to
108:47 - make the deadline and this is one way
108:49 - where i think we can definitely cut a
108:50 - corner without having
108:53 - too much of a negative impact on the end
108:56 - result
108:58 - all right so let's check this out where
109:00 - are we at all right
109:07 - i don't even know how long i've been
109:08 - streaming let me check okay we're coming
109:10 - up on about two hours
109:12 - um
109:18 - okay harshad says the the ip is giving
109:22 - him problems using the ip address
109:24 - instead of wordpress so
109:25 - uh yeah i can link that to a domain
109:28 - uh i'll do that i'm not going to do it
109:30 - right now but
109:32 - maybe i'll try to do it before i leave
109:33 - what time is it
109:35 - okay
109:36 - actually you know what maybe we should
109:37 - save the styles for a different stream
109:40 - um
109:41 - i just checked the time here and
109:44 - i i am
109:46 - there's a christmas party for the
109:48 - university that starts at six so that
109:51 - means i have to make sure that i get
109:53 - home and
109:55 - i
109:56 - i get everything ready and then
109:58 - have enough time to go drop the kids off
110:00 - somewhere uh probably at my in-laws
110:03 - house
110:04 - and then make it to the party so that
110:06 - means
110:08 - i'm actually gonna have to leave work
110:09 - somewhat soon
110:10 - uh so i had hoped we would get to the
110:13 - styling
110:14 - at this stream but
110:18 - actually i'm it makes more sense to do
110:20 - it another stream because the title of
110:22 - this stream really had nothing to do
110:23 - with styling a
110:25 - react component with
110:27 - in this case it's going to be plain css
110:30 - uh in a separate file but
110:34 - so it would probably be better if i just
110:35 - put this
110:36 - did this in the next stream under a
110:38 - different title
110:40 - um
110:44 - let's see
110:46 - is that a spam
110:48 - account
110:48 - yeah
110:50 - probably
110:53 - uh so
110:54 - whoever just asked what is search engine
110:56 - optimization
110:58 - if you're a legit account log on with a
111:00 - different username or something and then
111:02 - ask a question so i'm gonna block this
111:04 - account for now and um
111:08 - because i'm pretty sure it's a spam
111:09 - account if it's not a spam account i'm
111:11 - sorry but
111:12 - you you'll have to
111:13 - come back in with something more
111:15 - reasonable uh as as the name that's not
111:18 - so spammy
111:29 - rook said well the question was related
111:31 - yeah that's why i i kind of said like
111:33 - come back in because
111:35 - the question was about search engine
111:36 - optimization so that's not entirely
111:38 - unrelated what we're doing here but
111:41 - um
111:42 - yeah
111:43 - but
111:44 - you all in the chat can see what the
111:45 - name was i'm not going to repeat it
111:48 - but that's not that's not what we're
111:49 - about here
111:50 - on uh free code camp so
111:54 - okay
111:55 - all right so anyway just to recap uh
111:58 - since we had a long stream and worked
112:00 - through a lot of issues
112:02 - we we did
112:04 - we are now able to
112:08 - pull data based on
112:10 - the url
112:12 - so anytime we go to
112:14 - in this case we're in localhost so
112:16 - localhost 3000 faculty slash and then
112:19 - the faculty's last name and first name
112:22 - uh
112:23 - it will pull up the data for that
112:24 - faculty member
112:26 - so we've transferred that data from sql
112:29 - server
112:30 - through the wordpress api into a mysql
112:33 - database and then we're pulling it back
112:35 - out of the mysql database
112:37 - using graphql
112:39 - from the wp graphql plugin that we've
112:42 - we've installed we're pulling that into
112:44 - with the help of apollo into our react
112:48 - app
112:48 - which was built with next js
112:51 - and
112:52 - it gets put into that page
112:54 - that's where we're at right now
112:56 - we just have a bunch of kind of raw html
112:59 - that's unstyled
113:00 - so in the next stream
113:03 - we're going to style this
113:05 - we also need to figure out how we're
113:08 - going to get these images working we'll
113:10 - probably need some kind of like
113:12 - automated way to add in the url that we
113:16 - want or
113:17 - we're going to have to match the file
113:19 - structure within our project and just
113:22 - pull over all the
113:24 - images i don't know that that's the best
113:26 - way to go because there are quite a few
113:28 - images and i don't want to um
113:31 - i don't want to bloat our repo with all
113:33 - of that so
113:35 - probably most what we'll do is we'll
113:36 - find somewhere else to store the images
113:39 - and then we'll just um
113:42 - automatically put in
113:44 - the first part you know that we'll
113:46 - change the url basically
113:49 - either
113:50 - at some point in the process the url
113:52 - will get transformed i think that will
113:54 - be the best way
113:56 - uh that will require the least amount of
113:58 - manual kind of copy and paste work
114:01 - all right so that's where we're at right
114:02 - now
114:03 - thank you so much everyone for watching
114:05 - and helping i know some of you have been
114:07 - watching this for almost two hours now
114:10 - and i really appreciate uh all your your
114:13 - patience uh and your help
114:16 - uh along the way
114:18 - um
114:20 - let's see
114:21 - there is one more question uh martin
114:23 - asks what's the keyboard combination uh
114:25 - in vs code if you want to use the
114:26 - terminal i don't actually don't know
114:28 - martin i want to know as well what the
114:30 - keyboard combination is i never remember
114:32 - i always just go up to the top to view
114:34 - here and go down
114:36 - toggle
114:37 - integrated terminal it's
114:40 - i don't know what these symbols mean on
114:41 - a mac what
114:44 - let's try it out uh
114:52 - um
114:57 - nope
115:02 - nope
115:04 - okay it's option control t
115:08 - there we go
115:09 - option control t
115:13 - uh
115:14 - brings up your terminal at least it does
115:16 - for me harsha's saying command
115:18 - plus control plus
115:22 - martin says that's my problem it has
115:23 - instructions but i don't know the
115:24 - symbols i'm the same way i need to um
115:28 - like draw the symbols on my keyboard or
115:30 - something uh otherwise i i never know so
115:34 - what what the symbols are
115:37 - okay
115:38 - so
115:41 - let's see
115:43 - yeah that's all i have for today so um
115:47 - today's friday so i'll see you all next
115:48 - week
115:49 - uh should be able to stream on monday
115:51 - probably be a little bit early stream
115:53 - because i have my normal 3 pm eastern
115:55 - time meeting so try to get stream in
115:57 - early
115:58 - um
116:00 - so until then have a great weekend