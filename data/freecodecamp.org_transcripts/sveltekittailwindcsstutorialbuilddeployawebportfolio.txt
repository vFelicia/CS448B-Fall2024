00:00 - learn how to build a beautiful and
00:01 - responsive web portfolio with spel kit
00:05 - and Tailwind CSS spel kit is a framework
00:08 - for building web applications with spelt
00:10 - providing tools for serers side
00:12 - rendering routing and more Tailwind CSS
00:15 - is a utility for CSS framework for
00:18 - rapidly building custom user interfaces
00:20 - without writing custom CSS when combined
00:23 - spelt kit and Tailwind CSS offer
00:26 - developers a seamless experience
00:28 - enabling the creation of Highly inter
00:30 - active web applications with a clean
00:32 - responsive design James MacArthur
00:35 - created this course he is a fullstack
00:37 - developer and course creator web
00:39 - portfolios who needs them well actually
00:42 - a lot of people do for example you might
00:44 - be trying to get a tech job or perhaps
00:46 - you want to have an Internet space where
00:47 - you can show all of your portfolio work
00:50 - perhaps even you are looking for a
00:52 - coding project and just want an internet
00:54 - presence to demonstrate your flare and
00:57 - capability all of these are brilliant
00:59 - reason to have your own internet
01:01 - portfolio live and hosted on the
01:03 - internet we're going to be coding the
01:05 - whole thing from scratch in spelit and
01:07 - Tailwind brilliant tutorial step by step
01:10 - and at the very end we will deploy it so
01:12 - it's live on the internet and you can
01:14 - send it to your mom so without further
01:16 - Ado if you enjoyed the video don't
01:18 - forget to like And subscribe thank you
01:19 - so much for watching and let's dive into
01:21 - the code so demo of the web portfolio
01:26 - let's take a look here we have Samuel
01:29 - Oak AKA fake small James and this is our
01:33 - landing page we've got some nice get
01:35 - InTouch buttons we've got a couple
01:38 - little navigation links up the top it's
01:40 - all very catchy as you can see in the
01:43 - background we have this cool particle
01:44 - animation effect which just makes us
01:46 - seem all the more deep and interesting
01:49 - if we scroll down a bit or use these
01:51 - navigation links we get some uh project
01:55 - displays and we can use the go-to
01:57 - buttons to actually click on them if you
01:58 - wanted you could add an a video after
02:01 - that we've got a bit about me it's just
02:04 - uh some information so that they can
02:05 - learn more about you looks super
02:08 - aesthetic finally we've got a table
02:10 - because everyone needs a good table this
02:12 - one weighs up all of the candidates if
02:14 - you're applying for jobs and shows that
02:16 - you are clearly the best candidate in
02:18 - the field finally why not invest and
02:21 - then at the very bottom we have some
02:23 - little contact me uh links in the footer
02:26 - of our document so it just looks uh very
02:29 - neat and tidy not too complicated and
02:32 - obviously the whole thing is also
02:33 - extremely responsive super critical as
02:37 - well so with the demo out of the way
02:39 - let's go ahead and get started with our
02:42 - project so for that we're going to come
02:44 - over to the Tailwind CSS and spel kit
02:47 - and nit project documentation which will
02:50 - be linked in the description down below
02:52 - and we at the same time going to open up
02:54 - a terminal in the directory of our
02:57 - choosing and we are going to start
02:59 - typing in these commands so that's going
03:01 - to be
03:02 - npm create spelt at latest and we're
03:06 - going to give our project name which is
03:08 - going to be amazingly awesome portfolio
03:12 - let's hit enter on that and that is
03:14 - going to start initializing our project
03:17 - for now we're just going to select a
03:19 - skeleton project we are not going to do
03:21 - any type checking we will add es lint
03:25 - for code linting and now we can go ahead
03:27 - and open up my amazing
03:30 - inly awesome
03:32 - portfolio inside of a code editor so I'm
03:35 - using visual studio code but you can use
03:37 - any code editor of your choice and we
03:40 - can scroll down just here and we can uh
03:44 - inside of our Visual Studio code open up
03:46 - another terminal that's just going to be
03:48 - in the directory of our new project
03:50 - going to paste these mpm install
03:53 - commands in once that one's done we're
03:54 - going to do npx tail when CSS and n-p
03:58 - and then we're just going to come over
03:59 - to our spelt doc config and copy this
04:02 - stuff across uh just displace everything
04:05 - that's currently there and likewise with
04:08 - the Tailwind doc config we'll do exactly
04:11 - the same down to the last two steps
04:13 - we're going to have to come into our
04:15 - source directory inside of here we going
04:18 - to create a new file called app.
04:21 - CSS we can go ahead and copy in these
04:24 - base directives and likewise we can come
04:27 - inside of the routes and create a plus
04:29 - layout. spelt where the plus layout is a
04:33 - reserved spelt component name that's
04:35 - going to wrap our entire project and we
04:40 - can just go ahead and import that
04:41 - app.css in here and as I said before
04:44 - this slot is going to render out
04:46 - everything inside of the plus page.
04:49 - spelt which is another reserved spelt
04:52 - component name so finally we're good to
04:54 - boot up our project we can come down
04:56 - here and type impim run div that will
04:59 - open it up on Local Host
05:02 - 5173 we can go there hit enter and here
05:05 - we see our project zoomed out way too
05:08 - much just to test that everything is
05:09 - working I'm going to type class text
05:12 - green 400 we see that update and we know
05:16 - that it is working so that is step one
05:20 - complete we have now configured T and
05:22 - CSS inside of our news felt kit project
05:25 - so just before we dive in let's take a
05:26 - look at the file directory that we are
05:28 - working with the core folders that we're
05:30 - going to be looking at inside of this
05:31 - directory is the source and possibly the
05:34 - static directories everything else here
05:36 - is by majority just configuration files
05:39 - obviously if you wanted you could make a
05:41 - cool little readme.md for the project
05:44 - not going to be touching the node
05:45 - modules either and inside of the source
05:48 - directory here we have a lib folder
05:50 - where we can have some JavaScript if we
05:52 - wanted or anything that we wanted to
05:54 - import not going to be relevant for this
05:57 - particular tutorial routes is is our
06:00 - route-based navigation system so the
06:03 - home route or the base level route route
06:06 - is just going to be this page dovel
06:08 - which gets rendered inside of this
06:09 - layout dovel these two files get
06:12 - rendered within our app. HTML just in
06:14 - this particular uh tag right here and
06:18 - obviously we have our app.css which we
06:21 - may touch later on Just for some custom
06:23 - Styles if you wanted to update the Fab
06:27 - icon just here that would be this
06:29 - particular
06:29 - file and the other thing to know is that
06:32 - in here we obviously have the head tag
06:34 - where we can add some header elements or
06:37 - you can use the Customs felt head tag uh
06:39 - which we may or may not do later on in
06:41 - this video so the first place we're
06:44 - actually going to start is in this app.
06:46 - HTML file right here and that is going
06:48 - to be with
06:50 - some Google fonts and font awesome icons
06:54 - so just initializing and configuring
06:56 - them so we're going to come over to
06:58 - Google font FS nice and easy links for
07:02 - everything will once again be in the
07:03 - description down below and we are going
07:05 - to look for Poppins is the font that we
07:08 - are going to be using in this project
07:10 - and we are going to add all of the
07:13 - non-italicized fonts to our little
07:17 - selection view the font families just
07:20 - here uh so here we have all of the
07:22 - Poppins fonts I guess you could take the
07:24 - italic ones that you want and down here
07:26 - you're going to see a large link tag
07:28 - with a copy at the bottom we're going to
07:30 - copy that directly into our head
07:33 - underneath the the head of our document
07:36 - the head tags underneath the meta one
07:38 - just there paste that
07:41 - in nice and easy and then we're also
07:44 - going to come over to the font awesome
07:46 - CDN page uh Link in the description and
07:50 - we're going to copy this top link tag
07:53 - right here as well paste that just at
07:55 - top the other one and now we have
07:58 - imported our fonts and we have have
07:59 - enabled the use of font awesome icons in
08:01 - our project in addition to that we are
08:04 - going to come into the body tag of our
08:08 - app. HTML just here and we are going to
08:11 - give this a class and this is just going
08:14 - to have a background of slate 950 a text
08:17 - of white and a relative tag as for this
08:22 - div inside the body tag we're going to
08:24 - give this a class as well this is going
08:25 - to be relative and we're going to give
08:27 - this a zed index of a custom amount of
08:29 - one which is why we wrap it inside of
08:32 - the square parentheses save that and we
08:34 - see our Styles update as we would expect
08:36 - them to Easy Breezy Covergirl the next
08:39 - thing we're actually going to do is
08:41 - configure the particle JS that we saw in
08:44 - the background just here to do that
08:47 - we're going to come over to a package
08:49 - called particle
08:51 - JS right here a lightweight JavaScript
08:54 - library and we are going to look for the
08:58 - CD in
09:00 - package just here so we can come over to
09:03 - the particle JS CDN package we're going
09:06 - to copy this Min one and likewise with
09:09 - the other tags we're just going to paste
09:10 - this up the top right here and now we
09:13 - are going to get this up and running
09:15 - inside of our document by creating a div
09:18 - that has a class of absolute Min height
09:21 - screen top of Z left of Zer a width of
09:26 - full a zed index of a custom amount of
09:29 - -1 and finally an opacity of 70 so that
09:33 - it doesn't overwhelm
09:35 - everything inside of this we're going to
09:37 - have a div and this has a class uh of
09:40 - absolute and inser zero and we're going
09:43 - to give this div an ID of particles this
09:47 - has to be spelled correctly particles
09:51 - DJs and this is going to be selected by
09:55 - the particle uh library that we just
09:58 - added so we're going to add a script
09:59 - underneath that div and call
10:02 - particle
10:04 - JS particles
10:06 - js. load and we're going to pass in that
10:10 - ID so particles
10:12 - DJs and we're also going to load in an
10:15 - assets file so that's going to be/
10:17 - assets SLP
10:19 - particles.
10:21 - Json after that we're going to pass in a
10:24 - call back function so that's going to be
10:25 - a function we're going to open up that
10:28 - function and in here we're just going to
10:29 - say
10:30 - console.log
10:32 - callback
10:34 - particles.js config
10:37 - loaded uh make sure we close that just
10:41 - there so that's going to load and break
10:44 - because we do not have that asset file
10:46 - in there at the moment but that is
10:47 - absolutely fine we can do that in a
10:49 - minute the place that we are going to
10:51 - come across that asset file is if we go
10:54 - back to the original particle JS website
10:58 - here you can create your own custom one
11:00 - so you can you know interact with the
11:02 - background color make it however you
11:05 - want uh but I already have one that's
11:07 - pre-existing you can download it from
11:09 - the GitHub repository that is linked in
11:11 - the description down below and so we're
11:13 - just going to come into our directory
11:14 - here inside of static we're going to
11:16 - create a new folder called assets and
11:19 - that is going to have a
11:22 - particles. Json file paste that all in
11:27 - and now if we refresh the page we would
11:29 - have expected that particle JS file to
11:32 - load however it did not and that's
11:34 - because the script tag that we copied
11:36 - from earlier is not going to cut the
11:37 - mustard so make sure you copy the script
11:39 - tag from the GitHub repository also it's
11:42 - just the one specifically for the
11:46 - particle js on line six and just like
11:49 - that we can see we have our uh particles
11:53 - in the background uh super neat little
11:56 - effect that just makes your portfolios
11:58 - look even Tech here so that pretty much
12:00 - ends our start in the app. HTML file the
12:04 - next one we're going to come over to is
12:06 - the app.css and in here what we are
12:09 - going to do is start off by selecting
12:12 - the HTML of our document and we are
12:14 - going to give this a scroll behavior of
12:17 - smooth after that we're going to select
12:20 - everything in our entire page and give
12:21 - that a font family of Roboto and a
12:25 - backup of sans serif now you might say
12:27 - James we don't have the robot Auto font
12:29 - family and you would be absolutely
12:31 - correct because I forgot to add it so we
12:33 - can quickly resolve that by coming back
12:35 - into Google fonts throwing in all of
12:37 - these Styles above and beyond the ones
12:40 - that we have already added uh from the
12:42 - Poppins Library quickly toss all them in
12:45 - the mix and just copy that link tag once
12:48 - more and replace the prior one that was
12:51 - already inside of our app. HTML just
12:54 - here so just these
12:57 - ones
12:59 - nice and quick and easy and that font
13:02 - will update inside of our document after
13:05 - changing everything to robotto we're
13:07 - going to select the H1 H2 and H3 tags
13:11 - and we're going to give them a font
13:12 - family of you guested Poppins and
13:16 - likewise a backup of sans serif and in
13:18 - addition to selecting the actual tags
13:20 - we're also just going to create a class
13:22 - that's called Poppins which is also
13:24 - going to apply the Poppins font family
13:27 - so that's going to do for this document
13:29 - for now so we can close out a couple of
13:31 - these config files and the next thing we
13:34 - can do is come into our source directory
13:36 - and create a new folder called
13:38 - components and this is going to have the
13:41 - core components of our document which is
13:43 - going to be a footer do spelt we'll have
13:46 - a header do spelt we're going to have a
13:50 - main do
13:51 - spelt and we're also going to have a
13:54 - step dots felt so ensuring that the
13:57 - component name is is capitalized and we
13:59 - have the dots felt at the end of the
14:01 - component with that we can come into the
14:05 - main of our document and we can add a
14:08 - script and we can also just call the
14:12 - main component render that out like we
14:16 - have here and import
14:18 - main from dot do/ components
14:23 - SL main.
14:27 - spelt so it's going to import that
14:30 - component just there we can check that
14:31 - that's working by typing but that is not
14:35 - going to work because this is actually
14:37 - meant to go inside of this uh page
14:40 - component just here so we're going
14:43 - to render out the main component and
14:46 - then in here we can type James that
14:48 - comes up on the screen as we would
14:50 - expect so that component is working
14:52 - nicely so yeah just copying everything
14:54 - that we previously had in main into this
14:56 - page.
14:57 - layout so that's our components working
15:00 - the next one we're going to come into is
15:02 - the layout and this one has a little bit
15:05 - more going on we're going to start off
15:07 - with a div and this is going to have a
15:11 - class of
15:13 - relative Flex Flex column a Max width of
15:17 - 1,400
15:19 - pixels uh we use square brackets cuz
15:22 - that's a custom amount an MX of Auto a
15:25 - width of full text small uh until we
15:29 - reach the small break point and then the
15:31 - text is going to be the base
15:34 - size and finally Min height of screen as
15:39 - well uh I'm actually going to not do so
15:42 - much of the styling and start off just
15:43 - doing the HTML first and we can come
15:45 - back and do the styling later but other
15:47 - than that we're going to have a div just
15:50 - in here we'll come back and do the class
15:53 - shortly this div is going to contain a
15:57 - button that has an up Arrow so that is
16:00 - going to be an font aw some icon so we
16:02 - can call icon class fa a solid fa Arrow
16:08 - up equally you could look at the font
16:10 - awesome site and just copy that directly
16:13 - now this little icon right here is going
16:16 - to show up in the you can't see the
16:19 - bottom of our screen so there it is this
16:21 - little icon we're going to use that for
16:23 - that effect right there but more on that
16:27 - later after our button we're going to
16:31 - have our header component which is going
16:33 - to get imported up the top then we are
16:35 - going to have our slot in the middle
16:38 - which is going to be everything inside
16:39 - of the page which is the main of our
16:41 - document and then at the bottom we can
16:43 - have our footer component which we will
16:45 - also import and then finally down the
16:48 - bottom of our document we're going to
16:50 - have a special velt component it's going
16:53 - to be spelled window and we're going to
16:56 - bind the scroll y height set that equal
17:01 - to a variable Y which we are going to
17:03 - Define shortly and we're also going to
17:05 - bind the inner
17:07 - height and we're going to bind the inner
17:11 - width super simple and easy now if we
17:15 - come up the top we can say let inner
17:17 - width or inner height equals Zer and we
17:20 - can say let inner height H sorry width
17:25 - equal Z also and while we're up here we
17:28 - we Define a function that is go top uh
17:32 - and this is just going to say
17:35 - document.body do scroll into view and
17:38 - that will scroll us to the top of our
17:40 - page so now that we've done all of the
17:42 - componentry inside of our plus layout we
17:44 - may as well add in the Styles so for
17:47 - this div right here which contains our
17:50 - back to top button we're going to wrap
17:53 - our classes string inside of an object
17:55 - so that we can make it a bit more
17:56 - customized and give it a a position of
18:00 - fixed bottom Z width full duration
18:06 - 200 Flex padding of 10 and a z of a
18:10 - custom number 10 we're going to make
18:13 - sure we leave a space at the end of that
18:15 - string and then add a plus and the
18:18 - circular braces and in here we're going
18:20 - to run a logic check that just says Y is
18:24 - greater than zero this just means that
18:26 - we have scrolled away from from the top
18:29 - of the page and then we're going to say
18:31 - if yes we're going to have a string and
18:33 - if no then we're going to have a
18:35 - different string so this is just a
18:38 - oneline if else check using the question
18:41 - mark this is the true statement this is
18:43 - the false statement if
18:47 - the Y is greater than zero we're going
18:49 - to set the opacity to full we're going
18:53 - to set pointer events to Auto and
18:57 - otherwise we're going to say
19:00 - pointer events none and we're going to
19:03 - set the
19:05 - opacity to
19:08 - zero so if we come into our page we can
19:10 - see that something is severely wrong and
19:13 - that's because down here we have to make
19:15 - sure we close this little spout
19:17 - window uh and just like that it's all
19:20 - working the next component we're going
19:22 - to style is our header component now in
19:26 - here what we're going to do is we're
19:27 - going to say EXP let Y and that all
19:30 - needs to be inside of a script tag don't
19:33 - let me forget to do that so we're going
19:35 - to add
19:36 - the script tag just here we're going to
19:39 - say export let y this is how we pass
19:43 - props between components so this is
19:45 - essentially us receiving the prop if it
19:48 - was just a variable defined inside of
19:50 - this component we wouldn't need the
19:51 - export and inside of our layout we just
19:54 - want to make sure to our header that we
19:57 - actually pass down y so we're going to
19:59 - say Y is equal to Y and while we're
20:02 - actually back in here I forgot to finish
20:05 - one or two other things we're just going
20:06 - to quickly add an onclick event to this
20:10 - button that is inside of our layout uh
20:12 - and that's just going to say go top and
20:14 - finally we're going to add a class to
20:17 - the very same button and just say margin
20:19 - left of Auto which is ml Auto rounded
20:23 - full background slate 900 text Violet
20:27 - 400 padding x 3 until we hit the small
20:31 - break point at which point we set the
20:32 - padding X to four a hover of background
20:36 - slate 800 cursor pointer uh display of
20:40 - grid Place
20:42 - items Center and an aspect Square should
20:47 - do us pretty well so yeah let's go ahead
20:50 - and close that layout component and come
20:52 - back into our header where we have just
20:55 - or just received that prop the y prop
20:59 - after that we're going to define a
21:00 - header component inside of our header we
21:03 - have an H1 tag uh inside of the H1 we're
21:06 - going to have a bold this is going to be
21:09 - your name so I'm going with Samuel and
21:12 - then outside of the Bold we're going to
21:13 - have the secondary name which is going
21:15 - to be Oak after the H1 we're going to
21:17 - have a div that has a class uh that we
21:20 - will Define shortly and in here we're
21:22 - going to map out some items using the
21:24 - spel kit or spel each where we say # tag
21:28 - each inside of the curly parentheses we
21:31 - pass in an array which is tabs and we
21:34 - say each individual item is going to be
21:36 - referred to as Tab and we're also going
21:38 - to take the index inside of here we're
21:41 - going to register out an anchor tag and
21:44 - inside the anchor tag we're going to
21:45 - have a paragraph that just has the tab.
21:47 - name with that we should probably come
21:49 - into our script and just uh Define tabs
21:52 - so that's going to be let tabs equal to
21:56 - the square brackets uh so an array and
21:59 - inside of our array we're going to have
22:00 - a series of objects uh each object will
22:03 - have a name so the first one for example
22:05 - will be projects and then the link is
22:08 - going to be # projects which will be the
22:10 - ID of that section as we Define shortly
22:13 - I'm going to duplicate that three times
22:16 - and just uh set the second one to about
22:21 - uh
22:23 - me and that's just going to have a link
22:26 - of about or an ID of about and then
22:28 - finally we're going to have blog and I'm
22:30 - going to delete this last one uh because
22:33 - it's not entirely necessary if you have
22:34 - a Blog then that is awesome and in here
22:38 - we also have to make sure we actually
22:40 - add a key for that particular value so
22:42 - that that is Happy uh you'll notice in
22:45 - this portfolio just here if you click
22:47 - blog we
22:49 - get which possibly isn't the effect
22:52 - you're looking to have for any
22:54 - prospective employers so if you have a
22:57 - Blog then obviously feel free to add
22:58 - that one in so now we can see each of
23:00 - the items showing up on the screen just
23:02 - there just as we would want we can go
23:05 - ahead and start styling everything in
23:07 - this component we're going to start off
23:10 - with the
23:12 - uh class on the header now like in our
23:15 - previous component we're going to wrap
23:17 - that inside of wrap the string inside of
23:19 - a curly parenthesis cuz it's going to
23:21 - have some Dynamic classes and that's
23:23 - going to be sticky we're going to give
23:25 - it a zed index of 10 a top of zero a
23:30 - duration of 200 a padding X of six Flex
23:35 - items Center justify everything
23:39 - between we're going to give it a border
23:41 - b a border
23:44 - solid and then after all of that we're
23:46 - going to finish that with a space in the
23:48 - end of that string and then we're going
23:49 - to have plus circular
23:52 - parentheses and in here once again we're
23:54 - going to say y greater than Z if it's
23:56 - true we're going to have one class uh
24:00 - appended if not another set so if it is
24:03 - true we're going to say padding y of
24:04 - four background slate 950 and Border
24:08 - Violet 950 and if it's false we're going
24:11 - to say padding y of six background
24:17 - transparent and Border
24:20 - transparent and we'll see what that does
24:22 - shortly but essentially what it means is
24:24 - that as we uh scroll when we scroll away
24:28 - from the header then it's just going to
24:29 - make the background opaque and we're
24:31 - going to get a border bottom showing up
24:33 - so that will look nice after that we
24:35 - have our H1 this is going to have a
24:37 - class of font
24:39 - medium uh the Bold tag is going to have
24:42 - a class of font bold and we're going to
24:46 - set that to Poppins and then after we've
24:48 - styled the H1 we're going to select the
24:50 - div and just say small Flex items Center
24:54 - gap for an otherwise headen so the
24:57 - default dis will be hidden on a small
24:59 - screen and then when we get to a booger
25:01 - screen we're going to have a display of
25:03 - flex uh so we can see that coming in now
25:07 - after that we're going to style the ank
25:08 - tags this is going to have a class of
25:11 - duration 200 hover text Violet 400 and
25:16 - we also have to make sure that we add
25:18 - the href equal
25:20 - to uh tab. link as we defined above so
25:25 - that will work for our navigations we
25:27 - can see if that's working it is indeed
25:30 - very
25:32 - nice and then finally what we're going
25:34 - to have is a another button although
25:37 - this is technically going to be an
25:38 - anchor tag this is going to have a class
25:40 - of blue shadow which we will Define
25:43 - shortly a custom class after that we're
25:45 - going to say relative overflow heading
25:50 - px5 padding y of two group rounded full
25:55 - background white text SL PL 950 inside
25:59 - of here we're going to have a div that
26:00 - has a class of absolute top zero right
26:04 - full width full height full background
26:08 - Violet 400 an opacity of 20 we also
26:13 - going to say group
26:15 - hover uh semicolon and we're going to
26:18 - translate that element X full a z of Z
26:21 - and a duration of
26:24 - 200 after this element we're going to
26:26 - have an H4 this is going to say get in
26:29 - touch and we'll just have to give this
26:32 - one a class of relative and a zed of n
26:36 - for this whole anchor tag we're going to
26:38 - have an hre equal to whatever social
26:40 - media uh platform you want them to get
26:42 - in touch with you so that could be
26:44 - linked in uh copy that link and paste it
26:47 - in there and we're also going to set the
26:48 - target toore blank and now we can see
26:51 - the effect that this has that little
26:53 - pseudo effect it just uh we get that
26:56 - hover which is quite nice
26:58 - so that is our header done the next
27:00 - component is going to be the main
27:02 - component now inside of our main
27:04 - component we're going to start off by
27:06 - opening up a script just as we have here
27:09 - and then after that you guessed it we
27:12 - have a main component or main tag we can
27:15 - go ahead and open that up and uh after
27:19 - that we're going to have a section which
27:22 - we will give an
27:24 - ID equal to intro
27:28 - page and for the main we're going to
27:31 - give this a class of flex Flex column
27:33 - and a flex of one so that it occupies as
27:36 - much space as it can uh and we're also
27:39 - going to give that page a padding of
27:40 - four now for the section we have here
27:44 - essentially we're going to split up each
27:46 - part of the main in sections so the
27:48 - first section second section third
27:49 - section so that would be the blog and
27:52 - the you know projects and about me uh
27:55 - and that's what the ideas are for to
27:57 - scroll us to each individual section as
28:00 - you will see shortly so our first
28:02 - section is going to have a display of
28:04 - grid grid calls one until a large break
28:09 - point at which point we will upgrade to
28:11 - a grid calls 2 we're going to give it a
28:15 - gap of 10 a padding yre of eight and a
28:17 - small padding yre of 14 uh when we go
28:21 - above that small break
28:23 - point following that we're going to have
28:25 - a div that has a class of flex Flex
28:27 - column on a large display or more we're
28:31 - going to justify everything Center we're
28:34 - going to put the text Center until we
28:37 - get to the large display and then we're
28:38 - going to say text left we're going to
28:40 - put a gap of six until we get to a
28:43 - medium screen and then upgrade to a gap
28:45 - of eight and then on the large
28:47 - breakpoint we're going to go to the Gap
28:50 - of 10 inside of here we are going to
28:53 - have an H2 tag this is going to have a
28:57 - class of font semi bold text
29:02 - 4XL uh until we get to the small screen
29:04 - then it's going to be text 5 XL and then
29:06 - on a medium screen it's going to be text
29:08 - 6 XL so nice and large and this is going
29:11 - to say hi I'm uh span tag
29:17 - class Poppins text Violet 400 this is
29:21 - going to be for a pretty uh little
29:24 - Violet section this is going to say
29:26 - Samuel or whatever your name might be
29:29 - after that we can continue
29:31 - Oak going to insert a breakpoint in the
29:33 - text and then we're going to say full
29:36 - stack and then we're going to have that
29:38 - same span once
29:40 - again just there and this is going to
29:42 - say
29:44 - developer and if we save that we can see
29:47 - exactly how those two spans work right
29:49 - there I think that looks pretty nifty
29:52 - after that div we can have a paragraph
29:55 - tag and this is going to have a class of
29:59 - text base small text large uh and medium
30:03 - text extra large so always going up and
30:06 - this can say my uh same span class text
30:10 - Violet
30:11 - 400
30:15 - favorite
30:18 - tech includes
30:21 - JavaScript uh specifically
30:25 - nextjs or obviously you would make this
30:28 - custom to yourself or spelt kit as you
30:32 - probably
30:33 - noticed tail
30:35 - wind CSS no surprise there
30:39 - nodejs plus
30:42 - Express JS and
30:45 - postgress
30:47 - SQL or Firebase SL fire store
30:53 - exclamation and then we have our neat
30:55 - little text showing up
30:58 - and after that we are going to finish it
30:59 - off with a button it's going to be a
31:01 - very similar button to what we have in
31:03 - our header and that's just going to be
31:06 - the same anchor tag as before we're
31:07 - going to have a class of blue shadow MX
31:10 - Auto large screen or more is going to be
31:13 - Mr Auto so margin right Auto we're going
31:16 - to say text is the base size until we
31:18 - get to the small screen then it's going
31:20 - to be a text of large and then on the
31:23 - medium screen we're going to go for a
31:24 - text extra large we're going to give it
31:26 - the font family Poppins relative display
31:31 - overflow heading padding X of six
31:35 - padding y of three uh we'll add a group
31:39 - rounded full background white and a text
31:43 - slate
31:44 - 950 after that exactly the same as we
31:47 - did in our header we can copy that div
31:50 - that's that little background div
31:53 - in and we can actually also just copy
31:56 - this H4 tag uh once again into just
32:02 - after that div right there and what we
32:04 - can do after this one though is we're
32:06 - going to use the HTML Arrow so that's
32:09 - the Ampersand R A RR Roar and now we get
32:14 - the uh little amband right
32:17 - there and just like that we have a cool
32:19 - link we're also going to have the cursor
32:22 - pointer
32:23 - style added to that and in here just
32:27 - like you did uh in the header we're
32:29 - going to add the hre or the link to your
32:33 - social media profile or wherever you
32:34 - want them to get in touch and a Target
32:36 - equals blank once again so that is 1
32:40 - half of our grid display done then we're
32:44 - going to have the second half which is
32:45 - going to be a div that has a class of
32:47 - relative Shadow 2XL an extra big Shadow
32:51 - and then a grid and a place items
32:56 - Center
32:58 - now in here we're going to have an image
33:00 - tag and this is going to be an image of
33:02 - you're choosing whatever you like we're
33:05 - going to access this image from images
33:10 - SL profile.png or whatever it is that
33:14 - you saved it as and that should actually
33:17 - be Source equals uh equally we'll have
33:20 - to add the alt which is just going to be
33:23 - uh profile image and finally we're going
33:27 - to add a class which is just object
33:29 - cover a z index of a custom amount of
33:32 - two and we're going to set the maximum
33:35 - height equal to 70% of the view
33:39 - height now this image doesn't currently
33:41 - exist for me but I'm just going to paste
33:44 - it in there going to create the file
33:47 - it's going to be
33:48 - images uh reveal in finder paste that in
33:52 - and now if we open that up that is right
33:54 - there and if I save this we get the
33:57 - image showing up on the screen Happy
33:59 - Days the only thing that is being a bit
34:02 - mischievous here is uh this and that's
34:06 - just because our button should be
34:09 - wrapped inside of the div inside of our
34:10 - header dot spelt uh and that's going to
34:14 - make it match the replica equally you
34:17 - could actually have it outside if you
34:18 - prefer the button to display on the
34:20 - smaller Mobile screen uh that would be
34:22 - totally viable also so you know what
34:25 - maybe we actually do just leave it
34:29 - outside then the get touch just is
34:31 - always
34:32 - there I actually prefer it like that so
34:36 - that is the first uh part of our main
34:40 - component complete on to the second so
34:44 - that's going to require a new section
34:48 - and who can guess what this section is
34:51 - going to have an idea of well it's going
34:54 - to be from the links above it's going to
34:55 - be projects
34:57 - uh so we can go ahead and enter that
34:59 - I'll make some space in here and now we
35:02 - can give this a class of padding y of 20
35:06 - on a large screen or Burger we can say
35:08 - padding y of 32 Flex Flex column and a
35:12 - gap of
35:13 - 24 inside of this section we have a div
35:17 - that has a class of flex Flex column a
35:20 - gap of to and a text of Center this is
35:23 - going to be the header essentially for
35:25 - this section which is why inside of that
35:28 - we have an H6 that says a few of my
35:34 - creative Endeavors full stop this H6 is
35:38 - going to have a class of text
35:44 - large small screen or larger text extra
35:48 - large and on a medium or bigger screen
35:50 - we're going to say text to extra large
35:53 - uh noting that large should be LG not
35:56 - large large underneath that we're going
35:58 - to have an H3 this is going to be the
35:59 - actual title uh and this is going to say
36:02 - curious to span class
36:07 - Poppins text Violet 400 as we' have seen
36:11 - C after that we can continue with my
36:14 - work question mark the H3 is going to
36:16 - have a class of font semi bold text 3
36:20 - extra large small text 4 extra large
36:24 - medium text 5 extra large and then
36:27 - underneath that we can have an anchor
36:28 - which is going to have an hre this is
36:30 - going to be the watch the video button
36:32 - or you can just rck roll them like I
36:34 - have the Rick Roll link is actually
36:36 - going to be used in this project so if
36:39 - you want that copy that from the GitHub
36:42 - repo directly we're going to want to
36:45 - make sure that this one has a Target
36:47 - equals unor blank to open up a new tab
36:50 - and this is going to have a class of
36:51 - margin X Auto padding X4 padding Y2
36:57 - rounded medium
36:59 - border border solid border white a
37:04 - display of flex item Center gap of two
37:08 - minus margin
37:10 - bottom four unless we are on a small
37:13 - screen in which case it's going to be
37:15 - minus bottom um minus margin bottom zero
37:20 - uh and then we're going to set the minus
37:21 - margin top is uh 10 so it's essentially
37:25 - just setting a negative value
37:27 - on Hover we're going to set the border
37:29 - to being a violet 700 color and we're
37:33 - just going to give the whole thing a
37:34 - duration of
37:35 - 200 and in here we're going to have an
37:38 - icon that has uh the
37:41 - class fa a
37:44 - regular uh and then fa a circle dplay
37:48 - once again you can copy these uh code
37:50 - them straight in or copy them from the
37:52 - font awesome page and after the icon
37:54 - we're going to have a paragraph tag that
37:56 - that just says watch the video so we
37:59 - should be able to see this pop up down
38:01 - here there we have our margin top being
38:04 - super weird talk about misbehaving uh
38:08 - and that is because it is supposed to
38:09 - come after the div not be within the div
38:12 - so just fixing that we get our little
38:14 - watch and we can also use our little
38:17 - scroll to the top button uh which is
38:20 - super nice and neat beneath all that but
38:23 - still within the section we're going to
38:25 - open up a dish
38:27 - that has a class of grid grid calls one
38:31 - until we hit a large screen at which
38:32 - point we're going to set it to grid
38:33 - calls 3 so that'll be three columns
38:36 - we're going to have a gap of 12 until we
38:38 - get to the large screen and then we're
38:39 - going to have a gap of 10
38:42 - downsizing in here we're going to use
38:45 - the step component that we have created
38:48 - and we're going to have three of them so
38:50 - we're going to call
38:51 - step uh and we're going to duplicate it
38:53 - three times but before we do we want to
38:55 - make sure that they have an opening and
38:57 - closing tag because that is going to be
38:59 - important for
39:00 - later and in here we're just going to
39:03 - pass down a prop known as step and we're
39:06 - going to set that equal to steps which
39:08 - is an array that we haven't yet defined
39:11 - with the index which is going to be the
39:13 - number or the uh sequence the ordered
39:17 - sequence of which it is so it's going to
39:18 - be 0 1
39:20 - 2 now as for what goes into step we're
39:23 - going to have to come up to our script
39:25 - and Define uh
39:28 - steps so that's is going to be an array
39:30 - and it's going to be an array of objects
39:32 - where each object is going to have a
39:35 - name field and an icon
39:39 - field uh we're going to have three of
39:42 - these the first one is going to be the
39:45 - small James store or whatever your
39:48 - project is and we're just going to copy
39:51 - in the class name for the icon of your
39:54 - choosing so this is going to be fa cart
39:57 - shopping let's just go ahead and take a
39:59 - look at some of the other icons though
40:01 - so we can come over to font
40:03 - awesome.com links in the description and
40:05 - we can head over to their icons type in
40:08 - banana I don't know if we oh look they
40:10 - have bananas just not in the free
40:12 - package we want to make sure that we're
40:15 - using the free icons as much as we
40:18 - can but you could have just about
40:22 - anything you know here's all the free
40:23 - icons so you could want one for Docker
40:25 - for example and you can just copy the
40:28 - class string not the whole tag so that
40:31 - is all very
40:34 - straightforward our second step is going
40:36 - to be ultimate
40:38 - todos uh this is going to have an icon
40:41 - of fa solid fa list check and then the
40:47 - last one is going to have an icon of
40:50 - fa solid fa diagram
40:55 - project and and a name of Pokedex which
40:58 - if you're not familiar is what Samuel
41:03 - Oak originally came up with he is the
41:06 - Pokémon Professor that sends Ash Ketchum
41:09 - on his mission so here we have the
41:12 - Pokedex now I should also note that
41:15 - these are project tutorials that I'm
41:17 - going to be creating soon so if you want
41:20 - the ultimate portfolio full of projects
41:22 - that are going to get you a job just
41:23 - like these then like and subscribe and
41:25 - stay tuned for those to
41:27 - come anyway now we have the steps we can
41:31 - start on our step component obviously we
41:34 - are passing down the step as a prop so
41:36 - we're going to have to receive it inside
41:38 - of the script tag so we can say export
41:40 - let step that will give us access to the
41:43 - step in this component and then we're
41:45 - going to have an anchor tag it's going
41:47 - to have an H rff equal to curly braces
41:51 - that's going to be the step. the href
41:53 - which is the link to the project we're
41:55 - going to make make sure that anyone who
41:57 - clicks on this is going to get opened up
41:59 - in a new tab so perhaps it takes it uh
42:01 - the user to the GitHub page for the
42:04 - project or all the code or perhaps to a
42:06 - live deployed version of the project and
42:09 - after that we're going to give it a
42:10 - class of padding for uh small breakpoint
42:14 - padding six medium breakpoint padding 8
42:18 - Flex Flex column gap for rounded
42:22 - large border border solid border Violet
42:27 - 700 text Center group cursor pointer
42:33 - hover border Violet 400 and finally a
42:39 - duration of 200 inside of this we're
42:42 - going to have a div that has a class of
42:45 - background slate 950 grid Place items
42:50 - Center a padding X of four a text of
42:53 - five extra large medium
42:57 - Tex Tex 6 extra large uh we're going to
43:01 - set a negative margin top of 10 on the
43:05 - small breakpoint it's going to be
43:06 - negative margin top of 12 medium
43:08 - breakpoint negative margin top of 14 and
43:12 - large is going to be negative margin top
43:15 - of 16 margin X of Auto and a duration of
43:20 - 200 inside here we're going to have the
43:23 - icon with the class that is the step do
43:27 - icon uh just like that so we can use the
43:30 - curly parenthesis to set that after that
43:34 - div we're going to have an
43:37 - H3 uh that is going to be the step dot
43:40 - name also I should just clarify that
43:42 - this whole class here is to essentially
43:45 - create the effect that we see just here
43:47 - where it blocks out the purple line and
43:49 - creates the space and the negative
43:51 - margin top just drags the whole thing up
43:53 - so it overlaps the the border of the
43:55 - contain
43:57 - container uh but back to the H3 we can
43:59 - set a class of font medium text extra
44:03 - large small text 2 XL and finally medium
44:07 - text 3
44:09 - XL uh after that we're going to Rend out
44:12 - the slot which is essentially going to
44:13 - be the children components which is
44:16 - anything wrapped within the opening and
44:19 - closing tags of the
44:21 - component rendered out inside the main
44:24 - dos felt and then finally we can have a
44:27 - div that has a class of flex One Flex
44:30 - justify
44:33 - between gap of four and items end and
44:37 - inside of here we can have a div that
44:39 - has a class of margin left Auto cursor
44:42 - pointer on Hover we're going to have a
44:45 - text of slate
44:47 - 950 a duration of 200 relative and then
44:51 - we're going to add in some pseudo
44:53 - effects so we're going to say after
44:55 - we're going to use the after pseudo
44:56 - effect and give that a position of
44:59 - absolute we're going to say after top of
45:01 - zero we're going to say after height of
45:04 - zero after right full after width full
45:09 - after height full after
45:14 - duration
45:15 - 200 uh and then this one's even more
45:17 - complicated it's going to be on the
45:19 - hover we're going to set the after equal
45:22 - to translate X of full finally set the
45:26 - after to a zed index of
45:30 - -1 and an overflow of
45:35 - headen now inside of here we can have a
45:37 - p that has a class of relative and a z
45:40 - of four and this can say go to and then
45:43 - we can have the Ampersand raar for the
45:46 - right arrow and that will show up with a
45:50 - beautiful go-to just like that now one
45:53 - thing that I notice is that the after
45:56 - should also have a background of white
45:59 - so we're just going to add that in after
46:00 - background white I think I forgot
46:04 - that and then we can set the Z to1 again
46:09 - and now we just get this nice little
46:10 - link hover effect as they uh click on it
46:14 - technically they can click anyway but it
46:15 - just makes people feel better and it's
46:17 - more obvious if you actually give them a
46:19 - go-to
46:20 - link so now that we have defined that
46:23 - component we can come back into the main
46:25 - SE of our document and we can just add
46:28 - in the children content to the step
46:31 - components and that is going to be a
46:33 - paragraph tag that says small James
46:36 - store is a
46:38 - merchandising store created
46:42 - with then we're going to throw in a
46:43 - strong tag with a class of text Violet
46:47 - 400 and we're going to have some tech so
46:50 - it's going to be nextjs Commerce JS
46:54 - stripe and nodejs plus expressjs my
46:59 - goodness doesn't that sound like a good
47:00 - text stack you should definitely watch
47:02 - that video when it comes
47:04 - out uh after that we're going to say
47:09 - commerce. JS is a product content
47:13 - management system and stripe is used for
47:17 - all
47:18 - transaction handling so that is our
47:21 - first one we're actually going to copy
47:23 - and paste that inside the rest of them
47:25 - and then we're going to say for the
47:27 - second
47:29 - one ultimate todos is a full stack uh
47:34 - and this is also going to be
47:37 - nextjs uh no JS plus
47:41 - Express uh and Fir store and fire I
47:47 - guess it is Firebase uh crud application
47:51 - application that allows a user to login
47:56 - manage a
47:58 - tidy not tiny and efficacious there's a
48:03 - good word to-do list and persist this
48:07 - information across
48:10 - devices so that's the second one after
48:13 - we've done that we can get rid of all of
48:17 - the content between there and the full
48:19 - stop and now we can do the very last one
48:21 - which is going to just
48:24 - say the PO
48:28 - keex is a we're going to use the strong
48:31 - tag with a class of text Violet
48:35 - 400 and in here it's going to
48:39 - say
48:41 - spelt kit and
48:44 - Tailwind
48:47 - CSS uh then we're going to jump outside
48:49 - of the strong tag uh web
48:52 - application comma hosted
48:58 - on uh and then we'll do another strong
49:00 - tag just as we have before hosted on
49:08 - netlify uh and then we can
49:12 - say that consumes and caches the then
49:17 - we're going to have another strong tag
49:22 - pokeymon
49:23 - API to dis playay all
49:27 - Pokémon
49:29 - information got to catch them
49:33 - all and then we can get rid of all the
49:35 - remaining text just
49:37 - there and that's going to do it for our
49:40 - three uh items just
49:44 - here and that's also going to do it for
49:46 - this section so now we can create the
49:49 - last section that comes above our
49:52 - footer and this one is going to have an
49:55 - ID equal to about so that when we click
49:58 - the about keyword which is up the top it
50:00 - will take us down to this section also
50:04 - note that this should not be in the
50:06 - middle uh but we can fix that very
50:10 - easily just by
50:12 - saying if we come into the
50:14 - header we'll set this to an ml autoflex
50:19 - one let's actually just do ml Auto and
50:23 - we're also going to need a PR of
50:26 - four uh so that's just going to push
50:28 - them over there and keep that button for
50:30 - us anyway back to the main component so
50:34 - we can close that come down here we've
50:35 - got our last section which is the about
50:38 - we're going to give it a class of
50:39 - padding y of 20 but we're going to
50:42 - separately set the padding top to 10
50:45 - then on a large break point we're going
50:46 - to set the padding top to
50:50 - 16 and additionally on another large
50:53 - break point we're going to set the
50:54 - padding y 23 2 we're going to give it a
50:57 - flex Flex column and a gap of 16 until
51:02 - the small break point where we'll have a
51:03 - gap of 20 and then the medium break
51:05 - point where we're going to have a gap of
51:10 - 24 and finally a position of
51:13 - relative inside of here we're going to
51:16 - have a div this one is going to have a
51:19 - largish class so bear with me this one
51:23 - is going to be a flex Flex
51:27 - column a gap of two text Center
51:31 - relative
51:33 - uh we're going to say before so we're
51:37 - going to use the pseudo before element
51:39 - we're going to give the pseudo before a
51:41 - position of relative we're going to go
51:43 - before top of zero before left of zero
51:49 - before is going to have a width of 2/3
51:53 - before is going to have a height of
51:56 - 1.5 before is going to have a background
51:59 - of violet
52:02 - 700 uh and if we save
52:05 - that we can see we get this line here so
52:08 - that's perfect and now what we're going
52:09 - to do is we're going to copy all the
52:11 - before
52:12 - Styles uh so we'll copy them and then
52:15 - we'll paste
52:16 - them just
52:19 - afterwards and we're also going to
52:21 - select all the pasted
52:24 - befores and we're going to change them
52:26 - to Afters so we're going to have two
52:27 - separate pseudo
52:29 - elements and we're also going to have to
52:31 - change the left for a right and a top
52:34 - for a
52:36 - bottom and then we're going to change
52:40 - the well actually that's pretty much it
52:43 - so now we can just come in here and we
52:44 - can add the actual elements so this is
52:46 - going to have an
52:49 - H6 that says want to know more question
52:53 - mark tant izing I'm sure they absolutely
52:56 - do we're going to give this a class of
52:58 - text large until we get to the small
53:01 - break point where it's going to be text
53:02 - extra large and then the medium is going
53:04 - to be text two extra large uh so we'll
53:07 - save that there's our want to know more
53:10 - for some reason our bottom one isn't
53:14 - moving over so our before is left zero
53:18 - our after should be right of zero not
53:21 - sure what is causing that but we can
53:23 - come back and fix that in a minute after
53:25 - that we're going to have an H3 and this
53:27 - is going to say uh a bit then we're
53:30 - going to have our classic span that has
53:32 - a class of Poppins text
53:38 - 3XL sorry that's actually just text
53:41 - Violet
53:43 - 400 and inside of here we're going to
53:46 - say about cuz this is the about section
53:50 - and then we can finish that off with a
53:51 - me dot so there we have a bit about me
53:54 - this h H3 is going to need some Styles
53:56 - so that's going to have a font semi bold
54:00 - text 3XL until the small break point
54:03 - where we're going to bump it up to a
54:04 - text 4 extra 4 extra large and then
54:07 - finally on the medium a
54:09 - text 5 XL so now we have that header and
54:14 - for some reason we have that misbehaving
54:17 - div so what I'm going to do is I figured
54:21 - out exactly what it is this after right
54:23 - here and this before
54:25 - both need to have a position of
54:28 - absolute uh so that fixes that perfectly
54:31 - I am just a
54:32 - muppet but the one thing we're going to
54:34 - have to add is a padding y of four and
54:38 - then now we have the desired effect not
54:40 - that you can even see it but there it is
54:43 - just
54:47 - there so that's that section looking
54:51 - nice and tidy underneath this div we're
54:53 - going to have a paragraph that has a
54:55 - class of MX Auto
54:58 - Poppins font semi bold text large small
55:03 - text extra large medium text 2 XL and
55:07 - this is going to say I am dot dot dot
55:10 - with spaces between the
55:13 - dots and then under here we're going to
55:16 - have a
55:17 - div that has a class of flex Flex call
55:21 - Gap of 20 with full MX Auto and a
55:24 - maximum width of a custom amount so we
55:27 - use the square brackets that's going to
55:28 - be 800
55:29 - pixels in here we're going to use the
55:32 - each which is going to map over all of
55:34 - our benefits and we can extract each
55:38 - individual benefit as a benefit and
55:40 - we're also going to take the index and
55:42 - then we can close the each and in here
55:45 - we're going to have a div that has a
55:48 - class of flex gap of six until we get to
55:51 - small and then we're going to have a gap
55:52 - of eight now for for this we're actually
55:55 - going to need to Define some benefits so
55:57 - we're going to come up to the top to our
55:58 - script and say let benefits equal to an
56:02 - array where each index is going to be an
56:06 - uh
56:08 - object and so in here we're going to
56:10 - have a name field and we're going to
56:12 - have a description
56:15 - field uh so let's just duplicate that
56:18 - three times and for the first one I'm
56:21 - going to say a self-taught developer
56:26 - uh for the second one I'm going to say a
56:28 - product design and ux
56:31 - fanatic and then for the last one I'm
56:34 - going to say an excellent
56:38 - Communicator can't neglect the soft
56:40 - skills and then I'm quickly going to
56:41 - fill out the descriptions I'm actually
56:44 - just going to copy and paste them uh I'd
56:46 - recommend writing stuff that you
56:49 - personally resonate with but if you want
56:50 - to use this as a template then the code
56:52 - is in the GitHub if you just want to
56:54 - copy and paste that
57:04 - across so there are our benefits added
57:07 - uh it looks like somewhere in here we
57:09 - have to
57:12 - escape uh an exclamation point but
57:15 - that's all good and so now back down to
57:17 - this div we can open that up and in here
57:21 - we are going to start off with a
57:24 - paragraph tag that has a class of
57:25 - Poppins text 4 extra large small
57:29 - breakpoint text 5 extra large medium
57:32 - breakpoint text six extra large uh it's
57:35 - going to be a text slate 500 so it's not
57:37 - very uh stand itish and we're going to
57:39 - give it a font of semi
57:42 - bold and this is actually going to have
57:44 - the index + one so we're going to use
57:46 - the curly parentheses to render out a
57:49 - JavaScript uh value and if we save that
57:52 - here we can see we get the 1 two 3
57:54 - showing up
57:55 - and then after this paragraph we're
57:56 - going to have a
57:58 - div that has a class of uh that should
58:03 - say div not ID div that has a class of
58:06 - flex Flex
58:09 - column uh a gap of six until we get to
58:12 - the small breakpoint then we're going to
58:13 - have a gap of eight so all the gaps are
58:15 - equivalent and in here we can have an H3
58:18 - that has a class of text 2 extra large
58:21 - small breakpoint text three extra large
58:24 - probably getting the vibe for this until
58:27 - I say on a medium we're going to go text
58:30 - 5 XL so we're going to jump up
58:32 - one that's going to have the uh the
58:35 - benefit. name and then underneath that
58:38 - we're going to have a paragraph tag that
58:40 - has the benefit. description and that's
58:43 - just going to be as you would expect and
58:46 - so now we have the uh section showing up
58:50 - looks like you're seeing some artwork in
58:52 - a
58:53 - museum
58:57 - looks very nice and tidy and so if we
59:00 - take a look at the actual website we can
59:02 - scroll down to the bottom and see that
59:04 - after that we just have this uh header
59:07 - here we've got the table and then we've
59:09 - got our footer so not much left to
59:13 - go
59:15 - uh and so that's going to start off
59:18 - after the div above the closing section
59:20 - we're going to have an
59:22 - H5 and this is going to say the and then
59:26 - we're going to have a span that has a
59:28 - class of text Violet 500 uh 400
59:33 - sorry uh complete and then we're going
59:36 - to have space
59:38 - package because we are the complete
59:41 - package and then under that H5 we're
59:44 - going to have a div that has a class of
59:46 - flex Flex column
59:49 - overlow X of scroll a gap of 10 a
59:54 - maximum width of a custom amount of 800
59:56 - pixels so we use the square brackets an
59:58 - MX of order and a width of
60:00 - full and then within this div we are
60:03 - going to have our table uh so this is
60:05 - going to have a class of background
60:07 - white a text of
60:09 - slate 700 we're going to say rounded and
60:13 - text Center then we can open that up and
60:16 - now inside of here we're going to have
60:18 - the table head which is going to have a
60:20 - class of Border
60:22 - bottom uh border solid border slate
60:27 - 200 uh and then we're going to have a TR
60:32 - with a class that's just empty and this
60:35 - is going to contain a th tag that's
60:38 - empty then we're going to have a th with
60:41 - a class of wh
60:43 - space- no wrap our padding of Two and a
60:47 - padding X of
60:48 - four and this is going to say candidate
60:51 - number one and we're going to duplicate
60:53 - this
60:55 - uh a couple of times so we're going to
60:56 - have a candidate
60:58 - two a candidate three and then the last
61:01 - one is going to say me except this one
61:04 - is going to have a background of
61:08 - violet 700 and a text of
61:12 - white uh and we're also going to give
61:14 - this one a padding of four and a padding
61:17 - X of
61:20 - eight so if we scroll down we can see
61:22 - that showing up down there uh that is
61:25 - all hunky dory underneath the TR well
61:29 - actually the T head we're going to have
61:31 - the table
61:33 - body and this is going to have a TR that
61:36 - has a class of Border B border solid oh
61:41 - that needs to say class A Class of
61:44 - Border B border
61:47 - solid border
61:50 - slate 200 close that inside of here
61:54 - we're going to have a TD that has a
61:56 - class of border right border solid
62:01 - border white padding left of four
62:03 - padding right of eight padding y of four
62:07 - a font of semi bold and a text of small
62:12 - and this is going to say
62:15 - dedication and then we're just going to
62:18 - have a uh another
62:22 - TD that contains an icon with a class of
62:25 - fa solid FX Mark which is a tick mark
62:30 - and that's going to say text slate
62:32 - 500 uh now we're going to duplicate this
62:36 - four times and we're going to change the
62:39 - last one to be a green 500 so if we save
62:43 - that now we can see that show up so here
62:45 - we have the dedication row uh and the
62:47 - last one instead of being a cross should
62:49 - actually be a check so that it shows a
62:51 - green tick where the rest of them show
62:53 - X's
62:56 - so now what we're going to do is we're
62:57 - going to just basically duplicate this
63:01 - TR uh I think it's four times 1 2 three
63:05 - so we get four in
63:08 - total the second one is going to
63:11 - say critical thought it's good to be a a
63:15 - critical thinker then we're going to
63:17 - have
63:17 - interpersonal
63:20 - skills uh if you don't have these then
63:22 - I'd aim for a remote worker environment
63:24 - like myself and then we're going to have
63:26 - a programming
63:28 - ability after for the last
63:31 - one now we're also going to oh actually
63:35 - we have a problem Houston we have a
63:39 - problem uh if I noticed that we our
63:43 - little uh scroll up icon is just looking
63:46 - a bit funny so that's going to be in the
63:49 - uh layout component if we just come up
63:51 - here we want to make sure sure that on
63:55 - our button here we have a rounded full
63:59 - but we also have an aspect of
64:03 - square so that's just going to make that
64:05 - circular you can't see it down the
64:07 - bottom but it is there uh so just on
64:10 - that button make sure you have an aspect
64:11 - square but now we can close that and
64:13 - continue what we were doing the other
64:16 - thing we're going to do on uh these is
64:19 - just rearrange some of the checks and
64:23 - colors so in the first one we can see
64:25 - we've got all X's we can't have them all
64:27 - having X's so what I'm going to do is
64:30 - just uh change this one to a
64:36 - check uh on the next one the middle two
64:40 - are going to be
64:41 - checks uh on the third one we're going
64:44 - to have the first
64:46 - two as checks in addition to the oh that
64:49 - was the wrong
64:50 - one well it doesn't really matter as
64:52 - long as we get some variety which means
64:54 - that the last one is going to be the
64:57 - first and third are going to be
65:00 - checks so we should be the only one that
65:03 - has all checks which is exactly what it
65:06 - is and then what we can do is
65:11 - say uh I might actually just add into
65:15 - this TD just
65:18 - here uh for all of them so we'll select
65:21 - all of them and we're going to say
65:24 - white space no wrap and that's just
65:27 - going to make sure that they don't wrap
65:29 - around uh and that they do actually
65:32 - overflow and then we can scroll and then
65:34 - underneath this table well actually the
65:37 - div that contains the table we're going
65:40 - to have a second div and this is going
65:42 - to have a class that says MX
65:46 - Auto uh minus Marin top of 12 italic on
65:50 - a small screen or larger we're going to
65:52 - hide it cuz it's not relevant and we're
65:53 - going to going to say opacity of
65:56 - 50 and in here we're going to have a
65:59 - paragraph that just says uh scroll to
66:03 - see more and then we're going to have
66:05 - the Ampersand RAR for the right arrow
66:09 - and that's just going to have a
66:12 - little scroll to see more on a small
66:14 - screen when we do have the Overflow uh
66:17 - so that people know that that's what the
66:19 - intention is and then if we go to a
66:20 - bigger screen it's not actually going to
66:23 - show there cuz they can just see the
66:24 - whole table so just a good thing to do
66:27 - to make sure that people aren't missing
66:29 - out on seeing all of your amazing
66:34 - skills finally after the div we're going
66:37 - to have a another paragraph that just
66:40 - says class of MX Auto and that's going
66:43 - to say so why not invest because
66:45 - everyone should invest in you guys you
66:47 - guys are
66:48 - great uh also I noticed the complete
66:50 - package is not sitting where it's meant
66:53 - to
66:55 - uh so we have an MX of Auto well
66:58 - actually the complete package is missing
66:59 - a few things to be
67:01 - honest I obviously jumped way over that
67:04 - so if we come up to the complete package
67:06 - that needs to have a class that says
67:09 - text two extra large small breakpoint
67:12 - text through extra large we're going to
67:14 - say font semi bold text Center and
67:19 - Poppins uh and that's going to resolve
67:22 - that for us and I'm also just going to
67:23 - Chuck Poppins in the span
67:27 - Poppins so now that is looking Primo
67:31 - extremo so that's it for our main
67:34 - finally we can come into our footer
67:38 - component this one's not all too
67:40 - complicated we're going to start off
67:42 - with a footer HTML
67:45 - tag who would have guessed we're going
67:48 - to give this a class of padding y 20
67:51 - until we hit a small break point and
67:52 - then it's going to be padding y 32 a
67:55 - background of black so it's going to
67:57 - stand out a border top border solid
68:00 - border
68:02 - Violet 950 pretty dark we're going to
68:05 - give it a flex a flex column a gap of
68:08 - four until a small then it's going to be
68:10 - a gap of eight uh and it's going to be a
68:13 - justify center items
68:16 - center it's going to make everything
68:18 - centered then we're going to have a p
68:20 - that has a class of PX4 py2 background
68:23 - white text slate 950 and a font of
68:27 - medium this is going to say
68:30 - connect uh with me and then we're going
68:33 - to have the amps sand down arrow so this
68:36 - one's a Dar uh followed by the
68:40 - semicolon so I can see that there and
68:42 - I'm sure you can too on your screen it's
68:44 - just heading behind my face then we're
68:46 - going to have a div and this is going to
68:48 - have a class of flex Flex Co a gap of
68:51 - four item Center and a justify
68:56 - Center and here we're going to have a
68:59 - paragraph tag that has a uh bold unit
69:05 - this bold unit is going to have a class
69:07 - of
69:08 - PR2 and this is going to say email and
69:11 - then we're going to have
69:14 - the uh actual email so that's going to
69:17 - be Samuel or whatever your email is
69:21 - Samuel o atgmailcom
69:24 - so we can see that show up down
69:27 - there and now we're just going to
69:29 - essentially duplicate this
69:32 - on uh cuz the second one's going to be a
69:34 - bit
69:37 - different so for the second one what
69:39 - we're going to do is get rid of the
69:40 - Samuel Oak and I'm going to hit enter
69:43 - and instead we're actually going to have
69:44 - an anchor tag that has a class of text
69:48 - Violet 400 it's also going to have a
69:51 - target of underscore blank and an hre
69:53 - equal to whatever the link for the
69:55 - social media that you're adding is going
69:57 - to
69:59 - be in here we're going to have the name
70:02 - of your GitHub so this one should be
70:04 - changed to GitHub instead of email
70:07 - GitHub and in here that's just going to
70:09 - be
70:12 - Samuel
70:14 - Oak uh and then we're going to have
70:17 - a su tag very cool I know that's for
70:22 - superscripts and that's going to contain
70:26 - a span that has a class of text extra
70:30 - small a scale of
70:34 - 70
70:35 - 5 and a padding left of
70:39 - 0.5 and in here we going to have an icon
70:43 - that has a class of fa a solid fa a
70:47 - arrow up
70:49 - right uh from Square all those need to
70:52 - be joined with a H dash we're going to
70:56 - have a text of extra small and we're
70:57 - also going to scale this one by 75%
71:01 - inside of square
71:03 - parentheses close that off and then we
71:05 - get a little up arrow is the moral of
71:08 - the story
71:10 - there still looking pretty big
71:14 - though uh and that's cuz I spelled scale
71:18 - wrong that brings that down to a nice
71:21 - size and then we're going to just
71:22 - duplicate this whole paragraph tag
71:25 - change this one to a
71:28 - LinkedIn uh and then you know the
71:30 - LinkedIn might be the same name so that
71:32 - is all hunky
71:34 - dory and just like that we have our
71:38 - whole portfolio we can see The Links at
71:41 - the bottom light we've just been working
71:42 - on we have the connect with me section
71:44 - it's all super responsive we can see
71:47 - that the different Navigation links work
71:50 - perfectly uh it just oh there's an issue
71:53 - that's not supposed to be there so let's
71:55 - just go to our main come up to the
71:59 - top uh here is our little button on a
72:04 - large screen that should have an MR and
72:07 - the issue with the button is just that
72:10 - when we set the margin right to Auto
72:12 - it's already set to Auto so we have to
72:14 - set the left uh ml to zero should do
72:19 - what we want it to do and now the button
72:21 - is indeed where it
72:22 - is portfolio looks Cash Money the links
72:26 - are responsive everything is great we
72:28 - got our little trolls all looks super
72:30 - professional extremely responsive very
72:33 - beautiful and effective I challenge you
72:36 - all to make some changes and if you do
72:38 - and want to share on show off post it in
72:41 - the Discord so that everybody can have a
72:43 - look and you know get feedback and all
72:45 - that great stuff thank you so much for
72:47 - watching the tutorial my homies and
72:49 - homat if you enjoyed the video don't
72:51 - forget to like And subscribe super
72:52 - appreciate the support and I'll catch
72:54 - you guys in the next one
72:56 - peace are you learning to code but not
72:59 - sure where to start be sure to check out
73:01 - these small James webd roadmap for a
73:03 - whole lot of free beginner resources or
73:06 - dive straight in with these
73:15 - videos