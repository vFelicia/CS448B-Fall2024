00:07 - okay
00:41 - oh hey everybody this is sam
00:44 - uh
00:46 - from python basics doing our bi-weekly
00:50 - streams so today we're going to be
00:52 - looking at t kenter and building a
00:55 - little t-kenter calculator so
00:59 - is anyone
01:02 - uh familiar
01:04 - with
01:05 - what a gui is has anybody ever heard
01:08 - that term
01:10 - gui so it's
01:13 - graphical user
01:15 - interface
01:16 - and all that is is
01:18 - how are we going to interact with a user
01:22 - and take input
01:24 - and put it on the screen and have it be
01:27 - visual
01:29 - so we just aren't uh using command line
01:32 - things and things like that
01:34 - so all right
01:35 - let's go ahead and
01:37 - just get after it
01:42 - all right
01:45 - and jan if you have anything
01:48 - that is getting out of hand
01:50 - because i think you are
01:52 - a moderator as well if i recall
01:56 - i think i hope they gave you access
01:58 - because i don't see cardinal here
02:00 - because i think he did it two weeks ago
02:02 - okay so let's just go ahead and get
02:04 - after it so one of the gui modules in
02:08 - with from python
02:10 - is tkenter
02:13 - and it is literally just like this
02:17 - i think one time i heard
02:20 - uh tktk enter but i know
02:25 - i know it as tkenter so all right i just
02:28 - saw a comment about the volume is
02:32 - is the volume not that great
02:43 - all right this is the first time
02:52 - okay volume's okay
02:54 - all right
03:00 - oh okay jan i thought we gave you
03:03 - admin we'll we'll talk we'll talk on uh
03:07 - discord after this
03:09 - i don't see cardinal yet all right
03:11 - okay so
03:13 - tkenter let's just get into it so we
03:15 - bring in t kenter and we know
03:17 - all the little tricks well
03:19 - we're going to use some aliasing because
03:21 - i don't
03:22 - want to
03:24 - type a lot like like normal all right so
03:28 - i do der
03:29 - and i do tk
03:31 - and here are all of my functions and
03:33 - methods that i use
03:38 - um to get things going and the first the
03:41 - very first
03:42 - step
03:43 - is this
03:45 - tk capital t
03:47 - capital k
03:48 - so let's look and see
03:50 - what in the world
03:52 - this does
03:53 - so i'm going to just we're just going to
03:55 - walk through it we're going to get a lot
03:56 - a few
03:58 - few little learning things out of the
03:59 - way and then we're gonna jump onto the
04:01 - calculator and
04:03 - uh you have to forgive me if i sound
04:06 - um
04:07 - if i mumble a little bit today
04:10 - i have
04:11 - i had some mouth
04:14 - some some dental things done and it's
04:16 - i'm not completely recovered so
04:20 - well
04:21 - let's not get ahead of ourselves so
04:23 - let's look at help
04:25 - tk
04:26 - capital t capital k so
04:32 - all right
04:34 - it's a lowercase k
04:41 - now look how big this
04:43 - all of this is so let's bring this over
04:46 - so it's going to make a
04:47 - whoa
04:48 - screen
04:50 - so i got some optional arguments here
04:52 - but it's going to make a
04:54 - object top level widget and all that is
04:56 - is a fancy way to say
04:58 - i've made an i've made an object
05:04 - and we can do a tremendous amount of
05:07 - things with this but this is our
05:09 - building block this is our actual window
05:12 - then we can do things to that and inside
05:15 - of that window
05:17 - so
05:18 - tk
05:22 - now i'm going to show you that you can
05:24 - get this to work
05:25 - but this is not best practice right here
05:28 - this is not best practice to do
05:32 - i will show you best practice let's
05:34 - close this down so we can see
05:36 - so we're actually going to create our
05:37 - window object
05:39 - this is i just got it going but it's
05:42 - we're not in control of it right now
05:44 - it's just there
05:45 - so now
05:47 - now we're having a little bit more
05:49 - control and i have
05:52 - a
05:54 - now let's look
05:57 - and
05:58 - t canter objects begin
06:01 - to layer very quickly so i want to show
06:03 - you
06:04 - now that
06:09 - now i have
06:11 - an object
06:12 - that then now has a tremendous amount of
06:18 - items that we can do
06:24 - oh yes everybody jan awesome thank you
06:27 - this is now our 11th video in this
06:30 - series
06:31 - so we've done
06:32 - we've done a lot of basics
06:35 - we've done a little bit of problem
06:36 - solving
06:38 - we've looked i think the only thing that
06:39 - i need to add to today
06:41 - that
06:43 - we haven't done is we're going to look
06:44 - at
06:47 - um
06:48 - the
06:49 - evaluate function that's about the only
06:51 - thing i don't think we have touched on
06:53 - but um yes you can use idle the reason
06:56 - why
06:57 - the reason why i use this is
07:01 - specifically for beginners this
07:03 - everything that i'm doing is
07:05 - really based around somebody who has
07:07 - never
07:08 - used python
07:09 - so
07:11 - these are the tools that you get
07:13 - and
07:14 - everybody can use them i do
07:17 - i use others but i don't want you
07:20 - i want you to find something that works
07:21 - for you but everything that we do here
07:24 - you can do an idle you have this script
07:26 - editor which is fine which gets the job
07:28 - done and of course then you have the
07:30 - interpreter shell
07:32 - so it's it's fine it's a great starting
07:34 - place and you can do everything here you
07:36 - don't have to worry about
07:38 - um
07:39 - importing
07:41 - and environments you don't have to deal
07:42 - with any of that that's why we're doing
07:44 - this so okay
07:45 - now
07:46 - let's find something called main loop
07:49 - let's see if i can do my alphabet
07:52 - very well but the next thing is that we
07:55 - are controlling this but it's not really
07:57 - quite
07:58 - controlled
07:59 - let's see
08:01 - there
08:02 - i didn't want to embarrass myself
08:04 - anymore main loop right here this is how
08:07 - we actually
08:08 - control
08:10 - and have best practice
08:14 - where i'm literally controlling
08:19 - everything and then now i close it okay
08:22 - so now let's start getting into
08:26 - some more controls of this
08:28 - window so i've just assigned my tk
08:31 - object
08:33 - into a variable win
08:35 - then i take my win
08:37 - object and i run my main loop
08:39 - on it
08:40 - so we didn't even look at that
08:43 - when dot
08:45 - main loop
08:46 - but again if you are new here
08:48 - great we're glad to have you here make
08:50 - sure you're supporting
08:52 - free code camp wonderful organization
08:54 - i've gotten to know quincy and bo
08:56 - over the past few months
08:58 - and uh their team is doing some
09:00 - wonderful things
09:02 - to ensure and i've had my youtube
09:04 - channel if you're interested in seeing
09:06 - any of these things down in the
09:08 - description below is a
09:11 - link to my channel
09:12 - everything that i've done on here
09:14 - has micro videos over there
09:17 - so if you like long format
09:19 - great here we are if you get overwhelmed
09:22 - and you want shorter format you can jump
09:23 - over there and i have little micro
09:25 - videos but
09:27 - i believe in what uh quincy is wanting
09:30 - to do
09:31 - and uh
09:33 - that's why i'm spending my time here and
09:35 - giving you guys some really good
09:38 - info best practice
09:40 - and some pretty good skills so all right
09:43 - main loop call the main loop tk okay
09:46 - that's pretty self-explanatory
09:48 - now
09:49 - now let's look at how to control the
09:51 - window because right now
09:54 - python and tkenter are just doing what
09:57 - they know
09:59 - showing where
10:00 - what size to be
10:02 - no information and
10:04 - nothing else
10:06 - so let's see
10:08 - let's run der
10:11 - on
10:12 - when
10:13 - see what we get
10:15 - should be
10:17 - no title
10:19 - is that something that we can do okay
10:22 - here we go
10:24 - i can have
10:26 - a title
10:27 - so let's look and see how this works
10:32 - so help
10:34 - when
10:35 - dot
10:36 - title
10:37 - okay
10:39 - automatically defaults to none
10:41 - set the title for this widget or for our
10:44 - window
10:45 - the term widget is a term that's been
10:46 - around for
10:48 - decades it's an indiscriminate
10:50 - way to describe an object here's an
10:52 - object
10:54 - and then i'm sure you've seen it on your
10:56 - phones now it's been pretty much adopted
10:59 - everywhere
11:04 - what's up cardinal thanks for joining us
11:06 - today all right cardinals are admin we
11:08 - need to make sure cardinal remind me to
11:10 - uh let's get jan
11:12 - um admin i thought i sent that off to
11:15 - free code camp
11:16 - to to bow
11:18 - um
11:19 - help me remember because i don't want
11:21 - you getting overwhelmed but yes we have
11:22 - two awesome uh or we will have two
11:25 - awesome i don't think uh yeah it's
11:27 - supposed to be the wrench okay
11:29 - yeah so something went wrong but uh all
11:32 - right glad to have everybody here uh
11:34 - let's get after it so when
11:36 - dot
11:39 - title
11:41 - and what did we learn right here oh and
11:43 - look at this
11:44 - we bring in
11:46 - a we pass in a string
11:49 - calculator
11:52 - let's see if i spell right
11:55 - get all of my things
11:59 - so boom
12:02 - okay
12:03 - now let's see it automatically
12:06 - or
12:07 - default
12:08 - it's its default argument goes to a
12:11 - certain size
12:13 - so
12:14 - let's see what other tools because i can
12:18 - shrink this and here we go
12:20 - so that's not very handy that this just
12:22 - comes out
12:23 - and is of a
12:26 - it's not that if i start putting buttons
12:28 - here
12:29 - so one i at least want to be able to see
12:31 - calculator so guess what python and tk
12:34 - enter have solved this for us
12:40 - and there's two ways we can do this
12:48 - help not win
12:50 - dot configure
12:53 - [Music]
12:55 - all right so now this can take multiple
13:01 - arguments
13:02 - we're going to look at a couple of them
13:06 - so when dot
13:08 - config
13:10 - ear
13:12 - and
13:13 - so we got
13:15 - width
13:18 - 300
13:20 - height
13:23 - 300.
13:24 - so now i'm starting to control the size
13:29 - okay so here we are right now
13:32 - now
13:33 - you can also
13:35 - pass in
13:37 - a
13:38 - background we're not going to go into
13:40 - all of them but you have a tremendous
13:42 - amount of control
13:46 - over
13:48 - your window oops
13:50 - i think i spelled background wrong
13:54 - and
13:57 - i got me an n
13:59 - forgot an n boom there we are
14:02 - so
14:03 - this is one way to control
14:07 - now i'm going to show you
14:08 - another way
14:10 - to control
14:24 - t-r-y
14:25 - if you're
14:26 - if you've been here a while you've heard
14:28 - me say that i am not a speller now this
14:30 - takes a string
14:32 - for the dimensions so we're going to
14:33 - pass in
14:35 - the exact amount and then i'm going to
14:37 - click over
14:38 - and
14:39 - i think my kids are right i think i do
14:41 - need
14:42 - a third
14:45 - yeah guys look
14:47 - the comments need to be
14:50 - uh python related and if we can have
14:53 - them be just specifically related to
14:55 - this tutorial because the mods have been
14:57 - instructed to um
14:59 - to just kick you because look we have a
15:02 - lot of because it it it was um only
15:05 - member chat only but um had a chat with
15:08 - quincy and we wanted
15:10 - as many people to be involved as
15:13 - possible um so let this is your warning
15:17 - i want you if you want to be here to
15:19 - learn let's learn but the mods have been
15:21 - instructed to just kick you all right so
15:24 - the geometry so if we look right here
15:26 - okay so we got our 300 great whoopty do
15:30 - okay it's the same thing i can do it two
15:31 - ways now what i think is so cool about
15:34 - the geometry is that
15:36 - that method is now you can control
15:39 - where where it appears on the screen
15:42 - and we use the
15:45 - addition sign
15:49 - to control
15:50 - where it shows up
15:52 - so let's see
15:54 - let's do 200
15:57 - and 200.
16:00 - zero zeros in the top corner
16:02 - uh x and y as they move down
16:05 - so if i make this 500
16:10 - as you can see it moves over
16:12 - x y alright
16:14 - so now that we have a little bit of
16:17 - a few of those things out of the way
16:20 - now
16:21 - now let's get into
16:23 - uh
16:24 - i do want to show you some labels and
16:27 - then we'll get into the calculator more
16:29 - but i also want you to understand labels
16:30 - and buttons
16:32 - so
16:33 - and because we do need to look at
16:35 - packing so let's just do this so to do
16:39 - label
16:41 - and we are just scratching the surface
16:44 - of
16:46 - tk
16:52 - now also
16:57 - there is and i don't know if it's in
16:59 - this lesson that i go over as
17:03 - the difference between because there's
17:05 - there's two
17:07 - um
17:08 - there's tk
17:09 - and then there's ttk running
17:12 - in in the uh also in the same library
17:15 - and one is a smoother rounding edges of
17:20 - buttons and things and it's just there's
17:22 - a little bit more there's a little bit
17:23 - more touch to it so if you
17:26 - are interested in having it be a little
17:28 - bit softer
17:31 - then this this piece of tkenter is very
17:35 - nice and we'll just go ahead and look at
17:37 - it so ttk
17:38 - dot label
17:40 - dot win so
17:42 - i want a label
17:43 - i want it associated with
17:46 - this object
17:48 - and then this is the text that i want
17:51 - this label whoops
17:53 - to display
17:55 - and we'll just go with the standard
17:56 - hello world
17:59 - close this out
18:03 - all right i forgot a very important part
18:05 - of this
18:11 - all right would i leave out ttk
18:15 - label
18:18 - for tkenter
18:19 - [Music]
18:22 - label dot
18:24 - pack
18:32 - shoot
18:33 - what am i missing
18:36 - let me check my notes
18:54 - all right
18:56 - okay i guess something is i could not
18:59 - believe that i've misplaced
19:01 - the notes on
19:06 - uh labels so we'll just go ahead and get
19:09 - into
19:11 - the calculator
19:13 - i guess i
19:15 - i could have sworn these are the right
19:17 - notes okay well i apologize
19:23 - tktk object
19:26 - win
19:29 - oh
19:34 - this is all capital i forgot that
19:37 - there we go
19:39 - and then
19:41 - there's not a lot of difference with um
19:45 - the the labeling
19:47 - but with buttons they have a little
19:49 - smoother edge to it so
19:51 - actually let's look at a button
19:56 - and i do want to show this is an
19:58 - important lesson here
20:01 - about
20:04 - uh placement and order
20:08 - so i want to move this
20:11 - to show
20:18 - button
20:19 - when
20:21 - dot text text argument and we're going
20:24 - to learn a lot about arguments here in a
20:26 - little bit all different varieties of
20:28 - arguments that are already
20:30 - that are set so i run this i get my
20:33 - label but my butt my button didn't show
20:35 - up
20:36 - and it's because it did not get packed
20:39 - packaged
20:45 - all right
20:46 - uh so button
20:50 - dot pack
20:55 - so i want to show you
20:56 - i move this
21:06 - so i just moved button
21:08 - so let's see
21:14 - all right it didn't move
21:17 - it is how this
21:19 - is
21:20 - the order is by how this is packed
21:26 - so wherever it does not matter the
21:28 - arguments that you create the variables
21:30 - the arguments you create and the
21:31 - variable they're assigned to right
21:33 - that's what we do with our equal sign if
21:34 - we have some very very
21:36 - new
21:37 - individuals here
21:38 - it is the order in which they are packed
21:41 - packaged up all right that is probably
21:43 - the most important thing that you need
21:45 - to understand
21:48 - um yeah cardinal just uh i don't want
21:51 - you having a headache if uh
21:54 - look guys cardinal is here to
21:56 - partake and help
21:58 - um and also learn
22:00 - so if we if you guys yep we are going to
22:03 - be getting to grid we're going to we're
22:06 - going to get there
22:07 - we're going to get there um i'm look
22:10 - everything i always do i assume there is
22:13 - someone here
22:15 - who has no experience with it and i want
22:17 - them to understand something i want
22:19 - everybody who's sitting here to never
22:22 - feel overwhelmed
22:23 - that's the point of all my videos and
22:25 - all my streams so there we go alright
22:28 - so we're
22:29 - packing is very important because if you
22:32 - do not do that
22:34 - doesn't happen now
22:36 - as someone was
22:37 - chatting about
22:39 - grid why don't you use grid
22:41 - well we are i want you to understand
22:43 - that you can have
22:45 - a very explicit control and how things
22:47 - come out all right
22:50 - so we got 30 i got about 36 minutes so
22:53 - let's just get after
22:57 - the calculator so this is
23:00 - i didn't show you guys
23:06 - this is i got this on the other screen
23:08 - so we're only going to see
23:09 - this is going to be our end result
23:11 - we're going to take button presses
23:15 - plus 5
23:17 - boom so the only thing that we should
23:20 - not know in this example
23:22 - is the evaluation function i've gone
23:25 - over everything here
23:27 - all right
23:28 - so let's get after it so we got
23:30 - calculator we got some geometry
23:33 - let's see where we
23:34 - need to be and we're going to have
23:36 - quite a few things to learn so we're
23:38 - going to go slow and we're just going to
23:39 - get them
23:41 - all
23:42 - all down
23:44 - all right
23:45 - let's see
23:48 - let's get in the right spot and see
23:50 - where we need to start
23:56 - but yeah i'm really glad to have
23:58 - everybody here i really enjoy doing this
24:00 - uh free code camp
24:02 - is a wonderful organization
24:06 - and i'm very grateful that i get to
24:08 - participate and do these streams and
24:11 - thank you everybody for showing up here
24:13 - i know my schedule keeps changing and i
24:16 - did not want to stop doing these so
24:19 - we've moved to every other week because
24:22 - i don't want to just say no but i can
24:24 - get it i can get enough stuff done and
24:25 - carve out uh an hour every two weeks but
24:28 - it was getting to the point
24:30 - where uh it was becoming more
24:32 - challenging
24:34 - so all right
24:35 - why don't we get the buttons
24:38 - and the layout on the screen
24:40 - and then because we have we have a
24:42 - tremendous
24:43 - amount to do and a lot of arguments so
24:45 - we got a lot of typing to do
24:48 - so let's
24:49 - let's just start there
24:51 - so like like somebody commented earlier
24:54 - why didn't we use
24:56 - why don't we use grid well
24:59 - we are
25:00 - because
25:02 - when
25:03 - when you have buttons and you're using
25:05 - coordinates and it becomes a headache
25:07 - well
25:08 - t kenter and python had thought about
25:11 - this
25:12 - so why don't we do columns and span span
25:16 - is um uh base basically padding
25:20 - and then columns and rows
25:22 - sorry there we go
25:25 - let's get
25:26 - started
25:28 - so we have button
25:30 - and we're just going to name them
25:34 - button seven
25:35 - so we're gonna here
25:39 - let's get this up so we can have a
25:43 - so we don't have to think about it we
25:45 - can keep this up over here
25:48 - all right so we're going to do 7
25:51 - an 8 9 and a crossed and then we're
25:53 - going to check it always check it and
25:55 - then go from there
25:57 - so button
25:58 - equals
26:01 - all right
26:02 - ttk button
26:07 - then where's it going it's going in our
26:09 - win
26:10 - it's text is going to be seven
26:16 - now here's we're not going to do the
26:17 - commands yet we're going to do we're
26:19 - just going to get it
26:21 - we're just going to get it to the screen
26:23 - so then
26:24 - basically a different type of packing
26:28 - button
26:30 - 7
26:31 - dot grid
26:36 - and then where do we want this we want
26:38 - it on row
26:40 - one
26:41 - and column
26:43 - i hate the word column i can never spell
26:45 - it
26:46 - the moon call le moon
26:48 - column zero
26:50 - all right and we got lots of typing
26:54 - and we're not copying because i will
26:57 - make a mistake and i'm going to live
27:01 - ttk
27:03 - button
27:04 - i think when i did this on the video on
27:06 - my channel i i edited it out because i
27:10 - made so many mistakes all right when
27:13 - dot text dot eight
27:16 - and
27:17 - button underscore eight
27:20 - dot grid and we're going to move over
27:23 - so
27:25 - same row
27:31 - all right
27:32 - i haven't checked on chat everybody
27:34 - hanging in there everybody doing okay
27:36 - all right
27:38 - it's the same row different column
27:46 - all right
27:52 - all right
27:54 - jan cardinal anything i need to know
27:55 - about
27:57 - all right so then over one
28:00 - all right then button so we got seven
28:03 - eight nine
28:04 - just like our keyboard just like this
28:06 - now i like the phone does anybody ever
28:08 - notice that it's just upside down five
28:09 - is always in the middle
28:11 - i was a weird kid i noticed that when i
28:12 - was very young
28:16 - all right so the 9
28:18 - equals ttk
28:21 - button button
28:23 - when
28:25 - text
28:26 - because we're going to have a dilemma
28:27 - here in a little bit that we're going to
28:28 - have to solve
28:32 - underscore nine
28:34 - dot grid
28:37 - row
28:39 - oops i think i'm changing
28:41 - something
28:42 - yep rows stay the same
28:45 - columns change
28:47 - row one
28:53 - i think i can shrink this and see both
28:56 - chat and
29:01 - okay the plus
29:04 - plus 500 plus 200
29:06 - that is the location those are the
29:07 - coordinates on the screen x
29:10 - so to differentiate and this so the
29:12 - times is 300
29:14 - by 300 pixels
29:17 - then the plus is
29:19 - telling tkenter
29:21 - i want
29:23 - that is now going to be i'm
29:24 - differentiating between
29:28 - um
29:29 - the dimensions the size and the
29:31 - placement so i wanted it pixel 500 down
29:35 - and
29:36 - excuse me 500 over 200 down that was the
29:39 - plus great great great question
29:43 - all right
29:47 - because look i will also tell you guys
29:49 - if you have a question and if you're not
29:52 - sure
29:53 - please please please ask it
29:55 - because somebody else has that question
29:58 - or if it's something you just learned
30:01 - ask it and
30:04 - some or if you figured it out while
30:05 - you're watching it
30:07 - still ask it because somebody else
30:08 - doesn't have that information
30:11 - because sometimes when i'll be
30:13 - in having discussions i'll ask a
30:16 - question even if i know the answer
30:18 - because i know somebody else there
30:21 - doesn't know
30:22 - and then i might even ask it itself
30:24 - because that was one of the things
30:26 - about um
30:28 - what um
30:29 - quora and stack flow
30:32 - post a question you know the answer to
30:33 - that you just learned and then
30:35 - and then uh go from there so all right
30:38 - now oops
30:39 - i made a boo-boo
30:42 - these all need to be strings
30:53 - all right so here's my divisor sign so
30:55 - i'm moving across seven eight nine
30:58 - and in my divisor
31:00 - all right then
31:02 - button underscore d
31:05 - dot grid
31:08 - then row
31:11 - 1
31:16 - column we may start copying i hate it
31:20 - but i don't i want to get i want to get
31:22 - through as much as possible sorry this
31:24 - is my other one let's run this
31:27 - see how we do
31:29 - all right
31:31 - so we're getting close
31:34 - so now the problem is
31:36 - with this one we do not need this size
31:39 - we're going to allow
31:41 - python to help us with the sizing
31:44 - all right so that's all we have that's
31:46 - all we need so boom i turned this off
31:48 - and i said python go ahead and just size
31:50 - this
31:53 - uh to what it need needs to be all right
31:55 - so we just came through
31:57 - and we did all these
31:59 - all right let's get going on our
32:02 - where'd our second one go
32:08 - did it kick it out
32:10 - i think it did because i'm using the
32:12 - same interpreter okay so four five six
32:15 - four five six multiplication
32:19 - all right
32:21 - help me make sure i don't make a mistake
32:23 - here everybody
32:24 - all right so four
32:28 - we got a lot to cover
32:30 - four
32:32 - four
32:33 - nope see i already did it five
32:36 - five
32:38 - six
32:40 - six and then uh what do i do what did i
32:43 - do when i s what did i say for this one
32:48 - i think i did m for multiplication
32:52 - so now we got to get this right so this
32:54 - is four
32:56 - this is five
33:01 - six
33:02 - and multiplication
33:04 - all right
33:05 - so let's kick that out let's test oops
33:08 - grid
33:09 - so now we're all down a row
33:11 - excuse we're all down a row columns are
33:14 - the same
33:15 - we're all down a row
33:18 - now let's check this out
33:19 - now i've left out something there's a
33:21 - huge
33:22 - huge important piece but i want to let's
33:25 - get this all to the screen and then we
33:26 - need to learn about some very important
33:28 - things in tkenter
33:31 - all
33:36 - right actually the original versions of
33:41 - uh youtube
33:42 - uh was was python and um
33:46 - uh django
33:48 - if i if i recall my reading
33:51 - correctly if i remember my python
33:54 - history
33:57 - same thing with pinterest
34:00 - if i remember all right
34:02 - so we got
34:03 - two rows
34:05 - let's keep going
34:06 - so we're doing we did very very good
34:13 - we didn't screw up too bad
34:21 - uh let's see our notes
34:25 - actually we need to look at our example
34:28 - i'm feeling very
34:29 - feeling very nervous about our
34:31 - all right
34:33 - so we got one
34:37 - one
34:39 - two
34:40 - two
34:42 - three
34:43 - three
34:45 - then subtraction
34:48 - so let's get changing all this so 1
34:52 - 2
34:54 - 3
34:57 - subtraction the subtraction sign all
34:59 - right close that
35:01 - save run let's see how we're doing all
35:03 - right i have missed something
35:06 - because what just happened so i have 7 8
35:09 - 9 1 2 3
35:12 - i did not change my rows
35:15 - this is why i hate copying you will
35:17 - never ever ever
35:20 - okay i will never
35:22 - get everything correct on the first go
35:25 - round
35:27 - so we got seven eight nine one two three
35:30 - four five six seven eight nine so we
35:33 - have
35:34 - we have seven of the nut we have nine of
35:36 - the numbers and we have three of the
35:38 - multiplication
35:40 - so we have uh we still have a problem
35:44 - all right run this
35:46 - what are we missing
35:48 - okay we need a zero
35:50 - we need a decimal we need a clear sign
35:54 - we need a
35:56 - um
35:58 - addition sign and then we need an equal
36:00 - sign so let's
36:02 - let's go let's deal with let's deal with
36:04 - our fourth one here and then we have a
36:06 - problem right here
36:09 - that we need to deal with we got two
36:10 - actual pretty big problems
36:14 - and
36:15 - some issues with the whole screen right
36:18 - all right
36:19 - i think we're doing good we got 23
36:22 - minutes so now
36:23 - we got let's see we got 0
36:29 - 0
36:30 - we're just going to stay with our little
36:32 - format
36:34 - dot
36:35 - i guess i could have called that decimal
36:38 - but we're going to stick with dot
36:40 - just to keep my notes so
36:43 - when i mess something else up we'll see
36:45 - then we clear it our clear
36:54 - oops
36:56 - this is again a perfect example
37:01 - i just pasted
37:07 - and i started changing in the wrong spot
37:08 - one two three
37:10 - okay let's see
37:12 - yep
37:15 - okay
37:16 - so zero
37:18 - zero
37:20 - then
37:21 - dot
37:25 - dot
37:26 - but yeah what we're going to be doing
37:28 - next is we need to we're going to be
37:30 - able to solve the entry bar or excuse me
37:32 - the equal button
37:34 - but our entry
37:36 - we have an entry bar that has a lot of
37:38 - things that we can do with them we're
37:39 - going to need to solve that so now
37:41 - here's our addition sign
37:42 - and then
37:44 - and here's
37:45 - uh
37:46 - oops
37:53 - one two clear
37:56 - forgot clear
37:58 - and then yeah
38:00 - i'm reading the
38:02 - wrong and then a
38:05 - then we need to deal with
38:07 - our entry
38:08 - our equal sign
38:10 - in a minute
38:16 - yes uh up up above if you're not on full
38:19 - screen you can see uh playlist click on
38:22 - the playlist and beau has done a great
38:25 - job of organizing these all they're in
38:27 - sequential order and like uh jan and
38:30 - cardinal were saying this is the 11th
38:33 - 11th one so all right let's close this
38:36 - out let's see what we did nope
38:38 - missed one more thing
38:40 - row four
38:43 - columns are the same just changing our
38:45 - rows
38:46 - let's see how we did
38:48 - all right we are getting very very close
38:52 - so we need we need an entry bar
38:55 - an entry uh
38:56 - widget and then we need just one big
38:59 - button to go across
39:01 - and this is how we do it
39:04 - so we go
39:10 - then we're going to learn about a new
39:13 - just copy this i hate doing this guys i
39:16 - just don't want to bore you guys
39:18 - with everything so our equal sign
39:23 - all right
39:25 - so then this is going to be
39:29 - equals
39:32 - e
39:34 - so this is row five
39:37 - now instead of column three well here
39:40 - let's run this we're gonna have a
39:42 - problem
39:44 - okay we got our equal sign here but we
39:46 - want this to run the whole
39:48 - span
39:49 - so we have our padding right here this
39:51 - is
39:52 - as we can see python is handling our
39:54 - padding we can we can do more with that
39:56 - if we'd like
39:57 - but
39:58 - we had how many buttons going across
40:01 - one two three four so we we were telling
40:04 - python we have column zero one two three
40:08 - okay we understand that that that's zero
40:10 - indexing that's four so here's a new
40:12 - argument column
40:14 - span
40:16 - and we're gonna change this to four so
40:18 - hey
40:19 - here's a button here's a row take up
40:22 - four columns
40:26 - oops
40:29 - take up four columns and then there's
40:31 - one more little thing so hey go in the
40:33 - middle
40:35 - and then there's a little term forgot
40:37 - this one sticky
40:39 - well which way how far do you want me to
40:40 - go
40:41 - and these are directional
40:43 - the compass directional north south east
40:46 - and west north south east and west i
40:47 - love this
40:48 - this is probably one of the coolest
40:50 - things that i learned about tkenter i
40:51 - want you to stretch it
40:53 - take up four
40:54 - and go out in all directions
40:57 - boom
40:58 - now
40:59 - all right
41:00 - now we got into it shoot i got we got to
41:02 - keep moving
41:04 - okay
41:05 - now we gotta learn and take on some a
41:08 - little bit of uh
41:11 - we gotta get into some housekeeping up
41:13 - here
41:14 - okay
41:16 - we need to learn about an entry bar
41:20 - okay
41:22 - entry
41:24 - ttk
41:25 - dot
41:26 - capital
41:27 - and tree and if you've noticed most of
41:30 - these objects begin with a capital
41:33 - i had forgotten that
41:35 - all right so we get when
41:38 - we get
41:43 - now when we're going to employ what we
41:45 - just learned
41:47 - about
41:48 - so grid now where did i start my row
41:52 - i did this kind of on purpose
41:54 - so we wouldn't have to do anything silly
41:55 - so this is row one for our numbers so
41:58 - now we're going to do this this needs to
41:59 - be at the top so this is going to be row
42:01 - 0.
42:02 - so row
42:04 - 0
42:06 - column span
42:12 - one day i promise i will learn how to
42:14 - spell a
42:16 - column
42:17 - so column span 4
42:20 - and our sticky
42:27 - no i wish i knew another language i did
42:30 - do something and i hope i didn't offend
42:32 - everybody it was a while ago over on my
42:34 - channel but i think the top
42:36 - seven languages
42:38 - i went and um
42:41 - tried to say them if i say what if i say
42:44 - thank you in hindi if i can remem i
42:47 - remember correctly
42:48 - danyavad
42:50 - how'd i do how'd i do with the accent
42:54 - um
42:55 - but i wish
42:57 - and actually i've thought about getting
42:59 - some people that i know
43:01 - to translate for me
43:05 - um
43:06 - was that pretty good
43:13 - i did do good okay
43:16 - well thank you all right so sticky north
43:18 - south east and west
43:20 - north south east and west
43:22 - i will tell you a silly thing and i
43:23 - heard my oldest say it not too long ago
43:32 - never eat soggy waffles that's the
43:35 - compass around so you know the direction
43:37 - it goes in
43:40 - all right
43:47 - okay so now we need to handle some
43:49 - commands here in a bit uh a minute
43:53 - to get this math to do it but it looks
43:55 - like we'll run a little bit over i have
43:56 - a little bit of a cushion
43:57 - but uh okay so let's run this
44:01 - okay now i'm going to show you a problem
44:02 - that we have to solve if this drives you
44:05 - nuts like it does me
44:07 - to have
44:08 - numbers come out and start over there
44:10 - and work their way backwards
44:13 - i hate that i think it should be
44:16 - over here but it defaults to go over
44:18 - there but guess what
44:19 - we have a way
44:21 - to handle this and we use
44:27 - the
44:30 - argument
44:31 - justify
44:34 - and we want i want this
44:36 - to the right
44:39 - all right let's see what i did
44:41 - and then we're going to need to handle
44:42 - so now
44:45 - boom
44:46 - boom okay all right
44:49 - but
44:50 - we don't we don't we got we got nothing
44:52 - we got not we don't have anything coming
44:54 - up right now
44:56 - so we need
44:58 - we need to start
45:00 - handling
45:01 - all of these things and the way that
45:04 - you do this
45:06 - is you create a function shoot am i am i
45:09 - in frame then moving around okay cool i
45:12 - didn't want to be all out of frame like
45:13 - this i remember i've seen some videos i
45:15 - think a few of my first i was i was all
45:18 - out of frame and it drove me nuts i
45:19 - think i'd talk like this i hated it okay
45:22 - but uh i was moving stuff around today
45:24 - but yeah hey guys don't forget to make
45:26 - sure we're uh buying some uh free code
45:28 - camp merch uh because they're doing a
45:30 - lot of great work okay i digress
45:33 - we gotta get this going
45:36 - uh here we go
45:38 - so we gotta we gotta start handling some
45:40 - things
45:42 - so we need to have a press definition
45:47 - a function
45:51 - and this is going to how we this is
45:54 - going to be how we get keys
45:56 - keys on the screen
45:58 - and we need to create a couple
46:01 - a couple little uh
46:03 - expression we need this to be an empty
46:06 - string of what because we're going to
46:08 - add to it and we're going to be moving
46:11 - in and out of functions so we're going
46:12 - to use the global keyword
46:15 - sticky was
46:18 - how where do you want it to go and i
46:19 - wanted it to go to all edges i wanted to
46:21 - go to the top of the uh
46:24 - row i wanted to go to the bottom of the
46:25 - row i wanted to go to the right of the
46:26 - row wanted to go to the left of the row
46:28 - so i took this and i literally stretched
46:30 - it out for my equal sign
46:33 - and um
46:36 - my my entry bar so i set had it spread
46:39 - in all four directions north south east
46:41 - and west all four great question thank
46:43 - you
46:47 - perfect it will span column in all
46:49 - directions boom
46:52 - all right so now we're going to take in
46:54 - this global
46:57 - because we're we need to be able to
46:59 - bring this in from outside the function
47:01 - and make it available outside it's going
47:03 - to pass through and through because it's
47:06 - going to be passed to another function
47:07 - here very shortly
47:11 - so our
47:12 - cursor which we'll deal with in just a
47:14 - second
47:16 - gets moved in and out
47:28 - all right
47:30 - then we need to handle
47:33 - oh and we need to look at text
47:36 - okay we need to do this too
47:38 - all right we need to create an object
47:41 - that is a
47:42 - string
47:44 - a t t kenter
47:47 - string object how t kenter handles
47:49 - strings and this is how it does it
47:52 - uh
47:54 - text
47:55 - tk
47:56 - dot
47:57 - string let me get that out of the way
47:59 - string
48:01 - var
48:04 - alright so this is how it grabs
48:06 - information that you're passing to it
48:09 - and that is going to be our cursor this
48:12 - is the equivalent of our cursor and what
48:14 - information is associated to it that's
48:16 - what we need to know right now
48:18 - so now as we press
48:20 - our expression is going to
48:23 - increment up
48:25 - by the string of whatever num
48:28 - we take in
48:31 - now there's another
48:33 - issue that each time we set
48:36 - we take in this information
48:38 - we need to re-assign
48:43 - i'm setting
48:45 - this object
48:47 - i'm adjusting it every time through
48:50 - this text object
48:52 - this object and you have to each time
48:54 - you have a new one this is how i want
48:55 - you to think about it this is how i told
48:57 - one student one time
48:59 - the reason why you need different
49:00 - objects is this is this is the
49:03 - present
49:05 - and this is the box so you could buy
49:08 - like you could go to a shelf and you
49:09 - wanted to buy a bunch of gifts that were
49:11 - the same but you wanted to give them to
49:13 - different people you would grab all of
49:15 - the same objects but you'd wrap them in
49:18 - different presents that they would do
49:20 - different things that's how you want to
49:22 - think about this
49:24 - so all right we got global we got global
49:26 - so now here is my
49:29 - press
49:30 - function
49:32 - but now i need to then link
49:35 - this
49:36 - ability this command
49:38 - to each
49:39 - button
49:41 - and each a button object has
49:47 - a
49:52 - argument
49:53 - called command so then i'm going to link
49:55 - these two together so whatever
49:57 - command or function activity i would
50:00 - like this button to do i use the
50:03 - argument
50:04 - i use the command argument and link
50:07 - that function
50:08 - to that command
50:10 - for that button all right i know this is
50:13 - a lot but we're going to keep going slow
50:16 - and then for button presses
50:18 - we're going to use the lambda
50:22 - all right
50:23 - then
50:24 - press and this is seven so that i want a
50:27 - seven to go so guess what
50:29 - we're going to copy a bunch of stuff i
50:31 - hate this so bear with me
50:35 - did i get that last one okay there we go
50:40 - so i need to copy this
50:45 - paste
50:46 - paste
50:51 - paste
50:53 - paste
50:55 - paste
50:56 - paste
50:58 - paste and we need to change a couple we
51:00 - gotta change a lot but the actual keys
51:02 - not the but not the numbers
51:05 - they get treated a little bit different
51:06 - they get they get the string and then we
51:08 - need to talk about
51:09 - the evaluation function
51:11 - ooh
51:13 - somebody didn't catch this
51:18 - all right
51:22 - 0
51:24 - decimal
51:25 - [Music]
51:29 - c
51:31 - and addition
51:32 - so now let's just go ahead and start
51:33 - here so then this is the addition sign
51:37 - the addition function because excuse me
51:40 - the addition
51:43 - operator because we're going to throw
51:44 - this into an eval evaluation
51:50 - we'll deal with this clear in a minute
51:54 - because we're going to handle this
51:55 - differently
51:57 - all right then this is
52:02 - dot
52:06 - this is zero
52:07 - [Music]
52:15 - thank you for bearing with me guys i
52:16 - know me typing is just so exciting so
52:19 - hopefully i
52:21 - am keeping this moving pretty quickly
52:25 - all right and
52:26 - star
52:27 - ups wrong
52:30 - do six
52:33 - five
52:35 - four
52:39 - nine
52:40 - eight so let's try this let's run this
52:44 - and see if it crashes okay i've already
52:46 - missed one okay
52:48 - see what else crashes
52:52 - okay i've i've tremendously missed a lot
52:55 - of things
52:57 - we're probably about to copy
53:00 - copy something because i hate fixing
53:03 - oh
53:04 - stringvar
53:08 - tkenter
53:10 - it's thrown up on stringvar
53:14 - okay
53:16 - let's close that out and see if we get
53:18 - it okay
53:23 - and we are not adjusting that all right
53:27 - text is not defined let's see where i'm
53:29 - missing
53:30 - text dot
53:37 - ttk
53:40 - see what i'm missing
53:46 - oh anybody else see it
53:48 - stir ring
53:50 - str ring all right
53:55 - okay so i'm getting
54:02 - okay
54:05 - all right everybody doing good
54:09 - all right
54:10 - so now
54:12 - now we need to get this so we have all
54:14 - the
54:15 - we have a lot of the
54:17 - things
54:18 - associated but
54:20 - there's one important
54:22 - factor that is
54:26 - not done so there is a text
54:29 - argument so on a button
54:31 - there's a text argument
54:34 - and if you want information to be in the
54:36 - button you use the text argument now
54:39 - a variable
54:41 - we we've we create variables to be able
54:43 - to do something to them to change them
54:45 - right
54:46 - well same thing in tkenter so now we
54:48 - have a text
54:51 - variable
54:52 - argument
54:54 - because that entry bar not only will it
54:57 - take in input but it's going to change
54:59 - if we hit the equal sign so that's why
55:02 - we use the text variable argument
55:04 - because it can change
55:05 - all right
55:06 - let's see how we're doing
55:09 - okay
55:10 - all right
55:12 - so now but nothing happens when i hit
55:14 - equal nothing happens when i hit clear
55:16 - so now we need to handle the equal sign
55:20 - and the clear sign so let's do that
55:22 - right now
55:23 - let's go ahead and close this out and we
55:25 - need to look at eval right now
55:28 - so
55:31 - help
55:32 - dot eval this is about the only thing
55:34 - that we've not looked at
55:38 - so in our world we understand that
55:43 - this string
55:45 - this is what messed me up times
55:48 - i get oops
55:52 - i get six i get six sixes
55:56 - and if i do this
56:02 - plus
56:05 - i get 63 not 9.
56:08 - but if i use the evaluation
56:12 - function
56:13 - python understands that yes this is a
56:17 - string but this is also an integer
56:20 - in in the world of ascii
56:23 - so it understands that i can pass in a
56:26 - string
56:27 - of a math operation that then it will
56:30 - convert it to
56:33 - that answer
56:34 - i know that can seem a little odd
56:37 - but
56:38 - let that sit
56:39 - and because again
56:41 - python understands that and has been
56:44 - past those rules
56:46 - past those rules that
56:49 - this yes it's a string but this is also
56:51 - a number that is a string right now and
56:53 - if i then pass it a
56:55 - complete um operation it can it will
56:59 - understand those string representations
57:01 - as a as a math operation and then
57:04 - return back the answer all right
57:07 - okay we got to keep moving
57:09 - so now we need two more functions
57:13 - we need an equal function
57:17 - hang on let me get a let me get a drink
57:18 - guys in a cough drop
57:34 - all right
57:37 - okay
57:38 - so we have clear
57:44 - so we take in our global
57:46 - our expression
57:49 - then we're gonna
57:52 - put the expression back to zero because
57:54 - we're clearing it right
57:56 - so we're resetting it
57:58 - and then as we do that then we take our
58:00 - text
58:01 - our string our string variable our
58:03 - string var and then set it back
58:06 - to
58:10 - expression
58:12 - all right
58:14 - that's part of it
58:17 - but now we need to do
58:19 - the equal
58:25 - global
58:32 - all right
58:34 - total so we just used our
58:38 - so this is going to
58:48 - so let's look
58:50 - so this comes out as an int
58:53 - it doesn't like that this is a text so
58:56 - we got to wrap this in
58:59 - our eval
59:00 - our expression
59:05 - then we do our text
59:07 - dot set
59:09 - dot total
59:10 - all right does that make sense i know
59:12 - i've gone through a lot of stuff here so
59:14 - this is here
59:16 - so now
59:18 - now i need to come down here and do my
59:19 - clear or my yeah my clear function
59:22 - command
59:24 - equals
59:28 - our clear
59:31 - clear function and then our equals needs
59:34 - to be our
59:35 - command
59:40 - equal
59:42 - all right
59:43 - let's see how we did
59:45 - all right everything looks good
59:47 - i'm here two
59:49 - plus two
59:50 - equals four clear that
59:53 - nine times two
59:55 - equals eighteen clear that let's check
59:58 - and make sure we can do some decimals
60:01 - um we're going to do simple math
60:04 - 2.3 plus
60:06 - 0.7
60:07 - equals 3.0 you could handle this if you
60:10 - do not want any decimal form you know
60:12 - how to do that uh nine
60:15 - clear
60:16 - nine divided by three oops
60:20 - oop i think we got a problem
60:22 - nine divided by
60:23 - three yep
60:28 - our divided sign
60:30 - we missed that
60:31 - where's our divided okay
60:35 - boom
60:36 - boom all right close
60:38 - save run
60:40 - okay let's bring this over here 9
60:42 - divided by 3
60:44 - equals 3.0 okay let's do
60:47 - um
60:48 - oh and then you guys could add the power
60:50 - you could add a whole bunch of uh other
60:51 - functions over here all right we haven't
60:53 - done any multiplication yet
60:55 - uh
60:57 - two times three is six okay cool
60:59 - all right guys
61:01 - as always thank you so so very much for
61:05 - joining us please make sure you're
61:07 - hitting that like subscribe notification
61:09 - bell buying some
61:11 - uh free code camp merch
61:13 - heading over to my channel uh
61:15 - subscribing we got a discord going
61:18 - uh cardinals been doing a fantastic job
61:21 - over there uh being an admin
61:25 - but yeah i just absolutely love and i
61:27 - want to tell you guys thank you for
61:28 - spending time here i know
61:30 - time is the one resource we do not have
61:33 - a lot of but i truly enjoy doing this
61:36 - thank you so much for spending your time
61:38 - with me today i really truly hope you
61:40 - got something out of it
61:41 - and as always guys thanks for watching
61:43 - and we'll see you guys in two weeks all
61:46 - right thanks again bye guys