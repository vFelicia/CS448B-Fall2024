00:00 - foreign
00:43 - all right hi everyone looks like i'm
00:45 - live
00:46 - welcome to this free code camp live
00:49 - stream on vue.js i'm so excited that
00:53 - they're letting me live stream from this
00:55 - platform
00:56 - if you don't know me my name is gwen and
00:58 - i live stream on
01:01 - my own channel which is faraday academy
01:04 - um which is in the description below
01:06 - so
01:07 - for this series um what i'm going to be
01:10 - doing on fridays on free code camp is
01:13 - build the front end free code camp
01:15 - projects in vue.js
01:17 - and it's going to start with the random
01:20 - quote machine
01:21 - you can see that i made this repo here
01:23 - free codecamp dash projects.view i'm
01:27 - actually going to post this in the chat
01:29 - so you have a link to it
01:31 - i basically only did some readme files
01:34 - and stuff so far
01:37 - all right there you go
01:38 - if anyone wants a link
01:41 - and
01:43 - so in each in this repo i'm going to
01:45 - make a folder for each um
01:48 - project as i go along and today like i
01:51 - said before will be this random quote
01:53 - machine now what i'm going to be doing
01:55 - with vue
01:56 - is actually starting off with the most
01:59 - basic
02:01 - projects
02:02 - so i'm going to start off
02:04 - uh or the most basic view so if you
02:07 - don't know what vue.js is it's
02:10 - a javascript framework
02:12 - and it's called progressive because you
02:14 - can use it as a very lightweight
02:17 - kind of jquery-esque
02:19 - cdn import and just import it into your
02:22 - html
02:23 - or you can
02:25 - you know generate a whole big view
02:27 - project and use it more as a
02:29 - full-fledged framework
02:31 - so today i'm just going to be importing
02:33 - it via cdn into the html
02:36 - so
02:37 - yeah feel free to post in the chat
02:41 - this chat is a little bit different than
02:43 - the one i do on my channel
02:46 - so i'll try to
02:47 - keep up and check the chat every so many
02:50 - minutes
02:53 - and yeah
02:54 - otherwise i'm just going to go ahead and
02:56 - get started coding
02:59 - so from the vue.js website i want to
03:02 - i'm going to click get started
03:04 - so i can grab the
03:06 - cdn import
03:09 - development version includes helpful
03:12 - console warnings this is exactly what i
03:14 - want
03:15 - and it's just one import the cool thing
03:18 - about vue is that
03:19 - uh there's
03:21 - you don't have to use jsx or anything it
03:23 - uses html by default so you don't need
03:27 - to import babel or transpile or do
03:29 - anything else you can just import view
03:32 - and start using it
03:33 - so i have my code
03:36 - on
03:37 - this screen
03:39 - this is the same github repo that i just
03:41 - showed you
03:42 - so
03:44 - just a few files i do have some quotes
03:46 - already ready for this they're just bob
03:48 - ross quotes
03:50 - um if you don't know bob ross he's a
03:51 - famous tv painter
03:54 - back in the 80s and 90s he was
03:57 - the most popular one in the us i think
03:59 - and then he has kind of a cult following
04:02 - online now because of his voice and
04:06 - the things he painted and stuff like
04:07 - that anyway i really like him and there
04:10 - are some quotes
04:11 - so
04:12 - now in my quote machine folder i'm going
04:14 - to create an index
04:16 - dot
04:18 - html file
04:22 - let me zoom in
04:24 - a little bit
04:25 - yeah let me know if you can see that all
04:28 - right so now
04:30 - i am going to just create that
04:33 - as a regular
04:35 - html
04:37 - file so
04:40 - html oh yeah and let me just
04:44 - be totally correct and set
04:46 - the doctype
04:49 - is
04:50 - is that correct
04:52 - i don't know
04:53 - um
04:54 - let me actually copy paste
04:57 - um
04:59 - a basic html oh they don't have one here
05:04 - all right so i'm going to leave this out
05:05 - for now and just do html
05:08 - and then set a head tag
05:11 - and then man it's been so long since i
05:13 - made an html file
05:16 - and then set a body tag
05:19 - okay
05:21 - and
05:22 - okay
05:23 - and now i'm going to
05:26 - close my
05:27 - html
05:30 - okay
05:31 - and now i'm going to do
05:34 - set a title and i'm going to call this
05:37 - random
05:38 - quote
05:39 - machine
05:43 - and
05:46 - so i'm using vs code right now and i
05:49 - think for next time i'm going to have a
05:51 - plugin or get an html plugin
05:54 - because i don't think i even have syntax
05:56 - highlighting for html or maybe i'll just
05:58 - go ahead and do that now
06:00 - let me see
06:02 - html
06:04 - and css support
06:07 - okay install
06:10 - and now it's available globally i'm not
06:13 - sure if i have to reset to get the
06:15 - features or maybe i just need to reset
06:16 - the file let's hope that's the case okay
06:20 - so now
06:23 - i have a title so let me do
06:26 - just a plain
06:28 - div here
06:31 - and
06:32 - close div
06:35 - and now
06:37 - i'll just put hello inside
06:42 - all right
06:46 - okay now let me open this in the browser
06:48 - so what i'm going to do is copy
06:51 - or right click on the index.html file
06:55 - and
06:56 - i can say copy path
06:58 - so i copied the path that's the path to
07:00 - this file on my local machine
07:02 - and then all i have to do is
07:04 - go in my browser and paste that path
07:08 - and
07:09 - now i see hello okay
07:13 - cool
07:14 - so
07:14 - now
07:16 - on my
07:18 - um
07:19 - oh yeah so
07:20 - i meant to show this first but this is
07:22 - just the quote machine from free code
07:24 - camp
07:25 - and then
07:27 - this is the demo one and i'm going to be
07:29 - creating something really similar
07:31 - there's not a lot you can do with a
07:33 - quote machine
07:34 - just
07:35 - you know a random quote machine just a
07:37 - button that gets a new quote basically
07:41 - okay
07:42 - so
07:45 - um let me get started so let me go into
07:48 - my github repo
07:49 - if i look in the readme for the quote
07:52 - machine
07:53 - i have this mock-up this is what i want
07:55 - it to look like so basically i have one
07:57 - card that's going to contain the quotes
07:59 - and then i have a new quote button
08:02 - underneath
08:04 - so
08:08 - let's see so first i need to
08:11 - create a card in here
08:13 - and i'm gonna basically i'm gonna import
08:16 - bootstrap create the card and the button
08:19 - and then i'm gonna hook it up into view
08:22 - to show you how to do that
08:24 - so first let me go to bootstrap this is
08:27 - version 4.5 and then i'm going to
08:30 - just get the css import i'm not going to
08:32 - need javascript
08:34 - the javascript import for anything
08:36 - and now in my index.html file and right
08:40 - below the title i'll just paste
08:43 - that
08:44 - bootstrap css import
08:48 - okay
08:49 - so now i have bootstrap and now i'm
08:50 - going to search bootstrap for a card
08:56 - and
08:58 - this looks okay
09:00 - so basically
09:02 - you have a class of card and then inside
09:05 - you have a card body class
09:07 - and then you can put title and text and
09:10 - stuff like that
09:12 - all right
09:13 - so
09:14 - i'm gonna do that
09:16 - i'm gonna get rid of hello
09:18 - and i'm saving this div because this is
09:21 - going to be where i reference view from
09:24 - this outer div
09:25 - so in this inner div i'm going to do
09:29 - let's say class
09:31 - equals
09:33 - card
09:34 - and then
09:38 - oops
09:40 - div
09:41 - and then here
09:44 - inside i'll do
09:47 - oops
09:48 - div and then class equals
09:51 - card
09:52 - body
09:57 - and then
09:59 - one more div
10:01 - and i'll do
10:02 - div class equals card
10:06 - text
10:09 - and that's where the quotes are going to
10:10 - be inside
10:12 - so i'll put a placeholder here
10:14 - and just say
10:16 - this is a quote
10:20 - and let me put quotes around it
10:23 - okay
10:26 - that's fine let me see what this looks
10:28 - like
10:30 - okay cool so
10:32 - i do see
10:34 - that
10:35 - i don't know if you can see it there's a
10:36 - gray line here and some spacing it added
10:39 - so this is a quote or this is a card
10:42 - but i want it just to be centered on the
10:44 - page so i'm going to go ahead and add
10:46 - bootstrap classes for that
10:48 - and i'm going to add in here
10:52 - i'm going to use their grid system so
10:53 - i'll do another div
10:56 - and this one with
10:58 - a class of
11:00 - um
11:02 - let's see i think it's container but
11:05 - let's see if it is
11:07 - so in bootstrap i'm gonna look for
11:11 - grid their grid system
11:15 - and here i'm just going to copy this
11:16 - actually
11:18 - so
11:21 - i'm going to copy this
11:23 - bootstrap one so i can
11:25 - get to the view part
11:27 - so
11:31 - let me
11:36 - all right
11:38 - oops
11:41 - let me do
11:44 - a div
11:46 - and close all these divs
11:50 - div
11:52 - and is there one more there's one more
11:54 - div for the container i know that's a
11:56 - lot of html nesting
11:59 - all right so
12:02 - oh wait
12:03 - i messed up so i put one extra div
12:06 - because i had started that
12:09 - before i copy pasted these okay so i
12:12 - have container
12:13 - row
12:14 - and column
12:16 - and here what i'm going to do is column
12:18 - small
12:20 - and let's say 6
12:22 - and then i'm going to do
12:26 - column
12:27 - offset
12:28 - so let me search for offset real quick
12:33 - offsetting columns
12:35 - so it's offset and then the break point
12:40 - so like offset small
12:42 - of 3 is what i want
12:44 - so let me do offset
12:46 - small of 3
12:49 - and see
12:51 - if that works
12:55 - okay
12:56 - um
12:58 - that looks oh i see what i did
13:01 - somehow i lost the
13:03 - card in here so i have to recreate that
13:06 - card div that's why there's no outline
13:08 - around the card
13:09 - so
13:11 - i need a div
13:12 - of
13:14 - class card
13:16 - indent this again and then close that
13:18 - div
13:20 - okay
13:22 - and then i want to put some margin on
13:23 - top of the card
13:25 - bootstrap has a bunch of spacing classes
13:28 - that are abbreviated so for margin i can
13:30 - do margin
13:32 - top of
13:34 - i think
13:36 - i can do five it goes up to five maybe
13:39 - and that should be something i can't
13:41 - remember how they calculate it but it's
13:43 - something like 15 pixels or
13:45 - something okay so see now i have my
13:48 - quote box
13:49 - that's good
13:50 - um and now below the box i need a button
13:54 - so i'm going to create that let's see
13:56 - where's my card my card's here
14:00 - so
14:02 - i'm going to create it after the card
14:04 - so i'll do
14:06 - but still inside the row in the column
14:09 - so i'll do
14:11 - button
14:12 - and then
14:14 - i'll say new
14:15 - quote
14:17 - and button
14:20 - all right so class equals
14:23 - uh
14:24 - wait i think it's btn
14:31 - all right
14:32 - so
14:33 - in the new bootstrap let me just search
14:35 - for button because it might be a
14:38 - different class now
14:40 - okay so it's
14:42 - btn and then btn whatever i want so btn
14:46 - let me just do btn primary
14:50 - um okay so
14:52 - btn
14:53 - primary
14:55 - let's see if that works
15:00 - cool
15:01 - awesome
15:02 - so now there's a button and now there's
15:04 - a quote box so now on to view
15:07 - and
15:09 - for view
15:11 - i think
15:13 - i
15:14 - or is it
15:15 - here is the script tag that i want to
15:19 - import view with
15:21 - so i'm going to put that at the bottom
15:23 - right above my closing body tag and put
15:26 - the view script tag
15:28 - okay so now i have view imported and
15:31 - accessible in my project
15:33 - so now i need to create another
15:39 - view or a script here
15:42 - so i need to put script
15:45 - create a script tag so i can write my
15:47 - javascript inside
15:49 - so
15:51 - i created a script tag and now i need to
15:54 - declare a new view instance
15:57 - so i basically have access to
16:00 - this view variable
16:03 - right now
16:05 - and so i can create a new view instance
16:08 - by using the new keyword which is just a
16:11 - javascript keyword
16:15 - which creates objects so
16:17 - i can say new view and then i pass it in
16:20 - object which is called the options
16:22 - object
16:23 - um so if you if you've heard about view
16:26 - two and view three a lot of people are
16:28 - thinking oh i don't wanna learn view yet
16:30 - because
16:31 - uh view three is coming out well
16:33 - actually this same options object that
16:36 - we're doing right now you're going to be
16:38 - using the same api
16:40 - in view 3.
16:42 - there are more advanced features
16:44 - and things that you can use in view 3
16:46 - but none of this is going away so if
16:49 - you're thinking about using view or
16:51 - learning view you might as well start
16:53 - now because you can use the same api
16:56 - even when they upgrade the version
16:58 - let me just check the chat real quick
17:01 - what application
17:02 - we're using oh balsamic
17:07 - balsamic mock-ups i've been using them
17:10 - for
17:12 - i don't know maybe five years
17:14 - it's just really easy to do
17:17 - outlines this company
17:19 - so real quick they have
17:21 - in online some kind of online one but i
17:23 - have their desktop app
17:25 - and i basically create
17:28 - easy wireframes
17:30 - in this because it's so simple they give
17:32 - you a bunch of like browsers and phones
17:34 - and stuff and
17:35 - um you can easily add text and move
17:38 - things around
17:40 - uh so that's a great way to do quick
17:42 - wireframes mock-ups that kind of stuff
17:45 - okay
17:46 - so now i have
17:48 - a view
17:50 - instance created
17:52 - so now how do i use view well it needs
17:54 - to attach to the dom
17:57 - to
17:58 - i need to give it an html element um
18:01 - where it's going to live
18:03 - so vue knows where to do its magic kind
18:06 - of um
18:08 - so
18:09 - let's say element and let's create an
18:12 - html element with the id of app
18:16 - this is pretty standard
18:18 - so
18:19 - this empty div that i left on the
18:21 - outside i'm actually going to give it an
18:23 - id of
18:24 - app
18:25 - so now view will be able to operate
18:29 - anywhere inside of this div
18:32 - but not
18:33 - outside like if i made divs below this
18:36 - view wouldn't be able to know about them
18:38 - because i told it only to look inside of
18:40 - this app
18:42 - all right
18:44 - so
18:46 - you can do a lot of things
18:48 - with
18:49 - view
18:51 - you can basically on a most basic level
18:54 - you can make this
18:56 - dynamic in view
18:59 - so i could do
19:03 - let's see
19:04 - data
19:07 - and
19:09 - right now i'm using a data object so
19:13 - what data means is basically anything
19:16 - you put inside of here will be available
19:18 - as variables inside of your
19:22 - html where view is inside of your html
19:25 - so i could put
19:27 - name
19:28 - is
19:29 - gwen
19:32 - gwen
19:35 - and then
19:38 - um so vue uses this double curly brace
19:41 - syntax it's called a double mustache
19:44 - syntax
19:45 - and
19:46 - now i can just put my variable inside of
19:49 - here
19:54 - name okay so
19:56 - something is wrong here so good thing
19:58 - i'm doing this so i can
19:59 - debug it first
20:02 - so i'm referencing the element of id app
20:07 - and then i'm creating
20:10 - data and i have name
20:13 - yeah so this should work let me see
20:16 - oh it is working it just took a second
20:18 - to update
20:19 - all right let me refresh okay good so
20:22 - there was no debugging needed
20:27 - all right so
20:28 - yeah no problem
20:31 - okay so
20:33 - um
20:34 - cool so i was just showing you how to do
20:36 - that so basically
20:38 - um this html is connected to our view
20:40 - instance so we can do lots of cool
20:42 - things with events and and variables and
20:45 - all kinds of stuff
20:46 - um so let's see what do we want to do
20:49 - next we need to make these quotes
20:52 - dynamic and then we need to make them
20:55 - random and then we need to hook up this
20:56 - button to actually generate a new quote
20:59 - every time we click it so we're going to
21:00 - have to create some kind of function to
21:02 - work when we click the button
21:04 - so for right now load let's import the
21:06 - quotes and
21:08 - try to
21:09 - display them
21:14 - so let me see i have this quotes
21:16 - array
21:17 - so
21:19 - i think what i can do is
21:23 - um
21:27 - uh so i can't
21:31 - maybe i can just do let's see
21:35 - let me create a variable here so var
21:41 - quotes
21:43 - equals this array and now if i import
21:46 - this quotes.js file
21:50 - into
21:51 - my html it should be able to access that
21:53 - variable
21:54 - so source equals
21:57 - quotes.js
22:01 - and then
22:03 - ah script
22:06 - all right
22:09 - okay so
22:12 - now i have i should have access to
22:14 - quotes
22:15 - so let me see if i can let me now try to
22:18 - put quotes on my
22:21 - um
22:25 - oh wait let me see if i have access to
22:27 - quotes here so let me do
22:30 - uh console.log
22:32 - quotes
22:36 - and open my console
22:40 - let me see
22:43 - oh it's complaining about my
22:46 - html document
22:48 - um
22:50 - obviously my head head tag and html are
22:55 - lacking a few things that they should
22:56 - have
22:57 - um
22:58 - [Music]
23:00 - let me okay so it does print out this
23:02 - array so i do have it here
23:04 - and
23:06 - should i fix
23:08 - yeah i should really should fix my html
23:11 - there
23:12 - um
23:13 - let's let's just search for
23:15 - basic
23:16 - html
23:18 - um
23:20 - page
23:25 - i don't know what this blog is
23:28 - nope
23:31 - how about mdn mdn is good
23:36 - all right
23:40 - well here's what i'm missing too
23:42 - oh i need this so yeah these are the two
23:45 - tags i need so just one second
23:48 - i'll put a doctype and now
23:51 - let me put this made a tag
23:56 - okay so
24:00 - good now it should stop complaining
24:02 - sweet if i refresh
24:06 - this is just warning me views in
24:07 - development mode but i already know that
24:09 - because i imported the development
24:11 - version of view so that's what i wanted
24:14 - okay so now this array is available on
24:16 - quotes
24:17 - so let's do something with it let me
24:22 - go into data
24:23 - and say
24:25 - quotes
24:27 - um
24:28 - yeah quotes is quotes basically can i
24:30 - use that shorthand in the browser
24:34 - maybe let's see
24:37 - i'm going to check it out so vue also
24:39 - has
24:40 - these vue.js dev tools
24:44 - unfortunately in firefox i can't zoom in
24:48 - even though i can zoom in on the console
24:50 - here and every single other tab i can't
24:52 - zoom in on the view dev tools
24:55 - but
24:56 - i'm gonna try
24:58 - oh no
24:59 - that doesn't work
25:00 - um
25:02 - okay well i'll fix i'll fix zooming
25:04 - figure out something to zoom in by next
25:06 - time
25:08 - anyway so
25:10 - i can see
25:12 - in view in these view dev tools it shows
25:15 - me what data i have
25:17 - inside my view instance what data i have
25:19 - available so it's showing me i have this
25:21 - quotes array
25:22 - so that's a good way
25:24 - review dev tools is really useful to
25:26 - check and kind of debug and kind of look
25:29 - around your data and methods and stuff
25:33 - okay
25:34 - so i have
25:37 - quotes available now so what do i want
25:39 - to do i want to select
25:41 - a quote
25:42 - and display it here
25:45 - so i'm going to just
25:48 - create
25:50 - i'm going to say quote
25:52 - is or let me call it current quote the
25:55 - one i'm going to display on the screen
25:56 - so current quote
25:59 - is
26:00 - quotes
26:01 - and then at index 0.
26:07 - oh yeah and then i need to display this
26:09 - on the screen
26:10 - so now that i have current quote
26:11 - available as a variable inside my
26:15 - template
26:16 - i'm going to get rid of this boilerplate
26:18 - and use the double curly brace syntax
26:22 - and put current quote there
26:24 - and let me see
26:26 - sweet
26:27 - we don't make mistakes just happy little
26:29 - accidents famous famous bob ross quote
26:32 - let me put quotes on the outside of that
26:35 - make it more quote like
26:37 - oh wait
26:40 - okay
26:43 - sweet i like it it's not random because
26:45 - it's just taking the first one in the
26:46 - array but
26:48 - still a step forward
26:50 - okay so now
26:52 - um
26:55 - oh yeah
26:56 - i'll need to put the author or the quote
26:59 - sayer here the person who said that
27:02 - um
27:03 - whatever it's called so
27:07 - um
27:08 - uh but let me do that in a second let me
27:10 - first hook up this button new quote
27:13 - that's the fun part so
27:15 - now in my view instance i can also have
27:18 - methods i have a
27:21 - object
27:22 - of
27:23 - methods
27:26 - so basically functions that i can use
27:28 - inside
27:29 - my
27:30 - view in my template here
27:33 - or in this case my html
27:36 - um so
27:38 - uh let me just create a new quote
27:41 - method here
27:43 - and so it'll be a function
27:45 - called new quote
27:50 - i don't need to pass any arguments into
27:52 - this function so i won't define any
27:55 - parameters
27:56 - and
27:57 - i'm going to be updating current quote
28:00 - though
28:00 - so i can access anything
28:04 - on
28:05 - this view instance
28:07 - it's just an object so i can access it
28:09 - with this
28:12 - um
28:14 - okay so actually
28:17 - sorry i have this backwards i was
28:19 - looking at it i was like man my
28:21 - something wrong with this syntax okay so
28:23 - the key has to be the name which is new
28:26 - quote and then actually
28:28 - i'm going to make this an arrow function
28:32 - um
28:33 - oh no wait i think
28:35 - because the view instance does some
28:36 - stuff i can just make this
28:38 - a regular function we'll see how this
28:40 - works
28:41 - okay so i'm going to be updating current
28:45 - quote here
28:47 - and i can mutate state
28:50 - what's in data here is called the
28:51 - component state
28:53 - so i can mutate that just by accessing
28:56 - current quote off of the this object
29:00 - and setting it equal to whatever i want
29:04 - but i want a random quote
29:06 - so
29:07 - i'm going to need to
29:11 - find
29:12 - choose a random number
29:14 - and then
29:15 - access
29:16 - that
29:17 - random quote in the array
29:20 - so
29:20 - i'm actually going to look this up so
29:23 - um
29:24 - generate
29:26 - random number
29:28 - in
29:29 - javascript
29:34 - oh yeah sorry i didn't see that bruce
29:36 - doctype
29:38 - yeah isn't that what i have i think
29:41 - that's what i copied off of mdn
29:45 - um
29:47 - yeah it is
29:53 - okay so
29:56 - random number
30:00 - how to generate random numbers in
30:02 - javascript math.random
30:07 - um
30:11 - get random integer
30:13 - so
30:15 - math.random so math.random generates let
30:18 - me zoom in here
30:20 - so math.random generates a random number
30:23 - between zero and one
30:26 - and then
30:28 - you can times that
30:31 - uh so i think if i times that
30:34 - by the max number that i want
30:39 - and then floor it
30:42 - because i don't have a minimum my
30:44 - minimum is just zero
30:46 - so
30:48 - let me give this a shot
30:50 - and figure it out so
30:52 - uh
30:53 - i have the math object because that's
30:55 - just available in javascript
30:57 - so i can do math.random
31:00 - and then
31:01 - i'll do
31:04 - times
31:06 - the max number that i want so
31:10 - that will be
31:14 - let's see between
31:16 - or the max number is the length of the
31:19 - quotes array
31:20 - so i'll do quotes dot length
31:25 - um and actually quotes dot length minus
31:27 - one
31:29 - because it's zero indexed okay
31:32 - so
31:33 - i'll wrap this
31:35 - in parentheses
31:37 - and then i think
31:39 - let me just console.log
31:42 - this somewhere else real quick
31:44 - so
31:45 - i can figure it out
31:47 - okay so let me
31:50 - get rid of that
31:55 - and let's see what that is
32:03 - okay yeah so it's uh
32:06 - 2.897 whatever if i refresh it's another
32:09 - random number so what i'm going to do to
32:11 - make this
32:13 - random or to make it an integer i'll do
32:16 - math.floor
32:19 - and then
32:22 - wrap this so math.floor just rounds down
32:25 - since i have
32:26 - a number with decimals now it'll become
32:29 - an integer by rounding
32:32 - cool so i got 2
32:34 - 0
32:35 - 3
32:36 - 3
32:37 - 2
32:38 - 0
32:40 - uh
32:43 - there's no four
32:46 - um
32:48 - will i ever get four
32:53 - i'm not sure let me uh get rid of this
32:56 - minus one
33:04 - or maybe it just doesn't like force
33:07 - it's
33:08 - it keeps i don't know if you can see
33:09 - it's like zero one one one
33:12 - two
33:13 - four yes four
33:16 - okay all right so
33:19 - if it breaks later we'll fix it
33:22 - all right so let me uh copy that
33:26 - and paste it here get rid of this line
33:32 - okay so i'm going to say
33:37 - number
33:38 - equals
33:40 - that whole thing that we just did
33:44 - math.floor math.random quotes.length oh
33:47 - i don't need the parentheses around that
33:49 - anymore because i'm not minusing one
33:53 - all right
33:54 - let me check the comments
33:56 - do you need to floor
33:59 - the whole thing yes
34:02 - because if i didn't so if i just floored
34:05 - this
34:06 - math.random then it would come out as
34:09 - zero every time and then when i multiply
34:11 - quotes.length
34:13 - it would
34:14 - always be zero so i wouldn't be getting
34:16 - a random number anymore
34:20 - so i have to floor after i multiply
34:23 - basically
34:24 - okay so now i have this random number
34:28 - from should be from zero to four we're
34:30 - hoping
34:31 - uh let's see
34:35 - uh
34:36 - current quote okay
34:39 - and now we need to
34:41 - get a random quote out of the quotes
34:43 - array
34:44 - so
34:45 - we can pass in that random index or we
34:48 - can access it via random index and then
34:51 - set current quote to that random quote
34:53 - and let's see if this works
35:00 - it's not changing something's wrong
35:03 - oh
35:05 - what's going on
35:08 - we don't make mistakes just happy little
35:10 - accidents
35:11 - so
35:13 - we're setting current quote
35:16 - equals quotes
35:18 - and the number okay oh
35:21 - you know what we're not doing we're
35:23 - never calling this function wow
35:25 - okay we're never calling this function
35:29 - so we're setting the first quote
35:32 - as the zeroth index but we're never
35:35 - calling the function no quote or new
35:37 - quote so
35:39 - we have to hook up this button to
35:41 - man to actually call the function okay
35:46 - um
35:47 - let's see
35:50 - and
35:54 - okay so new quote
35:56 - and so here
36:00 - view js
36:02 - lets us hook up methods
36:04 - using the
36:06 - at
36:07 - click
36:08 - so this is actually shorthand for v dash
36:11 - on
36:12 - and then v dash on needs to be followed
36:15 - by an event
36:17 - you'll see this pattern a lot in view
36:19 - these
36:20 - directives it gives you v dash
36:23 - something like v model or
36:27 - um what else there's a bunch of them oh
36:29 - yeah v4 for looping v if for
36:32 - conditionals
36:34 - so v on and then i'll say on click when
36:36 - someone clicks this button
36:38 - i'm gonna run a function which i put the
36:40 - name of the function inside of the
36:42 - quotes
36:44 - um
36:45 - the name of the function is new quote
36:48 - so
36:49 - i'm going to put
36:50 - a new quote in there
36:53 - and basically
36:54 - v dash on
36:56 - can just be written as
36:58 - an at sign so that's what i always use
37:00 - anyway so at click
37:04 - meaning
37:05 - now vue is watching for this click event
37:07 - and going to run this function when that
37:09 - click event occurs
37:10 - so let me refresh in the browser
37:13 - click sweet it's changing do you see
37:16 - that
37:17 - okay
37:19 - awesome
37:21 - so now we're getting
37:22 - random quotes so this is actually
37:25 - uh
37:27 - or this actually fits the requirements i
37:30 - think
37:31 - generate random quotes but there's some
37:33 - more things that
37:35 - we're going to do with this
37:41 - so no new chat messages so i guess
37:43 - everyone's following along okay
37:45 - let me just check one second this is set
37:48 - up a little bit differently than my
37:50 - regular live streams so i'm just making
37:52 - sure i'm not missing anything
37:56 - all right so
37:59 - let's see
38:00 - um
38:01 - generate new quotes
38:05 - uh let me look at my mock-up
38:07 - yeah so i can style this a little bit
38:10 - more like i have
38:13 - i i mean all these quotes are bob ross
38:15 - so
38:16 - i don't need
38:17 - i can just hard code the author here and
38:20 - then the new quote button i'll style
38:23 - that a little bit so here i don't like
38:25 - this right at the
38:28 - box or the card
38:31 - so i'm going to center the button and
38:34 - add a margin top
38:36 - so let's see
38:40 - this button
38:41 - i can
38:42 - add
38:44 - a class to the button
38:46 - let's say i'm adding a class of margin
38:48 - top
38:50 - of
38:52 - 2
38:53 - which
38:54 - is that something like 8 pixels
38:58 - okay
38:59 - that's good and now
39:01 - if i do
39:04 - um let me see if this works so margin
39:09 - oh i zoomed in again
39:11 - uh so
39:14 - wait wait okay so let me add a margin
39:18 - y
39:19 - so on the y axis of auto
39:22 - so that should be margin left and margin
39:24 - right of auto
39:26 - and no that doesn't work at all
39:29 - um
39:30 - wait what i really want is the x-axis
39:33 - right yeah the x-axis
39:38 - okay that didn't work so i'm gonna try
39:40 - flexbox then
39:43 - all right so i'll leave the margin top
39:45 - there
39:46 - and i'm going to zoom out one i think
39:48 - this is good
39:49 - that was too close
39:51 - okay so i had the card
39:53 - and this column here i'm going to set
39:56 - this as
39:59 - um
39:59 - [Music]
40:03 - flex i think no wait wait i think
40:05 - there's something else i can do
40:07 - so
40:08 - i have this
40:10 - column that's wrapping the button too
40:13 - but i could put the button in its own
40:15 - row
40:17 - um let me try that so
40:21 - let me try
40:24 - putting a new row here so div
40:28 - class equals row
40:30 - and then
40:32 - close that
40:35 - all right so
40:37 - and now inside of
40:38 - that row i need to make a column so it's
40:41 - going to have the same layout as this
40:43 - card
40:45 - so i'll make
40:46 - a
40:47 - column
40:47 - [Music]
40:50 - let me just leave it at column for right
40:51 - now
40:53 - okay
40:54 - now close that div and now
40:57 - okay now i pasted the button in here
41:02 - and let me see how this
41:04 - looks not very good so i need the same
41:08 - column offsets and stuff that i have
41:10 - above so i'll do column small six
41:15 - and then offset small of three
41:23 - all right
41:25 - and
41:27 - uh
41:28 - apparently i still need the margin top
41:30 - because it's not giving me
41:32 - extra margin i thought it was going to
41:33 - give me that but it seems like i need
41:35 - the margin top still
41:37 - all right so for the button um
41:40 - maybe i'll just create a block button so
41:42 - it'll go
41:43 - no that's not going to look good i need
41:45 - to center this button
41:46 - so here i'm going to say
41:50 - display flex
41:53 - and then
41:54 - justify
41:55 - [Music]
41:59 - justify content center but let me see
42:03 - let me look at bootstrap and make sure
42:06 - i have that correct
42:07 - so let me look at their flex utilities
42:10 - which are basically a bunch of flexbox
42:12 - classes
42:13 - so you don't have to go and create your
42:15 - own css it gives you these classes
42:17 - to implement flexbox
42:20 - and i'm going to look at justify because
42:22 - that's horizontal
42:24 - in this case
42:26 - so i can do justify content center
42:29 - so let me try that class
42:33 - um justify content center
42:38 - okay
42:40 - sweet now i have my quote button in the
42:41 - middle
42:44 - awesome thanks
42:48 - all right
42:49 - so
42:50 - oh cool
42:52 - this actually is pretty good it's not
42:53 - too bad
42:55 - okay let me add bob ross here because i
42:58 - need to
43:00 - um
43:03 - i don't know
43:07 - cite him yeah cite him because he was
43:10 - the one who said the quote
43:13 - okay so
43:15 - i think
43:17 - here
43:19 - i could do
43:20 - i mean bootstrap has their own like
43:23 - block quote
43:24 - styles but since i'm inside of a card i
43:27 - don't think i want those here
43:29 - i just want like regular
43:32 - um
43:34 - oops
43:36 - bob ross yeah i just want regular
43:39 - paragraph tags
43:41 - and
43:46 - okay that's pretty good
43:51 - all right i like that for now
43:57 - okay
44:00 - of course with view
44:03 - and since this is a view stream i'm
44:06 - trying to focus on view this is really
44:08 - simple in fact this is almost
44:11 - uh nothing but
44:14 - i could still put this in another file
44:16 - to kind of clean it up
44:19 - so let me create a new javascript file
44:21 - to put my view inside so i'll create a
44:24 - new file
44:26 - and call it
44:27 - um
44:30 - i can't call it view
44:35 - let's call it
44:38 - i don't know
44:40 - main.js
44:44 - and now i'm going to
44:48 - uh wait
44:49 - copy
44:51 - everything out of
44:52 - everything out of my script tag here
44:55 - so
44:57 - i'm gonna get rid of that paste it here
45:00 - and
45:06 - okay
45:07 - so now i have this view instance in a
45:09 - separate file so if i import that file
45:12 - in a script tag
45:14 - let's see source equals main.js
45:19 - and close the
45:22 - script tag oh wait
45:25 - there
45:26 - so this should work the same way
45:31 - yep
45:33 - cool
45:35 - all right so now i can
45:38 - yeah basically do whatever i want in
45:39 - here
45:40 - now one of the things about
45:43 - view
45:44 - is that i can also like i don't have to
45:48 - write all of this html inside of
45:52 - the html here i can insert it so i can
45:55 - insert the html through view
45:58 - um by creating something called
46:02 - uh view
46:03 - component so view dot component
46:07 - and then defining a component here and
46:09 - where it will live inside of view
46:12 - um
46:14 - so i don't know
46:16 - uh i figure i might as well
46:18 - do that since i'm not starting the next
46:20 - project until
46:22 - next friday so let me take
46:26 - let's let's take this card actually
46:28 - so let me take um
46:31 - the card i'm going to call this quote
46:33 - card
46:35 - and you're going to see
46:36 - why it's called quote card or the
46:39 - importance of calling it quote card in a
46:40 - second so i'm defining a view component
46:45 - and
46:48 - um
46:51 - yeah let's see i think i can
46:53 - take
46:55 - uh where does it start
47:00 - i think it's star oh yeah it starts here
47:02 - so i could take
47:05 - this section
47:08 - and put it inside
47:12 - of a template
47:14 - here
47:17 - so
47:19 - i'm just using back ticks so i can
47:22 - oh wait wait wait
47:24 - undo undo
47:26 - there we go
47:27 - um so it will
47:30 - so i can do it on
47:32 - multiple lines
47:35 - and save the formatting okay i will have
47:37 - to change
47:40 - this though
47:41 - a little bit
47:43 - but now the thing about quote card
47:46 - is
47:47 - i can now reference it because it's a
47:50 - component
47:51 - i can reference it as if it was an html
47:54 - tag kind of so i can say quote card
47:57 - um
47:59 - and let me
48:01 - i don't like the highlighting for that
48:02 - let me make that all one word so
48:04 - let me say quote card
48:06 - and then
48:09 - close it so quote
48:11 - card
48:13 - see what happens there
48:18 - yeah so
48:19 - the
48:21 - quote card is displaying
48:24 - you can see because it still has the
48:26 - card there but it's not um
48:31 - or i guess the
48:33 - it's not seeing the variable because
48:35 - this is over here
48:37 - on the
48:39 - data and methods over here so what i
48:41 - could do is add these data and methods
48:44 - over to the component
48:46 - i could add let's see after template i
48:49 - could add a data object
48:52 - and then
48:53 - i could add
48:55 - methods also
48:57 - if i wanted to
49:00 - and move these over to this component so
49:03 - each component would kind of take care
49:04 - of
49:05 - the piece of the page that it's supposed
49:09 - to be at like i could have one component
49:10 - for this
49:11 - i could have another component for a nav
49:13 - menu
49:14 - and one for the sidebar
49:17 - but this is such a simple thing i just
49:19 - wanted to show components here
49:22 - but i'm gonna get rid of this
49:24 - oops
49:25 - not that
49:28 - okay i'm going to keep that part and
49:30 - then undo that
49:34 - all right
49:37 - does anyone have any questions about
49:39 - view or anything you want to know about
49:42 - vue
49:43 - um one thing we can do is actually add
49:46 - transitions
49:47 - so because animations are so common in
49:51 - web development vue has some animation
49:54 - features built into it which is nice and
49:56 - i think that would add a nice feature to
49:59 - this app as well
50:02 - let me make sure yeah it's still working
50:03 - okay
50:05 - um
50:06 - let's see let's go to view
50:09 - and look at animations
50:14 - and
50:16 - transitioning
50:19 - um
50:21 - yeah this is it
50:23 - okay
50:24 - so
50:26 - if you so when we right now
50:30 - we click new quote
50:32 - and there's really
50:34 - like no transition animation but we
50:38 - could actually make the
50:40 - quote animate in like fade in fade out
50:43 - fly in fly out stuff like that so let's
50:46 - do a transition animation for the quote
50:49 - um
50:52 - so
50:55 - let's see
50:57 - emitting prefix css rule okay so
51:00 - they're toggling
51:03 - this
51:04 - okay so they're toggling this element
51:07 - basically
51:09 - conditionally
51:11 - conditionally showing this element with
51:12 - a v if and when it appears it
51:17 - i believe they're setting
51:20 - okay they're setting some kind of bounce
51:22 - in so
51:25 - okay so it leaves to the right
51:27 - and comes from the right it fades in and
51:30 - fades out
51:32 - um
51:36 - oh
51:37 - that one's really
51:39 - um extreme
51:42 - all right
51:43 - so i'm gonna add a basic animation here
51:48 - let's see
51:51 - so
51:52 - basically whatever i want to animate in
51:55 - and out
51:57 - i can
51:59 - use a transition
52:02 - between it
52:05 - so let me try to do this for the quotes
52:08 - and see i mean this is just showing and
52:09 - hiding
52:11 - show hide based off of a boolean so let
52:14 - me see how this is going to work for the
52:15 - quotes because i don't know
52:20 - so let's see transition
52:23 - name slide fade
52:25 - um
52:27 - let me wrap the
52:29 - the
52:31 - actually it would be this i guess
52:34 - i would be wrapping by the way this
52:36 - transition
52:37 - tag and the um
52:41 - template tags transition tags that you
52:43 - see in view they don't render to the dom
52:45 - they're just there for functionality
52:48 - so they don't add any kind of overhead
52:50 - or and you can't see them in the dom
52:52 - after it's just an easy way to add
52:54 - certain things
52:56 - all right so
52:58 - let's try to animate this
53:00 - uh
53:02 - transition
53:05 - oops
53:08 - okay
53:10 - this is kind of interesting because i'm
53:12 - so used to using the view cli
53:15 - and
53:16 - you know i just go in there and generate
53:18 - a new view application so it's
53:20 - interesting you know going back to html
53:22 - and
53:24 - really starting from scratch with vue
53:26 - this is kind of fun
53:29 - okay so now i'm wrapping
53:31 - actually this i want to move here
53:35 - yeah
53:37 - so now i'm just wrapping the current
53:40 - quote
53:42 - um
53:44 - i wonder if i want it directly around
53:48 - my
53:50 - um what's coming in and out
53:53 - a quote
53:54 - instead of the p tag i'm not sure
53:57 - let's see
53:59 - so now i need css
54:02 - styles
54:03 - so what this transition is doing is
54:05 - giving me a bunch of classes that i can
54:08 - style in css
54:10 - and make these transitions
54:14 - so
54:17 - let's see this is a slide fade
54:20 - that's fine it's easier to see
54:23 - so i'm going to copy their styles here
54:25 - because they're basically using you know
54:27 - default css properties and you can see
54:30 - that because the transition is slide
54:31 - fade view gives you the class
54:34 - slide fade interactive
54:36 - when it's
54:38 - leaving the screen leave active
54:41 - and
54:42 - enter and leave to
54:43 - the states for those
54:47 - okay so now i need some css so let me
54:51 - um
54:53 - i guess i'll just add style tag here so
54:55 - let me add a style tag
54:58 - style
55:00 - and
55:03 - all right
55:04 - no highlighting at all
55:07 - that's fine
55:10 - all right so now i should have all of
55:11 - these classes active on the dom and let
55:14 - me see what the transition is
55:16 - looks like
55:20 - no there's definitely no transition so i
55:23 - think this would work
55:24 - uh let me try
55:28 - something
55:32 - so if i had
55:34 - a conditional element
55:36 - let me do what it said in the docs so
55:38 - let's make
55:40 - a p
55:41 - tag here
55:43 - and this would be
55:45 - if
55:48 - show and i'm going to make this variable
55:50 - in a second so
55:51 - oh wait it's v if
55:54 - so it's a the v if directive the
55:56 - conditional directive and view
55:58 - and then
56:00 - if show
56:02 - i'm gonna say
56:04 - hello close the p tag
56:07 - okay and now in my view instance
56:10 - let me create a boolean
56:12 - called show so i have access to that
56:16 - in my html so now i have show and let's
56:18 - say false
56:21 - and
56:22 - since v if since this is this show
56:25 - variable's false it shouldn't show up
56:27 - right now
56:28 - yeah it doesn't show up and now if i set
56:31 - it to
56:34 - oh true
56:38 - it should be there okay good
56:40 - so now let me set it back to false
56:43 - and since i already have this button and
56:45 - method i'm going to add that extra here
56:48 - so i'm going to say this dot show
56:52 - i'm going to toggle it so
56:54 - this dot show
56:56 - equals
56:57 - the opposite of what it currently is so
56:59 - if it's true it's going to be full so if
57:01 - it's false it's going to be true
57:04 - um okay
57:06 - so
57:08 - all right so it does animate in and out
57:11 - cool so that's working
57:14 - um
57:15 - but how do i do that when it's
57:18 - um when the new quote is coming in
57:21 - so actually
57:25 - uh my opinion view or react so i did use
57:29 - react for
57:30 - i don't know several years
57:33 - at least and i do i still use it a
57:34 - little bit for work
57:36 - um
57:37 - but
57:39 - i mean i just
57:41 - so there are some things that i like a
57:42 - lot better about vue and why
57:45 - i prefer view
57:47 - um
57:48 - and i don't want to say anything bad
57:50 - about react in fact
57:52 - learning react really helped me
57:54 - career-wise to
57:57 - get a job and to work on lots of
57:58 - different cool projects
58:00 - vue i think is
58:02 - a bit
58:04 - i guess easier to use
58:06 - in in that they have
58:09 - um a lot of conventions
58:12 - that
58:13 - where they implement them using this
58:15 - human first approach
58:19 - so
58:19 - even their naming conventions this is a
58:22 - simple example so
58:23 - let's look at life cycle hooks in view
58:30 - so they have these life cycle hooks let
58:32 - me see if they list them all at the top
58:38 - nope nope
58:39 - okay
58:40 - where are we in their api
58:47 - all right so life cycle hooks they have
58:50 - created when the components created
58:52 - before create
58:54 - before mount
58:55 - mounted
58:57 - um when you compare this to some other
58:59 - frameworks like let's say react you have
59:04 - on
59:05 - i can't even remember every time i try
59:07 - to remember them
59:08 - i have to think about it but with view
59:11 - it's like just one word it's exactly
59:13 - what it does mounted okay that means
59:15 - it's past tense and mounted before
59:18 - update
59:19 - means before it happened
59:21 - and then updated so after the component
59:23 - updated and you run these life cycle
59:26 - hooks
59:28 - why can't i remember the react ones
59:29 - right now i was just using them
59:30 - yesterday uh anyway so it's much they
59:33 - made it much simpler from the naming
59:36 - to the documentation to how to start a
59:39 - view project i have to eject
59:42 - um view the view team
59:45 - like
59:47 - preaching view right now
59:48 - so the view team made a really smart
59:50 - decision
59:51 - um so back in 2015 in 2014 whenever i
59:55 - started react
59:56 - it was really hard to create a react
59:58 - project i i became a webpack expert i
60:01 - learned webpack i learned babble i
60:03 - learned
60:04 - react redux all of those different
60:07 - pieces
60:08 - vue
60:09 - chose to make it simpler
60:11 - and
60:12 - make all of these different packages
60:14 - under the core of the
60:17 - view umbrella so the view core team
60:20 - has its own state management so vue x
60:24 - their own router view router
60:26 - um they have their own um
60:30 - the create
60:33 - view create which is kind of like create
60:36 - react app
60:37 - view has it built in
60:39 - um
60:40 - to the views they have their own view
60:42 - cli so
60:44 - it's just
60:45 - i think the ecosystem is much easier to
60:48 - work with
60:50 - um than react and i like some of their
60:52 - design decisions now bear in mind vue
60:55 - had the benefit of coming after angular
60:58 - and after react
61:00 - so
61:00 - even they admit that they
61:03 - took a lot of things from angular and
61:05 - react
61:06 - and
61:07 - tried to improve upon them so it's not
61:09 - like vue just made up everything on its
61:12 - own no it learned from other frameworks
61:15 - so yeah anyways i really
61:18 - like view i think it's a breath of fresh
61:20 - air in
61:21 - the
61:22 - wild world of
61:25 - front-end javascript where there's so
61:27 - much going on all the time and views
61:29 - just really
61:31 - nice
61:32 - to use i guess
61:36 - um okay anyway
61:39 - so i have this transition so i think
61:43 - i'm not sure so what i would normally do
61:45 - so if i had built a regular application
61:48 - um
61:49 - here
61:51 - would
61:54 - i would basically be
61:56 - going to a route like quotes
62:00 - and then slash
62:02 - the quote id
62:04 - and when you do that
62:07 - view routing when it routes to the new
62:09 - route you can make a transition like
62:12 - this
62:13 - but honestly i don't know how to do it
62:15 - without routing
62:17 - and without
62:19 - you know showing and hiding so this
62:21 - would be an interesting thing to figure
62:22 - out maybe
62:24 - how to
62:25 - animate the quotes
62:27 - um as they change i guess
62:30 - as state updates
62:33 - um
62:35 - oh wait so we did talk about life cycle
62:37 - hooks so
62:39 - we could
62:41 - do a life cycle hook like updated
62:44 - and
62:46 - this is a function
62:50 - oh wait this needs uh
62:52 - comma
62:53 - um so we have this updated lifecycle
62:55 - hook so every time the component updates
62:58 - which it updates every time we call this
63:00 - new quote function because it's
63:04 - doing or updating the current quote let
63:06 - me get rid of this show stuff that was
63:08 - just
63:09 - temporary
63:11 - okay so it updates the current quote
63:18 - and so this will call the update
63:20 - function every single time so i can
63:23 - console.log
63:24 - [Music]
63:26 - let's see
63:30 - i'll just say updated
63:32 - and we can see this in the terminal
63:35 - by the way i'm not saying don't use
63:37 - react because
63:39 - we actually teach react at our coding
63:42 - school
63:43 - because there are so many jobs in react
63:45 - so
63:47 - i'm not trying to say it's bad or
63:48 - anything
63:49 - okay i have an error here
63:52 - um
63:53 - show
63:55 - yeah so basically don't
63:57 - miss misquote me there
64:01 - all right just because i prefer view
64:03 - doesn't mean that other people shouldn't
64:05 - use react
64:08 - okay
64:10 - um
64:11 - yeah this is good oh yeah so
64:14 - i was like why isn't it showing up so i
64:16 - have to hit new quote and you can see it
64:19 - calls the updated function every time oh
64:22 - my face is in the way
64:24 - all right
64:25 - so it calls this updated function
64:29 - um
64:30 - down here every time
64:34 - okay so
64:36 - um because i was thinking maybe there's
64:39 - some way in the updated function
64:43 - to
64:45 - call an animation
64:47 - what you could do here is set
64:49 - new classes
64:52 - animation classes
64:54 - so this is this would be interesting
64:58 - um
64:59 - so here
65:01 - i could
65:02 - put a variable
65:06 - um
65:09 - i could say
65:16 - you know i
65:17 - i don't know so here i would have to put
65:20 - in animating and then animated variables
65:23 - so i would have to do a set timeout i
65:25 - think
65:27 - i don't know is that something you guys
65:29 - want to see
65:31 - uh
65:32 - animation
65:34 - i basically finished a little bit early
65:38 - on this i thought this was going to take
65:39 - up a longer period of time
65:42 - to make the quilt machine
65:44 - so i'm going to try to make it a little
65:46 - bit better so
65:48 - yeah let me try to make this updated
65:51 - lifecycle hook work
65:53 - and i'll do
65:56 - um
65:58 - let's see updated
66:02 - uh how am i gonna do this yeah i'm gonna
66:04 - have to use a set timeout to add the
66:07 - class and then remove the class when
66:10 - that's over
66:12 - so
66:14 - before the class i'm gonna
66:18 - let me say
66:19 - animating
66:22 - is true
66:25 - okay
66:26 - so i have this animating
66:28 - boolean right now
66:30 - and i'm going to set this dot
66:32 - animating
66:35 - equals true oh no this should be false
66:37 - by default because it's not always
66:39 - animating
66:40 - but when it is animating whenever it
66:42 - updates this.animating is true
66:48 - and then
66:51 - let's see and then set timeout needs a
66:53 - function
66:55 - so
66:56 - i'll pass it a function
66:59 - and then
67:01 - at the end here
67:04 - i'll say after
67:06 - one second
67:09 - run the function
67:11 - and this function will say this dot
67:13 - animating
67:15 - [Music]
67:17 - equals false
67:19 - okay
67:20 - and now
67:24 - this css
67:27 - um this dot animating needs to be hooked
67:29 - up to
67:30 - a css to css somehow
67:33 - so i'm going to do that inside my html
67:36 - i'm going to get rid of transition
67:38 - and
67:39 - here
67:41 - inside the paragraph tag
67:43 - i'm going to put a css class
67:46 - but
67:47 - i'm going to bind this class to a
67:49 - variable
67:51 - so
67:52 - i'm going to
67:54 - instead of just a
67:56 - string here i'm going to actually do
68:00 - v
68:01 - bind
68:03 - and that sets it up to where
68:05 - [Music]
68:06 - i can use um
68:10 - view syntax inside of
68:12 - my
68:14 - or inside of the class string
68:16 - so i'm actually going to bind that
68:18 - boolean
68:19 - so that animating
68:21 - animating boolean
68:23 - i'm basically going to say if this
68:24 - animating boolean is true
68:29 - then i'm going to add this class called
68:34 - animate
68:37 - okay and now this animate class
68:42 - i think i'm just gonna
68:44 - copy what they did here i'm not that
68:46 - great with css animations
68:50 - um but let's see
68:57 - um
68:58 - what would i need
69:00 - i'm not going to do a leave animation
69:02 - right now so let me get rid of that
69:07 - and
69:10 - let's do
69:12 - the animate class here
69:15 - so basically what would it do
69:18 - it would move 10 pixels in
69:22 - and set
69:25 - okay the opacity would be zero
69:30 - and then
69:33 - it would ease in over 0.3 seconds let me
69:35 - change this to 0.5
69:38 - or 0.8 yeah so we can see it
69:41 - um
69:43 - let's see
69:44 - animate
69:47 - all right
69:50 - property or method animate
69:52 - is not defined on the instance
69:54 - preferenced during render
69:56 - um i think what i need to do here is
69:58 - actually put this inside of
70:01 - a string
70:04 - okay
70:08 - okay it seems to like that
70:12 - all right so when i click new quote i
70:14 - don't see anything but let me look
70:16 - inside of
70:20 - here so it has the class animating
70:28 - okay so i think what i'm doing is
70:32 - let me look at
70:33 - um
70:34 - class
70:39 - class and style bindings
70:42 - yeah there's a couple different syntaxes
70:44 - you can use this array syntax
70:46 - and object syntax
70:49 - so what i'm doing here
70:52 - is doing v bind class
70:54 - equals
70:56 - active is active
70:58 - um
70:59 - text chain oh i got them backwards
71:01 - that's what i did
71:03 - so
71:03 - let me do this animate
71:07 - um oh i guess you just need quotes if
71:09 - you have a
71:11 - hyphen in there
71:13 - so i can do animate and then this should
71:15 - be
71:18 - animating
71:20 - okay so it sets the animate class
71:23 - or it
71:24 - it will have the animate class if
71:27 - animating is true
71:29 - okay so this should work let's see
71:33 - um wait let me
71:36 - inspect this
71:39 - all right so right now there's no class
71:44 - and if i change it
71:45 - okay and it has an animate class
71:50 - and
71:52 - it still has an animate class
71:58 - all right well it's getting closer
72:00 - anyway
72:02 - let me see
72:04 - i'm gonna check the chat
72:10 - um just wondering if this webinar will
72:12 - be made available after yeah so this
72:14 - should be up on youtube in perpetuity
72:17 - um this is just a regular youtube video
72:20 - i just happen to be live and you're
72:22 - seeing me
72:23 - probably five seconds after i speak
72:26 - every time
72:28 - yeah so this will be always on youtube
72:30 - and
72:31 - next time actually
72:33 - uh we'll be using the vue cli to create
72:36 - this this is more
72:38 - of a basic introduction so i wanted to
72:40 - kind of step through
72:42 - getting more and more advanced with
72:44 - vue.js as we create more projects
72:50 - uh let me see
72:53 - okay so
72:55 - i'm gonna just finish up this animation
72:58 - and then uh
73:01 - yeah and then i'll be updating the
73:03 - github repo after this
73:05 - so
73:06 - i have animate
73:08 - which is bound to the animating class
73:13 - or the animating boolean
73:16 - and let's see
73:18 - um set timeout this dot animating is
73:21 - false
73:23 - um i can see this in my view dev tools
73:25 - actually maybe that would be
73:27 - the better thing so let me go into my
73:29 - view dev tools
73:31 - and i'm going to refresh real quick
73:36 - all right so
73:37 - here if you can see it says animating is
73:39 - false
73:41 - now when i click new quote it says
73:43 - animating is true
73:46 - and
73:48 - oh
73:49 - okay
73:51 - i think
73:53 - what it's doing is
73:56 - it's not
73:58 - um
74:01 - it's not waiting for this to finish in
74:04 - the update function basically
74:06 - so maybe i'll just make
74:08 - an
74:09 - intro animation
74:10 - [Music]
74:12 - um and let me see
74:15 - so
74:17 - oh wait this isn't proper syntax so
74:19 - maybe that's why it's not working
74:24 - okay let me refresh it one more time
74:31 - refresh
74:35 - some reasons not wanting to refresh
74:45 - okay
74:47 - yeah i'm not sure what happened why
74:50 - it locked up there
75:03 - huh
75:06 - i don't know i guess my browser's mad
75:08 - right now
75:18 - all right
75:19 - so
75:26 - let me check one thing real quick let me
75:28 - see
75:34 - waiting for that to go
75:37 - and i'll say code
75:38 - or
75:40 - quote machine code from
75:44 - live stream
75:47 - and now i'm going to push it to the
75:48 - github repo
75:52 - okay so that worked
75:54 - i'm not sure why my random quote machine
75:57 - isn't
75:58 - coming up anymore
76:00 - but
76:01 - now when i refresh my github repo
76:09 - the browser is not happy
76:11 - um i'm actually going to try to open a
76:13 - different browser let me try a chromium
76:16 - browser right now
76:18 - let me try
76:22 - brave
76:28 - all right
76:32 - let's see if it loads
76:34 - cool so that's loading
76:36 - oh good so we have that animation
76:39 - which only leaves the screen and never
76:41 - comes back
76:43 - sweet all right because we're animating
76:45 - from
76:47 - uh
76:48 - what do we do we're animating from
76:50 - visible to invisible
76:53 - basically because we have
76:55 - um
76:56 - opacity zero so it's going from
76:59 - opacity of one where you can see the
77:02 - word to opacity of zero we can't see it
77:04 - at all
77:06 - okay so
77:09 - i think what i want to do is actually
77:11 - replace
77:13 - the opacity
77:16 - instead of zero i want it to be visible
77:19 - and
77:22 - that's the animate class
77:24 - so before
77:26 - the animate class is there
77:29 - um
77:31 - huh
77:32 - before it's there let me
77:35 - card text card text p
77:37 - so let me
77:38 - add a class
77:41 - or just styles
77:42 - based off of the card text
77:45 - p
77:47 - and i'm gonna say opacity
77:53 - um
77:57 - wait that'll that'll access both
78:00 - of these
78:02 - p
78:02 - or paragraph tags though
78:04 - um let's see
78:07 - okay
78:09 - chrome is locked up right now
78:11 - or not chrome firefox
78:13 - so let's see
78:18 - let me look at css
78:20 - first child
78:25 - so the first child selector
78:28 - okay i can do colon first child
78:31 - so in card text i'm going to try that so
78:34 - i only
78:36 - want to affect this first paragraph so
78:38 - i'm gonna do
78:40 - first child
78:43 - and then set the opacity as zero here
78:47 - okay
78:48 - let's see if that works
78:50 - oh wait go back to
78:52 - brave okay opacity is zero
78:57 - no
79:02 - well the quotes are changing but you
79:03 - can't see any of them
79:05 - i wonder
79:06 - yeah they're not okay
79:09 - so
79:12 - opacity is zero
79:14 - and then the animate class
79:20 - is
79:23 - opacity of one so i wonder if it's just
79:25 - because of specificity css
79:28 - let me add an important statement here
79:35 - okay
79:36 - i feel like there's going to be so many
79:38 - things after the stream that i want to
79:40 - fix
79:42 - okay that's still not working
79:46 - so let me see
79:51 - so i had
79:54 - let me just transition something else
79:55 - not the opacity let me say color
79:59 - is red
80:01 - here
80:04 - all right
80:09 - okay cool it transitioned
80:12 - into color red
80:14 - all right
80:15 - it would be kind of interesting to also
80:17 - do i guess random colors
80:20 - with the random text so they all changed
80:24 - um
80:26 - yeah so
80:28 - does anyone
80:31 - oh it's locked up too all right
80:33 - so
80:34 - a couple things um the code is available
80:38 - on
80:39 - github
80:41 - so if you go let me pull it up in
80:43 - um brave
80:45 - so if you go to
80:46 - [Music]
80:47 - my github account
80:51 - you can see all of the code and actually
80:53 - all of the free code camp projects are
80:54 - going to be here this is just the first
80:56 - one done in vue.js
80:58 - feel free to raise an issue to open an
81:01 - issue
81:03 - if you have any anything to add to this
81:05 - repo or even if you just want to
81:07 - practice contributing to open source
81:09 - this is a good place to do it
81:11 - if you have any questions about vue
81:16 - then you can post them in the comments
81:17 - below
81:18 - and you can also check out my channel
81:20 - faraday academy i do lots of view
81:22 - content on there and feel free to reach
81:24 - out to me
81:25 - alright thanks so much for the live
81:27 - stream in the next live stream we're
81:29 - going to be working on the next free
81:30 - code camp project which is a little bit
81:32 - more in depth so i think it's going to
81:34 - take
81:35 - maybe the full two hours because we're
81:37 - planning on doing from 10 a.m to
81:40 - noon so it should be or that's on my
81:42 - time zone anyway it's probably different
81:44 - for you
81:45 - because i'm on eastern daylight time
81:48 - right now
81:49 - so
81:50 - it should be a two hour live stream next
81:52 - time we're gonna add in some more
81:54 - features do view from the command line
81:56 - and a few other things so yeah thanks
81:59 - for thanks for tuning in
82:02 - uh and have a great day everyone