00:00 - Hello everyone here on the freeCodeCamp channel
wanting to learn how to make your own CRM
00:05 - with Google Sheets or Postgres SQL, I say
oh as I will be showing you how to build a
00:11 - CRM with both. So if you are more comfortable
with Google Sheets, we will start off with
00:16 - that. Or if you want to use a database I will
be showing you how to make in Postgres SQL
00:21 - two. My name is Andrew kooba, and I'm a software
developer and course creator on YouTube. I
00:27 - am also your host for this action packed video
for all skill levels. It is my personal mission
00:32 - to show you that anyone can make a CRM or
customer relationship management system and
00:38 - make it customizable to them and their business.
A CRM is essentially a way to manage your
00:44 - customer data. For example, imagine having
1000s and 1000s of customers, it will become
00:50 - virtually impossible to remember which one
of your customers but what, when, or when
00:55 - the last time that you email them what CRMs
allow you to add this data to the system,
01:02 - filter through it to find customers based
on a variety of variables, and even automate
01:07 - your processes such as sending thank you emails
or payment reminders. The main purpose of
01:13 - CRM has traditionally been improving customer
service and driving sales. CRM software's
01:19 - actually have been around since the late 1990s,
but have really flourished in the recent years.
01:25 - Some examples of famous CRMs are Salesforce,
Oracle, NetSuite for large enterprises, and
01:29 - HubSpot, and fresh work for smaller businesses.
Now, there are many reasons why you might
01:35 - want to build your own CRM. For me the most
obvious is that CRMs can be expensive, and
01:40 - often you are paying for features that you
don't really care about that much. Using local
01:46 - solutions, such as the one we will be using
in this course, allows you to create your
01:50 - own personalized CRM experience totally for
free, or at least at a fraction of the traditional
01:55 - price. This CRM will allow you to sell your
data in a visual way, meaning we will be creating
02:01 - dynamic graphs and charts, as well as allows
you to add or edit data from the platform
02:07 - itself. It will also allow you to perform
refunds directly from the platform using the
02:11 - stripe API, as well as send out automated
emails based on templates of your choice.
02:17 - API stands for Application Programming Interface.
They allow for technologies to essentially
02:22 - talk with each other and are essential to
so many services that we rely on today. They
02:28 - are in fact behind most apps we use on a day
to day basis. And they can shape the information
02:33 - paths between one technology to another. API's
are everywhere. We are in fact going to be
02:39 - using the stripe API and a mailing API in
this course, but there are so many you can
02:45 - choose from to improve your CRM offering.
This course is going to adopt what is considered
02:50 - a low code approach to creating platforms.
This means there are no hard coding prerequisites
02:56 - for doing this course. Although unlike no
code, and understanding the fundamentals of
03:01 - HTML, CSS and JavaScript are advised if you
want to take your project to the next level
03:07 - in terms of styling and functionality. To
break it down for you. Here's what we are
03:12 - going to learn step by step. In part one,
we will build out our CRM from Google sheets
03:18 - in which we will fetch all of our data into
the platform, but then also learn how to add
03:23 - new data to the existing Google Sheet directly
from the platform we have built. We will also
03:29 - learn how to edit data to so that it is saved
back in the Google Sheet afterwards. Next,
03:34 - in part two, we will integrate stripe for
processing refunds thanks to the pre configured
03:40 - stripe API. After that, in part three, we
will learn how to send out automated email
03:45 - notifications with the bailing API. And finally,
in part four, we will upgrade and transition
03:51 - the backend away from Google Sheets and to
Postgres. SQL has scalability and to handle
03:56 - more complex features. Okay, so what are we
waiting for? Let's get to building out our
04:03 - CRM. Okay, so welcome to the Regional platform.
This is the platform that we will be using
04:09 - for this tutorial in order to create a dashboard
that looks like this. Okay, so in order to
04:16 - do this, I'm going to start off by creating
a new project on the main dashboard. Here
04:23 - are some previous projects that I have done,
we're going to go ahead and just click here
04:26 - to create a blank app. And let's go ahead
and give this a name. So I'm going to call
04:31 - this FCC CRM and just click Create up which
will take me to this blank dashboard. Okay,
04:40 - so here we go. Here's our blank dashboard
with a table that has been created for us
04:47 - just as a demonstration. I'm going to simply
go ahead and delete that table to truly make
04:51 - this a blank slate. Now, we are going to be
working with some data now in any sort of
04:59 - situation. So you're a small business owner,
and you have a lot of data that you then want
05:04 - to use to create an app. That's the angle
that we're going to go with. Okay, so we are
05:08 - going to take this sample data from Northwind.
Right here. This sample data will provide
05:16 - us with a table of categories, regions for
our customers, territories, customer demographics,
05:22 - customer demographics, again, a table of employees
to show which employee deals with which customer
05:30 - and order, employee by territory, supplier,
product, shipper, the sales order itself,
05:38 - the order details, and so on. And now we're
going to insert all that data. So this is
05:43 - the data that we are going to work with for
the first part of this tutorial, I have gone
05:48 - ahead and put all of this data in a Google
spreadsheet for you. As you will see here,
05:54 - here, all our customer, there is a lot of
data, we also have the sales orders, and so
06:01 - on and so on. If you would like to make your
own table, all you have to do is go to your
06:07 - Google Drive or sign up if you don't have
an account, create a spreadsheet here by clicking
06:12 - on Google Sheets, and start creating columns
and rows. You can even label the tabs down
06:18 - here as previously seen and create new tabs
with new tables. So that is just some background
06:24 - for you on Google Sheets and how to create
your own. But for now, and for this tutorial,
06:30 - if you want to follow along, please go ahead
and just use the table with the Northwind
06:34 - data I pre met. This data mimics a generic
company that receives orders. These orders
06:42 - are represented by rows here in this table,
which we have put in a tab called sales orders.
06:49 - Data in the sales order table can also link
to specific products that can be cross linked
06:54 - to here, employees that deal with the orders,
the customers that make the order, and so
07:00 - on and so on can also be linked, I would advise
taking a moment here to really understand
07:05 - what is going on in this database. So I will
be sharing this link with you in the description
07:11 - below. Please go ahead and have a look at
that. Once again, here are all our orders,
07:16 - there are up to 831 orders that we are going
to be working with. So great a lot of data
07:23 - let's carry on. So the first thing I'm going
to do is create a new resource. So let's go
07:31 - ahead and go to our resource page. Here, you
can see all the resources available to us.
07:38 - I'm going to go ahead and select the Google
Sheet one on this occasion, as we want to
07:42 - be able to connect the Google sheet we are
looking at to the platform. So these are the
07:48 - steps you will need to do in order to make
that happen. Great. So now let's go back to
07:54 - our app. And don't forget to refresh the page.
Now I'm going to make a new query. And as
07:59 - the resource, I'm going to choose the new
resource we just met, which is called Northwind
08:05 - CRM data. So there we go, we have officially
linked up our Google Sheet to this platform.
08:10 - So now let's go back to the app we are building,
we are just going to use a component, the
08:16 - table component to be precise from the UI
panel on the right, in order to map all our
08:21 - data onto it. Okay, so that is what we are
going to do. If that helps, I like to think
08:27 - of this platform as having a bottom panel.
That is to make queries a panel on the right,
08:33 - that is for all our UI components. And a panel
on the left, which is foreseeing the shape
08:38 - of our data that comes back to us after we
make a query. I will be showing you this later
08:43 - on. Okay, so now we can actually pick a spreadsheet
ID. And I'm just going to select Northwind
08:50 - data as that is what we call a Google sheet
here. And for the sheet name, well, the first
08:55 - thing that I want to get is the order sales
orders. So let's go ahead and select that
08:59 - here, sales orders, just typing that in making
sure that it's spelt exactly the same way
09:06 - that we did, right here, sales order, sales
order. Great. And just click Save and Run.
09:16 - So now we should see all our data coming up
down here. Wonderful. I'm just going to rename
09:22 - this to get sales or der data so that it's
more readable for us later on. Wonderful.
09:33 - So we are now getting all our sales order
data. And to create a table with it. Well,
09:37 - all I'm going to do is just drag a table in
here. And there we go. We will see our table
09:43 - populated or the sales order data. This is
because we are on this query. Our query here
09:48 - is selected so it knows to use this query
in order to populate our table. While we're
09:54 - here, I'm just going to get rid of this query
as we are not using it at the moment. Wonderful.
09:59 - So So that is our table, it is looking good.
Let's carry on. Before we move on, I'm actually
10:07 - just going to edit this table a little bit.
So that looks a little bit neater for us.
10:12 - So let's do that now. So I can simply click
on the columns here and rename the column
10:17 - if I want. So for example, maybe let's call
this order ID like so. And that will update
10:26 - in here, let's also get the customer ID. So
I'm just gonna go Cust, ID, just like so,
10:35 - and so on. So while we are here, I'm also
going to show you that you can format each
10:40 - of the columns. So for example, the required
date, what if I click on this I can even choose
10:50 - Date Time, local timezone, or original timezone,
it is completely up to you, whichever one
10:56 - you'd wish. Let's go with original timezone,
like so. And that will format the date to
11:01 - be a little bit more readable for us, as opposed
to this format right here. Let's do the same
11:07 - on the ship's date. So once again, let's go
ship dates, and just select Column Type, original
11:19 - timezone, and you will see that changing.
And finally on the order date. I'm just going
11:28 - to click here, Column Type, date, time, original
time, so wonderful. So this is already looking
11:35 - a bit better. While I am here, let's have
a look at what else we can do. We can of course,
11:41 - also hide columns. So for example, perhaps
I don't want the ship region, all I would
11:45 - do is simply go here and click on the little
i to hide it. And I'm also going to hide the
11:50 - shipper ID and the fruit number. Okay, so
that is looking better with the information
11:58 - that I want. One thing to note here is they
actually added this charge ID, this charge
12:04 - ID is from stripe, I have added it in the
sales order right here. So this column has
12:11 - been added by me. And I have done this so
that we can demonstrate how to issue straight
12:16 - refunds on particular orders. So once again,
this was not with the Northwind data here,
12:22 - this is a column that I have populated myself
and created myself. But don't worry, if you're
12:28 - using the link in the description below. You
should see this too. Okay, so while we're
12:33 - here, I'm just going to rename all of these
as well. So let's maybe change this to amp
12:38 - ID for employee ID. Let's also do order, date.
Shipped, dates. Quiet, dates, ship name, I'm
13:01 - actually going to hide I don't really think
we need this ship address, I'm just going
13:06 - to put ship address like so. Ship city, I'm
just going to give us city, postcode and their
13:17 - book postal code. And it's just leave this
US country and the charge ID. Wonderful. So
13:29 - this is already looking much better for me.
Great. So we have our table. This is looking
13:38 - good. Let's go ahead and add a few more tables
while we're here. So I can go ahead and perhaps
13:44 - let's add the table of customers as I think
that is some good data that I would want as
13:50 - a start up. So once again, I would just go
into here, click new resource query, making
13:57 - sure that I am on the Northwind CRM data.
As that is the Google sheet that we have linked
14:03 - here. I'm going to read data from a spreadsheet.
I am also going to select which ID so Northwind
14:11 - data is what we call the spreadsheet. And
then the sheet name. We know that is customer
14:17 - so I'm simply just going to type customer
here and click Save and Run. And while I'm
14:24 - here, I'm going to rename this query so that
we can keep track of them better get customer
14:28 - data, just like so. Great. So now we can put
another table in however, I'm going to show
14:40 - you a really cool way to organize your data,
we can use the tabs component. So if I just
14:47 - go ahead and whack in the tabs here, I can
now put one table and have one and another
14:53 - table on tab two. So I'm going to put all
my sales ORA is going to drag that table,
15:03 - drag this table up in here. And there we go.
So these are now our sales orders, we can
15:11 - even put some text here in order to make this
more obvious to everyone. So it's going to
15:15 - grab some texts. And I'm simply going to put
sales orders. Like so we can also make this
15:30 - bold, if you wish. We are using markdown to
make this bold. Markdown is a lightweight
15:39 - markup language for creating formatted text.
Using a plain text editor is the same thing
15:45 - you use when writing GitHub with Miss, you
can find all the syntax you need here, if
15:50 - you wish. So there we go. Now that's more
clear that up sales orders. And then I can
15:56 - also do so on tab two. So on tab two, this
is going to be customers. So I'm just going
16:04 - to put customers making sure that it's spelled
correctly, like so. And making sure I'm on
16:09 - the query, I'm just going to grab a table
and just put it here, in order to populate
16:15 - this with the data that we see from my query
displaying right here, after we have run the
16:22 - query. So there we go. Great. Once again,
if you wish, you can choose to hide certain
16:33 - things, perhaps let's go ahead and hide a
few now because this is quite low information.
16:38 - So perhaps I don't want the facts number,
I can go ahead and hide that. I can also hide
16:44 - the region, if I wish, it is totally up to
me. So perhaps I will hide the region, I think
16:52 - this is enough data for me. And of course,
we can just pull that out, like, so. Great.
17:02 - So we've got our customer data. And then we
also have our sales orders. We can also of
17:08 - course, rename the tab so I can do so right
here, sales orders. And then we have customers
17:19 - as well. So there we go. I'm going to actually
do one more table before we continue adding
17:27 - other things. Another table that I would like
to add is the table of orders themselves.
17:33 - Because at the moment, we can see here the
order number and it gives us the information
17:37 - about the customer and the shipping date and
the status. However, I just want to know what
17:43 - is exactly associated with this order. So
for this, I'm actually going to use the order
17:49 - detail. So I'm going to get this table in
here. So once again, new resource query, making
17:57 - sure that I am on Northwind CRM data, I'm
going to read data. And I'm going to choose
18:03 - the sheet Northwind data and the sheet name
is order detail. So I'm just going to go order
18:08 - detail, like so making sure that it's for
correct and save and run. And there we go.
18:16 - So we have that here. Let's also rename this
to get order details. And I'm just gonna drag
18:28 - that once again up here, so that we can see
the order details, just like that. Okay, wonderful.
18:40 - So this is looking good. Once again, perhaps
let's put some text here, just to let everyone
18:46 - know that these are order details. And I'm
going to get rid of that emoji. We can actually
18:56 - do some editing on here too. So for example,
here is my tab, we can style the tab with
19:03 - all these pre configured things, or we can
you know, go fully custom. At the moment,
19:07 - I'm simply just going to choose to change
the header like sir. So I'm going to choose
19:15 - to make this white. And that's already looking
a little bit more stylish for me, please feel
19:21 - free to go wild. That part is totally up to
you. So there we go, we have now completed
19:27 - the part where we put in all our tables. Now
I'm going to show you how to create pie charts
19:32 - and visually show this data thanks to these
components right here. So I'm just going to
19:38 - go and use a component such as chart in order
to do this, or we can make a progress circle.
19:44 - That part is completely up to us. For now,
though, I'm just going to create a new tabs
19:50 - item here. So tabs component, I'm just going
to drag that in so that we can display different
19:55 - types of data on different tabs. So I'm just
going to make this a little bit bigger. Like
20:00 - so. And great. And once again, I'm just going
to change the header background to be white.
20:08 - So I can simply just drag this up here, or
I can put in FFF, fff to symbolize weight
20:15 - by myself. So tab one, I think the top one
is going to be an overview. So let's make
20:21 - this an overview. And it's going to just be
an overview of the amount of orders that we
20:25 - have shipped. So I'm going to use the table
right here, I'm going to use the ship date
20:31 - in order to show us how many orders have been
shipped. And I'm also going to use the table
20:35 - data here in order to show us how many items
have been sold at full price. Okay, because
20:41 - you can see discounts on implied to some,
I will know exactly how many orders we have
20:45 - sold at full price. So to do this, I'm simply
going to get the progress circle and drag
20:55 - it in here, just like so. So here we have
a progress circle. And now let's link it up.
21:05 - At the moment, the value is hard coded. However,
we don't have to hard code it, we can use
21:11 - the table data in order to make this dynamic.
So as we said, we want to show how many orders
21:18 - have been fulfilled, or another word shipped.
So we are going to get our sales order data
21:23 - which is an array, and we are going to use
the JavaScript method of filter to filter
21:28 - out each order that has a ship date have not
an empty string, as if it is not an empty
21:35 - string, it means a ship date exists. And we
can say this order is fulfilled. Next, we
21:40 - are going to find out how many of those exists.
And we will do so with the length property
21:45 - on the array, we will then get that value
and divide it by the total amount of orders
21:49 - in the get sales order data array and multiply
by 100. As that is how percentages work. Okay,
21:56 - so fulfilled orders over a total of orders,
multiplied by 100 will give us the percentage
22:03 - of fulfilled orders. So to do this, this is
the syntax for doing so in here, I need to
22:09 - get these two curly braces, well, we know
that this table is made up of get two sales
22:14 - order data. So let's get says order data get
sales order data. And we need to get its data.
22:24 - So we can use this in order to see how the
data is formed. So he is get sales order data
22:29 - and you will see that comes back as an object.
That object has data in it, which is why we
22:34 - are getting data. And data is an array. It's
an array of different objects. So let's filter
22:42 - our array, I'm going to use the JavaScript
method of filter to filter out each item in
22:47 - the array, let's call it an order. So like
so order. And for each order in our array,
22:57 - I'm going to get the orders, shipped date.
And if it does not equal an empty string,
23:11 - then I want to get this arrays length, and
then just divide it over the get sales order.
23:21 - Data Data length, so the length of the entire
array 
23:31 - there was a spelling mistake here, let's go
ahead and correct get to sales order data,
23:37 - we go get sales order data. Now let's multiply
by this 100 Because that is how you would
23:45 - get a percentage so that we go a percentage.
So just talking this through again, what we
23:52 - are doing is getting the sales order data
that we can see here. So as you can see here,
23:58 - this is the object that returns back, we're
then going into data, which is an array essentially
24:02 - of all this information. And for each item
in this array, which we have called order,
24:08 - we're going to filter out by the Shipped Day
date. So this right here, and if ship date
24:16 - is null, so it doesn't contain anything, well
then we know that it's not been shipped. And
24:21 - then we're going to divide that by the length
of this entire array. So by the amount of
24:26 - items in the sales orders are multiplied by
100 Because that is how you'd get the percentage.
24:31 - So as you will see here, 97% of our orders
have been shipped. So in other words, 97%
24:38 - of our orders have a shipped date. Wonderful.
So hopefully that was easy. Let's carry on.
24:47 - So now once again, I'm just gonna drag over
some text austraila over here, and let's do
24:55 - Shift orders. Just so people can know what
we are talking about ship or, Doris. Again,
25:06 - just get rid of the emoji, we don't need that.
And then we can also have some texts tell
25:14 - us exactly the percentage. So once again,
I'm just going to drag that up here. And we
25:21 - can do something like this, I'm just going
to get rid of that currently. And then we
25:29 - can put the percentage in there if we want.
Currently 97% of all orders have been shipped,
25:40 - just so it's super clear to whoever's reading.
And once again, this should be easy, we can
25:45 - actually grab the value of this if we want.
So this is progress circle one. So I can,
25:53 - instead of doing the calculation again, just
get progress, circle one, and I can get its
26:01 - value. So there we go. And we can use some
JavaScript on this, to make it to two decimal
26:07 - places, if we wish to fix and then just pass
through a two, just like, so. Great. So this
26:18 - is looking good. Let's just add a percentage
here. and wonderful. So now that we've done
26:24 - that, how do you think we would make a percentage
for all the orders that have been sold at
26:32 - full price? Well, once again, I would simply
grab a progress circle. So this is progress
26:39 - circle number two, this time, just going to
put that in here. And this time, let's get
26:48 - the get order details. So get order details
data, that's correct and don't want the value
26:55 - six to be hard coded, I want to get the order
details data, get order details, data, which
27:04 - is the array, and this time, I'm actually
going to filter by 
27:13 - the discount. So very similar to what we did
last time, you can use the filter JavaScript
27:17 - method to filter out each order. So I'm just
going to put order, I'm going to call every
27:23 - item in the array an order. And for each order,
I'm going to get the order discount this count,
27:32 - because that is what it's called here, the
order, it's going to an item discount. And
27:39 - if the order discount equals the string of
zero, because that is what we have here we
27:46 - have strings of zero, not numbers, then I
want to get the length of the array. So I
27:52 - want to get exactly how many have the string
of zero and the discount, and divide this
27:59 - by the array itself. So get all the details
data dot length, and of course, multiply it
28:11 - by 100 to get a percentage. So there we go,
making sure that this is in two curly braces,
28:20 - because that is the syntax for doing so. Okay,
great. So we can see 61% of my orders have
28:29 - been sold at full price. So I'm just going
to copy that. And then once again, let's just
28:38 - get the progress circle to value this time.
Currently 61.11% of all orders have been sold
28:54 - at full price. And then let's just make sure
we have no spelling mistakes here either.
29:02 - And great. And once again, it's perhaps just
give this a title. This time saying full price
29:15 - orders, full price orders. Just like so. Just
making sure that they are all aligned correctly
29:35 - to make them look good next to each other.
So there we go. Okay, great. So we have now
29:44 - learned how to use the progress circles. The
next thing I'm going to show you is how to
29:50 - show a statistic. So let's go ahead and perhaps
this time show something like the total of
29:57 - all the orders. So for this I'm just gonna
Get the unit price and add it all up. Okay,
30:03 - so that's what I want to do and multiply it
by the quantity sold. So unit price by quantity.
30:10 - And for this, I'm actually going to use a
statistics component. So we already have this
30:15 - here, it's already sort of nicely styled for
us to look like a statistic. So there we go.
30:21 - Let's also pop some of these down. Now, I'm
just going to move these down. Of course,
30:26 - the styling is completely up to you, please
feel free to go wide on the styling however
30:31 - you wish, I'm also going to put in a divider.
So just whack that in here. Again, this is
30:37 - just assigning preference, please feel free
to start this up, however you wish once you
30:43 - have got to grips with the retool tool. Okay.
So just putting these circles back like that,
30:52 - that's making them smaller. Again, you could
just fiddle around this forever. So please
30:59 - just bear with me. And great. So here, I want
to show the total of all the oldest salts,
31:08 - I'm just going to put total. And, like so
total. And then here, well, we don't want
31:15 - to hard code this, once again, let's get up
our curly braces, because we want to get,
31:20 - we can also do it by table. So this is table
three, let's get table three, let's get the
31:26 - data in it. And we just want to go by selected
row. So I can use selected row selected row.
31:37 - And then I can get the data. And what I can
do is get its quantity. And then I just have
31:44 - to multiply it by the table three selected
row. Data Unit Price. Okay, so now whatever
32:01 - row I click on, it will show me the total.
So that is looking pretty good. Perhaps us
32:09 - maybe make this clear what this is total of
select tid. Row, and now we can simply get
32:18 - the total just by clicking the row. So that
was quite handy for us as small business owners,
32:25 - I also just want to perhaps get rid of this
as it doesn't really mean anything. So let's
32:30 - get rid of the caption here. And I don't really
need this increase amount. So we don't want
32:36 - a positive trend. I'm just gonna delete that,
like so. Great. So there we go. Now we've
32:47 - just made a useful tool to essentially show
us the total of the selected row. The next
32:53 - thing I want to do is just show us the total
amount of customers that we have in this dashboard
32:58 - and the total amount of orders. Okay, so this
is really an overview, this tab has everything
33:03 - to do with an overview of the total dashboard.
So let's go ahead and do that. So this time,
33:09 - I'm simply just going to use text to do this.
And in here, I want to be able to show all
33:14 - the customers that we have. So I'm just going
to once again, perhaps I'm just going to hard
33:20 - code, customers here like so. And then in
here, well, I do want to display the amount
33:27 - of customers that we have. So to do this,
I'm going to use get customer data, and then
33:34 - just get the length of all of this data right
here because this data is the customer data.
33:41 - So if I just simply go by length of the amount
of essentially rows that we have, that should
33:47 - give me the customer amount that we have in
this dashboard. So there we go. Once again,
33:54 - if we look at this table, all I have done
is simply get the length of the array, and
33:58 - the array symbolizes the rows. Okay, so each
array item is essentially a row. So if I just
34:06 - count the rows, it will show me the amount
of customers that we have. Great. So that's
34:12 - our customer data. I can of course, spread
this out a little bit if I wish. And here
34:20 - we can have the order data. So this is going
to be the amount orders. And once again, to
34:27 - get the order amount, well I'm simply going
to get the sales order data, so get sales,
34:36 - order data, data, and then just get the length.
Great. So now we can see the amount of orders
34:43 - that we have. We can also see the amount of
customers. And if I add orders to this table,
34:48 - this should change dynamically. So this is
looking good. There's our overview. Let's
34:54 - carry on. Let's have a look at tab two for
tab two I want to show exactly what the work
35:02 - distribution is by employee. So if we have
a look at the sales orders, you will see that
35:08 - each order, we can actually have a look here
as well has an employer ID by it. So right
35:15 - here, employer ID, so we know what order is
assigned to which employee. But we want to
35:21 - see that visually. So for this, I am just
going to use another component. This time,
35:26 - I am want to create a pie chart. So to do
this, I'm going to go to charts and I'm just
35:32 - going to drag this over like so. And I'm also
going to select pie chart. And this time we
35:39 - are getting the sales order data. That is
correct. However, I just want to show the
35:44 - data by its employer ID. So undervalue labels,
let's select employer ID, just like so. And
35:53 - there we go. So now we can see all the work
done by employer ID. So essentially, what
36:01 - is happening here is that we can see that
employer number four, has the most work as
36:07 - the most orders assigned to them. So this
is looking good. Let's carry on. The next
36:14 - thing I want to do is actually show me the
employers name by this number, right, because
36:19 - we have the data here. If you look here, we
have the employees along with the employer
36:25 - ID. So once again, I'm going to go in here
and click a new resource query, making sure
36:31 - that Northwind CRM data is selected. But this
time making sure that Northwind data is selected
36:37 - to as the spreadsheet name, I want to get
the implore you making sure that it's spelled
36:43 - exactly the same as it spoke here. So I implore
you, and just click Save and Run. And once
36:50 - again, I'm just going to get a table making
sure that on this query, let's call this get
36:54 - employee data. And I'm just going to drag
in a table right here. And that will show
37:02 - me all the employee data, just like so. So
this is looking good, I can now get the employee
37:12 - data. I can also hide things of course, like
for example, let's say I just want their name,
37:20 - I can do so very easily like this by hiding
all the other tabs. Great. So now we have
37:30 - the employee ID, we have their last name,
their first name, as well as their title.
37:36 - Wonderful. And let's just rename this tab
to distribution. So work distribution district
37:44 - you shouldn't like so I'm just going to make
another tab. And this time, the tab that I
37:49 - want to create is a tab called team and a
title another one called Demo grow, to show
38:00 - us where most of our orders come from. Great.
Now, for team well, I'm actually just going
38:06 - to get the same table right here. And I'm
just going to show us all the data that we
38:11 - sort of had before. Because I think it's useful
to have you know all the employee data, not
38:16 - just the first name and the last name, so
that we can filter through it. So this is
38:20 - going to hold all our team data, just like
so. And demographic. Well, as we said the
38:25 - demographic, I want us to show exactly where
most of our orders are coming from. So I can
38:32 - do so easily. Once again, I'm going to use
a pie chart for this. So let's go ahead and
38:41 - find a pie chart. And this time, I actually
want to get the customer data, let's get the
38:53 - customer data, let's do it by where the customer
is based customer data. Just like so making
39:01 - sure this is a pie chart. And this time, I
just want to get the country because that's
39:08 - what I want to display. I want to show what
the breakdown is by country for all our customers
39:15 - to just like that. We can even position this
however we want. So perhaps this is a good
39:21 - way. and wonderful. You will see that most
of our customers come from the US just by
39:26 - simply dragging a pie chart like so. Okay,
great. So this is looking good. Let's move
39:35 - on. I'm just going to drag this a bit lower.
To make sure that's the same level. We will
39:41 - be doing all the styling a bit later on. This
is looking good for now. So great. We are
39:47 - displaying all the data that we have in the
Google spreadsheet we are picking out which
39:51 - sheets we want to use. And then we are also
getting an overview of the data that we have
39:56 - imported in here in various tabs that we have
have made, the next thing that I want to do
40:03 - is actually add data from a spreadsheet. So
I'm going to show you how to do this now.
40:09 - So as we mentioned, at the moment, we're just
reading data, I can also add data to this
40:15 - spreadsheet from this platform. To do this,
I'm going to show you how to do this. First
40:21 - off, let's actually create a modal. So I'm
going to grab the modal, like, so I'm just
40:29 - going to drag it in here under the sales orders
title. And I want this modal to pop up and
40:36 - essentially be able to create a new order
that I add in here. So let's go ahead and
40:41 - do that. A modal is a pop up window that we
are going to see, to add the data to our spreadsheet,
40:48 - as we just mentioned, we will do this by populating
the modal with form field inputs and a submit
40:54 - button. So first off, what do we want a normos
all but we're gonna have lots of inputs, essentially
41:00 - input all of this data. But first off, let's
just start perhaps with a title, I want my
41:05 - title to say create an order as that is what
is happening here. So create an order. Just
41:19 - like so, we can also change the background.
So if I perhaps one it red. So like a red
41:27 - like this, that is also possible to Okay,
so there we go. And there is an option to
41:34 - create a form to make our lives easier. So
let's go ahead and find that form first. So
41:37 - I'm just going to search for form. And drag
that in here. So now this is good as it comes
41:49 - with all the button and the styling. And it
just makes it a little bit nicer for us to
41:54 - look at. So here's our order form. It's dragging
this all the way up here. And let's just drag
42:01 - out the title as well. Great. And now let's
go ahead and get inputs for all of this data.
42:12 - So all of the data you see in the row we're
gonna have to collect. So the first thing
42:17 - that we're going to collect is the order ID.
So let's go ahead and do that here, perhaps
42:24 - the value we're going to leave empty, and
to value or we could have an order number
42:30 - as the placeholder, it is totally up to us.
The label, we're going to put order ID as
42:36 - that's what we want to put in here, just like
so. And we can hide the label, we can show
42:42 - the label, we could also make the label appear
at the top or bottom, it is completely up
42:48 - to you. So that's my input for the label,
let's carry on. The next input that I need
42:54 - is to get the employer ID. So let's go ahead
and do that. Because the order date we're
43:00 - going to have to select. So I'm just going
to make that up here. So here's a label. And
43:07 - then for this, let's call this employee ID.
Just like Sir, and once again, let's also
43:19 - make the same for the customer ID. So let's
put the customer ID. So customer ID employee
43:31 - ID, the next thing we do at some dates. So
let's go ahead and get a date picker up. So
43:37 - I can do so quite simply just move this down
a little bit perhaps. And this time, let's
43:43 - get the date picker. And just drag that in
here. So here we have the date picker. I'm
43:54 - going to call this ordered by ordered date
and then we can select a date copy paste that
44:14 - okay, so got the order date. The next thing
we need is the required by so required by
44:28 - date. And then finally, we need the address
fields. So perhaps has put a divider in there.
44:37 - So I'm just going to drag a divider in just
so you can separate the two visually 
44:49 - and now let's get an input. So a text input
just drag it all the way over here. This is
45:00 - gonna be for the address let's put that below
the divider since contract the divider up
45:15 - here once again gonna happen for the city,
the country and the region. So here we have
45:25 - four inputs or text inputs. If wherever reason
you need a number input that is one specifically
45:32 - for numbers, so just bear that in mind. So
these are all text inputs. So we've got the
45:44 - address the next one, I want to be city. This
one I want to be country. So let's just change
45:52 - the level of that. And this one I want to
be region. And we have one more thing. So
46:01 - we're not actually done in this address section,
because we also need the postcode, so let's
46:06 - also have the post code. Okay, so that is
it for the region, or address parts. Once
46:16 - again, we'll split this out because we do
need some more things. Even though we can't
46:20 - see the ship ID and the shipper ID and the
fright ID. And this shipped on date, because
46:25 - we hit some of them, we are going to have
to put this into a form as this data is required.
46:30 - I'm simply just going by the fields here.
Okay, so I'm just going through all of them
46:35 - and just making sure we are collecting data
for all of those to be populated. So once
46:40 - again, let's just get the divider out. Let's
drag that across here. And then let's go ahead
46:55 - and just put in some more inputs. So once
again, I'm just gonna drag that below here.
47:02 - This time, let's perhaps make the label at
the top because we're gonna have three here.
47:11 - So one, oops, two, three. And then just position
them a little bit. So label one, two, and
47:22 - three. And let's have this as ship name. Let's
have this as shipper ID. And let's have this
47:39 - as the fright field freight shipper Id not
shipped. And finally, we're just going to
47:47 - have a date picker to pick the date that this
was shipped on. So once again, it's got the
47:52 - date picker, and just driver in here. So just
like so and give us the label of shipped on.
48:04 - Great. So this is looking good. And of course
we have the submit button as well. So nice.
48:11 - I'm really happy with how this is looking
so far. Okay, great. So we're collecting all
48:19 - that data. But now we need to essentially
get all this data and get this data to make
48:25 - a query with it to add data to the sales order
table. So what I'm going to do is create a
48:32 - new query this time, this query, let's call
this ad sales order, date. Okay, so that's
48:45 - what our query is called. This will be to
Northwood CRM. And then we're going to append
48:51 - data to a spreadsheet, choose the spreadsheet?
Well, that's Northwind data on the sheet we
48:55 - want to add to his sales order. So let's just
go ahead and put sales order like so. And
49:03 - in here, what do we need to do what we need
to add data that looks like this. So let's
49:11 - look in here. Let's look at the data. Okay,
and we need to make an object that essentially
49:21 - looks exactly like this. I'm going to copy
that. And I'm going to make an array. So open
49:26 - up the square braces, and then we could just
make an object and paste all the data like
49:31 - so. But I think this is quite messy. So I'm
going to take you through the step by step.
49:34 - Okay, so open up the array, make an object,
I'm going to copy this object right here.
49:40 - So the first thing that we need to put in
is the, we could start with the charge ID.
49:47 - Let's go ahead and do that to just make sure
that everything's in order. So the first one
49:51 - is charge Id always making sure to spell everything
exactly the same as you see it. So charge
49:57 - ID and for now I'm just going to put the string
of test, put a comma. And the next thing is
50:04 - the Cust ID. So once again, let's put the
string of Cust ID and put the string of test.
50:10 - The next is an ID for employee ID. And once
again, I'm putting test and you get it. So
50:18 - fright is next test by a comma, it's gonna
copy this actually, because there's a lot
50:25 - of repetition fright order date then we have
the required date. Just paste. Next we have
50:43 - the ship, address, and paste. Next we have
the ship, set do paste ship country is next
51:02 - ship, country. ship name we have this shipped
date. Ship for it. Shit, still code and the
51:36 - ship region. Okay, so that is it, let's quickly
make sure that we didn't make any spelling
51:41 - mistakes, even though we will get an error.
So that's all the data that we have. Okay,
51:49 - and let's check it out. So I'm just going
to click save and run this. So I'm just going
51:56 - to get this up a little bit so we can see
what returns back to us. Okay, so that ran
52:04 - successfully, we saw the little pop up. Now
let's have a look here and go all the way
52:08 - to the bottom of sales orders as we did append
the row to this table. So it should appear
52:13 - at the very end of this table. And there we
go. I did press it twice. So two rows have
52:20 - been offended. And everything is working.
Great. Wonderful. So now that the test is
52:27 - working, let's replace these test strings
with actual values from our form field right
52:33 - here. So all I'm going to do is match the
input value to the key. Okay, so there we
52:47 - go charge ID, well, we know that the charge
ID at the moment, I'm going to hard code it
52:53 - because all the charge IDs are the same. This
is just a test charge ID that I'm getting
52:58 - from the stripe API that we will go into later.
So this one I can hard code. So let's go ahead
53:04 - and do that and put that as the string. The
next thing is the customer ID. So we know
53:11 - that that's going to be text input two's value.
So I'm just going to replace this let's get
53:17 - our curly braces up. And I'm going to grab
this element which we called test input to
53:26 - test in foot two, and I'm going to get its
value just like so the should say text input
53:39 - value, apologies text input value. Okay, great.
So this is looking good. We can of course,
53:47 - if we really want to change these. So if I
really wanted to rename them, I could. So
53:51 - just know that there is an option to do that.
I'm not going to do this for this tutorial
53:55 - as that will take a lot of time. But know
that if I wanted to change this, I could.
54:01 - Great. Now let's get the employer ID. So for
this, we're going to use text input three,
54:06 - get the two curly braces and go text input
three dot value. Great. Let's do the same
54:16 - for the freight. So here we go. That's text
input nine. Once again, let's just get rid
54:25 - of these quote marks. Let's get the test word
here got our curly braces and this time we
54:33 - need to get text input nine so text in porch
nine dot value making sure to spell text input
54:46 - correctly just like so. The order date while
the order date is Date Time to so let Let's
55:00 - go ahead and replace the test value here with
date, time to dot value, the required date,
55:09 - once again, that is date time one. So I'm
just going to get the test and use the curly
55:16 - braces to get date time one dot value. So
it really is this simple. That's all I'm doing
55:25 - the shipping address or the ship address.
In other words, that's going to be text input
55:32 - seven. So I'm just gonna get the curly braces
and get text input seven, we can use the drop
55:41 - down to make our lives a little bit easier.
This ship city is going to be six. Country
55:49 - is five, and region is eight. So let's try
remember that just going to copy this one.
56:00 - Ship city we said was six. ship country think
we said that was five but we'll double check.
56:11 - And the ship 
region is eight. Do we have ship region here?
56:22 - Here we go ship region. So let's make that
eight. And just a few more left, we need the
56:33 - postcode which is four. So let's find the
postcode in here. There we go. And replace
56:41 - it with text input four. And then we just
have the ship name which is 10. Ship ID 11.
56:52 - And I think that shouldn't be it. So ship
name is text input 10. Ship ID is 11. And
57:08 - I think there's just two dates left. So let's
have a look. Again back here. One date left
57:16 - date one is this shipped on date. So let's
just go in here and this is date, one, date
57:35 - one dot value. So this is looking good. Let's
test it out. So let's gonna save that. And
57:47 - this time to test it out. I'm just going to
input some data. So let's go ahead and do
57:55 - this. Employee ID, I'm going to say to customer
ID three, order ID again, this is just for
58:01 - tests. Let's pick a date, I'm just going to
pick the date and the time for this one. The
58:09 - address again, I'm just going to put test
for now, city test, country test, region,
58:16 - test, postcode, these three, ship name a,
a, and then fry a and then shipped on let's
58:29 - just have a date for this one. Let's go with
the 10th of love. And then click Run. So now
58:37 - okay. We did get an error. Why is this so
we can actually read right here what has happened.
58:49 - And you will see the line has not been added
there was an error. And I think it is something
58:54 - to do with this. We have left a little apostrophe
there. So that's gone. And I think we also
59:02 - don't have the order ID. So that is one we
didn't pick out if I'm not mistaken. So I'm
59:07 - just going to put that in the front or after
the order date. So just in here, just to make
59:16 - sure it's the same as here for readability.
So order ID and the Order ID is going to be
59:23 - the text input one. So text input one dot
value. Once again, just make sure to format
59:35 - that correctly. So put a comma there. And
great. So now if we save this and run it and
59:45 - have a look in here. Well there you go. The
row has been updated with the correct values
59:51 - in each column. Great. So that is now working.
We have now figured out a way to add data
60:00 - From this platform to our Google Sheet, I
just need to do one last thing that is connect
60:07 - the button right here so that it sends when
we click this button. So I'm just going to
60:13 - click that right here. So I've just selected
the button if you can see that. So here we
60:18 - have it. And we need on submit, we could make
the button forward if we wish. On submit,
60:27 - so that's the submit button. We also want
some events. And I just want to trigger the
60:32 - query, add sales orders, I want to run this
query rather than us running it manually,
60:38 - I could do it by attaching it to this button.
Okay, so that's what I want to happen, just
60:44 - like so. And we could also add other things.
So for example, I can also add, instead of
60:50 - trigger query just to send confetti so that
we know that is done. And then as a third
60:55 - thing, so after we get the sales order data,
I want to display it in here sit on the table,
61:02 - which means I essentially need to make a request
and get all of this data again. So I need
61:06 - to run the query to get sales order data.
So I'm just going to do that in here. So in
61:11 - the query rather than hitting the button,
and I'm going to trigger the query, get sales
61:16 - order data, and save that. So now, when we
fill out this form, and click the submit button,
61:24 - I'm just going to zoom out a little bit, so
you can see the submit button. And when we
61:27 - click the submit button, so let's do another
one this time, this time, I'm going to put
61:32 - order ID www at the end. And I'm just going
to click submit. So we are making a query
61:40 - to add data to this Google Sheet, we are then
sending the confetti, and we are making a
61:45 - GET request to get all the data in here. Which
means that now if I look here, and just go
61:52 - to the end, so let's go to the very end, I'm
going to put in 76, that ah, that is the new
61:59 - line that we have just added. So I'm just
going to zoom back in again. So you can see
62:05 - a little bit better. So great, this is all
working fine. I'm really happy with how this
62:09 - is working. Of course on here, there are inbuilt
tools to download all the data, you can also
62:16 - filter. And you can also reload manually,
if you wish. Okay, so these are all options
62:21 - that you can do on the table as well. Correct.
While we're here, I'm just going to change
62:27 - the color of this as I think blue is a bit
passive, let's go ahead and make it red. So
62:33 - just like that. Wonderful. And I'm just going
to go back to the first page. So page one.
62:42 - Great. So we can now add data directly to
our database here using the platform. But
62:51 - there are other things we could do as well.
So I can actually also delete data from this
62:57 - table so that it shows up here as well. So
that is the next part, we've just added data.
63:01 - Next, I'm going to show you how to delete
data to Okay, so for this part, I'm actually
63:08 - going to have to write a new query to delete
data. However, first off, let's go ahead and
63:16 - add a button to this table. So I can do so
easily by selecting the table. And this time,
63:21 - I'm not actually going to add another column,
I'm going to add an action. So here are my
63:26 - actions. And I'm just going to call this the
Delete action. So here's my action I just
63:32 - created. And let's call this Delete. Okay,
so just like so. So there we go, that has
63:39 - now been appended to the left of my table.
And on here, I want to run a query. Well,
63:44 - that query is going to be the delete row query.
So let's go ahead and write it, I'm just going
63:49 - to create a new resource. And make sure that
it is using the Northwind CRM data. And next
64:01 - I want to not append data or not update, I
want to delete a single row from the spreadsheet.
64:07 - So that is looking good. Let's choose a sheet.
Well, that is the Northwind data sheet. And
64:12 - the sheet name that I want to work with is
the sales order sheet. So making sure that
64:17 - I'm on this sheet right here. And now I'm
just going to have to filter too much row
64:25 - and let's go by order ID. So I'm just going
to select the order ID table making sure to
64:30 - spell it exactly the same as we did in here.
So I'm going to filter by order ID and make
64:38 - sure that equals the table. So table. One,
however it's not here, and I'm just going
64:48 - to put selected row data order ID. So just
like that, so we're literally going to search
64:59 - for a match By order ID and we're going to
find that order ID and delete the entire row
65:04 - if it equals the Selected Order ID of this
row. Okay, so I'm just going to save this.
65:11 - And let's rename this to delete. Selected,
row. Great, and hit preview. So at the moment,
65:24 - I'm on this row, that's the selected room
on, and this is the row that would get deleted
65:29 - from our spreadsheet if I hit run. Okay, so
there we go. And, of course, this is great.
65:35 - But we don't want to run this manually, we
want to attach it to the actions. So I'm just
65:39 - going to get that and run a query, the query
I want to run is the Delete selected row.
65:45 - And there we go. So now let's check it out.
It's going to move that down here. And let's
65:52 - delete this row. So I'm just going to click
here. And great. So now if we look in here,
65:59 - that rows now deleted, and of course, we need
to refresh this data. So on success of this,
66:04 - I want to add one more thing, and I want to
trigger a query. And that query is to get
66:10 - to sales, order data again, and just click
sick. So let's go ahead and delete another
66:15 - row. So this time, let's delete this row.
And I'm just gonna click delete. So now that
66:22 - is deleted, you'll just see that disappear.
And tada, this table refreshes with the fresh
66:28 - data from this spreadsheet. Great. So we are
now adding data, we are deleting data. This
66:36 - is looking awesome. Now, we have one last
thing to do, and that is process a refund.
66:45 - So for this, I'm going to show you how to
do this using the stripe API. So to do this,
66:50 - I'm actually just going to create a container
so that we can store our refund in here, so
66:56 - that it looks a little bit nicer visually.
So I've just gone ahead and created that.
67:00 - And now, let's also create another form that
we're going to put in here. So I'm just going
67:06 - to put in a form into here. So let's again,
just find a form that we can use. Let's go
67:11 - ahead and put that in here like so, let's
perhaps also change the button color. So I
67:17 - don't really like this button. Let's change
the color. Let's make it some stripe colors,
67:25 - perhaps. So I'm just going to use the hex
code that I have. Here, just like so. And
67:36 - then I'm also going to make this button the
full width. And not only that, let's change
67:42 - what it says I'm going to say refund, and
then also notify as we want to send an email
67:49 - notifying the person that the refund has been
made. So great, let's go ahead and just put
67:56 - in some text so you know what's happening
in here. I'm just going to drag that in here.
68:02 - And this should say, create, we found just
like so don't need the exclamation point.
68:13 - Now let's put in some text. And then we'll
just make a little note so people know to
68:20 - select a row from the sales order orders to
refund an amount okay, because we want to
68:34 - pick out all the information from a row is
select just like we did with the Delete in
68:39 - order to make our refund. Okay, so there we
go. The next thing I want to populate, so
68:46 - I want to now populate fields by me just selecting
a row so we don't have to do much manually
68:52 - this is going to be the charge ID that we
want to refund. So I'm just going to use that
69:00 - we also want the refund amount. So for this
I'm actually going to use a number input as
69:07 - this has to be a number so I'm just going
to drag that in here like so and put the label
69:15 - as refund amount that we decide and then let's
also have a refund reason for this I'm going
69:22 - to actually have a select because I only want
there to be three or so reasons that you can
69:29 - make a refund on let's name this we find is
in and let's populate the reasons so some
69:42 - reasons could be you know, let's go ahead
with did not we these are the values actually
69:54 - said these the values we're gonna pick them
up by so didn't like I'm just gonna make them
69:59 - strings This one is going to be too late.
And this one is going to be can. So those
70:07 - are the values we are going to use in order
to pick out our reasons. But now let's have
70:11 - also a way to read them a little bit better.
So we have the values, let's also perhaps
70:19 - have some display values. So I can actually
just clear this. And let's just test this
70:29 - out. So test test. So now there we go. So
it's either using these or we can write our
70:36 - own and my own are going to be does not like
it, the second one is going to be arrived
70:45 - too late. And the third one is going to be
I would like to cancel. So just like so. So
70:58 - great. Now we have our select, let's carry
on. The next thing I'm going to do is just
71:04 - put in a text of the refund summary. So I'm
just going to drag in some text here. This
71:11 - is just going to be a refund. Summary. Okay,
so I'm just going to display a little summary
71:21 - of what we are refunding and why. So I'm just
going to dry that in here, some more text,
71:29 - oops, making sure that this actually is a
bit bigger. Okay, and in here, I'm just going
71:46 - to put the refund amount. So a little summary
of what we wrote above. And I'm going to use
71:54 - number input one dot value to display that.
Okay, so just like so that's my little summary
72:03 - that I'm building, we found a map helps us
put some of these in here. So we've got the
72:08 - refund amount. And then let's also have a
reason. So again, I'm just going to put a
72:13 - reason. And of course, it's blank for now,
because we haven't picked one, this is select
72:18 - one, so I'm just going to replace this with
select one. But if I now choose one, like
72:23 - doesn't like it, that will show up here, okay
as the value. So there we go. That is sort
72:30 - of a recap. And of course, if I just put in
a number here that will show up there too.
72:36 - And lastly, I just want to be able to send
a message, along with you know the refunds.
72:42 - So what we're what we're going to email to
the customer. So once again, I'm just going
72:46 - to perhaps make this a little bit bigger.
Just like so and just stretch this out a little
72:56 - bit. And this time, I'm just going to use
a text input. So text input, we could use
73:10 - the rich text editor, however, I'm just going
to use the text area as I don't want anything
73:14 - crazy. I just want a message like so that'll
be sent over and an email. But of course,
73:20 - if you'd like to use the rich text editor
to that as an option. Okay, great. Now for
73:27 - the message itself. Well, I want to use values
from here. And what I can do is make an email
73:34 - text. So I can go ahead and just write my
own Java script here. So I'm going to use
73:39 - a JavaScript transformer to do this. And I'm
just going to use this to write some javascript.
73:48 - So for example, if I get the order ID, so
what is the order ID? Well, we know that the
73:53 - order ID is whatever row we've selected from
the table. So I'm going to use selected row
74:01 - data order ID, and save that as the order
ID. The other thing that I want to save is
74:07 - the order amount. So let reef fund amount
equal and this time, I'm just going to use
74:16 - the number input one. So number input, one
value, just like so. And now we can construct
74:30 - our message which is simply going to say do
order and then the order number and then I
74:35 - went ahead and made the refund of X amount
your card. If there's anything else you can
74:40 - do, please let me know. Okay, so that's all
I'm going to write. So let's go ahead and
74:46 - do it. Now, let's also write different things
for different reasons that we chose for the
74:53 - refund. So in fact, if I go let opening blurb
equal And then I'm just going to use a switch
75:02 - case. So I'm just going to make that a little
bit bigger for you, I'm going to switch out
75:07 - the reason. So I'm gonna go select one dot
value and switch it out. So if the reason
75:22 - is too late, well, then the opening blurb,
Nurb. Making sure to spell exactly as it's
75:35 - written up, that is going to be I'm making
sure it's back six, actually, I'm so sorry
75:42 - about your order. In being late, I went ahead
and refunded the value to your cart. And of
76:03 - course, replacing this with the refund amount.
So I'm simply going to do refunded and then
76:11 - back tick plus refunded amount, plus and then
the string again. Okay? So that's for the
76:21 - case too late, make sure this is select one,
okay, because we are using the value from
76:27 - here, select one. So that is one case, essentially.
Okay, so there we go. And then let's put a
76:38 - break. The next case that we're going to cover
is the digit like, so making sure to spell
76:45 - it exactly the same as we did here. So didn't
like did like, just like that didn't like,
76:57 - and what happens with this case? Well, let's
again, change the opening blurbs or opening
77:07 - blurb to be backtick. I'm so sorry, you did
not like your order. So that's all I'm going
77:20 - to do for this one, making sure to put a full
stop at the end of this. And then finally,
77:27 - the last case we're going to do is cancel.
And what happens when we cancel? Well, the
77:37 - opening Blub this time it's going to be changed
to making sure that is a capital B. I fully
77:51 - cancelled your order as you requested to full
stop. Great. So that will change the opening
78:03 - blob. Now what do we want to return? Well,
let's just return order and then pass through
78:11 - the order ID. So essentially, this right here,
the order ID. So let's get some curly braces.
78:22 - And in here, I'm just going to put order ID
and then let's also add a nother string to
78:33 - this. This time I'm going to put in the Oh
opening learn as it is after the changes with
78:43 - this switch case, I went ahead and refunded
and then we'll put in the refund amount for
78:53 - you have also defined at the top refund amount
to your card. And then let's finish it with
79:03 - best wishes. really tall. But and save that.
And let's rename this as email, text just
79:18 - like so. Did email so there we go email text.
And in here Well, I'm just going to replace
79:32 - the default value with email, text dot value.
Don't forget to put in the breaks between
79:45 - each of the cases as well. So break and brake.
Also case should not have the double dots
79:54 - here. So just get rid of those. And there
we go. Let's try change the reason And great,
80:02 - that is updating as it should. Now I do want
this to appear on separate lines. So I can
80:07 - simply do that like so. So in the string,
just gonna do Ford slash n, Ford slash n,
80:16 - and preview that. Save it. Okay, so that no
spaces out. Let's do the same after here.
80:25 - So I'm just going to copy this for after string,
and do so after here, too. So there we go,
80:36 - that is looking a lot neater, I don't see
of course change the reason again, would like
80:40 - to cancel, that text should now update to.
And it's also updating with the refund amount,
80:47 - and the Order ID that we have selected. So
this is looking great, we've got the text
80:52 - showing up, this is looking good, I'm just
going to make this a little bit bigger still,
80:57 - so that we can read the whole text when it's
longer. So just like that, wonderful. So this
81:05 - is looking good. The next thing I need to
do is just connect this to the stripe API
81:10 - to process the refund amount on to the charge
ID. So if I just select this, well, the charge
81:19 - ID, we need to actually show that in here
too. So I'm just gonna get a nother text tag
81:25 - like so. And this is just gonna display the
selected row. So once again, I'm going to
81:32 - get the table one selected row data. And I'm
just going to get the charge ID. So that should
81:40 - now show up for us on whatever when we click
the charge ID is the same as we are just using
81:46 - stripes tests API, but just know that that
will change. Okay, if it was different. Okay,
81:52 - so to recap, we have just used a transformer
here, I have used a JavaScript transformer
81:58 - as because we have three different messages,
we want to send one for each drop down value,
82:03 - we to create a dynamic text field value that
will populate with the correct message. This
82:08 - is a perfect use case for a transformer. So
great, we are collecting all the data now
82:15 - to actually make a stripe refund. So for this,
I'm actually going to create a new resource
82:22 - query. And this time, well, I want to create
a new resource. And this time, I'm going to
82:31 - select stripe. So let's call this CRM stripe
resource, you can call it whatever you wish.
82:39 - And we need to put an API key. So to do this,
all you have to do is sign up to stripe.com.
82:45 - Okay, and here, we are going to all the documentation
that we need in order to create a refund.
82:53 - So sign up to stripe gave your API key. And
then we are essentially going to use this
82:59 - to create a refund. And we're also going to
use some test charges. Okay. So here is my
83:08 - stripe dashboard, I'm just going to sign in.
Just like so with my email address that used
83:18 - to sign up before. And on your dashboard,
you will see some test data that you can use
83:23 - in order to test your API. So here, let's
go to the dashboard. Here is the home page.
83:34 - And I can use the test data. Okay, in order
to process a refund, just to see it's working
83:38 - here is my key as well. So I'm just going
to copy that and put it in here. Please do
83:44 - go ahead and use your own as this will not
work, I will be deleting this, and just create
83:50 - resource, just like so. So there we go, I've
now connected my stripe API to my stripe dashboard
83:59 - using my secret key. Now let's go ahead and
create a refund. So what I want to do here
84:08 - is I essentially want to run a query when
manually triggered, and I want to post this
84:14 - to refunds, okay, so it's a post request.
There we go. And in here, well, the Stripe
84:25 - account, I'm gonna leave that blank and leave
this blank to the amount where we know that
84:30 - this is going to be the number input one.
So number input one dot value, because that's
84:37 - the amount I want to refund and the charge
we also know what the charge is. I can actually
84:42 - just take it from here. So text 17 value,
text 17 value, you could have also taken it
84:50 - from table data selected row charge ID, it's
up to you. I just think this is perhaps a
84:56 - little bit more foolproof as we're actually
seeing the charge ID here. So great, this
85:02 - is looking good. Let's save that. And then
let's rename this to post refund. So just
85:10 - like so, and just hit preview, and there we
go, you will see the response of my refund,
85:18 - you will see that refund has been done, we
have refunded the amount one, okay. And if
85:24 - you go to your dashboard, and just go to payments,
so this is my test data, you will see all
85:30 - your refunds done here at the moment, it was
just a preview. Okay, so that is how you would
85:36 - see it. And to get your charge ID, all you'd
have to do is create a payment. And then let's
85:42 - say we have a payment for 20 pounds. And then
we'd have to just input the card information.
85:50 - So if I google stripe, test cards, here we
go, this is exactly what I need. And I'm going
86:00 - to make a fake payment. So let's just go ahead
and use these test cards, I'm going to copy
86:04 - this. And I'm going to essentially make a
fake payment using this fake card data, it
86:10 - says to use any three digits, so let's just
go ahead and do that as well as put any future
86:15 - date. So let's put 30th or December oh three,
and then 123. This is saying it's in the past.
86:26 - So 1221 There we go. So there we go and submit
payment. Okay, so we've just created a fake
86:35 - payment on our dashboard. There we go. Okay,
so here is our payment. And if I want to get
86:42 - the charge ID as we need to get the charge
ID in order to make a refund. Here is the
86:46 - charge ID. So instead of just taking the charge
ID that I have hard coded here, please go
86:54 - ahead and essentially replace this with your
own charge IDs here. So just like so. And
87:05 - just literally just replaced that with all
the charge IDs I have here all the way to
87:13 - the bottom, so that you can put your own charge
ID in order to make refunds. So there we go,
87:20 - I've just replaced all the charge IDs with
my own charge ID from the stripe API Dashboard,
87:26 - click save, refresh this page, so we get the
new charge IDs showing up. Okay, so there
87:36 - we go, that is now updated with the charge
ID that we just put in here. And now if I
87:43 - make a refund, so instead of testing this
out, I'm actually going to run this. So at
87:48 - the moment I'm refunding the month zero, let's
go ahead and make the refund amount one and
87:54 - click Run. There we go, we have now refunded
one to the 20 pound charge that we have here.
88:05 - And we look at this. So let's go ahead and
look at all the payments again, you will see
88:11 - a partial refund of one was made on to this
payment. So we have just partially refunded
88:18 - this charge right here. So hopefully that
makes sense. Please watch this a few times.
88:23 - If it does not make sure to replace all this
data here with your own charge that you created
88:29 - on the stripe dashboard. Okay, great. So we
are processing refunds from this dashboard.
88:38 - Now, let's carry on. The next thing that I
want to do is actually notify us when we create
88:48 - the refund. So the refunds just been made
by also want to send an email. So I'm going
88:52 - to do that next. For this, we are going to
integrate with Google Mail. So hopefully you
88:57 - do have Google Mail. If you don't, you can
use the SendGrid API to however, this is just
89:02 - my personal preference, but it is up to you
whichever one you choose. So to do this, I'm
89:09 - actually going to create a new query again.
So just here, and this time, we're going to
89:16 - create a new resource and choose the ES TP
API. Okay, so that is the one I want to use.
89:30 - Let's go ahead and call this G Gmail like
so. The host, the host is going to be SMTP
89:36 - dot g gmail.com. Just like so as we are using
Gmail, the port is going to be 465 the username
89:45 - you just have to literally use your own email
address for this. So I'm going to put Ania
89:50 - at Free Code camp.org And the password is
actually the password for your email address.
89:57 - So I'm going to go ahead and do that. put
in my actual password in here, and just test
90:04 - the connection. Okay, so my connection was
a success. So I'm going to create this resource.
90:09 - However, if you are having issues, you might
need to do some extra configuration on your
90:14 - Gmail. So we might have to go into actual
Gmail accounts, I'm going to show you how
90:19 - to do this, this is something that I had to
do in order to get this working and in your
90:23 - settings with fording and pop, I am a P, just
make sure that you are enabled, I am a P,
90:33 - and make sure you've enabled pop as well.
And one last thing you need to do is enable
90:38 - all apps like so. Okay, so you're sort of
lowering, I guess, your security settings
90:44 - and allowing third parties to use your email
on your behalf. Okay, great. So that is something
90:50 - that you need to do in order to get this done.
Hopefully, that works after you've enabled
90:57 - those three things. And now we can get to
hooking this up so that it sends an email
91:03 - when we press the button. So let's continue
with this our query, well, let's use the Gmail
91:09 - query just made the from email, we're going
to do Ania at free, code camp.org. The to
91:21 - email, I'm just going to hard code this for
now to Kubo ania@gmail.com. And then the subject
91:30 - is going to be your refund has gone through.
And then I'm just going to get the whole text
91:38 - area one. So text area, one dot value. Okay,
and let's save this. And now let's run it.
91:50 - And if I look in my email, you will see I
got an email saying My Refund has gone through,
91:56 - okay, from Ania at Freako camp.com. So this
is looking good, I'm really happy with how
92:02 - this is looking so far. Let's carry on. Of
course, we can also have an input for the
92:10 - email that is completely up to you. In fact,
I would recommend it. So just go ahead and
92:15 - just drag an input tag. So for example, once
again, I would do so like this, let's just
92:22 - go ahead and put you know, email address that
we want to send this to just drag it out like
92:27 - so. And let's put the label as email address.
And this just means that I'm going to get
92:38 - text input 12 This time, text input 12 dot
value. Okay, so whatever email we put in here,
92:54 - that's the email that it will be sent to.
Great. So we're sending an email, we're making
93:00 - a refund, let's just hook up this button because
we want this to trigger the query for yes,
93:07 - indeed, Gmail, but also posting a refund fast.
And let's just make sure that this is renamed
93:14 - to send email just for readability. So we
are triggering that. But we're also going
93:24 - to trigger the Send Email query to so two
things are being triggered. So this is looking
93:30 - great. I'm really happy with this, I'm going
to do one last thing before moving on to use
93:35 - the postgres approach. And that is just show
you how to use mapping in order to use the
93:40 - two databases. So for example, if I want to
use the employee ID to show me the employee
93:47 - name. Okay, so I'm going to get the three
I'm going to look in here and I'm going to
93:52 - get the name I'm going to show you how to
do this now. So let's go ahead and just create
93:57 - an overview of an order. So I'm going to drag
this in here like so. And let's call this
94:06 - of view of order number. And I'm just going
to put in the order number. So it's going
94:20 - to be the selected row this time. So I'm just
going to go into table one selected row data,
94:30 - order d. Making sure number is here, just
get rid of that. So we're going to show the
94:40 - order number. And once again, I'm just going
to drive through some explain a text explain
94:45 - to the user what is happening here. Select
row from sales or Does for over view. Okay,
95:06 - so that's sort of explaining what's happening.
And now once again, I'm actually going to
95:09 - get some text here. And this is going to have
the customer name. Let's also do it for the
95:20 - ship address. Let's also have the employee
name. And then one last thing I'm going to
95:37 - do is just use this little cool thing. So
if I just go down here, there's so many things
95:46 - you can use, of course, I'm going to use a
timeline. So I'm going to use a timeline to
95:51 - display essentially the order details and
how far it's gone, and so on. So I'm just
95:56 - going to drag that in here, like so. And great.
So these can be a little bit smaller. In fact,
96:04 - I'm going to shrink them down a little bit.
There we go. And now I'm going to use the
96:13 - text component again, and just put it in here.
Because what I want to do is essentially look
96:20 - in the table. And instead of having the customer
as an ID, I want to show the name by looking
96:28 - in here, finding the customer ID and returning
back the name. Okay, so I could use it easily,
96:34 - all I'm going to do is just delete all of
this. And this time, I am going to get table,
96:42 - the customer table. So this is table. Two.
So let's get table to, let's get the data
96:57 - from it. And I'm going to pause through the
table once selected. Row data, Cust ID. Okay,
97:09 - so I'm just passing that through, I need to
make sure that this is an integer, so I'm
97:20 - gonna wrap it and pass int to make sure is,
and I'm actually just going to minus one from
97:27 - it. So that's what I'm passing through and
passing through the index. And I'm getting
97:32 - back the contact name. Okay, because I'm going
in here I'm looking in here, I'm passing through
97:39 - the index, and I'm returning the contacts
name. And the index is whatever this number
97:47 - is minus one. Okay. So that is how you would
do that. That is how you would essentially
97:54 - join data from two different tables. Let's
do the same for the employee name this time.
98:00 - So just down here, it's essentially all the
same thing. However, this time, I'm going
98:07 - to look in Table three, I believe it's table
three, let's have a look, is this table. This
98:16 - is table five, I can use Table five, or I
can use table four, it's completely up to
98:23 - me, let's go ahead and use table four, why
not? So let's look in Table four. And this
98:29 - time, let's get back the first name because
contact name doesn't exist. So first name.
98:37 - And I'm going to also get the making sure
there's not a custom ID, but this time, we're
98:42 - going to pass through the employer ID. So
we're getting the first name. And I'm gonna
98:45 - copy all this because I also want to get the
second name. So there we go. First Name and
98:55 - Last Name. So this is looking good, we can
show that that's a space and wonderful. So
99:04 - that again, is how you would get data from
two different tables. And the last thing we'll
99:08 - do is just show the shipping address. This
is actually really easy because all I'm going
99:13 - to do is go look in table one, which is the
main table at selected row. Data ship address,
99:25 - okay, because I'm looking table one, which
is this table and just getting the ship address.
99:31 - So here's a nice little overview for us. And
of course, the orders. Well, this is again,
99:37 - easy because I am simply going to get rid
of these. I'm going to use the curly braces
99:48 - to go into table one. So the main table selected
row, data order date. So we've got the order
99:59 - date. The next thing we need to do is I'm
going to change this to be order created as
100:06 - well. Order created. And then let's have order
required by. And then the final one will be
100:16 - order shipped or shipped date, it's up to
you. So, shipped date just so people can see
100:22 - the status of an order. So this required why
so that should be required dates. And this
100:34 - should be shipped date. Great. So now whatever
order we select, this will all update. Okay,
100:43 - so as you will see here, that's been updated.
Let's click this one. As you will see here,
100:48 - this is customer ID 34. And this is employee
four. If we click it, we will see that customer
100:54 - ID 34 is shy Colin and the employee is yell
polet. Let's go ahead and click another one.
101:00 - Let's do this one. Yeah, tech gelita. And
Soufan buck is the employee. Okay, and of
101:08 - course, these are updating to. So wonderful,
this is looking so so good, just a few final
101:16 - pieces of styling, and then we are ready to
move on. So first off, perhaps let's make
101:21 - this a tiny bit bigger. So I'm just going
to use some markup to do this and put three
101:26 - hashes here, like so. And I will immediately
turn a lot bigger like that. And then perhaps
101:32 - us also have another one here. And I'm not
sure what should we should call this perhaps
101:38 - is call this, let's just call it overview.
That is essentially what this is over there.
101:50 - Sure to spell it correctly. And then here,
let's also have, let's perhaps take out sales
101:59 - orders in here, because I think it's a little
bit obvious, I'm going to move this up a little
102:03 - bit. So move up the button. Let's move this
down a few smudges. Let's also put this in
102:15 - line with the other thing. And this let's
call this sales order. My man meant, okay,
102:31 - so I think that's looking a lot more obvious
as to what that is. And then let's also make
102:35 - a little header. So here we go, I'm just gonna
select the header and make the background
102:43 - color. Let's make this blue just to keep everything
sort of the same color. And now let's also
102:49 - put in some text. So I'm just going to drag
this over into here. And once again, let's
102:54 - just use this markup, Sergeant for US store,
just like so. And then perhaps this will support
103:07 - e commerce. CRM. Okay, so just making it super
clear what this is, you can of course, ecommerce
103:18 - CRM, you can do so much styling in here, it's
honestly completely up to you, I am just going
103:25 - to do the bare minimum. But there's literally
hours and hours of styling that you can do
103:31 - to this, perhaps this actually made this one
line, I don't think it should be too. So there
103:35 - we go. Just like so, we can also add a profile.
So depending on who's logged in, they will
103:44 - have a different profile here. So I'm going
to go ahead and choose an avatar and just
103:51 - drag that in. So there I am. Okay, so and
that will be for whoever the user is, we can
103:59 - also have various other things. So if you
do choose to build this out even farther,
104:05 - we can also have a burger menu, meaning that
if you want to add different pages, or if
104:12 - you know, you're going to start moving things
out, for example, if you want the refund page
104:16 - to be on its own page, you can also have a
navigation bar here, which will show you different
104:21 - menu items. And that will take you to a nother
page. So again, like you could have the refund
104:27 - page on its separate page if you want that
is an option for you, too. So there we go.
104:34 - I hope you've enjoyed this. Everything is
now connected, everything is working. We can
104:40 - issue refunds. We can send emails, we can
add new data to this table. If it doesn't
104:47 - exist already on our spreadsheet. For example,
perhaps you want to put any manual order that
104:51 - wasn't taken online. You can sift through
customers using the filter tools. You can
104:57 - look through all your orders, you can look
at team members You can look at demographics,
105:01 - you can have an overview of how many orders
are shipped, how many orders, you've sold
105:05 - it for price, literally pretty much anything
you could want. Okay, so this is done for
105:11 - part one. Hopefully you've enjoyed this section,
if you want to learn how to use Postgres with
105:18 - this database that is coming up next. Okay,
now it's part two, in which we switch our
105:26 - database to be a Postgres database. Okay,
so to do this, I'm actually just going to
105:31 - imitate a Postgres database by putting in
some data in here using the Manage Database
105:39 - approach. So all I'm going to do is simply
get all of this data that we see right here.
105:43 - So as you can see, I've already copied it,
it is under database samples, Postgres SQL
105:51 - Northwind, dot SQL, make sure you are in the
postgres SQL section, and just copy all of
105:58 - this. Or if you want, you can literally just
get the file as I have here. And then in this
106:04 - file, before we get to switching this out,
so as you can see, here, we are creating a
106:09 - database, we are then creating tables, so
category, region, territory, and of course,
106:15 - sales order. So these are all the tables that
we see here. We are essentially creating the
106:22 - tables here and then importing the data. But
as you know, we also need to create another
106:28 - column. And that is with the charge ID, this
is your charge ID, this is the charge ID that
106:34 - you should get from your stripe dashboard,
as you should remember, from before, so if
106:40 - you go back to your stripe dashboard, under
payments, this is the 20 pound payment that
106:47 - we made by creating payment here in the test
data section. And all you need to do is get
106:53 - the charge ID. So you will see the charge
ID here. It starts with ch. So get that and
107:00 - we are going to create another column and
a table and input the charge ID. So we're
107:06 - going to do so in here, let's search for the
sales order table. So here we are creating
107:11 - the table and just after ship country, I'm
just going to add charge ID. Okay, and then
107:19 - in here, well, sure, let's just make it the
same as the customer ID. So just put in that,
107:27 - like, so. Great. So we've done that. And now
let's actually go to inputting the data. So
107:33 - here, you will see we are inserting the data,
we of course need to add a another field in
107:38 - here. So what I'm actually going to do is
just find anything that looks like this, and
107:43 - then replace it with ship country, but then
also add charge ID. Okay, so let's go ahead
107:52 - and replace all of those. So that is now added,
I don't think we use ship country anywhere
107:58 - else apart from in this sales order, which
is why I thought it was safe to do this. We
108:05 - indeed don't, it seems to be only in this
section. And of course, we also need to input
108:09 - the charge ID. So this is going to take a
little bit longer, because we can't use the
108:15 - same approach. There's different data being
added into here all times. So I essentially
108:21 - need to make a comma, and then just paste
the charge ID. So let's get this charge ID
108:33 - into here, like so. So there really like I
said, isn't an easy way to do this. Let's
108:38 - copy this, because I'm just gonna, maybe if
we select everything in here, that is a parenthesis
108:44 - with a semicolon, then we can essentially
input the charge ID before this. So I'm just
108:54 - going to copy all of these, this will take
a while. So just bear with me. This is not
108:59 - an easy process. But we have to do it in order
to get our data to look exactly the same as
109:04 - it does on your Google spreadsheet. So this
is great. Of course, all this data that was
109:08 - given to us, it's important to learn how to
start working with huge datasets like this,
109:13 - especially when you go on to becoming a software
developer, because this is likely the amount
109:19 - of data you will work with in a small startup
for example, or a bigger startup, whatever
109:25 - you are thinking to join. Okay, so we are
nearly that at the bottom of the sales orders
109:32 - that we are inserting. And now all I'm going
to do is just delete like a comma. And then
109:39 - I am going to paste it needs to do that. I'm
just going to paste the charge as a string
109:48 - like so. And then I'm also gonna just shut
that off like this. So I think this is looking
109:57 - okay, hold on. We seem to have messed something
up here. So we've got the postal code, we
110:05 - then have the ship country. And then we have
the charge ID. Great. So I am happy with this.
110:16 - Let's say this. And now I'm literally going
to get all of this data again. So copy all
110:21 - of it, everything that we have just altered.
So once again, we have added another column
110:27 - to the sales order table. And we have just
inserted the charge IDs into the table, too.
110:36 - So now Yes, I am just going to copy all of
this, and then go here. And let's create a
110:43 - new query. So resource query, and this time,
I'm going to choose to use the managed database,
110:50 - so we can essentially just insert it all into
here. So I'm going to paste everything that
110:56 - we copied, this might slow down your computer,
so just let it do its thing, because we are
111:00 - going to insert data into the Manage Database.
Okay, so just go ahead and click Save, and
111:08 - just wait for that to do its thing. Okay.
And once that is done, let's go ahead and
111:13 - rename this, I'm going to rename this to add
data. That seems to be an error. So let's
111:19 - just go ahead and delete the first lines.
Okay, so just delete this line. And just click
111:29 - save. We made the character type too long.
So where we create the sales order, let's
111:36 - just find that again, we're going to increase
this VAR char, we can make it 14. So make
111:44 - sure that we are giving it enough space. And
click Save. Great. So that is how we add data
111:54 - to our managed database. Now let's use it
because at the moment, we essentially have
111:59 - all this data, but that includes all the tables.
So these right here, I just want to get one
112:04 - table. And that's the sales orders in order
so that we can replace it. So we can use the
112:10 - postgres database on the main table right
here. So let's go ahead and create a new resource
112:16 - here. So resource query, and make sure that
is on the Manage Database. And I'm just going
112:24 - to select all, because that's how you'd get
all from sales order. Okay, so just like we
112:33 - wrote it in here, Sales Order has to be exactly
the same as sales order in here. And then
112:41 - let's click Preview. And there we go, we are
getting the table along with a charge ID that
112:48 - we have just added. Let's go ahead and rename
this to something. So I'm going to save this.
112:53 - And let's save this get sales order. Data,
Postgres SQL, so that we know that it's different
113:03 - to the other get data query. So there we go.
That's what I've saved as. And now I can simply
113:09 - get this table and replace this with this
query. Okay, so now we are using the postgres
113:18 - data instead of the spreadsheet data. So that
was super easy. We go, let's carry on. So
113:27 - now let's get the customer data. So again,
I'm just going to make a new query. And this
113:34 - time, let's call this 
get customer data, Postgres SQL. And again,
113:52 - we're just going to do select all from this
time, we're going to go from the customer
114:01 - table. So just like so save and run. And this
time, I'm just going to replace the customers.
114:08 - So I'm going to go in here, select this table,
get customer data, PG SQL making sure that
114:23 - it's felt exactly the same. So let's just
go ahead and do this for the other tables.
114:27 - Some of this will be broken because, of course,
we are not using this anymore, but we will
114:32 - fix that in a bit. Let's just make sure we
do all of these first. Next we need to get
114:36 - the order details. So again, new resource
query. Let's call this get order. Details,
114:47 - PG SQL. And this time, I'm going to do select
all from Order Detail. Okay, and save and
115:06 - run. So this is all looking good. Let's go
ahead and replace this with get Order Detail
115:15 - peih Gee e g SQL same for in here get sales
order data, P G SQL. However, this time, we
115:38 - need to go into the data. And we actually
need to get into the Shipped date, okay, and
115:47 - then filter by order, or you can filter by
ship date, you can of course, rename this
115:52 - to whatever you wish. So perhaps it should
do ship date. So for each item that exists,
116:00 - let's call it a shipping date. Okay, so there
we go. And then I'm just going to get the
116:07 - sales order data data. This time, I'm going
to go by order ID length. This is just because
116:15 - our tables are a bit different. Now, if we
go into here, I will show you this. So all
116:20 - I would do is simply go into here and find
the query that I am making. So for example,
116:26 - that sales order data, once again, here's
our data, but it's now an object not an array,
116:31 - I will then have to go into the Shipped address,
which is an array and then filter out the
116:39 - Shipped date. Okay, so that is the Shipped
address where the ship date ship date. And
116:46 - I will just filter out by these. So it was
just a little bit of a different structure
116:50 - that you have to be aware of. But you can
also have a look in here, if you ever get
116:56 - stuck. So great. And this time again, we are
not filtering out by if it doesn't have an
117:05 - empty string, we're just going to go by No.
Okay, wonderful. And same for this one here.
117:13 - So this progress circle, we're going to get
the order details. Postgres SQL data will
117:25 - want to go into the discount this time. And
then we're going to filter by the discount
117:34 - itself. So discount. Discount. And if it does
not equals 0.00, actually, we should do, then
117:48 - we're going to get the data order ID length.
So there we go. Order it. And there we go.
118:00 - So that is now back to normal. This is all
looking good. These should be okay, because
118:07 - we are working by table on some of these,
so that's fine. However, this one again, this
118:13 - should be updated. So get customer order data,
Postgres SQL data. And this time, we need
118:23 - to get by the customer ID, because that is
what we want. We all know exactly how many
118:28 - customers and once again for this, so get
sales order data, Postgres SQL data, and let's
118:35 - again, do it by order it. Okay, wonderful.
So I think this should be nearly it's just
118:45 - a few more to go. Let's go ahead and update
these right here. So again, get sales order
118:50 - data, Postgres SQL. And this time, I can actually
just select the customer ID here and hide
119:00 - the order. Making sure this is also by employee
ID. So that is now back to normal. And this
119:08 - one, well, we need to get the employee data.
So let's go ahead and do that. Let's make
119:11 - a new query. And let's call this get employee
data, Postgres SQL again. And this time, we're
119:26 - going to do select all from employ. He just
like so and save and run. And then once again,
119:39 - it's just a case of replacing this. So get
employee data, P G SQL. Great and the same
119:54 - for here. So I'm just going to add PG SQL.
And same for the demographic. So customer
120:09 - data, PG SQL. This one however, we also need
to do some additional things. So let's go
120:17 - ahead and just make sure that this is by country.
So then we will go to country and customer
120:27 - ID. So wonderful. And like I said, these are
the last things we need to do. So in this
120:36 - one, well, essentially, we just need to get
the, we don't need to get the contact name
120:41 - anymore. So we just need to do that, because
we are filtering by contact name instead.
120:48 - So there we go. And just do the same for here.
So again, we are going to the data. And then
120:53 - we are going into the first name array and
just getting the value. So we don't need to
120:59 - go into any objects and the same for here.
Last name. And then we can get rid of this
121:06 - like so. Okay, we have one last thing to do,
in fact, two more things, because we also
121:13 - need to delete data. So I'm going to show
you how to do that, again, we're going to
121:19 - make a new query. And this time, I'm going
to delete a sales row. Again, I'm just going
121:26 - to add PG SQL. So it's clear how we're going
to do this. So this is not get this is delete,
121:32 - I'm going to do a delete a sales row. And
this time, I'm going to write delete, from
121:41 - Sales Order tables. So let's get the sales
order table where order ID equals, and then
121:52 - I'm going to get the main table. So table
one selected row. Data order ID. So this is
122:03 - how you would essentially delete a row a complete
row. Okay, so I'm gonna save that. And now
122:12 - I'm going to get this query because we're
gonna have to replace it in the actions. So
122:17 - where we have actions here, don't forget that
we do need to change this. So let's trigger
122:23 - a different query now. And it's going to be
delete sales row. So that is updated. And
122:28 - one last thing we need to do is the Add Row.
What do we seem to have done something wrong
122:34 - in here? No, that's the other one. So delete
sales row is now added to here to the action,
122:44 - let's just double check it is the correct
one. So delete, and yes, delete cells row
122:52 - is the one that's going to run. And then also,
let's make sure to write a query to add data.
123:01 - So once again, a resource query. And let's
call this ad, sales, row, Postgres SQL. And
123:14 - now, to add a sales row, well, essentially,
we are going to have to So I already have
123:21 - pre written this for us, I'm just going to
show you this. This is how we would do this.
123:28 - So here we go. We are essentially just copying
how we did it when we inserted sales rose
123:34 - into here. So sales order, like so we have
simply copied this. And instead of inputting
123:46 - the hard coded data, we are using data from
our macro. So let's just double check this
123:54 - is all right, as something seems to not be
liking this the order ID, well that is text
123:59 - input one value, so let's change that the
customer ID that is going to be text input
124:05 - two. So let's change that text input to just
like so. The employee id is going to be text
124:14 - inputs three, text, input, three. The order
date is date time two. So let's change that,
124:29 - which makes this date time one for the required
date. The ship date, well that is just date
124:36 - from what I remember date one and then the
shipper ID perhaps let's make this a little
124:44 - bit smaller shipper ID is text input 11. So
let's change that. The fright is text input
124:54 - nine. The ship name is text input 10 And then
the last ones is ship address. So once again,
125:10 - I'm just gonna make the smallest we can all
see it ship address is text input to 
125:23 - ship city text input six ship region is text
input eight postal code is a four and then
125:50 - we just have ship country which is a five.
And of course, the charge ID, which we're
126:03 - gonna hard code as this. That's right, so
let's just go ahead and delete all this, I'm
126:09 - just going to put an empty string, like so.
And save that. Okay, so there's our ad sales
126:16 - row, which means now, that's makes sure that
on this submit, we make the right query, so
126:23 - submits, I want to run the query ad sales
order, PG SQL instead. And great. So let's
126:39 - run that. and wonderful. So cool. This is
looking good. I believe that's it, I believe
126:51 - we have now replaced everything that we need.
I hope you've enjoyed this tutorial, please
126:57 - do let me know if there's anything that you
would want me to add to this, I will be more
127:02 - than happy to do that. Hopefully, you've learned
a lot in this. And you can really take this
127:07 - and make things your own. One last thing that
we can do is of course filter as well. So
127:12 - I'm actually going to show you how to do that
super quick. So this time, I'm actually just
127:16 - going to make a text input. And this is how
we're going to query data from the sales order.
127:23 - So for example, if we have this here, and
we can such, I'm just gonna write a super
127:27 - simple query for this. So let's go ahead and
do that now. So I'm just gonna click here,
127:35 - resource query. Let's call this search, sales
orders, PG SQL. And in here, I'm going to
127:48 - select all 
from sales order, where now we're going to
128:01 - get the text input 13. So text input 13 dot
value, or order ID equals and then we're going
128:18 - to get just put parse int and pass through
the text input 13. So text, input that in
128:34 - dot value, so this should be where it doesn't.
So just put a bang there. Okay, so now I should
128:45 - be able to filter let's just save this. And
that should just run every time we change
128:50 - the value in here. So if I just want to search
by order, I can do so like that. And then
128:56 - I'll just show me the search for data in here.
Now to update this in here. Well, we're gonna
129:02 - have to change this up. So let's just switch
this out to searched search sales orders instead.
129:12 - So get sales orders, such sales orders. Just
like that. Okay, so now it's hooked up, and
129:22 - I can make the table listen out to search
for any odor that I want. Wonderful. So hopefully
129:35 - that makes sense. I hope you've enjoyed this
tutorial. Again, if there's anything I've
129:41 - missed, please do let me know this has been
a long one but I hope you've learned a lot
129:45 - and I can't wait to see you in some future
tutorials to thanks so much again, and I'll
129:51 - see you soon.