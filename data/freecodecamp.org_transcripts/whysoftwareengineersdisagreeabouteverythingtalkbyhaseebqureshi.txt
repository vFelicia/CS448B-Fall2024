00:00 - today i'll be giving a talk on why
00:02 - software engineers disagree about
00:05 - everything okay
00:06 - uh my name is haseeb qureshi i'm a
00:08 - software engineer at airbnb i work on
00:10 - the risk team i'll be talking a lot more
00:12 - about that and a lot more about kind of
00:14 - my own history and the different uh
00:16 - different things that i've done in my
00:17 - past uh because that really informs a
00:19 - lot of what this talk is about uh i
00:22 - don't know that i'll totally answer the
00:23 - question of why software engineers
00:24 - disagree about everything but i think uh
00:27 - this talk is gonna be kind of an
00:28 - exploration of this question from a
00:30 - number of different angles and another
00:32 - things can happen in this talk is i'm
00:34 - going to disagree
00:35 - pretty strongly with dhh's keynote
00:38 - so if
00:40 - so that might be interesting
00:42 - but we'll
00:43 - hopefully i'll
00:44 - at the very least if not convince you of
00:46 - what i'm saying uh you know maybe get
00:48 - you thinking about some things
00:51 - so
00:52 - uh this talk in large part is going to
00:54 - be about philosophy
00:56 - so i know uh you know it's a railsconf
00:58 - usually people come up here and they
00:59 - talk about controllers or i guess
01:01 - someone else is talking about sorting
01:02 - and augmented reality uh i'm not gonna
01:04 - be offended if you get up right now and
01:06 - want to go to
01:07 - another talk that's totally cool but uh
01:09 - we are gonna go way into the weeds today
01:12 - because that's that's what i'm all about
01:14 - so uh specifically
01:16 - i want to talk about the field of
01:18 - philosophy known as epistemology
01:21 - and epistemology the easiest way to
01:23 - define epistemology is
01:25 - epistemology is the nature of knowledge
01:28 - of justification and of the rationality
01:31 - of belief
01:32 - uh so this actually this diagram here is
01:34 - uh of uh phrenology which is this old
01:36 - science of you know trying to figure out
01:38 - what parts of the brain responsible for
01:39 - what
01:40 - which is a very old and ancient version
01:42 - of epistemology which we've now
01:44 - thankfully displaced
01:45 - but
01:46 - essentially in epistemology are the two
01:48 - questions
01:50 - how does anyone know anything
01:52 - and how do they know that they know it
01:55 - uh i mean these two questions are kind
01:58 - of navel-gazy but that's that's fine um
02:00 - so
02:02 - let me tell you about me
02:03 - so i studied english in philosophy in
02:05 - school and i before i ever came into the
02:08 - tech world i used to be a professional
02:09 - poker player and i did that for about
02:11 - five years uh so you know i kind of took
02:13 - a very different path into programming
02:15 - than most people uh and then i worked as
02:17 - a programming instructor i taught
02:18 - programming at a coding bootcamp
02:20 - and for the last a little bit over a
02:22 - year i've been working as an engineer uh
02:25 - on the risk team at airbnb uh basically
02:27 - fighting fraud
02:29 - and so because of this i've kind of
02:31 - you know snaked my way through many
02:33 - different subcultures i've been
02:34 - something of a of a chameleon in that
02:37 - i've learned the different norms and the
02:39 - different beliefs and the different
02:40 - knowledge systems that many different
02:42 - worlds uh have and try to assert on you
02:45 - if you become a part of that world and
02:47 - one thing that i've noticed and you
02:48 - can't help but notice the more worlds
02:50 - you step in and out of
02:52 - is that knowledge is deeply cultural
02:56 - so in the world of programming you know
02:58 - the kind of things you might hear people
03:00 - tell you when you come into this world
03:02 - they might tell you that full stack
03:04 - javascript is the future they know this
03:07 - for sure uh they'll tell you that
03:09 - everyone should know c if you don't know
03:10 - c
03:11 - what are you doing go out there crack
03:13 - open a book and learn some c
03:14 - they'll tell you rust is the best
03:16 - language for systems programming they'll
03:18 - tell you that relational databases don't
03:20 - scale
03:21 - they'll tell you that tdd is a fantasy
03:23 - and nobody serious tries to do it
03:25 - anymore it's it's not it's not practical
03:30 - so now all these are interesting
03:31 - questions and they're all things that
03:32 - people disagree on obviously uh but
03:35 - they're people they're things that
03:36 - people hold with very very strong
03:37 - conviction that this is clearly and just
03:40 - irrefutably true
03:42 - now i'm not interested in convincing you
03:44 - of any of these claims
03:46 - each of these could probably be great
03:47 - talks
03:48 - themselves
03:50 - what i'm interested in is why
03:52 - we disagree about them
03:54 - why isn't that we all converge on an
03:56 - answer
03:57 - to these questions
03:59 - now it's funny because when i was in the
04:00 - poker world i remembered this this was
04:02 - very familiar to me when i was learning
04:04 - how to be a poker player because
04:06 - in the poker world people will tell you
04:07 - things like
04:08 - no limit is dying you have to learn
04:09 - mixed games or they would tell you
04:11 - everybody needs to use a hub or they
04:13 - would say only fish play loose passive
04:15 - styles they would say gto is a fantasy
04:17 - nobody actually plays like that
04:19 - and there's a wonderful analogy between
04:21 - these these two worlds not just in that
04:22 - people argue a lot and then people are
04:24 - maybe kind of whiny and excessive
04:26 - but that you know they're they're all
04:28 - these things that people fundamentally
04:30 - disagree on and each side of them holds
04:32 - tremendous conviction that their side is
04:34 - clearly and obviously correct
04:37 - um
04:38 - and so when most people hear stuff like
04:39 - this when they hear someone say hey
04:41 - everybody should know c and if you don't
04:42 - know c you're not a real programmer
04:45 - their natural reaction is oh god is that
04:47 - true
04:49 - if that's true what should i do about it
04:51 - uh but i for me having having gone
04:54 - through this song and dance so many
04:55 - times my reaction is
04:58 - why do they think they know that
05:00 - and why what is it that implanted so
05:03 - much confidence in them so much
05:04 - conviction that the thing they're saying
05:07 - is actually true and universally true
05:10 - and that's very interesting to me it's
05:11 - almost like i'm asking uh i tend to ask
05:13 - a more evolutionary question than a
05:15 - question about the world as it is right
05:17 - now
05:18 - you know the thing that's kind of weird
05:20 - about programming
05:21 - in particular is that
05:23 - nobody agrees
05:25 - you know there's so many things that
05:26 - people disagree on they disagree about
05:28 - functional programming object oriented
05:29 - programming tdd old you know robust
05:32 - proven frameworks shiny new ones that
05:34 - solve new problems in different ways
05:35 - serverless event driven blah blah blah
05:38 - right you guys you guys know all this uh
05:40 - nobody agrees why
05:42 - that's really weird now you might think
05:44 - it's obvious that people don't agree
05:46 - that's that's an understandable reaction
05:48 - you might say like well you know
05:50 - disagreement is a normal part of a
05:52 - society and like you know the way that
05:54 - we uh you know this this divergence is a
05:57 - source of discourse and that's how we
05:59 - end up having a healthy society so you
06:01 - might think that's obvious so of course
06:02 - people shouldn't agree
06:04 - um
06:05 - i think it's weird
06:07 - i think it's weird that people don't
06:08 - agree
06:10 - and
06:11 - i want to develop in you an intuition
06:14 - to also believe this is weird that
06:16 - people don't agree
06:18 - because in a way it makes more sense for
06:19 - people to agree
06:21 - than for them to disagree
06:24 - another way of putting what i'm saying
06:26 - is that systems in general
06:28 - tend to converge
06:30 - when you see a system you should assume
06:32 - that over time it's going to converge on
06:34 - what's optimal what's the sort of the
06:36 - optimal state for that system
06:38 - uh let me give you an example
06:41 - so i'm going to give you an example
06:43 - related to poker but you don't need to
06:44 - know anything about poker in order to
06:45 - understand this i can explain it in a
06:47 - couple sentences
06:48 - so in poker
06:50 - there's a strategy called set mining
06:53 - okay and set mining is very simple so in
06:55 - texas hold them you get two cards and if
06:57 - you want to set mine what you do is you
06:59 - wait for two cards that make a pair so
07:00 - let's say you get delta pair of threes
07:02 - then what you do is you wait to see if
07:04 - you make three of a kind if you make
07:06 - three of a kind you bet it really
07:07 - aggressively and if you don't you just
07:08 - fold
07:09 - that's set mining super super simple
07:12 - um so set mining was a strategy that was
07:15 - pretty simple and pretty stupid uh
07:17 - almost anybody could do it
07:19 - and it worked
07:21 - it worked really really unreasonably
07:23 - well given how simple the strategy was
07:26 - uh and so pretty soon what you would see
07:28 - in the world of online poker is that
07:30 - pretty soon once people started talking
07:31 - about this almost everybody started set
07:34 - mining at low to mid stakes full ring
07:35 - games the strategy just kind of took
07:37 - over like wildfire
07:39 - and
07:40 - what you could say is that the game
07:41 - converged on set mining everybody saw
07:44 - that set mining was the high ground
07:46 - and they all moved in that direction
07:50 - and uh so this is this is kind of one of
07:52 - the features that happened to poker uh
07:54 - after internet poker took off so
07:55 - internet poker took off really around
07:56 - 2004 2005 uh maybe a little bit before
08:00 - that as well and if you think about it
08:01 - before internet poker ever existed uh
08:04 - there was live poker right but playing
08:05 - poker in a brick and mortar casino and
08:07 - live poker was fundamentally really
08:09 - different than online poker in ways that
08:11 - people didn't really predict before it
08:12 - happened
08:14 - so you can imagine uh live poker you
08:16 - know let's say in the 80s and 90s you
08:17 - know uh there are some people playing
08:19 - poker out in phoenix maybe there are
08:20 - people playing poker in vegas that
08:22 - people play poker in dallas people
08:23 - playing poker in london um and these
08:25 - different groups of poker players
08:27 - weren't really communicating with each
08:28 - other
08:29 - you know ideas that were germinating in
08:31 - london weren't you know going over the
08:32 - pond and uh showing up in card rooms in
08:35 - dallas right people were kind of
08:37 - isolated to their little groups and they
08:38 - were just playing poker and figuring
08:39 - things out as they went
08:41 - but with the advent of online poker
08:43 - and the communication that it enabled
08:45 - for a lot of people
08:47 - uh
08:48 - sorry there was like a flyer running
08:50 - around
08:51 - with the advent of that communication
08:53 - what happened was it allowed the system
08:56 - to converge
08:57 - where suddenly somebody has an idea for
08:59 - a strategy somewhere in you know dallas
09:01 - or new hampshire or whatever and
09:03 - suddenly they can share it and everybody
09:05 - can learn about this strategy very very
09:07 - quickly uh and so what this meant was
09:10 - that the the state of poker strategy for
09:12 - a long time it was pretty static the way
09:14 - that people played in the 40s and 50s
09:16 - was not that different from the way
09:17 - people played in the 80s and 90s you
09:19 - know information just wasn't able to
09:21 - evolve that effectively but with the
09:22 - advent of online poker suddenly if you
09:24 - if you look at the curve of the
09:26 - complexity of poker strategy
09:28 - it just it just takes off right after
09:31 - 2003 when online poker comes to town
09:33 - uh and so
09:35 - right here uh is a graph
09:38 - uh that audio's not playing but that's
09:39 - fine he's saying look at this graph uh
09:41 - this is a joke
09:42 - uh that didn't play audio that's fine we
09:44 - can we're gonna roll with it um so this
09:46 - is actually a graph of uh this is
09:49 - actually just a graph that goes up into
09:50 - the right there's nothing to do with
09:51 - what i'm talking about but i thought it
09:52 - would give a sense legitimacy to the
09:54 - slides like oh this guy knows what he's
09:55 - talking about
09:57 - look at this graph um cool so
09:59 - the point is the point is
10:01 - online poker converged in a way that
10:03 - that live poker never did it was never
10:05 - able to um and this to me is
10:08 - it makes a lot of sense like of course
10:10 - online poker is going to converge right
10:12 - when you have these people able to
10:13 - communicate to see what each other is
10:14 - doing and move around in this terrain of
10:17 - course they're going to settle on what's
10:18 - optimal
10:20 - um and nature is full of convergent
10:22 - systems like this
10:24 - so
10:25 - let's say for example you're you're
10:26 - walking downtown and uh you you buy a
10:29 - loaf of bread
10:30 - maybe you're french i don't know uh and
10:32 - uh let's say you you eat half a loaf of
10:34 - bread and you toss the rest on the
10:35 - street well what happens is pretty soon
10:38 - a bunch of pigeons just it's not like
10:40 - they're all in one place standing over
10:42 - watching you throw the loaf of bread
10:43 - right but pretty soon one pigeon comes
10:45 - three pigeons come and then the a chorus
10:47 - of pigeons from
10:49 - presumably all over town just come in
10:51 - and start you know just just binging on
10:54 - the piece of bread that you've left uh
10:56 - and this this kind of makes sense right
10:58 - like the pigeons are able to very
10:59 - quickly come down to whatever's the
11:01 - optimal place for them to be they they
11:03 - eat as much food as they can and they
11:04 - disperse back to wherever was they came
11:07 - from maybe to the next best piece of
11:08 - food that they can find somewhere
11:10 - downtown
11:12 - um so the example of a convergent system
11:15 - so uh you know there's also uh this
11:17 - great ram scene album that actually i
11:19 - loved when i was a kid um
11:21 - it's not
11:22 - this is actually just cell membrane in
11:24 - german because that was the one i could
11:25 - find like 10 minutes ago uh but uh the
11:29 - the the uh cell membrane you guys might
11:31 - remember from high school chemistry you
11:32 - know there are water molecules on one
11:34 - side they permeate through this membrane
11:35 - and pretty soon uh you have the exact
11:37 - same pressure the exact same
11:39 - uh
11:40 - density of water molecules on each side
11:42 - of the membrane the system converges
11:44 - and you see the same sort of thing in
11:45 - stock markets a lot of natural
11:47 - phenomenon uh it seems like this sort of
11:50 - thing is everywhere
11:51 - so when i started working as a risk
11:53 - engineer at airbnb working in the fraud
11:55 - space
11:56 - naturally i started looking for
11:58 - convergence too because it just seems
12:00 - like one of those things that any any
12:02 - sufficiently uh
12:03 - complex system
12:05 - should eventually have some optimal
12:07 - state and it should find convergence so
12:10 - uh working in in the fraud industry is
12:13 - uh is its own little subculture its own
12:15 - little world uh and the subculture is
12:17 - not just the subculture of people
12:19 - working against fraud
12:21 - which is which is interesting but that
12:23 - wasn't really what fascinated me so much
12:25 - i mean it is very interesting but the
12:27 - really fascinating thing about fighting
12:28 - fraud
12:29 - is that you're actively fighting against
12:32 - a community of people
12:34 - you're actively fighting against a
12:35 - culture that's optimized to take you
12:37 - down
12:38 - and to basically exploit your defenses
12:40 - as effectively as they possibly can uh
12:42 - and so you know really there is actually
12:44 - a subculture that i can't see and don't
12:47 - have direct access to that's organizing
12:49 - and trying to attack all these you know
12:51 - major online companies uh and they're
12:53 - trying to make money and that's really
12:55 - interesting uh and so i wondered you
12:58 - know how do fraudsters
13:00 - figure out what to do
13:02 - i mean what they're what they're
13:03 - learning is pretty non-trivial right
13:05 - like they're learning how to how to
13:06 - script how to do you know sometimes
13:07 - cross-site requests forgery stuff xss
13:09 - whatever uh they come up with all these
13:12 - different ways to try to probe our
13:13 - defenses and attack us and ideally try
13:16 - to make some money
13:17 - how do they learn this and how do they
13:19 - communicate this to each other you know
13:21 - how does how does this knowledge spread
13:23 - in the world of fraud
13:25 - fundamentally the question i want to ask
13:27 - is is there convergence
13:29 - in fraud
13:31 - and this actually uh pretty soon after
13:33 - the new macbook pro replaced the escape
13:35 - cube we saw fraud go way up so that was
13:37 - uh
13:39 - one person after that that was all right
13:41 - there we go there we go a little just a
13:42 - little bit that's all i need in order to
13:43 - keep going uh cool
13:47 - uh awesome so i just want to run with
13:49 - you through a quick example of kind of
13:51 - what uh a standard fraud scheme looks
13:52 - like this is this is some site called
13:54 - chipmunk does anyone know what chipmunk
13:56 - is
13:57 - anyone familiar with this with this
13:58 - esteemed company great then we're gonna
14:00 -  on them that's great uh so chipmunk
14:02 - uh let's say they cut some corners they
14:04 - kind of implement a feature they don't
14:05 - really know uh exactly uh you know
14:08 - they're not really thinking about fraud
14:09 - when they implement this right like some
14:10 - product manager is like hey you know
14:12 - we've got the story we've got to get up
14:13 - the end of the week uh we're gonna all
14:14 - look good once we fill this thing out
14:16 - great engineers who work on this just
14:17 - push it out don't really think too much
14:18 - about it so this feature is essentially
14:21 - uh some micro deposit uh where
14:23 - essentially they verify that you own
14:25 - this account because you they deposit
14:27 - two random amounts you report them back
14:28 - right pretty standard for some financial
14:30 - institutions to do this sort of thing
14:32 - um so let's say that they don't
14:34 - implement rate limiting
14:37 - easy thing to overlook uh well you know
14:39 - they go to sleep that night feeling
14:40 - great that they've launched this new
14:41 - feature
14:42 - and pretty soon someone gets alerted uh
14:45 - you know let's say at 2am that night
14:47 - that uh
14:48 - somehow we've lost a hundred thousand
14:50 - dollars
14:51 - which really should not have happened
14:53 - and the only way you could lose that
14:54 - amount of money obviously is if
14:55 - fraudsters are at scale repeatedly
14:58 - hitting this api repeatedly uh micro
15:00 - depositing money to their account and
15:02 - then just keeping it
15:03 - and so people scramble you know people
15:05 - like oh my god i can't believe this is
15:06 - going on they go and they try to patch
15:07 - this hole implement some rate limiting
15:09 - do some rules maybe reverse whatever
15:10 - transactions they can
15:12 - this is a common type of attack that you
15:14 - know a very easy vector that if you're a
15:16 - site influence something like this uh a
15:18 - kind of attack you would be vulnerable
15:19 - to if you didn't implement rate limiting
15:22 - so
15:23 - let's say they get that under control
15:24 - that's fine
15:25 - now what happens is that once you patch
15:27 - that vulnerability of course the
15:28 - fraudsters disperse they don't keep
15:30 - hitting it maybe they maybe they try to
15:31 - verify that in fact it is patched they
15:33 - try a few ways around it doesn't work
15:35 - cool you've patched the vulnerability
15:36 - and the fraudsters disperse
15:38 - but kind of like the pigeons they don't
15:40 - just go randomly
15:41 - to different places and just kind of you
15:43 - know leave your platform what ends up
15:44 - happening is that they then go to the
15:47 - next best place
15:48 - to defraud you
15:50 - so what they'll do is they'll find okay
15:51 - that endpoint wasn't that good but
15:52 - there's another thing that we can do
15:53 - like this may be longer more complex or
15:55 - more expensive fraud scheme uh and we're
15:57 - gonna go do that and basically what you
15:59 - see is that the fraudsters head down to
16:01 - the next highest peaks
16:03 - in this terrain of fraud
16:05 - which you know this this totally makes
16:07 - sense this is uh this is convergent
16:09 - behavior right this is exactly what
16:11 - you'd see if the terrain suddenly
16:12 - changes peak became a valley and they
16:15 - would go towards the next high speed
16:17 - so this seems to me like convergent
16:19 - behavior it seems like fraudsters
16:20 - converge on what's optimal
16:23 - but the more that i thought about this
16:25 - the more i realized that this didn't
16:27 - totally make sense
16:29 - and the reason that this totally didn't
16:31 - make sense because i asked the question
16:34 - why are they defrauding us at all
16:37 - why are any fraudsters attacking
16:39 - chipmunk
16:41 - this might seem like a weird question
16:42 - right like of course they're doing it so
16:44 - that they can make money and that's what
16:45 - fosters are motivated by
16:47 - but if you think about it
16:48 - the
16:49 - the terrain of all the companies that
16:51 - they can defraud
16:52 - is huge
16:54 - there are many many many companies that
16:55 - are vulnerable to fraud and pretty much
16:57 - all of these companies experience fraud
16:58 - to one degree or another right they're
17:00 - all these different sites that you could
17:01 - attack if you so wanted um and so what
17:05 - you would what do you you know what you
17:07 - can say is that there's some topology to
17:09 - that fraud right there's some peaks and
17:11 - valleys there's some there's some sites
17:12 - that are really really lucrative to the
17:14 - fraud and other ones that you know are
17:15 - really not so much and they're not a
17:17 - good place to be spending your time if
17:18 - you're a fraudster
17:19 - and so you'd think that everybody would
17:21 - converge on the peaks
17:24 - what you think is that almost all the
17:25 - fraud would go towards the very most
17:27 - profitable most uh attackable
17:30 - websites but what you see instead
17:34 - is that fraud is just kind of dispersed
17:36 - everywhere there's just a sort of
17:37 - ambient level of fraud that if you start
17:40 - an e-commerce site chances are you're
17:42 - going to get some amount of fraud
17:44 - why
17:46 - this is weird
17:48 - this should strike you as weird
17:50 - why is it like those fraudsters just
17:52 - don't care about optimizing are they not
17:54 - trying to make the best use of their
17:56 - time is there something that they're
17:57 - misapprehending about the terrain like
17:58 - what's going on that we don't see this
18:01 - convergent behavior within fraud
18:04 - now you know it occurred to me that
18:06 - actually you see the same sort of thing
18:08 - in software you know even just looking
18:10 - at open source solutions there's so many
18:12 - different software packages and so many
18:14 - different open source solutions to many
18:16 - many different problems that are
18:17 - effectively you know trying to do the
18:19 - exact same thing
18:21 - why
18:23 - it seems like software
18:25 - doesn't converge either
18:27 - when you when you don't get this just
18:28 - one okay this is the best way to solve
18:30 - this problem and everybody converges on
18:32 - that solution uh what you see instead is
18:34 - many many many competing solutions
18:36 - uh and it's not really clear which one
18:38 - is supposed to win
18:40 - and when one does win it's actually
18:42 - really surprising you know like so you
18:44 - know react you could say kind of one
18:46 - front end uis and so far as you can say
18:47 - anyone won front end uis uh and we're
18:49 - genuinely amazed by that on some meta
18:51 - levels like holy someone won no one
18:54 - ever wins anything anymore but react
18:55 - just one front end uis you know and you
18:58 - know maybe maybe that kind of relaxes
18:59 - you because you're like oh hey you know
19:00 - i just as long as i learn react i'll
19:02 - just be employable forever and you know
19:04 - that's fine uh but i think this is this
19:08 - is somewhat counterintuitive that more
19:10 - things aren't like this
19:11 - why is this such a rare story that react
19:14 - wins or sequel wins or one particular
19:17 - way of solving a problem just is clearly
19:19 - the best and we all adopt it
19:22 - so
19:23 - you might have uh an obvious objection
19:25 - to this analysis
19:27 - which would be that well of course you
19:28 - know things aren't going to converge
19:30 - because software doesn't just solve one
19:32 - problem
19:34 - right
19:34 - uh the obvious answer is that there are
19:36 - actually multiple terrains so you know
19:38 - you could say that there's a terrain for
19:40 - crud apps and that looks different and
19:42 - there's a terrain for the payments back
19:44 - ends and then one for social networks
19:45 - and maybe the tools and the solutions
19:46 - that you use for these different apps
19:48 - are different and that's why you see
19:50 - this this you know uh these multifarious
19:53 - solutions to effectively the same
19:54 - problem
19:56 - um but i i don't think that's that's
19:58 - sufficient
19:59 - because even within a single terrain
20:02 - you don't see convergence you know even
20:04 - just looking at crud apps right cred
20:06 - apps are you know they're the majority
20:08 - of what people build the majority of web
20:10 - apps are just you know glorified cred
20:12 - apps maybe with like elasticsearch store
20:14 - on top and
20:15 - like
20:16 - because of the vast majority of what
20:18 - people build there's a vast majority of
20:19 - what people disagree on
20:21 - so it doesn't seem to me like that's
20:22 - satisfactory to explain why we don't see
20:25 - convergence
20:27 - and the thing is
20:28 - you should want convergence
20:30 - convergence is actually good
20:32 - because convergence means that we all
20:35 - see the underlying terrain we all
20:37 - understand it and therefore we all go
20:39 - and do the best thing in the world of
20:41 - software for the most part we're not
20:42 - actually competing with each other we're
20:44 - actually all kind of at least to some
20:46 - degree or another motivated by each
20:48 - other succeeding you know when someone
20:50 - invents a great open source solution
20:51 - actually everybody benefits from that
20:53 - and most software kind of works this way
20:56 - so
20:57 - the question i want to ask is
20:59 - why
21:00 - do these systems not converge
21:06 - i think there are four reasons
21:07 - and i'm going to go through each of them
21:10 - so the first reason why these systems
21:13 - don't necessarily converge
21:15 - is because the terrain
21:17 - is actually unstable
21:19 - the terrain is changing it's not just
21:21 - one configuration that you can just
21:24 - see something out in the distance decide
21:26 - okay that's a peak i'm going to go over
21:27 - there right the fact that the terrain is
21:30 - changing means that you're not really
21:32 - sure if you do uh go in this direction
21:34 - that by the time you get there the
21:36 - terrain isn't going to be different
21:37 - right it also means of course that your
21:39 - terrain is moving underneath you so by
21:41 - the time that you when you originally
21:43 - came into ruby on rails like wow this is
21:44 - the hottest newest shiniest web
21:46 - framework anyone has ever come up with
21:48 - and now it's 2017 and rails is not the
21:51 - shiniest newest coolest framework that
21:53 - anyone's ever come up with uh and so
21:55 - that terrain has changed underneath you
21:57 - and that makes it hard for people to
21:58 - actually converge when there's so much
22:00 - change going on uh there was this
22:02 - article that someone wrote on medium a
22:03 - little while back how it feels to learn
22:04 - javascript in 2016. um you know if you
22:07 - didn't read this article i'm sure you
22:08 - have an intuition of what this thing
22:10 - said right and
22:12 - we we see this becoming more and more uh
22:15 - i don't know if i want to say a problem
22:16 - but more and more of a characteristic of
22:18 - software that things are changing very
22:20 - rapidly and it might be that that
22:24 - pace of change is even increasing which
22:26 - wouldn't be wouldn't be that uh
22:28 - unreasonable to expect actually as
22:30 - technology grows more and more rapidly
22:33 - um and you see the same sort of thing in
22:34 - the world of fraud
22:36 - so say for example uh that you know
22:38 - facebook has some kind of hole some kind
22:40 - of uh things that fraudsters can attack
22:41 - let's say it becomes really easy to spam
22:43 - facebook and you know do some kind of
22:44 - referral quick fraud whatever whatever
22:46 - stuff um so maybe you know if you're a
22:48 - fraudster you're making 20 an hour
22:49 - defrauding facebook doing this well
22:52 - facebook goes in and they patch the hole
22:54 - and now you know instead of making
22:56 - twenty dollars an hour you can only make
22:57 - three dollars an hour
22:58 - um but in order for the fraudsters to
23:00 - disperse and find the next highest thing
23:02 - uh you know they
23:03 - they they might be just incentivized to
23:05 - say like hey i don't actually know how
23:06 - easy it's going to be to defraud
23:07 - anything else because that might get
23:09 - patched too and that might you know uh
23:11 - the terrain might just change out
23:12 - underneath me so you know what i'll just
23:13 - keep defrauding facebook for three
23:15 - dollars an hour uh that's fine like at
23:17 - least i know this is working during the
23:18 - time that i have it so maybe that's
23:20 - that's some part of the explanation why
23:22 - you don't see this optimizing across
23:25 - across the terrain
23:28 - so the second reason
23:29 - why i think you see a lack of
23:31 - convergence in some of these domains is
23:34 - because of high switching costs okay so
23:37 - uh let's say that this is the domain
23:39 - that uh let's say this is software this
23:40 - is the map of the software world uh and
23:43 - let's say that you live uh all the way
23:45 - on the bottom right and the bottom right
23:46 - let's say is railsland and you know you
23:48 - go and talk to some uh wide-eyed
23:50 - bushy-tailed developer who tells you you
23:52 - know what you you just need to learn
23:53 - haskell and if you learn haskell you
23:55 - know all these type errors and mill
23:57 - checks and that all that stuff is just
23:58 - going to go away and you're going to
23:59 - live in a land of just pure programming
24:02 - bliss nothing will ever go wrong your
24:03 - code will be way more performant you
24:05 - know you are just going to yeah whatever
24:07 - things are going to be great
24:08 - uh the problem with that of course is
24:10 - that for you to actually engage in that
24:12 - switch let's say even you see what this
24:14 - person tells you and you agree with them
24:16 - but this peak that they're pointing to
24:18 - is very very far away
24:20 - so in order for you to get there you're
24:22 - gonna have to go down
24:23 - into a valley traverse a really really
24:25 - long space until you can finally
24:27 - actually reap the fruits of what they
24:29 - were claiming was so great and who knows
24:30 - because the terrain is changing
24:33 - by the time you get there it might not
24:34 - even be a peak anymore something else
24:35 - might have become a peak or maybe the
24:36 - place where you were at could have
24:37 - become a peak who knows uh and so this
24:40 - this instability and this uncertainty
24:42 - makes people really unwilling to incur
24:44 - the risks of traversing the terrain and
24:46 - exploring
24:48 - and you see of course the same thing in
24:49 - fraud just like i just mentioned with
24:51 - the facebook example and this whole
24:53 - thing of course is exacerbated by
24:56 - specialization
24:57 - the more specialized you are the harder
25:00 - it's going to be for you to convince
25:01 - yourself to engage in those high
25:02 - switching costs right because really
25:04 - specialization is just basically you
25:06 - finding your way to some local maximum
25:09 - that's what specialization is it's
25:11 - climbing as high as you can onto a local
25:13 - maximum once you're there it just
25:15 - becomes really uncompelling to climb all
25:18 - the way down from that peak of
25:19 - specialization you've arrived at to go
25:21 - find the true
25:23 - global maximum which might be very far
25:26 - away and you know we've already talked
25:28 - about the fact that it's changing and
25:29 - uncertain uh and so this makes it harder
25:31 - the more specialized we are same thing
25:33 - with fraudsters there are fraudsters who
25:34 - are specialized in you know attacking
25:36 - one side as opposed to another and it's
25:38 - hard for them to switch they have to
25:39 - relearn a lot of new things they have to
25:40 - start over
25:41 - in their knowledge
25:43 - so
25:44 - now the third reason why i think
25:46 - you don't see convergence in fraud or in
25:49 - software and these other fields
25:51 - is information sharing is a very
25:54 - important part of how you get
25:55 - convergence right if you think about it
25:57 - not all of us can actually clearly and
26:00 - lucidly see that underlying terrain
26:03 - you know there are these peaks and
26:04 - valleys we know they're there but
26:05 - they're sort of like a fog of war right
26:07 - in that we can't see just kind of beyond
26:09 - our local environment because we just
26:10 - don't know about that much about what
26:12 - haskell mountain looks like or what you
26:14 - know uh some other language or framework
26:16 - that you're not familiar with um so in
26:18 - order for us to really get that sense of
26:20 - what the terrain is like we have to
26:21 - share information with each other
26:23 - about what the terrain is that's that's
26:25 - how we learn uh what happens if we go
26:28 - out far enough into the terrain whether
26:29 - the costs are going to be worth it
26:31 - so different cultures have different
26:32 - amounts of information sharing and that
26:34 - makes it harder or easier for them to
26:36 - converge on different things so uh if
26:37 - you if you imagine this
26:40 - if you imagine a graph of different
26:42 - cultures you can sort of graph them on
26:43 - how close versus open they are in terms
26:46 - of information sharing
26:47 - so if you look at a very very closed
26:49 - system
26:50 - a good example of this is the fraud
26:51 - industry
26:52 - so if you're a fraudster uh then
26:55 - actually it's very hard to learn
26:57 - and get access to the information that
26:59 - you need in order to learn how to become
27:00 - a fraudster right so they're all these
27:02 - underground fraud industries so fraud is
27:04 - an industry in many places in the world
27:06 - uh where basically you can you can you
27:08 - know get access to uh courses you can
27:10 - buy them you can get uh primers on how
27:12 - to hack this site or that site uh either
27:14 - various tools you can buy you can pirate
27:15 - whatever there's all the stuff you need
27:17 - to get up and running as a fraudster and
27:19 - it's not easy to get this stuff uh you
27:21 - actually have to you know make your way
27:22 - into communities you have to prove
27:23 - yourself you have to gain reputation uh
27:25 - you can't just decide hey you know i'm
27:26 - gonna go on amazon and buy a textbook on
27:29 - how to commit fraud right it doesn't
27:31 - exist you can't do that you have to go
27:33 - in through a very specialized way and
27:35 - not all information is actually readily
27:36 - up for grabs there are some fraud rings
27:38 - that just don't share that information
27:40 - with anyone outside of it and it's not
27:41 - for sale
27:42 - and so that makes it very difficult if
27:44 - you're somebody who's wanting to learn
27:45 - more about fraud to actually figure out
27:48 - what is the optimal place for me to be
27:49 - spending my time defrauding people
27:52 - uh now
27:53 - somewhat more on the open side is you
27:55 - could look at a world like poker so
27:57 - poker is kind of a more open system you
27:58 - know so they're all these forums there
28:00 - are different places where people can
28:01 - exchange ideas there's certainly books
28:03 - written about poker that you can just
28:04 - buy if you want to uh but
28:06 - the very best players the very best
28:08 - ideas the very best theories and
28:10 - strategies about poker um they're
28:12 - generally
28:13 - not for sale you know the the people who
28:15 - hold them and the people who profit the
28:16 - most from them tend to keep them close
28:18 - to the chest so you get a lot of uh you
28:20 - get a lot of resources that are okay or
28:22 - that are really crappy that are openly
28:23 - available but the very best stuff
28:25 - sometimes is hard to find and hard to
28:26 - actually gain value from
28:28 - uh and then on the other hand if you
28:29 - look all the way to the right
28:31 - you find the world of software the worm
28:33 - software is in a lot of ways kind of
28:35 - staggeringly open you know you have
28:37 - companies that are just releasing the
28:38 - source code for their entire application
28:40 - uh or security libraries that are again
28:42 - like completely open source and
28:44 - companies will just say yeah we use
28:45 - openssl
28:46 - groovy if you find a weakness in openssl
28:49 - that's a weakness in us right and this
28:51 - is this is really about as open as you
28:53 - can get and there are blog posts there
28:54 - are all these things that are shared
28:56 - about about software that make it seem
28:58 - like wow there's an enormous amount of
28:59 - information sharing that should really
29:01 - make it so that people see really
29:03 - quickly what is actually the best
29:05 - solution for any different problem
29:08 - somehow in the world of software it
29:09 - doesn't really seem like that happens
29:10 - all that well uh and so i don't know i
29:13 - think there's somewhat of an open
29:14 - question of even though there is a lot
29:16 - of sharing on the surface uh if in fact
29:18 - there are some things that people aren't
29:20 - that open about sharing uh like you know
29:22 - i think uh when it comes to what a lot
29:24 - of large companies are doing when
29:25 - they're
29:26 - putting together a lot of open source
29:28 - solutions to solve problems
29:30 - they actually don't immediately go out
29:31 - and tell people oh hey we solved this
29:32 - problem here's how we did it
29:34 - very often the way that companies share
29:36 - this information is pretty selective and
29:38 - pretty strategic and the moment you
29:40 - solve a cutting edge problem you
29:41 - generally don't go out and share it
29:42 - unless you think there's some strategic
29:44 - value in doing so
29:45 - and so that i think to some degree kind
29:47 - of exacerbates the problem of why is it
29:50 - that we don't get this convergence in
29:51 - the world of software
29:54 - so reason number four and i think this
29:56 - is a really interesting reason that kind
29:57 - of goes to sociology
29:59 - is
30:00 - basically
30:02 - the problem of group identities
30:04 - and we heard some this morning about dhh
30:06 - from dhh about the value of group
30:08 - identities and i'm kind of going to go
30:10 - at it from a completely different angle
30:12 - i'm going to talk about more
30:14 - the dangers of group identities
30:17 - so you can imagine that the world of
30:19 - programming is kind of
30:21 - you know it's demarcated into these
30:22 - different kind of arbitrary groups okay
30:25 - one of the groups might be rubios or you
30:27 - know rails programmers or whatever which
30:28 - you can
30:29 - categorize myself in there uh then you
30:31 - have java lovers over here and python is
30:33 - over here and then scalas over there and
30:36 - it's they're kind of these special norms
30:38 - that dictate what you can do inside
30:39 - these different worlds if you want to
30:40 - fit in into these groups you know these
30:42 - groups kind of say like well if you're a
30:44 - java lover uh you can explore this area
30:46 - but you're not really you're not really
30:47 - supposed to go over there that's kind of
30:48 - weird stuff that we don't really do in
30:49 - java land right uh and so you get these
30:52 - kind of arbitrary cuts across the
30:54 - terrain that make it hard for you to
30:56 - just freely traverse and explore this
30:58 - terrain without violating some kind of
31:00 - uh social norm associated with your
31:02 - group
31:03 - turns out uh you get the same kind of
31:06 - thing with fraud rights right so there's
31:08 - a fraud ring that just defrauds facebook
31:11 - that's all they do and all they do is
31:13 - you know they're talking on some sort of
31:14 - you know secret channel where only
31:16 - fraudsters that are part of this group
31:17 - can communicate and they share
31:18 - information about just how to defraud
31:20 - uber or just how to defraud google
31:23 - and if you're one of the members of the
31:24 - other groups maybe you can't get into
31:26 - that group maybe there's just
31:28 - broadcasters have just decided nope we
31:29 - are we're this group and you're that
31:31 - group and you're not going to get our
31:32 - information and so if you want to
31:34 - explore you only get to explore the
31:35 - terrain over there
31:36 - you know and i think in the world of
31:38 - software you kind of see this when uh
31:40 - you know instead of having like an
31:41 - explanation a blog post it's just here's
31:43 - how kafka works there's the blog post
31:45 - kafka for rails engineers
31:47 - right or the blog post you know xyz for
31:50 - rubyists and this again is like kind of
31:52 - uh reinforcing that demarcation that hey
31:55 - you know i know you want to go explore
31:57 - that stuff let me show it to you in the
31:58 - way that's appropriate for our group
32:01 - and
32:02 - i think this is really fascinating to me
32:04 - because you know being somebody who's
32:06 - relatively new to the subculture of
32:08 - software uh i can immediately recognize
32:10 - this behavior
32:12 - and i think it's pretty well explained
32:14 - by this theory in psychology called
32:16 - social identity theory
32:18 - so the idea of social identity theory
32:19 - it's pretty simple uh essentially uh
32:22 - suggests that the way that we construct
32:24 - our identities as human beings
32:27 - is largely as a result of the groups
32:28 - that we adhere to
32:30 - so uh this kind of goes in several
32:32 - stages so the first thing you do is you
32:34 - start categorizing the world into social
32:36 - groups okay so you first have to say
32:38 - okay so these people are the christians
32:40 - these people are the goths these people
32:42 - are uh the meat lovers okay whatever
32:45 - whatever you want to however you want to
32:46 - draw up those boundaries in the space of
32:48 - what people can be
32:50 - so first you have to draw those
32:50 - boundaries
32:52 - next you have to identify
32:54 - which of those groups you belong to you
32:57 - know do i want to be do you want to do i
32:58 - want to be a meat lover do i want to be
33:00 - a pythonista do i want to be somebody
33:01 - who loves red or whatever
33:05 - you have to decide which of those groups
33:07 - you're going to identify with okay then
33:09 - once you do that the last step is social
33:12 - comparison now you have to do the pretty
33:14 - hard work of deciding why the other
33:17 - groups are bad
33:18 - and your group is good you have to make
33:20 - this distinction between your in-group
33:22 - and the group and invent some kind of
33:24 - story or narrative that goes along and
33:26 - reinforces why you're good and they're
33:27 - bad
33:28 - so you know uh there are all these
33:30 - classic examples of this sort of thing
33:32 - where basically there's some arbitrary
33:33 - distinction that you've arrived on as
33:35 - being important to your social
33:36 - identification and you know there's no
33:39 - intrinsic reason why that should be
33:40 - important but you know we're rubyists
33:42 - and they're java lovers and because of
33:44 - that they're bad and we're good and we
33:47 - have to come up with some sort of story
33:48 - why that's the case and they have to do
33:49 - the exact same thing
33:52 - now you might think the social identity
33:54 - theory would suggest that okay well that
33:56 - should mean that all rubious and all
33:58 - rails developers are the same but i
33:59 - don't really feel like that i'm not the
34:00 - same as the people around me you know if
34:02 - you look around other people around like
34:03 - you know you all don't look like a
34:05 - completely homogeneous group of people
34:07 - uh and this is this is true um and so
34:09 - there's this other theory that kind of
34:10 - complements us really well
34:12 - and it's called differential psychology
34:14 - and differential psychology essentially
34:16 - examines the way that people within
34:18 - groups
34:19 - try to make themselves different from
34:21 - each other
34:22 - as a way of somehow strengthening their
34:24 - bond as being a part of that group
34:26 - so for example if you've ever seen the
34:27 - movie west side story so you look at
34:28 - these characters they're all part of a
34:29 - gang in west side story and they all you
34:31 - know they they're all together part of
34:33 - the same group uh and you can tell they
34:35 - kind of have a look
34:36 - right if you just saw these people in
34:38 - the street you'd be like okay these
34:39 - people are doing something together
34:41 - there's some something that somehow
34:42 - unites them um but notice
34:44 - they don't all wear exactly the same
34:47 - outfit
34:48 - and they could
34:49 - they could all wear the exact same
34:51 - outfit they could all style their hair
34:52 - the exact same way but they don't
34:55 - why don't they
34:57 - why don't they do that you'd think that
34:58 - maybe that would strengthen their group
34:59 - identity if they all literally did the
35:01 - exact same thing they would be a
35:02 - stronger part of that group but it turns
35:04 - out there's something intrinsic to us as
35:06 - human beings that even though we're a
35:07 - part of groups it's important for us to
35:09 - differentiate ourselves we actually
35:10 - spend a significant amount of energy
35:12 - just differentiating ourselves within
35:14 - the groups that we're in as a way of
35:16 - almost masking our identities within
35:17 - that group
35:18 - right as a way to not make ourselves
35:19 - feel that like hey i don't have any
35:21 - identity outside this group because i
35:22 - seem to be wearing the exact same thing
35:24 - everyone else is wearing and doing the
35:25 - exact same thing everyone else is doing
35:27 - we'll expend a lot of energy in order
35:28 - not to feel that so uh that's exactly
35:31 - what you see these people in west side
35:32 - story doing
35:34 - and so i want to draw a little bit of
35:35 - analogy here
35:36 - is that there's something kind of
35:38 - similar going on
35:39 - when you look at something like this
35:42 - where we're expanding this energy you
35:44 - know if you imagine this underlying
35:45 - terrain of you know software and let's
35:48 - say this right here is rails mountain
35:50 - uh there's a lot of energy going into
35:52 - making it so that
35:54 - you know it kind of looks like we're
35:55 - exploring this big terrain but really
35:57 - everything is actually
35:58 - still in the bounds of this group
36:00 - even though we're talking about you know
36:02 - kafka or elixir or whatever it is
36:04 - we're still keeping you as a part of
36:06 - this group and that identity is actually
36:08 - reinforced by you being here in every
36:10 - single way even the fact that you're
36:12 - going to these different talks talking
36:13 - about different technologies uh you're
36:15 - still seeing it as a rails developer
36:19 - and i think this is bad i think this
36:20 - masks the the severity of the problem of
36:23 - social identities making it harder for
36:25 - us to actually converge and actually
36:27 - find what is genuinely optimal it allows
36:29 - us to kind of distract ourselves with a
36:30 - story but like hey we're exploring these
36:32 - different things but really underlying
36:34 - it we're not
36:36 - so
36:37 - i think we should
36:39 - really want to find convergence we
36:40 - should want to find the true global
36:42 - maximum
36:44 - so as software engineers what what are
36:46 - we to do about this and i don't know
36:48 - that i have perfect answers to this i
36:50 - think these are all really intrinsically
36:51 - hard problems but i do have a couple of
36:53 - pieces of advice that uh hopefully might
36:55 - be instructed to some degree
36:58 - so the first piece of advice is uh an
37:00 - adage from paul grammer initially where
37:03 - he said keep your identity small
37:06 - and really kind of what this means is to
37:08 - as much as you can as much as possible
37:10 - jettison the labels that you've that
37:12 - you've very easily come to identify
37:14 - yourself with and so that's to say you
37:16 - know don't think of yourself as a rails
37:18 - developer or as a ruby developer
37:20 - but instead think of yourself as a
37:22 - software engineer
37:24 - such that whatever ends up being the
37:25 - right tool for the job and that tool
37:27 - might be rails my tools might be ruby
37:28 - might be something else uh that's what
37:30 - you fundamentally use you solve problems
37:33 - in the world of software and right now
37:35 - it might be very beneficial for you to
37:36 - go climbing up this hill of learning
37:38 - more about rails or more about ruby uh
37:40 - but eventually you will not be
37:42 - you can imagine 10 years from now you'll
37:43 - be working on something and rails
37:45 - probably won't be the tool you want to
37:46 - use 10 years from now
37:48 - in fact i would right now i actually
37:50 - consider myself to be uh
37:52 - i love ruby i love rails i think they're
37:54 - really awesome and wonderful tools uh
37:55 - but i would be
37:57 - probably pretty disappointed myself if i
37:59 - was a rails developer 10 years from now
38:01 - and that was what i considered myself to
38:02 - be i'm a rails developer you know when
38:04 - when dhh was talking about uh the
38:06 - article about cobalt programmers that
38:08 - you know they're people still making
38:09 - money for banks working on these super
38:11 - antiquated cobalt uh uh applications
38:14 - you can bet that there will still be
38:16 - rails apps 10 years from now
38:18 - and i'm sure that you'll probably be
38:19 - able to fetch a pretty penny uh you know
38:21 - basically managing these 10 year old 12
38:23 - year old 15 year old rails apps uh but
38:26 - is that fundamentally what you want to
38:27 - be doing or is what you want to be doing
38:29 - to solve problems with software however
38:32 - those problems end up changing and
38:33 - whoever those tools end up changing
38:36 - the second piece of advice i want to
38:38 - give besides keeping your identity small
38:40 - is
38:41 - pretty obvious which is to explore the
38:43 - terrain
38:45 - and exploring the terrain to me it means
38:47 - more than just kind of you know paying
38:48 - lip service to different things they'll
38:49 - be like okay i don't know what kafka is
38:51 - i'm going to go to this talk or i'm
38:52 - going to go to that talk
38:53 - it means fundamentally
38:55 - to do things you've never done before
38:58 - okay it means to do things that are kind
39:00 - of scary to you
39:02 - it means to take real risks and when i
39:04 - say real risks i'm juxtaposing that
39:06 - against fake risks which i think are a
39:08 - real thing and something you should
39:09 - caution yourself against a fake risk is
39:11 - one where you actually retain all of
39:14 - your safety
39:15 - all of your comfort all of your prestige
39:17 - all of your knowledge all of your
39:18 - abilities where it's like you know what
39:20 - i'm still a really awesome person
39:21 - everyone respects me i know everything
39:22 - that i'm doing uh but i'm also taking
39:24 - this risk no you're not
39:26 - no you're not right the risk comes when
39:28 - you give up you actually walk down the
39:30 - hill
39:31 - and walking down a hill is uncomfortable
39:34 - it's scary
39:35 - it makes you nervous and if you're not
39:38 - actually doing that then you're not
39:39 - really taking a genuine risk
39:42 - uh another way of saying this is
39:44 - go to djangocon
39:47 - uh
39:48 - what i don't actually go to djangocon it
39:50 - probably sucks but there's probably like
39:51 - if if if railsconf is the only
39:54 - conference you're going to this year
39:56 - reflect on that
39:57 - reflect on what that means whether it
39:59 - means that you are actually taking risks
40:00 - that are important
40:02 - so
40:03 - uh
40:04 - and finally of course i think the most
40:05 - important part of exploration is
40:08 - just to have fun
40:09 - and when you let go of the idea that you
40:10 - constantly need to be moving up and then
40:12 - in fact it's okay to move down and to uh
40:15 - take risks in a way that potentially
40:17 - make it harder for you to get your job
40:18 - done
40:19 - but that's okay and that and allow
40:21 - yourself to have fun doing it and i
40:22 - think that makes the whole process a lot
40:24 - easier
40:26 - so uh that's it for me i'm haseeb
40:28 - qureshi a software engineer on risk at
40:30 - airbnb uh if you're a senior software
40:32 - engineer or a data scientist we're
40:33 - always hiring
40:35 - and yeah thanks for listening
40:37 - [Applause]