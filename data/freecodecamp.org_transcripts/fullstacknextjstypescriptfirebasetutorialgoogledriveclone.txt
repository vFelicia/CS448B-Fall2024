00:00 - welcome to this Hands-On course where
00:01 - you will learn how to create a Google
00:03 - Drive clone harnessing the power of
00:05 - nextjs typescript Tailwind CSS and fire
00:09 - Blas 9 dive deep into the Synergy of
00:11 - these Technologies as Nishant Singh
00:14 - guides you step by step to build a
00:16 - feature-rich responsive and scalable
00:18 - cloud storage application Nishant is a
00:21 - popular instructor on our Channel and
00:23 - I'm sure you'll learn a ton from this
00:25 - course hey guys Nishant so let's learn
00:30 - how to build a Google Drive clone using
00:34 - nextjs typescript Tailwind CSS and
00:38 - Firebase along with next o so first
00:42 - let's sign up to our application we will
00:45 - see GitHub sign up we are now signed in
00:49 - and the folder name is called root so we
00:52 - have the option to add a file or add a
00:55 - folder so let me do a folder first we
00:58 - can name this as
01:00 - folder three click
01:03 - create and we now have a folder three
01:06 - here so if I open this we will be on
01:09 - this page and we don't have any files or
01:12 - folder inside the folder three so we can
01:15 - add a file if I create or if I choose a
01:18 - file let me choose any file let's say
01:21 - this photos or any photo not the private
01:25 - but fine you will see a bar of progress
01:28 - here with with my image at the top it is
01:33 - the let's say my get image so if I add a
01:36 - picture it will be it will reflect in
01:39 - here we can also addite a folder so
01:42 - let's say
01:44 - nested folder click create and it will
01:48 - be in here so we can add Ned folder
01:51 - inside another folder open this we can
01:55 - add a file inside so let me let me add
01:58 - this file now so it will auto
02:00 - automatically upload it and once the
02:04 - file upload completes the image will be
02:06 - here that we can open in a new tab in
02:10 - Google Chrome see if I go back we don't
02:13 - have the image in here because they are
02:16 - private to the folder so if I come to
02:18 - the root we are having these files come
02:21 - to folder three we are having these
02:23 - files come to next folder we are having
02:26 - this file so if I go back in folder one
02:29 - we we have this folder one of next
02:32 - folder one and the image click it we
02:36 - have this files with my file folder
02:40 - basically what I want to say is we can
02:42 - create a folder inside a folder inside
02:46 - another folder and the same is true with
02:49 - files as well so let's learn how to
02:52 - build this application using the S
02:56 - Technologies so let me create or let me
02:59 - just first tell you what is that I have
03:02 - on screen so it is a thing called T3
03:06 - stack which is basically a combination
03:09 - of nextjs with typescript along with
03:13 - some other things that I will show you
03:15 - now so if I open Terminal here and if I
03:18 - just do 1 second if I do npm create T3
03:22 - app at theate latest enter let's name
03:25 - the app as Drive clone or 2.0 we can say
03:30 - Drive
03:32 - 2.0 enter we will use typescript so here
03:36 - are the things that I told you about
03:38 - like we have next to and authentication
03:40 - library then we have
03:42 - Tailwind we also have trpc and Prisma
03:45 - but we will not use them so okay let me
03:49 - just add Prisma in order to use next Ro
03:52 - just press enter now okay we don't need
03:55 - a Depot for now so let me skip it yes I
03:59 - want to done and can install so don't
04:01 - skip it and let me just zoom the screen
04:04 - we want import LSS like let's say at the
04:08 - rate okay it's not working so just okay
04:11 - we can say at the rate enter so it is
04:14 - installing this dependencies so we can
04:18 - wait for it meanwhile let me go over to
04:20 - this website called
04:24 - Tailwind it was there's a library called
04:27 - for Tailwind I don't remember the name
04:30 - so it is I
04:32 - think let me see Tailwind
04:36 - library for UI let me see yes this was
04:42 - Dy UI I forgot the name so I am sorry
04:44 - for that maybe not so this is the
04:47 - library that we will install later which
04:49 - is called d y basically it is a I can
04:53 - say rapper for Tailwind where we can
04:55 - simply use the Tailwind glasses here so
04:59 - so we can just go to I I can just go to
05:03 - customize component or components for
05:07 - example if you want to use a button for
05:09 - Tailwind we can simply use class of or
05:12 - class name of BTN or if I want colors
05:15 - like TR secondary or outlined we can use
05:19 - BN accent BN outline or rounded or full
05:23 - PX and whatnot so it's done now let me
05:27 - open the folder
05:30 - and we also have to do npx Prisma DB
05:32 - push to push the Prisma schema to the
05:37 - database then we can run npm run div and
05:41 - if I want to push the repo to GitHub we
05:43 - can simply push it so let me open this
05:46 - drive clone where it is Drive 2.0 so let
05:51 - me do npm I okay it's done so let me
05:55 - push the first let me run the
05:57 - application so we can say npm run Dev
06:00 - let me collapse this and it is on Local
06:03 - Host 3,000 let me open this so we need
06:07 - to go to the EnV file and here you will
06:11 - have Discord client ID and client
06:15 - secret so we should have a sign up
06:18 - button but it is not here so I think
06:22 - what we can do is just go to Source this
06:25 - page is called
06:27 - Pages app TSX
06:31 - H index. TSX yes so let me push the
06:37 - schema to Prisma using this command
06:40 - called npx Prisma D push it has been
06:44 - pushed so now let me go
06:47 - to this Library called Next
06:50 - o I think we have to create a button and
06:53 - so on things like that in order to use
06:57 - next so we have installed this if I go
07:00 - to package of package.json file you will
07:03 - see we will have Zod react next and this
07:08 - kind of stuff now let me also add this
07:11 - Library called dii using this command
07:16 - enter we also have to import this plugin
07:19 - into our module. exports in D.C config
07:23 - dots we have plugins we just need to add
07:26 - this here isi so close
07:31 - this and close the terminal close the
07:34 - terminal yes now if you open let me
07:38 - close the 33 app do
07:42 - G so what can we do let me open use or
07:47 - customize component so we can just copy
07:50 - any
07:51 - button let me copy the button come over
07:54 - to let's say what was the file name
07:58 - index. TSX I think the screen is screen
08:01 - was too big now it was too big now it's
08:05 - fine so let me clear the entire things
08:10 - from here like these
08:12 - things and this link the D as well and
08:17 - just add the button here just make this
08:19 - as class name not class so if I now
08:22 - check give it ready fret we will have
08:24 - the button from that is UI like this
08:27 - button so we can add different types of
08:30 - we can say button class names like BTN
08:33 - primary after BTM or BTN so we'll see
08:38 - this so let me rename this
08:40 - to sign in or what we can do is create a
08:45 - folder here called components in the
08:47 - source folder okay no not such we need
08:51 - we need a folder called
08:56 - components don't let scare don't don't
08:59 - let it scare you it is just
09:01 - a uh what can we
09:04 - say it is just a next
09:08 - application yes make a function
09:11 - component and then just add a button
09:14 - that we want to add like one two or
09:16 - three
09:17 - whatever so this should be class
09:20 - name and this thing that we are having
09:23 - bet and primary we'll receive it from
09:26 - props so we can say button class then
09:30 - let me copy the button class add it in
09:33 - here so we have to first replace the
09:37 - codes with back tck one second yes also
09:42 - wrap it in a what is it
09:46 - clyra and then he use this as a variable
09:51 - using this but we have to create a
09:54 - instance or prop so make a folder head
09:58 - called
10:00 - instance or maybe in sorry not instance
10:04 - what I am typing interface
10:07 - sorry then let me make simple index. TSX
10:11 - file only one file where we will have
10:14 - all the interfaces so let's say we have
10:18 - a interface
10:19 - called button
10:22 - interface or just say button so in the
10:26 - button we are having button class
10:30 - which is a if you hover this it is not
10:33 - giving us any type so if I come over
10:35 - here then import this button as common
10:39 - component using at theate component
10:41 - button and we can just replace this
10:43 - button here so we have to pass the thing
10:47 - here called BR class BN class or yes so
10:50 - we can just make it a string so yes this
10:53 - will be a string so we have to add this
10:56 - in the interface that this is the class
10:58 - or of button class it is a
11:02 - string because we're passing a string
11:04 - here so we have to pass let's say Bain
11:07 - primary this class now we have to just
11:12 - add as a string we have added it now let
11:14 - me use this prop or interface in
11:18 - here like this save this as well and we
11:22 - will
11:23 - have this we can also pass a text or say
11:27 - title title will be let's say sign up so
11:33 - we have to pass title in here as
11:36 - well so as props I mean get it here then
11:40 - replace one with title so that it will
11:43 - become or it will it becomes
11:45 - Dynamic then we have to add title in
11:47 - here as well which is a string
11:49 - also like this save all these files and
11:53 - if I come to the app we will see a
11:55 - button called sign up which is from
11:58 - Tailwind
11:59 - now if I check this next o we have
12:03 - installed it we have to add the provider
12:07 - in the next o file which is in the O so
12:11 - come to API we have next o here we are
12:14 - having no things or nothing so let me
12:18 - export this const and remove one second
12:22 - export default next o Au options so we
12:25 - have Au options say this the thing is
12:29 - what is individual declaration in merge
12:31 - declaration blah blah
12:33 - blah export cons export default why
12:37 - don't I just copy the entire code base
12:39 - and paste it yes
12:42 - so okay the thing is we are previously
12:45 - we were importing Au options but now we
12:48 - need geta provider in order to add it
12:53 - yes I mean we have to change the inputs
12:56 - here we are having G provider with
12:58 - client Iden client secret so if I go to
13:01 - GitHub now let me go to GitHub and just
13:05 - go to settings here where the
13:08 - settings okay where is
13:10 - it where do I find settings in here yes
13:13 - it is here
13:15 - settings go to developer settings on the
13:18 - left
13:19 - panel here we will have o o o
13:24 - apps let me create a new O app called
13:27 - let's say Drive
13:29 - 2.0 let's add the homepage URL which is
13:32 - this Local Host 3,000 and such add it we
13:36 - can say this is a drive clone we need
13:42 - call back URL to just paste the GitHub I
13:45 - mean this URL called Local Host 3,000
13:49 - click registered application we will
13:51 - have client ID here so we can just copy
13:54 - C ID and if you see that we we are
13:59 - having the GitHub ID in this process.
14:02 - file here so it is Discord basically not
14:06 - GitHub so let me first add the ID and
14:10 - replace this with GitHub client ID or
14:14 - GitHub ID so we can do this then the
14:17 - second thing is GitHub secret so just
14:21 - add this one here fine so now if I just
14:27 - come in the gith or section we need to
14:30 - generate a new client secret so click
14:33 - the button here called generate a new
14:35 - client
14:37 - secret let me give my password please
14:39 - don't see it confirm
14:42 - this and we are having the secret here
14:45 - so let me copy the secret and now paste
14:48 - this in the EnV file save this
14:52 - and we need to what is the issue
14:55 - here uh type string or undefined and is
14:59 - not assignable to type of string come to
15:02 - interface create an interface here
15:04 - called let's say gabo so in this let me
15:10 - add client ID and client secret the both
15:14 - are strings so client ID next is client
15:18 - secret this will be a string as well
15:20 - save them both now this type or the
15:23 - interface will be in the GitHub provider
15:27 - in angle brackets like this so we have
15:31 - initialized geta provider now the next
15:34 - step in order to use it is to if I come
15:38 - here in the where file app do TSX we are
15:42 - having component page props and such
15:45 - these things okay component is wrapped
15:49 - in the syst provider fine if I come all
15:52 - all the way
15:53 - down so we need to use use session let
15:57 - me try to import this things in the file
16:01 - called pages in here use session sign in
16:05 - and sign out from next s react okay the
16:09 - next step is we need to destructure data
16:12 - and session from this use
16:16 - session and so we have a button here we
16:19 - have a button here yes on click the
16:22 - button we can simply sign in or sign out
16:24 - so let me try this let me just hook this
16:28 - button on this button component the
16:33 - button will receive let me close this
16:36 - the button will receive one more prop
16:38 - called
16:40 - onclick and the when the button is on
16:43 - clicked the function that we are having
16:45 - Here sign in will run save this we need
16:50 - to add type here which will be a
16:54 - function which return return type of
16:55 - void so we can just try this and see
16:59 - what happens now if I click sign up we
17:02 - are seeing this page yes sign in with
17:04 - GitHub click this let me authorize this
17:08 - nan6 app from dive 2.0 but I don't think
17:12 - we have subscribed so what I can do is
17:15 - just do a console look of the data one
17:18 - second not data session we can just go
17:20 - to console in here we are having an
17:24 - object with the
17:26 - username image and the name as well so
17:30 - the image is I think from GitHub this
17:32 - image that I am having so we can use
17:36 - that okay it expires on this time stamp
17:40 - that I cannot read properly so what we
17:43 - can
17:43 - do if session
17:46 - exists let me do it here I mean if
17:49 - session is here it
17:52 - means we cannot log in again we can just
17:56 - log out so let me not put this here let
18:00 - me use session here so we can simply do
18:05 - if s exists in this case we will use a
18:09 - button for sign out not sign in so let
18:13 - me add a button here another one here
18:17 - and then close it or delete this so this
18:21 - should be sign up sorry sign not sign in
18:24 - sign out and this will be sign up so let
18:27 - me just do sign out in here and this
18:31 - will be sign up if session is true or if
18:35 - is having some data this will be shown
18:39 - else this will be shown now we can
18:43 - remove the console log from here and
18:47 - click sign out so immediately we will
18:50 - see sign up button here now click it
18:53 - again we can click sign in with GitHub
18:56 - and we are now signed in let also have
18:59 - the username so if I bring my session in
19:01 - the
19:03 - console so we are having an object here
19:06 - from the what is this next thought where
19:09 - we have the image and the name so let me
19:14 - remove or just here let me add welcome
19:19 - let me add the name so the name will be
19:22 - let's say session do
19:26 - username yes now we'll see welcome
19:29 - Nishant Kumar here but this is not
19:33 - looking as a drive so we can just
19:38 - command this out for now and let me move
19:41 - the button at the top right here that
19:46 - where I am having the curser let me
19:49 - close what settings so let me move that
19:53 - button at the top what we can
19:56 - do create one second what I'm thinking
20:00 - is so let me create
20:05 - or we need to move the button that fine
20:08 - but let me create a component
20:09 - first before that let me create a folder
20:12 - called common let moove the button in
20:15 - the common folder that we know that
20:17 - button is a folder that or button is a
20:19 - component that can be used at different
20:23 - places so we have done that now let me
20:27 - create a folder or file in
20:29 - the uh components called we can
20:33 - say home.
20:36 - TSX make it a functional
20:39 - component but will it clash with index I
20:42 - guess not let's see save home let me
20:46 - import the home component in the pages
20:48 - so
20:49 - import home from components home I think
20:52 - it is clashing so we can just make this
20:55 - as home component
20:59 - now import this from this and let me
21:03 - render it out in this div save and they
21:06 - will see home let me move session in
21:09 - here in the home
21:11 - component so we need these things which
21:14 - are data and session from you session so
21:19 - let me have them here or let me create a
21:22 - hook for this a common or a custom hook
21:26 - let me make a folder called hooks
21:29 - in here we can say use session. TSX not
21:33 - t not tsz
21:37 - TSX so what we need in here we need this
21:42 - things called U session sign in and sign
21:44 - out add them we need data and this
21:49 - session also add it but we need to make
21:52 - a function so export const use session
21:58 - okay we need another function sorry so
22:02 - this is already defined from the next
22:06 - use session so we can
22:09 - say what we can say use fetch session
22:13 - okay let's change the name to this in
22:16 - here what do we
22:18 - need we need these things okay just save
22:22 - this and return this div which is the
22:26 - button so we need the button here so we
22:29 - can say import button from this route in
22:33 - the use
22:34 - session now or all of the errors are now
22:38 - going on B so let me remove the entire
22:40 - div in here let me import use fetch
22:44 - session from use session in the hooks
22:47 - folder then
22:49 - return or let me do this we need the use
22:53 - session so let me destructure let's say
22:55 - this what can we call this
22:59 - jsx okay I guess let me just move them
23:02 - in here in the home and just have sign
23:07 - out and sign in
23:08 - function in here remove U session so we
23:13 - also need the button so just cut it from
23:15 - here and add the button in here so we
23:19 - need the session from here so let me
23:21 - return only the session like this so
23:25 - this is returning the session as an OP
23:28 - object so we have to D structure it we
23:30 - let
23:32 - session equals to use fetch session and
23:36 - now everything will work out so as I
23:39 - said that we have to make this at the
23:41 - very top right so give it a class name
23:44 - called let's
23:46 - say uh or BTN but we need to create a
23:50 - styling file so why don't we install SAS
23:54 - npm i s SS it's done
23:58 - now let me create a file here called or
24:01 - one thing I have done wrong is make a
24:02 - folder first called home let me move the
24:05 - home to TSX in the home folder we need
24:07 - to import
24:09 - updates so do this save and save here as
24:13 - well so here we don't need this
24:17 - sessions let me make it clear and this
24:20 - as well we don't need them so we have
24:23 - installed SAS make a file here called
24:26 - index. t
24:28 - SX and in the pages we are having home
24:31 - and home so let's change that just
24:33 - rename this as index. TSX okay this
24:38 - should be not TSX this should be
24:40 - scss now home should be index. TSX
24:44 - because we don't need to add duplicate
24:47 - Imports like this like home slome we can
24:51 - just have home and home will render the
24:53 - index file now in the let me put this
24:58 - CSS or scss file in the home so
25:01 - import index.
25:04 - scss now we need to use all button class
25:07 - name in the index.
25:10 - scss so this should be okay what is the
25:13 - problem Global CSS cannot be imported in
25:15 - the files other than custom CSS okay I
25:20 - think this CS I forgot to mention that
25:23 - this nextjs uses o sorry it uses
25:29 - uh CSS module so if I come to index. TSX
25:34 - sorry app. TSX we are
25:36 - having this thing called okay we don't
25:39 - have it here in the global. CSS we are
25:42 - having come to
25:44 - index so let's say that we are having
25:47 - class names here okay okay what we have
25:51 - to do just come to this and let me make
25:54 - this as o BTN now now copy this come to
25:59 - the homepage so we will not use class
26:02 - names like this we can do what do
26:08 - Styles
26:10 - dot this Orban so we have to import
26:13 - Styles so where do I import it
26:17 - from let me check
26:19 - Pages app.
26:21 - TSX let me check any Styles file like
26:25 - global. CSS we are having these kind of
26:27 - of
26:29 - things so I am forgetting how do this
26:32 - how does this
26:34 - work let me check on Google so what we
26:37 - have to do is let me just remove this
26:41 - index
26:42 - import name the file to let's say home
26:46 - do module.
26:49 - scss now let me import the file
26:52 - here so we will do import Styles styes
26:57 - from from this file now we will have no
27:00 - errors fine because this is how we do
27:04 - styling in nextjs using modules so in
27:08 - the OR BN let me give a position of
27:12 - absolute top 20
27:15 - PX right 20 PX as well so that it sticks
27:20 - on the this position so we will have
27:25 - sign on button but we will not show it
27:28 - because we have to show the image of the
27:30 - user so if I just do a
27:32 - console.log of
27:34 - session we can have the image in here
27:37 - that I previously
27:39 - mentioned so it is having
27:41 - user so we can say do user do image so
27:47 - it will give it the link of the image so
27:49 - we can use that so let me turn this into
27:52 - an image tag first comment it out and
27:55 - then make a image so SCE which will be
27:59 - equal
28:00 - to this session do user.
28:04 - image so we can just add them user does
28:07 - not exist type of never what is this
28:11 - thing here so we will have the image
28:14 - okay sign out okay we have done it wrong
28:17 - this should be not here this should be
28:20 - in here sorry okay
28:24 - save string null undefined is is not
28:27 - assignable to string
28:30 - undefined okay we need to create a type
28:34 - for this
28:36 - image so or we can just make as string
28:40 - here it will go away simple now we have
28:44 - this big image so let's shorten it give
28:46 - it a class name here called styles do
28:51 - proile IMG or
28:53 - image now we can use this profile
28:58 - IMG in here sorry this
29:03 - only width let's make 100 pixels then
29:07 - border radius 50% to make it round it
29:11 - like this let me also throw cursor as
29:14 - pointer
29:16 - fine now this should be
29:19 - not in a home page we can just add them
29:23 - in a component for top
29:25 - part so a folder called top
29:30 - bar in here make a file called index do
29:36 - TSX and one for the home module I mean
29:40 - The Styling module so we can say top bar
29:43 - do
29:45 - module do
29:47 - scss now let me shift these things this
29:50 - entire div in here but why don't I shift
29:54 - entire home function in here just change
29:56 - the name of of Home component
29:58 - to top bar so we don't okay we need sign
30:03 - out let me just leave it now let me
30:05 - import this component in here the Stop
30:08 - Bar first let me name the styles of the
30:11 - class name then import
30:14 - the uh what is it the top bar
30:17 - import top bar from this
30:20 - component and simply then render it out
30:23 - here like this let me remove console log
30:26 - the button and just the button so top
30:30 - bar is here and we have a problem here
30:33 - cannot
30:35 - resolve home. mod scss so this should be
30:38 - top bar modu scss in the top bar we can
30:44 - just have these things
30:47 - paste Let me refresh cannot resolve
30:50 - home. module Doss in the okay let me
30:54 - check in
30:56 - the top bar here okay so we have to save
30:59 - it as well save and it will be
31:01 - fine so remove console log and if I
31:05 - click the home we should sign out so in
31:08 - the image we can say on click sign out
31:14 - okay what is this issue let me just have
31:18 - an call back function I
31:20 - think
31:21 - yes so if I click it we will be signed
31:25 - out this should a function just not
31:29 - a click it now we are signed up or
31:32 - signed out click it again and we can
31:36 - sign in using GitHub so basically you
31:38 - can use GitHub or let's say Facebook or
31:41 - Google anything let me come to next
31:45 - R here we'll have let's say get started
31:49 - we can have anything here we like if I
31:52 - come one second if I come to Providers
31:56 - we have all these things like apple
31:59 - atlassian o
32:01 - zero battle net and whatnot so we can
32:04 - have Google here as well we just need to
32:07 - have Google client ID and secret from I
32:09 - think uh gcd Google client developer
32:12 - tools and whatever it is so we have done
32:15 - this perfect let me close the things
32:19 - that we don't need like interface top
32:22 - bar module we don't need for now also
32:25 - closes so we do need the
32:28 - home
32:29 - and this we don't need so remove use
32:33 - fetch
32:34 - session we have pages in the pages we
32:39 - are having the home component in the
32:41 - home we are having top bar for now so
32:44 - what else we can do now here is create
32:47 - the body for adding files in the fire
32:51 - store yeah so let's create a component
32:54 - for this thing what thing like uploading
32:58 - a file or a folder first so in the pages
33:04 - we have the home page called index which
33:07 - is rendering the home component F so in
33:09 - the components let me make a folder
33:12 - called we can say
33:16 - upload
33:18 - files let make an index. TSX file in
33:23 - here a functional component let's make
33:26 - the name as
33:27 - upload files but okay let me also get it
33:31 - in the home
33:32 - dot uh home component so we can say
33:38 - import home
33:40 - from 1 second what I'm doing this upload
33:43 - files I
33:44 - mean from upload
33:47 - files then render it
33:50 - here so I will see upload files here
33:55 - fine now we need to come to this file
34:01 - and just make a I mean folder first make
34:04 - a file for this styling so upload do
34:09 - module
34:11 - dot
34:13 - scss so import this end
34:16 - the
34:17 - and first okay let me know
34:20 - styles
34:22 - from this
34:24 - one now just add a class here and we can
34:27 - say Styles
34:29 - dot what should we name this let's say
34:33 - upload me in here let me come and just
34:38 - do margin
34:41 - zero this will not work so I guess let
34:44 - me come to Styles Global okay what else
34:49 - or where else do we have
34:51 - stylings so we need to reset all the
34:53 - Styles so we can just say body
34:57 - margin zero okay this is coming in the
35:01 - center we it in the not at the center we
35:04 - can have it like at the top
35:09 - so what we can do for that is we have
35:13 - styles then we have the one second where
35:17 - else do we have styles what if I remove
35:20 - these things it will be like this okay
35:23 - what if frame of Tailwind base no
35:26 - Tailwind
35:28 - utilities yes now it's fine so remove
35:31 - Tailwind utilities because this will
35:34 - just remove the class names for margin
35:39 - and part padding so remove this as well
35:42 - because we don't need that so here we
35:46 - also didn't need margin or maybe we need
35:50 - 20 pixels in order to spread it like
35:54 - here
35:55 - so what we can do is we have upload
35:59 - files let me add a button here so okay
36:02 - if I if I add a button yes let's add a
36:06 - button so we can import button from
36:10 - common button just render it in here
36:13 - this button will take a title so let's
36:15 - say add a file and one more it was
36:19 - saying one more property let me over and
36:22 - see it is the class name so let me come
36:25 - to interface and make the button class
36:29 - as optional Ono the on click
36:32 - event yes so we have add a file also let
36:35 - me add the class name so if I come to
36:37 - this let me try
36:40 - bet primary again let's just make this
36:45 - as our custom button class so we can say
36:47 - class name equals to this okay what is
36:52 - the name it is BN class fine save and it
36:57 - is now in purple we have add a file one
37:00 - more we need for a folder so we can say
37:04 - add
37:05 - a folder or basically create a
37:09 - folder we need these things let me add a
37:12 - margin among them so we can say M2 here
37:16 - as well no it is not working so I guess
37:19 - make P2 padding no still not
37:23 - working so we are having B class that is
37:27 - just taking okay in the BN Primary in
37:32 - the button let me come to
37:34 - button we have the button okay what if I
37:38 - add what is the key for margin here so
37:42 - let me just check button we have here we
37:47 - are having all the buttons fine if I
37:49 - come down invo success and so on we have
37:53 - responsive button we have white button
37:57 - we have these kind of things but we need
38:00 - to check how to give margin among them
38:03 - so let's search anywhere what is the key
38:07 - for margin in the layout and
38:10 - neography so if I come down somewhere to
38:15 - find margin if I search margin will I
38:19 - get it so this should be M2 like this
38:23 - should
38:24 - be M3 or M to but it is not
38:29 - working so let me make a file here for
38:34 - button so this should
38:36 - be first let me make a folder for button
38:40 - move this inside
38:43 - yes and now make a file for scss so
38:48 - button
38:50 - dot module do
38:54 - scss so in here first let me import this
38:59 - import uh styles from this file now just
39:05 - have the
39:07 - Styles and basically we can first do
39:12 - Styles dot some class name in here so we
39:15 - can
39:16 - say common let me add margin as say 20
39:21 - pixels so we can use the common BN in
39:24 - here like this but no not this common
39:28 - BN but the thing is this is uh okay
39:33 - number is not assignable type of
39:35 - string common B this should
39:38 - be like this in camel
39:43 - case now we can just remove this add
39:48 - this and if I cut this and paste it
39:52 - inside of this string like here this
39:56 - should work but it is not so let me
39:59 - check here sty upload menu okay if I
40:03 - remove the entire thing in here add this
40:06 - it is working what if I
40:09 - add one more curly bracket and add it
40:12 - here yes it is working
40:15 - so it is working so save it here and yes
40:18 - we have 20 margin add a file create a
40:22 - folder let me just change the button for
40:25 - folder so if I come here we have all the
40:28 - buttons here so let me
40:30 - choose this outline but for
40:32 - primary so if I CH if I check this we
40:37 - have PN outline
40:40 - for outlined
40:42 - button so I can just pass it in
40:46 - here and if I check it is now
40:49 - outlined but the color is not properly
40:53 - visible on black so I guess
40:57 - what can we do if I come down sorry
41:01 - success let me try this one called
41:04 - success BTN
41:06 - success so just add them it is now here
41:11 - add a file add a folder so the thing is
41:15 - this is looking good in here so why
41:19 - don't I remove B primary add this here
41:23 - remove this from here as well to have
41:26 - have this button which is looking very
41:28 - good we have add a file and uh create a
41:32 - folder
41:34 - functions so what should happen is if I
41:37 - add a file the file should be outside
41:40 - any folder that should be visible in the
41:44 - like in the homepage so in the fire
41:47 - store database we should have the
41:51 - file like directly uploaded with the
41:55 - link so so in order to upload a file we
41:58 - need a function from fire store so if I
42:01 - let me just initialize Firebase for now
42:04 - because I have not done that so if I
42:07 - just make a folder and Source called
42:10 - Firebase config do
42:13 - TSX and
42:15 - now come to settings in the app project
42:20 - settings come down let me install
42:25 - Firebase let me just install this
42:28 - meanwhile grab this things and paste it
42:31 - here so we have to remove the comments
42:33 - yes let me wait it for let let's wait
42:37 - for it to finish meanwhile I can have a
42:39 - sip of water H2O why it is taking so
42:44 - much
42:45 - time let me create two variables called
42:50 - storage equals
42:52 - to get
42:55 - storage let me delete this first let me
42:58 - boot get storage okay from Firebase SL
43:04 - storage and the thing we have to import
43:07 - is get storage I
43:09 - guess now let me close this one not
43:13 - collapse this close this so get
43:17 - storage app by the way not export
43:21 - storage export con storage it is a
43:23 - variable that we have to export we have
43:25 - to export this as well app now the third
43:29 - thing we need is the database export
43:31 - const database equals to get fire store
43:37 - we need to import this as well I don't
43:39 - know automatic Imports are not
43:43 - working fired store no if I just add it
43:49 - Firebase SL
43:51 - storage and the thing is they should be
43:55 - not storage sorry Firebase SL fired
44:02 - store yes get fire store should be here
44:06 - while we pass the credentials this
44:10 - credentials now in the let's
44:13 - say in the pages let me
44:16 - import this
44:18 - app or do we need to import it I don't
44:21 - think we need to import it let me now
44:25 - come to the server folder in the server
44:30 - we have
44:30 - dbts also
44:33 - O.S so I don't think we need these
44:36 - things
44:37 - because we are not using Prisma so let
44:42 - me create a file here
44:44 - called fir store.
44:48 - TSX let me close the
44:51 - O let me close button interface upload
44:55 - module
44:57 - homepage or in here let me
45:01 - import things from the Firebase config
45:05 - file which is storage app and
45:08 - database
45:10 - import I mean import
45:14 - storage from Firebase config also app
45:18 - also what is the name of the database
45:21 - instance it is
45:22 - database so import these things
45:26 - now we need a function here called
45:28 - export const default just let me make
45:32 - the function export
45:35 - default uh what should we export const
45:38 - let's say fire store this will take
45:42 - request and
45:44 - response sorry request comma response so
45:50 - we need to add the type here so if I
45:52 - check
45:54 - db. we don't don't have anything in here
45:57 - if I check
45:59 - .ts we need to have like some
46:03 - authentication things here like I mean
46:06 - the what can we say the request and
46:08 - response things
46:10 - so it is not
46:13 - here it is just for
46:15 - o okay in the server we are having wait
46:18 - a second server pages okay in the sorry
46:22 - I'm doing it I think wrong this file
46:25 - should be not should not be here because
46:28 - it is for authentication only just come
46:31 - to
46:32 - API just come to
46:34 - here still we don't have anything in
46:36 - here so okay o i mean API let me make a
46:41 - folder here called fir store.
46:46 - TSX
46:48 - TSX let me add the things here we need
46:51 - to
46:52 - have just
46:54 - do
46:57 - request let's say do
47:00 - name thing is we have to add type of the
47:04 - request so what can we do in that case
47:08 - what will be the type of request or
47:10 - response we need to import two things
47:13 - here for the type of request and
47:15 - response which is next API
47:19 - request
47:21 - comma next API response so in the the
47:25 - next API request we have to add type for
47:28 - the request and the response will be in
47:31 - the place of R so the name does not
47:34 - exist so we can just close it or remove
47:36 - it we don't need to console this we just
47:40 - need
47:41 - to export the function
47:44 - defaulty so we can say export
47:47 - default this does not work like this so
47:52 - we can remove export keyword from here
47:54 - and at the bottom we can say
47:58 - export
48:00 - default fir store so let me just do a
48:06 - RDS do status of
48:10 - 200 and Dot we can say
48:14 - Json and we will return let's
48:17 - say text as
48:20 - hello
48:22 - VA so if I just do in the browser Local
48:28 - Host 3000 SL API slash this fire store
48:34 - not fire at store I mean uh what can we
48:37 - say what is the APR out here yes it is
48:39 - fire at
48:41 - store so we can say fire store we will
48:46 - see the text are called hello world if I
48:48 - zoom this you can see it as well so this
48:52 - is how we can create API in XJ let me
48:55 - come over to the this component called
49:00 - upload
49:01 - files let me make a function here called
49:04 - upload file let me make a state here
49:09 - called file set file equals to use State
49:13 - use State we can have a object because
49:17 - that's what we have the format of the
49:19 - fight so if I click this button we can
49:24 - have on click event
49:26 - and we can simply set the file so it
49:29 - will return us a param so we can simply
49:33 - set event. Target it will add it now
49:38 - this is inside the file we have to
49:40 - destruct destructure this let's
49:43 - say files okay one second in let files
49:49 - equals to this file but if I just let me
49:54 - just do a conso of this first one second
49:58 - I am doing it wrong this should not work
50:01 - like
50:02 - this
50:03 - because what should happen is if I click
50:06 - the button we should open
50:09 - a file choosing option
50:13 - so we have to add that also let me add
50:17 - an input in here
50:20 - input and it will be type of file this
50:24 - is what we have here do we have file
50:28 - input types here so if I search input we
50:31 - will have text input so if I search File
50:35 - input we can have these things like we
50:38 - can use them as
50:40 - well so what should happen is if I click
50:43 - add a file we should see one of
50:46 - these let me get the jsx for this and it
50:51 - place this we have choose a file but
50:55 - this should should be let's say after
50:57 - the button in here this will be only
51:00 - visible when the or one or some state is
51:05 - true so what we can do is create a state
51:08 - here called uh is file visible
51:14 - visible set
51:17 - file visible equals to use state so it
51:21 - should be
51:23 - false now when we click the button
51:26 - this
51:27 - button this function or this yes this
51:30 - function called set file visible will
51:32 - turn to negation so on click we can just
51:38 - do set file visible to negate this file
51:43 - visible now we have doing we are doing
51:45 - this here so we can just add this input
51:50 - as a condition if this is true only show
51:53 - the input else show nothing one
51:57 - second what is wrong
52:00 - input one
52:03 - second this should have a question mark
52:05 - here now it's fine click it it is
52:08 - visible get again it is hidden now or
52:13 - what we can do
52:15 - is this yes so if I choose a file one
52:18 - second what happened if I chose a file
52:21 - we should run this function called
52:23 - upload file so so one second when we do
52:28 - on change here on
52:31 - change in here this will just set the
52:34 - file as event.
52:37 - target. files
52:40 - Z we can have event in here save again
52:45 - this is causing some issues so we can
52:47 - say as
52:50 - string no I think not here outside no
52:55 - will not
52:57 - work what is the issue here if I hover
53:01 - this it is
53:04 - null so I think we should not use string
53:07 - we should use an object no still not
53:11 - fine possi it is
53:14 - null okay set file if I remove files
53:18 - from
53:19 - here it is perfectly working so I guess
53:24 - let me now
53:27 - okay one second I think what we can do
53:29 - is not have the set file in here just
53:32 - have this upload file passing the event
53:36 - at the top in the upload file
53:40 - function now we can just restructure the
53:42 - files from here so we can s let equals
53:44 - to event. Target and here we can have
53:49 - files the D structured property what we
53:52 - can do this event we have to add type in
53:54 - here
53:55 - we can have files variable inside we can
53:57 - store event. target. files. Z index now
54:03 - let's check it up open the inspect
54:05 - element if I just choose a file let me
54:09 - choose any file in the folder called
54:11 - photos let's say this file we're getting
54:15 - its data successfully we have to send
54:18 - this data to Firebase storage so to do
54:23 - that what we can do is
54:25 - create a
54:27 - function basically we will not create
54:30 - API for this because it is stough to
54:33 - send a image through a response that we
54:36 - can use in Firebase storage so basically
54:41 - it's not tough it is I think impossible
54:44 - so make a file or a folder here called
54:47 - API in this we can make a file called
54:50 - let's say file upload. TSX
54:56 - let me grab this function or not a
55:00 - function let me pick first let me make a
55:02 - function called export
55:05 - const file upload which will be an aror
55:08 - function so we need these things from
55:12 - fire
55:14 - store not fire store Firebase so let me
55:18 - import them at the top so we need
55:21 - storage app and database basically I
55:24 - think think we don't need database for
55:28 - now so let me just grab these things add
55:31 - them here okay we need to uncomment this
55:35 - stuff so we need a file so we will get
55:38 - the file from params so let me make the
55:42 - file type as any here because who will
55:45 - type this stuff and also this should
55:49 - be console log of download URL fine now
55:53 - we have to call this file upload
55:55 - function here so we can just do import
56:00 - file upload from this
56:03 - route pass the files in here so when we
56:08 - pass the files basically it is let's say
56:13 - let make this as
56:15 - file we pass a single file while we
56:18 - choose
56:19 - it okay let me close this so yes which
56:23 - we will choose a file
56:25 - here and it will come up in the console
56:30 - after it gets uploaded so let me open
56:33 - the console choose a file let me choose
56:37 - this file here we are seeing the
56:39 - percentage of the files 600 and then we
56:43 - have the
56:44 - ardl so as soon as we have the ardl we
56:48 - can store that in the fire store so to
56:52 - do that we need functions from fire
56:56 - store so we can make fire store.
57:02 - jsx sorry TSX not jsx in here let me
57:06 - export a function export con we can say
57:12 - add files which will be an aror function
57:16 - so we can just do
57:19 - import uh we can say
57:22 - fire base no I think it is the database
57:26 - from the Firebase config so we have this
57:29 - let me also import a few things
57:32 - called or which
57:34 - are collection and add dog this thing
57:40 - these two things so we have collection
57:42 - and add dog so collection will be to
57:44 - create a collection for our database so
57:46 - we can select uh we can say files equals
57:50 - to
57:52 - collection and we will just just have
57:55 - the database and the collection name so
57:58 - collection is basically a table for our
58:02 - data which is the files files table so
58:06 - in the add files we can have ADD
58:09 - doc then we have to pass files and our
58:14 - data so our data will be image
58:18 - link so we can say image link as image
58:22 - link that we will get from from par so
58:26 - we can just ructure it from here this
58:29 - will be a
58:30 - string to make it a string let me have
58:33 - this in a try catch in order to avoid
58:38 - errors so just let me cut this add it
58:41 - here and have a cat
58:44 - Block in order to have if we have issues
58:48 - this will show up in the
58:50 - console
58:52 - err now we are going to add sorry we
58:55 - have to call the function in the
58:56 - function of file upload so let me import
58:59 - it and by the way we don't need app and
59:02 - database in here so remove them so yes
59:05 - we need
59:06 - import add files from
59:09 - API I mean Pages slash one second yes I
59:14 - think this is the one
59:16 - API wait it's not in the pages so we
59:20 - have to change it so at the rate SL API
59:24 - SL
59:26 - fired
59:28 - store so okay this should
59:32 - be uh not a default input now when we
59:36 - file upload when the file upload
59:38 - completes we will call the function
59:40 - while passing this image link so it will
59:44 - run and upload the image in the fire
59:46 - store database so let me give it a try
59:50 - add a file let me choose this let me
59:52 - upload any file let's say this file
59:55 - let me open the console for the
59:56 - percentage it is opening I mean coming
60:00 - here we have till 100 and now if I check
60:04 - fire store we should see the image Link
60:07 - in here for the image that we just
60:10 - approached see we are getting it here
60:13 - now the next thing we need is to like
60:15 - add a blogas bar so let me go to on
60:20 - design
60:22 - again components sech for Progress we
60:27 - can also come to dyy and search if do we
60:31 - have any progress themed component here
60:35 - so where do I search it here I guess so
60:41 - progress I think yes we have it
60:45 - so let me create a component for
60:47 - progress in the common folder I don't
60:50 - think we have installed art design so I
60:53 - don't know why I opened it so so in the
60:54 - common we can make a folder I
60:58 - guess that will be for
61:02 - progress in the progress let me make a
61:05 - file called
61:06 - index.
61:08 - TSX and one for the module if we need so
61:12 - we can say progress module. scss make a
61:17 - functional component in here make this
61:20 - as
61:22 - common progress so we can let me choose
61:27 - this green green one accent color let me
61:30 - copy any one of the what is happening I
61:33 - am not able to copy this let me copy the
61:37 - entire block paste it basically we will
61:42 - remove the others and we will have only
61:45 - one the value is minimum which is zero
61:48 - and the maximum is 100 let me just call
61:50 - common
61:52 - progress somewhere
61:55 - here in the upload files so we have the
61:58 - button and let me close this so let me
62:02 - have it before or after this line of
62:06 - choose a file so we can just have common
62:10 - progress in
62:12 - here yes we are seeing this but the
62:15 - thing is the width is too big for this
62:18 - so in this div let me have a Styles here
62:23 - first so import styles
62:26 - from this file progress. module. scss in
62:31 - the div we can give it a class name of
62:34 - stles do progress main copy this let me
62:38 - come over here progress main this should
62:41 - be width of let's say 80% or
62:44 - something maybe
62:46 - 90 yes 90 is fine let me add a margin
62:50 - top of 20 PX I think that that looks
62:55 - fine to me so we need to hide the
62:59 - progress initially so let me just create
63:02 - a state for the
63:05 - progress here
63:08 - const
63:11 - progress
63:13 - set
63:15 - progress equals to I mean you state say
63:19 - zero initial
63:20 - value we have to pass set progress to a
63:24 - file upload function so pass it let me
63:28 - come to file upload function get this
63:30 - seter
63:31 - function add the type as function now
63:35 - this function of set press will be in
63:38 - here when we are calculating our
63:41 - progress so do that now we have the
63:44 - progress now we need to hide this
63:48 - progress
63:49 - bar when it is zero so if it is zero
63:54 - show nothing else show this to pass
63:58 - progress for the value of the
64:02 - progress so this
64:04 - progress will come up here as
64:08 - props and we can simply sign progress as
64:11 - this so it is initially like zero so I
64:15 - think we don't need to hide
64:17 - it we can just have it here and see okay
64:20 - it will be like this so basically hide
64:23 - it all okay fine
64:24 - so we need to add a prop type from the
64:28 - interface so we can say let me come over
64:32 - here and say
64:34 - interface
64:37 - progress so the progress prop is called
64:40 - just the prog this will be a number now
64:44 - we can just copy the prog interface and
64:47 - add it in here like this now let me add
64:51 - a file let's say this one
64:54 - so we are seeing the progress bar which
64:56 - means file is getting
64:58 - uploaded and once it reaches 100 we have
65:01 - to hide it so to hide it we
65:06 - can just do
65:08 - this what do we need to hide
65:11 - it if I check so if it reaches 100 we
65:15 - have to hide so we can say if progress
65:18 - zero or progress equals to 100
65:24 - it will be hidden automatically so we
65:26 - can try this
65:28 - again this
65:30 - file it is getting
65:32 - uploaded this looks cool by the way very
65:35 - cool it's uploaded and the progress has
65:37 - been hidden and we can see the image in
65:40 - here
65:42 - fine so the image is here the files were
65:48 - uploading now we can show the files in
65:50 - the homepage in here I mean so we can
65:53 - close
65:55 - progress come to upload
65:58 - files one second no not here come to
66:02 - home index we have upload files so we
66:05 - can show it in here like make a
66:08 - component here called or first let me
66:11 - create
66:13 - it in the component so let me make it
66:17 - as show
66:21 - files one index we need and one for
66:25 - module CSS so we can say so files
66:31 - dot module do
66:35 - scss so make this a functional component
66:39 - show files import the module of CSS or
66:44 - scss import
66:47 - styles from this file now let me import
66:51 - this here so we can say show
66:55 - files you will see this in here now we
66:59 - need a function to get all the files so
67:02 - we can make export
67:05 - const get files we have the files in
67:09 - here we need function
67:11 - called on
67:14 - Snapshot okay so basically I should not
67:19 - have this here let me create a hook for
67:22 - this a custom
67:25 - H so because the on on Snapchat function
67:30 - is not a API function we can just call
67:32 - it in our client site so we can say use
67:37 - or let's say
67:39 - fetch we can say
67:42 - files.
67:44 - TSX here so just like we have it here we
67:49 - can make a function to
67:51 - export const
67:55 - fch files which will be an aror function
67:59 - in here we can have on Snapshot from
68:01 - fire store we have to pass our reference
68:04 - the reference is let's say the
68:07 - files so we can just let me close the
68:12 - files that we don't need like file
68:13 - upload no we don't we we we need that
68:16 - need that we don't need use session okay
68:20 - we have to add it here as this we need
68:24 - section one sec not here
68:26 - sorry in here we need the files getting
68:31 - passed in here you also need collection
68:34 - from fire store so add
68:36 - it this will take a second bam which is
68:39 - a response and this database is not also
68:44 - here so let me get it from Firebase
68:47 - config let me also make a state here so
68:50 - in I mean const say file list
68:56 - set file
68:58 - list equals to use State we can just
69:02 - have an array okay we need a use effect
69:05 - hook in here also so we cannot afford to
69:08 - run it every time we Mount the component
69:12 - we need to destroy this so we can return
69:16 - on Snapshot and these things also let me
69:19 - add the dependency array so we can call
69:23 - fet files in the not file upload in this
69:28 - file called show files
69:31 - import
69:32 - fetch files from
69:35 - this so let me just let me close this as
69:39 - well let me return something called like
69:43 - this file list so we can just have let
69:48 - file list equals to fetch
69:51 - files fine it should be
69:55 - empty so if I just console. log this
69:59 - fetch files it will be empty because we
70:02 - are not setting it the array is empty so
70:06 - let me open the console if I
70:09 - refresh we are getting a query
70:12 - snapshot inside we have docs so let me
70:16 - do response do docs then let me map
70:20 - through this item can return let me D
70:24 - structure the item. data and also have
70:27 - an ID prop property mean I mean which is
70:31 - the item. ID now we'll see the data in
70:34 - here okay so if I just move this outside
70:38 - let's see what happens it will still
70:40 - work I don't know why it was not working
70:42 - before but if it is working it's fine
70:45 - set this in here set file list okay that
70:49 - is the issue this is having an image
70:51 - link and the ID in this State here so
70:55 - make an object let me add image link
70:58 - which is an UT string comma ID also an
71:00 - UT string okay save this this should
71:04 - work but it is not like what is the
71:07 - issue here ID string this is not
71:09 - assignable to set State action and blah
71:11 - blah yes so what we can do is come to
71:16 - interface make an interface here called
71:19 - we can say array array type this we need
71:22 - to make and and in here just set it to
71:25 - UT so let me now come to this use
71:30 - State have a cly bracket and add the
71:33 - array type in here this will fix this
71:35 - issue so the file list that we're
71:38 - getting in here in the div let me make a
71:41 - function for mapping so file L do map
71:45 - say
71:46 - file but it is still having an issue
71:50 - array type does not have the
71:54 - map this is difficult for me so let me
72:00 - just proceed with this so you can say P
72:04 - or not a p an image tag first make a div
72:08 - and just have this like what is this an
72:13 - image okay we need an image tag sorry
72:16 - let me have an image tag from in here
72:20 - from
72:20 - Tailwind search for let's say
72:24 - image we have Avatar no we don't need
72:27 - Avatar we need picture if do we have
72:32 - image I guess
72:34 - not let me check no we don't have it so
72:37 - basically just add an image source and
72:40 - add file
72:42 - dot what is the property image link now
72:47 - gave this a class name of basically
72:51 - styles do image link
72:54 - like let me come to this show files
72:58 - module so save this as well and we can
73:02 - see the files but we are not yes we can
73:06 - see the files here perfect now we need
73:11 - height the same because we want to make
73:14 - them as a square so make
73:17 - 200 and then object fit
73:20 - contain not contain cover fine this will
73:23 - be in squares like this images or
73:28 - basically
73:30 - files what about this issue property map
73:34 - does not exist in type of array type so
73:37 - if I come to interface add a map and
73:43 - make it a
73:44 - function what will happen Okay this is
73:47 - working but I guess we need to add a
73:50 - type in here as well so basically this
73:52 - is an object so make it as an object
73:54 - with the image Link in here I guess
73:57 - so yes
73:59 - perfect so we have done
74:02 - this let me now come to or give this
74:06 - Diva class name of we can say Styles dot
74:10 - we can say we can say we can say
74:14 - files grid so in here we can say files
74:17 - grid display of grid grid template
74:21 - columns Auto auto and auto to show three
74:25 - in one row so we can make this as 300 I
74:29 - guess let me also add the width here no
74:34 - not width here should be add width width
74:38 - should be 70% what about
74:42 - this so we can just add a gap pile as
74:45 - well 20 PX between
74:47 - them okay not 20 let's say
74:51 - 30 let me increase the
74:53 - with to
74:55 - 80% what about 90 no this will not work
75:00 - basically we need to arrange them in a
75:02 - center so we can just have specify
75:06 - content Center okay we have to give the
75:09 - width as 100
75:11 - then now they are in the center fine
75:14 - perfect if I add one more Auto it means
75:16 - four Ino so this is the image that we
75:19 - are having here
75:21 - images but this should not be images
75:24 - this should be like we should not see a
75:29 - like a image here we have to make a
75:32 - div so make a div with the class name of
75:36 - files I mean this what is this styles do
75:41 - files let me commment
75:43 - this and let me style the files here
75:47 - this should be height 300 and width 300
75:50 - as
75:51 - well background color
75:54 - let's say accent or whatever this color
75:56 - is so if I just come to what font no
76:00 - this is the
76:02 - font so so so we can we can have colors
76:06 - here do we
76:08 - yes we have BG accent so we can use this
76:13 - so what is the code for this if I check
76:17 - accent
76:20 - color we have hsl then this
76:23 - okay we don't have the color code for
76:26 - this so we can just add them in here as
76:29 - well so just do uh template lit and BG
76:35 - accent let me wrap this entire thing in
76:39 - in like a we can say template
76:43 - literal make this as a like what is it
76:47 - make this as a
76:49 - string now let me have this and add
76:54 - it in here now it will be working let
76:58 - meit F font key so we don't need
77:02 - background color here so remove it so
77:04 - okay we are seeing this files with the
77:07 - BG accent okay but if I add background
77:11 - color as as let's say red this will be
77:16 - visible so we're not seeing anything
77:19 - because I think the color is not
77:21 - matching with this so we can try BG
77:25 - green
77:26 - this let's see no not
77:29 - working so I guess we need to add some
77:32 - colors from our own
77:34 - custom we can say like we have accent
77:37 - color we need to have
77:41 - the what I can say the background color
77:44 - of this so accent
77:46 - color code Tailwind okay we have this F
77:52 - perfect
77:53 - let me add a background color and add
77:55 - this color here we are seeing this but
77:58 - it is not like it's very bad so let me
78:03 - just have Excel or accent black what is
78:08 - this we just have accent or BG accent
78:12 - let me try this one I think this is
78:15 - fine now we need a we need one folder
78:19 - link or file link here so so whenever we
78:23 - click it yes so we need to make the cuts
78:26 - pointer so yes whenever we click the
78:29 - file or this link or this we can say the
78:33 - card we should open the file in a new
78:36 - tab or download it so let make the
78:39 - Border as rounded so
78:42 - border 10 PS not border border radius so
78:47 - yes we need a rounded sorry not rounded
78:51 - we need a part file what I'm
78:54 - saying we need a
78:57 - file icon so do we have icons in here no
79:01 - I think we need to install some Library
79:03 - so make
79:04 - it let's say add react icons in here
79:07 - simple save it so we need icon for file
79:11 - so search it in here so we need we need
79:16 - we need let's say we can add or use this
79:19 - one AI file or AI fill file text
79:24 - so come to show files import the icon
79:28 - from react icons SL AI then render it
79:34 - out here in this div now let me check we
79:37 - are seeing the icon but it is very small
79:39 - so make size as say 40 maybe 70 or
79:46 - 80 make it 80 it's not bigger now we
79:50 - have to center it so in the styles.
79:54 - files we can just do display of
79:57 - flex justify content enter align items
80:02 - now they are in the center it is in the
80:04 - center correct yes so when we click any
80:07 - file here we should be opening a new tab
80:11 - with the link so the link is
80:14 - simply this let me commment this file.
80:17 - image link so make a function here const
80:21 - open file
80:23 - this will receive a let's
80:26 - say we can say a parameter called
80:30 - file
80:32 - link which will be a
80:34 - string we will use window.
80:39 - open and string I mean this file link
80:43 - and in a new tab so we can say what do
80:46 - we have to open it a new it open it in a
80:49 - new tab Target okay let me just
80:53 - first hook this up with
80:55 - the I with this diff so on click open
81:00 - file and we need to pass this as a call
81:03 - back with
81:05 - the uh file. image link save it click it
81:11 - yes so it is opening in the new tab
81:13 - already so we don't to we don't need to
81:15 - worry about that so it's working we can
81:19 - also show the file name in here but we
81:23 - don't have the file name in the fire
81:26 - store so let me add it so we are saying
81:30 - or we are sending the file to the file
81:33 - upload so when second where are we okay
81:38 - where are we doing this so we have files
81:42 - in here file upload we are having here
81:44 - okay add files it is taking downlo
81:48 - URL where is ADD file it is here let me
81:52 - add add image name so the image name we
81:56 - have to pass from
81:58 - somewhere so we have the files or the
82:02 - file here let me just open it again the
82:05 - file pro do
82:08 - this so we have file so we can just also
82:13 - share
82:14 - file do name for the file
82:18 - name so we have to get the name
82:21 - here or we can say
82:24 - image name as a
82:26 - string then pass it here sa the both
82:31 - files and we can try again let me just
82:34 - delete the entire collection for now let
82:36 - me create a
82:38 - file this one it is getting uploaded and
82:42 - once it is done you will see the file in
82:44 - here now as I said that I am need to add
82:48 - the name of this so that file was upload
82:53 - files no show
82:55 - files let me add a P tag and just
83:01 - do this let me just check the we can
83:05 - just
83:06 - say file dot not image link the other
83:10 - property which
83:12 - was this image name so this image name
83:17 - we have to D destructure from file as
83:19 - well like the type like this so we will
83:23 - see the name which is image this
83:27 - jpg so we can align them properly first
83:34 - so we are having the style of files okay
83:36 - come over here we can just make FX
83:40 - direction as
83:42 - column let me also add gap of 30 or 20
83:46 - PX Mine by the way this should be after
83:49 - the image icon now it's perfect
83:53 - if I open it it will open up in a new
83:56 - window I mean a new tab in fire base I
83:59 - mean in the Chrome browser so we have
84:02 - the files here now what we have to do is
84:05 - create
84:07 - folders this is the folder that we are
84:09 - having this button so we can have files
84:12 - inside the
84:14 - folder and we can have folders inside a
84:17 - folder like nesting folders so that will
84:20 - be a little tricky so so where is the
84:23 - create folder button we have upload
84:26 - files let me come to this we have the
84:29 - button of okay we then this is common
84:33 - progress yes this button is for create a
84:36 - folder let me make a function called
84:40 - upload folder which will be an arrow
84:43 - function again upload folder will run
84:47 - when we click the buttons on click load
84:50 - folder so what do we need need to create
84:53 - a folder in here so we just so we are
84:57 - having the image link and image name in
84:59 - here we can have this type of payload so
85:02 - let me make payload
85:04 - as folder name so we need the name of
85:08 - the folder so when we create this we
85:11 - should see input element or an input
85:14 - element just like we are having this so
85:17 - if I come
85:18 - to this dazy Y and search for inputs
85:22 - text input let me grab an input
85:26 - like accent input grab this jsx do we
85:30 - have input common file no let me create
85:35 - it so or maybe just let me have it
85:40 - here one second we are having an issue
85:44 - let me comment this for
85:46 - now commment this save this now add this
85:51 - here
85:52 - so we are having this name create folder
85:56 - so we can type a folder name in here
85:59 - maybe I need to make the width as say LG
86:04 - I think the width is full so again we
86:08 - need to show the input when we click
86:11 - create a folder and we need to hide it
86:14 - when we click it
86:15 - again so we can have const is folder
86:21 - visible
86:23 - set folder
86:26 - visible use State
86:29 - mty let's say not empty basically a
86:32 - false
86:33 - value now this false will change when we
86:36 - click the button so we have upload
86:40 - folder the thing is we can't have this
86:43 - here first let me just do a arrow
86:46 - function call back function and set it
86:49 - to negation if it is true it will be
86:52 - false if it is false it will be true now
86:56 - we need to just do if it is true show
87:00 - the input else show
87:02 - nothing now click create a folder it
87:04 - will be showing up here and so on now we
87:08 - need a state for the input value so we
87:11 - can
87:12 - say folder name set folder name equals
87:19 - to use state mty so copy set folder name
87:23 - let me come to this input and have an
87:26 - onchange event this will take the event
87:29 - as parameter event param and then we can
87:34 - set event. target. value in here done
87:39 - now this folder name will come up in the
87:41 - payload of this upload folder and this
87:44 - will when should we run the folder maybe
87:49 - also create a button here to upload it
87:52 - or to create it so let me have this in a
87:56 - fragment let me have one more button
87:58 - like this let me remove this or just
88:03 - remove this yes and have this upload
88:06 - folder function in here and just have
88:12 - create make this as add a folder first
88:15 - we have add a file and add a folder this
88:17 - function or the button will create it
88:20 - with the payload so we need the folder
88:22 - name we have done this when it is
88:27 - folder which
88:29 - means is it a folder or a file so this
88:31 - should be true because it is a folder we
88:34 - need the file list inside it so we can
88:37 - say empty array for now now we can add a
88:40 - function in the fire store just like we
88:43 - have add files let me replicate this
88:46 - make this as
88:48 - add folder let me gra this function fun
88:52 - in here we have let me import add
88:56 - folder and we can call this function in
88:59 - here add
89:01 - folder with passing the payload in here
89:05 - so let me pass or get the payload which
89:07 - will
89:08 - be having this things called This is
89:11 - having the folder name which is a
89:15 - string then we have it folder aen value
89:20 - then we have this one called called file
89:22 - list which is an array save but we need
89:26 - an object type not an array fine so we
89:30 - need the folder name as folder name is
89:34 - folder as this folder file list as file
89:39 - list but the problem is we need to have
89:43 - payload do folder
89:46 - name payload do is folder and payload do
89:50 - file list
89:52 - fine so this is done we will simply call
89:55 - the function and do these things in the
89:58 - tri block
90:00 - so one more thing I want to do is this
90:04 - should be having one more we can say
90:07 - prop which is is
90:09 - folder this will be false because it is
90:12 - not a folder it is a file FS e false so
90:17 - let me create a
90:18 - folder name this as uh watch should we
90:22 - name it folder one click
90:26 - create so we will have this folder here
90:29 - so if I check we have the image and then
90:33 - we have the folder file L is an empty
90:35 - array folder name is the folder one so
90:39 - now we have to come here not here in the
90:42 - show files we need to we need to just
90:46 - make a difference between these two
90:48 - these things so by the way one second
90:51 - and okay this is a AI fi file text so if
90:57 - the file if the file dot what is the
91:01 - name uh is
91:04 - folder if it is true it means it is a
91:07 - folder so in that case we need to show a
91:10 - folder icon so let me open react
91:13 - icons search for a folder icon here so
91:17 - we are having an AI fill file text
91:20 - similarly we can have
91:22 - AI fill folder now we have to just
91:26 - render it out let me give a colog okay
91:31 - this should be also in here which is a
91:34 - Boolean value so how do I type Boolean
91:37 - let's say false this folder should have
91:40 - the size of let's say 80
91:43 - also
91:45 - and we also need to do the same thing in
91:47 - here so basically cut the file name add
91:50 - it here with a fragment and just add the
91:56 - same name here with a
92:00 - fragment but the name of the folder here
92:03 - will be like folder name not file name
92:06 - so this should be that in there the
92:10 - folder
92:12 - name save this okay we have to also add
92:15 - it in here also
92:18 - empty now we'll see folder one and and
92:22 - this one as the image so we have a fun
92:24 - folder and one image we have now let me
92:28 - just decrease size of the files it is
92:30 - too big for us make it 200 this looks
92:34 - perfect and by the way we don't need to
92:37 - align them in the
92:38 - center just leave this again not
92:42 - here this should be not
92:45 - Center this will then cause issues so we
92:48 - need them on the left side so
92:52 - why don't we make Auto
92:55 - auto one more Auto one more Auto one
92:59 - more Auto fine so this is the issue okay
93:03 - 1 second this should be 200 as I made it
93:06 - before
93:07 - 200
93:09 - fine so we need this on the left so we
93:12 - can say align justify content Flex start
93:15 - this will not have any margin on the
93:17 - left so if I say margin 30 BX okay this
93:21 - looks better
93:23 - now then make Gap as 10 okay not working
93:28 - so margin what about padding that will
93:32 - come up in
93:34 - this file so say padding 20 PX no maybe
93:39 - just add them here yes this looks better
93:42 - now and don't make it 20 make it 30 now
93:46 - it's fine what about this one like we
93:50 - can use it like this it this forend us
93:52 - so we can say
93:54 - repeat say 6 comma
93:59 - Auto what about if I make it
94:02 - to think that works like this or maybe
94:07 - we can add Auto and then four no this is
94:13 - properly yes I think that's
94:17 - working let me make one more folder here
94:19 - called folder two click
94:22 - create okay this will be here so make it
94:25 - seven so that we can have seven or let's
94:28 - not make seven make it
94:30 - six six item in one row so make folder
94:34 - three
94:35 - now then make four okay we don't have
94:39 - the space for the six folder so make it
94:42 - five let's see what happens this
94:45 - will overload the page so basically make
94:49 - it five in one row now now it's perfect
94:53 - if we are doing this so we can remove
94:54 - padding and make align items as Center
94:58 - no maybe make
95:00 - it supp content
95:03 - Center yes now it works perfectly fine
95:06 - so we have this kind of stuff okay we
95:09 - have Gap okay okay make a margin top of
95:14 - 30 PX maybe not 30
95:17 - 60 yes that looks fine we have folder 1
95:21 - to
95:22 - five also we need to clear the input
95:25 - when we create a
95:26 - folder so we need to add a value prop
95:31 - this should be equal to folder name add
95:34 - it now we need to clear the set folder
95:38 - name when we add a folder so we can just
95:42 - do as a empty string let me add a six
95:45 - folder folder six create it will be here
95:48 - like so this is done yes we have all the
95:51 - folders and file let me create a file
95:54 - here one more thing that I want to do is
95:56 - when we choose a file we need to clear
95:58 - this as well like this input so I mean
96:02 - not clear it hide it so in the upload
96:05 - files when we do this like uh what is it
96:10 - set folder visible to this so make this
96:15 - as an function like this with where we
96:18 - can have multiple things so set file
96:21 - visible will be false when we click
96:26 - this and when we click the file
96:31 - button this is here this will turn the
96:35 - folder visible to false so this is the
96:38 - folder visable false in here we have
96:42 - file visable to false now let me give it
96:45 - right refresh click add a file now click
96:48 - add a folder this will hide click click
96:52 - add a file folder input will hide so let
96:55 - me choose a file here let's say let me
96:59 - choose some file in downloads
97:03 - folder let's say my image like
97:06 - this we are seeing the power of progress
97:10 - and once it is finishes once it finishes
97:14 - we will see the image in here we can
97:16 - also
97:17 - show the image here so like not have the
97:23 - icon of the image just show the image
97:26 - only so if it is a file we can just have
97:30 - the image tag in here but we have to add
97:34 - the styles of image link we can say
97:37 - width 100 PX that's
97:41 - perfect height 100 PX as well object fit
97:46 - cover now this is a file so we can just
97:49 - have border radius 10 pixels perfect we
97:53 - have the images in here now if it is an
97:56 - image now we have the facility to upload
97:59 - files and folders now let's target how
98:02 - to add nesting folders so if I add a
98:05 - folder let's say folder one let's say
98:08 - that we added it like a folder one we
98:11 - can go in the folder and create one more
98:15 - folder then we can go into that folder
98:17 - that we just created and create another
98:20 - folder inside that and the same is true
98:22 - with files so first of all let me change
98:25 - a few things here for example let me
98:28 - make a folder here called folder one
98:31 - click create it is here but if I click
98:34 - it it will take us to the new page here
98:37 - that we are targeting in here wait a
98:40 - second it is in the show files in here
98:43 - so if I click it it will just open the
98:46 - file Link in the new window even if we
98:49 - have no file links because in case in
98:51 - case we have a folder we have to change
98:53 - it so what we have to do we are having
98:56 - this div here we have to just move it
98:58 - inside the file is
99:01 - folder like do this here let me remove
99:05 - this fragment save one second I think
99:08 - something is wrong okay we need to
99:11 - remove this one as well so do this the
99:14 - same thing like we can do in here
99:16 - replace the
99:18 - fragment with this div
99:21 - fine so this one is we are having for
99:25 - the folder so we will not do this so we
99:29 - can just comment it out for now we'll
99:31 - only open the link in the new tab if it
99:35 - is a image not a folder so for a folder
99:39 - what we have to do let me create a page
99:41 - here that will be known as Pages sorry
99:45 - not Pages folders We will make a dynamic
99:48 - routing in nextjs so if I make this as
99:51 - folder. TSX make it a functional
99:54 - component name should be folder here
99:58 - fine let me now return this in the show
100:01 - files so
100:02 - Import Show okay we don't need to return
100:05 - sorry it's not a component it's a page
100:09 - so we have to go to this route so if I
100:13 - go to this route called SL
100:16 - folder we will see folder text here
100:19 - coming from this that is is a great
100:21 - thing about nextjs it means or I mean
100:24 - that we have the option to just create
100:27 - pages and it will serve as a route we
100:31 - don't need to create routes here so yes
100:33 - so as I said when we click the folder
100:37 - let's say this folder here we should be
100:39 - on that page so we need something called
100:44 - use okay it is use router yes correct
100:49 - from next router let me create it
100:52 - instance so
100:54 - const router equals to next or not next
100:59 - use
101:00 - router see similar to what we have in
101:04 - react so when we click this we should
101:08 - just go to this file not file yes a file
101:15 - that is
101:16 - called folder so make folder here but
101:19 - the thing is we need router. push I
101:23 - think yes now if I click the folder we
101:27 - will be on this folder page but the
101:30 - thing is we need to pass a few extra
101:33 - things as well that is called the ID of
101:36 - this folder so let's say what I am
101:40 - trying to say here is if I click the
101:43 - folder we should be on this page with
101:45 - the ID of the parent folder so if I am
101:50 - creating a folder in here that means we
101:54 - can only show those folder with the ID
101:57 - of the parent folder so we will I will
102:00 - explain it later it will make much more
102:03 - sense so how to pass the ID here so we
102:08 - can just change this to template
102:12 - literals and just give a question mark
102:16 - say ID equals to the actual ID that we
102:20 - have to pass so the ID will
102:23 - be file do ID is it file yes file.
102:30 - ID so we have to also like add this in
102:33 - the prop type or in the what is it map
102:38 - okay one more thing let me do is if I
102:39 - open the console we are seeing that ugly
102:42 - message here let me show you this key
102:46 - key thing so in this parent if make key
102:49 - equals to five file do
102:52 - ID save it so if I refresh this error
102:56 - will go away now if I click the folder
102:58 - one we having the ID here let me come to
103:02 - folder and extract this ID so we can
103:05 - import the same thing that we had which
103:07 - is the router what is it use router
103:11 - sorry use
103:13 - router then let me just destructure or
103:17 - yes get the router
103:21 - equals to use
103:23 - router if I do uh console. log of
103:27 - router let's see what we see in the
103:31 - console so we are having this object
103:34 - which is having a thing called query so
103:37 - this should be somewhere here this one
103:40 - query so let me just get the
103:43 - query and in the query we will have the
103:45 - ID so also get it this ID fine let me
103:50 - store this as a parent ID equals to now
103:55 - we have the parent ID now let me change
103:58 - a few things in the upload files for
104:02 - example we have upload folder here we
104:04 - can add a parent ID which will be so
104:09 - this parent ID we will get from props so
104:13 - let me get it so if we are on the
104:16 - homepage let me just add it first and
104:18 - comment it out so if we are on this
104:20 - upload files let me show you if I just
104:23 - console the pet ID and then if I just
104:26 - come to folder let me call the upload
104:30 - files component here because we need
104:33 - that in here as well
104:36 - so import upload files from component
104:40 - upload files and then render it here
104:43 - return it here so we have to pass the
104:47 - parent ID so let me do that parent ID ID
104:50 - will be equal to parent ID okay so if I
104:54 - go to the back page the
104:56 - homepage make a refresh so initially on
105:00 - the Local Host 2000 the parent page the
105:04 - basic homepage it is undefined but if I
105:06 - open the folder we are seeing the ID of
105:09 - the parent that is coming from the query
105:11 - params from this top so we can use this
105:16 - to Simply send the send the folder to
105:20 - fire St so how can we do that so we are
105:23 - calling the upload parent and if I
105:27 - upload a folder they should send the
105:30 - parent ID with the payload so if I open
105:33 - upload folder function no add folder
105:36 - function let me check it
105:38 - out it is here so it is we need the like
105:43 - we don't need file upload for now we
105:46 - need where is it to have the parent ID
105:49 - as a string
105:52 - and then just add string as payload do
105:56 - parent ID okay so we can try this let me
106:02 - go back let me delete this folder from
106:04 - fire store we are on this page Let's see
106:07 - we are on where are we calling folder so
106:10 - it is just a page fine we have index so
106:13 - they are not
106:14 - related we're only having folder as a
106:17 - page nothing else correct
106:21 - because that can cause some issues we
106:24 - have we have add folder okay let me
106:26 - trigger this okay yes we only have one
106:31 - folder component not a component a page
106:35 - so let me delete this one this folder
106:38 - now let me add one folder on the
106:40 - homepage let's say let me just do this
106:44 - collapse that folder one let me click
106:48 - create so we'll see that we we are
106:50 - having this issue Firebase function at
106:54 - Doc call in call with invalid data so we
106:58 - have to fix that come to fired store or
107:01 - not fired store come to where upload
107:05 - files so we only send this parent ID
107:08 - when this is here so we can just do a
107:12 - pipe two pipes and make an empty string
107:16 - so if this is if it's undefined we will
107:19 - send this this string let's try it again
107:23 - let's say folder one now click create
107:28 - this is here reflecting in the database
107:31 - as well the parent ID is empty string
107:34 - now if I go into that folder and create
107:39 - another folder let's say nested folder 1
107:44 - we are seeing the ID of the parent which
107:46 - is our something see this is the ID and
107:50 - the same thing we're seeing here so
107:51 - click
107:52 - create it is here but we cannot see it
107:55 - because we need to
107:58 - like properly navigate I mean not
108:00 - navigate we need to get it so we need to
108:04 - just come to show files we are
108:08 - having okay not show files one second is
108:12 - is the current or the proper
108:15 - component wait a
108:18 - second we are having hook
108:21 - which files yes I think here we have to
108:24 - do the things so if I just do a console
108:27 - log off here give it a refresh it is
108:30 - undefined here okay is
108:33 - it no something is wrong so on Snapchat
108:37 - okay let me do one thing let me create a
108:39 - function here called get folders now let
108:44 - me just cut the function from here
108:47 - remove return
108:48 - statement add the get folders here and
108:51 - yes one more thing we are having the
108:54 - fetch files let me search where I be
108:55 - calling this I returning this so it is
108:58 - in here fetch files so this show files
109:02 - should also take this parent ID it's
109:07 - basically file dot okay let me just
109:10 - search this fetch
109:13 - files o one second no not here okay
109:17 - fetch files this is here we need to just
109:22 - have the ID I mean what is it item. ID
109:28 - if it changes we will call we will call
109:31 - get folder so file list let me check yes
109:34 - that will work file list we're turning
109:39 - here fine which okay show files yes this
109:43 - is the thing we need so if you come
109:47 - here let me this is missing the parent
109:52 - ID which is the home component so
109:54 - initially the upload files will have
109:57 - parent ID as empty
109:59 - string and this one also will be an
110:02 - empty string let me now add show
110:07 - files I mean add parent ID in show
110:11 - files D structure it pass it along this
110:15 - file list and if I do a console log of
110:18 - parent ID in the show file Let me
110:22 - refresh the page yes so I need to also
110:24 - call the fetch data I mean fetch
110:28 - component which is the let me see show
110:32 - files so if I search show files we are
110:36 - calling here with the upload files so
110:38 - let me
110:39 - close the things first let me start from
110:42 - the beginning like what I have to do
110:44 - here so we have the folder component
110:46 - basically not a component a page where
110:49 - we have top bar
110:50 - upload files and show files so we are
110:54 - calling show files with an
110:56 - empty uh with is empty uh
110:59 - property but here the parent ID will be
111:02 - equal to this parent ID now it will work
111:05 - like we also have to import show files
111:07 - so Import Show files from component show
111:11 - files we have done this now let me open
111:15 - show files here show files to files this
111:20 - one we are getting the parent ID from
111:23 - here passing it further to fetch
111:26 - files where is the fetch file hook we
111:30 - are getting it here so if I click folder
111:32 - one we are seeing the ID of the current
111:36 - parent which is r h and so on if I go
111:40 - back this will be empty if I click
111:43 - folder one we will see the ID of this
111:45 - parent like the next folder one should
111:48 - be inside the folder on so if I check
111:50 - the ID of folder one which is like r l h
111:56 - and something it is the ID okay it's not
111:59 - the ID of
112:01 - this so one sec if I am in folder one
112:06 - this is ID of yes it is the ID of this
112:09 - if I am in NE folder one we are having n
112:13 - i something yes so this is the ID of the
112:16 - N folder one so let me do this one sec I
112:20 - think it is wrong I guess we are having
112:24 - parent ID one sec I think I'm passing
112:26 - the wrong thing so if I come
112:30 - to this upload
112:35 - files no no no no no okay where is the
112:39 - base of this this if I am
112:44 - clicking this show files we are just
112:48 - okay this should be not ID
112:50 - should this be
112:52 - ID I think
112:54 - yes okay let's see how it
112:57 - goes what we need now is we are having
113:00 - the show file it is a little bit
113:03 - confusing but fine open
113:07 - the open
113:09 - this PCH files hook so when it changes
113:13 - the parent ID we will call get
113:15 - folders now all we need to do is just
113:18 - filter out our data from or using parent
113:22 - ID so make it a string it is a string
113:24 - that's
113:25 - why
113:27 - so first let me console so first of all
113:31 - what we will do is
113:33 - if parent ID is null we will simply show
113:38 - all the like we will show this
113:42 - thing the thing
113:44 - is we will not like directly show it we
113:46 - will have to filter as well so we can
113:48 - say f
113:51 - filter so show I mean show all the array
113:56 - items if item. parent
114:00 - ID is empty string so in this case in
114:05 - the homepage we will see only folder one
114:07 - because that is the thing only where the
114:10 - parent ID is nothing or empty string if
114:14 - I open this we will see nothing because
114:16 - now it is not empty so here we can make
114:20 - an L
114:22 - block and in here we can simply just
114:24 - copy this and add it here and here we
114:28 - can say if the parent ID or item do
114:30 - parent ID is equal to parent ID now in
114:34 - here we will see n folder one if I open
114:37 - this it will be nothing so now let me
114:40 - explain this what is happening properly
114:43 - so we are having folder one at the top
114:46 - level with the ID
114:48 - of EMP string in the parent ID field if
114:52 - I click folder
114:54 - one if I am if I click folder one again
114:59 - we are seeing n folder one with the ID
115:02 - of this one so the ID is of this parent
115:07 - ID like this is the ID of the parent
115:11 - that is why we are seeing this one here
115:13 - if I open it we will see nothing
115:17 - because because we don't have any folder
115:20 - with the ID of this NH and so on which
115:23 - is in the I mean here in the path param
115:26 - so let me remove this console Lo from
115:29 - here fine let me just
115:32 - add as one
115:35 - second as or just make this as any same
115:39 - thing we can do in here so that the
115:44 - warnings go away so refresh the page I
115:48 - come so this is not having any files so
115:51 - if we come back you will see nested
115:53 - folder one let me create one more folder
115:55 - here called
115:58 - nested
116:00 - folder okay sorry
116:02 - folder two click create it is here so
116:08 - let me make one more folder in the
116:10 - folder one that will be called sub
116:14 - nested sorry folder one let me click
116:18 - create so it is here if I go back come
116:22 - back to folder one we can see that here
116:25 - but it will be not visible in the N
116:29 - folder
116:30 - to now let's work on the files here or
116:33 - do we need to add any types in here no
116:35 - we don't so let's work on the files so
116:39 - if I
116:39 - open
116:41 - API fire store we are having add folder
116:45 - we also having add file so this will
116:47 - also have a a parent ID which is a
116:51 - string let me just pass it
116:53 - through in
116:55 - here like this now let me see where are
116:58 - we calling add
117:00 - files so this
117:03 - is here first so we have
117:07 - to get the parent ID in here so parent
117:12 - ID will be equal to let's say a string
117:16 - the type of the thing will be string now
117:19 - we need to see where are we calling file
117:21 - up load so that we can pass the parent
117:24 - ID here so we can just do
117:28 - this let me also add the type of this as
117:31 - a string but if I do as string will it
117:36 - work no this does not work so we have to
117:40 - create an interface come
117:43 - to uh interface in the index we can say
117:48 - interface folder structure parent ID
117:53 - string let me just grab this come over
117:57 - here and just announce this in here now
118:01 - it is getting the parent
118:03 - ID fine let me receive it here that we
118:08 - are doing so we have to pass it here
118:11 - like in the add files so add file
118:13 - functions where is
118:16 - it add
118:18 - file
118:20 - function we are having this in the fire
118:23 - store here so yes we are now getting the
118:24 - string as parent ID so we can try to
118:29 - create this but I think we need to also
118:33 - check the add files function where are
118:36 - we calling it the file output
118:38 - function so let me check we are calling
118:41 - it
118:42 - here with the parent
118:45 - ID we're passing it here fine so I think
118:48 - this will work so let's give it a try
118:51 - let me go to homepage let me upload a
118:53 - file here let's say this file 45 so it
118:57 - is here in the homepage but the thing is
119:00 - we are having the folder icon on the top
119:02 - so we have to hide this so I think that
119:05 - is an issue not an issue very minor
119:08 - issue here also we are having this issue
119:12 - is that says in upload files let me
119:15 - check in the folder upload files
119:20 - what is this
119:22 - issue string is undefined is not
119:25 - assignable to type of string so
119:26 - basically it can be undefined so what we
119:30 - got to do is come to
119:32 - interface interface where is it and just
119:36 - add this can be either a string or
119:39 - undefined value one sec string string as
119:43 - an array and utty okay this one add this
119:47 - as
119:47 - well one see second it is here yes
119:51 - correct now it's the is not here so
119:54 - close this so where where we we are
119:57 - having the okay I think we are having
119:59 - new issues this is a payload this is the
120:03 - issue that I want to fix like if I open
120:09 - interface let me remove these
120:12 - things now okay let play it that fine no
120:17 - problem so yes we have
120:19 - remove this folder icon in show files we
120:24 - are having this folder icon in both of
120:27 - them so it is not needed so we can
120:30 - remove this and by the way this parent
120:33 - ID we are having we also need to add the
120:35 - interface name which was
120:37 - folder structure save it now let me okay
120:42 - I think
120:44 - this we have removed the folder icon
120:47 - from the wrong place this should be here
120:50 - correct we have the file in the folder
120:52 - so click file it will open up in a new
120:53 - window or a new tab now let me open the
120:57 - folder one so we will not see any file
121:00 - so let me add a file on this
121:02 - level so we can just have let me just
121:06 - add any file like this
121:08 - file you will see this progress and soon
121:12 - as we upload or it is uploaded the file
121:16 - will be here click it it will open up in
121:19 - a new tab now click folder one we have
121:23 - no files choose a file in
121:26 - here any file let's say this file wait
121:30 - for some time and it will be uploaded it
121:33 - is here see this image so it is in the
121:37 - sub it is in the N folder
121:39 - one it is not in the it is not in the N
121:43 - folder tool open it we will see nothing
121:45 - no folder or no files fine
121:49 - that is how we handle nesting one more
121:53 - thing we are having the top bar here
121:56 - which should be in the pages folder as
121:59 - well just like we have it in the home
122:02 - component so where is the home
122:05 - component yes so just let me have top
122:07 - bar in here in folder at the top let me
122:11 - put top bar if I now go to any nexted
122:13 - folder top bar will be visible perfect
122:18 - now what is this isue I am not getting
122:20 - like this one type string is not
122:22 - assignable to type of
122:24 - string upload files let me open that
122:29 - upload files what is it component
122:33 - upload files component this is a string
122:38 - so if I make this as a
122:39 - string that will go away because now we
122:43 - declaring that this is a string yes that
122:46 - is how we can fix it fine now one more
122:49 - thing I want to do is so we are having
122:52 - all the folder and files in here that we
122:55 - log out it will still see these things
122:58 - so we have to hide them we cannot show
123:01 - the files and folders if we logged out
123:04 - so if I come to say AB do I mean index
123:11 - we having home component let me open the
123:15 - home
123:16 - component so it's if the home component
123:19 - is okay one sec we have this use session
123:24 - let me search it we are calling this in
123:26 - the top bar let me also call this in the
123:30 - folder here import this use session from
123:33 - this route so import it then what we
123:37 - have to do check for session if it
123:40 - exists show the image else sure
123:44 - nothing so we can just do if
123:50 - session is true return this save so okay
123:55 - one sec top bar should be there as well
123:57 - like let me just def this back we only
124:01 - need to hide the top bar not no we we
124:03 - only need to hide these things upload
124:06 - files and show files so if session is
124:10 - true it means we are logged in show this
124:14 - else show nothing okay when is show here
124:18 - we need to wrap this in a fragment this
124:21 - should be here okay one second again
124:23 - what is the issue save it okay let me
124:28 - just
124:30 - cut these things one
124:33 - second what I am doing wrong here so if
124:36 - f is true let me cut
124:38 - this okay show this I think I added the
124:41 - fragment this should be in here if it is
124:44 - true so show all this stuff else show
124:48 - nothing like can now sign up with GitHub
124:51 - account and now we can see all the files
124:53 - and
124:54 - folders so this is done like this is how
124:58 - we do it but but what about what if we
125:01 - sign up with a different
125:03 - account so in that case we have to
125:07 - filter our data so let me just console
125:11 - the session here so session is like this
125:15 - object with the
125:17 - user Ed object in
125:20 - here so we are having the email as
125:25 - well so let me grab the email so we need
125:29 - the email somewhere like if I come to or
125:32 - let me just use this hook in
125:37 - here or what we can do is let me yes let
125:41 - me go
125:42 - to where are be getting all the data in
125:46 - the show files here let me me just have
125:50 - the hook in here let sh from use session
125:54 - let me import them so to import them how
125:57 - to import them just do this so we are
125:59 - already having this P files here okay we
126:02 - are having this so let me remove console
126:06 - log from in here then now console log
126:09 - will be in here the new console log if I
126:11 - refresh you will see Nishant as44
126:15 - gmail.com in
126:17 - this so
126:19 - files page or
126:21 - component line number 11 yes but this is
126:25 - not all we also need to send the email
126:28 - when we create a file or folder so that
126:31 - we know who is that owner so we can just
126:35 - go
126:36 - to upload
126:38 - files here we can have one property
126:41 - called user
126:44 - email so the user email will be equal to
126:47 - session. emails so let me also have them
126:50 - here at the top level let me put the fet
126:57 - session from the
127:00 - hooks so this should be in here so let
127:05 - me remove the console log and whenever
127:08 - we add some property I mean whenever we
127:11 - add some data we can have this so it can
127:16 - be null so just add a question mark
127:18 - after or before this so next thing is
127:23 - add a question mark in here as well now
127:25 - let me delete the entire collection here
127:28 - that we start from the
127:30 - beginning so delete this are we
127:33 - recording yes we are recording so delete
127:35 - this we'll have absolutely no files or
127:38 - folders so let me go to the homepage we
127:42 - are having the email on line number 11
127:45 - in the upload no show files here
127:50 - so let me create a folder here called
127:54 - folder one click create it is here if I
128:00 - check the fired store database we should
128:02 - have the email in here as well the new
128:05 - created email from the O okay it is not
128:08 - here I think the thing is we need to do
128:10 - some extra things with the payload so in
128:14 - the add folder we are having this email
128:17 - so let me add this user email now add
128:19 - the user email as payload do user
128:23 - email but I think it is
128:26 - like redundant what we can just do is
128:30 - just
128:30 - pass the pay
128:33 - load no no no no no like this yes then
128:39 - we don't need these things remove them
128:42 - it will be just an object so the entire
128:45 - P will now go whatever we pass in here
128:48 - it will go in the database no need to
128:51 - just add this separately now let me
128:54 - create one folder here
128:57 - called folder one click create it is
129:02 - here see and now it is having the user
129:06 - email now let's filter it out so we are
129:11 - having the session not user.
129:13 - email we can just come to this file
129:19 - map
129:20 - here f. map it is rning this so we can
129:24 - just okay one
129:26 - second okay why don't we just use
129:29 - session use the session in the fetch
129:32 - function we fetching the data of the
129:35 - pages or files so in the hooks we have
129:37 - fetch files let me get it in here get
129:42 - the use session from this route now we
129:45 - have to just remove this let me okay it
129:48 - is a so it is an email that is inside
129:53 - the table so we can use
129:56 - Query we can import query comma where
130:01 - and let me create a param for
130:03 - query so we can have
130:07 - let query equals to or not query the
130:10 - name will like Clash so we can
130:14 - say email query query
130:19 - what this will do is simply fetch all
130:21 - the posts or not posts all the folder
130:25 - and files with the name of or the email
130:28 - of this so query let me pass the
130:31 - instance which is files comma we can
130:34 - have where like where is the conditional
130:37 - operator here
130:39 - where
130:41 - user email comma double equals if it is
130:46 - equal to this
130:49 - uh session do user.
130:52 - email this is done so if this is here we
130:56 - can just pass it in both of the
131:00 - snapshots not passing the file passing
131:03 - this now if I see let me remove the
131:06 - console log okay so let me not do this
131:10 - let me have this like the session that
131:13 - we are having let me have this in the
131:17 - this file like show files so add this
131:20 - here but add it before the file
131:23 - list here now let me pass the session in
131:27 - the use fetch files let me also import
131:31 - the use session or use fetch session
131:35 - from the parent like from here now we
131:39 - are passing session so let me not pass
131:42 - the session entirely let me pass only
131:47 - this thing the user email from session
131:50 - so let me
131:51 - copy this here and paste it this will be
131:56 - as a string as string save okay we also
132:01 - have to get the user email in here so we
132:05 - have to just do comma user
132:09 - email which will be a
132:11 - string now let me not have them here
132:16 - remove this one save it
132:19 - this will be replaced with the user
132:22 - email now save
132:24 - it now we will still see the error here
132:28 - because this is sometimes not defined on
132:30 - initial load so we have to put it in the
132:33 - dependency array
132:35 - here save give it ready flesh still it
132:39 - is not here so what we have going to do
132:41 - just we have to check if parent ID is
132:45 - false or not or and because we need to
132:50 - have both of them as true if user email
132:53 - is true only then show data in here so
132:57 - refresh still it is having some
132:59 - issues so user
133:02 - email we having in here let me just move
133:06 - them in
133:07 - here now let's see what happens email
133:11 - query one
133:13 - second I think this is wrong user email
133:18 - should be equal to user Emil fine I
133:21 - think what we have to do just move it
133:23 - outside in a like just have it at the
133:28 - top level of the function like if what
133:31 - we can say if user ml exists exists only
133:36 - then run this entire function so just
133:40 - add them inside here now we will see no
133:43 - issues we will having we are having
133:46 - folder one let me me do something change
133:50 - this user email to something else called
133:53 - Nishant S
133:55 - 550 now we will not see the file or
133:58 - folder here because it has not been
134:00 - created using this user email like it
134:03 - has been sry it is created using this
134:05 - user email but it is not the same in
134:07 - here that is why it is not getting
134:11 - matched so let me add one more folder
134:14 - here called folder 2 let me close
134:17 - console
134:18 - are we having any console logs no fine
134:21 - perfect let me click create we have this
134:24 - folder to as well now open folder two
134:27 - this will be empty open folder one we
134:31 - are having okay we are having nothing
134:32 - here because it is containing no files
134:36 - or folders so we can just add it let me
134:39 - choose a file let's say this image it
134:43 - will take some time because we are
134:44 - having this progress bar perfect the
134:48 - image will be here soon but it is not
134:52 - one second let me check this
134:56 - image okay yes the thing is we are also
134:59 - having to we also need to add
135:02 - the
135:04 - image I mean the file email
135:07 - link so we have to just do in this file
135:12 - called fire store we are having
135:15 - this add doc we are having basically
135:18 - this is all the
135:19 - files
135:21 - so we can have user email as user email
135:29 - let me D structure this I mean get this
135:31 - from
135:32 - props not props parameters which is a
135:36 - string so where do we need to pass this
135:40 - user email let me check where are we
135:42 - calling add files it is in the so we
135:46 - need the user email correct which will
135:48 - be a string give it a comma in here pass
135:52 - the user email in the ad file so that it
135:55 - comes up here and it sets up in the
135:58 - database now we need to show where are
136:01 - we calling file Lo function it is here
136:04 - so to get the user email we can simply
136:09 - do this like session. user. email
136:15 - session. user. email one issue we have
136:19 - is a we can have a string here fine so
136:24 - let me delete this file that we just
136:26 - created let me create one more
136:29 - file add a file choose a file let me
136:33 - choose this file let it upload for
136:37 - once once it's done this will show up
136:40 - here with the new email it is in here
136:43 - with the new email so let me check the
136:45 - file this one it is having
136:48 - the current user email let me add a
136:50 - folder in here
136:52 - called folder okay what is the folder
136:54 - name of the parent it is folder one let
136:58 - me add let's say nested folder two or
137:04 - not two it is one create it so it will
137:07 - be here now we can add any files inside
137:10 - this folder let's say choose any file
137:14 - let me
137:15 - choose any file like this
137:18 - it is here instantly upload it so if I
137:22 - go back come to n folder one this file
137:25 - will be
137:26 - here let's create a share files or
137:29 - folders feature with other users that we
137:32 - have on drive so to do that let me add
137:36 - Google authentication first using nextro
137:39 - so if I come to the code here we need to
137:42 - add our client secret from Google and ID
137:46 - as well in the file so let me show you
137:48 - how to get them open Google l in the
137:52 - next.js
137:53 - click developer console this is the link
137:56 - of that click it so here we can create a
138:00 - new
138:01 - credential select client ID check the
138:04 - application type as web application name
138:07 - it so let me make it as Drive 2.0 your
138:10 - name then we have to add our client URI
138:15 - we have to add Javas orig which is Local
138:19 - Host 3,000 in here so add it we have to
138:24 - add redirect URL so if you check in here
138:28 - if we are on production we have to add
138:31 - the link with the domain name else we
138:34 - have to add our Local Host 3,000 URL in
138:38 - here so I am on local so let me add this
138:42 - then simply click create here it will
138:45 - create it so I have already done this
138:49 - previously so if I open this we will
138:52 - have a client ID in here and a client
138:55 - secret that we can feed in the EnV file
138:58 - so I have done that
138:59 - already now we can close this come to
139:02 - Google o so just like we had GAA
139:05 - provider we have for Google so if I copy
139:09 - the command
139:11 - here add it in here the provider name
139:14 - which is called Google then we need to
139:17 - add the provider of Google in the array
139:21 - of Provider which is scking the client
139:24 - ID in secret and from M file this file
139:27 - that I just added so this is the giab O
139:31 - type or interface let me change this to
139:35 - simple o o interface let me copy this
139:39 - just add it here and add it in here as
139:42 - well save it so we have no errors if I
139:46 - come to the Drive 2.0 click sign up we
139:50 - have Google option to sign up or sign in
139:53 - so sign in with Google account so I have
139:56 - done this for multiple users because on
139:58 - GitHub I only have an account but on
140:01 - Google I have two accounts so we can
140:03 - simply check as we share files between
140:06 - two users so let me log in with Nishant
140:09 - as 44@gmail.com this email so we're
140:13 - getting all these data because the email
140:16 - is same now now let's add the function
140:18 - for sharing the files and folders so
140:22 - what we need to do add the dot using
140:25 - react icons that it is very simple I
140:27 - guess for you also so add it and when we
140:31 - click it we will open up a modal in here
140:34 - which is has which has the input
140:38 - type input field two buttons share and
140:41 - close on the button of share we are
140:45 - running this function called get share
140:47 - shared email so if I open the console if
140:49 - I add the email say Nishant
140:53 - 440 at
140:55 - gmail.com click hereare the email will
140:58 - be here now we need one more State here
141:01 - fault called current file ID Set current
141:08 - ID as use State and empty
141:12 - string now what should happen is if I
141:15 - click the three dots in here that is
141:17 - here we need to set the ID of the
141:21 - current Post in that state so we can
141:24 - just do Wrap This in a curly brace after
141:29 - the window model opening we can say Set
141:32 - current
141:33 - ID as file. id file. id so the same
141:39 - thing we can
141:40 - do so this three dots we are having we
141:44 - having in the folder and the file as
141:46 - well
141:48 - so we can add it in here as well where
141:52 - okay we have added in the
141:54 - file this is a folder yes this is a file
141:57 - now save let me add it here so if you
142:00 - don't know one more thing I have do I
142:02 - have done this is when we CLI the folder
142:05 - icon only then we will open the folder
142:08 - not on the card because we have to
142:10 - propagate this as well the three dots
142:14 - function icon or the operation of that
142:17 - so we have the ID now so we can just
142:20 - console this current field current file
142:24 - ID so folder two we have let me add the
142:29 - email okay one more thing that I can do
142:31 - is in the email property in that input
142:34 - input property let me make this as an
142:36 - email save add the email or also let me
142:40 - add the value in here that will be email
142:43 - save now if I
142:46 - click also ID will be needed
142:50 - email if I click the email share it the
142:54 - email and the ID is here perfect now we
142:57 - have to do what we have to do is come to
143:01 - the get shared emails and run a function
143:05 - to update the emails in the fire store
143:08 - so we are having this let me just delete
143:11 - this fields or start from the beginning
143:14 - so let me delete the files now create
143:17 - one file here before that let me show
143:20 - you one thing so in the file store we
143:23 - have add folder and add a file in here
143:27 - in the add files we need to initialize
143:30 - the document with a new array that will
143:34 - be called as shared two that will be an
143:37 - empty array initially the same thing we
143:39 - can do in here as well so add it
143:44 - save now if I add a file this this new
143:48 - type of field will affect I mean it will
143:51 - be here in the fire store
143:54 - database so wait for it it is here let's
143:56 - check now what do we have we have
144:00 - files we have the share to array which
144:03 - is initially utty if I click this share
144:06 - button we should run a function to
144:09 - update data in the file precisely share
144:13 - to so we will have to add our email
144:14 - inside this so let me make a function
144:16 - called
144:17 - export const share or
144:20 - share file or folder so let me just name
144:24 - this as share files it will work for
144:26 - both of them this will take an email
144:30 - comma so email will be a
144:33 - string comma what else it will take the
144:36 - ID the current ID of the file that is
144:41 - current field also a string so let me
144:45 - select a document first so let shared
144:48 - file doc equals to Doc in here we can
144:53 - just add the collection name which is
144:56 - called
144:58 - files we need to select the collection
145:00 - using the ID which is the current field
145:04 - ID because for only that post we have to
145:08 - update but the thing is if I add a email
145:12 - in here so let me use update doc
145:14 - function so update doc this will take
145:18 - this Shar
145:19 - doc as the first Value First prop second
145:23 - will be this email but the email will be
145:27 - inside the shared to so let me copy this
145:32 - field add it in here and just add the
145:36 - email save remember that this is an
145:39 - array but we are passing in uh what is
145:42 - it a string so if I just do this let me
145:47 - give it a refresh okay we have to hug
145:50 - the function in here as well so import
145:53 - share files share files from API fire
145:58 - store let me run this function in here
146:01 - we need to pass email and the current
146:04 - field ID let me W it in a TR catch block
146:09 - copy this add it in inside okay we need
146:13 - the catch block as well
146:15 - err CG error perfect no any errors will
146:20 - be caught so let me share this one let
146:23 - me add the email of my other
146:26 - account this One Click Share now come
146:29 - over here and the email is now inside
146:33 - this one share to property but the thing
146:36 - is we can have multiple emails inside it
146:38 - that's why I chose an array so let me
146:40 - get that array in here using get doc so
146:44 - we can have get doc function
146:47 - and by the way let me make the function
146:49 - as
146:50 - asynchronous because it is an API call
146:53 - so
146:55 - await get doc await update doc update I
147:01 - mean get doc will take
147:03 - the shared doc or shared file dock to
147:08 - get data let me have a response in here
147:12 - response equals to AIT get dog make a
147:15 - console log here
147:17 - here save if I just commment this now
147:22 - come to the fire store sorry come to the
147:25 - app Drive 2.0 clicks here we are getting
147:30 - the data we need to filter it from here
147:33 - so we can say response.
147:36 - data save it click it again share we
147:40 - need the share two so just get it here
147:46 - the thing is it can be undefined so make
147:48 - a question mark it will be fine so we
147:52 - can do this again the last time and the
147:54 - email is now here so if you remember or
147:59 - I think you do we have made this as an
148:02 - empty array so we need this
148:06 - data D structure it and add our current
148:10 - email which is this let me move console
148:13 - log save so refresh the page so we are
148:18 - having this shared email as this so let
148:20 - me delete this field share it again so
148:24 - let me add the email here Nishan
148:26 - 5@gmail.com
148:28 - Click Share okay value is not iterable
148:33 - okay the thing is what is the problem
148:36 - here is it was a string so we can make
148:40 - the field here as a or as an as an array
148:44 - so add field this this this will be an
148:48 - array click add now we have this now if
148:52 - I just do it again it will work
148:55 - share check here okay it is here let me
148:58 - delete this one because we don't need an
149:00 - empty property so we have this email now
149:03 - let me type or let me share this to
149:05 - another user called ud1 123@gmail.com
149:09 - Click Share this will be in here after
149:13 - the first email so we are having shared
149:16 - emails
149:17 - list now we have to get them for our
149:20 - user as well so come to fetch files we
149:23 - need to make a few changes in here so
149:25 - first of all we need to
149:28 - just have a check here so if item.
149:33 - parent ID is empty when we don't have
149:35 - parent ID in that case we need to check
149:40 - if item do shared emails do includes our
149:44 - user email that we're getting from the
149:46 - par Rams it is if it is there show it
149:51 - else okay we also don't need this email
149:55 - query because we need not to check it we
149:58 - need to just have files in here directly
150:01 - not have the collection type of files or
150:05 - collection name of files and then do
150:07 - same thing in here with includes
150:11 - so change okay let me just have this
150:15 - here so change it change it here as well
150:16 - in files now the second thing we need is
150:19 - if I come to this and if I make this in
150:22 - an cly bracket then add or operator we
150:28 - need to check if item do user email is
150:31 - equal to user email in case the email
150:34 - that we are having is our own that was
150:38 - the that is why we had the query
150:40 - for the user email at the very beginning
150:43 - that we removed using this query and
150:46 - where
150:47 - now same thing we can do in here for the
150:50 - this one if the parent ID exists for
150:54 - folders so save them it will work let me
150:57 - remove the query and where let me
151:00 - explain it again that what we're doing
151:01 - in here so we are filtering here if
151:05 - parent ID is equal to EMP string it
151:07 - means show all the files and
151:10 - folders okay we have this issue cannot
151:13 - create properties of undef find reading
151:17 - includes so let me just have and check
151:20 - here for this and this save let F now so
151:26 - yes where was I let me
151:29 - explain this is the case or this was the
151:31 - case for if the parent ID is empty it
151:35 - means the root
151:36 - folder else if the parent ID is equal to
151:40 - parent ID show only those posts for
151:42 - nested nested
151:45 - folders now what we have to do second
151:49 - check is if this is true and either one
151:53 - of them is true and they are if our
151:56 - email is inside this array it means it
151:59 - is shared so this post that I having
152:03 - this file I having it has been shared to
152:06 - these two users so if my email that way
152:10 - that I used to log in is inside this
152:14 - CDLs array show it else or or I mean
152:19 - show them when this user email is equal
152:24 - to this user email in both cases if the
152:26 - post is our own then the same thing
152:28 - we're doing in here but this case is for
152:31 - nesting so you have to get it fine now
152:35 - let me show you sharing a post to other
152:37 - user like we have shared this to Nishan
152:41 - 550 gmail.com let me create one more
152:45 - let's say folder we can say let me
152:48 - create two folders that first one will
152:50 - be first one will be folder one click
152:54 - create second one will be shared folder
152:58 - click create they are both here let me
153:01 - share the folder to some user called
153:04 - Nishant s
153:07 - 55@gmail.com
153:10 - now it is or it should be in here this
153:13 - is for shared folder we have shared it
153:16 - to to this
153:17 - user so this post will be shown to
153:21 - Nishant 440 and Nishan 550 or1 123
153:25 - gmail.com so we can come
153:28 - to sign up with the other
153:31 - user this one we have wrong key here so
153:35 - if item dot share 2 is equal to user
153:38 - email then show it now it will be in
153:42 - here so these two files this image and
153:45 - share folder
153:46 - are now shared to me so that is how we
153:49 - create shared files and
153:52 - folders so yes that is how we create a
153:55 - Google Drive clone using next is