00:06 - hey everybody
00:08 - welcome to live coding with jesse
00:10 - i'm jesse
00:11 - and
00:12 - today we're going to make a reaction
00:15 - component from start to finish we're
00:17 - going to pull in data
00:19 - from
00:22 - my sql database
00:23 - uh using graphql
00:26 - and apollo
00:28 - and then we're gonna
00:30 - use that data
00:32 - to put into the components and render
00:34 - multiple components
00:37 - so this is probably gonna be a short
00:39 - stream
00:40 - uh so this is something that i've done
00:43 - many times i don't anticipate making a
00:46 - lot of mistakes but if you've watched
00:48 - the stream before you know
00:50 - i do often make mistakes so it could
00:52 - happen
00:54 - um
00:55 - so
00:56 - before we get started i just want to
01:00 - bring you up to date on
01:04 - how i fixed one how
01:06 - i and
01:08 - uh
01:09 - michael creole fixed an issue that we
01:13 - had uh i believe on the last stream
01:16 - so
01:18 - and i tell you truth i'm not a hundred
01:20 - percent sure that
01:22 - i don't know that we had the issue on
01:24 - the last stream or not now that i think
01:25 - about it but anyway
01:29 - we um
01:34 - we were trying to get the
01:36 - faculty list pages to work and we had
01:38 - made a new component and we made a new
01:40 - query but it just
01:42 - uh i found that
01:45 - when i was trying to
01:48 - get
01:50 - categories that had more than one word
01:53 - then they were hyphenated it wouldn't
01:55 - work it turns out i was searching for
01:58 - the name
01:59 - which would be the title in wordpress
02:02 - instead of the slug
02:03 - and the name of course when it has more
02:05 - than one word has
02:07 - commas sometimes and spaces and all
02:10 - sorts of things
02:11 - so that's what my problem was and i
02:13 - worked on it for a long time on my own
02:16 - couldn't figure it out i made a get up
02:17 - issue for it and
02:20 - uh michael saw it and
02:23 - realized what was going on
02:26 - and submitted a pull request
02:29 - that pretty much sorted everything out i
02:31 - still needed to make a few adjustments
02:33 - in
02:34 - my router because i had actually made
02:36 - another mistake in the routing function
02:38 - that i didn't even realize because it
02:40 - was kind of buried under this this other
02:42 - mistake
02:43 - so i had to adjust that and i adjusted
02:45 - some things uh in the component as well
02:50 - to deal with some errors that came up
02:52 - after that so there were just layers
02:54 - upon layers of my mistakes that i had to
02:56 - get through so that's all sorted out now
02:59 - so those pages do work i just don't have
03:01 - all the routes in yet so i did open up
03:04 - an issue for adding the routes if anyone
03:07 - would like to do that it's it's actually
03:09 - pretty boring work uh so
03:11 - i'm going to do it at some point um i
03:15 - just made the issue one to remind me to
03:17 - do it and then two if anybody really
03:19 - wanted to get a pull request for doing
03:21 - some like tedious work
03:23 - uh then feel free to take that one
03:27 - okay
03:29 - i
03:30 - think that's all my updates
03:33 - uh
03:35 - i don't know some i i for some reason i
03:37 - think there's something else i wanted to
03:38 - share but
03:39 - uh i can't remember it now so i guess
03:42 - we'll just get started
03:44 - let me
03:45 - make sure the stream all right stream
03:46 - health looks good let me know if
03:48 - anything's going on
03:51 - so i am streaming some from home today
03:53 - so you know sometimes the the health's
03:55 - not that good but
03:57 - uh i i think it'll work out
04:00 - so
04:01 - i'm gonna start my timer uh on my other
04:04 - screen
04:05 - so pomodoro session we're gonna try to
04:07 - do a 25 minute
04:10 - session of coding and then i'll take a
04:12 - break and do some some questions
04:15 - we may not need two full sessions today
04:20 - uh let's see
04:23 - let me switch my screen
04:25 - oops there we are
04:27 - okay so
04:28 - you probably can't see much because it's
04:30 - really small i'll make it a bit bigger
04:32 - for you
04:33 - and
04:37 - when you see on the screen with stuff i
04:38 - was working on previously so we're gonna
04:40 - we're gonna switch
04:43 - out of there
04:44 - so i mean basically i was working on
04:46 - routes
04:47 - uh cleaning up data on the wordpress
04:49 - side of things
04:51 - so nothing super interesting
04:55 - uh i did go through the analytics
04:59 - from the current site to figure out what
05:01 - pages are viewed most
05:03 - and so i'm going to focus my efforts on
05:06 - those pages before launch
05:08 - uh
05:09 - i'm gonna get the data for all the pages
05:11 - but in terms of how the pages look
05:14 - and the most the pages that get the most
05:16 - testing i'm gonna stick with maybe the
05:17 - top 20 pages
05:19 - in terms of views really the the top two
05:23 - pages get all the views and then every
05:25 - page after that gets like one percent or
05:28 - less of all the views so it's not
05:32 - uh it's it's
05:35 - it's kind of hard to say like hey here's
05:36 - the top 20 pages because the difference
05:38 - in views between like number 20 and
05:41 - number like 100 are like 10th of a
05:43 - percent so
05:45 - uh it's not not really a huge
05:48 - huge difference but let me show you
05:52 - what page
05:55 - what pages we're going to be working on
05:56 - what component we're going to make first
05:58 - so you get the visual then we'll go to
06:00 - the code
06:02 - um hey everyone i i see a lot of you
06:04 - saying hi now in the in the chat so hey
06:07 - michael's here michael thank you
06:09 - i don't know if you caught the beginning
06:11 - where i explained uh how you saved me
06:13 - from my mistake there with our graphql
06:17 - queries uh but i really appreciate that
06:19 - so thank you
06:21 - uh so let's go to localhost first
06:25 - and
06:26 - actually let's see let's go to that fine
06:28 - arts faculty because that's the one that
06:30 - was giving me the most trouble
06:32 - or at least that was where i first
06:34 - realized that i did something wrong
06:37 - because i couldn't get that data so
06:41 - i hope it works
06:45 - oh yeah it's taking long because of the
06:47 - stream i was really worried for a second
06:49 - but
06:50 - okay here we are
06:52 - so here's our page
06:54 - for fine arts faculty and i'm gonna go
06:56 - to the same page on the current main
06:58 - website just to give you an idea of what
07:00 - people see now because
07:03 - their expectations if they've seen one
07:04 - of these pages before are going to be
07:06 - based on what they're seeing now
07:08 - so i'm not going to recreate it pixel
07:11 - for pixel but
07:12 - we should at least try to have the same
07:14 - basic data so we're going to go to
07:16 - franciscan.edu
07:23 - arts and faculty so we'll go there and
07:26 - you can go to that site as well if you'd
07:28 - like
07:29 - we also have a
07:32 - um
07:35 - we have a test you know what i haven't
07:37 - updated the test site
07:39 - i'm not going to try update it now
07:40 - because it'll take forever while i'm
07:42 - streaming but
07:43 - i'll be sure to try and update
07:46 - that um
07:47 - that demo site i believe it's
07:50 - i forget the url i'll probably i'll let
07:52 - you know the url when i do the next
07:54 - stream so you all can check out the site
07:55 - as well but
07:57 - no sense right now because all of this
07:59 - stuff that we've done in the past week
08:00 - isn't available anyway
08:02 - um
08:04 - all right so here's how it looks so
08:06 - there's there's this huge
08:08 - i guess you could say kind of hero
08:10 - section that are on these pages which
08:12 - we're not going to try to replicate that
08:14 - right now
08:16 - these pages to be honest with you are
08:20 - rarely visited
08:22 - in terms of the total site visits so
08:24 - they're not a priority right now and
08:26 - we'd like to have input from each of the
08:28 - departments before we go in and start
08:31 - redoing things
08:33 - but basically what what they have now is
08:35 - an image
08:38 - the
08:39 - name
08:40 - and then title and a link
08:43 - so right now
08:48 - getting the image is gonna be
08:52 - if we're gonna get the image now based
08:54 - on the data that we have we're gonna
08:55 - have to maybe use
08:59 - maybe a regular expression or something
09:01 - to search out the url to the image
09:04 - uh because we don't have that
09:06 - you know kind of nicely available in its
09:08 - own field
09:09 - so
09:14 - we can grab that but that's going to be
09:16 - you know if we have time let's grab that
09:18 - because it'll be a little bit more
09:20 - difficult what we really need
09:24 - is the name
09:26 - which we already have we just need to
09:28 - make it look nice and we need this
09:31 - this link which we can get easily
09:33 - the title is also going to be a little
09:36 - bit different but if we can look in the
09:38 - markup and see that like hey all the
09:40 - titles are
09:41 - let's say in
09:43 - a certain type of tag
09:45 - or they all have a certain class we may
09:47 - be able to just grab these as well maybe
09:50 - with a regular expression we'll see
09:53 - so we may be able to display these
09:55 - properly
09:57 - with all the data we want without having
09:58 - to go back and manually edit the the
10:01 - data that we currently have
10:03 - so um
10:04 - if you haven't followed along for a lot
10:06 - of the project we're stuck with a lot of
10:08 - data and markup as is from
10:12 - um migrating the data from a previous
10:14 - content management system
10:16 - so that's why i'm trying to do these
10:18 - little workarounds to to be able to work
10:21 - with data that's not in an ideal format
10:24 - uh at some point i'd love to be able to
10:26 - change the data but we don't have enough
10:28 - time before the site is going to launch
10:29 - on june
10:30 - 4th okay so i'm thinking
10:35 - two
10:35 - in terms of design there's two options
10:38 - uh that i think we can take one is to do
10:41 - cards and have kind of a masonry layout
10:43 - with the cards
10:45 - for uh the professors the other layout
10:48 - would be
10:49 - uh just to keep
10:52 - kind of like we have here this list
10:56 - format
10:57 - and to keep some sort of of list format
11:01 - so let me know in the live chat what you
11:03 - think just to give you an idea of what
11:05 - the card could look like
11:07 - uh let's uh let's go to the main page
11:11 - in a new tab here
11:13 - and
11:17 - when that does load you'll be able to
11:18 - see
11:20 - you know potentially what what it could
11:22 - look like
11:26 - while that's loading i do want to remind
11:28 - everyone um in case or if you haven't
11:31 - heard yet um
11:33 - a few of the viewers uh that i believe
11:37 - are here in the live chat
11:39 - today at least i saw nikki um so nikki
11:43 - and harshit and javascripter who's
11:46 - occasionally uh in the live chat
11:48 - and i all um created a site for people
11:52 - to be able to share their
11:55 - github repositories and find cool
11:57 - javascript repositories that
12:00 - are are not really well known but are
12:03 - kind of worth knowing and that site is
12:05 - called
12:07 - javascript.af
12:10 - so
12:13 - oops
12:16 - i'll paste that in the live chat right
12:18 - now
12:21 - so if you'd like to check that out you
12:22 - know please feel free check it out
12:27 - so oops i didn't get the link it's just
12:30 - it's not a clickable link but if you
12:32 - just copy and paste javascript.af
12:34 - in the browser you'll
12:36 - you'll get in and see this after you log
12:38 - in with your github profile we're not
12:40 - trying to take your data uh but to use
12:42 - the functionality and actually add repos
12:45 - you do have to be logged in so
12:47 - uh we may make it so that you don't have
12:49 - to be logged in i open an issue for that
12:52 - um so you'd only have to be logged in
12:54 - for certain things but you could still
12:55 - see things without being logged in for
12:57 - now uh you do need to log in at first
13:00 - though but basically you can see
13:02 - you know we have some repos uh if you
13:05 - were to click let's just click on
13:07 - this the latest one that was added
13:10 - uh you can see the readme
13:13 - and some statistics
13:16 - so you'll have the ability
13:19 - later on in beta when we add more
13:20 - features to upvote
13:23 - uh repositories
13:25 - um
13:26 - so
13:27 - there there'll be different searching
13:28 - options so it should be i'm hoping what
13:31 - it'll be is an easier way to search
13:32 - through github repos
13:34 - um and
13:37 - uh like i said just a way to find really
13:39 - cool stuff out there
13:40 - that maybe
13:41 - is kind of just getting lost underneath
13:44 - all of the the bigger repositories that
13:46 - get most of the attention
13:49 - so please check it out let me know your
13:50 - opinion okay so this is an example of
13:53 - how a profile could look actually
13:56 - looking at this now it reminds me that i
13:58 - believe
14:00 - uh this image is too big i need to make
14:02 - some restrictions on on images for the
14:04 - cards it just is
14:06 - um
14:07 - it's taking up a huge portion of the
14:09 - screen there
14:11 - um but anyway it would be something like
14:13 - the faculty profile card
14:17 - name title
14:19 - um
14:20 - and then a link so our option is to do
14:23 - something like this
14:25 - or to do something that would be more
14:28 - of a list style more horizontally
14:31 - oriented
14:32 - so
14:33 - as i said let me know in the live chat
14:35 - if you have a preference
14:37 - i guess i'm going to make
14:39 - a um a decision on this here in about 30
14:42 - seconds
14:44 - i will give you all uh
14:46 - a bit of a time for the delay to go
14:48 - through to see if you have
14:50 - uh any
14:51 - any opinion on that
14:54 - i'm just scanning through the chat to
14:56 - see if anyone
14:58 - has an opinion looks like not yet
15:01 - so about in about 15 more minutes i'm
15:03 - gonna answer questions in the chat so if
15:05 - you're asking questions
15:06 - uh just please
15:08 - um be patient with me
15:10 - okay cool so uh sasha says uh card style
15:14 - michael car style sasha uh forgive me if
15:17 - i'm wrong about this but i don't
15:18 - remember uh seeing you in the chat
15:20 - before so welcome
15:22 - uh if i have seen you and i just don't
15:24 - remember you know uh apologies for that
15:27 - but anyway welcome to the chat and thank
15:29 - you for uh letting me know which style
15:31 - you prefer
15:32 - prefer
15:34 - it looks like the card
15:38 - all right great so everybody likes a car
15:40 - this is actually going to make our job
15:42 - easier because we can probably borrow a
15:43 - lot of the markup from
15:45 - the current card component
15:48 - so
15:50 - let's
15:54 - let's see where we have that
15:58 - so we're going to go into our code here
16:00 - all this code is available and it's open
16:03 - source the repository link is in the
16:05 - description to this video
16:07 - feel free to
16:09 - check out that code use it for whatever
16:11 - uh new addition to the code just today
16:13 - was a code of conduct so
16:16 - no so far nobody has done anything
16:18 - remotely in violation of the code of
16:20 - conduct but um
16:22 - if you're gonna say something or do
16:24 - something that you're not sure whether
16:25 - or not you should do just check out the
16:27 - code of conduct uh beforehand
16:30 - um
16:31 - but uh it's nice to have one of those
16:33 - hopefully we never have to actually
16:35 - enforce it
16:36 - uh and so far everybody in this
16:39 - community has just been very pleasant um
16:42 - certainly to me and also with each other
16:45 - as far as i know
16:47 - those are the pages i need to look for
16:50 - components
16:51 - okay where's our component
16:54 - profile card so let's check out our
16:56 - profile card component
17:00 - and
17:01 - we'll see
17:11 - so i guess for now let's just copy this
17:18 - and
17:20 - i mean honestly it
17:23 - we'll see i'm gonna make a new component
17:25 - now but it's gonna end up being pretty
17:27 - close to what we already have this one
17:29 - needs to be a little bit more versatile
17:31 - i think because you're using it for
17:32 - multiple types of profiles but
17:36 - um
17:38 - i don't know if i really want to
17:42 - just change this one to work in our use
17:44 - case
17:51 - let's see profiles
17:55 - yeah i mean
17:57 - to me
17:58 - i there's a balance between making the
18:00 - component reusable for a lot of
18:02 - different situations and making a
18:04 - component bloated with all these
18:05 - different options
18:07 - so
18:09 - i don't know i kind of think this
18:10 - component is maybe like on the border of
18:12 - that right now
18:15 - uh so let's just go ahead and make
18:16 - another component
18:19 - you know at least it'll be good for uh
18:21 - educational purposes to make a new
18:23 - component and
18:25 - go from there so
18:27 - let's call this
18:30 - faculty
18:35 - list
18:37 - item
18:39 - okay so that's what it is right now it's
18:42 - pretty specific
18:45 - so
18:47 - like i said maybe
18:50 - this this may end up changing a lot or
18:52 - getting combined with another component
18:55 - or we may end up taking this component
18:57 - and making a little bit more general so
18:59 - that we can use it in other situations
19:03 - oops
19:08 - i name this improperly
19:13 - i'm meant to do a um
19:18 - a capital
19:20 - so usually uh components
19:24 - are capitalized
19:28 - uh and then at the first part in the
19:30 - camel case so
19:32 - not not always but
19:34 - that you seems to usually be the
19:39 - the way components are named
19:47 - let's see
19:49 - so i'm i'm running
19:51 - spotify on my phone and i went to press
19:53 - the skip the song key on my keyboard and
19:56 - it wasn't working like what's happening
19:59 - because it's on my phone
20:03 - okay
20:05 - so here's what we have let's
20:10 - scoot this over we'll scoot this down a
20:13 - bit just want to give us as much room as
20:15 - possible
20:17 - and
20:23 - okay
20:24 - it looks like
20:26 - let me go through this a little bit and
20:28 - just we'll see what the component is so
20:31 - i know i titled this creating a
20:32 - component so
20:35 - you know potentially you might be
20:36 - expecting to do this from scratch but to
20:38 - be entirely honest with you
20:40 - i never make a component from scratch
20:43 - and if you're trying to make it
20:44 - components from scratch other than for
20:46 - educational purposes
20:48 - then
20:50 - my personal opinion is that you you're
20:52 - wasting
20:54 - i don't want to say wasting but
20:56 - you're taking more time to create it
20:58 - than you need to right because it's it
21:00 - wouldn't be a waste you'd probably learn
21:02 - things when you do it but in reality the
21:05 - structure of components
21:07 - is there's usually a base structure that
21:09 - can be reused and you can always find a
21:12 - component that's similar enough to what
21:13 - you want to do that you have a starting
21:15 - place so this is actually how i do
21:17 - create new components i always start
21:20 - with some component that i previously
21:22 - made
21:24 - so what this gives us is a lot that we
21:26 - would need for most components anyway so
21:29 - we're bringing in things from react
21:31 - right we're bringing in our styles from
21:34 - material ui which is the material design
21:37 - framework that we're using
21:39 - uh we're bringing in
21:41 - components from material ui that we can
21:43 - build on
21:44 - right
21:46 - we're bringing in typography which gives
21:48 - us automatically styles for our for our
21:52 - text for font okay and we're bringing in
21:55 - a button
21:56 - right so
21:57 - these are basic things that we should
21:59 - not be recreating over and over again if
22:01 - we want to be able to develop things
22:03 - with with any speed at all
22:04 - [Music]
22:06 - so
22:10 - having said that we also bring in some
22:13 - styles
22:14 - right so
22:15 - these styles
22:17 - are going to be useful to us now
22:19 - we may not need to keep them all so we
22:21 - may take out some things that we don't
22:24 - need from this component so
22:26 - if you notice
22:28 - where we at
22:31 - you know we have this
22:33 - i'm trying to see this same component is
22:36 - used for multiple things so we don't
22:39 - really need to say what type of profile
22:42 - this is because
22:43 - on the page where we're going to use
22:44 - this on there's not going to be multiple
22:47 - profile types so we're going to be able
22:48 - to take this section out
22:52 - uh we're also
22:56 - let's let's go through it i believe
22:58 - there's some other stuff we can take out
22:59 - but we'll see
23:01 - once we get there
23:02 - so
23:03 - [Music]
23:04 - this category section
23:06 - right here we can take this out
23:10 - because we won't be using that
23:13 - and
23:14 - we will take out
23:18 - the corresponding prop for that
23:24 - which would be profile type
23:29 - so that's not going to be an available
23:31 - prop
23:33 - we're going to take it out we're going
23:35 - to use it here
23:38 - his profile type here
23:44 - right so we've removed all that
23:48 - you notice i have this commented out
23:51 - i'm going to keep this in here
23:53 - just to test it and see whether this
23:56 - gives us
23:57 - uh better dimensions for our images
24:00 - if it does not i'm going to delete it so
24:02 - we're not planning on keeping that the
24:06 - what we had before and by default in
24:08 - material ui with cards
24:10 - uh media that you have in cards so
24:12 - mostly images at the top of the cards
24:15 - were background images put in with css
24:19 - but we ran into some issues with that
24:21 - when i was testing with uh with my
24:23 - intern
24:25 - and some things that he had noticed and
24:27 - brought to my attention so
24:29 - we tested out using just a regular image
24:31 - tag instead and that gave us better
24:33 - results
24:34 - but i want to make sure that those are
24:37 - actually better results in a variety of
24:40 - use cases so
24:41 - that's why i haven't completely gotten
24:43 - rid of this yet
24:46 - all right so just a quick scan through
24:48 - here i'll explain what this is doing and
24:50 - we'll see if we can remove anything else
24:52 - uh where we have some of the props that
24:54 - we're passing in uh which are
24:57 - uh our profile image so this would be
24:59 - the url to the image uh this is the
25:02 - image title for the the title attribute
25:06 - on our image we have our profile name
25:08 - which would be the name of the person
25:11 - and then we'll have uh content
25:15 - and a profile link so the content is
25:19 - going to be
25:22 - the
25:24 - the quote portion so
25:27 - in our case the the content is just
25:29 - going to be the title of the person
25:32 - uh
25:33 - instead of an actual quote from that
25:36 - person
25:38 - so we may rename this to make it
25:41 - you know more obvious but for now just
25:43 - when we're testing it it's okay
25:46 - uh and then we we have a link
25:48 - with a uh
25:50 - just a basic button style
25:54 - and that's it it's going to be a pretty
25:57 - simple component
26:01 - so let's test it out let me make sure
26:03 - i've saved it
26:05 - and we need to test this out now
26:08 - in our faculty list
26:18 - so we need to bring in this component
26:22 - so we need to import it so we can use it
26:24 - so i'm just going to copy and paste
26:27 - this other component that we brought in
26:29 - from the same folder
26:31 - and that'll be easy to change and we've
26:34 - called our component
26:36 - faculty
26:38 - list
26:40 - item
26:43 - so now we'll be able to use that
26:45 - and if we go down here
26:48 - in our faculty list dot js this this
26:51 - template page
26:53 - we can see we're already grabbing our
26:54 - data with from graphql
26:57 - and we're already mapping over it and
26:59 - what we're doing right now when we did
27:01 - this just as a test was just through
27:03 - this into an h3
27:06 - so
27:07 - we don't
27:09 - we don't want to leave it like that
27:11 - that's not really visually appealing
27:15 - so now we're going to replace this with
27:19 - our faculty
27:22 - list
27:23 - what do we call it again
27:25 - item
27:27 - so our faculty list item
27:31 - and we're gonna need to put in a bunch
27:33 - of props
27:35 - but we're not going to just just put in
27:37 - the props um
27:41 - by hand in this this case we're going to
27:43 - put in variables
27:45 - right there as we're mapping through
27:47 - this uh
27:49 - we're going to grab that data from
27:52 - the graphql the things that we're
27:54 - bringing in
27:57 - so
27:58 - let's see we need let's
28:01 - let's check here to see what we need to
28:03 - pull in and we don't need to pull all of
28:04 - these in some of these will be optional
28:07 - so for now what we're not pulling in
28:10 - is an image
28:12 - or
28:14 - a title so we're just going to pull in
28:17 - what we have for now just to see what it
28:18 - looks like on the page so we're going to
28:20 - pull in
28:21 - this
28:22 - for profile name
28:28 - we're gonna have whoops
28:30 - not that profile name is going to equal
28:34 - faculty
28:37 - dot
28:39 - node
28:42 - title and then we're also going to have
28:46 - our profile
28:48 - link
28:51 - and this one's going to be a little bit
28:53 - more tricky so
28:55 - right now
28:57 - our profile link
29:00 - is like a full url what we want it to be
29:03 - is
29:04 - let me see
29:07 - let's
29:10 - did i break it um
29:13 - i think i did
29:17 - all right oh yeah because i'm working on
29:18 - this page right now
29:21 - so we need
29:24 - sorry wrong page
29:26 - i need to find out what the url is
29:30 - to go to this page
29:35 - is this link not work
29:42 - oh i guess it it only works
29:45 - no it doesn't work at all
29:51 - that's weird
29:53 - oh maybe it's just so slow okay so
29:55 - faculty and then
29:56 - that's how it works
29:58 - all right so i just wanted to know how i
30:00 - had this route set up so it's going to
30:02 - be
30:04 - so let's do it like this so
30:07 - in react
30:08 - uh when we put these brackets in that
30:11 - means we can write javascript in here so
30:14 - we're writing javascript and uh we want
30:17 - to put in
30:19 - a template literally
30:22 - so we're going to do a template literal
30:24 - and it's going to be slash
30:27 - faculty
30:28 - slash
30:29 - and then here's where the variable is
30:31 - going to come in so we're going to put a
30:32 - dollar sign and then a curly bracket
30:35 - which lets us put in a variable so right
30:38 - here is a string
30:40 - this is the variable and the variable is
30:42 - going to be
30:45 - faculty
30:46 - node
30:48 - slug
30:51 - which i believe i'm bringing that in
30:53 - we'll find out in a second if i actually
30:55 - am
30:56 - so
30:57 - our link is always going to be
31:00 - to
31:01 - a faculty page
31:04 - and then that slug
31:07 - is going to tell us
31:09 - what faculty page to get to to pull in
31:12 - right
31:13 - and we've already set all this up in
31:14 - previous streams
31:16 - the only thing we need to be careful of
31:18 - is making sure in the data that we have
31:21 - that's uh in a mysql database
31:24 - making sure that all the slugs are are
31:26 - actually
31:27 - uh correct
31:29 - which since we're pulling the data in
31:31 - with the slugs
31:33 - and then we're taking that same slug and
31:35 - using it to grab the data again we
31:37 - should be fine
31:39 - so even if the slug itself is in a weird
31:41 - format that we don't like
31:44 - it still should work
31:46 - uh so
31:48 - now i can get rid of this
31:52 - oops you know what let's bring over this
31:54 - key
31:58 - let's make sure i don't already have a
32:00 - key on here
32:04 - i don't okay
32:19 - actually
32:20 - you know this is this isn't going to
32:22 - look great uh and i'll i'll tell you why
32:24 - in a minute after we see that it's not
32:26 - going to look great um
32:29 - but we'll add some more into here to
32:31 - make this look nicer so let me save that
32:35 - hopefully
32:39 - hopefully i did this right oh and i'm
32:42 - still getting this what was this faculty
32:45 - list item
32:47 - oops
32:48 - i believe i messed something up when i
32:50 - took out these styles
32:52 - yep i did i forgot a
32:55 - comma
32:57 - all right hopefully that was it
33:00 - oh when my timer ran out and i didn't
33:02 - even realize it
33:04 - so
33:06 - let me go
33:07 - i'm going to take a five minute break
33:09 - i'm gonna go to the chat and answer your
33:11 - questions and then we'll come back and
33:13 - see
33:14 - uh if if this will work
33:16 - how it looks what else we need to do
33:26 - steven says can you talk about what
33:28 - graphql does just a short description
33:30 - sure no problem
33:31 - um
33:33 - so graphql
33:35 - well i should say
33:37 - for those of you who are familiar with
33:39 - rest apis
33:41 - think of graphql as just
33:44 - another way to access data that is very
33:47 - similar to a rest api but imagine if you
33:50 - could tell the api exactly what you
33:53 - wanted
33:54 - instead of being restricted to the
33:56 - pre-built api routes
33:58 - for those of you who have no idea what
34:00 - an api is at all
34:02 - it's just graphql is just a way for us
34:04 - to send a message to a server
34:08 - and ask for certain pieces of
34:10 - information
34:12 - and then that information gets sent back
34:14 - to us
34:16 - okay so in this case we have our react
34:19 - application
34:21 - is asking for data
34:23 - using the graphql format
34:26 - right it's just a certain way to ask
34:29 - right it's a way to format the question
34:31 - so that we get the answer that we want
34:33 - and then
34:35 - our
34:36 - database is connected to a wordpress
34:39 - installation we have a plugin called wp
34:42 - graphql
34:43 - and that plugin is able to
34:45 - recognize when we ask a question using
34:47 - graphql
34:49 - and then answer properly with the
34:51 - correct data once we get that answer
34:54 - then we can display it on a page using
34:57 - our react components
34:59 - so that is what all graphql is the
35:01 - reason graphql is better than a normal
35:04 - rest api
35:05 - is because
35:08 - uh going back to a really basic thing in
35:10 - a normal api
35:13 - there's only a preset list of answers
35:16 - that it will give and questions that you
35:19 - can ask
35:21 - but with graphql
35:23 - you can ask any questions that you want
35:26 - and assuming that that data actually
35:28 - exists you will get all the data back
35:32 - right the way you want
35:34 - uh i guess i'll give a real world
35:36 - example um
35:38 - like imagine if
35:42 - imagine if you called the grocery store
35:44 - to see if they had some certain items in
35:46 - stock and with the rest api there would
35:49 - be you called and there's one of those
35:51 - automated things and it says press one
35:53 - to find out how many apples we have
35:56 - press two to find out how many oranges
35:58 - we have
35:59 - right
36:00 - you could there was no option to
36:02 - automatically say
36:04 - i want to find apples and oranges you'd
36:06 - have to actually call back again
36:09 - and then press press one for apples hang
36:12 - up call back again press two for oranges
36:15 - with a graphql api
36:18 - you could just get on the phone and say
36:20 - hey i wanna know how many apples and
36:22 - oranges there are
36:25 - and then it would give you the apples
36:26 - and oranges right then you wouldn't have
36:28 - to make two phone calls
36:30 - okay that's why graphql is better
36:34 - hopefully that was a decent explanation
36:37 - let me know let me know if it was
36:38 - confusing
36:47 - uh steven says are these general
36:49 - javascript functions libraries etc or
36:51 - based on like react only uh you know
36:54 - what it's a mix so like some of the
36:56 - things that we do in within a component
36:58 - are just regular javascript
37:01 - other things are specific to react so uh
37:04 - to try to give you like
37:06 - this function here this git initial
37:08 - props is specific to next js which is a
37:12 - way to build with react
37:14 - but
37:16 - down here where we're doing this
37:18 - uh
37:19 - dot map and we're mapping over this is
37:22 - just regular javascript this is dot map
37:25 - and then we're using an arrow function
37:27 - within here
37:28 - okay but then once we jump back in
37:30 - inside of the arrow function we're back
37:33 - in react land where we're using this
37:35 - component
37:37 - okay but then
37:39 - um you know inside here
37:41 - we have a template literal syntax which
37:44 - is just es6 javascript
37:47 - so a react component is a
37:50 - very uh
37:52 - integrated mix of
37:55 - regular javascript stuff and then some
37:57 - stuff that is unique to react or unique
38:00 - to a particular
38:03 - package that you're using
38:05 - with react in our case next
38:12 - [Music]
38:16 - js oh cool and uh sasha says that this
38:20 - was
38:21 - uh uh first time in here so
38:23 - um
38:25 - awesome so yeah all right so officially
38:27 - now without doubt welcome
38:30 - and uh thank you for uh for letting me
38:32 - know which uh which option uh looked
38:35 - better there
38:36 - so
38:40 - let's see
38:41 - oh john hanson says still having errors
38:44 - to try to get the repo for
38:47 - uh
38:48 - javascript.af to work properly
38:51 - all right uh john if you haven't already
38:53 - done this
38:55 - open up an issue in the github repos for
38:58 - those projects and uh let us know what
39:01 - errors you're getting if you just want
39:03 - to copy and paste the error in there uh
39:05 - then
39:06 - harshit's probably going to be the one
39:07 - that's going to be able to help you the
39:09 - most since he did a lot of the work for
39:11 - this
39:12 - but if i can figure out what's going on
39:14 - from the errors and help you i will i
39:16 - will definitely do so
39:18 - and i'd like to have it in an issue and
39:21 - then that way if someone else has a
39:22 - similar issue later on then they can
39:24 - also benefit from it as well
39:27 - okay so my timer my five minute timer
39:29 - went off so i'm going to go back and
39:32 - check on this component
39:35 - and
39:38 - depending on
39:39 - if it works or not i may go right back
39:41 - to questions or we may work on this a
39:43 - bit more
39:49 - all right let me
39:52 - wait a second
39:54 - why am i getting there on that page that
39:56 - was weird
39:58 - all right
39:59 - okay so we have something now
40:02 - it just doesn't look like it's supposed
40:04 - to look and uh if you haven't already
40:06 - figured it out i'll tell you why in a
40:07 - second
40:08 - but what we do have is uh
40:11 - much nicer padding already
40:14 - uh we have some indication that these
40:16 - are separate we have our buttons with
40:19 - is the link properly going in there or
40:21 - not
40:22 - i'm not seeing it but let's
40:30 - let's see if there's actually a link in
40:32 - here
40:34 - since i don't see it
40:50 - hmm
40:54 - [Music]
40:56 - no i don't see a link what did i do
40:57 - wrong let's check out our component it's
41:00 - possible i omitted something important
41:03 - maybe
41:27 - and just double check what's going on
41:33 - that that looks like it's supposed to
41:38 - so there should be
41:42 - well let me try to click it let's click
41:44 - it and see what happens
41:50 - okay it does work i i assume that the
41:52 - link tag we were using would result in
41:55 - an a tag in the markup hey wow that
41:59 - so uh
42:01 - i i know i explained that this should
42:03 - work but i was still surprised that it
42:05 - actually worked the the length work
42:07 - worked and um
42:09 - there's a lot of information there the
42:11 - format is is decent
42:13 - uh definitely not ideal but
42:16 - decent
42:18 - wonderful
42:20 - all right so we're gonna go back at
42:22 - least we know that the links are working
42:25 - so i'm gonna go back and probably
42:30 - maybe the last thing i do
42:33 - we'll see
42:34 - uh did i accidentally click this again i
42:36 - think i did
42:38 - hopefully we'll just stop that all right
42:41 - um
42:43 - i'll i'll get these in more of a masonry
42:45 - look so
42:46 - let's go to
42:50 - our homepage where we already have a
42:53 - masonry layout working
42:56 - uh maybe
42:57 - home's kind of cluttered you know what
42:59 - let's go to our search page because that
43:01 - also has a masonry layout but it's not
43:03 - nearly as cluttered
43:08 - okay so
43:10 - is this it
43:12 - do we have a masonry layout on search or
43:14 - not
43:18 - now i can't even remember it's been so
43:19 - long since we worked on this all right
43:21 - so this would be a search result
43:24 - class
43:31 - you know what
43:31 - [Music]
43:33 - i don't think we do
43:35 - all right so let's go to our homepage
43:38 - not sure if i have it up already so i'm
43:40 - going to open up a little sidebar here
43:44 - and go down to our pages
43:48 - and
43:51 - index
43:55 - close that
43:56 - give us some space
43:59 - okay so
44:00 - what we're going to need
44:02 - right off the bat is a grid container
44:07 - [Music]
44:11 - and
44:18 - let's go with
44:24 - all right so let's go with the container
44:27 - i'm just going to copy this
44:30 - and then we'll close the tags after we
44:32 - copy it over but
44:34 - uh
44:35 - some of this whoops
44:38 - you know i don't i don't want all this
44:39 - right away i want
44:42 - these two first
44:44 - because these are going to go
44:47 - outside of here so these will actually
44:50 - replace
44:52 - this div
44:55 - and then
44:57 - so we just need
44:59 - masonry
45:00 - [Music]
45:03 - we are going to need to import mason so
45:05 - let's let's do that
45:08 - before we forget because this will get
45:10 - an error if we don't import it so we'll
45:12 - bring in masonry
45:14 - and then we also need to bring in grid
45:17 - which i don't think we have yet yep not
45:19 - yet
45:21 - masonry and grid
45:31 - okay
45:34 - so now we can go oops
45:38 - let's go to the right place here and
45:40 - let's just pull in a
45:43 - grid that we're already using
45:49 - we're also going to need to bring in
45:50 - these classes
45:53 - because we'll get an error from that as
45:56 - well if we don't
45:58 - fix that oops did i not get the whole
46:01 - thing
46:03 - nope i didn't
46:06 - let's copy and paste the whole thing so
46:08 - we're going to copy that
46:09 - and then paste in this whole grid
46:11 - element so
46:12 - if you're not familiar with with
46:14 - material uh ui you probably at least
46:17 - recognize by the name of grid what this
46:19 - is doing uh this this is gonna lay
46:22 - things out
46:23 - uh in a certain way certain screen width
46:29 - okay so here's our grid
46:31 - and
46:32 - let me save to get some formatting in
46:34 - here
46:36 - should format for me
46:41 - so right now we have it set on extra
46:44 - small screens to take up the full width
46:46 - of the screen which is fine and then on
46:49 - small screens to take up
46:52 - half the screen
46:55 - medium to take up half the screen large
46:57 - to take up half the screen
47:01 - um
47:02 - we can try it like that
47:05 - and see how it looks it might end result
47:08 - in cards being way too big on large
47:10 - screens though and so we may have to
47:12 - change it
47:14 - so i just had
47:16 - my
47:17 - at least based on what obs is telling me
47:19 - telling me my stream dropped off for a
47:21 - second so if it did i apologize
47:25 - uh hopefully it's good now
47:28 - okay so we have
47:31 - oh we need the the styles
47:36 - let's find it
47:38 - content container
47:45 - and we may want to adjust this
47:47 - and we need that grid item fix
47:51 - yeah i like we may want to adjust this
47:53 - these styles are um particular
47:57 - to our our home page so they may not
48:01 - work well with what we're trying to do
48:02 - here but we'll bring them
48:04 - in for now
48:08 - and uh we actually need to
48:12 - we need to create
48:13 - our styles here
48:16 - const
48:17 - styles
48:28 - so you see here this
48:30 - looks like a javascript object with css
48:34 - in it and that's pretty much exactly
48:36 - what it is
48:37 - it's a way to write css
48:40 - using uh
48:42 - javascript
48:44 - and have it live right in your component
48:46 - this really helps a lot with reusability
48:50 - but it is a little bit weird to get used
48:52 - to it first
48:54 - so
48:56 - hopefully
48:58 - this will work without me bringing in
49:00 - anything else i think it will but we can
49:03 - double check
49:08 - the styles
49:11 - nope i believe i need
49:14 - we'll see if i get an error i think i
49:16 - need
49:17 - classes is not defined
49:27 - i think i do need with styles then
49:55 - styles
49:56 - uh let's see what we have down here
50:01 - goes with root with data and then we
50:04 - also need with
50:07 - styles
50:14 - styles hopefully that'll work
50:17 - it should work since we're using uh
50:19 - compose
50:21 - but let's check
50:33 - [Music]
50:39 - oh no okay where is this at
50:41 - facultylist.js
50:47 - 41.
50:52 - oops i know why
50:54 - we never
50:58 - brought in
51:01 - [Music]
51:20 - there's
51:25 - [Music]
51:28 - so we did pass in
51:35 - we passed in classes here
51:38 - um
51:39 - so we're not gonna be able to do this in
51:41 - the same way but
51:43 - uh for instance let's see where's my
51:46 - other component here
51:53 - faculty list item so we're doing
51:55 - something similar
51:57 - um
52:00 - so you can see we have this inside of
52:03 - our render uh we can do const classes so
52:07 - uh
52:09 - we'll put it in here
52:11 - we weren't
52:13 - passing any other props in like that
52:16 - so this is called destructuring when we
52:18 - do it like that so basically allows us
52:20 - to omit
52:21 - this dot props before each one of our
52:24 - props so really helps to save a lot of
52:27 - typing and a lot of space in your
52:28 - component if you have a lot of props
52:30 - like we do here
52:32 - we're going to do it here as well
52:35 - although in this case
52:38 - not not really that much going on
52:43 - but there could be
52:45 - and most likely will be so we're going
52:47 - to anticipate that
52:51 - so we're going to say cons
52:53 - classes
52:55 - and
52:56 - equals
52:57 - this
52:59 - props
53:01 - let's say that that should fix
53:05 - our issue
53:17 - and i just keep uh manually refreshing
53:20 - because
53:21 - the auto refresh takes forever when i'm
53:23 - streaming but normally you you wouldn't
53:26 - like if you're going to work on this
53:27 - project locally you you would not need
53:29 - to
53:31 - manually refresh
53:34 - if your computer is at all capable
53:39 - no way
53:44 - why did it not work
53:46 - hmm
53:58 - all right
54:00 - what did i do wrong
54:07 - [Music]
54:15 - all right let's compare
54:19 - our use of classes here
54:21 - so
54:24 - pretty much the same
54:26 - okay
54:30 - let's make sure i copied this in
54:32 - properly
54:35 - so we have const styles equals theme
54:38 - arrow
54:48 - okay
54:53 - [Music]
55:01 - all right everything looks fine there
55:06 - let's see
55:15 - uh let me make sure
55:18 - what i did bring in
55:23 - yeah it should be fine like this oh let
55:24 - me let me check the live chat and see if
55:26 - you all see something that i'm missing
55:59 - [Music]
56:06 - all right i don't see anything
56:10 - all right
56:11 - let me i'm just gonna check my imports
56:13 - again to make sure i'm storing
56:22 - that's interesting
56:26 - so
56:27 - not sure if this will have an impact at
56:30 - all but i'm definitely using a different
56:34 - way to import that
56:39 - it
56:40 - it shouldn't make a difference but
56:44 - i'd rather
56:45 - do what we're doing here because these
56:47 - are both
56:49 - no actually it's not this isn't uh a
56:52 - regular component this is a
56:55 - page component
56:56 - so i will try it the only other thing i
57:00 - can think of is what we're doing down
57:01 - the bottom within compose maybe is is
57:04 - not working
57:16 - for those of you joining me for the
57:17 - first time
57:19 - uh
57:20 - i do mess up in this stream quite
57:22 - frequently and um
57:25 - because this is supposed to be my normal
57:26 - everyday work and i do make mistakes
57:29 - every day so i don't
57:30 - practice this beforehand
57:32 - and uh i think part of the value of the
57:34 - stream is that i make mistakes and and
57:37 - we work through it together
57:39 - and try to come to a solution and i
57:41 - think that's a more realistic view of
57:44 - what
57:45 - web development is
57:48 - than if i were to pre
57:50 - you know rehearse all this and do it
57:52 - perfectly
57:55 - all right
57:57 - with styles let's see what we did here
58:03 - okay so we didn't
58:07 - do it there
58:17 - i wonder if
58:20 - let's look at
58:23 - this page
58:25 - and see what we're doing here
58:29 - i guess we're not
58:31 - we don't have any styles on this page
58:34 - there's got to be a page where we're
58:37 - both
58:38 - using styles uh in our component and
58:42 - we are
58:44 - bringing in data so let me think where
58:47 - would we be doing that
58:56 - let's check the search page so i think
58:58 - that's probably where we would be
59:00 - all right so do we do have styles and
59:05 - maybe we're bringing in data now i think
59:07 - about it we're not using graphql on this
59:09 - page so we probably aren't
59:11 - yep that's not gonna work
59:14 - all right
59:21 - let's check out
59:24 - our major page
59:27 - yes alright yes this is
59:32 - god styles
59:34 - all right excellent
59:37 - [Music]
59:42 - with
59:44 - her there we go
59:47 - so this is probably the problem
59:51 - i
59:52 - was just doing this wrong
59:55 - down here
59:57 - uh there is something different going on
59:58 - up top as well so
60:00 - we may need to change two things
60:06 - so let's correct this
60:08 - and we're gonna
60:11 - add in
60:12 - well we should just be able to add this
60:15 - i believe that's that's what we want to
60:17 - be doing
60:18 - let's check it out yay it works
60:22 - cool
60:24 - all right so this
60:25 - is more of what we're going for uh you
60:28 - can see
60:30 - we have what's
60:32 - it's kind of a masonry layout um
60:36 - let's try to drop down so we can see so
60:38 - you see once we drop down to a certain
60:40 - place
60:42 - it automatically changes
60:45 - kind of has a nice of like switching
60:47 - effect
60:52 - and
60:57 - cool
60:58 - all right so that works
61:00 - um like i said before i may not want on
61:03 - a large screen to have let's let's get
61:05 - rid of this for a second
61:07 - if my lag will allow it
61:13 - all right it won't but you can imagine
61:15 - on a larger screen
61:17 - maybe too big uh you know consider once
61:19 - we do put an image in
61:21 - you know if that's the width of the
61:23 - image and it's a tall image it's going
61:25 - to be huge right we don't really want
61:27 - that so
61:29 - um
61:30 - we may limit
61:33 - the size of the card
61:37 - but
61:41 - so far i mean it it's still very plain
61:44 - but our lengths work
61:45 - it looks a lot nicer than it did when we
61:48 - started
61:49 - and uh
61:50 - i'm not gonna mess around with trying to
61:52 - pull data out of our our content
61:55 - right now
61:57 - uh i'll just um
62:00 - maybe if i have some time
62:02 - i gotta take my kids to
62:04 - a soccer practice today so i may not
62:08 - have time today but if i remember maybe
62:09 - i'll make some issues
62:11 - and
62:12 - if any of you all are interested in
62:16 - pulling out the proper data
62:19 - you can take a shot at it as well
62:24 - i think that's
62:25 - that's not bad for right now
62:27 - all right so i'm going to
62:30 - [Music]
62:32 - scroll up to where i left off
62:35 - and answer the rest of these questions
62:44 - um
62:46 - i didn't stream yesterday uh because i
62:48 - was at the google i o extension
62:51 - conference in pittsburgh which ended up
62:53 - being really awesome
62:55 - uh if anyone is
62:57 - thinks it may be interesting for me to
63:00 - do a um
63:02 - like a little video recap let me know
63:05 - i'll do one
63:06 - um
63:07 - and i'll post it on my youtube channel
63:10 - which there's a link in the description
63:11 - for my channel
63:12 - if no one's interested at all just don't
63:14 - say anything or you could say no if you
63:16 - want to be really direct about it uh and
63:19 - then i i won't make the video but it was
63:21 - a cool experience so i thought i would
63:23 - share if if you're interested
63:28 - let's see
63:38 - so i'm just trying to figure out where i
63:39 - left off at right now
63:43 - okay found it
63:58 - uh john hanson says should it be just a
64:00 - functional component and then have it
64:02 - brought into a container component
64:06 - um
64:07 - yeah actually to tell you the truth i
64:09 - haven't looked through a lot of the
64:10 - components to see if they can become
64:11 - functional components and i suspect a
64:13 - lot of them could i like to start out
64:16 - with um
64:18 - with like normal components
64:21 - and then later on i can turn them it
64:23 - seems to be easier although now there's
64:26 - a plug in a visual studio code that can
64:28 - switch your your
64:30 - components back and forth
64:33 - uh so i guess i don't have to worry
64:35 - about it but it was usually easier to
64:37 - switch to a functional component instead
64:40 - of trying to switch back
64:42 - so
64:43 - i i suspect you're right about this one
64:45 - and about a lot of other components in
64:47 - there that they could just be functional
64:53 - uh teo says i want to follow along with
64:55 - you on these live streams what is the
64:57 - schedule how do i get into your code so
65:00 - um
65:02 - the schedule is
65:03 - it varies i try to stream monday through
65:06 - friday i usually don't get all five days
65:08 - in depends on when i have meetings or
65:10 - what's going on
65:11 - um
65:12 - so probably the best thing to do would
65:14 - be subscribe to a free code camp channel
65:16 - and turn on notifications on youtube
65:19 - and then if you follow me on twitter uh
65:22 - and or instagram i usually post about
65:25 - when i'm gonna stream i'm most
65:27 - consistent on twitter occasionally i i
65:30 - don't have time or forget to do it on
65:31 - instagram
65:33 - uh but then at least you'll know
65:35 - a little bit beforehand when i'm going
65:37 - to stream
65:39 - uh
65:41 - so that's if you want to get into the
65:42 - code the
65:45 - the link to the github repo is in the
65:47 - description it's totally open source you
65:49 - can see everything
65:51 - and then feel free to ask questions if
65:53 - you need to
65:57 - okay johnny carter says i find that
65:59 - component packages are quite restrictive
66:01 - when trying to match design specs such
66:03 - as material ui have you come across any
66:05 - issues yourself
66:07 - um yeah yeah i mean we need to
66:09 - occasionally when i come across issues
66:11 - like that what i'll do is
66:15 - make a
66:16 - i can either make a completely new
66:18 - compute component and do all the styles
66:20 - myself which i find to be not a great
66:22 - option it does give you the most control
66:24 - but you end up recreating a lot of
66:26 - things that you don't need to uh the
66:29 - other option is to create a container
66:31 - component around some material ui
66:34 - components
66:35 - uh and then that way you can kind of
66:38 - manipulate and do what you want with
66:39 - them and then the other option is to
66:41 - actually manually
66:45 - go in
66:46 - to your node modules
66:48 - copy and paste the
66:51 - code for a particular component from
66:53 - mature ui pull it out make it your own
66:56 - component
66:58 - adjust it enough so that it actually
66:59 - works
67:00 - in that new component folder that's kind
67:03 - of at that top level
67:06 - and then you can you can change it to be
67:09 - what you want the only downside to that
67:11 - is material ui is going to continue to
67:13 - advance and update
67:16 - and your component is not
67:19 - so
67:20 - there's a trade-off but that gives you
67:24 - the maximum amount of customizability
67:26 - without having to recreate a lot
67:29 - so i've i've done those things that's
67:32 - how i do it so
67:34 - yeah i but i found
67:35 - what you give up in going with the
67:37 - framework in terms of freedom to do what
67:40 - you want uh it's it it really is worth
67:43 - it for me
67:45 - because
67:45 - [Music]
67:47 - you save so much time
67:52 - sorry you save so much time not just in
67:54 - terms of building the components
67:57 - themselves
67:58 - but in testing
68:00 - you go with a well-known
68:02 - ui framework
68:04 - there are thousands of hours of tests
68:07 - that have already been done by the
68:08 - people to build it and by the people
68:09 - that use it
68:12 - so you it's very very difficult for
68:16 - one person or even a small team to
68:18 - replicate that amount of of testing
68:23 - figuring out all the different ui bugs
68:25 - that happen in different browsers and
68:27 - devices and things so
68:29 - uh that's why i generally
68:32 - am okay with
68:34 - you know the small annoyance of
68:37 - the inflexibility that occurs sometimes
68:47 - uh michael creel says i might want to
68:49 - build a card template then extend it to
68:51 - more specific uses
68:52 - yeah for sure um
68:55 - you know i like i kind of mentioned
68:57 - before
68:58 - in reality we probably could just could
69:00 - have used that profile card
69:02 - template and adjusted it
69:05 - uh but for the sake of the stream i
69:07 - thought it might not be a bad idea to
69:09 - just
69:11 - copy it over do our own thing
69:14 - and um
69:16 - simplify it rather than complicate an
69:18 - existing component
69:21 - so i thought that might have been a
69:22 - slightly more
69:26 - kind of slightly easier to understand
69:29 - for people who weren't that familiar
69:30 - with react
69:33 - but that's definitely a candidate for
69:35 - refactoring
69:41 - uh
69:48 - let's see michael creel says
69:51 - um is dangerously shot enter html
69:54 - something you made because the name
69:55 - intrigues me no no it's not what i made
69:58 - uh
69:59 - the
70:00 - the team that made react actually made
70:02 - that uh the reason is it's titled that
70:04 - is because
70:05 - you're pulling in the raw html when you
70:07 - do that
70:09 - and if you
70:11 - if the source is unknown or
70:14 - like let's say you're allowing users to
70:16 - input things and then you're displaying
70:19 - them on your site
70:21 - that could potentially be dangerous if
70:23 - if you're not
70:24 - checking that data first
70:27 - to make sure they're not throwing in
70:28 - like script tags or weird things in
70:30 - there
70:31 - that could harm another user so
70:35 - we
70:36 - in this case
70:38 - we control the data and where it's
70:40 - coming from
70:41 - so it's okay to use but you definitely
70:44 - want to be sure like i mean let's say
70:48 - you were building some sort of forum or
70:51 - a discussion board or whatever
70:55 - and
70:57 - you let users put in data and then the
70:59 - data could be displayed to other users
71:03 - without any
71:05 - sanitization uh going on
71:08 - then that would be that would be really
71:11 - bad so that's why it's labeled
71:13 - dangerously
71:19 - oh no john hanson said uh things are
71:21 - fuzzy can't read a thing
71:24 - okay now it's fixed all right so i'm
71:26 - sorry about that if that happened to
71:27 - anyone else
71:29 - uh my stream
71:30 - for whatever reason the stream
71:31 - occasionally just keeps dropping off uh
71:34 - like in terms of the like uh kilobits
71:36 - per second it'll just go right down to
71:37 - zero and then a few seconds later it'll
71:39 - pop right back up and be like 2500
71:42 - uh so i i don't know why it's doing that
71:53 - [Music]
72:01 - nino says uh you've been working on this
72:03 - project for a really really long time
72:06 - yep
72:07 - yeah i have
72:10 - so
72:11 - i've been working on it for a long time
72:13 - um mainly the thing that's slowing me
72:15 - down the most is just the amount of data
72:17 - that needs to be brought over and the
72:20 - this
72:22 - the quality of the data
72:24 - it's not in very good shape it's not
72:27 - it's not organized in a way that allows
72:29 - me to just bring over large pieces of
72:32 - data in bulk
72:33 - um
72:34 - and it requires a lot of cleanup
72:37 - so
72:38 - that's what i've been working on a lot
72:40 - in terms of the react stuff i really
72:43 - only work on the react stuff whenever i
72:44 - stream
72:46 - um which is only you know an hour or so
72:48 - a day and sometimes not every day
72:51 - so
72:53 - it has been quite normally it would not
72:55 - take nearly this long just to build a
72:57 - react site and a pretty simple one at
73:00 - that
73:01 - the data is what's really
73:03 - slowing me down
73:05 - so
73:08 - i i agree this is a lot longer than
73:10 - normal
73:18 - uh albert says how long until you finish
73:20 - this project uh well it it is supposed
73:23 - to launch on june 4th
73:26 - that's our our date for launch
73:28 - i mean potentially if it didn't launch
73:30 - then we have a little bit of room
73:33 - you know but
73:34 - should be launching around then
73:37 - uh so
73:39 - after that i'll probably still work on
73:41 - this and be constantly updating it but i
73:44 - i already have another project lined up
73:46 - that'll be my main focus
73:48 - uh after this launches
73:56 - michael so so earlier when i was
73:58 - explaining graphql and rest apis and
74:01 - things uh michael creole had mentioned
74:03 - uh rest would tell you every fruit you
74:05 - have all at once then you'd have to
74:07 - search for apples and oranges yeah
74:09 - actually you're right yeah there would
74:10 - be
74:12 - potentially you would just get
74:13 - everything and have yeah that is a good
74:16 - analogy uh a good piece of the analogy
74:19 - steven says the graphql explanation is
74:21 - pretty good trying to decide if you want
74:23 - to dive into it for a job you have at
74:25 - work oh okay cool i really like it i'm
74:28 - definitely not as
74:30 - good at getting data yet just in terms
74:33 - of like the
74:35 - how you format a query
74:37 - i was just so used to
74:40 - rest apis in particular the wordpress
74:43 - rest api that i could get data a lot
74:45 - more quickly without having to look up
74:47 - how
74:48 - so
74:49 - i think once i work more with graphql
74:53 - it'll be a lot easier for me to get data
75:04 - [Music]
75:22 - michael creole says you should change
75:23 - the link text to would you like to know
75:26 - more
75:28 - yeah i don't know if i want that much
75:29 - text for the link
75:31 - i i don't want it to wrap onto a second
75:34 - line when it's on a small screen
75:38 - so for just for a button
75:40 - if it were
75:44 - in a different context in a different
75:45 - layout i would be okay with that
75:47 - but generally i like to stick with
75:49 - smaller
75:50 - you know one or two words for a button
76:07 - john says i actually can understand like
76:10 - a second language what's happening today
76:12 - all jesse's fault
76:13 - that's good
76:17 - michael creel says i know i'm ocd but
76:19 - the ordering uh of your import
76:22 - statements make my makes my eye twitch
76:24 - yeah my import statements are a mess if
76:26 - anybody really wants to uh organize the
76:29 - import statements feel free
76:31 - if there's some plugin that does it
76:32 - automatically uh let me know
76:35 - because i'm i'm pretty bad at that i
76:37 - just throw them wherever when i'm
76:39 - working
76:40 - because i just like i don't want to get
76:42 - sidetracked
76:43 - and
76:44 - forget what i'm about to do
76:47 - you know you know how you like you get
76:48 - it all in your mind like this is what i
76:50 - need to do
76:51 - and then if i try to like okay how am i
76:53 - gonna organize these
76:54 - i might forget where i'm at so
76:58 - i try to not let myself get distracted
77:01 - by the order so it ends up a mess
77:13 - albert says i've been learning react in
77:14 - redux for a year and i still don't know
77:16 - how to make a website
77:20 - well keep at it i mean you'll get
77:22 - um
77:24 - you get to that point i mean it might be
77:26 - best
77:29 - i i would definitely make use of things
77:31 - like create react app and next because
77:33 - basically you run those and you have a
77:36 - website
77:37 - you know it it already works you know
77:39 - you you have a progressive web app that
77:41 - already works as is uh you just need to
77:44 - add
77:45 - you know your own styles and content and
77:47 - just kind of add on to it so
77:49 - uh that's where i would say if you're
77:51 - having trouble with it definitely start
77:52 - there if you haven't already
77:54 - i i would for never do
77:57 - i don't want to say never but like
77:59 - there'd have to be a really really good
78:00 - reason for me not to use something
78:03 - to build out a react app
78:06 - and then i just start from already build
78:09 - you know setup already configured
78:11 - webpack like you know all of that
78:24 - alright i'm going gonna try
78:26 - i gotta end the stream here soon so i'm
78:28 - gonna try to uh maybe skip some of the
78:31 - comments and just get to the questions
78:34 - and i mean if anybody's interested you
78:35 - can go back and read the the replay
78:40 - um
78:41 - let's see
79:20 - okay john hanson said instead of
79:21 - limiting card size full screen it might
79:23 - be better to have a containing div that
79:25 - sits uh in the middle and then media
79:28 - query with of that div will have auto
79:30 - margins on the left and right yeah you
79:32 - know what actually i think that's
79:34 - that's how i had it set up
79:37 - uh with the styles that i brought over
79:39 - so
79:40 - um i'm i'm thinking though it may
79:44 - it may not be enough so maybe i'll just
79:46 - have to increase
79:49 - the margins in that case
79:51 - [Music]
79:54 - but i don't want to increase too much it
79:56 - might be better to go to
79:58 - let's say three columns
80:01 - and have it display a little wider than
80:04 - to have keep two columns but i would
80:06 - only take up just this tiny section of
80:08 - the screen
80:09 - i think that that may look a little
80:11 - weird
80:18 - stephen said i don't stream because i
80:20 - make more mistakes than you you're the
80:22 - you the bomb
80:23 - thank you i appreciate it but i don't i
80:26 - make a lot of mistakes sometimes like
80:27 - today was
80:29 - today maybe it was like average amount
80:31 - of mistakes but
80:32 - um
80:36 - i i don't know i try i mean i ought to
80:38 - be getting good at streaming i've been
80:40 - doing it for over a year now so
80:42 - i would hope i'm
80:44 - i'm at least okay at it by now
80:50 - [Music]
80:53 - uh johnny carter says thanks for
80:55 - answering i like that you're smiling
80:56 - about messing with the node package
80:59 - that's exactly what i ended up doing
81:01 - yeah i mean
81:03 - normally like you don't want to get in
81:04 - there and mess with it but
81:07 - i mean
81:09 - what other sometimes that's your best
81:10 - option you know
81:13 - so
81:15 - i don't mean i guess the the other
81:17 - option be like maybe
81:19 - adjust it to the way you want it submit
81:21 - a pull request and hope that it actually
81:23 - makes it into material ui or whatever
81:25 - framework
81:26 - which i mean that's valid too but you're
81:29 - uh it's going to take longer and it's
81:31 - not guaranteed
81:33 - so
81:34 - i mean maybe doing both is the best way
81:37 - all right
81:38 - uh neeraj says hi hey how's it going
81:41 - and
81:42 - dextroyer of world says what is your
81:45 - visual studio code theme it's the seti
81:47 - theme so s-e-t-i
81:50 - um oh nikki's got it so seti
81:54 - uh seti icons and uh um
81:57 - fr fire code font there we go fira code
82:01 - is the is the font
82:03 - so that's why we got little
82:06 - things like i'm trying to find an arrow
82:08 - function i know i got one over here
82:11 - yeah so that's why the arrow functions
82:12 - look like this
82:15 - a little bit different and then
82:18 - there's some other things that look
82:19 - different too i don't really have a good
82:21 - example of it right now but
82:23 - okay well i gotta go gotta take my kids
82:26 - to soccer
82:27 - so
82:29 - thank you all for watching
82:31 - uh really glad uh
82:33 - it was really really glad that i had
82:35 - your opinion on things and your help
82:36 - with some of these things so i should be
82:38 - back tomorrow i'll be streaming from the
82:40 - office tomorrow
82:41 - um
82:43 - maybe
82:44 - maybe the afternoon not sure yet i'll
82:46 - let you all know on twitter and
82:48 - instagram uh when i'm gonna stream and
82:52 - uh subscribe to this channel and uh turn
82:56 - on your notifications and you should get
82:58 - a notification as well
82:59 - um
83:01 - anyway
83:02 - uh i'll see y'all tomorrow uh until then
83:04 - have a wonderful day