00:00 - Hey, free code camp. Welcome to another "The Daily Programmer" web series and in this video
00:04 - We're going to be talking about the problem three one four
00:07 - Concatenated integers posted on the daily program or subreddit, so let's go break it down on the whiteboard okay?
00:12 - so this concatenated Andrews problem is defined like so
00:16 - Find a way to concatenate the numbers inside of this array in such a way that you're given the min and the Max
00:22 - concatenation and what we mean by that we can just go ahead and write out all the different permutations of
00:27 - which we can concatenate these numbers together and
00:32 - Then find the number which is the greatest and find the number which is the least greatest
00:40 - So in this case
00:41 - We're left with six permutations where we start with the one we can start with the 9 or we can start with the ten
00:45 - Followed by the one and the nine or  the ten and the one, ETC, and it turns out
00:49 - If you were to loop through all of these numbers and try to find the max our
00:52 - max number would actually become
00:54 - this number and
00:56 - Our min would actually just be the opposite of that
01:05 - So if you notice nine one 10 is our max and the opposite is actually just to reverse so 10
01:10 - 1 9 which is 10 1 9 down here
01:13 - So we've kind of made an interesting observation about this problem
01:17 - Is that the max is just a reverse of the min so since that is the case?
01:22 - It would make sense that if there's a way to sort this array
01:25 - from min to Max, so
01:27 - I'll just go like this
01:30 - If we find that array and sort in such a way
01:32 - We can just simply print out the man in the max by either traversing from left to right or right to left
01:38 - So in that case, how would we actually sort this array and does sorting the array actually work?
01:43 - So let's try to convince yourself that there is a way to sort this array in such a way that gives us our
01:47 - min to Max
01:49 - So it turns out if you wanted to have this array set up in such a way
01:54 - from N to max it would make sense that you need to start with the lowest number and
01:58 - That when that numbers can count any with another number it gives us the lowest possible number
02:03 - Versus contending with another number if that makes sense so again let's just go ahead and work this out
02:07 - Let's say we have an a here
02:09 - This is a and this is B
02:12 - those make more sense to have this B19 or does it make more sense to have a D9 one so if
02:19 - a plus b is
02:22 - less than B plus a
02:25 - we know that we found a good order, and we need to keep it there so just to say keep a
02:33 - as is
02:36 - otherwise if we have a plus b is greater than B plus a
02:47 - We need to swap the elements, and if they're equal, so if equal
02:55 - Keep the same and so what we mean by this if we were to check is 1/9
03:04 - Less than 91 it is so we can just go ahead and keep these numbers as is and then
03:11 - move on to the next
03:13 - check
03:15 - in this case we actually have else here, and then we have else here, but it doesn't really matter because
03:21 - These won't equate the true unless the other one is false so in this case
03:25 - We know that one in one should come before the 9 let's move on and move the b over here
03:30 - So we're going to check the same thing is a plus b. Which is 110
03:36 - less than
03:38 - B plus a which is 101 and
03:41 - It is not less than it's actually this one right here
03:46 - So we need to swap these elements because again it makes sense that
03:50 - we need it to become the minimal when concatenated together, so
03:55 - 110
03:56 - Kind of should be swaps to be 10
03:59 - 1
04:01 - So that should make sense again if you just follow this algorithm here
04:04 - we can just swap them or keep them the same as we iterate through our array and
04:09 - Then now that we've reached the inner day array here with the b. We can increment a
04:14 - And do the same check is
04:17 - 9 plus 1 or concatenate together less than 1 a 9
04:22 - it's not
04:24 - It's this case. We're going to hit which is
04:27 - 91 is Greater than 19 so again. We need to swap these numbers because it makes more sense to have the one
04:34 - Concatenated with the nine versus the nine cat name with the one so we switch this
04:39 - to a one
04:41 - switch this to a nine and
04:43 - At this point. We have finished sorting the array
04:50 - so we can get rid of these little
04:52 - annotations that I added and
04:54 - Again if we were just to print out left to right so men
04:59 - So ten one and nine
05:02 - We got our men
05:04 - So if we were to print this out right two men are from right to left
05:08 - We are going to get our maximum which is going to be nine one tenth all right
05:13 - so one more time the recap is the problem can be solved by Sorting the array and
05:17 - the hard part is figuring out the function to Sort the array by and
05:21 - it turns out our function what we need to do is just take catenate a would be and then check if it's less than
05:28 - Concatenate would be with a so let's go ahead and implement this in Javascript, all right
05:32 - So in Javascript let's first declare a function, and I'll call it get min, max
05:37 - which takes an input as a
05:40 - parameter, which is just going to be that array of numbers and
05:44 - Then here we're going to go ahead and just call it
05:49 - So get nan max and it was going to go ahead and pass those numbers in
05:54 - and
05:55 - Just to make it simple. Let's just convert these all to strings I
06:00 - Know the example has as integers in the subreddit, but let's make it string so it's egypt for us
06:05 - and
06:07 - Then we can just go ahead and see
06:11 - Get the results
06:12 - And then we just print out the results here and just to verify
06:15 - that will just say results that man is equal to this string and
06:22 - Then results that max should be equal to
06:26 - This string right here. So now that we have a kind of a basic setup where we pass in an input
06:31 - And then we expect Amanda max for our min max function
06:35 - I was going to go ahead and return an object to the properties
06:37 - In and the property's max and we can just go ahead and just set those in null for now
06:41 - and
06:41 - then we can kind of work through one by one of how to get this working so the first thing for getting the men we
06:47 - First need to take the input
06:48 - strings and
06:50 - Then we need to sort them
06:52 - And let's go ahead and pass in some anonymous
06:55 - Callback function
06:59 - so
07:01 - Takes a and b as a parameter and what we need to do here
07:06 - Is actually really really straightforward and really easy to do instead of having that long drawn out if statement
07:12 - we could just return a
07:15 - Plus B. So akin technique would be minus b. You can cut in with a
07:22 - so this will give us a negative number if
07:26 - the a should come to the left of the B, and just give us a positive number if
07:32 - The a should come to the right of the beef
07:36 - So again if negative, we should keep it the same if positive
07:39 - We need to swap them that's kind of what's going on behind the scenes, but we're using Javascript Sort and not the manual
07:45 - Sort that I'd end the whiteboard
07:46 - So that we've taken the input, and we sort of them
07:51 - At this point. We can just call a reduce function
07:55 - Which again is going to take an anonymous call back function so a string value?
08:00 - and
08:01 - Then what we can do is just return the string and keep concatenated with the value
08:07 - So I can do something like that
08:12 - that oh yeah, Simon : and then
08:15 - That should give us the min that we're looking for and if you saw at the moment. I put this comment here
08:20 - We go down here line 20. It's printing out true, and that is because
08:24 - Results if I were to print this out
08:26 - our
08:28 - Min is actually equal to what we expected
08:32 - So therefore this function is working as expected
08:34 - And it's the exact same algorithm that we worked on the whiteboard we have the input array
08:39 - And then we sort it based on that whole logic that we worked up and then
08:44 - We can connect them all together using a reduced function, and then that's printed out and verify against this expected output down here
08:51 - So the max we need to do is just reverse
08:56 - the array so if they reverse here and
09:00 - Then we can do another reduced function to just print it out
09:06 - So now down here. We can see on line 24 results it is printing out the expected results for Max and
09:13 - Min, these are both true
09:16 - So that way there we pretty much implemented the entire algorithm that we did in the white board
09:21 - Using Javascript, Sort method reverse method and reduce method and just a kind of bat take a step back because I did like the condensed
09:29 - Simplified version, this is very concise
09:31 - Instead what we could say is if a our pars end of a plus b
09:37 - is less than pars int a B plus a
09:44 - We could return a negative number
09:48 - and
09:50 - Then otherwise we return a positive number and then after the same return zero
09:56 - This is the exact same logic basically as this line 12 was
10:01 - The only differences, we're kind of actually writing out
10:04 - How it works and then down here?
10:06 - We see that. We're still getting true and the value still matched so obviously there's factoring is still working
10:12 - But this is kind of to explain. You know the whole algorithm that we did in the white board
10:16 - This is how you write it with the if statements, but a more concise condensed version would just be return a plus b
10:22 - Concatenated minus B. Plus a concatenated and that would give us the same result
10:27 - Alright, so that wraps up the concatenated
10:29 - Integers problem again if you have a different solution feel free to post it in the comments
10:34 - And it also liked this tutorial if you thought it was good, and be sure to subscribe to free code camp below alright
10:40 - Thanks for watching
10:43 - you