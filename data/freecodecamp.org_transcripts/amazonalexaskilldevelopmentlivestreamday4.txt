00:27 - hey this is steve we are to get started
00:29 - in just a second here looks like i'm
00:32 - having some network issues i'm getting
00:35 - uh some errors on the encoding side can
00:38 - you guys see this all right and hear
00:41 - this all right if you could leave a
00:43 - comment in the chat that'd be super
00:56 - helpful let's see
01:16 - okay looks like uh looks like it's all
01:19 - working now so
01:21 - welcome um welcome back if you were on
01:24 - previously we're now day four of five
01:27 - working through um our
01:30 - project here developing an alexa skill
01:33 - for free code camp i keep forgetting to
01:35 - turn alexa off every time i say that
01:38 - today we are going to uh we're going to
01:41 - cover a lot where we we started talking
01:43 - about slots yesterday and
01:46 - um we are going to get into it
01:49 - uh a little bit more today and talk
01:50 - about custom slots so we're down here
01:52 - day four a couple of other things uh
01:55 - that i talked about yesterday i set up i
01:58 - pushed all the code out to to github
02:01 - and so if you go to github.com
02:04 - dabble lab uh there's a repo called free
02:08 - code camp livestream
02:10 - so if you head out there that is what
02:13 - i'm looking at right now
02:15 - i've got all of the um the the source
02:17 - code out there that we've been working
02:19 - on
02:20 - along with um our dialogue yeah earlier
02:23 - this morning i i made some cleanups or i
02:26 - just kind of took what we had from
02:29 - yesterday and and um
02:31 - cleaned it up a little bit let me um let
02:33 - me show you what i changed just so uh
02:36 - nothing is confusing for anybody that
02:38 - was here
02:39 - uh yesterday so the um the dialogue
02:46 - uh we there's
02:47 - there's three intents that we're going
02:49 - to work through here so i changed the um
02:52 - the example dialogue to uh alex well
02:56 - actually i'll just play it so you guys
02:57 - can hear it
02:58 - alexa open free code camp
03:02 - hello welcome to the free code camp
03:05 - skill would you like to learn about free
03:07 - code camp hear about our most recent
03:09 - medium post or get answers to frequently
03:12 - asked questions
03:15 - get answers to frequently asked
03:17 - questions
03:20 - there was an error the error was could
03:22 - not find handler alexa stop
03:25 - yeah so that's where we're going to pick
03:26 - up today so we didn't get that
03:28 - implemented yesterday but we um we also
03:31 - what we did get implemented yesterday
03:33 - was the
03:34 - medium post and i changed that around
03:35 - just a little bit to make it um
03:38 - less stubbed out so alexa open free code
03:40 - camp
03:45 - alexa open free code camp
03:49 - hello welcome to the free code camp
03:52 - skill would you like to learn about free
03:54 - code camp hear about our most recent
03:56 - medium post or get answers to frequently
03:58 - asked questions most recent medium post
04:04 - the most recent article posted on medium
04:07 - for free code camp is titled recursion
04:09 - demystified it's been recommended zero
04:12 - times
04:14 - alexa stop okay so so that's really so i
04:17 - didn't change a whole lot i just kind of
04:19 - cleaned it up a little bit so that it
04:21 - made uh made more sense so um we're
04:24 - gonna pick up today from there and like
04:28 - i said today um we're gonna implement
04:31 - the dialogue let me um
04:33 - let me just recap what we did yesterday
04:36 - before i get into this so yesterday
04:39 - uh day
04:40 - three
04:48 - so yesterday we we talked about
04:50 - debugging and
04:53 - we looked at making modifications to the
04:56 - skill manifest and then we also talked
04:59 - about beta testing and for anybody that
05:02 - filled out that google form uh you
05:05 - should have gotten an invite to beta
05:07 - test and if anybody wants to do that
05:09 - that hasn't done it already if from the
05:11 - uh the repo from the readme page i put a
05:14 - link here to um
05:16 - complete the the form to uh beta test
05:19 - the skills so if you've got
05:21 - an echo and you want to test the skill
05:24 - before it's published live you can use
05:26 - the the beta test link to do that
05:28 - okay so let's get into day four so um
05:33 - like i said using slots so
05:36 - the um the the functionality that i'm
05:38 - gonna get into today is custom slots and
05:43 - specifically what we're gonna do and we
05:45 - started talking about this yesterday but
05:47 - um didn't get very far into it uh what
05:50 - we're gonna do is we're going to create
05:52 - a
05:53 - a custom slot
05:54 - and uh an intent for handling
05:58 - questions that could be pretty much
06:00 - anything as i was thinking about a
06:01 - little bit more after we finished up
06:03 - yesterday a lot of the
06:05 - the functionality that we
06:08 - we
06:08 - had kind of brainstormed two days ago
06:11 - a lot of it was q a
06:14 - and so um what i tried to do is come up
06:16 - with a way that we could go at that
06:18 - where we could pretty much have any kind
06:20 - of questions so sort of a knowledge base
06:23 - that could expand and that is what we're
06:26 - gonna try to uh implement here today
06:29 - and i also mentioned yesterday there is
06:31 - on skilltemplates.com there's a template
06:34 - called uh knowledgebase starter and so
06:37 - i'm using some ideas from that for this
06:41 - but i've changed it up a little bit for
06:43 - today so
06:45 - some of the some of the code i'm just
06:47 - gonna gonna copy and paste in so
06:51 - we can move through it pretty quickly
06:53 - but i'm gonna start with the um
06:57 - with the model and
07:00 - going in here and what we're going to do
07:03 - first is we're going to create a
07:06 - custom uh slot type
07:09 - and we're going to do that up here in
07:11 - the the types
07:12 - section of the interaction model
07:15 - and the um
07:17 - the type
07:18 - that
07:20 - i've come up with here let me shh
07:23 - this is what up because there's a a lot
07:25 - here so i'm gonna just copy and paste
07:27 - this in and then talk about it give me
07:28 - one second here
07:33 - so um
07:39 - so i've
07:41 - created a
07:42 - type called questions
07:45 - and this is where we're going to define
07:48 - all of the questions that a user could
07:50 - ask and we're also going to define
07:53 - similar synonyms for the the questions
07:56 - and what this is going to allow us to do
07:59 - is basically like if we've got one
08:01 - answer
08:02 - we might have
08:04 - that answer might answer multiple
08:06 - questions so for example um if uh
08:09 - somebody says what is free code camp our
08:11 - answer might say you know
08:13 - code camp is dot dot dot you know it was
08:16 - founded dot dot dot and founded by dot
08:19 - dot dot and you know we could have a lot
08:21 - more than one response or one answer
08:25 - covered and so we'll use synonyms to map
08:28 - different ways that somebody might ask
08:30 - the question to the same answer and the
08:33 - way that we're going to do that is with
08:34 - this id here so we're going to have
08:36 - another
08:37 - file that we're going to use so we'll
08:41 - we'll add our questions
08:43 - in here into the uh the questions custom
08:48 - slot type
08:49 - and i've just got some placeholder ones
08:51 - in there now but we can we can build
08:53 - that out i've just got five questions
08:55 - but this can expand
08:56 - uh i think the upper limit
08:59 - for custom slot values i i want to say
09:02 - it's 50 000. i'm not a 100 sure on that
09:04 - but it's something like that so we've
09:06 - got a lot of room to grow if um
09:09 - if this got really big and was
09:12 - changing often a better way to go at it
09:14 - might be to use like elasticsearch or
09:16 - something like that on the back end but
09:18 - i think for
09:19 - illustrating what we're trying to do
09:22 - which is really more um alexa stuff this
09:24 - makes more sense
09:26 - so we're gonna do it this way but what
09:28 - we are gonna also need is a way to map
09:31 - to the uh the answers and so what i'm
09:34 - gonna do is
09:37 - um
09:38 - i'll have a folder called
09:40 - data and then in that
09:42 - i'm gonna have um
09:45 - a file that's just gonna be a json file
09:49 - that's going to uh to have my answers
09:52 - and i'll show you how we're going to do
09:54 - that
09:55 - real quickly so i'm going to
09:58 - i'm going to call that file answers
10:02 - [Music]
10:04 - dot jason
10:05 - [Music]
10:07 - and in here
10:10 - and i've only done one so far and then i
10:12 - just got some placeholder ones here so
10:15 - um
10:15 - before we built this out or before we
10:18 - published this live we'd of course uh go
10:20 - through and add all the questions and
10:22 - and like i've been saying previously so
10:25 - if anybody wants to uh to help out with
10:27 - these questions please um please feel
10:30 - free to uh go out to the site and grab
10:34 - some questions or add your own questions
10:36 - and
10:37 - uh we should probably
10:38 - provide a way for somebody to
10:40 - actually we'll do that we'll provide a
10:42 - way that somebody can ask a question
10:43 - that hasn't been answered and then we'll
10:45 - capture that question so that we can't
10:47 - answer it um but for anybody that wants
10:49 - to contribute like i said before um go
10:52 - uh follow the uh the the repo that i set
10:54 - up and um do a pull pull request and
10:57 - we'll uh incorporate your changes in
11:00 - there
11:01 - so we've got the questions we've got the
11:05 - answers what else do we need we need to
11:08 - define our custom intent
11:10 - right inside of our model so let's do
11:14 - that next we're gonna
11:17 - have
11:20 - an intent that
11:22 - i
11:23 - am gonna call knowledge
11:25 - base intent
11:27 - so we could call it like qa in 10 or
11:29 - something like that too but now uh
11:31 - knowledge base and time works so
11:33 - we'll um we'll go in here and
11:37 - get our recent articles
11:40 - we'll put it like right below that
11:44 - um so we've got our knowledge base
11:46 - intent and the knowledge base intent has
11:49 - one uh slot
11:51 - and the slot name is question and the
11:54 - type is question so this is what we
11:57 - just defined up here so when we created
11:59 - a custom slot type
12:02 - the name here is what i'm referencing
12:05 - down here
12:06 - and then in the sample searches uh this
12:10 - is um
12:12 - you'll see when in the code for the
12:14 - intent itself so there's kind of two
12:17 - things that can happen here you could
12:19 - just have somebody say hey you know i
12:22 - want to search the knowledge base
12:24 - or you could have somebody actually
12:26 - submit a question and say you know
12:29 - what is free code camp or or any
12:31 - question for that matter if we've got it
12:33 - defined
12:34 - so i've got samples here where some of
12:36 - them are just static like search
12:39 - um you know take me to frequently asked
12:41 - questions faq and then i've also got the
12:44 - um the slot as just a sample as well and
12:47 - so
12:48 - we're going to hopefully make this work
12:50 - to uh to get our questions
12:53 - answered so now i've got the questions
12:56 - and the answers
12:58 - and for those of you that have been
13:00 - following along you know now we need to
13:04 - uh handle the um
13:07 - the custom intent the knowledge base
13:08 - intent so
13:10 - i am going to uh
13:13 - let's see here what are we gonna do
13:17 - we're gonna go in to our index here and
13:23 - what do we got to do here so we
13:25 - well for starters we need to include the
13:29 - module right
13:31 - the qa
13:33 - module do i have that i don't
13:34 - don't have that yet but actually let me
13:37 - do that next
13:39 - so
13:39 - [Music]
13:44 - so i'm creating a folder for
13:47 - this is going to be just a local node
13:49 - module that we're going to use to query
13:52 - the data file the answers.json file
13:55 - and i'm going to call this qa
13:58 - [Music]
14:01 - js
14:02 - and this
14:04 - is
14:06 - going to
14:09 - and this code is
14:12 - just exactly as it is in the um
14:18 - what's it called the
14:20 - uh knowledgebase starter from skill
14:22 - templates.com so i'm not changing any of
14:25 - this
14:27 - so
14:29 - but i'll push all this stuff out to the
14:30 - repo so you'll have all this code anyhow
14:35 - uh
14:36 - let's see
14:40 - okay um
14:42 - so
14:43 - um i'm requiring here the native node
14:46 - file system uh module and then also
14:50 - we're requiring the uh the answers that
14:53 - i just added back
14:56 - here earlier
14:57 - and then um we've got
15:00 - just one function in here that's pretty
15:02 - simple it is um returning a promise uh
15:05 - but it's looking up to
15:07 - the to get the answer based on the id
15:10 - that's going to be passed and the id
15:13 - i'll show you how that is
15:15 - getting passed over by the alexa service
15:17 - so that's what we defined
15:19 - in our interaction model
15:22 - here
15:24 - so
15:24 - this id
15:26 - is the id that
15:28 - we're going to be using to query that
15:31 - json
15:32 - file with our answers
15:35 - um okay
15:41 - let's see what am i missing here
15:44 - uh now i need to i need my handler and
15:48 - let's do that next
16:04 - so i did modify this code this morning
16:07 - this is not exactly
16:09 - the same code as the knowledge base
16:11 - starter but it's pretty close
16:14 - and again i'll push this all of this
16:15 - code out so we have it
16:18 - uh let's see
16:20 - we're
16:27 - and
16:32 - did i include
16:35 - no
16:35 - so i need to also include
16:39 - the qa
16:42 - um
16:47 - and
16:51 - [Music]
16:59 - you don't have to add the js but i like
17:02 - to because it reminds me that it's local
17:05 - i guess i could see that just from the
17:06 - path but
17:07 - that's why i do that um so we've got our
17:12 - qa
17:14 - we're getting close let me talk through
17:16 - what's um
17:18 - what's going on here in the uh the
17:21 - knowledge base handler
17:23 - so we talked about um the the basic
17:26 - intent
17:28 - uh structure
17:29 - previously so i'm not going to go over
17:31 - that again but we're going to be looking
17:33 - for an intent request
17:35 - and the intent is the knowledge-based
17:38 - intent
17:39 - which let me just confirm that i didn't
17:42 - change that but i think that is what we
17:44 - called it right
17:47 - yeah
17:48 - so the knowledge base intent and then um
17:52 - in here
17:53 - so there's uh
17:55 - something called entity resolution which
17:58 - basically um when you're using synonyms
18:02 - it's going to look at everything uh look
18:05 - at the what what the request was from
18:07 - the user the the utterance and then try
18:10 - to match it to the um
18:13 - to the uh
18:16 - to the right
18:18 - uh
18:19 - slot
18:20 - type
18:24 - but um
18:25 - it's going to be
18:27 - there there might be multiple possible
18:29 - matches and so what we're doing in here
18:32 - is we're going to we're going to be
18:34 - looking at the very first
18:36 - match which
18:38 - i think is going to work in most cases
18:40 - we'll test it out but let me show you
18:43 - that
18:44 - here so
18:48 - so basically it could return if it
18:51 - matched
18:52 - if whatever the user says matches
18:55 - multiple possible
18:57 - uh answers
18:59 - what we're doing here is taking the id
19:02 - of the very first answer and and then
19:05 - we're using that id
19:06 - uh to get or question rather
19:09 - the the idea the very first question and
19:11 - then we're using that to get our answer
19:14 - and um
19:16 - we're
19:17 - building our response from information
19:20 - that we've got in our answers.json file
19:22 - so this file has the id which maps to
19:25 - the question id
19:28 - and then um
19:29 - the the answer is whatever we want here
19:32 - and then the the prompt is going to
19:34 - prompt the user for whatever we want
19:36 - them to do next so like in this first
19:38 - example which i built out
19:41 - it's handling the very first question
19:44 - which is what is free code camp and
19:48 - so the response should be
19:50 - free let me do this free code camp
19:55 - free code camp is a place where you can
19:57 - learn to code for free
19:59 - there are online challenges uh youtube
20:02 - videos medium posts and podcasts uh
20:06 - which would you like to hear more about
20:08 - and this um
20:13 - i can't remember who provided that we
20:15 - had it but uh thank you for whoever did
20:17 - somebody provided that yesterday or the
20:19 - day before so
20:20 - um we're going to uh re re-prompt by
20:24 - basically asking what they want to do
20:25 - next
20:28 - uh i think
20:30 - we're
20:31 - pretty close
20:32 - to being able to uh to test this let's
20:36 - um
20:37 - let's see
20:55 - so
20:56 - deploying
21:14 - all right
21:17 - i'm going to look through the uh the
21:18 - questions while this is building and
21:20 - deploying and then we'll uh we'll test
21:22 - it out and see how it's going
21:28 - uh we can set the trigger
21:48 - hey welcome mr quality time thanks for
21:51 - hopping in
22:03 - so startup santana do you got your um
22:05 - you got your request is it working
22:08 - is the skill working the beta test
22:11 - are you able to
22:13 - say
22:14 - alexa open free code camp looks like
22:15 - this is deployed
22:19 - let's see if it's working
22:24 - alexa
22:25 - open free code camp
22:29 - hello welcome to the free code camp
22:31 - skill would you like to learn about free
22:33 - code cam hear about our most recent
22:35 - medium post or get answers to frequently
22:38 - asked questions
22:40 - frequently asked questions
22:44 - there was an error the error was could
22:47 - not find handler that can handle the
22:49 - request oh a request requested amazon
22:53 - one dot echo api dot request okay alexa
22:56 - stop
22:57 - so we did forget to do something
22:59 - uh we forgot to register the handler
23:04 - so we talked about this yesterday too
23:06 - and i always forget this
23:10 - but
23:12 - that happens down
23:17 - [Music]
23:20 - here and i need to deploy again but this
23:23 - time i can just deploy the lambda
23:26 - function
23:33 - which will go faster so this will just
23:34 - take a second here
23:38 - okay there we go so let's test this
23:39 - again alexa open free code camp
23:44 - hello welcome to the free code cam skill
23:47 - would you like to learn about free code
23:49 - cam hear about our most recent medium
23:51 - post or get answers to frequently asked
23:54 - questions frequently asked questions
23:57 - ask me a question like what is free code
24:00 - camp
24:01 - what is free code
24:02 - camp free code camp is a place where you
24:05 - can learn to code for free there are
24:07 - online challenges youtube videos medium
24:10 - posts and a podcast which would you like
24:13 - to hear more about
24:15 - podcasts
24:17 - podcast it's nice to meet you
24:21 - alexa stop
24:22 - so um you can see
24:24 - that uh
24:26 - the um the the response that we're
24:28 - getting back on that it's mapping to
24:31 - in our interaction model a
24:34 - intent that we created yesterday that
24:37 - hello intent
24:38 - so
24:39 - basically what we need to do is we need
24:41 - to go in here and we need to um
24:47 - do a question like um
24:51 - [Music]
24:53 - what uh what is you your podcast about
24:59 - and then for some synonyms
25:01 - we'll go something like this um
25:07 - podcast
25:10 - tell me about your podcast
25:18 - uh
25:19 - let's see do you have a podcast maybe
25:28 - uh maybe
25:30 - how often
25:32 - is the podcast updated
25:35 - [Music]
25:37 - um
25:38 - okay
25:39 - we'll leave it at that for right now and
25:41 - then i would go over into my answers for
25:44 - number two and say um
25:47 - the answer is um
25:50 - our podcast
25:55 - is
25:57 - called the free code camp
26:02 - camp
26:04 - podcast that
26:06 - you can find on itunes
26:10 - i'm assuming it is yes
26:13 - [Music]
26:15 - and
26:18 - and it
26:20 - covers stuff you'll love
26:26 - and then down here like i said before
26:28 - this is where we
26:30 - will re-prompt them for something else
26:33 - uh
26:35 - maybe we'll just say
26:40 - something like um
26:42 - what other questions do you have do you
26:44 - have what other questions
26:48 - can
26:49 - i
26:51 - answer
26:53 - for you
26:58 - and so
27:00 - now let's
27:01 - redeploy and try this again so now i'm
27:05 - just deploying the code
27:07 - uh actually i need to deploy
27:09 - not just the code because we made a
27:11 - change to the interaction model
27:14 - here and anytime you make a change to
27:16 - the interaction model the interaction
27:18 - model needs to be rebuilt so
27:20 - i can't just deploy the lambda function
27:24 - i need to deploy the lambda function and
27:27 - rebuild the model so that's what's
27:28 - happening here this is going to take a
27:30 - second
27:32 - and again while that's happening i'm
27:35 - gonna read through the uh the comments
27:37 - so if you have any comments or thoughts
27:39 - or ideas
27:41 - post away
28:08 - okay let's see um
28:17 - let's see alexa
28:19 - open free code camp
28:22 - hello welcome to the free code camp
28:25 - skill would you like to learn about free
28:27 - code camp here about our most recent
28:29 - medium post or get answers to frequently
28:32 - asked questions
28:33 - frequently asked questions
28:36 - ask me a question like what is free code
28:39 - camp what is free code camp
28:43 - free code camp is a place where you can
28:45 - learn to code for free there are online
28:48 - challenges youtube videos medium posts
28:51 - and a podcast which would you like to
28:53 - hear more about
28:55 - the
28:57 - our podcast
28:58 - is called the free code camp podcast
29:00 - that you can find on itunes and it
29:02 - covers stuff you will love what other
29:04 - question can i answer for you
29:08 - what about question three
29:12 - question three is the third of five
29:13 - sample questions you can also convince
29:16 - users to ask another question for
29:18 - example what is question four
29:21 - alexa stop so you can see how this works
29:25 - um we
29:27 - would just build out the knowledge base
29:29 - by
29:30 - uh first adding the question to the
29:34 - interaction model
29:36 - and ask me a question like what is free
29:39 - code alexa stop
29:42 - goodbye
29:43 - um yeah so
29:45 - we would uh we would extend this by just
29:48 - adding the uh questions
29:51 - as a value in the
29:54 - custom slot type that we
29:57 - called questions
29:58 - and then we would have any synonyms
30:01 - that would help train
30:03 - the alexa service on you know how to
30:06 - know
30:07 - when somebody is
30:09 - asking something that could be answered
30:10 - by our answer which we would put in the
30:14 - answers.json file and all we would need
30:17 - to do all you need to do to tie them
30:18 - together is
30:20 - just
30:21 - post this
30:22 - or make sure that the id in the answer
30:25 - matches the id
30:27 - in the question
30:29 - and i'm gonna
30:31 - because this is working right now i'm
30:32 - gonna go ahead and just commit this in
30:34 - case anybody wants to look at the code
30:38 - on
30:41 - github
30:44 - uh added
30:46 - qa
30:52 - [Music]
30:55 - and
30:59 - and push that out so
31:04 - so you guys can take a look at that in a
31:06 - second once it um is pushed out
31:14 - and the other thing that i wanted to
31:16 - show you because we're we're doing
31:18 - pretty good today on time we kind of got
31:20 - into the slots a little bit yesterday so
31:22 - i'm a little ahead of where i thought so
31:25 - we'll probably finish up early today
31:29 - but i'm going to
31:31 - i'm going to see if we can do one more
31:33 - thing because we've got a little bit
31:34 - extra time here
31:36 - i'm going to let's try this uh the
31:38 - simulate command
31:40 - so um
31:43 - [Music]
31:46 - so you go um ask simulate and then um i
31:50 - think it's
31:51 - dash t
31:53 - actually it'll tell me
31:55 - give me an error tell me what i didn't
31:57 - do
31:59 - yeah
32:03 - dash text so
32:05 - [Music]
32:14 - so i'm gonna i'm gonna just pass
32:16 - um what is free code camp
32:19 - and i think it's also gonna
32:21 - want a locale
32:42 - [Music]
32:54 - hmm
32:55 - yeah
32:56 - see if i can remember how to do this
32:59 - [Music]
33:01 - i think it's
33:04 - en
33:06 - us
33:08 - let's see
33:12 - yeah
33:13 - that was it
33:15 - so now we're testing and um we're doing
33:19 - that from the
33:21 - command and we got uh
33:24 - un unexpected error so
33:26 - let's see
33:34 - i'll say
33:37 - open
33:43 - [Music]
33:46 - let's just try open free code cam see if
33:49 - that works
33:58 - yeah so that did work
34:01 - so um
34:03 - up until this point we've looked at the
34:06 - testing in
34:08 - the
34:09 - developer console through the web and um
34:12 - through
34:13 - alexa through the echo
34:16 - but you can and i mentioned this earlier
34:18 - you can also
34:19 - test
34:21 - using the
34:23 - the
34:25 - cli
34:27 - i wanted to show you
34:30 - something here
34:32 - the
34:45 - so this is just a launch request
34:48 - but if we um if we change this up to be
34:52 - something like
34:58 - i want to show you the entity resolution
35:00 - part so
35:06 - ask free code camp
35:11 - what is free
35:13 - code camp
35:18 - see if this works
35:30 - okay
35:34 - so we got we got our answer back i want
35:36 - to show you the requests though
35:41 - okay so this um this is the request that
35:44 - went from the alexa service to our skill
35:45 - service and you can see in the request
35:49 - the um
35:50 - the question slot
35:53 - is being passed over and the request
35:56 - type is an intent request
35:59 - so this is
36:03 - and i know we talked about this so i'm
36:05 - just recapping because we we've got some
36:07 - time but the uh intent handler not
36:09 - recent articles
36:11 - the intent handler here
36:13 - is getting this
36:15 - request
36:17 - and it's coming in as the handler input
36:19 - and we're looking in here in the can't
36:21 - handle
36:23 - method function for the type and the
36:26 - type is intent request which is here
36:29 - and then the intent name
36:32 - so request intent name knowledge base
36:34 - intent which is this
36:36 - and then
36:38 - down here
36:42 - we're looking at uh to see if the
36:45 - request has
36:47 - resolutions uh so in here
36:52 - that's yes and then uh
36:56 - in there
36:57 - we're grabbing we're setting this this
36:59 - variable resolution
37:01 - to
37:02 - um the the first record in the
37:04 - resolution per authority which is an
37:07 - array
37:08 - so here's that resolution for authority
37:11 - and um actually there's only i think
37:14 - there's only one in this yeah there is
37:17 - but if it had matched to multiple
37:19 - possible um
37:21 - values
37:22 - we'd be taking the uh the very first one
37:25 - in all cases so you you'd probably in if
37:28 - you were going to roll this out live
37:30 - you'd want to do a lot of voice testing
37:32 - and checking this to make sure that the
37:35 - the utterances are being mapped the
37:37 - right way
37:39 - but i think that is
37:42 - probably where we're going to
37:45 - stop for today
37:47 - but um let me just go look at our
37:51 - outline here maybe there's
37:53 - something else that we can get in today
37:56 - um
38:04 - using slots
38:06 - multi-turn dialogues that's a longer
38:08 - topic so we're not going to get into
38:09 - that today uh it's persisting to
38:12 - dynamodb
38:13 - that kind of goes with that so i'm going
38:15 - to hold off on that um what we can do
38:18 - though is just update we can do some
38:20 - cleanup stuff right now on it so let's
38:22 - see
38:25 - camp logo i saw this out here
38:28 - maybe we can just um
38:32 - [Music]
38:34 - update the uh the logo and
38:37 - uh that kind of stuff and
38:39 - we talked about where that was but um
38:47 - um
38:50 - let's see
39:03 - i thought i had one
39:12 - i let's start a new one
39:21 - so the uh the logo sizes are
39:24 - 512 by 512 pixels for the large
39:28 - larger logo and i think
39:30 - 108
39:32 - maybe
39:33 - i'll confirm that
39:47 - yeah so actually
39:50 - this works here
39:55 - [Music]
40:13 - let's see and
40:20 - uh i think i have it
40:28 - alexa
40:31 - alexa icon small
40:34 - and
40:42 - alexa icon large
40:44 - yeah so um the large icon is yeah 512 by
40:47 - 512 and the small icon is 108 by 108
40:52 - and
40:55 - i think
40:57 - [Music]
41:01 - i could just do like this i think let's
41:03 - see
41:07 - uh maybe not
41:10 - or maybe so maybe i just need to change
41:12 - the background
41:13 - color
41:21 - yeah
41:22 - but
41:23 - i need to know what color that is
41:27 - so
41:28 - [Music]
41:32 - it's probably on here somewhere
41:34 - yeah
41:38 - [Music]
41:44 - there we go
41:46 - and i'll do the same thing for this
41:53 - [Music]
42:02 - and
42:12 - get these fixed up i know this is not
42:14 - really alexa
42:16 - coding
42:17 - but
42:18 - like i said we got a little time and i
42:20 - want to try to get this
42:22 - skill as far along as we can
42:26 - [Music]
42:32 - all right
42:41 - i
42:42 - think
42:44 - i think they can be pngs
42:49 - and
42:50 - let's see
43:13 - save that
43:22 - and save this
43:31 - oh and then i need to put these
43:32 - someplace
43:34 - so
43:41 - i'm going to put them on um just in an
43:43 - s3 bucket
43:46 - it's temporarily for right now i think
43:48 - i've
43:49 - got one if not i can create one
44:04 - actually you know what's going to be
44:05 - faster
44:07 - [Music]
44:11 - we can set this in here
44:13 - you can also set it in the um the skill
44:15 - manifest which is something that we
44:18 - looked at yesterday also which is
44:21 - normally how i do it but just for
44:24 - uh
44:25 - time i'm gonna just go into the
44:28 - developer portal and just do it here
44:46 - so
44:48 - this here
44:53 - [Music]
45:09 - and large icon
45:13 - oops
45:17 - march
45:22 - and
45:23 - save that
45:27 - [Music]
45:34 - we're like really close now to having it
45:37 - ready where we could probably if we if
45:39 - we updated the content we could probably
45:41 - um publish it
45:44 - so
45:45 - let's um let's do one uh final test and
45:47 - then we'll we'll call it a day today
45:49 - unless anybody has um any specific
45:51 - questions and we could spend some time
45:53 - uh asking or answering questions that
45:55 - are uh related or even off topic if you
45:58 - want to do that just um let me know in
46:00 - the in the chat alexa open free code
46:03 - camp
46:05 - hello welcome to the free code camp
46:07 - skill would you like to learn about free
46:09 - code cam hear about our most recent
46:11 - medium post or get answers to frequently
46:14 - asked questions
46:17 - tell me about free code camp
46:20 - free code camp is a place where you can
46:22 - learn to code for free there are online
46:24 - challenges youtube videos medium posts
46:28 - and a podcast which would you like to
46:30 - hear more about
46:32 - the podcast
46:34 - our podcast is called the free code camp
46:36 - podcast that you can find on itunes and
46:38 - it covers stuff you will love what other
46:41 - question can i answer for you
46:43 - what's the most recent medium post
46:48 - the most recent article posted on medium
46:50 - for free code camp is titled recursion
46:53 - demystified it's been recommended zero
46:55 - times
46:57 - so you guys can see um alexa stop even
47:00 - though i'm uh asking uh different
47:02 - questions some of them are in our q a q
47:06 - a or some of them are handled by our qa
47:08 - handler others are being resolved to
47:11 - their own intent so um
47:15 - so like that one is a separate question
47:17 - alexa
47:18 - alexa stop
47:20 - and
47:21 - and we would um we would probably
47:24 - continue uh building this out like i
47:26 - added some of the ideas that we
47:29 - had talked about uh
47:32 - when we were first planning this
47:35 - but um some of the things that i don't
47:39 - know if we'll get to
47:41 - um
47:42 - get to adam or not but just uh some
47:44 - other feature ideas provide a list of
47:46 - upcoming live stream events on youtube i
47:48 - think we could probably get that one in
47:50 - uh let users listen to podcasts i think
47:53 - listen to the podcast i think that would
47:55 - be really cool
47:56 - um and then provide a like a qa and
48:00 - coding trivia functionality i think
48:02 - that'd be fun and then let users watch
48:04 - videos if they have like the echo show
48:06 - spot and fire tablet i think that we
48:08 - could get uh get that kind of stuff in
48:10 - but let me let me show you one other
48:12 - thing that i've added
48:14 - that um
48:15 - let me see if i can get it to do this
48:18 - alexa open free code camp
48:21 - hello welcome to the free code camp
48:24 - skill would you like to learn about free
48:26 - code camp hear about our most recent
48:28 - medium post or get answers to frequently
48:30 - asked questions how many colors are in
48:32 - the rainbow
48:35 - ask me a question like what is free code
48:37 - camp
48:38 - how many colors are in the rainbow
48:42 - ask me a question like what is free code
48:44 - cam
48:46 - alexa stop
48:47 - so um one thing that i was trying to do
48:49 - i obviously don't have it um working
48:51 - completely yet was to um set up a way
48:55 - here
48:57 - where
48:58 - if the user asks a question that we
49:01 - can't handle
49:03 - then we would
49:05 - respond back with this sorry i don't
49:07 - know i've sent your question to one of
49:08 - my human co-workers who can teach me the
49:10 - answer
49:11 - please ask me again tomorrow and
49:13 - hopefully i'll have an answer for you
49:15 - then and then here we would capture the
49:18 - question um like to a database and
49:21 - probably email somebody so that they
49:23 - could go in and add the answer to our
49:27 - answers file
49:28 - and and add the question also to the
49:30 - questions file
49:31 - so that is um a functionality i think
49:34 - that we could get working so let me add
49:37 - that
49:38 - to our dialogue um
49:40 - [Music]
49:43 - or our future road map
49:50 - [Music]
50:01 - [Music]
50:04 - all right and i think um yeah i think
50:07 - that's going to do it for uh for today
50:10 - if there are
50:11 - if there are no uh no other questions
50:14 - then um thanks so much for
50:17 - uh for for hopping on to uh to today's
50:21 - stream and we will continue tomorrow
50:24 - and tomorrow like i said we are going to
50:27 - uh to cover um multi-turn dialogues
50:32 - and we are going to uh also look at uh
50:36 - persisting stuff to uh to dynamo db
50:39 - so thanks so much and hopefully i'll get
50:42 - to see you back tomorrow
51:00 - [Music]
55:17 - you