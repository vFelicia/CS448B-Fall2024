00:00 - hey everyone jessica from codercoder
00:02 - here
00:03 - thanks so much to free codecamp for
00:04 - having me on their channel
00:06 - in this video we're going to build a
00:07 - landing page template from
00:09 - frontendmentor.io
00:10 - if you get stuck at any time during this
00:12 - tutorial you can check out the completed
00:13 - source code on my github
00:15 - link down below and if you like this
00:17 - video and want more i'm actually
00:18 - creating a course
00:19 - called responsive design for beginners
00:22 - you can sign up to get updates on my
00:23 - progress creating the course as well as
00:25 - be the first to find out when it
00:26 - launches
00:27 - and without further ado let's get into
00:29 - it
00:33 - all right so the website we're going to
00:35 - be building today is from front end
00:36 - mentor dot io
00:38 - they have tons of different challenges
00:39 - of website templates you can build
00:40 - yourself
00:41 - and the one we're building today is
00:42 - called easy bank landing page
00:44 - now what i'm going to do is download
00:45 - these starter free files
00:47 - and with that you just get jpegs of the
00:50 - design
00:51 - which you can definitely work off of but
00:53 - if you want the full sketch file you
00:55 - have to pay 8.99 so either way works
00:58 - we're going to be working with the free
00:59 - files right now
01:00 - so let's set up our project on the left
01:03 - i have my empty project folder
01:05 - and then on the right we have the files
01:07 - that we downloaded from front end mentor
01:10 - in this folder i have an index.html file
01:12 - which we do want to carry over here to
01:14 - our project
01:15 - there's also an images folder and these
01:16 - contain the svgs and pngs and jpegs
01:19 - that we need to use for this website so
01:22 - we're going to copy the images folder
01:24 - over
01:24 - as well and there's also a style guide
01:28 - file which i think would be pretty handy
01:30 - and then lastly
01:32 - the design folder contains the jpegs of
01:35 - the different designs
01:36 - now what i'm going to do is i'm going to
01:39 - show you
01:40 - i've made an adobe xd file and in that
01:43 - i've basically
01:43 - copied and pasted all the jpegs so that
01:46 - i have all the designs in one place
01:47 - just makes things a little bit easier so
01:50 - now that we have our files in our
01:52 - project
01:52 - let's open up vs code
01:55 - okay so here in vs code i have the
01:58 - project folder open
01:59 - you can see that we have the index.html
02:01 - file from frontimentor
02:03 - and we also have the style guide file
02:05 - which is helpful to tell you
02:07 - you know what what's the designs at as
02:09 - well as some colors and
02:11 - font information so we'll definitely be
02:12 - using those and we have the images
02:14 - folder here with all the images
02:16 - okay so when i'm working with website
02:19 - projects usually i'm going to be using
02:21 - sas
02:22 - scss syntax and we're going to have to
02:25 - also have some javascript so let's
02:27 - create those files now
02:29 - so in the project root i'm going to
02:30 - create a folder called app
02:32 - in that folder i'm going to create two
02:34 - sub folders one for js
02:36 - for the javascript file and one for scss
02:39 - for our sas files
02:40 - so in the sas file folder in the sas
02:44 - folder rather
02:45 - let's create our main sas file
02:47 - style.scss
02:48 - and this is going to be the main sas
02:50 - file that we're going to import all of
02:52 - our partial sas files into
02:54 - and we're going to create one called
02:57 - globals
02:58 - scss yeah that's right i also usually
03:01 - create one called
03:02 - variables because i like using sas
03:04 - variables a lot
03:06 - so let's import those into our main sas
03:08 - file
03:09 - import variables because we want our
03:12 - variables to come first so the other sas
03:14 - files can use them
03:16 - then import globals okay
03:19 - so let's start adding some boilerplate
03:22 - styles here so the global the first one
03:25 - i usually do is
03:26 - in the html selector i'm going to say
03:28 - font size is 100
03:30 - this is more accessible lets the user
03:32 - control the
03:33 - zoom level in their browser we're also
03:35 - going to do box sizing
03:38 - border box and what this property does
03:40 - is it makes the
03:41 - size of elements sort of include padding
03:44 - in the final width so
03:45 - it's just a bit easier when you're
03:46 - working with elements like that then we
03:48 - also want to inherit that box sizing
03:50 - border box to all elements so
03:52 - using the wild card selector here as
03:54 - well as the before pseudo element
03:56 - and the after pseudo element selector
03:58 - and they're going to
03:59 - inherit the box sizing board box in the
04:02 - html
04:03 - element now for the body
04:06 - element let's add some sort of resets
04:10 - here
04:10 - so we'll say margin zero padding zero i
04:13 - also like to do a line height
04:16 - of 1.3 just to add some spacing between
04:18 - lines and
04:20 - we're going to add our fonts in as well
04:23 - we look at the style guide it said that
04:24 - the
04:25 - font that we're using is public sans i'm
04:27 - going to go to
04:28 - our browser here copy this in
04:32 - i think it wanted to use 300 light and
04:36 - then
04:36 - 400 regular so we'll select both of
04:39 - those
04:39 - and we're going to embed it we'll just
04:42 - copy this
04:43 - link tag here and put it in our
04:46 - index.html
04:47 - over here above the title
04:51 - now since we're in the index.html file
04:53 - let's also
04:54 - add a link tag for our css file
04:59 - i'm going to create a dist folder and i
05:00 - want to put all my final css files
05:03 - in there so i'm going to say disk
05:06 - style.css
05:07 - and then we also i think want to add
05:11 - a script
05:14 - to load our javascript file that one's
05:17 - just going to be in the app folder so
05:18 - app.js
05:20 - script.js let's go into our folder here
05:24 - and create that
05:27 - script.js then we'll just add some test
05:31 - code so we can test it
05:34 - hello world why not now that we have
05:37 - some sas files
05:38 - you know just basic styles added let's
05:40 - also test out
05:42 - our sas workflow to compile my sas to
05:44 - css i like to use this extension
05:47 - called live sas compiler so if you don't
05:49 - have this installed yet
05:50 - you can just type in live sas compiler
05:52 - in the extensions marketplace
05:54 - and click this button to install it you
05:56 - might need to restart vs code if you're
05:58 - installing it for the first time now but
06:01 - once you have that set up
06:02 - when you open a project file you should
06:06 - see some buttons in the bottom one says
06:07 - watch sas and the other one says go live
06:09 - so if we click that watch sas button
06:12 - going to watch our sas files and
06:15 - then if you want to go live we click the
06:18 - go live button
06:20 - and it should load the local website in
06:22 - our browser we can see that that is
06:23 - indeed the case
06:24 - obviously this doesn't look too fancy
06:27 - since you know
06:28 - we just added the text from the design
06:30 - here but we can also
06:32 - check down in the console window here
06:34 - and our hello world message is loading
06:36 - so it looks like everything's working
06:37 - correctly
06:38 - see we need to add that font to our code
06:41 - so
06:42 - in our globals we're going to say font
06:44 - family and
06:45 - let's do that before line height font
06:48 - family
06:49 - i believe it was called public sans
06:53 - so we're just going to copy this over
06:55 - there we go
06:57 - okay so let's check our browser again
06:58 - and we don't need this anymore
07:00 - so it looks like we have the font public
07:02 - sans
07:03 - successfully imported so now going back
07:06 - to our vs code
07:08 - we want to do is we want to basically
07:10 - start creating
07:11 - the markup for our website so let's go
07:14 - into our index.html file
07:17 - and we're going to start writing markup
07:19 - over here i'm just going to actually
07:21 - comment out
07:22 - all the copy from the design just so we
07:24 - don't have this extra stuff
07:26 - you know visible on the website we're
07:28 - going to start writing our markup so
07:29 - let's go back to
07:30 - our design and what i'm going to do is
07:33 - try to do the mobile first
07:35 - approach and we're going to make our
07:37 - default styles without media queries the
07:39 - mobile styles
07:40 - and we're going to build the mobile
07:42 - website first and what i usually do is
07:43 - i'll go from the top down so let's start
07:45 - with the header
07:47 - but taking a look at the header it has a
07:48 - logo on the left and it has a hamburger
07:50 - button on the right which then
07:52 - when you open it opens this mobile menu
07:54 - then if we compare that to what we have
07:56 - for the desktop design
07:58 - it also has a logo on the left that has
08:00 - some links looks like in the middle
08:02 - and then there's a cta button on the
08:03 - right side so
08:06 - let's create the markup and styles for
08:08 - this header
08:09 - in our body tag i'm going to create a
08:12 - header
08:13 - and then in that header we want to add
08:16 - our logo image
08:17 - and we're also going to assume that this
08:19 - is going to link to
08:21 - the home page so we'll just make that
08:24 - open that
08:25 - and then in this anchor tag we want to
08:28 - add our image for the logo
08:31 - so image source images and then we want
08:34 - to look for this logo
08:35 - svg then alt oops
08:39 - i'll we'll call that easy bank since
08:41 - that's the name of the
08:43 - plate we're making let's see if that
08:46 - loaded on our site
08:48 - okay so that was easy right i think
08:51 - actually what i want to do in addition
08:53 - to that is create a
08:54 - nav and i'm going to put everything in
08:58 - that navigation in this nav tag what we
09:01 - got is
09:01 - the logo and then we have our hamburger
09:04 - menu on the right so that's
09:06 - probably also going to be an anchor link
09:09 - it's just going to go to the same page
09:13 - and we want to create a hamburger menu
09:17 - and the hammer we're going to use those
09:18 - three lines so let's create three spans
09:20 - so we're gonna use an emmett shortcut
09:22 - span times three so three empty spans
09:26 - and we also probably need a class for
09:28 - this and we're just gonna call this
09:29 - hamburger
09:30 - for the hamburger menu and in the same
09:32 - way maybe we can create a class up here
09:35 - for the logo so we'll say class
09:37 - equals logo
09:41 - if we look back at the design we can see
09:44 - that everything is in one line
09:46 - so that tells me that this nav element
09:50 - should probably be a flexbox parent
09:53 - to put everything on the same line now
09:55 - one other thing i like to do is i like
09:57 - to use a lot of helper classes
09:59 - so instead of having to write display
10:01 - flex on every single element in this
10:02 - webpage that is a flexbox parent
10:05 - we're going to create a helper class
10:06 - called flex and i'm going to add that in
10:09 - our globals got it there
10:12 - so flexbox styles
10:16 - we'll say flex class and we're going to
10:19 - say display
10:21 - flex and let's add a few other
10:24 - flex related classes so flex
10:28 - um one property we use a lot is justify
10:31 - content so let's say
10:32 - jc dash
10:35 - space between and that will be justify
10:39 - content space between because that is
10:42 - used quite often
10:43 - you can also maybe create one for center
10:48 - and i'm just going to basically be
10:49 - creating these as you know as we need
10:51 - them
10:52 - so let's also create some align content
10:55 - properties so align content and usually
10:58 - it's aligned content center
11:00 - so we'll write that align content or i'm
11:03 - sorry align items rather
11:06 - center so it's a
11:09 - i enter okay so
11:12 - this is fine for now we're probably
11:14 - going to use more later but now what
11:16 - we've done
11:16 - is in my sas i've created a flex class
11:19 - for display flex and then these other
11:20 - ones for the flex
11:22 - properties so i can do now is uh
11:25 - let's see split this up so you can see
11:29 - our html on the left and our styles on
11:31 - the right
11:32 - what i'm going to do is in the nav in
11:34 - addition to the flex class we also want
11:36 - a flex
11:37 - justify content space between so let's
11:40 - just check out how it looks in the
11:42 - browser
11:43 - okay so you can see our logo here let's
11:45 - see what's going on
11:49 - so we can see the nav here so we have a
11:52 - logo and then we have the hamburger
11:53 - class but it looks like that has a
11:54 - zero width and
11:58 - box model yeah it looks like it has a
12:01 - no width but there is a height so what
12:04 - we probably need to do
12:05 - is make those spans spans by nature are
12:09 - our display inline
12:11 - so that means they're not going to take
12:12 - up any space so there's like no content
12:13 - in them
12:14 - so what we want to do is we want to add
12:16 - some styles now for our header
12:18 - so we go back to our sas folder create a
12:21 - new sas file
12:22 - i'm going to call this header.scss
12:26 - and then we want to make sure that we
12:28 - are
12:30 - importing that into our main sas file so
12:32 - just trying to
12:33 - keep things organized here
12:36 - header so now in our header what we want
12:39 - to do
12:40 - is i think i'm going to add another
12:42 - class for
12:43 - the header let's say class
12:46 - header and this is so i can use bam
12:48 - block element modifier
12:51 - for writing my sas classes so first we
12:54 - have this main element header
12:56 - and then in here we're going to say
13:00 - maybe header underscore underscore logo
13:03 - and then header underscore underscore
13:06 - menu maybe hamburger menu okay so now
13:10 - in our sas files we can start using the
13:11 - ampersand for header
13:13 - then there's a logo and then another one
13:17 - for the menu
13:18 - this is the mobile menu so we'll just
13:19 - add a little comment here saying that
13:21 - mobile menu
13:22 - and we also have an image tag here
13:26 - so i'm not sure if we're going to need
13:27 - this but we'll just add it here anyway
13:29 - so in the menu we have some span
13:32 - elements i'm just going to use the
13:33 - direct
13:34 - child selector here to make sure
13:37 - we keep things as specific as possible
13:39 - and we're going to say display
13:41 - block for these spans now if we go back
13:43 - to the design
13:44 - the hammer menu is looks like a bunch of
13:47 - dark
13:48 - black or very dark gray lines so
13:51 - we're going to start with some general
13:54 - styles here
13:55 - first thing was first actually we
13:56 - probably want to get
13:58 - our colors added in from the style guide
14:02 - so you can see here
14:04 - these are all the different colors
14:05 - they're using hsl instead of hex but
14:06 - that's totally fine
14:08 - so let's start adding variables for our
14:10 - colors so we can reuse them
14:11 - so dark blue
14:18 - and now we're probably going to use this
14:21 - dark blue color for the hamburger menu
14:23 - and we'll just kind of see how that
14:24 - looks
14:25 - so let's close our script file here we
14:27 - don't really need that right now
14:29 - it's going back to our header sas file
14:31 - we want those lines to be that dark blue
14:33 - color so what i'm going to do is i'm
14:34 - going to
14:36 - say width and the width of those
14:39 - hamburger lines are now since this is a
14:42 - jpeg
14:43 - this is kind of the only way that we can
14:45 - really see how big things are
14:47 - i'm creating a little rectangle here
14:48 - that's semi-transparent so you can still
14:50 - see through it
14:51 - but you can still move it around and you
14:53 - can kind of use it to see how big things
14:55 - are
14:56 - pretty small looks like it's about
14:59 - a 26 and then about 12 or 13 height okay
15:03 - so what i want to do is here i'm going
15:04 - to set this to i think was 26 pixels
15:07 - and then the height of each this is just
15:10 - for each line
15:11 - so let's say two pixels oh yeah and then
15:14 - the background color
15:16 - background color and we'll use the dark
15:18 - blue variable
15:20 - all right let's see how that looks on
15:22 - our website now okay so
15:25 - it's a little small up here but we do
15:27 - have our hamburger lines here but we
15:29 - need to add some spaces
15:31 - between the lines so what i'm going to
15:33 - do is i want to add
15:34 - a margin bottom to all the spans except
15:37 - the last one so
15:38 - what we can do is we can use the not
15:40 - selector so not
15:42 - last child
15:45 - and then if it's not the last child
15:47 - we'll say margin bottom
15:49 - and let's just kind of guess here maybe
15:50 - three pixels
15:52 - now going back to our website we can see
15:54 - now that we do have the
15:56 - three lines and our logo now of course
15:59 - everything's up right on the edge here
16:01 - so we need to add
16:03 - some padding here so let's see how much
16:06 - padding there is
16:09 - let's get the top and bottom padding
16:12 - first
16:13 - i'm going to kind of assume that the top
16:14 - and bottom padding are the same
16:16 - if we have a little rectangle here about
16:19 - 22 inches
16:21 - or pixels rather and if we move it down
16:24 - it might be a little bit more so maybe
16:26 - 24.
16:28 - so 24 pixels of padding on top and
16:29 - bottom and then for left and right
16:32 - about the same let's just say 24 all
16:34 - around so going back into our code
16:37 - what we can do is we want to add padding
16:39 - to the
16:40 - nav itself so in the header
16:43 - we're going to add another selector here
16:47 - for the nav
16:49 - just no class at least for now so we'll
16:51 - say padding
16:52 - uh 24 pixels all around okay so let's
16:56 - see how that looks
16:58 - all right oh why is that so tall let's
17:00 - see what's going on here
17:01 - so we have a nav here that's one of our
17:03 - pixels all around
17:05 - it looks like we need to center things
17:07 - vertically so what i didn't do is i need
17:09 - to add
17:10 - another flex property here so flex
17:13 - just to show you what i got here flex a
17:16 - i
17:16 - see that's going to align items to
17:18 - center all right so that looks a bit
17:20 - more
17:21 - centered there we go okay so we got our
17:23 - now we got our spacing
17:25 - one thing we do want to do is see what
17:28 - the differences are between the mobile
17:30 - and then the desktop
17:31 - nav mobile obviously has the hamburger
17:34 - menu
17:35 - does not have these links or the cta so
17:37 - these are
17:38 - desktop only but i should be able to use
17:41 - the same markup for both mobile and
17:43 - desktop
17:44 - so let's add some elements in for the
17:46 - links as well as the cta
17:49 - okay so let's scoot this over here a bit
17:52 - so logo's first for both and then for
17:54 - the mobile the
17:56 - menu is over here now since the
17:59 - the hamburger is not going to be visible
18:01 - on desktop i'm just going to add these
18:03 - other elements down here
18:04 - so the first one you want to do is since
18:06 - i'm using flexbox to separate them out
18:08 - let's create a new element we'll just
18:10 - say
18:10 - div and we'll say header underscore
18:13 - underscore links
18:15 - then in here we'll say anchor
18:18 - um link so i think there were
18:21 - how many links five
18:24 - link times five there we go and i think
18:28 - the text is down here so
18:29 - you can just kind of move those up into
18:31 - here into the links
18:36 - so header links and you know this is
18:39 - just a landing page we're doing so we're
18:41 - just going to make all the links
18:43 - the pound sign or the hashtag
18:48 - so going back to our header sas file
18:49 - we're probably going to have to add some
18:50 - styles for that
18:52 - so under the menu
18:56 - will say header underscore underscore
18:58 - links
18:59 - and in that is going to be some anchor
19:01 - links
19:02 - let's go back to our website and now we
19:05 - can see
19:06 - that we have our links okay first things
19:08 - we want to get rid of that underline
19:10 - and i want that to be true for all links
19:13 - on the page so
19:14 - we're going to add some styles
19:17 - here for just default styles so links
19:21 - a visited a hover
19:25 - um text decoration none
19:29 - okay good now let's style those links
19:32 - let's see what we got here
19:33 - check our notes in the style guide okay
19:35 - it says font size is 18 pixels
19:38 - i guess we could add that font size to
19:40 - the body tag
19:43 - so 18 pixels and it's actually better to
19:45 - use
19:46 - relative units like rems instead of
19:48 - pixels so
19:50 - to get from pixels to rams you can
19:51 - divide 18 by 16.
19:55 - so if we check this inspect element
19:59 - see yep font size is 1.125 rams and if
20:02 - you click on the computer tab it'll tell
20:04 - you it's 18 pixels which is what we want
20:07 - okay color seems to be this actually
20:10 - seems smaller so this might be like
20:12 - maybe 16 or even 14. let's find out
20:17 - it's about 14. so we're going to adjust
20:20 - the font size in the um better
20:25 - font size i think we said 14 so 14
20:29 - pixels divided by 16 is 0.875
20:35 - um another thing you can actually do and
20:37 - let's do that now is we're going to
20:38 - create some variables for these font
20:40 - sizes
20:40 - just in case we need to reuse them so
20:42 - we'll say
20:43 - body or maybe font
20:46 - medium the 18 pixels or
20:50 - font size 1.125 rims
20:54 - and then we'll replace this
20:57 - with the variable name the other one was
21:01 - font small this is going to be
21:05 - 14 pixels there we go
21:08 - take that over here and we'll replace
21:10 - that with the font small variable
21:15 - kind of helps just to add some comments
21:16 - so you can remember what this is
21:18 - 18 pixels we'll add more variables as we
21:22 - need
21:22 - but for now let's also check out the
21:24 - colors
21:26 - probably that lighter gray for the text
21:28 - here so i think i can actually i might
21:31 - just add it to the body selector since
21:32 - it seems like
21:34 - most of the body text is that gray color
21:36 - so let's add that in the global one as
21:38 - well
21:39 - this just makes it so that you don't
21:41 - have to
21:42 - add you know font size and color for
21:44 - every different element you can just add
21:46 - it
21:46 - globally first to the body for whatever
21:48 - you know the most often used one is
21:51 - and then you can make them different for
21:52 - the elements that need that let's check
21:54 - out this website
21:56 - where's the color coming from looks
21:58 - almost purple
22:00 - not gray there should be another color
22:03 - hopefully
22:04 - uh it's probably this light grayish blue
22:05 - so we'll just replace that
22:08 - there we go i wonder if this is from the
22:11 - link color change to red
22:15 - yeah it's not taking for some reason i
22:17 - think it's probably taking the default
22:19 - color from the browser
22:20 - so what i want to do is
22:23 - let's add that color property there okay
22:26 - that's a little bit too
22:28 - that's a little bit too light so we're
22:29 - just going to go back to the grayish
22:31 - blue
22:31 - and same for here there we go
22:35 - okay that looks more like it so now we
22:37 - have the links added
22:38 - we want to add that cta button that's
22:41 - just for desktop
22:43 - so let's move this over here because
22:45 - we're going to need that pretty soon
22:46 - this is going to be probably a button
22:49 - element
22:51 - so we'll say button type equals
22:55 - button and then what does it say request
22:58 - invite
23:02 - okay so now it's a button now of course
23:04 - we need to style these button styles
23:06 - so we're going to add the button styles
23:08 - again in our globals
23:11 - so first thing i want to do is we want
23:13 - to kind of reset the
23:14 - colors and different styles so this
23:18 - one is a gradient background and it has
23:21 - rounded corners
23:22 - what we probably want to do is figure
23:24 - out what the size of the button is so we
23:26 - can do that by i'm just going to add
23:27 - padding to the sides so it's about 16
23:32 - padding on top about the same on the
23:34 - bottom
23:35 - and then oops for the left and right
23:38 - it's about
23:39 - let's just say 30. so we'll say 16
23:41 - padding on top and bottom and then 30
23:43 - on left and right
23:47 - so we're going to use the button element
23:48 - as well as the button class just in case
23:50 - because sometimes we might want to have
23:53 - an anchor link
23:54 - that has the button class as well
23:56 - padding 16 on top
23:58 - so that's one rim and then 30
24:02 - which would be 30 divided by 16 1.875
24:07 - around this okay and then also around a
24:09 - corner so border radius
24:11 - um i'm not sure we'll just say 50 pixels
24:13 - for now okay let's see how that looks
24:16 - okay getting there we also probably want
24:18 - to make it use the cursor when you hover
24:20 - over it
24:24 - there we go so now it looks like it's a
24:25 - link looking back at the design
24:28 - this is a gradient looks like it's a
24:30 - linear gradient just going from
24:32 - left to right so going from this green
24:34 - color to this kind of
24:35 - teal blue green color let's see which
24:38 - colors
24:38 - we're going to be using it's probably
24:41 - lime green going to bright cyan
24:43 - so let's add it i like adding the
24:47 - background here
24:49 - background linear gradient
24:52 - and it's going to go lime green
24:56 - to bright cyan
25:00 - okay so it's horizontally i don't want
25:02 - to make it go kind of vertical
25:04 - so i think it is too right i'm not
25:08 - positive that's the correct
25:09 - syntax and it looks like it's not css
25:13 - linear gradient this is what i do quite
25:15 - a bit when i'm
25:16 - building websites so we can go to let's
25:19 - check out mdn
25:21 - okay two left comma so i need to add a
25:23 - comma there
25:26 - and let's go back to our website oh
25:28 - still didn't work what's going on here
25:29 - i am not using the right property
25:32 - background linear gradient to
25:33 - left let's kind of inspect this in the
25:37 - thing itself linear gradient that's
25:40 - right
25:42 - to dash right no
25:45 - there's no dash that's why just test
25:47 - this to make sure
25:49 - i think i need to edit in the code
25:51 - itself
25:53 - there we go oh yeah i think we need to
25:55 - get rid of that border
25:58 - so in buttons we're going to say border
26:02 - zero okay so now that's gone which is
26:05 - good
26:06 - then we want the color to be white
26:12 - nice and let's see how that matches
26:15 - looks like it might be bold actually
26:19 - font weight we'll say 700 for bold
26:22 - although it said it was
26:24 - let's check our notes again weights 300
26:26 - and 400.
26:28 - go back to the design here so i'm
26:31 - guessing the default weight is the
26:34 - 300 for light and the normal is
26:38 - sort of the headline stuff so let's kind
26:40 - of go back into our body
26:42 - font weight we want default weight to be
26:45 - 300
26:46 - and then for the link we'll say the
26:49 - weight is 400 since
26:50 - it is a little bit heavier
26:54 - is that taking um font weight 300 which
26:58 - is good
26:59 - check this out want weight is 400
27:03 - it doesn't look any different weird
27:06 - okay i think this might be because it is
27:08 - a button element
27:10 - um if we do font
27:13 - weight 300 font weight
27:18 - 400. seem to change at all
27:22 - changes to an anchor link
27:25 - yeah it is changing a bit so this might
27:27 - just be a bug
27:28 - for the button element maybe we'll just
27:31 - change that button to
27:32 - an actual anchor link
27:36 - because it could be an acrylic in real
27:37 - life it really just depends on
27:39 - what you want to do add a class
27:42 - and we'll say class of button now we
27:45 - know that this should inherit all these
27:46 - styles here so let's check this again
27:49 - okay looks like the weight is correct
27:51 - pretty big i think
27:52 - in the design it looks like it was the
27:54 - same size
27:55 - so let's go back to header
27:59 - this is maybe header underscore
28:01 - underscore cta
28:06 - so font size we'll just make this also
28:08 - font small
28:10 - and color will make this white
28:13 - uh why is this gray oh my gosh nothing's
28:17 - working
28:18 - what color red
28:21 - important
28:25 - oh my it's because it's the anchor link
28:28 - oh okay probably because oh yeah i did
28:31 - this color grayish blue
28:32 - i might actually just get rid of this
28:34 - thing here
28:36 - and instead add it to the anchor links
28:38 - because it's a bit more specific because
28:40 - i don't want every single
28:41 - link to necessarily be that grayish blue
28:42 - color there we go
28:45 - that looks pretty good all the links are
28:46 - there so the next thing we want to do is
28:49 - we want to
28:49 - either hide or show the different
28:51 - navigation elements depending on if
28:52 - they're needed on the mobile design and
28:54 - then the desktop design
28:56 - so how we're going to control that is
28:58 - another set of helper classes
29:00 - this is going to be a bit more
29:01 - complicated because first i need to
29:03 - create
29:04 - the classes we'll just call this
29:06 - visibility so
29:07 - hide for mobile i'm including tablet
29:10 - with this mobile
29:11 - class so in this what we want to do is
29:13 - hide
29:15 - for tablet and mobile devices and we'll
29:18 - create another one hide for
29:19 - desktop hide for desktop
29:23 - widths viewport widths so the way we're
29:26 - going to target this
29:27 - is we need to create a media query but
29:29 - what i'm going to do is create a mixin
29:31 - so we can make things a bit more
29:32 - reusable let's create a new
29:34 - sas file called mixins
29:38 - and this one's going to be related to
29:39 - breakpoints the final code that we want
29:42 - to have
29:42 - is something like media
29:46 - and then the target will be min width
29:48 - 1024 pixels for desktop
29:50 - 1024 divided by 16 64. and for
29:54 - media queries you want to use ems
29:56 - they've just been shown to be the most
29:58 - consistent
29:58 - among browsers and then we have our
30:00 - styles go here
30:02 - this is what we want to output but we
30:04 - want to save these
30:06 - break points so we don't have to keep
30:07 - typing them every time right so
30:09 - what we're going to do is we're going to
30:10 - create a sas map we're going to call
30:12 - this
30:13 - breakpoints up and then we're going to
30:16 - basically create a bunch of different
30:18 - values for breakpoints up meaning at
30:20 - this point and bigger
30:22 - use these styles so to do that we're
30:24 - going to first create one for
30:26 - medium because we're assuming the small
30:28 - size
30:29 - is the default one 640
30:32 - pixels divided by 16 is 40 ems
30:37 - 40 ems i'll create another one for a
30:39 - large
30:40 - and let's say that one's going to be 10
30:42 - 24 pixels
30:44 - divide by 16 is 64. and we'll create
30:47 - another one for extra large
30:48 - since we have a lot of large screens
30:51 - these days
30:52 - 1400 divided by 16.
30:55 - so 87.5 ems
30:59 - so now this is our sas map for
31:02 - breakpoints up but
31:03 - i'm also going to create one for break
31:04 - points down the first one breakpoints up
31:06 - is if you want to
31:08 - target this viewport and up and that's
31:11 - what i use for most of my styles but
31:13 - there are some cases
31:14 - where you want to target a style from a
31:16 - certain viewport and on down
31:18 - so for that we're going to not use the x
31:20 - large
31:21 - because x large on down is basically
31:24 - everything but we are going to add a
31:26 - small here for mobile devices
31:29 - for mobile we're going to take this
31:31 - value here because
31:32 - medium would be 40 ems and on and on up
31:35 - for small we're going to say 40 ends and
31:37 - down
31:37 - and we'll move this up here from medium
31:40 - on down so this is anything
31:42 - smaller than 10 24 and then 87.5
31:46 - ems oops i need to leave that there
31:49 - we don't want to overlap these so i'm
31:51 - just going to make these one pixels
31:52 - smaller the breakpoints we're using
31:54 - are 640 pixels 10 24 pixels and i think
31:58 - i said 1400 pixels
32:00 - that's for the break points up so for
32:02 - these we want it to be
32:03 - 640 and up so 639 and down
32:07 - this is so we don't have any overlapping
32:10 - styles
32:11 - i try to not mix breakpoints up and
32:13 - break points down in the same style rule
32:15 - it's either one or the other usually
32:16 - going to be break points up we need to
32:18 - recalculate these numbers here
32:20 - this is going to be 639 divided by 16.
32:25 - 39.9375
32:27 - 9 and then 1023
32:32 - divided by 16. 63.9375
32:36 - and the last one is going to be 13.99
32:43 - 87.4375
32:46 - there we go now we have our two maps
32:49 - what we can do now is create our mixin
32:51 - so we're going to say
32:53 - mix in break point up
32:56 - it's going to take a parameter we'll
32:57 - just call it size i'm going to
33:00 - write what we want the the mixing 2
33:02 - output so we want to output a media
33:04 - query so media
33:06 - and then min width and this is where
33:08 - we're going to put in this
33:10 - size variable i'm sorry this is not
33:13 - right
33:13 - so the min width is going to be the the
33:16 - the value
33:17 - for that size that we've determined so
33:19 - to get that we need to use
33:21 - map dash get so you can see this code
33:24 - has some helper
33:25 - text here turns value in a map
33:26 - associated with the given key so map get
33:28 - and the map we're using is going to be
33:30 - for the first one
33:31 - break points up we also want to grab
33:35 - that
33:35 - size parameter so the size is going to
33:37 - be either small medium large
33:39 - x large and will return this ems number
33:42 - when we're using this mix-in we want to
33:45 - write this media query and then in the
33:47 - media query we're going to just output
33:48 - whatever content
33:50 - is in the style and i'll show you how
33:52 - that works in a second
33:53 - we got our mixing written or breakpoint
33:56 - up and let's create another one for
33:57 - break point down
34:01 - and everything's going to be pretty much
34:02 - the same except reasonably down
34:05 - and then also instead of min width is
34:06 - going to be max width
34:08 - and then the content so going into our
34:11 - global styles again the hide for mobile
34:14 - class we want to
34:15 - hide for medium and down so we're going
34:18 - to
34:20 - call the mixin by using include and we
34:23 - want to do
34:24 - break point down and
34:27 - the size we're going to call is going to
34:29 - be the medium
34:30 - because for medium and down we want to
34:33 - say display none
34:36 - and then in a similar way for the
34:38 - desktop
34:39 - we want to call a mixin but the one
34:41 - mixing we're going to use is going to be
34:43 - breakpoint
34:44 - up because we want to hide the element
34:47 - using this
34:48 - class for desktop and up so that would
34:50 - be large and extra large
34:54 - display none okay now let's see if this
34:57 - works by adding these classes to the
34:59 - different elements in the
35:01 - header so for mobile we want to hide
35:04 - those links as well as that cta so let's
35:06 - add the class here
35:09 - and then for desktop we want to hide the
35:11 - hamburger menu since we don't need that
35:12 - for desktop
35:14 - and we're going to keep the logo because
35:16 - that's going to be used for both
35:18 - okay so now moment of truth let's see
35:21 - how this works looks like something's
35:23 - not really working
35:24 - but let's see yeah this is when we debug
35:28 - our code
35:30 - so hide from mobile and for desktop
35:34 - interesting looks like there's no errors
35:37 - so what we want to do
35:38 - is maybe check out the final css file
35:41 - there we go let's see if we can find
35:45 - that class
35:46 - oh looks like we didn't even
35:50 - didn't even get pulled in for some
35:51 - reason that's weird
35:54 - oh wait there's a error here no mixing
35:57 - named breakpoint down
35:59 - okay let's go back and start from the
36:01 - beginning oh
36:03 - we didn't add the mixins sass file so
36:06 - let's let's do that that seems
36:08 - pretty important now we go okay now
36:10 - there's a success message
36:12 - go back to our site oh my gosh what's
36:15 - going on here
36:17 - okay so it does look like things are
36:20 - hiding and showing
36:22 - so let's see when when does this switch
36:25 - potentially four and up it's showing the
36:26 - links and the button and then
36:29 - yeah so hide for desktop display none or
36:32 - the
36:32 - the hamburger menu then here
36:36 - there's no styles here but as soon as we
36:38 - get shorter
36:40 - use the hide from mobile so at 10 24 is
36:44 - when everything
36:44 - either gets hidden or shown so this
36:47 - looks like
36:48 - it is working let's look at the design
36:51 - again and just make sure we have all the
36:52 - styles
36:53 - correctly we need some more space
36:55 - between these links here so
36:57 - let's see how much space we need to add
36:59 - it's about maybe
37:00 - 32 pixels so going into our header sas
37:03 - file
37:04 - header links a what we're going to do is
37:06 - we're going to add a margin to
37:08 - the right of the link but we don't add a
37:10 - right margin to the last link because
37:11 - there's nothing after that
37:12 - so we're going to use a not selector and
37:15 - then not
37:16 - last child so as long as it's not the
37:19 - last child
37:20 - margin right is going to be what do we
37:23 - say
37:25 - 32 pixels
37:29 - all right so now let's make sure there's
37:32 - no
37:33 - margin added to that last link
37:36 - contact blog why is there white space
37:38 - here
37:40 - and then queers does not have it so the
37:42 - white space is probably
37:44 - added because of the enter key
37:48 - um there we go okay now there's no white
37:50 - space that's weird
37:52 - let's go back here check one more time
37:54 - let's check this button styles again
37:56 - 152 by 50 seems a little bit big to me
38:00 - i feel like some of the padding might
38:02 - not be quite accurate
38:04 - here is our div 163 by 44
38:08 - and let's kind of guess what this font
38:11 - size is
38:12 - it's probably 14 which i think it should
38:15 - be
38:15 - correct let's double check the font
38:17 - first and then we'll adjust the padding
38:19 - to match so if we go to computed
38:22 - and see that the font size
38:27 - is 14 so that's right so we're just
38:29 - going to adjust the padding here
38:31 - the pattern right now is 16 on the top
38:34 - and bottom
38:35 - it's 50 pixels tall right now and it
38:37 - should be 46 we need to
38:40 - subtract 4 pixels so 2 pixels from the
38:42 - top and bottom
38:44 - so let's go back to our button styles
38:46 - and here's the padding so one round
38:48 - which is 16 pixels but we want to
38:51 - subtract that and make it 14. um 14
38:54 - divided by 16.
38:55 - 0.875
38:58 - rem there you go
39:01 - so now it's 46 which is pretty good and
39:04 - then it should be 163
39:07 - and it's only 152 so it's about 10 so
39:10 - we'll add five more to each the left and
39:11 - the right
39:12 - right now it is 30. we want to be 35 on
39:16 - each
39:16 - so 35 divided by 16 is 2.1875
39:23 - 2.1875 okay so that looks a bit more
39:25 - like the design 162 by 46
39:28 - which looks much closer yeah that looks
39:30 - pretty good
39:32 - and let's actually double check this
39:33 - logo size as well for both
39:36 - mobile and desktop it looks like they're
39:37 - the same size for both
39:39 - let's just make sure it's about
39:43 - 141x22 if it's the same for mobile
39:46 - yeah it's the same let's see what the
39:48 - actual logo is here
39:50 - 139 by 20 and it should be 141 by 22.
39:56 - so let's see where this gets set i think
39:58 - it's in the header
39:59 - oh we didn't even set the size okay so
40:01 - it needs to be 141 by 22.
40:05 - so 141 divided by 16
40:09 - 8.8125
40:14 - and then height should be 22
40:19 - [Music]
40:22 - 1.375
40:24 - okay let's see if that helps at all
40:27 - alrighty
40:29 - the 141 by 22
40:32 - 141 by 22. all right
40:35 - this is pretty good so we got our mobile
40:38 - styles here
40:39 - for the hamburger menu as we get bigger
40:41 - we got the desktop styles
40:43 - so let's check out the active states for
40:46 - desktop we go over here
40:50 - looks like the text gets darker and oh
40:53 - we have this border here
40:54 - and then for the button it looks like it
40:56 - gets sort of
40:58 - like whited out a little bit yeah it
41:00 - looks like that
41:02 - so first let's tackle the that bottom
41:04 - border
41:05 - and the color for the text so
41:09 - the header links i'm going to do is for
41:12 - the hover
41:13 - pseudo selector we want the color to be
41:17 - the darker gray so it was grayish blue
41:20 - here so it's probably this dark blue
41:22 - color here
41:24 - let's double check on that nice
41:28 - and to make it a little bit nicer we can
41:29 - add a transition
41:31 - so transition for the color and
41:34 - the timing for that let's just say maybe
41:36 - 200 milliseconds
41:38 - and then i like to do ease in out for
41:39 - most transitions
41:42 - there we go so you can see it's a little
41:43 - you know just a little bit nicer
41:46 - let's figure out how to do that bottom
41:48 - gradient so the problem is here right
41:50 - now
41:51 - these elements are just the width or the
41:54 - height of the text itself
41:56 - so what i will need to do is i need to
41:58 - add some either margin or padding
42:00 - for the top and our bottom to make it
42:03 - the height of the probably the entire
42:06 - thing because we're centering everything
42:07 - remember
42:08 - so where's my little rectangle where'd
42:11 - it go
42:12 - i left it over here oh there's another
42:14 - one down there
42:16 - like this one we'll take this one in
42:18 - case we need it later make it bigger so
42:19 - we can see it
42:21 - let's take that over here and see how
42:24 - tall this thing needs to be
42:26 - looks like the header itself is
42:30 - about probably 80 pixels tall is what we
42:32 - would guess
42:33 - and then the little border thing is
42:35 - about 5 pixels tall
42:37 - let's go back to our site add some
42:40 - border so we can see what we're doing
42:41 - here
42:43 - i can see that this has a border this is
42:45 - actually a little bit tall as well
42:48 - and it really should be 80 pixels tall
42:53 - it's probably the padding the header has
42:55 - no padding the nav has padding here
42:57 - 24 pixels of padding so let's try
43:00 - and we should probably convert that to
43:02 - rams as well so if the total height is
43:04 - going to be 80
43:05 - we can take this down so 17 pixels and
43:08 - 24 pixels
43:10 - or header nav padding
43:14 - and then if we want to convert that to
43:15 - rems
43:18 - 1.0625
43:23 - and then 24 1.5
43:29 - okay so now it is 80 pixels tall which
43:32 - is
43:32 - pretty much about what we wanted let's
43:34 - see if we can do it with
43:36 - a pseudo element not sure if this is
43:38 - going to work
43:40 - let's just say for this one
43:43 - um header links a
43:46 - new set of styles here airlinks a b4
43:50 - so content needs to be an empty string
43:53 - so let's try
43:54 - position absolute width of 100
43:58 - display block
44:01 - and we'll make it a height of 5 pixels
44:03 - and then background of let's just say
44:05 - you know the lime green color so the
44:09 - suit elements going all the way across
44:10 - which we don't want it to do
44:12 - i thought this position relative would
44:14 - work
44:16 - let's try adding it here okay
44:20 - there we go maybe we'll try to align it
44:23 - to the zero
44:24 - left of zero right of zero
44:28 - so instead of width we're just saying
44:30 - left and right so now
44:31 - each link has a little line which is
44:34 - what we want but
44:36 - it doesn't seem like it's in the right
44:37 - place and i think it's because we want
44:40 - to
44:40 - adjust it so that it's right up to the
44:43 - header
44:47 - so now we want this green line to be
44:49 - down where the blue line is so let's see
44:51 - if we can do that
44:52 - we might actually just need to add a
44:54 - static let me think about this
44:57 - what we could do is say bottom zero
45:02 - negative statically set it to 30. that
45:05 - might actually be the easiest one so
45:06 - let's do that
45:07 - okay so before we forget let's copy
45:09 - these styles
45:10 - so header links a i'm going to say
45:14 - position relative
45:18 - and then the header links a let's add
45:21 - this here
45:22 - so before
45:25 - let me content empty
45:29 - and then let's just kind of copy those
45:30 - other styles that we'd added here
45:38 - okay so now this actually worked oops
45:42 - what did i do what did i do looks like
45:46 - set position relative hmm what did i do
45:50 - oh i didn't add position absolute
45:55 - there we go there we go
45:58 - i think it was happening before was
46:02 - position relative and you just made them
46:04 - stack for some reason
46:06 - makes every element a display block
46:09 - which takes up 100 width
46:11 - and then it's in the flow of the
46:14 - document
46:16 - interesting okay anyway so here we got
46:19 - our
46:20 - lines now what we want to do is make the
46:22 - colors correct first of all
46:24 - and we're going to only show the line
46:26 - when you're hovering
46:27 - if we look over here it looks like let's
46:29 - see it has the same green actually as
46:31 - the button it goes from lime green to
46:33 - blue
46:34 - so let's go back to our button styles so
46:37 - here's the linear gradient
46:39 - i wonder if we're using this gradient
46:41 - again in this website
46:44 - so it's using the buttons which is
46:45 - already taken care of this i'm assuming
46:47 - are just
46:49 - icons this is just green
46:53 - i think we'll be okay just leaving the
46:55 - styles
46:56 - like this and then we can just copy it
46:58 - if if it was used multiple times i might
47:01 - create like a helper class for that but
47:03 - let's just leave it like this for now
47:08 - and then we also only want that to
47:12 - appear on hover
47:13 - so when you hover on the element itself
47:17 - the pseudo element will get this
47:18 - background
47:22 - that's cool now we need to figure out a
47:24 - way to make this
47:26 - more transitioned because it's a little
47:28 - bit you know kind of jarring just like
47:30 - suddenly pops up
47:31 - as opposed to the color of the text like
47:33 - itself
47:34 - what we can do is unfortunately you
47:37 - cannot
47:38 - make the background itself
47:41 - you can't make the background itself
47:43 - transition it just
47:44 - doesn't work that way so what we're
47:46 - gonna do is we're going to
47:48 - put the background back in the
47:52 - pseudo-element by default but we're
47:54 - going to make
47:55 - opacity zero and then
47:59 - when it's hovered we'll change the
48:01 - opacity
48:02 - to one and then we can add the
48:04 - transition here
48:08 - opacity 300 milliseconds
48:11 - ease and it'll be the same
48:16 - oh wait 200 milliseconds
48:20 - so now let's get rid of that border too
48:24 - don't need that let's see what this
48:26 - looks like
48:28 - now you can see it is fading in and out
48:31 - pretty nicely
48:33 - might make it a little bit slower let's
48:34 - make them 300
48:36 - for both
48:44 - okay so now it's a pretty nice little
48:47 - transition here
48:48 - okay so i think these text links are
48:50 - good let's move on to the
48:52 - hover state for that button let's look
48:54 - at the design one more time
48:57 - it looks like it just kind of fades to
48:59 - white so i wonder if we can just
49:02 - make this adjust the opacity let's see
49:05 - what this looks like
49:06 - opacity let's try 0.75
49:10 - see what that switches look that's
49:13 - pretty good
49:14 - okay so button header cta
49:18 - in the header let's find the cta and
49:20 - then we're going to add a transition
49:23 - for the opacity again and we'll do the
49:25 - same thing 300 milliseconds oops
49:29 - ease in out now
49:32 - on hover um we'll say opacity
49:36 - is zero okay so let's see how that looks
49:39 - now
49:40 - whoa oh it doesn't want to be 0.75 i
49:45 - think i said
49:47 - that wouldn't be very good user
49:49 - experience that's pretty good
49:56 - for making this hamburger menu the first
49:58 - thing is we need to turn
50:00 - this hamburger into an x when you click
50:01 - on it so some kind of cool animation
50:04 - second thing that happens is this
50:05 - overlay will in some way shape or form
50:08 - appear over the rest of the website
50:10 - and then on top of the overlay will be
50:11 - the actual mobile menu
50:13 - then clicking on the x will animate it
50:15 - back into the hamburger
50:16 - the overlay will disappear and the
50:17 - mobile menu itself will also disappear
50:19 - in some way so the first thing i'm going
50:22 - to do
50:22 - is starting with the hamburger menu
50:24 - animate it from hamburger to x
50:27 - so to do that let's do a little bit of
50:28 - research online so i'm going to go to
50:31 - codepen
50:32 - dot io and i will type in
50:36 - hamburger menu and just kind of see what
50:39 - happens
50:40 - see what we can find here i do want to
50:42 - mention before we
50:43 - get into this is that even though you
50:46 - can
50:46 - legally copy any code you find on
50:48 - codepen i try to
50:50 - do research see what other people have
50:52 - done terms of solutions see what they've
50:54 - built but then try to build it myself
50:56 - so this is really just the steps that i
50:59 - take
50:59 - to build something just to do some
51:01 - research
51:03 - that's kind of cool let me try hamburger
51:06 - animation
51:07 - that's really the specific thing we're
51:09 - looking for here i don't want anything
51:11 - too flashy or too fancy
51:15 - um yeah that's a little too much for me
51:17 - and i just wanted to include this part
51:19 - in the video because i do feel like
51:20 - researching is a very important part of
51:23 - coding you always have to invent
51:25 - everything from scratch
51:31 - okay i actually kind of like this
51:33 - animation the middle bar disappears it
51:35 - fades out and
51:36 - the two the top and bottom bars form the
51:39 - x so let's just see
51:41 - what they did here they've added some
51:44 - transitions onto this
51:46 - and transform origin line
51:50 - two goes to opacity zero so it fades out
51:53 - so it looks like line one i'm assuming
51:55 - is the top one rotates 45 degrees
51:57 - so it's angled the bottom line is going
51:59 - to rotate negative 45 degrees
52:01 - and i do like how this looks so i think
52:03 - i'm going to just try to build this
52:05 - animation one thing that i think i'm
52:08 - going to do
52:08 - which is a bit different from a design
52:10 - is i'm going to make this hamburger menu
52:11 - a little bit taller and more
52:12 - square because we can see the x is
52:14 - actually square and it looks taller
52:17 - than the hamburger menu we'll make that
52:19 - change then we'll start adding in the
52:20 - animation
52:22 - so what i did here was basically added
52:25 - three pixels of margin bottom to the
52:28 - first two spans
52:29 - it's 26 by 14 height right now i know 26
52:33 - by 26 is really what i want
52:35 - we'll just try to eyeball it honestly
52:37 - let's do five pixels
52:39 - this is the header underscore underscore
52:40 - menu
52:42 - this is one benefit of using the bem
52:44 - styling because i know everything has to
52:46 - be in the header sass file there we go
52:48 - five and we'll go back here okay
52:51 - that looks pretty good i think i'm going
52:54 - to add a class
52:55 - on this header menu so that when it's
52:58 - open that will sort of turn on the
53:01 - animation
53:02 - okay so header menu go back here so
53:05 - header menu
53:06 - then i'll add a helper class and we'll
53:09 - just say
53:10 - open so in the header let's kind of
53:14 - refer back to our markup as well
53:16 - so this here is the mobile menu so those
53:18 - spans in the header underscore
53:20 - underscore menu
53:21 - if header underscore in a square menu
53:23 - has a class of open as well
53:25 - then we're going to transform those
53:28 - spans
53:29 - span first child
53:34 - and we'll add another one or last child
53:40 - and then i think i need to add one for
53:42 - the middle child there's no middle child
53:44 - selector but i think we can do nth child
53:48 - i think it should be
53:50 - two because i think the number for those
53:51 - starts with one
53:53 - so when it has class of open we're going
53:55 - to do transform
53:57 - rotate 45 degrees
54:02 - then for the last child we'll do
54:04 - negative 45 degrees
54:06 - and then the middle child will say
54:08 - opacity zero
54:10 - and the reason i'm doing opacity instead
54:11 - of like display none is because
54:14 - you can't transition display block to
54:16 - display none you have to do
54:18 - opacity which can use a transition now
54:21 - let us test this in the browser it's
54:24 - going to reload
54:25 - and of course i didn't add any
54:26 - javascript or anything yet so we're just
54:28 - going to add manually the open class to
54:31 - the menu
54:32 - that doesn't look too good i think it
54:33 - has to do with the transform
54:36 - origin because right now what is
54:38 - happening is
54:39 - they're kind of just rotating themselves
54:42 - wherever their middle is
54:43 - let's add a transition then we can kind
54:45 - of see that a bit more clearly
54:47 - transition will say all
54:50 - 300 milliseconds ease in out
54:54 - all right let's try this again we can
54:57 - add a class of open
54:58 - take a look at the hamburger menu yes
55:01 - you can see
55:02 - each line is kind of rotating on
55:05 - wherever the center
55:06 - is the middle one's fine because it's
55:07 - just disappearing so i
55:09 - actually kind of need to look back at
55:10 - that
55:13 - because you can see that you want the
55:15 - transform origin to be
55:17 - on the sort of left side let's kind of
55:20 - see what they did here
55:22 - okay transform origin 20 ammonium i
55:25 - haven't used transform origin really
55:26 - before so let's google that
55:29 - transform origin i try to look at
55:32 - mozilla
55:33 - developer network when i can okay
55:35 - transform origin sets the origin for an
55:37 - element's transformations
55:39 - it's rotating the origin is the center
55:41 - and i'm assuming that's default so let's
55:42 - try top left
55:44 - instead of just rotating from the center
55:45 - it's the corner is kind of where
55:47 - the rotation starts so that might be
55:49 - what we want for the
55:50 - first line let's just try transform
55:52 - origin
55:54 - top maybe center left since they're just
55:56 - lines
55:57 - let's just add it for all of them
55:59 - transform
56:01 - origin center left
56:04 - or let's do left center i don't know
56:06 - which one needs to be first
56:08 - i'm not sure if it matters let's add
56:10 - this open thing again
56:13 - getting closer i think i'm actually
56:16 - going to
56:17 - add the javascript here so i don't have
56:19 - to keep manually adding it in
56:21 - i don't really need the hello world
56:23 - anymore for clicking on this
56:25 - i'm actually going to add an id because
56:27 - i like to use ids for the javascript
56:30 - functionality so
56:31 - button hamburger and then
56:34 - take this id then the script.js will say
56:36 - document
56:38 - query selector and selector is going to
56:41 - be the hash
56:42 - button hamburger and then let's add
56:45 - event listener
56:47 - and it's going to be a click then when
56:50 - you add it it'll run this function
56:53 - i always use a little console logs to
56:54 - test first open
56:56 - hamburger const
56:59 - [Music]
57:01 - hamburger equals the button hamburger
57:04 - over here
57:05 - actually let's just call it button
57:06 - hamburger then we can reuse this
57:09 - constant that we created
57:10 - when you click the hamburger i'm going
57:12 - to run this console.log message and then
57:14 - i also want to
57:16 - add a class and we can do this with
57:18 - classlist
57:20 - dot add and then the class name we want
57:22 - to add
57:24 - click hamburger so i'm gonna use a
57:26 - little if statement here so if
57:30 - button hamburger class list contains
57:34 - if it has open the open class
57:37 - i want to remove it otherwise i want to
57:40 - add the open class
57:45 - that should take care of the
57:46 - functionality we need for now
57:48 - let's click on this look at that
57:51 - add the open class and click on it again
57:53 - and it removes it
57:55 - okay so this looks good obviously this
57:57 - is x looks a bit
57:59 - weird we just need to kind of adjust the
58:03 - transform origin i think let's try zero
58:05 - pixels
58:06 - zero pixels just to see what happens
58:11 - oh look at this boy this looks weird
58:15 - oh that looks much better three pixels
58:18 - in one pixel
58:19 - in the header or was that oh transform
58:21 - origin there we go
58:23 - let's try again clicking on the
58:25 - hamburger menu
58:27 - nice looks like a nice little x hey look
58:30 - at that
58:31 - okay so this is the first functionality
58:34 - of the hamburger menu
58:35 - next thing we want to do is we want to
58:38 - load the overlay
58:40 - because we don't have any regular
58:42 - content in the website i'm just going to
58:44 - maybe add some stuff just so you can see
58:46 - the overlay opening over the regular
58:48 - content
58:50 - we'll just uncomment all of the html
58:52 - here
58:53 - okay so the next thing i'm going to do
58:54 - is we want to load an overlay so going
58:57 - back to the design
58:58 - the overlay it appears under the white
59:02 - navigation bar and then just over
59:03 - everything else
59:05 - so the headers here and the nav is
59:08 - included in that
59:09 - so i could do a couple things i could
59:11 - create an overlay on the same level as a
59:13 - header
59:14 - and then just make sure the header has a
59:16 - higher z index so it's on top of the
59:18 - overlay so let's try that actually
59:20 - so here's the header i'm just going to
59:21 - add a div class
59:23 - overlay
59:27 - okay so to make the overlay let's look
59:29 - at the design again
59:30 - so it starts with this gray color i'm
59:32 - assuming it's this
59:33 - sort of blue gray color which we can use
59:35 - and then it's a linear gradient
59:36 - which fades as you go down to
59:38 - transparent first let's get the color
59:40 - that we need
59:41 - it's probably this dark blue here the
59:44 - overlay
59:45 - let's just add a background color as
59:48 - a fallback
59:52 - then linear gradient
59:55 - oh wait background image
59:58 - linear gradient
60:01 - and i always forget what the
60:05 - but let's just try transparent
60:09 - we'll see i am a professional web
60:11 - developer but i do look up a lot of
60:12 - stuff okay so looks like
60:14 - that's the correct linear gradient thing
60:16 - so we do need to make this
60:17 - um cover everything and i want to
60:20 - do position absolute
60:25 - and then we'll just set top to zero for
60:26 - now right
60:28 - zero bottom zero
60:31 - left zero actually i think i might need
60:34 - to do a fixed
60:36 - because it's sort of going like this so
60:38 - you need to
60:39 - basically set the height of it to 100 vh
60:43 - so the viewport height i think this
60:45 - should
60:46 - accomplish the same thing we'll see oh
60:49 - look at that overlay
60:52 - oh yeah so i don't really want that
60:56 - i can use the shorthand those two
60:59 - 2d 314d hmm
61:04 - that's not what i want
61:06 - [Music]
61:08 - um css gradient
61:12 - fallback color um
61:15 - let's try linear gradient
61:23 - here we go there's a way to use these
61:25 - gradients and fallback colors
61:29 - that's what i did background color yada
61:32 - yada
61:34 - background image oh fallback image
61:40 - i don't know if that's actually because
61:41 - i did that but then it just
61:43 - add the background color
61:46 - like this um what if i did this
61:51 - nope
61:55 - well i guess that
61:57 - [Music]
61:59 - okay yes yes yes weird i don't know why
62:02 - this is not working
62:04 - well in any case maybe we'll just get
62:06 - rid of that
62:07 - background color weird i will just
62:11 - delete it
62:12 - this is kind of what we want i want to
62:13 - make sure the text goes sort of taller
62:15 - than
62:15 - what we can do so we'll just do this
62:18 - let's just do
62:20 - there we go okay so you can scroll down
62:23 - overlays fix
62:24 - which is pretty good obviously now it's
62:26 - covering up the header so we don't want
62:27 - that
62:28 - so for here we need to i think declare
62:31 - the position
62:32 - set the position rather or i think what
62:36 - we need to do is
62:37 - make the top the height of the
62:40 - nav bar so this is about
62:43 - 60. we'll just say top is 60 pixels
62:47 - there we go now we have our overlay we
62:49 - got top to 60.
62:52 - actually we should use rems so we'll do
62:54 - our little dividing game here
62:56 - 60 divided by 16 is 3.75 rams
63:02 - now um we also want to control this with
63:04 - a css
63:05 - class so before we if we add the open
63:07 - class to the
63:09 - hamburger it'll open what i could do
63:12 - is try to just use one css class to
63:15 - control
63:16 - all the animations so i think i'm going
63:17 - to add the open class to the header
63:19 - instead of the button hamburger itself
63:22 - open so what i'm going to do is i'm
63:24 - going to take this
63:25 - and then i'm going to add another
63:26 - section here hamburger
63:28 - open styles and
63:32 - the overlay into the header and then
63:34 - we'll add
63:35 - our open styles here and we'll put it in
63:37 - the header itself of course
63:39 - i'll set it at the top
63:42 - so if if the header has class open then
63:45 - i'm going to say
63:47 - um header menu we need to add these
63:51 - styles here so what i'm doing is i'm
63:55 - basically
63:56 - moving that all the open styles into if
63:59 - the header element has the open class
64:01 - not the header menu let's now test these
64:03 - adjusted styles
64:04 - and update our javascript so that we are
64:07 - adding the open class in the
64:09 - header element itself so create a new
64:12 - constant
64:13 - we'll just call this header and we'll
64:15 - use the same
64:16 - document query selector and we will
64:19 - select
64:20 - the class of header element
64:24 - so now instead of checking if the button
64:26 - hamburger
64:27 - has the open class we're going to change
64:29 - it to checking if the header
64:31 - has the open class we'll update these
64:34 - to remove the open class from the header
64:36 - and then here we'll
64:38 - add the open class to the header so what
64:41 - this is doing now
64:42 - is when you click the button you're
64:44 - going to check if the header has the
64:46 - open class
64:47 - and if it doesn't have it added and if
64:48 - it does have it remove it
64:51 - let's test this out in our site what we
64:54 - hope
64:54 - will happen is when we click this it'll
64:56 - add the open class
64:58 - oh yeah oh yeah it works
65:02 - it's always a good feeling when the code
65:04 - does what you wanted to do the first
65:06 - time without having to tweak it
65:08 - okay let's go back into our scss and
65:11 - i'm also going to start animating the
65:14 - overlay because right now
65:16 - on the side it's just kind of like there
65:18 - let's take a look at here
65:19 - in the header we have the overlay and
65:21 - it's positioned fixed
65:22 - so i'm going to create a css animation a
65:26 - keyframe animation
65:27 - and i'm going to attach it to a helper
65:30 - class
65:31 - actually i'm probably going to attach it
65:32 - to the if the header has the open class
65:34 - then using that css keyframe animation
65:36 - it's going to fade in
65:37 - or fade out the overlay we might have to
65:40 - tweak a little bit as we go but that's
65:41 - kind of general idea
65:43 - i think what i'm going to do is by
65:45 - default i want to make the overlay
65:47 - display
65:48 - none and then we will
65:51 - fade it in probably using the opacity
65:53 - and transition
65:55 - and then fade it out when we close the
65:57 - menu
65:58 - so i'm going to create a new sas file
66:01 - actually so in our app
66:02 - scss folder let's create a new file i'm
66:05 - going to call this
66:06 - animation so any keyframe animations
66:09 - we're going to
66:10 - load in this animation sas file and then
66:13 - of course we want to
66:14 - actually load it import it in the main
66:17 - sas file
66:18 - so animations there we go actually let's
66:21 - just put it
66:22 - up under the mixins just to keep things
66:24 - kind of organized
66:25 - so these are like the functional sas
66:27 - styles and then
66:28 - starting here is where we have elements
66:30 - in the different component styles
66:33 - keyframe animations you start by typing
66:36 - at
66:37 - key frames and then you
66:41 - write a name for what the animation is
66:43 - so what i want to do is i'm going to
66:44 - create
66:45 - maybe two animations for the overlay i'm
66:48 - just going to call them fade in and fade
66:49 - out so the first one's going to be fade
66:51 - in
66:51 - and with keyframes you start
66:54 - with a from and then you end with a 2
66:57 - and then you put
66:59 - the initial styles in the from bracket
67:01 - and then the end of styles in the
67:03 - two bracket and you can also add
67:06 - percentage of progress
67:08 - in here so if i wanted to i could say
67:09 - let's say 50
67:11 - do something let's indent this a little
67:13 - bit or
67:14 - any percent you want and then it'll use
67:16 - that to time when certain animations
67:18 - take place
67:19 - this is more if you have like complex
67:20 - animations what we're doing in is a
67:22 - pretty simple fade and so i think i
67:24 - might be able to get away with just
67:25 - using from into
67:26 - okay so in the header sas file the
67:28 - overlay has a default display of none
67:31 - and then in the animations i'm just
67:34 - going to add display
67:35 - none just because it's where we're
67:37 - starting
67:38 - and then i want to end up having a
67:41 - display
67:42 - block and
67:45 - opacity of one
67:49 - and we're also going to start with an
67:50 - opacity of zero now the tricky thing
67:52 - about
67:53 - this is you can transition opacity from
67:56 - zero to one it'll have a nice
67:57 - smooth animation from zero to one but
67:59 - you can't transition display none to
68:01 - display block that's just not
68:03 - how css works first it's gonna be
68:05 - display none then i'm going to say maybe
68:07 - one percent so right after it starts
68:10 - it's going to be display
68:11 - block but it's going to be opacity still
68:15 - of zero
68:16 - and then from one percent to basically
68:18 - 100 the end
68:19 - it will stay at display block but then
68:21 - it's going to transition from zero to
68:23 - one
68:24 - we can try this out by adding this
68:27 - animation in our styles
68:30 - and i'll just add the overlay styles up
68:32 - here so if the header is open
68:35 - then the overlay is going to have
68:38 - animation
68:39 - and it actually gives you a little help
68:40 - here so name duration timing function
68:43 - um direction things like that the name
68:46 - is
68:46 - the name that we added here so fade dash
68:48 - in
68:49 - duration let's just say 300 milliseconds
68:52 - that's kind of my default
68:54 - timing function ease in out
68:57 - is what i usually use and delay
69:01 - i don't think i need a delay iteration
69:03 - count you know how many times you want
69:04 - this to happen
69:05 - we just want it to happen once so i
69:07 - think you don't need to add anything
69:09 - there
69:09 - and then direction we want forwards
69:13 - and then fill mode i don't think i need
69:15 - that i don't think i need that
69:17 - so forwards this is actually important
69:19 - because
69:20 - saying forwards will ensure that once
69:23 - the animation is complete
69:24 - it will stay at whatever styles that
69:27 - you've put
69:27 - on the two otherwise it'll kind of
69:29 - animate and then reset back to whatever
69:31 - you had
69:31 - styled before adding any animation so we
69:33 - want to keep this display block opacity
69:35 - one
69:36 - after it's finished all right these are
69:38 - the styles we need for the overlay
69:40 - and let's i guess test it out okay so
69:43 - you can see the header and then we can
69:44 - see the overlay now is display none
69:46 - let's click on this and see what happens
69:49 - okay
69:50 - looks like camera is still working but
69:52 - the overlay is not
69:53 - animating in
69:57 - so we know the animation is being added
69:59 - to the overlay but for some reason the
70:01 - loading
70:02 - isn't actually working and we're not
70:04 - sure why what happens if i
70:07 - uncheck the display none oh so it did
70:09 - actually fade in look at that
70:10 - for some reason it's not sticking the
70:14 - end state is not staying on the thing
70:18 - display none but it does have the
70:20 - animation
70:22 - okay time to google again or i guess
70:24 - stuck that go
70:25 - css animation final state maybe okay
70:30 - maintaining the final say the end of
70:31 - css3
70:32 - thing and then i like using looking at
70:34 - css tricks as well as
70:36 - mdn so stack overflow css tricks and mdn
70:39 - are kind of my
70:40 - my main three sources that i go to okay
70:43 - looks like this person's also
70:45 - opacity changing from opacity zero to
70:47 - one elements go back to opacity zero
70:50 - animation fill mode is forwards well i
70:52 - did use that i believe
70:54 - yeah forwards maybe does the order
70:57 - matter
70:57 - in terms of what properties i put in
70:59 - here i'm not really sure i mean it seems
71:00 - like it's working if i
71:02 - uncheck the display none so
71:05 - i'm not sure what is happening it just
71:08 - says forwards should make sure it'll
71:10 - hold the last keyframe
71:11 - state don't forget to specify 100 huh
71:15 - i wonder if that does anything i don't
71:16 - know if that's gonna work but let's
71:18 - check on mdn
71:19 - i don't know if you need the both 100
71:21 - and the two this is just from
71:23 - two yeah from 75 percent
71:27 - to i don't think i need to actually say
71:30 - 100
71:31 - i mean i guess i can't hurt let's just
71:32 - try
71:34 - i'm not even sure this is like good
71:36 - syntax
71:38 - okay let's try again
71:41 - nope not working so i don't think it's
71:43 - this i'm going to delete the 100 stuff
71:45 - i know this is bad but i'm going to add
71:47 - an important
71:49 - to this see if that does anything
71:52 - nope jeez this is kind of annoying fade
71:55 - in
71:56 - 300 milliseconds easing out forwards
71:59 - hmm it seems like i'm doing everything
72:02 - right
72:02 - but obviously it's not working let's
72:05 - just get rid of this important because
72:06 - that didn't help
72:08 - i'm going to try commenting out the
72:09 - display none just for now
72:11 - and i'm going to try just setting it to
72:13 - opacity 0 and see if that makes it
72:16 - do anything different okay so it did
72:18 - fade it in
72:19 - so somehow adding a display block
72:22 - is not getting added because
72:24 - unfortunately i do
72:26 - need the overlay to like be display none
72:28 - otherwise i'm not going to be able to
72:29 - click
72:30 - things that are under the overlay
72:33 - so let's put that back in oh what if i
72:37 - okay by default overlay display none but
72:39 - but what if i add display
72:41 - block when it's open
72:45 - oh my gosh this work whoa
72:50 - that's so weird what if cs animations
72:53 - don't actually
72:54 - affect the display property at all that
72:55 - could definitely be the case
72:57 - let's look at this css does
73:00 - css animation display block
73:04 - because it might just maybe not affect
73:05 - the display property at all and make
73:07 - them just leave block display none
73:08 - that's sort of what i'm looking for um
73:11 - as you know
73:12 - oh one of the properties that cannot be
73:14 - animated is the display property
73:16 - okay so that's why i mean i guess it
73:19 - makes sense
73:20 - although intuitively you would think
73:22 - that you could add an animation from
73:24 - display
73:24 - none to display block and it would sort
73:26 - of understand that you want to fade it
73:28 - in
73:29 - so i think i don't need to add any
73:31 - display properties in the animation
73:33 - since
73:33 - obviously nothing's happening and
73:35 - because i'm not doing that i think i
73:36 - don't
73:37 - even need the one percent thing because
73:39 - i had just done that to make
73:41 - it display block and opacity zero so
73:43 - let's try this again
73:44 - okay here's the overlay header doesn't
73:46 - have open class let's click on it
73:49 - oh yeah okay so
73:52 - that's a fade in animation um and then
73:54 - let's make another one that's going to
73:56 - do the opposite
73:57 - fade out fade out from opacity one
74:01 - two opacity zero okay
74:04 - i added the fade in animation when the
74:07 - open class is
74:08 - added i don't know if it'll work if i
74:10 - add the fade out animation
74:12 - or like the default let's just try it
74:15 - we might need to add a helper class to
74:17 - the actual overlay to fade it in and
74:18 - fade it out
74:19 - but let's just reload because i want to
74:23 - make sure nothing weird happens with
74:25 - this okay i just want to make sure that
74:27 - because i added a fade out animation by
74:29 - default
74:30 - to the overlay i didn't want it to like
74:32 - fade out when you load the page because
74:33 - that would obviously look very strange
74:35 - okay clicking on the hamburger menu fade
74:38 - it in
74:39 - very good and it just sort of
74:42 - disappears so it doesn't have the
74:44 - transition which means the animation is
74:46 - not being added
74:47 - so let's make this a little bit more
74:50 - reusable so what i'm going to do is
74:54 - i'll just add a little helper class fade
74:56 - in
74:57 - and then we'll take this and instead of
75:00 - applying it specifically to the overlay
75:01 - i'm going to add it to this helper class
75:03 - here
75:04 - so we can do the same thing with the
75:06 - fade out
75:07 - we'll add a little helper class i think
75:09 - this might be a better practice anyway
75:12 - because then i can fade in or fade out
75:13 - any element using
75:15 - these helper classes so just fade out
75:19 - i do need to leave the display block
75:20 - here just to flip it from display none
75:22 - to display block
75:23 - but what i think i need to do is in
75:26 - javascript add that fade in and fade out
75:28 - class
75:29 - to the overlay so if header if it
75:32 - contains open
75:33 - remove opens this is when you close the
75:35 - hamburger menu just so i don't
75:36 - get things mixed up close hamburger menu
75:40 - else add open class meaning open
75:42 - hamburger menu
75:45 - so when you open the hamburger menu we
75:48 - want to add the fade in
75:50 - class to the overlay so let's add a new
75:52 - constant here
75:53 - let's call this overlay document query
75:56 - selector
75:57 - and it's just a class of overlay
76:02 - so when you open the hamburger menu
76:04 - overlay
76:06 - class list add
76:10 - fade in let's just test the fade in
76:13 - functionality now
76:14 - go back to our site okay so you can see
76:18 - the fade in class was added
76:20 - and it's adding this animation
76:23 - and then we'll do the sort of the
76:25 - opposite we'll say
76:27 - overlay classless add fade out
76:31 - when you close it and might need to also
76:47 - it just to kind of reset everything okay
76:50 - let's try it again
76:51 - reload for good measure all right it's
76:53 - fading in
76:54 - now what we want to happen is we want
76:56 - the classes to basically swap when we
76:58 - close the menu
77:02 - it's fading in but it's not
77:05 - oh you know what's happening it's
77:07 - because
77:09 - this when you remove the open class from
77:12 - the header it immediately just like
77:13 - goes back to display none shoot
77:17 - it's kind of annoying but i think i need
77:19 - to remove the overlay
77:21 - getting the display block and instead
77:24 - adding it to the overlay element itself
77:26 - so it doesn't get affected
77:28 - if the header has the open class or not
77:30 - so overlay if it has class
77:31 - fade in this is just going to do the
77:35 - same thing of just
77:36 - making it disappear oh boy this is tough
77:40 - okay fades in still doesn't fade out
77:45 - okay let's think about this what's
77:47 - happening step by step
77:50 - so okay going back to zero this is the
77:52 - default state
77:54 - you click on this it will add display
77:57 - block
77:58 - and then also fade it in the animation
78:00 - works because
78:01 - going from display none to display block
78:03 - it's still opacity zero
78:05 - so it's not going to like show up um
78:08 - without the nice transition the animated
78:10 - transition but then if you remove
78:14 - if you remove that then it's going to
78:17 - just display none right away so what we
78:21 - want to do is
78:22 - make it go from display block to display
78:25 - none
78:25 - after it fades out from opacity one two
78:28 - opacity zero
78:29 - so let's just research some other
78:31 - possible solutions
78:33 - um css animation display
78:37 - well it's kind of what i was searching
78:38 - for before display none
78:40 - display block none
78:45 - see what stack overflow has for us okay
78:48 - yep
78:48 - changing display none
78:52 - okay cs or jquery ie javascript can't
78:55 - animate between display none and display
78:56 - block
78:58 - i see 0 visibility hidden
79:02 - interesting i just want to make sure
79:03 - that the stuff is still clickable when
79:05 - we have like a visibility hidden but it
79:08 - still exists
79:09 - get rid of this display none see rid of
79:10 - opacity zero so now it is
79:13 - default display block visibility hidden
79:17 - it's interesting oh it seems like it's
79:19 - actually still clickable
79:20 - oh shoot this might be the silver bullet
79:23 - i'm looking for
79:24 - yeah so it's still clickable which is
79:26 - awesome to see what happens is
79:28 - it's just opacity zero it's not
79:30 - clickable like i can't
79:31 - select text as easily yeah i can't
79:33 - select the text but
79:35 - if it's visibility hidden
79:39 - it does select the text and i think
79:40 - visibility should be able to be animated
79:42 - so
79:43 - let's go back here so fade in we're
79:45 - going to go from
79:46 - visibility hidden
79:49 - to this might be where we need to just
79:52 - switch it quickly to
79:54 - visibility visibility visible
79:58 - with opacity zero so we're kind of
80:00 - combining so it's sort of like display
80:01 - block but
80:02 - i guess it could be animated for
80:03 - whatever reason then we'll do the same
80:05 - thing
80:06 - here so from opacity 1 visibility
80:09 - visible
80:11 - we'll go to opacity 0 and then we want
80:14 - it to be
80:16 - visibility hidden
80:19 - but in order to make it still visibility
80:22 - visible but opacity zero we're going to
80:25 - add 99
80:26 - so when the animation is almost done
80:28 - it's going to be at
80:29 - visibility visible but
80:32 - opacity zero and then let's see if i
80:36 - need to adjust any of these styles here
80:38 - i guess i don't need this anymore
80:39 - opacity or display none
80:42 - i think this should work famous last
80:44 - words
80:45 - let's reload for good measure okay see
80:47 - what happens
80:49 - fades in all right oh my gosh it fades
80:52 - out
80:52 - yes uh i always feel so good when you're
80:56 - like
80:57 - struggling with something and you're
80:58 - researching it and then finally get it
81:00 - to work
81:01 - that's an interesting little lesson i
81:03 - guess like display
81:05 - none is different from visibility hidden
81:08 - versus
81:08 - opacity zero and they all sort of do
81:10 - different things okay
81:12 - yay let's go back to the mobile view
81:14 - here
81:15 - oh i'm so happy oh this is great
81:18 - okay so now that we have our nice
81:21 - fade-in animation of the overlay
81:23 - next step is to actually code the
81:26 - menu
81:30 - now to start off building this off
81:32 - canvas menu looking at the design
81:34 - we can see that it's fairly simple it's
81:36 - just a white block and each link
81:38 - is in its own row so what we're going to
81:41 - do
81:42 - is first write the html markup and then
81:44 - i'm going to style it in our scss
81:46 - and then the last step will be to handle
81:48 - the animation and make it
81:49 - slide on screen or fade in or something
81:52 - when you
81:53 - open the hamburger menu so let's go into
81:55 - our code editor
81:56 - and let's figure out where we want to
81:58 - put the markup for
81:59 - the menu so obviously we want to be in
82:01 - the header tag since it is
82:03 - part of the header the menu is so i'm
82:05 - going to i think
82:06 - put the menu in a div after the nav so
82:09 - let's call
82:10 - this header underscore underscore menu
82:13 - maybe
82:14 - wait am i using this already oh yeah i'm
82:15 - using the menu
82:17 - for the hamburger i think this is more
82:19 - of the menu so i'm going to
82:20 - rename what the hamburger is so instead
82:22 - of underscore ownership menu let's make
82:24 - it underscore underscore
82:26 - toggle and then i'll just rename this in
82:29 - these styles so
82:30 - here we go header menus now header
82:33 - toggle let's just do quick
82:35 - find and replace here i'll just add a
82:38 - little
82:38 - toggle here to clarify what that's doing
82:40 - let's double check the javascript as
82:42 - well
82:42 - it doesn't look like there's a menu so
82:44 - we're good on that side
82:46 - let's just go back to our site real
82:47 - quick make sure everything's still
82:49 - working
82:50 - okay overlay and the hamburger icon are
82:52 - still working which is good
82:53 - so now let's move forward and create our
82:55 - header menu the header menu is going to
82:57 - be
82:57 - you know that white block and then in
82:59 - that we're going to make some
83:00 - links so let's look back at the design
83:03 - one two three four five links so we'll
83:06 - say
83:07 - a link times five again using that emit
83:11 - shortcut
83:11 - press enter and we got five links this
83:13 - is just a landing page so i don't need
83:15 - to have these actually be links
83:17 - so it's gonna be home about contact blog
83:19 - careers boom
83:21 - about a boot contact
83:25 - blog it's like a test of my short-term
83:27 - memory and careers
83:29 - let's just double check that all about
83:31 - contact blog careers yay
83:32 - i think this should be all the markup
83:34 - that we need let's go back into the
83:36 - header
83:36 - and then add the styles for the menu
83:40 - so the menu so the background is going
83:42 - to be background will be
83:44 - white did i create a variable for the
83:47 - white color
83:48 - the variables white i did it'll be
83:50 - background
83:51 - white and then in that will be links
83:54 - and i don't think i need an additional
83:56 - class for the anchor links themselves
83:58 - it's just enough that they're anchor
84:00 - links so that's going to be color
84:03 - and looks like it's probably the same
84:05 - gray as the
84:06 - header here so let's go back into our
84:08 - variables and
84:09 - i'm guessing it's the dark blue thing
84:13 - now we also need to add a bit of spacing
84:15 - get my handy dandy little rectangle here
84:17 - and then we will see first how much
84:21 - spacing there is on the top
84:22 - and bottom of the whole thing
84:26 - this looks like about 36.
84:29 - it's the same on the bottom and then
84:31 - each link oh i need some space
84:33 - too what i might do is do something like
84:36 - this where each link is going to be a
84:37 - certain height maybe 36
84:39 - and then let me duplicate this square
84:41 - here then i'll add
84:42 - another padding on top and bottom of 26
84:45 - so then each link is going to be
84:47 - you know 36 something like this we can
84:50 - always tweak it later on so it's gonna
84:51 - be
84:51 - padding of top and bottom is 26 and then
84:54 - 36
84:55 - height for each link so padding
84:58 - i guess i need to use a calculator again
85:01 - 36 no no 26 for the padding divided by
85:03 - 16 is 1.625 rems
85:06 - 1.625 rams on top and bottom and then 0
85:09 - on left and right
85:10 - i guess we just do it all around so we
85:12 - got the padding and then i think i also
85:14 - want to
85:15 - now there's a couple ways you could do
85:16 - this i could i could add
85:19 - top and bottom padding to the link
85:20 - itself i could also
85:22 - add the height of 36 and then make it a
85:25 - flexbox parent
85:27 - and align items center i think i'm just
85:30 - going to
85:31 - add the top and bottom padding let's say
85:33 - 10 pixels on top and bottom
85:34 - that way i don't have to write as many
85:36 - styles as i would if i had to
85:38 - turn this into a flexbox thing so
85:40 - padding oops
85:42 - padding and 10 going back to calculator
85:48 - 0.625
85:51 - and what the heck we'll just make it all
85:53 - the way around
85:54 - now let's see what we got on our site
85:57 - and we got our links
85:58 - it has a white space but i think that's
86:00 - okay so i want them to
86:02 - not be side by side and it's happening
86:04 - because anchor links
86:06 - by default are display i think inline or
86:09 - inline block
86:09 - one of those if we change them to
86:12 - display block then they will take up the
86:14 - whole width
86:15 - that they want that they can there we go
86:17 - so display block maybe text align center
86:20 - oops on the caps lock again text line
86:23 - center
86:24 - looks like that works so let's add those
86:26 - styles into our code
86:28 - display block and for whatever reason
86:31 - i like to order my styles in
86:34 - this way where text line
86:38 - center where i start with the bigger
86:40 - properties like display and position
86:43 - flexbox things and then i move on to
86:45 - margin and padding
86:46 - and then i do text colors and then at
86:47 - the end i'll do like transitions or
86:49 - whatever
86:50 - it's just a way that i like to keep
86:51 - things a little bit organized because
86:52 - when you start getting more rules you
86:54 - don't want to be searching so i just try
86:56 - to group these similar
86:57 - styles together let's slow the site that
87:00 - looks pretty good
87:01 - now the other thing we need to look at
87:02 - is this
87:04 - white block for the menu doesn't take up
87:06 - the entire
87:07 - width but it looks like so you can see
87:10 - on the mobile site
87:11 - there's like a container width so you
87:13 - have some space
87:15 - on left and right and it looks like it's
87:16 - kind of sort of the same
87:18 - um all the way down let me refresh my
87:22 - memory and see if i actually added some
87:23 - padding to stuff
87:25 - okay i did added some padding and that's
87:27 - from header nav so it's just kind of a
87:29 - global padding thing
87:30 - okay so before i do more stuff with the
87:32 - menu itself
87:33 - i think i need to add some add this
87:36 - padding that i have here on the header
87:37 - and put it
87:38 - sort of for anything on the mobile page
87:41 - because
87:42 - we want we don't want things to go all
87:44 - the way to the edge and it looks like
87:45 - things are right now because yeah like
87:46 - later on
87:47 - we're gonna need that padding the
87:49 - padding that i was looking at was on the
87:50 - nav
87:51 - okay i think the best way to do this is
87:53 - to take this padding
87:56 - not have it nav specific but make it a
87:58 - helper class of course
88:00 - so let's add some spacing
88:03 - so we'll say the generic container
88:07 - class and then this will have the
88:08 - padding so that means
88:10 - we want to go into the nav element and
88:13 - then
88:14 - add the container padding there okay
88:16 - looks like it's working
88:17 - so it doesn't have the padding in the
88:19 - nav but it's in the
88:20 - container class so now that means we can
88:22 - add this container class to other
88:24 - other elements but actually for the
88:26 - container class i only want the left
88:28 - and right padding i don't want the top
88:29 - and bottom so i think what i'm going to
88:30 - do
88:31 - is take this top and bottom make it zero
88:35 - for the
88:35 - container upper class but go back to the
88:38 - header and put the
88:39 - nav selector back and say padding
88:43 - 1.0625 rams zero because
88:47 - oh boy what did i do oh i know why
88:50 - it's because this reset the padding so
88:52 - the nav has the padding
88:54 - just on top and bottom and it's
88:56 - cancelling out the left and right
88:57 - padding
88:58 - here and that's because i'm using this
88:59 - padding shorthand so the best way to do
89:01 - this
89:02 - is to specify padding top
89:05 - and padding bottom i use a little
89:08 - control d to duplicate the line
89:10 - so it's a really helpful shortcut here
89:13 - and then
89:13 - here it's going to be padding left and
89:15 - right
89:16 - of 1.5 rims there we go
89:20 - shorthand properties are great but
89:21 - sometimes you do want to split them out
89:23 - just because you might want different
89:25 - values for different elements so now
89:28 - the nav has padding all the way across
89:29 - which is good and we can start adding
89:32 - the container class padding to other
89:33 - elements when we have the menu open
89:36 - we want it to be on top of the
89:39 - overlay and then have that spacing so i
89:41 - think if i just add the container class
89:44 - to the header menu itself
89:48 - should automatically do that we can't
89:50 - see it right now but
89:51 - there we go so we can see there is
89:52 - padding there although wait a minute
89:55 - i don't want padding i want margin for
89:56 - that
89:58 - so i'm going to keep the padding because
89:59 - i do need it for like the other content
90:01 - down on the page
90:02 - but we need to change this padding to
90:04 - margin for just the header
90:06 - menu so let's get rid of this
90:09 - and let's take that padding left and
90:11 - right it's 1.5 rems
90:13 - we do want it to match the padding that
90:14 - the rest of the container elements are
90:16 - going to have
90:17 - but we're going to make it a margin
90:19 - instead
90:20 - so margin and i think we can use the
90:23 - shorthand so 0 and then 1.5 rims
90:26 - so now you can see that it does have
90:27 - that margin you just can't see it on the
90:29 - page itself because everything's white
90:31 - so i think we should be good to go now
90:33 - let's just take one more look at the
90:34 - design
90:35 - okay so there are some rounded corners
90:37 - let's add a border radius to
90:39 - the menu as well border radius
90:43 - let's try three pixels i think we have
90:45 - enough now that we can start
90:47 - doing the overlay thing right now the
90:50 - header menu
90:50 - is under the overlay because the overlay
90:54 - as i'm assuming it has a z index
90:57 - maybe it doesn't have z index because i
90:58 - didn't do it yet let's see what we got
91:00 - here
91:01 - overlay and then nav is there
91:05 - menu's under that i guess because this
91:07 - doesn't have a z index
91:09 - set and that is probably because there's
91:11 - no position property
91:13 - so if you don't have a position property
91:14 - it's going to default to position static
91:16 - which
91:16 - means that anything that has its
91:18 - position set or has a z-index value is
91:20 - going to be on top of it so let's see
91:22 - what happens if we add position
91:23 - absolute okay so now it's on top of
91:25 - stuff and let's try with 100
91:28 - you can see it's like going off the
91:30 - screen so what we want to do
91:32 - is this margin thing isn't actually
91:34 - doing anything so it's positioned
91:36 - absolute
91:36 - what you could do is instead of with 100
91:39 - you could say with like 90
91:40 - and then margin actually i don't know if
91:42 - it's going to work because it's position
91:43 - absolute
91:45 - yeah it's not so since it's positioned
91:47 - absolute unfortunately you can't use the
91:49 - margin auto on left and right
91:51 - to center it because it's like not in
91:53 - relation to anything else it's absolute
91:55 - now i do want to make that spacing right
91:57 - so since we had that margin before of
91:59 - 1.5 rams which is not being used
92:01 - obviously
92:01 - i don't know if it's the best way but i
92:02 - can do a calc and say i want this to be
92:05 - all the way across 100
92:06 - minus 1.5 rams on either side so 1.5
92:10 - times 2 is 3 so 3 rims then when we
92:13 - center it it'll be
92:14 - it'll sort of be flushed to either side
92:16 - for the container
92:18 - for position absolute element you can
92:20 - center it by using
92:21 - left 50 and then trans
92:25 - form translate x
92:28 - negative 50 and what this is doing is
92:30 - left 50
92:32 - is making it go 50 or halfway across
92:35 - you know its container so that's why
92:36 - it's right in the middle what transform
92:39 - does
92:39 - is it's going to let me turn off that
92:41 - left if you don't have it by default
92:43 - it's going to be left aligned right
92:45 - so if you turn on transform translate x
92:47 - you're moving it
92:48 - 50 of the object itself so not the
92:51 - container but the object itself
92:53 - so that's why combining the left
92:56 - so this is the middle line right here
92:58 - and we want to move it back to be
93:00 - centered
93:01 - we only want to move it back this much
93:03 - half of the width of the
93:04 - element itself so that's why these
93:06 - combined will give you a centered
93:08 - position absolute item so let's do this
93:10 - we're going to copy these things
93:12 - over to our code there we go
93:15 - so position absolute width is the calc
93:18 - hundred percent my three rims
93:19 - to have the padding and doing the left
93:21 - 50 transform translate x
93:23 - negative 50. i think i need to get rid
93:25 - of this margin yeah there we go
93:27 - don't need that anymore opening the
93:29 - overlay now we can see it's nicely
93:31 - centered
93:31 - and we probably need a little bit of
93:33 - space on the top there using our little
93:35 - handy dandy
93:36 - rectangle here let's see how much space
93:38 - that is about
93:39 - 24 so we are going to do margin
93:44 - top where's the calculator
93:48 - 24 divided by 16. 1.5
93:53 - there we go okay so now looks pretty
93:56 - good
93:56 - i think i might need a little bit more
93:57 - rounded corners let's try increasing
93:59 - that border radius a little bit
94:00 - maybe five i compared the design
94:04 - it's actually not super round i think
94:07 - five is good
94:10 - okay so there we have our mobile menu
94:14 - the next thing we need to do is we want
94:16 - to animate the menu on screen
94:19 - when the menu's closed is going to be
94:20 - off canvas meaning off
94:22 - you know your viewport you're not going
94:23 - to be able to see it and then it'll
94:24 - somehow animate in
94:25 - we could either fade it in we could
94:28 - slide it down from the top or slide it
94:30 - in
94:30 - from the right let's do some research so
94:34 - go back to codepen search for off canvas
94:37 - menu maybe
94:38 - maybe mobile menu maybe animated mobile
94:41 - menu
94:43 - get a little more specific okay
94:45 - responsive menu with icon
94:47 - this seems pretty popular so i'm just
94:48 - kind of getting ideas for
94:50 - you know how they're handling this thing
94:52 - um where's the menu
94:54 - what no well not sure what happened to
94:58 - that
94:59 - bootstrap 4 animated menu you click this
95:02 - thing
95:03 - so this is interesting it sort of fades
95:05 - in covers everything so that's that's
95:07 - one way we could do it sort of similar
95:08 - to the
95:09 - how the overlay sort of fades into fades
95:11 - out you could fade in the menu
95:13 - along with the overlay so that would
95:15 - actually be sort of cool
95:16 - i think i'm going to do that i was
95:18 - thinking i was going to slide in from
95:20 - the left or right but
95:21 - fading in actually seems quite nice and
95:24 - we can hopefully
95:25 - utilize some of the same styles and
95:26 - animations that we did for the overlay
95:28 - into the menu so looking again the
95:31 - overlay
95:32 - was set at opacity zero position fixed
95:34 - is that right
95:35 - wait a minute it's opacity zero it's
95:37 - still
95:38 - you can't click through it so it is here
95:41 - oh yeah it's not clickable what did i do
95:43 - i think i forgot to
95:45 - maybe add visibility hidden
95:49 - then we can still select stuff
95:50 - underneath it yeah
95:52 - i just needed to add that visibility
95:54 - hidden and actually i
95:56 - since i'm reusing this for the overlay
95:58 - and also the menu
96:00 - let's make it a helper class like
96:01 - everything else so let's see
96:03 - here visibility maybe i should put it in
96:06 - animations
96:07 - so we're using visibility so what i'm
96:08 - gonna do is before the keyframes i'm
96:11 - going to add another helper class
96:12 - i'll say has fade
96:16 - and i'll say visibility hidden and
96:18 - that's gonna be the default state of
96:20 - any of these elements that we're fading
96:21 - in and fading fading out let's see
96:24 - go to header okay it doesn't have
96:26 - visibility here because i had forgotten
96:28 - it last time
96:29 - but now i can add the has fade class
96:33 - to the overlay and if this works we'll
96:35 - also add it to
96:36 - our menu itself let's reload for a good
96:38 - measure okay so overlay has
96:40 - fade visibility is hidden i can see that
96:43 - i can
96:43 - select through like the overlay is not
96:45 - preventing me from clicking here because
96:47 - it's the text cursor okay so this is
96:50 - working so i'm going to add that has
96:51 - fade
96:52 - class also to the menu itself so header
96:55 - menu
96:56 - has fade so now it's not visible
97:00 - because it is visibility hidden let's
97:02 - find the element there it is
97:04 - so has fade so now i can just kind of do
97:06 - the same thing that i did
97:07 - for the overlay in our javascript
97:10 - scoot this over a little bit so we can
97:12 - see our javascripts
97:13 - we are when we open the hamburger menu
97:16 - we are
97:17 - adding the fade in fade out to the
97:19 - overlay we also want to do that to the
97:21 - menu
97:22 - but since they both have that has faith
97:24 - class what i could do
97:26 - is instead of having to duplicate
97:29 - both these lines of code for both
97:30 - elements i could say
97:32 - const i'll just say fade elements
97:36 - elements so document query selector
97:42 - and then if it has that class of has
97:44 - fade
97:46 - i can hopefully target it with this
97:49 - actually i might need query selector oh
97:52 - yeah because query selector i think will
97:54 - just yeah it just gets the first one so
97:56 - i need to do query selector all
97:57 - that's why i'm naming the constant name
98:00 - with a plural instead of a singular
98:03 - just little little hints like that will
98:04 - sort of help you not make mistakes so
98:06 - let's handle the open stuff first
98:09 - fade elements and i think you can do
98:12 - four
98:13 - each for each
98:16 - all right i can't remember the syntax uh
98:19 - javascript
98:20 - for each i know this is very basic
98:24 - i admit i'm not super
98:27 - well versed in javascript
98:30 - here we go oh yeah for each function
98:34 - yada yada
98:37 - so for each function we want to
98:40 - do this so then in the function it's
98:42 - going to be element
98:45 - hopefully this will work okay so what we
98:48 - want to happen
98:49 - is on both the overlay and the header
98:51 - menu when we click this we want it to
98:53 - add the fade in class
98:56 - ooh it worked um what happened here
99:02 - weird it's disappearing for some strange
99:05 - reason
99:06 - what happened maybe let me try removing
99:10 - the has fade class from the menu
99:12 - just to see what happens when it's only
99:15 - on the overlay
99:18 - weird why is it disappearing like that
99:21 - that's very strange
99:22 - let me try to do it manually fade in oh
99:26 - even if i do it manually weird
99:31 - something about the has fade is like
99:35 - canceling this for some reason because i
99:38 - have the visibility hidden
99:40 - okay let's start from the beginning
99:41 - adding the class via javascript does
99:43 - seem to be working so that's not the
99:44 - problem
99:45 - the problem seems to be because of this
99:48 - has fade class
99:49 - where i set the visibility to hidden oh
99:52 - it's because
99:53 - i think i didn't add the end state for
99:55 - this visibility visible
99:57 - there we go i think that should work now
99:59 - yeah because
100:00 - the way i'm running the animation it's
100:02 - going forward so it's keeping the end
100:04 - state here
100:05 - so because this was not here it kind of
100:07 - defaulted back to the visibility hidden
100:09 - from that has fade class
100:11 - so now things should work let's see
100:14 - okay stays like that okay so let's add
100:17 - the has fade class back to the
100:19 - header menu
100:22 - all right oh i didn't add the other
100:26 - stuff we just added code for the fade in
100:28 - which seems to be working looks pretty
100:29 - nice might speed that animation up a
100:31 - little bit
100:32 - so let's do the reverse so do the same
100:34 - thing
100:36 - fade elements for each
100:39 - function element so the element
100:43 - parameter
100:44 - because it's looping through every
100:45 - element that has the has fade class
100:48 - you can use the element parameter to
100:49 - target and run functions and stuff like
100:51 - that
100:52 - so element element
100:55 - okay so now both the open and close
100:58 - functionality should work
100:59 - so let's give it a run
101:03 - hey look at that nice okay i'm gonna
101:07 - speed that up a bit it's just a little
101:08 - bit
101:08 - a little bit slow so let's do 200
101:12 - for both fade in and fade out but i'm
101:15 - pretty pleased how this looks
101:22 - i think that's pretty good now i did
101:24 - want to fix that overlay because when
101:25 - you scroll like this
101:27 - like the overlay is not going all the
101:29 - way to the top
101:30 - overlay i said top 3.75
101:33 - how about zero oh it's because i don't
101:35 - want it to be on top of the header
101:38 - or i don't want it to be on top of the
101:39 - nav i want the header to be on top of it
101:40 - but i think that adding
101:42 - it should still go all the way to the
101:43 - top so i think it's because this doesn't
101:45 - have a position set
101:47 - i think this is position relative i'm
101:49 - trying to put the nav on top of the
101:50 - overlay
101:51 - oh it doesn't have a background color it
101:54 - was just using it from the um
101:56 - the body but it needs its own background
101:58 - color there we go
101:59 - so now still scrolls and stuff let's do
102:02 - that so to the nav we'll add position
102:04 - relative
102:04 - and the background color
102:10 - relative background color
102:13 - white all right
102:17 - there we go now oh i forgot to
102:21 - rest remove the overlay thing top of
102:23 - zero
102:27 - to reload here we go now
102:30 - you know this looks pretty good another
102:33 - thing people do sometimes
102:34 - is when you open the menu you sort of
102:37 - lock scrolling on the body so
102:39 - you basically say overflow hidden so
102:42 - then you can't scroll
102:43 - so i think i might do that with yet
102:45 - another helper class
102:47 - so body what another class of this we'll
102:50 - just say
102:52 - no scroll so overflow
102:55 - hidden we are going to have to add this
102:58 - class to the body
102:59 - when you open the menu so when you open
103:01 - the menu we're going to
103:03 - oh i need to add it as a constant let's
103:06 - add it to the
103:07 - top here constant body equals document
103:11 - query selector body
103:14 - there we go when you open it you're
103:16 - going to
103:17 - lock the scroll by adding this class
103:20 - list
103:20 - add no scroll and
103:24 - then we'll do the reverse
103:28 - remove and we'll just put this one first
103:30 - since that's the way we had it in the
103:32 - other one
103:32 - let's see if this works so opening the
103:34 - menu
103:36 - all right so we can't scroll i'm trying
103:37 - to scroll and it's not happening because
103:39 - it wants to keep you on the menu
103:40 - when i close the menu removes no scroll
103:43 - class and we can again
103:43 - scroll down okay hey this is turning out
103:47 - to be
103:47 - pretty good so we're done with the
103:50 - mobile menu and the next step is going
103:51 - to be
103:52 - going back and adding the rest of the
103:54 - content of the site
103:59 - all right now before we start any coding
104:02 - of course we want to look back at the
104:03 - design
104:03 - and just have an idea of where we're
104:05 - going with this and how we want things
104:07 - to look
104:07 - on mobile and desktop so looking at the
104:09 - design the hero section on mobile is
104:12 - stacked to one column with the image on
104:13 - top and then the copy and button
104:15 - below that then on desktop we have two
104:18 - columns instead of one column with the
104:19 - text
104:20 - on the left and then the image on the
104:21 - right you might also notice that the
104:23 - images on the hero are slightly
104:25 - different between mobile and desktop
104:27 - so let's look at our files and see how
104:29 - that is going to be set up
104:30 - i have open here my project folder
104:34 - with all the website files and i already
104:36 - had saved all the images from front
104:38 - mentor in this images subfolder
104:40 - so my guess is the background intro
104:42 - desktop is going to be this one
104:44 - yep and then we got one from mobile this
104:46 - is just that
104:47 - designed background we need to look for
104:49 - the images of the phones
104:50 - probably this image mockups here what
104:52 - this is is a png with a transparent
104:54 - background
104:55 - and we can overlay that same image of
104:57 - the phones over
104:58 - the mobile background from mobile and
105:00 - then the desktop background going back
105:01 - to the design one more time
105:03 - we can probably use the same markup for
105:05 - both mobile and desktop and then we'll
105:06 - use styles to
105:07 - differentiate the styles between mobile
105:09 - and desktop as well
105:10 - so let's get started going into our code
105:12 - editor vs code
105:13 - and we're going to add markup for our
105:15 - hero section so i'm going to create a
105:17 - section tag
105:18 - and i'm going to call it class of hero
105:21 - underscore underscore
105:22 - just hero actually then in the hero
105:24 - section tag we'll add a div
105:26 - of class i'll start with the image so
105:28 - hero underscore underscore image
105:30 - and under that we'll do div class hero
105:33 - underscore underscore
105:34 - we'll just say text up in the hero image
105:37 - is going to be the image
105:38 - with the phones and the background and
105:40 - then the hero text is going to be under
105:42 - that
105:43 - and i'm doing it this way because on
105:44 - mobile we have the image first
105:46 - and then the copy so then we can just
105:48 - change the style so that the image is
105:50 - going to be on the right for
105:51 - desktop so now let's go into our
105:54 - files from front of mentor and we want
105:56 - to copy over the
105:58 - text that they gave us so we don't have
106:00 - to like type it out manually
106:01 - when you download the files from front
106:02 - of mentor they give you an index.html
106:04 - file
106:05 - with all the text already there so i'm
106:06 - just going to copy and paste that over
106:08 - so
106:08 - hero title is next generation digital
106:10 - banking
106:11 - now let me figure out what html tag we
106:15 - want to use
106:16 - so usually on a website the h1 tag is
106:19 - going to be the name of the page
106:20 - but i've also seen it where for a home
106:22 - page you use an h1 tag for the hero
106:25 - title
106:25 - and then why choose easy bank would be
106:27 - h2 latest articles would be h2 and so on
106:30 - and then we would do h3 tags for these
106:33 - little subtitles here for each section
106:36 - so yeah i think i'm going to do next
106:37 - generation digital banking is going to
106:38 - be the h1 tag
106:40 - we'll do that h1 and it doesn't need a
106:42 - class since there's just gonna be one of
106:43 - these then we'll copy over this
106:45 - text sorry this goes in the text hero
106:48 - section
106:49 - there we go and then i'm also going to
106:51 - add the button
106:52 - and let's kind of look back and see what
106:54 - i had done before
106:56 - or like this request invite button up in
106:58 - the header you just look for request
107:00 - invite there we go so i did an anchor
107:02 - tag with this button class
107:05 - and then a header cta class so let's do
107:08 - the same thing here we'll just use an
107:09 - anchor tag and let's say it's an anchor
107:13 - link
107:13 - we'll just do a round and we'll give it
107:16 - a class
107:16 - of hero cta but we also need a class of
107:21 - buttons so it takes all those button
107:22 - styles that we had
107:23 - built in the previous videos request
107:26 - invite is the text in that button so
107:28 - let's do that
107:29 - and i think i'm forgetting the yeah
107:31 - there's some subtitle stuff here
107:32 - this is an h1 i think because this is
107:34 - longer it's not really a subtitle
107:36 - i'm just going to put it in a paragraph
107:38 - tag and
107:39 - i don't think i need to put a class on
107:41 - that because we can just use the hero
107:42 - text
107:43 - paragraph tag selector so let's just do
107:45 - that copy this text over
107:47 - here we go oh wait i had already copied
107:49 - this so i actually don't need this file
107:51 - open anymore okay so i'll just delete
107:53 - this since we don't need it anymore
107:55 - okay so now if we look at our site you
107:58 - can see that we have
107:59 - the button styles have already gotten
108:01 - ported over which is great
108:03 - and then the next thing we want to do is
108:04 - we want to figure out how we want to
108:06 - code the hero image what i think i want
108:09 - to do
108:10 - is i'm going to create a div and we also
108:13 - need to keep in mind that on desktop you
108:15 - can see this phone image
108:16 - on the right kind of overhangs the
108:19 - section because next section
108:20 - has this really light gray background my
108:22 - guess is that
108:23 - this phone image is going to need to be
108:26 - absolutely positioned
108:27 - you can sort of guess something needs to
108:28 - be absolutely positioned if it's like on
108:30 - top of something else so because
108:32 - the phone image is on top of the next
108:34 - section
108:35 - over sort of overhanging it a little bit
108:37 - we can guess that this needs to be
108:39 - absolutely positioned there's a couple
108:41 - ways you could do this you could
108:43 - create a separate div just for the
108:46 - images which
108:46 - you know obviously i have the hero image
108:49 - div you could also
108:51 - use maybe pseudo elements and then have
108:53 - that absolutely positioned so what i
108:54 - think i'm going to do is
108:55 - in the hero image itself is where i'm
108:58 - going to put
108:59 - the background image that svg sort of
109:01 - designed background
109:02 - and then maybe i'll store the phone
109:05 - images
109:06 - in a pseudo class or pseudo-element like
109:08 - before pseudoelement
109:09 - so let's try that so in that case we
109:12 - actually don't need to add any more
109:14 - markup to the hero image because
109:16 - everything's going to be added
109:17 - in the styles let's move on to adding
109:20 - our styles
109:21 - so in our app folder i just need to make
109:24 - sure that i'm writing the styles in the
109:26 - correct place
109:27 - and since this hero section is a new
109:28 - section and it kind of is
109:30 - by itself let's create a new sas file so
109:33 - create
109:33 - new file we'll call this hero.scss
109:37 - and of course we need to add the
109:41 - file importing importing it into our
109:44 - main sas file so we can just close that
109:46 - for now
109:47 - and then in the hero section just move
109:50 - it over to the right side so we can
109:51 - sort of see our markup and our styles at
109:54 - the same time
109:55 - we'll add a selector of hero then i'm
109:58 - just going to add the
109:59 - ampersand underscore underscore image
110:02 - ampersand underscore underscore text so
110:05 - let's start with the
110:06 - mobile styles first so in the hero image
110:10 - selector i want to say background
110:13 - image url and we're going to
110:17 - load that so in the images folder you
110:20 - want to load
110:20 - the background intro
110:24 - mobile now we also want to add some
110:26 - other background
110:27 - style rules so background size we're
110:29 - going to say cover
110:31 - i do that so that you kind of keep the
110:33 - correct aspect ratio of the image and it
110:35 - doesn't you know stretch it or whatever
110:37 - but also it'll fill the space then
110:39 - background repeat
110:40 - no repeat because we don't want it to
110:41 - repeat and then just for good measure i
110:44 - usually do background position
110:45 - we'll just do center center so it is
110:47 - centered in the div
110:49 - now let's see what that looks like in
110:51 - our browser
110:52 - okay it doesn't look like anything and
110:54 - the reason for that is probably because
110:56 - there is no actual content in the hero
110:59 - image tag so you can see
111:00 - that there are the styles there the
111:02 - background image is showing up
111:04 - but because there's no height it is not
111:06 - going to
111:07 - show up at all so we need to do is
111:09 - figure out how tall we want this div to
111:11 - be and we'll sort of add that in the
111:12 - styles as well
111:13 - i'm going to grab my little handy dandy
111:14 - rectangle here maybe we'll zoom in a
111:16 - little bit on the
111:17 - mobile design i'm just gonna figure out
111:20 - how tall
111:21 - of roughly do i want this div to be so
111:24 - it's about 282 so maybe we'll say
111:27 - 280 pixels so let's say for
111:31 - mobile min height
111:34 - is 280 pixels and then i'm going to
111:37 - convert
111:37 - that to rems by dividing 280 pixels by
111:41 - 16.
111:41 - 16 is the base font size so you get 17.5
111:45 - rams now let's take another look at our
111:48 - website oh
111:49 - there we go so it did now show up now
111:52 - this is a little bit wider than mobile
111:53 - of course so maybe i'll just turn on the
111:55 - mobile emulator
111:56 - in my browser so this looks closer to
111:58 - what we want in the design
112:00 - zoom out a little bit so you can see
112:02 - here we got the background going so now
112:04 - we just need to add in
112:05 - the image of those phones and i decided
112:08 - to do that
112:09 - in a before pseudo element
112:12 - with a background image it doesn't work
112:14 - we can try something else like using an
112:16 - actual image tag
112:17 - you know there's almost always more than
112:20 - one way of
112:20 - building anything so you don't need to
112:23 - worry too much about
112:24 - finding the one perfect way as long as
112:26 - it is as simple as possible
112:28 - and it is understandable for yourself in
112:30 - the future or another dev to look at the
112:32 - code and understand how it works
112:34 - then i think that you can choose any
112:35 - approach that makes the most sense to
112:37 - you
112:37 - the image is image mockups we'll kind of
112:39 - do the same thing where
112:41 - we're going to do the background size
112:42 - cover and these other background
112:45 - properties
112:45 - the other thing we want to do is we want
112:47 - to do position
112:49 - absolute since we're going to do that
112:51 - later on and because
112:52 - this is position absolute we have to
112:54 - make sure that the parent of the before
112:56 - pseudo element which is the hero
112:58 - image selector is position relative
113:01 - otherwise this image is going to
113:04 - basically
113:04 - basically fly up out of where you want
113:06 - it to be so just make sure that when you
113:08 - position absolute you make
113:09 - the parent a position relative to keep
113:12 - it sort of within the balance of the
113:13 - parent
113:14 - so let's just see what this looks like
113:16 - now look like anything
113:17 - this is probably again because oh i
113:20 - forgot
113:21 - so when you have a before or an after
113:23 - pseudo element you need to
113:25 - give it a content property otherwise it
113:27 - will just not even exist on the page
113:29 - this is just a characteristic of using
113:31 - these pseudo elements
113:33 - okay so now we can see in our inspector
113:35 - before is there
113:36 - so i think what i want to do is maybe
113:39 - add the
113:40 - height and i'm going to set height to
113:42 - 100 so that it will match the height of
113:44 - the parent so let's save that
113:46 - and what's going on oh there's no width
113:49 - here
113:50 - so when something's not showing up or
113:52 - doing what you want to do
113:53 - it's really good idea to always check in
113:55 - your code inspector
113:56 - i'm just trying to figure out and
113:58 - troubleshoot what is causing the issue
114:00 - so right now the issue we're looking at
114:02 - is why is the phone image not showing up
114:04 - look at this before element i can see
114:06 - that it has zero
114:07 - width but it does have 280 height
114:09 - because i set the height property
114:11 - so we're also going to set the width to
114:14 - 100
114:14 - percent and we'll see how that looks
114:18 - okay so now we got our phones they are
114:21 - not quite the right
114:22 - size i think looking at this we want the
114:25 - bottom of that phone
114:26 - to perfectly align with the bottom of
114:28 - the background and that is not what's
114:30 - happening here this is the bottom of the
114:31 - background
114:32 - and just for good measure and debugging
114:34 - i often like to do this
114:36 - so i'll do a temporary border one pixel
114:38 - solid
114:39 - let's do magenta adding a border will
114:41 - sort of tweak the size of the
114:43 - div but for most cases i think it's
114:45 - still okay
114:46 - now we see we have a border of the hero
114:49 - image and we have the background going
114:51 - down there
114:51 - but we want the phones to end on the
114:54 - bottom we don't want it to be centered
114:55 - like it is right now so what we want to
114:57 - do is
114:57 - adjust the background position so it
115:00 - aligns from the bottom
115:01 - for center center this is the center
115:03 - horizontally is the first center
115:05 - second center is the vertical center
115:07 - instead of center for vertical we're
115:08 - going to say we want to
115:09 - position itself at the bottom so now we
115:12 - can see that the image kind of ends
115:14 - right at the bottom
115:15 - of that hero image div now looking back
115:18 - at the design
115:19 - i think the phone images are a little
115:21 - bit yeah it looks like they're a little
115:22 - bit smaller than what we have in our
115:23 - website
115:24 - there's just a little bit more space on
115:26 - left and right so let's go
115:28 - and sort of adjust that a little bit so
115:30 - the phone images are in the
115:32 - pseudo element the before element so how
115:34 - do we make this
115:35 - narrower what we could do there's a
115:37 - couple ways right now the width is 100
115:39 - so if you decrease that
115:40 - um it would sort of decrease but then
115:43 - you have a case where
115:44 - it's not centered so then you'd have to
115:45 - add like a margin
115:47 - auto weight display block maybe oh
115:50 - because it's absolutely
115:51 - oh that would be too annoying you have
115:52 - to do left 50
115:55 - transform translate x
115:58 - negative 50 to center it that's a little
116:01 - bit too much
116:02 - so i'm just going to delete those the
116:04 - better way i think
116:05 - is to keep the width at 100 so it's
116:07 - still 100 of the width of the parent
116:09 - but in background size instead of cover
116:11 - cover will basically ensure that
116:13 - the image is going to cover the entire
116:15 - div so
116:16 - even if it means cutting off from the
116:18 - sides it'll make sure that it covers
116:20 - everything that's usually what we want
116:22 - for things like this but
116:23 - because i want to make it a little bit
116:24 - smaller so we can
116:26 - also use percentages in background size
116:28 - so if you say 100
116:30 - it's going to looks like pretty close to
116:33 - cover
116:34 - yes just basically 100 of the div so if
116:37 - we reduce that
116:39 - then maybe down to 94 it's reducing the
116:42 - background
116:43 - size but it is still centered because
116:45 - the width is at 100
116:46 - and then we set background position to
116:48 - center for the horizontal
116:50 - so we'll just adjust that background
116:52 - size so maybe 93
116:54 - for that before element so background
116:56 - size 93
116:58 - reload for good measure that looks wait
117:00 - now the bottom isn't matching
117:02 - oh i forgot to save the center bottom
117:04 - let's do that
117:06 - there we go now it is pretty much close
117:10 - to the bottom not perfectly but i think
117:12 - that's okay we'll just sort of live with
117:14 - the imperfection
117:15 - and then it is kind of in from the sides
117:17 - a little bit so that looks pretty good
117:19 - now the next thing we're going to look
117:20 - at is the copy for the hero section
117:24 - so let's look at the design and
117:26 - obviously it looks a little bit
117:27 - different than what we got here on our
117:29 - website so it looks like we need to
117:31 - make sure the font is the right font
117:34 - family
117:35 - also the color needs to be a bit
117:37 - different let's just start with this
117:38 - title next generation digital banking
117:40 - i believe the font family itself should
117:42 - be the same as
117:43 - some of the title fonts that we have
117:45 - let's check out our style guide just to
117:47 - make sure what we're doing okay so font
117:49 - family we just are using public sands
117:51 - for everything
117:52 - weight 300 and 400 300 is light 400 is
117:55 - regular
117:56 - the font still looks still slightly off
117:58 - let's just check this out
118:00 - this pull extends so maybe we just need
118:02 - to make the font size bigger
118:03 - get this let's get a rectangle here and
118:06 - it's going to try to
118:08 - guesstimate what size the font is 30
118:11 - pixels
118:12 - tall looks like font size 30 pixels
118:16 - the font weight seems a lot different in
118:18 - the design
118:19 - you know what i mean like it looks a lot
118:22 - more thin seems like that's the font
118:25 - that we're using
118:26 - and 30 pixels looks different as well
118:28 - okay so maybe 30 pixels is right but
118:30 - maybe the font weight
118:31 - is not correct that's 300 what does 400
118:34 - look like
118:35 - doesn't look any different for some
118:37 - reason the
118:39 - h1 oh i bet it's because the
118:42 - h1 tag it's not going to show this here
118:44 - but usually
118:45 - the browser default will set all font
118:47 - weights to bold
118:49 - so font weight here we go 300 now that
118:52 - looks a bit closer to
118:53 - the weight in the design going back to
118:56 - our hero
118:57 - bass file so in the hero text section
119:00 - we'll add another selector for h1
119:02 - and we'll say font weight is 300 and
119:05 - font family has already been chosen in
119:08 - the
119:08 - global fast file everything is public
119:11 - stands i'm just going to close this
119:12 - animation this thing too
119:13 - all you do here is the want weight of
119:15 - 300 and then the
119:17 - color is this sort of dark blue
119:20 - so in our variables last file it's this
119:23 - dark blue
119:24 - variable and we'll say color dark blue
119:27 - and usually what i do for headline tags
119:30 - is i'm going to
119:32 - add a line of about one i'll just put it
119:34 - in the h1 tag
119:36 - line height one usually
119:40 - for headline tags title tags you want
119:42 - the line height to be
119:43 - around one maybe slightly bigger and
119:45 - then when you have body copy like
119:47 - paragraphs where you have like longer
119:49 - longer amounts of text then you want the
119:50 - line to be a bit greater than that like
119:52 - 1.3 or 1.5
119:53 - depending on the design font size i
119:55 - think i said was
119:57 - 30. let's get the calculator out 30
120:00 - divided by
120:01 - 16 is 1.875
120:05 - 1.875 grams much closer
120:08 - to what we want here i think maybe 30
120:10 - might not be big enough
120:12 - actually that's 37
120:15 - size 37 pixels going back here
120:19 - okay that looks much closer in size i
120:21 - think i need to increase the line height
120:23 - a little bit
120:24 - maybe 1.1 maybe 1.2
120:28 - a little bit less let's do 1.15 just
120:32 - kind of meet in the middle there
120:33 - all right so let's copy these styles
120:34 - over so i think i said font size was
120:38 - 37 pixels i need to convert that 37
120:41 - divided by 16 is 2.31
120:45 - just round a little bit here and then
120:46 - line height was i think 1.15
120:50 - all right and we need to center the text
120:52 - here
120:53 - it seems like most of the content on
120:55 - mobile is centered
120:57 - so i think maybe for now i'll just set
120:59 - text align center
121:00 - for the entire hero section hero text we
121:03 - can do there
121:04 - text align center and then we'll change
121:07 - it to
121:08 - left align for the desktop media query
121:10 - there we go
121:11 - so going back to the hero let's add the
121:13 - selector for the
121:15 - paragraph in the text hero text area
121:18 - and we'll say line height and i'm not
121:20 - sure if this is right yet but maybe 1.5
121:22 - to start off
121:23 - and it's going to be inheriting the font
121:25 - size of 14 pixels
121:27 - facing looks okay and we also need to
121:29 - figure out some of the spacing
121:31 - under the headline to the paragraph so
121:34 - this is something like 24
121:36 - and then under the paragraph above the
121:38 - button so maybe something like 37 or 36
121:41 - so 24 space under the headline 36
121:45 - space under the paragraph itself so h1
121:48 - by default will inherit the styles in
121:51 - the browser which we don't necessarily
121:53 - want
121:54 - i want to basically take out this top
121:57 - margin
121:57 - that just gets added to the headline
122:00 - tags i usually try to
122:01 - add space between elements by adding
122:04 - margin to the bottom of things
122:05 - not to the top here headline tags so
122:08 - we'll say
122:08 - h1 h2 h3 margin top
122:12 - of zero there we go now i'm gonna go
122:15 - back here
122:16 - now it's all the way up to the top a lot
122:18 - of spacing in the hero text
122:20 - area itself but for the margin bottom
122:22 - right now it's about 30
122:24 - and i think it was 24 so under the hero
122:28 - margin bottom 24 divided by 16
122:32 - 1.5 rams and then in the paragraph we're
122:35 - adding a margin bottom
122:38 - of i think was 36 pixels divided by 16
122:41 - 2.25 rims
122:43 - now looks a bit closer to our design eh
122:45 - so there's space between the paragraph
122:47 - and the button now which is pretty good
122:49 - i need to figure out the space above the
122:52 - headline
122:53 - and to the end of the thing so it
122:55 - actually looks pretty similar to 36
122:57 - so 36 on the top on the bottom it's all
123:00 - the way up to 87.
123:02 - so i think what i want to do is ideally
123:05 - at least
123:05 - in my mind you would probably want the
123:07 - same amount of space at the top and
123:09 - bottom
123:09 - of each section so this space here
123:12 - should be the same
123:13 - amount of space as up to here 85 seems
123:15 - like a little bit but i think
123:17 - we'll do maybe 60 pixels as kind of like
123:19 - the wrapper
123:20 - that way i can put it in a helper class
123:23 - which means i can then just add the
123:24 - wrapper class
123:25 - to each section that i want to add that
123:27 - space
123:28 - and so we kind of make our styles a
123:30 - little bit more consistent
123:31 - and a little bit simpler all right so i
123:33 - said container
123:35 - padding left and padding right as you
123:37 - can see here
123:38 - container has has padding of 24 on the
123:42 - left and the right
123:43 - so i had padding top and bottom just for
123:45 - the nav and then
123:46 - i had added padding left and right for
123:48 - the container and that is equal to 24.
123:51 - let's do that first the left and the
123:53 - right spacing by adding that container
123:54 - class
123:55 - and then we'll move on to adding the top
123:56 - and bottom spacing so
123:58 - hero text i think maybe let's just see
124:01 - if we can do that there
124:03 - container and then go back to our
124:04 - website and now
124:06 - you can see here the hero text has this
124:09 - space
124:10 - and i didn't want to do it on the hero
124:12 - image because that one kind of goes
124:14 - to the full left and right let's see if
124:16 - i add a container then
124:17 - it kind of messes up the alignment that
124:19 - i had going
124:21 - okay so now i've got the hero text it
124:22 - has a padding on left and right which is
124:24 - good
124:24 - kind of matches what we have here with
124:26 - the image of the phone
124:28 - so now i'm going to think of a way of
124:31 - creating that top and bottom spacing
124:34 - with
124:34 - a helper class you know do i want to add
124:36 - it to the container
124:38 - or do i want to add it somewhere else
124:40 - because
124:41 - not everything wants to have that top
124:43 - and bottom padding
124:45 - i'd only use the container thing in the
124:47 - nav
124:48 - so i wonder if in the container i could
124:52 - add padding top and bottom of
124:55 - i think i said 60. let's think about
124:58 - this if i add it to the container
125:00 - that would be good for this because then
125:02 - it has a space on top and bottom and
125:03 - left and right
125:04 - but then it would also take effect in a
125:06 - nav and i don't want that
125:08 - let's just add it to the container and
125:11 - see
125:12 - where you know kind of breaks the design
125:14 - so 2.25 rims
125:17 - i'll do the same thing for bottom
125:20 - you might do the same thing as me but
125:21 - when i'm going around for adding
125:23 - padding or margin i always start from
125:25 - the top actually right should be next
125:27 - top right bottom and left is last
125:30 - let's just check on that now and see how
125:32 - this looks
125:34 - so going to our rules you can see
125:37 - header nav it has a padding top and
125:39 - bottom which i had set previously which
125:41 - is good
125:42 - if we scroll down to the container you
125:44 - can see that did have the padding top
125:46 - and padding bottom of 2.25 rem
125:48 - but that got overridden by the more
125:50 - specific rule
125:51 - of header nav this is because
125:55 - using the class of header within the
125:56 - child nav is more specific than the
125:59 - just the general class of container just
126:01 - curious what if i do header
126:03 - container okay so in that case that
126:06 - would be more specific
126:07 - probably because the first rule is using
126:09 - the class of header and then the element
126:11 - of nav
126:12 - whereas the class of header and class
126:14 - container class is more specific than
126:16 - the element itself that's why this would
126:18 - override
126:19 - the class header nav selector so it's
126:22 - almost like rock paper scissors
126:23 - class beats element selector but then id
126:26 - selector will be
126:27 - class selector it's just something that
126:29 - is good to know when you're working with
126:30 - css a lot
126:31 - looks like we have our container stuff
126:33 - all set go back to our mobile view and
126:35 - just kind of double check on that
126:36 - things look a little better right we're
126:37 - getting more spacing added we spacing on
126:39 - top and bottom
126:40 - and we have this see the buttons kind of
126:43 - going into
126:44 - the bottom padding i believe that's
126:46 - because
126:47 - i probably need to set display
126:51 - inline block because i think by default
126:53 - if i don't say anything it's just going
126:55 - to be
126:55 - an anchor tag is going to be display
126:57 - inline so making it display block will
126:59 - make it have to
127:00 - follow the the rules that i've set for
127:02 - padding and stuff so now you can see
127:03 - having set display in line block the
127:05 - button is now inside the content
127:06 - and not going into the padding wait and
127:08 - that's in the header
127:09 - i might need to move the button rolls
127:11 - out of the header sas
127:13 - file just because there's places outside
127:14 - of the header that are using
127:16 - the buttons let's do display inline
127:18 - block
127:19 - at the top so now this actually looks
127:22 - pretty good
127:22 - we got our hero section from mobile
127:25 - looks like everything is good in terms
127:27 - of spacing
127:28 - got our button going click the hover
127:30 - state's not working on that
127:31 - you see i have that hover state on the
127:33 - top let's see where those rules are
127:34 - coming from make sure that they get
127:36 - applied to all buttons
127:37 - so in the inspector i'm going to select
127:38 - that top header button
127:40 - click on the hover and if you check this
127:41 - hover box it'll sort of force
127:43 - the hover state so you can see which
127:45 - style rules
127:46 - are getting applied so it looks like
127:49 - yeah the hover
127:50 - is part of the header cta rules and i
127:53 - want that to be
127:54 - applied to any button so let's go into
127:57 - our header sas file that was under the
128:00 - cta
128:02 - so font size font small so
128:05 - i wonder if i need to make the font size
128:06 - and color in the button itself
128:09 - so i think what i'm going to do is i'm
128:10 - going to let me move this globals over
128:13 - here
128:14 - what i want to do is i'm going to take
128:15 - the font size from the cta the header ct
128:18 - button and put it in the
128:20 - global button rules let's just do it
128:22 - down here
128:23 - font size and then the color is white
128:24 - it's already set there so i don't really
128:26 - need that
128:26 - this can also also just be copied over
128:29 - so i'm just going to delete this header
128:30 - cta
128:31 - now all the styles that we need are
128:32 - going to apply to all buttons since
128:34 - we're saving it in the global sas
128:36 - file let's try this again now we can see
128:40 - the hero button has that nice little
128:41 - hover state you don't always have to
128:44 - write your styles perfectly the first
128:45 - time because a lot of things you just
128:47 - kind of figure out as you build
128:48 - the website there's always going to be
128:50 - going back and sort of correcting things
128:51 - and tweaking things depending on
128:53 - issues that come up as you're building
128:55 - out this website there's nothing at all
128:57 - wrong with
128:57 - going back and changing your work a
128:59 - little bit now that we have our mobile
129:01 - styles for the hero let's add the
129:02 - desktop styles
129:04 - going back to our design you can see
129:05 - that the hero was one column
129:07 - on mobile with the image first then the
129:09 - text on desktop
129:10 - it is two columns with the text on the
129:12 - left and the image on the right
129:13 - so we're going to do is add some flexbox
129:15 - to this what i want to do is
129:17 - in the hero selector add display
129:21 - flex to turn on flexbox but i only want
129:23 - this rule
129:24 - to take effect for desktop widths and up
129:27 - what i've done
129:28 - before was i created a mixins sas file
129:31 - and we have our breakpoint up mixin that
129:33 - i can then use
129:34 - to add the media query so we'll say
129:36 - include breakpoint dash
129:38 - up and in the parameters the size we
129:40 - want to hit we're going to focus on the
129:41 - large
129:42 - and up then i can move this rule
129:46 - into the breakpoint media query so just
129:48 - by adding this one rule let's look at
129:50 - our website and see how that looks
129:52 - for desktop okay so you can probably
129:55 - guess what's happening here the
129:56 - hero image doesn't have any height but
129:58 - we can see that flexbox is turned on
130:03 - there we go flex 1 and we'll add flex 1
130:05 - to the
130:06 - hero text as well this is just to start
130:09 - off
130:10 - to kind of make both of them the same
130:12 - amount of space
130:13 - but you can see that let's add that flex
130:16 - of one
130:17 - in the desktop width to both the image
130:21 - and the text
130:22 - selectors so we'll say flex
130:25 - of one and we'll change this later on
130:26 - but we just kind of want to get things
130:28 - started
130:30 - now we can see that there is height
130:32 - because adding the flux of one that
130:34 - makes the
130:34 - child flex element be the same height
130:37 - across
130:38 - both of the flex child elements you
130:40 - notice in the design the
130:42 - image is on the right for the desktop
130:44 - but because
130:45 - in the market we added hero image first
130:46 - that's why it's on the left
130:48 - so that's another thing you can do in
130:49 - flexbox is you can adjust the order
130:52 - so we want the image to be
130:55 - second on desktop i think it's flex
130:57 - order
130:58 - it's just order and we want to be two so
131:01 - we want to be second
131:02 - and we want text to be first so order of
131:05 - one
131:06 - there we go second thing we need to do
131:08 - is look at the
131:09 - heights because this looks like it's not
131:10 - quite tall enough compared to the design
131:13 - so on desktop the hero image is about
131:16 - and we're not going to take into
131:17 - consideration this overhang here because
131:19 - the section itself
131:20 - ends just about down here the
131:23 - pixels tall there's a couple ways we can
131:25 - do that we can of course adjust the hero
131:28 - section itself to be 655 pixels tall or
131:31 - we can make the image
131:32 - 655 pixels tall and then we know that
131:35 - the text will sort of take the same
131:36 - height so hero image
131:39 - what happens if we say height of 655
131:42 - pixels
131:43 - so now we can see that it is taking up
131:45 - more space which is what we want
131:47 - so let's just say minimum height for
131:50 - desktop
131:51 - and that's 655 divided by 16 to get 40
131:55 - let's just say 41 rems
131:57 - it doesn't need to be perfectly exact
131:59 - but going back here
132:00 - so now it's taller we do want to center
132:02 - the text
132:03 - we want to center the content in the
132:04 - flexbox in the flexbox parent in the
132:07 - hero flexbox parent
132:08 - you can say align items enter
132:12 - this will automatically vertically align
132:13 - everything so now of course what we need
132:15 - to do is we need to make this hero image
132:17 - the height of the
132:18 - parent hero do that by in the desktop
132:21 - breakpoint
132:22 - say height is 100 so we'll take the
132:25 - height of the parent
132:26 - hmm let's see let's see let's see i bet
132:30 - it's because
132:31 - in flexbox it's kind of intelligent so
132:33 - it'll size things
132:34 - based on the content and because the
132:36 - image has no content it's really
132:38 - looking to the hero text element for the
132:40 - height so i think actually i do need to
132:42 - move
132:43 - the height from the hero parent selector
132:46 - to the hero image
132:48 - let's try this just say height okay so
132:51 - there we go
132:51 - this is a little more like what we're
132:52 - hoping it'll look like i'm gonna get rid
132:54 - of that magenta
132:55 - outline i don't really need that anymore
132:58 - now we're getting there right
132:59 - texas centered on the left we've got our
133:01 - image on the right the height is
133:03 - pretty much what we want now we need to
133:06 - make sure
133:06 - the image is correct because you
133:08 - remember we had two different ones
133:10 - here we go right now it's just loading
133:11 - the mobile one and get another
133:13 - media query and then for the image i'll
133:17 - say background intro
133:18 - probably desktop so now it's loading the
133:21 - desktop
133:22 - so let's check on the design again looks
133:25 - like the phone sort of starts
133:26 - here kind of toward the end of that blue
133:29 - little wavy section
133:30 - so we need to move that background over
133:33 - a little bit so we can see the end
133:35 - we'll adjust the background position
133:37 - because right now it's just centered
133:39 - i'm just testing it in the browser it's
133:41 - a little bit quicker that way
133:42 - horizontally i really want it to
133:44 - start from the left side of that
133:45 - background image so we'll say left
133:47 - center we'll center it vertically so
133:50 - this is actually a little bit the
133:51 - phone's a bit
133:52 - down from the top of that gray blue
133:54 - section so
133:55 - what happens if we do bottom
133:59 - of it left top oh actually i think we
134:02 - can leave it left center
134:03 - but what we want to do is adjust the
134:06 - mock-up so that they're
134:07 - down so we can do something like top 10
134:10 - or something then at least it's going to
134:11 - be a little bit closer to being under
134:14 - there
134:14 - and we also looks like we want to move
134:16 - it over a little bit
134:17 - but let's just focus on this background
134:20 - stuff right now and
134:21 - copy over the style so that i don't
134:23 - forget what i did the background
134:24 - position left center
134:26 - for desktop for hero image image desktop
134:29 - new background image and now it's also
134:31 - going to have a new background position
134:33 - that looks pretty good we'll adjust how
134:36 - the phones are positioned over the
134:37 - background image
134:38 - after we make it the right width because
134:41 - right now this is 50
134:42 - and then the image is 50 but in reality
134:46 - there's more s width given to the images
134:49 - so now we're going to do is going to go
134:50 - back into our hero section
134:53 - sas file and we're going to adjust the
134:55 - flex child
134:56 - properties the first one was image and
134:58 - the image one was a wider one so we'll
135:00 - set that flex of three
135:02 - then for the text it's going to be two
135:04 - so what these numbers mean
135:05 - is the available space in the parent
135:07 - gets allotted to each child
135:09 - it's kind of like a ratio image is going
135:10 - to get three parts and then the text is
135:12 - going to get two parts
135:13 - okay so it looks a little bit closer to
135:15 - the design right so there's more
135:17 - more space given for the image and then
135:19 - a little bit less space for the
135:21 - for the text now i think i also need to
135:23 - make sure that we're using that
135:25 - container to
135:26 - have a max width set because right now
135:28 - everything is just going across so this
135:30 - is 1240.
135:33 - oh yeah it's going all the way across so
135:34 - what i think i need to do is for the
135:36 - container helper class which i already
135:38 - added which is good
135:38 - i'm going to have to add a max width let
135:41 - me just show you what that will look
135:42 - like
135:42 - max width and i think it was 11 13
135:44 - pixels
135:45 - and then we're going to have a margin of
135:48 - auto
135:49 - it'll center it so then anything with
135:51 - the container helper class is going to
135:52 - have a max width
135:53 - set and then it'll be centered if the
135:55 - width is larger than that
135:57 - going back to our code editor and i
135:59 - believe it's in our globals
136:01 - so max width is going to be i said 11
136:04 - 13 just according to the design maybe
136:06 - we'll round it down 11 10
136:08 - and turn into around 69.375
136:12 - grams and then margin of zero on top and
136:15 - bottom and then auto left and right and
136:17 - that will center
136:18 - the container now we go back to here so
136:21 - we can see the header now is centered
136:23 - nicely it's limited to that 11 110
136:27 - and then we're going to add that
136:28 - container class to the hero as well
136:31 - this is going to be tricky because i use
136:32 - the container class in the hero text
136:34 - to add that padding for the mobile
136:37 - styles but i think
136:39 - if i just add the container class to the
136:40 - hero itself
136:42 - hopefully the padding on the left and
136:43 - right should stay from mobile
136:46 - let's just go back to mobile styles and
136:47 - make sure
136:49 - that we have the spacing that we wanted
136:50 - here there's two things we want to do we
136:53 - want to control the max width to have
136:54 - that container but then we also want to
136:56 - add
136:57 - padding around the sections what we
136:59 - could do
137:00 - is i could split it out into two
137:02 - different helper classes like a
137:03 - container class and then
137:04 - wrapper or some other generic word like
137:07 - that or
137:07 - i could add some modifiers to the
137:09 - container class where
137:11 - i could add padding and then add the
137:14 - that special
137:15 - modifier clasp sounds pretty good let's
137:16 - try that if you just have a container
137:19 - the most important thing i want to do is
137:20 - to have that max width in the auto
137:22 - margin
137:22 - keeping in mind that there are cases
137:24 - that i want to
137:26 - only add padding to one side or maybe i
137:28 - wanted to add to all sides except for
137:30 - the top what if i did something like
137:32 - adding modifier where it's container
137:34 - padding top and then if you have that
137:37 - it gets the padding top and i can do the
137:39 - same thing
137:42 - there we go so now we have the padding
137:44 - but there might be cases where
137:46 - i want the padding all the way around
137:48 - might be cases where i just want it
137:50 - maybe
137:50 - top and bottom or just left and right so
137:52 - i think i'll create maybe two more
137:54 - helper
137:54 - class modifiers where it's padding
137:58 - just top and bottom let's just say
137:59 - padding y that's kind of the vertical
138:01 - axis and then for that we'll add
138:04 - adding top and padding bottom
138:07 - and then if i want padding only on the
138:08 - left and right we'll save padding
138:10 - x for horizontal then we'll add padding
138:13 - adding right and adding left
138:17 - it looks like i'm taking up a lot of
138:18 - space by creating these extra classes
138:20 - but it'll save me time when i'm creating
138:22 - the markup later on
138:24 - because now let me show you what i can
138:25 - do for the
138:27 - the header i want padding all the way
138:28 - around so i can say
138:30 - maybe i should add one more helper class
138:32 - where it's
138:33 - p all and then this one is going to have
138:37 - everything
138:38 - all the options so now i know it says
138:42 - pal
138:43 - we can now add container p-a-l-l
138:47 - to the nav and then for the hero we can
138:50 - say
138:52 - container p
138:55 - x let's see the hero container
138:58 - actually didn't want any padding on this
138:59 - at all now it's like this
139:02 - change that okay hero container
139:06 - now this is good there's no padding here
139:08 - i need to add padding to the hero text
139:11 - so what i could do there is a
139:14 - container maybe padding all because it's
139:17 - in the text element
139:18 - here we go now we got container padding
139:21 - all
139:21 - this is good too because i'm not adding
139:24 - the max width
139:24 - rule to this element it won't hurt
139:27 - anything it won't break the side but
139:28 - it's just not really needed
139:29 - i'm pretty happy with this but then
139:31 - let's check out on desktop
139:34 - we got hero container which is fine and
139:37 - then the header
139:37 - if you look in the nav it has a
139:40 - container max width set and then it has
139:41 - the
139:42 - padding all the way around which is
139:44 - perfect
139:45 - all right i had to adjust the lighting
139:47 - there because as i was recording the
139:48 - last video someone was kind of going
139:49 - down so things were just getting
139:51 - darker and darker but now we should be
139:53 - all set so
139:54 - back in our hero section um i think the
139:56 - next thing we want to do is
139:58 - let's fix the hero text styles because i
140:02 - think in the design
140:03 - it is left aligned as opposed to being
140:06 - centered like it is here let's go into
140:09 - our hero styles
140:10 - and here we go so text text line center
140:12 - is what we set as a default mobile style
140:14 - styles that's kind of
140:16 - an example of mobile first styles where
140:19 - your mobile styles are the default
140:20 - styles
140:21 - without any media queries and then you
140:23 - add on
140:24 - your desktop and so on styles using a
140:27 - media query
140:28 - you how that looks and there we go but i
140:31 - wonder if
140:32 - the text styles are bigger on desktop
140:35 - perhaps
140:35 - oh yeah definitely bigger i think before
140:37 - it was maybe 37 is that right
140:40 - 37 yeah let's estimate what the desktop
140:44 - h1 font size is going to be 40
140:47 - 52 let's try 52 font medium
140:51 - well i guess we'll just add font maybe x
140:53 - large
140:54 - just in case we need something between
140:56 - 18 and 52.
140:58 - so 52 divided by 16 is 3.25
141:03 - so now for the the hero text section
141:06 - h1 we want to add include
141:10 - breakpoint up large and font size
141:14 - is going to be that font x large so
141:16 - there we go
141:17 - and that looks more close to the design
141:19 - where the line breaks
141:20 - at next generation and then digital
141:23 - banking's on the next line
141:24 - let's just while we're at it double
141:26 - check our body copy here so it looks
141:28 - like it's a little bigger on desktop as
141:30 - well
141:31 - let's see how big this is going to be
141:33 - for desktop
141:34 - i think it's about maybe 20
141:37 - maybe 19. let's just say 20. yes
141:41 - font oh boy medium maybe large
141:44 - for 20 pixels 20 divided by 16 is 1.25
141:50 - that was for the body that's in the
141:52 - global sas file here we go so
141:54 - font size font small add or include
141:58 - break point up
142:01 - [Music]
142:03 - orange font size
142:06 - font large looks pretty good
142:10 - looks smaller on the design let's take
142:13 - that down to maybe
142:15 - you know let's just try 18 since i
142:16 - already have that variable saved
142:21 - that looks pretty close to the design
142:23 - i'm happy with that
142:24 - now i need to tackle the more tricky
142:26 - part which is this hero image section
142:29 - the problem with this is that we want
142:30 - the hero content to have that container
142:32 - right so the max width is set
142:34 - but for the hero image we actually want
142:35 - this to go outside
142:37 - of the container oh also the image goes
142:40 - all the way up to the top of the
142:44 - um header and actually oh my gosh
142:47 - it looks like because the headers white
142:49 - but then this hero background
142:51 - i thought it was white but it actually
142:52 - looks like a very very very light
142:55 - gray that's pretty subtle okay so they
142:58 - did have that
142:59 - already set which is great so i think i
143:02 - can just add it to the hero
143:04 - selector i'm assuming we want that for
143:06 - mobile as well
143:08 - background color very light gray
143:11 - okay so now it's very light gray but now
143:14 - you can see here we have this problem
143:16 - where
143:17 - the container is limiting the width so
143:19 - the gray's not going all the way out
143:21 - i think i still will have to add the
143:23 - container class
143:24 - to a child of the hero container or just
143:27 - of the hero rather
143:29 - so it will be something like this class
143:31 - equals container
143:33 - and that container will move the hero
143:34 - image and the hero text
143:36 - divs kind of like this now going back
143:39 - into our browser
143:40 - oops i need to add the flexbox stuff
143:43 - like flex
143:44 - oh this is a problem so the flex styles
143:47 - you want to put that in um hero
143:50 - container
143:53 - okay so now it looks better let's just
143:54 - double check that looks okay on mobile
143:56 - that looks okay okay so we'll go back to
143:58 - desktop
143:59 - now we got our very light gray
144:01 - background color
144:02 - and we need to figure out how to make
144:05 - this
144:06 - image going all the way to the right
144:08 - side
144:09 - so i wonder if it would make sense to
144:12 - make this position absolute on desktop
144:14 - because if it's positioned absolutely i
144:16 - can kind of position it and make it like
144:17 - right zero or whatever
144:19 - oh gosh got rid of the height right
144:22 - 100 will that fix it no oh yeah width is
144:25 - not working
144:28 - that's not right also i think i need to
144:30 - add the
144:31 - container to have shin relative
144:34 - there we go this is kind of a mess let
144:37 - me think about this again
144:38 - okay so this looks okay it's just the
144:40 - image that's not really working for us
144:43 - oh what if i do something like i know
144:45 - i'm already storing the mock-ups in the
144:47 - before element
144:48 - but what if for desktop i put the
144:51 - background
144:52 - background image svg into the after
144:55 - pseudo element
144:56 - so then i can absolutely position that
144:58 - but then the flex styles don't get
144:59 - messed up
145:00 - let's try that what have i got to lose
145:02 - right so
145:04 - we have this before class here add the
145:07 - after
145:07 - it's actually going to look quite
145:09 - similar to the before so i might just
145:11 - copy this
145:11 - and then just change the actual image
145:15 - so i think since i'm going to move the
145:17 - background image here i'm just going to
145:19 - comment it out here you know to kind of
145:21 - cover my
145:22 - cover my butt in case i need to go back
145:24 - to this so let's
145:26 - try this again okay um we got two
145:29 - background images
145:30 - as now slowing the mobile so what i
145:32 - actually need to do is
145:34 - background image none okay so now we
145:37 - just have the desktop thing
145:38 - now the znx stuff is a little messed up
145:40 - the reason the background image
145:42 - svg is on top of the mockups is because
145:44 - the background image is in the after
145:46 - pseudo element which is coming after the
145:47 - before
145:48 - pseudo element and how css works is if
145:51 - you don't sort of
145:52 - designate explicitly what the znx is
145:54 - it's going to
145:55 - put elements later on on top of elements
145:58 - before
145:59 - i guess i could fix this relatively
146:01 - easily by just switching the before and
146:03 - after
146:04 - so this will become four before
146:07 - it will come after and then the order
146:09 - doesn't really matter but
146:10 - just for the sake of being more clear i
146:13 - try to put the before
146:14 - pseudo element before the after suitable
146:15 - element now let's see that
146:17 - okay so now the phones are on top which
146:19 - is good so
146:21 - let's think about this the background is
146:24 - not
146:24 - big enough you can see it's much bigger
146:27 - in the design where it's like kind of
146:29 - off the page
146:30 - i guess part of the problem is the width
146:32 - has to be bigger than
146:33 - the width of the parent but what if we
146:36 - make the width
146:36 - bigger oh hey this is looking better
146:41 - because it looks like the phones are
146:43 - about the right size let's try one let's
146:45 - just go for 150
146:47 - width of 150 not too bad
146:50 - just seems a lot taller the green parts
146:53 - going
146:53 - straight off the screen we can try to
146:55 - fix that a little bit later
146:56 - okay so we got this to be 150 width
147:00 - now the problem with this is that looks
147:02 - like it's actually starting
147:04 - under the careers fit between blog and
147:07 - career that's where the left edge of
147:08 - this image is
147:09 - and it's also going off so what if i do
147:12 - left
147:12 - of 20 and this is going off the screen
147:16 - which seems to be
147:17 - part of the design so just keep moving
147:19 - it off screen the phones are a little
147:21 - bit down so let's say top five percent
147:24 - that's not what i want so i think i need
147:26 - to do transform
147:28 - translate why oh shoot
147:31 - also background size is 93 let's try
147:34 - contain
147:35 - so that looks better because all the
147:36 - phones are visible was it what 93
147:39 - percent first
147:40 - let's try to maybe match the size of the
147:42 - design so it's going up all the way it's
147:43 - getting cut off just above that 74
147:45 - 000 thing so 97
147:48 - perhaps so it's actually looking pretty
147:51 - okay let's move it a little bit to the
147:52 - left
147:54 - that looks pretty good it looks like
147:56 - this needs to be down a little bit more
147:58 - so let's translate it down i'm not
148:01 - actually sure if translate
148:03 - is gonna be the way to go for this
148:05 - because it's getting cut off
148:07 - so the problem is i want where this gets
148:08 - cut off to like stick to the top
148:10 - i think i'm going to uncheck the
148:12 - transform because this looks pretty
148:14 - close to the design right
148:15 - you can see this is going right up to
148:17 - that top nav bar so i think i will
148:19 - maybe increase the size a little bit and
148:22 - then i think i just need to make the
148:23 - after pseudo element a little bit
148:26 - smaller
148:27 - let's just worry about the background
148:30 - image first
148:31 - i kind of just want to start over so
148:32 - let's reload to refresh all the styles
148:34 - okay so let's start with just the intro
148:36 - desktop svg
148:38 - the problem with this was it's not big
148:40 - enough right so what i did was i
148:42 - increased the width to 150
148:43 - which looks good so let's put that in
148:45 - the code
148:46 - before we'll add a little break point
148:49 - here include breakpoint
148:50 - large width of 150 percent one style
148:54 - saved
148:55 - now the problem is is that it's not
148:58 - going down all the way to
148:59 - like the blue in the design is going all
149:01 - the way down the bottom
149:03 - and this is not weird
149:06 - let me actually add some outlines to
149:08 - both of these just
149:09 - so you can see a little bit what i'm
149:11 - doing
149:13 - okay so now i can see a little bit
149:15 - better hopefully
149:17 - okay why did that not thick or an error
149:20 - oh there's an error there is an error oh
149:23 - no mix and name breakpoint okay i was
149:25 - typing some wrong stuff in there
149:28 - breakpoint up now this magenta border
149:31 - should show up
149:32 - there we go you know what i'm just going
149:34 - to hide this
149:36 - right now i can just focus on the
149:38 - background thing okay so this needs to
149:40 - move down
149:41 - all the way down to the bottom of that
149:42 - hero
149:45 - let's just do 15.
149:49 - um okay if on
149:52 - big screens it's gonna see more i don't
149:54 - want it to like
149:55 - get cut off something like this
149:58 - or at least you can see that bottom edge
150:02 - okay see this is hard guys don't let
150:04 - anyone tell you it's easy
150:06 - let's just add a little more space
150:10 - the green is actually getting cut off
150:11 - whereas in the website it's
150:13 - you know not going all the way up
150:16 - i think i'm just not making it large
150:18 - enough
150:20 - now i need to move it a little bit okay
150:23 - so zero percent 83
150:25 - that actually looks pretty good it's
150:28 - still a little bit
150:29 - taller so it actually is getting
150:32 - quite close which is great
150:36 - that's this looks pretty close i'm going
150:37 - to copy this and we'll add it to these
150:39 - styles
150:41 - no repeat is fine and then background
150:44 - position and background size change
150:46 - see this is looking closer and closer
150:49 - now i need to just kind of position the
150:50 - phones
150:52 - a lot of times when we're coding and
150:54 - building stuff we try to just do
150:55 - everything at once like i was trying to
150:56 - do like the background svg and also the
150:58 - phone mock-up at the same time but
151:00 - it's quicker in the long run for me to
151:02 - just focus on one thing at a time
151:04 - so what i did was i focused just on that
151:06 - background svg got that and then now i
151:08 - can work on positioning the phones
151:10 - i think you'll be more successful doing
151:11 - it that way because you
151:13 - aren't splitting your attention between
151:14 - two different things or three different
151:16 - things trying to figure them all out at
151:17 - once
151:17 - much easier when you just separate
151:19 - things out and just attack one problem
151:21 - at a time
151:22 - so now these phones actually look pretty
151:24 - close
151:26 - now of course it's not going all the way
151:28 - down under here
151:29 - into the next section so we do need to
151:31 - figure that out let's just get this to a
151:33 - hundred percent
151:35 - all right let's do contain oh
151:38 - let me think about this the reason that
151:40 - this keeps getting cut off
151:41 - i was doing background size 100 and then
151:44 - i was trying to do like
151:45 - top five percent or something to move it
151:46 - down but i don't want this get cut off
151:48 - right i think it's because
151:49 - the height is always going to be the
151:51 - same so what if i make the height
151:53 - taller than the parent which is the case
151:55 - right because you're looking at the
151:56 - design
151:57 - the phone starts at the top and it
151:59 - extends beyond so it's like 100
152:02 - plus a little more so let's try height
152:04 - of 110
152:06 - maybe maybe a little bit more than that
152:07 - so you can see now things are moving
152:09 - down which is good
152:11 - i'm really just overhanging a little bit
152:13 - it's down a little bit too much
152:16 - bring that top thing back maybe negative
152:19 - two
152:20 - but it's not going up here so i wonder
152:23 - if i need to increase the background
152:25 - size
152:26 - yeah so background size
152:30 - let's just kind of guess here 120 maybe
152:34 - so the width also needs to be greater
152:36 - than the hero image
152:37 - div because remember the hero image div
152:39 - is limited by the flexbox
152:41 - properties that's why it's only 637
152:44 - whereas this one needs to be wider and
152:46 - taller than the parent so let's
152:48 - increase this as well because we're
152:51 - increasing the width
152:52 - the size of the background image is
152:53 - increasing too so we can take that down
152:56 - by
152:56 - decreasing the background size just a
152:59 - little bit of like
153:00 - kind of finagle things around so let's
153:02 - start trying to align this
153:03 - leftmost phone near that puzzle piece
153:06 - thing so we'll add a left property
153:08 - start with zero percent and we'll kind
153:10 - of increase it
153:11 - and then we can see it going up maybe
153:14 - there yeah maybe a little bit less it's
153:16 - the 22
153:17 - perhaps i think we need to move it up a
153:20 - little bit because it looks like the
153:21 - corner of this phone is just getting
153:23 - into that green area
153:24 - so we'll move it up maybe that much
153:28 - it's pretty close i think and then let's
153:31 - see how if this is
153:32 - kind of the right look that we got here
153:34 - so yeah overhang just a little bit
153:36 - now of course we don't want this to go
153:37 - all up into the header
153:39 - i think actually we don't want the we
153:41 - want the top to always be
153:42 - zero i think this looks pretty good
153:47 - we do want to move this up a little bit
153:48 - right but i think we can maybe control
153:51 - that
153:51 - not with the element itself but with the
153:53 - background position
153:55 - because i said center bottom if i do
153:57 - center is zero percent
153:59 - and then i use that so then what this is
154:01 - doing is it's adjusting the background
154:03 - image
154:03 - within that div so if it if the
154:05 - background image goes over
154:06 - it's not going to show that overlap
154:08 - because it's just the background image
154:10 - it's not the div itself
154:12 - it can be kind of tricky the more time
154:14 - you spend doing this kind of stuff the
154:16 - more you'll sort of understand
154:18 - how things work and how different
154:19 - properties fit together and like what
154:20 - they do
154:21 - this looks pretty close background size
154:23 - should be a little bit more
154:24 - let's try 95 and then we'll kind of move
154:26 - it down as we need to
154:29 - i think i can actually erase this top
154:31 - property because it's just
154:32 - zero let's take this these properties oh
154:35 - yeah and the width and height properties
154:36 - too
154:38 - make sure we copied that over and then
154:39 - put them into our sas
154:41 - file oh wait this is for
154:46 - just desktop i don't want to delete the
154:48 - mobile styles
154:50 - there we go okay so we don't need this
154:54 - image mockups because it's the same as
154:56 - the mobile styles everything else
154:58 - is changing um we don't even know repeat
155:01 - let's um remove this border stuff
155:04 - because we don't
155:04 - don't want to be distracted by that now
155:06 - this is looking pretty close to the
155:08 - design i think
155:09 - if we increase the width you can see
155:12 - you know it is going to nicely
155:16 - stay flush that right edge we have the
155:18 - mobile design that looks
155:20 - i think that looks pretty close to what
155:21 - we had then for tablet it's looking a
155:23 - little weird right so i think
155:25 - one fix for that could be just to
155:26 - increase the size of the hero for
155:28 - for tablet hero image so min height is
155:32 - 17.5
155:33 - which is 280 pixels if you want to know
155:36 - how many pixels something is if it's
155:37 - using
155:38 - another unit like rams or ems you can
155:41 - check in the computed that'll give you
155:42 - the sort of resulting
155:44 - pixel size so this one was min height of
155:46 - 280.
155:48 - obviously that's not quite tall enough
155:49 - for tablet so let's say
155:51 - min min height of maybe 400 pixels
155:56 - you don't want it to be too tall because
155:58 - you do want the whole
155:59 - hero to i think fit in the viewport when
156:01 - you're loading it in a tablet
156:03 - but maybe just a little bit shorter your
156:06 - image
156:06 - i have the background here
156:09 - and then the mock-ups ooh this was not
156:12 - an immediate query
156:13 - loading the desktop image that's not
156:15 - good the motherboard looks slightly
156:17 - strange here
156:17 - okay let's fix that first so in the
156:19 - before sudo element i need to move this
156:21 - into a media query
156:23 - looks like i just put it in the default
156:24 - styles let's think about this again
156:26 - but i changed things where i load the
156:27 - mockups in the after pseudo element
156:29 - and then the background images in the
156:31 - before suitable element for desktop
156:33 - but the background image for mobile is
156:35 - in the hero image element itself
156:38 - so i could actually move all these
156:39 - properties into desktop i think
156:42 - so i don't need the width i do need the
156:43 - height maybe i'll just comment things
156:45 - out just
156:46 - in case i need to bring it back
156:50 - okay so this still looks good on desktop
156:52 - and then on mobile
156:53 - it's only loading the mobile background
156:56 - because before we're loading like both
156:57 - let's go back to this section and we
156:59 - wanted to change that min height right
157:01 - let's try 400 pixels and then i wanted
157:03 - to try
157:04 - background position maybe center top for
157:06 - the mock-ups
157:07 - it's in the after so background position
157:11 - center up i feel like center bottom was
157:15 - better we'll leave it center bottom and
157:16 - then we're going to
157:18 - make the min height 400 pixels and we
157:20 - will convert that to rems
157:22 - for medium break point
157:25 - up medium
157:28 - 400 pixels divided by 16 is 25
157:33 - rems for large is just height of 41.
157:36 - so here's the thing on mobile here it is
157:39 - on
157:40 - tablet and here it is on desktop
157:43 - and it takes a second to load that thing
157:45 - like that i don't know if i'm happy with
157:47 - this
157:47 - it's too big i think so maybe for medium
157:50 - we can do something like
157:51 - background size is something like this
157:55 - i see two percent so hero image after
157:58 - background size is 52
157:59 - for medium
158:02 - medium background size 52
158:07 - so we can remove this commented out
158:09 - thing oh
158:10 - what did i do um i might have put it in
158:14 - the wrong property
158:15 - oh the before suit element after suit
158:17 - element is what i need
158:19 - for the mock-ups move that down there
158:22 - this should work now okay that looks
158:24 - closer to what we had
158:26 - that is okay
158:30 - let's just tweak this tablet background
158:32 - image again
158:33 - so i think i want to make it background
158:35 - position
158:36 - bottom so let's try center bottom or
158:39 - center
158:40 - then at least it's sort of like closer
158:42 - to like what the mobile thing was
158:44 - center 60. so background position center
158:46 - 64.
158:48 - hero image on medium
158:51 - there we go okay i think this looks a
158:54 - little better right
158:55 - it is hard because i'd say 99 of the
158:58 - time
158:58 - if you're in any kind of design you know
159:00 - work situation or whatever
159:02 - the designer is usually only going to
159:03 - give you a mobile design and then
159:05 - desktop design which you can see it was
159:06 - the case here with front-end mentor
159:08 - so for tablet a lot of times it's kind
159:10 - of on you to
159:11 - figure out okay what combination of like
159:13 - mobile styles and desktop styles am i
159:15 - gonna do for mobile um for tablet i mean
159:17 - this is tablet and this is phone
159:21 - and then this is
159:29 - all right now before we start any actual
159:31 - coding we're of course going to look at
159:32 - the design and figure out how we're
159:34 - going to build this
159:34 - so we're going to be building the
159:35 - feature section which is this why choose
159:37 - easy bank section under the hero
159:39 - on desktop you can see that they're in
159:41 - four columns and then they stack on
159:42 - mobile to a single column
159:44 - for tablet i'm guessing i might do a two
159:46 - column layout
159:47 - now for this section i think what i'm
159:48 - going to do is build this
159:50 - using flexbox now there's a lot of cases
159:53 - in layouts where you can use either
159:55 - flexbox or css grid
159:57 - i do want to show you both so i think
159:58 - what i'm going to do is build this top
160:00 - section using flexbox
160:01 - and then for the next section under it
160:03 - the articles i'm going to use css grid
160:05 - for that
160:06 - in my opinion i think you could use
160:07 - either flexbox or grid for
160:09 - both of these sections and it would be
160:11 - completely fine let's get started
160:13 - writing the actual code
160:14 - so if we go into our code editor we'll
160:16 - go to our index.html
160:18 - file and let me just minimize the hero
160:20 - section since i don't need that anymore
160:21 - and we'll create a new section tag and
160:24 - we're going to name it
160:25 - feature okay or maybe i'll say
160:28 - features since there's multiple features
160:30 - just to make it a little bit more clear
160:32 - now the first thing we're going to add
160:33 - is the text above the four
160:36 - features it says why choose easy bank
160:38 - with some subtitle and that one is
160:40 - full width on desktop so it's kind of
160:42 - the same for desktop and mobile
160:43 - so let's add that here we'll give this
160:46 - an h2 tag
160:47 - and then we'll copy over the text why
160:49 - choose easy bank
160:50 - and under that i'm going to create a
160:52 - paragraph tag and i will copy
160:54 - the paragraph text over there okay
160:57 - so then under the intro text is going to
161:00 - be
161:01 - the feature grid since we're using
161:02 - flexbox the first thing we need to do is
161:04 - we need to create the parent element the
161:06 - parent flex element
161:07 - so i'll say div and i'll give it a class
161:09 - of feature
161:11 - feature underscore underscore grid
161:15 - and then in that parent flex element
161:16 - i'll create some more divs so div class
161:19 - feature maybe item so each feature is
161:22 - going to have this
161:23 - div feature item let's go back to the
161:24 - design really quick each feature
161:26 - has a icon image then it has a title
161:30 - and then it has sort of a description so
161:31 - i need to add markup for all those
161:33 - things
161:34 - the first thing i'll say is div class
161:36 - feature
161:37 - actually i don't think i need to type in
161:38 - div i just say dot
161:40 - feature underscore underscore let's say
161:42 - icon then we'll say
161:44 - feature underscore underscore title
161:47 - and then feature description
161:51 - there we go so now we can add
161:54 - the different icons that we need for the
161:56 - icons and then the text
161:58 - as well so for the icon let's see what
162:00 - we got in our images folder so these are
162:02 - the
162:02 - image files from front end mentor that
162:04 - we are adding into our project
162:05 - so i'm guessing it's one of these icon
162:08 - api
162:09 - etc in our code we can say
162:12 - image source and then add the
162:15 - source as the svg file let's copy in our
162:19 - text as well so what i'm doing here is
162:21 - i'm just building
162:22 - the first feature block just by itself
162:25 - i'm not copying this
162:26 - three times that i have all four the
162:27 - reason for that is i don't want to
162:29 - duplicate it until i know exactly
162:31 - the correct markup and styles that i'm
162:32 - going to use so i'm just using this
162:34 - first one as kind of the first test case
162:37 - let's see how that looks and i'm really
162:39 - just seeing to make sure the icon image
162:41 - is loading correctly which it is i
162:42 - haven't added any other styles so it
162:44 - doesn't really look like much right now
162:45 - so let's go back into our code editor
162:47 - and i think this markup should be okay
162:49 - but let's start adding these styles
162:51 - so in our app folder in our scss
162:53 - subfolder i'm probably going to create a
162:55 - new sas file
162:56 - called features or feature i haven't
162:58 - decided which one i want yet
163:00 - create new file underscore feature i'll
163:02 - just say feature
163:04 - and i'm going to move it over to the
163:05 - right so we can see everything
163:07 - yeah so i'll do features as the section
163:09 - tag and then for the feature grid itself
163:11 - we'll just use the feature
163:13 - name so feature
163:16 - so i'm going to add underscore
163:17 - underscore grid item
163:21 - icon title and
163:24 - description and this is using the bem or
163:27 - block element modifier
163:29 - approach to writing your sas styles i
163:31 - personally really like it just because
163:32 - it keeps everything in a compact file
163:34 - with just the styles related
163:36 - to these feature blocks the first thing
163:38 - we wanted to do was
163:39 - create a style for the feature grid to
163:41 - use flexbox
163:42 - let's go back to the design we do need
163:44 - flexbox on desktop to make those four
163:46 - columns for the features but on mobile
163:48 - everything is
163:50 - just in one column so this doesn't
163:52 - actually need to use flexbox
163:53 - i'm only going to turn on flexbox for
163:55 - desktop so i'm going to use that media
163:57 - query
163:58 - breakpoint mixin
164:01 - breakpoint up large and then i will turn
164:05 - on flexbox with display
164:07 - flex we're probably going to be
164:10 - adding some styles to the feature item
164:13 - for flex as well
164:14 - so kind of get that started here and
164:16 - let's just start out saying flex of
164:18 - one all four of these feature items will
164:19 - be on the same row
164:21 - i'm guessing this markup is probably
164:23 - fine so i'm going to take this
164:25 - and just duplicate it
164:29 - and that's using the ctrl d shortcut
164:33 - so i'm going to save this and i know
164:34 - it's all the same item right now but i
164:36 - just want to make sure the styles look
164:38 - okay
164:39 - okay looks like flexbox is not working
164:41 - for some reason
164:42 - and let's go back and see what happened
164:44 - so we have the correct rules
164:46 - but actually i didn't include the
164:48 - feature sas file
164:49 - in our main sas file so
164:53 - it's always important to remember that
164:55 - now let's look at the browser again
164:57 - okay things are next to each other which
164:59 - is good i just want to kind of add some
165:01 - spacing so we don't get distracted by
165:03 - those other the other text underneath
165:05 - let's go back into our section tag
165:07 - and i'm going to add some of those
165:09 - container classes that we created last
165:11 - time to add
165:12 - padding this container container p-a-l-l
165:16 - for padding all should help and i'll put
165:18 - it in the
165:19 - features section tag there we go so it's
165:22 - a little bit better
165:23 - and this is one benefit of using these
165:25 - utility classes like the container class
165:26 - and container padding
165:28 - classes that i created because instead
165:30 - of having to
165:32 - manually write styles saying padding top
165:34 - you know 2.25 rems etc i can simply
165:36 - create the utility class and then i can
165:38 - use it in any html element that i want
165:40 - and it'll automatically take the styles
165:42 - so it's good because it's easier when
165:44 - you're creating new markup
165:45 - also you don't have to write duplicate
165:47 - styles because i know these are all
165:49 - taking the same
165:50 - the same padding and of course we'll
165:52 - probably tweak this a bit later on but
165:53 - right now we're just trying to get the
165:54 - basics down
165:55 - one thing that we need to remember with
165:57 - flexbox is that
165:58 - flexbox does not automatically include
166:01 - gap spacing between
166:02 - flex child elements unlike css grid we
166:05 - have a gap property
166:06 - it's not included at least not right now
166:08 - i think firefox is working on this
166:10 - property but it's not universally used
166:12 - even though i'm using firefox in my
166:13 - browser i'm going to
166:15 - manually add spacing using probably the
166:16 - margin property for these flex
166:18 - child items let's look at the design
166:20 - again and sort of think about
166:22 - what we want to do we need to add some
166:24 - space between
166:26 - these flex items and it's hard to tell
166:28 - exactly how much the space is because
166:30 - the text is left aligned so you're not
166:32 - always going to have consistent spacing
166:34 - between
166:34 - items but we can make an educated guess
166:36 - here right i'm using this little
166:38 - rectangle that i created in adobe xd
166:40 - using the the rectangle tool up here and
166:42 - it's just an easy way for me to kind of
166:44 - eyeball
166:44 - how much space and how big things are
166:47 - this you know the space is going to be
166:48 - at least this
166:49 - much maybe more it says 29. in this case
166:53 - it's 46. i think we're gonna stick with
166:56 - the 29 so what i need to do is i need to
166:58 - add
166:58 - spacing between the flex items now you
167:01 - might think
167:02 - okay well the easiest way to do this is
167:03 - to simply add spacing i could add a
167:06 - margin right so that it would be
167:08 - between each of these items right and
167:10 - that would look fine on desktop but what
167:11 - happens when we're going to tablet
167:13 - and earlier i said i want for tablet to
167:15 - be two columns in that case
167:16 - if there's space between each item when
167:18 - you stack them two
167:20 - and then two underneath the second item
167:22 - in that flex
167:23 - row is going to have extra spacing on
167:25 - the right so it won't look very good so
167:26 - we need to figure out what we want to do
167:28 - about that so it doesn't look weird on
167:29 - tablet when you have
167:30 - less than two flex items in a row now we
167:33 - could handle this a couple ways
167:34 - so one way would be in our styles we
167:36 - could say
167:37 - for the flex child items at a margin
167:39 - right of 30 pixels or whatever but only
167:41 - for desktop and then for tablet we could
167:43 - say
167:43 - for every other item it would have that
167:46 - margin rights then you wouldn't have
167:47 - that spacing
167:48 - then you could do something like in each
167:50 - feature item
167:51 - you would add padding to the feature
167:53 - item and then the content would
167:54 - automatically have a certain amount of
167:56 - spacing
167:57 - so how that would look would be you want
168:00 - to add spacing so there's space between
168:01 - the items but instead of margin we're
168:03 - going to add
168:03 - padding because there's 30 pixels of
168:06 - width between items
168:07 - you'd add half of that to the side
168:09 - pattern for each item
168:10 - each item is going to have padding to
168:12 - make it more uniform of 15 pixels that
168:15 - would ensure that you'd have 30 pixels
168:16 - of space between each item i personally
168:19 - like using the
168:20 - padding method more just because there's
168:22 - always going to be space
168:23 - between each item no matter if it's
168:25 - space between items next to each other
168:27 - or
168:27 - items above and below each other then
168:29 - you don't need to worry as much about
168:30 - media queries
168:31 - so let's do that now going into our
168:33 - feature sas file
168:34 - in the feature item we are going to say
168:37 - padding
168:38 - and of course we need our calculator and
168:41 - it's
168:41 - 30 pixel of padding between items so we
168:43 - need to divide that by 2
168:44 - and say 15 pixels divided by 16 to get
168:48 - ram so 0.9375
168:50 - rims and i think i'm just going to add
168:54 - padding all around the items just
168:56 - because we know on tablet is going to be
168:57 - two rows and then a mobile
168:59 - they'll be stacked one under each other
169:00 - so we're not going to put this
169:02 - padding rule in a media query and then
169:04 - also just for some additional
169:06 - visibility we're going to add a little
169:08 - border just for
169:09 - testing right now let's see what we got
169:12 - so now you can see we have our four flex
169:15 - items
169:15 - and they have a line between them and
169:18 - there is some padding
169:19 - so they're nicely spaced this looks
169:21 - pretty good
169:22 - since we did have the flex just for
169:24 - desktop watch what happens when we
169:26 - get below the desktop breakpoint they go
169:29 - to one column and this is what we would
169:31 - want on mobile
169:32 - but for tablet we want them to be two
169:35 - columns so how do we do that
169:36 - well let's go back into our code editor
169:38 - and we're going to start working with
169:40 - the flex property more
169:41 - now in the feature item selector we want
169:44 - to add another
169:45 - mix in for the tablet styles so include
169:48 - breakpoint up medium
169:51 - actually there's another thing we need
169:52 - to do we need to make sure flexbox is
169:54 - used
169:55 - on tablet as well so we need to add that
169:58 - medium
170:00 - breakpoint turn on display flex for that
170:02 - and then i guess we can turn this
170:04 - off or not turn this off we can delete
170:06 - that rather since we don't need to use
170:08 - display flex just for desktop what this
170:10 - mixin is saying is that it's going to
170:12 - have display flex for medium widths and
170:15 - up
170:15 - that's hence the name breakpoint dash up
170:18 - so going back into our feature item
170:19 - selector
170:20 - in the tablet styles we need to
170:24 - tell each feature item to take up
170:25 - basically half the width right so
170:27 - instead of
170:28 - the desktop where it's just fitting
170:29 - everything into one row
170:31 - and instead of the mobile styles where
170:33 - everything is on its own row for tablet
170:34 - we want each
170:35 - item to take up half the row so we can
170:37 - do that with the flex
170:38 - property so the flex property is going
170:41 - to
170:42 - be 1 0 and then i'll say 50
170:45 - now let me explain this the flex
170:47 - property itself is actually a shorthand
170:49 - property
170:50 - and it has three different flex
170:51 - properties that it includes
170:53 - so the first one is flex grow second one
170:56 - is flex shrink
170:57 - and the last one is flex basis now flex
171:00 - basis
171:01 - means the default width that the item is
171:03 - going to have
171:04 - in our case we want the feature item to
171:05 - take up half the width so we say flex
171:07 - spaces is 50
171:08 - now for flex grow what does that mean
171:10 - well setting it to one
171:12 - as opposed to zero means that it's
171:14 - allowed to grow
171:15 - in order to fill the space so that's why
171:17 - for the large we set it to just flex one
171:20 - and this is kind of a shorthand way of
171:22 - saying
171:22 - flex one zero and then i believe either
171:25 - auto or zero percent
171:26 - but you can just say flex one to make
171:28 - the flex child item
171:30 - fit the available width with as many of
171:32 - the flex child items as
171:33 - exist so if you want all the items to be
171:35 - the same width and to be on the same row
171:37 - you would say flex of 1. so in our case
171:40 - what is happening here is that each
171:42 - feature item is going to take up half
171:43 - the width
171:44 - and it's going to be allowed to grow to
171:45 - fill up the space if it needs to
171:46 - although this is not strictly necessary
171:48 - so this should also work
171:49 - even if we said flex grow of zero the
171:51 - next one is flex shrink
171:53 - this basically means if the item's
171:54 - allowed to shrink less than the flex
171:56 - basis in order to
171:58 - fit on the row so let's just start off
172:00 - with zero zero fifty percent
172:02 - and i'm going to also need to turn on
172:04 - wrapping and flexbox because by default
172:07 - if you don't turn
172:08 - wrapping on it's going to try to fit all
172:10 - the child items in one row
172:12 - so flex wrap
172:16 - and set to wrap okay so now i think we
172:18 - have the styles we need to
172:20 - have the tablet styles look correct okay
172:22 - so here's the page
172:24 - let's see how it looks on tablet oh look
172:27 - at that
172:28 - so now it's taking up 50 starting from
172:30 - the
172:31 - medium break point then as we continue
172:33 - decreasing it'll go to one column
172:36 - for mobile so this general layout is
172:40 - pretty set now it's kind of doing
172:42 - everything we want to do in terms of the
172:43 - number of columns
172:45 - so i think this should be all set in
172:47 - terms of flexbox stuff
172:50 - now let's move on to making each of
172:52 - these items have the correct icon as
172:53 - well as the correct text
172:55 - okay so going down here the next one is
172:59 - simple budgeting
173:04 - okay so we got our text down now we need
173:06 - to make sure the icons are correct
173:07 - the second one is simple budgeting let's
173:10 - see the file names
173:12 - on images icon budgeting icon budgeting
173:16 - that's the name
173:18 - [Music]
173:20 - budgeting next section is fast
173:23 - onboarding so
173:24 - icon onboarding
173:27 - then we got open api so it's probably
173:29 - this one icon api
173:32 - see how it looks on the website and we
173:34 - have our different icons and the text
173:36 - which is great
173:37 - let's go back and style the text and
173:39 - also fix
173:40 - some of this spacing stuff here the
173:42 - first thing we're going to do is we want
173:43 - to make sure that the intro
173:45 - text has the correct styles
173:48 - so if we go up here it looks like the h2
173:51 - tag
173:52 - is going to be smaller than the hero
173:55 - h1 tag so let's see let's kind of
173:58 - estimate how big this text is
174:01 - i'm going to say it's going to be about
174:02 - 37 maybe 36 pixels
174:05 - let's start adding some global text
174:08 - styles for the
174:09 - h tags so a little descriptor there
174:12 - so for h2 the font size was
174:16 - 36 pixels divided by 16
174:20 - is 2.25 rims
174:23 - and i believe that's just for desktop
174:25 - because if we look at the design
174:27 - the ychu's easy bank text looks smaller
174:29 - on mobile so we're going to add some
174:31 - styles for mobile as well
174:32 - this is about 30. not too much different
174:35 - but
174:36 - you know different enough 1.875 rams
174:41 - 1.875 rams and then we'll add the font
174:44 - size 2.25 rams
174:46 - in our point let's say
174:49 - just for large so we're going to tell
174:52 - the tablet
174:53 - [Music]
174:54 - styles to use the oh oh i forgot again
174:57 - break point dash
174:58 - up there's a little error down there and
175:01 - we also need to
175:02 - look at the margin underneath so what
175:05 - i'm kind of looking at here
175:06 - is the two h2 tags that we're going to
175:08 - need on the page so why choose easybank
175:10 - title and the latest articles title
175:12 - because they look like they're the same
175:13 - size and if you look at the format of
175:15 - the page they should be h2 tags
175:17 - from an seo standpoint i'm going to
175:20 - measure the space
175:22 - under each of them and make sure it's
175:23 - the same and if it is and we can just
175:25 - add the same margin bottom
175:27 - about 36 it looks like this is a little
175:29 - bit more
175:30 - it's going to be 55. honestly
175:33 - i think that i might get a little bit
175:36 - away from the design and
175:37 - have them be the same amount of space
175:40 - let me just see how much space i put
175:41 - under the hero in that h1 tag
175:44 - it's not a huge deal but i just want to
175:46 - kind of be consistent with the spacing
175:47 - if i can
175:48 - and see what i've done already it looks
175:50 - like here
175:51 - the margin bottom is 1.5 grams which is
175:54 - if we look on our layout tab
175:56 - 24 pixels so for whatever reason there's
175:59 - more space
176:00 - under the h2 tag than the h1 but that's
176:03 - totally fine
176:04 - you know this is just kind of how the
176:05 - design is so i think i might
176:08 - use the 36 spacing 36 pixel spacing for
176:12 - both
176:12 - h2 tags and it'll just be slightly
176:14 - different from the design in this case
176:17 - so 36 margin bottom
176:21 - and since we know that the font size is
176:23 - also 36 we'll just say 2.25
176:25 - rams and then there's probably going to
176:27 - be a slightly different
176:29 - mobile margin bottom let's see what this
176:32 - is here
176:33 - about 25. so 25 divided by 16. it's
176:38 - 1.5625
176:40 - 1.5625 rims now let's see how this is
176:43 - looking so far
176:44 - okay so there's a lot of spacing i mean
176:47 - i guess that's how it is
176:48 - now we obviously need to make sure the
176:50 - text looks correct as well
176:51 - so it's pretty similar to the h1 styles
176:53 - except that it is a different size
176:55 - so let's copy some of the h1 styles over
176:58 - oh where did i put those h1 styles i
177:00 - wonder if i put it in the hero
177:02 - sass file oh yeah hero text h1 i'm going
177:05 - to move these
177:06 - h1 styles from the hero sas file into
177:10 - the globals just because
177:12 - theoretically if there were other pages
177:13 - on this website they would probably want
177:14 - to use the same h1 styles as we have in
177:16 - the hero
177:17 - so let's do that so let's open up the
177:19 - hero sas file that we were working with
177:21 - last time
177:22 - and find the h1 selector so i'm just
177:25 - going to copy this entire thing here
177:28 - save the hero and then we're going to
177:30 - add the h1 styles up here
177:31 - in the globals that way everything is
177:34 - the same
177:35 - now another thing we can do to make our
177:36 - code a little bit more efficient is we
177:38 - know
177:38 - looking at the design that the h1 tag
177:41 - and the h2 tags
177:42 - are using the same font weight and
177:45 - probably line height as well so i'm
177:47 - going to copy all the styles from the
177:50 - h1 tag that i think are going to be
177:52 - reused in the h2 tag and maybe even the
177:53 - h3 tag
177:54 - into this compound selector for h1h2 and
177:57 - h3
177:58 - tags so we're going to take this color
178:01 - is the same
178:02 - we'll leave the margin bottom there
178:04 - because it's different
178:05 - but the text styles themselves we can
178:08 - reuse them
178:08 - so i think actually font size should
178:10 - stay just in the h1 tag
178:12 - there we go so now we know that h1 h2
178:14 - and h3 tags we want to have the same
178:16 - look and the only difference that
178:17 - they're going to have from each other is
178:18 - the font size and then the margin
178:19 - bottoms
178:20 - so this kind of just makes your styles a
178:22 - bit more efficient let's go back to our
178:24 - site
178:24 - and now we can see that the h2 tag does
178:27 - have the same
178:28 - general look it's obviously a bit
178:30 - smaller okay going back to our design
178:32 - let's see what else we need to do let's
178:34 - check out the body copy styles
178:36 - and again it looks like we can reuse
178:37 - some of the styles that we did last time
178:40 - where the body copy looks the same
178:43 - as in the hero section itself so
178:46 - let's see where those styles came from
178:48 - and where i saved them
178:50 - so again it's hero text p line height
178:53 - 1.5 margin bottom is set
178:55 - so the font size itself comes from the
178:57 - body selector which is good it's the
178:58 - default font size
179:00 - what i think i can do is maybe assume
179:03 - again that the
179:04 - paragraph used in the hero is probably
179:06 - going to be similar styles to paragraphs
179:08 - used elsewhere
179:09 - in the site so i'm going to copy those
179:11 - styles over as well
179:12 - into our globals so we'll put this here
179:15 - under the
179:16 - headline tag styles and we'll save the
179:18 - hero one as well
179:20 - and check back on the site looks pretty
179:22 - similar i'm actually not sure if it
179:23 - looked different from before but that's
179:25 - okay
179:25 - now let's see what we have compare it
179:28 - back to the design
179:29 - and see what differences there might be
179:32 - now one thing i've noticed immediately
179:33 - is that the text
179:34 - the paragraph text in this section
179:36 - doesn't go all the way across
179:38 - it ends whereas right now it's going all
179:41 - the way across
179:42 - so i need to figure out how wide the
179:45 - paragraph
179:46 - is going to take and how i want to style
179:49 - that
179:50 - what i could do is i could add maybe a
179:52 - max width
179:53 - of this intro section it looks like it's
179:56 - going a little bit more than half
179:58 - because we can assume that the halfway
179:59 - mark of the page is down here
180:01 - and another trick that i use sometimes
180:03 - is you click on the artboard in adobe xd
180:05 - you go down here to the grid layout the
180:08 - grid section if you check this box
180:10 - it's going to superimpose columns and
180:12 - this is really handy for designers
180:14 - especially but it's also handy for
180:15 - developers because you can
180:16 - count how many columns need to be for
180:18 - each section and i think this should be
180:20 - yes
180:21 - a 12 column layout and of course like
180:22 - this is
180:24 - superimposed on a jpeg of the actual
180:26 - design so
180:27 - i may have to mess with this a little
180:29 - bit but i'm really just using this to
180:30 - see where the halfway point is so the
180:31 - halfway point is this
180:32 - white stripe right down there and so it
180:35 - looks like the paragraph is actually
180:36 - going beyond that halfway mark but
180:38 - doesn't seem to align
180:40 - with anything else what i might do is
180:42 - simply set this intro section to be 50
180:45 - width or maybe 55 or 60 let's go back
180:48 - into our index.html
180:50 - and go into the intro section and i just
180:52 - kind of put the h2 and paragraph tags
180:54 - as direct children of the section tag so
180:57 - what i might do
180:58 - here is create a child div so class of
181:01 - feature maybe intro
181:05 - oops i'm running css styles intro and
181:08 - then press
181:08 - enter kind of hard to fight with the
181:11 - muscle memory
181:13 - okay there we go so now we have a
181:15 - feature intro this new
181:16 - selector that we're going to add into
181:18 - our features sass file
181:20 - so i usually try to order my
181:23 - selectors in the same order as they
181:25 - exist in the html markup
181:27 - the feature intro comes before the
181:29 - feature grid so we will add it
181:30 - above the feature grid so feature intro
181:34 - and i'm assuming that the 55 width
181:38 - is only going to be for desktop and for
181:39 - mobile it needs to go all the way across
181:41 - so we'll add the break point
181:44 - up large
181:47 - and we'll say with 55
181:50 - and in this case for tablet it'll go all
181:52 - the way across but i think that's okay
181:54 - we can always tweak it later with a
181:56 - medium break point if we need to
181:57 - but let's load the site and see how it
181:59 - looks nice
182:01 - let's see exactly how long how far
182:03 - across that 55
182:04 - goes so it goes about here kind of close
182:07 - to the design right
182:08 - we can also look at where the line break
182:10 - is so the line break here is that
182:11 - financial hub
182:13 - financial hub's on the second line so we
182:15 - could just maybe increase the percentage
182:17 - so financial hub fits it looks like 60
182:20 - might be more accurate
182:22 - so we'll change this width property to
182:24 - 60
182:26 - all right hey we're doing pretty good
182:28 - here now the next thing we want to do
182:30 - now that we've styled the intro section
182:32 - is style the cards
182:34 - first thing i'm going to look at is how
182:35 - much spacing there's between the intro
182:37 - and the cards themselves
182:39 - okay so there's quite a bit of space
182:41 - between the intro and the cards
182:42 - themselves
182:43 - now keeping in mind that we did add that
182:45 - padding i'm just going to leave a little
182:47 - extra space to kind of take up the space
182:49 - of the padding i added
182:50 - so it looks like it's about maybe 60
182:53 - pixels tall
182:55 - where do we want to add the spacing
182:56 - let's go back to our site and check it
182:58 - out
182:58 - we could add it in the paragraph but
183:02 - let's say the client wanted to add
183:04 - another paragraph tag or multiple
183:05 - paragraphs into this section
183:07 - obviously this is a hypothetical client
183:09 - since this is just a demo website but
183:10 - this is kind of what happens in the real
183:12 - world you know you want to try to write
183:14 - your styles in a way that is
183:16 - future proof as much as possible so you
183:18 - need to consider you know what happens
183:19 - if they want to add more copy or less
183:21 - copy or
183:21 - you know more feature items or less
183:23 - feature items all these things could
183:25 - change in the future because you know
183:26 - these websites are supposed to be
183:27 - representations of real companies and
183:29 - things like that
183:31 - in terms of the spacing i'm probably
183:32 - going to add padding
183:34 - bottom padding to the feature intro
183:36 - section or maybe margin bottom
183:38 - to add space between that and the grid
183:40 - so it looks like there's some space
183:41 - already
183:42 - from the paragraph tag but we'll add
183:44 - some margin bottom to feature intro
183:47 - going to the feature intro the margin
183:49 - bottom and i think i said it was 60
183:51 - pixels
183:52 - so divided by 16 3.75 rams
183:55 - so margin bottom 3.75
183:58 - rims see how that looks all right so now
184:01 - there's more spacing which is
184:02 - awesome an interesting thing i don't
184:04 - know if you notice this but you can see
184:06 - in the developer tools the margin bottom
184:08 - is highlighted in yellow
184:09 - and that's the 60 pixels you can see
184:11 - that the paragraph also has margin
184:13 - bottom
184:13 - even though there's margin bottom in
184:15 - both the paragraph and the feature intro
184:16 - they don't combine together and like add
184:18 - to be
184:19 - you know whatever 2.25 rams plus 3.75
184:22 - rams
184:22 - so i think we can consider this intro
184:24 - section actually
184:25 - done one thing i want to check really
184:27 - quickly is the mobile styles for that
184:30 - looks like it is 36 pixels from mobile
184:34 - between the intro and the grid okay it's
184:36 - less it's actually
184:38 - the same okay so it's still about 60
184:40 - pixels of
184:41 - space between intro and grid so what i'm
184:44 - gonna do is move that margin
184:46 - bottom property into the default styles
184:48 - which are mobile styles in our case
184:50 - so now if we look at the site it is the
184:52 - same amount of space
184:54 - at the bottom 60 pixels no matter what
184:56 - your viewport is
184:58 - all right the next thing we want to do
184:59 - is we want to style these feature cards
185:01 - so
185:01 - going back to the design we can see that
185:03 - the icons have some space under them and
185:06 - we need to also style the text as well
185:08 - so i'll start with the icon spacing and
185:11 - the space between the icon and the text
185:14 - is about 44
185:15 - pixels go into our code and
185:19 - the feature underscore underscore icon
185:21 - is where we're going to be adding this
185:23 - style rule and we want to say margin
185:26 - bottom 44 divided by 16
185:29 - is 2.75 rims
185:33 - so now we got our space i also want to
185:36 - make sure
185:37 - the spacing is the same or see if the
185:40 - spacing is the same so it looks like
185:41 - there's a bit less spacing for mobile
185:43 - let's say 30 pixels from mobile so again
185:47 - we will add the default styles for
185:50 - mobile
185:51 - 30 divided by 16 is 1.875
185:55 - and then we'll add the 2.75 rams in
185:58 - our in our
186:02 - break point up large media query
186:06 - there we go okay so we got our spacing
186:11 - cool let me also double check and see if
186:14 - the icon
186:14 - image is the same or different looks
186:16 - like they're the same just double check
186:18 - that to be sure
186:19 - about 74 and same for desktop so i think
186:23 - we are good with this
186:24 - they're staying the same between mobile
186:26 - and desktop let me
186:27 - actually add some spacing so that this
186:30 - can kind of scroll it more so i'm not
186:32 - blocking it with the image of myself i'm
186:34 - just going to add some a min height to
186:36 - our body selector at to the bottom here
186:38 - we'll say min
186:38 - height is maybe 200
186:42 - viewport height see if that helps in
186:44 - terms of the scrolling
186:45 - yeah so now i can scroll down a little
186:47 - bit just a tiny bit more
186:49 - 300. now i can position it in the
186:52 - kind of a better place on the screen for
186:54 - all of you now let's do the
186:56 - feature block title looks like the
187:00 - font style are similar to our headline
187:02 - font styles
187:03 - obviously it's a much smaller font size
187:05 - let's say about 24 pixels
187:08 - now going back to our code it was
187:10 - feature underscore underscore title
187:12 - so in our feature sas file we'll say
187:15 - actually let's check the mobile styles
187:17 - first
187:17 - there's about 24 pixels big for the
187:20 - desktop and it looks a bit smaller for
187:21 - mobile
187:22 - it's more like 20 so 20 for mobile 24
187:25 - for desktop
187:26 - so font size 20
187:29 - it's 1.25 grams
187:33 - and then we'll add our mix in for the
187:34 - break point up
187:37 - large font size is 24
187:40 - divided by 16 is 1.5 grams
187:45 - and we need to copy the headline styles
187:48 - that we had used from the globals
187:50 - so i'm just going to copy font weight
187:52 - 300 1.15
187:54 - color dark blue and we'll add them over
187:58 - there
187:59 - for textiles i sort of follow this order
188:01 - i do
188:02 - font size first then font weight then
188:04 - line height then color and then i'll do
188:06 - line height under font size because
188:07 - they're sort of related
188:09 - let's check out our styles all right
188:11 - looks pretty good
188:13 - now let's add the space under the
188:14 - feature title
188:17 - so for desktop it's about 36 maybe 34.
188:22 - and for mobile it is a little bit
188:24 - smaller again
188:26 - 26. so let's say 24 and
188:30 - 34. this is going to be the featured
188:32 - title selector we'll add a margin bottom
188:35 - property
188:37 - 24 1.5 grams
188:41 - and then the margin bottom for large
188:46 - was 34 divided by 16 2.125
188:51 - and checking back on the site looks good
188:54 - next thing is to style the
188:55 - paragraph the feature description styles
188:58 - so it looks like
188:59 - on mobile 15 let's say
189:02 - 16 just because and then
189:05 - for desktop looks like it might be the
189:08 - same actually for desktop and mobile
189:10 - yeah i think they're actually the same
189:11 - so 16 pixels for both
189:14 - this is for the feature description so
189:18 - font size and i know that 16 pixels is
189:21 - one rim so
189:22 - one rim it looks like we need more
189:25 - line height because there's not enough
189:27 - spacing between the lines fine height
189:30 - let's say 1.5
189:32 - perhaps a start font looks a little
189:35 - smaller
189:35 - on the design than in the website maybe
189:38 - 14 pixels
189:40 - instead of 16. that seem a little closer
189:43 - i think that's closer this will be 14
189:45 - pixels and then 1.5 line height
189:48 - so 14 divided by 16 is 0.875 rams
189:54 - and then line height 1.5
189:58 - there we go okay looks good
190:02 - i think maybe we can take away the that
190:04 - magenta border that we'd added
190:08 - and then this should look pretty close
190:10 - to how it should look on the design
190:13 - okay one thing that i think i forgot is
190:15 - i need to add that gray background to
190:16 - this section
190:18 - okay let's see what color is this in our
190:21 - variables
190:22 - so the very light gray was the hero
190:24 - background maybe the
190:26 - light grayish blue see if that's correct
190:29 - so i'm going to add it to the let's see
190:32 - i want to add it into the features
190:34 - section i honestly might just rename
190:36 - this to be feature singular so it
190:38 - matches
190:38 - you know the feature underscore
190:40 - underscore classes as well
190:42 - background color and we'll paste in the
190:46 - light grayish blue does that seem right
190:48 - that seems pretty close
190:50 - now of course we need to add some more
190:52 - spacing here because
190:54 - yeah it's not quite enough
190:57 - looks like it's about 110 on top
191:01 - and then a little bit less on the bottom
191:03 - 90 on the bottom
191:05 - let me go double check what i'd added to
191:08 - that container class
191:09 - that we'd created last time so i think i
191:12 - said here we go padding top 2.25 rams
191:16 - times 16 to get the pixels 36 pixels so
191:19 - this is much
191:20 - more spacing for this section i wonder
191:23 - if i just hadn't added enough
191:25 - yeah padding to this i might just try to
191:27 - keep them all the same
191:28 - around 90 or so and then i'll add more
191:31 - for this top thing here
191:33 - i wonder why i'd added only 36 pixels of
191:37 - padding
191:38 - i wonder if that's because of the mobile
191:40 - style that i was looking at
191:41 - so i think i'm going to do is just
191:43 - increase the padding basically all
191:45 - around for that container class
191:46 - this will do 70 for mobile we'll do 96
191:51 - for desktop and then we'll see if this
191:53 - breaks anything
191:54 - we're doing 70 for mobile so padding top
191:58 - and bottom should be 4.375 grams
192:01 - and we want that to be the same on the
192:03 - bottom as well
192:05 - and for now we'll leave the padding left
192:06 - and right yeah so we'll just
192:08 - any any case that we had padding top and
192:11 - bottom
192:11 - we're going to increase it to 4.375 rams
192:15 - for mobile and then for desktop
192:18 - so include break point up large
192:22 - i'm going to say padding top
192:26 - and that was 96 i think i said so 96
192:28 - divided by 16
192:30 - six rims this will be for both padding
192:33 - top and padding bottom
192:37 - this one just has padding tops we'll
192:38 - delete that and this just has padding
192:41 - bottom so we'll delete the padding top
192:44 - okay so for now we'll leave padding left
192:46 - and padding right
192:48 - check out our website see if things look
192:49 - better and if i broke anything
192:51 - so you can see there is more spacing
192:52 - here um it's good 70 on top and bottom
192:56 - looks decent enough go to desktop but in
192:59 - terms of spacing
193:01 - the container the nav looks okay which
193:02 - is good
193:04 - and then here i need to make sure this
193:07 - goes all the way across
193:08 - but the top and bottom padding that
193:10 - looks pretty good
193:11 - let's fix this thing here basically i
193:14 - need to make the container
193:16 - p-a-l-l a child of the section itself
193:20 - so that it doesn't get limited in width
193:23 - so i'm going to create a new div call it
193:24 - feature content perhaps
193:28 - and then i'm going to move all the html
193:31 - into
193:33 - this child div then i will move the
193:36 - container
193:37 - out of here and into the feature content
193:40 - and this will ensure that the
193:42 - feature section itself will have that
193:44 - light gray background and it won't be
193:46 - limited
193:46 - in terms of width it'll go all the way
193:48 - to the left and to the right
193:49 - you can see that's happening and then in
193:51 - the feature content that's where
193:53 - you get your max width set for the
193:54 - content inside the light gray
193:56 - so this looks pretty good go to the
193:58 - design and do just an eyeball and see
194:00 - if anything looks off or if this looks
194:03 - pretty close
194:04 - and this looks pretty close i'm pretty
194:06 - happy with that i think there might be a
194:08 - little too much spacing under here
194:10 - under the feature title yeah that's too
194:12 - much so it should be about 32 or so
194:15 - how much space do we actually have here
194:18 - 34.
194:19 - i think i need to just decrease this a
194:20 - little bit so let's say
194:22 - margin bottom 30 pixels
194:25 - margin bottom 30 pixels still looks like
194:29 - a little bit too much spacing yeah
194:32 - that's a lot
194:33 - less even though this is this does seem
194:35 - correct
194:36 - sometimes i just added spacing from the
194:39 - the text afterwards so you can see here
194:42 - there's a tiny little bit of spacing
194:43 - until the text starts so this is
194:45 - probably what i need to account for so
194:47 - let's try maybe down to 20 even
194:49 - maybe even a tiny bit more 22
194:53 - maybe 24. i think that's close enough so
194:57 - we'll change the feature title margin
194:58 - bottom to 24 pixels
195:00 - going back to our feature sas file
195:03 - margin bottom
195:04 - needs to be 24 1.5 rems
195:08 - and then let's check it again for mobile
195:10 - because that will also probably need to
195:12 - be decreased
195:17 - so it's a little bit less yeah i think
195:20 - i'm just gonna have to try to eyeball it
195:21 - again
195:22 - margin bottom
195:26 - start with maybe 20 pixels let's try it
195:29 - with 16 pixels
195:31 - we'll do 16 pixels for margin bottom on
195:34 - mobiles
195:34 - and 16 pixels is one ram that looks much
195:37 - better
195:38 - let's go back to desktop and then
195:40 - compare it again to the design
195:42 - okay spacing looks pretty good
195:46 - and let's go to mobile see how that
195:49 - looks
195:49 - i guess we can use the emulator too okay
195:52 - so on the mobile everything is
195:54 - center aligned including the icon so
195:57 - let's do that so
195:58 - maybe in feature i'll say
196:02 - text align center for the default mobile
196:05 - styles and then
196:07 - let's start this with medium since it's
196:09 - two columns
196:10 - for the features for medium so we want
196:12 - we probably want those to be left
196:14 - aligned
196:15 - text align left it's not centered
196:18 - um let's check back here hmm why is that
196:20 - rule not working
196:21 - there's no error in the sas and i cannot
196:25 - see
196:25 - oh wait oh no i did this again break
196:28 - point up
196:29 - okay now it should be good okay now yeah
196:32 - text line left is
196:33 - showing up so now i'm going back to
196:35 - mobile
196:36 - that looks good and then tablet width is
196:40 - around here so this is going to be
196:42 - you can see two columns everything's
196:44 - left aligned
196:45 - desktop it's four columns and
196:46 - everything's left aligned
196:48 - all right yeah this looks pretty good
196:51 - looks
196:52 - close to the design okay so i think we
196:54 - can consider
196:55 - the feature block to be complete
197:02 - all right let's build out the latest
197:03 - articles section now for the use before
197:06 - we do any actual coding we're going to
197:07 - look at the design which i have open
197:09 - here in adobe xd
197:10 - and let's go down to that article
197:12 - section
197:14 - you can see that it is four columns on
197:15 - desktop and one column
197:17 - on mobile and we'll probably do two
197:19 - columns for tablet
197:21 - now if you saw the previous video where
197:22 - we built out this featured section
197:24 - just above it it has basically the same
197:26 - layout they're both four columns on
197:27 - desktop one column on mobile
197:29 - and i'd mentioned last time that while
197:32 - we're going to build the features
197:33 - section using flexbox
197:34 - for the article section we're going to
197:36 - use css grid so that's what we're going
197:38 - to do today we're going to build out
197:39 - this four column layout
197:40 - using css grid as opposed to flexbox and
197:44 - honestly i think that you could use
197:45 - either flexbox or grid for both of these
197:48 - sections
197:50 - i don't think either one of them has a
197:52 - super strong advantage over the
197:54 - other so this is one of those cases
197:55 - where you can just pick whichever you
197:57 - are more comfortable with
197:58 - all right so now that we have looked at
198:00 - the design we can
198:01 - just start getting all right so now that
198:04 - we've looked
198:05 - all right now that we've looked at the
198:06 - design let's start getting into the code
198:09 - so we're going to go into vs code our
198:10 - code editor and if you've been following
198:12 - along you might notice that my
198:14 - color scheme are slightly different i've
198:16 - been trying to tweak
198:17 - this customization in bs code for a bit
198:20 - and
198:21 - hopefully when everything's done i will
198:23 - be able to release it as
198:25 - an actual theme so you can all download
198:26 - it for free
198:28 - but for now it's still a work in
198:29 - progress
198:31 - okay now to get started we are going to
198:33 - look at the index.html and we're going
198:35 - to add our html markup
198:38 - so the first thing we're going to do is
198:41 - similar to the other sections we're
198:42 - going to add a section tag
198:44 - so we'll say section and we'll give it a
198:47 - class
198:47 - of maybe articles i know that i
198:51 - ended up making the section for the
198:52 - feature section feature singular as
198:54 - opposed to plural but
198:55 - i'm going to try i think maybe a
198:56 - slightly different approach for the
198:58 - articles
198:59 - now the section tag is going to be
199:01 - what's going to be full width on desktop
199:04 - inside the section tag we're going to
199:05 - add a child element which has the
199:07 - container class that we've been using
199:08 - and if we look at the features section
199:10 - again we see
199:12 - there's a feature underscore underscore
199:13 - content with some container classes
199:16 - and we're going to use those same ones
199:18 - down in the article section
199:19 - so let's add that now so add a div
199:23 - just by doing that dot for the class
199:25 - shortcut and we'll say
199:26 - article singular underscore underscore
199:31 - let's say content and we'll
199:34 - probably give it the same container
199:36 - actually container
199:38 - dot container dash dash p-a-l
199:42 - which is the class for padding all
199:45 - meaning
199:46 - it'll add the padding all the way around
199:48 - on each of the four
199:50 - sides and in the article content i think
199:54 - what we want to do
199:55 - is um let's see what i did for the
199:58 - previous thing
199:59 - okay yes so we're using h2 tag for the
200:02 - intro section and then we'll add
200:04 - probably the same
200:04 - article grid type of thing
200:08 - so we'll say class article
200:14 - actually let me look at the design
200:17 - so there's actually no like intro
200:19 - paragraph like the feature section so it
200:21 - just has that h2
200:22 - so i think i can get away with just
200:24 - writing h2
200:26 - and then we'll copy the text over
200:30 - latest articles then under the h2
200:34 - we'll add another div and we'll say
200:37 - article
200:38 - grid
200:41 - and then in the article grid that's
200:43 - going to be our css grid parent element
200:45 - so then we'll add the child elements
200:47 - we'll say article
200:49 - i like to just say item for grid grid
200:52 - items whether it's flexbox or css grid
200:55 - so each each article is going to have a
200:57 - wrapper of article
200:59 - item now going back to the design again
201:02 - we can see that in each article item
201:04 - there's an image on top
201:05 - and then there is some sort of text
201:07 - content below that so you can kind of
201:09 - break this
201:10 - up into two different sections so what
201:13 - i'm going to do
201:14 - is say in the article item we'll say
201:17 - article underscore underscore image
201:21 - and then below that we'll do article
201:24 - underscore underscore and maybe i'll say
201:26 - text
201:28 - and that's going to contain all the text
201:30 - in the article
201:32 - now the reason i'm going the reason i'm
201:33 - wrapping all the text in one
201:35 - div article text is because of this
201:39 - padding all the way around
201:41 - so if i didn't add the article text i
201:43 - would have to basically add the
201:45 - left and right padding to each
201:46 - individual text element
201:48 - and then i would have to add the top and
201:49 - bottom padding or margin whichever one
201:52 - you want to the first and last element
201:55 - so i
201:55 - i personally think in this case it's
201:57 - just simpler to wrap all the text in one
202:00 - div
202:00 - element and then add a padding all the
202:03 - way around
202:04 - it's just a little bit less coding
202:07 - involved
202:09 - okay so we got the article image and
202:12 - when you have an image you always have
202:13 - to ask yourself do i want
202:16 - the choosing and when you have an image
202:18 - you always have to ask yourself
202:20 - all right do i want to use an image tag
202:22 - or do i want to use a background image
202:24 - and one way you can sort of help figure
202:27 - out which
202:28 - approach is better is if we look at the
202:30 - design
202:31 - let's let's take this dollar image and
202:34 - maybe i'll just delete this i don't
202:36 - really need that rectangle
202:37 - so if we look at the dollar image you
202:39 - can see that it's the same image of
202:41 - course
202:41 - but the cropping is a little bit
202:43 - different between desktop and mobile
202:46 - so here it's more squarish and if you
202:49 - look at the mobile
202:50 - you can see that the right edge goes
202:52 - just out a little bit farther it kind of
202:54 - cuts off
202:55 - on desktop right at the corner of that
202:57 - one bill
202:59 - the same goes for the left side you can
203:00 - see that cuts off here
203:03 - and it's a little bit longer on the left
203:05 - side as well
203:06 - so that kind of tells me that i probably
203:09 - want to use a background image
203:11 - for the image element that way you can
203:13 - crop it to different sizes
203:15 - and you're not going to you know adjust
203:18 - the size of the image or
203:20 - make it look kind of weird so in that
203:23 - case
203:24 - for the article image there's not going
203:25 - to be any actual content
203:27 - but i will add the background image
203:30 - using
203:31 - background image url
203:35 - and then we need to add the url of
203:37 - course of the image so if we go into
203:40 - our images folder it's going to be one
203:44 - of these
203:45 - it's probably going to be one of these
203:47 - image files here
203:49 - so this one's going to be image currency
203:50 - jpeg
203:52 - so we'll add that in so we'll start off
203:55 - with slash
203:56 - images and then image dash
204:00 - currency and i hope that
204:04 - is that right yeah the images folder is
204:07 - not in the app folder but it's in its
204:08 - own
204:09 - folder image image currency.jpg
204:15 - okay then let's add the markup for the
204:19 - text so if you look at the text item
204:23 - there is first an author section then
204:26 - there's a title of the blog post
204:28 - then there's a either a description or a
204:31 - summary
204:32 - um you know you can call this anything
204:35 - you want
204:37 - so let's write the markup this is going
204:38 - to be author title and then description
204:42 - so i'll say article author
204:49 - title
204:52 - description
204:57 - okay and then we'll just kind of copy
204:59 - those over as well
205:15 - there is an ellipsis at the end of that
205:17 - description just because
205:18 - it's a shortened blurb so we'll just
205:21 - copy over that ellipsis symbol as well
205:25 - okay now let me add a space here just to
205:27 - kind of
205:28 - differentiate the item from the grid
205:30 - itself
205:33 - there we go there we go
205:36 - and let's see you know there's one more
205:39 - thing that we probably want to do
205:40 - and that is when you have a grid like
205:43 - this if it's for blog posts or whatever
205:45 - it's usually going to be a link and
205:47 - there's no you know read more link
205:49 - in the design so what i'm going to do is
205:52 - make the entire
205:53 - item a an anchor link and that's usually
205:57 - i think the preferred way of doing it
205:58 - because
205:59 - even if you hover over the image you'd
206:01 - like you'd like to be able to
206:03 - click over to the blog post itself
206:06 - anywhere you click on this section
206:08 - so i think what i can do is article item
206:12 - i'm going to make that an anchor link
206:15 - and then we'll add href and of course
206:18 - it's not going anywhere so we'll just
206:19 - say pound
206:21 - okay so i think we got all the markup
206:24 - that we need
206:25 - i'm just going to do the styles just for
206:28 - this first article item just to make
206:29 - sure everything's correct
206:31 - then once everything's been kind of set
206:33 - and we know that it's correct
206:36 - then once we figure out all the styles
206:38 - for this we can copy it
206:40 - for the additional three items so
206:43 - to start off with the styles in our scss
206:46 - folder
206:47 - i'm going to create a new file i'll call
206:50 - it
206:51 - article.scss and of course
206:54 - since we created a new sas file we need
206:56 - to import it so we'll say
206:57 - import article
207:02 - all right so we should be adding the
207:05 - article sas file to the watch
207:07 - now let me scoot this over to the other
207:12 - side
207:16 - so the first thing i want to do is
207:18 - remember we made the section
207:19 - tag have a class of articles so
207:24 - i'll add some styles for that just in
207:27 - case we need it
207:29 - and then we'll add article
207:36 - so we'll add content
207:40 - grid
207:43 - item so i'm just you know i'm just
207:45 - copying all the classes i created in the
207:47 - next html file
207:49 - over to the sas file so
207:52 - image text
207:58 - uh oops author
208:03 - title and description
208:10 - all righty
208:14 - and i may delete this if we don't end up
208:17 - writing any styles for it but
208:19 - i think we'll be okay all right going
208:22 - back to the design
208:23 - we need to figure out what the
208:24 - background color of this is
208:27 - and it's very faint but it seems like
208:29 - the
208:30 - blog posts themselves are white and then
208:32 - this background is a very light gray
208:34 - so it's probably the same as what we
208:38 - had in the hero section so that's going
208:40 - to be a style rule for the articles
208:43 - section tag
208:46 - so background color and if we look in
208:49 - our variable sas file
208:50 - i'm going to be this very light gray
208:53 - color here
208:54 - so we'll do that
208:58 - and then see how that looks
209:05 - there we go so here's what we got so far
209:07 - we can see that
209:08 - because i did make the article item an
209:10 - anchor link it's
209:12 - has that purple link text and it's
209:14 - turning into the the hand when you hover
209:16 - over it
209:17 - but it does look like the background
209:18 - color is correct so i think that is
209:21 - just fine for now okay so the next thing
209:24 - we want to do is let's get the css grid
209:26 - stuff working
209:27 - so for article grid
209:31 - i want to
209:34 - set let's just say
209:38 - display grid for all widths even mobile
209:42 - just to just to do it that way
209:57 - okay now the first thing i'm going to do
209:59 - is i'm going to
210:00 - start writing the styles for css grid
210:03 - now even though mobile is just one
210:05 - column i think i'm still going to do
210:06 - display grid for mobile
210:08 - and then also tablet and desktop just to
210:10 - see if that's
210:12 - you know a good way of approaching this
210:14 - so we'll turn on grid
210:15 - with display grid now unlike flexbox if
210:18 - you
210:18 - write display grid just by itself with
210:21 - no other styles
210:22 - nothing is going to visibly happen
210:25 - and that is because for grid you need to
210:29 - not only set grid display grid but you
210:32 - also need to start
210:33 - creating your template this is one of
210:36 - the core differences between flexbox and
210:38 - grid
210:38 - flexbox is more of a content first
210:40 - approach so once you turn on flexbox
210:43 - for the flex parent it's going to just
210:44 - try to fit all the flex child items
210:47 - on the same row by default for grid you
210:49 - need to set the template meaning you
210:51 - need to set up
210:52 - the number and the size of the columns
210:54 - and or rows
210:56 - in in the layout so for our layout it's
210:59 - a four column layout for desktop
211:00 - two column tablet one column mobile so
211:02 - since mobile is just one column we'll
211:04 - say
211:04 - grid template columns
211:08 - and we just want one column so we'll say
211:10 - one fr
211:12 - and fr is a fractional unit it's kind of
211:15 - a
211:16 - general ratio unit um
211:20 - used for css grid meaning it will take
211:22 - up as much space as possible
211:24 - and if there's more than one child item
211:26 - in the column or the row it'll sort of
211:28 - divide the space up
211:29 - between those child items depending on
211:31 - the number so 104 is kind of the default
211:33 - like
211:33 - you know auto kind of width so mobile
211:37 - just has one column
211:38 - now let's add the grid template for
211:40 - tablet so we'll use our
211:43 - mixin that we wrote breakpoint dash up
211:46 - and for medium widths we're going to say
211:49 - grid
211:49 - and you can actually um abbreviate if
211:52 - you just type in gtc
211:55 - it has this really cool intellisense and
211:57 - it'll automatically detect
212:00 - so for tablet we want two columns so
212:03 - we're going to use the repeat function
212:05 - this is super handy for grid so repeat
212:08 - takes two parameters the first one is
212:09 - going to be how many columns you want to
212:11 - use
212:12 - we want two so you say two comma and
212:15 - then again we'll say one fr
212:17 - so this will basically create a layout
212:19 - that has two columns and they will each
212:21 - be the same
212:22 - with one fractional unit
212:25 - lastly we'll do desktop styles so break
212:28 - point up
212:30 - large and then again we'll say gtc
212:34 - and instead of two we'll say four so
212:37 - four comma one f
212:38 - r so this is just your sort of
212:42 - standard run-of-the-mill grid where you
212:44 - have a multi-column layout
212:46 - for different and the number of changes
212:48 - based on your device width
212:50 - so let's see what this looks like right
212:52 - now okay
212:53 - oh this is interesting so instead of
212:55 - taking up the full width
212:56 - you can see that this article is taking
212:58 - up only part of the width
213:01 - that's because we set
213:04 - four columns in that grid template so if
213:06 - we look at article grid
213:08 - i'm using firefox and they have a really
213:10 - helpful tool if you click on the layout
213:13 - tab
213:14 - and we expand grid so
213:17 - it detects the that this is a grid item
213:20 - because
213:20 - you know has display grid so if i check
213:22 - this box it's actually going to create
213:24 - lines it'll number the different columns
213:26 - and rows in the template that we made
213:28 - so remember we just created a four
213:30 - column layout in this grid thing
213:32 - so it's showing us the four columns in
213:35 - the grid template so if we added more
213:36 - items
213:37 - it would populate this grid so let's
213:40 - actually do that now
213:41 - i'm guessing the markup's probably okay
213:43 - so we'll
213:45 - take this we'll duplicate it one two
213:47 - three times
213:48 - save and go back to our
213:52 - browser so now we can see that the four
213:54 - columns are actually working which is
213:56 - pretty cool
213:57 - so let's let's see how this looks on
213:58 - tablet so we'll reduce the width
214:01 - and it went to two columns and then
214:04 - one column for mobile so
214:08 - yeah this is a pretty you know with just
214:12 - a few rules we've already
214:13 - sort of created our grid layout which is
214:15 - pretty cool
214:20 - so for css grid the approach that we
214:22 - used
214:23 - is a very sort of responsive design
214:25 - approach meaning we're using media
214:27 - queries
214:28 - to change the grid template and change
214:30 - the number of columns
214:32 - there are some there is another approach
214:35 - you can use with grid
214:37 - that is more intrinsic design meaning
214:40 - you don't have to use all these media
214:41 - queries because there are some
214:43 - built-in properties that can sort of
214:45 - figure out
214:46 - and adjust how the layout actually looks
214:49 - depending on the width of your browser
214:51 - so i'm going to show you one of those
214:53 - now and then i'll explain why i actually
214:55 - prefer this method
214:56 - with the media queries so let us
215:01 - let's just comment out everything except
215:04 - display grid so control
215:05 - k control c we'll comment that out in vs
215:08 - code
215:09 - and what you could do is for your grid
215:11 - template columns
215:12 - property we can use something called
215:17 - autofit and then also another function
215:19 - called min max and i'll explain what
215:20 - each of those
215:21 - is once we write out this rule
215:25 - so if you remembered we for the desktop
215:28 - oh wait i think i have an error here um
215:32 - no it should be okay i think okay
215:36 - so if you look down in the desktop rule
215:39 - we had previously it said grid template
215:40 - columns and then use the repeat function
215:43 - we're going to do something similar here
215:44 - so we're going to say repeat
215:48 - but instead of writing an actual number
215:50 - like
215:51 - 4 2 we're going to say auto
215:55 - fit and this is a property that
215:58 - sort of lets grid decide how many
216:00 - columns are going to actually be
216:02 - on the website which is pretty cool
216:04 - right you don't have to say two or four
216:06 - it'll sort of decide for you
216:08 - and then for the width of each column
216:11 - we're going to
216:12 - use min max so instead of saying
216:16 - you know i want this column to be 200
216:17 - pixels wide or 1fr or 2frs
216:21 - we can sort of again give the grid
216:24 - itself
216:25 - the basically the control over how wide
216:28 - things will be
216:29 - as well as how many columns are going to
216:30 - be on the row
216:32 - so minmax as the name kind of sounds you
216:35 - give it a minimum and then you give it a
216:36 - maximum width
216:37 - in the parameters so the minimum width
216:39 - we're going to say
216:41 - let's go back to the design really quick
216:43 - and
216:44 - this square so this is about 200 pixels
216:48 - wide
216:49 - so we'll say that for the minimum we'll
216:51 - say about 200 pixels
216:53 - maybe a little wider let's say to 230
216:56 - perhaps
216:58 - and usually i should convert that to rem
217:00 - so
217:01 - let's do that open the calculator
217:05 - and 230 divided by 16 is 14.375
217:10 - so 14.375 rams
217:13 - and then the maximum we'll say 1fr right
217:16 - so
217:17 - this will basically give the grid
217:20 - column either a width of
217:24 - you know 230 pixels 14 rems minimum or
217:27 - it could be all the way up to 1fr so it
217:29 - could theoretically
217:30 - take up the entire space of the row and
217:33 - this is actually all you need
217:35 - so let's kind of see what that does to
217:38 - our
217:39 - grid in the browser so it looks the same
217:42 - on desktop there's four items and
217:44 - they're all in the same row
217:46 - and each item is currently 265 pixels so
217:50 - that is above that is between the min
217:52 - min width of 230 pixels
217:54 - and obviously one fr could be 100
217:56 - percent let's see what happens when we
217:59 - take the browser with and we slowly
218:00 - reduce it
218:03 - okay still four okay so now you can see
218:05 - it broke to
218:06 - three columns and then there's three
218:08 - items on one row and then
218:10 - one item by itself on the second row
218:12 - we'll just kind of keep going here so
218:14 - now it's
218:15 - broken into two columns and then
218:18 - for mobile it is one column
218:21 - and this is actually really this is one
218:24 - of the i think
218:26 - this is one of the great parts of grid
218:27 - where with simply one
218:30 - rule in the in the grid parent grid
218:32 - template columns using repeat auto fit
218:34 - and min max it created this one column
218:37 - two column three column up to four
218:39 - column layout
218:40 - so you know this is
218:43 - pretty cool
218:47 - now you know why did i mention that i'm
218:50 - not
218:50 - going to use this approach well even
218:52 - though it is awesome that we can write
218:54 - this rule
218:55 - and create a multi-column layout without
218:56 - using any media queries
218:58 - i know that in real life if the design
219:01 - has
219:02 - four items and they want it in one row
219:05 - for desktop
219:06 - they may not be super happy when you
219:09 - have a layout like this
219:10 - where it looks uneven and let me show
219:13 - you let me kind of highlight that by
219:15 - hiding the grid lines so we'll just
219:18 - pretend that there's lines around each
219:20 - of them
219:20 - let's do that uh particle item
219:24 - border one pixel solid red
219:28 - so around each of these items now is the
219:31 - the
219:32 - um throughout each of these items
219:34 - there's a line now
219:36 - so you know this looks a bit uneven
219:39 - right
219:42 - so this looks a little bit uneven i
219:44 - think most people
219:45 - if they want to show four items they're
219:47 - not going to want it to look like this
219:50 - it looks better when it's even and
219:52 - there's just two two and two
219:54 - and of course it's fine when it's on
219:56 - mobile and it's just one column
219:58 - but this in-between state is not
220:01 - really desirable i would say and
220:04 - unfortunately that's just kind of the
220:06 - way that's kind of what happens when you
220:07 - let grid
220:08 - control you know the number of columns
220:10 - using autofit
220:11 - and then the width using the min max
220:14 - function
220:15 - so even though there's more rules
220:18 - for the sake of you know kind of
220:20 - maintaining control over that grid
220:23 - i'm going to go back to the media query
220:26 - thing
220:27 - um and for auto fit
220:30 - i don't know if i explained that fully
220:32 - but
220:34 - you go back to turning on the grid lines
220:36 - and then
220:37 - turning off the border
220:41 - so for autofit what happens is it will
220:44 - fit the items as well as it can in the
220:48 - template
220:49 - and the
220:53 - the other option instead of autofit is
220:55 - you could say auto
220:56 - fill and they're very similar but not
220:59 - quite the same
221:00 - let's see if we can see the difference
221:01 - here
221:07 - it doesn't seem to be different
221:10 - for us but let me just show you
221:15 - um there's a really good article on css
221:16 - tricks for auto fit
221:18 - auto phil
221:24 - okay yeah sarah sweden
221:28 - i'm sure this great article comparing
221:30 - what autofit and autofill look like
221:33 - so in this example you can see autofill
221:36 - will
221:37 - create the template but it's not going
221:40 - actually all the way across
221:41 - whereas auto fit will kind of try to fit
221:43 - the content to the row
221:45 - and then if you go down a little bit
221:47 - more i believe there's an animated
221:48 - example here
221:51 - so if you look at this the top one's
221:52 - auto fill so you can see there's
221:54 - actually a blank
221:55 - column when you keep extending it out
221:57 - whereas autofit
221:59 - will you know fit the existing content
222:03 - to
222:04 - the row so that's one difference between
222:06 - autofill and autofit
222:09 - again you know maybe it's
222:12 - you know not maybe it's best practice to
222:15 - use this kind of
222:23 - so that's autofill and autofit um again
222:26 - going back to our own website i'm going
222:28 - to go back to the media queries just
222:31 - because i like having that extra layer
222:32 - of control
222:33 - but this is also an option and it can
222:35 - definitely come in handy
222:36 - um in in other circumstances
222:40 - let's go back and we will delete this
222:44 - and then we will uncomment control k
222:47 - control u
222:48 - there we go we'll save go back to our
222:51 - site
222:52 - and we're back here
222:58 - there we go browser is a little slow
223:01 - sometimes
223:02 - so two columns on tablet and one column
223:04 - on mobile
223:06 - and it goes back to four columns for
223:08 - desktop
223:10 - so if that helps just kind of explaining
223:12 - sort of the basic
223:13 - this is a fairly basic css grid layout
223:16 - i'm using the grid template columns
223:17 - property
223:18 - and then you can designate how many
223:21 - columns you want with the repeat
223:22 - function and
223:23 - also how what size each of the columns
223:25 - are
223:27 - let's get started now actually styling
223:28 - the content in the articles themselves
223:34 - all right now let's start styling the
223:35 - cards themselves
223:37 - so we'll probably start with the image
223:39 - up here
223:40 - and then we'll move on to the text
223:42 - elements
223:43 - so using our little rectangle here see
223:46 - that it's about
223:47 - 200 pixels tall so let's go into our
223:50 - code editor
223:51 - and add those styles in so this is going
223:53 - to be for the
223:54 - article image element so down here
223:57 - article image we'll say height of 200
224:00 - pixels
224:02 - and we do need to use our calculator for
224:04 - that so
224:05 - 200 divided by 16 is 12.5 rams
224:11 - and then since these are also background
224:14 - images
224:15 - let's add some of those background
224:17 - properties
224:18 - so background size cover
224:21 - so this will ensure that it will take up
224:23 - the entire div
224:26 - then background repeat and i pretty much
224:29 - always
224:30 - turn repeat off and then the other one
224:33 - light and then
224:34 - background position center center
224:37 - to make sure it's centered i think those
224:39 - should be good for now so let's check
224:42 - the site and see how that looks sweet so
224:45 - the images are
224:46 - loading up um looks like we forgot to
224:48 - add a gap
224:50 - in our grid parent properties let's do
224:52 - that
224:53 - so if we go back up to the article grid
224:56 - we'll add a gap
224:59 - of maybe 20 pixels
225:03 - and 20 divided by 16 and 1.25
225:10 - grams so that looks pretty good
225:14 - um let's actually compare that with the
225:15 - design i think we got might be a little
225:17 - bit more than that
225:19 - just more like 30 pixels
225:24 - so 30 divided by 16 is 1.875
225:29 - okay and i don't know if you notice but
225:33 - down here in the
225:34 - terminal for some reason it always
225:37 - throws an error when you start adding
225:38 - the gap property i think there's just
225:40 - maybe a bug in the live sas
225:42 - extension but if we re-watch it
225:45 - then everything's fine and there's no
225:46 - errors
225:49 - okay so that looks pretty good um
225:52 - let's see what else do we need to do
225:54 - here
225:56 - did i do the background i think i did do
225:58 - the background for the whole section
226:01 - let's just turn off the lines for now
226:04 - um okay so after the image we
226:08 - have the text here and i'm going to make
226:10 - that a white background color since
226:12 - you can see in the design this is what
226:14 - the text area has
226:16 - so let's do that and let's also add some
226:18 - padding
226:20 - so let's see
226:24 - here
226:30 - looks like it's about 30 so let's see if
226:32 - it's the same on the
226:33 - bottom looks like it's a bit less on the
226:36 - bottom but i might just make it 30
226:38 - all the way around i don't see what the
226:40 - horizontal padding is
226:42 - looks like it's less it's about 25 on
226:45 - the sides and then 30 on top and bottom
226:48 - and let's see what we got on mobile as
226:50 - well
226:52 - looks like it might be a little bit more
226:54 - on mobile
226:56 - so the side padding on mobile is
227:00 - 30 i guess around 30.
227:03 - and then let's see what the bottom
227:05 - padding is
227:06 - 44 on the bottom
227:10 - and then it looks like it's less on the
227:12 - top
227:13 - 30. it looks like for i might just make
227:16 - them all the same
227:19 - 30 all the way around well i guess on
227:21 - mobile
227:22 - should have a little bit more space on
227:23 - the bottom
227:26 - let's see if it's the same yeah it looks
227:28 - like all these have much bigger
227:30 - bottom padding that's fine we'll do
227:32 - maybe 40.
227:34 - so 40 on the bottom and then the other
227:36 - sides will be 30 for mobile
227:38 - and then on desktop i believe it was 30
227:40 - on top and bottom
227:42 - and then 25 on the sides is that right
227:47 - okay around 30 for the top and then 20
227:50 - yeah we'll do 25
227:52 - okay
227:56 - this is going to be the article item
227:58 - element
228:00 - we'll do the mobile padding first so
228:01 - padding oh
228:03 - caps lock padding so it's going to be
228:07 - 30 divided by 16 and 1.875 rems
228:13 - and then we'll do the same thing for
228:16 - everything except the bottom
228:18 - and then the bottom is going to be i
228:20 - think did i say 40 room
228:22 - or 40 pixels 2.5 grams
228:27 - there we go then we're going to do
228:32 - for i guess tablet
228:36 - medium and desktop we'll say
228:39 - padding and i think we said
228:43 - 30 on top and bottom
228:46 - and then 25 on the sides 25 divided by
228:50 - 16 1.5625
228:55 - there we go okay let's see what we got
229:01 - um
229:04 - oh i know why the padding shouldn't be
229:07 - on the article item it should be on the
229:08 - article
229:10 - text so just for the text that's okay
229:14 - let's fix that move the padding down
229:17 - there
229:20 - there we go that's much better okay we
229:22 - also need to add a background color to
229:24 - the article text
229:28 - color and i think white made a variable
229:31 - for that
229:31 - yeah okay there we go
229:35 - so i mean it's a little hard to see
229:36 - since it's a very light gray in the
229:38 - background but
229:39 - that is what the styles are and i
229:41 - believe there's also a border radius
229:44 - around the whole
229:45 - card as you can see the the
229:48 - corners are slightly rounded all the way
229:50 - around so let's add a border radius
229:54 - um it doesn't look like it's very round
229:56 - so
229:57 - i might do something like 5 pixels so 5
230:01 - divided by 16
230:04 - 0.3125
230:06 - and we'll just do it all the way around
230:08 - and one thing you need to keep in mind
230:09 - with border radius is that
230:11 - sometimes in order for the border radius
230:13 - to actually show up and sort of
230:14 - cut those corners you need to add over
230:17 - um
230:18 - overflow yeah overflow hidden
230:22 - so that'll make sure that the actual
230:24 - rounded corners will show up
230:27 - cool that looks pretty good
230:30 - okay so let's do the text starting from
230:33 - the top
230:34 - just working our way down so the first
230:37 - part of this card text is the
230:40 - author section and this looks like it's
230:43 - quite small
230:44 - let's say yeah it's probably around
230:48 - 10 i would say 10 pixels tall
230:52 - so let's do that so here we go
230:56 - author font size it's going to be
231:00 - 10 divided by 16. 0.625
231:04 - i'm assuming it's going to be the same
231:06 - for both mobile and
231:08 - tablet and desktop now let's move on to
231:11 - the title
231:14 - it looks like it's a darker gray and is
231:17 - bigger
231:19 - so about maybe 17 or 16.
231:26 - let's do 17.
231:31 - so font size 17 divided by 16
231:36 - 1.0625
231:40 - and then for the description
231:44 - looks like it's bigger than 10 pixels
231:45 - since it's bigger than the author
231:48 - but not too much it's about 13.
231:51 - that's a bit small
231:55 - 13 divided by 16 is 0.8125
232:00 - rims okay now let's see how that looks
232:05 - looks pretty good now of course we do
232:07 - need to do the colors right now since i
232:09 - made the whole
232:10 - article item and anchor tag it has that
232:13 - purple link color
232:14 - so we'll adjust those but size wise that
232:17 - looks
232:18 - fairly good we might need to tweak the
232:20 - line height a little bit
232:22 - but let's do those font colors so it
232:23 - looks like the author
232:25 - and the description are the regular gray
232:28 - that
232:29 - you know we saw kind of up here and the
232:31 - title is the same
232:32 - darker gray as the title up there
232:36 - let's do that so since we have both
232:39 - author and description the same color
232:41 - what i might do to make it slightly more
232:43 - efficient is in the
232:44 - article text i'm going to add the color
232:46 - property there
232:47 - and then i will make the different
232:49 - darker gray color for just the article
232:51 - title
232:53 - so if we go into our variables that sort
232:55 - of medium gray is probably this grayish
232:58 - blue
233:01 - and then the darker gray is probably
233:02 - this dark blue color
233:06 - or the title
233:12 - there we go okay
233:16 - okay looking much closer so let's now
233:19 - work with the
233:20 - spacing so we need to add some space
233:21 - between the elements and then we'll also
233:23 - adjust the line height on that title
233:25 - looks like it's a little bit too much
233:26 - but first spacing
233:29 - okay below the author is
233:34 - 16 pixels of spacing
233:37 - that's one room so we'll add a margin
233:41 - bottom of one rem to the author
233:44 - then to the title there's some space
233:47 - under that as well
233:49 - um looks like it's a bit less but
233:51 - honestly i'm just going to say 16 as
233:53 - well
233:54 - i think i'm being lazy
233:58 - and then let's see what else we need to
233:59 - do we need to adjust the line height of
234:01 - the title
234:02 - and also we'll check the line height of
234:04 - the description as well
234:06 - so right now seems like there's a little
234:09 - too much line height right here
234:11 - so let's try something like
234:15 - line height and i usually like to put
234:17 - the line height property under the font
234:19 - size property since they're kind of
234:20 - related
234:21 - so 1.15 maybe
234:24 - and i'm just kind of guessing here one
234:27 - like a line height of one means it's the
234:28 - same as the font size
234:30 - 1.15 means it's just just a little bit
234:32 - taller than what the font size is
234:34 - okay so that looks closer which is good
234:37 - um
234:39 - it seems pretty good maybe just tiny a
234:42 - little bit more so maybe 1.2
234:47 - so 1.2 okay
234:52 - i think that's fairly close enough let's
234:55 - check out the line height for the
234:56 - description now
235:00 - i think that's actually pretty close
235:02 - yeah i think that's good enough
235:05 - and it looks like the spacing that we
235:06 - have between the elements is okay as
235:08 - well
235:09 - i feel like there's a bit less spacing
235:10 - here so maybe we should make that
235:12 - a little bit smaller so article title
235:16 - go to the rules tab and right now
235:20 - i think i had set a
235:23 - margin bottom of 16 pixels or one rim
235:27 - so let's adjust this so 16 pixels is a
235:30 - little too
235:30 - big so let's try 14
235:33 - looks much closer on the design so maybe
235:36 - 10 pixels
235:39 - looks like it might be less than that
235:40 - actually
235:42 - maybe eight pixels
235:52 - okay let's do eight i feel like there's
235:54 - less
235:55 - spacing under the author as well i'll
235:58 - just copy this over first margin volume
235:59 - of 8 pixels
236:02 - article title
236:05 - 8 divided by 16 is 0.5 grams
236:11 - because i could have done the math
236:12 - because 16 divided by 2 is 8 anyway
236:15 - and the author well what happens if we
236:19 - just do the same thing
236:20 - 0.5 rooms
236:24 - it does look a bit better i think
236:30 - there's still a little bit more space
236:31 - under the author so we'll just tweak
236:33 - that a bit so instead of eight pixels
236:35 - let's say maybe 12
236:40 - 12 pixels
236:44 - 12 divided by 16.75 rams
236:52 - okay so i think that looks alright
237:04 - okay so i think our text is pretty good
237:06 - actually
237:07 - so now let's add the proper images and
237:11 - copy for each of these
237:13 - articles so in our next html file
237:18 - we will adjust that just copy these all
237:21 - over
237:30 - i guess we can just cut it since we're
237:32 - not don't really need to
237:34 - keep it
238:17 - this is already there
238:43 - okay so let's do the images so in the
238:46 - design it's the currency then it's like
238:48 - a restaurant then
238:49 - a plane with clouds and then confetti
238:52 - so restaurant plane confetti
238:56 - we look on our images folder image
239:01 - restaurant oh i had the name right
239:06 - restaurant and the second one was plain
239:10 - and then confetti
239:15 - all right let's see how this looks it
239:17 - looks pretty good
239:21 - so if we take it down comes two columns
239:24 - and then one column on mobile
239:26 - this is pretty good
239:29 - not too shabby so one extra thing that
239:33 - i'm going to add
239:33 - is some nice little hover states and i
239:36 - think i'm also going to add a box shadow
239:38 - just to make the card
239:40 - a little more separate from the
239:41 - background so let's add those in now
239:45 - so the box shadow i'm going to add to
239:48 - the article item itself since i want to
239:50 - go kind of all the way around
239:52 - so article item say box shadow
239:56 - and for box shadow it takes a bunch of
239:58 - different parameters so let me just type
240:00 - them in
240:00 - first and then explain what they are
240:05 - okay so in box shadow the first two
240:09 - numbers are the position of the shadow
240:12 - so the first
240:12 - zero pixels will control the horizontal
240:15 - position so i want it to be probably in
240:17 - the center so i'll leave that as zero
240:18 - pixels
240:19 - the second zero pixels is the vertical
240:22 - position
240:22 - and usually for shadows it's better to
240:24 - make it a little bit down from
240:26 - the object itself so it seems more like
240:28 - a real shadow
240:29 - so we'll maybe adjust that to be three
240:32 - pixels
240:32 - and i'll convert these two rams once
240:34 - we've kind of finalized everything
240:36 - and the last number parameter is the
240:38 - spread so
240:40 - it's kind of how diffuse versus how like
240:42 - hard
240:43 - line of a shadow it is so i tend to
240:46 - do at least 10 pixels maybe 12
240:50 - pixels for the spread and we can of
240:52 - course tweak that as we
240:54 - see fit and then the last one is the
240:56 - color of the shadow and for shadows
240:58 - i usually like to use a semi um
241:00 - transparent shadow so what i've done is
241:02 - use rgba
241:04 - 0 0 0 which means black and then the
241:06 - last
241:07 - last number here is the alpha channel
241:08 - meaning the opacity
241:10 - and i've set that to 0.15 which means
241:13 - basically 15
241:14 - opacity so it's it's pretty semi it's
241:17 - pretty transparent
241:19 - um okay so let's
241:23 - see how this looks
241:27 - oh there we go so we got a nice shadow
241:29 - here okay looks like we have some issues
241:32 - down here where the white doesn't go all
241:35 - the way down to the bottom so i think we
241:36 - need to figure that out
241:39 - um
241:43 - so let's see what's going on here
241:48 - article item goes all the way down there
241:51 - article image and then article text so
241:53 - it seems like
241:55 - because the text on the first two is
241:57 - shorter
241:58 - than the last two because you can see
242:00 - there's only four lines for the first
242:01 - two
242:02 - in the description but there's five
242:04 - lines for the description for the last
242:06 - two that's why they're taller
242:09 - so one thing i could do to fix that
242:14 - is maybe set the background color of
242:17 - article item
242:22 - white so now it's like
242:25 - that so let me try moving the background
242:28 - color to the article item instead of the
242:30 - article text
242:31 - see if that fixes the issue
242:37 - let's do here
242:40 - okay much better good
242:43 - let's make sure everything looks okay
242:45 - even when we're changing the width
242:47 - okay
242:51 - all right good
242:56 - now the next thing we want to do is i'm
242:58 - actually going to add a little hover
243:00 - state so it just looks nice you know
243:03 - when the these little i guess you can
243:05 - call micro interactions so
243:07 - the website kind of responds to the
243:09 - different actions you take so i want
243:10 - this to
243:11 - change in some way when i hover over
243:14 - each card
243:15 - and one thing i do a lot is
243:18 - scale it up slightly when you hover over
243:21 - it
243:22 - so let's try adding that and we'll do
243:24 - that to the entire article item as well
243:28 - so we'll add the hover selector and on
243:31 - hover we want to transform
243:33 - and we'll increase the size by using
243:35 - scale and then
243:36 - in the scale function we can set what we
243:39 - want to scale to
243:40 - scale of one means a hundred percent so
243:42 - it won't change at all so we want to be
243:44 - slightly more than 100
243:46 - but not too much so maybe 1.05
243:49 - so that would be 105 so we're only
243:51 - increasing by five
243:52 - percent so let's try that and see how it
243:55 - looks
243:58 - okay so it is just a bit larger and we
244:01 - also need to add a transition so
244:04 - smoother as well
244:08 - so transition we'll just say all um
244:11 - maybe 150 milliseconds and then ease
244:15 - in out that controls this the smoothness
244:17 - and speed of the animation let's try
244:20 - this now
244:22 - smooth like butter i like that
244:26 - i'm pretty happy with that okay
244:30 - so i think we can
244:34 - actually consider this section done it
244:36 - looks good on mobile
244:37 - obviously on actual mobile there's no
244:38 - real hover state but that's fine
244:41 - tablet two columns
244:44 - desktop four columns so yeah i think
244:48 - that looks pretty good
244:50 - all right so i think all right so i
244:53 - think we can consider
244:54 - this section complete
244:59 - before we get into actually building the
245:00 - footer i wanted to point out a mistake
245:02 - i'd made in a previous video that i just
245:04 - now noticed
245:05 - and the issue that some of you may have
245:07 - noticed already is that there's
245:08 - horizontal scroll bars appearing and
245:10 - this is caused
245:11 - because the hero content the images that
245:14 - we had
245:15 - sort of made offset have forced
245:18 - the container to be wider than the
245:20 - viewport width and that's what is
245:21 - causing these horizontal scroll bars
245:23 - to display all the content so the way to
245:26 - fix that is
245:27 - in our code if we go down in our global
245:29 - sas file to the body
245:31 - selector we can add overflow x
245:34 - hidden so what this is going to do is
245:36 - it's going to
245:38 - trim or cut off any extra content
245:40 - outside the viewport width
245:42 - so now let we go back to the website
245:44 - there's no more horizontal scroll bars
245:45 - which is good but we can still scroll
245:47 - vertically because we only
245:49 - did overflow x hidden not overflow
245:51 - hidden which would
245:52 - cut off anything extra and prevent you
245:55 - from scrolling vertically or
245:56 - horizontally so
245:58 - this is one way to fix issues when you
246:00 - do things like i did like moving things
246:02 - kind of offset from the viewport or if
246:04 - you have an off canvas menu
246:06 - you might need to add overflow hidden to
246:08 - some of the properties
246:10 - so i hope this helps any of you who may
246:11 - have noticed this if you're coding along
246:13 - with me
246:14 - and let's get back now to the rest of
246:16 - our website all right so first things
246:18 - first let's check out our design
246:20 - so we have here the mobile design and
246:22 - then the desktop design open in adobe xd
246:25 - let's take a bit closer look at the
246:26 - mobile version first so
246:28 - in the mobile version we have all the
246:30 - content stacked to one column looks like
246:32 - everything's also centered
246:33 - and the different parts of the footer
246:35 - are the easy bank logo
246:36 - there's some social media icon links
246:39 - then we have some text links
246:40 - a cta button and then at the bottom the
246:43 - copyright info
246:45 - for the desktop version if we go over to
246:46 - that it has the same content however
246:49 - instead of just being in one column
246:51 - the content is split out into four
246:52 - columns so the first column is going to
246:54 - have a logo and social media
246:56 - then we have two columns of the text
246:58 - links and the last column
247:00 - all the way on the right is the cta
247:01 - button and the copyright info
247:03 - all right so now how are we actually
247:05 - going to build out this footer
247:07 - well as in most things we can use
247:09 - multiple different approaches
247:10 - we could use flexbox if we wanted to i
247:12 - think that would be a perfectly fine
247:14 - solution to build out the footer i think
247:16 - i'm going to use css grid
247:17 - and the reason for that is i want to
247:20 - show you all
247:21 - different ways that you can use you know
247:22 - flexbox css grid to do layouts
247:25 - and we did use grid last time with the
247:28 - articles section
247:29 - but for the footer i'm going to try to
247:31 - use a
247:32 - feature of css grid called grid template
247:34 - areas and it's a really
247:36 - cool feature it is a little weird with
247:38 - the syntax until you get used to it but
247:40 - i promise
247:40 - it'll end up being more intuitive as you
247:42 - get along into it
247:44 - so how grid template areas works is you
247:46 - still sort of designate the template
247:48 - meaning the
247:49 - rows and columns in your grid layout but
247:51 - you can use
247:52 - named areas for each of the different
247:54 - areas in your layout
247:55 - and you can use those names to assign
247:58 - where in the grid
247:59 - you want those areas to take up but
248:01 - first let's just get the basic styles in
248:03 - place
248:04 - and i'm actually not even going to use
248:05 - css grid for the mobile design because
248:08 - everything is simply stacked in one
248:09 - column and then centered
248:11 - then when we do the desktop design we
248:13 - will use css grid as well as the grid
248:15 - template areas
248:16 - but the first thing we want to do is we
248:17 - want to create our html markup
248:20 - so i do want to keep in mind what i
248:22 - eventually want to be building for the
248:24 - desktop version so
248:26 - for example i can't just have you know
248:28 - individual social media icons or
248:29 - individual text links just
248:31 - in the footer tag itself i'm probably
248:33 - gonna have to group them together
248:35 - so we can lay out them a bit more easily
248:37 - when we do use grid later on
248:39 - so for example um i would probably have
248:41 - to group
248:42 - the logo or i would have to group these
248:44 - social media icons together
248:46 - in one div same thing with these text
248:48 - links i might
248:49 - group them into two different groups and
248:51 - then at the end
248:53 - i could group the cta button with the
248:55 - copyright info
248:56 - we'll see more as we get into it but
248:58 - we're sort of keeping that in mind as
249:00 - we're building out
249:01 - the layout even though we don't have to
249:03 - use grid for mobile
249:05 - let's go into our code editor vs code
249:07 - and in our index.html file i'm going to
249:09 - start creating the markup
249:11 - okay so i'm going to put everything in a
249:13 - footer tag so
249:14 - footer and i also need to create
249:17 - actually a new sas file so let's go into
249:19 - our app folder
249:20 - scss subfolder i'll create a new sas
249:23 - file called
249:24 - underscore footer.scss
249:27 - so that's open and then of course since
249:29 - we create a new sas file we need to add
249:31 - it
249:32 - in the main sas file so import
249:36 - footer save that and looks like
249:40 - yeah our live sas is working so we'll
249:42 - just close this up
249:44 - and then i'm going to just move the
249:45 - footer over to the right side so we can
249:47 - see both
249:48 - index.html as well as our styles so in
249:51 - our footer tag we're going to
249:53 - start adding the different content that
249:55 - we need so the first thing was the logo
249:57 - so the logo is usually going to be a
249:59 - link so
250:01 - i'll say anchor link i'm just going to
250:03 - make the href a
250:04 - pound and in the link it's actually an
250:07 - image because it's just loading that
250:08 - logo image
250:09 - so we'll add the image tag
250:12 - and we'll say source is images
250:16 - and let's see it's a logo probably this
250:19 - logo svg
250:22 - so that's going to be the logo and i
250:24 - guess we'll give it we'll start giving
250:25 - things a class as well
250:27 - um so first thing i'm going to do is
250:29 - give the footer tag a class of footer
250:32 - i know that seems kind of redundant but
250:34 - in our sas file over here
250:36 - it makes it easier to sort of follow the
250:39 - bem or block element modifier
250:41 - approach because the class of footer
250:44 - will be
250:45 - sort of the root and then everything
250:46 - else comes from that so for example
250:48 - for the logo we're going to give it a
250:49 - class of footer underscore underscore
250:52 - logo so then the same thing in the sas
250:56 - file will follow that pattern
250:57 - underscore underscore logo and the
251:00 - ampersand again just means that it
251:01 - inherits the root which is footer
251:05 - okay let's go on to the next section so
251:07 - under the footer was
251:09 - i believe some social media links so
251:12 - we'll create a div
251:13 - called footer i'll just say social
251:17 - so in this div we need to add all of our
251:21 - social media links so since they're
251:22 - links so again we'll add some more
251:24 - link elements and i'll just again do a
251:27 - pound for the href since
251:29 - there's they don't actually exist and
251:31 - then again each link is going to be i
251:33 - believe an image so
251:35 - image and the source should also be in
251:38 - the images folder
251:40 - and let's see which one was first
251:44 - so in our design so it's facebook
251:46 - youtube twitter pinterest instagram
251:48 - so facebook's first so images
251:53 - images and it looks like icon facebook
251:58 - and then i'll give it an alt of facebook
252:01 - so i'll do the same thing
252:03 - for the other links and
252:07 - i think there were six total yeah it's
252:10 - not a five
252:11 - so let's duplicate this by selecting it
252:14 - and then pressing ctrl d
252:18 - so there's five so i think the second
252:21 - one
252:22 - was youtube and then twitter
252:25 - so youtube i'm guessing it's just called
252:28 - yeah youtube then twitter
252:33 - and then change to alt
252:37 - i think pinterest was the next one
252:41 - and the last one was
252:44 - instagram
252:48 - there we go
252:52 - so we got the social links and then
252:55 - let's kind of go look back at the design
252:59 - so after the social links were the text
253:01 - links so
253:02 - as i mentioned earlier i'm going to
253:03 - create two groups of text links
253:07 - so let's say
253:10 - footer links then i'll add maybe another
253:13 - helper class
253:14 - and we'll just say uh link maybe
253:18 - column one there we go
253:21 - and then we'll add our links
253:25 - oops a
253:29 - link and the links was
253:33 - the text here so we'll just copy this
253:36 - over
253:37 - i think it was three per group
253:46 - and then we'll duplicate this
253:51 - so this will be footer links column two
253:55 - and i'll just replace the text
254:01 - [Music]
254:04 - okay about his contact blog career
254:06 - support privacy policy let's just double
254:08 - check and make sure
254:09 - yep that looks right okay and then
254:13 - last one is going to be the cta and i'm
254:16 - going to create one group to
254:17 - enclose the cta as well as the copyright
254:20 - so i'll say footer i'll just say cta
254:24 - even though
254:24 - the copyright's in there too and the
254:27 - first thing will be the button so i'll
254:29 - say
254:29 - a class of button
254:34 - and then the text was request invite
254:38 - this is basically the same button that
254:39 - we've had um earlier in the web
254:42 - website and below that is going to be
254:44 - the copyright info and i'm
254:45 - i'm going to make a separate div for
254:47 - that so footer
254:49 - copyright
254:53 - um easybank all rights reserved i may
254:58 - have deleted that somehow
255:01 - so i think the symbol is copy
255:05 - easy bank
255:08 - all rights reserved
255:14 - okay so now we have our markup
255:18 - and let's create the corresponding
255:22 - styles in our sas file
255:23 - and we're just going to kind of build
255:24 - out the skeleton so we got footer logo
255:27 - so the next thing is footer
255:28 - social and in the social we do have some
255:34 - links and images we'll just leave it
255:36 - like this for now
255:37 - and we'll add it as we need so next
255:40 - thing is going to be footer links
255:44 - and then footer links column one and
255:46 - column two so
255:47 - i'll just add those as well
255:52 - okay then after that is footer cta
255:58 - and then button we might need a button
256:02 - so i'll just say
256:03 - a button and then the last thing is
256:06 - going to be the
256:07 - footer copyright okay
256:10 - so save that okay
256:13 - looks good so
256:17 - we're not going to have too much on our
256:18 - website but let's just kind of see what
256:19 - we have here
256:20 - okay so we have a logo loading this may
256:23 - actually be a problem because
256:24 - this is the logo that we use up top with
256:26 - the sort of dark color
256:28 - but this is i believe
256:31 - yeah so the footer has this dark blue
256:34 - color
256:35 - in the background let's just add that
256:36 - now so we're going to have to i think
256:39 - modify the svg
256:40 - and i think we should be able to edit it
256:42 - we'll create a new svg for the dark
256:44 - um for the white on dark and then we
256:46 - should be able to
256:49 - edit that manually so
256:52 - footer we'll give it that background
256:54 - color
256:56 - of that dark blue and it should be in
256:59 - the variable satisfied so
257:00 - yeah dark blue and then i'll just say
257:04 - color
257:05 - white just to sort of give it a default
257:09 - um
257:10 - and maybe actually since everything is a
257:13 - link
257:14 - we also want to say a
257:17 - color white just to make sure that all
257:21 - the text links will get that white color
257:24 - okay so let's see what we got now yes
257:26 - you can see
257:27 - with that logo it is
257:31 - not visible so let's make the
257:35 - new svg file because i think we only had
257:38 - that one logo
257:39 - image yeah just that one logo so we
257:42 - opened the svg it's actually just
257:44 - like text just so you can um the cool
257:47 - thing about svg is that you can edit
257:48 - colors so
257:49 - you can see here these different colors
257:52 - this is probably the
257:54 - colors of the symbol in the back um
257:57 - so the you know this sort of diagonal
257:59 - stripes
258:00 - but we need to edit the text i'm
258:02 - guessing it's this thing pathfill
258:05 - um and this is just the letters of easy
258:08 - bank
258:08 - i'm guessing so let's create a copy of
258:11 - this logo svg file
258:13 - and then i'm going to rename it rename
258:16 - logo let's say dash dark because we're
258:19 - going to use that on a dark background
258:22 - so alt z to wrap the words
258:26 - and i believe this is the path fill and
258:29 - then we want to change that to white so
258:31 - we'll say
258:33 - f and we can't use sas variables in here
258:36 - because it's just
258:37 - it's an svg um it is not i can't use sas
258:40 - stuff
258:42 - okay so we'll change to logo dark in our
258:44 - index.html file
258:48 - um logo dark
258:51 - let's see if that worked e there we go
258:55 - and let's just double check it that does
258:57 - seem right yeah that seems right it's
258:58 - just white
259:00 - okay let's add some padding to this so
259:02 - it looks a bit better and i'm actually
259:04 - going to just turn on the
259:06 - responsive mode so we can see what it
259:08 - actually looks like
259:10 - so we want to add some padding on all
259:12 - the sides and we also want to center
259:14 - the text all the content let's see how
259:17 - much padding we need
259:20 - it's using my little rectangle that i
259:22 - created
259:24 - it's going to kind of estimate it's
259:26 - about
259:27 - maybe 40 pixels on top
259:30 - and i'm guessing on bottom um
259:34 - so about 40.
259:37 - yeah that's close enough and then maybe
259:40 - we'll just do
259:41 - 40 all the way around nothing's actually
259:44 - nothing is actually reaching out
259:46 - to that far but i think you know
259:50 - we'll just keep it at 40 just to have
259:52 - some padding all the way around
259:55 - okay so in the footer itself we'll say
259:57 - padding
259:59 - and 40
260:04 - 40 divided by 16 2.5 rims
260:08 - and again that's because to get from
260:11 - pixels to rams you divide it by 16 which
260:13 - is the
260:14 - base font size by default and rams are
260:18 - just a more accessible way
260:20 - that you can size things because it
260:22 - gives the user control if they
260:23 - change the zoom in the browser or even
260:25 - modify the base font size in their
260:26 - browser
260:27 - if you have measurements in rems it'll
260:29 - sort of scale up or scale down with the
260:31 - browser
260:33 - as opposed to pixels it would stay
260:34 - pixels no matter what so
260:36 - just better to use rems as opposed to
260:38 - pixels you can also use ems
260:40 - um but i like rams
260:44 - okay so now with the padding see we got
260:48 - okay
260:48 - good padding and text align center
260:57 - looks good now we need to
261:00 - start adding spacing so i just kind of
261:02 - go from top to bottom so i want to add
261:03 - spacing
261:04 - under the logo and on
261:07 - down
261:11 - and again i'm just kind of estimating
261:13 - here so it's about let's say 30
261:16 - and then under the social okay so
261:19 - we'll give 30 pixels of space under the
261:22 - logo also under the social
261:24 - and then i'm assuming under the text
261:26 - links
261:28 - a little bit less but we'll just say 30
261:30 - for everything
261:31 - just makes it easier
261:34 - okay so one add footer logo
261:38 - we'll say margin bottom
261:42 - and we'll say 30. so 30 divided by 16
261:45 - 1.875
261:47 - grams and i guess we'll just add that
261:50 - margin bottom
261:51 - to all the elements that wanted them so
261:54 - footer social i believe needs it
261:57 - and then only the second footer link so
262:01 - footer links column two
262:03 - we'll have margin bottom as well and
262:05 - then i think
262:06 - under the button so in footer cta under
262:09 - the button we'll add
262:10 - margin bottom there we go
262:14 - okay um
262:18 - margin is not taking under the
262:20 - [Music]
262:22 - logo why is that it's there um maybe it
262:25 - needs to be display
262:27 - block or oops don't want to do it for
262:31 - footery footer logo
262:33 - because footage is every single link
262:34 - which is like pretty much everything in
262:35 - the footer
262:36 - so display block and the reason this
262:40 - worked
262:40 - is because before display block the
262:43 - element i'm assuming
262:45 - yeah anchor elements are displayed in
262:47 - line by default which means that they
262:48 - just kind of display
262:49 - however the default flow would be
262:52 - and you can't add things like margin and
262:55 - stuff it just won't
262:56 - take effect so you can say display block
262:59 - um or display inline block display block
263:02 - it'll take up 100 of the width that it
263:04 - can
263:04 - if i do display inline block it will
263:07 - only take up the width
263:08 - of the actual content so maybe
263:10 - displaying like inline block
263:12 - would be better for this so
263:15 - footer logo
263:18 - display inline block
263:24 - okay looks good so it looks like they
263:26 - were
263:28 - the margin did work for the other
263:30 - elements because those are divs and divs
263:32 - by nature
263:33 - they are by default display block
263:35 - elements
263:37 - now let me add some space between the
263:38 - social icons as well
263:40 - let's see how much space there is
263:43 - um 15 or maybe 16. it's a lot of one ram
263:47 - of
263:47 - space using margin margin right
263:51 - so okay so footer social which is this
263:54 - section here
263:55 - and then i'm going to add the space to
263:57 - the anchor links
264:00 - so again we probably need to do display
264:02 - blocks the margin actually like takes
264:04 - effect so display
264:06 - inline block actually um because the
264:09 - slave block can make them all 100 width
264:11 - which is not what we want we want them
264:12 - next to each other
264:14 - explain line block margin right
264:18 - one round oh
264:21 - and i don't want to do it for the last
264:23 - one so i think i could use
264:25 - the not
264:29 - last child so if it's not the last child
264:32 - it'll have this margin right
264:35 - okay and that looks like it worked let's
264:37 - just double check
264:39 - so margin and then they all have margin
264:43 - and then the last one does not have a
264:44 - margin which is great
264:46 - i think i do want display inline block
264:49 - for all of them
264:50 - so we'll just do this
264:53 - okay cool now the next thing
264:56 - for the text links the text links are
265:00 - they are each on their own row oh what i
265:03 - could do
265:03 - is i could create make footer social a
265:06 - flex
265:07 - parent let's try that so display
265:10 - flex and then i do need to set flex
265:13 - direction
265:14 - to be columns that will be one under the
265:16 - other instead of trying to fit them all
265:17 - in the same row
265:18 - so flex direction column
265:23 - oh not for social i want that for uh
265:27 - the links there we go
265:30 - okay so now they're very nicely in one
265:33 - column
265:33 - and centered i think i actually need to
265:36 - do
265:36 - is add some alignment to the
265:40 - flex parent so
265:43 - usually to control horizontal stuff
265:46 - that's justify content
265:47 - because it's vertical align items should
265:50 - control the width of the children so
265:53 - let's say
265:54 - align items and let's just say center
265:58 - just to see what happens
266:00 - okay so there we go so now we have
266:02 - centered them all
266:03 - and then it only makes the flex children
266:06 - take up
266:07 - the actual width of the content itself
266:10 - so let's add that in
266:11 - our style so align items center
266:17 - item center this looks pretty good
266:21 - and we also want to add some space
266:22 - between the text links themselves yeah
266:25 - let's just say 20 because there's
266:28 - usually a tiny bit of space from just
266:30 - like line height i wonder if i could
266:32 - just use line height to make that space
266:33 - let's
266:34 - let's experiment again line height
266:38 - 1.5 oh so i do
266:41 - two actually looks pretty good
266:43 - increasing the line height makes it take
266:45 - up a little bit more space which
266:46 - results in there being space between the
266:48 - links so then i don't have to do
266:51 - i don't have to add a margin to add
266:53 - space between them which is like sort of
266:54 - nice
266:55 - so that looks maybe a little bit more
266:57 - line height 2.25
266:59 - for footer links a and i don't
267:03 - think this is actually necessary anymore
267:04 - since i fixed it with the align item
267:06 - center thing
267:07 - yeah that seems good okay so i think
267:10 - that this
267:11 - is basically the basic
267:14 - mobile styles let's move on to the
267:16 - desktop styles
267:18 - and in desktop the most important thing
267:20 - we need to figure out right now
267:21 - is what the grid template for css grid
267:24 - is going to be
267:25 - so i think initially i'd said we're
267:27 - going to make this a four column layout
267:29 - so the first column would be
267:30 - logo plus social then we'd have two
267:32 - columns of text links
267:33 - and then the last column would be the
267:35 - cta button and the copyright
267:37 - now i think that i'm going to also make
267:40 - it
267:40 - two rows because i want the logo to be
267:43 - on one row
267:44 - and the social media icons will be on
267:46 - the second row so that means the entire
267:47 - template is going to be two rows and
267:49 - four columns
267:51 - and i think the easiest way to
267:52 - demonstrate that is just to use
267:54 - adobe xd and to sort of draw squares
267:56 - around each of the cells so it's
267:58 - a little bit easier for you but also for
268:00 - me to see what the template's going to
268:02 - be
268:02 - and then i can write the code in the
268:05 - scss file
268:06 - so let's start with that now so we got
268:09 - two rows for this first column and then
268:12 - we'll just have the same
268:13 - you know going all the way down so
268:15 - that's the first column for text links
268:17 - and the second column for text links and
268:20 - you know this isn't super exact right
268:21 - now so there
268:22 - is going to be spaces between the cells
268:24 - but for
268:25 - just for illustrative purposes it's not
268:27 - going to be you know exactly correct
268:29 - so it's going to be something like this
268:30 - where we have four columns and two rows
268:33 - so this means that using the grid
268:35 - template areas
268:37 - this top one would be called logo and
268:40 - then
268:40 - this one would probably be called social
268:43 - this one i'll just call
268:44 - links one and then links to and then the
268:47 - last one will just be cta
268:48 - and we'll use those names to assign the
268:51 - locations in the template to each of
268:53 - these
268:54 - content blocks all right so in our code
268:57 - editor we need to figure out where we
268:58 - want to
268:59 - write the code for the footer layout for
269:02 - css grid kind of like flexbox you have a
269:04 - parent element and then you have the
269:05 - child
269:06 - grid elements so the parent element in
269:08 - this case is going to be the actual
269:09 - footer tag itself
269:11 - and then each of these areas are going
269:14 - to be
269:14 - the child elements in the grid so the
269:17 - first one would be logo
269:18 - second one would be social then the
269:20 - links one then links two
269:22 - then the cta these are all direct
269:24 - children of
269:25 - the parent footer element so in our sas
269:28 - file
269:28 - we want to add display grid for i think
269:32 - probably just desktop and up so we can
269:34 - do that with
269:35 - a breakpoint um our breakpoint mix in so
269:38 - include breakpoint up
269:41 - large and at this point we will add
269:43 - display
269:44 - grid so again this means that on mobile
269:47 - and tablet
269:48 - it's not going to have the grid layout
269:50 - it's going to have that stacked one
269:52 - column layout
269:53 - and we'll we'll do the same thing for
269:55 - the other properties as we add them
269:57 - so display grid and then grid template
270:01 - columns and we wanted four columns right
270:05 - so
270:05 - let's take a look at what we want the
270:07 - widths to be for those columns
270:11 - so it seems like these first three
270:13 - columns are
270:14 - probably roughly around the same width
270:16 - and then the last column is going to be
270:17 - wider i'd say maybe you know we can say
270:20 - these first three columns would be 1fr
270:22 - or fr meaning fractional unit and
270:26 - then the last one would probably be
270:27 - maybe 2fr maybe 3fr
270:30 - uh i'm not really sure yet and that will
270:32 - make that
270:33 - that will make this last column either
270:36 - twice or three times the width of the
270:38 - first columns
270:39 - so we'll just do 1fr1041fr and then 2fr
270:42 - for the last one
270:44 - and we can use the repeat function
270:47 - so the first three columns are one at
270:49 - far each so we can just say repeat 3
270:51 - comma 1fr
270:53 - for the first three columns and then the
270:54 - last column will be 2fr
270:58 - then we want to add two rows so
271:02 - i'll say grid template rows and
271:05 - we want two rows probably the same
271:07 - height for each so again we'll use
271:09 - repeat
271:10 - two comma one fr which means the
271:13 - space each row will be given the same
271:16 - amount of space
271:18 - okay now the last thing is the grid
271:21 - template areas
271:23 - so this is a little bit um tricky
271:27 - it just has a bit different syntax and i
271:29 - know that when i sort of
271:30 - started using grid template areas it was
271:32 - a little bit confusing
271:34 - but basically going back to our design
271:37 - you write out the names of each of the
271:39 - areas
271:40 - sort of in the place where you want that
271:42 - block to be in in the grid
271:44 - so this one's going to be called logo
271:46 - it's going to be going across
271:48 - in the first row from column left to the
271:50 - right it'll be logo
271:52 - links one links two and then cta
271:55 - and then the second row is going to be
271:56 - social links one links to
271:58 - cta so using the same name for two
272:01 - different cells
272:02 - it tells the browser that that area is
272:04 - going to take up two cells so the first
272:05 - one's going to be
272:06 - logo so how this works is we just type
272:09 - in logo
272:10 - and it is in a string as you can see
272:11 - here and the second column is
272:14 - links one then links two and the last
272:17 - one will be cta
272:18 - so this is kind of the representation of
272:21 - the first row
272:22 - with each name taking up one column now
272:25 - we have two rows in our template so
272:27 - we're going to add a second one
272:28 - in a string again and instead of logo
272:31 - the social media icons will be the first
272:33 - column
272:34 - then links one links to and then cta
272:37 - again
272:38 - so this is our grid template now you
272:40 - also need to in addition to creating
272:42 - this
272:43 - in the elements themselves and i guess i
272:45 - should put this in a break point as well
272:47 - so include break point up large
272:52 - we tell it that the grid area name of
272:55 - this element
272:56 - is logo and this is part of the slightly
272:59 - confusing thing but this does not need
273:00 - to be in a string
273:02 - one one place that i look to a lot when
273:05 - i'm confused about grid or flexbox stuff
273:07 - is css tricks
273:09 - so a complete guide to grid and they
273:10 - also have one for flexbox
273:12 - so we're looking for grid areas
273:17 - this is kind of telling you how the grid
273:18 - temple areas work so you can see they
273:19 - have
273:20 - things in quotes and the actual element
273:22 - you just have the name
273:23 - and not in quotes again this grid area
273:26 - property of logo
273:28 - will tell the browser that the look the
273:29 - footer logo element subscribes to the
273:32 - logo
273:32 - grid template area so we have to do the
273:34 - same thing for each of these
273:35 - so i'm actually just going to copy this
273:40 - and then this is the footer social area
273:41 - and that's going to be called social
273:44 - and then for the links 1 we'll put it in
273:46 - the column 1
273:47 - and then we'll do the same thing for
273:50 - column
273:50 - 2 which will be links 2. and the last
273:54 - area will be
273:55 - the cta and that's going to be the
273:57 - entire footer cta element which contains
274:00 - the button as well as the copyright info
274:03 - so that's going to be
274:04 - i think i just said cta these grid area
274:08 - properties
274:08 - they'll sort of match to what's in the
274:10 - grid template areas all right so this
274:12 - looks pretty good
274:13 - obviously it's not completely accurate
274:15 - at the moment but this is a really good
274:16 - start
274:17 - let's turn on in the layout tab the grid
274:21 - inspector
274:22 - so i want the footer to be highlighted
274:24 - this is a super helpful
274:26 - tool if you are working with flexboxer
274:28 - grid firefox has these
274:30 - special flexbox and grid inspectors and
274:32 - it
274:33 - just tells you a visual representation
274:35 - of what you have
274:36 - we actually have not only the lines to
274:39 - designate the rows and columns
274:41 - but it's also telling you the names of
274:43 - the grid areas that we just created
274:44 - it says logo social links one links one
274:47 - links two links to
274:48 - and then cta and it also tells us that
274:51 - with this dotted line
274:53 - it's sort of telling you that the area
274:54 - is taking up those two cells whereas for
274:56 - the logo and social there's a solid line
274:58 - between them indicating that they're
274:59 - separate
275:00 - i think that let me just uncheck the
275:03 - display area names
275:04 - so you can see a little bit better but
275:07 - we need to
275:08 - kind of align these correctly right so
275:11 - let's work on the horizontal alignment
275:13 - first and i think we want the logo and
275:15 - the social icons to be aligned
275:17 - to the left you can control alignment in
275:20 - two different ways one is
275:21 - sort of global alignment when you set
275:23 - properties on the grid parent
275:24 - you can also set properties in each grid
275:26 - child to just control the alignment of
275:28 - that cell
275:29 - so there's a lot of control you have
275:31 - using css grid
275:32 - and let's kind of figure out what we
275:34 - want to do here
275:36 - if you look at the design we do want the
275:39 - logo and social icons to be
275:40 - left aligned and we also want the text
275:43 - links to be left aligned as well
275:45 - and then the cta and the copyright are
275:48 - right aligned so everything's kind of
275:49 - like flush to the edge
275:51 - so i think we could try using
275:54 - justify content space between
275:59 - is that doing anything it doesn't look
276:01 - like it's doing anything this might be a
276:03 - flexbox thing
276:04 - let's go back into our handy css tricks
276:08 - guide let's justify
276:11 - items aligns grid items along the inline
276:15 - row as opposed to
276:16 - align items which aligns along the block
276:19 - so let's try justify items start
276:22 - so justify items start oh
276:26 - there we go i think what i was doing was
276:28 - justify content which
276:29 - i use a lot in flexbox but i think that
276:31 - just controls the child items as a whole
276:34 - you justify content yeah so it's the the
276:37 - total size of your grid
276:40 - so that seems okay um i also want to i
276:43 - think
276:43 - maybe set text align left for desktop
276:46 - because
276:46 - it was centered due to the mobile styles
276:51 - and then we can fix these as we go along
276:53 - now why are these not
276:55 - are these centered line item center
276:58 - i have a few different things going on
277:00 - here so i have the footer links
277:02 - it's a flexbox parent let's turn off the
277:05 - grid
277:05 - look at the flexbox i had done a line
277:08 - item center
277:10 - and i actually want to align items
277:13 - i believe start yeah start
277:17 - because this in this flexbox parent it's
277:19 - going vertically so
277:20 - line items will do the cross axis
277:23 - arrangement so i just need to remember
277:25 - to set footer links
277:26 - line items start for desktop and up
277:31 - so footer links and then
277:34 - for breakpoint up
277:38 - large we're adding a line item start and
277:40 - i'll make sure that
277:41 - the links themselves are aligned to the
277:43 - left
277:44 - the other thing we wanted to do was for
277:46 - the grid template
277:48 - justify items
277:52 - start let's go back to the
277:56 - grid inspector now we can see that the
277:59 - text links are aligned to the left the
278:01 - logo and social are aligned to the left
278:03 - as well
278:04 - and then for the cta we want to align
278:07 - that to the right
278:09 - i think we can say um justify
278:12 - items and oh this is not a grid thing so
278:15 - i can't do that
278:16 - i guess i could try text line right no
278:19 - that's not right
278:21 - oh it's because i did justify items to
278:23 - the left
278:24 - so i think for because this is an
278:27 - individual this is the grid child item i
278:29 - can't do justify items i have to
278:31 - do justify self
278:34 - because that applies to the individual
278:36 - child itself so i think if i do
278:38 - end there we go
278:41 - so if i do text align right and justify
278:44 - self end for the footer cta
278:46 - desktop styles so under the breakpoint
278:50 - area
278:52 - okay so it looks pretty good for the
278:55 - horizontal stuff right let's just double
278:57 - check and compare that with the design
278:59 - so yeah we got the logo and i social
279:02 - media icons on the left these are line
279:04 - left
279:05 - this is aligned to the right and that
279:08 - does seem like what we have
279:10 - so now we need to figure out the
279:11 - vertical alignment you know it looks
279:12 - like things are a little bit all over
279:13 - the place
279:14 - so we go back to the design let's just
279:17 - draw a box around the entire footer area
279:19 - just to see how things kind of line up
279:20 - with each other
279:22 - looks like things are kind of extending
279:24 - out to
279:25 - the top and the bottom they're like
279:26 - pretty much almost flush
279:29 - so if we go back to the footer parent
279:31 - itself
279:32 - i think what controls the vertical
279:34 - alignment
279:35 - is align justify content and align
279:38 - content
279:38 - just control the grid in like the
279:40 - greater parent
279:42 - so if i want to control the alignment
279:44 - inside the grid i have to use items so
279:45 - align
279:46 - items okay aligns grid items along the
279:51 - block
279:51 - axis so the values can be start and
279:54 - center and stretch
279:56 - so i think i want stretch so it goes all
279:59 - the way to the top and the bottom so
280:00 - we'll try that
280:05 - didn't seem to do anything something
280:07 - else is adding this extra
280:08 - space i wonder i might have some margins
280:11 - actually
280:11 - so let's look at the links oh there is
280:14 - margin in the social
280:15 - so let's just cancel that out so margin
280:17 - bottom zero
280:20 - and then i guess logo also
280:23 - there's a margin there okay i might just
280:25 - need to go back and move all the margins
280:28 - that i added from mobile into a
280:30 - breakpoint
280:31 - down media query because i only want it
280:33 - to take effect
280:34 - on mobile and tablet so let's see where
280:37 - here we go margin bottom
280:38 - so include break point down
280:42 - some of this apply to tablet and down oh
280:45 - medium i mean medium and down
280:49 - and then we'll add the margin bottom
280:50 - there let me just copy this media query
280:54 - so same thing here
280:59 - margin bottom here
281:06 - and i think there was one yeah for the
281:10 - button
281:13 - okay now that we've removed the
281:16 - margins from desktop let's see how the
281:19 - site looks
281:22 - did that help at all see the social
281:24 - icons are still like really
281:26 - they're too high i want them to be
281:28 - flushed to the bottom
281:31 - what happens if i do an align self for
281:35 - footer social
281:37 - i'll get rid of the height thing turn on
281:39 - the line self to the end
281:41 - does that seem right it seems a bit tall
281:45 - in any case we want them to be on the
281:46 - top and bottom anyway so
281:48 - let me add a line self to footer social
281:52 - for desktop
281:56 - okay the text links themselves look okay
281:59 - now i need to do this the aligning for
282:02 - the cta
282:03 - section so in the cta section we have
282:06 - this
282:07 - and then we have a copyright so i think
282:09 - if i do
282:11 - a line self miss stretch an option for
282:14 - this
282:15 - oh it is stretch not working this is
282:18 - kind of annoying
282:19 - okay i'm just kind of curious start
282:22 - have an end i think i may need to
282:24 - separate these out into different
282:26 - cells so i can sort of align them the
282:27 - same way i did with the logo and the
282:29 - social
282:30 - so footer cta i'll only have it have the
282:32 - button
282:33 - and i'll delete that extra div
282:37 - and then do that so then footer cta is
282:39 - in his own thing
282:40 - twitter copyrights is is in its own
282:43 - thing as well
282:44 - so let's go back and first i'll have to
282:47 - add
282:47 - a grid area for the copyright since
282:49 - that's a new thing
282:51 - so include breakpoint up
282:54 - large grid area and i'll call it copy
282:58 - right then i'll need to add the
283:00 - copyright name to the grid template
283:03 - so before we had the ctn copyright in
283:05 - one thing now we're going to have ct on
283:07 - top and then copyright on the bottom
283:10 - okay much better um so now we can sort
283:13 - of try to
283:14 - we'll add another rule for align
283:19 - self end and then justify
283:23 - self and
283:27 - okay okay
283:30 - that looks pretty good i do feel like
283:33 - things are a little bit taller than they
283:35 - should be
283:36 - you know i wonder if the font size
283:38 - should be smaller for the
283:39 - for the text links you see that this
283:42 - should be
283:42 - 15 or so pixels how big's the font size
283:45 - right now
283:47 - it is if we go to computed font size is
283:49 - 18
283:51 - and where did that rule come from it's
283:53 - just from the body font size okay
283:54 - so for the footer links i need to set a
283:56 - font size of 15
283:58 - pixels so that should help with making
284:01 - the content less tall
284:03 - i'm guessing it's going to be the same
284:04 - font size for mobile as well so
284:06 - font size 15 pixels divided by 16 is
284:12 - 0.9375
284:14 - rems all right let's give that a shot
284:17 - okay looks shorter which is great
284:21 - maybe the easy bank text itself needs to
284:23 - be a bit smaller too
284:25 - it's probably about the same 15 pixels
284:29 - so we'll copy this property and add it
284:31 - to the copyright as well
284:36 - okay maybe there's just too much space
284:41 - because i initially added all that space
284:43 - using line height
284:44 - so if i reduce line height it's still
284:48 - a bit tall interesting
284:52 - let's just say line height one just to
284:53 - make it really short
284:55 - oh you know what it is it's because i
284:57 - set the row
284:59 - i set the rows to be 1fr
285:03 - which means the top row and the bottom
285:05 - row have to be the same height
285:06 - that's how i set it but obviously the
285:09 - bottom row the social media icons
285:11 - and the copyright doesn't need to be the
285:13 - same height
285:14 - as the top row and the top row looks
285:17 - like it's getting its height because of
285:18 - the button
285:19 - which is making everything be too tall
285:22 - let's
285:23 - fix this row problem first and then
285:26 - we'll figure out if we need to
285:27 - decrease the line height for these
285:30 - so instead of 1fr i think the
285:33 - second row should be something
285:37 - less where is it here grid template rows
285:40 - so the first
285:41 - top row should be 1fr if i do auto it'll
285:44 - just
285:45 - oh if i do auto it just sort of does
285:47 - that
285:48 - let's try that so in the parent we'll
285:51 - change grid template rows to 1fr
285:53 - and auto here we go so instead of
285:57 - this repeat thing for the rows we'll
285:59 - just do 1fr
286:00 - and auto okay so this
286:04 - is shorter now the line height is kind
286:05 - of what's limiting it
286:07 - so let's try one okay see now got really
286:10 - short which is great
286:12 - maybe 1.5 you know maybe i don't want to
286:15 - use line heights that's kind of like
286:16 - making it a static
286:18 - distance what if instead in the footer
286:21 - link since i know that is a
286:23 - flexbox parent i could say
286:28 - justify content space between and that
286:31 - will sort of
286:31 - auto stretch to fit that so i think
286:34 - that's a much better way of doing that
286:35 - at least for desktop we want the line
286:37 - height for mobile because
286:38 - we're not using grid for that so footer
286:40 - links for
286:42 - desktop here we go
286:45 - i think i personally just do justify
286:47 - stuff before the align properties
286:50 - okay so this looks closer which is great
286:53 - now i i'm guessing that this button
286:56 - might be a little bit
286:57 - tall i am kind of curious where this
286:59 - height is coming from now
287:02 - oh i still i forgot to take out the line
287:03 - height okay that's my problem
287:06 - so i'll just remove line height for the
287:08 - footer links a
287:09 - for desktop so i just want to use this
287:12 - on tablet and mobile so i'll use my
287:15 - break point down
287:17 - and i know that i usually use the break
287:20 - point up
287:20 - meaning i use min width media queries
287:23 - but i think in this case
287:24 - because we're adding styles for mobile i
287:26 - would prefer to
287:28 - use the breakpoint down using max with
287:30 - media queries
287:31 - otherwise i would have to cancel out all
287:34 - the margins and line heights for desktop
287:36 - that looks a lot better so i think maybe
287:39 - this button is now what's kind of making
287:41 - it a bit
287:41 - tall okay how big is this button oops
287:45 - it is 46 pixels tall or so
287:50 - and how big is it on the website okay so
287:52 - it is
287:53 - 46. you know i'm not going to split
287:56 - hairs here
287:56 - i think this looks pretty okay so even
287:59 - though it's taller than
288:00 - it is on the design i think it's okay
288:03 - and i just kind of added some space here
288:04 - so i'm not blocking it with
288:05 - a picture of myself for you all it's
288:07 - kind of weird it even looks like there's
288:09 - more space
288:11 - in the design i think the logo and the
288:14 - social media icons actually might be a
288:15 - little bit too tall so
288:16 - let's just tweak that and then we'll
288:18 - sort of consider this complete
288:20 - the logo should be 23 pixels tall
288:25 - and about the same for the social icons
288:27 - so let's see what we got
288:30 - um 20 and the icons look like they're 25
288:36 - okay so yeah they are a little bit big
288:40 - the image itself says 20 which is good
288:43 - and then for some reason the
288:45 - thing is 25 the anchor link maybe i just
288:48 - need to set a height
288:51 - if i set a height of 20 pixels will that
288:52 - help oh yeah it does
288:54 - okay we'll just say hi 20 pixels for the
288:57 - footer social a
288:59 - social a here we go and i'm assuming the
289:02 - same height will be for mobile as well
289:04 - so
289:04 - we don't need to use a media query for
289:06 - that so 20
289:08 - divided by 16 is 1.25
289:11 - rems that seems all right
289:15 - okay now that i look at this again i
289:17 - think that there's a couple things i
289:19 - need to do
289:20 - the first one is i need to limit the
289:21 - footer content so it doesn't go all the
289:23 - way across
289:24 - i think i forgot to add the container
289:26 - class so let's do that first and then we
289:29 - might need to
289:30 - tweak some of the alignment okay so in
289:32 - footer
289:33 - i'm gonna have to add a container class
289:35 - container
289:37 - and i don't remember if i want to add
289:39 - the
289:40 - padding helper classes but let's just
289:43 - move these into the footer
289:49 - container and because originally
289:53 - the footer tag itself was a grid parent
289:55 - i'm going to have to move all the grid
289:57 - properties into the footer container
290:01 - so footer and then
290:04 - we'll just put it here at the top
290:07 - container
290:08 - so we'll move all the grid stuff into
290:11 - the container
290:12 - element okay hopefully that'll work
290:15 - let's take a look okay much better so
290:17 - now we can see it's not going all the
290:19 - way to the left and the right
290:23 - things just seem cramped even though the
290:25 - heights like so tall
290:28 - is that button really the right height
290:30 - yeah it's 46.
290:32 - and you make the copyright text smaller
290:34 - i think right now it is
290:36 - 15. i'm gonna make it i think 13.
290:40 - it needs to be a lot smaller 13 divided
290:44 - by 16.1
290:50 - okay eight one two five not one eight
290:54 - there we go okay i think the color was
290:58 - darker too right it's not white it's
291:00 - kind of a light gray
291:02 - what color would that be maybe grayish
291:05 - blue
291:09 - so you know this is just kind of
291:10 - tweaking trying to double check the
291:12 - design and the site and just make sure
291:14 - everything looks correct
291:16 - yeah there's more space between the
291:18 - button and the copyright
291:20 - something is not right i wonder is it
291:23 - including the padding that i added no
291:26 - this is 70 oh okay so
291:28 - it's 76. okay so it is adding the
291:31 - padding so it's actually now it's
291:32 - too short which is the same as like what
291:35 - i was thinking it was so let's
291:37 - increase that line height again to um
291:42 - make it taller
291:47 - line height 1.5 oh wait
291:51 - wrong selector forgot a second
291:53 - underscore there we go
291:54 - maybe 1.75
291:58 - 2.25 2.25 line height is giving us the
292:01 - correct height of about 100.
292:04 - okay glad we figured that out so footer
292:06 - links a
292:08 - i knew something was off i just took me
292:11 - a while to figure out where it actually
292:12 - was
292:14 - there you go footer links a
292:18 - oh wait two point is that the same
292:21 - oh my gosh it's the same freaking line
292:23 - height
292:25 - so let's remove this media query there
292:27 - we go
292:32 - okay this looks much closer to the
292:33 - design
292:35 - okay so now we've gotten the height
292:37 - right i think we need to tweak
292:39 - this like horizontal spacing
292:43 - um there's it's too close here and
292:45 - there's too much space i think
292:47 - so yeah so it seems like there's more
292:49 - space between
292:50 - easy bank the logo and then the first
292:52 - text link
292:54 - let's see how do i want to do that i
292:55 - guess i could maybe increase the width
292:57 - of the first column so if we go into the
293:00 - grid parent
293:02 - instead of making all the columns the
293:05 - same
293:06 - [Music]
293:08 - i could just try to tweak these a little
293:09 - bit so
293:12 - i'll probably leave the text links as
293:14 - 1fr
293:17 - and so i'm just going to try this out in
293:18 - the browser but what if i said 2fr
293:21 - 1fr 1fr and then 3fr
293:25 - maybe 2far well maybe 3.
293:29 - okay let's see how close that is to the
293:30 - design
293:32 - hey that's not bad
293:40 - um there's a few things that look like
293:42 - they're off so there's
293:43 - just a tiny bit more space between these
293:46 - i think i also forgot to add a grid
293:48 - gap property so let's try that gap
293:51 - of maybe one rim
293:54 - two rims
293:57 - let's try one rim
294:01 - so that that gap property let me just
294:03 - show you how it looks
294:04 - so it's adding space of one rem or 16
294:07 - pixels between
294:08 - all the cells in the template so i think
294:11 - that's probably good to keep
294:13 - so i need to add gap of one ram and then
294:17 - i need to change the template itself
294:19 - will be 2fr 1fr105r3fr
294:24 - okay so grid template columns
294:28 - place this i know i could use repeat to
294:31 - 1fr but
294:32 - i mean it's kind of the same at this
294:34 - point if you're only repeating
294:36 - if you're only repeating it once and
294:38 - then what else that i wanted to add
294:40 - oh yeah the gap of one i'll add the gap
294:43 - under areas i guess
294:47 - one rim okay that looks pretty
294:50 - good let's compare with the design again
294:58 - that looks fairly close and i'm actually
295:00 - okay with like i have a little more
295:01 - space
295:02 - between social icons but i think that's
295:04 - okay
295:05 - all right now moment of truth let's see
295:07 - how this looks on mobile
295:10 - because we decrease once it hits that
295:13 - break point for tablet
295:14 - it goes to one column and it is centered
295:16 - and stacked
295:18 - then for mobile i'll just turn on the
295:20 - emulator thing
295:23 - that looks pretty good so i think we
295:25 - have the basic styles down
295:27 - now let's get to some sort of
295:31 - let's kind of polish it up a little bit
295:33 - there's a few things i usually try to
295:34 - add
295:35 - main thing is hover states because these
295:36 - are all links and you want the style to
295:38 - change
295:39 - slightly when you hover over them so you
295:41 - know what's going on
295:42 - so for the socials
295:45 - let's check the design oh here we go so
295:49 - we did some if we hover it turns green
295:52 - on the social icons as well as the text
295:55 - links
295:56 - and then the request invite has the same
295:57 - thing where it like goes to white
296:01 - so let's do those the social icons
296:04 - that would be social icons the images
296:08 - um they're svgs and we want to change
296:10 - them from the white
296:12 - to the green color now since i loaded
296:15 - these svgs as image tags
296:17 - i might actually change that because
296:20 - what i want to do is
296:21 - change the fill and the svg itself let
296:24 - me show you what that looks like
296:26 - so icon facebook if we look at that
296:29 - so it tells you the fill is fff which is
296:32 - white
296:33 - and there is actually a way that you can
296:34 - alter that in css
296:36 - but only if you're loading the svg as an
296:38 - svg tag
296:39 - and not the image tag so i'm gonna have
296:42 - to change this
296:44 - so i'm gonna copy this
296:48 - so we're actually just using inline svgs
296:50 - at this point
296:51 - and then i think can i just move the alt
296:54 - no there's no alt for that that's
296:57 - interesting
296:58 - i'm just curious about this uh alt tag
297:00 - for svgs
297:04 - accessible it's purely decorative it
297:07 - doesn't need alternate decks
297:08 - i think we do because they're like
297:10 - social icons
297:12 - inside the svg add title oh must be the
297:15 - first child of its parent element
297:16 - it'll be used as a tool tip that's
297:18 - helpful
297:19 - okay so let's do that so
297:23 - say the first child
297:26 - um here so path
297:30 - is the first child originally but now
297:32 - we're adding titles and we'll add
297:34 - facebook
297:36 - that's pretty good and we'll have to do
297:38 - the same thing for the other one
297:40 - so youtube
297:44 - copy that place the image
297:49 - and then add the title
297:56 - [Music]
297:58 - youtube
298:00 - so now let's load it up
298:03 - everything's the same let's just double
298:06 - check
298:07 - yeah so it is actually loading the svgs
298:08 - which is good
298:10 - if we hover it tells us the title which
298:12 - is great so
298:14 - now to adjust the color
298:18 - to adjust the hover we want to in the
298:20 - svg alter the
298:21 - path fill
298:24 - and we can do that in css which is
298:26 - pretty awesome
298:28 - so if you go down to social a
298:32 - so in the a tag it's going to be svg
298:35 - path that's going to be the element
298:38 - social
298:38 - a cover
298:42 - i could nest it under the a element but
298:44 - okay
298:45 - maybe i'll do that under the a
298:49 - hover svg element and then the path
298:53 - element
298:55 - is going to have fill of the green color
299:00 - lime green and then we also
299:04 - want to add its transition so it's a
299:07 - little bit more
299:08 - nice looking hopefully this works
299:11 - phil and then how fast we want to be
299:14 - maybe 150 milliseconds
299:16 - he's in out oh
299:20 - hey very nice
299:25 - cool so we were able to add the
299:27 - transition and the hover
299:28 - fill color for these social icons we
299:31 - want to do the same thing for these
299:33 - text um links as well that's going to be
299:36 - in the footer links
299:40 - a so footer links
299:43 - a hover
299:46 - color
299:51 - lime green i think it was and then of
299:54 - course we're doing the same thing so
299:55 - transition color 150 milliseconds
300:00 - ease in out oops
300:04 - okay there we go
300:07 - [Music]
300:09 - nice and the last thing we want to do is
300:12 - this button hover state
300:13 - and you can see it's losing opacity when
300:15 - you hover over it and that's because
300:17 - when i first coded this button it was
300:19 - just on a white background
300:21 - so i could simply reduce the opacity and
300:23 - make it sort of
300:24 - look like there's a white overlay
300:26 - obviously it doesn't work with a dark
300:28 - background so i'm going to have to
300:31 - build a semi-transparent white overlay
300:34 - over this over the linear gradient color
300:37 - so i think i can do that with a pseudo
300:39 - element so let's just sort of
300:40 - try so in our global sas file
300:44 - going down to the button styles so right
300:48 - now the opacity
300:49 - thing i'm i'm just going to comment that
300:51 - out because
300:52 - it's not really working for us and i'm
300:55 - going to have to add
300:57 - a pseudo element so let's just try the
301:00 - before
301:02 - and content is blank so it shows up um
301:05 - you have to have a content
301:06 - property set for your before and after
301:09 - elements
301:11 - then i'll say background color
301:16 - i just do background since it's
301:20 - using a linear gradient um i think
301:24 - background is actually linear grains
301:25 - actually apply to the image
301:27 - if i'm not mistaken background image oh
301:30 - let me just see if that's correct really
301:32 - quick
301:34 - yeah so yeah background image
301:38 - and unfortunately background image does
301:39 - not transition nicely so
301:41 - we'll we might have some issues when we
301:43 - do this but
301:44 - okay going back here so we're making an
301:47 - overlay
301:47 - um i'm going to have to position this
301:50 - absolutely i think
301:53 - because we want it to be on top of the
301:55 - rest of the button
302:00 - right zero and this is just to make it
302:01 - go to
302:03 - you know all the different edges and
302:05 - because it's supposed to absolute i see
302:07 - to make sure the parent is positioned
302:08 - relative which it is
302:10 - that's good and i'll make sure the
302:12 - position absolute child will sort of
302:14 - remain inside the parent which is
302:16 - relative
302:18 - then background um
302:21 - color and because we want to eat rg
302:24 - we want it to be rgba so it will be
302:26 - semi-transparent
302:28 - so white is 255 255
302:31 - 255. and transparency let's just say
302:34 - 0.25 we don't want to go
302:36 - full white otherwise you won't be able
302:38 - to read the text
302:40 - okay now
302:43 - let's just see
302:46 - let's see how that looks and i'm not
302:49 - it's not attached to hover state right
302:51 - now i just kind of built it to sort of
302:52 - test and see how it'll look
302:54 - oh that looks it looks pretty close to
302:56 - what we had before actually
302:59 - um so let's set opacity so passing zero
303:04 - it won't show up and then
303:08 - it'll show up when we add when we get
303:11 - rid of the opacity zero so
303:12 - i'm going to use that for the hover
303:14 - state this actually was a pretty
303:16 - easy solution i thought it was going to
303:17 - be a bit harder than that
303:19 - so by default we'll set this opacity to
303:22 - zero
303:24 - and then on the hover state we'll set
303:26 - opacity to one so we want to transition
303:28 - that so it's nice and smooth
303:32 - we use 150 milliseconds like the other
303:35 - hover state speeds
303:37 - then on hover um
303:40 - hover on the parent we're going to make
303:42 - the before element
303:45 - opacity one
303:50 - hey not bad
303:53 - not too shabby okay so i think we got
303:56 - our
303:57 - hover states pretty good let's just
304:00 - double check and make sure the top one
304:01 - works too
304:02 - oh yeah nice sweet
304:06 - so let's just check one more time see
304:08 - how this looks on tablet and mobile
304:15 - good let's just use the emulator so it's
304:17 - easier to see
304:18 - so here's mobile looks pretty good
304:22 - and then ipad i think that's okay
304:26 - on tablet if you wanted to you could
304:29 - also make this like maybe two columns on
304:31 - tablet but
304:33 - i'm just going to stick with the one
304:34 - column because i think that's fine
304:38 - and it's at the bottom anyway so it's
304:39 - not like it's blocking it's like people
304:41 - have to scroll past it
304:44 - cool so i think we can actually consider
304:46 - this whole web page
304:48 - complete and that's it for building this
304:50 - landing page template
304:51 - if you made it all the way through
304:52 - congratulations and let us know down in
304:54 - the comments what you thought of this
304:55 - video
304:56 - and as always thanks for watching and
304:58 - keep on coding