00:06 - hey everybody welcome to live coding
00:08 - with jesse
00:10 - and
00:12 - yesterday we talked about a lot of
00:13 - things for this new project today we're
00:15 - actually going to start the project so
00:18 - what i'd like to accomplish today is to
00:22 - get gatsby
00:23 - up and running
00:25 - and
00:25 - of course that's it's going to be react
00:27 - right we're just going to use gatsby
00:31 - to help build it build us out react and
00:34 - add some some features uh so that we
00:36 - don't have to worry about that
00:38 - and i'd like to make a github repo and
00:42 - then that way you all can have the link
00:44 - you can see the code follow along and
00:46 - contribute as we go through everything
00:50 - so
00:53 - i before we start
00:55 - i just want to say if anyone has any
00:58 - reason why you think we should not use
01:00 - gatsby with this project
01:02 - let me know now
01:04 - i mean we could switch later on
01:06 - but it's going to be easier to decide
01:08 - that now so i i have not used gatsby
01:11 - before i've checked out the
01:13 - documentation
01:14 - i think it will work
01:17 - but maybe i'm missing something
01:20 - so
01:22 - with that being said
01:24 - let's get started
01:27 - also i do want to apologize for anybody
01:29 - who tried to watch my second stream
01:31 - yesterday uh the um the guest lecture
01:34 - that i i gave
01:35 - uh at the computer science course
01:39 - the network was just
01:40 - terrible
01:41 - so the audio only came through not
01:43 - really the video so
01:47 - all right someone in the live chat asked
01:49 - if i'm sleepy i'm really sleepy so i i
01:51 - can see what i look like
01:53 - on video and i i can barely keep my eyes
01:56 - open
01:57 - so um
02:00 - i was
02:01 - i was here for a long time yesterday got
02:03 - home late and then woke up in the middle
02:06 - of the night and couldn't go back to
02:07 - sleep and then woke up early with my
02:09 - three-year-old
02:11 - and uh
02:12 - watched my little pony at five a.m so
02:16 - um
02:17 - anyway but i just had some coffee
02:21 - i'm gonna do my best to uh to stay awake
02:26 - uh all right
02:32 - so i'm gonna use this pomodoro timer if
02:35 - you're not familiar with how we do
02:36 - things here on the stream
02:38 - uh we have pomodoro sessions where we do
02:40 - 25 minutes of code and then we take a
02:42 - five minute break and i
02:44 - go to the live chat see what you all are
02:46 - saying answer some questions then we go
02:48 - back to 25 minutes of coding and we just
02:51 - go back and forth like that today i
02:53 - think i'd like to get at least two
02:55 - pomodoro sessions in
02:57 - and then we'll just see how things are
02:59 - going uh after that maybe we'll do
03:01 - another one uh maybe not
03:04 - so if i don't get your question right
03:06 - away just hang on for a little while and
03:08 - i'll get to it during one of the breaks
03:10 - so let me start the timer by the way
03:12 - this timer was built by
03:15 - someone in our live chat who watches
03:17 - these streams and contributes so thanks
03:19 - harshit for building this really cool
03:22 - um
03:24 - let's get started all right
03:28 - okay so if you want to follow along with
03:30 - the gatsby documentation it's um
03:34 - gatsbyjs.org
03:37 - so
03:38 - really easy url um and then just click
03:41 - on the docs
03:43 - and
03:44 - we're just we're going to start
03:48 - just with basic
03:49 - basic insole here so
03:52 - we're going to yarn add and then i
03:55 - believe the flag is just g for yarn
03:58 - um did you global
04:03 - and we're going to install this whoa
04:06 - missing some packages
04:08 - did i mess it up yes
04:12 - uh maybe i added
04:17 - maybe it's not g
04:30 - all right
04:31 - let's check it out
04:33 - i haven't installed anything globally
04:35 - with yarn in quite some time
04:37 - so let me double check
04:41 - uh where are we at docs
04:51 - okay
04:52 - yarn global
04:54 - and
04:56 - okay i just put it in the wrong spot
04:58 - yarn
05:00 - whoa
05:08 - yarn global ad
05:14 - where are we at
05:16 - gatsby cli
05:23 - okay we got to do this first to be able
05:26 - to uh build our project with gatsby so
05:28 - we're installing it globally because
05:31 - uh that way
05:34 - we can build out the projects
05:37 - from anywhere i mean it makes sense when
05:39 - you have things like
05:41 - um create react app next uh or gatsby
05:45 - things like that global install makes
05:47 - sense
05:49 - rare i rarely use a global install but
05:52 - occasionally
05:54 - it is worth it
05:55 - all right so i'm going to cd into my
05:57 - projects folder
06:00 - and
06:01 - let's do
06:05 - gatsby
06:12 - i guess we have to pick a starter
06:15 - uh so let me double check
06:19 - oh no i'm sorry i never switched my
06:21 - screen
06:24 - thanks for letting me know sorry
06:26 - um
06:28 - yeah i'm not used to having the full
06:29 - screen thing i just i just started
06:31 - trying it uh yesterday so
06:34 - i have to remember that okay so let me
06:36 - just go back you didn't miss much you
06:38 - just missed me typing the wrong thing in
06:40 - a couple of times
06:41 - um
06:43 - so uh
06:44 - all we did was
06:46 - yarn global add gatsby cli
06:49 - and it installed it
06:51 - and then i i went into my projects
06:52 - folder that's it so
06:55 - not really um
06:58 - not not really anything uh
07:01 - big yet
07:04 - okay
07:05 - now we're gonna go to gatsby
07:09 - oops
07:15 - caspy starter
07:17 - i guess we're going to use gatsby
07:18 - starter hello world
07:26 - so gatsby has quite a few like starter
07:29 - projects so normally like with create
07:31 - react app
07:33 - it's just basic you know you get the
07:34 - same thing no matter what
07:37 - but with gatsby there are different
07:39 - versions of the basic install
07:43 - so i'm just gonna go with the hello
07:46 - world one because
07:49 - it seems to me like
07:52 - uh that'll probably be the most basic
07:54 - for us to build off
07:56 - of uh i did find one that was supposed
08:00 - to be material design based but i wasn't
08:03 - thrilled with all of the styles so
08:07 - i don't think i'm gonna go with that one
08:16 - all right so let's go with
08:19 - gatsby
08:26 - and
08:29 - we're gonna call this
08:33 - franciscan site
08:36 - i guess so i guess that works
08:38 - um
08:41 - do we have to use a starter can you just
08:44 - actually let me see this if we don't
08:45 - have to use a starter that would be cool
08:47 - let's just see what happens
08:55 - all right cool
08:56 - then i don't have to decide which
08:57 - starter to use that works for me
09:13 - all right so this should not take very
09:15 - long
09:17 - and
09:19 - when it's ready
09:22 - we should have
09:24 - a dev server already
09:28 - and
09:29 - let's see
09:38 - taking a little longer than i thought
09:39 - there we go
09:41 - all right still not bad under a minute
09:43 - all right let's cd into that
09:46 - folder
09:50 - there we go
09:51 - and
09:52 - now we're gonna do
09:55 - i'm gonna have to get used to all their
09:56 - commands what is it
09:58 - gatsby develop okay
10:17 - okay
10:20 - okay so we've got this running
10:23 - at localhost
10:26 - uh 8 000.
10:31 - so let me pull over a window
10:34 - and see what we have
10:36 - here we go
10:37 - so we have our gatsby
10:39 - site here
10:42 - it's already set up with with two pages
10:45 - so that's cool
10:51 - all right and
10:52 - we're also going to want to use the
10:54 - command line as well so i'm going to
10:57 - duplicate this tab
11:00 - so now we can do commands in here and we
11:02 - can have our our local
11:05 - server running
11:18 - all right so i'm trying to check uh keep
11:20 - up at least a little with the um
11:23 - with the live chat
11:27 - all right so let's go into the the
11:29 - project structure here and um
11:32 - see what's going on i like i said i've
11:34 - never done gatsby before so i'm a little
11:35 - bit interested in and
11:38 - how they do things
11:39 - so
11:40 - i'm going to use adam at least to start
11:43 - this project out as my
11:45 - as my editor
11:52 - all right
11:53 - so
11:57 - let's check out our package json first
12:00 - i'm going to make this bigger so
12:02 - hopefully you all can see it and let's
12:03 - move it over to this side so it doesn't
12:05 - get blocked by
12:07 - uh by the video in the corner um
12:11 - cool so
12:12 - for starter
12:19 - oh cool so it looks like it came with
12:21 - helmet already
12:22 - uh that's going to help when we put in
12:24 - like title tags and things for our pages
12:28 - and let's see what we have build develop
12:32 - okay it already has formatting
12:35 - interesting
12:37 - that's cool so right off the bat it's
12:39 - giving us um some formatting with
12:41 - prettier i like that
12:44 - that's nice
12:50 - very nice
12:51 - all right cool
12:53 - um
12:56 - let's see let's see what's in our we
12:57 - already have a readme it's just default
13:00 - we'll change that but that's not
13:03 - anything to worry about now we have a
13:05 - gatsby config
13:08 - okay cool so we have
13:11 - metadata
13:12 - not bad here's where our pages are so
13:14 - right now our routing is uh taken care
13:17 - of by
13:18 - any component that we put in this pages
13:20 - folder becomes a page it's it's actually
13:22 - a route so
13:25 - this was our home page
13:26 - and this was our page two where we
13:29 - clicked on and you see they're just
13:31 - uh stateless functional components
13:34 - um
13:36 - let's
13:37 - oops
13:39 - where'd it go
13:43 - let's get my screens in order here
13:46 - there we are okay
13:48 - so
13:50 - right so this is that that index that
13:52 - page one
13:54 - and then we go to page two you could
13:55 - it's gonna be hard to see
13:57 - but
13:58 - in our url actually changes and page 2
14:02 - is at the end
14:04 - so
14:06 - really simple routing we're probably
14:08 - going to want to do some programmatic
14:09 - routing and not just probably we are
14:12 - going to want to do pro programmatic
14:13 - routing
14:14 - uh later on
14:17 - but for now this is this is great
14:20 - uh it also comes with a 404 page and we
14:23 - can customize that which is really
14:24 - awesome we'll definitely want to do that
14:26 - as well
14:27 - and let's check our layouts
14:31 - great so
14:33 - we we already have a layout page made i
14:35 - really like that that's cool
14:38 - um
14:40 - this is where we're probably going to
14:41 - want to put
14:45 - yeah we'll probably end up putting our
14:47 - header
14:49 - at least our header in there maybe our
14:51 - footer as well
14:58 - yeah and we're gonna want to
15:05 - yeah we're gonna want this meta um data
15:08 - to change
15:09 - based on the page but you know we we can
15:12 - get to that a little bit later on but
15:14 - otherwise i like this this is a nice
15:17 - this is a nice setup to start so so far
15:19 - so good with gatsby
15:22 - uh we don't need to worry about these
15:24 - at this point i do want to make sure we
15:27 - have a git ignorer that's sufficient for
15:29 - this project
15:36 - we don't have a dot end yet
15:38 - but we will probably have it eventually
15:42 - so i'm just gonna throw it in there
15:43 - right now
15:46 - and
15:48 - okay cool
15:55 - see
15:56 - okay so
15:58 - here's our next step
16:02 - let's start
16:04 - um
16:07 - i guess we can make this a get repo now
16:10 - i'll i'll let you guys help me out with
16:11 - this decision
16:13 - do we want to make it a get repo right
16:15 - now
16:16 - um
16:17 - knowing that we have to make a lot of
16:19 - like really basic changes do we want to
16:22 - have all those commits in there or
16:24 - should we build it out a little bit
16:25 - first and then commit
16:28 - so anyway let me know i'll check the
16:31 - back of the live chat in uh in just a
16:33 - second
16:37 - uh but
16:39 - in the meantime we need to figure out
16:41 - how we're going to style this all right
16:43 - i do not want to go from scratch and try
16:45 - to style this
16:46 - in our previous project we used material
16:49 - ui the new the beta version material ui
16:58 - i
16:59 - in terms of what it looks like and what
17:01 - it can do i really like it i know that
17:04 - um that some of you had some issues with
17:06 - it was a little bit complicated to get
17:08 - some things to work
17:10 - but i really i don't know of an
17:12 - alternative to material ui that's as
17:14 - complete and has all the components that
17:17 - we need
17:19 - um
17:20 - so
17:22 - i think i'm just gonna go with material
17:24 - ui again
17:28 - okay so it looks like um
17:30 - tiffany and uh no beer say
17:34 - and hacker you see so everybody's kind
17:36 - of saying do a little bit first and then
17:38 - commit okay cool that's what i usually
17:40 - do
17:41 - oh okay philip's saying get from the
17:43 - start
17:45 - i don't know i usually build out a
17:47 - little bit because i i just think like
17:50 - what what am i going to write in my git
17:52 - commit like
17:53 - i deleted all the
17:56 - boilerplate demo code like said a decent
17:59 - commit
18:00 - uh anyway
18:03 - all right you know what let's just do it
18:04 - let's just make it a get repo from the
18:06 - start and um
18:08 - that way if anything anybody has
18:09 - anything to say about what ui framework
18:12 - we're going to use it'll give you a
18:13 - couple more minutes to uh to say it so
18:16 - if you're not familiar with git
18:19 - i'm going to explain what's going on
18:20 - here and then i'm going to switch over
18:22 - to github and we're going to put our git
18:24 - repo on github and i'll explain
18:26 - everything
18:27 - uh so
18:28 - don't worry if if you're totally new to
18:31 - git and github
18:33 - or even using the terminal i'll do my
18:35 - best to explain things and for those of
18:37 - you who who already know all this stuff
18:40 - it's it's going to be a little bit
18:41 - boring for you so i apologize but i
18:43 - don't want to leave anybody behind uh if
18:45 - i don't have to okay so
18:48 - from the command line i already have git
18:51 - installed
18:52 - so
18:53 - if you've never installed git
18:55 - on your machine
18:56 - you have to do that first but assuming
18:58 - you've done that which is not a
19:00 - difficult process assuming you've done
19:02 - that you can just go get
19:04 - init
19:06 - make sure you're inside your project
19:08 - folder which we are here
19:11 - and then you hit enter and it says i've
19:13 - initialized an empty git repository
19:16 - okay now
19:18 - i just have this
19:20 - well it'll depend on your terminal and
19:22 - how you have it set up but when i end it
19:24 - repository uh i have a hashtag there
19:27 - we could do a git status
19:29 - to see what's going on
19:32 - and anytime you're not sure what's going
19:34 - on
19:35 - with your your git repo
19:37 - type git status and it'll let you know
19:39 - if there are files that need to be
19:40 - committed
19:42 - so right now
19:45 - here are all the files
19:49 - that
19:50 - we're not doing anything with yet we
19:51 - haven't added them we had it haven't
19:53 - committed them but we definitely want
19:55 - these files there you don't want all
19:57 - your files to be committed that's what
19:59 - our getignore is for
20:01 - so i showed this earlier
20:02 - our getignore tells git which files to
20:06 - ignore right it makes sense
20:09 - so
20:10 - specifically the the one we always want
20:12 - to ignore is our node modules there's a
20:15 - lot of stuff in node modules so i mean
20:17 - that's insane look at all that stuff
20:19 - it's alphabetical order i'm only on d
20:21 - scrolling down there so we don't want to
20:24 - put that on github right we don't need
20:26 - it our package json tells
20:30 - somebody's
20:33 - node or npm or yarn which modules to
20:36 - install so they can
20:39 - uh clone the repository download it and
20:41 - they can run npm or yarn on their
20:43 - machines and get all those packages so
20:47 - it definitely cuts down on the amount of
20:49 - uh files and folders that get sent up to
20:52 - uh to github
20:54 - okay so what we want to do
20:56 - oops is do get let me put this up i
20:59 - don't want it to get blocked
21:02 - there we go
21:03 - uh so we're going to do get add
21:06 - and i'm just going to put a dot that
21:08 - means we're adding everything
21:10 - all right and
21:12 - let's see this is that okay so when we
21:14 - do a git status again now these are all
21:16 - green that means they've been added
21:18 - they're ready to
21:19 - uh to commit
21:22 - um i guess they call it stage right it's
21:24 - not added it's um
21:27 - they're staged
21:29 - uh we want to do a git commit
21:35 - and
21:36 - we can also add a flag that's m
21:39 - and that means we're just going to put a
21:40 - message for our commit just to let
21:42 - people know what we're changing
21:45 - and we're going to add that message in
21:46 - line if you don't add that then
21:49 - whatever you have set up as your default
21:51 - editor is going to open up and you're
21:53 - going to have to make a message in there
21:54 - so this saves just a little bit of time
21:57 - it's nice if you
21:58 - you know don't really have a long commit
22:00 - message so
22:01 - git commit
22:02 - uh m
22:04 - and we're just gonna say
22:06 - i'm gonna say a net usually my first
22:08 - commit no matter what i always just call
22:10 - init
22:12 - for basically for initial commit or
22:14 - initialize or you know however you want
22:17 - to
22:18 - think about that and i'm going to hit
22:20 - enter
22:21 - and
22:22 - there we go
22:23 - everything's added
22:24 - we can check do we get status again and
22:26 - now it says we're on the master branch
22:28 - and there's nothing to commit
22:31 - and if we look back
22:34 - here
22:35 - depending on how you have what editor
22:37 - you're using you should have some things
22:40 - happen like when you
22:45 - oh and it's not working for me right now
22:47 - uh
22:48 - [Music]
22:49 - it figures
22:50 - but what should happen is you should
22:52 - have some type of visual indicator when
22:54 - you've changed a file
22:57 - so
22:59 - let's see this is going to break things
23:01 - but
23:03 - oh well
23:05 - it's not working for me i was um
23:07 - disabling some packages and adding some
23:09 - new packages to adam so
23:11 - maybe i messed something up anyway
23:16 - now we want to add this to github
23:20 - so
23:23 - let me
23:24 - pull this down a bit and we'll go back
23:26 - to our browser
23:28 - and let's go to github
23:33 - so this is my github let me make
23:37 - everything bigger so we can see
23:43 - normally github does not look like this
23:46 - this is the github dark
23:49 - theme
23:51 - so uh search github for the github dark
23:54 - theme and uh you'll you can you can do
23:57 - this too
23:59 - uh so what we're gonna do first is go
24:01 - create we're gonna new repository so we
24:04 - click new repository
24:07 - and
24:08 - in this case
24:10 - let's see
24:12 - i want to switch it up so it's this fus
24:15 - marcom so that's i work at franciscan
24:18 - university of steubenville and i'm in
24:19 - the marketing communications department
24:21 - so we have our own github organization
24:23 - so i'm going to make that the owner
24:26 - and then we're going to call this
24:30 - franciscan um
24:38 - franciscan reacts
24:41 - i guess
24:44 - that works that's fine i'm kind of
24:47 - terrible at naming things at first it's
24:49 - hard to come up with something we'll
24:50 - give it a short description
24:52 - um
25:10 - okay that's good enough for now we're
25:12 - gonna make this a public repository so
25:14 - you all can see it
25:16 - and we already have a readme so we're
25:17 - not getting initialized with a readme
25:19 - and i believe we already have a license
25:21 - we do
25:22 - um so we don't need a license so we're
25:25 - not going to add this we already have a
25:26 - git ignore
25:28 - so you don't need to add any of this
25:30 - and we're going to create the repo
25:35 - okay now we come to this screen
25:38 - so
25:40 - we want to go down here to push an
25:43 - existing repository right because we've
25:45 - already made the repository on our local
25:47 - machine
25:48 - so
25:51 - let's grab this code
25:53 - and this this is already filled in
25:56 - with the correct code for you for that
25:59 - repo so this already says franciscan
26:02 - hyphen react
26:04 - so we're going to copy that
26:06 - and paste it
26:08 - here
26:10 - and then
26:13 - let's copy that next line
26:15 - so basically what this just did is is
26:17 - added
26:18 - so git remote add origin so we've added
26:21 - this
26:22 - as our remote
26:24 - okay
26:25 - um
26:26 - now we're gonna push
26:30 - and that's what we're gonna use to get
26:32 - our code up onto github we're gonna use
26:34 - push but this is our our first push
26:42 - and i gotta enter my key
26:48 - usually
26:49 - i don't have to enter unless i
26:52 - restart my computer
26:54 - which i did recently
26:57 - uh so
27:00 - on my other screen i'm going into my
27:02 - last pass so i can get my um uh
27:08 - see
27:09 - so i get my key
27:16 - okay
27:17 - so let's put that key in there
27:21 - now
27:22 - everything has gone up to github so you
27:25 - all should be able to see that now i'm
27:26 - going to paste the link into the live
27:28 - chat and then i'm also going to have a
27:29 - link in the description to this video
27:31 - and all the future videos on this
27:32 - project
27:35 - so now
27:36 - what am i going to do
27:40 - um i want to do ssh add
27:44 - because i don't want to have to type
27:45 - that key in again so that'll save it
27:51 - status
27:53 - how was i
27:55 - oh i guess i
27:58 - i didn't modify the git ignore didn't i
28:05 - there we go
28:06 - um
28:07 - and in case you wonder what was going on
28:09 - there i had added a few lines
28:12 - uh just just hit enter a few times so
28:16 - all right
28:17 - my first uh session first 25 minute
28:20 - session is up so not bad we got gatsby
28:23 - uh going
28:24 - and um got a development environment set
28:27 - up and we also got to get repo set up so
28:31 - uh now
28:33 - i'm gonna do a
28:35 - short break
28:39 - and i'm gonna go to live chat and go up
28:41 - to the top and then scroll down through
28:43 - and try to get as many uh
28:45 - questions answered as i can
28:52 - okay
29:07 - okay so i got a question about the
29:10 - pomodoro clock so uh
29:12 - jesse mcintyre says why pomodoro
29:17 - i'm used to i've been used to using
29:20 - pomodoro for a while now
29:22 - on my own
29:23 - and
29:25 - this is it's kind of a nice way to break
29:26 - up the work
29:29 - so um
29:31 - i i like using pomodoro in the stream in
29:35 - particular i like using it because
29:38 - it reminds me to stop and check out the
29:41 - live chat and then it also reminds me to
29:43 - stop looking at the live chat and then
29:45 - get back to work so
29:47 - uh it's it's kind of a nice break
29:50 - and uh if you don't know that much about
29:52 - pomodoro
29:53 - it's really cool i check into it i may
29:56 - do a video on
29:58 - pomodoro
30:00 - at some point
30:04 - but
30:05 - let's see
30:07 - anyway it's basically a nice way to
30:09 - break up your time
30:23 - so when i forgot to switch my screen i
30:24 - had some some funny comments here so so
30:27 - just talked in are you going to show
30:29 - your screen i mean you're not about to
30:30 - look at but i came to see some code
30:34 - i like that comment uh yeah sorry about
30:37 - that i will do my best to not make that
30:40 - same mistake again
30:49 - okay um
30:51 - philip has a question about uh low dash
30:53 - sort by saying is there a way to
30:55 - prioritize a sort condition if the
30:57 - object met two conditions i'm not
30:59 - familiar with low dash short buy so i'm
31:02 - not really able to answer that if
31:03 - anybody watching is uh good with with
31:05 - lodash particularly
31:08 - sort by
31:09 - um
31:10 - you know feel free to
31:13 - uh to put an answer there in the live
31:14 - chat for phillip
31:18 - uh deepak says thanks for sharing your
31:20 - time with us you're welcome
31:27 - okay
31:30 - all right so uh lucas asked what is
31:32 - gatsby um if you're familiar with create
31:35 - react app or next js or any other things
31:38 - like that gatsby is in that same
31:41 - category um it lets you
31:44 - honestly i guess like scaffold
31:46 - a react project and usually these types
31:49 - of things come built in with a lot of
31:50 - extras
31:52 - that wouldn't be with just you know your
31:53 - basic react setup so
31:56 - we'll we'll be kind of working through
31:58 - and using some of those extras
32:00 - but you can see already
32:03 - from the
32:04 - from our package json just a few of the
32:06 - extras right we have prettier this is
32:08 - going to
32:09 - be like formatting of our code so we
32:12 - have some auto formatting of code in
32:13 - there
32:14 - we have helmet which is going to help us
32:17 - to add proper uh title tags and metadata
32:20 - uh to our our pages so
32:24 - just right off the bat there's a few
32:25 - things there's a lot of other stuff uh
32:28 - which we'll get to you know in future
32:29 - streams
32:39 - uh zubair says gatsby is uh kind of like
32:42 - jekyll which is a static site generator
32:44 - um
32:46 - it's it's modern wordpress with add-on
32:48 - single page application features
32:50 - uh
32:51 - yeah actually i forgot about jekyll yeah
32:53 - so
32:54 - um yeah gatsby does
32:56 - call itself a static site generator so
32:58 - that would be the the class of
33:01 - what it is
33:07 - john hanson says is it easy to migrate
33:09 - code from a create react app project to
33:11 - a gatsby project
33:13 - um
33:14 - i would think yes
33:16 - because
33:18 - components are components still and
33:20 - react
33:21 - right
33:22 - so it shouldn't be an issue
33:24 - if we want to pull some components from
33:26 - uh from projects that we've done earlier
33:29 - like particularly the last project
33:31 - and reuse them so
33:33 - like the header
33:34 - the side drawer
33:37 - we should definitely pull in some of
33:38 - those components assuming that we're
33:40 - going to use the same ui framework
33:42 - i think it would make sense to pull in
33:45 - those components instead of completely
33:47 - recreating them we're definitely going
33:49 - to have to modify them
33:51 - but it'll save us a lot of time
33:53 - if we can reuse as much code as possible
34:02 - okay so all of my or my my time is up in
34:06 - this break so we're gonna do another 25
34:08 - minutes of coding and um
34:12 - i didn't get through everything in the
34:14 - live chat but i will get through
34:16 - um
34:18 - let's see
34:20 - i'll get through everything uh on our
34:22 - next break
34:30 - see
34:32 - okay so
34:37 - at this point
34:40 - let me get let me put a link for the
34:42 - repo and
34:44 - so
34:46 - here's our repository
34:48 - so you see
34:49 - um
34:51 - really basic right now
34:54 - i'm going to paste that link into the
34:56 - live chat
35:00 - and now you all can check it out right
35:04 - now not much to it uh but
35:07 - we will be adding code to this
35:09 - pretty much every day for a while
35:13 - and
35:14 - now let's go
35:19 - i guess we'll add material ui
35:31 - i'm just gonna double check and see
35:34 - in the part of the live chat that i
35:35 - didn't look at yet
35:37 - if anything was said about
35:40 - ui frameworks
35:49 - um
35:51 - okay i'm not seeing it i'm scrolling
35:53 - through pretty quickly so i may be
35:55 - missing it
35:56 - um
35:58 - i just realized that i have the font
36:00 - size really small on the chat window
36:03 - which is silly i keep squinting so i
36:06 - just
36:07 - uh brought that up
36:10 - i brought that font size up a bit
36:12 - [Music]
36:13 - okay
36:16 - yeah
36:17 - let's uh let's grab
36:19 - the latest version of material ui and in
36:22 - fact
36:24 - let's go over to our previous project
36:28 - that we're actually not finished with
36:29 - yet but we're still working on and let's
36:31 - check our package json and just see if
36:33 - there's anything else we'd like to bring
36:35 - over
36:39 - so this is project four we did a lot of
36:41 - videos about uh this project so if
36:43 - you're interested in this this was done
36:45 - with create react app instead of uh
36:47 - gatsby
36:49 - um
36:50 - but i think what we had like 15 16
36:52 - streams on this
36:55 - so we have it has its own playlist
36:59 - and i believe it's clearly labeled react
37:01 - project four
37:06 - okay
37:16 - where's our
37:17 - dependencies
37:20 - i think a lot of this we will not need
37:27 - most of these were for what we were
37:29 - doing on our custom server
37:37 - okay
37:41 - should be good i guess
37:45 - uh we do want to grab material ui i want
37:48 - to make sure we're grabbing the latest
37:49 - version so i'm not just going to get
37:50 - this i want to see
37:53 - what the latest version is
37:55 - uh i think i may want to put in some of
37:57 - this thing some of this stuff with
37:59 - testing and auto formatting
38:02 - but i'm going to hold off on that for
38:03 - now
38:05 - so first things first let's check out
38:08 - material ui
38:16 - and we're gonna use
38:18 - the version one uh beta
38:21 - let's see what it says
38:25 - packages
38:28 - next
38:33 - all right so we can use material ui next
38:45 - okay
38:46 - and
38:48 - then we're also going to want to grab
38:49 - those icons as well
38:51 - um put your ui icons
38:54 - okay
38:55 - oops
38:58 - so we're going to do yarn
39:00 - add
39:02 - material ui
39:04 - and
39:06 - we're going to also add material
39:10 - ui
39:12 - i want to double check make sure what
39:14 - that was mature uh icons okay
39:17 - i think it's always important to double
39:19 - check when you're adding packages that
39:20 - you spell everything correctly and you
39:22 - have the right name
39:23 - um it has happened that
39:26 - people have made packages that had some
39:28 - malicious code in it in the package and
39:31 - it was a just a misspelling of a popular
39:34 - uh npm package so
39:37 - uh be careful with that
39:40 - it's your ui icons
39:44 - yep everything looks good let's add it
39:57 - all right awesome
39:58 - uh so we have this and we can do a git
40:01 - status now and see what's here
40:03 - um and
40:05 - let's just do a commit
40:07 - just to show we can actually combine the
40:10 - add step and the commit step if we add
40:12 - this a flag to a commit and then i'm
40:15 - also going to combine the
40:17 - commit message step here so we're adding
40:19 - am
40:20 - uh so we're going to get commit am and
40:22 - we're going to add
40:25 - material
40:27 - ui
40:32 - and we can do a git push origin
40:35 - git push origin will automatically push
40:37 - to the master branch
40:40 - so
40:41 - that's why we didn't have to put a
40:42 - branch name
40:44 - in case you've seen that before and you
40:45 - use the branch name
40:47 - we learned
40:48 - a week or two ago that that's not
40:49 - necessary
40:55 - okay
40:56 - awesome so we have this in here now the
40:58 - next step i think what we should do is
41:00 - let's add some of those components that
41:02 - we used in the last project
41:05 - so the side drawer
41:07 - and the the app bar at the top we're
41:09 - going to take those and we're going to
41:11 - add them into our layout component
41:13 - and
41:15 - of course we're going to have to adjust
41:16 - them
41:17 - but we already have the design for that
41:20 - app bar finished right we worked on that
41:24 - months ago
41:26 - so uh we'll bring up that design
41:29 - which was it's more than a design we
41:31 - actually built it out
41:32 - um we'll bring that up and then we'll
41:35 - start to change
41:37 - that app bar
41:39 - to make it look exactly uh like we we
41:42 - want it to look
41:43 - okay so
41:45 - we're gonna grab
41:48 - app.js
41:50 - [Music]
41:53 - let's see
41:55 - our layout here here we go is app bar
42:04 - okay so we got a lot going on here
42:08 - goodness yeah we have a lot going on
42:10 - here let's um let's just copy everything
42:14 - at first
42:16 - and then
42:18 - we can remove the stuff that we're not
42:20 - going to use
42:22 - or edit things right so
42:27 - this is get hopefully going to save us a
42:30 - lot of time
42:32 - i i've had mixed results of doing things
42:35 - like this
42:36 - usually it does save you a lot of time
42:37 - but occasionally uh you spend so much
42:40 - time trying to go through the code and
42:43 - make it work with a new project that you
42:44 - don't really save that much time but in
42:46 - this case i i think i think it will be a
42:48 - time saver for us
42:50 - so
42:52 - we are going to want to leave
42:55 - our gatsby link here
43:00 - and react helmet if we we aren't
43:03 - we may already be using it in here
43:05 - i think we are
43:07 - let me double check
43:09 - see what else we have going on here
43:37 - okay i think we're safe
43:40 - you know what i don't think we should
43:41 - add this directly to layouts we should
43:43 - break it down like we're doing in this
43:45 - other project so if you it's hard to see
43:48 - here
43:48 - but
43:50 - we have our our layout
43:52 - split up
43:53 - into
43:54 - uh different components i think that's
43:57 - gonna end up being better otherwise
43:58 - we're gonna have one really really large
44:01 - um
44:02 - layout component
44:04 - and it's always better to split up your
44:06 - components if possible
44:09 - so
44:10 - let's do that let's create
44:13 - in this case
44:14 - this is going to be our our app bar
44:17 - uh components
44:21 - so let's see
44:25 - we'll go ahead and just create it here
44:27 - in uh in layouts
44:29 - so
44:31 - let's make this
44:35 - let's follow our project structure here
44:37 - do we have okay this is all just in the
44:40 - layouts folder
44:41 - um so we're just going to make a new
44:43 - file right here and you can do that
44:44 - right from your code editor you could
44:46 - open up you know your file structure and
44:48 - do it or you can do it from the command
44:50 - line so i'll try to do it in
44:53 - on the command line as well and that way
44:54 - if you're not familiar with it then at
44:56 - least you get to see uh how we do that
44:59 - so in this case i'm going to name it um
45:05 - app bar yeah
45:07 - app bar
45:11 - dot js
45:15 - great and i'm gonna copy it in now
45:19 - and
45:22 - have our
45:27 - body calling this
45:29 - top bar
45:42 - all right we're bringing in at bar for
45:43 - material ui already
45:48 - and what we want to do is bring in app
45:50 - bar as
45:54 - mui
45:57 - app bar
46:02 - so let me explain for a second what i'm
46:04 - doing and why i'm doing this so in
46:06 - general it's good practice to name your
46:08 - component and the file
46:10 - the same thing right now we're not so
46:12 - our components named at bar but we're
46:14 - calling it top bar the reason we did it
46:16 - like that in our last project
46:18 - was because material ui already comes
46:21 - with a component called app bar
46:23 - but we don't have to call it outbar so
46:25 - we can import it as something else so
46:28 - we're calling this material ui app bar
46:30 - so mui we're going to prefix it with mui
46:34 - that way we can distinguish material
46:36 - ui's components and our custom
46:38 - components
46:39 - if we feel that we want to name them the
46:42 - same thing which in this case i do this
46:44 - is an app bar
46:46 - uh so i would like to be able to call it
46:49 - app bar
46:51 - so
46:53 - let's
46:54 - go app bar
46:59 - and uh if you're feeling like
47:02 - we kind of just jumped ahead because we
47:04 - copied all this code don't worry we're
47:06 - definitely going to do some components
47:08 - from scratch i'm not going to be copy
47:10 - and pasting everything over
47:12 - in this case
47:13 - this will just help us get a jump start
47:15 - on the the ui for this project
47:20 - okay and then we also need to change
47:23 - this name here
47:25 - to
47:26 - mui app bar
47:30 - all right now we're going to save that
47:33 - and we need to make sure
47:36 - of a few things um first i want to look
47:40 - at what we're bringing in
47:43 - and make sure that we actually have
47:45 - these things installed
47:53 - okay this class names
47:56 - did we have to bring in
48:03 - uh let me make sure
48:10 - where did we pull in class names from
48:12 - before
48:28 - let's see
48:30 - we have uh
48:31 - several other people working on this
48:33 - project so
48:35 - um
48:37 - i don't remember where we did this so
48:39 - who's
48:41 - if anybody that was working on this
48:42 - project before remembers where we pulled
48:44 - class names please let me know
48:46 - we may not even need it
48:48 - so i don't want to take the time to go
48:50 - back through the code right now in the
48:52 - uh during the stream that may not be
48:54 - that exciting so
48:56 - i'll just check it out later
48:59 - but for now
49:00 - oops we have
49:05 - our at bar component
49:19 - and what we'll do with this app bar
49:22 - component then
49:24 - is we're going to want to import that
49:26 - into
49:30 - our layout index component
49:33 - right so
49:36 - we're going to import
49:39 - app bar
49:40 - from
49:42 - and then we're gonna do uh
49:47 - i guess
49:48 - what is it dot slash
49:51 - um
49:55 - app bar
50:02 - is that how we do it did i need the dot
50:04 - slash what am i thinking
50:10 - all right so let's see
50:17 - let's check out our
50:23 - our index here just to see how we're
50:26 - kind of piecing these things together
50:36 - and we won't need to bring over
50:37 - everything
50:48 - but we would definitely need
50:51 - a lot of these things to handle um
50:55 - we're definitely going to need that
50:57 - search bar
50:58 - everything we need to handle search bar
51:01 - okay this is a little bit more in-depth
51:03 - than i want to go here in this first
51:05 - opening stream so
51:06 - i'm going to switch up and just
51:09 - work on getting this app board to the
51:11 - point where we can have something we can
51:12 - see
51:15 - that
51:17 - will be
51:20 - it'll be nice we'll have a sense of
51:21 - accomplishment that we can see something
51:23 - on the screen
51:24 - all right so we've imported appbar and
51:26 - now we just need to use it
51:29 - so
51:31 - let's bring in
51:32 - so this is the header component and
51:34 - we're bringing that in
51:37 - here
51:49 - all right so this is our current app bar
51:52 - so if you you'll see here right
51:55 - this is the purple it says gatsby so you
51:57 - can see what we're doing here background
52:00 - rebecca purple right
52:02 - so we don't need this anymore
52:05 - and in fact
52:07 - we really don't need any of this
52:11 - um
52:13 - we actually don't need this header
52:15 - at all
52:17 - so let's just remove that
52:20 - because instead of header
52:22 - we can just add
52:27 - app bar
52:28 - right so that saves us some space there
52:32 - now when i save this
52:34 - i don't expect this to work yet
52:36 - because we're trying to import some
52:38 - stuff that i don't know that we have
52:42 - so import apple
52:44 - as maybe i got my syntax wrong
52:50 - let's double check
52:55 - let's see
52:56 - because i know we did this
53:00 - somewhere else
53:07 - let's see did we do this elsewhere with
53:09 - our drawer
53:14 - i thought we did
53:30 - all right
53:31 - let me uh quickly look up if it was my
53:34 - syntax
53:35 - imports
53:43 - uh let's see if that'll give us what we
53:54 - want all right this looks good
53:59 - oh okay i'm forgetting my brackets
54:03 - sorry about that
54:08 - so let's try it again with brackets
54:15 - and i expect we'll get a different error
54:17 - now a little bit farther down
54:19 - but we'll take it one error at a time
54:26 - there we go cannot read property app bar
54:29 - of undefined
54:31 - classes app are okay
54:33 - um
54:35 - we don't have
54:37 - these classes
54:38 - being passed being set up at all
54:42 - yeah so
54:46 - that was to be expected
54:51 - let's see if we can pull in some of
54:52 - these
54:59 - let's see where do we have it here it's
55:01 - a nice oops
55:03 - of our styles
55:09 - yeah
55:10 - let's pull this whole file in
55:17 - and we haven't even set up material ui
55:19 - yet in our our root file
55:22 - uh totally slipped my mind so let's do
55:24 - that as well since i already copied this
55:28 - styles.js let's let's make it
55:32 - a new file
55:34 - and call this
55:38 - styles.js and we'll paste this in
55:41 - save it
55:43 - and
55:48 - see
55:49 - let's let's before we forget anything
55:52 - else
55:53 - uh make sure we go in
55:58 - to our index
56:02 - actually where is
56:10 - okay this is different
56:20 - yeah this is definitely different okay
56:23 - for my people who have used gatsby
56:26 - before
56:29 - i'm looking for a root
56:31 - component
56:32 - um
56:34 - where is where's the root component
56:39 - let me check my timer as well um
56:41 - stuck here okay two minutes
56:46 - and if i can't find the root component
56:48 - how do we set up
56:50 - material ui is it is okay it's in public
57:02 - i mean um
57:04 - not the html but like normally you would
57:06 - have an app.js or something like that
57:11 - we we don't have anything like that
57:13 - it
57:14 - doesn't look like we have anything like
57:15 - that right now
57:22 - i mean i i doubt it's this index but if
57:24 - it was anything
57:27 - i guess that would be it it's not this
57:29 - config
57:31 - hmm so is there a gatsby way to import
57:36 - material ui then and start using that
57:40 - yeah here's our gatsby config
57:43 - so obviously like that's not
57:45 - what we're really looking for so just to
57:47 - give you an example what we're looking
57:49 - for
57:51 - um
57:53 - let's get rid of these views
57:55 - either like our so obviously we have our
57:58 - index here but i'm thinking more app.js
58:01 - that we could
58:04 - um
58:06 - you can see like everything is
58:11 - is in here now we did wrap i believe our
58:14 - layout
58:16 - right in this project we used our layout
58:18 - index
58:19 - and um
58:21 - is that where we added all our yeah our
58:23 - provider our theme provider we did in
58:26 - here so i guess we could do it there
58:31 - um but i guess i'm thinking like what if
58:33 - we add down the road uh what if we
58:35 - decide we want to use react router can
58:37 - we do that
58:40 - i guess we don't have to decide on it
58:41 - now
58:42 - but um
58:45 - all right just have to be aware of
58:48 - you know some of the differences
58:50 - so let's uh let's pull this in
58:57 - to our index
58:59 - our layout index
59:05 - and
59:06 - then let's also
59:10 - provide a thing
59:12 - [Music]
59:17 - and
59:20 - we're going to wrap this here
59:28 - there we go
59:30 - and then
59:31 - we're going to apply this props classes
59:44 - i'm going to be able
59:46 - i mean we're definitely gonna have to
59:48 - this can't stay a stateless functional
59:50 - component so
59:51 - that's gonna change because we're gonna
59:52 - need some stuff going on up here
59:55 - um
59:56 - all right so that's gonna need a lot of
59:57 - change so
59:58 - unfortunately we're going to have to
59:59 - leave this
60:01 - with an error right now
60:04 - simply because i don't think we're going
60:05 - to have enough time to
60:07 - put in everything we need
60:12 - to kind of integrate these old
60:14 - components with what we're doing now
60:20 - so uh the the timer is up again
60:24 - let me see what time it is
60:29 - okay so we've been streaming for a
60:30 - little over an hour now
60:32 - um
60:33 - let's see
60:35 - i think that's a good time uh so i think
60:37 - i'm not going to do another pomodoro
60:39 - session i hate to leave it off with an
60:41 - error message but
60:42 - um i don't want to do a super long
60:45 - stream
60:46 - today i have some other projects that i
60:48 - need to work on and um and some of this
60:51 - work is going to be a little like
60:53 - tedious and not really that exciting now
60:54 - it's just going to be comparing files
60:56 - and making sure that
60:58 - um
60:59 - we have you know everything i need that
61:01 - i'm i'm importing the right stuff
61:04 - in
61:05 - the component that i've just transferred
61:08 - and copied so at this point i'm going to
61:11 - try to get through
61:12 - all the questions that are in the live
61:14 - chat if you have a question go ahead and
61:15 - put it in there now
61:18 - and um
61:19 - if you don't have a question please
61:20 - stick around and help to answer the
61:22 - questions i definitely appreciate
61:24 - having
61:25 - your expertise
61:29 - okay so i left off
61:33 - right about here okay
61:35 - uh anna says so what are you making uh
61:37 - is it a new project yes it is a new
61:39 - project
61:40 - and um
61:42 - so yesterday was the first day i talked
61:44 - about it so i explained everything
61:46 - yesterday so if you want to check out
61:47 - that recording of that stream you'll
61:49 - have a much more in-depth thing but
61:51 - basically this is going to be the main
61:52 - website
61:54 - for the university i work for so
61:55 - franciscan.edu
61:57 - we're going to completely redo it it's
61:59 - going to be built with react we're going
62:00 - to have content management system
62:04 - where we're pulling data from through an
62:06 - api
62:07 - and eventually we're going to have to
62:09 - set up new servers
62:12 - new database
62:13 - so a lot's going to go into this but the
62:15 - site itself is actually somewhat basic
62:17 - there's not going to need to be any
62:19 - login we just need to we need to display
62:21 - data
62:22 - perhaps down the road maybe we'll do
62:24 - more but at least for now to get it
62:26 - launched
62:27 - that's what we need to do
62:29 - and it needs to be launched
62:31 - sometime in february
62:34 - or at least ready for testing
62:36 - maybe around the beginning of february
62:38 - 2018
62:49 - okay so um jesse mcintyre asks what's
62:52 - the difference between npm and yarn
62:55 - that's a good question so um npm and
62:58 - yarn basically do the same thing when
63:01 - yarn first came out uh the big thing was
63:04 - it was faster and it also had this yarn
63:06 - lock file
63:08 - okay now with newer versions of npm npm
63:11 - is a lot faster too and npm also has
63:14 - their version of a lock file so
63:17 - anymore i don't really know that there's
63:19 - that much of a difference it seems to me
63:22 - like uh you can do
63:24 - with yarn the same things but the
63:26 - commands are slightly
63:28 - um shorter to type in they're more
63:31 - concise
63:32 - um but maybe it's just because i don't
63:35 - know all the shorthand for npm
63:38 - commands
63:39 - uh but at this point you can use them
63:41 - basically interchangeably and
63:45 - at least to me i don't see one or the
63:47 - other as the clear
63:49 - winner
63:50 - when you're comparing the two
64:00 - okay
64:03 - someone's asking for bank account
64:05 - hacking tricks we we don't do uh bank
64:08 - account hacking on on this stream so
64:12 - i'm sorry i can't help you with that
64:15 - uh also asked about kali linux
64:18 - um
64:19 - as far as i know kali linux is
64:22 - a version of linux that comes pre-loaded
64:25 - with lots of
64:27 - penetration testing tools
64:29 - i get that's a nice way to put it
64:32 - so you could use it for good or for evil
64:34 - i suppose
64:37 - and uh
64:39 - it looks like and andrei also answered
64:41 - that as well so thank you for that
64:52 - oh cool francis is first to star let's
64:54 - check out that repo and see if we got
64:56 - i think we got at least uh one star
64:58 - right
65:00 - oh cool eight stars awesome
65:05 - very cool
65:08 - and i'm going to be filling this
65:10 - repository with issues
65:11 - and then you can check out the issues
65:13 - and see if you'd like to contribute so i
65:15 - need to get a little bit more done just
65:17 - to set things up before i can really
65:19 - start putting issues in but i'd like to
65:21 - start getting them in there
65:23 - before this week is over so
65:25 - sometime probably tomorrow
65:35 - uh discover holland says is there a grid
65:38 - system with material ui
65:40 - um
65:42 - yes uh there is a grid system
65:45 - so
65:48 - i guess we don't have to check it out
65:49 - but if you go to
65:52 - layouts
65:54 - if you go in the mature ui documentation
65:56 - for the for the newest version uh they
65:59 - they have a grid system
66:01 - actually pretty pretty nice
66:02 - documentation i think with
66:05 - kind of interactive examples so
66:08 - yeah they do have a grid system which is
66:10 - it's very nice
66:21 - um john hanson says is there a gatsby
66:24 - version specific to material ui
66:27 - i actually i'm not really sure that's a
66:28 - good question i didn't check into that
66:30 - beforehand but might not be a bad thing
66:32 - to check into and make sure there's no
66:34 - issues with different versions
66:40 - uh demon proc says is he coding a game
66:43 - unfortunately no that would be pretty
66:45 - fun uh but just uh just a normal website
66:48 - uh so not a game right now although i
66:50 - think it'd be cool if we could do a game
66:52 - on on the live stream uh maybe one day
67:00 - uh in infamous uh
67:06 - i guess that's how you say it says how
67:07 - can you pass the value of the text input
67:10 - into a function
67:13 - um
67:17 - so i'm not sure if you're talking about
67:18 - specifically in react or with javascript
67:21 - in general but in react
67:23 - um
67:26 - you can i suppose there's always more
67:29 - than one way to do it but
67:31 - you know for instance here
67:33 - we are doing that
67:35 - with our
67:38 - let me find the um
67:40 - the component
67:53 - do we not have a component
67:56 - there we go
67:58 - um so
67:59 - for this
68:03 - we have
68:05 - a
68:06 - let's find our our text field
68:08 - here we go
68:11 - um so we have our text field here
68:14 - right and then we have our
68:17 - uh on change
68:19 - handler so this handle change
68:22 - right we don't actually have the uh
68:24 - handle change here so we have to go up
68:28 - into our index
68:30 - so we're passing down that function uh
68:32 - to this child component
68:34 - but within here we can
68:36 - see our handle change
68:42 - maybe i missed it i miss it let's find
68:44 - it
68:57 - enjoy and close
69:13 - huh where are we bringing this in at
69:21 - oh there we go maybe we are doing it in
69:23 - the component it was just underneath
69:25 - so uh sorry about that i couldn't find
69:27 - it so we have handle change
69:31 - and we have this target so so basically
69:33 - we're passing in
69:35 - uh this is an arrow function so if
69:37 - you're not familiar with that it's it
69:39 - it's shorthand for a function basically
69:41 - and it has some different things that
69:42 - happen with this inside of here
69:44 - but this is our event our e that's
69:46 - getting passed in from
69:49 - from whatever um
69:51 - element
69:53 - the change happened in right so in this
69:55 - case it was the text field so within
69:57 - that
69:58 - we can go
69:59 - uh event target and then name we can get
70:02 - the name of the input and we can also
70:04 - get the value of the input all right and
70:06 - then
70:08 - so this has been passed into the
70:10 - function then we can do whatever we want
70:11 - with it and in this case we're setting
70:13 - the state
70:16 - which this is called a
70:19 - controlled component
70:22 - i believe that's what it's called and
70:25 - that means the um
70:28 - this state actually that's really weird
70:33 - so i guess we're not initializing state
70:38 - with any value first um
70:41 - that's kind of odd
70:42 - anyway um
70:45 - we're saving the value of that component
70:48 - um in in the state and then when the
70:51 - form is actually submitted then we can
70:52 - get the values from there so
70:56 - that it probably would make be easier if
70:58 - this wasn't already a
71:00 - large build out component uh maybe a
71:03 - more simple example but that's one way
71:05 - and react at least uh that you would
71:08 - pass the value of a text input to a
71:11 - function
71:29 - all right
71:32 - okay amman says uh what as asking what
71:34 - is react helmet for
71:36 - um and john hanson has a good answers
71:38 - helmet lets you have a way to set um a
71:42 - variable head content so if you know
71:45 - like at the top of an html document you
71:47 - have your head so all the content that
71:48 - would normally go in the head
71:50 - um
71:52 - helmet lets you
71:54 - uh
71:56 - set what that content is for each page
71:59 - in react
72:00 - uh so
72:02 - it can be really useful you basically
72:04 - use helmet and let's say your layout
72:06 - component then you don't have to
72:08 - manually put it in it it can be a little
72:11 - bit tricky um to do it without something
72:13 - like helmet so that makes that a whole
72:15 - lot easier
72:18 - sebastian says
72:21 - the um the routing is kind of set up
72:24 - like next js yeah i thought the same
72:26 - thing i think you're exactly right uh
72:28 - anybody who's used next before knows uh
72:31 - it's
72:32 - so far it seems pretty much the same
72:34 - um
72:36 - it looks like
72:38 - gatsby has their own link component just
72:40 - like next does
72:41 - anything you put in the pages folder
72:43 - becomes a page
72:45 - so
72:47 - i'm glad that that's familiar so i won't
72:48 - have to learn a new routing system
72:56 - uh bill all says hey jesse thanks to the
72:58 - videos do you usually push directly to
73:00 - master or do you create different
73:02 - branches when developing i do create
73:04 - different branches from time to time uh
73:07 - but i also do push to master so uh
73:09 - generally if the change is going to be
73:13 - somewhat simple i don't mind pushing the
73:15 - master now keep in mind too that mostly
73:18 - it's just me working on the projects
73:20 - mainly with with some help from you all
73:22 - um sometimes more help some you know so
73:26 - uh it's pretty easy to keep a project
73:28 - kind of under control and i'm
73:30 - comfortable pushing the master if i had
73:32 - a much larger team i would be a little
73:35 - bit more strict about how we um you know
73:39 - we push things and
73:40 - you know having different feature
73:42 - branches
73:43 - so we're a little bit loose with that
73:44 - kind of thing right now just because
73:46 - it's always such a small group working
73:48 - on it it's okay it works
73:51 - but if i'm gonna make a more major uh
73:53 - change like you know a feature a
73:56 - a new feature or a major design change
73:58 - or something like that then i usually
74:00 - make a branch for that
74:03 - and then eventually merge it into master
74:06 - and then of course all pull requests
74:08 - obviously are on a separate branch
74:13 - but uh i'm i'm welcome to different
74:15 - ideas about how we can
74:18 - kind of organize the project and have
74:20 - some rules about
74:22 - um you know branches and things so we're
74:25 - definitely gonna have to make a nice uh
74:27 - contributing file at some point
74:32 - amon says it was fun thank you jesse
74:34 - you're welcome thanks for watching
74:37 - uh inna says thank you a lot jesse your
74:39 - videos are useful awesome awesome i'm
74:41 - glad you think that
74:45 - uh yorn says so this being a static site
74:48 - with data pooled from apis will data be
74:50 - stored or cached in files on the server
74:54 - um
74:58 - you know what i got to look up
74:59 - specifically what's going on with
75:02 - gatsby
75:03 - but i would hope
75:05 - that there's some sort of caching built
75:07 - in that we can take advantage of
75:10 - so that
75:12 - a lot of the uh frequently accessed
75:15 - pages
75:17 - uh they're rendered so we definitely
75:19 - need server-side rendering i would love
75:20 - it if the rendered pages
75:23 - would be cached for a certain amount of
75:25 - time
75:26 - so that
75:27 - that page can just be served up you know
75:29 - faster
75:30 - and you don't we don't have to make as
75:32 - many calls you know back to where we're
75:35 - getting our data from
75:37 - so i'm going to have to do some more
75:38 - research i knew how to do that with next
75:41 - js and we did that
75:42 - back when project one
75:46 - so i'm hoping gatsby can do the same
75:48 - thing
75:49 - it's not necessarily a deal breaker for
75:51 - me but it's definitely a feature that i
75:53 - would like to have
76:01 - uh blake asks how do i deploy a create
76:04 - react app website um
76:07 - yeah blake there there are several
76:08 - different ways you can do it it depends
76:10 - on where you want to host the website at
76:14 - amman has a nice link to
76:16 - the
76:18 - create react app documentation about
76:20 - deployment yeah i would check that out
76:22 - blake so read read that section in the
76:23 - documentation
76:25 - and uh figure out what where you want to
76:27 - deploy it to
76:28 - and uh if it's confusing or you need
76:30 - some help let me know
76:32 - and i can help you out with that
76:34 - uh
76:35 - but um
76:37 - trying to think i've deployed to
76:41 - i've deployed to now
76:43 - or with now i've deployed to github
76:46 - pages and then i've also just deployed
76:49 - to a server
76:51 - to a
76:53 - linux server
76:55 - so if you're planning on doing one of
76:56 - those three things i can definitely help
76:58 - you out
77:04 - uh osuna says maybe you should add a
77:06 - little documentation to your source
77:08 - source code that is a wonderful
77:10 - suggestion i definitely agree
77:13 - uh so
77:14 - i um i'd actually i'm gonna try to do my
77:17 - best to add uh more um commenting and
77:20 - documentation uh but that's also an area
77:23 - where i would definitely appreciate help
77:25 - if anybody likes that you know maybe
77:28 - um especially if you're not that
77:29 - confident let's say with your javascript
77:31 - skills um if you'd like to get some pull
77:34 - requests in for your github profile
77:37 - you know writing a little bit of
77:38 - documentation or some comments would be
77:40 - great
77:41 - you can if you watch the stream or the
77:43 - videos you'll be able to hear me explain
77:45 - what the code is doing
77:47 - and then writing something up like that
77:49 - would be great so
77:51 - i don't no one should feel obligated to
77:53 - do anything like that but
77:56 - if that seems interesting to someone uh
77:58 - you know please go for it
78:00 - uh otherwise i said i'm gonna do my best
78:02 - to uh
78:04 - uh get some good documentation and
78:06 - comments and
78:13 - let's see
78:19 - uh no beer says thanks for the streaming
78:21 - uh you're welcome thanks for watching
78:32 - okay
78:33 - uh philip has some uh if you remember a
78:35 - while back philip asked about sorting
78:38 - with um
78:39 - low dash sort by
78:43 - so
78:44 - he's uh he's posted some more in the
78:46 - live chat about that uh so
78:49 - like i said i'm not familiar with that
78:51 - at all but if anybody watching if you
78:53 - can get to the live chat and check out
78:55 - um
78:56 - the link that he posted in
78:58 - uh or some of the stuff i think you know
79:00 - that would be great i'd love to be able
79:02 - to to help out for someone to be able to
79:03 - help out phillip
79:05 - um
79:06 - i'm really sorry that i don't know
79:07 - enough about it to be much help to you
79:10 - um
79:14 - john hanson says react magic state not
79:16 - initially set for a value and yet it can
79:19 - still be defined state initially let's
79:21 - check out that component
79:25 - label placeholder
79:26 - name margin
79:30 - you know what
79:32 - okay
79:32 - this makes more sense now so normally
79:35 - with a controlled i may have misspoke
79:37 - earlier uh normally with let's a
79:40 - controlled component which you would use
79:42 - for normally for form fields
79:44 - the value
79:46 - is set
79:47 - to equal
79:49 - whatever this state is if you did that
79:53 - and you hadn't defined anything
79:55 - there would be problems right
79:58 - but in this case
80:00 - we're not actually using
80:03 - state
80:04 - anywhere
80:07 - until it's already been filled out
80:10 - so
80:12 - it works
80:14 - it so it it actually works in in this
80:17 - case
80:19 - uh i believe
80:23 - correct me if i'm wrong but with
80:25 - material
80:26 - ui we have this placeholder
80:29 - and if you were to put a value here and
80:32 - set it equal to
80:34 - the state and have it be an empty value
80:37 - or even
80:39 - a non-empty value
80:41 - you would no longer have this
80:42 - placeholder visible
80:44 - the benefit of the placeholder is that
80:46 - when you click into the input it
80:48 - automatically removes it
80:51 - i believe that was the issue that we ran
80:53 - into before
80:57 - so
80:59 - i think that's why it works in this case
81:02 - normally though uh we would want to set
81:06 - our
81:07 - define what we're going to have in state
81:09 - beforehand
81:10 - i kind of like defining it anyway
81:12 - because then it's easy when you go into
81:13 - the component just to see immediately
81:17 - what is is going to be in state right
81:22 - otherwise for this you know we don't
81:24 - realize until down here
81:26 - that we're gonna have some other stuff
81:29 - in state now also it's it's good to to
81:33 - notice here we're using e target name so
81:37 - we actually have variable name
81:39 - and value so the key and the value pairs
81:42 - are all dependent on the name and value
81:46 - of the input so potentially in this
81:48 - setup we could add as many inputs as we
81:51 - wanted
81:53 - and never have to add the input names up
81:56 - here
81:57 - so there's definitely value in doing it
81:59 - this way
82:00 - i i mean there are pros and cons to
82:03 - either way
82:05 - if we had a form that was large and that
82:07 - was likely to change frequently then
82:09 - doing it this way is
82:11 - probably the best way to do it
82:15 - anyway hopefully that made a bit of
82:18 - sense if you're familiar with react
82:21 - if you're if you're not familiar with
82:22 - react i hope i wasn't too confusing with
82:24 - that
82:26 - um
82:28 - let's see
82:37 - okay
82:39 - all right and it looks like below is
82:40 - going to try to help phillip so uh thank
82:42 - you so much for that that's awesome
82:45 - uh so i love it when you help each other
82:47 - out with uh with coding issues
82:50 - okay so we're about an hour and 20
82:52 - minutes into the stream now i had a
82:54 - decent sized stream we got a lot
82:55 - accomplished
82:57 - and uh now we have a github repo up so
82:59 - you all can see what we've done so far
83:02 - um open issues make suggestions pull
83:04 - requests whatever you want i know we're
83:06 - early on still so it's not going to be
83:08 - too easy to
83:11 - you know contribute there's not a lot of
83:12 - code yet
83:14 - but
83:16 - we'll get there this project's going to
83:18 - start looking pretty good
83:20 - quickly
83:21 - um
83:24 - let's see
83:26 - yep that's it um
83:28 - oh uh diogo says i'm late is this the
83:31 - new project it is the new project yeah
83:34 - so i'm a about to end the stream
83:36 - but you know you can check out the uh
83:38 - the recording it should be ready in a
83:40 - few minutes after i end the stream all
83:43 - right so
83:44 - i should be back tomorrow around 2 p.m
83:47 - eastern time
83:48 - and we'll do another stream we'll work a
83:50 - little bit more on on kind of building
83:52 - out our layout
83:53 - component
83:55 - and
83:56 - thank you so much everyone for watching
83:58 - for contributing in the live chat i
84:00 - really appreciate all the help and i
84:02 - appreciate everyone taking the time to
84:04 - let me know what they think about how we
84:06 - should set up this project i think it's
84:08 - going to be really awesome i'm really
84:10 - i'm i'm looking forward to
84:12 - working with you all
84:14 - on this project and uh hopefully some of
84:17 - the students here too that i i spoke to
84:20 - some of the students last night and um i
84:22 - hope some of them are interested as well
84:23 - it would be a really awesome you know
84:25 - collaboration for this project so
84:28 - um
84:30 - anyway i'll be back tomorrow until then
84:33 - have a great day