00:00 - Hey, so I'm back with the fourth Ask Preethi series today and today's question is
00:06 - a very, again, a very common one. This person is asking what language should I start with?
00:12 - Should I start with--and also should I start with the front-end, back-end, machine learning, data science? I have no idea what language or where to start.
00:20 - Of course this is an overwhelming thing to decide when you're getting started with programming
00:24 - particularly because there's so much to learn in computer science and programming in general that it's
00:31 - really hard for a beginner to know where to start. And I remember when I was getting started
00:35 - I kind of googled this question, and the worst part about googling is that everyone has their own answers.
00:40 - And they have their own opinions.
00:42 - And so they all seem right because they have experience, and something worked for some people, something didn't work for other people, so
00:48 - It's a very good question. I struggled with it, too.
00:53 - And of course, as for everything in software engineering, I'm gonna say that it depends.
00:58 - Some of you might be starting off in programming in a very specific
01:02 - vertical. For example, if you know you want to do machine learning
01:04 - or you know you want to do data science or you know you want to do mobile
01:08 - development, iOS or Android, or you know you want to do security stuff for distributed systems.
01:13 - If you know the vertical already
01:15 - Then there's usually a few specific languages that those particular verticals
01:20 - generalize on. For example, with machine learning and data science, a lot of people use Python
01:25 - And there's a lot of machine learning and data science libraries and math-related libraries written in Python, and so
01:33 - most of the data scientists I know write in Python.
01:35 - So I would say if you're going specifically for that vertical, pick the language that that vertical is standardizing on, right? And, like,
01:44 - why would you go learn Haskell if you're trying to do machine learning? It doesn't make sense.
01:48 - But let's assume that for this question
01:50 - you are just kind of starting out new. You haven't really decided where you want to focus. You're starting from a clean slate,
01:57 - and you really have a choice of anything that you can do.
02:00 - And that's the question
02:02 - I'll answer today, so I'm gonna be biased and say the best thing we should start with is JavaScript.
02:09 - And just to give you a personal background--so I started with
02:13 - learning to code my first language, which was actually not JavaScript. I started to learn Python and
02:18 - I learned I was trying to learn it through a book called "Learn Python the Hard Way" and I tried many, many, times and I
02:25 - failed.
02:26 - I tried--I remember the first time I stopped it after two weeks, the second time I stopped doing it after five weeks.
02:31 - I tried a bunch of online courses.
02:34 - Maybe I thought the video format would help.
02:36 - Something about it was just not clicking to the point where I was getting really frustrated.
02:39 - I was like, you know what, maybe programming is not for me. Like it just wasn't working.
02:44 - And then I remember I was kind of expressing the struggle with my
02:49 - ex-boyfriend at the time, and he was like, "Why are you learning Python? Go learn JavaScript."
02:54 - I was like, "What's JavaScript?" And I came home that night, and I did a bunch of Google searching, and I found this
03:01 - Codecademy course. It's like a 10-hour course or something on JavaScript
03:05 - And I remember I didn't even go to work the next day
03:07 - I just sat there and went through the whole JavaScript intro course and after that I was hooked.
03:13 - It was like I was unstoppable. I fell in love with JavaScript.
03:17 - There was something amazing about writing some JavaScript,
03:20 - and then along with it, some HTML and CSS and then seeing--
03:25 - refreshing the browser and seeing the changes--that just made my heart beat so fast.
03:29 - I couldn't--I couldn't stop myself from  loving it.
03:33 - After that, I was just unstoppable. I was hooked on JavaScript, and really,
03:39 - Javascript was like my gateway drug to programming,
03:42 - if you can think of it that way.
03:44 - And I think the reason why JavaScript is so beginner-friendly is because a few things. One is
03:49 - it has that immediate feedback loop that I was talking about. So you can write something in your IDE
03:55 - and then you can refresh your browser and see it right away.
03:58 - Whereas some other languages, like Java or Haskell, they require a compile step
04:02 - where you actually need to compile the code before you can actually
04:05 - see what happens. Which adds a little bit of burden for a beginner and kind of makes it a little bit more confusing.
04:12 - Two, there's no complex developer environments. You just set up. For example, if you're coding for iOS or Android,
04:17 - there's a whole process for setting up Xcode or the Android Studio thing and
04:22 - That in itself is kind of daunting. Whereas with JavaScript, you can just download any
04:27 - IDE, or basically Notepad, and code in that and be fine with it.
04:34 - And you don't need all these complex toolings to get started.
04:38 - Three, as I said before, you don't need to compile and figure that whole thing out.
04:44 - Another big reason is because there's no types.
04:47 - JavaScript is is a dynamically typed language.
04:50 - And that means you don't have to write types, like whether a variable is a number
04:56 - or string or whatever, and that removes a huge burden on beginners,
05:00 - I think. When I was looking at some other code, like Java code, for example, when I was getting started,
05:06 - it was pretty daunting to see both the code and the types. I didn't know what the difference was
05:11 - between them. Whereas JavaScript,
05:13 - you just kind of write code
05:14 - and you don't worry about the types. And that removes one extra thing to learn. Honestly, sometimes
05:19 - it makes it visually easy on the eyes for beginners.
05:22 - I would argue that as you get more advanced
05:24 - I actually like types now because it makes me--it makes it easier for me to read code.
05:28 - But when I was a beginner that wasn't the case. I think types added an extra burden
05:33 - when I was a beginner. So JavaScript has no types, which I think is amazing
05:37 - for beginners only.
05:40 - And then the other reason is because it runs everywhere. So if you write JavaScript, it runs in every browser:
05:47 - Chrome, Firefox.
05:49 - Whatever it is, it runs on every operating system, every device, so you can--a beginner
05:54 - can get started with JavaScript and write for various kinds of platforms, and that's pretty cool.
05:59 - And lastly, I think it's very versatile, too.
06:02 - So JavaScript you can use it as a scripting language. You can use it to build complex web applications.
06:08 - You can use it with nodes, you can book sophisticated API backends.
06:13 - You can even build bots and IoT applications.
06:16 - You can write native desktop applications using Electron, you can write native mobile applications using React Native.
06:22 - All in JavaScript. You can even do VR stuff now with React VR.
06:27 - It's just, it's pretty amazing that you can take
06:29 - JavaScript and just like do so much with it. Whereas some other languages are not as easy to do that
06:36 - and are not as transportable in that sense.
06:39 - So if you're struggling to get started, and you haven't tried JavaScript yet, I say go for JavaScript and see if you like it.
06:47 - To me, again, JavaScript was the gateway drug into programming.
06:50 - It's really how I learned to code, and it's really where I learned the fundamentals of programming, and this is things like loops,
06:58 - conditionals, functions, data types, variables,
07:01 - classes, inheritance, prototypes. Like, all these things are fundamental to almost every programming language
07:08 - And I kind of learned the fundamentals of those--of a programming language--through JavaScript.
07:13 - JavaScript was kind of just the tool to get me there.
07:19 - And now that I know JavaScript, I can pretty much
07:23 - apply that and read and
07:25 - understand code in almost any language. So I can read Python code. I can read Go. I can read Ruby. I can read C++.
07:32 - I can read
07:34 - Haskell. Like, I'm not able to maybe write in it as like a super expert programmer.
07:39 - But I can read and understand it pretty well because the syntax--you start to get familiar with the same types of syntax,
07:45 - loops, the conditionals, the functions and so forth. And
07:50 - I guess, like,
07:52 - the takeaway is the language you just--in the end, just pick the language that makes you want to code. That makes
07:59 - you want to like really get into programming, and the one that you
08:02 - specifically like the most.
08:03 - It doesn't matter what other people tell you, because what other people tell you--people recommended Python to me, like outside,
08:08 - outside when I got started. The reason for Python is that, because other people recommended it to me,
08:14 - and it didn't work for me.
08:15 - So I had to explore other things to find the ones that work for me, and to find the one
08:19 - that made me fall in love with programming.
08:22 - And then you can always expand from there. It's not like, just because you started with JavaScript
08:27 - you have to stick with fun and you have to stick with JavaScript.
08:29 - Or it's not just because you started with Python, you have to stick with Python.
08:32 - And you're limited to what only Python offers. Like, why don't you learn one language that is applicable to any language?
08:38 - And you can kind of learn new languages much more quickly. Like, I was able to learn Python
08:43 - so much quicker than JavaScript, after I learned JavaScript.
08:46 - Just because it's very similar. And same with wanting to learn Python. Running, learning Ruby was such a such a breeze.
08:53 - Yeah, it takes a little bit longer to understand the specific details of how the syntax works.
08:57 - But once you get past that syntax riddle,  most languages are kind of the same.
09:03 - And I would say
09:07 - once you actually learn the language, don't get stuck in it, either.
09:12 - Be broad. So, well, that's one of the things I did when I was
09:15 - kind of more of a beginner. I was like, even though I learned JavaScript
09:20 - I was keeping my eyes open for all different things. I learned Node.
09:24 - I learned--I even start to learn other languages like Python, Ruby. I started to learn more back-end stuff. I started to learn,
09:31 - like,
09:32 - things to do with Docker and more like system level stuff. I kind of just kept myself broad because I want to
09:40 - really be all across the stack and
09:43 - understand what I like best, what types of problems I like to solve the most. What communities, what programming communities
09:48 - I like the most, where can I be the most productive.
09:51 - And so I kept learning new languages, frameworks, technologies, and
09:57 - through that exploration, I was able to figure out what I really want to do right now,
10:02 - which is focus on blockchain engineering only for the foreseeable future.
10:06 - But I wouldn't have been able to go in there if I didn't explore all these other things and figure it out.
10:11 - Like, taste--got a taste of a bunch of the other ones, and really figured out what really clicked with me.
10:17 - So, if there's a key takeaway,
10:19 - the core goal of when you're picking a language or picking where to start is just find the language
10:26 - that gets you in the door. And then learn all the core
10:30 - fundamentals of that language. So, learn the core fundamentals of a language and learn computer science through that language. And then,
10:37 - once you have that core base foundation, you can kind of translate it to any language,
10:42 - any platform, or literally any industry in the future. So just
10:46 - find that gateway drug and then you'll be addicted forever. Just like gateway drugs
10:52 - make you addicted to drugs, the gateway programming language makes you addicted to programming.
10:58 - So that's the end of this one. I'll create the next one in about a month or so, and I'll see you then.