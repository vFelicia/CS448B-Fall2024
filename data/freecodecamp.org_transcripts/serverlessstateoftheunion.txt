00:00 - all right good morning it's a pretty
00:01 - good turnout um thank you so much for
00:03 - coming uh my eyes are a little red and
00:06 - blurry this morning um not because i've
00:08 - been up all night drinking fine wine and
00:11 - sonoma
00:12 - because i woke up with a slight eye
00:13 - irritation
00:14 - so i gotta have my slides here my notes
00:16 - here so i could see them and if at any
00:18 - point i'm no longer facing the audience
00:20 - during my talk if you could be so kind
00:21 - that's just to give me like a polite
00:23 - shout out and uh let me know where
00:25 - you're at
00:26 - um just kidding it's not that bad
00:29 - anyway i'm austin collins i guess i'm an
00:32 - instigator of this serverless movement
00:34 - uh i
00:35 - in 2015 i created a very popular open
00:38 - source project called the serverless
00:39 - framework and this is an application
00:41 - framework that allows you to build apps
00:43 - exclusively on serverless infrastructure
00:45 - like aws lambda
00:47 - and i think that this framework in
00:48 - particular had a lot to do in showing
00:50 - the world kind of how powerful this
00:52 - technology and this trend can be
00:55 - i'm also the founder and ceo of a
00:56 - startup called serverless inc we're
00:58 - based in san francisco we make tools and
01:00 - services to help developers and teams
01:04 - build and operate serverless
01:05 - applications regardless of platform
01:07 - and our company's also helping out with
01:09 - the standardization efforts happening
01:11 - within the cncf around serverless
01:14 - concepts which i'll dig into later in
01:16 - this talk
01:17 - anyway this is serverless state of the
01:19 - union special open source edition
01:21 - special exclusive in this talk we're
01:23 - going to
01:24 - analyze what's happening uh in the
01:26 - serverless world we're going to try and
01:27 - forecast you know what's going to happen
01:29 - next and we're going to discuss
01:30 - leveraging open source to smartly adopt
01:33 - serverless today so let's get started
01:37 - boom
01:38 - emits containers
01:39 - orchestrators vms paths out of left
01:42 - field out of nowhere basically came this
01:45 - this serverless trend i don't think
01:47 - anyone was really expecting it
01:49 - and it picked up momentum rapidly it has
01:52 - won hearts and minds of developers and
01:54 - it's not slowing down uh we we clearly
01:56 - have a trend here on our hands
01:59 - and now what's the big deal why why is
02:01 - why is this trend catching on um why is
02:03 - this important uh so first off to
02:05 - clarify if you aren't already aware
02:08 - serverless means that those servers
02:10 - exist developers don't have to think
02:12 - about them it's not a very technically
02:14 - accurate term it's about as technically
02:16 - accurate as the term the cloud i'd say
02:19 - but once you say once you say that word
02:21 - to a developer and you see that
02:23 - enthusiasm that it invokes that
02:25 - emotional response uh you know there's
02:27 - there's no
02:29 - um there's no reason why
02:31 - it's easy to recognize why this buzzword
02:33 - caught on why it is the buzzword because
02:35 - it invokes all the right emotions
02:38 - and it's all about you know using tools
02:39 - using infrastructure that get out of
02:41 - your way so you could focus on solving
02:43 - business problems
02:44 - and this simple idea has been around for
02:46 - a long time and obviously has has mass
02:48 - appeal
02:50 - um and this simple idea you know a
02:53 - reason why we we get uh why this has
02:56 - become such a big trend is that because
02:57 - first off this does a great job of
03:00 - solving ancient problems um in our
03:02 - serverless framework uh we have
03:04 - significant enterprise adoption and when
03:07 - these users uh come to us we always ask
03:09 - them you know why are you here what's so
03:10 - interesting about this uh to you and
03:12 - they always tell us the same you know
03:14 - that they're looking to solve the same
03:15 - problems that is number one they want to
03:17 - move fast they want to reduce time to
03:19 - market number two they want to increase
03:21 - innovation they're saying heck our
03:22 - competitors are moving very fast our
03:24 - competitors are doing all these cool
03:25 - things we want to do the same
03:27 - and they also want to reduce operational
03:29 - overhead of course and reduce cost and
03:32 - despite how far we've come without so
03:34 - much great uh change and innovation in
03:36 - i.t uh we still have not solved these
03:38 - ancient problems yet and the serverless
03:40 - movement is kind of a testament to that
03:42 - and it's why servless has has picked up
03:43 - so much momentum
03:45 - at the same time
03:47 - serverless solves new problems uh
03:49 - problems that are just starting to come
03:51 - into fruition and i don't know how to
03:53 - characterize these
03:54 - um
03:55 - more concisely than to say
03:58 - you know the the digital world is
03:59 - storming into reality right now uh we've
04:01 - got internet of things devices uh
04:03 - everywhere uh with sensors collecting
04:05 - all types of data generating big data
04:08 - we've got machine learning artificial
04:09 - intelligence uh infused into all this uh
04:12 - building systems of intelligence systems
04:14 - that can make decisions in real time
04:17 - creating autonomous machines
04:18 - self-driving cars we've got computing
04:20 - running in the edge all over the place
04:22 - voice devices
04:24 - technology is is everywhere and if
04:27 - you're a business you have to pay
04:29 - attention to all this because your
04:31 - competitors are
04:32 - and amidst these ancient problems and
04:34 - all these new problems you know one of
04:36 - course has to ask themselves a very
04:38 - important question
04:39 - and that is do you really want to be
04:41 - running your own infrastructure uh is
04:42 - that kind of a good position for you
04:45 - right now is that kind of the going to
04:47 - be on the right side of history that
04:49 - choice
04:50 - and that's you know i think you could
04:52 - see where the people in the serverless
04:54 - movement stand
04:55 - but they're you know they're very
04:56 - nervous about burdening themselves with
04:58 - this especially in this era of upcoming
05:01 - hyper innovation and hyper competition
05:04 - so serverless a brief history i'm not
05:06 - going to go into paths i'm just going to
05:07 - start with the serverless trend uh
05:09 - starting back in 2014. um this kind of
05:12 - got kicked off with amazon web services
05:14 - when they came out with a new way to do
05:16 - compute in the cloud called aws lambda
05:19 - and in the early days you know they were
05:21 - kind of marketing this as glue code as
05:25 - event driven code and it was very
05:27 - limited the use cases were very limited
05:30 - but at the core there was a
05:32 - revolutionary way to do compute and it
05:34 - was revolutionary because all you had to
05:36 - do as a developer was upload some code
05:39 - and you'd write this code in the form of
05:40 - a function enough code to perform one
05:42 - task like save a user
05:44 - to a database or send out a
05:46 - transactional email you'd upload that
05:48 - code to aws lambda's platform and that
05:50 - would create an aws lambda function this
05:52 - independent unit of deployment
05:54 - and this function would require very
05:56 - little to zero administration the
05:57 - provider handles everything
05:59 - and it scales automatically to meet
06:01 - massive levels of concurrency
06:03 - and also aws lambda had this
06:05 - pay-per-execution pay-per-use pricing
06:07 - model that was incredibly efficient and
06:08 - this cannot be understated when people
06:11 - come
06:12 - join the serverless movement it's this
06:13 - pricing model that really brings them
06:15 - through the door
06:16 - and then they kind of stay for once they
06:18 - look at all these qualities together
06:19 - they realize that there is a lowest
06:20 - total cost of ownership scenario here
06:22 - that is absolutely compelling but this
06:25 - pricing model is super important you're
06:27 - not going to get charged unless your
06:28 - code runs and when you do get charged
06:30 - you get charged at 100 millisecond
06:32 - increments very exciting and lastly this
06:35 - code is event driven
06:36 - these functions will spin up to handle
06:38 - any type of events a lot of events
06:40 - mostly coming from the underlying
06:42 - platform so when something happens in
06:44 - your aws s3 bucket it'll automatically
06:46 - trigger a function or when a record gets
06:48 - saved to a dynamodb table it'll trigger
06:50 - a function or an http web request in the
06:54 - serverless world even these http
06:55 - requests are being considered as as
06:57 - events
07:00 - so back in back in uh 2015 you know aws
07:04 - lambda the use cases were very limited
07:06 - the you know it was i don't think it had
07:08 - great packaging i don't think it had a
07:09 - great uh developer experience and it
07:11 - certainly was not being considered as an
07:13 - application platform
07:15 - and this is where kind of our company
07:17 - stepped in you know we came out to try
07:19 - and define the application experience
07:20 - around aws lambda because at the core we
07:23 - saw that revolutionary compute service
07:25 - and we basically wanted to use it for
07:27 - everything right and we needed some
07:28 - tooling to enable that uh so we started
07:31 - working on this serverless framework
07:33 - mid-2015 um and it solves a lot of
07:36 - problems that need to be solved if you
07:37 - want to build serverless architectures
07:39 - uh most importantly when you build a
07:41 - serverless architecture
07:43 - it's pretty
07:44 - complicated first off you have all these
07:46 - independent units of deployment all
07:47 - these functions
07:49 - and there are a lot of these
07:50 - this is very much like a traditional
07:52 - kind of microservice architecture
07:53 - however the difference in the serverless
07:55 - world is that uh the overhead burden is
07:59 - not there uh with these serverless
08:01 - functions because the provider is
08:02 - managing scale managing you know all
08:04 - aspects of administration and what
08:06 - happens and what we see regularly is
08:08 - that people who are doing serverless
08:09 - development
08:10 - could be one or two engineers and they
08:12 - they're provisioning hundreds of these
08:13 - functions um it's pretty awesome and
08:15 - it's all because that overhead burden is
08:17 - not there uh so you have a whole bunch
08:19 - of functions whole bunch of independent
08:21 - units of deployment and all these
08:23 - functions have infrastructure
08:24 - dependencies they need infrastructure to
08:26 - trigger the functions via events and
08:28 - they also need infrastructure to perform
08:30 - their business logic whether it's a
08:31 - database caching mechanism or storage
08:35 - anyway so we looked at all this in the
08:37 - early days we said you know this
08:39 - there's there's a there's an application
08:41 - story here that's that's pretty
08:42 - compelling and how can we express this
08:44 - in a simpler format so that people don't
08:46 - have to think about things um in this
08:48 - very complicated way so the one thing
08:50 - that i think the surplus framework did
08:52 - very well is they said look
08:54 - this is serverless is simply a story of
08:57 - functions and events and that's what we
08:59 - presented to developers we gave them a
09:01 - simple configuration file you could list
09:03 - all your functions containing your
09:05 - business logic and every single function
09:06 - in that configuration file could have an
09:08 - events property and that you could list
09:10 - there all the events that would trigger
09:12 - that function all the events that happen
09:14 - in your digital business
09:15 - and this this whole experience was very
09:18 - very compelling to users all they'd have
09:19 - to do is type serverlessdeploy and the
09:21 - serverless framework will go provision
09:23 - all the infrastructure necessary and
09:25 - wire it up so that it works together in
09:27 - this event driven model
09:28 - and the user and the developers won't
09:30 - have to think about that as much so
09:31 - again i think this open source project
09:33 - had a lot to do and kind of show in the
09:34 - world the serverless architecture
09:36 - introducing the serverless application
09:37 - to the world
09:39 - and up next in 2016 given the massive
09:42 - success of aws lambda a lot of the other
09:44 - public cloud providers took note and
09:46 - they started to offer very similar
09:48 - services google came out with google
09:50 - cloud functions azure came out with
09:52 - azure functions ibm came out with ibm
09:54 - cloud functions uh and overall uh these
09:57 - serverless functions also known as
09:59 - functions as a service
10:01 - they're a great way to use these cloud
10:03 - platforms they're a great way to adopt
10:05 - cloud platforms if you want to use a
10:07 - cloud platform and gain access to all
10:09 - the cool services that that cloud
10:10 - platform offers
10:12 - stick a function there it's auto scaling
10:14 - you know it's paper execution it's a
10:17 - very very trivial way to start
10:18 - leveraging leveraging that cloud
10:20 - platform and this is this is exciting
10:22 - because i think that this is going to
10:23 - enable more venture
10:25 - vendor choice
10:26 - and multi-provider capability in the
10:28 - future
10:29 - in 2016 uh we also saw more open source
10:32 - heroes enter the scene and they started
10:34 - coming out with uh open source versions
10:37 - of serverless compute platforms
10:38 - essentially
10:39 - and these projects seek to give
10:41 - organizations the ability to make their
10:43 - own serverless computing platforms you
10:45 - know largely based on containers and
10:48 - kubernetes we've got great projects in
10:50 - this space like cubeless oracle's fn
10:53 - project
10:54 - there's open faz and ibm's openwhisk and
10:56 - a lot more these things are popping up a
10:58 - lot right now there'll probably be two
11:00 - more by tomorrow
11:02 - now in this scenario
11:03 - you're still managing your own
11:04 - infrastructure right you kind of bring
11:06 - one of these into your organization you
11:07 - have a few people operating the
11:08 - serverless platform and it's their job
11:10 - to expose it to developers so developers
11:12 - can focus on solving business problems
11:15 - with the least amount of friction
11:16 - so is it serverless
11:18 - uh i don't know um
11:20 - but but what it does borrow heavily from
11:23 - the cloud experience is that application
11:25 - experience is emulated in these
11:27 - platforms
11:28 - that simple story of functions and
11:30 - events
11:31 - these things can be perceived as past
11:33 - 2.0 and one of the biggest changes
11:36 - is simply this model of doing things
11:38 - it's a simple story of functions and
11:39 - events and now you can kind of self-host
11:41 - this anywhere you want and that's that's
11:44 - pretty exciting
11:45 - uh in 2017 um we started to see
11:49 - uh the you know the serverless term
11:51 - continue to grow
11:52 - and all of a sudden a lot of cloud
11:54 - infrastructure beyond
11:56 - computing
11:57 - was being called serverless amazon kind
12:00 - of took a lead on this they started
12:02 - referring to kind of their their
12:03 - traditional sas products as serverless
12:06 - so aws s3 which has been around for a
12:08 - very long time they started to call that
12:10 - serverless sns they're starting to call
12:11 - that serverless a lot of their new
12:13 - services like uh their aurora database
12:16 - is now being referred to as serverless
12:19 - and a lot of these independent sas
12:20 - providers are kind of using the term
12:22 - serverless to refer to their um to their
12:25 - products like algolia i've seen them do
12:27 - this auth0
12:28 - and that's pretty interesting i think it
12:30 - has some implications for the serverless
12:32 - application in general
12:34 - and the service application now is kind
12:35 - of being perceived as using serverless
12:38 - compute
12:39 - and pairing it with infrastructure that
12:41 - has these serverless qualities auto
12:42 - scaling you know paper use
12:44 - and combining these things together to
12:47 - make end results or applications that
12:48 - have extremely low total costs of
12:50 - ownership their paper execution their
12:52 - auto scaling they're almost like set it
12:54 - and forget it and these applications are
12:56 - very efficient and and very powerful
12:59 - so that's what has happened uh here's
13:01 - here's kind of what's happening now and
13:03 - um and some things to pay attention to
13:06 - uh there's there's clearly a collision
13:08 - happening between serverless computing
13:10 - functions as a service uh and containers
13:13 - i think it's getting a bit awkward
13:14 - actually um traditionally containers
13:16 - offered great isolation you know
13:18 - packaging portability but not low
13:20 - latency provisioning or an efficient
13:22 - pricing model for running them in the
13:23 - cloud
13:24 - meanwhile aws lambda offered low latency
13:27 - provisioning runtimes ready to go sub
13:29 - second billing
13:30 - and this simple kind of functional model
13:33 - in the serverless world people have been
13:34 - using both these things for different
13:36 - use cases containers have been great for
13:38 - asynchronous long-running tasks and
13:40 - functions are great for short tasks
13:42 - where you don't have to think where you
13:43 - don't want to have to kind of think
13:44 - about containers only the business logic
13:46 - and um how and if you want to benefit
13:49 - from that efficient pricing model but
13:51 - now containers as a service are looking
13:52 - more like serverless container platforms
13:54 - azure container service has a per second
13:56 - building model you know no virtual
13:58 - machine management aws has fargate you
14:00 - know it's a managed container platform
14:01 - also with the per second building model
14:03 - both these are going to continue uh to
14:05 - probably collide and exist and evolve
14:08 - and this is still the beginning of this
14:09 - story but it's certainly something to
14:10 - watch
14:12 - furthermore
14:13 - software as a service is continues to
14:16 - expand
14:17 - and this is important because sas's
14:19 - value on top of serverless computing
14:21 - cannot be understated in the early days
14:23 - of the serverless framework
14:25 - we noticed amazing innovation and
14:27 - creativity coming from the users and
14:29 - first off it's because you know when you
14:31 - reduce operational overhead you liberate
14:33 - a lot of productivity and you also
14:35 - liberate creativity um but a lot of this
14:38 - also came from simply pairing kind of
14:39 - serverless compute from pairing aws
14:41 - lambda
14:42 - with other kind of sas other serverless
14:45 - infrastructure
14:46 - and we kind of realized that you know
14:47 - lambda is only half the value you've got
14:49 - to have other great serverless-like
14:51 - infrastructure to pair it with to build
14:52 - these these end results these
14:54 - applications
14:55 - it's a very exciting time because you
14:56 - know a lot more sas is coming the cloud
14:59 - providers are aggressively innovating
15:00 - new products with sas models and so are
15:03 - startups
15:05 - so you know amazon of course has s3
15:06 - dynamodb lambda they have the new aurora
15:09 - they've got comprehend their natural
15:11 - language processing service they've got
15:12 - transcribed for speech recognition
15:14 - meanwhile google has a ton of cool cloud
15:16 - ai products like cloud speech
15:18 - translation their vision api video
15:20 - intelligence apis that whole cloud ai
15:23 - category i think is just going to
15:25 - explode um
15:27 - will continue to explode and you know
15:29 - overall this is this is exciting um this
15:31 - is like the golden age of software
15:33 - development i mean never has there been
15:35 - this like greater time to be able to use
15:38 - all these kind of these pieces of
15:39 - infrastructure to make things faster to
15:42 - make things at scale
15:43 - to get your vision out there and make
15:45 - some type of meaning in the world
15:47 - so overall this is you know a lot of
15:49 - stuff is going on but
15:51 - it's all pretty exciting another big
15:53 - trend to look out for is
15:55 - serverless functions are kind of running
15:57 - everywhere now
15:58 - they can clearly run in multiple cloud
16:00 - providers uh now that every cloud
16:02 - provider has a serverless experience
16:05 - they're running on premise uh thanks to
16:08 - these uh open source serverless
16:09 - platforms uh and they could also run in
16:11 - the edge cloudflare's got a great
16:14 - cloudflare worker project lambda has
16:16 - lambda at edge and we're quickly
16:18 - entering this world where these these
16:19 - functions can live all over the place
16:22 - and that's great because
16:24 - events data is all over the place
16:28 - um so what with all this stuff going on
16:29 - there's a lot of change a lot of
16:31 - innovation a ton of options now and
16:32 - projects
16:34 - how do we adopt this today and here's
16:36 - kind of the most important lessons that
16:37 - that we've learned over at serverless
16:39 - inc
16:40 - uh first off you know we we talked to
16:41 - you know these uh enterprise
16:43 - organizations regularly and uh they're
16:45 - in a tough bind
16:47 - a lot of them are kind of caught in this
16:49 - this adoption challenge you know they
16:50 - want to avoid lock-in they will also
16:52 - want total control and oversight
16:55 - but at the same time
16:56 - they want to move fast they want to
16:58 - innovate
16:59 - and many are choosing to kind of diy
17:02 - their own serverless platforms so you
17:04 - know we've seen several companies
17:06 - working on their own service platforms
17:07 - for a number of years now
17:09 - to avoid vendor lock and give them the
17:10 - control and oversight they need on the
17:12 - other hand we've seen the cloud
17:14 - providers unrelentingly add innovative
17:16 - services serverless offerings
17:19 - to their whole platform and we've seen a
17:21 - lot of companies embracing those and
17:22 - being very successful at delivering
17:24 - innovation at record pace
17:26 - so how does one how does an organization
17:28 - kind of kind of navigate this
17:31 - and this is where open source especially
17:33 - can save the day
17:35 - um so
17:37 - so what we've learned of course and a
17:38 - big serverless principle is that first
17:41 - off it's all relative to the use case
17:44 - einstein actually said this the second
17:45 - half just got cut off
17:47 - um
17:50 - but uh you know this is you know
17:51 - something that's very popular in the
17:53 - serverless community uh and it's just
17:55 - central to the serverless culture and
17:56 - that is focus on the use case focus on
17:58 - the outcome first not infrastructure and
18:01 - platforms
18:02 - figure out what is most important to
18:04 - best serve that use case you know do you
18:05 - need to move fast you need to be be
18:08 - innovative you need to capture the
18:09 - market or do you want to kind of avoid
18:11 - lock-in
18:12 - and maybe some public clouds in general
18:14 - and if you do that if you run your own
18:15 - platform kind of at what is the
18:17 - opportunity cost of doing that
18:19 - the great thing about serverless is that
18:20 - lower overhead appeals to all types of
18:22 - use cases um it's often used for kind of
18:24 - critical data processing pipelines
18:27 - back-end services but also equally used
18:29 - for marketing projects internal tools
18:31 - random event driven automation business
18:33 - process automation
18:35 - you know do you really need to roll out
18:37 - your own platform to do kind of all this
18:39 - stuff you know maybe not
18:41 - if the one platform approach is going to
18:42 - block you from being able to solve a
18:44 - problem best you know that's that's not
18:45 - super that's not good
18:47 - so you could deal with serverless a lot
18:48 - of different ways now and the best way
18:50 - will be revealed always by focusing on
18:52 - the outcome so focus on that first
18:55 - and you know what i'd strongly recommend
18:57 - is that before adopting any serverless
18:59 - platform and again there's so many great
19:01 - options out there whether it's aws or
19:03 - one of these cool open source servles
19:05 - platforms i would absolutely prioritize
19:07 - investing
19:08 - in tools that offer vendor and platform
19:11 - choice um and organize your strategy all
19:14 - around that there are a handful of great
19:15 - tools that do this you know like our
19:17 - serverless framework or terraforms
19:18 - another fantastic one but these things
19:21 - are going to give you options and that's
19:22 - of critical importance right now and
19:23 - they're also going to give you a single
19:24 - experience for using for using these
19:26 - options
19:27 - and again this is where open source
19:29 - especially has to play a big role you
19:31 - know open source communities have to
19:32 - come up with more tools like this
19:33 - because you know these big platforms
19:35 - have big biases you know towards their
19:37 - platforms
19:38 - and if that future is running serverless
19:41 - functions everywhere
19:42 - we need the tooling to help make that
19:44 - easy so again first focus on your
19:45 - outcome and then adopt the tools that
19:47 - will flexibly allow you to deliver on
19:49 - those outcomes best
19:50 - the future is uncertain change is
19:52 - constant you know tools that give you
19:54 - options a diversified approach should
19:55 - absolutely be prioritized
19:57 - and further you know serverless is all
19:59 - about moving up the stack to the
20:01 - application level
20:02 - and we think serverless is going to
20:04 - evolve these developer tools and
20:05 - infrastructure in general and
20:07 - infrastructure provisioning tools
20:09 - to focus more on the application level
20:10 - and this is something that this is a
20:12 - theme that we think about a lot at
20:15 - serverless inc we're always trying to
20:16 - figure out how to how to express this
20:18 - team you know we think software tooling
20:19 - should be designed more around outcomes
20:21 - and apps
20:22 - and not infrastructure and this is also
20:24 - what serverless is strongly about we
20:25 - kind of started this with the serverless
20:27 - framework
20:28 - and we also have a new project which
20:30 - we're opening up uh in a beta in a few
20:32 - weeks it's called serverless components
20:35 - it's simply open source reusable vendor
20:38 - agnostic serverless building blocks it's
20:40 - a packaging system for application
20:42 - features
20:43 - or entire applications you know built
20:45 - using serverless infrastructure across
20:47 - all vendors
20:48 - you can compose these building blocks
20:50 - together to rapidly build apps and these
20:52 - components are very outcome focused
20:55 - whether it's you know your data
20:56 - processing pipeline a user's credit api
20:58 - an sms subscription service
21:01 - subscription payment service or an
21:02 - entire serverless forum or an entire
21:04 - serverless ecommerce application you
21:06 - should be able to compose this stuff
21:07 - together
21:08 - to build end results with that
21:10 - serverless efficiency
21:11 - we're opening this up as a standalone
21:13 - public beta we're going to incorporate
21:14 - it into our framework if it's
21:16 - interesting to you you could go to
21:17 - serverless.com and you know sign up for
21:18 - the newsletter but again focus on your
21:21 - outcomes and then adopt the flexible
21:23 - tools that will allow you to best
21:24 - deliver on those outcomes
21:27 - and after that
21:28 - lean on community driven standards uh
21:31 - these the standards uh the harmonization
21:33 - conversations are just getting started
21:35 - in the serverless space uh and it's
21:37 - exciting because it could solve a lot of
21:38 - problems uh for example making functions
21:41 - more portable so they can move around to
21:44 - wherever they need to go or event data
21:46 - more consistent the cncf is kind of
21:48 - where these conversations are taking
21:50 - place
21:52 - there's a serverless working group
21:54 - within the cncf and we're meeting every
21:56 - thursday 9 a.m pacific time to talk
21:59 - about this stuff
22:01 - the serverless working group recently
22:02 - authored a great white paper talking
22:04 - about serverless in general and now
22:06 - they're focused on harmonizing these
22:08 - serverless concepts to give users vendor
22:10 - choice and flexibility
22:12 - uh first effort of the service working
22:14 - group or the next effort is uh you know
22:17 - that we found that an uncontroversial
22:19 - starting point when it comes to
22:21 - harmonization uh was around events and
22:24 - we've we're working on this uh this
22:26 - concept called cloud events it's a
22:28 - specification for
22:30 - um for describing event data in a common
22:32 - way again serverless is a story of
22:34 - function and events this is half that
22:36 - story
22:37 - and event data is being transported
22:39 - across environments uh increasingly
22:42 - and unfortunately all the platforms that
22:44 - are publishing events they're kind of
22:45 - ubiquitous events are everywhere but
22:47 - they're all publishing them in different
22:48 - formats which limits
22:51 - the ability to transform event data
22:53 - wherever you want it to go
22:56 - so we think this this might actually
22:57 - have a huge rising tide effect it could
22:59 - be bigger than serverless events are
23:01 - kind of bigger than serverless at the
23:02 - end of the day uh it might affect all of
23:04 - it but we're kicking this off in the
23:06 - service working group because it's part
23:08 - of the service story it's an essential
23:10 - part there are a ton of major industry
23:12 - stakeholders involved now and it's super
23:14 - exciting so
23:15 - if you're if you're curious about this i
23:17 - strongly recommend you jump in
23:20 - to wrap up you know whether you're
23:21 - adopting serverless or you're looking
23:22 - for a role open source has to play in
23:25 - the serverless space uh you know first
23:27 - off focus on outcomes not infrastructure
23:29 - that is an important serverless
23:30 - principle
23:31 - adopt tools to flexibly support those
23:34 - outcomes not tools that kind of support
23:35 - a specific platform and embrace
23:37 - standards when they mature
23:39 - or help us build them right now if any
23:42 - of this sounds interesting to you here's
23:44 - my contact info you can learn more about
23:46 - the service framework at servles.com
23:48 - and if cloud events is of interest to
23:50 - you or the serverless working group in
23:52 - general go to github.com cloudevents
23:54 - there's a ton of information as how you
23:57 - could join the effort and start
23:58 - contributing
23:59 - anyway thank you all for your time and
24:03 - next up we've got dan khan the executive
24:05 - director of the cloud native computing
24:06 - foundation uh who's gonna show you
24:08 - something special that they've been
24:09 - working on anyway thanks again
24:33 - hi there i'm dan kahn i'm the executive
24:36 - director of the cloud native computing
24:38 - foundation i want to really thank austin
24:40 - for that great talk and talking about
24:42 - serverless which is really one of the
24:43 - most exciting spaces in open source
24:45 - right now
24:46 - i also want to thank him for donating
24:48 - three minutes at the end of his talk so
24:50 - i could just show you a cool project
24:52 - that we've been working on at cncf and i
24:54 - also do want to thank him for his
24:55 - leadership with
24:57 - both the serverless working group but
24:59 - then particularly cloud events so a
25:01 - quick show of hands how many people have
25:03 - seen some version of this document
25:05 - before
25:06 - okay more than half so this is the cloud
25:09 - native landscape
25:10 - many people have said that it's
25:12 - incredibly useful and valuable it has
25:14 - also been referred to as the hellscape
25:17 - and uh so we've gotten a little
25:18 - criticism for the tyranny of choice for
25:21 - seeming like it's uh too complicated and
25:24 - so we went back and looked at how we
25:26 - could make this more useful for real
25:29 - enterprises and vendors and and the end
25:32 - users that are and the developers that
25:33 - are make up our cloud native community
25:36 - and we decided to do two different
25:38 - follow-on projects so the first uh that
25:40 - we're launching is called the cloud
25:42 - native trail map and this is a one page
25:45 - it's actually a portrait but it takes
25:47 - you through the steps of how
25:51 - you might approach cloud native and so
25:53 - containerization and this real focus on
25:56 - continuous integration continuous
25:58 - delivery which is arguably the area
26:00 - that's going to have the very highest
26:01 - value the biggest return then talks
26:04 - about orchestration and then as we go
26:06 - forward you look at some of the other
26:07 - projects so service meshes are
26:09 - incredibly hot right now and you have
26:10 - envoy and linker d and core dns but
26:12 - that's not where you want to get started
26:14 - in this space and we'll actually have
26:16 - handouts for you
26:18 - of this at the at the next break and
26:20 - it's also available online so that was
26:23 - uh the sort of the zoom out version of
26:25 - how can you just approach cloud native
26:27 - and begin thinking about it and begin
26:29 - learning about it but then for the
26:31 - practitioners and the folks that are
26:32 - really
26:33 - eyebrow deep in it we also wanted to
26:35 - have the zoom in version and so that is
26:38 - the new interactive landscape that we're
26:40 - launching here at the conference and you
26:42 - can actually pull out your phone or your
26:44 - laptop and try typing this in right now
26:46 - it's l.c ncf dot io or landscape.cmcf.io
26:52 - and it will show you the 460
26:56 - different projects and products that
26:58 - we're monitoring and following in this
27:00 - space and so i will go ahead and
27:03 - i'm no kelsey hightower but just try and
27:06 - do
27:06 - a a quick demo for you so you can see
27:09 - that we show kubernetes which um
27:12 - goldberg announced that we graduated
27:14 - yesterday are incubating cncf projects
27:17 - our sandbox projects and then um a lot
27:21 - of other logos this has been a a project
27:24 - um for the last couple months and uh jim
27:27 - and i and a few other uh linux
27:29 - foundation folks were traveling through
27:31 - china three weeks ago uh
27:33 - beijing and hangzhou shanghai shenzhen
27:35 - hong kong in five days and i got the
27:38 - feedback of why do you keep staring at
27:39 - all these logos but uh as i was dealing
27:42 - with data caps this was the the project
27:44 - that we've been working on but the part
27:46 - that's particularly neat about is the
27:48 - ability to actually zoom in and kind of
27:50 - think about it in different ways so for
27:52 - example here's open source projects by
27:54 - first commit and so we're pulling this
27:56 - data from github and if i click in i can
27:59 - see that postgres was actually found
28:01 - started 22 years ago but uh their latest
28:04 - commit was today which is just such an
28:07 - extraordinary accomplishment of an open
28:08 - source project maria db being a fork of
28:11 - mysql are both 18 years old and i can
28:14 - click through and see a lot of other
28:16 - ones and for each of these i can then
28:18 - pull up the
28:19 - the twitter info to see what's been
28:21 - going on most recently the funding info
28:23 - that we're pulling from crunchbase so
28:24 - you can see
28:25 - they've raised 10 and a half million
28:27 - dollars and another view if i come here
28:29 - to open source projects by stars i can
28:32 - see uh here's kubernetes at number one
28:35 - with 33 000 stars but look at that
28:38 - austin's project serverless is here as
28:41 - the fifth entry and we're very happy to
28:44 - have them as a cncf member and i'll
28:46 - point out their three million dollars in
28:47 - funding according to crunchbase so any
28:49 - of the venture capitalists in the
28:51 - audience might want to
28:52 - go up and talk to him
28:56 - so uh i do encourage you to take a look
29:00 - and um if you pop it up later today it's
29:02 - uh fun to click those example filters to
29:05 - uh look at your organization and see the
29:07 - projects that uh come up and then in any
29:11 - project this size there's going to be
29:13 - errors in it so we're really eager to
29:14 - accept pull requests it's something you
29:16 - can do right from the github web
29:18 - interface and we can approve it and get
29:20 - it live almost immediately so this is
29:22 - really designed to be a collaborative
29:24 - editing project and so we do have an
29:27 - updated version of the landscape with
29:30 - even more logos on it we now list our
29:32 - kubernetes certified service providers
29:34 - all of the
29:36 - 50 certified kubernetes platforms and
29:38 - distributions and everything else and
29:40 - we'll keep coming out with a new version
29:41 - of this every month that's going to map
29:43 - to the interactive landscape this is
29:45 - also the serverless version of it that
29:48 - was a project that austin and everyone
29:50 - else from the serverless work group
29:51 - worked on so um please feel free to
29:54 - tweet about this
29:56 - if you have issues or questions or
29:57 - suggestions please reach out to me at my
29:59 - email and thanks again to austin for
30:01 - giving me those five minutes
30:03 - [Applause]
30:08 - you