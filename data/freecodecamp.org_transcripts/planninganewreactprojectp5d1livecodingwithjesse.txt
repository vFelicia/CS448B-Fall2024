00:07 - hey everybody welcome to live coding
00:08 - with jesse
00:10 - today
00:11 - i'm really excited
00:13 - because
00:14 - we're going to start what might end up
00:17 - being the biggest project that we've
00:19 - worked on so far since um since i
00:22 - started streaming
00:24 - i don't know
00:25 - in may i think i started streaming in
00:27 - may
00:28 - um
00:31 - so
00:32 - today's stream is going to be dedicated
00:35 - to making some decisions
00:37 - before we actually get started
00:40 - so may not actually be doing some coding
00:43 - but this is an important step that we
00:45 - haven't really gone over before we've
00:47 - made some decisions in the midst of
00:49 - coding but
00:50 - uh the things we talk about today and
00:53 - end up deciding on will really steer the
00:55 - direction that this project goes
00:58 - so i just want to start out by
01:02 - letting you all know what the end goal
01:04 - is for the project
01:06 - and what are some of the requirements
01:08 - that we're going to need
01:09 - and then
01:10 - we can check out our options uh i'll
01:12 - switch it up to the uh the normal view
01:15 - with the really small
01:17 - uh
01:19 - you know camera of me in the corner and
01:21 - then i have a trello board set up
01:24 - which i'll eventually convert over to
01:26 - some issues
01:27 - in github
01:28 - all right so
01:31 - oh one more thing
01:33 - uh by announcement there will be two
01:35 - streams today
01:37 - this first stream is going to be at this
01:39 - this project it'll be on the free code
01:41 - camp channel
01:42 - i'm going to stream again
01:44 - around 6 pm eastern time
01:47 - i'm going to give a
01:50 - uh a guest lecture i'll be a guest
01:53 - lecturer in a computer science course
01:55 - here at the university that i teach at
01:58 - so i will be talking about the work that
02:01 - i do here that you all participate in in
02:03 - the stream
02:04 - and also i'm going to give some advice
02:07 - to
02:09 - how to search for jobs
02:11 - and coding how to improve your skills
02:14 - and
02:16 - i'm going to talk about some of the
02:17 - latest technologies
02:19 - that seem to be
02:20 - trending now and then i'm going to take
02:22 - questions from the students and from all
02:24 - of you
02:25 - so
02:26 - if you're interested and you have an
02:27 - opportunity i know you know those of you
02:29 - in in india it'll be
02:32 - the middle of the night or early early
02:34 - morning so it might be hard for you to
02:35 - make it but if you can make that stream
02:37 - i think that'll end up being on my
02:39 - personal channel so check the link in
02:41 - the description
02:42 - for that channel
02:46 - i didn't know i was going to be guest
02:47 - lecturing until this morning i didn't
02:49 - really have time to check with quincy to
02:50 - see if he wanted something like that on
02:52 - the free code camp channel so
02:54 - i will probably be streaming it from my
02:55 - phone
02:57 - um in the classroom
02:59 - and i'm really excited about this i
03:01 - think this will be cool
03:02 - um all right so let's get to this
03:05 - project
03:07 - let me tell you uh first of all we did
03:09 - talk a little bit about this project a
03:11 - few weeks ago so for some of you this
03:14 - you may remember a bit of this
03:17 - but i now have
03:20 - a date
03:21 - when this project has to be completed by
03:23 - which we didn't have before and it's
03:25 - going to be somewhat of a tight deadline
03:27 - not for us i i know we can get this done
03:30 - but in terms of all the other decisions
03:32 - that have to be made by people at the
03:34 - university higher up content decisions
03:36 - and things like that
03:38 - it's going to be tough
03:40 - so
03:41 - this site needs to launch before
03:44 - march 6
03:46 - 2018
03:48 - alright so i'm thinking
03:51 - let's try to get this site completed in
03:54 - about three months and then do some
03:55 - testing
03:56 - and get this
03:59 - we're redoing completely from the ground
04:03 - up i'm talking hosting servers
04:07 - all the back end code
04:10 - new content management system new
04:11 - databases
04:13 - certainly new front end
04:14 - everything's going to change
04:16 - for this website
04:18 - and this is a site that currently has
04:20 - over three thousand pages of content on
04:22 - it
04:23 - it gets millions of views a year
04:25 - so
04:27 - by far
04:29 - it's going to be our biggest project yet
04:31 - uh been turned both in terms of size of
04:34 - the website and the number of view
04:37 - users that we need to be able to support
04:40 - okay
04:41 - now
04:42 - having said that the site itself is not
04:45 - that complicated
04:46 - at least for now
04:48 - there are no forms
04:51 - we don't have to handle any form data
04:54 - there's not going to be any user login
04:58 - so
04:59 - that takes out a lot of complexity
05:03 - we're going to have data coming in from
05:05 - multiple sources so we're going to have
05:07 - to handle that it's not just going to be
05:09 - one content management system it's more
05:11 - likely that we may pull in data from
05:12 - different sources but we should be able
05:14 - to handle that
05:18 - the site has to be
05:22 - seo friendly
05:24 - so
05:25 - we're gonna need server-side rendering
05:28 - uh we're gonna be making api calls for
05:29 - all our content search engines will not
05:32 - wait around to display what comes in
05:34 - through the api calls so
05:37 - uh we definitely want whatever we end up
05:39 - going with we're gonna use react
05:41 - so that's already decided we're
05:43 - definitely gonna use react we have i i
05:46 - certainly have the most experience with
05:48 - using react
05:49 - and uh so i'm going with that
05:52 - but pretty much everything else
05:55 - is up for debate
05:57 - all right
05:58 - so here's what i'm thinking right now
06:03 - so we have
06:04 - content management system
06:06 - will be wordpress
06:08 - unless we can find a content management
06:11 - system that's suitable that's based on
06:13 - node
06:14 - i would love to have javascript all the
06:17 - way
06:17 - front end backend in the cms
06:20 - everything
06:21 - that's going to make it so much easier
06:23 - to maintain and to find people to hire
06:26 - to work on this
06:27 - when we just need somebody who knows
06:29 - javascript
06:30 - as opposed to trying some find somebody
06:32 - that knows php and javascript wordpress
06:34 - is php based okay so
06:37 - probably wordpress but i am open
06:39 - i just currently don't know of an open
06:42 - source
06:43 - free
06:44 - node cms that is at that level um
06:47 - nothing's going to be at the level of
06:48 - wordpress in terms of
06:50 - the community that it has
06:52 - um but in terms of user friendliness for
06:55 - the people entering data it has to at
06:57 - least come close to wordpress to
06:59 - consider switching so
07:01 - that that's going to take some serious
07:03 - thought but we don't have to worry about
07:04 - that right now we can certainly begin
07:06 - developing this site before we decide on
07:09 - the cms
07:11 - so
07:13 - that's something that can can hold off
07:14 - we could test some things out
07:17 - um
07:19 - let me see
07:21 - let me switch over now
07:23 - to my my list
07:26 - here in trello
07:28 - so
07:28 - sorry you won't be able to see my face
07:30 - full screen anymore i know
07:33 - you might be disappointed by that but
07:36 - that's definitely a joke by the way i'm
07:38 - not i don't really think that
07:40 - um okay
07:43 - oh we got a lot of viewers right now i
07:44 - just looked over at the analytics so
07:46 - there may be some new people watching if
07:48 - so welcome this is a little bit
07:50 - different than what we normally do
07:51 - normally we do a lot more coding today
07:53 - is more planning but
07:54 - um
07:55 - we'll get into some coding
07:57 - you know in in future videos uh probably
08:00 - the next one we do will actually start
08:01 - setting this project up
08:04 - um
08:05 - let me
08:06 - you know what i'm gonna have to remember
08:07 - to periodically look over at the live
08:09 - chat i haven't been doing a great job so
08:12 - let me give it a little look here but
08:13 - you while i'm looking at that if you can
08:15 - see the screen you can see some of
08:19 - let me go down to some of our questions
08:21 - here we go
08:22 - so
08:23 - let me read off a few of these questions
08:25 - we need to talk about i'll give you a
08:26 - minute to kind of think about it while i
08:28 - catch up on what you all are saying in
08:30 - the live chat so we need to decide on a
08:32 - ui framework so i'm i'm talking about
08:34 - are we going to use material ui are we
08:37 - going to use some other framework i
08:39 - already know what harshit's going to say
08:41 - he's going to say no way for material ui
08:43 - but
08:45 - i'm open to suggestions there only thing
08:47 - is it has to be material design friendly
08:52 - what are we going to use for testing i'd
08:55 - love to have this thing 100 fully
08:57 - covered with with testing
08:59 - so
09:00 - i'm going to need help with that one
09:02 - because if you all have watched before
09:03 - you know i'm not really
09:05 - great with with testing so i'll rely on
09:09 - on your advice for that and then
09:11 - whatever we choose i'll learn it and
09:13 - we'll do it
09:14 - uh should we use redux
09:17 - may not be able to make this decision
09:18 - right away because we'll have to see
09:20 - where the data is coming from how
09:21 - complex it is so
09:23 - we may hold off on that a little bit we
09:25 - can certainly develop a lot and then add
09:27 - in redux afterwards so in terms of the
09:30 - ui
09:31 - we can probably build that all out
09:33 - without having to worry about redux
09:35 - what cms should we use we've talked
09:37 - about that and
09:41 - where am i going to host this are we
09:43 - going to use digital ocean we're going
09:44 - to use aws what what are we going to do
09:47 - and
09:48 - here's the thing right now there's
09:49 - certainly a ton of urls that are being
09:51 - linked to from elsewhere do we want to
09:53 - keep the urls i'm thinking yes
09:56 - it would i would hate to have all those
09:58 - links break
09:59 - but then if we are going to keep them
10:01 - how what's the best way to do this how
10:02 - do we set up our routing structure
10:05 - to be able to best
10:07 - match up
10:09 - our site with the old urls i don't know
10:11 - that we'll be able to keep all of them
10:12 - things are going to change but
10:15 - if we can avoid breaking
10:17 - a lot of of inbound links from elsewhere
10:21 - uh then i'd love to do that okay i do
10:24 - have a phone call coming in
10:26 - i think i'm just gonna let it go to uh
10:29 - to voicemail
10:31 - and um
10:32 - because this isn't going to be a really
10:33 - long stream i do have a meeting to go to
10:36 - um in about an hour so
10:39 - all right so think about all those for a
10:41 - minute
10:42 - and i'm going to see what you all have
10:43 - already said about these uh in the live
10:45 - chat
10:47 - okay so harsh is recommending we should
10:49 - use gatsby uh so if you're not familiar
10:52 - with gatsby gatsy gatsby is um
10:55 - comparable to in in the same class as
10:58 - create react app next js it's like a way
11:02 - to scaffold
11:04 - your react app okay and they all come
11:07 - with with pros and cons so
11:09 - we'll have to consider gatsby i have not
11:11 - used gatsby personally i've used next
11:13 - i've used create react app haven't used
11:15 - gatsby yet so i'll consider it
11:19 - but
11:20 - i mean i'm tending to lean more towards
11:22 - things that i'm more familiar with but
11:24 - if there's something that's clearly
11:25 - better
11:26 - i'm open to learning it
11:28 - um but given our time frame too we have
11:30 - to be reasonable about that
11:34 - let's see
11:38 - hey everybody a lot of people are saying
11:39 - hi hey welcome
11:41 - um
11:43 - let's see
11:52 - okay harsh is recommending use draw.io
11:54 - for planning actually it's not a bad
11:56 - idea i think i'll uh i may do that i'm
11:58 - probably not gonna do it right now but
12:00 - i'll check that out after the stream
12:02 - um
12:03 - yeah and there's definitely harshest
12:05 - says yay more pr opportunities there's
12:07 - gonna be so many opportunities for you
12:08 - all to contribute both in the planning
12:10 - stages and in actual pull requests so
12:14 - um
12:16 - i i don't expect anyone to contribute
12:18 - i'm not asking for contributions i
12:20 - realize your time is very valuable uh
12:23 - but
12:25 - i definitely welcome contributions and i
12:27 - appreciate them very much so if any of
12:29 - you uh would like to build up your uh
12:31 - your github profile a bit and would like
12:33 - to contribute to this project
12:35 - uh i really really appreciate that and
12:38 - there's gonna be plenty of work to do
12:43 - okay
13:03 - okay
13:04 - we got a recommendation to use react
13:06 - materialize for the ui
13:09 - all right i'll check it out i've checked
13:11 - it out a while ago and it wasn't really
13:13 - up to what i needed at the time but i'm
13:15 - welcome to check it out again
13:18 - um
13:20 - semantic we have bootstrap semantic ui
13:23 - okay we can check those out we just need
13:25 - to find some way to easily
13:27 - use material design styles with those so
13:32 - i'm open to going with something that's
13:33 - not material design related by default
13:36 - if there's some easy way to
13:38 - kind of add that on
13:42 - okay harshit says if we use gatsby we
13:44 - don't need to use redux
13:47 - okay
13:48 - um
13:50 - let's see
13:55 - we have uh bulma uh which is another ui
13:58 - framework
14:00 - um
14:02 - let's see
14:09 - okay so we have some suggestions for
14:12 - hosting
14:13 - uh so we have a suggestion of aws
14:16 - because of the traffic that we're
14:17 - getting this site that may be the best
14:20 - um
14:21 - let's see
14:23 - all right i got a lot of stuff coming in
14:25 - so how about let's let's do this let's
14:27 - start writing in
14:29 - uh some of these suggestions here so
14:32 - let me zoom out a bit on this this is
14:34 - trello by the way if you're not familiar
14:36 - with trello it's it's kind of nice
14:38 - um
14:40 - to be able in this case i'm using it
14:42 - like a kanban board
14:44 - but it's nice to help plan out the
14:45 - project
14:47 - so let's go with
14:50 - the
14:51 - the hosting so
14:55 - let's just throw in aws as an option
14:58 - there and ui framework we got a lot of
15:01 - options so
15:03 - i'll zoom in as well here so y'all can
15:05 - see
15:09 - let's make this a checklist how about
15:11 - that and then we can check things off
15:14 - once we rule them out
15:16 - uh that seems like it'll be the easiest
15:18 - alright so
15:20 - material ui
15:22 - we had a bootstrap
15:26 - and i'm going to shorten these like
15:28 - obviously i'm not going to use plain old
15:29 - bootstrap right i'm going to use
15:32 - the react version of bootstrap so
15:34 - somebody
15:35 - some
15:36 - repo that's taken bootstrap and turn it
15:38 - into react components right same way
15:40 - with like materialize
15:43 - right basic materialize is not
15:46 - for react but there is a version for
15:48 - react
15:50 - bulma
15:51 - um was the other one i kept seeing
15:54 - uh
15:59 - semantic
16:05 - semantic okay
16:07 - i think i got
16:09 - i think that's everything i saw
16:13 - um
16:15 - let's see
16:18 - actually you know what i want to do as
16:19 - well since we i didn't have this up here
16:22 - as
16:23 - something to check out but
16:25 - um
16:28 - let's see uh let me just call
16:34 - this should call framework
16:40 - for lack of a better term
16:42 - i'm going to call this framework for now
16:44 - just so that we can
16:46 - have a list
16:47 - to go by go through some pros and cons
16:52 - and let's go with
16:54 - create
16:57 - react app
16:59 - next
17:00 - js
17:01 - and
17:03 - gatsby
17:09 - is that eastfield gatsby
17:12 - i think so but it just looks weird to me
17:13 - for some reason
17:15 - um
17:23 - yeah that's how you spell gatsby okay
17:26 - um
17:27 - let me scroll through just a bit
17:29 - see if i missed anything
17:48 - okay here's another uh another good
17:51 - thing
17:52 - that we haven't talked about yet but we
17:53 - should think about uh database
17:56 - so
17:58 - it depends really on what cms we're
18:00 - using
18:01 - because
18:03 - if it's wordpress
18:05 - usually you typically use my sql with
18:09 - wordpress
18:11 - but if we end up going with some other
18:13 - content management system
18:15 - potentially we could we don't even have
18:17 - to use anything that's sql based we
18:18 - could use mongodb
18:20 - uh we could use whatever we wanted um
18:24 - you know we could go with couch we could
18:26 - anything really um
18:29 - so i'm not sure but that question is
18:31 - going to be tied into the cms so the
18:33 - answer is basically we're going to go
18:35 - with whatever database
18:37 - is best suited to the content management
18:40 - system that we choose
18:42 - uh so i think we can put that question
18:45 - off until we we
18:46 - decide for sure on a content management
18:49 - system
18:52 - um
18:53 - let's see
18:57 - okay so it looks like uh
19:00 - gatsby
19:01 - has this a very similar routing system
19:03 - to next js which is good because i'm
19:05 - familiar with that
19:07 - i definitely need to be able to use i
19:10 - think react router on top of it to do
19:11 - some custom stuff
19:14 - i can see that being
19:17 - somewhat necessary later on down the
19:19 - road which i think that shouldn't be a
19:21 - problem
19:23 - uh gatsby has graphql already built in
19:25 - which is wonderful because i do want to
19:27 - use graphql
19:29 - we're going to talk more about that in
19:30 - in a minute as well so
19:32 - um keep that if anybody's familiar with
19:34 - graphql please stick around
19:37 - because
19:38 - we we have somewhat of a dilemma with
19:40 - where our data is housed right now we've
19:42 - got to fix that before any of this can
19:45 - really happen
19:46 - um in terms of populating what we build
19:49 - with with content
19:58 - all right
20:03 - okay rob is asking what's the best place
20:05 - to go and find out about getting set up
20:07 - to do pull requests i've never used
20:09 - react
20:10 - um
20:13 - i guess uh let me know you can you can
20:16 - ask questions here in the live chat or
20:18 - you can send me a message on twitter or
20:20 - wherever
20:21 - um
20:22 - first
20:23 - i want to know what what is your
20:24 - experience with with github and pull
20:26 - requests in general
20:29 - have you done that before and just never
20:31 - done it with react or have you never
20:33 - done a pull request before
20:35 - um with github at all
20:37 - uh that'll once i know that i think i'll
20:40 - be able to help you out more i just kind
20:42 - of want to know where we're with our
20:44 - where we're starting at but
20:45 - i definitely welcome pull requests from
20:48 - from anyone even if you're not familiar
20:50 - at all with it i'll try to help you out
20:52 - if it needs changes i'll try to suggest
20:54 - changes to you and really help you to be
20:56 - able to make a good pull request all
20:58 - right so definitely welcome i very
21:00 - rarely turn down a pull request always
21:03 - try to grab you know get something
21:05 - useful out of each pull request
21:07 - and merge it in so if you're looking to
21:09 - get your first pull request merged
21:11 - this is a great place to do it not only
21:13 - in this project but any of the other
21:15 - projects that we've done in live coding
21:16 - with jesse
21:18 - so keep that in mind if if you're new
21:21 - and want to get something on your github
21:23 - profile
21:34 - all right
21:38 - michael lee says jesse you are the best
21:40 - we love you i love you all too
21:43 - thanks for saying that i really do i
21:45 - look forward to this stream uh every day
21:48 - i i i really love it
21:51 - um
21:53 - let's see kind of that excited okay so
21:55 - uh amman is saying will be good
21:58 - honestly i really i
22:00 - i would like to work with i've
22:01 - never worked with before i think
22:03 - it would be cool
22:05 - it just kind of depends on what ends up
22:07 - being the best to use with our cms
22:14 - oh okay uh also another plus for gatsby
22:18 - it has plug-ins for wordpress so we can
22:20 - grab the data and pull it in to that
22:23 - that graphql that's built in which means
22:25 - we don't have to use wp graphql the
22:28 - plugin which we're using on another
22:30 - project that we're working on
22:32 - so
22:33 - i actually have had no problems with the
22:34 - wp graphql program plug-in i really like
22:37 - it
22:38 - we had the the um creator of that
22:40 - plug-in in on the on the live streams
22:42 - before so
22:44 - i'm not saying there's anything wrong
22:45 - with it but if we have something built
22:47 - in that's also cool
22:56 - uh
22:58 - lenica as can you explain this project
23:01 - um
23:04 - i can
23:05 - i don't know if you joined late so i did
23:07 - explain it earlier so i'm just going to
23:09 - give very very brief overview for all of
23:11 - you that are joining because i can see
23:13 - there's a lot of viewers that have just
23:14 - joined recently let me give a one minute
23:16 - explanation just to catch everybody up
23:18 - if you want to know more
23:20 - after this streams over go back and
23:22 - watch the first like 10 minutes
23:25 - so basically we're going to build a
23:27 - react site it's going to grab data from
23:29 - different data sources content
23:31 - management systems and things it's going
23:33 - to pull it in and it's going to display
23:35 - it on a page it needs to be server-side
23:37 - rendered for search engine optimization
23:39 - purposes
23:40 - but really it's it's simple it just
23:43 - needs to be able to handle a lot of
23:45 - traffic
23:46 - and needs to be able to display data in
23:48 - a very user-friendly way
23:51 - um
23:52 - obviously we're going to go with you
23:54 - know progressive web app style right i
23:56 - think if you're building anything new
23:58 - why not make it a progressive web app
24:02 - but other than that it's not going to be
24:04 - that much different than your typical
24:07 - blog like a react blog it's just going
24:09 - to be huge
24:10 - there's going to be
24:12 - a lot more uh just in terms of different
24:15 - types of pages and different types of
24:17 - content that are going to need to be
24:19 - displayed
24:20 - so but the basic principles of pulling
24:23 - in data and just displaying it are the
24:25 - same
24:26 - no login
24:28 - we don't have to handle user data we
24:29 - don't have to handle form data as far as
24:32 - i know
24:33 - now of course
24:35 - project requirements change i'm sure you
24:38 - all have had projects before the
24:39 - requirements have changed at some point
24:41 - that certainly can happen but as of
24:43 - right now
24:45 - this is what the project needs
24:48 - all right cool
24:51 - uh postgres all right i've never used
24:54 - that before as well but i'm certainly
24:55 - open to you if for those who don't know
24:57 - that's another
24:58 - type of database
25:02 - let's see
25:08 - thank you
25:11 - okay so
25:12 - if you remember rob asked a little while
25:14 - ago about pull requests uh rob says i've
25:16 - done pull requests several times i would
25:18 - say a little above beginner okay great
25:20 - so you're already familiar with the pull
25:21 - request it's going to be the same
25:23 - process and
25:25 - to be honest with you even if you don't
25:26 - know anything about react there's going
25:28 - to be other things that need done and
25:29 - i'm not just talking about the typical
25:31 - like fixed typos in the readme file
25:34 - they're going to be
25:36 - css things that need done
25:39 - so if you know something about css but
25:41 - not particularly about react hey you
25:43 - could take a shot at that
25:45 - um there's going to be
25:48 - i think what else we'll need
25:50 - um we're going to have some node going
25:53 - on right so we're going to write some
25:54 - things uh so if you understand node even
25:57 - if you don't understand react you'll
25:58 - still be able to contribute uh in that
26:00 - way so there's gonna be opportunities uh
26:04 - sometime within the next week i'm gonna
26:06 - build create a repo for this and i'm
26:08 - gonna put a ton of issues in there and
26:10 - then you all be able to see broken down
26:13 - into small chunks what needs done
26:15 - and if you feel like it's something
26:16 - you'd really like to do then take a shot
26:19 - at it and
26:20 - i'm i'm happy to help if if you do need
26:23 - any help
26:24 - okay
26:26 - all right i'm almost nearly through a
26:28 - lot of the discussion now so let me get
26:31 - through this last little bit and then
26:32 - we'll see where we're at in terms of our
26:34 - questions make sure we haven't missed
26:35 - anything
26:36 - and
26:38 - start getting to some of the other uh
26:40 - some of the other things we have to
26:41 - decide on
26:43 - oh okay um
26:46 - dylan asks about a cms it's a content
26:49 - management system so if you're familiar
26:51 - with let's say wordpress
26:54 - drupal joomla
26:56 - those are really popular php based ones
27:01 - it's just a user interface where someone
27:03 - is not really familiar with coding at
27:05 - all can input data
27:07 - and then
27:09 - that data can be not just data but
27:11 - usually like media like images and
27:13 - things like that they can input that and
27:15 - then that can be used in a website
27:24 - all right uh jesse mcintyre says yeah
27:28 - this stream is incredible so helpful to
27:29 - see how a real pro purchase the project
27:32 - uh yeah um i mentioned this before but
27:36 - i am a professional web
27:38 - front-end developer in terms of the if
27:41 - you take the word professional to me and
27:43 - i get paid to do this
27:45 - if the word pro means i'm like really
27:47 - really good at my job i don't claim that
27:50 - all right i'm
27:51 - i'm just trying to do the best work that
27:53 - i can and learn more every day
27:55 - so
27:56 - if if i can help somebody out and learn
27:58 - from that wonderful but more often than
28:00 - not i learn from you all so um
28:04 - i guess just keep that in mind i will
28:06 - make mistakes it will definitely happen
28:08 - uh but hopefully we can all learn uh
28:11 - something from those mistakes and then
28:12 - end up building something awesome
28:16 - let's see
28:18 - world's asked are we gonna use react
28:20 - native
28:22 - not right away i'd really love to do
28:24 - some react native projects that'll take
28:26 - some of the things that we're working on
28:28 - now and just regular react and then
28:30 - convert them to react native if you're
28:32 - not familiar with react native it's
28:34 - really awesome
28:35 - i did a video about it
28:37 - maybe a few weeks ago
28:40 - so
28:40 - i think if you search
28:42 - react native within the free code cam uh
28:45 - set of videos
28:48 - you'll you'll find it i believe it's the
28:49 - only react native video we have right
28:51 - now but anyway react native is a way for
28:54 - you to use react
28:56 - write
28:56 - javascript
28:58 - and then have that be converted
29:00 - into native code that runs on an android
29:03 - device or an ios device
29:06 - so it's really awesome so it's if you
29:08 - were familiar with
29:10 - ionic um or phonegap a little bit older
29:14 - technology it was a way to use
29:17 - javascript and make apps but it didn't
29:20 - it it's not exactly the same this goes a
29:22 - step further and what actually gets on
29:25 - the device
29:26 - is
29:28 - the actual so i believe in in android
29:31 - it's uh java although i don't know uh
29:34 - people are using kotlin now so
29:36 - i'm not sure exactly what it gets
29:38 - converted to
29:39 - and then ios is swift i believe
29:42 - so the device doesn't read the job it's
29:44 - not doing javascript but you get to use
29:47 - javascript which is wonderful um
29:50 - built my first react native app
29:52 - about a month ago
29:54 - really cool process so i'd love to be
29:57 - able to do that on a stream
29:59 - but so maybe after this project we'll
30:01 - get into that
30:04 - michael says i don't understand half of
30:05 - what's going on and i'm still excited
30:08 - awesome i'm really excited as well uh
30:12 - so i think this would be a really cool
30:14 - project
30:16 - uh let's see
30:20 - okay cool so
30:23 - it looks like uh harshit in the live
30:25 - chat is super excited to use gatsby so
30:28 - i'm definitely gonna have to do my
30:29 - research on gatsby uh after the stream
30:32 - today and and tomorrow morning
30:35 - and and check that out uh so if anybody
30:38 - else has used gatsby before please let
30:40 - me know what you think about it in the
30:42 - live chat or you can send me a message
30:44 - on twitter anywhere you can find me on
30:47 - the internet any social media platform
30:49 - feel free to uh message me on there
30:51 - whatever you like the best you can email
30:52 - me if you can find my phone number you
30:54 - can call me
30:55 - um it's out there
31:00 - let's see
31:01 - if the client side of
31:02 - suicide okay good there's a good
31:05 - question
31:06 - so what is the difference between client
31:08 - side react and server side i've never
31:10 - done the server side
31:12 - this is a great question
31:14 - so server side react
31:17 - i'll just take you i think the best way
31:19 - to explain it would be an example so
31:23 - with the server side react
31:27 - your client so that the browser users
31:30 - browser gets
31:31 - basically an html page already
31:34 - completely compiled right so the server
31:37 - on the server all api calls will be made
31:39 - all the content will be there it'll all
31:41 - get rendered html and then sent
31:44 - at least on the first
31:46 - load after that potentially you can
31:48 - switch over to some client-side routing
31:50 - just for speed purposes do pre-fetching
31:52 - which will probably do
31:54 - but the cool thing about that is that
31:56 - search engines can see that now let's
31:58 - flip it around and only use client-side
32:01 - if we only use client-side routing
32:03 - what the browser gets
32:06 - is not the full html it's just the
32:08 - skeleton
32:10 - that needs to be filled with the data
32:11 - but instead what happens is the client's
32:13 - browser gets all the code then the
32:16 - javascript fires
32:18 - makes your calls to your api pulls in
32:20 - the data and then renders for a typical
32:23 - user that'll happen so fast it's not
32:25 - really that much of a difference but for
32:27 - a web crawler
32:29 - right like google's crawler or bing or
32:31 - whatever
32:32 - they don't stick around long enough
32:35 - for that api data to come back so all
32:38 - they're going to see on the page is just
32:40 - potentially nothing or just the bare
32:42 - minimum that you already had kind of
32:45 - hard coded in there
32:46 - so it's gonna see
32:49 - it's never gonna see the data that you
32:50 - wanted to see for search engine
32:52 - optimization
32:54 - so um
32:56 - yeah and i just see harsh it says google
32:58 - now renders uh javascript
33:01 - yeah it renders javascript that's true
33:04 - but it doesn't stick around on the page
33:06 - long enough to render api calls so if
33:10 - all our data is coming from elsewhere
33:11 - through apis it will not render this so
33:15 - i did a lot of testing with this on some
33:17 - some sites that i built a few months ago
33:20 - and it is true you can get it to render
33:23 - javascript
33:24 - but not uh api data
33:29 - so i'll keep that in mind if you're
33:31 - using
33:32 - react or any type of single page
33:34 - application
33:36 - if you're
33:37 - if the project needs search engine
33:39 - optimization
33:41 - you gotta compensate for that uh and
33:43 - server-side routing is
33:45 - typically the way that uh that that is
33:47 - done
33:48 - or i'm sorry server-side rendering uh
33:50 - sorry i misspoke okay let's see
34:01 - okay so ali says sounds like a long-term
34:04 - project how about using react reason
34:06 - would be a great learning experience
34:09 - um
34:11 - i've i've seen a lot of people on
34:14 - twitter talk about react reason i'm not
34:16 - very familiar with it at all so like i
34:18 - said i'm very open to new things
34:20 - as long as
34:22 - if i'm going to switch from something i
34:24 - know to something new
34:26 - it has to be clearly a better option
34:29 - because that's that's going to set us
34:30 - back because i'll have to learn it
34:33 - so
34:34 - given our time frame which
34:36 - i'm going to say we're only going to
34:37 - spend about three months what's
34:38 - beginning in november
34:41 - december january yeah i want this done
34:44 - by february and then i want to suspend a
34:46 - whole month testing so it's ready to go
34:49 - by the end of february
34:51 - and february is a short month so we get
34:54 - we gotta get it going so anyway
34:57 - so let's keep that in mind when we're
34:58 - choosing what to use is that we there's
35:00 - definitely going to be a trade-off and
35:02 - in some cases
35:04 - if the difference between what we know
35:06 - already and the new thing that might be
35:09 - better if it's a small difference
35:11 - then we're going to stick with what we
35:13 - know
35:14 - just so that we can get things done
35:15 - faster okay
35:17 - um
35:19 - i think that's that's a reasonable
35:22 - uh that's kind of a reasonable plan
35:24 - right let me know if you disagree
35:27 - um but
35:29 - if we had lots more time
35:31 - then i would think differently about it
35:33 - but this is a shorter deadline than i
35:35 - expected to have just found out about
35:37 - this yesterday after no i just found out
35:40 - about that this morning actually so
35:43 - um
35:45 - yeah so about 9 30 am this
35:48 - i i got an email found out about this
35:50 - date so
35:53 - just to explain the reason for the date
35:56 - our contract i don't think i explained
35:58 - this but the contract for our current
36:00 - system
36:02 - is up
36:03 - on this march the 6th
36:05 - 2018.
36:07 - so we have to pay more money for next
36:10 - year's contract if we still have it but
36:12 - if we can get this done then we'll save
36:14 - a lot of money
36:16 - uh from the our contract
36:18 - because the current content management
36:20 - system is there's a yearly fee for it
36:22 - so
36:24 - there's definitely a decent a good
36:25 - financial incentive to get this done you
36:28 - know sooner
36:32 - okay um
36:35 - so we have a question what are the steps
36:37 - to contribute to this project you know
36:39 - what we're gonna have a a structured uh
36:43 - contribution uh file in the github repo
36:46 - so
36:47 - they'll be very clear steps with the
36:49 - tape
36:50 - or what to do when you wanna contribute
36:53 - so just hold on for that i'll have that
36:56 - ready whenever i make the repo but
36:58 - basically
37:00 - i'm gonna have a bunch of issues ready
37:02 - you can pick out the issue and try to
37:03 - solve it submit a pull request and
37:05 - potentially if everything's good then
37:08 - we'll merge it
37:09 - or if you come up with a feature or
37:12 - something that you think would be really
37:14 - cool and on your own initiative you want
37:16 - to contribute
37:17 - then i'm good with that potentially it
37:19 - might have less of a chance to get
37:21 - merged um depending on
37:24 - on whether or not i
37:26 - i think the feature is needed or not or
37:28 - we should use it so you may want to run
37:30 - it by me first but i'm open
37:33 - there's been a lot of times when
37:35 - somebody has submitted a pull request
37:36 - for a feature that i never even thought
37:38 - of and it's awesome and i'm more than
37:40 - happy to pull it into the project so i
37:42 - don't have a super complicated process
37:45 - for
37:46 - uh submitting pull requests so i like to
37:48 - keep it pretty basic so that those of
37:50 - you who are newer at the process have
37:52 - kind of a low barrier to entry and can
37:54 - get those pull requests in
37:56 - um but i'll have more details for you
37:58 - when we actually get the repo started
38:00 - which which should be
38:02 - maybe tomorrow
38:07 - okay
38:21 - okay here's another question
38:22 - um is it better to use redux with react
38:25 - for large scalable projects and what is
38:28 - the best folder structure
38:30 - architecture um i rec in general i
38:34 - recommend using redux for larger
38:36 - projects it really helps keep your your
38:39 - data flow
38:40 - uh reasonable
38:42 - right it's very easy to deal with data
38:44 - on a small project you can just use
38:46 - state
38:47 - um
38:48 - it's you know component state it's fine
38:51 - once it starts to get bigger it's really
38:53 - hard to pass state and props down
38:56 - through lots of components and
38:58 - it can be a mess
39:01 - redux helps you simplify all that
39:05 - so i would say in general yes the larger
39:08 - more complex projects will benefit from
39:10 - redux but it does depend on your your
39:13 - projects
39:14 - so
39:15 - just because you have a big project
39:17 - doesn't necessarily mean you have to use
39:19 - redux
39:21 - but
39:22 - i found redux to be very helpful
39:28 - see
39:47 - okay uh vishal asks what's the best way
39:50 - to make api calls besides fetch
39:54 - um
39:56 - i i don't know if there's a better way
39:58 - than fetch right now okay i like to use
40:01 - fetch now i know people like to use what
40:03 - is it uh axios
40:06 - i haven't used axios
40:08 - but i
40:09 - maybe it's better here's my thought on
40:11 - it
40:12 - if fetch is already usable
40:15 - um and at least depending on like client
40:19 - side depending on the browser it's
40:20 - already there right um why add in
40:24 - something else if it doesn't add in more
40:27 - functionality than fetch does like keep
40:29 - things light right
40:31 - maybe axios does something that fetch
40:33 - can't do
40:35 - but i'm unaware of that so
40:37 - um i don't really think i could give you
40:39 - a great answer for that because i pretty
40:41 - much stick with fetch
40:42 - um i mean you know before fetch of
40:45 - course
40:46 - you know we use ajax right but um
40:50 - yeah i've uh i'm pretty happy with fetch
40:56 - okay so hacker uc says what about using
40:59 - react static instead of gatsby
41:02 - okay i am not familiar with react static
41:06 - but i'll add it to our list
41:14 - and i'll have to
41:15 - look that up
41:17 - let's see
41:20 - pedro says elm
41:22 - i'm not familiar with elm
41:24 - if there's
41:25 - if there's good reasons we should use
41:27 - that let me know
41:29 - um
41:31 - [Music]
41:42 - sorry i'm
41:44 - i'm messing up on the name here um but
41:47 - anyway it says how will you be notified
41:48 - will it be through here or a sign up
41:51 - sheet um i think the best way to notify
41:53 - is
41:55 - if you want to get notified whenever i'm
41:57 - going to go live with videos then
41:59 - subscribe to free code cams channel and
42:01 - make sure you have notifications on
42:04 - for that channel on youtube
42:07 - i also tweet about what i'm doing and
42:09 - when i'm gonna
42:13 - post or do a new live stream so
42:16 - if you'd like to you can follow me on
42:18 - twitter and then you know you you'll be
42:21 - able to see my tweets about when i'm
42:22 - gonna do things and then finally
42:24 - whenever i get the github repo
42:26 - up and running which will likely be
42:28 - tomorrow or the next day
42:30 - you can start that repository
42:33 - uh and then
42:35 - you'll know where to go
42:36 - uh you can get um
42:39 - i guess there's other ways you could do
42:41 - it potentially you could follow
42:45 - me on github i guess and then my
42:47 - activity will show up so there's several
42:49 - different ways you can keep track of the
42:51 - project so those those three ways are
42:54 - probably the most
42:56 - reliable ways to stay up to date on
42:59 - what's going on
43:03 - and of course says what about sagas
43:05 - yeah so i'm not redux sagas is another
43:08 - way to handle um
43:11 - you handle data flow um handle state and
43:14 - react i have not used sagas so far i've
43:18 - i've basically used um
43:21 - thunks
43:22 - to redux thunk
43:25 - so i'm open to using sagas if we find
43:28 - that that's
43:29 - that would be better
43:30 - um but once again that'll be something
43:33 - i'll have to learn so if you all think
43:35 - that would be a better thing to do just
43:37 - you know let me know
43:41 - okay harshit says axios has better api
43:44 - than fetch
43:45 - okay
43:46 - axios then may be easier to use
43:49 - so like i said i've never really had a
43:51 - problem with the fetch api it seems
43:53 - pretty straightforward to me but i
43:55 - haven't actually used axio so i i can't
43:58 - give a good
43:59 - you know opinion on one versus the other
44:02 - uh okay
44:08 - okay world s on the previous projects
44:10 - one through four which do you recommend
44:12 - to get up to speed
44:14 - so if you haven't watched the stream
44:16 - before this is the fifth project that
44:18 - we're working on now we've done four
44:20 - projects before this and um
44:23 - i believe they were all react projects
44:25 - right
44:26 - does it all react
44:29 - maybe we might have done one that wasn't
44:31 - react but anyway we've done at least
44:32 - three react projects before this so if
44:34 - you want to get up to speed
44:36 - uh i would say
44:38 - project three will have kind of the
44:40 - latest stuff with project three we're
44:42 - using react 16 we're using the latest
44:45 - version of material ui
44:47 - so that would be helpful but if you want
44:49 - to learn more about server side
44:51 - rendering then check out project one we
44:53 - use next js for server-side rendering
44:56 - just a disclaimer
44:58 - we did those projects earlier you know
45:01 - months ago so a lot of the things we
45:03 - used have newer versions now so it may
45:05 - not match up exactly with the latest
45:07 - versions
45:08 - so
45:09 - i mean but obviously we can't do
45:11 - anything about that right we we use the
45:13 - latest versions that were available at
45:14 - the time so i just want to warn you all
45:16 - so um you just realize that
45:20 - you may want to check up on the latest
45:22 - docs and see if anything has changed
45:24 - but
45:26 - you know it's only been a few months so
45:28 - it shouldn't be too drastic things
45:30 - should all you know still work
45:33 - but that would be my recommendation
45:35 - one or three for the projects if you
45:38 - have time you know check out
45:40 - um
45:42 - i'm sorry i'm sorry four is where we use
45:46 - react 16 project 4 we use your x-16 so
45:50 - my mistake
45:51 - so check out project 1 if you want to
45:53 - look at some how we did server-side
45:55 - rendering check out project 4 if you
45:58 - want to see the latest version of react
46:00 - and the latest version of material ui
46:04 - okay
46:08 - okay another question is it fine to
46:10 - create subfolders for different modules
46:12 - and actions reducers containers
46:13 - components
46:15 - um
46:16 - yeah it's certainly fine uh
46:18 - structure folder structure is
46:22 - there are recommended ways to do it
46:24 - but there's certainly room for
46:26 - adjustment based on your particular
46:28 - situation and what works best for you
46:30 - for your team
46:31 - so
46:32 - i think it's okay
46:35 - it's good to use somewhat of a standard
46:37 - structure especially if it's going to be
46:38 - on github and open source you want
46:40 - people to be able to understand what's
46:41 - going on
46:42 - okay but within somewhat of a standard
46:44 - structure
46:46 - if you need to make
46:47 - you know some adjustments depending on
46:49 - what works best for you then
46:51 - um as long as it's not too drastic i
46:53 - don't see a problem with that at all
46:57 - okay can you post your github for
46:59 - smoothies okay the github
47:02 - i believe i have a link to my github
47:04 - profile in the description but if i
47:07 - don't
47:09 - i'll post it
47:11 - so i don't have this particular
47:13 - repository up yet but i will have it up
47:15 - soon and i'll have the link for you
47:17 - ready in the next live stream which
47:19 - should be tomorrow
47:21 - uh so
47:23 - i'll so i'll get it to you
47:25 - um let's see i always supposed to be bad
47:28 - late to the party as always
47:30 - all right so we have a few people
47:32 - joining in a little bit later uh so inn
47:34 - is here hey anna how's it going thanks
47:36 - for joining us uh albert's uh is asking
47:39 - for update about the project um just
47:42 - real basic it's gonna be react and we're
47:44 - gonna grab data from a content
47:46 - management system and pull it in with
47:48 - graphql
47:50 - uh we're gonna pull that data in we're
47:51 - gonna render it on the server side and
47:53 - uh we're gonna create a react app a
47:55 - progressive web app that is gonna
47:57 - basically just display data
47:59 - um
48:01 - not gonna be a ton of interactivity
48:02 - going on but we needed to be able to
48:04 - handle a pretty significant load
48:06 - um
48:07 - so that's the project now if you want
48:09 - more details go back after the stream
48:12 - and watch the first 10 minutes of it and
48:14 - i go into in more details about it
48:18 - um sweetie projects
48:26 - uh okay another question what is better
48:29 - way to write reducers switch in cases or
48:32 - something like actually when i write
48:34 - reducers i usually use a switch
48:37 - statement
48:38 - there may be a better way but
48:40 - i found switch statements to be really
48:42 - straightforward easy to read easy to
48:44 - write
48:45 - so
48:46 - uh i would stick with that
48:49 - okay we got a question about the start
48:51 - date for this project
48:53 - i'm saying today is the start date right
48:55 - this is the day we start the planning
48:57 - um the actual coding
49:00 - might start tomorrow if we can if i can
49:03 - get some enough information to make a
49:05 - good decision
49:06 - about some things then
49:08 - we might start coding
49:10 - tomorrow
49:11 - uh in terms of design we already
49:13 - actually have quite a bit of the design
49:15 - uh finish
49:17 - from previous projects previous work
49:19 - we've done so
49:20 - that's not going to be too much of an
49:22 - issue
49:28 - okay
49:29 - mean no coupon but you're free coffee
49:30 - and doughnuts while watching
49:33 - john hanson says are you gonna be
49:35 - handing out coupon codes for free coffee
49:36 - and donuts while watching this new
49:38 - project
49:40 - i do not have any coupon codes for free
49:42 - coffee and donuts so sorry about that i
49:45 - can put little coffee emojis in the live
49:47 - chat every once in a while if you want
49:49 - that's that's probably as good as it can
49:51 - as it can get so
49:54 - i apologize if i could i'd send you all
49:56 - free coffee and donuts but
50:00 - not possible right now
50:05 - okay so uh we have a question about
50:08 - links to previous
50:10 - project repos
50:12 - okay so here's the best thing to catch
50:14 - up on new projects
50:16 - uh within freecodecam youtube channel
50:18 - which is what we're on right now
50:20 - just check out the live coding with
50:22 - jesse playlist
50:24 - and
50:26 - um
50:28 - you can see the different projects i
50:29 - usually have in parentheses at the end
50:31 - of the title it will say like p1
50:34 - um
50:36 - d2 should be project one day two so if
50:40 - you click into any of those videos in
50:42 - the description it will have all the
50:44 - links you need to catch up on the
50:46 - project so
50:47 - the github repo will be there for sure
50:50 - and then potentially a link to a trello
50:52 - board or other things that we're using
50:54 - for that particular project
50:56 - i'm in the process of creating separate
50:58 - playlists for each project
51:00 - project 4 now has its own separate
51:02 - playlist
51:03 - and i'm going to get the other projects
51:05 - into their own playlist soon so it'll be
51:07 - a little bit easier the live coding with
51:09 - jesse playlist what has everything all
51:12 - in one playlist so
51:14 - if you want to see everything that's the
51:16 - one but it's it's a lot there's over 100
51:18 - videos in there now so we're separating
51:20 - them out into separate playlists
51:22 - make it easier for you
51:26 - uh okay let's see
51:29 - all right so let me
51:31 - i'm gonna stop with the live chat just
51:34 - for a minute to make sure that we've
51:36 - gone over these questions
51:37 - and then we'll wrap this up for a little
51:39 - while
51:40 - and
51:44 - i'll do a little bit of research and if
51:46 - you all uh want to keep giving me
51:48 - suggestions that's fine
51:51 - we do have a getter channel the links in
51:52 - the description if you want to join in
51:54 - on there and talk about it in the getter
51:56 - channel
51:58 - we have a slack channel if you want to
52:01 - send me your email address i can invite
52:03 - you to that channel and then of course
52:05 - i'm available on all the social media
52:07 - things
52:09 - all right so host
52:10 - let's transfer to your database okay
52:12 - here is a very important thing that we
52:15 - need to get up and running and i need
52:16 - your advice for this won't this may not
52:20 - be something that we can have on github
52:22 - although potentially we could
52:23 - but
52:25 - right now we have all the data for the
52:27 - current website in a sql database
52:31 - what we're gonna do is copy that
52:33 - database and then try to build an api
52:36 - so that we can easily pull that data out
52:39 - put it into another database in the
52:42 - format necessary for whatever content
52:44 - management system that we have so
52:47 - what i need then is
52:50 - your opinion
52:52 - on what's the best way to go about doing
52:55 - something like that
52:56 - in terms of creating the api has anyone
52:59 - had experience with things like that
53:01 - before
53:03 - is the idea just silly am i
53:06 - is this just wishful thinking that we
53:08 - can do this
53:09 - so let me know
53:11 - and then potentially if anybody is
53:13 - really experienced at building apis like
53:15 - that pulling data
53:17 - let me know
53:19 - and
53:20 - maybe we could talk more about it
53:23 - so i don't currently have access to the
53:24 - database i'm working with another
53:26 - department here at the university i work
53:28 - for because they
53:30 - have access to that database so i'm
53:32 - gonna get the access soon hopefully
53:35 - and
53:36 - and then we can start working on that
53:39 - but otherwise
53:41 - this is going to be really hard to get
53:43 - the data in because it would then
53:45 - require manually copying and pasting
53:47 - things i don't want to do that
53:49 - i do not want to do that at all it
53:51 - wouldn't be me we'd probably hire
53:52 - student workers to do it but
53:54 - that's in my opinion that's not really
53:56 - an option there's got to be a better way
53:58 - to do it so that's the way i'm thinking
54:00 - right now
54:01 - but i'm definitely open to suggestions
54:05 - all right
54:06 - um that was i think the last major thing
54:09 - that we needed to think of
54:11 - uh so we've gone over all the questions
54:13 - haven't necessarily gone through all the
54:16 - potential answers to them but i just
54:17 - wanted you all to be able to know what's
54:19 - going on with the project right off the
54:21 - bat
54:22 - and just kind of get everybody thinking
54:24 - so let me go back to the live chat
54:26 - probably just a few more minutes for
54:28 - this stream and then i'm gonna have to
54:30 - get ready for my next
54:32 - uh for my next meeting
54:34 - and um
54:35 - and then like i said there'll be another
54:37 - live stream later on today
54:40 - i'm going to be a guest lecturer in a
54:41 - computer science course and i'm going to
54:43 - talk about
54:44 - some advice for new coders and
54:48 - some of the latest trends in front-end
54:51 - development
54:53 - that'll be at six pm eastern time and
54:56 - it'll be on my youtube channel links in
54:58 - the description
55:03 - okay got a couple more questions um
55:08 - okay so austin wants to make an api call
55:11 - every 30 minutes do you have a good way
55:13 - of implementing that
55:19 - i don't know off the top of my head i
55:20 - don't know how i'd implement that for
55:22 - sure
55:23 - if you have a github repo where you're
55:25 - trying to have this code
55:27 - please share the link with me um you
55:29 - don't have to share it in the live chat
55:30 - you can send me a direct message on
55:32 - twitter or something like that i'll be
55:34 - happy to check it out for you and give
55:35 - you some advice but i i would kind of
55:37 - want to see what you're working with
55:39 - right now
55:40 - uh before i could give you a good answer
55:43 - on that
55:44 - let's see
55:45 - can you let's see
55:49 - okay another question i'm thinking of
55:50 - going to hackathon this weekend what can
55:52 - a beginner slash intermediate front end
55:54 - dev do in a hackathon
55:57 - actually
55:58 - i'm i'm going to make a confession right
56:00 - now i've never been to a hackathon
56:02 - so
56:03 - um
56:04 - i'm not entirely sure but i would
56:06 - imagine that you need a front-end dev
56:09 - right if there's gonna be any type of ui
56:11 - for whatever you're creating at a
56:12 - hackathon
56:14 - you need it you need somebody to make it
56:16 - right
56:17 - um
56:18 - so
56:19 - certainly you could you could do that
56:21 - and i mean
56:23 - i'm sure there's going to be other
56:24 - things as well i mean i'm i'm front end
56:26 - dev but i do some back end stuff when
56:29 - necessary i do some devops stuff when i
56:31 - need to i set up servers like
56:34 - so
56:35 - you know potentially you've probably
56:37 - done some of that too when you have to
56:39 - on projects so
56:41 - um and you bring another perspective
56:44 - so
56:45 - at the very least your opinion will
56:48 - probably be valuable
56:50 - now like i said i've not been to a
56:51 - hackathon if somebody else has more
56:53 - experience with hackathons then maybe
56:55 - you could offer some good advice but i'd
56:57 - say
56:59 - i i definitely think you'd have
57:00 - something to contribute
57:03 - how would you know project
57:05 - okay vishal says how would you normally
57:07 - architect your project or plan before
57:09 - actually starting so that you don't hit
57:12 - a dead end later
57:15 - okay um normally
57:18 - a lot of my planning is is somewhat like
57:20 - like this it's just it starts out with
57:22 - really broad categories and then
57:24 - eventually this list will change and
57:27 - it'll start to get really small tiny
57:29 - tasks
57:30 - okay and i estimate how long each task
57:32 - will take
57:34 - and then i have a decent estimate
57:36 - and i can
57:38 - then allocate a certain number of hours
57:40 - per week
57:42 - and
57:43 - figure out what is actually reasonable
57:46 - in the deadline and what features have
57:48 - to be pushed
57:49 - and be added in later
57:52 - um so that's roughly how i do that i'm
57:55 - usually very good about meeting
57:57 - deadlines uh there are some factors you
57:59 - just can't
58:02 - you you just can't um
58:04 - know beforehand so
58:06 - scope creep like project
58:08 - requirements all of a sudden changing
58:10 - and it's it's more difficult or um
58:14 - you know things just going wrong right
58:16 - you have illness
58:18 - um
58:20 - people who you need to get stuff from to
58:22 - continue the project aren't getting it
58:23 - to you on time so i usually build in
58:25 - some padding some time there beyond what
58:28 - i think it will take just to account for
58:30 - those
58:32 - those unknown things
58:34 - but that's how i generally do projects
58:38 - uh especially if it's just kind of me
58:40 - that's the one doing most of the
58:41 - development if i had more of a team that
58:44 - worked right here with me
58:46 - i would probably have a different
58:48 - process there would be um
58:51 - a lot more of scheduling around other
58:53 - people and what they're doing too
58:55 - so it'd be a little bit more complex but
58:58 - anyway this is how i do it i'm sure
59:00 - there's probably better ways to do it
59:02 - and
59:03 - i'd love to learn about them if you all
59:04 - have some advice on that uh but but this
59:07 - is kind of my my workflow as it is right
59:10 - now
59:18 - okay harsh it says which content
59:19 - management system and database is the
59:21 - site using now great question the
59:23 - content management the site's using now
59:26 - is
59:27 - fran it's uh
59:29 - extron so the website is franciscan.edu
59:34 - this content management system is called
59:36 - ektron
59:37 - uh runs off of like dotnet framework
59:41 - it's on a windows server
59:44 - the database i believe
59:48 - some some type of sql database to tell
59:50 - you the truth i don't know i don't even
59:51 - know for sure
59:52 - um
59:54 - what kind of database it is
59:56 - but
59:57 - uh that's it it's it's in bad shape
60:01 - the um
60:04 - the content management system is
60:08 - lacking some features that people have
60:10 - come to expect from content management
60:13 - systems and it's it's very tedious to
60:16 - update even simple things so
60:18 - um
60:19 - we've been wanting to get get
60:22 - move it to something a little bit nicer
60:25 - uh for a while now
60:30 - let's see
60:39 - okay so why not
60:40 - it says why not use firebase uh
60:43 - firestore for a database
60:45 - hey um
60:49 - in terms of of
60:51 - our
60:52 - plan for storing data and databases
60:54 - stuff i'm open to things as long as it
60:57 - fits all the requirements
61:00 - then i'm fine with checking out
61:01 - different things
61:03 - whatever is the best that we can use
61:05 - that we can reasonably use for the
61:06 - project i'm fine with that
61:08 - uh to be honest i have not worked
61:10 - directly with firebase so
61:13 - uh i'm not really in a position to make
61:15 - a decision on that right now i'd have to
61:16 - do some more research
61:29 - okay michael asks if i can link to this
61:31 - this board this trello board yes i can
61:35 - i'll try to make this board public and
61:37 - include a link in the video description
61:41 - uh i'll try to have that ready for for
61:43 - tomorrow and then probably the way i'll
61:45 - do it is i'll just make it viewable from
61:47 - the public otherwise it'll be crazy if
61:50 - everybody can edit this but i'll i'll
61:52 - certainly make this viewable
61:55 - and what i'm gonna do all as well is um
61:58 - once we get some really concrete to do's
62:01 - i'm gonna convert those to issues in the
62:04 - github repo so
62:07 - then we can have discussion within that
62:09 - issue as well
62:32 - okay um
62:35 - all right here's another idea for the
62:36 - database uh we should take uh sql dom
62:40 - import it to our new database make
62:42 - tables according to wordpress uh move
62:45 - the data in them
62:47 - okay
62:48 - um
62:49 - yeah i'm
62:50 - like i said i'm open i'm not familiar
62:53 - enough with databases
62:55 - my my experience with databases is um
62:58 - i've done some copying and transferring
63:00 - of databases in the constant context of
63:03 - moving wordpress sites to different
63:05 - servers
63:06 - so
63:09 - that i'm very limited in that
63:11 - so i'm i'm
63:13 - open and i'm welcoming advice from those
63:15 - who have more experience with databases
63:17 - so
63:18 - um and that's something that
63:20 - i'd definitely like to get done sooner
63:22 - rather than later because it's an
63:24 - important piece to this so
63:26 - um
63:27 - yeah so just let me know what your ideas
63:29 - are
63:31 - i have some people here on campus that
63:33 - are database
63:36 - administrators that i can talk to as
63:38 - well
63:39 - so i'm going to get their input on that
63:42 - and see if maybe they have a better idea
63:44 - as well i haven't had a chance to talk
63:45 - to anybody about that yet
63:47 - um this is all
63:50 - pretty i knew this was coming for a
63:51 - while but i just
63:53 - didn't know for sure when the project
63:54 - was going to start and when the due date
63:56 - was so this this all happened suddenly
63:59 - uh let's see can we join this
64:02 - okay can we join this board yeah
64:04 - definitely i'm gonna make the board
64:05 - public soon and then i'll i'll have the
64:07 - link in the description the video
64:09 - descriptions for these live chats and
64:10 - then you'll be able to check it out
64:12 - whenever you want
64:14 - uh
64:15 - this show says i'm moving from angular
64:17 - to react on a new project i found
64:19 - angular more easy to get on or maybe
64:22 - it's too early to judge but i'm liking
64:24 - react to
64:25 - i am liking react too many stuffs to to
64:27 - learn
64:29 - yeah it's definitely a switch but if you
64:31 - um if you were able to work with angular
64:34 - and learn angular i'd certainly think
64:36 - that
64:36 - that you have the the ability to learn
64:38 - react as well it's just a little bit
64:41 - different way of thinking about things
64:44 - so i think it will be a little bit
64:46 - harder at first
64:48 - but if you like it and you're committed
64:50 - to learning it then no doubt no doubt
64:53 - you can you can learn it
64:57 - okay
65:04 - uh michael says thanks i'm just starting
65:06 - and i really don't know what steps to
65:07 - take for example set up dev environment
65:10 - oh yeah um
65:12 - for this one where i say set up dev
65:13 - environment if you're not familiar with
65:15 - that uh the development environment in
65:17 - terms of
65:19 - um
65:21 - basically all the things that i have
65:23 - running on my local machine
65:25 - when i'm i'm going to do this so that to
65:27 - me at least this encompasses everything
65:30 - from my code editing code editor my
65:32 - linter
65:34 - transpilers
65:36 - um
65:38 - my webpack build which may be taken care
65:41 - of depending on what we go with for our
65:43 - our framework right whether next or
65:45 - gatsby or create react app um
65:48 - so kind of all that
65:50 - is like my development environment okay
65:52 - so a lot of that is already
65:54 - kind of build up and it stays the same
65:56 - for each project but i do like to update
65:59 - in between projects to use better tools
66:01 - or new tools so that's what i mean by
66:04 - dev environment
66:08 - and we'll basically i mean most of the
66:10 - stuff on the list will work through
66:11 - together we'll all be streamed it'll all
66:14 - be live stream we'll work through it
66:15 - together
66:16 - so
66:17 - if you'd like to learn more about any of
66:19 - these things just you know stick around
66:21 - and eventually we're going to get to all
66:23 - of it
66:34 - okay
66:35 - um
66:39 - okay so so harsh it's saying that uh he
66:42 - doesn't think that we'll need to build
66:44 - an api to get the data out he's thinking
66:47 - we should we could just dump the data
66:49 - um since we're making a clone of the
66:52 - original database there's no
66:54 - chance of us harming it
66:57 - all right i'll mention that when i when
67:00 - i talk to the database guys uh here soon
67:03 - i'll mention that as well as an option
67:04 - and i'll see what they think
67:06 - uh that might actually be they might be
67:08 - more comfortable with that to be honest
67:10 - with
67:12 - you let's see vishal says how does redux
67:16 - observable help in development um
67:19 - i have not had experience with using
67:21 - that so i can't i i have no
67:24 - uh advice to give you there no answer
67:26 - there
67:33 - let's see a question about the slack
67:36 - channel
67:37 - if you want to join the slack channel i
67:38 - need your email address
67:40 - and so don't don't put it in the live
67:42 - chat send it to me on twitter or
67:44 - something uh in a direct message
67:46 - and then i can have an invite sent to
67:48 - your email
67:50 - uh so you can't just go to a link and
67:52 - have it work there is a getter channel
67:55 - and you can
67:56 - use the link and it can work it is
67:58 - linkedin
67:59 - oh you know what i didn't put it in the
68:00 - description i forgot i meant to i'm
68:03 - going to put it here in the live chat so
68:04 - if anybody's interested in joining our
68:06 - getter channel
68:07 - click the link that i just put into the
68:09 - live chat
68:10 - and
68:11 - then you can join our gitter channel
68:14 - and i'll try to get that in the video
68:16 - description if i don't forget about it
68:18 - and so that way if if you can't get to
68:20 - live chat now or if you're watching this
68:22 - recording later on you'll still have
68:24 - access to that
68:32 - okay
68:42 - oh okay uh so
68:44 - we have an answer in terms of the redux
68:46 - observables uh so harsh it's saying
68:49 - observables are good for handling data
68:50 - streams and then we had a question about
68:52 - redux thunk thunker for async calls yeah
68:55 - so you use thunk
68:57 - when you're you need to make some async
68:58 - calls like api calls uh things like that
69:01 - so
69:02 - um
69:04 - i mean that's like just really basic
69:06 - what they do
69:07 - um
69:09 - but uh anyway thunks were really helpful
69:12 - for me and really simple to learn so
69:15 - uh if you need to make some calls async
69:17 - calls with redux i would check out funk
69:20 - first
69:21 - before moving on to something else like
69:24 - sagas
69:25 - it seems to me that thunk is like
69:28 - really basic and easy to figure out
69:33 - okay i've gone through everything in the
69:35 - live chat at this point if i missed your
69:37 - question or comment i apologize i tried
69:40 - to get to everything uh feel free to
69:42 - comment on this video if i missed it or
69:44 - ask me uh or comment on any other social
69:47 - media or just come back for another
69:49 - stream and and uh and ask me about it so
69:53 - i'm gonna end this stream in just a
69:55 - minute
69:56 - uh thank you so much everyone uh for
69:59 - joining us in the live stream we had
70:00 - quite a few um viewers in here so i
70:04 - that's awesome i really appreciate it a
70:06 - lot of activity in the live chat a lot
70:08 - of great suggestions
70:10 - so um
70:11 - it's just super helpful for me i thank
70:13 - you so much
70:15 - and you know please join us back for you
70:18 - know i i really want to collaborate and
70:20 - have this project be like our project
70:22 - and all of us contribute ideas and
70:26 - and code and everything and just work
70:28 - through this whole thing start to finish
70:30 - i think that would be really cool
70:31 - uh if you can watch later on don't
70:34 - forget i'm live streaming
70:37 - my guest lecture and computer science
70:39 - course you'll learn a little bit about
70:41 - front end development about some advice
70:43 - for new code coders trying to find jobs
70:46 - and things and get experience
70:48 - um it will be at 6 pm eastern time
70:51 - and that will be on my youtube channel
70:54 - so not the free code camp channel you
70:55 - can find the description to my channel
70:58 - uh in
70:59 - the
71:00 - or the link to my channel in the
71:02 - description for this video i'll probably
71:04 - put out a tweet um before i do that so
71:08 - that you all can
71:10 - link get a link directly to the video
71:14 - and um i've never done a live stream
71:16 - from my phone so i'm going to try that
71:18 - out later hopefully it goes well
71:22 - but
71:23 - the students are going to be able to ask
71:24 - me questions but you all will be able to
71:26 - ask me questions as well
71:28 - on the live chat
71:29 - uh so
71:31 - um you know if you have any questions
71:33 - feel free and uh i'd love to see you all
71:36 - there if you can
71:37 - if you're in a time zone where it'll be
71:39 - a weird time i totally understand so
71:41 - don't worry about it get some sleep
71:44 - uh okay
71:47 - let's see
71:49 - all right get through everything
71:52 - just double check it don't want to miss
71:53 - any anything
71:55 - all right
71:56 - so
71:58 - i'll be back
71:59 - a little later on today and then i'll be
72:01 - back again
72:03 - going continuing with this project
72:06 - tomorrow somewhere around 2pm eastern
72:10 - time i'll let you all know
72:12 - on twitter and there'll be a
72:13 - notification if you're subscribed to the
72:15 - free code cam channel until then have a
72:18 - wonderful day
72:19 - and uh
72:21 - and i'll see y'all tomorrow
72:23 - or later maybe