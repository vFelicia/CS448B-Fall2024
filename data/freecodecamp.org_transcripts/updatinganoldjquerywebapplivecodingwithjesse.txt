00:05 - hey everybody welcome to live coding
00:07 - with jessie i'm jesse and today
00:09 - i have katie here with me because it is
00:12 - administrative professionals day
00:15 - and she is my administrative
00:16 - professional
00:17 - so i just wanted to have her on and say
00:19 - thank you
00:20 - thank you very much
00:22 - she's awesome and she handles all of my
00:24 - travel arrangements when i want to go to
00:26 - conferences and does a great job because
00:29 - i don't understand how all the
00:32 - credit card system works here there's a
00:34 - lot of paperwork
00:36 - um
00:37 - also she's awesome she's like right
00:38 - outside my door her desk is right there
00:41 - so she can hear me streaming
00:43 - and uh she's super fun and nice so thank
00:46 - you thanks jesse i've been listening to
00:48 - the show now for a year outside of his
00:50 - door i feel like i've learned a lot and
00:52 - um i could maybe do some coding but i
00:54 - really couldn't um you could do it but i
00:56 - got a nice plant from everybody that i
00:58 - think i could keep alive i'm gonna try
01:00 - really hard it does look nice yeah a
01:02 - geranium which likes sun and water
01:06 - so i don't know i'm gonna try but it's
01:08 - beautiful so
01:10 - jesse works with a good team here
01:12 - um he's smart when he shows up
01:15 - he works from home a lot so we don't get
01:16 - to see him or sometimes he'll be in here
01:18 - for hours and he'll have his door closed
01:20 - and we won't even know he's here
01:22 - so when he does emerge he's he's
01:31 - no thank you for watching me i feel like
01:34 - a star even though i've been on here for
01:35 - 30 seconds
01:36 - so
01:37 - all right do your thing jesse awesome
01:40 - thanks bye everybody
01:52 - all right so
01:56 - yeah so katie is really awesome and uh
01:59 - she was a good sport about coming on
02:01 - um
02:03 - coming on the show
02:04 - and uh yes you don't get to see my the
02:07 - rest of my team here
02:09 - but we do we have katie and um
02:13 - brian sizemore
02:15 - is also he he works um as a developer as
02:19 - well
02:19 - and he's just an awesome guy and my boss
02:22 - tom and
02:26 - liz doesn't work directly with the
02:28 - programming but um
02:30 - she she works on a lot of our marketing
02:32 - campaigns and there's just so many
02:34 - awesome people in our department we got
02:35 - video people photographers graphic
02:37 - designers
02:39 - uh writers so there's a lot of other
02:42 - people that provide content
02:44 - uh and support for what i'm doing
02:46 - so
02:48 - uh it's just
02:49 - i don't know it's kind of cool maybe
02:50 - i'll make more of an effort to get them
02:52 - involved
02:54 - um
02:55 - but uh since today was administrative
02:58 - professionals day i thought i'd bring
03:00 - katie on and um
03:02 - all right so
03:04 - let's get started
03:07 - today is going to be a little bit
03:08 - different than normal
03:10 - um because
03:14 - we're going to work on an old site
03:17 - i try to do like more new stuff we try
03:20 - to keep our packages up to date we even
03:22 - use some beta stuff
03:24 - but i need to make an update
03:26 - to something i built about two years ago
03:30 - so i thought i'd start right from the
03:31 - beginning and i'll go through um cloning
03:35 - the repo
03:36 - installing all the packages and starting
03:38 - it up
03:39 - that may be helpful for those of you
03:41 - that are new to github and git
03:44 - and
03:45 - looks like we have someone new uh vish
03:47 - vishaka
03:49 - vishaka welcome let me know if i'm i'm
03:51 - not pronouncing that right um so just uh
03:55 - joined free code camp about a week ago
03:57 - and i'm already in love it's awesome oh
03:58 - so glad you like it and i'm glad you're
04:01 - uh you're watching
04:02 - so you know see a lot of other other
04:04 - people are saying hello so
04:07 - um
04:08 - yeah so we're gonna do
04:09 - if you're new to the stream which there
04:12 - are some new people here i break things
04:14 - up and i do 25 minutes of coding
04:17 - where i i kind of talk through what i'm
04:18 - doing and then i take five minutes and i
04:20 - answer questions in the chat we do
04:22 - another 25 minutes of coding and then at
04:24 - the end the whole rest of the stream is
04:26 - dedicated to question and answer
04:29 - and um
04:30 - so if you have any questions please put
04:32 - them in but be patient i will get to all
04:34 - the questions eventually
04:36 - um
04:37 - let's see robotvilla says hi
04:40 - and
04:42 - that is
04:46 - let's see
04:49 - i believe
04:51 - robot villa is the company
04:54 - of um
04:56 - i can't remember if you don't mind what
04:59 - was your name i know because i saw you
05:01 - on the momskin code thing
05:03 - and i follow you on twitter
05:05 - and instagram
05:06 - why am i blanking out
05:08 - anyway um thanks for watching
05:14 - francesca that's it francesca all right
05:18 - uh
05:19 - so sorry i can't believe i forgot your
05:20 - name i see your stuff all the
05:22 - time um
05:25 - all right cool who has harshit's in here
05:29 - all right
05:31 - let's get
05:32 - this let's get started with this and
05:34 - then i'll come back to the chat
05:37 - so
05:38 - let me show you my screen
05:42 - and
05:46 - you can see i'm starting out with just
05:47 - my terminal right so i'm in my projects
05:51 - folder and i want to get this project
05:54 - which i'll bring over
05:58 - i want to get this project
06:00 - onto my computer so you can see
06:03 - most of this was from two years ago i
06:05 - have made some minor updates since then
06:10 - i want to go to the clone
06:13 - button
06:15 - and
06:16 - i want to just copy i have my ssh key
06:19 - set up so i copy this if you don't have
06:21 - your ssh keys then you'll want to use
06:23 - the https link
06:27 - and my github looks dark in the
06:29 - background this is just a theme that i
06:31 - have running
06:32 - on top of the regular github so
06:36 - um don't worry if yours doesn't look
06:38 - exactly like this
06:40 - um who else inn is here hey anna how's
06:42 - it going
06:43 - and jeff asked if we were going to do
06:45 - ngrok today
06:46 - um i'm not going to do engrop today
06:49 - because the site i'm working on you have
06:50 - to have a login for so even if i shared
06:53 - it with you you'd still need a login so
06:56 - um
06:57 - it wouldn't really work
06:59 - so
07:01 - oops forgot a step let's go
07:06 - um
07:07 - we need to do git
07:09 - clone
07:10 - so you have to have git installed on
07:12 - your machine already
07:14 - which i did do a video about installing
07:17 - um git and cloning a repo so if you want
07:19 - to check out like how to do that um the
07:22 - video is on my youtube channel the link
07:24 - is in the description
07:26 - uh so we do a git clone and then i paste
07:28 - in
07:29 - that um
07:31 - that address that i just got from github
07:35 - and we hit enter and now
07:38 - wow that was really fast so really
07:40 - really fast uh so now we should have a
07:44 - folder called fus bulletin
07:46 - in our projects folder so let's do an ls
07:49 - just to see everything and
07:52 - we'll see f fus bulletin
07:55 - so now we're going to change directory
07:57 - cd into fus bulletin
08:01 - and
08:04 - we're going to do i'm going to open this
08:05 - in visual studio code so if you have the
08:07 - command line stuff set up for visual
08:09 - studio code you can just type in code
08:12 - and then in this case i'm just going to
08:13 - type a period and that's going to open
08:15 - up everything in this folder in visual
08:17 - studio code
08:20 - so after this opens up we'll be able to
08:22 - see
08:23 - our folder structure
08:25 - and
08:27 - we're going to go into
08:30 - our
08:31 - let's go into our package json first
08:33 - just get an idea of what we're using in
08:34 - this project
08:37 - so we had do have this running with gulp
08:41 - so
08:42 - gulp's not quite as popular as it used
08:43 - to be everybody's using webpack now but
08:45 - you may remember gulp
08:48 - and
08:50 - let's see we are using
08:52 - some babel stuff so we're able to use
08:53 - some of the newer things
08:55 - and
08:57 - looks like we're deploying this with
08:58 - flight plan
09:00 - awesome so not really
09:02 - a very
09:05 - complex project and actually i can
09:08 - update this
09:19 - because um
09:30 - sorry it's really hard to type and talk
09:32 - at the same time
09:37 - so evidently i copied like the starter
09:40 - for this project from a previous project
09:42 - and i never bothered to change the
09:43 - package json so we'll change that now
09:45 - that'll be one of our changes
09:47 - now our next step is going to be to
09:50 - actually load these packages
09:53 - and
09:54 - this was
09:55 - so
09:56 - far back that i hadn't even used yarn
09:58 - yet
09:59 - so you notice in most of my projects i
10:01 - use yarn instead of npm
10:04 - and i want to view the integrated
10:05 - terminal so we could do it all right
10:07 - here in one screen
10:09 - so if you are using visual studio code
10:10 - this is a super useful
10:13 - tool i want to split this as well
10:15 - because we're going to run um where i
10:17 - can actually run it in one screen once
10:19 - we get this going
10:21 - so let's do uh npm
10:24 - oops
10:27 - npm install
10:30 - that's going to install all these
10:31 - packages and the dependencies for all of
10:34 - those packages and it's going to put it
10:36 - in a folder it's going to be called node
10:38 - modules so we'll see that appear soon
10:41 - and then we're going to be ready
10:43 - to run the project locally
10:47 - and
10:47 - [Music]
10:48 - start working on it
10:50 - it looks like is my audio out of sync
10:53 - with the video it looks like it to me
11:00 - okay now it looks now it looks okay
11:01 - again it looked like it went out of sync
11:03 - for a second
11:06 - okay cool yeah let me know if um
11:09 - i i had some problems yesterday but i
11:11 - was on a different machine with the
11:13 - audio and video getting out of sync
11:16 - as you can see this is doing its thing
11:21 - sometimes it takes longer than others
11:22 - depending on how many packages and what
11:25 - packages you're bringing in
11:33 - and
11:34 - while that's going
11:36 - i'm gonna go to the chat
11:38 - um just so we
11:40 - you know make good use of our time and
11:42 - i'll i'm going to look through the chat
11:43 - see if there's any questions i can
11:44 - answer uh while we're waiting
11:52 - uh tovo says just signed up two weeks
11:54 - ago awesome awesome i hope you're you're
11:57 - enjoying free code camp and thanks for
11:58 - watching the stream as well
12:06 - oh cool harshit who is in the himalayas
12:09 - says the time is is 7 pm there so it's a
12:11 - good time to stream
12:17 - oh michael said i missed the intro who
12:19 - was that if you missed the intro you can
12:21 - always go back and watch it again but i
12:22 - had
12:23 - one of my co-workers katie
12:26 - here for the intro
12:28 - so if you didn't catch that you can go
12:29 - back and catch it's just the first you
12:31 - know maybe two or three minutes of the
12:32 - stream
12:41 - john doe said can a newbie do this
12:43 - knowing nothing about coding i'm going
12:45 - to do my best to explain everything so
12:48 - if you feel like it's a little bit
12:49 - beyond what you can do now you still may
12:51 - be able to get something out of this
12:53 - stream
12:54 - uh you know ask questions and
12:57 - you may be able to pick something up i
12:59 - will say though for this stream when i
13:01 - built this i used
13:04 - you know the techniques that i knew best
13:05 - at the time
13:07 - uh that was two years ago so even if it
13:09 - was cutting edge two years ago which i
13:10 - don't even think it was cutting edge
13:12 - then um it
13:14 - it's still outdated today so
13:17 - the techniques and things that i use to
13:19 - solve problems will still be helpful no
13:21 - matter what but i don't think um
13:25 - like the actual code and stuff
13:27 - may be
13:30 - a good example of what to do
13:33 - all right it looks like it worked so
13:37 - you see now we have our node modules
13:39 - folder which has lots of stuff in there
13:42 - so
13:43 - so awesome that
13:45 - npm which is node package manager
13:47 - handles all this for us can you imagine
13:49 - having to manually load all this stuff
13:52 - it would make me not want to do this job
13:54 - if i had to do that for every project
13:58 - so
13:59 - that's in there and we should be able to
14:01 - use gulp watch
14:08 - i believe that's the command yep all
14:10 - right gulp watch so now it'll say that
14:13 - we can view our project
14:18 - locally
14:19 - at
14:20 - localhost
14:23 - 3012 or 3012. so let's try that out you
14:27 - know let me move
14:28 - let me move some things around so we get
14:30 - a better
14:32 - uh idea what's what's going on okay and
14:35 - it already opened for us
14:37 - so i think we can
14:44 - well let me
14:45 - see okay so let me show you what
14:48 - what exactly we're going to be changing
14:50 - and if we see anything that's weird
14:51 - along the way we can change that we can
14:53 - refactor depending on how much time that
14:55 - we have
14:56 - um but right now we have these
14:59 - categories
15:01 - and we need an extra category here so
15:03 - it's going to be a somewhat of a basic
15:05 - change
15:06 - but we also need to make sure that our
15:08 - data gets categorized properly as well
15:10 - so we're going to i guess temporarily
15:13 - miscategorize something just to make
15:15 - sure we can get it to show up
15:18 - so
15:20 - this is actually pulling the live data
15:22 - from a wordpress installation we're
15:24 - using the wordpress api for that
15:27 - even though this is you know our local
15:30 - version
15:32 - this project by the way is a private
15:34 - repo so that's why i did not include a
15:37 - link to the code
15:39 - and we have worked on a react version of
15:42 - this before we just didn't finish it so
15:45 - once we finish that we'll be replacing
15:46 - this old jquery version with react all
15:49 - right so
15:50 - we're just to give you a visual on what
15:53 - we're going to do we'll be working in
15:54 - this area now let's go to the code
15:57 - and let's go at our app
16:01 - one good thing to know
16:03 - uh
16:03 - if you ever get like a pre-made project
16:06 - structure
16:07 - don't do any work directly in the dist
16:09 - folder
16:10 - make sure you're doing it in the app
16:12 - folder or you know whatever other folder
16:14 - but just not dist i once made the
16:16 - mistake when i was first learning
16:17 - angular a long time ago which i didn't i
16:20 - didn't learn it well
16:22 - that i did a ton of work in the dist
16:26 - folder
16:28 - and then it all went away
16:30 - because the disk folder will get
16:32 - rewritten um
16:34 - you know when you when you go to build
16:36 - it so
16:37 - uh that was very disappointing when i
16:40 - was just beginning and um i it took me a
16:43 - long time before i even attempted it
16:45 - again because it was just
16:47 - so devastating
16:48 - uh for me
16:51 - uh let's see
16:54 - all right this the uh the stream um
16:57 - just dropped for a second so i was
16:59 - worried
17:01 - it looks like it's back again
17:04 - so let's go into
17:05 - our app folder and
17:10 - i guess i'm going to go into index i
17:12 - think i do have this oh and just
17:14 - everything is in the index page
17:16 - all right so we'll scroll through and
17:18 - i'll go through a little bit i want to
17:20 - let you see
17:22 - my code uh so
17:24 - one of the
17:26 - the major things about the stream that i
17:28 - think is helpful is to let you all see
17:29 - my mistakes
17:31 - and so this is
17:33 - an example of
17:36 - i don't want to say mistakes but
17:38 - work that i did two years ago
17:40 - that worked at the time i was proud of
17:42 - it at the time but now it's embarrassing
17:44 - to me
17:47 - so you all a lot of you have seen my
17:50 - work that i do now
17:51 - so this is a good comparison of where i
17:53 - was two years ago
17:56 - so this part up here is just doing some
17:58 - checking for for different browsers
18:02 - and
18:04 - basically telling people to update their
18:06 - browser if they have an outdated browser
18:11 - we're using a service called auth 0 to
18:15 - log people in so that's where all this
18:17 - is coming in
18:20 - and then the rest here should should
18:22 - look like
18:23 - basic html to you also here's our body
18:26 - tag
18:27 - right and so now we have everything in
18:28 - here
18:29 - um
18:31 - that we'd have you know normally we have
18:33 - headers
18:34 - you know unordered lists divs all right
18:37 - we have our nav component
18:39 - right so now we're getting closer to
18:42 - where we need to be
18:44 - so
18:45 - in our
18:50 - so here's our side nav and here's our
18:52 - filters it says filters go here
19:00 - interesting all right i assume that i
19:02 - hard-coded these in but i guess i was a
19:04 - little smarter than that and i'm
19:06 - actually
19:09 - getting categories
19:11 - from wordpress and putting them in there
19:14 - interesting
19:16 - okay just a quick
19:18 - overview of the other things i have in
19:20 - here before i i try this other thing
19:23 - that might make this a lot easier
19:25 - you can see we have i have like this
19:27 - loading spinner thing here
19:30 - and uh i use materialize css as a
19:33 - framework so if you're familiar with
19:34 - bootstrap materialize is the material
19:37 - design version
19:39 - it's not it's not affiliated with
19:40 - bootstrap but what bootstrap does
19:42 - materialize does but with material
19:45 - design styles
19:47 - so got the spinner from there
19:50 - and
19:52 - we have some containers where we're
19:54 - actually putting in posts using all
19:56 - jquery for that
20:00 - and
20:01 - we have some modals that open up with
20:03 - some forms in them for people to submit
20:05 - bulletin announcements
20:07 - okay
20:08 - um
20:11 - yeah so there's the markup it's not
20:14 - there's not a whole lot with the markup
20:16 - because we're loading so many things i
20:18 - mean really the the modals and the forms
20:20 - take up
20:22 - uh half the markup on the page
20:24 - uh everything else is being pulled in
20:26 - through
20:28 - with javascript
20:32 - all right so our app.js
20:37 - and
20:40 - yeah let's let's shrink this up
20:42 - and
20:45 - let me make this a bit bigger i'm afraid
20:46 - i might be too small
20:50 - all right so our login stuff was there
20:53 - we're doing some filtering based on
20:55 - dates
20:56 - and
20:57 - i just want to show you maybe one
20:59 - example of how i'm loading things in
21:02 - i have some different buttons that
21:04 - change the the layout
21:16 - as you can see we're using
21:18 - fetch
21:20 - so i just made a wrapper around fetch
21:22 - called get json
21:23 - right but we were using uh the fetch api
21:26 - so even back then
21:28 - but i believe we were using polyfills
21:30 - with it as well
21:32 - and
21:33 - so you see we're getting
21:35 - data here from wordpress
21:40 - and then
21:43 - we're pending and this this actually is
21:45 - is right where we're going to be working
21:46 - in so you see we're getting categories
21:49 - we're getting all the categories
21:51 - and we are appending
21:54 - lis for each category so some of the
21:56 - categories are already hard coded in
21:59 - there so you can see like current
22:00 - bulletin
22:02 - take action
22:04 - and all are hard coded and then
22:06 - everything else gets added after that it
22:08 - gets appended so you could see
22:10 - you know here's those first three and
22:12 - the rest of them get added on
22:15 - now
22:18 - since i did it like this
22:20 - what this means is i should be able to
22:22 - just change the data in our wordpress
22:25 - installation and then it should come
22:28 - over
22:29 - and automatically be added into there
22:33 - so i think
22:36 - we'll try that
22:39 - let's see
22:47 - oh okay i see so this was just starting
22:50 - this uh
22:52 - let me explain this a little bit
22:54 - i don't know i guess it's not that
22:55 - obvious if you're just starting out so
22:57 - what we're doing here we're using jquery
23:00 - that's where this dollar sign comes in
23:01 - and we're selecting the element on the
23:03 - page
23:04 - with that has the id of mobile demo so
23:07 - that's kind of a bad id i probably just
23:10 - had it left in there from some example
23:12 - that i copied
23:14 - and then we can use jquery.append to add
23:17 - something
23:19 - to that element
23:20 - so what i'm doing here is i'm using
23:22 - template literals so when we have this
23:24 - little back tick
23:25 - that's template literal syntax so when
23:28 - you do that think of it like you're
23:29 - making a string in javascript so if you
23:31 - were to use a single or double quote
23:34 - same thing except when you use template
23:36 - literal syntax
23:38 - you can have multi-line strings
23:40 - and it still works uh normally that will
23:43 - give you problems
23:44 - uh but you can you can also um
23:49 - put in some little snippets of
23:51 - javascript in the middle of this
23:54 - without having to use like the plus sign
23:56 - to concatenate it all together so it's
23:58 - really great for templating which is
24:00 - basically what i used here so
24:03 - instead of using something like
24:04 - handlebars which would have been really
24:06 - popular when i did this
24:08 - um
24:09 - as for a templating engine i just made
24:11 - my own templates
24:13 - using template literals
24:15 - and
24:16 - then adding in with jquery to insert
24:18 - them into the page
24:20 - so
24:22 - down here is where i actually get the
24:24 - categories so
24:25 - you see we've
24:27 - we got the data
24:30 - right and then we're doing a dot then so
24:33 - right we get the data then
24:36 - we want to pass the data in
24:39 - right so now data is available to us
24:42 - under the name the variable name of data
24:44 - right so inside there we have a function
24:47 - where we're taking data so we use we're
24:49 - using um
24:51 - a for loop so we're going to say
24:54 - let
24:55 - and let is uh
24:57 - es6 so our es 2015 so if you're used to
25:02 - using their so var
25:04 - um you can use let in its place
25:07 - and it has what's called block scoping
25:10 - so you're
25:12 - you're less likely to accidentally um
25:15 - overwrite things if you use let and
25:18 - const all right so there's a there's a
25:20 - lot of other good
25:21 - things in there but i'm not going to
25:22 - take time to explain them all right now
25:24 - if you'd like to know more about using
25:26 - let and const instead of there please
25:28 - ask it in the in the live chat and i'll
25:31 - be happy to explain it later on
25:33 - but this means basically we're looping
25:35 - through
25:37 - every category that's come to us
25:40 - and data right and that's json format
25:47 - so json format um
25:50 - correct me if i'm wrong but it's
25:51 - basically an array of objects so it's
25:55 - going to loop over each object
25:59 - and it's going to grab to work we're
26:02 - calling it
26:05 - category right
26:08 - so each one is going to be category
26:11 - and
26:12 - we're using
26:14 - let's see category id equals category's
26:17 - name what have i made
26:22 - i'm i must have made a variable
26:24 - somewhere called categories
26:28 - all right
26:30 - in any case
26:35 - when we get to here
26:37 - we are appending onto
26:40 - um
26:41 - the elements that has a class of filters
26:46 - were appending and so this is
26:49 - i believe
26:51 - a drop down
26:53 - we must have a drop down somewhere as
26:55 - well
26:56 - um so we're adding all the categories
26:59 - category id category name
27:01 - and since we didn't i didn't show the
27:03 - drop down let's just skip that and we'll
27:05 - go to
27:07 - where we have our mobile demo and we're
27:09 - appending li's
27:11 - so for each category we get the id
27:14 - we get the slug in the name
27:16 - from that data
27:18 - and we create an li
27:20 - with an a tag inside so link tag
27:23 - with this data
27:25 - all right and once that's all created
27:30 - then
27:34 - we go on and we add some other things
27:37 - um
27:38 - let's see
27:40 - do we add
27:45 - yeah we do add quite a lot uh but we're
27:48 - not gonna talk about that right now so
27:50 - i'm not gonna go into that um but that's
27:52 - how we're building up the template we're
27:54 - just
27:55 - taking that same
27:57 - mobile demo and we're appending things
28:00 - onto it and you can see this is how
28:03 - we're we're pulling in javascript into
28:06 - our
28:07 - our string right we have that template
28:09 - literal this is obviously a string but
28:12 - then once we get to here we have a
28:13 - dollar sign and a curly bracket and then
28:16 - now we're back in javascript land and
28:18 - we've actually put um
28:21 - some data in there so this part is not a
28:24 - string and then we close that curly
28:27 - bracket and we're back into string land
28:30 - and you can see inside this we can even
28:32 - use
28:33 - double quotes and it doesn't mess
28:35 - anything up
28:36 - right just like you can use
28:39 - single quotes inside of double quotes
28:41 - and it doesn't mess things up
28:43 - okay so let's let's do something now
28:45 - because i think i've been explaining for
28:47 - quite a while so
28:49 - let's make something happen
28:51 - i am going to go on
28:54 - my other screen
28:56 - into wordpress
28:59 - let's see
29:13 - there we go
29:15 - okay
29:17 - let me add
29:20 - on my other screen all i'm doing is just
29:22 - logging into a simple wordpress
29:25 - installation and i'm just going to add
29:27 - another
29:28 - uh category in here
29:32 - and
29:33 - hmm
29:35 - i don't remember what that category is
29:37 - supposed to be so let me check
29:39 - my phone
29:40 - uh because i'm i'm not currently logged
29:42 - into my email on my computer so it'll be
29:44 - faster to check out my work email on my
29:46 - phone see the email i got during
29:48 - yesterday's stream
29:50 - to see what the
29:52 - category is supposed to be called
29:56 - council minutes okay
30:02 - right
30:06 - so let's add a category called
30:12 - council minutes
30:18 - all right so i've added a category
30:20 - called council minutes
30:25 - and
30:32 - now i'm gonna
30:35 - empty
30:36 - i'm going to empty the cache so i have a
30:38 - lot of caching going on so
30:40 - uh let me empty that first and then when
30:43 - i refresh let's see if we have it
30:47 - no i also i have so much caching going
30:49 - on so
30:50 - let's inspect this
30:53 - and
30:54 - let's go into
30:58 - application
31:00 - and we're going to go in here to
31:03 - local storage
31:06 - and you see we we have some stuff
31:12 - huh
31:13 - maybe we don't have it
31:25 - okay normally i was storing a lot of
31:28 - stuff in local storage
31:30 - am i missing this
31:33 - let's just do
31:35 - a hard refresh
31:39 - hey council minutes we have council
31:41 - minutes but we have no matching posts
31:43 - yet so
31:44 - my timer just went off when we come back
31:46 - i'm going to try to add a post here and
31:49 - see if it will in fact
31:52 - show up here
31:54 - and
31:56 - where's my timer
31:57 - i lost it
31:59 - there we go
32:01 - it's over here
32:06 - oops
32:07 - sure we'll take a short break when we
32:08 - come back
32:09 - uh we'll do a little bit of testing and
32:11 - then we'll go over how to
32:14 - um
32:17 - we'll go over how to
32:20 - save this commit uh send the commit to
32:22 - github how to get our dist folder ready
32:26 - and then how to push that up to our
32:29 - production server
32:31 - so we'll do all that on the stream so
32:33 - you'll get the full range of
32:36 - from cloning the repo all the way up to
32:39 - updating your production server
32:44 - alright so
32:46 - let me try to find where i left off
33:02 - all right joe matthews says pomodoro
33:04 - technique 25 5 25 yeah so i do
33:07 - i do 25 five and then so i do four 25
33:12 - sessions with fives in between but then
33:13 - on that last one i do a 10 10 minute
33:16 - break
33:17 - uh realistically though it's it's
33:19 - rare that i get four uninterrupted
33:22 - sessions and to be able to even get to
33:24 - that 10-minute break
33:28 - but that's how i use it
33:45 - says
33:46 - will you be using some kind of framework
33:48 - um for this one uh not exactly so
33:52 - in terms of the styles we're using
33:54 - materialized css
33:56 - uh but
33:58 - i i've basically done everything else
34:00 - from scratch using jquery so all the
34:02 - routing is jquery
34:04 - um like i said the templating is done
34:06 - using template literal syntax so it was
34:09 - way more work i think than it had to be
34:12 - like had i been had i known react at the
34:14 - time
34:16 - i think i could have done better
34:20 - and potentially done this faster in
34:22 - react
34:27 - so if if you want to see any of the code
34:29 - for this
34:30 - let me know or if you want me to explain
34:32 - how i did any of this let me know i'll
34:34 - do my best to remember
34:43 - uh jason asked if i attended any web
34:46 - conferences in ohio i have not attended
34:49 - any conferences in ohio yet uh so
34:51 - jason's from columbus yeah i'd love to
34:54 - find out if there are any good
34:56 - conferences going on and go i mean
34:58 - because they'd be pretty close i'm
35:00 - i've attended conferences
35:02 - uh syntax con in south carolina
35:05 - um i attended that twice i spoke at
35:08 - november
35:09 - in nashville
35:11 - i will be at the google i o conference
35:14 - in pittsburgh
35:16 - which is soon and i will be speaking at
35:18 - pittsburgh tech fest
35:20 - which obviously is in pittsburgh as well
35:23 - and i'm attending revolution conf that's
35:26 - in virginia beach
35:28 - and i believe that's next month
35:30 - so
35:31 - those are where i'll be
35:33 - uh i i frequently apply to speak at
35:35 - different conferences so i never i never
35:37 - know exactly what conferences i'll be at
35:39 - and so i find out whether i'm accepted
35:40 - or not
35:45 - i should ask is that the same bulletin
35:47 - that was half written in react yes yes
35:49 - it was and i just
35:51 - never got a chance to keep working on it
35:52 - because other projects came up and
35:55 - we're still working on those
36:09 - uh this vishaka says i haven't attended
36:12 - a live stream before what's the goal
36:14 - here
36:14 - um
36:16 - so yeah basically uh the goal is just i
36:19 - i i wanted to give everybody a glimpse
36:21 - of what my day-to-day work is like
36:23 - especially i wanted everyone to be able
36:25 - to see
36:26 - how many mistakes i make and how i try
36:28 - to work through that
36:30 - i
36:31 - i especially thought people who were
36:32 - beginners
36:34 - may feel intimidated by watching a lot
36:36 - of the normal tutorials because
36:38 - people don't make mistakes in tutorials
36:40 - they're edited
36:41 - as they should be right they're to the
36:43 - point but that's not really how it works
36:47 - at least not for me
36:49 - i mess up a lot and sometimes i try
36:52 - things and it it doesn't work and we
36:54 - gotta i just gotta try something else
36:56 - uh sometimes we don't have time to do
36:59 - like the ideal solution so we just do
37:01 - the good enough solution
37:03 - and we're still
37:04 - able to
37:06 - you know release
37:07 - websites that do their job they function
37:10 - well and that people are are happy with
37:13 - so that's kind of the goal of it so it's
37:16 - not exactly a tutorial although i do
37:18 - hope people learn and i learn a lot from
37:20 - you all
37:21 - so it's a little bit more interactive
37:23 - than a tutorial
37:24 - um but it literally is really like my
37:27 - real life job you know if i wasn't
37:29 - streaming this i would be working on
37:31 - this right now for my job so
37:34 - i don't rehearse things
37:36 - because i want you to see as close as
37:38 - possible what it's really like the only
37:40 - difference is i don't narrate what i'm
37:42 - doing to myself when i'm alone
37:45 - but other than that it is pretty much
37:48 - exactly uh what i would usually be
37:50 - working on and how i would be working on
37:52 - it
37:54 - okay
38:00 - um
38:01 - let me i'm just gonna take note of where
38:04 - i'm leaving off at and let's go back so
38:07 - if i didn't get to your question yet i'm
38:08 - sorry i will get to it after this next
38:10 - pomodoro session
38:13 - so
38:16 - let me let me go through
38:20 - real quick i just want to see if anybody
38:21 - wanted to see any part of the code
38:39 - who knows
38:41 - [Music]
38:47 - okay
38:48 - um
38:51 - let's go back in here now
38:53 - and
38:55 - oh i know i i wanted to
38:59 - take one of the posts
39:02 - and
39:05 - i want to add a category to it
39:12 - let's update
39:14 - and
39:18 - uh where's our stuff let's move this
39:20 - over here
39:22 - okay
39:23 - um let me do
39:25 - a hard refresh yay okay
39:28 - so we can get it to show up now i want
39:30 - to very quickly get rid of that because
39:32 - that doesn't look good when we have two
39:35 - uh categories
39:40 - wonderful
39:41 - no if i
39:43 - update again
39:44 - great no matching post all right so it
39:47 - works right we get the functionality
39:49 - that we want
39:51 - and
39:53 - i think
40:04 - i just i don't understand why i had
40:06 - options for a drop down in my code but i
40:09 - don't know where that would be
40:12 - um
40:13 - here
40:15 - i'm thinking maybe
40:17 - maybe that was something that i wanted
40:19 - to add and i ended up not adding
40:22 - you see where here
40:24 - where it says filters
40:36 - [Music]
40:37 - i do not understand
40:39 - see i mean there are some parts of this
40:41 - code that i just i have no idea what i
40:43 - did i don't remember it
40:46 - this is a good case for making sure
40:48 - to uh
40:50 - document what you do really well
40:56 - hmm
41:06 - i'm interested to see let's just take a
41:09 - minute just to see
41:12 - if we can find this
41:15 - filters
41:18 - oh of course it's it's gonna be like
41:20 - this
41:23 - um
41:27 - let's see if i can go with
41:29 - [Music]
41:33 - there we are
41:35 - okay so it looks like the only options
41:37 - i'm seeing here
41:40 - let's go through
41:41 - see if we can find it here okay we have
41:44 - years
41:46 - and that's it okay so whatever i was
41:48 - trying to do here evidently i
41:51 - i never did or
41:53 - it's just somewhere where i i have no
41:55 - idea where it is so
41:58 - i'm just gonna leave that alone
42:00 - that's sort of the the dangers of
42:02 - dealing with this old code is uh of
42:05 - accidentally changing something like
42:06 - right now i could say oh it looks like
42:08 - i'm not using this at all maybe i'll
42:09 - just delete it
42:11 - and then not realize that i've broken
42:12 - something so
42:15 - i'm just going to leave it in there
42:18 - and i'm not going to attempt to refactor
42:20 - this because as i mentioned before
42:22 - we have kind of halfway rebuilt this and
42:25 - react so
42:27 - no no sense in fixing this up
42:30 - so this works we've saved it
42:33 - now
42:34 - let's go back to our terminal
42:36 - and
42:39 - let's do
42:42 - let's update our dist
42:45 - and uh so dist is short for uh
42:47 - distribution so basically what it's
42:49 - going to do is go through everything
42:51 - in this app folder
42:53 - and it's going to
42:56 - basically we'll do what we tell it to do
42:57 - in gulf so we have a few things running
42:59 - in gulp uh we are going to take all that
43:02 - es6 syntax and change it to es5 syntax
43:05 - so
43:06 - uh older browsers can handle it
43:09 - it's going to automatically take our sas
43:13 - and change it to regular css
43:16 - and then it's also going to
43:17 - automatically
43:19 - minify
43:20 - our code and
43:23 - i don't remember i may actually have it
43:25 - set up to concatenate some files as well
43:28 - i can't remember if i did that on this
43:29 - project okay so that's what it's going
43:31 - to do all that for us and it's going to
43:33 - put it into that dist folder and that's
43:36 - the folder that we want to run on our
43:39 - server
43:40 - so that when users go to our site you
43:42 - know they're given these nice tidy
43:44 - bundles of minified
43:47 - code that is regular css and es5
43:51 - javascript
43:52 - and it'll be you know usable by
43:56 - as many people as possible
43:59 - so that's what we're going to do and in
44:01 - this case i have it set up so that my
44:03 - command to run all that is just gulp
44:06 - dist
44:09 - if you'd like to see the gulp file where
44:11 - i set this all up let me know
44:13 - i just know you know
44:15 - gulp isn't as popular as once was so i'm
44:18 - not sure if anybody's even interested
44:22 - just had a question gulp is more or less
44:23 - the an equivalent of webpack yeah it's
44:26 - well
44:27 - webpack is different but
44:30 - it does do a lot of the things that gulp
44:32 - did
44:33 - so i don't want to say that they're the
44:35 - same
44:36 - exactly but
44:38 - for the purposes that people use it for
44:41 - it's it's it is very uh similar
44:46 - okay
44:47 - um now let's do a get status
44:51 - to see what's changed actually i forgot
44:54 - we only changed our package json didn't
44:56 - we
44:58 - because we didn't have to make any
44:59 - changes
45:01 - that is true
45:03 - okay well anyway um
45:05 - i still want to go through this process
45:07 - just to show you how we would update it
45:09 - so let's do that so
45:12 - we're going to first do a git add
45:16 - and then we're going to do a git commit
45:19 - now you can combine those steps if you
45:20 - want to by doing commit am
45:23 - but in this case i separated them out
45:25 - and we're just going to use m for
45:27 - message so now we can write our message
45:29 - and we're going to say update
45:37 - package
45:39 - info
45:42 - and i'm going to hit enter so now we
45:44 - have our commit and now we can go get
45:48 - push
45:49 - um
45:51 - a lot of times you can just do get push
45:52 - and it will work but if you're working
45:54 - on another branch for different things
45:56 - you got to do a little bit more so let's
45:57 - just do the full command now so we're
45:59 - going to go origin
46:02 - master so we're going to push
46:07 - master
46:09 - which i we may only have one branch
46:11 - actually right now so
46:13 - doesn't really matter but now everything
46:15 - is on github so we can go back to that
46:17 - github page
46:19 - and give it a little refresh and we
46:21 - should see our update already
46:23 - yep 40 seconds ago we updated these two
46:26 - files
46:27 - so there's our update
46:29 - and if this wasn't a private repo you
46:31 - all could see that and
46:33 - you know work on it on your own i would
46:34 - say at least 90 percent of the projects
46:36 - we work on are in public repos so this
46:38 - is just one of those weird ones where
46:41 - this was before i realized how to use uh
46:43 - environment variables so there are like
46:46 - api keys and stuff in this project
46:48 - that's why it's private
46:51 - and
46:52 - now
46:54 - we're going to use flight plan
46:57 - and
46:58 - if you're not familiar with flight plan
47:00 - let me just explain it a bit flight plan
47:03 - will take your code
47:05 - and copy it over
47:07 - so it will it will look at your code
47:11 - it'll look at your your get
47:14 - files to make sure
47:16 - of what exactly changed and it will only
47:19 - copy over those files that changed to
47:22 - your server all right and then it will
47:24 - even run commands on your server that
47:26 - you tell it to
47:27 - to make sure that those files get in the
47:29 - right folder
47:32 - so it helps with deployment
47:35 - and it's it's kind of it's very simple
47:39 - simple to set up so that's what we're
47:41 - gonna we're gonna try
47:45 - i say try because it doesn't always work
47:49 - so
47:50 - let's do
47:52 - fly
47:57 - production
48:04 - so the reason that we did our dist first
48:07 - and uh committed that
48:09 - was because
48:12 - actually
48:16 - you know what i didn't even need to do
48:18 - that
48:18 - i don't know what i'm thinking i did
48:20 - want to demonstrate it but actually i
48:22 - don't we don't actually commit or
48:24 - package json we don't push that to the
48:26 - server so
48:27 - this is just an example of what we would
48:29 - do
48:31 - but the reason if you're using flight
48:34 - plan
48:34 - you do need to make sure that you are
48:37 - tracking your disk folder in github
48:39 - which you don't usually need to do
48:41 - but because flightplan uses
48:44 - git to determine what has changed
48:47 - if you're not tracking with git
48:50 - your dist folder
48:52 - it won't it won't work it won't know
48:53 - what's changed
48:55 - unless
48:56 - somehow you build your stuff on the
48:58 - server afterwards
49:00 - but
49:00 - in this particular server that this is
49:02 - running on uh we don't have access to
49:05 - node
49:06 - uh so we can't we can't do npm stuff on
49:08 - it
49:10 - um so anyway basically you know what
49:12 - it's done
49:13 - is it's connected to our server
49:17 - it's moved the folder
49:20 - to the root and then it's run some
49:22 - commands right to copy
49:26 - our dist folder
49:28 - over to our bulletin folder which is
49:30 - this this is where that
49:32 - uh runs from this is the home directory
49:34 - for our bulletin site
49:37 - um
49:38 - and that's it that's that's everything
49:40 - that's done so this could have been done
49:42 - by going into like filezilla and logging
49:46 - into the server and then manually
49:47 - copying and pasting things
49:49 - or dragging and dropping things
49:52 - you know which is fine it would take you
49:54 - know an extra minute or so
49:56 - but this end up this in the long run
49:58 - ends up being much faster you know we
50:01 - just run it and then check back a minute
50:03 - or two later make sure everything worked
50:05 - um and
50:07 - i can run
50:08 - let me go to the site
50:12 - franciscan university slash bulletin
50:14 - uh you can try to go there if you want
50:16 - but like i said
50:18 - the um it's it's login only so you won't
50:21 - be able to get in
50:23 - unless you're you're a hacker or
50:25 - something and try to get in in which
50:27 - case let me know how you did it
50:30 - uh yeah so that works let's check yep
50:33 - there should not be any posts so that's
50:34 - what we want
50:36 - there we go
50:37 - uh just to show you some cool things
50:38 - that i did with this uh
50:42 - you know again this is all just jquery
50:44 - we have updates for our views we have a
50:47 - print view
50:48 - we have
50:49 - a
50:51 - did i get rid of classic view i think i
50:53 - did
50:57 - i used to have a classic view but i
50:59 - think i got rid of it
51:01 - uh it was it was kind of a joke
51:04 - because i made it look just like the old
51:06 - microsoft word bulletin that everybody
51:08 - got emailed
51:10 - uh we actually we have a live search
51:12 - feature
51:13 - um
51:14 - so
51:16 - if i type in the wake stuff we can get
51:19 - you know the same thing so it does the
51:21 - search
51:22 - um so there's
51:24 - a lot of the same functionality that we
51:26 - have with some of the react stuff we've
51:27 - been doing
51:29 - um we have it here as well oh that's a
51:30 - little ui bug isn't it
51:34 - interesting
51:37 - huh
51:42 - wow
51:46 - okay so i don't know what i did but
51:48 - evidently if you click the right things
51:51 - you will mess up the
51:53 - z index of these
51:56 - okay
51:57 - and this is just um you know regular
51:59 - form just do like a
52:01 - submit via fetch so we don't get a page
52:04 - refresh or anything and this is an
52:06 - upload
52:07 - the file uploads on the back end are
52:09 - just with a basic uh php file upload
52:13 - that i that i wrote
52:15 - um
52:17 - yeah we have some emails get that are
52:19 - automatically sent
52:21 - and i believe am i using google
52:25 - i was using google docs for that i think
52:27 - i ended up switching and using sendgrid
52:30 - or something like that so
52:33 - um
52:35 - anyway so that's it let me
52:37 - check my time i think i'm probably
52:38 - almost out of time for this pomodoro
52:40 - session a lot 10 minutes left
52:42 - all right let's i'm gonna go back to the
52:44 - questions see what questions you all
52:46 - have you know
52:47 - it's basically mission accomplished for
52:49 - this one uh it ended up being a lot
52:51 - easier than i thought it would be i
52:53 - didn't think it would be that hard but
52:56 - um
52:57 - i basically i built it the way i thought
52:59 - it should be built so in my mind i'm
53:01 - thinking like why did i hard code this
53:03 - stuff i should have just made it
53:05 - automatically pull from wordpress
53:07 - that's what i thought before i looked at
53:09 - the project then when we looked at it
53:10 - and i realized that is exactly what i
53:12 - did i just thought hey i'm a pretty
53:14 - smart guy two years ago
53:16 - so i did take the time to do that
53:19 - um
53:21 - all right
53:22 - i don't remember where i left off
53:25 - let me see oh
53:26 - okay um anna says jesse how was your
53:30 - weekend
53:32 - not bad i went to a wedding
53:34 - and that was fun
53:36 - but i wasn't feeling
53:38 - really well so
53:40 - i was super tired
53:42 - uh so the kids had a lot of fun
53:45 - um you know dancing and eating lots of
53:47 - cookies and stuff
53:48 - um got to see a lot of my family
53:51 - uh so that was
53:53 - uh that was fun
53:55 - and then all the all the little ones so
53:57 - all my my cousins are all having kids
53:59 - now and they're all around the same age
54:01 - so it was really cool you know i have
54:03 - all these little ones running around at
54:05 - the wedding and playing together and
54:07 - uh so that that was really fun
54:10 - uh but unfortunately i didn't get to
54:12 - stay as long as i wanted to because i
54:14 - was just so exhausted
54:16 - um
54:18 - but yeah it was um
54:20 - it was a good time good time this
54:22 - weekend
54:24 - uh thanks for asking anna how was your
54:26 - weekend
54:42 - i'm trying to i'm trying to scroll down
54:44 - and find
54:49 - [Music]
54:50 - questions michael says
54:53 - you were looking for ways to make your
54:54 - streams better katie is a step in that
54:56 - direction yeah katie is awesome i don't
54:59 - know if she'd be comfortable being on
55:00 - the stream all the time though but
55:02 - actually let me know would would you all
55:04 - like it if i actually had someone in
55:07 - here maybe someone even who's learning
55:09 - how to code
55:10 - uh that would be here with me and would
55:13 - ask questions and
55:15 - i don't know i
55:16 - that's definitely possible i mean i have
55:18 - another chair so
55:20 - i could have at least one other person
55:22 - and
55:24 - yeah if you think that's something that
55:25 - you might like seeing i'll definitely
55:28 - try it out i know there there are some
55:29 - students who may be interested and some
55:32 - of my co-workers who may be interested
55:34 - as well
55:37 - if i'm streaming from home i might be
55:38 - able to get my wife to do it she is
55:40 - learning to code as well
55:42 - she usually doesn't like to be on camera
55:44 - but maybe she'll do it
55:50 - let's see um
55:53 - vishaka says
55:56 - thanks uh so the stream should be
55:58 - watched in continuation she was saying
55:59 - thanks to phoenix
56:01 - so this live stream should be watched in
56:02 - continuation you know what they can but
56:04 - there are quite a few of them so
56:07 - it may be really difficult if you do try
56:10 - to watch a lot of them i definitely
56:11 - recommend watching them on two-time
56:13 - speed
56:14 - because it's just so much to get through
56:16 - so don't don't feel like you you have to
56:18 - go through step by step to understand
56:20 - things uh there's
56:24 - i don't think you do necessarily
56:28 - um and i think it's just way too much
56:30 - material for
56:32 - a person to reasonably be expected to go
56:34 - through i mean we have
56:36 - almost a year of i need to look up when
56:38 - my first live stream was because we're
56:39 - coming up on a year of live streams uh
56:42 - so it might be fun to actually
56:44 - acknowledge that when the day comes
56:46 - if i haven't already missed it
56:49 - but there are you know
56:51 - well over i believe 100 hours of live
56:53 - streams for sure
57:05 - michael says wow is that on uh geo's uh
57:08 - geocities
57:10 - no it's not that old
57:13 - how many people had an old website on uh
57:15 - on geocities or was the other one like
57:17 - angelfire how many had a site on one of
57:20 - those like free hosting plans back in
57:21 - the day i definitely did
57:26 - harshit says this has sentry error as
57:28 - well i saw the raven script tag
57:31 - yeah yeah so i do have some error stuff
57:34 - error reporting um with sentry on this
57:37 - so
57:38 - um
57:40 - i i was pretty thoughtful about all what
57:43 - i was doing on this i'm
57:46 - i mean i i liked it when it came out but
57:50 - you know i i just think
57:53 - i don't know i've i've come a long way
57:55 - at coding so there's so many things that
57:57 - i think now like i could have done
57:58 - better
57:59 - um but you know at the time it was
58:02 - it was probably the best thing i had
58:04 - ever made
58:10 - i just said the site looks great
58:12 - um yeah it's style-wise it's not really
58:14 - that far off from a lot of the newer
58:16 - things that we've been doing
58:22 - uh don xavier says hey uh and we all
58:25 - have our treasure trove of depression
58:26 - code it's implied and nice to take a
58:28 - walk on memory lane sometimes yeah yeah
58:31 - it is fun it's fun to check out the the
58:33 - old code
58:40 - hey john hanson's here hey john how's it
58:43 - going
58:55 - all right michael said the um i thought
58:57 - of was relatively new um
59:02 - to like the four of loops so you're
59:04 - forward thinking even then yeah i i mean
59:06 - i did use some newer stuff
59:08 - and i had the um
59:11 - the babble like transpiling set up so
59:13 - that i could use that
59:18 - john says is it worth it to reconfigure
59:19 - a site that uses jquery and then change
59:21 - it all to javascript
59:24 - i guess it depends on what the site is
59:26 - and what your goal is for the site
59:31 - sorry
59:32 - i'm a little tired i'm i'm trying to
59:34 - quit drinking coffee for like a week
59:36 - just to like try to reset my tolerance
59:38 - because i was getting to the point where
59:39 - i could drink coffee all day and still
59:40 - be tired
59:42 - um you know i could drink an espresso
59:44 - and go to sleep
59:45 - so i think that's a problem so i'm
59:47 - trying to just cut it off but i am quite
59:50 - sleepy
59:52 - um
59:53 - let's see
59:55 - yeah so john i i don't know i mean if
59:58 - for this site in particular if i wasn't
60:00 - already halfway through rebuilding it
60:02 - again in react it might be worth it to
60:04 - try to change it
60:06 - um to use vanilla javascript but
60:10 - i don't know i mean it works right now
60:12 - with the jquery so is it if it's working
60:16 - and it's quick it performs well and it
60:18 - gets the job done
60:21 - you know maybe there's not really much
60:22 - reason to want to change it uh from
60:25 - jquery to vanilla javascript
60:29 - i mean there's still a lot of jquery out
60:31 - there and there are a lot of jobs for
60:33 - being able to use jquery like there has
60:35 - to be right because so many sites use it
60:39 - so not that there's
60:42 - i'm not trying to say that jquery is
60:43 - wrong in every situation i definitely
60:46 - don't want to use it with react
60:48 - but with other sites
60:50 - you know it's a valid option
60:56 - harshit said what is the need of uh push
60:58 - if you added the post in wordpress
61:01 - yep you were entirely right harsh and i
61:03 - did not need to push anything the only
61:05 - thing that we actually changed was that
61:06 - package.json file so in terms of
61:08 - functionality i did not need to push
61:10 - anything
61:11 - uh glad i made those changes to package
61:12 - json though because i i did
61:15 - want to go through the process of it at
61:17 - least for for those of you that are
61:19 - learning git
61:27 - uh jason said i saw one of your sites
61:29 - was for college in ohio assumed he might
61:30 - have been from ohio oh yeah i currently
61:33 - live in steubenville ohio
61:35 - um i actually live like right outside of
61:37 - city limits but it's still the address
61:39 - is still stevenville
61:41 - uh i am from west virginia though uh
61:43 - right at the very like northernmost part
61:45 - of west virginia near pittsburgh
61:47 - um but i i now live um just across the
61:50 - border in ohio
62:00 - francesca says what no talking to
62:03 - yourself
62:04 - yeah all right full disclosure here i do
62:08 - sometimes talk to myself when i'm coding
62:10 - but it's usually when i get upset and
62:12 - then i say things that
62:14 - i might not say around my children
62:16 - so
62:19 - uh that's when i will i'll talk to
62:21 - myself or if i do something really
62:22 - awesome and it works then i may like
62:25 - uh have exclamations of joy
62:27 - and uh
62:30 - usually like jump up out of my seat i
62:32 - throw my headphones down and i like go
62:34 - out the door and look for somebody who i
62:35 - can tell
62:37 - and uh usually i find somebody who i'm
62:39 - like trying to explain what i did with
62:41 - the code and they have no idea what i'm
62:42 - talking about they're but they're
62:44 - usually really awesome about it and
62:45 - congratulate me anyway
62:54 - michael says you don't talk to yourself
62:56 - when working on a problem that's when i
62:58 - work the best because of the stairs from
63:00 - co-workers it's why i'm better at
63:01 - working on my own but because of the
63:03 - stairs from co-workers that's why i'm
63:04 - better working my own yeah you know what
63:06 - you are right whenever i'm streaming and
63:08 - i get to talk through step by step what
63:10 - i'm trying to do i often find like
63:13 - problems in my logic or in my code so
63:16 - maybe i should start talking to myself
63:18 - more even when i'm not streaming it
63:20 - might not be a bad idea
63:25 - i have had my kids like sitting with me
63:28 - when i'm coding before and i'll try to
63:29 - talk it through with them and it's
63:31 - helped me and i found
63:33 - like errors that way
63:42 - [Music]
63:44 - oh michael says just found out about the
63:47 - bracket pair colorizer extension for vs
63:50 - code
63:51 - oh yeah you know what i heard about that
63:54 - um
63:55 - that's a really cool plug-in so if
63:57 - you've ever tried to figure out what's
63:58 - going on with your brackets like which
63:59 - brackets go together and if you've
64:01 - missed one or not that can definitely be
64:03 - very helpful
64:23 - oh yeah harshit says i got in already
64:26 - yeah you did i don't remember how you
64:27 - did it though harshit
64:29 - um
64:32 - and i remember i wasn't that worried
64:33 - about it because we were gonna switch it
64:35 - over to react and then we didn't have
64:36 - time
64:56 - uh phoenix says oh yes totally so i had
64:58 - asked like would it be cool to have
65:00 - other people on the stream like right
65:01 - here with me in my office if phoenix
65:03 - said yes totally you can also do pair
65:05 - programming it will add a whole new
65:06 - dimension to these streams
65:09 - yeah that
65:10 - i haven't thought about that i guess
65:12 - that would be cool i'm gonna
65:14 - yeah i'm definitely gonna think about
65:15 - that i'll talk to some people around
65:17 - here to see if i can get somebody like
65:18 - physically in in the office i don't talk
65:20 - to my wife see if she's interested
65:23 - and then
65:25 - you know maybe i can do some remote pair
65:28 - programming as well
65:33 - this shaka says new coder seems like a
65:36 - pretty good idea but you did a great job
65:38 - of answering questions oh cool thank you
65:40 - yeah
65:41 - um
65:43 - cool yeah i mean most likely most of the
65:45 - streams will still just be me
65:47 - because it's a lot to ask for somebody
65:49 - to take this much time out of their day
65:52 - but
65:53 - you know maybe occasionally i could
65:56 - you know have somebody else on the
65:57 - stream
66:04 - let's see
66:05 - all right anna says my weekend was great
66:06 - i walked in the force with my family oh
66:09 - awesome you know and i think i saw your
66:11 - uh your instagram post a picture of the
66:13 - forest it was it was really beautiful
66:16 - um
66:17 - cool thanks for sharing
66:19 - uh
66:22 - okay phoenix says may 3rd
66:25 - 2017 was the first stream
66:27 - okay cool off to see because i did start
66:29 - streaming on my own channel first but if
66:32 - we want to count like the first free
66:34 - code camp stream
66:35 - you know maybe we'll do that because
66:38 - if i check my
66:40 - we may already be past the date when i
66:42 - started on my own channel
66:45 - that's cool i need to check and see how
66:47 - many videos i've done
66:48 - and like how many hours it's been
66:51 - because i i have no idea
66:54 - [Music]
66:59 - john hanson says i had an old yahoo
67:01 - website css tables anyone oh yeah for
67:03 - sure
67:04 - i remember doing the layout and tables
67:07 - iframes
67:13 - uh john hanson says
67:16 - so gamer noob says if it isn't broken
67:19 - right like it isn't broken don't fix it
67:22 - john hanson says true though i'm not
67:24 - against jquery i do find reading
67:26 - javascript code um it makes more sense
67:30 - to me than trying to read some old
67:31 - jquery code i've written
67:33 - yeah that's that's true i mean if you do
67:36 - write in jquery anybody that's not
67:38 - familiar with jquery may not be able to
67:39 - read it and i before
67:41 - even just a few years ago like everybody
67:44 - at least i was familiar with jquery it
67:46 - seemed like even if people were against
67:48 - jquery at least they still were aware of
67:50 - it and knew about it but
67:51 - it seems uh like newer devs especially
67:55 - like if they're coming through boot
67:56 - camps if the boot camp just goes like
67:58 - vanilla javascript and then straight
68:00 - into react or something like that
68:02 - you know they may have never been
68:04 - exposed to any jquery and
68:06 - will have no idea because it definitely
68:08 - is is different you know you try to make
68:10 - things happen on a screen or buttons
68:12 - function and stuff and react
68:14 - it's a whole different mindset than the
68:17 - way you do it in
68:19 - uh in jquery so
68:22 - you know i i think like moving forward
68:25 - if that's still the case and it goes
68:27 - like that where you have people just
68:28 - completely skipping the jquery because
68:30 - it
68:31 - i don't know it seems to me like it used
68:32 - to be the way the tutorials always went
68:35 - at least the ones that i did you know a
68:36 - couple years ago where you learn html
68:39 - css then you jumped into jquery
68:42 - uh and after jquery then
68:46 - you got into more like vanilla
68:48 - javascript stuff so people were learning
68:50 - jquery first just to be able to get some
68:53 - uh
68:54 - some sites like
68:56 - working
68:58 - so
68:59 - you know now it's i just i don't see
69:01 - that as much anymore
69:03 - with some of the newer boot camps and
69:05 - tutorials
69:10 - john hanson says talking to yourself is
69:12 - a sign of high intelligence or so i keep
69:14 - telling myself
69:16 - i like that one
69:22 - okay
69:23 - hard i see your message about
69:24 - authentication and stuff so just maybe
69:27 - uh if you get time let me know like in a
69:29 - dm or something
69:30 - um
69:32 - or if you already sent it to me just
69:34 - tell me and i'll try to look for it
69:38 - uh
69:40 - this shaka says what kind of topics do
69:42 - you speak uh in the conferences so
69:46 - let me think uh i have done a talk like
69:48 - on my live streaming so at um at
69:51 - november
69:53 - my talk was about my experience in live
69:56 - streaming and like the amazing community
69:58 - that's been built up around the stream
70:00 - and how it's changed my life as a
70:03 - developer i mean really it's changed my
70:04 - life
70:05 - in general not just as a developer
70:09 - you know
70:10 - being able to you know hang out with you
70:13 - all and uh and just share experiences
70:15 - not just coding experiences but being
70:17 - able to share things about my mental
70:19 - health and my family and just you know
70:21 - everything and learning about you all
70:23 - like
70:23 - i mean there's also there's a lot of
70:25 - interaction that even goes on beyond the
70:27 - stream you know on on instagram and and
70:30 - twitter and you know different social
70:32 - media networks uh even through email you
70:34 - know where i get to communicate with
70:36 - with a lot of you all
70:38 - and um
70:39 - yeah so that was my talk and that one is
70:42 - uh if you want to watch that talk it's
70:44 - on my youtube channel the link to my
70:46 - channel is in the description uh so it's
70:48 - it was um actually live streamed uh from
70:51 - my channel
70:53 - so you can check that out if you want
70:55 - uh i'm giving a talk i just did a talk
70:57 - for the moms can code virtual summit
71:01 - and uh that talk i believe is only
71:03 - available uh if you're a member of moms
71:05 - can code so i'm not sure how much it
71:07 - costs to be a member so
71:09 - um
71:11 - i i i can't say now what it uh what it
71:14 - costs but
71:16 - uh if you're already a member or you
71:18 - want to be a member you can check out
71:19 - that talk that talk was about my
71:21 - experience of coming from a background
71:23 - of being in business and then being a
71:25 - teacher and then transitioning into you
71:27 - know being a web developer and kind of
71:29 - like what i went through and uh that was
71:31 - like i i tried to keep the talk really
71:33 - short and i have a lot of time for
71:34 - question and answers and there were so
71:36 - many questions it ended up being you
71:37 - know really good
71:39 - um and that was interesting talk because
71:41 - it was you know mostly women in the
71:43 - audience i think they were like 160 or
71:45 - so um women so usually i think my
71:48 - audience for the streams are mostly men
71:50 - um so that that was really uh actually
71:54 - interesting um to like what kind of
71:55 - questions i got and
71:57 - um
71:58 - so i did like that
72:00 - uh and i'm gonna speak
72:02 - in
72:04 - at the pittsburgh tech fest i'm gonna
72:05 - speak about building
72:08 - a
72:10 - using wordpress as a content management
72:13 - system for react
72:16 - and using graphql and apollo with that
72:19 - so
72:20 - that our project five that we've been
72:21 - working on it's basically going to be a
72:23 - mini demo like
72:24 - stripped down to the basics of what
72:26 - we've been doing there
72:30 - oh cool francesca says moms can code is
72:34 - only fifty dollars a year
72:37 - if you get paid for a whole year up
72:40 - front or five dollars a month okay so
72:42 - that's that's pretty for at least for
72:44 - for the united states that's pretty
72:46 - affordable
72:47 - um awesome thanks for that and uh
72:50 - francesca i see it says you got to get
72:51 - your kids from day daycare i said thanks
72:54 - jesse talk to you later uh you're
72:55 - welcome thank you so much for watching
72:57 - and um yeah go and uh
73:00 - uh get your kids and
73:02 - uh
73:04 - let's see
73:06 - i lost my place where am i at
73:13 - oh hey oliver's here oliver says hi hey
73:16 - oliver how's how uh how you doing
73:22 - okay and michael says
73:24 - um actual serious question for once do
73:27 - you have a base package json file you
73:30 - use that has all your usual modules
73:32 - um actually yet for my old like jquery
73:35 - projects
73:37 - and just you know basic websites
73:39 - i do and that's that's pretty much this
73:42 - package json file
73:45 - so this one
73:47 - was frequently copied where i have gulp
73:50 - and you can see i have babel so i can
73:52 - use the newer version versions of
73:55 - javascript i minify my html i have a
73:58 - package in there to minify images
74:01 - um this inject lets me put um like
74:04 - analytics code in after the fact
74:07 - um
74:08 - obviously we're going to minify our css
74:10 - this lets me use sas
74:12 - uglify is um minifying our javascript
74:16 - um uncache uh
74:19 - basically adds like you can see it on
74:21 - the screen
74:22 - it adds like a string of numbers to the
74:25 - end of your file names so that browsers
74:28 - don't keep old versions of your code
74:29 - cache like if you just name your
74:32 - your javascript app.js
74:35 - it might be aggressively cached by
74:36 - browser and so you
74:38 - your users might not get the update uh
74:42 - the browser will just keep using the
74:43 - cast version and it's the same thing for
74:45 - css
74:46 - um and then usemen let's see your place
74:49 - is not optimized scripts or style sheets
74:51 - in this set of html
74:53 - files views
74:57 - i had to do username for something
75:04 - oh okay all right that that basically
75:07 - takes like my um
75:10 - development site
75:13 - uses references to the unminified
75:18 - untranspiled versions of my javascript
75:21 - my css and then when it goes to disk it
75:25 - automatically changes the references so
75:28 - that it starts referencing the optimized
75:30 - files uh in the disk folder so that's
75:33 - what that does
75:34 - so this is my base thing it automates a
75:37 - lot and it lets me get started really
75:39 - quickly i haven't used this in a while
75:41 - because we've been working with react
75:42 - stuff and i have a whole different set
75:44 - of things for react
75:46 - but this is really helpful if you just
75:48 - want to make a basic like one pager or
75:51 - just something really simple and you
75:52 - don't think you know you need to use a
75:54 - larger framework for
75:56 - um i
75:58 - you know i recommend this
76:00 - and i'm sure all these are out of date
76:02 - so there's probably a lot of updating
76:03 - that could take place since this was
76:06 - from two years ago
76:08 - but i probably have this available on
76:10 - some of the other projects
76:13 - so if like if you wanted to copy this
76:15 - from github just check out some of the
76:16 - other you know jquery one page projects
76:20 - and you know feel free to use that
76:22 - if you'd like
76:27 - uh
76:29 - vashaka says any tips for submitting
76:31 - proposals for conferences
76:33 - um i'll try to get some tips but to be
76:35 - honest with you i i i feel like i'm
76:37 - pretty new at submitting to conferences
76:40 - um i def i get rejected by most of the
76:42 - conferences i submit to
76:46 - so i don't know if i'm doing a good job
76:48 - at it or not
76:50 - but i will say um
76:53 - submit
76:54 - when you are submitting
76:57 - i my strategy right now is i have a talk
76:59 - that's more like they consider as a soft
77:01 - skills talk right so i talk more about
77:03 - my live coding and my experience there
77:05 - and then i have a talk that's more
77:07 - technical
77:08 - um
77:09 - so
77:10 - when i submit i always submit multiple
77:12 - proposals depending on what a conference
77:14 - wants because sometimes a conference
77:17 - you know they may want something that's
77:19 - not so technical where they you know so
77:23 - you don't always know what they want
77:24 - ahead of time
77:26 - so i like to submit at least two
77:29 - and um
77:32 - you definitely want
77:34 - like you want your title and like the
77:37 - beginning of your description to grab
77:39 - their attention you know like be honest
77:41 - about the title but definitely don't be
77:43 - afraid to have it be something
77:44 - eye-catching like my november talk that
77:47 - i did get selected for the title of the
77:49 - talk was how live coding changed my life
77:53 - so it's kind of dramatic right um
77:58 - i mean it's it's true it's i'm not lying
78:00 - about that but it's definitely a
78:01 - dramatic title so that kind of
78:04 - would stand out to somebody that maybe
78:07 - is getting a ton of talks they're just
78:08 - saying like
78:09 - i don't know like optimize your like
78:11 - your webpack build or something you know
78:14 - really like
78:15 - kind of more bland things
78:17 - so that's pretty much my only advice i
78:19 - really ought to um to study up more on
78:21 - how to do
78:22 - proper proposals and
78:25 - i just
78:26 - you know how it is you just get busy
78:28 - with everything you know you got family
78:29 - and work and everything and uh sometimes
78:32 - stuff like that just gets pushed to the
78:33 - side and you just do the best you can
78:36 - i do recommend going to pay-per-call dot
78:38 - io
78:40 - papercall.io has a bunch of conferences
78:43 - there it'll tell you info about the
78:45 - conferences you can get notified when
78:47 - new conference uh calls for paper
78:49 - calls for papers open up
78:52 - and you can save your proposals and then
78:55 - just auto submit them
78:57 - so you don't have to keep typing all the
78:58 - same stuff out again so uh try it you
79:02 - know check that site out that's i think
79:04 - p-a-p-e-r-c-a-l-l
79:06 - dot io
79:11 - uh andrew says is it okay for a front
79:14 - end dev to learn back end as well oh for
79:16 - sure for sure yeah
79:20 - um i think it's good i mean i think it's
79:23 - good for people who do back end to learn
79:25 - a little front end and front end people
79:27 - to learn a little bit of back end uh
79:29 - because sometimes they they bleed over
79:31 - into each other uh like i'm sure you all
79:34 - seen during this you know during my
79:36 - streams sometimes we do a lot of
79:38 - back-end stuff
79:40 - because
79:41 - you know although i'm a front-end
79:42 - developer by title realistically
79:46 - i do what i have to do to get projects
79:48 - done so depending on where you work
79:51 - you may need to do that as well if
79:53 - you're working on a project like on your
79:55 - own you're going to have to do
79:57 - everything regardless of what you
79:59 - consider yourself front end or back end
80:00 - you're going to have to do the work
80:02 - so at this point i mean honestly i
80:05 - like i've applied for and been offered
80:06 - jobs for full stack
80:08 - um
80:10 - because
80:11 - i i can do that so when i go into
80:14 - interview i say yes my title is front
80:17 - end developer but we we don't have a
80:19 - um
80:21 - you know a back end developer uh that
80:24 - works on our projects with me so
80:26 - like
80:27 - realistically i am full stack
80:30 - in what i have to do
80:36 - michael says if there was only a way for
80:39 - for me to see that talk in pittsburgh
80:40 - about graphql react apollo hopefully
80:42 - that'll be streamed somewhere yeah i
80:44 - don't know what the plans are in terms
80:46 - of recording but
80:48 - uh i'll probably ask the organizers if
80:51 - there's any way like if they're not
80:52 - gonna record or stream it i'll ask them
80:54 - if i can
80:56 - and uh then i'll just get somebody
81:00 - um
81:01 - i'll have to get somebody to to stream
81:03 - it
81:04 - maybe i'll find somebody in the audience
81:06 - to hold my phone and stream it
81:08 - and i don't think my wife has tickets to
81:11 - that one maybe i'll see if she wants to
81:12 - get tickets if she doesn't and she'll
81:15 - come with me she my wife's actually the
81:17 - one that got me tickets to the google i
81:18 - o conference which is really cool
81:26 - divesh says can i please know what
81:28 - exactly web developers do and what kind
81:30 - of work is assigned to them
81:33 - um
81:34 - all right so i'm gonna be very like
81:36 - general um in this because there's a
81:39 - wide range of different types of things
81:42 - web developers do and how they go about
81:44 - doing it but basically a web developer
81:47 - would be assigned
81:49 - work to either build or update
81:52 - a website
81:54 - or web app
81:56 - and it would be their job to make that
81:58 - happen and there's a variety of
82:01 - different technologies that they would
82:03 - use and programming languages that they
82:05 - could use
82:06 - on the front-end side of things they're
82:08 - definitely going to be using html css
82:10 - and javascript that's pretty standard
82:12 - but on the back end there's much more
82:15 - variety in what they could use they
82:16 - could use javascript it could be php
82:19 - um
82:21 - python
82:22 - i mean
82:23 - i don't i don't really know i've never
82:25 - used anything other than javascript and
82:26 - php for back end but
82:29 - there's a variety uh you know we did do
82:30 - some c sharp now i think about it so c
82:33 - sharp
82:34 - um
82:35 - there's a lot of different things that
82:37 - you can use there so it's hard to say
82:38 - for sure what they're going to be doing
82:41 - but that's basically what what they
82:45 - what they will do
82:50 - so if you have any like more specific
82:53 - stuff i could give you get into more
82:55 - specifics but you know it's just such a
82:56 - broad thing that it's hard to say
82:59 - uh for sure what any one web developer
83:01 - would be doing
83:04 - and that's it that's the end of the live
83:06 - chat
83:07 - so
83:08 - uh unless any other questions sneak in
83:10 - there in the next minute or so i think
83:12 - i'm gonna wrap things up
83:14 - and uh thank you all so much for
83:16 - watching and uh for all the awesome
83:18 - questions and comments
83:20 - it was really fun today
83:22 - [Music]
83:24 - hopefully you all
83:25 - you know liked me going back and doing
83:27 - this you know sometimes it's nice to
83:29 - have a little break from the project
83:30 - we've been working on for what it seems
83:32 - like so long so
83:34 - um
83:35 - if if you really hate when i do this
83:37 - kind of thing let me know if you really
83:39 - like it let me know
83:42 - if you don't say anything at all i'll
83:43 - just assume like it was okay
83:45 - um
83:46 - and uh i i you know i'm not gonna do
83:48 - this all the time but
83:50 - occasionally it might be nice
83:53 - um so let's say it was a wednesday
83:55 - thursday all right i'll be in the office
83:57 - again on thursday i should be able to
83:59 - stream
84:01 - let me think
84:03 - later
84:05 - i don't know what my schedule is like
84:06 - thursday so i can't i don't know when
84:08 - exactly i'll be able to stream so i'll
84:10 - put something on uh twitter
84:13 - and
84:14 - probably on instagram and then if you
84:16 - turn on your notifications for this
84:18 - youtube channel the free code camp
84:20 - channel you should get a notification as
84:21 - well so uh
84:23 - if you're active on twitter or instagram
84:26 - you know maybe think about following me
84:27 - so you can get updates on what i'm going
84:29 - to stream as well links are in the
84:31 - description
84:32 - for those accounts
84:35 - um so
84:36 - should be back
84:38 - oh we had one more question
84:40 - uh ariane you got it in there just in
84:43 - time um
84:45 - can you tell me one thing to start so i
84:47 - can do freelance
84:49 - um
84:50 - if you want to do freelance stuff
84:52 - uh
84:53 - honestly
84:56 - uh depending on what you're into
85:00 - i would say like uh start with your
85:02 - local businesses
85:04 - and i've i've never done this but i've
85:06 - heard people have success with this they
85:07 - actually build a website for local
85:10 - business
85:11 - before they get a job like a demo
85:13 - website and then show that to them and
85:15 - say look how nice this website is it'll
85:18 - bring you you know whatever new
85:19 - customers it'll solve this problem for
85:21 - you or something like that and then
85:25 - you can
85:27 - potentially get them as a client
85:30 - and even if you don't get them as a
85:31 - client you have something in your
85:32 - portfolio so
85:34 - like i said i haven't used that in
85:36 - particular but i've i've heard other
85:38 - people have been successful with with
85:40 - that strategy so you may want to give
85:41 - that a try
85:42 - yeah and michael says by the way if you
85:44 - can sneak me into the conference in new
85:46 - orleans i'd be okay with that yeah you
85:47 - know what i'm actually not going to go
85:48 - to that conference
85:50 - so um
85:52 - i ended up after i looked at what the
85:55 - talks would be
85:56 - i realized you know what this is geared
85:59 - towards like upper management and not
86:01 - really towards developers
86:03 - so i decided like
86:06 - you know what
86:07 - although i got free tickets i'd still
86:09 - have to pay for my own flight and my
86:11 - hotel
86:12 - so
86:14 - um
86:15 - or my my employer would either way i
86:18 - would rather spend that money going to a
86:19 - conference that i would get more out of
86:21 - so there was a lot of really cool stuff
86:23 - about that conference but
86:25 - i don't think it would help me that much
86:26 - professionally
86:28 - so i decided against it but
86:31 - it really it would have been really cool
86:33 - i think i wanted to see new orleans more
86:35 - than i actually wanted to see the
86:36 - speakers at the conference so
86:38 - i just couldn't couldn't really justify
86:40 - that
86:42 - all right so
86:43 - now i'm done with the questions i'm
86:45 - going to get out of here for real now
86:47 - thank you so much and
86:49 - have a great day i'll see you tomorrow