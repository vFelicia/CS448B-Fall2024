00:00 - in this course Anya Kubo will teach you
00:02 - how to build three internal applications
00:03 - that are useful for many types of
00:06 - businesses the applications focus on the
00:08 - needs of employees managers and
00:10 - developers Anya is great at breaking
00:13 - things down and makes it simple to
00:15 - follow along when learning new Concepts
00:17 - hello everyone here on free cooker
00:19 - camper can build three apps and three
00:21 - hours using postgres Stripes API as well
00:24 - as an emailing integration my name is
00:26 - Anu Kubo software developer as well as
00:29 - course creator online and together we
00:32 - are going to build three internal tool
00:33 - applications that one business might use
00:36 - we will build an application used by
00:39 - employees an application used by
00:42 - managers and an application used by
00:44 - developers all linked to one database so
00:48 - just like you might see when working for
00:50 - a real small to medium-sized company now
00:53 - hold on yeah this seems super
00:55 - overwhelming why
00:56 - don't worry I'll be taking you through
00:58 - everything step by step starting with an
01:01 - explainer and ending with three separate
01:03 - tutorials leaving you with the
01:05 - confidence to build your own internal
01:07 - tools as well as some new business logic
01:09 - so by the end of this course you will
01:12 - have these wonderful applications to run
01:15 - an e-commerce store from the back end or
01:18 - back office side
01:19 - this is essentially what the operations
01:21 - team at a company will see
01:23 - the application will display all items
01:26 - in our inventory that we can sell and we
01:28 - will be getting this data from a
01:30 - database that we will build using
01:31 - postgres the data will be for mobile
01:33 - phones with each item having a price
01:36 - image URL description and unique SQ or
01:39 - identifier a data management purposes
01:42 - the application will also allow us to
01:45 - manage the purchases made by customers
01:47 - this means we will be able to search for
01:49 - orders and create refunds the refunds
01:52 - will be done thanks to a strike API
01:54 - integration
01:55 - on top of that we will also be able to
01:58 - email customers with auto-generated
02:00 - texts and this is some custom JavaScript
02:02 - that we write as well as the SMTP API
02:06 - you will also be able to see all other
02:08 - employees in the company thanks to this
02:10 - tab right here next up we will build the
02:13 - managers app in terms of admins of the
02:15 - company
02:17 - so imagine that you're a manager and you
02:19 - need to view all the employees at your
02:21 - company as well as their private
02:24 - information
02:25 - you might also need to delete someone
02:28 - from the database or edit their details
02:30 - such as their title or address for
02:32 - example well you can do that here as
02:36 - well as view the end injury too to
02:37 - delete items from the inventory and add
02:40 - new items to the inventory
02:41 - another nice feature we are going to add
02:43 - is the ability to see analytics of which
02:46 - employee is gaining the most revenue for
02:48 - your company
02:49 - and finally we will build a b2d app or
02:53 - business to developer application
02:56 - this app will offer additional developer
02:58 - friendly functionality
03:00 - what this means is that the app will be
03:03 - able to facilitate orders made through
03:05 - API course by displaying the endpoints
03:09 - right here as well as a bunch of other
03:11 - stuff
03:12 - okay so a lot to get through I'm excited
03:16 - let's do it this course is made possible
03:19 - by a grant from ritual the local
03:22 - platform built for Developers
03:24 - retool has drag and drop tools and
03:26 - Integrations to help developers build
03:28 - front ends for their internal apps right
03:30 - on top of apis and data sources
03:32 - in this course we'll be using resource
03:35 - free plan which is available for teams
03:37 - up to five people
03:38 - [Music]
03:44 - okay so let's do it I've started off on
03:47 - the retail platform which is the
03:49 - platform I'm going to use in order to
03:50 - build these internal apps and I'm just
03:53 - going to go ahead and create new from
03:55 - App okay so let's go ahead and call that
03:58 - up something I'm gonna go ahead and call
04:00 - it Mobby as that is my fake company's
04:03 - name it's a mobile company we're going
04:05 - to be making a mobile company's internal
04:07 - apps and this is going to be the
04:09 - employee app so just go ahead and do
04:12 - that you can of course Call It Whatever
04:14 - You Wish
04:15 - and there we go as you can see this is
04:18 - just some default settings we have a
04:21 - table in here and we also have a query
04:23 - that has been set up for us in order to
04:26 - get going however I am going to delete
04:28 - this so we can start with a clean slate
04:31 - so just go ahead and delete yours and
04:33 - then I'm also going to delete this table
04:34 - simply by clicking on it and then
04:37 - pressing delete on your keyboards great
04:40 - so now we have a clean slate we can
04:43 - control which tabs we want to see up
04:46 - here so here I can actually see the
04:48 - state of my queries okay when I get them
04:51 - and we can also control seeing the tab
04:54 - down here or we can minimize it as well
04:57 - as this tab on here which provides us
04:59 - with all our inbuilt components
05:01 - so
05:03 - let's go ahead and undo this first off
05:05 - I'm just going to create a container
05:07 - that's going to hold our tables our
05:10 - order tables our inventory table and our
05:12 - employee table to show us the employee
05:15 - all of that data so I'm just going to go
05:18 - ahead and call this
05:21 - order
05:22 - management
05:25 - dashboard
05:26 - just like so I'm going to choose to
05:30 - align it to the left like that and then
05:33 - we can also choose a color for this
05:35 - container's header so to do that just
05:38 - make sure you're on the actual container
05:39 - itself
05:40 - and then on the inspect tab we can
05:43 - scroll down and we can give our header a
05:46 - background color so I'm just going to go
05:48 - ahead and select one of these I'm going
05:50 - to go with primary and if we want to
05:52 - change it we can just drag this just
05:54 - like so to make it a little bit lighter
05:56 - or darker that is totally up to us okay
06:00 - if we go lighter the color will change a
06:02 - bit but we can also overwrite the
06:05 - default text color I'm just going to
06:07 - keep it white as I think that looks good
06:10 - great so we can change the header we can
06:13 - change the footer if we want to add one
06:15 - to this we can change the Border radius
06:17 - the Border there's literally so so much
06:19 - that we can do
06:21 - so perhaps while I'm here I'm just going
06:23 - to go ahead and change the Border radius
06:26 - of this to have the Border color that is
06:29 - the same okay
06:31 - so let's just go with this
06:34 - I'm just going to drag it to be
06:35 - somewhere up here
06:37 - great and then we can of course override
06:40 - it to be exact as well
06:42 - okay so that's our first container now
06:45 - I'm going to use the tabbed component so
06:49 - just this one right here and drag it in
06:51 - and we're going to have different tabs
06:53 - as I said the first one is going to be
06:55 - to see all the orders so let's go ahead
06:57 - and call this orders we can either give
07:00 - an icon if we wish so I'm just going to
07:03 - go ahead and just give it a little crown
07:06 - because they are one orders so I think
07:08 - that is kind of cute and then for view
07:11 - two we're going to have the inventory so
07:13 - that our employees can see the inventory
07:16 - in our shop so inventory and again just
07:19 - choose an item so I'm just going to go
07:22 - ahead with
07:23 - this one right here
07:26 - that kind of makes sense for an
07:27 - inventory and the third one I'm gonna
07:29 - have is for employees so the employees
07:32 - can also see other employees that work
07:35 - here and here I'm just gonna find one of
07:37 - a person so just like so
07:43 - great so if I click on any of these it
07:46 - should open a different tab but of
07:47 - course we need to put the content of
07:49 - that tab in here so I know that the
07:52 - first one is going to be a table so
07:54 - let's go ahead and drag that in and this
07:56 - is the default information that is being
07:59 - fed to our table we're going to delete
08:00 - all of this and actually feed in our
08:02 - data from a database so just go ahead
08:05 - and delete that to see we can start
08:07 - fresh
08:08 - with the inventory so if you click on
08:10 - here I'm going to show all the products
08:13 - in our company however I'm going to
08:16 - choose to Showcase another component for
08:19 - you and that is list view which will
08:21 - show us all the items as a list
08:24 - so let's go ahead and search for list
08:26 - view so I'm just going to drag that in
08:29 - here like so
08:31 - and this is cool because we can now drag
08:33 - other components into here so for
08:36 - example if I drag an image then we'll
08:38 - have loads of different images this is
08:40 - kind of the equivalent of mapping in
08:42 - JavaScript okay so let's have an image
08:45 - I'm also going to have let's put some
08:47 - text for example so we can put some text
08:49 - here this could be a title and then we
08:52 - can also have some text for a
08:54 - description if we wish as well there's
08:57 - maybe some other text for you know the
09:00 - price of the item as well as how much we
09:02 - have the product so let's go out and put
09:04 - that here so I've done that just so you
09:07 - could see how this is being mapped out
09:09 - to all the other list items and our list
09:11 - items so let's go ahead and select the
09:14 - list view component are actually just
09:16 - hard coded to number three but we can of
09:19 - course change this dynamically too once
09:21 - we get our data feeding in
09:23 - so we'll come back to this perhaps let's
09:26 - also I'm just going to change this for
09:28 - now we can use HTML elements in here if
09:32 - we want so I can use the h2 tag and this
09:35 - could be the product name
09:38 - for example so that is just an example
09:40 - of something we can do or we can make it
09:43 - smaller if we want so if we choose an H3
09:46 - tag that'll just be that tiny bit
09:48 - smaller too here we're going to have the
09:50 - price so we can make it
09:56 - bold simply by using these two stars
10:00 - like so so I can just put USD and just
10:03 - hard code this as zero to start with but
10:05 - we know that the price is going to go in
10:08 - here okay and if we don't want to do it
10:11 - this way we can also just put an H
10:15 - five this time perhaps let's see what H5
10:17 - looks like Okay so let's use an H5
10:20 - element for that and here we're just
10:23 - going to again I'm just going to use an
10:25 - H5 element for this just to keep it
10:27 - consistent on both sides visually and
10:29 - let's go ahead and put the product ID
10:34 - as well as
10:36 - the stock level
10:39 - so that is something that we will have
10:41 - here and I'm just gonna make that a
10:43 - little bit
10:46 - longer for us so just like that and of
10:50 - course this is going to be a description
10:52 - of the product so I'm just going to put
10:54 - this is a description
10:58 - for now wonderful so this is just for us
11:01 - to have an idea of what's going to go in
11:03 - here what kind of data let's move on
11:07 - the last thing we're going to do is
11:08 - employees and once again for this one
11:10 - I'm going to have a table so let's go
11:13 - ahead and create and then find our table
11:15 - component and just drag it in here at
11:18 - the moment as I said it has default data
11:20 - just hard coded into here so it's an
11:23 - array of objects I'm just going to
11:25 - delete that so you can feed our own data
11:27 - in later on
11:28 - great
11:30 - now the next thing I want to do is say
11:33 - that when we have our orders and when we
11:35 - select a line from the orders we want to
11:37 - actually view the order visually along
11:40 - with the product pictures so I'm just
11:43 - gonna for now drag in another container
11:46 - so just like so and I'm going to get rid
11:49 - of the title this time I don't want it
11:52 - there and we can do so easily so if we
11:55 - click on the container too
11:58 - and we can do so easily by simply hiding
12:01 - the Heather like sir okay great so at
12:07 - the moment we're just using the default
12:09 - names however we can change this so
12:11 - perhaps let's go ahead and do that I'm
12:13 - going to name this to management
12:18 - container
12:20 - and let's change this to
12:23 - display
12:24 - container
12:27 - this tabbed container I'm just going to
12:30 - put management
12:32 - tab
12:35 - container
12:40 - okay so there we go and then I'm happy
12:43 - with all these tabs one times two times
12:45 - three that makes sense and table one
12:47 - well this is going to be for the orders
12:49 - so let's go ahead and maybe change that
12:51 - order table
12:53 - the inventory list
12:55 - so this list view I'm gonna put invin
12:59 - Tori list and the employees I'm going to
13:03 - change this to to just make sure to
13:04 - click on employees that's table two
13:06 - let's read in table two to be employees
13:11 - table just so that when people look at
13:13 - our code that we will be writing later
13:15 - it will be more readable and make more
13:18 - sense okay so there we go we've renamed
13:20 - all these components so feel free to do
13:22 - that you of course don't have to I just
13:24 - wanted to show you that it is possible
13:27 - okay wonderful so in here when I click
13:30 - on a line I essentially want to be able
13:34 - to view the order number so let's go
13:37 - ahead and delete this I'm going to use
13:39 - an H
13:40 - Four Element for this this time so let's
13:43 - put the closing tag and I'm going to put
13:46 - you are viewing order number
13:52 - and then we're going to put the order
13:53 - number in here okay so whatever it is
13:56 - that will show up
13:57 - perhaps let's make this a little bit
13:59 - smaller while we're at it I'm going to
14:00 - make this an H5 and
14:03 - great now when we select an order I
14:06 - essentially want the order to show up
14:08 - right but what if an order has more than
14:10 - one product so for this we're going to
14:12 - have to get the list view again because
14:14 - we're going to map that data on to the
14:16 - list view so just go ahead and drop that
14:19 - in here drop that in the container just
14:22 - like so and in here maybe let's rename
14:25 - this to something more readable I'm
14:27 - going to go ahead and rename this to
14:30 - order list
14:33 - View
14:36 - and in here I'm just going to drag in
14:39 - the image of what the order is
14:44 - so just like that I'm just going to make
14:46 - it bigger and then I'm also going to
14:49 - drop in some text because I want to
14:51 - display what this actually is so I'm
14:54 - going to make this an H
14:56 - 3 element this time
14:58 - and I'm just going to show
15:01 - the product name
15:06 - and then I'm also going to just drop in
15:08 - the description okay just so it's really
15:11 - visible to the employee
15:13 - this is
15:15 - a description
15:18 - cool and then we should probably also
15:21 - have the product ID as well so let's go
15:24 - ahead and drop that in here
15:28 - so product ID and we're going to put
15:33 - that
15:33 - right there
15:36 - wonderful
15:37 - so I think this is looking good we can
15:41 - space this out if we want
15:44 - so I can put a divider if I wish just to
15:47 - make it really obvious that you know the
15:49 - next item has started
15:52 - great
15:54 - so this is what it looks like now we can
15:56 - also actually hard code the height of
16:00 - this display container so I would do so
16:02 - by adding the height as being fixed and
16:05 - now if I just go ahead and change the
16:08 - height of this
16:09 - great and now I could just scroll
16:11 - through them with the height of this
16:13 - component being fixed rather than being
16:15 - Dynamic based on how many items we have
16:18 - in the list view that expands the
16:20 - components okay let's carry on
16:25 - before we get going to creating the
16:27 - refunds and notification section that I
16:30 - want to have here I think let's start
16:31 - with actually importing the data that we
16:34 - can work with and to do this I've
16:36 - actually gone ahead and created this
16:38 - file for you so you can literally copy
16:40 - it and drop it into your app okay so for
16:45 - the purposes of this tutorial we are
16:47 - going to be using a manage database on
16:50 - retour however of course in a real life
16:52 - situation you'd probably want to hook
16:54 - this up to actual real database
16:57 - I've gone ahead and written some code to
17:00 - create a table for the customer so each
17:03 - customer is going to be represented by a
17:05 - customer ID or contact name title
17:07 - address where they live and a way to
17:10 - contact them I've also done one for the
17:13 - employee which is kind of like the
17:14 - customer however it has more information
17:16 - as each employee at my company has
17:18 - employee ID a fast name last name title
17:21 - we also store that buff that you know
17:23 - just for fun if we want to send them
17:24 - some value notifications that higher
17:27 - date as well as where they live and how
17:28 - to contact them as well as their company
17:30 - photo
17:32 - next we have the product so all the
17:34 - products in our inventory which we have
17:36 - given an ID a product name a description
17:40 - how much they cost and how many units of
17:43 - these we have in stock as well as a
17:45 - photo of the product
17:46 - next we have the actual order so when a
17:49 - customer makes an order we actually use
17:52 - the employee ID that we assign to our
17:55 - employee to find out which employee is
17:57 - in charge of that order or took the
17:59 - order the customer ID that we made
18:02 - earlier to find out which customer made
18:05 - this order and then we also have the
18:07 - order date the required date by which
18:09 - they need the order by the ship date the
18:11 - ship address as well as the charge ID
18:13 - that is going to come from stripe so
18:16 - that we can make the refunds if we want
18:19 - okay and lastly we just have the order
18:21 - detail as this is the sales order but we
18:24 - don't actually know how many items are
18:26 - in the order or anything so here we have
18:28 - the product ID the unit price and how
18:30 - many of that product we got as well as
18:32 - if there was a discount applied so this
18:34 - is just of course sample data for this
18:36 - tutorial please feel free to use it it's
18:39 - nothing serious this is just for
18:41 - tutorial purposes it's a fake database
18:43 - that I have made okay so every order can
18:46 - have as many order details as I want
18:49 - next up we go about inserting data into
18:52 - each of these tables so this is how you
18:55 - would do it you would use the insert
18:57 - into keyword you'd select the table you
19:00 - then pick out all the columns
19:02 - essentially that you want to insert data
19:04 - into and then you do it by using the
19:06 - values keyword and inserting the data in
19:09 - the same order as the above okay so I
19:12 - did this for the employees table the
19:14 - products table the customer table the
19:17 - sales order table as well as the order
19:19 - detail table
19:21 - now I won't be going into how to write
19:23 - these SQL queries as this is not an SQL
19:26 - tutorial okay if you want to check that
19:28 - out there's plenty of resources on the
19:31 - free codecam channel for you to have a
19:32 - look at so please go right ahead okay so
19:36 - all I'm going to ask you to do as I said
19:37 - is just copy all of this like I'm doing
19:40 - right now
19:41 - to copy it and then back in here let's
19:44 - get up the bottom Tab and I want you to
19:47 - write a new resource query this time
19:50 - it's going to be to the manage database
19:52 - so go ahead and search for the manage
19:55 - database you should have one in your
19:57 - retour
19:58 - and just go ahead and paste it all in
20:00 - like so and hit save and run
20:04 - okay so I'm just going to make this a
20:05 - little bit bigger for you
20:07 - and great you should see a pop-up that
20:10 - says query one has ran successfully and
20:13 - you will see the related tables in here
20:15 - so those are all the tables in your
20:16 - manage database I have a few more as
20:19 - I've added some tables to a different
20:21 - tutorial but as long as you have these
20:23 - that should be fine that should have
20:25 - worked so all your tables should be in
20:27 - here along with all the columns that
20:30 - essentially make them up okay so that's
20:33 - quite useful for us let's just go ahead
20:36 - and rename this to add data so it's very
20:38 - easy for us to know which query is for
20:41 - doing which thing
20:43 - so great we've written our query to our
20:45 - data and We've ran it so we've added it
20:47 - to the manage database this is good now
20:51 - that we've actually added our data we
20:53 - need to retrieve that data we need to
20:55 - get data and I want to do it by writing
20:58 - another query so new resource query this
21:01 - time I'm going to call this get let's
21:04 - get the orders as that is the first
21:06 - table that we created so get orders like
21:08 - so or we can call it get sales orders to
21:11 - be more precise as that is what our
21:12 - table is called so there we go I've just
21:16 - chosen to call it the same as the table
21:18 - you don't have to but I've done it
21:20 - because we're going to get that table so
21:22 - make sure you're on the manage DB
21:24 - resource and all I'm going to do is
21:27 - write select
21:28 - all
21:30 - from so this is SQL sales order right
21:35 - because that was what our table was
21:37 - called so if I now save this and run it
21:41 - you will see the table
21:44 - show up right here so those are all our
21:46 - orders
21:48 - cool
21:49 - so that is how you would get a table
21:52 - from a database now to actually use this
21:56 - I would select the table that I want to
21:59 - populate with this data in this case
22:01 - it's the order table and in here you're
22:03 - going to use this a lot we're going to
22:05 - get two Kylie braces so this is
22:07 - something associated with retool these
22:09 - two Kylie braces and we're gonna get
22:11 - sales order data so we're simply getting
22:15 - whatever the query is called which is
22:16 - get sales orders and we're getting the
22:18 - data associated with it and there we go
22:21 - you've now populated this table with all
22:24 - our orders
22:25 - wonderful
22:27 - another thing that's handy if you don't
22:29 - know the structure of your data is to
22:30 - use this Explorer Tab and look at the
22:33 - state so as you will see here you will
22:35 - see get sales orders and if I open this
22:37 - up you'll see data which is an object
22:39 - and then you'll see all the columns that
22:42 - we can use as arrays cool
22:45 - so I'm just going to minimize that again
22:47 - now another cool thing that we can do
22:49 - for this table yes of course we can
22:52 - customize it so I can change the colors
22:55 - if I wish so I can go ahead and make the
22:58 - header background blue perhaps you know
23:01 - to really match the vibe of this overall
23:05 - component or what I can also do which is
23:08 - probably more useful instead of using
23:10 - the table names that come with our
23:12 - database we can actually visually change
23:15 - them to the user so we're not going to
23:16 - be changing the database at all we're
23:19 - just changing them visually to our users
23:22 - okay so I can change this to order ID
23:26 - so it doesn't have to be just all one
23:28 - word so just like so and let's go ahead
23:31 - and do the same for the customer ID so
23:33 - customer ID
23:36 - the employee ID employee ID so once
23:41 - again we are not changing anything in
23:43 - the database we're simply changing what
23:44 - it looks like on this UI
23:47 - it's also have the required date
23:52 - D shift date
23:57 - the shipped
23:59 - dress
24:01 - we can just have a dress really
24:07 - region
24:10 - postal code
24:17 - country
24:18 - and we don't really want the charge ID
24:20 - to be visible so I can go ahead and hide
24:22 - it like so that is an option for us too
24:25 - so I've just gone ahead and hidden it
24:27 - so now it won't be visible in our table
24:31 - anymore if I scroll through okay it
24:33 - finishes that country
24:35 - great so this is looking good I'm just
24:38 - going to go ahead and do the same thing
24:40 - for the employees tables so this is a
24:42 - bit of repetition for you what we did
24:44 - before is create a new resource query
24:46 - let's go ahead and call this get
24:48 - employees
24:51 - and then I'm going to select
24:53 - all from the table employee so just like
24:58 - so and hit save and run which will give
25:02 - me back all my employees when this stops
25:05 - running and then I'm simply going to
25:07 - select the employees table and under
25:09 - data I'm going to use the two curly
25:11 - braces get the employees ID so whatever
25:14 - we called our query and get the data
25:18 - from it so here's a preview and here we
25:20 - see that data wonderful
25:23 - so once again we can choose to hide as
25:25 - much as we want as this is the employee
25:28 - tab I'm going to hide these sensitive
25:30 - information as well as the photo so I'm
25:32 - going to hide this I'm going to hide
25:34 - where they live
25:36 - so just like that as well as a dress and
25:38 - the birthday but I am going to keep that
25:40 - higher date a phone number for contact
25:42 - as well as their first name and employee
25:44 - ID
25:45 - wonderful so that we go and of course we
25:48 - can change these dynamically if we wish
25:51 - to
25:52 - so I'm also gonna while I'm here just
25:55 - change this to be
25:56 - employee
25:59 - ID
26:02 - last name
26:05 - first name
26:08 - a title so we have CEO vice president
26:11 - sales manager that hired date
26:16 - and of course that phone number
26:19 - for contacting them if we need
26:22 - great so this is looking wonderful
26:26 - lastly I'm just going to do the
26:27 - inventory so once again let's make a new
26:30 - resource query I'm going to call this
26:33 - get inventory
26:36 - just like that and then we're going to
26:39 - select
26:41 - all from
26:44 - you guessed it product this time
26:47 - so we're going to get all the products
26:48 - save and run
26:51 - great so now I'm going to highlight the
26:55 - list view this time so the inventory
26:57 - list and the number of rows we're going
27:01 - to change this dynamically so get up
27:03 - your cardi braces use the get inventory
27:06 - data and then I'm going to select
27:09 - something that I want to pin my length
27:11 - to I think that should be the product ID
27:13 - as that is always going to be unique or
27:16 - should be unique and I'm going to get
27:18 - the length of this array
27:22 - okay great so there we have it
27:26 - as we've only got three items in our
27:29 - inventory
27:31 - that has been mapped out to three items
27:35 - in my inventory list
27:38 - okay
27:40 - great
27:42 - so now how do I feed data into this
27:44 - imagery list well what I would do is
27:49 - I would go ahead and select one of these
27:51 - so here is the image and I would go
27:55 - ahead and get the curly braces up again
27:56 - use the query get inventory data get the
28:00 - photo and we're going to Loop over each
28:04 - photo in our array by putting in an i
28:06 - okay so there we go we've looped over
28:09 - everything in our array so there's our
28:12 - three items and we're going to do the
28:13 - same for the product name so just in
28:16 - between the H3 tags that we added I'm
28:18 - going to use the two Kylie braces I'm
28:20 - going to use the get inventory data
28:23 - query so they're getting into a query to
28:25 - get the data and then I'm going to get
28:27 - the product name and loop over
28:31 - everything in my array
28:33 - and the price as well so I'm just going
28:35 - to go ahead and use the two Kylie braces
28:37 - here you see the space between USD the
28:40 - USD get inventory query to get the data
28:43 - that comes back and I'm going to get the
28:45 - unit price and once again open up an
28:48 - array and use the I to Loop over
28:50 - everything in our array
28:53 - do the same for the description so two
28:55 - curly braces get inventory query get the
28:58 - data from it get the product description
29:00 - open up our two brackets and pass
29:03 - through an eye so we Loop over
29:04 - everything
29:05 - great and then finally for the product
29:08 - ID well it's the same thing two curly
29:10 - braces get inventory data then we get
29:14 - the product ID and we Loop over by
29:17 - passing through an i into an array and
29:20 - finally get inventory data this time
29:23 - it's the units in stock
29:26 - and once again we pass through an eye
29:29 - great
29:32 - so this is looking really wonderful I'm
29:34 - happy with this perhaps we can just move
29:37 - this down a little bit so it's a bit
29:39 - more centered
29:41 - just like so as I think that might look
29:43 - a little bit better for the next
29:45 - products in line
29:47 - wonderful
29:49 - okay so this is looking good
29:54 - let's move on so under orders what I
29:58 - said is that if I select a row I
30:00 - actually want to show the orders that
30:02 - are associated with the order ID
30:05 - so let's go ahead and do that next
30:09 - so
30:11 - what I'm going to do is just select this
30:14 - title instead of having XX I'm going to
30:16 - go into
30:19 - this table which is called order table
30:21 - so just type out order
30:24 - table
30:26 - like so and this time we're going to get
30:29 - these selected row so just find selected
30:31 - Row from the drop down select
30:35 - did
30:36 - row we're going to get the data order ID
30:40 - okay so now whatever row we select this
30:43 - will change as you can see it's changing
30:46 - as I select a different right
30:49 - wonderful and now using the same
30:52 - approach we did for the inventory we're
30:54 - going to Loop over all of these list
30:57 - items in order to show all the products
30:59 - associated with this order number so to
31:02 - do this we're going to have to write
31:04 - another query this time to get one
31:06 - product so the resource query I'm going
31:09 - to call get products so just one product
31:13 - and the SQL I need to write for this
31:15 - it's going to be select all from the
31:19 - product table
31:21 - where the product
31:25 - i d
31:27 - equals
31:29 - any
31:32 - and then we're going to pass through the
31:33 - product ID that's associated with the
31:36 - order and we know we can get that data
31:38 - from the order detail table so let's go
31:42 - ahead and write a query for that so
31:46 - let's save this as it is this won't work
31:48 - at the moment but let's make a new query
31:52 - this is going to be called get sales
31:54 - order
31:56 - detail
31:58 - I'm going to do select all
32:01 - from
32:03 - order detail
32:06 - where
32:07 - the order ID equals and I'm going to
32:10 - enter this table called order table
32:15 - I'm going to get this selected
32:17 - row
32:19 - data
32:21 - order ID so just get the order ID
32:25 - great so save this and run it so if we
32:30 - select on this one right here you will
32:31 - see that the order associated with it
32:33 - has the product ID of three you'll see
32:36 - its price we'll see how many of them are
32:38 - ordered and we'll see the discount price
32:39 - and if I select a different row you will
32:42 - see that change and the order details of
32:44 - this order will change okay so now we're
32:47 - going to use this query in order to find
32:50 - out what product IDs are associated with
32:52 - which order ID and so to do this I'm
32:56 - just going to use get sales order detail
32:58 - data
33:00 - product ID okay and just make sure that
33:04 - this is in parenthesis and save and run
33:07 - it
33:09 - and great so that's all working well
33:12 - we've now linked up the actual product
33:15 - table to the sales order table
33:18 - so now I can just click on here and go
33:22 - into the get product query
33:26 - so this one that we wrote right here to
33:29 - get this photo URL so get product data
33:33 - dot photo we're going to just Loop over
33:36 - that by passing through and I just like
33:41 - so
33:42 - okay
33:44 - great
33:45 - so now let's go ahead and just try click
33:47 - on any one of these rows
33:50 - and you will see the order number here
33:52 - changes as well as the picture as this
33:54 - Samsung Galaxy is associated with this
33:56 - order but you wouldn't know that from
33:58 - looking at this line it's only thanks to
34:00 - us getting the product and searching for
34:03 - the product by the order ID that we're
34:05 - able to get all of this extra
34:07 - information
34:08 - so now I can use this extra information
34:10 - to finish this out so I'm going to go
34:13 - into the get product query again and get
34:16 - its data and this time get the product
34:19 - name
34:22 - as well as the description so get
34:24 - product data
34:26 - product description
34:29 - as well as the product ID okay so I'm
34:33 - just going to
34:34 - get product data
34:39 - product ID
34:41 - and loop over like so
34:44 - great and perhaps align it to the right
34:48 - now one thing what I have to do is we've
34:50 - obviously hard coded the length of this
34:52 - list so go ahead and click on the list
34:55 - order list View and we're just going to
34:58 - change this to be however long
35:01 - the get sales order detail data product
35:08 - ID length
35:11 - okay so in this case it will be one
35:15 - as only one product is associated with
35:18 - this order but if I go ahead and click
35:20 - on order 10 2 5 1 you will see there are
35:24 - two items associated with this order
35:27 - okay
35:28 - wonderful so this is looking great okay
35:33 - so I think what it is done for this
35:34 - section I'm just actually going to hard
35:35 - code the height of this as well so the
35:38 - order table I want it to be a fixed
35:42 - height so that is fixed to around about
35:45 - there which means that I also want to
35:47 - just change the height of this just so
35:49 - they're both kind of equal when we load
35:51 - the app to get started okay I just think
35:54 - visually that's a bit better
35:56 - but once again that is totally up to you
35:58 - that is a choice that you can make
36:01 - next up I want to focus on getting
36:03 - refunds and notifications about this
36:05 - refunds by using the strike API and the
36:08 - SMTP API in order to send emails so
36:11 - let's do it
36:12 - I'm just going to drag in the container
36:14 - like so
36:18 - so here we go and this is going to be
36:21 - for
36:22 - refunds
36:25 - notifications
36:27 - okay so this time I'm just going to
36:30 - change the header to be a kind of
36:33 - reddish color so just go ahead and
36:35 - select the container I'm going to rename
36:37 - this to refund
36:39 - container and then let's make the header
36:43 - background I'm going to make it like a
36:45 - red so maybe something around here is
36:48 - quite nice and I'm going to hard code
36:50 - the text to be white so that doesn't
36:52 - give us the default color that it wants
36:55 - I'm also going to actually add a image
36:58 - here to represent the Mobi company so
37:02 - this is just the kind of logo that I
37:04 - made feel free to not use it but I'm
37:07 - going to show you that you can also
37:08 - upload pictures into here so to do that
37:12 - just go ahead and drag in an image like
37:14 - so so that's what I have done
37:16 - and there we go so there is my company
37:19 - logo that I have made it's nothing
37:22 - special but I think for this tutorial it
37:25 - will do I'm just going to make this a
37:27 - little bit smaller and move it right
37:29 - back up here where it was before
37:32 - so now the refund container well as we
37:36 - know we're going to have to create
37:37 - refunds right and to do this I actually
37:39 - want to Auto populate a tab for the
37:42 - employee to see exactly what their
37:43 - refunding so it's really easy to read
37:45 - for them when they're on the phone
37:47 - perhaps and when they're composing
37:48 - emails so for this I'm going to put in
37:51 - another container just like so I'm not
37:53 - going to have a header for this so I'm
37:55 - just going to go ahead and hide the
37:57 - header so just like that and in here
38:01 - what I'm just going to call this text
38:03 - display
38:05 - container
38:08 - just like that and it's going to hold
38:11 - the text that we need to see so I think
38:14 - the employee should have something that
38:17 - says
38:18 - create
38:20 - refund
38:24 - for and then we're gonna have to get the
38:26 - customer associated with this order
38:28 - number right so just like we did with
38:30 - the product we're going to use that
38:32 - order number to fetch data from another
38:34 - table which is the customer table I'm
38:37 - going to create a new query I'm going to
38:38 - call this get customer and then we're
38:41 - going to select
38:44 - all from the table customer
38:48 - where
38:50 - the cost ID equals
38:54 - the table
38:56 - so the order tables sorry because that's
38:58 - what we call this
39:00 - customer ID so actually we can just use
39:02 - the custom ID we don't need to use the
39:03 - order number so that makes our life
39:05 - easier so let's get the order
39:08 - table
39:09 - selected row data cost ID
39:15 - okay so now let's save and run this
39:18 - and wonderful so there we go if we
39:21 - change the selected row it will get us a
39:23 - different customer based on the customer
39:26 - ID
39:27 - so in here now I'm going to use that I'm
39:30 - going to use the query we wrote called
39:33 - get customer data and get the contact
39:39 - name
39:40 - great I'm just going to add an S order
39:44 - just like so and then in here well
39:49 - we can also use markdown if we wish so I
39:52 - can choose to use markdown for this just
39:55 - to show you a different way of doing
39:56 - things and I'm also going to use an
39:58 - emotic con which is a cute little arrow
40:01 - okay so this is just some styling that I
40:04 - think is a bit fun
40:06 - great
40:07 - and this text well I want the text to be
40:11 - dark so let's just go ahead and change
40:13 - that okay so now let's move that out
40:18 - so create reason for Alan Michael's
40:20 - order or you can change the name that
40:22 - was totally up to us we just have to
40:24 - change the selected row and this query
40:27 - will automatically run okay because
40:29 - we're changing the selected run
40:32 - next up I'm just gonna essentially give
40:35 - instructions to an employee on what to
40:38 - do so I'm just going to put in some text
40:40 - I'm just going to go ahead and put in
40:41 - some text under here like so
40:44 - and this text is going to say so I'm
40:46 - just going to use these as it's easy for
40:49 - me uh I'm gonna have a one which is to
40:52 - check order
40:55 - details so you're telling the employee
40:58 - to check the order details and we can
41:00 - actually show them so this is for
41:04 - order
41:06 - number and we're going to go enter the
41:09 - order table
41:12 - selected row data and get the order ID
41:16 - so it's really obvious which order
41:18 - they're looking at and the text I'm just
41:20 - going to do this dark color again
41:23 - then we're going to have made on
41:26 - and then we're going to use the date
41:29 - that this order was made on so we're
41:31 - going to go into the order table
41:32 - selected row order date however it will
41:36 - show it in this format as a default
41:39 - we're going to pass it through into the
41:42 - new day object and change it to a date
41:43 - string so I'm going to do so by getting
41:46 - the new date JavaScript object and
41:48 - passing through the whole thing so the
41:52 - order date and then using the method of
41:54 - two date string on it okay so there we
42:00 - go that's a much more readable format
42:03 - for us and let's just go ahead and put a
42:06 - dot now I can use a space I can space
42:09 - this out Simply by adding this snippet
42:11 - of code so if you feel the need to do
42:13 - that just go ahead and add
42:15 - that
42:17 - okay great we can do the same here
42:20 - now the other piece of text that I want
42:23 - to add is the when the order was shipped
42:27 - so I'm going to put this order was
42:29 - shipped on V and once again I'm actually
42:33 - just going to get the new date objects
42:35 - as I now know I need to use it in order
42:37 - to change the format of the date and I'm
42:40 - going to go into the order table I'm
42:43 - going to get this selected row I'm going
42:45 - to get that data and I'm going to get
42:47 - the ship
42:48 - date
42:50 - so shipped date
42:52 - so there we go and I'm going to use the
42:55 - method of two date string on it in order
42:58 - to change it to a readable format
43:00 - without the time
43:02 - so that's when the order was shipped to
43:05 - and then we're going to put the address
43:06 - so we're going to once again go into the
43:08 - order table selectory data and get the
43:11 - ship address however it was spelled on
43:14 - the original
43:16 - database okay not what we changed it to
43:18 - here
43:21 - great so that's where it was shipped to
43:23 - and then we're going to also have the
43:25 - ship City so once again the order table
43:28 - selected row data shipped City and then
43:32 - as well as the country so just go ahead
43:35 - and add the country too
43:37 - okay
43:38 - so
43:41 - order table select little data ship
43:44 - country
43:46 - wonderful so I think this is looking
43:49 - really good the next thing I want to do
43:52 - is actually show the items associated
43:56 - with the order again just in a smaller
43:58 - way so once again we're going to use the
44:00 - list View
44:02 - so let's just drag and drop that in here
44:06 - let's call this order
44:10 - mini list here and this time I think
44:14 - we'll just show the picture but a really
44:16 - small picture in here so I'm just going
44:18 - to drag in an image
44:20 - like so
44:23 - as well as some text for the title I'm
44:27 - also going to have the unit price
44:30 - and the quantity as well so I'm just
44:33 - going to change that to be an individual
44:35 - text on right here
44:38 - okay
44:39 - so not as good to looping I'm just going
44:42 - to use the get product query again so
44:44 - I'm going to get
44:46 - product data
44:49 - photo
44:51 - open up I and loop and do the same for
44:54 - the title so get
44:58 - product data
45:01 - product name and loop
45:03 - and I'm just going to change the text to
45:05 - be a darker color so we can read it as
45:08 - perhaps also make this in bold so I'm
45:10 - just going to put it in
45:12 - these two stars and then we're gonna get
45:15 - the product so once again use the Stars
45:19 - get product data
45:23 - unit price and loop
45:27 - just finish that off change the text to
45:30 - be darker
45:32 - and I'm just going to put unit price in
45:34 - front of this so unit price just like so
45:37 - and then we're also going to have the
45:39 - quantity so maybe we move that down just
45:42 - so we can put this on one line like this
45:44 - and then the quantity we'll put here or
45:47 - perhaps if we want let's actually make
45:49 - this smaller so I don't really think it
45:50 - needs to be that big which means we can
45:52 - move all of these up to two I think that
45:55 - makes more sense for what we are really
45:57 - building here okay it's just a tiny
46:00 - little checkup for our employees so they
46:03 - don't have to go looking through all the
46:04 - data
46:06 - okay and this time we're actually going
46:08 - to get the sales order so get sales
46:10 - order detail data quantity to find out
46:14 - how much of each product was bought okay
46:17 - so let's just go ahead and put quantity
46:20 - here quantity
46:23 - and then let's change the color of the
46:25 - text
46:27 - great
46:28 - so this is looking wonderful and of
46:32 - course we want the order mini list view
46:34 - to change dynamically based on the get
46:38 - sales order
46:40 - detail data
46:43 - product ID
46:46 - length
46:48 - great so now if we click on this order
46:50 - which I know has two products we should
46:52 - get the two products associated with it
46:55 - on a phone
46:56 - next up we're going to select the refund
46:58 - type so for this I'm actually going to
47:01 - do a select drop down so I'm just going
47:04 - to drag this in here this is a new
47:06 - component that we haven't used yet and
47:08 - it's going to allow us to select
47:10 - something from a drop down that we can
47:12 - use in order to populate our email
47:15 - okay so there we go I'm going to
47:18 - position
47:19 - the label to be at the top I'm going to
47:22 - change the default text
47:24 - to be a dark color and now we can also
47:28 - change the label text itself so here's
47:31 - the label and this is going to say two
47:34 - select refund type
47:38 - okay and now we're going to put in the
47:40 - options for this
47:42 - so I can choose to do this manually or I
47:45 - can just choose to do the mapped version
47:48 - and I'm going to put an array that has
47:51 - the options of late in core
47:55 - correct
47:57 - and unsatisfactory
48:02 - and now for the label well let's just go
48:04 - ahead and get up our Kylie braces open
48:07 - up an array and we're going to actually
48:09 - show what the labels of these options
48:11 - are the first one is going to say order
48:16 - was late by over 10. days
48:20 - then the second one is going to say
48:24 - incorrect damaged
48:26 - order and the third one is going to say
48:32 - unsatisf Factory
48:39 - and we're gonna
48:41 - Loop
48:46 - I'm also going to choose to have the
48:47 - default option as being late okay and
48:50 - once again I'm just going to change the
48:52 - text of this
48:53 - to be a dark color
48:56 - so wonderful and we also need to change
49:00 - some other texts it would seem like
49:02 - highlighted foreground
49:04 - just make it dark so there we go so now
49:07 - if we select one it should show up here
49:09 - and this is looking good and then we can
49:11 - select other ones too and of course we
49:14 - can change this as much as we want okay
49:18 - great let's move on the next thing I
49:21 - want to put in is the refund amount and
49:24 - I'm going to do so with a number input
49:26 - this time so just go ahead and select
49:29 - one of these we can put a number we can
49:31 - actually put currency so perhaps let's
49:33 - go ahead and put currency as I feel that
49:35 - makes more sense so just drag that in
49:37 - and this should say amount to be
49:40 - refunded so amount to refund
49:44 - [Music]
49:46 - and then people can just select the
49:49 - amount in U.S dollars okay so feel free
49:52 - to change the currency if you wish I'm
49:54 - happy working in American dollars for
49:56 - this project
49:57 - next I'm just going to do a little quick
49:59 - recap so a little summary
50:02 - so I'm just going to put refund summary
50:05 - like so
50:07 - okay
50:10 - and then I'm just going to under this
50:11 - refund summary
50:14 - just display the actual refund amount to
50:17 - refund amount
50:19 - and then whatever
50:21 - the number input or the currency input
50:25 - value is I want to just display here as
50:28 - a quick summary and let's put that in
50:30 - bold and I'm just going to put US
50:31 - dollars
50:32 - okay so there we go we can even have US
50:35 - dollars in here to make that bold too
50:39 - great and once we've kind of checked all
50:41 - this I just want to have a button so I'm
50:44 - going to add in a button to actually
50:46 - commit the refund so let the refund
50:49 - happen so let's just go ahead and put a
50:51 - button in here
50:53 - and put in a button let's call this
50:56 - refund and I'm just going to make it
50:58 - green okay so let me make it green
51:00 - perhaps let's make it a little bit
51:02 - lighter too
51:03 - so there we have our refund button and
51:05 - let's also change the text to be white
51:09 - wonderful so I feel this is done I'm
51:12 - quite happy with this okay
51:16 - great now let's use this information to
51:18 - compose an email so we can send an email
51:21 - as well as well as come at the refund
51:23 - and we'll be using the stripe API in
51:25 - order to hook this up to the refund
51:27 - button to actually make that refund
51:29 - happen back onto the charge but first
51:32 - like I said let's do the email so let's
51:34 - put on another container I'm just going
51:36 - to work in a container in here
51:38 - once again I'm just going to get rid of
51:40 - the heading so we don't need to show the
51:42 - header for this
51:44 - I'm going to search for a component
51:46 - called text input so I'm just going to
51:48 - use the text input folders just like so
51:51 - change the label to be at the top
51:55 - so I'm just going to change the position
51:57 - to be top and I'm just going to
51:59 - essentially change the label to be three
52:01 - compose email as step number three for
52:05 - the employee
52:06 - okay and let's also go ahead and put
52:10 - another input for the actual email so
52:13 - it's going to be a text input this time
52:15 - just going to whack that in here
52:17 - and this is just going to say email and
52:21 - we're gonna have a placeholder that just
52:24 - says info at test.com
52:27 - okay
52:29 - great
52:31 - so there we go I want to change the
52:32 - color of this container in fact this
52:34 - should probably be called email
52:36 - container so email can
52:38 - container and the color of this so I'm
52:42 - just going to make a really light red so
52:44 - just like so
52:46 - wonderful
52:48 - and now I don't want this to be Auto I
52:52 - want it to be fixed I'm just going to
52:53 - drag it so it's always the same length
52:56 - just like that
52:58 - okay let's move a little bit bigger and
53:00 - that means I can move this down to the
53:02 - bottom and I'm also going to have a big
53:04 - button so let's go ahead and create and
53:07 - add a button here
53:09 - and this button is going to span all the
53:11 - way here I'm going to change the text to
53:13 - send
53:15 - email
53:17 - and I'm going to change this to be red
53:19 - okay so all of this section is kind of
53:21 - red and in here well I'm actually going
53:24 - to write a JavaScript transformer for
53:27 - the email text
53:29 - because we're gonna have to write a few
53:31 - things in here so I'm going to change
53:33 - this to the email text
53:36 - and what I'm going to do is I'm going to
53:39 - define a message that we're going to
53:41 - return
53:42 - okay so my message is going to be I'm
53:44 - just going to use some back ticks for
53:45 - this
53:46 - dear and then we're going to get
53:50 - the get customer data
53:54 - contacts name
53:57 - for comma
54:00 - I am sorry that your order was and then
54:06 - we're gonna have a reason from our
54:09 - selected option so whatever we select so
54:12 - I'm going to actually get it from the
54:14 - select I'm going to call this the refund
54:18 - select
54:20 - input
54:21 - so now we can actually grab the refund
54:25 - select input and get it to Value so we
54:28 - can display it making sure that this is
54:31 - actually in three curly braces this time
54:35 - okay so just make sure that looks like
54:37 - that otherwise it won't get picked up
54:39 - properly and then let's put please rest
54:42 - assured that your refund of and then
54:47 - once again on a kind of basis double
54:50 - quality braces now so it should be three
54:52 - in total
54:53 - and we're gonna get the refund amount of
54:56 - the number input so currency one value
55:01 - US Dollars has been also authorized
55:07 - and shall be with you in one to five
55:11 - working days
55:17 - okay and then let's put have a wonderful
55:23 - day great so that is our full message
55:26 - and now let's go ahead and just return
55:28 - the message okay so that's what will be
55:31 - returned when we use the email text
55:34 - Transformer
55:36 - great so I think we actually need to
55:38 - space this out from the Kali braces like
55:40 - so so just like touch
55:43 - okay so now it's being picked up
55:46 - so let's save this and now all I'm going
55:49 - to do is in here under the default text
55:52 - I'm going to get the email text value
55:56 - great perhaps the text area is actually
55:59 - better for this so let's go ahead and do
56:01 - that
56:04 - and once again get the email text value
56:08 - okay so I think maybe that's a bit
56:10 - better
56:11 - so just go ahead and delete that text
56:13 - input and I'm also going to hard code
56:16 - Auto growth with content so I'm going to
56:19 - change this to be 14 just so it's a
56:21 - little bit bigger and just move it up
56:23 - here and I'll change this label to be
56:27 - three compost
56:29 - email
56:31 - wonderful
56:33 - so this is looking so so much better
56:38 - and just align that email to go to the
56:41 - right okay so that is looking good we
56:45 - could of course mess around with this as
56:47 - much as we want that part is totally up
56:49 - to us and our house let's just make that
56:51 - water
56:52 - great now let's get to hooking this up
56:56 - so the first thing I'm going to do is
56:58 - just go to stripe so if you haven't used
57:01 - stripe before please go ahead and sign
57:03 - up to the developer portal I'm just
57:06 - going to go ahead and sign in so just go
57:09 - ahead and sign in like that this is what
57:11 - it should look like once you've signed
57:13 - up and you are returning back as a user
57:16 - and under here so here's the URL that
57:20 - you should be able to see and the test
57:22 - data tab is where we're going to be
57:25 - doing our magic so under payments is
57:27 - where you can actually create a new
57:28 - payment and you will do so by selecting
57:31 - this here so for example I can make a
57:33 - fake payment of 340 pounds and then we
57:38 - can actually just go ahead and put in
57:40 - some test card information so if you go
57:43 - ahead and search for stripe test cards
57:46 - then this should come up with this
57:49 - documentation right here and we can
57:51 - essentially use this fake card number so
57:54 - copy that and then paste it in here and
57:57 - then just for anything in the future so
57:58 - I'm going to put 20 25 just like so and
58:01 - put one two three okay so the future
58:04 - will be 25. so oops we need a
58:07 - description so mobile phone as well as
58:10 - the ZIP code
58:12 - and click submit
58:14 - okay great and then if you view the
58:18 - details
58:19 - so just go ahead and view the detail you
58:22 - will see a fake charge ID
58:25 - so the ID that we need is this one right
58:29 - here this is the charge ID it starts
58:31 - with ch and if you look in here I've
58:33 - actually given the same charge ID to all
58:36 - of my sales orders okay so this charge
58:38 - ID is what we're going to be using to
58:40 - make a refund
58:41 - so hopefully you understand how I got
58:44 - that charge ID now so I'm just going to
58:46 - go ahead and go back to here
58:50 - and I'm going to create a new resource
58:52 - query and I'm just going to go ahead and
58:54 - create a new resource I'm just going to
58:56 - go back in here
58:58 - create new resource and look for stripe
59:03 - now I'm just going to call this
59:06 - Moby app
59:08 - stripe
59:10 - and then the API Key Well to get this
59:13 - we're going to have to find our API key
59:15 - right so let's go ahead and shut this
59:17 - down I'm going to search for API
59:20 - developer API keys and here is my key
59:25 - so this is the one I'm going to need I'm
59:27 - going to copy this one so copy it please
59:30 - go ahead and make your own of course and
59:33 - I am just going to under here paste that
59:36 - in and test the connection and
59:39 - connection successful I'm going to
59:41 - create a resource okay so great I'm
59:43 - going to go back to resources go back to
59:45 - my app hit refresh as we're going to
59:47 - need to load that new resource in here
59:50 - create a new resource query search for
59:54 - the Mobi app stripe resource and under
59:58 - here we're going to search for an
59:59 - operation that is going to be a post to
60:02 - a refund so I'm just going to search for
60:04 - that in here it's a post request I'm
60:07 - going to post a refund so that should
60:10 - probably be down here
60:12 - just make sure to find the correct one
60:14 - as there is a lot in here
60:16 - is this poster charges getting the
60:18 - charge refund
60:20 - okay and the charge well it's going to
60:23 - be we're going to go into the order
60:25 - table I'm going to get the selected row
60:28 - data and the charge ID okay so at the
60:32 - moment as it says demo all our charge
60:34 - IDs are the same but each one of these
60:36 - rules should really have a different
60:37 - charge ID in the real life and then
60:40 - we're gonna have to send through the
60:42 - amount we want to refund so we're going
60:44 - to use the currency one value so this
60:49 - components of value okay and we're just
60:52 - going to save that
60:53 - and I'm just going to rename this to
60:55 - post refund and to on success so we want
61:00 - to know that this works I'm going to add
61:02 - just a confetti okay so so confetti will
61:04 - be thrown in the air if this works so
61:07 - let's go ahead and try this out I'm just
61:10 - going to go ahead and select an order so
61:12 - the first one
61:14 - this is for this order and as you can
61:16 - see there's one item of quantity one and
61:19 - then the unit price so I'm just going to
61:21 - go ahead and refund let's say 100 from
61:24 - it and then of course we need to link
61:26 - this up to the query that we wrote so
61:29 - I'm just going to go ahead and on the
61:30 - button I'm going to add an event handler
61:33 - which is to control the query post
61:35 - refund so now let's go ahead and click
61:37 - that button and ta-da that has worked as
61:40 - the confetti has run and if you look
61:42 - down here you will see amazing so this
61:45 - is the response that we get
61:49 - let's go ahead and try another one so
61:51 - I'm just going to select perhaps this
61:52 - line
61:56 - so there we go we have the unit price of
62:00 - course this unit price does not
62:02 - correlate to the charge ID because we
62:04 - just put on a random number however I'm
62:06 - just showing you how this works and if I
62:09 - was to refund fifty dollars this time to
62:12 - whatever the charge ID has on it and
62:15 - refund
62:17 - Tada that has worked and you will see
62:19 - that a refund has been made to the same
62:22 - charge ID essentially like I said this
62:25 - is not realistic I'm using test data you
62:28 - will see that that has worked okay that
62:31 - is actually the total amount refunded
62:32 - now because I refunded 100 earlier I
62:35 - just 350 and I refunded 100 earlier when
62:38 - I was testing this out as well so that
62:40 - is the total amount refunded and that
62:42 - was the original amount that we had
62:44 - great
62:46 - so that is not working let's carry on
62:50 - so we've hooked this up to the stripe
62:52 - API next I want to hook this up to
62:55 - actually sending an email so let's do
62:57 - that next I'm just going to minimize all
62:59 - of this right now
63:01 - okay and we don't need this anymore
63:02 - either
63:04 - okay so to do this we're going to get
63:06 - another new resource this time I'm going
63:09 - to use the Gmail resource so let's go
63:12 - ahead and actually go in here and create
63:13 - that resource specifically for this
63:15 - project I'm going to create a new
63:18 - resource and then we're going to search
63:20 - for the
63:23 - SMTP resource let's call this Mobi
63:26 - mailing
63:31 - SMTP
63:33 - the host for this is going to be SMTP
63:39 - gmail.com the port is 465 and then I'm
63:43 - just going to use Anya at
63:45 - freecodecamp.org
63:48 - okay so this is the email that it's
63:50 - going to be sent out from essentially
63:51 - and that I'm gonna have to put in my
63:52 - password okay so just go ahead and do
63:55 - that too
63:57 - okay and just test the connection
64:00 - you might get some errors even though
64:02 - you're putting your correct password so
64:04 - just check your email and just confirm
64:06 - it with you and then just go ahead and
64:09 - allow access to less secure apps okay so
64:12 - that has now been done which means that
64:13 - if we go back in here now and try that
64:16 - again so test connection that should
64:18 - work okay so great that's how you would
64:22 - fix that let's go ahead and just remove
64:25 - all these and make sure to perhaps maybe
64:27 - if you want and of course if you don't
64:29 - feel safe doing it then you don't have
64:31 - to there are other options that you can
64:33 - use for mailing okay great so that has
64:37 - our work let's go back here and refresh
64:39 - this page so just reload it in order to
64:42 - get that latest resource and then on
64:45 - this query 10 I'm going to now use the
64:48 - movie
64:49 - mailing SMTP the two email well that's
64:53 - just going to be the text input too so
64:55 - let's get text input to Value uh the
65:00 - subject is going to be regarding order
65:03 - and then let's get the order table
65:06 - selected real data order ID and then the
65:10 - body is just going to be the text area
65:12 - one so let's get text area one value
65:15 - okay and once again on success let's
65:19 - just get up some confetti
65:21 - wonderful so that is good and let's save
65:25 - this as something so save that and let's
65:27 - rename this to send
65:29 - email and on click of this button we're
65:32 - going to trigger it so add an event
65:34 - handler send email and great so now
65:37 - let's test it out I'm just going to send
65:40 - this to Anya at three
65:44 - codecamp.org and send the email
65:47 - and wonderful that seems to have worked
65:50 - let's go check it out
65:52 - great there we go so that is working
65:56 - we've done everything that we needed to
65:58 - do for this employee app this is the
66:01 - final product I hope you've enjoyed
66:03 - coding this along with me and I hope
66:05 - you're ready for the second part of this
66:07 - course where we're going to learn how to
66:08 - make an admin panel where we not only
66:10 - read data but we also add data delete
66:13 - data and edit data too so let's do it
66:23 - okay so let's start building our admin
66:25 - app or in other words our Mobi Manager
66:27 - application as I've chosen to call it so
66:30 - let's go ahead and create that new app
66:32 - I'm going to choose to call it Moby
66:35 - Manager application just like so and go
66:40 - ahead and create that app so once again
66:43 - you'll be given this boilerplate default
66:46 - setup and I'm just going to delete this
66:49 - and I'm going to delete the query that
66:51 - we have here
66:52 - okay
66:53 - great so now that we have done that I
66:57 - want to have two main components
66:58 - essentially one is for viewing our
67:00 - employees as a list as well as deleting
67:03 - employees or editing their details if we
67:05 - wish and on the right I'm gonna have an
67:08 - inventory section where we can see all
67:10 - of our inventory as well as delete lines
67:13 - or add new lines okay so this is going
67:17 - to be a great example of how to add data
67:20 - delete data and edit data from our
67:23 - database so let's do it we of course
67:26 - going to be using the exact same
67:27 - database that the employee database is
67:30 - using as is frequently seen in companies
67:33 - so first off I'm just going to create a
67:36 - container so there we go that is our
67:39 - container and let's go ahead and call
67:42 - this
67:43 - employees just like so and I'm just
67:47 - gonna make the header of this container
67:50 - a different color so I'm just going to
67:52 - select
67:54 - this kind of reddish color right here
67:57 - and I'm just going to make the text
68:00 - White
68:01 - okay
68:02 - so there we go and now I'm going to drop
68:04 - in another container this time this is
68:07 - going to be for the inventory so let's
68:10 - go ahead and change this to say in
68:13 - then Tori
68:16 - making sure to spell it correctly and
68:18 - I'm going to change the header of this
68:21 - to also be a different color let's go
68:24 - with the greenish color this time that
68:28 - I've kind of pre-selected so I like this
68:31 - green right here
68:35 - okay and it's also make the font White
68:39 - wonderful
68:41 - so we did say that we want a list view
68:44 - here so let's go ahead and select the
68:47 - list view container just like so and
68:50 - just drop it in so I've dropped that in
68:52 - here we can of course rename these if we
68:55 - wish so let's go ahead and rename this
68:57 - to employee
69:00 - container
69:01 - and then we're gonna have this as
69:04 - inventory
69:08 - container but of course you don't have
69:10 - to that is just my choice now on the
69:13 - list view I'm going to actually rename
69:15 - this to view
69:16 - Glory
69:18 - list
69:20 - View
69:22 - okay
69:24 - and in here I'm just gonna have an image
69:26 - of the employee as well as their name so
69:30 - we're going to have their name here
69:32 - let's just go ahead and make this an H3
69:36 - element I think that should be fine with
69:38 - their name
69:41 - and then let's change the text of this
69:43 - to be a dark color just like so I'm just
69:47 - going to make it this dark grayish
69:49 - I'm also going to put in an icon so this
69:52 - icon is going to be to delete this
69:55 - employee so let's go ahead and find a
69:58 - delete icon
70:00 - so this one right here and then change
70:02 - the color of it
70:05 - to be once again a dark color
70:09 - and I'm just going to make this a lot
70:10 - smaller as well so there we go and I've
70:13 - got the name here we can make this as
70:15 - small as we wish
70:17 - okay
70:19 - so great and then let's have some text
70:21 - which is going to be for whatever the
70:24 - title is so we can have something like
70:27 - titled here and of course let's change
70:29 - the text again to a darker color
70:34 - just make it the same
70:36 - and then we've got the title another
70:38 - thing we can have is the employee ID so
70:41 - let's go ahead and change this to the
70:43 - employee ID and I'm just going to put
70:47 - this on the other side so I'm just going
70:49 - to drag it in here like so
70:51 - then we're gonna have the address
70:54 - so let's just change this address and
70:56 - make this in bold
71:09 - and then
71:10 - first line of the address and whatever
71:13 - really address related things we have in
71:16 - here so I think it was City we can of
71:18 - course change these uh then we have the
71:21 - region
71:22 - we also have the country and postcode so
71:25 - let's go ahead and mount that
71:27 - country
71:32 - postal code
71:39 - okay and perhapses also have a divider
71:43 - because why not just under the title
71:45 - just to make it a little bit more
71:46 - visually appealing as we want to space
71:48 - out the address from the title and then
71:51 - I'm also going to have a button here so
71:53 - that we can edit
71:55 - I'm gonna have this as edit and make it
71:57 - red so you can edit the improve you okay
72:01 - great so this is looking good I like the
72:04 - look of that now let's go ahead and get
72:07 - our data so I'm going to create a new
72:08 - resource query and this is going to be
72:10 - to get all the employees
72:13 - okay so this is going to be to our
72:16 - managed database
72:18 - just like so I'm going to select
72:23 - pull from
72:25 - employee and save and one
72:28 - okay great which means we can now
72:30 - populate this list with that so I'm
72:32 - actually going to get the employee data
72:35 - let's go by the employee ID
72:38 - and then length Okay as that should be
72:40 - unique so you've got three employees
72:42 - that looks good and now the picture here
72:45 - I'm going to once again go into get
72:48 - employee data
72:50 - get the photo and then Loop by passing
72:54 - through an eye and do the same for the
72:56 - name
72:58 - so once again get employee data we're
73:01 - going to get the first name this time
73:04 - and loop and then I'm just going to go
73:07 - to space and get the employee data last
73:11 - name to and again
73:14 - so actually we need to put the first one
73:15 - in Cali braces and finish that off and
73:17 - then open up our cardio braces again and
73:19 - then just put a space
73:21 - wonderful the title well we're just
73:24 - going to go into get employee data once
73:26 - more get the title and loop
73:29 - and then the employee ID
73:32 - let's go into the employee data get the
73:36 - amp ID and move
73:38 - okay so you're getting the juice now the
73:40 - first line of the address get employee
73:42 - data and then this time it's going to be
73:45 - the
73:46 - address
73:48 - and loop
73:50 - space that out the city
73:53 - is once again get employee's data City
73:56 - and loop
73:59 - this time the region so get employee
74:01 - data
74:03 - region and loop
74:06 - country you can of course display as
74:08 - much information or as little as you
74:10 - want that's part is totally up to you
74:12 - you have all the data to your disposal
74:14 - and finding the postal code so get
74:17 - employee data
74:18 - postal code
74:20 - and
74:21 - yep
74:23 - okay now I'm actually going to put in
74:25 - another divider so I can put the contact
74:27 - detail and the birthday of this employee
74:31 - because this is admin level stuff right
74:33 - we didn't want every employee to see it
74:35 - but
74:36 - as an admin you are privy to this
74:38 - information so I'm simply going to put
74:40 - the phone number so let's put phone and
74:43 - then go into the get employee data
74:48 - the phone and loop
74:52 - let's change this text as well
74:55 - to be a darker color making sure that's
74:58 - the same as the others
75:00 - and I'm just going to copy paste this
75:02 - and replace the second line with
75:06 - hired and then we're going to get into
75:08 - the
75:09 - higher date and then we probably want to
75:12 - pass this through the new day object so
75:14 - let's go ahead and do that and if our
75:16 - new day object
75:18 - and then get the method of two date
75:20 - string and just call it
75:22 - okay so then we've got the higher date
75:24 - and then let's have the and now let's
75:27 - have the birth date too so
75:30 - birthday and then this time we're gonna
75:33 - get the
75:34 - birth date
75:36 - great so that is our employees now that
75:40 - we have done that let's get you writing
75:43 - our query for updating an employee but
75:46 - to do that I'm actually going to show
75:48 - you how to make a modal so I'm just
75:51 - going to actually minimize this and
75:53 - instead of having a button I actually
75:55 - want to change this to be a Moodle so a
75:59 - modal pop-up so just go ahead and drag
76:01 - that in here like so it looks the same
76:03 - but it has different functionality so
76:05 - let's just change this to edit and I'm
76:08 - just going to make it a little bit
76:09 - smaller and once again just change the
76:11 - color to the red
76:13 - okay but this time when we click on this
76:16 - it will open up a module so let's go
76:18 - ahead and put what we want in this
76:19 - module and that is
76:22 - some text to let us know what this model
76:24 - is all about so I'm going to change this
76:26 - to say edit employee
76:31 - just like so
76:34 - and of course change this
76:37 - to be a darker color
76:41 - now let's have a text input because
76:44 - we're going to have text inputs we're
76:46 - also going to populate these text inputs
76:48 - with the data from this employee as a
76:50 - default okay so once again just change
76:53 - the text color and place it with the one
76:57 - we're using so our first label well this
77:01 - is just going to be the first name of
77:03 - the employee
77:05 - and as a default value we're going to go
77:08 - into the get employees data and get the
77:13 - first name
77:15 - and just Loop over it okay so that was
77:19 - really easy and the text is just going
77:23 - to be this dark of text so just like so
77:27 - so now let's copy and paste this and
77:29 - this time this is going to say last name
77:33 - so let's go up here I'm just going to
77:35 - change the state last name and the
77:38 - default text is going to be the last
77:40 - name okay so hopefully you'll get what
77:43 - we're doing here we're going to do the
77:44 - same for the title
77:46 - so title and then we're gonna have the
77:50 - title of the employee showing up here
77:52 - but then I'm gonna have the birth date
77:55 - so let's go ahead and put
77:57 - birth date this time I'm going to leave
77:59 - it like so therefore ever because I
78:02 - think it's quite important to
78:03 - differentiate between the two so there's
78:06 - our birth date and how it converts to
78:08 - that when we view on here but when we
78:09 - enter it it looks like this
78:11 - this is going to be the higher date so
78:14 - let's go ahead and pick out the higher
78:16 - date this time and the birth date so
78:18 - higher date from our database next we're
78:21 - going to have the address
78:23 - so I'm going to put a dress
78:25 - and then I'm going to pick out the
78:27 - address
78:29 - next we're going to have the city
78:32 - let's have the city
78:34 - pick out the city
78:37 - and then we're gonna have the region
78:40 - so pick out the region and have a label
78:44 - as region and then we're going to have a
78:47 - postal code
78:49 - so let's have a personal code
78:53 - and just change this Crystal
78:56 - go to the video that's what we want
79:01 - then we're just gonna have country
79:08 - and I'm just going to change the same
79:09 - country
79:13 - and then the phone number so phone
79:17 - let's change this to phone and then a
79:21 - URL so of course you probably would have
79:24 - a photo database for this but for the
79:26 - sake of this tutorial I'm just going to
79:28 - link to photos by URLs that are hosted
79:31 - online okay so that's what I've done
79:33 - here I've essentially got them from
79:35 - unsplash so I'm just going to get the
79:37 - photo
79:39 - this is going to say photo and lastly
79:42 - I'm just going to have the employee ID
79:44 - so this should be a number so let's go
79:46 - ahead and put number input so number
79:49 - input
79:51 - just like so stretch this out let's
79:54 - change the text
79:56 - so these contrast text here will change
79:59 - to be the same color as all the others
80:03 - and do it for the actual text too so
80:06 - there we go and I'm just going to change
80:08 - it to say employee ID
80:10 - so employee
80:13 - ID
80:14 - great and now I'm going to get a button
80:19 - so just put that in here like so and
80:22 - this is to update so put that in
80:26 - and change this to update and on the
80:29 - click of this we want to run a query
80:30 - right and that is to edit or update an
80:34 - employee so let's call this update
80:37 - employee and for this we're going to do
80:41 - it to the manage database and SQL that
80:44 - we're going to write for this is so
80:46 - we're gonna
80:47 - updates
80:50 - employee
80:53 - set
80:58 - first name equals and then we're gonna
81:01 - get now to find the text input it's text
81:04 - input one so that's what we're going to
81:06 - do we're going to get text text inputs
81:08 - one value then we're going to have to
81:13 - set last name and that is text input two
81:17 - so let's get text input choose value
81:20 - then we have to get the title and you
81:24 - guessed it that is going to be text
81:26 - input 3 and there it is test info 3's
81:29 - value then we get the birth date so
81:33 - birth date
81:36 - making sure that it's the correct one so
81:39 - text input value for the higher
81:42 - date
81:46 - which is text input 5 value
81:51 - the address
81:54 - which is
81:56 - six so let's find text input six value
82:00 - the city
82:03 - which is text input seven so let's go
82:06 - ahead and find that one
82:09 - the region
82:13 - which is text
82:15 - input H value
82:21 - the postal code
82:26 - which is nine so let's find that one
82:33 - the country
82:36 - just 10 so let's find text input 10
82:41 - and we've got the phone number which is
82:44 - 11.
82:45 - so text input value 11.
82:49 - nearly that photos next photo
82:54 - text input value 12 this time
82:58 - then we have the employee ID which is
83:00 - number input one so amp
83:03 - ID
83:05 - which is
83:06 - number input value one
83:11 - great and we search for it by the
83:14 - employee ID which is why we need to put
83:16 - where
83:19 - and ID equals
83:23 - and then we're going to get the
83:26 - employee but based off
83:29 - this right here
83:33 - so we could go into the get employees
83:36 - and loop I think a better way to do this
83:38 - would be to I'm just going to save this
83:40 - minimize that is to get this employee ID
83:43 - so in fact I'm going to split this out
83:46 - and I'm going to make another so I'm
83:49 - just gonna
83:50 - duplicate this
83:53 - and I'm just going to have the employee
83:55 - ID in its own text so just like so and
83:58 - move that here and I'm just going to
84:00 - have the label as a separate one okay so
84:03 - that's what I've done I'm going to move
84:04 - this up here now
84:09 - space that back up here
84:11 - and just select all of these and move
84:14 - them up a little bit too
84:17 - so now I can grab text 14
84:21 - 14
84:24 - value
84:25 - and search for the employee to update by
84:27 - that okay so now I'm going to save and
84:30 - what I'm going to do is actually
84:35 - now add an event handled to this but on
84:37 - the success of this I'm just going to
84:39 - add some confetti so that we know this
84:40 - has worked so save that and click on the
84:43 - button and I'll add a Transformer to an
84:45 - event handler and the query for this is
84:48 - going to be to update the employee so
84:50 - great so now let's check it out
84:53 - I'm just going to change Sarah's name to
84:56 - have an H at the end update
84:59 - and great so that has worked and next we
85:02 - need to actually refetch that data so on
85:06 - success we send some confetti and we
85:09 - also rerun the query to get employees
85:12 - okay so we're refreshing that data we're
85:15 - getting it again just run that
85:20 - and great so that has now been updated
85:22 - and Sarah Davis has actually dropped to
85:25 - the end okay wonderful so this is all
85:29 - looking
85:30 - great I'm really happy with this
85:34 - perhaps you can even give it some
85:35 - spacing in between each of these so I'm
85:37 - just going to add some spaces just like
85:40 - so you can do so or you can choose not
85:43 - to that part is totally up to you
85:47 - okay
85:48 - great
85:50 - so now to delete an employee so for this
85:53 - I'm actually going to write another
85:55 - query and that is going to be to delete
85:59 - employee just like so
86:02 - and to delete the employee I'm going to
86:05 - use the delete keyword
86:07 - from the employee database where the amp
86:11 - ID equals the text 14
86:16 - value so once again we're just using the
86:19 - value of this text right here okay so
86:22 - that's all I'm going to do and unsuccess
86:24 - once again I'm just going to add some
86:25 - confetti so you know this works and
86:27 - we're also going to have to refetch all
86:28 - that data so get employees again and
86:31 - save okay so now let's try and delete
86:34 - someone from here
86:40 - I'm just going to go ahead and attach
86:43 - that to this icon right here so add an
86:45 - event listener or delete employee so I'm
86:48 - just going to click on here let's get
86:50 - rid of this so you see what this looks
86:51 - like delete Dawn funk
86:53 - and great so don Funk is now deleted to
86:57 - Adam we would have to go back into our
86:59 - database and re-add that data okay but
87:03 - he's gone for now
87:07 - you can of course add a button to add
87:10 - new employees in here but we're just
87:12 - going under the assumption that this
87:14 - data is coming from elsewhere and we as
87:16 - managers just have the ability to edit
87:19 - the employee or delete them okay so that
87:23 - is the assumption that I am going under
87:25 - to add new things I'm going to show you
87:28 - how to do that in the inventory so once
87:30 - you gain that knowledge you can apply it
87:31 - to this section too so let's do it
87:35 - for the inventory however I'm going to
87:37 - write a new query which is to get
87:39 - inventory so get
87:41 - inventory just like so and this time I'm
87:45 - going to select
87:47 - all from
87:49 - product okay and save and run so just go
87:53 - ahead and do that and I'm going to get a
87:55 - table and as we are on this query it
87:58 - should populate with data from that
88:01 - query okay wonderful
88:03 - now again the text here is very light so
88:07 - just go ahead and change this I'm just
88:09 - gonna change it in here
88:12 - to be a darker color just like so
88:16 - and that looks good
88:18 - wonderful so now that we have that I'm
88:21 - going to show you how to create a custom
88:24 - column on this table so I'm just going
88:27 - to call this inventory
88:30 - table
88:33 - and I'm going to create a new column
88:35 - this is going to be to delete
88:39 - so hence I'm just going to call it
88:40 - delete
88:42 - and the column type is actually going to
88:44 - be a button so let's go ahead and search
88:46 - for the button just like so and the
88:49 - value is just going to say delete
88:51 - okay so great and we're going to have to
88:54 - add it on click however we need to write
88:55 - the query for that I'm just going to
88:57 - move this up so it's the first right
88:59 - here
89:00 - on the four next I'm also going to add
89:03 - an option to add an inventory item so
89:05 - once again I'm going to have a mode up
89:07 - so let's go ahead and search for the
89:09 - middle I'm just going to pop it in here
89:11 - I'm going to make this green
89:14 - so just like that and I'm going to
89:16 - change the text as maybe put this a
89:19 - little bit lighter
89:20 - to
89:22 - just the word add okay so just like that
89:26 - great and on this model well just like
89:29 - we did before I'm gonna have to create
89:31 - some inputs right but this time we're
89:33 - just going to leave them blank so let's
89:35 - go ahead and create I'm just going to
89:36 - drag in some text in here and this is
89:39 - going to say add a product so add a
89:42 - product
89:44 - just like so and then I'm just going to
89:47 - put in some inputs so this is going to
89:50 - be a let's have the ID first so let's
89:53 - put that in here I'm just going to drag
89:55 - that over let's not forget to change the
89:57 - text of this to be a darker color so I'm
90:00 - just going to whack that in here same
90:02 - for this one so let's go down here and
90:04 - change the contrast color the label as
90:08 - well as the actual text as well
90:11 - so there we go we have a label here
90:15 - that's meant to be for our ID so I'm
90:17 - just going to change this to say
90:20 - product ID and what is cool is that we
90:23 - can make this required so I can just go
90:26 - ahead and flip this and that is now
90:28 - required
90:30 - next let's have a text input I'm just
90:33 - going to drag that in here like so I'm
90:35 - just going to change the text of this
90:38 - so once again I'm just going to change
90:39 - it to be that
90:40 - and let's change the label of this I'm
90:43 - going to just change it to view
90:44 - product
90:46 - name
90:48 - just like so and I'm going to make this
90:50 - required
90:56 - I'm also going to have a photo URL so
90:59 - you can put on a photo of the product
91:01 - itself then we're also going to have
91:04 - units in stock
91:06 - so I'm just going to change say units in
91:10 - stock
91:12 - as well as a unit price which should be
91:15 - in currency so let's put in a currency
91:20 - section just like so
91:22 - so that we go and change the text of
91:25 - this as well
91:27 - and finally we're going to have a text
91:29 - area so look for a text area and just
91:33 - drag it in I'm going to change the label
91:44 - and this should say product description
91:50 - and great and then we're just going to
91:52 - have a button that will let us add to
91:54 - our database so once again I'm just
91:56 - going to put add just like that
91:59 - and let's write our queries so I'm going
92:02 - to write a new resource query this time
92:04 - to add
92:05 - product
92:08 - and this time well there should be a
92:10 - flashback to our data base that you saw
92:13 - on GitHub we're going to use insert into
92:15 - then we're going to find the table
92:17 - called products
92:20 - okay
92:21 - we're going to open up a parenthesis and
92:24 - describe the columns so we're going to
92:26 - have the product ID
92:28 - good product
92:30 - name making sure to spell exactly the
92:32 - same as I am the product this
92:37 - description
92:40 - the unit price
92:44 - units in stock
92:47 - Andy photo
92:55 - okay and then the values that we're
92:57 - going to insert which are the number
93:00 - input 2 value
93:04 - the text input 13 value
93:10 - the text area one value the currency one
93:15 - value
93:17 - I need text input 14 value
93:21 - great and on success we are going to
93:26 - let's get our on fatty
93:28 - and let's also rerun the data so get the
93:33 - inventory again and then let's also
93:36 - shot the components so control component
93:42 - and let's get the modal two and I just
93:44 - want to close it okay
93:47 - great so let's save that
93:49 - and now let's go ahead and try this out
93:52 - I'm going to put product four product
93:54 - name it's going to be test
93:58 - should change the text of this as well
94:00 - so just make that darker
94:02 - test mobile
94:06 - put in a random URL
94:11 - just copy the link address of that
94:14 - paste it in like so I'm just going to
94:16 - change the text of this two units in
94:19 - stock I'm going to put 12
94:21 - say this costs 400 dollars
94:24 - and then let's just put a test
94:29 - and of course let's not forget to add
94:30 - the units in stock which is number input
94:32 - three
94:33 - okay and now let's hook this up to an
94:37 - event handler so this is going to run
94:39 - the query add product and then it's
94:42 - going to minimize this so you can see
94:43 - hit add
94:46 - and great so that has worked we have got
94:49 - the inventory again and that has been
94:51 - added for us wonderful now one last
94:55 - thing is we want to run the delete query
94:57 - so once again let's get up our queries
95:00 - let's make a new query I'm going to call
95:02 - this delete
95:05 - product just like so and I'm going to
95:08 - delete
95:09 - from product where
95:14 - products ID equals I want to go into the
95:20 - inventory table so the inventory table
95:22 - selected wrote data product ID
95:26 - okay once again on success I'm going to
95:30 - show you some confetti so add that and
95:33 - I'm also going to rerun the data so
95:36 - control query
95:38 - select the query get inventory again
95:41 - great so those two are added let's click
95:44 - save and now let's link this up so the
95:47 - delete column on click we want to run a
95:50 - query and that is the delete
95:53 - product query right so now let's test it
95:58 - out I'm just going to delete the one we
95:59 - made
96:01 - and wonderful so great we can now add
96:06 - things delete things and update things
96:08 - in our database this is looking
96:11 - wonderful
96:17 - and now finally I'm just going to build
96:19 - a revenue tracker so all I'm going to do
96:22 - is just drag in another container just
96:24 - like so drag it over all the way to the
96:28 - end
96:29 - I'm going to call this Revenue tracker
96:32 - so let's go ahead and put Revenue
96:35 - tracker unless we get a fun of blue
96:37 - because why not so I'm just going to
96:40 - select the actual container and then the
96:43 - header I'm just going to select this
96:45 - blue color right here
96:47 - okay and now I'm going to put in a
96:49 - tabbed container so let's put it in
96:52 - another tabbed container just like this
96:55 - okay because we're going to have a table
96:56 - and then we're going to actually show
96:58 - some historical data too
97:01 - so I'm actually going to write a new
97:07 - query so resource query this time it's
97:09 - going to be a query Json with SQL and
97:13 - we're going to essentially select all
97:19 - from and then we are going to get the
97:23 - order detail but we're also going to use
97:25 - the method of format datas as array so
97:30 - make it into an array we're going to
97:32 - pass through the get order detail
97:39 - data but of course for this to work
97:41 - we're going to have to you guess it get
97:43 - the order detail so I'm just going to
97:45 - save this it won't work and let's create
97:47 - a new resource query called get order
97:51 - detail just making sure to spell it
97:53 - exactly the same way as we did
97:57 - and this is going to be once again to
97:58 - our manage database
98:00 - I'm going to select
98:03 - or prompt order
98:06 - detail and save and run
98:10 - okay so now back in here that's what
98:12 - we're getting and we're going to join it
98:14 - with
98:15 - the sales order so once again we're
98:18 - going to format data as array
98:21 - we're going to pass through get sales
98:24 - order
98:28 - so all of the sales orders so this one
98:30 - is easy just save that we did in the
98:32 - previous part of this tutorial we're
98:35 - going to get sales
98:37 - orders this is going to be a managed
98:41 - database I'm going to select all from
98:45 - sales order and save and run
98:49 - okay
98:51 - and then
98:54 - orders order ID we're going to match
98:57 - both by order ID
99:03 - okay and we save and run this
99:06 - ta-da we get all that data but it's been
99:10 - joined together I'm going to show you
99:11 - what it looks like in a table as I think
99:13 - that'd be better I'm going to call this
99:15 - joined Revenue
99:17 - data
99:23 - and then I'm just going to put in a
99:24 - table right here
99:26 - using the joint Revenue data okay
99:30 - so there we go
99:33 - and we can even add our own custom
99:36 - column if we wish so I'm going to go
99:39 - ahead and just call this
99:41 - total amount
99:44 - and then the value we're going to put in
99:45 - is just the current
99:47 - row quantity
99:50 - multiplied by the current row
99:54 - unit price
99:57 - okay and that will show us the total
100:00 - amount so the unit price multiplied by
100:02 - this quantity value
100:04 - okay
100:06 - great and we can even move that here
100:11 - so let's go ahead and rename this
100:13 - alltran
100:15 - sections and on view two well one of you
100:19 - two I want this to be historical data so
100:21 - I'm just going to put historical
100:24 - data and then let's delete view through
100:28 - so now under here what I'm gonna do is
100:32 - use the graph
100:37 - so just like so just drag that in
100:40 - like that
100:42 - and as the x-axis we're going to have
100:45 - the order date because it's going to be
100:47 - historical and then we're going to group
100:49 - by the ship country so let's find the
100:53 - ship country we're going to stack the
100:55 - group data and we're going to add a new
100:58 - data set
101:00 - so just double click on that and let's
101:02 - call this joined Revenue data and in
101:07 - here well we're going to format
101:11 - data as object this time we're going to
101:14 - pass through the joined Revenue data and
101:18 - we're going to get the
101:19 - unit price we're going to go into it and
101:22 - look for the
101:24 - unit
101:25 - price
101:27 - we're going to map
101:33 - whatever is in the array
101:35 - to
101:45 - the joined
101:48 - Revenue data
101:51 - quantity
101:53 - okay just making sure that we are
101:56 - actually including the amount of items
102:00 - that were purchased okay each time
102:04 - and just make sure to actually spell
102:06 - everything correctly okay so there we go
102:09 - that is what you need to do
102:15 - I'm just going to put order date on here
102:18 - on the x-axis let's make this a date the
102:22 - y-axis going to be the total revenue
102:30 - and now I'm just going to actually hide
102:32 - all the rest of these
102:36 - and wonderful we have done it
102:43 - okay so all our transactions
102:46 - and then our historical data
102:49 - and of course we can make this as big as
102:51 - small as we want but now we know exactly
102:53 - how much money was made on each day so
102:56 - on July the 9th for example
102:58 - 696 dollars were made and if we look in
103:01 - here on July the 9th
103:04 - that makes sense as we sold two items at
103:07 - the unit price of three four eight so
103:10 - the total amount was 696.
103:17 - okay and finally it's time for our last
103:20 - app again using the same database and
103:23 - that is to build a developer portal an
103:26 - internal tool for developers to
103:27 - essentially get endpoints to the Mobi
103:29 - database so let's do it I'm going to
103:32 - create a new app and this time I'm going
103:34 - to call it Mobi developer application
103:39 - just like so and hit that bottom again
103:42 - we're just going to delete all the
103:44 - default things that come with this app
103:48 - so I'm going to delete this query too
103:51 - now our developer portal I'm just going
103:54 - to actually drag in some text so that
103:55 - people know what this is I'm going to
103:57 - use an H1 element this time let's go
104:00 - ahead and do that and I'm just going to
104:01 - call this a developer portal just like
104:05 - so and just drag that over and then
104:08 - let's also just have a little subtitle
104:10 - so everyone knows what this is for
104:12 - this is going to say get and points to
104:17 - the
104:18 - Moby
104:20 - data base
104:24 - okay
104:26 - wonderful and for this I'm going to use
104:29 - another cool component that we haven't
104:32 - used yet and that is the collapsible so
104:35 - collapsible container so let's just go
104:38 - ahead and drag that in here
104:41 - and wonderful now this first container
104:44 - well let's just go ahead and select it
104:46 - I'm going to change the header of this
104:48 - to have this kind of bluish color that I
104:52 - have
104:53 - chosen
104:55 - okay just like that and the title of
104:57 - this is going to be for the end point to
104:59 - get all our sales orders so I'm just
105:01 - going to go ahead and change this to get
105:05 - sales
105:07 - orders
105:11 - just like so okay
105:14 - now in here I'm just going to drag in
105:16 - some text this is going to say
105:20 - I'm going to use markdown this time get
105:22 - sales orders API endpoint
105:29 - to
105:32 - retrieve all sales orders
105:38 - and next I'm going to create a table so
105:40 - I'm just going to drag in a table like
105:42 - so
105:46 - and instead of having this I'm just
105:48 - going to write my own data for this
105:50 - so I'm going to open up an array to
105:52 - create my table and then I'm just going
105:54 - to create my first object my first
105:57 - object is just going to have
105:59 - the method type and this is going to be
106:04 - a get
106:05 - request so I'm just going to put get as
106:08 - the HTTP request method and the end
106:11 - point
106:15 - is going to be
106:18 - sales
106:20 - making sure that's in quotes
106:26 - orders for example
106:29 - and then we're gonna have the action
106:33 - foreign
106:34 - okay so I'm just making what I imagine a
106:38 - developer portal might look like when it
106:41 - comes to viewing the different endpoints
106:43 - we can have to a database okay so of
106:46 - course this is just for demo purposes
106:49 - next we might be able to filter so I'm
106:52 - just going to add that and the endpoint
106:54 - is going to be sales orders and then
106:55 - we're going to pass through an ID as a
106:58 - parameter which is going to have a value
107:01 - okay and then let's just have a few more
107:04 - so this time we're going to have get
107:06 - pagination endpoint is going to be sales
107:09 - orders and then we're going to have
107:13 - the page for example two and a limit of
107:17 - 10.
107:20 - we could even make this just for
107:22 - anything to do with sales orders right
107:24 - so if we want to add to the sales order
107:26 - we could do that as well it would just
107:28 - go to the sales orders endpoint just
107:31 - like so just say well if you want to
107:34 - update so this would be a put request
107:37 - and then we'd have to actually find
107:39 - whichever order we want to
107:41 - update essentially and then we're also
107:44 - going to have a delete write which again
107:45 - we're going to have to supply the order
107:48 - that we want to delete
107:50 - great so that's what it would look like
107:52 - let's actually go ahead and change this
107:55 - to sales orders a API I'm going to
107:57 - retrieve add edit and delete sales
108:02 - orders
108:04 - right I think
108:06 - that's fine I'm happy with that
108:10 - okay and I'm just going to make this a
108:11 - little bit bigger so that everything
108:13 - fits
108:15 - I'm just going to make this a little bit
108:16 - bigger too so that everything
108:19 - that's
108:21 - great
108:22 - and I'm just gonna change this to get
108:25 - post
108:27 - put
108:29 - delete
108:31 - sales orders
108:33 - wonderful so I've said this as an action
108:35 - however I actually want to change this
108:37 - to a button so let's go ahead and do
108:40 - that here I'm going to change this to a
108:43 - button let's search for button just like
108:46 - so
108:47 - wonderful now what do I want to copy
108:49 - well I want to actually copy all of the
108:52 - data that we supposedly get back
108:55 - so I'm just gonna go ahead and do this
108:58 - by going on click copy to clipboard and
109:01 - next I'm just going to put in another
109:02 - component in here so let's just go ahead
109:04 - and make this a little bit smaller
109:06 - next up we're just going to drag in a
109:08 - table and we're going to populate this
109:10 - with our get sales order data so let's
109:13 - go ahead and write that query down here
109:15 - I'm going to create a query I'm going to
109:18 - call it get sales order data so get
109:20 - sales
109:23 - order data I'm going to make sure that
109:26 - this is to the manage database so the
109:28 - same one and I'm going to select all
109:31 - from
109:33 - sales order and save and run okay great
109:38 - now that means let's go ahead and get
109:41 - rid of that for now then we can populate
109:43 - this table with our get sales order data
109:47 - just like so so we've got the query and
109:49 - we've got the data that comes back from
109:50 - the query
109:52 - great I'm actually going to go ahead and
109:54 - put this in a tabbed container so I'm
109:57 - just dragging that over here and the
109:59 - first view that we're going to have is
110:01 - to see the sample
110:04 - response
110:07 - and let's have the second view as the
110:10 - table if someone wants to see the data
110:12 - as a table so I'm just going to go ahead
110:14 - and put table like that and then let's
110:17 - get rid of you three as we don't need it
110:20 - so now under table I'm just going to
110:22 - drag in this table just like so so that
110:24 - we can view that data
110:27 - just like so I'm just going to make it
110:29 - smaller
110:31 - just so it fits on the same line another
110:33 - sample responses
110:36 - I'm going to get the Json Explorer
110:39 - element so just like so put that in here
110:42 - and perhaps actually let's make this
110:44 - stretch out all the way as we can take
110:46 - up this Blank Space right here
110:51 - stretch that out to the bottom as well
110:54 - okay and the same for the table
111:00 - and now instead of having this sample
111:03 - data we're going to get rid of that
111:05 - and I'm going to show you how you can
111:07 - generate an API for demonstration
111:09 - purposes thanks to retool all you're
111:12 - going to do is just click on get started
111:14 - just like so and we're going to upload a
111:16 - CSV and to do this we're actually going
111:18 - to download this table right here so
111:21 - just go ahead and download the data as a
111:23 - CSV file and then drag it in here
111:28 - and hit next and there we go so now that
111:32 - we've got that
111:35 - I want you to click next
111:38 - and let's go ahead and call our API the
111:41 - same thing that we called it here says
111:43 - sales orders and everything will
111:45 - suddenly make sense and generate the API
111:48 - and great okay so you will see this
111:52 - which we've already written here okay so
111:56 - here we have all the end points to this
111:59 - generated API I'm just going to copy
112:02 - this endpoint URL go on the sample
112:05 - responses and
112:08 - create a new resource query this time we
112:10 - want to call it get sales orders
112:14 - or order data from rest API
112:20 - we're going to use the rest query I'm
112:23 - going to get from this endpoint URL and
112:27 - click save and run
112:28 - okay so great so now I can use that
112:32 - on the sample response so let's go ahead
112:35 - and use get sales order data from rest
112:37 - API data
112:39 - wonderful so that is looking good
112:43 - so now let's go ahead and link up these
112:46 - we're going to copy
112:48 - this URL so once again that endpoint and
112:51 - let's get rid of the sales order bit as
112:54 - that is the endpoint that we need to add
112:56 - in addition to this okay so then I'm
113:01 - just going to go into
113:03 - table one and get these selected row
113:08 - data
113:09 - endpoint okay and kind of add that all
113:12 - together but we would have to get rid of
113:14 - the dots dot dots but perhaps let's just
113:16 - do that as I think that looks quite cool
113:18 - so I'm just going to go ahead and delete
113:20 - these dot dots from here
113:24 - okay we could have course done this in
113:27 - JavaScript too but to save time I'm just
113:29 - going to delete them from this hard
113:31 - copied text
113:35 - wonderful
113:37 - so now if we click on one of these you
113:39 - will get the full URL
113:43 - great and then if we paste it in here
113:46 - like so
113:47 - we get the first sales order
113:51 - okay so this is just kind of a demo
113:53 - purposes of course this is not live data
113:55 - it's just what we generated from a CSV
113:58 - right here
114:01 - we can of course do this for all the
114:04 - major end points so you've got the sales
114:06 - orders let's go ahead and do customers
114:09 - as well so I'm just going to copy and
114:10 - paste the entire thing
114:12 - and then let's change the title of this
114:16 - to customers
114:19 - let's also change the color of this I'm
114:22 - just going to make a lighter green just
114:24 - like this color right here I have
114:28 - pre-picked out
114:33 - change what it says in here so this time
114:36 - let's have it say customers API endpoint
114:39 - retrieve add edit and delete
114:42 - customers and then of course we're gonna
114:44 - have to change them all in here too
114:47 - customers
114:49 - get
114:51 - customers
114:55 - it's also have to add a customer to the
114:58 - customers pagination
115:01 - customers
115:04 - edit a customer and customers
115:09 - and delete a customer from
115:13 - Custer
115:14 - verse okay so that is looking good and
115:18 - it's going to copy that but of course we
115:20 - need to get the right uh URL so I'm
115:23 - going to actually get rid of the data
115:25 - from this table so just go ahead and
115:28 - delete that let's get up
115:30 - our little dashboard for making queries
115:32 - and this time we're going to make
115:34 - another query it's going to be called
115:36 - get customers it's going to be to our
115:39 - manage database
115:41 - and we're going to select all
115:45 - from customer save and run
115:49 - Okay so we've got that so now we can use
115:51 - it here for our table get customers data
115:55 - just like so I'm going to minimizers at
115:58 - the bottom so we're getting all of our
116:00 - customers I'm going to download this
116:02 - again and it's generating new apis I'm
116:04 - just going to actually refresh this page
116:06 - and I'm going to drag that in here like
116:09 - so I'm also going to click next okay so
116:12 - those that is actually all of our
116:14 - customer data and then I'm going to
116:20 - click next again let's call our API
116:23 - customers generate the API and great so
116:27 - now let's copy that
116:31 - get our sample response
116:35 - and once again we're going to have to
116:37 - write a new query I'm going to call this
116:39 - get customers
116:42 - data
116:45 - from
116:48 - rest API we're going to
116:53 - like a rest query I'm going to get our
116:56 - customers save and run
116:59 - okay so now I'm going to minimize this
117:01 - and that is what I'm going to use for
117:03 - the value here get customer data from
117:07 - rest API data just like so and the
117:13 - action here well the action here is
117:15 - going to be to copy let's get our action
117:20 - table three customers okay so this is
117:24 - looking good that is table three so
117:27 - let's check it out let's copy this one
117:28 - and indeed if we are selecting the right
117:30 - row it does copy that to our clipboard
117:33 - okay great
117:36 - so we have to I'm just going to do one
117:39 - more but you kind of get the gist now so
117:41 - once more I'm just going to copy the
117:43 - whole thing and paste it like so this
117:46 - time I'm gonna have for employees
117:49 - let me change the color of this
117:53 - to be a kind of
117:55 - reddish color
117:58 - this time this is going to say
118:00 - pure use API I'm going to retrieve add
118:03 - edit and delete
118:05 - employees
118:09 - just get rid of that and once again I'm
118:12 - just going to make a query so resource
118:16 - query call this get employ use this is
118:20 - going to be to the managed database this
118:23 - time I'm going to select
118:27 - all from
118:29 - employee run this
118:33 - minimize this
118:35 - now in the table I'm going to get the
118:40 - data from get employees so just use get
118:43 - employees data and now we're going to
118:46 - you guessed it download this table go
118:49 - back here refresh this page and then I'm
118:52 - just going to drag in that table like so
118:55 - and once again I'm just going to hit
118:57 - next scroll down hit next and let's call
119:01 - this and flow yes
119:04 - and generate the API
119:06 - once again now let's copy this and now
119:10 - we're going to have to edit all the data
119:12 - in table five right here so let's just
119:15 - change this out to be
119:17 - employees and once again for here
119:20 - employees
119:24 - employees
119:28 - employees
119:32 - employees
119:35 - and employees
119:38 - okay so that's all done and on the
119:40 - action well that is fine and we are
119:43 - getting these selected row
119:46 - so in fact we might need to change this
119:48 - to be
119:49 - one end so let's go ahead and perhaps
119:52 - replace that
119:53 - just like so and then get rid of
119:56 - this
119:59 - and great so now let's test it out let's
120:02 - select this row right here let's copy
120:05 - this and paste it in and wonderful that
120:09 - seems to work we might have to change it
120:11 - for this API as I think we just use the
120:14 - other one so let's just see check if it
120:16 - works select the row copy this
120:19 - place it in okay that does not work we
120:22 - clearly use the wrong API let's see if
120:25 - we can
120:26 - get back our other one if I just go back
120:29 - that has not seemed to work so I'm just
120:30 - going to remake this API
120:33 - hit next
120:36 - hit next again
120:38 - call this customers generate the API
120:42 - copy this API and then in here on table
120:45 - three on the action just paste the whole
120:49 - thing like so and delete the customers
120:52 - pot okay so great so now let's select a
120:55 - row copy it paste it in
121:00 - and that now works we are getting all
121:04 - the customers
121:06 - great
121:07 - so there you go one last thing we're
121:10 - going to do and that is actually use
121:12 - this API so this one right here on the
121:15 - employees
121:16 - so once again it's just this one and
121:20 - then we're gonna get
121:21 - this
121:23 - make a new query so new resource query
121:27 - I'm going to call this get employees
121:32 - from rest API
121:36 - this is going to be to a rest query
121:40 - we're going to paste that in and just
121:42 - put in employees
121:45 - okay I'm safe and run
121:47 - great so that brings back our data and
121:50 - in here I'm just gonna use get
121:56 - employees data
122:01 - wonderful
122:04 - okay so you get that just now I'm not
122:07 - going to carry on and do all of them but
122:09 - we have our three right here for the
122:11 - developer portal and I'm happy with that
122:14 - okay and that's it I hope you've learned
122:18 - a lot in this tutorial and I really hope
122:21 - you've gained some skills and knowledge
122:23 - in building internal tools using low
122:25 - code Solutions