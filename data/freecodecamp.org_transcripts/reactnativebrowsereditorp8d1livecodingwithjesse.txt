00:07 - hey everybody welcome to live coding
00:09 - with jesse
00:10 - uh i'm jesse and
00:13 - i'm really sorry for the stream starting
00:15 - late i started up my computer and
00:20 - i was
00:22 - i couldn't connect to the internet
00:24 - uh it said there are no networks which i
00:27 - was connected on all my other devices so
00:28 - that was weird and then once i did get
00:31 - connected i realized that like i was
00:33 - logged out of everything and had to use
00:36 - like my two-factor authentication to get
00:38 - back in so
00:40 - sorry about that uh but now we're up and
00:42 - running and it's been a while so hey
00:46 - everyone
00:47 - uh sorry it's been so long
00:49 - things have been a little bit
00:51 - uh wild for me lately i've been speaking
00:54 - at some conferences and
00:55 - [Music]
00:57 - all the talks that i've done are
00:58 - available so
01:00 - um
01:02 - i guess if you want let me know i could
01:04 - give you some links to those
01:06 - uh also i bought a new house and moved
01:08 - in my new house and
01:10 - you already knew that because i i did
01:12 - get moved in before i did my last stream
01:14 - but i've been getting the old house
01:16 - ready to sell so i've been spending time
01:18 - over there cleaning and fixing and
01:21 - moving stuff so
01:23 - uh things have been wild
01:25 - also
01:26 - just want to mention this briefly since
01:29 - i know uh there's there's some of you
01:31 - that are also dealing with this
01:33 - my depression got a little bit rough
01:34 - lately and when i get real depressed
01:36 - then
01:37 - it's hard to do anything let alone live
01:40 - stream so
01:41 - um i want to be totally honest and say
01:43 - that was also part of the reason why i
01:45 - haven't been streaming lately just super
01:47 - hard to get up in the morning when
01:48 - you're like that you know
01:50 - but
01:52 - uh i think
01:53 - i'm i'm getting i'm getting better now
01:56 - so
01:57 - um
01:58 - so enough about me
01:59 - uh let's get let's get to this so we
02:02 - have a new project i'm really excited
02:04 - about this so let me tell
02:07 - uh
02:08 - whoa i got a lot of a lot of chats let
02:10 - me check let me say hello to everybody
02:12 - in the in the chat right now and just
02:14 - let you know that
02:16 - i will get to the chat and read all your
02:18 - comments and
02:20 - um
02:21 - and try to answer all your questions
02:23 - i'm going to take a little break a
02:25 - little later on and do that so
02:27 - if you're talking to me in the chat
02:30 - um
02:31 - i'm not ignoring you
02:33 - at least not for that long and i will
02:35 - get to it so just hang in there
02:37 - um okay so here's the back story behind
02:40 - this project because it was a little
02:41 - unexpected but i think it's going to be
02:43 - really awesome and helpful
02:46 - to the the whole free code camp
02:48 - community
02:50 - so
02:51 - um
02:53 - i was at um
02:56 - ndc minnesota so it's a norwegian
02:58 - developers conference in minnesota and
03:02 - i was lucky enough to be able to speak
03:04 - there uh and i gave a talk about react
03:07 - native and using react native web um
03:10 - like we were doing with with this last
03:12 - project that's going to be just on pause
03:14 - slightly so we're not i'm not abandoning
03:16 - that project i'm just pausing it to work
03:18 - on something which i think is
03:20 - more important right now
03:23 - so after the talk um
03:26 - gwen faraday who's a big contributor to
03:29 - free code camp
03:31 - came up to me and was was
03:34 - talking to me about react native web and
03:37 - she's been working on a react native
03:39 - curriculum for free code camp
03:41 - so if you're not
03:43 - if you haven't checked it out yet on
03:45 - freecodecamp.org
03:47 - there's
03:48 - a ton of lessons
03:50 - on
03:52 - all different types of coding it's it's
03:53 - primarily javascript based but you know
03:55 - you can learn a lot of stuff on there
03:58 - so anyway we already have a curriculum
04:01 - you know about react
04:02 - and redux
04:04 - but we don't have react native yet
04:06 - so
04:07 - she's already built out this amazing
04:09 - curriculum on react native but there's
04:12 - one problem
04:15 - you can't
04:16 - easily run react native in the browser
04:20 - editor so if you haven't seen it before
04:22 - let me just show you how this works
04:24 - i was going to explain it to you but now
04:26 - it seems like i could just show you and
04:29 - it would be
04:30 - so much better so
04:32 - uh let's see if it'll let me sign in
04:36 - quickly
04:38 - there we go
04:39 - all right so
04:40 - we'll go to the curriculum this is
04:43 - um
04:45 - available to everybody right so
04:47 - uh
04:48 - i want to see one that already has stuff
04:50 - written in it so we can see how it works
04:53 - so let me go
04:55 - and go back here and i'll just go to
05:00 - one that's really easy
05:06 - i think the cat app is here all right
05:08 - this one's super easy to understand
05:09 - hello world goes here so you write your
05:11 - code here you could write you know
05:14 - whatever you want let's put an h2 in
05:16 - here
05:20 - right so this part is your code editor
05:23 - in the middle and then over here it
05:25 - automatically shows what you're writing
05:28 - right now html is easy because this is a
05:30 - browser and browsers are on html and
05:33 - even regular react is easy
05:35 - because it's just a javascript framework
05:37 - it runs in
05:40 - in the browser but react native is
05:42 - different
05:43 - this react native is designed
05:45 - to run
05:46 - primarily on mobile devices
05:49 - right so
05:50 - you you can't just do this and have it
05:52 - work over here
05:54 - um so that was that was the issue so uh
05:58 - um
06:02 - gwen and i
06:04 - tried to work on that at the conference
06:06 - and see like
06:07 - could we get this to work and there
06:09 - didn't seem to be an easy way to do it
06:11 - so
06:14 - i said well why don't i try to do this
06:16 - as part of my live stream because i
06:18 - think this would be kind of a cool
06:20 - a cool thing to to work on
06:22 - uh because i think some of what we were
06:24 - doing in the last project will be
06:26 - helpful here namely react native web
06:29 - right so react native web takes react
06:31 - native code
06:32 - and changes it
06:34 - into code that the browser can read
06:37 - and that's exactly what we need here
06:40 - okay but there's one issue
06:43 - that
06:44 - that and that's the one we need to fix
06:46 - right is that with react native web
06:51 - sorry just noticed my camera was like
06:53 - cutting off my head but with react
06:55 - native web like we're running that on
06:57 - our local machine right we have like
06:59 - webpack going and all that so there's
07:02 - things that we have locally that we
07:04 - don't really have in the browser
07:07 - so that's the technical challenge that
07:09 - we need to get around
07:10 - all right so hopefully that wasn't too
07:13 - long of an intro and if it's still
07:15 - confusing i think it'll be less
07:17 - confusing once we get into it
07:20 - so
07:22 - fortunately
07:23 - someone else has already done
07:26 - a lot of the work for this
07:28 - there's an open source project
07:30 - out there
07:31 - that we can start with and try to figure
07:34 - out how we can adapt it to work with
07:36 - free code camp
07:38 - so that's the place that i think we
07:40 - should start
07:41 - so
07:42 - let me get the urls react native web
07:45 - player
07:46 - all right
07:47 - so
07:49 - i'm gonna go
07:56 - react native
08:00 - web
08:02 - oops
08:04 - player okay so there is a project on
08:08 - github
08:09 - let's view the license real quick just
08:11 - to make sure bsd
08:14 - are committed
08:16 - saying the above copyright noticed
08:27 - all right
08:29 - um
08:34 - so what we're gonna do
08:36 - so i was just checking out out the
08:38 - license sorry i didn't explain that i
08:39 - wanted to make sure the license was not
08:41 - restricting us in terms of
08:43 - like not being able to use this so this
08:45 - is
08:46 - bsd license redistribution use in source
08:49 - and binary forms with or without
08:51 - modification are permitted
08:53 - provide the following conditions are met
08:55 - so we got to keep the copyright notice
09:03 - and
09:04 - [Music]
09:05 - documentation
09:09 - all right so we can't use facebook
09:12 - or it's contributors to endorse or
09:13 - promote this
09:15 - which
09:16 - it's actually kind of odd that it has
09:18 - facebook in it but anyway
09:20 - um
09:22 - that's that's the license so we should
09:25 - be good we just got to make sure we uh
09:27 - provide attribution right
09:30 - so
09:32 - let me show you what this project does
09:38 - uh let me make this bigger
09:43 - all right so
09:45 - on the left
09:46 - we have react native
09:48 - okay so um we're bringing in
09:52 - all these from react native so we're
09:55 - importing some components
09:58 - and we're using those react native
09:59 - components which normally would not work
10:02 - uh you know by default on the web
10:05 - but over here
10:06 - we could see that it's it's showing up
10:09 - and it's changing see um
10:11 - like on the fly is changing
10:13 - i just deleted some characters and it
10:15 - changes this is exactly what we want
10:18 - okay
10:20 - um the only issue is the way we
10:22 - implement this
10:24 - is it's basically like a whole package
10:27 - right so it wouldn't fit in with the
10:30 - free code camp ui right the way it's set
10:34 - up now but we we want it to fit in like
10:35 - that okay so
10:40 - my
10:41 - there's two options given here we can
10:43 - import that
10:45 - web player
10:46 - like
10:48 - if we're using react we just do the
10:49 - import otherwise we can do an iframe
10:53 - so i have two approaches here to make
10:56 - this work the first one is
10:59 - maybe we can try to import this and work
11:02 - it into the ui
11:04 - and see it if that works like see if we
11:08 - can override styles and things like that
11:10 - enough to make this work
11:13 - i'd say that's probably the faster way
11:15 - the easier way to to do it
11:18 - the other way which we may have to do
11:22 - is look at how this is happening
11:25 - right and kind of pull out the core
11:29 - functionality from this
11:31 - uh from this repo
11:35 - and put it into free code camp
11:38 - so
11:38 - those are my approaches if anybody has
11:40 - any other ideas that i'm missing here
11:42 - let me know
11:44 - but
11:45 - for now i think
11:48 - we got we at least have a plan
11:50 - okay
11:52 - um i do want to let you know like how
11:54 - this basically like this the key to this
11:57 - working is um
12:03 - basically like uh
12:04 - a web worker and let me see where it's
12:07 - at
12:13 - oh no that's
12:15 - sorry i don't know why i opened the desk
12:25 - so i'm not going to go through here i
12:28 - i don't know which file is it the bible
12:30 - worker yeah this is it i was right in
12:33 - front of me the whole time
12:34 - okay so
12:37 - a web worker is like a
12:40 - it's a file
12:42 - in um
12:44 - it's a javascript file that runs in your
12:45 - browser but it's almost like
12:48 - a separate
12:51 - i don't know if this is exactly the
12:52 - right turn but term but it's almost like
12:54 - a separate thread
12:56 - right
12:56 - uh that you can run things in so like
12:59 - you send stuff to this file it can do
13:02 - computations and send it back uh to the
13:04 - browser
13:06 - so
13:07 - i believe that
13:10 - this type of thing right being able to
13:12 - transform things on the fly this is the
13:14 - key uh to how this is working
13:16 - right
13:18 - so if we need to pull functionality out
13:20 - it's gonna be
13:22 - some of this stuff okay but like i said
13:24 - hopefully we can get it to work the
13:26 - other way around
13:27 - uh so now let's check out the actual
13:29 - free code cam repo
13:36 - actually let's check out
13:38 - gwen's
13:49 - all right let's check this out
13:50 - so
13:55 - so gwen faraday
13:57 - has her own fork of free code camp where
13:59 - she's been working on this
14:05 - and that's where we're going to work
14:07 - from because that's where she has all
14:08 - her her updated stuff so let me make
14:10 - sure i'm there i'm on the right branch
14:14 - so let me um
14:18 - once i get it to the right place i'll
14:19 - copy and paste the link so you all can
14:21 - can check it out as well
14:22 - and uh i'll check let me copy and paste
14:25 - the react native web player link for you
14:27 - too
14:28 - i'm gonna have to update the description
14:30 - to this video with all the links later
14:32 - on so
14:33 - hopefully i don't forget to do that for
14:35 - everyone watching later
14:39 - okay there is a react native
14:43 - branch here
14:46 - so react native challenges
14:50 - all right so there's two of them let me
14:51 - make sure this is ready
14:56 - yeah react native challenges
15:00 - okay
15:03 - so i think the react native challenges
15:06 - branch is where we want to go
15:08 - go off of
15:10 - okay and
15:14 - so let's see
15:16 - here is the full link
15:18 - i'm gonna give about maybe like four
15:20 - more minutes and then i'm gonna take a
15:22 - break and answer some questions uh in
15:24 - the chat
15:29 - okay
15:31 - so let's find
15:33 - our curriculum
15:35 - and
15:36 - challenges
15:40 - go english
15:41 - and
15:43 - these are the react native challenges
15:47 - or
15:48 - i'm sorry this is these are all the
15:50 - challenges and we're gonna find the
15:52 - react native ones okay so this is a
15:55 - separate
15:56 - um
15:57 - at least right now it's organized like
15:59 - as this whole separate section so it's
16:01 - section 10.
16:05 - and let's find one class component
16:09 - all right let's find this
16:10 - class component one let's see if this
16:12 - would be a good one to
16:15 - try
16:16 - okay
16:24 - all right yeah this one seems like
16:28 - it's i want to i want to do a simple
16:30 - challenge so that
16:34 - like basically we don't run the risk of
16:38 - messing things up because we mess up the
16:40 - challenge right i want it to be as
16:42 - simple as possible um
16:45 - so this is just
16:47 - rendering a basic component right a
16:49 - basic class component okay
16:54 - all right
16:55 - and we can
16:58 - run this so we'll definitely need to run
17:02 - this project so i'm gonna open this up
17:05 - it's in another tab so we don't lose
17:07 - this one
17:10 - and
17:11 - hopefully
17:14 - we'll go to the directions here
17:16 - when you go to um work on like a repo
17:20 - you've never worked on before
17:22 - you should
17:25 - always
17:26 - check out
17:27 - the documentation first like the readme
17:29 - and there's usually some sort of
17:33 - instructions on how to get started did i
17:35 - miss the contributing
17:40 - there we go
17:42 - here's the contributing so
17:49 - we're gonna have to we're gonna make a
17:52 - fork of this
17:53 - right
17:56 - we'll create a new branch
17:58 - okay so this is going to be a little bit
17:59 - weird because we're we're creating a
18:01 - fork of a fork essentially
18:03 - so like then we're going to submit the
18:05 - pull request to gwen
18:08 - and then if it works for her then
18:12 - it'll be incorporated into her stuff and
18:13 - then she can submit the pull request to
18:15 - free code cam so this is like one extra
18:18 - step from normally doing it but
18:21 - uh
18:23 - that's that's how we have to do it uh
18:25 - for now
18:27 - okay
18:29 - uh so name the branch oh this is is um
18:34 - pretty basic etiquette for uh for pull
18:36 - requests
18:37 - this is what i really wanted to see
18:40 - um
18:41 - was
18:43 - i'm feeling so okay so we're using gulp
18:45 - and bower
18:47 - all right
18:53 - okay and we're gonna have to do the
18:58 - the database
19:03 - okay there's gonna be some cool setup
19:04 - that we'll have to go through here
19:10 - all right but that's fine
19:12 - all right step one
19:14 - let's
19:16 - create a fork
19:17 - oh so we can
19:24 - let's leave this open
19:26 - the contributor guide
19:28 - let's create the fork here
19:31 - make sure we're in staging
19:36 - let's fork that
19:39 - hey i already forgot three code camp
19:42 - all right then
19:45 - i don't want a fork
19:48 - i don't think i forked it from glenn's
19:49 - though
19:50 - actually this this might be a good um
19:56 - i don't know if you can fork based on
19:58 - the branch or if i could pull down a
20:00 - branch
20:08 - how about i delete mine
20:13 - let's do that so
20:15 - oops
20:24 - i forked this a long time ago i don't
20:26 - even want to mess with updating it so
20:28 - i'm just going to delete it
20:40 - all right danger zone delete
20:50 - all right
20:56 - now let's fork this
21:01 - whoops
21:02 - i'm still on jesse i go free code camp
21:04 - but i don't afford that there we go
21:10 - all right there we go
21:13 - all right so while that's working now is
21:16 - a great time for me to stop well i guess
21:18 - that
21:19 - i guess that was really fast but i do
21:22 - want to go back to the chat so i said i
21:23 - would stop and go back to the chat so
21:25 - i'm going to stop now
21:27 - answer some questions in the chat and
21:28 - then we'll get back to this next step is
21:31 - um
21:32 - actually pulling this down and getting
21:33 - it running
21:34 - and
21:36 - yeah i did i did want to verify that
21:39 - we have that see because this one this
21:41 - is for from gwen's and not directly from
21:43 - free code camp so we have all of gwen's
21:46 - stuff
21:50 - okay
21:55 - all right there's a lot of people saying
21:57 - hello so hey everybody
22:00 - good to see you this morning
22:02 - i'm gonna skip through a lot of the
22:03 - hellos though because there's there's so
22:05 - many of them just gonna give one big
22:07 - hello to everyone
22:14 - um
22:40 - um aziz says good luck with your
22:41 - depression uh thank you i appreciate
22:43 - that
22:44 - um
22:46 - yeah i'm uh
22:47 - i actually
22:50 - im
22:51 - possibly got into a study like a
22:56 - depression study uh on using new
22:59 - treatment techniques so i'm really
23:01 - excited about that
23:04 - it's with
23:06 - the university of uh pittsburgh and
23:09 - um
23:11 - the hospital system here is uh upmc
23:15 - um so it's about like using
23:18 - neurofeedback from like an mri to help
23:20 - like train your brain so
23:23 - that's really cool hopefully that that
23:25 - goes well but
23:26 - uh
23:31 - elias is asking what language we use uh
23:33 - javascript we use javascript
23:37 - uh kevin says if you want to develop a
23:39 - web ecommerce project what do you
23:41 - recommend what language
23:43 - um
23:46 - for a web ecommerce project if if you
23:50 - want to do it from scratch
23:51 - then
23:52 - probably should write it
23:54 - in
23:55 - i would recommend full stack javascript
23:58 - because
23:59 - then you only have to learn one language
24:01 - but
24:02 - if i if you're doing e-commerce i
24:04 - recommend maybe trying to take a look at
24:06 - some of the already developed solutions
24:09 - to that
24:11 - um so
24:13 - in like wordpress land woocommerce is
24:15 - where it's at but i've i've heard of uh
24:19 - i haven't used but i've heard of other
24:20 - stuff if you're not in wordpress land i
24:23 - think like magento is um
24:26 - like a pre-packaged ecommerce thing so i
24:29 - haven't done e-commerce in a long time
24:30 - so i'm not sure what the latest stuff is
24:33 - but
24:34 - um
24:35 - if you if it's a green field project
24:37 - meaning like if you're doing it all from
24:38 - scratch then
24:40 - i recommend
24:42 - javascript
24:52 - kellen says i want some of that smoothie
24:53 - being made uh i didn't i have headphones
24:56 - on with music playing uh so i didn't
24:59 - hear it but i'm i'm right below the
25:01 - kitchen i'm in the basement and my wife
25:04 - was probably making smoothies so
25:07 - yes you probably heard the blender going
25:10 - i have plans to um try to do like a real
25:14 - office and sound proof it but
25:16 - like right now
25:18 - until i sell my old house i'm not doing
25:21 - any uh major improvements or purchases
25:24 - uh until we get that sold because i'm
25:26 - paying for two houses right now and it's
25:29 - uh
25:30 - that's kind of crazy so it works but
25:33 - only if i don't spend a lot of money on
25:35 - other stuff
25:40 - among says uh have you tried expo web
25:44 - um i haven't tried the latest release
25:47 - but i did get it working before it like
25:49 - officially became
25:51 - the in the last expo release
25:53 - uh so
25:55 - i have tried it but not the latest
25:57 - version i guess uh i'm really excited
25:59 - about it though
26:01 - i want to try to update
26:03 - what my project that at my
26:06 - my regular job uh uses it
26:09 - so i want to try to update to the latest
26:11 - version of expo hopefully sometime this
26:13 - week and and try that out
26:21 - okay i'm almost through all the
26:23 - questions i think
26:25 - and then we'll go back and and
26:27 - try to get this running locally
26:33 - lazy noob says i recently made a classic
26:35 - game using c
26:37 - oh that's really cool
26:39 - um
26:41 - i don't i've
26:43 - i've done very little in c
26:53 - oh jason says how's it going jesse i
26:55 - said hey to you at star trek in between
26:57 - sessions hey how's it going that's
26:59 - awesome um star trek was a great
27:02 - conference right like um
27:05 - if you've never heard of star trek
27:06 - before uh and you're able to go to
27:08 - conferences in the us i definitely
27:10 - recommend it it's in columbus ohio
27:14 - they hold it at a movie theater
27:16 - so all the talks are in in the theaters
27:19 - uh which is
27:21 - i never thought about it before but a
27:22 - movie theater is actually a great venue
27:25 - for a conference because it's it's
27:26 - already set up
27:28 - for people have comfortable seating
27:30 - there are big screens like it's it's
27:33 - perfect um
27:35 - but it was a great conference and
27:37 - there um we all watched avengers the new
27:40 - avengers after
27:45 - apologies for the for the yawns
27:50 - okay
27:53 - uh yale brown says is that the chrome
27:55 - extension to use uh github dark theme it
27:58 - is yeah so if you notice my github
28:00 - probably looks different than uh the
28:02 - normal github
28:03 - uh normally github is has like a white
28:05 - background uh but i'm using this github
28:09 - dark
28:10 - theme so uh i'm using tamper monkey so
28:14 - tamper monkey is a chrome plugin that
28:16 - lets you run uh javascript
28:20 - uh on a website so basically it'll just
28:22 - like match the url of the website and
28:24 - say like when you're at this url
28:26 - run this javascript
28:28 - so i'm using a pre-made script called
28:32 - github dark
28:34 - and then
28:35 - i'm pairing that with tamper monkey to
28:38 - be able to run it
28:40 - and so every time tamper monkey detects
28:42 - that i'm on github it runs the github
28:45 - dark script and it changes
28:47 - the theme for github
28:50 - um
28:51 - you don't have to use pre-made stuff you
28:53 - could build your own scripts like it'll
28:55 - it'll work but
28:56 - i prefer dark mode
28:59 - so that's why my github is dark
29:11 - uh tehrang says how do i practice front
29:13 - end i've learned basics but i need
29:14 - projects with solutions so i can force
29:17 - my brain to the actual goal or how the
29:19 - project should have been made in a
29:21 - better way any resources
29:23 - um
29:26 - i guess uh
29:33 - wow
29:34 - so sorry
29:35 - off the top of my head i'm not sure so
29:37 - you need
29:39 - you want like
29:41 - a whole project that you can work on but
29:44 - then also compare to
29:47 - that project like solved already
29:54 - i don't know that there's
29:55 - trying to think if there is a resource
29:57 - that does just that
29:58 - i'm not sure
30:02 - now you could always look at people's
30:04 - existing projects and then just try to
30:06 - build them over again right like
30:08 - look at their site or their app or
30:10 - whatever
30:12 - and say if i was going to build this
30:14 - like how would i do it you build it and
30:16 - then look at their repo so it'd have to
30:18 - be open source project
30:20 - but then you could look at their repo
30:21 - and see like
30:24 - you know what did you do differently
30:25 - what did they do
30:26 - so
30:27 - i mean it could probably work with
30:29 - anything as long as it's open source
30:34 - let's see all right almost done a few
30:37 - more questions
30:39 - uh
30:40 - joanna says why are you using javascript
30:43 - and no typescript
30:44 - um
30:45 - i
30:46 - i think typestrict is cool i just
30:48 - haven't taken the time to really learn
30:50 - it yet also
30:52 - for live streams
30:54 - i kind of would rather use
30:57 - if i can
31:00 - use like plain javascript
31:03 - so that it's less of a barrier to entry
31:05 - for people who are trying to understand
31:07 - the videos
31:09 - but i'm nothing against typescript like
31:11 - i said i just haven't really taken the
31:12 - time to use it
31:15 - for those of you who maybe aren't
31:16 - familiar with typescript it is um
31:20 - like something that you add on to
31:22 - javascript that makes javascript like a
31:24 - strongly typed language
31:27 - so for instance like
31:29 - in javascript i can declare a variable
31:33 - and i don't have to say what type that
31:35 - variable is like it could be anything
31:37 - and it could change right so it could be
31:38 - a string a number an array an object
31:42 - right
31:43 - in in other languages and at least in
31:45 - some other languages you have to say
31:47 - what it is so like in c sharp i can't
31:50 - just say my variable is whatever i have
31:53 - to say
31:54 - like i have to declare it as that so i
31:56 - can declare it as an int if i want an
31:58 - integer and i declare a string if i want
32:00 - a string and then that thing can only be
32:02 - a string or an integer
32:04 - right it
32:05 - so you have to declare what type it is
32:08 - what type of data it is right when you
32:10 - declare that that variable
32:13 - right so
32:15 - there are some
32:18 - um
32:19 - doing it like that kind of helps prevent
32:21 - bugs
32:22 - so
32:24 - it does have its advantages
32:27 - so that
32:29 - that's what typescript does for
32:30 - javascript there are other advantages of
32:32 - typescript
32:33 - at the core that's what typescript
32:40 - does uh innocent heart says i know html
32:44 - and python uh what next language do you
32:46 - prefer uh i would recommend javascript
32:48 - right if if you know html
32:51 - uh then javascript is a great way to
32:56 - do more with html
33:06 - and month says enough now let's get into
33:08 - coding all right the coding is is coming
33:11 - um
33:12 - let's see
33:14 - so rob says
33:15 - you skipped you just skipped my question
33:18 - all right i didn't see it where's
33:20 - saurov's question
33:23 - sarah
33:25 - why is this editor used for
33:28 - is that the question
33:30 - oh
33:31 - i don't understand
33:33 - exactly what the question is so rob so
33:37 - which which editor
33:39 - the free code camp won
33:44 - maybe let me know what you meant by that
33:46 - and i would definitely answer it
33:49 - all right so now that we have a fork of
33:51 - this so basically now that we fork this
33:54 - it means like we own this fork of the
33:56 - repository we can push to it right so
33:58 - we're not directly
33:59 - making changes to somebody else's repo
34:02 - right
34:03 - um
34:07 - let's see
34:08 - sorry says native react
34:11 - um
34:12 - react native is um a way to use
34:15 - javascript to build
34:17 - mobile apps
34:19 - so what we're trying to do sarov is
34:22 - making in browser editor
34:25 - so
34:26 - you can
34:28 - while you're in a normal web browser
34:30 - type in react native code and then see
34:33 - what it would look like
34:35 - displayed on the screen
34:37 - okay so we wanted to have the same
34:39 - behavior as
34:41 - the other free code camp lessons
34:45 - but with react native
34:50 - okay
34:52 - all right so i'm going to take a break
34:53 - from the chat for a little bit and get
34:54 - back to this
34:56 - uh so we want to clone this repo so we
35:00 - go to clone i have ssh set up so i'm
35:03 - going to use the ssh
35:05 - if you don't you can use https
35:08 - right
35:11 - and now i'm going to go to
35:12 - [Music]
35:15 - where's my
35:17 - i guess i'll go to vs code
35:19 - whoops and it opened on a different
35:21 - screen
35:22 - let me open this
35:25 - new window
35:34 - so trying to get this over on the right
35:36 - screen here
35:42 - that's weird
35:51 - there we go
35:53 - okay
35:54 - so i got on this screen so
35:57 - i have my terminal open in vs code
36:01 - hopefully make that a little bit bigger
36:03 - and that'll be easier to read
36:05 - all right
36:07 - see where we're at
36:09 - where the heck am i
36:10 - um
36:21 - all right i'm gonna wait to apply the
36:23 - latest updates here
36:29 - my documents
36:31 - i should have a projects folder
36:35 - but i guess i don't
36:39 - so let's make it so
36:42 - we're gonna do make directory
36:46 - projects
36:47 - projects cannot create directory project
36:49 - file exists where is it i did not miss
36:51 - it
36:52 - or i didn't see it projects
36:55 - all right cd
37:02 - that's really weird
37:05 - am i missing that like
37:10 - maybe the list was just
37:12 - longer and it cut it off anyway
37:14 - all right now we're in the projects
37:16 - folder you can see i have uh only one
37:19 - project in there it's a react native
37:21 - pop-up menu
37:24 - so now we're going to do a clone
37:27 - and
37:29 - we paste in that link that we just got
37:31 - from github
37:33 - uh-oh
37:35 - clone sorry
37:41 - so now
37:43 - everything that repo is getting copied
37:45 - over it's a pretty big repo so this
37:47 - might take
37:50 - little bit longer than your your average
37:52 - repository
37:55 - but it shouldn't be too bad
37:57 - yeah
38:02 - oh this comp sci guy says it's in the
38:04 - second column oh i didn't even see this
38:07 - column over there wow good good look
38:10 - i was totally not
38:13 - maybe because these were so long i
38:15 - didn't even notice this column
38:18 - good look
38:24 - all right awesome so now that that's
38:27 - that that's there you can see we we have
38:29 - free code camp now
38:32 - so we can go into the free code camera
38:34 - repository
38:35 - so you have all this stuff in here
38:38 - so
38:39 - since we have our package json
38:42 - we can install that but let's let's make
38:45 - sure we're doing it right so let's go to
38:47 - our
38:49 - um
38:50 - whoops
38:52 - i'm not going
38:53 - there we go
38:55 - let's go to our contributing
38:58 - and take our steps
39:04 - so we can get started
39:07 - we do want to run an npm install and
39:09 - there we go this is what i was looking
39:10 - for we need to install gulp
39:12 - and bower globally all right so let's
39:15 - get that npm install running
39:18 - right away though
39:22 - there we go
39:26 - all right npm install is going to take
39:27 - everything that's in our package json
39:29 - file
39:31 - and it's going to install it all okay
39:46 - okay
39:52 - and i can probably open another window
39:54 - here and do the install for the other
39:56 - ones right so
39:59 - we're gonna do
40:01 - gulp
40:03 - and bower
40:15 - gulp
40:23 - great and then now
40:24 - let's do
40:30 - so uh gulp is like a task runner
40:32 - uh before webpack became big gulp was
40:36 - kind of the thing
40:38 - to let you do things like minify your
40:40 - files run a um like a local server like
40:44 - on localhost
40:48 - like run babble
40:50 - concatenate things minify
40:57 - all right
40:59 - so we should have gulp and bower
41:01 - installed globally
41:03 - now we can do a power install
41:08 - and
41:11 - getting close to everything set up
41:15 - so let's do
41:20 - power install
41:23 - oops
41:25 - no bower.json present
41:28 - uh oh
41:32 - hmm
41:36 - is there supposed to be a power.json
41:49 - no there's a bower rc
41:53 - uh it's probably power components all
41:56 - right so that looks like it gets
42:00 - power json yeah there should be a
42:01 - bower.json
42:03 - why don't we have that all right let's
42:05 - double check make sure
42:07 - oh you know what i'm not in the right
42:08 - directory that's why
42:10 - if you see this one open me up in the uh
42:13 - parent directory so see the
42:16 - projects
42:22 - free code cam
42:23 - there we go now we can run a power
42:26 - install
42:45 - it says
42:46 - uh rem ramas
42:49 - ramasamy says video is not viewable on
42:51 - mobile
42:52 - is anybody else having trouble on mobile
42:54 - and why is it not viewable is the font
42:56 - too small um i can
43:00 - i can fix that for sure just let me know
43:03 - uh tutoring says hey i subbed uh awesome
43:07 - thank you
43:09 - oh and by the way so since the last time
43:11 - i streamed free code camp's youtube
43:13 - channel
43:15 - hit one million subscribers
43:17 - which is amazing so thank you all so
43:19 - much for subscribing and i'm a
43:21 - subscriber too to three code cam
43:23 - i just think that's insane um when i
43:26 - started streaming i think we had like
43:27 - 150 000
43:29 - uh so it is
43:32 - the growth has just been amazing i'm so
43:35 - happy that uh
43:37 - you know so many people are using free
43:40 - code camp and learning how to code
43:43 - um
43:44 - okay it looks like the font is too small
43:46 - on mobile i could probably bump it up
43:48 - like maybe one more
43:50 - before it starts to get crazy
43:53 - oh you know what actually i see my face
43:55 - is covering this up so i'm not gonna do
43:57 - anything on this side anymore i'm gonna
43:58 - do all my commands over here on the left
44:00 - side so
44:02 - um
44:04 - hopefully the little bit bigger font
44:06 - works as well i'm just afraid if i go
44:08 - too big then
44:10 - there just won't be enough on the screen
44:12 - even make sense
44:15 - um
44:16 - all right cool so
44:19 - i think that's everything installed that
44:21 - we need
44:23 - let's go back to our
44:25 - contributing file
44:29 - contributors guide
44:31 - that was weird i don't know how i got
44:33 - all the way back up to the top
44:35 - okay so
44:38 - private environment videos create a copy
44:39 - of the sample m and name it as
44:42 - dot um populated with necessary api keys
44:44 - and secrets
44:47 - all right so not all the keys are
44:49 - required to run the app locally that's
44:50 - good because i don't have any of the
44:52 - keys
45:06 - all right i don't think i'll hopefully i
45:08 - don't need all these services like
45:09 - mandrill is for sending emails
45:13 - i doubt i need that right we're not
45:15 - sending emails
45:17 - [Music]
45:19 - we'll probably need the stuff
45:41 - okay
45:43 - all right so we need
45:45 - let's see let's check out our
45:50 - environment variables
45:52 - file
45:55 - oops
45:56 - let's go here let's open this up
46:02 - so since we're in the free code camp
46:04 - projects folder
46:06 - we could just type in code and then a
46:08 - period and that opens up our project
46:11 - like with the folder there
46:15 - let's update it later
46:17 - space like we have we're already in
46:19 - there we have everything if i open up a
46:21 - new terminal it's going to be
46:23 - um already in that folder so i like
46:26 - doing it like that i could have like
46:27 - tried to navigate directly
46:29 - um through there like through the ui but
46:32 - i prefer to just
46:35 - do it on the command line
46:38 - let's do in uh
46:39 - well let's view the terminal so we have
46:42 - our terminal here and see we start out
46:44 - already in our free code camp project
46:47 - that's nice because then they don't have
46:48 - the mistake i made earlier where i tried
46:50 - to run bower from the wrong folder
46:54 - okay so
46:57 - we want there should be an example
47:01 - environment variable
47:02 - there we go so our sample m
47:06 - um
47:07 - not right now
47:13 - okay so we have a lot of environment
47:16 - variable stuff here that i don't think
47:18 - we'll need
47:19 - right so bloggers
47:21 - yeah
47:22 - trello
47:24 - yeah i do not think we would need any of
47:26 - this stuff
47:28 - hopefully now um
47:30 - this is probably all for the um login
47:33 - like login with google logging with
47:34 - github stuff
47:37 - um and then if you do sign up like
47:40 - you get emails so it's
47:43 - uh what the only thing i think we'll
47:45 - really need is this
47:52 - and i'm hoping that
47:56 - this is this will be default for when we
47:59 - start this up so let's make a
48:02 - dot m file for our environment variables
48:06 - so we can
48:07 - make a new file like this and just call
48:09 - it env
48:12 - and now i'm going to paste
48:14 - that
48:15 - and
48:16 - hope that i don't need the other things
48:18 - just to get this to run
48:21 - now uh looks like we need to
48:24 - we need a command to run this
48:28 - where are we at back here
48:30 - let's see
48:31 - okay so we're gonna start the
48:33 - server
48:35 - mongod
48:36 - and then we're going to do npm run only
48:38 - once
48:41 - i'm going to copy that
48:42 - and then we'll start it with gulp so
48:45 - first things first let's start the
48:46 - server then it says to start it in a new
48:50 - terminal so let's create a second one
48:53 - make this a little bigger
48:55 - i'm going to do it here on this side
48:57 - since we probably won't need to look at
48:58 - it and that way it doesn't matter if my
49:00 - face is covering it up
49:04 - my son my son ambrose just walked by hey
49:07 - ambrose
49:09 - all right
49:10 - i'm doing a live stream buddy
49:13 - okay
49:14 - all right he's he's decided he's going
49:17 - to ride his scooter down here
49:18 - okay
49:20 - come on go d
49:24 - oh no i need don't i
49:30 - actually let's see
49:33 - i'm just going to check the package json
49:35 - for a second and see if we have
49:38 - commands
49:41 - that will help us with this
49:54 - i guess i'm gonna have to install
49:58 - all right that makes sense obviously
50:01 - i need to install logo
50:03 - i should have uh
50:05 - expected that
50:06 - you're able to log in
50:09 - which you can ignore you'll be able to
50:11 - log in if you may get these keys here
50:15 - probably should check out
50:19 - yeah i don't want that i don't want
50:21 - those keys um
50:29 - tv
50:31 - windows
50:43 - there we go
50:46 - okay
50:47 - so you notice i skipped by like the
50:49 - youtube video and the blog
50:52 - i do recommend like if you're going to
50:54 - install a tool like check out that tools
50:57 - documentation their official
50:58 - documentation first
51:01 - uh if if that doesn't work or if it's
51:03 - confusing then you can go to blogs and
51:05 - videos but
51:06 - you're going to get the most up-to-date
51:08 - information from the documentation so uh
51:11 - check check that out
51:16 - all right let's see
51:35 - come on man
51:38 - i wonder if i can install with
51:40 - chocolatey
51:51 - chocolatey
52:01 - chocolatey is a package manager
52:08 - for windows it's like uh
52:12 - homebrew for
52:13 - mac
52:15 - and it'd be like your like app get stuff
52:18 - for like uh linux
52:20 - uh chuckle install
52:22 - mongodb yeah let's try that because
52:24 - that's gonna be easier than going
52:26 - through an install wizard
52:51 - well you know what i need to run it from
52:56 - run administrator
52:58 - let's not continue
53:01 - let's do command line from administrator
53:06 - how do we get this
53:17 - so
53:18 - so it came up on my other screen but
53:20 - basically all i'm doing is selecting the
53:21 - command prompt run as administrator
53:26 - let me pull this over so now i'm going
53:28 - to do
53:30 - choco
53:32 - c-o
53:34 - c-h-o-c-o
53:37 - install
53:40 - mongodb
53:43 - so run as administrator
53:46 - on
53:46 - um windows is like
53:51 - sudo for mac or linux
53:54 - yes
53:57 - i'm not really reading that stuff
53:59 - probably should have but i'm just saying
54:01 - yes
54:07 - sure
54:12 - mongodb is a what's called a nosql
54:15 - database so um
54:18 - databases generally fall into two
54:20 - categories one of two categories either
54:23 - sql based
54:24 - uh sql right or
54:28 - no sql or no sequel
54:30 - what's up buddy
54:35 - oh
54:37 - whiskey
54:39 - don't eat that diaper
54:42 - i guess it's too late he pretty much
54:44 - tore it up i don't know why there was a
54:46 - diaper sitting down here though
54:48 - shoot okay sorry so um my my son my my
54:51 - four-year-old just told me that this dog
54:54 - that we're watching for a couple of
54:55 - weeks it just ate a diaper so
54:59 - i didn't realize this doug was eating a
55:01 - diaper right next to me
55:05 - uh
55:06 - anyway it's a pretty good dog though
55:08 - actually
55:10 - uh
55:11 - he follows me around everywhere and um
55:15 - he's become my best friend
55:17 - so
55:18 - i like the dog but
55:20 - this dog does love to eat diapers and my
55:22 - two-year-old still wears diapers at
55:24 - night so
55:26 - there are frequently diapers around
55:30 - all right
55:32 - almost ready with this install
55:36 - hey ambrose the people on the live
55:38 - stream said hi
55:40 - hi
55:41 - he says hi
55:43 - okay
55:44 - i guess
55:45 - this is almost done
55:47 - yay all right cool
55:49 - so
55:50 - hopefully
55:52 - we can use the command right away
55:56 - nope we may have to do this in a
55:58 - different
56:00 - terminal so
56:08 - let's do this real quick let's shut that
56:10 - down
56:12 - and
56:14 - oops um
56:21 - let's open this up again and see if we
56:23 - can
56:26 - sometimes when you install something new
56:28 - you need to restart it
56:31 - before you can use any new commands
56:42 - is that it is that the command no it's
56:43 - not
56:45 - what the heck
56:50 - i think i missed something
56:56 - let me check the chat because
56:59 - maybe one of you saw what i missed
57:18 - okay i don't think anybody said anything
57:20 - about it so let me try i'm gonna get
57:23 - back to the chat
57:25 - in just a minute
57:27 - but i do want to at least try to run
57:29 - this
57:32 - all right so
57:34 - start the server
57:37 - did it say anything about
57:39 - oh prerequisites mongodb
57:45 - i totally missed that as the
57:46 - prerequisite
58:03 - learn
58:29 - all right hopefully
58:31 - this uh package
58:34 - worked
58:36 - package parameters
58:44 - and we don't have to install some other
58:46 - way
58:53 - uh
58:54 - how to run
58:57 - longer db
58:58 - on
59:01 - airline
59:11 - i don't want to install it how do i
59:13 - start mongodb there we go how do we
59:15 - start mongodb from windows
59:18 - yeah yeah okay
59:25 - enter the command on go d
59:29 - okay so d is the command even on
59:31 - windows
59:46 - okay
59:51 - download mongodb
59:54 - all right
59:58 - let me s
60:00 - it says here they need to create a
60:02 - folder and then go into that folder
60:06 - go to bin
60:08 - servers we're going to bend
60:10 - this is interesting
60:14 - i think i need to go into where manga
60:17 - was installed
60:18 - and run that
60:26 - okay
60:40 - did i install another terminal program i
60:43 - thought i installed a
60:45 - a terminal
60:48 - for windows
60:51 - i guess not
60:56 - oh okay
60:57 - shout out on discount or you can add a
60:59 - location in the path
61:02 - okay comps that guy saying where did
61:03 - choco install all right let's
61:06 - let's see if it
61:08 - program data
61:10 - db
61:12 - okay
61:14 - so you're thinking maybe if we go into
61:15 - that directory we can run it from there
61:29 - okay
61:49 - seen the hat program files in here
62:05 - program data sorry
62:07 - program data
62:10 - and where the heck is program data
62:18 - c program data all right so we need to
62:20 - go back out then
62:39 - there we go to the
62:42 - program data
62:44 - now we should see
62:47 - longer db what do we have in there
62:49 - data log
62:52 - um
62:57 - let's see
62:58 - nope
63:14 - whoa okay
63:22 - nope
63:39 - temp chan says i guess the binaries are
63:42 - installed inside c program data
63:44 - chocolaty
63:52 - all right
64:02 - okay
64:06 - all right if you're not familiar at all
64:07 - with the command line uh cd is how we
64:11 - traverse directories so it change
64:13 - directory
64:14 - let's see what we have here
64:16 - choco
64:28 - to get a bin
64:43 - i don't know where all the chocolatey
64:44 - stuff is
64:50 - um
64:51 - tony says if you get an error you have
64:53 - not created a collection
64:56 - um
64:57 - go to bin and try okay
65:04 - hmm
65:09 - comp size guy says it's interesting that
65:11 - although vs code is a microsoft product
65:13 - they still use a bash terminal you can
65:15 - uh bash is an option so i've set bash as
65:18 - my default
65:19 - but i don't think it's the default on
65:21 - windows
65:24 - um you know the only other thing i could
65:26 - think of is shutting down vs code
65:28 - completely and reopening
65:31 - i it has happened to me frequently
65:36 - yeah don't save
65:37 - that
65:38 - when i install something new i can't use
65:41 - it with vs code until
65:46 - um
65:50 - until i restart
65:52 - battle math
65:53 - nope we need
65:56 - free cocaine
66:05 - okay yeah i definitely can't
66:07 - do that here
66:09 - what do we have
66:29 - try running okay
66:34 - no not
66:38 - all right
66:40 - let's see i think
66:42 - maybe
66:45 - now would be a good point to finish
66:46 - answering the questions and then just
66:48 - finish up with the show and then i can
66:51 - try to debug this
66:53 - um
66:54 - let's see all right here's one
66:57 - temp chan says can you try c program
67:00 - files mongodb server 3.2 bin
67:05 - try that all right
67:07 - let's try that
67:08 - i'm going to open another one so i don't
67:10 - totally lose my place
67:12 - um
67:20 - [Music]
67:26 - program files
67:28 - okay
67:29 - do you want to do program files or was
67:31 - it
67:33 - program data all right we'll go to
67:35 - program data
67:36 - um
67:38 - or i'm sorry program files
67:55 - do we have
67:58 - we do have one go in there
68:33 - all right andreas says you have to add
68:35 - the binaries
68:36 - file at path system okay
68:40 - [Music]
68:42 - so should be able to do
68:50 - here access try not mongodb uh i
68:53 - did try
68:55 - temp chan says because you're using bash
68:57 - i have okay then i have to try it
69:00 - right there
69:07 - did i try as well on here
69:12 - i wanna go the
69:15 - longer okay yeah i do try on there
69:18 - bash needs to have mongo.exe okay
69:34 - all right i'm gonna copy that so we have
69:36 - it and let's check our
69:39 - one level up from system 32
69:43 - it says you may have to use the command
69:45 - prompt to use mongodb not the bash
69:51 - i was going to see if i could add this
69:52 - to path
69:54 - um
70:02 - um
70:10 - now what is it cd
70:13 - or sorry lsa that's what i wanted
70:16 - i'm able to see everything
70:38 - okay so temp chan is saying bash don't
70:40 - work so i do i have to go back to the
70:41 - command prompt then
70:50 - okay
70:59 - i just wanted to check that
71:02 - how do i change directories in the
71:04 - command prompt
71:09 - it's been so long since i've used the
71:12 - regular command prompt i do not remember
71:19 - it's cd
71:23 - directory
71:29 - why did that not work for me last time
71:33 - oh ls is what didn't work for me sorry
71:38 - all
71:38 - right cd
71:40 - um
71:43 - i should be able to cd into
71:45 - program files
71:50 - let's go
71:52 - db
71:53 - and then
71:55 - um
71:56 - what was the next one server
72:00 - 4.0
72:03 - bin
72:04 - okay
72:10 - okay it's directory
72:12 - yeah all right cool that works
72:29 - all right well we got something now
72:32 - we guessed something
72:34 - it was an error but it was something
72:39 - data is not found
72:41 - terminating
72:47 - okay cool
72:55 - what's this
73:07 - welcome to the show
73:09 - all right so if i just type it
73:11 - does the show
73:18 - um
73:29 - all right looks like comps i guess says
73:34 - sent a link
73:37 - need to create a data folder
73:41 - docs
73:43 - says now run
73:45 - dot exe
74:00 - uh okay
74:04 - babash gupta says i believe it's done
74:06 - now we can minimize and continue
74:10 - uh i guess it's worth a shot right
74:13 - i mean so it's something is running
74:15 - right
74:18 - uh
74:19 - let's double check
74:25 - only these here we'll start by default
74:27 - see i think that
74:29 - what we wanted to run was the
74:32 - mongod and it was supposed to run this
74:35 - on the port
74:37 - 27017
74:41 - but the problem is it it aired out
74:44 - and i think because we didn't have
74:47 - any like database file
74:50 - um
74:52 - but i think we we do inside
75:05 - okay so we need to give it a path the
75:06 - database path
75:08 - okay
75:10 - then create data in the bin
75:18 - i need a data location for the
75:20 - server
75:22 - okay
75:23 - all right let me try this i'm gonna try
75:25 - copy and paste in this command
75:29 - from the chat
75:33 - um
75:43 - there we go
75:44 - i like that it said bye to me okay
75:51 - oops
75:55 - i guess it did not work when i tried to
75:57 - copy that command
76:04 - nah it's still shut down data could not
76:06 - be found
76:07 - i have maybe i'd need to create it first
76:14 - okay so we need to make the directory
76:16 - first
76:18 - i guess i could do that from this one if
76:20 - it's open
76:22 - so i'm already on c
76:23 - and i could do
76:26 - make directory
76:32 - data and
76:39 - data.db
76:41 - all right
76:42 - so now we made some directories let's
76:45 - run this again
76:49 - dang it
76:50 - data director you see data not found
76:54 - why is it not found did we not just make
76:56 - that directory
77:00 - i am gonna have to end the stream soon
77:02 - and uh and work so
77:05 - we have limited amount of time
77:08 - but
77:10 - let's see let's verify
77:16 - that we did actually just make this
77:17 - right yes we have data
77:21 - and what is my
77:23 - present working oh that's because i'm
77:25 - not in the seizure i thought i was
77:26 - already out i guess not
77:30 - there we go
77:39 - i was hoping i could do them both but i
77:41 - guess not
77:47 - all right my mistake let's see if it
77:50 - works now
77:55 - it worked
78:00 - it worked right
78:02 - oh temp chan noticed that i made it in
78:04 - the wrong directory sorry i didn't see
78:05 - that that was definitely the problem
78:08 - okay cool so this worked
78:15 - cool all right
78:20 - all right that was pretty sweet we got
78:21 - it working
78:23 - let's go back here and see what the next
78:25 - step is
78:31 - oh this is the npm run only once to seed
78:35 - the database
78:46 - actually let's change the branch while
78:48 - we're here get check out
78:51 - um
78:53 - react native challenges
78:56 - there we go
79:01 - ah come on
79:08 - no package lock json i don't care i
79:10 - don't
79:11 - um
79:18 - just gonna get rid of it
79:20 - and then now we'll go
79:27 - there we go
79:29 - i want to make sure we're on the right
79:31 - uh branch before i see this database
79:33 - because
79:34 - i don't want to miss stuff
79:37 - okay
79:39 - um
79:40 - let me see if there's some more
79:41 - questions to answer before i got to
79:42 - finish this stream up
79:47 - i guess i can run this now
79:54 - no
79:56 - all right
80:00 - something did not work
80:09 - hmm
80:15 - wait
80:16 - we don't have that script anymore
80:36 - i think uh on this branch a lot
80:40 - more changed than i thought
80:43 - i don't think we even have that
80:46 - right
80:51 - yeah we don't have that anymore
80:53 - dang it
80:54 - all right
80:55 - now's a great time i think to stop
80:58 - though because
81:00 - we um
81:02 - yeah there's definitely some new stuff
81:04 - here
81:05 - we got like lerna on here
81:07 - okay
81:11 - i think now is a good time to stop and
81:14 - answer questions finish up next time
81:17 - we'll continue on we'll see the database
81:19 - we'll get this running and then we can
81:20 - work on it but
81:22 - not a bad session we had a lot of nice
81:25 - troubleshooting here
81:30 - which
81:33 - troubleshooting is a big part of
81:36 - being a developer an engineer
81:38 - so
81:40 - uh it may seem like we didn't do a lot
81:43 - of coding but what we did do is actually
81:45 - a lot of what my job is like uh it says
81:50 - you you have to figure stuff like this
81:52 - out so
81:53 - i would say it's realistic in terms of
81:56 - live coding
81:59 - which is why i wanted to do this show
82:00 - anyway i wanted it to be a realistic
82:02 - look at
82:03 - what i do
82:06 - all right
82:07 - i think i found where i left off
82:09 - apologies if i end up missing a question
82:12 - here
82:30 - wanted recommendations for programming
82:32 - glasses uh because the the eyes the blue
82:35 - light hurts
82:37 - hurts his eyes so i do you have these
82:40 - programming glasses unfortunately i
82:42 - don't remember
82:43 - maybe see i got the case here there's
82:46 - sixes
82:47 - c-y-x-u-s
82:50 - is the brand that i have here i like
82:52 - these ones
82:53 - i have another pair at work i can't
82:55 - remember what brand they are but they're
82:56 - they're smaller like the frames are the
82:59 - lenses are smaller so i actually prefer
83:01 - these because the big lenses seem to
83:03 - block out
83:04 - more light but i think that's not really
83:07 - a brand thing that's more of just a
83:08 - style so i recommend getting a lens and
83:12 - frame style that has like big lenses
83:15 - to block out more
83:16 - i do like these
83:18 - at home it's not as big of a deal
83:20 - because i can control the lighting
83:22 - better but at work there's such a glare
83:24 - on the screen and so many like
83:26 - fluorescent lights
83:28 - that i do get a headache if i don't wear
83:30 - my
83:30 - blue light
83:32 - blocking glasses
83:42 - let's see
83:43 - uh i'm gonna skip some of the comments
83:45 - so sorry for not reading out all the
83:46 - comments but i just have to get to work
83:48 - so i'm going to try to just get to the
83:50 - questions
83:54 - um crack says where can i learn in
83:56 - codecamp.org go to
83:58 - freecodecamp.org
84:00 - and check out the curriculum
84:02 - and that's where all the lessons are
84:09 - um
84:10 - like someone has an in
84:12 - pronounceable name so uh so wondering if
84:15 - you could help me give me some idea to
84:17 - start a project this web dab i'm stuck
84:19 - on learning um oh there's
84:22 - there's so many different things you
84:24 - could do to start a project uh it's hard
84:26 - to say um there are websites that have
84:29 - lists of like potential projects you
84:31 - could do so i would try searching
84:34 - for those websites
84:36 - and then you'll get a ton of good ideas
84:38 - for projects
84:40 - i don't know what the urls are for those
84:41 - sites off the top of my head
84:43 - unfortunately but it shouldn't be too
84:45 - hard to find
84:49 - um
84:51 - on
84:52 - on
84:53 - wagba
84:55 - collins i'm really sorry i mispronounced
84:57 - your name let me know how i should
84:59 - pronounce it says uh is there a terminal
85:01 - plug-in for sublime i don't really know
85:03 - because i've never used sublime any
85:05 - sublime users out there know of a
85:07 - terminal plug-in
85:15 - uh joshua wolff asks what language is
85:17 - react native in or is that the framework
85:19 - yeah react native is a framework but um
85:22 - the language is javascript
85:32 - zac asks if this was the baby math game
85:34 - still no we're taking a break from that
85:36 - to work on something for the free code
85:38 - camp curriculum but we're going to come
85:39 - back to that
85:40 - and uh fortunately there's been um the
85:44 - part of the reason why i felt kind of
85:46 - stuck with the
85:48 - baby math game was um
85:50 - i wanted to use expo to run it on a
85:53 - mobile device but expo didn't support
85:56 - react hooks yet
85:57 - but the latest version of expo does
86:00 - so
86:01 - we should be able to use expo to run and
86:04 - test it on mobile emulators
86:07 - and to create builds for mobile devices
86:10 - so
86:10 - i'm excited about that
86:13 - and we will get back to that and i'm
86:15 - gonna try to have my oldest son who's
86:17 - nine years old
86:18 - uh i'm gonna try to set him up with some
86:20 - sort of like
86:23 - i don't know online drawing tool or
86:25 - something to maybe make some some
86:27 - characters
86:28 - and artwork for the game
86:30 - so
86:32 - that might be cool see what he comes up
86:34 - with
86:39 - uh we got a question
86:41 - um
86:42 - about react native versus flutter who
86:44 - will win i have no idea who will win
86:47 - really it's hard to say i mean react
86:50 - native is already has been out there
86:52 - longer
86:54 - so i guess it already has a bigger user
86:56 - base
87:00 - sorry
87:01 - but honestly i haven't actually tried
87:03 - out flutter yet so i don't think i could
87:05 - give a really good answer to that
87:07 - question
87:21 - uh josh wolfe says can you really use
87:23 - this to make android apps you can
87:25 - definitely use react native to make
87:26 - android apps
87:52 - all right i'm skipping there's a lot of
87:54 - stuff that was in relation to what we
87:56 - were trying to install here
87:58 - which seems like this kind of stalled
88:00 - out i'll have to figure that out later
88:02 - um
88:05 - let's see
88:08 - almost to the end of the chat here
88:29 - uh rust um says uh which computer can
88:32 - you offer for programming but not imac
88:34 - uh so i guess recommendations
88:36 - um
88:37 - yeah i mean imacs are pretty expensive
88:39 - if if you can find a good deal on a
88:41 - macbook pro i think that's i really like
88:44 - those like for in term if you want a
88:47 - laptop
88:48 - i recommend the macbook pro if you want
88:50 - a desktop though
88:51 - you i
88:53 - i personally think that you will get
88:56 - more power for your money
88:58 - if you go with a windows computer and
89:01 - try to get basically get your custom
89:04 - build for what you want like i switched
89:06 - to windows desktop for live streaming
89:08 - because my macbook pro could not handle
89:10 - it
89:11 - uh and it ended up being way cheaper to
89:13 - get what i needed with a pc than it was
89:16 - for a mac in particular i needed a
89:18 - powerful processor
89:20 - with as many
89:23 - cores is possible uh because
89:27 - i from what i read that would help the
89:29 - most with streaming um and to be to get
89:32 - that
89:33 - in a mac would be very expensive uh so i
89:38 - think if you figure out what you want
89:39 - your computer to do do the research to
89:41 - see what components you need that
89:44 - will help the most
89:46 - you're way more likely to find a good
89:48 - deal and exactly what you want with a pc
89:54 - but in terms of laptops you can't beat
89:56 - the mac track pads they're just
89:58 - really nice i've never seen one anything
90:01 - come close to that on a chromebook or on
90:05 - windows laptop
90:10 - if if it's too expensive though to get
90:11 - the mac i would honestly
90:14 - i would look into getting a chromebook
90:17 - and running
90:18 - a cloud editor
90:21 - because
90:22 - they're way less expensive very reliable
90:26 - um
90:27 - startup is super fast like faster than
90:29 - anything i've ever seen
90:32 - so i think that's probably the route i
90:34 - would go like if i was going to buy a
90:35 - new laptop and not go with a mac
90:43 - [Music]
90:51 - um i lost my place i'm sorry
90:55 - uh which coding language to use um i use
90:58 - javascript mostly uh so i think
91:02 - javascript is definitely good good
91:04 - language to use
91:05 - um
91:08 - you have a question uh if if react is
91:10 - javascript why does it need installed um
91:13 - it's a javascript uh library so
91:17 - you need to install it
91:19 - just like any npm package would need
91:22 - installed
91:23 - comp sci guy says do you use expo at
91:25 - work i do i do use expo
91:28 - uh expo is a uh a tool or set of tools
91:33 - that work well with react native
91:35 - if you're using react native i
91:37 - definitely recommend checking out expo
91:39 - it it makes some things like
91:41 - um like running yours and testing
91:44 - locally and bundling uh a lot easier
91:47 - and it has a lot of cool built-in
91:49 - um
91:50 - like modules
91:53 - it's uh it's definitely useful
91:56 - and marketing wants to know what
91:58 - language you use to build a facebook
92:00 - like website
92:02 - uh i
92:04 - if it were me i'd use javascript because
92:06 - that's what i'm best with right but you
92:08 - could probably build something similar
92:09 - with almost anything um
92:11 - it does seem to make sense to use like
92:15 - react
92:17 - since react is a facebook thing that
92:19 - kind of seems fitting if you're trying
92:20 - to build a facebook clone
92:26 - um
92:31 - uh will ask is react native just a front
92:34 - end or could it have
92:36 - like all logic for example a game built
92:38 - out of javascript yeah actually react
92:41 - native could have all the logic for a
92:43 - game uh if you wanted like persistent
92:46 - storage or something you know you'd have
92:48 - to link it up to a database but
92:50 - i mean yeah you could definitely build a
92:53 - game and just use react native
93:01 - um
93:02 - let's see
93:07 - i keep losing my place sorry
93:10 - the scroll
93:12 - the scroll with my mouse is
93:14 - a little bit rough here
93:16 - um
93:18 - you know let me see if i can pop this
93:20 - chat window out and get a little bit
93:23 - nicer experience here
93:36 - uh comp sci guys says i was told expo
93:38 - isn't ideal for prod
93:40 - um you know what we're not in pride yet
93:42 - at work so
93:43 - i'm not i'm not sure about that um
93:48 - right now
93:49 - we don't have any like short-term plans
93:52 - to take the mobile version in the prod
93:55 - so i don't really have to deal with that
93:57 - yet when i get closer to that then i'll
93:59 - have to decide whether or not i want to
94:01 - stick with expo for doing the prod
94:02 - bundle or just use regular react native
94:06 - but i'll keep that in mind though
94:08 - i haven't heard anything one way or
94:10 - another though
94:15 - creative girl says hi i am starting to
94:17 - learn javascript do i need to start with
94:19 - vanilla javascript what do you think
94:21 - about jquery any javascript books to
94:23 - recommend which framework is best thank
94:25 - you it's a lot of questions one yeah
94:27 - start with vanilla javascript that's
94:29 - always good to know
94:31 - jquery is
94:32 - is not bad um to learn there are a lot
94:35 - of jobs where you need to use jquery
94:37 - because a lot of sites are built on it
94:39 - if you want to build brand new sites
94:40 - though i would recommend not going with
94:42 - jquery and maybe trying to do vanilla
94:45 - javascript or maybe a framework um which
94:48 - brings me to the framework question i
94:50 - personally like react
94:52 - um but there are other frameworks out
94:54 - there that are used for a lot of things
94:56 - so angular and vue seem to be pretty
94:59 - popular as well
95:02 - but
95:03 - but certainly that's up to you they all
95:04 - have their strengths and weaknesses any
95:06 - javascript books check out the series
95:09 - called you don't know js i believe you
95:12 - can read them for free i think they're
95:13 - all up on github and then there's also a
95:15 - book called eloquent javascript and
95:18 - there is an online version of that
95:19 - available for free as well
95:21 - those are definitely great places to
95:23 - start
95:24 - if you're learning javascript
95:33 - v web code says do you have a car if so
95:35 - what's the name i drive a 2017 honda
95:38 - civic
95:41 - when i have all the kids and everything
95:43 - i have a honda pilot it's a 2009 honda
95:45 - pilot but
95:47 - um the car i normally drive to work is
95:49 - honda civic
95:53 - i want to get a tesla one day because
95:56 - they're just really cool um but
95:59 - they're expensive so that's not gonna
96:00 - happen anytime soon
96:04 - um
96:08 - let's see
96:20 - uh v web code says tell me five ways to
96:23 - make money from coding five ways
96:26 - i don't know
96:27 - i mean you just you get a job uh build
96:29 - websites um
96:32 - sell your website it's like i i don't
96:33 - know um
96:36 - anybody help with that
96:39 - uh charlie swagger says hey jesse
96:41 - windows and linux have a big issue in
96:43 - react native ios development and no one
96:45 - uses expo in industry
96:49 - okay that's an interesting take um
96:52 - i have to keep that in mind for expo i
96:54 - do know that there are issues with ios
96:56 - development um i usually develop on a
96:59 - mac so it's not really an issue for me
97:01 - um
97:03 - obviously like when i'm streaming i'm
97:05 - using a pc
97:06 - so that's going to limit us if to do
97:09 - things like that we'll have to stick
97:11 - with android but
97:15 - you know
97:17 - in terms of my job i have a mac so
97:19 - that's not going to be an issue
97:21 - for that
97:31 - the comp sci guy mentions there is async
97:33 - storage in react native that's true we
97:35 - were talking about building a game with
97:36 - react native and i mentioned database i
97:38 - assume that's what you're talking about
97:40 - yeah so you could do async storage i was
97:42 - thinking more like um in terms of
97:44 - persistent data like if you wanted the
97:46 - user to be able to like let's say change
97:48 - phones and still get access to their
97:50 - data then you'd need some sort of
97:51 - database but yeah if you just want the
97:53 - data stored locally to persist you can
97:55 - definitely use async storage
97:58 - which basically behaves
98:00 - very similarly to
98:03 - what local storage does in a browser
98:12 - uh
98:14 - shirangi sony says hey jesse i'm almost
98:16 - completed with react now what are the
98:18 - steps like redux what are the next steps
98:21 - like redux component api flux i don't
98:23 - know these um
98:25 - if you're almost finished with react i'd
98:26 - say the next step is build stuff with
98:28 - react if you find that you need help
98:31 - with state management check out redux
98:34 - or like context api or something
98:38 - i think if you know react just start
98:40 - building
98:41 - as you find you need something else then
98:44 - learn that other thing
98:46 - but you could build a lot of cool stuff
98:47 - with just react so that's where i would
98:49 - personally would go next
98:55 - okay
98:57 - um and marketing says which language is
98:59 - basic to coding
99:02 - i mean i
99:03 - i don't really know exactly what you
99:05 - mean by that um
99:07 - but you can do
99:10 - pretty much anything in most of the
99:12 - main languages now
99:14 - um
99:16 - so i don't know if there is one that is
99:17 - like the basic
99:18 - coding language
99:28 - uh
99:29 - mulick says can you start learning rec
99:30 - directly skipping vanilla javascript uh
99:32 - you should definitely know some
99:34 - javascript first before you learn react
99:36 - i mean you don't have to be a javascript
99:37 - master but
99:39 - react uses a lot of javascript so you're
99:42 - going to have to learn javascript
99:44 - to use react anyway
99:51 - rustdmz says what can you tell about
99:53 - gaming laptops should i buy them for
99:55 - programming um i've thought about
99:57 - getting like gaming pcs and laptops for
99:59 - programming before
100:01 - i think they would work but i kind of
100:03 - think you would be spending more money
100:05 - than you need to
100:06 - so
100:07 - if you have the money great but if you
100:10 - don't really want to do a lot of gaming
100:11 - and you just want to do programming i
100:13 - think like
100:14 - the gaming setups would have way more um
100:19 - graphics capabilities then you would
100:22 - need so you probably could get something
100:25 - less expensive and it may
100:28 - be
100:29 - as good or better for programming
100:33 - uh v web code says what do you think
100:35 - about angular
100:36 - and vue are they dead oh no i don't
100:39 - think they're dead i think it's just
100:42 - um they're just different
100:44 - right uh i think
100:46 - angular is used by a lot of big
100:47 - companies um view seems to have
100:52 - i don't see view being used as much in
100:55 - big companies i i don't obviously don't
100:57 - know about all the companies here um
101:00 - but
101:01 - and i like i haven't used view and i
101:03 - haven't used the newer versions of
101:05 - angular
101:06 - uh so this is just kind of an outsider
101:08 - perspective but i still see a lot of
101:11 - jobs for angular developers
101:13 - some jobs for view
101:15 - um but i don't think either one is dead
101:21 - now v webb says can i buy a tesla car
101:23 - with a javascript coding job
101:25 - i mean maybe it depends like i really
101:27 - can't yeah so i have four kids and um
101:30 - so i have a coding job but i can't with
101:35 - four kids i can't afford a tesla if i
101:37 - decided to like really save up and um
101:41 - uh not spend my money on anything else
101:43 - for a while then maybe i could buy one
101:46 - but
101:47 - it's it's not
101:49 - an easily affordable option for me
101:52 - but if i was single i could probably buy
101:54 - a tesla and be fine
101:56 - not like the roadster but you know like
101:59 - the cheapest version of the tesla
102:04 - let's see
102:06 - all right cool so i've gotten through
102:08 - all if not most of the questions
102:11 - uh reverse that most if not all of the
102:13 - questions and i gotta get started with
102:16 - my my normal job now
102:18 - um
102:19 - thank you all so much for watching i'm
102:21 - gonna really try my best to start doing
102:24 - live streams regularly again
102:26 - uh i know i got away from it for a while
102:29 - sorry about that um bother me on twitter
102:32 - and instagram and stuff if i don't
102:33 - stream ask me what i'm doing and why i'm
102:36 - not streaming and that'll help me to get
102:38 - back into it um if you like the streams
102:40 - if you don't then just you know forget
102:42 - about it and maybe i'll go away um
102:46 - okay
102:48 - i think that's all
102:50 - uh i need to do maybe a little bit of uh
102:53 - debugging maybe i'll save that for the
102:54 - stream maybe i'll do it
102:57 - outside the stream we'll see but thank
102:58 - you all so much for your help it was
103:00 - definitely useful to get all this stuff
103:02 - working and i'll be back again
103:05 - i really want to do at least one more
103:06 - stream this week if i can
103:08 - um i do have more conferences and a
103:11 - vacation coming up so
103:13 - i'm gonna have some more breaks coming
103:15 - up but hopefully not as long as this
103:16 - last break was
103:18 - so until next time uh thank you all so
103:21 - much and have a great day