00:00 - so um for starters i want to thank you
00:03 - all for joining in today and i'm really
00:05 - looking forward to uh going through this
00:08 - with you this is the first of a five day
00:11 - um
00:12 - stream uh course if uh if you've seen
00:15 - the the course that i did earlier uh i'm
00:19 - gonna try to
00:20 - not follow that exactly so i'm gonna go
00:23 - i guess a little bit off script and it's
00:25 - still a beginner intro to developing
00:27 - skills so if you haven't built any
00:29 - skills before no worries hopefully we'll
00:31 - be able to uh to walk you through that
00:34 - um
00:34 - per the the earlier question yeah we're
00:36 - going to be working with node.js and
00:38 - javascript
00:40 - but i'm going to go through it hopefully
00:42 - in a way that if if you're not
00:44 - a javascript
00:45 - person it will still uh make sense to
00:48 - you
00:49 - um
00:50 - for starters uh any um i'm gonna try to
00:54 - look at the the comments i've i've been
00:56 - building skills for a little while but
00:57 - the streaming live streaming this is
01:00 - totally new to me so like this is
01:02 - literally the second time i've ever
01:04 - streamed anything and the first time was
01:05 - like this morning so uh so if i screw
01:08 - anything up let me know and i'll try to
01:10 - fix it put it in the comments i've i've
01:13 - been on a lot of
01:14 - live streams like on the other end of it
01:16 - so i'm trying to follow some best
01:18 - practices or some things that i've seen
01:20 - on other streams that seem to work so
01:22 - what i'm going to do is i'm going to
01:24 - talk for a little bit and then i'm gonna
01:25 - pause and look at the comments to try to
01:28 - answer any questions so as i'm going
01:30 - just ask questions and i'll try to uh
01:33 - from time to time uh look back and forth
01:35 - so i want this to to not be a lecture
01:38 - where you're just sitting there watching
01:39 - my screen i do want to try to make it
01:41 - interactive but at the same time i want
01:44 - to cover a lot of ground in a pretty
01:46 - short period so
01:47 - try to balance that
01:49 - um like i said earlier this is going to
01:51 - be a a five-day
01:55 - live stream so we're going to start at 1
01:57 - p.m eastern every day for the next five
01:59 - days and it's about 30 to 45 minutes is
02:01 - what i'm planning i've got an hour
02:03 - booked
02:04 - mostly that is for
02:07 - mistakes and questions so a little bit
02:09 - of buffer there but probably 30 to 45
02:12 - minutes per day and the goal is
02:14 - hopefully by the end of this to have a
02:16 - completed skill built
02:18 - while talking through what's happening
02:19 - along the way so again so you're not
02:21 - just watching me uh code i want to talk
02:24 - through it and make it make sense and
02:25 - answer questions as we as we go so
02:29 - um
02:31 - is if you can like just make a a a quick
02:35 - comment are you i'm sure there's
02:37 - probably a way to do like a poll or
02:38 - something but i don't know how to do
02:40 - that so i'm gonna just ask
02:41 - um
02:42 - do you uh how many of you are
02:45 - building skills right now have built a
02:47 - skill or just like completely brand new
02:49 - uh to it we're uh
02:52 - if you and if you are that's fine i mean
02:54 - that's if you're brand new and never
02:55 - done any of this before that's cool if
02:57 - you've built some skills before that's
02:58 - great too um if you've got any specific
03:01 - questions just trying to get a
03:02 - a tally of where everybody is so i can
03:06 - adjust the the topic hopefully
03:08 - accordingly to that
03:10 - so um
03:13 - just read quickly through the the
03:15 - questions
03:16 - uh store variable persistence
03:22 - okay
03:23 - um
03:25 - all right
03:27 - so um let me let me uh let me start at
03:30 - the beginning so to to follow along with
03:32 - this
03:32 - minimally you're going to need two
03:33 - things you're going to need
03:35 - a an aws and amazon web services account
03:39 - and if you don't have one of those you
03:40 - can get one at aws.amazon.com
03:44 - and
03:46 - this is a paid service in case you know
03:49 - that but they do have a free tier and
03:51 - the free tier is pretty generous there's
03:54 - um i think you get like
03:56 - i want to say like a
03:58 - million requests yeah like a million
04:01 - requests for lambda and that's what
04:03 - we're going to be using the lambda
04:04 - service so
04:05 - um you'll if you want to follow along or
04:07 - do what i'm going to be doing at
04:10 - your own pace you'll need to have an aws
04:12 - account you also need an amazon
04:13 - developer account so
04:15 - to get that you go to
04:17 - developer.amazon.com
04:22 - and i'm logged in but
04:25 - so from here you would just sign in or
04:28 - if you don't have an amazon developer
04:29 - account you just sign up and if you have
04:32 - an amazon echo you don't need one to do
04:34 - development but if you have one you want
04:36 - to use when you sign up for your amazon
04:38 - developer account you want to use the
04:39 - same email address that you used when
04:42 - you set up your echo because that will
04:43 - let you
04:44 - test your skills in development mode
04:46 - without really jumping through any hoops
04:48 - and it just makes things easier so use
04:50 - whatever email address that you use for
04:53 - your echo when you sign up for your
04:54 - developer account if you're doing that
04:56 - so with those two things um you're ready
04:58 - to uh you're ready to get going building
05:01 - a skill you can do everything from the
05:04 - web browser which i'm going to walk
05:06 - through really quick first just as uh is
05:08 - kind of a reference point for where to
05:10 - get started but as we get into building
05:13 - our skill over the next few days i'm
05:15 - going to transition from the browser
05:16 - stuff into
05:18 - uh doing the um the development with
05:20 - some local tools so
05:22 - ide and the alexa
05:26 - skills kit cli
05:28 - turn a lex off here sorry i don't know
05:31 - and uh and i'll talk about what those
05:32 - are and um
05:34 - the the advantages pros and cons and uh
05:37 - using one versus the other and all that
05:38 - good stuff so
05:40 - for starters
05:41 - the
05:44 - starting point the jumping on point
05:46 - would be the developer portal for sure
05:48 - so
05:49 - developer.amazon.com and uh if you go to
05:52 - the alexa section of the portal
05:55 - the um the documents we're gonna be
05:57 - there's sort of two
06:00 - areas when you're building skills
06:02 - there's the um the alexa voice service
06:05 - and the alexa skills kit so the skills
06:08 - kit is for building skills which is what
06:11 - we're going to be talking about over the
06:12 - next few days so building skills is um
06:16 - kind of analogous to building an app so
06:17 - skills make
06:19 - give alexa capabilities that uh
06:22 - are not there right now so
06:24 - i guess effectively making her smarter
06:27 - or it's smarter depending on your
06:29 - your preference for that um
06:33 - and the alexa voice service is
06:35 - for alexa enabling devices or software
06:38 - so if you wanted to uh to put alexa into
06:42 - um some smart device you could do that
06:44 - which incidentally like you you hear on
06:46 - the smart device you hear uh referenced
06:50 - like smart speakers and i'm going to
06:51 - take just a second to just talk about
06:53 - how it all works it's actually the the
06:55 - device itself is really not all that
06:57 - smart all the smarts are in the cloud in
07:00 - the alexa service and so the the device
07:04 - itself is really just kind of a terminal
07:06 - that um will listen for the wake word
07:10 - which is alexa and then stream what it
07:12 - hears when it hears the wake word back
07:14 - to the the back end service and then
07:16 - from there
07:17 - the alexa service is going to
07:20 - convert
07:21 - the voice stream to text and then we're
07:24 - going to set up an interaction model
07:26 - which i'll talk about more a little bit
07:27 - later that is going to hopefully um tell
07:31 - the alexa service what the user wants
07:34 - and then we can handle what the user
07:36 - wants in our skills service which is uh
07:39 - something else that we're going to talk
07:40 - about a little bit later but
07:41 - let's start here so um to to create it
07:44 - i'm going to walk through creating a
07:46 - skill just really really quickly like
07:47 - super basic and then
07:49 - um talk about
07:51 - the the steps so i'm going to
07:54 - hold off on answering any questions for
07:55 - just one second here while i walk
07:57 - through and just kind of show you high
07:59 - level what um
08:01 - what goes on when you're creating a
08:02 - skill
08:03 - so uh after you've signed up and logged
08:06 - in to the alexa
08:09 - developer portal you would go to your
08:12 - alexa council and then your skills
08:15 - and then um here i'm using a fresh
08:18 - account so that you can see everything
08:20 - from the beginning and you would just go
08:23 - create a skill
08:26 - and
08:27 - give your skill a name and i'm going to
08:29 - call
08:30 - this one
08:36 - free code
08:38 - cam and create skill
08:42 - and these
08:44 - uh
08:45 - we're going to be creating a custom
08:46 - skill there's a few different types of
08:48 - skills there's like flash briefing
08:49 - skills and video skills and
08:52 - audio player skills but the the custom
08:55 - skill really gives you the most control
08:57 - and that's what we're going to be going
08:58 - through in the uh in this
09:00 - live stream and over the next um
09:02 - few live streams
09:04 - so once i've created a skill it pulls me
09:08 - into the skill configuration area and
09:11 - from here so
09:13 - this is where i'm going to configure
09:15 - everything that's
09:17 - basically going to allow the alexa
09:19 - service to recognize when a user is
09:24 - invoking the skill or starting the skill
09:26 - up and then requesting functionality
09:29 - that the skill should provide
09:31 - and that's all going to be done through
09:33 - creating something that's referred to as
09:35 - an interaction model
09:37 - which is uh really at the end of the day
09:41 - a json document you know so
09:43 - or
09:45 - this is the uh this is the very starting
09:47 - point so we can do this um graphically
09:51 - and it's going to create the the json
09:54 - for us or we can just write the uh the
09:56 - the javascript object notation of the
09:59 - json
10:00 - um syntax in here but um we'll we'll get
10:03 - into this in a little bit i'm just going
10:05 - to step through like i said a really
10:08 - simple example so um
10:10 - right here is the the first thing which
10:13 - is the uh invocation name and the
10:17 - invocation name is the name that the
10:20 - user is going to use to start the skill
10:23 - up or to invoke the skill so this is
10:25 - different than the skill name the skill
10:28 - name is
10:30 - what users are going to use to find the
10:31 - skill
10:32 - when they're searching through the
10:34 - skills store and it
10:37 - they're
10:38 - often the same generally the same they
10:40 - don't have to be though the invocation
10:42 - name can be different the invocation
10:44 - name during development can be pretty
10:45 - much whatever you want it to be uh
10:47 - however um
10:50 - and we'll
10:51 - we will i'm gonna try to submit a skill
10:53 - for
10:54 - and i'm gonna try to do this tomorrow i
10:56 - you know try to get a skill done that we
10:59 - can send to uh through the approval
11:02 - process and and hopefully it'll be back
11:04 - by friday it's usually pretty quick
11:06 - but maybe it'll get kicked back and
11:08 - that'll give us
11:09 - an opportunity to talk about that but
11:11 - the invocation name is important
11:12 - especially when you're submitting the
11:14 - skill for
11:17 - certification so that it can be
11:18 - available to the world and there's lots
11:20 - of guidelines around what you can and
11:22 - can't do
11:24 - with regard to the invocation name and
11:26 - so you can read about those down here
11:27 - like you can't use
11:28 - uh
11:30 - single words and you know words that are
11:33 - used as a part of alexa's native
11:35 - functionality and and some other things
11:37 - but uh we'll we'll uh
11:39 - see that i'm gonna just for right now
11:41 - call this
11:44 - free code camp
11:47 - so i'm going to use the same
11:49 - invocation name as the
11:53 - as the skill name
11:54 - so now to to start this up we would go
11:56 - like alexa open
11:58 - free code camp
12:00 - and that would start it up or alexa ask
12:03 - free code camp something
12:05 - so the um
12:07 - the
12:08 - interaction model is
12:10 - made up of a few things it's made up of
12:13 - intents which are
12:16 - uh
12:17 - intense or
12:19 - a
12:21 - reference to functionality that the
12:23 - skill provides
12:24 - so and it's pretty granular it's kind of
12:27 - analogous to um like a a function in in
12:30 - code but not exactly so if
12:34 - for example if you had a skill that was
12:37 - for ordering pizza you might have an
12:40 - intent called order pizza and then
12:42 - the purpose of that intent would be to
12:46 - take the order and confirm the order
12:48 - with the user but to fulfill the intent
12:52 - you might need to collect a whole lot of
12:53 - information from the user so in that
12:55 - example of
12:57 - a
12:57 - pizza
12:58 - delivery you would also need to
13:04 - ask them what size they want ask them
13:06 - what toppings they want maybe get their
13:07 - address their payment information
13:10 - and that back and forth is uh referred
13:13 - to as a multi-tern dialogue and so
13:16 - there's also dialogue management that
13:18 - happens or is defined inside the
13:21 - interaction model
13:22 - and then what you're trying to get
13:25 - to process or fulfill the intent is the
13:29 - information that you need so in the case
13:31 - of ordering a pizza the topping you
13:34 - might need the value for topping which
13:36 - would be maybe pepperoni or onions or
13:39 - olives or whatever and the the the
13:42 - parameter values the variables i i
13:45 - suppose those are referred to as slots
13:49 - and so we've got in the interaction
13:51 - model three things we've got intents
13:54 - we've got um slots and we've got
13:58 - dialogues and we'll we'll dive into this
14:01 - um in more detail when we get further
14:04 - into building our skill
14:06 - but you can do this all graphically so
14:08 - you don't need to um you don't need to
14:11 - write code to do this you can do this
14:13 - through the the web interface
14:16 - so if you wanted to create a custom
14:18 - intent like um hello intent
14:22 - i would do something like that
14:26 - and then attempt intents are
14:29 - recognized so that when a user's asking
14:32 - alexa to
14:34 - invoke your skill and then to have your
14:36 - skill do something
14:37 - you provide sample utterances to let the
14:40 - alexa service know
14:42 - what the user might be asking for and so
14:45 - i'll say
14:47 - [Music]
14:49 - hey
14:52 - hello
14:54 - hi and you provide some examples like
14:56 - that
14:57 - the alexa service is pretty smart so
14:59 - with a handful of examples it will start
15:03 - also or be able to start also inferring
15:05 - some things so you don't need to provide
15:07 - every possible scenario but you want to
15:09 - provide enough where the alexa service
15:11 - can learn generally what it is that uh
15:14 - that you're doing so in this case here
15:17 - this intent if we go look at the
15:20 - json editor how am i doing on time 16
15:22 - after this intent is you can see now
15:25 - written here to the json i've got my
15:27 - hello intent there right now it doesn't
15:30 - have any slots but it's got some sample
15:31 - utterances so what this is telling the
15:34 - alexa service is that when a user says
15:36 - hi hello or hey
15:38 - that um the intent that is going to be
15:42 - tied to code that's going to provide
15:44 - functionality later
15:46 - is the hello intent
15:48 - okay so um
15:50 - hopefully
15:51 - that makes sense i'm going to come back
15:53 - to this if it if it doesn't but
15:56 - i want to move through this stuff pretty
15:58 - quick so we can get into the coding part
16:01 - so
16:02 - like i was saying earlier when a request
16:04 - comes in
16:06 - it happens
16:07 - the user makes or
16:09 - talks to the device says the wake word
16:12 - the
16:13 - alexa service is going to identify based
16:16 - on the invocation name which skill the
16:19 - user is wanting functionality from and
16:21 - then based on the utterance what intent
16:24 - they are trying to get done and
16:27 - all of that information is
16:30 - um
16:31 - then sent to a service for processing so
16:34 - like a backend service an api
16:36 - and that's something that is developers
16:38 - we've got to create
16:39 - and that is referred to in the uh the
16:42 - developer portal here as the um endpoint
16:45 - so the endpoint the alexa service is
16:47 - going to collect the request and then
16:50 - send the request off to our service for
16:53 - processing and then our service is going
16:54 - to respond back
16:56 - with uh
16:58 - the information that the the user is
17:00 - looking for hopefully so
17:02 - there's two different um two different
17:04 - ways you can go at this you can use
17:07 - an
17:08 - amazon uh or aws lambda function or you
17:12 - can use uh any http endpoint so it
17:15 - really um it really doesn't matter how
17:17 - you process the requests as long as
17:20 - you're
17:21 - sending back jason in a format that the
17:23 - alexa service can understand and as long
17:26 - as your service is able to understand
17:28 - and process the request that's coming in
17:31 - and the request and response formats the
17:34 - um the documentation is really pretty
17:38 - good i think anyway for um
17:42 - for the uh the alexa development stuff
17:45 - the the confusing part is probably
17:48 - more in the the sdk which i'll talk
17:51 - about later because it's kind of a
17:52 - wrapper for what's really happening
17:54 - under the hood under the hood it's
17:56 - all pretty simple the alexa service is
18:00 - going to
18:01 - send a a request to your skill service
18:04 - in a format that is going to
18:08 - be json like this and your skill service
18:11 - needs to take that in
18:13 - read what's happening in there and
18:15 - determine based on that how to respond
18:17 - and it's going to respond with a json
18:20 - response also
18:21 - so um it's just a conversation that's
18:25 - going back and forth between the alexa
18:26 - service and your skill service that is
18:29 - uh that is pretty much
18:31 - all that's going on
18:33 - it can get
18:34 - complicated as you get into the
18:35 - development or not complicated but uh
18:37 - involved i suppose
18:40 - but let me uh let me continue on here
18:42 - and i'm going to try to like get
18:44 - in about five minutes pause to uh to
18:46 - look at the questions
18:48 - um so
18:50 - the uh like i said you could use
18:52 - anything we're gonna we're gonna use a
18:54 - lambda function for this and that's
18:55 - definitely
18:56 - the easier way to do it or at least in
18:59 - my opinion and uh the recommended
19:03 - way to do it is lambda functions also so
19:06 - i'm gonna on the
19:08 - endpoint here i'm going to select the
19:10 - aws lambda arn and arn is the um it's an
19:15 - acronym for amazon resource name you
19:18 - copy that to the clipboard and then i'm
19:20 - going to head over to aws and i'm going
19:23 - to sign in
19:29 - and go to lambda
19:35 - and so
19:36 - the first time you go in here you would
19:38 - just go create a function
19:40 - and this has changed a little bit
19:41 - there's actually a a couple of different
19:43 - ways to do this just for getting started
19:45 - so you can create
19:46 - a uh
19:48 - a lambda function from scratch
19:50 - and um
19:52 - that's fine except for in most of the
19:55 - examples that you see out there when you
19:57 - go to uh to github and or the a lot of
20:01 - the documentation the examples the code
20:04 - examples are going to be using an sdk
20:06 - and that is something that you can find
20:09 - at github.com alexa and the
20:13 - the there's a new one for python i think
20:16 - i saw recently
20:19 - i know there's one for java but the
20:20 - javascript one is the most popular one
20:24 - right now and it's been out um for a
20:27 - little while so there's lots of code
20:29 - examples although it was recently
20:31 - updated from version one to version two
20:34 - and version two is significantly
20:36 - different than version one
20:38 - and so um if you're if you're doing
20:41 - development and you've already gotten
20:42 - into this i'm sure you you've seen that
20:44 - i've got a lot of other tutorials if you
20:47 - go to my um
20:49 - the dabble lab youtube channel channel
20:51 - and incidentally there's a couple other
20:52 - people from dab lab on here so if you
20:53 - have any questions they can uh try to
20:55 - ask to ken
20:56 - and our peta are on the the chat as well
21:00 - but the um the the dabble lab youtube
21:02 - channel is youtube.com dabilab and so
21:05 - some of the uh as i'm going through this
21:07 - i might reference some tutorials that
21:08 - i've already uh done just to uh to to
21:11 - save us time and get through it quicker
21:13 - but the
21:14 - the change from the 1.0 to the 2.0 sdk
21:17 - everything that we're going to be doing
21:19 - this week is going to be with the the
21:21 - later sdk
21:22 - 2.0 and so
21:25 - um
21:26 - yeah where i was going with this was
21:30 - if you create a function from scratch
21:32 - it's not going to include the the sdk
21:35 - and so you would literally need to be
21:37 - writing back from that function with
21:40 - you would just need to manually write
21:42 - code to write back the
21:44 - the the json response
21:47 - and um you can i mean that works for a
21:49 - really simple skill like a very very
21:53 - very very basic skill actually let me
21:55 - just show that and show you that um so
22:02 - i'm gonna do a simple example
22:04 - and um
22:06 - you just give your your lambda function
22:08 - a name
22:09 - like this and then um choose a role i
22:13 - can't remember if i set this up or not
22:15 - uh yeah so
22:16 - um
22:20 - if you have an existing role yeah i do
22:24 - a lot so let me see if i can
22:28 - create a custom role this is what
22:29 - happens the first time if if you're just
22:31 - getting into this like it'll pop you
22:33 - through
22:37 - uh this process like create a lambda
22:39 - basic execution role it's probably gonna
22:42 - scream at me and say i've already got
22:43 - this i know here we go okay so um
22:48 - so you create a role and a role is
22:50 - basically permissions to allow the
22:52 - function to run and then you
22:56 - go create function
22:57 - but before i do that the blueprints and
23:00 - service serverless application
23:01 - repository the blueprints are like the
23:03 - name implies
23:05 - kind of ready to go
23:07 - templates
23:08 - of sorts that you can use and they're
23:10 - not just blueprints for alexa there's
23:12 - blueprints for all kinds of stuff but
23:14 - the 10
23:15 - the the trend now is that everything
23:17 - seems to be moving over to this
23:18 - serverless application repository
23:20 - templates and these are
23:22 - um
23:23 - cloud formation if you're if you're
23:25 - familiar with that but basically
23:27 - um
23:29 - templates that
23:30 - define how the back end should be set up
23:32 - and and i'll i'll show this a little bit
23:35 - later because it's kind of useful for um
23:37 - for some things but just for our very
23:39 - first one we'll just start from scratch
23:42 - and then
23:44 - um create a function
23:46 - and then in here uh lambda functions are
23:50 - they're really
23:51 - i i like them a lot um they're great in
23:54 - that they let you just focus on writing
23:56 - code without having to worry about
23:57 - configuring the server and all that
23:59 - stuff and they work differently if
24:01 - you're used to
24:03 - building web apps and
24:04 - maybe using nginx or whatever web server
24:08 - apache you prefer where you set it up
24:09 - and it's sitting there waiting for
24:11 - somebody to make a request that's not
24:13 - how lambda works the way that lambda
24:15 - works is it's sitting there doing
24:17 - nothing not running at all which is good
24:19 - news for you because you don't pay if
24:21 - there is nothing happening it's just
24:24 - sitting there uh
24:26 - waiting
24:27 - and it's waiting for a trigger so for an
24:30 - event and the uh
24:32 - there's different
24:34 - amazon services that you can use to uh
24:36 - to trigger a lambda function in our case
24:39 - we're going to be using the alexa skills
24:41 - kit
24:42 - and the alexa skills kit is or adding
24:45 - this trigger to the lambda function is
24:47 - what's going to allow us to use this
24:50 - lambda function in as the end point for
24:53 - our
24:53 - for our skill
24:55 - if you don't see uh the that option the
24:58 - alexa skills kit over here for some
25:00 - reason
25:01 - uh it might be because you're in the um
25:03 - a region that doesn't support it and so
25:06 - you just go up here and change to a
25:09 - region that does support and
25:11 - i'm not sure which ones do and don't
25:13 - honestly uh i think all of the us ones
25:16 - do i'm pretty sure but um if you're
25:18 - you're not sure i know us east does so
25:20 - you can just select that one if you want
25:22 - to go through it
25:24 - and then um
25:25 - this isn't
25:26 - required but it's good practice the the
25:29 - configuration required here so uh
25:32 - the skill id verification basically
25:35 - prevents
25:36 - any other skill from using
25:38 - this lambda function so uh
25:42 - you
25:43 - basically paste in the skill id
25:46 - if you guys remember when i set the
25:48 - skill up in the developer console i
25:49 - copied that to the click uh the
25:51 - clipboard so that was from right over
25:52 - here
25:53 - and um and you paste it in there and you
25:56 - choose add
25:59 - and then save
26:01 - and then
26:02 - the way that i'm going to tie this to
26:04 - the skill is with this arn so this
26:06 - amazon resource name up here and this is
26:10 - the
26:10 - kind of the
26:12 - unique
26:13 - identifier for the endpoint and then i'm
26:16 - going to go back over here i'm going to
26:17 - paste that in here
26:19 - and
26:22 - and then i'm gonna save this so
26:28 - and
26:30 - um
26:31 - let's see
26:35 - [Music]
26:37 - so now
26:37 - [Music]
26:42 - save the endpoint
26:46 - all right
26:48 - let's save the model
26:50 - and um build the model so building the
26:52 - uh the model this is gonna take uh a
26:55 - minute so while this is building i'm
26:56 - gonna go um work on the uh the the code
26:59 - over here just to to show you so the um
27:03 - what's happening right now when you're
27:04 - building the model it's
27:06 - basically using the information from our
27:08 - interaction model to train the
27:12 - the alexa service the
27:14 - machine learning behind the alexa
27:16 - service on what to do and so we'll let
27:19 - that continue
27:21 - but over here like right now if i
27:24 - uh
27:26 - if i
27:27 - run a test on this
27:29 - the response format like i mentioned
27:32 - earlier needs to be in a format that the
27:33 - alexa service can uh can understand and
27:36 - so i'm going to do one like without
27:38 - using the sdk let's see if i can just
27:42 - uh
27:44 - i was talking about the request and
27:45 - response
27:52 - oh wait there it is
27:53 - [Music]
27:57 - so i think like the
27:58 - simplest possible alexa skill would be
28:02 - something like
28:08 - i don't even need all this
28:11 - but
28:18 - uh
28:21 - [Music]
28:37 - um
28:44 - actually
28:45 - let me get out
28:47 - [Music]
28:54 - i think they i thought i saw one in here
28:56 - yeah here's one
29:04 - [Music]
29:17 - i'm gonna just hack this up real real
29:18 - quick just to make it respond with
29:21 - something
29:30 - and i'm gonna get rid of all this
29:33 - directives
29:35 - and
29:38 - re-prompt
29:40 - so you can see
29:41 - [Music]
29:50 - it is just json
29:52 - [Music]
29:59 - i don't even need this
30:00 - [Music]
30:03 - i think this
30:04 - is probably like the most basic possible
30:08 - skill
30:09 - service we'll see if it works
30:11 - no guarantees but i think it will
30:14 - um
30:16 - open speech plain text say hello yeah so
30:18 - this will give you an example of just
30:21 - kind of what's happening under the hood
30:22 - if it works i haven't messed anything up
30:25 - uh so this is all built so now if i go
30:29 - test this what i call this free code cam
30:34 - you just enable testing here i'm back in
30:36 - the developer console and i can just say
30:39 - like um open
30:41 - free code cam
30:47 - and i get null so there is a problem
30:50 - with the skills response
30:52 - and that is because i am
30:58 - i've got
31:01 - syntax error
31:04 - [Music]
31:14 - which
31:15 - i think is
31:18 - where
31:19 - oh wait
31:24 - that looks
31:26 - that looks good
31:31 - [Music]
31:38 - hmm
31:41 - all right
31:52 - [Music]
31:56 - let me see what's going on here
31:59 - [Music]
32:06 - [Music]
32:14 - okay
32:25 - i am missing something simple
32:31 - [Music]
32:41 - okay
32:43 - let me see
32:45 - just paste all this in here
32:49 - oh you know what i
32:51 - i forgot to return this
33:01 - [Music]
33:16 - [Music]
33:26 - yeah so this is why um
33:29 - this is why you use the sdk
33:39 - then i can get rid of all this
33:43 - [Music]
33:56 - okay
33:58 - let's save that and try this again
34:01 - [Music]
34:13 - okay so now i'm getting a response back
34:18 - [Music]
34:20 - this is the simplest skill service ever
34:27 - so save that and this is returning like
34:31 - the most basic response that the alexa
34:35 - service is going to uh to understand and
34:37 - so i can play it here although i've got
34:39 - my sound turned off but let me turn on
34:41 - the
34:43 - my echo
34:44 - um
34:45 - alexa open free code camp
34:49 - hello there
34:50 - all right so i'm gonna i'm gonna pause
34:52 - here it is um 30
34:56 - 135 and just look at the the questions
34:59 - so um real quick to recap we set up the
35:02 - skill service in the developer portal
35:05 - and then uh i set up a really
35:07 - or the the skill set up the skill in the
35:09 - developer portal and then set up a
35:11 - really simple skill service that is just
35:13 - responding with a minimal response that
35:17 - the alexa service understands and in
35:20 - this case
35:21 - all of this skill is going to ever do is
35:23 - just say hello there no matter what the
35:25 - the user passes over but this this kind
35:28 - of shows you what's happening
35:30 - uh under the hood so this is the request
35:33 - that's going out from the alexa service
35:35 - to my skill service which is the lambda
35:37 - function and then that little bit of
35:39 - code there is just responding with uh
35:42 - with this here which is what's getting
35:44 - sent back to uh to the user
35:47 - okay let me um let me take a look at the
35:49 - questions here
35:53 - uh
36:10 - okay did
36:12 - i'll ask you all a question does that
36:14 - does that make sense sort of uh the the
36:17 - back and forth between the alexa service
36:19 - and the skill service
36:20 - is just start there
36:30 - someone said what's an amazon alexa
36:32 - skill development um building skills for
36:35 - uh amazon alexa which or the the
36:40 - alexa
36:42 - service
36:53 - can you let me know uh let me see
37:03 - yeah maria the um the the video will
37:05 - stay up so you can watch it another time
37:19 - yeah nicholas i was
37:21 - i was just not even returning the um
37:24 - the jason at all in that lambda function
37:26 - so i made it
37:30 - i made it harder than it needed to be
37:43 - uh
37:45 - familiar with node that's good
37:54 - congrats ryan you got your first job
37:57 - offer that's awesome
38:04 - yeah wayne as we um as we get into
38:06 - building the skill so that the skill
38:07 - that i'm i was thinking of for
38:10 - uh for the rest of this stream so not
38:12 - just today again i'm gonna be streaming
38:15 - for the next five days
38:16 - and it'll be about um 30 30 minutes to
38:19 - an hour starting at 1 00 p.m eastern and
38:23 - over the five days we're gonna build a
38:25 - skill
38:26 - and the uh the skill that i was thinking
38:27 - of is like a uh and ask me anything
38:30 - skill so this is the the idea that i had
38:34 - was a skill where you could basically
38:36 - have a list of faqs that a user could go
38:40 - ask questions and get answers to but i
38:43 - was also thinking it would be really
38:45 - cool if there was a way for the user to
38:47 - ask a question that hasn't already been
38:49 - asked
38:50 - and um so
38:53 - how i was thinking we could go about
38:54 - that maybe is the user would ask a
38:56 - question and then the question would be
38:58 - saved to a database and i'm thinking
39:02 - like dynamodb
39:04 - and then
39:06 - somebody could review those and
39:08 - answer the questions and make that a
39:10 - part of the
39:11 - the faq or the ask me anything so sort
39:14 - of a
39:15 - voice version of and ask me anything if
39:17 - you've seen those on github where
39:19 - they're just basically a repository for
39:22 - questions that have gotten asked and
39:24 - answered
39:25 - so that is the skill that i think we
39:28 - will be building yeah or i'm planning on
39:31 - building so
39:34 - what else we got
39:43 - okay um i'm gonna so so that is a the
39:48 - that is a a really
39:53 - that's a really simple uh skill without
39:55 - using any of the the sdk stuff
39:59 - let me show you a another way to go at
40:02 - it and this is i'm going to go back and
40:04 - i'm going to create a different uh
40:06 - function
40:08 - different lambda function and i'm going
40:10 - to call this one
40:12 - sdk example
40:15 - [Music]
40:18 - and
40:19 - yeah choose an existing role that
40:22 - lambda basic execution role and this
40:24 - time i'm going to use a blueprint
40:27 - and the blueprints
40:35 - the blueprints are
40:37 - like boilerplate code or example code
40:39 - that amazon provides and there's one i'm
40:41 - gonna use this one here this node.js
40:44 - alexa skills kit
40:48 - and this one is
40:51 - space facts
40:55 - [Music]
41:05 - and
41:06 - you can see this one provides um some
41:09 - code that we can edit here and this is a
41:12 - skill that is
41:14 - provides well space facts so these are
41:17 - you can ask give me a fact and it
41:19 - provides like a random fact about space
41:30 - and same thing here remember we've got
41:32 - to add the
41:34 - trigger the alexa skills kit trigger and
41:36 - let me go back over here and
41:39 - we're going to change this
41:42 - skill service to point to this new
41:45 - lambda function
41:46 - so i need to get the um
41:49 - the skill id again to do that
41:52 - coming back over here
41:54 - and
41:55 - go to the endpoint
41:59 - and then copy the skill id again to the
42:01 - clipboard
42:04 - [Music]
42:06 - and then the configuration information
42:08 - down here i'm going to paste it in
42:12 - and then add that
42:14 - save this
42:16 - and now i need this new arn so i'm going
42:19 - to copy that
42:22 - [Music]
42:25 - and just replace this with that
42:29 - and then save the endpoint
42:38 - and then if i go
42:40 - test again
42:50 - now um i'm going to turn on my sound so
42:54 - you can hear this
42:55 - and then save the engine
42:57 - that's gonna just
42:59 - play that so
43:04 - [Music]
43:07 - okay so now um you see i do i'm testing
43:11 - in here and
43:12 - you could have i'm also i've got the uh
43:15 - the video plan just to monitor it for
43:17 - the comments so i don't want to turn on
43:19 - the sound that's picking up on the uh
43:21 - the mic it'll just loop but you can see
43:23 - here here's your fact the milky way
43:26 - galaxy will
43:27 - collide with the andromeda galaxy in
43:29 - about 5 billion years let me try it
43:32 - alexa open free code camp
43:36 - here's your fact the sun contains 99.86
43:40 - of the mass in the solar system
43:43 - okay so
43:45 - same same thing happening behind the
43:47 - scenes that the big difference between
43:49 - uh between this and the last lambda
43:52 - function is
43:54 - this lambda function is using um the
43:58 - alexa skills kit and it's using the
44:00 - alexa skills kit 2.0
44:03 - which you can see in here if um and i'll
44:07 - talk through this as we get into it more
44:09 - but the it's requiring this
44:12 - alexa sdk
44:14 - and so a lot of the um
44:17 - creating the response back to the alexa
44:21 - service and and more specifically
44:23 - creating the uh the json that gets sent
44:25 - back
44:26 - is handled by the skills kit so it just
44:29 - makes writing the code a lot
44:32 - simpler
44:33 - and but still the same things happening
44:35 - so
44:37 - if i uh if this is the request that's
44:40 - coming over and this is the response
44:41 - coming back if i were to go over here
44:43 - and
44:44 - test this
44:46 - i could do i could paste in so i just
44:48 - this i just copied from the test console
44:51 - in the developer the
44:53 - developer console and then
44:55 - launch request
44:58 - naming it here and then create
45:02 - and then i can test here
45:06 - and i can see the response back
45:08 - down here
45:09 - so this is
45:11 - this is at the end of the day what we
45:13 - need to do we need to generate a json
45:15 - response
45:16 - and that's what the skills kit's going
45:18 - to help us out with but when you when
45:19 - you look at a lot of the the code
45:22 - examples out there like i was mentioning
45:23 - earlier
45:24 - there's a lot of
45:26 - a lot of examples that use the 1.0 sdk
45:29 - and the the code is um
45:32 - is
45:34 - quite a bit different uh with the the
45:36 - 2.0 sdk still javascript so if you're
45:39 - familiar with javascript it's not super
45:41 - hard to uh to work through but if you're
45:43 - just getting started with uh
45:45 - with javascript
45:47 - just be aware of the difference between
45:49 - the
45:50 - 1.0 and the 2.0
45:52 - code so when you're looking at code
45:54 - examples you'll you'll know
45:56 - if it's one or two so any any questions
46:00 - about that up to this point i think um
46:02 - we're gonna
46:03 - probably
46:05 - call it a day on the coding side uh the
46:08 - first goal was just for today to to walk
46:11 - through the the high level steps which i
46:13 - think we've done
46:14 - and tomorrow we're going to get into
46:17 - talking about planning the skill that
46:19 - we're going to be building
46:21 - and
46:22 - get
46:22 - kind of a rough framework of that skill
46:25 - built tomorrow and
46:27 - maybe even enough to submit it
46:29 - for
46:30 - certification and then we'll add
46:32 - functionality to it
46:34 - on wednesday thursday and friday and
46:37 - hopefully finish up on friday but any
46:39 - questions about what we've what we've
46:41 - covered to this point
46:44 - uh let's see how do you add utterances
46:47 - uh from a json file to
46:49 - the alexa developer portal or is there a
46:51 - tool to deploy that from code yeah there
46:55 - is um
46:57 - uh parmo there's the uh the ask s
47:01 - uh the ask cli
47:04 - so uh i'll get into this later in the
47:06 - week but when you um when you start
47:10 - building skills that are a little bit
47:12 - more involved
47:13 - or actually not even a lot more involved
47:16 - you'll probably want to use the alexa
47:18 - skills kit cli
47:20 - in the alexa skills kit cli and i'll
47:23 - i'll show you real quickly
47:25 - ask
47:26 - new this is the cli doing this lets me
47:29 - create
47:31 - um
47:32 - code
47:35 - [Music]
47:38 - that i can deploy from my local computer
47:41 - so
47:42 - this example skill this is called a um a
47:46 - skill project
47:47 - and then the
47:48 - code for our lambda function is in here
47:51 - also and i can modify this code and you
47:54 - can start with templates
47:55 - i've got some other tutorials on the
47:58 - dabilab youtube channel
48:00 - that use
48:02 - templates from skilltumplets.com which
48:04 - is a site that that we set up at dab lab
48:06 - mostly for ourselves because when we
48:08 - start new still projects we
48:10 - start from code that is um
48:15 - kind of boilerplate code and so we've
48:16 - got some basic skill templates out there
48:20 - all right
48:21 - let's see
48:25 - i see karthik's got a lot of these
48:27 - questions here that's good
48:33 - yeah if you make changes to the
48:34 - interaction model you do need to rebuild
48:36 - the interaction model so anytime you
48:38 - make a change to the interaction model
48:39 - you do need to rebuild it
48:47 - so
48:48 - i know it's hard to debug lambda
48:50 - functions
48:54 - yes so um so on
48:56 - debugging um
48:58 - it depends on where you are in the
49:01 - testing so you can debug
49:04 - using
49:05 - just
49:06 - regular unit testing so mocha or chai if
49:09 - you're familiar with those with
49:12 - with javascript or node uh to do a lot
49:16 - of the debugging and then the cli also
49:19 - provides a simulate interface that you
49:22 - can use to uh to test the skill but when
49:25 - it actually gets to um to voice testing
49:28 - that's uh yeah you'll have to walk
49:31 - through that but most of
49:32 - most of the testing can be uh automated
49:35 - and there's um
49:37 - uh and i'll uh get into this later on
49:39 - but there's some good tools out there
49:41 - bespoking tools uh to help with testing
49:44 - and test automation and i'll i'll
49:46 - mention those later on in the stream
49:48 - on another day
49:52 - any other uh questions before we
49:56 - wrap it up for today let me see
50:24 - okay
50:31 - okay i think that's um i think that's
50:33 - got most of the uh the questions there
50:36 - so
50:37 - we're gonna we're gonna make this our
50:40 - stopping point for today
50:42 - and then tomorrow
50:45 - what we'll do is we'll pick up by
50:46 - talking in more detail about the skill
50:48 - that we're gonna build for the next uh
50:51 - four days and start working on that code
50:54 - so hopefully i'll see you guys back
50:56 - tomorrow if you have any questions um
50:59 - you can go ahead and post them here i'll
51:01 - i'll keep an eye out on this for
51:04 - uh the next few minutes to answer any
51:06 - questions if you have those but if not i
51:08 - will catch you again tomorrow and thanks
51:11 - thanks so much
58:30 - you