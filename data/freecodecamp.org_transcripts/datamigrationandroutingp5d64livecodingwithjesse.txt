00:04 - hey everybody welcome to live coding
00:06 - with jesse this is jesse and
00:09 - today we're going to work on
00:11 - uh routing and maybe bringing over some
00:14 - data
00:15 - and we're going to start out with
00:17 - uh
00:18 - figuring out a solution
00:20 - to a feature that i know that we've
00:22 - needed for a long time i've just kind of
00:24 - been doing other things
00:27 - so
00:28 - figure you know why not try it today i
00:30 - have an idea of how to make it work but
00:33 - i haven't tested it yet so we'll work on
00:35 - that together
00:37 - i'd like to get at least one pomodoro
00:39 - session in
00:40 - uh today and then maybe
00:43 - uh maybe another one or maybe we'll just
00:45 - go right to questions it depends on
00:48 - whether or not we figure this out
00:50 - so i already put in four pomodoro
00:53 - sessions of just data migration
00:56 - uh so
00:57 - my brain is ready to switch it up a
00:59 - little bit and uh
01:01 - and work on this
01:04 - so
01:06 - let me wait
01:09 - there we are
01:11 - i had to wait a second for the analytics
01:12 - data to update
01:15 - it was showing i had zero viewers
01:17 - uh which i know wasn't true because some
01:19 - of you were waiting before the stream
01:20 - even started
01:23 - all right just a heads up to everybody
01:25 - i'll probably remind you again at the
01:26 - end but i will not be streaming tomorrow
01:28 - i will be at the google i o extension
01:32 - conference in pittsburgh so if anybody's
01:34 - around uh the pittsburgh area and will
01:37 - be there let me
01:38 - let me know
01:41 - um let's see
01:44 - otherwise let me switch over so you can
01:46 - see the screen we'll get started
01:49 - i'm gonna start my pomodoro clock i'll
01:52 - just explain to you very quickly
01:54 - what we're trying to accomplish
01:56 - uh and and then we'll get to it if you
01:59 - all have any ideas on how to make this
02:01 - happen please let me know
02:03 - um
02:04 - but i'll say what we're gonna do then
02:06 - i'll explain to you what my idea is and
02:08 - then
02:09 - we'll we'll get to coding so
02:12 - this page this
02:14 - faculty page the url is education
02:17 - faculty so
02:19 - when we have slash education is the url
02:21 - that takes us to our it displays what's
02:24 - under the post type of majors
02:29 - but
02:31 - on this particular page we don't want to
02:34 - hard code this list what we want to do
02:37 - since we already have a post type for
02:39 - faculty members and you can see well you
02:41 - can't see it's too small but
02:44 - when you go to a faculty member page
02:48 - the url is slash faculty slash and then
02:52 - the faculty member's name
02:54 - uh so totally different post type
02:56 - but we have the category of the the
03:00 - program
03:01 - uh so what we should be able to do is
03:05 - say something like uh if
03:10 - if you go to this page to a faculty page
03:13 - within a certain program a certain major
03:17 - then
03:18 - grab
03:20 - also grab the the data from
03:24 - the
03:26 - the faculty post type but only those
03:28 - pieces of data that have the category
03:31 - that matches
03:32 - uh the um
03:34 - the program here from the url in this
03:36 - case education
03:39 - so
03:40 - it'll be a little bit different than
03:41 - what we're used to
03:43 - and
03:45 - we'll definitely have to um
03:49 - we'll have to
03:50 - iterate over that data so we're going to
03:52 - map over that data so first steps first
03:55 - is
03:56 - let's get a route into the router so we
03:58 - have something to look at on a page
04:01 - and then we'll get to the rest of it
04:06 - okay so here's our router
04:10 - and let's make sure we we have the
04:12 - english
04:15 - route
04:18 - let's just
04:21 - all right cool so we do have english
04:26 - so if we have english slash classes
04:30 - it goes to here we have senior thesis in
04:32 - your portfolio so let's go here and add
04:37 - a faculty
04:41 - as a route and if we're going to add
04:43 - faculty
04:45 - um
04:48 - then
04:49 - we'll pass in the slug
04:52 - or i'm sorry we'll pass in the id
05:05 - maybe here if the router's faculty will
05:09 - pass in
05:16 - maybe english
05:21 - let's try this
05:23 - so if
05:24 - if we have the route of faculty
05:32 - we'll pass in
05:34 - english
05:36 - but here's what i'm going to try to do
05:40 - i'm going to add in
05:44 - some extra stuff here and i'm going to
05:46 - see if our router can handle that
05:48 - so let me type it out and then i'll go
05:50 - back and explain what i'm what i'm doing
06:10 - default
06:12 - type is going to be
06:27 - um
06:47 - um
06:56 - equity list
06:58 - okay
07:01 - all right so i'm gonna save that
07:03 - i don't think it'll work right away
07:05 - we're gonna have to do some more work on
07:06 - our router but here's here's what i've
07:08 - done here's what i hope will will happen
07:11 - at some point
07:12 - hey everyone i see a few you saying hi
07:15 - uh in the chat
07:17 - so welcome hey anna john matthew and
07:20 - harshit
07:23 - oh harshit that's great uh harshit um
07:26 - and i have been working on a side
07:28 - project as well as nikki's been working
07:29 - on it in javascript
07:32 - i should say
07:33 - i've been doing
07:35 - not that much work at all
07:38 - harsh just been knowing horsham and the
07:40 - others have been doing all the work
07:42 - but just wanted to say hi and uh that
07:45 - that's actually gonna come out today the
07:46 - beta version so
07:48 - uh maybe harsha could let you know the
07:50 - url in the chat
07:52 - uh
07:52 - if it's if it's ready soon
07:55 - all right so here's what i think is
07:57 - gonna happen what i hope will happen is
07:59 - so we have
08:01 - when someone goes to the route english
08:04 - uh what will happen is by default we'll
08:06 - do the same thing as we normally do is
08:08 - that we're going to go to the the page
08:11 - the components
08:13 - of
08:14 - major
08:16 - and
08:17 - the default post type to get the data
08:19 - from is going to be majors
08:22 - and then the id which is that last part
08:25 - of the url by default will just be
08:27 - english to display the home page for the
08:29 - english department
08:30 - but then depending on what goes in here
08:33 - it may display something else
08:35 - but
08:36 - if we get
08:38 - faculty
08:40 - instead of you know anything else as
08:43 - that last part of the url i wanted to
08:46 - display
08:48 - a
08:48 - component
08:50 - that we're going to create called
08:51 - faculty list
08:55 - and i wanted to use the post type
08:58 - faculty because that's we're going to
09:00 - get the data from
09:02 - then
09:04 - i wanted to pass in as an
09:06 - id to graphql
09:09 - english
09:10 - so that we can use that
09:13 - to grab the category english
09:17 - and have those particular
09:19 - post type show up
09:21 - so there are a few things that might
09:23 - need to change
09:24 - i don't know if we can select uh
09:26 - categories by
09:28 - slug or we need to use an id
09:31 - not 100 sure so you might have to switch
09:33 - this to the id number for english also i
09:36 - don't know if we've built this
09:38 - functionality into the router yet to
09:40 - handle all of this i know it works for
09:42 - the ids but i don't know if it works for
09:43 - pages and types
09:45 - so first things first
09:48 - i guess we just navigate to it
09:50 - and see what kind of errors we get
09:59 - so
10:01 - first let's make sure i didn't mess up
10:03 - the normal routes
10:04 - so we're going to go straight to english
10:06 - and see if
10:07 - anything happens
10:08 - okay i did not mess up
10:12 - these routes which is awesome
10:17 - and
10:18 - i want to make sure
10:20 - let's see english classes
10:29 - let's see if this route works
10:33 - tell you the truth i'm not sure if this
10:34 - route ever worked
10:36 - because i don't know if i set up the
10:37 - data for it
10:57 - i'm guessing it's not going to work
10:58 - because
11:00 - nothing's happening
11:06 - all right let's look at another i see we
11:08 - can try something on the senior thesis
11:09 - then you pull it out
11:14 - all right enough with that let's just go
11:16 - to
11:17 - the faculty see if we we're going to get
11:20 - an error i just want to see what the
11:21 - error is
11:27 - did i
11:28 - mess this up a lot
11:35 - i'm just going to restart that server
11:47 - actually
11:50 - i don't know if i ever did a get pool to
11:51 - start things out
12:01 - no
12:04 - all right um
12:14 - let's just stash these for now
12:22 - yeah always start out your day with the
12:25 - get pool
12:27 - so otherwise you'll have weird stuff
12:29 - happen so how do i unstash something now
12:31 - i'm gonna have to look this up
12:33 - if anybody knows how to unstash what i
12:36 - just stashed uh offhand let me know in
12:39 - the live chat now otherwise i'm gonna
12:41 - look it up
12:54 - you can just get stash pop but once
12:56 - that's your changes okay
13:02 - sweet
13:13 - all right get stash pop so i did look it
13:15 - up but i see uh vishal you you put that
13:17 - in the chat you probably would have had
13:19 - it in faster if it wasn't for the delay
13:22 - uh in the in the stream itself so thank
13:24 - you
13:28 - thank you for that i never needed to
13:30 - unstash anything before that's crazy
13:32 - i've known this for years i've never
13:33 - actually had to unstash something
13:40 - that's one of the cool things i think
13:41 - about doing this kind of work you learn
13:43 - new stuff
13:45 - constantly
13:52 - okay and i'm not sure if there are any
13:53 - questions yet in the chat but uh just to
13:55 - let you know uh in case this is your
13:57 - first time watching uh i will get to the
14:00 - questions in the chat i'm just going to
14:01 - do a bit of code first
14:03 - and then i'll get to the chat later on
14:05 - so if you can just hang in there for a
14:06 - little bit your question will get
14:08 - answered
14:09 - hopefully i can answer it
14:13 - all right so now that
14:14 - we have the changes in here where they
14:17 - should be
14:18 - let's go back over here and see
14:21 - the site cannot be reached
14:24 - oh because i restarted it
14:26 - let's see if we can get this to load
14:28 - enough to give us some sort of error
14:30 - message
14:33 - otherwise i guess we can just start
14:35 - making
14:39 - our component
14:41 - you know i should be able to go down to
14:43 - the the routing function and just see if
14:46 - this would even work
14:47 - so let's
14:50 - let me just stop that for now
14:53 - let's go down to our routing function
14:55 - and walk through step by step what will
14:57 - happen
14:58 - if we give the routing function this
15:01 - this data
15:03 - all right so
15:05 - what i'm going to do is uh
15:07 - i'm actually going to
15:09 - open
15:12 - wait is this
15:14 - i may already have this open in both
15:16 - places
15:19 - no
15:26 - maybe i don't
15:32 - keep open
15:35 - i just i just want to open it up in two
15:37 - places that's all i want to do
15:41 - i want you all to be able to see uh
15:43 - what what we have at the top versus what
15:45 - we have at the bottom of this this uh
15:47 - page let's see if it'll let me all right
15:50 - cool
15:50 - so now
15:52 - we have the same file open in both sides
15:56 - let's shrink this down we don't need it
15:59 - and what i'd like to do is i'm going to
16:02 - leave this here so we can see exactly
16:04 - what data we're we're passing into our
16:07 - routing function
16:09 - and we're going to scroll down here to
16:11 - the routing function and step through
16:14 - what will happen with this data and that
16:16 - way even though we're not getting an
16:18 - error message to help us we should be
16:20 - able to catch the errors and adjust
16:24 - the um
16:25 - the routing function like that
16:27 - so i'm going to do my best to try to
16:29 - explain this as i go along
16:31 - uh if you if you'd like to look at this
16:34 - on your own computer check out the link
16:37 - to the repository it's in the
16:39 - description to this video or on the
16:41 - server.js file on the master branch
16:46 - okay so here's what happens
16:48 - when
16:51 - the browser would navigate to that
16:55 - slash english slash faculty route
17:01 - so it's going to look at this first one
17:03 - is going to be slash english the second
17:06 - will be faculty we will have no third
17:10 - all right
17:12 - so
17:13 - that first param english second param
17:15 - faculty
17:16 - all right let's continue on
17:19 - all right
17:20 - all this we don't need to worry about
17:28 - so the type
17:32 - is going to be
17:33 - first param
17:37 - the page equal page
17:40 - type first frame pages
17:43 - wait a
17:44 - second okay so this is not really going
17:47 - to be an issue because we're telling it
17:48 - what the type is so this is like kind of
17:51 - a default backup if we don't say that so
17:53 - we can keep on going through here
17:56 - so if
17:58 - the length of the params are one it's
18:00 - going to do this we can skip that
18:02 - because we have two
18:03 - right english and faculty so let's go
18:07 - all the way down to here we're going to
18:08 - go to this else if
18:10 - all right and this is what we want where
18:12 - it's there's two parts to the url
18:15 - okay
18:16 - so
18:17 - we're logging these defaults so
18:20 - if i didn't include the page and the
18:22 - type
18:23 - by default it would just
18:25 - go to the component called page and
18:28 - render that component and then it would
18:30 - use the post type which is whatever the
18:32 - first param is in this case it would be
18:34 - english it would say english pages that
18:36 - post type doesn't exist but it doesn't
18:38 - matter that's why we're explicitly
18:40 - saying what the post type is that we
18:42 - want here
18:44 - so
18:46 - we're going to look now
18:48 - if the first parameter is found in our
18:52 - translation object so our translation
18:54 - object is this huge object we can't even
18:56 - see all of it but
18:58 - we would find the first parameter here
19:00 - english okay
19:02 - so then if english.page exists which it
19:05 - does we're going to go in here
19:07 - and
19:10 - let's see if this equals an object which
19:13 - it does
19:14 - then we're going to say
19:16 - page equals translation object first
19:19 - param page
19:22 - standard
19:33 - okay we need
19:35 - we need to change it so this is where
19:37 - the the error is going to occur we don't
19:40 - have standard
19:42 - okay so what would normally happen is is
19:47 - we would put default as one key and then
19:49 - standard as the other key and then we
19:51 - would tell it but that's not going to
19:52 - work for us because if i were to type in
19:54 - english
19:56 - senior thesis
19:59 - that won't work for what we're trying to
20:00 - do here with our faculty
20:03 - or faculty list component here so we
20:05 - need to adjust this
20:08 - to check to see if standard is there
20:12 - um let's change the first param equals
20:15 - type
20:17 - so what will then happen
20:26 - oops down here
20:29 - pages your first room page so the else
20:33 - here is if it's not an object so what
20:35 - needs to happen is if it is an object
20:39 - we're going to look to
20:43 - standard would then have to be the
20:45 - fallback
20:46 - default
20:52 - yeah this
20:54 - i'm going to adjust this function in a
20:56 - way so that we can use custom
20:59 - values for page
21:00 - but if there isn't a custom value that
21:03 - matches
21:05 - then
21:08 - then we'll use
21:10 - standard
21:11 - okay all right so that's what we'll do
21:13 - then so
21:15 - in this case
21:18 - we're passing in
21:21 - let's see the page
21:23 - type
21:25 - okay so id so here's what we need to do
21:31 - so we're going to say
21:33 - if
21:37 - translation object from page
21:44 - dot
21:46 - pay page let me think
21:55 - so if this exists right if translation
21:57 - object first param dot page
22:00 - and then id which would be the second
22:03 - parameter which in this case is faculty
22:05 - if that exists as a key in this object
22:08 - which it does in this case
22:10 - then we're going to want to
22:15 - set page equal to
22:26 - this
22:27 - translation object first frame page
22:34 - id
22:35 - okay so which in this case page would
22:38 - get set to faculty list which is what we
22:41 - want
22:42 - uh we're gonna add an else
22:45 - in here and uh let's move this up a line
22:49 - just to clean it up
22:50 - so
22:51 - it'll try to find that id if for some
22:54 - reason this id isn't explicitly set here
22:58 - it will try to fall back and use
23:00 - standard
23:03 - let me think if that'll be enough
23:08 - no that won't be enough
23:10 - it won't be enough
23:12 - okay so we don't want
23:14 - we need another fallback
23:18 - any other fallback
23:20 - um
23:29 - this is getting a mess but
23:32 - we need another if statement here
23:33 - because we're not actually going to add
23:35 - a standard in so what happens if
23:37 - somebody puts in
23:38 - slash english slash senior thesis it's
23:42 - going to go through it's going to get to
23:43 - this point it's going to say okay that
23:45 - id doesn't exist so let's just use
23:47 - page.standard well page.standard doesn't
23:50 - exist either but we're not checking for
23:52 - that we're just assuming it exists
23:54 - so that's going to give us an error
23:56 - so we need to do first is check to see
23:59 - if this exists
24:04 - and that that needs to be an else if
24:13 - so else if
24:16 - this
24:20 - uh then our page can be set to standard
24:23 - and then we'll need to add one more else
24:26 - else we're just gonna go for the default
24:28 - so page is just going to equal
24:34 - our defaults
24:39 - oh okay let's save that
24:44 - let me check my time
24:46 - okay about two minutes
24:49 - that's not bad because then that'll give
24:50 - me some time to answer questions in case
24:53 - anyone's confused
24:57 - and then the next step will be which we
24:59 - probably won't get through the next step
25:01 - so i'm just going to tell you what it's
25:02 - going to be
25:06 - we need to find the type
25:10 - so
25:11 - first thing that's going to happen
25:14 - if the
25:17 - type
25:18 - exists as a parameter
25:21 - which it does
25:22 - and if it is the object which it is then
25:25 - we're going to go for this standard
25:27 - right our standard does not exist so
25:29 - basically what we're going to have to do
25:31 - right now is the same thing we did up
25:33 - here
25:33 - we're just going to replace type
25:36 - we're going to replace page with type so
25:38 - we can copy and paste this
25:40 - so let's go with
25:44 - from here
25:45 - down to here
25:57 - and
26:03 - you should be able to do this right
26:06 - okay
26:07 - and then in here
26:12 - oops yeah let's replace every instance
26:14 - of page
26:15 - with type
26:24 - with t y p e
26:32 - find type
26:38 - okay and then with id
26:52 - okay i think id will actually work so my
26:55 - timer is up but we we may be at a point
26:58 - where we could at least get an error hey
27:00 - yes we got some type of error
27:02 - let's see if we got more info
27:05 - no let's see if we have more info here
27:09 - nothing
27:12 - no
27:21 - one more refresh
27:27 - 404
27:29 - okay
27:30 - we'll come back to this
27:32 - and i'm gonna scroll up i'm gonna set a
27:35 - five minute timer now answer some
27:36 - questions and then we'll do another 25
27:39 - minute pomodoro session
27:43 - okay
27:55 - so
28:09 - all right trying to find a lot of hellos
28:11 - i'm trying to find a uh
28:13 - a question here
28:40 - i'm scrolling down i'm almost to the
28:42 - bottom and there are no questions yet
28:45 - i'll just hellos and you all talking to
28:47 - each other which i think is awesome
28:53 - here we go
28:54 - john hanson says would async promises
28:56 - work cleaner than all of those if
28:59 - statements yet honestly there's got to
29:01 - be
29:02 - there's got to be a better way to do
29:04 - this i know
29:07 - when we first did this and i believe it
29:09 - was nikki that did a lot of the original
29:11 - work it was a much smaller
29:15 - function i've added a lot more to this
29:18 - as i came across different
29:20 - parts of the site the old site
29:23 - that i needed to bring over and make
29:24 - sure the urls work
29:26 - so
29:28 - what we originally thought would work
29:30 - didn't work for every use case so we
29:33 - just kind of added this stuff on
29:35 - i'm definitely open to refactoring at
29:38 - this point i if this is working the way
29:41 - we're doing it i gotta go with it for
29:43 - now because we're gonna launch in less
29:46 - than a month
29:48 - so i can't
29:50 - i just don't think i have
29:53 - enough time to
29:55 - refactor this and make it work and make
29:57 - sure it works in all our use cases
30:00 - but i think it's a worthwhile thing to
30:02 - do at some point
30:04 - because this is getting quite large
30:07 - there are a ton of nested if statements
30:09 - so at the very least it's just a mess to
30:12 - read and think through
30:14 - uh i mean i'm able to think through it
30:16 - right now but i've seen it
30:18 - a lot
30:19 - so
30:20 - yeah it's not ideal
30:25 - nikki says
30:27 - yeah i feel shame when i see that code
30:29 - it made sense at the time but boy does
30:30 - that look messy well nikki it's not your
30:32 - fault
30:33 - like i just said like a lot of the mess
30:35 - is things that i've had to add in so i
30:37 - think the the original when i saw the
30:39 - original function nikki i my immediate
30:41 - thought was nikki is a genius like this
30:44 - is amazing this works but then as i dug
30:46 - through the data on the site and the
30:48 - content i realize like oh this won't
30:51 - work for everything
30:52 - which has it's not your fault at all
30:54 - based on the information i gave you
30:57 - it worked perfectly
30:59 - but uh
31:00 - i just didn't have complete information
31:02 - at that time
31:15 - michael was volunteered to make the
31:17 - chain refactoring changes and he says i
31:19 - would but i think jesse wants the site
31:21 - to work
31:22 - hey if anybody wants to tackle
31:23 - refactoring
31:25 - feel free to to um
31:27 - fork the repo make a branch
31:30 - and try it out you know it it won't
31:33 - break the main site you know of course
31:35 - and if i were to try to redo this i
31:37 - would most definitely do it on a
31:38 - separate branch i'm not i'm not even
31:39 - going to attempt to
31:41 - untangle this this massive if statements
31:44 - uh on the master branch here
31:52 - oh cool phoenix is here it says
31:54 - uh sorry late i was doing my 30 days 30
31:58 - sites challenge submission that's
32:00 - awesome so uh you're still keeping up
32:02 - with that that's
32:04 - that's amazing doing 30 sites in 30 days
32:07 - so
32:09 - i did
32:10 - i just think that's awesome
32:12 - so keep me up to date on on the stuff
32:14 - you're
32:15 - you're putting out there i'd love to
32:17 - check it out
32:19 - matthew says thanks for doing these live
32:21 - streams jesse you learned a lot from
32:23 - watching your workflow
32:25 - oh you're welcome thank you for saying
32:27 - that
32:29 - hey frankie's here
32:33 - nice to see you here frankie
32:37 - all right i think my timer is beeping
32:39 - yep
32:40 - let's start another pomodoro session
32:43 - and let's get this to work
32:47 - okay
32:51 - let's look at where we potentially could
32:53 - have some
32:54 - problems one is that this faculty
32:57 - listing it doesn't it doesn't exist so
33:00 - let's make this
33:03 - and
33:06 - then we'll go from there
33:09 - the best thing would probably be you
33:11 - clone an existing component
33:14 - and then adapt it
33:16 - i think we can get things done
33:18 - more quickly like that
33:21 - so
33:28 - i was hoping i'd have
33:30 - a good one already open but i don't all
33:33 - right so let's just go in here to our
33:35 - pages and
33:42 - oops that was css
33:44 - i just stopped because it had the right
33:46 - names
33:49 - there we are
33:50 - so the
33:53 - faculty.js component is probably going
33:56 - to be the closest to what we're actually
33:57 - going to use
34:04 - no
34:07 - will it
34:10 - yeah you know what it it might
34:20 - okay and it it is using the new
34:23 - the new way to do it all right let's
34:24 - grab this
34:26 - we're gonna copy this we're gonna make a
34:28 - new page
34:33 - what called it
34:35 - i don't remember what we called the new
34:37 - page
34:41 - faculty list
34:44 - all right new page
34:50 - all right faculty list dot js
34:55 - uh let's change what we need to
35:00 - oops let's go
35:02 - faculty list
35:04 - go down here
35:06 - faculty list
35:09 - and
35:11 - i'm going to pass the id
35:21 - we're going to have to make
35:23 - a separate query for this
35:26 - because it's going to be a little
35:27 - different
35:29 - than what we normally have
35:31 - i think
35:41 - at least we can save that
35:42 - let's just refresh see if we get
35:44 - anything different
35:46 - not expecting it but
35:48 - oh nice
35:51 - we got an error message
35:53 - happy about that
35:57 - all right cool so this is great news
35:59 - it may not look like great news but this
36:01 - is really great news so
36:03 - if you can see let's see if we let me
36:04 - zoom in
36:06 - so check that out so it says
36:08 - cannot read property node of undefined
36:10 - and it's giving us this error from
36:13 - facultylist.js
36:15 - line 34. that means that our router
36:18 - worked
36:19 - and it directed
36:22 - the user directed the flow of
36:25 - our data i guess to that faculty list
36:28 - component
36:30 - not only that
36:32 - but it seems that
36:36 - something came through
36:38 - for id
36:42 - and we're getting
36:44 - because it's actually like attempting to
36:45 - make
36:46 - that
36:48 - um
36:50 - that graphql
36:53 - query
36:54 - right so
36:57 - that error tells us that i think we did
36:59 - what we were supposed to do
37:03 - now what we need to do is adjust our
37:05 - query
37:08 - to get the data that we need from this
37:11 - all right so here's what we need
37:14 - the type is correct
37:17 - we can leave it as is
37:19 - because it's going to go to the faculty
37:21 - post type
37:22 - the id
37:24 - needs to change though
37:27 - so what query are we using
37:30 - we're using profile query
37:33 - yeah we need a different one we need
37:37 - i guess we'll make a faculty list query
37:42 - let's check out our queries
37:45 - i'm going to see if there's one that
37:46 - would work
37:53 - news
37:57 - i don't know that we've used any queries
37:59 - yet that return
38:03 - exactly what we need so let's just look
38:05 - first at this
38:07 - profile
38:14 - where's our there we go profile
38:18 - okay let's move it over here so we can
38:20 - look at both at the same time
38:27 - all right so
38:28 - what we're look what we're searching for
38:30 - now
38:32 - is
38:36 - so our type is here and that's that's
38:37 - fine that doesn't need to change but
38:39 - where we're saying name
38:41 - uh we're looking for name name so that's
38:43 - that id
38:46 - and the name ends up being
38:50 - our slug
38:51 - or our wordpress slug
38:55 - but we don't care about that what we
38:57 - want
38:58 - is
39:02 - we want to search by
39:09 - category
39:11 - by faculty departments
39:25 - hmm
39:29 - i wonder
39:42 - uh hold on i don't want to do it to this
39:44 - one
39:45 - um
39:50 - i don't think that's going to work i'm
39:51 - just kind of trying it now
39:53 - because if it does end up working it'll
39:56 - save us a ton of time
39:59 - i don't really have hopes for that i
40:01 - think we're going to have to look up
40:03 - exactly how to do this with wp graphql
40:06 - which is the plugin that we're using
40:08 - i need to make a new query and we'll
40:10 - call this
40:13 - faculty list
40:22 - okay
40:30 - so let's just refresh the page see what
40:32 - we're getting
40:36 - no
40:44 - we could use
40:52 - there i have it
41:00 - all right
41:01 - let's see
41:03 - i changed this to
41:31 - is that not it what's my wordpress url
41:34 - wp
41:36 - franciscan dot university
41:39 - yeah that's it
41:43 - all right let's try to bring our query
41:46 - over
41:55 - all right we don't we don't actually
41:56 - need all that let's go from here
42:06 - all right the type
42:12 - is going to be
42:25 - okay
42:29 - all right let's just start from
42:46 - hold on faculty
42:58 - yeah let's look
43:05 - let me look over here at the live chat
43:08 - to see if anybody is
43:10 - giving any suggestions
43:15 - okay
43:17 - suggestions
43:19 - let's
43:30 - let's just look up the documentation
43:35 - uh let me move here every single
44:02 - okay
44:18 - id
44:39 - hmm
45:17 - i'm not getting exactly the same thing
45:19 - uh so what i want to see is
45:25 - in this case i guess we can do
45:30 - we're doing education
45:41 - wait can i pass this as a string
45:51 - sorry
45:53 - i thought that's what it just said i
45:54 - could do right
46:06 - episode
46:16 - okay i need to put the variable in there
46:19 - all right that makes sense
46:21 - where am i
46:47 - category
47:04 - all right i don't know what i'm doing
47:05 - let's take this out
47:09 - i don't need that
47:17 - faculty where
47:22 - i don't want it to be named though
47:35 - faculty department
48:01 - departments ali equals
48:07 - who is this
48:20 - i'll leave this right now
48:23 - right
48:39 - hmm
48:42 - i do need that but what's wrong with
48:44 - this
48:49 - all right
48:53 - let me check the chat again
49:03 - all right michael says shouldn't id be
49:05 - faculty department id
49:07 - um
49:10 - id is the graphql id
49:21 - i'm not sure
49:22 - okay the truth and i don't know why i'm
49:24 - not getting
49:32 - like what i should i should be able to
49:34 - get some schema stuff
49:40 - about
49:42 - there we go let me see
49:48 - faculty
50:05 - so
50:16 - hmm
50:18 - all right let me see
50:22 - let's see if there's any more
50:24 - data on this part of it list of posts
50:27 - list of posts with offer info
50:30 - list of users
50:48 - advance
50:49 - ah there's nothing for advanced queries
50:51 - no
50:52 - advanced topics
50:58 - all right
51:26 - hmm
51:33 - let me take care
51:37 - all right let me look
51:42 - michael says underneath faculty
51:43 - departments
51:45 - okay let me let me look back here yeah
51:47 - so under faculty
51:48 - departments oh you know what
51:52 - if i was going to do it like that i
51:54 - would need to put let me go back here
51:57 - faculty departments i don't need name
51:59 - like that i need faculty departments
52:02 - edges
52:03 - node
52:06 - name
52:17 - let's see if i can get anything from
52:19 - that
52:21 - no
52:25 - all right
52:26 - let's
52:29 - let me just copy this over so i don't
52:33 - i think i've thoroughly messed up what i
52:34 - was trying to do over
52:36 - over here
52:42 - actually let me just do
53:02 - what just happened
53:08 - all right
53:32 - okay it does not like that
53:54 - what were you working with originally
54:15 - let's see
54:17 - michael says why don't you try
54:19 - hard-coding the variable into the query
54:22 - yeah actually let me
54:27 - all right so we we are actually getting
54:29 - some stuff in here
54:31 - uh let's try
54:32 - this first
54:47 - there we go
54:49 - right
55:11 - maybe we could use category name
55:13 - but it's it's a custom
55:16 - taxonomy
55:24 - all right i mean let's let's try it
55:41 - category name
55:46 - is education
55:52 - double oh i gotta use double quotes
55:54 - okay
56:01 - name variable never used
56:04 - yeah
56:16 - do i need this
56:26 - man it's been so long since i made
56:28 - graphql queries i don't remember this
56:30 - the right syntax for this
56:35 - do i even need this
56:45 - um
57:21 - there we go
57:23 - all right let's see
57:30 - okay
57:32 - to return nothing
57:37 - um
57:41 - uh
58:00 - doesn't think i can do
58:20 - and i know
59:08 - um
59:31 - i can do a search
59:33 - but i have a feeling the word education
59:35 - is going to be in all of these
59:55 - all right um
59:57 - my timer went off so let me take a
59:59 - little break oops a short break
60:02 - and uh answer some questions
60:05 - i i have one more idea
60:08 - [Applause]
60:20 - all right
60:27 - ah so
60:32 - it looks like
60:46 - oh [ __ ] have you found any bugs or need
60:48 - some feature on pom-pom i just never
60:51 - looked at it in six months
60:53 - uh no i mean it's it's working great so
60:56 - i don't know what i would um
61:00 - what i would need um
61:10 - i
61:12 - yeah the only thing i would say on there
61:14 - is the uh the beeping
61:17 - the beefing can get a little annoying uh
61:20 - like it's just a long enough amount of
61:22 - beeping it's good because i never miss
61:24 - the beep
61:25 - but if i like hear the beep right away
61:27 - and i'm like okay it's beeping and it
61:29 - just keeps beeping and beeping and
61:30 - beeping so
61:32 - i don't know maybe like a warning beep
61:34 - and then some silence and then the
61:36 - ending beep instead of like constant
61:38 - beeps other than that though i really
61:40 - like it
61:45 - and uh in case you're you're wondering
61:47 - pom-pom is this
61:49 - pomodoro timer that uh harshit built
61:51 - that
61:53 - so it's really cool
61:57 - okay
61:58 - oh my spotify quit playing
62:17 - okay
62:28 - all right some some comments got hidden
62:31 - so uh i just unhid a few comments so if
62:33 - your comment got hidden before it's it's
62:35 - up now
62:42 - phoenix says i just wanted to ask when
62:45 - looking for a remote job what documents
62:47 - are mandatory to be submitted
62:49 - like if i work remotely for a company in
62:51 - the u.s what documents do i need
62:54 - you know what i'm i'm not entirely sure
62:57 - i don't know what's what's required like
62:58 - if you were to actually come here and
63:00 - work in the united states that would
63:02 - require documentation i don't really
63:04 - know
63:05 - if you're doing remote work
63:09 - i don't know
63:12 - because it i guess it depends too like
63:16 - if you're going to be a full-time remote
63:18 - employee for a company there's probably
63:20 - going to be some tax documents and
63:21 - things that need to be
63:23 - set up
63:24 - if you're
63:25 - like a freelancer doing remote work for
63:27 - a company then that that probably is a
63:29 - little bit easier
63:57 - all right michael
63:58 - has put in uh a query
64:03 - let's try this
64:07 - i'm gonna copy and paste this and and
64:09 - we're tr we're gonna try it
64:11 - this is cool this is like a totally
64:13 - reverse
64:14 - way of doing it
64:20 - but if it works this is gonna be awesome
64:23 - i just wouldn't have thought of that at
64:25 - all
64:34 - ah no okay let's try to um
64:40 - it's missing less
64:43 - curlies yeah i just say let's let's try
64:46 - to um
64:47 - separate this out so we get
64:51 - what we need here so
64:58 - education
65:03 - edges
65:08 - node
65:11 - name
65:12 - oops let me start up another pomodoro
65:14 - timer
65:25 - difficulty
65:32 - title
65:33 - slug
65:39 - two
65:41 - three
65:43 - four
65:44 - five
65:51 - all right so one
65:53 - two three four five
65:57 - six seven
65:58 - one two three four five
66:02 - six
66:03 - seven
66:08 - whoa
66:12 - michael
66:14 - ah michael thank you so much
66:19 - i'm so happy
66:21 - i'm sorry this is awesome
66:24 - let me enjoy it for a second and then
66:26 - i'll try to explain what's going on
66:30 - this is really cool
66:32 - so cool
66:35 - all right
66:37 - so
66:38 - michael
66:39 - has figured this out
66:43 - and here's what's happening
66:45 - instead of searching for faculty
66:48 - and then trying to somehow sort by
66:51 - faculty departments which
66:53 - there was no option to do that it wasn't
66:55 - let me do this so michael has the idea
66:58 - like okay why not try to find faculty
67:00 - departments
67:02 - where
67:03 - the name equals education which makes
67:05 - complete sense that's that we should be
67:07 - able to find those
67:10 - and then
67:12 - faculty
67:14 - you can get back to the faculty through
67:16 - that which i i never even thought was
67:19 - possible
67:20 - that's amazing
67:23 - amazing that's that's awesome so let's
67:27 - let's make sure
67:28 - okay yeah so we all we need then
67:30 - is the name
67:32 - and the title
67:37 - and i guess the [ __ ] we need the slug to
67:40 - be able to construct the url
67:42 - so what are we getting now so title
67:45 - uh slug
67:51 - shoot how are you gonna get this
67:57 - we don't have that yet
68:01 - when we brought the data over that was
68:04 - contained in the content
68:07 - as one big block so
68:12 - that data is not going to be available
68:14 - until we can make
68:17 - a custom field and put it in the custom
68:20 - field which is something i was planning
68:21 - on doing anyway that maybe something
68:23 - needs to get done sooner than i
68:25 - anticipated
68:30 - okay
68:33 - all right but this
68:35 - works
68:36 - so let's take this
68:41 - and move it over here
68:45 - um
68:46 - yeah
68:56 - let's see
68:58 - you know what am i gonna pass the type
69:00 - in
69:01 - i really don't need to pass the type
69:04 - in we're not going to reuse this query
69:08 - at least not now
69:10 - not right now so i think we're fine i
69:12 - just hope it doesn't give us an error
69:14 - because we're bringing in type and not
69:15 - using it
69:22 - and let's change this name
69:28 - faculty list query
69:30 - let's save that let's go over here and
69:32 - we're going to use
69:34 - um
69:35 - oh you know what no wonder any none of
69:37 - my tests earlier worked i never
69:39 - connected this to the component so
69:42 - i mean not that they would have worked
69:43 - anyway because i didn't get it right but
69:46 - i really didn't get it right
69:48 - uh so this query is called
69:51 - faculty list
69:53 - and
69:54 - this is
69:56 - actually let's
69:59 - find this
70:00 - elsewhere
70:06 - faculty list query
70:11 - save it
70:26 - all right now let's see what we're
70:27 - getting
70:29 - there we go all right can't read edges
70:31 - of undefined so this makes sense because
70:33 - we're going to need to redo
70:36 - all of this how we're getting this data
70:40 - so we don't need
70:44 - all this kind of stuff here
70:47 - content data
70:52 - oh
70:53 - we can leave it for now we just we don't
70:55 - really need it
70:59 - so we don't want content we want then
71:03 - in the div
71:05 - we want to map over i you know what if
71:08 - we take our search page we should be
71:10 - able to copy and paste some things that
71:12 - will be helpful to us
71:15 - so let's check out our search page
71:21 - oops
71:24 - search.js
71:26 - uh because we're getting data here
71:28 - that's
71:30 - uh you know what we're using graphql for
71:33 - this
71:34 - so it may not be as helpful as i thought
71:42 - um
71:43 - yeah it won't be shoot
71:45 - okay
71:47 - that's all right we can see what data
71:49 - we're getting
71:50 - from here so the data will be in this
71:52 - format so we can just use this
71:55 - uh to figure out how we're gonna do
71:56 - things
71:59 - oh nikki uh reminding me delete that
72:01 - globalx
72:06 - where's that at there we go
72:19 - all right so
72:29 - we're not even getting content really so
72:31 - yeah let's get rid of this
72:33 - we don't want content what we want is
72:42 - node
72:43 - what are we getting
72:51 - faculty
72:53 - node faculty edges
72:59 - all right so we're going to say
73:02 - we're going to call this
73:10 - faculty data
73:13 - and then down here
73:17 - let's just start with what we're going
73:19 - to do here so we're going to say
73:26 - uh we're going to have a container div
73:34 - and then within that
73:36 - let's map
73:42 - let's go
73:44 - faculty data dot map
73:49 - and
73:50 - i'm gonna say
73:51 - data
73:53 - oops let's say
73:58 - faculty
74:10 - and then within here let's just for
74:12 - right now do
74:14 - an h3
74:16 - and
74:19 - we'll put in
74:20 - what's it called
74:22 - title yeah let's just put in title
74:28 - h3 is going to be faculty
74:31 - dot title
74:40 - okay
74:41 - and then here
74:45 - am i gonna have any problems with this
74:57 - i don't think i'll need to set this uh
74:59 - dangerously set enter html for the title
75:01 - i think we should be fine
75:06 - what is all this oh indentation all
75:09 - right fine
75:11 - now what is this
75:13 - uh key prop okay
75:15 - key
75:16 - is gonna equal
75:22 - faculty slug
75:24 - because that'll be unique
75:27 - now let's try this
75:29 - factory list we're going to map over
75:31 - let's see what we get here
75:36 - no what happened edges can i read edges
75:40 - oh did i mess it up and not account for
75:42 - the edges
75:43 - in the faculty
75:46 - no i didn't i didn't account for node
75:48 - though
75:50 - so we got node
75:52 - faculty
75:54 - edges in the node again
75:57 - let's see
76:02 - oh i know
76:04 - so it needs to be
76:07 - our query is putting in the type
76:14 - faculty list or something
76:20 - yeah what do we have going on here
76:30 - we're passing in
76:34 - faculty that's so that's not what we
76:35 - want we want
76:39 - data faculty departments
76:45 - faculty departments
76:55 - let's try that
76:57 - i'm getting a bunch of messages on my
76:59 - phone
77:00 - let me check to make sure it's not work
77:15 - oh har [ __ ]
77:26 - harsh is sending me messages on twitter
77:28 - at the same time
77:38 - okay
77:42 - let's see what we have now oh nice we
77:45 - didn't get an error right away
77:47 - each shot actually key prop
77:51 - another method of query
78:00 - oh
78:02 - i know what else i messed up
78:07 - faculty
78:14 - um
78:26 - hey there we are
78:28 - awesome
78:31 - why are we still getting
78:34 - needing this iterator thing i thought we
78:36 - had a key problem
78:39 - key
78:40 - yeah the h3 has a key
78:45 - why all right i'm not worried about that
78:48 - right now i'll figure that out but
78:50 - all right cool
78:52 - so
78:54 - we got the data
78:56 - displayed on the page
79:00 - still need
79:03 - we we need to do work on the data itself
79:07 - in wordpress
79:09 - to to get the data that that we need uh
79:12 - so like you notice we don't have a
79:14 - picture
79:15 - we don't have the title we don't have a
79:17 - link
79:18 - we can actually make the the link to
79:20 - their page we have enough data for that
79:25 - but those are things that are going to
79:26 - be really boring that need to happen in
79:28 - wordpress and it's just going to be a
79:30 - lot of i create the custom fields and
79:33 - then a lot of copy and paste work
79:35 - hopefully i can maybe get a student
79:37 - worker to do that
79:42 - so that i can keep working on
79:44 - uh on other things but
79:47 - actually not not too bad this is a
79:50 - mission accomplished thanks to michael
79:52 - says thank you again
79:54 - uh let me
79:57 - yeah i'm gonna end this i have 10
79:58 - minutes left in this pomodoro session
80:00 - but i'm just going to end it and go to
80:01 - the chat now
80:04 - and
80:08 - let me
80:12 - let me look
80:16 - all right
80:17 - so i found where i left off in the chat
80:20 - if you have any questions please let me
80:22 - know now
80:25 - and as soon as i get to the bottom of
80:27 - the chat i'm gonna end the stream
80:29 - oh yeah i got a meeting soon so
80:31 - definitely gonna end the stream soon
80:37 - and
80:38 - uh harshit i got your messages on
80:40 - twitter i'm not sure if you also sent a
80:41 - message in the chat but i'm giving you
80:44 - access right now on my other screen
80:50 - [Music]
80:53 - i'm not sure why
80:58 - you're appreciated
81:02 - i'm not sure i made you an admin so i
81:04 - don't know why but oh um
81:07 - i guess i'll make you
81:10 - project owner as well
81:15 - okay
81:16 - so now you should have full access um to
81:20 - the the project
81:22 - since you're the project owner just
81:23 - don't don't run up a bill on my credit
81:25 - card though and
81:27 - other than that you're good to do
81:29 - whatever
81:39 - oh hershey says use prettify button in
81:42 - the the graphq graphql thing
81:45 - oh yeah so
81:47 - that would have saved me a minute
81:49 - wish i would have looked over thanks
81:50 - harsha so i manually put all those
81:54 - those breaks in
81:57 - oh well
81:58 - glad i learned it now though
82:11 - see
82:15 - you gotta close out of it michael's
82:16 - saying you gotta close that other div
82:18 - all right what did i mess up with
82:29 - all right i must have closed it then i
82:30 - don't i don't know what i was doing
82:38 - and uh michael said michael has got a
82:40 - scholarship for nanodegree for udacity
82:45 - michael you may have already told me
82:46 - this but just in case i haven't done so
82:48 - already
82:49 - uh
82:50 - congratulations i'd like to congratulate
82:53 - you for that
83:01 - okay for the mobile web specialist cool
83:15 - all right
83:19 - all right rohan verma says i already did
83:22 - the machine learning nanodegree the
83:23 - basic and advanced six months long
83:25 - course
83:27 - oh awesome congratulations
83:29 - um
83:31 - roland how was that course would it if
83:33 - you had to
83:35 - give advice on whether the course was
83:36 - worth it for someone to take what would
83:38 - you say
83:50 - oh harshit asks if i'm going to run a
83:52 - wordpress cluster in production or we'll
83:54 - add more power to the droplet uh what
83:56 - i'd like to do is
83:59 - uh maybe run a cluster if i don't have
84:02 - time i will just add more power to the
84:04 - droplet i've been looking into
84:07 - actually taking the the database and
84:10 - hosting that like on aws or google or
84:13 - something on one of their um
84:17 - managed database services
84:20 - uh to just kind of take that
84:22 - they'll handle backups and scaling and
84:24 - things like that and i won't have to
84:25 - worry about it
84:27 - and then still i would have to host
84:29 - wordpress on a droplet or something
84:32 - so
84:34 - that's my plan and in which case if i do
84:37 - that i i still
84:39 - wanted to
84:42 - i would like it to be on multiple
84:45 - droplets
84:47 - because there is going to be a lot of
84:48 - traffic
84:57 - uh rowan says there's no js suitable for
84:59 - hpc
85:01 - i don't know what hpc is uh if you let
85:04 - me know what that stands for
85:06 - maybe i can answer
85:16 - oh michael says jesse had an issue on
85:17 - what info you need so i can take a look
85:19 - you know what michael it's not the the
85:22 - the info isn't even there
85:24 - so that's the problem is that
85:27 - we we can't get it from graphql because
85:30 - it doesn't exist
85:31 - so the data needs to be entered into
85:33 - wordpress first like even the the fields
85:36 - itself don't even exist
85:46 - oh okay
85:48 - harshit uh
85:52 - has done what he needed to do and i can
85:56 - he doesn't need to be project owner
85:58 - anymore so i'll drop you back down
86:00 - horseshoe just let me know if you need
86:01 - it again
86:02 - uh it's not really a big deal i trust
86:04 - you
86:16 - all right rohan says i would say machine
86:18 - learning nanodegree program for udacity
86:20 - is awesome for those who are migrating
86:23 - from some other field to machine
86:24 - learning
86:25 - but a course from coursera deep learning
86:28 - ai specialization
86:30 - is better than udacity
86:35 - oh okay that's good to know because i've
86:37 - i've considered knowing the udacity
86:39 - course
86:41 - uh but it's
86:42 - it's definitely not it doesn't have
86:44 - anything to do with what i'm working
86:45 - with right now
86:47 - uh so it probably wouldn't help me that
86:49 - much my day-to-day work it would be a
86:50 - big commitment
86:52 - of money and time
86:54 - so maybe
86:56 - i don't know
86:58 - maybe i'll check out that other course
87:00 - and see if that's
87:01 - would be less of a time commitment
87:04 - let's see how it's set up
87:15 - okay rowan says high performance
87:17 - computing
87:18 - um is what hp he's talking about with
87:20 - hpc
87:22 - tell the truth i i don't really know i
87:25 - don't have enough knowledge about that
87:28 - uh to say one way or another so
87:31 - apologies on that if anybody else has a
87:33 - better insight than i do into that
87:35 - please let rohan know in the chat
87:40 - and
87:43 - you know what i
87:45 - yeah i got a meeting coming up soon and
87:47 - i've gone through everything in the chat
87:49 - so
87:51 - tomorrow i will not be streaming i will
87:53 - be at the google i o extension uh
87:57 - conference in pittsburgh
87:59 - so please let me know if you're going to
88:01 - be in pittsburgh especially if you're
88:03 - going to be at the conference i'd love
88:06 - to be able to say hello in real life
88:09 - and also please check out
88:12 - uh
88:14 - jsaf
88:15 - so um that's a website that
88:19 - i've been working on with with a few
88:20 - other with harsh it with nikki uh with
88:23 - javascript who's in there sometimes
88:25 - uh in the live chat
88:27 - and it's just a place where you can
88:29 - share your github repos share a little
88:31 - bit of info with that
88:32 - it can help you search for other
88:34 - people's repos uh
88:36 - i think in potentially a better way than
88:39 - you can on github
88:41 - uh totally built with a lot of the
88:43 - technologies that we've been working
88:45 - with here
88:47 - it's open source you can check out you
88:49 - know the project on github and
88:51 - contribute
88:52 - but definitely check it out
88:54 - harshit
88:56 - let me see
88:57 - i don't know if it's down or up now
88:59 - harsh it's working on it but maybe i'll
89:00 - um
89:01 - i'm going to paste the link in here
89:05 - i pasted the link in there now
89:07 - you may have to copy and paste it
89:09 - sometimes links are weird in the youtube
89:11 - chat
89:12 - um
89:14 - are we using the
89:16 - beta.javascript.af are we using just
89:18 - straight up javascript.afrishit
89:32 - all right it looks like
89:35 - all right yeah javascript af redirects
89:37 - anyway
89:38 - oh there we go yeah
89:40 - so
89:41 - you can you don't have to add in the
89:43 - beta it redirects
89:46 - um
89:47 - if you just use javascript.af but anyway
89:50 - please check it out if you find some
89:52 - weird stuff going on or if you have
89:53 - ideas for it open up an issue on github
89:56 - and let us know
89:58 - like i said
89:59 - we'd love to have a lot of ideas and
90:01 - contributors we think this could be a
90:03 - cool resource for the community and um
90:07 - and and we're not
90:10 - we like we don't have funding we're just
90:11 - doing this as a as a side project right
90:13 - now you know we haven't been getting
90:15 - paid um harsh just been doing a ton of
90:17 - work i've been paying for
90:19 - the domain and servers and everything so
90:22 - um
90:24 - yeah so any help that you could give
90:25 - would be would be awesome and i don't
90:28 - mean like just financially i mean like
90:30 - in terms of your ideas uh you know
90:32 - advice
90:33 - pull requests things like that so
90:37 - uh anyway i will probably be streaming
90:39 - on wednesday and i'm gonna try to maybe
90:42 - do some updates on instagram
90:44 - from the google i o conference i don't
90:46 - know if i'll be able to get any updates
90:48 - on youtube but if i do they won't be on
90:50 - the free code camp channel they'll be on
90:52 - my own youtube channel so the link to my
90:54 - youtube channel is in the description
90:56 - you can also i think find a link to my
90:59 - instagram on my youtube channel so
91:03 - uh
91:04 - if i happen to be able to do any updates
91:06 - on
91:07 - on youtube or instagram uh if you follow
91:10 - me or subscribe then uh you'll probably
91:12 - get notified
91:14 - um
91:16 - let's see i think that's it so i'll see
91:18 - all wednesday have a great day today and
91:20 - uh and tomorrow
91:22 - and
91:24 - let's see
91:27 - sorry i couldn't find the button to
91:29 - leave so
91:30 - try to do my usual outro and then i
91:32 - couldn't find the button i was on the
91:34 - wrong page all right
91:36 - anyway thank you all so much uh and i'll
91:39 - see you on wednesday