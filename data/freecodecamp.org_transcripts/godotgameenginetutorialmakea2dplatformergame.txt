00:00 - what is up guys back at it again with
00:03 - another godot tutorial let me just
00:05 - preview the game that we're going to
00:07 - create it's a let's say a 2d platformer
00:10 - i don't know the gender of this game i'd
00:12 - call the 2d platformer i don't care i'm
00:14 - gonna hit command b and run the game
00:16 - just so that i can preview the game i
00:17 - also did this game in unity as well i
00:19 - called it monster chase and i'm gonna
00:21 - call a monster chase here as well so we
00:23 - have our player over here he is moving
00:25 - and he needs to avoid these monsters
00:27 - because if they kill him if they hit him
00:29 - and apparently i'm very good at this
00:31 - game come on man where's the monster
00:33 - here from the left side because we're
00:34 - randomizing here's another from the left
00:36 - side and one when it touches me i'm just
00:38 - gonna resize this so we can play a
00:40 - little bit better but anyways when one
00:42 - of these monsters touches me and you
00:43 - just saw i'm gonna die you see bam boom
00:46 - i have died the game has restarted so
00:48 - basically that is the game but we will
00:50 - see how we can create and control our
00:52 - player how we can create these monsters
00:55 - how they can have their own ai and how
00:57 - we're gonna do all of the good stuff
00:58 - that you just saw so
01:01 - let's get into the video so the first
01:03 - thing i'm gonna do is delete this editor
01:06 - or close this editor because i have
01:08 - another one and yeah don't mind my
01:10 - edit video recording software over here
01:13 - so voila here is our new project the
01:15 - first thing that i'm going to do is i'm
01:16 - going to create a 2d scene and this one
01:19 - is going to be gameplay so i'm going to
01:21 - call this one gameplay and in the
01:22 - resources folder i'm going to create a
01:24 - new folder and call it scenes and hit ok
01:27 - and in the scenes folder i'm going to
01:28 - save the gameplay scene so go over there
01:31 - and save it
01:32 - now before we continue let's go over
01:34 - here and import these assets so these
01:36 - are the assets i'm just going to copy
01:37 - them these sprites you can download the
01:39 - link will be in the description below so
01:42 - make sure that you download
01:50 - it so open file manager paste them so
01:53 - when i go back here in my engine they
01:55 - are going to load i'm going to click on
01:57 - the plus button right here next to
01:59 - gameplay to open the new scene because
02:01 - we're going to create a player and here
02:03 - i'm going to call this one player
02:05 - because he is going to be our player i
02:08 - mean what else can i say is going to be
02:10 - our player
02:11 - now in regards to our player
02:14 - i'm going to change the type because
02:15 - currently the type is node 2d i'm going
02:17 - to right click on it and i'm going to go
02:19 - here change type and i'm going to filter
02:21 - for kinematic
02:23 - body 2d so kinematic body 2d because i
02:25 - want our player to be kinematic body 2d
02:28 - command s to save this in the scenes
02:30 - folder so command has to save it
02:33 - so what is the first thing to do with
02:35 - our player first of all i'm gonna click
02:37 - on the plus button and here i'm gonna
02:39 - filter for
02:41 - animated sprite actually not spread
02:43 - animation but animated sprite here it is
02:45 - and i'm going to call this one animation
02:48 - and let me just zoom in over here so i'm
02:51 - going to zoom in
02:52 - and this is our animation for the player
02:54 - what we need to do is we need to click
02:56 - on it so click on this animation over
02:58 - here and for the frames we are going to
02:59 - click here new frames so new sprite
03:02 - frames i'm going to click there and here
03:03 - we can create our sprite frames so the
03:06 - first one is gonna be idle and for the
03:08 - idle let me just go here in sprites and
03:10 - player and i'm gonna drag this one so
03:12 - this is our idle animation so the first
03:14 - one the first frame nothing too
03:16 - complicated
03:17 - next right here where it says idol you
03:19 - see this box over this documenting and
03:22 - it has a little plus button at the
03:24 - bottom right corner i'm going to click
03:25 - on that and it will create a new
03:27 - animation i'm going to call this one
03:28 - walk
03:29 - and for the walk i'm going to select all
03:31 - images from two up to seven
03:33 - and i'm going to simply drag and drop
03:35 - them over here so now selecting the
03:37 - animation over here and clicking play
03:39 - you will see that the animation is
03:41 - playing but it's playing slow so i'm
03:43 - going to take here the
03:44 - frames per second i'm going to say 12
03:47 - which is going to make them you see it's
03:49 - gonna make them a little bit faster
03:51 - so yeah this is what i want and let me
03:53 - just go back over here and turn off the
03:55 - playing and i'm going to click here idle
03:57 - to play idle again
03:59 - so now selecting the player you see we
04:02 - have this exclamation mark over here we
04:04 - need to add a shape because this is a
04:05 - kinematic body we need to have a shape
04:07 - on it so i'm going to right click
04:09 - add the child node and filter for
04:11 - collision shape 2d
04:13 - and attach that collision shape to the
04:15 - on the player
04:16 - next go here inside of our shape you see
04:20 - click on it and on the right side you
04:22 - see we have the shape i'm going to click
04:24 - on that and i'm going to select new
04:25 - rectangular shape and i'm going to zoom
04:27 - in and move it something like this maybe
04:30 - move it over here
04:32 - and resize it so this is something you
04:34 - can do on your own this is nothing
04:35 - complicated and i'm going to save it
04:37 - simply this is the body this is the
04:39 - shape where we're going to detect
04:41 - collisions when it comes to our players
04:42 - so when the player touches something
04:45 - in our case a monster so when we touch a
04:47 - monster over here as you can see on the
04:49 - left or right side or up or above or up
04:52 - or above above or down anyways
04:56 - we are going to detect that collision
04:58 - but we need this shape in order to do
05:00 - that so now we have the player and if i
05:02 - go here in our gameplay and take the
05:05 - scene here and put the player inside of
05:08 - the scene and if so i'm gonna call lol
05:11 - on this one instead of running the game
05:13 - i start my screen recording software
05:15 - okay that was awkward so let us continue
05:18 - command b to run our game which was
05:20 - which is going to brought me to select
05:22 - which scene is going to be the main
05:23 - scene when we run our game and it's
05:25 - going to be game play so i'm going to
05:26 - double click here and it is going to be
05:28 - game playing this is what we see now i
05:30 - am going to resize this a little bit so
05:32 - in order to resize it we need to go into
05:34 - project and project settings
05:36 - and here for in the window let me just
05:39 - find it over here where is it where is
05:41 - it
05:42 - here it is window
05:44 - so the width of my project is going to
05:46 - be
05:47 - 1280 so hd by 720
05:51 - the test width is going to be 640
05:55 - and the test height is going to be
05:58 - 360. so half of this value
06:01 - and we're still not done because if i go
06:03 - back here and run the game you will see
06:04 - what we have you see you see the players
06:06 - over here we don't want that we need to
06:08 - go back again so project and project
06:10 - settings and at the bottom for the
06:12 - stretch
06:13 - it's disabled we need to set it a 2d and
06:15 - aspect is going to be keep and now
06:18 - when i come back command b
06:20 - we're gonna see our player and it looks
06:22 - really nice so now we have our really
06:24 - really cool game it looks i mean it
06:27 - looks nice on the window for hd
06:29 - resolution
06:31 - so what is the next step to do let's go
06:33 - over here in our resources folder and
06:35 - create a new folder that i'm going to
06:37 - call scripts so scripts folder and
06:40 - inside of that folder i'm gonna right
06:42 - click and create a new script i'm going
06:45 - to choose here c sharp and let's go over
06:48 - here a new script and i'm going to call
06:50 - this one player and i'm going to hit
06:52 - create and it's going to create it and
06:53 - here in the gameplay scene
06:56 - select or actually in the player scene
06:57 - select the player and go here for the
06:59 - scripts and load it so from the scripts
07:01 - folder we're going to load the player
07:02 - script and let me just
07:04 - double click on it and open it in visual
07:07 - studio because we are going to use
07:09 - visual studio for this
07:11 - and here i'm going to keep it in the
07:13 - dock or unkeep it from the dock so let's
07:16 - go over here what do we need in our
07:18 - player script what is that thing that we
07:22 - need well we always need a couple of
07:23 - aerials
07:24 - variables but before that let me just
07:26 - tag the class and move a little bit down
07:29 - and move this like this here and this is
07:32 - going to be this is not going to be
07:34 - processed but it's going to be
07:36 - physics process so we're going to have a
07:38 - physics process
07:39 - and here above
07:42 - we are going to inherit from kinematic
07:44 - body so kinematic body 2d instead of the
07:47 - node we're going to have a private
07:49 - vector 2 which is going to be our
07:51 - movement and i'm going to call that one
07:52 - by default vector 2 0.
07:55 - next we're going to have a private float
07:57 - which is going to be our move underscore
07:59 - speed by default i'm going to say it's
08:01 - 400 and these variables are
08:03 - self-explanatory so movement we're going
08:05 - to use for the movement speed we're
08:06 - going to use for the speed now moving
08:08 - forward we're going to have a private
08:10 - float gravity which is going to be equal
08:12 - to 20. i know gravity is
08:14 - 8.9.8 but i don't care i'm going to set
08:17 - it in 20 breaking the laws of physics
08:19 - over here
08:21 - and we are also going to have a private
08:23 - flow this is going to be our jump
08:25 - underscore force by default i'm going to
08:27 - say negative
08:28 - 900
08:31 - we're gonna have here also
08:34 - a private vector two which is going to
08:37 - be up direction so up the ir is equal to
08:42 - vector 2 up like this
08:44 - and basically that's that later on we
08:46 - will have for animation here we will
08:48 - have a private animated sprite which i'm
08:50 - going to call animation but that will
08:52 - come don't worry about that now
08:55 - inside of the player movement which is
08:57 - something that we didn't create so here
08:59 - player movement like this
09:02 - and inside of the player movement is
09:04 - where we are going to detect the input
09:06 - but first of all let me just format this
09:09 - and call the player movement inside of
09:11 - the physics process so this is where i'm
09:13 - going to call it now inside of the
09:14 - player movement what we're going to do
09:16 - is we're going to detect if our
09:18 - input so if input dot
09:20 - is key so is key pressed
09:24 - and or actually is action so we're going
09:27 - to use an action so is action pressed
09:29 - and the action
09:30 - is going to be here in quotes and i'm
09:32 - going to call this one move right
09:36 - so move right
09:38 - and as you can assume i'm going to
09:39 - duplicate this and i'm going to say else
09:41 - if input is move left
09:44 - and also here we're going to have else
09:46 - so we're going to have all of these
09:49 - statements so what is gonna happen next
09:52 - what what you're gonna do well if we're
09:53 - moving right right we're gonna move the
09:55 - player right if we're moving left we're
09:57 - gonna move left but before that we need
09:58 - to copy these so we need to go back here
10:00 - in our engine and project and project
10:02 - settings
10:03 - and here for the input map
10:05 - i'm going to paste move right
10:07 - i'm also going to paste move left and
10:10 - i'm also going to type here jump so
10:12 - we're going to have jump as well now
10:14 - here for our move left or actually move
10:16 - right i'm going to click on the plus
10:17 - button and select a key and that key is
10:20 - going to be d so i click d on my
10:21 - keyboard i'm going to click ok
10:24 - click on the plus button and key again
10:25 - and right arrow and click ok so now we
10:28 - have the right key as well or the right
10:31 - arrow key click on the plus button and
10:33 - key and i'm going to click a now and
10:36 - click ok
10:37 - and click on the plus button for move
10:39 - left key and left arrow which is going
10:42 - to say left and i'm going to click ok
10:44 - for the jump
10:45 - click on it
10:46 - key
10:47 - space
10:49 - okay
10:50 - and now we're good to go because now you
10:51 - see here on our move right we have the d
10:54 - and the right and move left a and left
10:56 - and on jump we have space which means in
10:57 - our game or in
10:59 - when we press that button so here for
11:01 - the right when we press d or or right
11:04 - arrow we're gonna move to the right side
11:06 - and here for the left if we press the a
11:09 - key or left arrow we're gonna move to
11:10 - the left and when we press space we're
11:11 - gonna jump so what's going to happen
11:13 - here in our move right
11:15 - is when we click on it we're going to
11:17 - say movement x is equal to move speed
11:20 - like this
11:21 - and when we press the left button we're
11:23 - going to say movement x
11:25 - is equal to negative of move speed so
11:29 - move speed so now we have we have the
11:31 - negative because the left side is the
11:32 - negative side and here we have the
11:34 - player movement i'm just going to tag it
11:36 - because at the bottom of our player
11:37 - movement we're simply going to say move
11:40 - and slide which is a built-in function
11:42 - from the kinematic body so here simply
11:45 - we're going to call movement and we are
11:47 - good to go now of course if i go back in
11:51 - our engine command b to test this out we
11:54 - are going to have some complications but
11:55 - you're going to see what you see now
11:56 - when i move you see
11:58 - first of all
11:59 - we don't have gravity
12:01 - second i'm i simply press the key once
12:04 - i'm not pressing it currently i released
12:06 - it but he's still moving you see press
12:08 - once and he's moving to the right or the
12:10 - left side depending on what key have i
12:13 - pressed
12:15 - so
12:16 - this is awkward as you can see we don't
12:18 - want our player to move like this but
12:20 - maybe you want if you want to you can
12:21 - leave the code like this but if you
12:23 - don't in the else when we don't press
12:25 - anything movement x is gonna be equal to
12:27 - zero because here we're going to reset
12:30 - it
12:30 - if i go back now
12:33 - and actually i need to go back in my
12:34 - engine so command b
12:36 - if i go back in my engine
12:38 - you see what's going to happen
12:41 - like this and now when i release it he's
12:43 - going to stop when i move it he is still
12:46 - there he is well
12:48 - stopping when i move him he is moving
12:49 - when i release it he is stopping so
12:51 - that's why here in the else statement we
12:53 - need to set movement x is equal to zero
12:56 - because if we don't want to move then we
12:58 - need to reset the movement back now also
13:01 - in regards to our gravity
13:03 - here we're going to say movement dot y
13:06 - plus equals gravity which is going to
13:08 - apply this gravity to our player now as
13:11 - you can see it's going to apply this
13:12 - gravity to the player and if i go back
13:15 - in our engine and command b
13:18 - we are going to see that the player
13:20 - will fall down
13:22 - now in order to fix that we need to go
13:23 - back here in our game plan first of all
13:25 - i'm going to right click here and add a
13:27 - child node i'm simply going to add a
13:29 - node 2d
13:31 - and this node 2d
13:33 - i'm going to move it here this is going
13:34 - to be our bg parent and i'm going to
13:36 - duplicate one and another one is going
13:38 - to be our ground parent now the ground
13:40 - parent i'm going to right click on it
13:42 - and change the type it's going to be a
13:44 - static body so it's going to be a static
13:46 - body and i'm going to save it but let's
13:49 - go over here for the ground parent or
13:51 - actually for the bg parents so let me
13:53 - just find our background so we have the
13:54 - sprites we have the player here is our
13:56 - background so this is our background and
13:59 - i'm going to put this one as a child of
14:01 - the bg parent now select the background
14:04 - and here i'm going to rename it to
14:06 - background one because we're going to
14:07 - have multiple of these and let's go over
14:09 - here in the offset i'm going to click on
14:12 - this centered so i don't want it to be
14:13 - centered and for the transform i'm going
14:15 - to say 0 0 for x and y
14:18 - and i'm going to duplicate it so now we
14:20 - have background 2 and for the transform
14:22 - of background 2 for the y position i'm
14:24 - going to say 700 or negative excuse me
14:27 - 720 which is going to move the
14:29 - background over here as you can see
14:32 - now how we're going to create our
14:34 - backgrounds is that we are simply going
14:36 - to move them by
14:38 - we are going to move them if i select
14:40 - both of them and duplicate them so now
14:41 - we have background
14:43 - three and i'm not going to make it as a
14:45 - child so move it over here so we have
14:47 - background three and back round four if
14:49 - i go over here for the transform and on
14:51 - the x-axis for both of them i'm going to
14:54 - say 1280 it's gonna move them as you can
14:56 - see right over here so 1280 is gonna
14:58 - move over here duplicate them again so
15:00 - now we have five
15:01 - and six
15:02 - so
15:03 - copy these and 1280 and 1280 how much is
15:06 - that
15:07 - i'm not good at that so yeah i have no
15:10 - idea about math so 12 80 plus 12 80
15:14 - that's 2 5 6 0 so here i'm going to say
15:17 - 2
15:18 - 5
15:20 - 6 0 as you can see right here and again
15:23 - duplicate them so i'm going to duplicate
15:25 - them we're gonna have seven and eight
15:28 - so for these we also need to add twelve
15:30 - eighty so how much is that so twelve
15:33 - eighty so let me just calculate that so
15:35 - twelve eighty three thousand eight three
15:38 - eight four zero so three eight
15:41 - four zero
15:42 - let's go over here do the same thing for
15:44 - these you get the point this is what you
15:46 - need to do so let me just move the 10
15:48 - over here
15:49 - and select the 10 and 9
15:51 - add 1280 so let me say here 1280
15:55 - 5000 and
15:58 - well it's 5 000
16:00 - [Music]
16:02 - and 120 and this is enough
16:05 - of course you're going to do the same
16:06 - thing for the right side as well so i'm
16:08 - going to duplicate here
16:10 - background one and two let me just move
16:12 - them down so now we have here no not as
16:15 - children of background 10. so
16:17 - background that needs to go over here so
16:19 - select these two and now these are going
16:21 - to go on the negative 1280 you get the
16:23 - points so do that up to negative so up
16:27 - to negative
16:30 - 5120 and we're gonna do the same thing
16:32 - for our ground so here for the ground
16:34 - parent i'm going to select the ground
16:35 - put it over here
16:38 - so this is going to be our ground one
16:40 - like this
16:41 - and let me just offset it so i'm not
16:43 - going to have set it i'm going to
16:44 - uncenter it so to say so i'm going to
16:47 - uncenter the ground and the first ground
16:50 - i'm going to position it 0 here and y is
16:54 - going to be 6
16:56 - 5
16:56 - 2 so yeah this is going to be for our
16:59 - first graph i'm going to duplicate it
17:01 - move the ground over
17:03 - and not like this
17:06 - over here let me select it and i'm going
17:09 - to hold shift to put it right next to
17:12 - the other one so select the ground and
17:14 - this one
17:16 - let me just select here the y is going
17:18 - to be 652
17:21 - and the x is going to be 450 as you can
17:24 - see so 450 and i'm going to do that for
17:26 - another ground so let's go here 450
17:28 - that's 900 we have the grounds here
17:31 - currently we are going to have the
17:32 - grounds all over where the backgrounds
17:34 - are i'm just going to test the player's
17:37 - movement so i'm going to test the player
17:38 - movements then i'm going to pause the
17:40 - video form all of these grounds and then
17:42 - you're going to see what we have but
17:44 - before that select the ground parent
17:45 - right click and add a child node and
17:47 - we're going to add here a collision
17:50 - shape because we need to do that and for
17:52 - the collision shape i'm going to go here
17:53 - and select a rectangular shape and it's
17:56 - right here so what i need to do with the
17:58 - collision shape is resize it a little
18:00 - bit
18:00 - take the collision shape and position it
18:02 - over here
18:04 - and let me just resize it so that it
18:06 - fits the ground so that we can land on
18:08 - it
18:09 - so if i command b now so command b
18:13 - now we stand on the ground you see we
18:14 - stand on the ground we can move as you
18:16 - can see i still cannot jump we will do
18:18 - that starting from the next video
18:20 - because i wanted to create these grounds
18:22 - i wanted to create the backgrounds and
18:24 - now we are moving with the player and
18:26 - now i am going to pause the video form
18:29 - all the grounds and the backgrounds and
18:30 - come back so you can copy and paste this
18:32 - or simply download the complete project
18:34 - and copy and paste it so i'll back be
18:35 - back in a moment okay i am back and as
18:38 - you can see what i did i simply
18:40 - duplicated these backgrounds and then i
18:43 - repositioned them i duplicated the
18:44 - grounds and positioned them so the
18:46 - difference between the grounds if i take
18:47 - the ground one you see it's at x
18:50 - position zero y position will be the
18:52 - same so
18:53 - 652 that's for every single ground so
18:56 - don't touch the y for the x as you can
18:59 - see the position for the first one is x
19:02 - at zero the next one is 450 which means
19:05 - every next one is at 450
19:08 - units to the left or to the right side
19:10 - as you can see so when i move these on
19:12 - the left side so this one is going to be
19:14 - 450 next one is going to be 900 because
19:18 - 450 plus 450 plus 450 it's 900 so now
19:23 - take 900 and add to it 450 which is
19:27 - 1350 so add again 1 450 that's 1800 so
19:32 - on and so forth you get the point this
19:34 - is to the right side to the left side
19:35 - the negative one is the same numbers but
19:38 - only negative so let me just find here
19:40 - this ground i believe so from ground 16
19:43 - it's negative 450 then ground 17 it's
19:46 - negative 900 then 80 negative 1350 you
19:51 - get the point so you're going to do this
19:53 - on your own it's a bit tedious for you
19:54 - to watch me to create all of this it's
19:56 - not fun but this is part of game
19:58 - development so you need to do it and the
20:00 - same thing for our backgrounds so if you
20:02 - take a look at here the first background
20:05 - so both of these are at zero for the x
20:08 - now for the y this one is at negative
20:10 - 720 so the above one and every
20:13 - background that's above you see we have
20:15 - two of these so the one that's up it's
20:17 - at y position negative 720
20:21 - only x position would change and the x
20:24 - position will change for 1 000 or 1280
20:27 - so 1 280. so if for example we have
20:31 - background one at zero if we want to add
20:34 - the next one to it then it will be at x
20:36 - 1280 then the next one is it x 1280
20:40 - multiplies by two then by three you get
20:42 - the point you just add to it though that
20:44 - value and it will position it right next
20:46 - to each other i also added this moon
20:49 - just so it adds a little bit depth to
20:51 - our game looks nice so yeah nothing in
20:54 - particular would not change our game our
20:56 - game can function without it but
20:57 - basically yeah this is this is setting
20:59 - up our level and creating players
21:02 - movements so starting from the next
21:04 - video we are going to animate the player
21:05 - make him jump so we'll see you then
21:08 - what is cracking people in the previous
21:10 - video we started our 2d platformer-ish
21:13 - game and we created our level and we
21:15 - created the movement of the player but
21:17 - we didn't animate the player and we
21:18 - didn't make him jump so uh let's take a
21:20 - look at how we can do that
21:22 - so i have the player over here and in
21:24 - order to animate him we need to get this
21:27 - component or this node you see animation
21:30 - because this is his animation and in
21:31 - order to do that we need to go back here
21:34 - and i already have a reference to it as
21:36 - you can see but we need to get the real
21:38 - reference inside of the ready function
21:40 - so i need to say here animation
21:43 - is equal to get node and not name get
21:46 - node the node type is animated sprite
21:50 - you see here this is the type of the
21:51 - node animated sprite and how do i know
21:53 - that if i go over here and hover over it
21:55 - you see the type is animated sprite
21:58 - and now we need to provide the name of
22:00 - the note that we want to get so what is
22:02 - the name of it it's animation like this
22:04 - and let me just command b here to remove
22:06 - these so yeah we also need to use the
22:08 - jump four so that this right here will
22:10 - be removed can i remove it like this no
22:13 - i don't know
22:14 - anyways it's not important so we have
22:16 - here the animated sprite and we get it
22:18 - here from the animation what i'm gonna
22:20 - do is go below the player movement and
22:23 - here i'm going to create a void function
22:26 - that's going to
22:27 - animate our player and i'm going to call
22:28 - this one animate movement which takes
22:31 - two boolean parameters one is going to
22:34 - be bull moving and another one is going
22:36 - to be bull move right and why do we need
22:38 - this well we'll see in a second
22:41 - first of all if we are moving so here if
22:43 - moving not move right but if moving
22:46 - moving come on finally
22:50 - so if we are moving then simply we're
22:52 - going to call
22:54 - animation.play and we're going to play
22:56 - the walk animation how do i know it's
22:57 - walk well if i go back here you see i
23:00 - have two animations walk and idle as you
23:03 - can see over here i have selected walk
23:04 - now i have idle if you want them to play
23:06 - so if you want to play one of them if i
23:08 - want to play the walk simply click or
23:10 - call play and call walk there you go
23:12 - simple as that and here else if we are
23:16 - not moving so else if we are not moving
23:18 - simply we are going to go and call here
23:21 - idle
23:22 - which is going to play the idle
23:24 - animation now
23:26 - we are going to call this inside over
23:29 - here so let me just take this
23:32 - so here when we are moving you see we're
23:34 - moving to the right which means here i'm
23:36 - going to say true for moving and true
23:37 - moving to the right side as you can see
23:39 - move right we have here move right and
23:42 - here we're moving to the left so here
23:44 - i'm going to say true for moving
23:46 - and
23:47 - false because we're moving to the left
23:48 - side move right here is false and here
23:51 - when we stop moving we can simply say
23:53 - false here and here we can say either
23:55 - true or false it doesn't matter because
23:56 - we will see in a second but i want to
23:58 - demonstrate you one thing so if we go
24:00 - back over here
24:02 - and i hit command b to play our game
24:05 - which is going to run it notice now when
24:07 - i start moving you see he's animated
24:09 - everything is cool this is totally
24:10 - normal right well wrong because now if i
24:13 - go to the left side you see he's moving
24:15 - backwards except if you want to have
24:17 - this kind of functionality where your
24:19 - player is moving backwards for i don't
24:21 - know what reason because i don't know
24:23 - you're weird so yeah anyways you see if
24:26 - i click or hold command d or command d
24:30 - just d or a or left arrow or right arrow
24:33 - what's wrong with me you see he's moving
24:35 - he's being animated but when he goes to
24:37 - the left side he's not facing that side
24:40 - that's why i added this right here move
24:42 - right why well because if we are moving
24:45 - over here so when we are moving i'm
24:47 - going to also check if
24:50 - move right so if we're moving to the
24:52 - right side else if we're moving to the
24:54 - left side because if we are moving to
24:55 - the right i need to go back here and
24:57 - demonstrate that for you notice where
24:59 - the player is facing he is currently
25:00 - looking to the right side if i select
25:02 - the animation which is our animated
25:04 - sprite and go over here in the inspector
25:06 - and for the properties you see here i
25:08 - have something called flip h and flip v
25:11 - h is for horizontal v is for vertical if
25:14 - i check this
25:15 - on for h you see he's gonna flip it and
25:17 - he's gonna start looking to the left
25:20 - side as you can see flip it again he's
25:21 - looking to the right side flip it again
25:23 - left side you see what i mean
25:25 - so when we flip it and by default as you
25:27 - can see how this sprite is created
25:30 - he is facing the right side so when we
25:33 - don't flip it he's going to face the
25:35 - right side which means over here we're
25:37 - going to call animation flip h is false
25:40 - because when we don't flip it he's
25:41 - looking the right side
25:43 - and here else if we're moving to the
25:45 - left side we need to flip it because as
25:47 - again i said
25:49 - that
25:50 - by default this sprite is looking to the
25:53 - right side how it's created so if we try
25:55 - to move to the left we need to flip it
25:56 - if i go back now and command b to run
26:00 - our game
26:01 - you will see now when i go to the right
26:02 - he is facing the right side which is
26:04 - okay we're not flipping him but if we go
26:06 - to the left pay attention you see bam he
26:08 - is flipping flip flippa you see he is
26:12 - flipping you know flipping anyways
26:15 - i don't want to know you even though
26:16 - you're annoyed but you're here to learn
26:19 - so when we go to the right side now
26:20 - everything is cool we are not flipping
26:22 - him he's facing the right side if we go
26:24 - to the left he is also being or he's
26:26 - flipped and looking to the left side
26:28 - which brings me back here in our else
26:31 - you see here in the else statement when
26:33 - we stop moving so here this these two
26:36 - are for movement so if we move to the
26:38 - right side true is for movement and true
26:40 - we're moving to the right if we are
26:41 - moving to the left so movement is true
26:43 - so we're moving and here falls because
26:45 - we we are moving to the left side but in
26:48 - the else statement we are not moving so
26:50 - here we can say false or we need to save
26:52 - false because we're not moving and here
26:54 - we can say either true or false and
26:56 - notice if i go back here and not over
26:59 - here but command b over here you will
27:01 - notice that nothing will happen i can
27:03 - move you see
27:04 - he is moving and everything is fine if i
27:06 - stop the movement he is facing the side
27:10 - where i have stopped moving so if i'm
27:13 - holding a key and i release it he's
27:15 - facing the left and this is where he's
27:17 - gonna face when when i release the
27:19 - button because if you go over here in
27:21 - our animation or enemy movement only if
27:23 - we are moving we are going to flip him
27:25 - else if we are not moving we are not
27:28 - going to flip him and that is basically
27:30 - what we are doing here and this is how
27:33 - we can
27:34 - this is how we can determine
27:37 - when to move when not to move and when
27:38 - to flip the character so moving forward
27:41 - what is the next step to do now we need
27:43 - to jump and in order to jump we have a
27:45 - built-in function from our
27:48 - kinematic body 2d so this bad boy over
27:51 - here so if i go here right above our
27:54 - move and slide
27:55 - and move and slide is also a function
27:57 - that we simply provide so we call it
27:59 - it's built in into kinematic body which
28:02 - will move into the
28:04 - direction where we provided and we
28:05 - provided movement
28:07 - here and we know we are getting the
28:09 - movement over here so if we press the
28:11 - right arrow key or the d key we're going
28:13 - to say movement x is equal to move speed
28:15 - if we press the a key or the left arrow
28:17 - move speed is negative so we're moving
28:19 - to the left or to the right if we don't
28:21 - press movement x is zero but here i'm
28:23 - going to test if is on floor so this is
28:27 - a built-in function it will tell us if
28:29 - we are on the floor and if that is the
28:31 - case
28:32 - if our input dot is key just so is
28:36 - action just pressed and that action is
28:39 - going to be jump and if you remember in
28:41 - the first video we set the jump to be
28:44 - equal to space so when we press space on
28:48 - our keyboard we are going to jump but
28:49 - notice here so what is the next thing to
28:51 - do we need to say movement that y is
28:54 - going to be equal to jump force simple
28:56 - as that you see movement y is equal to
28:58 - jump force
28:59 - if i go back
29:01 - and in our game command b let's test it
29:03 - out and see if it actually works so
29:05 - command b
29:06 - if i jump
29:08 - nothing is working what is wrong with
29:10 - teacher you're crazy what are you doing
29:12 - calm down calm down man i'm pressing
29:14 - space but it is not working so what is
29:16 - the issue you see here if i go back you
29:18 - we have the jump and just to be 100 sure
29:22 - that i added the jumps input map here it
29:25 - is so we have the jump is space so yeah
29:27 - everything was clear but it's not
29:28 - working why
29:30 - well because you see here move and slide
29:32 - we need to tell it if i hover over you
29:34 - see i don't know if you can see the
29:36 - explanation you see here we have move
29:38 - and slide which takes a vector to linear
29:40 - velocity but it also takes a vector to
29:43 - floor normal what does that mean we need
29:45 - to tell it where is the floor we know
29:47 - that going down so in gda engine when we
29:51 - go down and if i take here my highlight
29:53 - tool so highlight
29:55 - going down
29:57 - and come on highlight so this is the
30:00 - coordinate system
30:02 - this is the y-axis this is the x-axis
30:04 - plus is over here negative is over here
30:06 - for the x but for the y negative is up
30:08 - plus is down so when we go down we are
30:11 - going positive we are doing plus which
30:13 - means we need to tell in which direction
30:16 - is the floor
30:17 - and in order to tell that we have this
30:18 - right here up direction you see up
30:21 - direction because i'm saying up because
30:23 - this is a shortcut for writing this new
30:26 - vector 2 0 for the x 1 for the y so this
30:30 - is that shortcut so if i say here vector
30:33 - 2 up
30:34 - it's the same thing as if i wrote vector
30:36 - 2 0 for x 1 for the y so yeah i need to
30:40 - get that out of the way
30:41 - but here we need to provide that so we
30:43 - need to say here
30:45 - up dri so up the ri which essentially
30:49 - will have a positive value which means
30:51 - we're going down so now it will inform
30:53 - our kinematic body the down is the
30:57 - floor
30:58 - so if i go back now here and command b
31:00 - to run our game let's see if the floor
31:03 - will be detected space way space way
31:06 - space
31:08 - you get the point you see now it knows
31:10 - where is the floor or the ground because
31:12 - we told it it's down it's below us but
31:14 - we also have one more issue i'm gonna go
31:16 - here and i'm going to say gd.print which
31:18 - is good though for print and here i'm
31:21 - going to say the value is like this i'm
31:23 - going to say plus movement
31:26 - now this movement over here
31:29 - is our movement you see it's our
31:31 - movement over here that we are adding to
31:33 - it you see over this everything here
31:35 - that we're adding but i want to show you
31:37 - one thing if i go back here in our
31:39 - engine and command b notice what's gonna
31:41 - happen in the output we are going to
31:43 - print so let's go here in the output you
31:46 - see the value keeps increasing even
31:48 - though we're just standing on the ground
31:49 - you see i'm just standing if i jump you
31:51 - see the value is at the value that we
31:54 - provide but then it starts increasing
31:56 - and we don't want that so i'm just gonna
31:58 - close this you see we don't want that
32:00 - it's increasing even though it's not
32:02 - gonna hurt our game but maybe you will
32:04 - need it for something else where it will
32:07 - hurt your game if you have it like this
32:09 - so in order to fix it we need to simply
32:11 - say here movement
32:12 - is equal to move and slide and here
32:15 - provide well simply movement so
32:16 - everything else is going to be the same
32:18 - except here we're going to say movement
32:19 - is equal to move and slide and voila
32:21 - that is that
32:22 - so if i go back now here and command b
32:26 - so command b to run the game
32:28 - notice now what's going to happen here
32:30 - in the output
32:31 - we're standing you see we're standing
32:33 - but the output is if i clear it you see
32:35 - the output is zero if i jump we go up to
32:37 - negative 90 or 80 800 how much we set
32:40 - and then it's gonna go back down again
32:42 - you see if i go over here let me just
32:45 - find where we jumped where did we jump
32:49 - here it is so we jumped so the value was
32:51 - negative 900 then it fell down because
32:53 - we're subtracting gravity as you can see
32:56 - over here we're actually adding gravity
32:58 - you see plus equals gravity then we move
33:00 - down but then when we land on the floor
33:02 - you see the movement value starts to get
33:05 - zero zero zero zero and we don't want
33:08 - that even though as i already said this
33:10 - will not hurt our game the previous one
33:12 - where we added the values but i just
33:13 - wanted to show you that in case you
33:15 - create some game on your own use this or
33:18 - you use this code that i provided over
33:20 - here and then you have issues so this is
33:23 - how you will know what the issue is and
33:25 - basically this is how we can animate and
33:27 - move our player and starting from the
33:29 - next video we will probably add the
33:33 - camera so program the movement of the
33:34 - camera then we will add enemies and yeah
33:36 - wrapping up our game if you want to
33:38 - learn more about godot i have that in my
33:39 - game development academy hopefully by
33:41 - now i hope i have also blender and in
33:44 - game maker and i'm working on unreal if
33:46 - i don't have it already click on the
33:47 - link below and i probably have a month
33:50 - trial so i have one month trial for two
33:52 - dollars you can try the academy out for
33:54 - two dollars click on the link below and
33:56 - you can learn for one month for two
33:58 - dollars like yeah so yeah i will see you
34:01 - guys in another video
34:04 - was cracking people back out again with
34:06 - r2d platformer game so in the previous
34:09 - video we programmed the player jump and
34:12 - we also programmed animations now we're
34:14 - gonna make the camera follow player
34:15 - because if i hit the play button command
34:17 - b to run the game we are going to see
34:20 - that
34:21 - well our player can go outside of the
34:23 - screen and this is not what we want we
34:25 - want the camera to follow him that
34:27 - simple so uh let's take a look at how we
34:29 - can do that and by the way if you want
34:31 - to try out my academy you can do that
34:33 - link will be in the description below
34:35 - try it out for one month for two bucks
34:37 - even if you don't want to invest two
34:39 - bucks then well yeah good luck learning
34:40 - game development so uh yeah anyways let
34:44 - me just go back over here why can't i
34:47 - move this a little bit down so yeah now
34:49 - i can
34:50 - so if i go into the gameplay this is
34:51 - what we have this is our scene this
34:53 - right over here and let me just draw so
34:56 - that i can show you what i mean so this
34:58 - over here
35:00 - this is our scene i'm not sure if you
35:02 - can see these lines but it's not
35:03 - important but that is what we see and if
35:05 - i go back over here and let me just fold
35:08 - all of this in the gameplay and right
35:09 - click and add the child node i'm going
35:10 - to add the camera 2d
35:12 - i'm going to call this bad boy main cam
35:16 - and
35:17 - this main camera let me just go over
35:19 - here in the transform of it and the
35:21 - position for it is going to be
35:24 - 640 by 360 because half of the width and
35:29 - the height of our screen so we can
35:30 - position it at the center but even
35:33 - though we have the camera if i command b
35:35 - to run our game we are still gonna go
35:37 - out of the screen as you can see already
35:41 - so how can we make the camera follow the
35:43 - player first of all what i'm going to do
35:45 - is i'm going to click on the camera
35:47 - and we're going to create a script so
35:49 - let me just go over here in the scripts
35:51 - and right click and create a new c sharp
35:54 - script and i'm going to call that one
35:55 - camera follow
35:57 - so let's go over here camera so camera
36:00 - follow and i'm going to hit create and
36:03 - of course select the main camera go over
36:04 - here at the bottom and on the script
36:06 - here where it's empty click here to load
36:09 - it and we're going to load it from
36:10 - scripts and camera follow voila
36:13 - let me just double click this bad boy
36:15 - and open it this in visual studio okay
36:20 - so uh let me just tag this
36:22 - and let's go over here so what do we
36:25 - need everything or the magic is going to
36:27 - happen in our override let me just go
36:30 - like this
36:31 - so that i can format this correctly and
36:34 - we're going to inherit from node 2d
36:36 - instead of the node only so no 2d the
36:38 - next thing that we need to do is we need
36:40 - to get or create a private node 2d for
36:42 - our player so i'm going to call this one
36:44 - player target
36:45 - and well we are going to use it to get
36:48 - the player now also here we're going to
36:50 - have a public bull
36:51 - player died because when we die we don't
36:54 - want the camera to follow the player and
36:56 - here in our ready function we are going
36:59 - to say here player target is equal to
37:02 - but first we need to get the parent so
37:03 - we need to see here get parent because
37:06 - if we just use get node we cannot use
37:08 - this
37:09 - so here i'm going to say get node and
37:11 - it's going to be node 2d like this and
37:14 - i'm going to call it player i cannot
37:17 - just say this i cannot just say get node
37:20 - 2d because the player is not a child
37:24 - of the camera get node so when you call
37:27 - get node on a node or on a game object
37:30 - it will try to get the node that is a
37:32 - child of it that's why we need to get
37:33 - the parent and the parent is the
37:35 - gameplay so first we get the parent then
37:37 - we get the
37:39 - child
37:40 - and let me just go over here in the
37:42 - process
37:43 - if the player has died we are going to
37:45 - return now return means simply exit out
37:48 - of the function because
37:50 - if we have died if the player is dead
37:53 - well there is no need for us to
37:56 - well
37:56 - there is no need for us to
37:59 - continue to follow him and besides that
38:01 - we are going to kill the player move him
38:03 - out of the game so that will not even be
38:06 - possible so below if the player is not
38:08 - that we're going to say here vector 2
38:10 - temporary position is equal to the
38:12 - current position of our camera
38:16 - next we're simply going to say temporary
38:17 - position or actually we don't even need
38:19 - to do this we are simply going to say
38:20 - temporary position is equal to player
38:23 - target so player target dot get the
38:25 - position so we're going to get the
38:26 - position from the player target and
38:28 - simply we're going to say position of
38:30 - the camera is equal to temp and this is
38:32 - how we are going to follow it and even
38:34 - so we can simply do this so like this
38:37 - we don't even need
38:38 - this vector to so we can simply say
38:40 - position is equal to player target get
38:42 - the position so if i go back here in my
38:44 - engine command b to run it
38:47 - we are going to notice now the camera is
38:48 - going to follow our player but
38:51 - that is not the case and i told you the
38:52 - camera is going to follow play what is
38:54 - the issue now well the issue is we need
38:56 - to select the main camera
38:58 - and we need to go over here let me just
39:01 - find where it says so position scale
39:04 - offset
39:05 - here it is inside of the camera 2d so we
39:07 - have the offset we have the anchor
39:09 - rotating zoom
39:11 - we have something here that is called
39:13 - current let me just find it here it is
39:15 - current
39:16 - this needs to be checked so when you
39:18 - check that check box that means that the
39:21 - current camera or what we currently see
39:23 - will be the main camera so if i command
39:25 - b to run the game now we will notice
39:27 - that the camera now is following the
39:29 - player so if i move to the left you see
39:30 - the
39:31 - camera is following the player if i jump
39:33 - the camera is following the player if i
39:34 - go back over here
39:36 - again
39:37 - the camera is following the player as
39:39 - you can see you see you know we and now
39:42 - we have the camera following the player
39:44 - and i don't want to i don't want to
39:46 - resize it like this so uh what is the
39:48 - next step to do well the next step to do
39:51 - is we are going to add our monsters in
39:54 - our game and then we are going to start
39:56 - spawning them in our game and all the
39:58 - good stuff anyways fire here from mr.com
40:00 - if you want to try out my game
40:01 - development academy for one month you
40:02 - can do that two bucks only for that link
40:05 - will be in the description below and uh
40:08 - yeah i will see you guys in another
40:11 - video
40:12 - what's up people fire herefront.com
40:14 - and in the previous video we have the
40:16 - camera following the players so what is
40:18 - the next step to do the next step is to
40:19 - create the enemies and put them in our
40:21 - game so uh let us see how we can do that
40:23 - but hey if you want to try them out
40:25 - if you were trying on again if you want
40:27 - to try out my game double academy so now
40:28 - i have it right you can do that for two
40:30 - bucks link will be in description below
40:32 - so uh what we can do now is here we're
40:35 - gonna click on the plus button so this
40:37 - is going to be our empty seam and this
40:39 - is where we are going to create our
40:41 - zombies now let me just double click on
40:43 - this note scene and i'm going to rename
40:45 - this one to red zombie because first we
40:47 - are going to have the red zombie now
40:50 - well actually the green one whichever
40:52 - one you prefer
40:53 - but what is the issue here is that we
40:56 - need to change so i'm going to right
40:58 - click and i'm going to change the type
41:00 - of this node because it is going to be a
41:02 - kinematic body
41:03 - so yeah kinematic body and i'm going to
41:05 - save that one here in the scenes folder
41:08 - i'm also going to right click on it and
41:09 - add the child this is going to be our
41:11 - animated sprite so click on animated
41:13 - sprite and double click on it and i'm
41:15 - going to call this one animation because
41:17 - we're going to need this bad boy
41:19 - and the
41:20 - selecting the animated sprite let me
41:22 - just clear everything here going into
41:24 - the animation so clicking over here
41:26 - clicking here on new frames we are going
41:28 - to create a new frame this is going to
41:29 - be our walk animation and this is the
41:31 - green zombie so let's go over here
41:34 - and in the enemies for the sprites we
41:36 - have the zombie green select all these
41:38 - images so all the images and put them
41:41 - over here so if i zoom on our zombie and
41:44 - click here to play you will see now the
41:45 - zombie is playing but i'm going to add
41:47 - 12 frames so that he plays a little bit
41:49 - faster because i believe 12 frames is
41:52 - okay
41:53 - yeah 12 frames is okay you can pump it
41:55 - up if you believe it's not okay so yeah
41:57 - that's up to you i'm going to select the
41:58 - green zombie game object and go here add
42:01 - node and i'm going to add a collision
42:03 - shape 2d
42:04 - now for the collision shape 2d we need
42:06 - to select here a shape so it's going to
42:08 - be a rectangular one and i'm going to
42:09 - simply move this over here in the middle
42:11 - and resize it so move it a little bit
42:13 - more in the middle
42:15 - something like this
42:17 - and the zombies animation is confusing
42:20 - me so i need to uncheck it so that it
42:22 - doesn't play
42:23 - and now i can simply resize this dude
42:26 - and voila we are good to go so this is
42:28 - going to be our green zombie this is
42:30 - everything we need to do for him if i go
42:32 - over here in our scenes i'm going to
42:33 - duplicate the green zombie and i'm going
42:35 - to call this one red
42:36 - zombies we're going to have a red zombie
42:38 - i'm going to duplicate the green zombie
42:40 - again
42:41 - and i'm going to call this one ghost so
42:44 - select here the red zombie and double
42:46 - click here and i'm going to change this
42:48 - one to red zombie
42:50 - and selecting here the animation for the
42:53 - sprite i'm going to select all these
42:54 - frames or actually i'm simply going to
42:57 - delete all of this and create a new
42:58 - animation for the walk
43:00 - and go simply here inside of our folder
43:04 - and select all the animations for the
43:06 - red zombie and simply put them here
43:08 - that's all we need to do everything else
43:10 - is going to be the same and doing the
43:12 - same thing for the ghost so here it is
43:14 - ghosty goes goes goes goes goes up ghost
43:16 - ghost ghost ghost ghost anyways here is
43:18 - the ghost
43:20 - we need to do the same thing select the
43:21 - animation here delete this one so the
43:24 - walk one needs to go you gotta go ah no
43:26 - delete notes click on the animation
43:28 - delete it click here on a new anim and
43:31 - i'm going to call this one walk
43:33 - let's go over here and twims our frames
43:35 - are going to be 12 and also for the red
43:37 - zombie over here i forgot that
43:39 - you need to put the frames at 12 so this
43:41 - animation is well played and let's go
43:44 - over here in the enemies and we have the
43:46 - ghosts select all the ghosts put them
43:49 - over here and voila but for the ghost we
43:51 - need to move this a little bit here
43:54 - something like this can do
43:56 - just resize a little bit more
43:59 - and if i play it let's go here in the
44:00 - animation and play it it's our ghosty
44:02 - ghosty look at the ghosts look at that
44:05 - ghost
44:07 - so yeah basically these are our
44:08 - animations and i can go here
44:12 - inside of the scripts folder and right
44:14 - click and i can create a new script this
44:17 - is going to be a new c sharp script so
44:18 - let's go over here new script and i'm
44:20 - going to call this one monster this is
44:22 - going to be a universal script you're
44:24 - going to attach it on the go so let's go
44:26 - over here and load in script and monster
44:29 - so attach it on the monster red zombie
44:32 - select it go here under scripts and load
44:35 - scripts and monster
44:37 - green zombie go select it go here script
44:40 - empty load and let's go under scripts
44:43 - and monster so make sure that it is
44:45 - attached on every single one of these
44:47 - enemies and let me just go over here and
44:49 - make sure that you check these
44:50 - animations so that these animations are
44:52 - playing so let's go over here the
44:54 - animations are playing
44:56 - and let's go in our visual studio and
45:00 - for the monster what do we need first of
45:03 - all the monster is also going to inherit
45:05 - from kinematic body 2d make sure it's a
45:09 - kinematic body 2d don't make don't click
45:11 - or don't select kinematic body only so
45:14 - it's going to be a kinematic body 2d let
45:17 - me just
45:18 - let me just put this over here
45:22 - so what do we need in order to move our
45:24 - zombies
45:25 - well we need to move speed so it's going
45:27 - to be private flow to move speed by
45:29 - default i'm going to say 600 because i
45:31 - want the zombies to move fast as the
45:33 - speed of light we also going to have a
45:34 - private gravity so private
45:37 - float gravity which is going to be equal
45:40 - to 20 f we are also going to have a
45:43 - private vector so private vector 2 this
45:45 - is going to be our movement and you can
45:48 - see where this is going i'm going to do
45:49 - the same the similar thing i did for our
45:51 - player we're also going to have here a
45:53 - private or actually it's going to be a
45:54 - public one so here i'm going to say
45:57 - public
45:58 - bull move left to determine if we're
46:00 - going to move left or right and we're
46:02 - also going to have a public bull is
46:04 - ghost
46:05 - and
46:06 - because we don't want the ghost to be at
46:09 - the we don't want ghosts to be at the
46:11 - bottom or actually landing on the ground
46:14 - because the ghost is floating that's why
46:16 - we're going to check if we have a ghost
46:17 - we are also going to have here a private
46:18 - float minimum underscore x and a maximum
46:21 - underscore x now for what you're going
46:23 - to use these well simply here in our
46:25 - game play i'm going to click on the plus
46:27 - here and actually no not here i'm going
46:29 - to click on this link which is going to
46:31 - allow me to let's say for example attach
46:33 - the ghost and i'm going to take the
46:35 - ghost and
46:36 - somewhere over here okay so this is
46:39 - going to be the minimum so the minimum
46:42 - is going to be negative
46:45 - 5090. so that is the minimum x so here
46:48 - we can go and we can say minimum x is
46:50 - equal to negative
46:52 - 5900 and i said 90 but it's actually 900
46:56 - so i can take the ghost now and not let
46:59 - me just go here what did i do i put it
47:01 - as a child of the main cameras let's see
47:03 - negative 5
47:04 - 900
47:07 - okay
47:09 - it can also be here so yeah it can be
47:11 - that value i don't care because we're
47:14 - going to cue it
47:15 - that's why here let me just go
47:18 - and not the background but select the
47:20 - ghost and over here
47:23 - let's say six thousand and
47:26 - six hundred and fifty yeah six thousand
47:29 - six hundred and fifty is going to be the
47:30 - maximum x so let's go over here maximum
47:32 - is going to be equal to this value again
47:34 - what we're gonna do is we're going to
47:36 - have the bounce because when the zombies
47:39 - or the ghost or whatever
47:41 - goes out of the screen we don't need it
47:43 - anymore so we are going to kill it we're
47:45 - going to cue it and that's why we're
47:47 - using minimum and maximum what is going
47:49 - to happen inside of the already function
47:51 - well we're going to determine first of
47:53 - all
47:54 - if this dot name is equal to ghost so if
47:58 - the name of this game object or this
48:00 - note holding the script is the ghost we
48:01 - are going to say is ghost is equal to
48:03 - true
48:04 - now we are also going to check here if
48:06 - move left so move left right here if we
48:10 - are supposed to move left we need to see
48:12 - here move speed so move speed is going
48:14 - to be multiplied equals to so multiplied
48:17 - equal to by negative one f and then
48:20 - we're going to say here get the node and
48:22 - the node is going to be animated sprite
48:25 - and the name of that node is animation
48:28 - and then simply we're going to say flip
48:30 - horizontal is going to be equal to true
48:32 - this is if we are moving to the left
48:34 - side if we are moving to the right side
48:35 - we are not going to do this but if we
48:37 - are moving to the left then we are going
48:39 - to do it and simply here in our physics
48:42 - process so here i'm going to say
48:43 - underscore physics process this is going
48:46 - to be the physics process here we're
48:48 - going to say movement like this dot y
48:51 - and we're going to say plus equals
48:53 - gravity but we are going to check if
48:56 - this is not the ghost so if not the
48:58 - ghost that we are going to do that now
49:00 - pay attention here
49:01 - i added an exclamation mark what is an
49:04 - exclamation mark well it makes what's
49:05 - after it the opposite if this is ghost
49:08 - is true this will make it the opposite
49:10 - which means it will make it false
49:12 - and voila but if this is ghost is false
49:17 - then what we're gonna do is well if it's
49:20 - a ghost actually if it's not the ghost
49:22 - excuse me so here as you can see
49:26 - i'm adding is ghost i'm saying it to be
49:28 - equal to true if this game object or
49:30 - note has the value or name ghost so if
49:32 - this is not the ghost we are going to
49:33 - add the gravity and as i said if this is
49:35 - ghost is true
49:37 - then this will make it
49:38 - the opposite which is false and this
49:40 - right here will not be executed but if
49:42 - this is ghost is false this will make it
49:44 - opposite which is true and this will be
49:47 - executed simple as that
49:48 - and simply here i'm going to say
49:50 - movement so movement dot x is equal to
49:53 - move speed and then we're simply going
49:55 - to call here movement is equal to move
49:58 - and slide and here we're going to pass
50:00 - the movement simple as that and that is
50:02 - all we need to do and we can test this
50:04 - out and not over here
50:06 - here and in order to test it out i'm
50:08 - going to go here and let's say i attach
50:10 - the ghost so let's see let's see i've
50:13 - attached the ghost let's i'm going to
50:14 - put the ghost over here
50:16 - and i'm going to command b so let's see
50:18 - if this actually is going to work so now
50:22 - the ghost should come from our right
50:24 - side or left side and we that is the
50:26 - case but the ghost also went out of the
50:29 - screen so we need to kill the ghost
50:31 - that's why we have the bounce
50:33 - so let's go over here
50:35 - and what i can simply do is i can test
50:38 - if the position that x is greater than
50:41 - the maximum x
50:44 - or if the position that x is less than
50:47 - the minimum x we can q free so we can q
50:50 - free our zombie or the ghost or whatever
50:54 - again notice here if the position x of
50:56 - that game object be that the ghost or
50:59 - whatever
51:00 - if it's greater than the maximum x q
51:02 - free or if it's lower than the minimum x
51:05 - then q free this means this is an or
51:10 - operator or however it's called this
51:12 - means only one of these needs to be true
51:15 - so this can either be true or this can
51:17 - either be true if both of these are not
51:19 - true only then we will not execute this
51:21 - q3 but if this is true if only one of
51:25 - these is true then we will execute by
51:26 - the way notice here i don't i didn't add
51:30 - parentheses or curly brackets because if
51:32 - you only have one statement
51:34 - after the if statement if you only have
51:36 - one line of code after that you don't
51:38 - have to call
51:40 - you don't have to call
51:41 - curly brackets so you can do it without
51:43 - curly brackets but only if you have one
51:46 - line of code if you add here another
51:48 - line of code for example into a is equal
51:50 - to general 15 or 12 like this then this
51:52 - one this right here this a will not be
51:55 - executed inside of the if statement
51:58 - so again remember that and we cannot
52:01 - test this out
52:02 - unfortunately we can i mean if we follow
52:05 - our game object and all of the good
52:07 - stuff but let me just try to do this i'm
52:09 - gonna run the game and try to run
52:13 - over here but since i've added the value
52:15 - to the zombie he will move faster than
52:17 - me you see he will move faster and
52:20 - let's hope and here we need to
52:22 - put the correct
52:24 - or arrange the backgrounds correctly so
52:26 - yeah as you can see we don't see him
52:28 - anymore you can do the exact same thing
52:30 - to put the bounce for the player this
52:32 - will be your homework following this
52:34 - tutorial so do the exact same thing to
52:36 - put the bounce on the player and here i
52:39 - made a mistake for these bounds yeah for
52:42 - the background but this is well easily
52:44 - adjustable so don't worry about that
52:46 - anyways this was about our monsters the
52:49 - next in the next video we're going to
52:50 - start spawning them in our game then we
52:52 - are going to start detecting the
52:53 - collision all the good stuff anyways if
52:55 - you want to try on my academy two bucks
52:57 - only click the link below and i will see
52:59 - you guys in another video
53:02 - how did italy do people moving forward
53:05 - with our game let us start spawning the
53:08 - enemies in the game so the player can
53:09 - avoid them and all the good stuff and uh
53:13 - yeah this is getting awkward let's get
53:15 - into the game so the first thing that we
53:18 - need to do is go here in the scripts
53:19 - folder i'm gonna right click over here
53:21 - and use c sharp script
53:23 - make sure it's a c sharp one let's go
53:25 - over here and i'm going to call this one
53:27 - gameplay so gameplay and make sure that
53:29 - you attach it here on the gameplay game
53:31 - object so script empty load we're going
53:34 - to go under scripts and i'm going to
53:35 - select the gameplay
53:37 - so first of all let me just double click
53:38 - it and open here in visual studio while
53:40 - we are waiting to open our script and
53:43 - giving space and all this here if you
53:44 - want to try out my academy you can do
53:46 - that for two bucks link will be in the
53:48 - description below one month access for
53:50 - two bucks just to try it out and if you
53:52 - like it you can stick with it if you
53:54 - don't well then don't simple as that so
53:57 - here in our gameplay and we can inherit
54:00 - note it's not a problem
54:02 - we need first of all an export variable
54:04 - it's going to be a private packed scene
54:08 - and we are going to have the green
54:10 - zombie so green zombie red zombie and
54:14 - the ghost i'm a ghost ghost ghost ghost
54:16 - ghost
54:17 - and what is the next step we also need a
54:19 - private vector too spawn underscore left
54:24 - and we also need and here of course i'm
54:26 - going to say new vector 2 like this and
54:28 - we need spawn write this is the position
54:30 - where we are going to spawn these game
54:32 - objects or nodes or how we're going to
54:34 - call them let me just go over here first
54:37 - and i am going to take let's take the
54:40 - red zombie and put it over here
54:42 - so somewhere around here we can start
54:44 - spotting this is on the left side by the
54:45 - way so the y-axis can be 455
54:49 - so here i'm going to say comma 455 for
54:52 - the y on both here so comma again 455
54:55 - for the y
54:56 - and let's go back
54:58 - so for the left side it's negative five
55:00 - thousand
55:02 - and ten or simply could be five thousand
55:04 - ah it can be five thousand so let's go
55:06 - over here
55:08 - and put it
55:10 - so what did i just do
55:12 - command v to paste it okay so negative
55:16 - five thousand this is for the left side
55:18 - and for the right side we need to go
55:19 - back over here and i need to take this
55:22 - bad boy
55:23 - so let's take him
55:26 - and put him over here
55:29 - positive 6390
55:33 - so here it can be positive 6390f
55:37 - this is where we are going to start
55:38 - spawning these or actually actually
55:40 - actually actually let me just go back
55:43 - probably here
55:45 - 6090 because
55:47 - let me just make sure where is the
55:49 - bounce for the monster so yeah yeah it
55:52 - can be negative 5090. let me just go
55:55 - over here and see negative 5000
55:58 - yeah it can be like this and here 6390
56:00 - because here is the positive six hundred
56:03 - six thousand six hundred and fifty so
56:05 - yeah this can do so these two are going
56:07 - to be are
56:09 - these are going to be where we are going
56:11 - to spawn these enemies
56:13 - and in order to spawn then we need to
56:15 - create a function so i'm going to go
56:16 - over here and remove this and i'm going
56:18 - to call this one void on monster spawn
56:23 - underscore spawn like this
56:25 - we are going to spawn the monster now
56:28 - how we are going to do that well it's
56:29 - going to be very easy first of all here
56:31 - i'm going to say in a random enemy
56:34 - surrend nme it's going to be equal to
56:37 - new random
56:38 - like this and i'm going to say here next
56:41 - from 0 up to 3 this is going to return a
56:43 - number
56:44 - between a zero and three but not
56:46 - including three so it will return zero
56:48 - one or two
56:49 - and here we're going to say switching
56:51 - case and here i'm going to pass my
56:52 - random enemy and based on the case
56:55 - so the value case can be zero like this
56:59 - so case zero and like this and below we
57:01 - need to see break we're going to have
57:03 - case one and case two so here case one
57:06 - and here case two of course here at the
57:08 - top we need to say monster and i'm going
57:11 - to call this one new monster so new
57:13 - monster is going to be equal to null
57:16 - like this and depending on here if we
57:18 - have case 0 we're going to spawn a green
57:20 - zombie so we're going to say new monster
57:22 - is equal to green zombie dot instance as
57:26 - monster like this
57:29 - and here below i'm going to duplicate
57:30 - this and this is going to be the red
57:32 - zombie and here below i'm going to
57:33 - duplicate this and this is going to be
57:35 - the ghost so depending on the random
57:36 - value here from 0 up to 2 so zero one or
57:39 - two
57:40 - we are going to either spawn the green
57:42 - zombie the red zombie or the ghost ghost
57:44 - ghost ghost goes anyways what we are
57:46 - going to do next is here i'm going to
57:48 - say vector to temp is gonna be equal to
57:51 - or simply
57:52 - declare it
57:53 - and i hear my fans going crazy and not
57:56 - fans like you are my fan but here let me
57:59 - just go
58:00 - show preferences
58:02 - and i'm going to put them over here i
58:04 - think this is okay so that we don't hear
58:06 - them and i don't have to edit this and
58:08 - all of the annoying things
58:10 - so the next thing that we need to do
58:12 - over here is we're going to again
58:14 - randomize here i'm going to say new
58:16 - random and i'm going to call here next
58:19 - from 0 to 2 if that number is greater
58:22 - than zero
58:23 - we are going to spawn to the right side
58:26 - so here spawn to the right
58:29 - else if this number is not greater than
58:31 - zero meaning it's a zero so else here
58:34 - below not packed scene but this over
58:37 - here come on what you're doing like this
58:40 - else we're going to say here spawn
58:43 - left
58:45 - so what's gonna happen here is you're
58:46 - going to say temp is equal to spawn
58:48 - right and here we're going to say temp
58:51 - is equal to spawn left like this but
58:55 - also here if we are spawning to the
58:58 - right side our enemy needs to start
59:00 - moving to the left side so what we need
59:02 - to do is we need to say here new monster
59:05 - that move left is equal to true why
59:09 - again if i go over here you see if we
59:11 - spawn him to the right side this is on
59:13 - the right side you see this is our
59:14 - player and this is the right side so our
59:16 - enemy needs to start moving to the left
59:18 - side
59:19 - so that is the that is the reason why so
59:21 - let me just remove this okay
59:24 - and
59:25 - practically the
59:26 - last thing that we need to say here is
59:28 - new monster dot set position we are
59:30 - going to pass here temp and add the
59:33 - child new monster new
59:35 - monstero
59:37 - and voila now
59:39 - we can call this here in the ready
59:40 - function so i can spawn it here calling
59:42 - it in the ready function let's go over
59:44 - here command b just to see if this
59:46 - actually works will this work will this
59:49 - work can we have a debugger let me just
59:50 - see oh
59:51 - [Music]
59:52 - you see here notice we have a null
59:54 - reference exception and the line where
59:56 - we have it it's 31 and 15. let's go in
59:59 - the 31 and 15. so 15 this is the line
60:02 - over here and 31 okay let me just
60:05 - okay you see this is where we had that
60:07 - problem now the reason for that is this
60:09 - i need to go and select the gameplay i
60:11 - need to attach these so here for the
60:13 - green zombie drag and drop attach the
60:15 - green zombie for the red one drag and
60:17 - drop attach the red one and for the
60:20 - ghost drag and drop and attach the ghost
60:22 - i'm a ghost ghost ghost ghost ghost and
60:23 - i'm going to command b now and
60:25 - everything works but pay attention now
60:27 - we are going to have a monster either
60:29 - from the right side or from the left
60:32 - side okay here he is so he is pawn we it
60:35 - works but we only have one
60:38 - that is the issue we only have one and
60:42 - in order to spawn more we need to call
60:44 - this function repeat repeatedly over and
60:47 - over and over again
60:49 - so let's do that so right click here on
60:52 - the gameplay and i'm going to click here
60:54 - add a child node is going to be a timer
60:57 - we need to go back over here and this
60:59 - monster spawn let me just remove it i'm
61:01 - not going to call it in the ready i'm
61:02 - going to copy this name on monster spawn
61:04 - because i'm going to go here select the
61:05 - timer go under his node and signals and
61:08 - select the timeout connect the signal
61:10 - over here at the gameplay so connect
61:12 - that signal and name the signal on
61:15 - monster spawn and hit connect
61:17 - but we need to select the timer again go
61:20 - here in the inspector i'm going to say
61:21 - let's say every two seconds and auto
61:24 - start on its own one shot don't check
61:27 - this if you check it it will be only
61:28 - called once if this is not checked it
61:30 - will be called over and over and over
61:32 - again so let's see that and i'm going to
61:35 - hit command
61:36 - b and now we should see monsters
61:40 - spawning from both sides and every two
61:42 - seconds we're going to have new monster
61:43 - okay this is the gauss goes i'm gonna go
61:45 - goes ghost ghosts we can probably move
61:47 - the move the y-axis a little bit lower
61:50 - so that the ghost is not that but you
61:52 - see we have one issue here one issue
61:54 - another issue so we have issues here
61:56 - okay we have issues as you can see and
61:59 - our game is lagging and all of the good
62:00 - stuff you see okay we will see how we
62:02 - can fix this starting from the next
62:04 - video but what i'm gonna do is i'm
62:06 - simply gonna go back and probably not
62:09 - four five five let me just take the
62:11 - ghost and position him over here where's
62:13 - my ghost
62:14 - no not a child of a timer where is the
62:17 - ghost here he is and move the ghost over
62:20 - here move a little bit down something
62:22 - like this can do transform here it's
62:26 - negative so
62:27 - oh actually for the y not the x here i'm
62:30 - going to say
62:31 - three five so five three five this is
62:34 - going to be our y or actually yeah our y
62:37 - so here negative five three five five
62:40 - three five so that the ghost is lower a
62:42 - little bit lower to the ground anyways
62:43 - this was our this is well all for this
62:46 - video we're spawning the monsters in the
62:48 - next video we are going to detect
62:49 - collision between the monsters and the
62:50 - player we are also going to see how we
62:52 - can
62:54 - avoid collisions between the monsters
62:56 - and all the good stuff if you want to
62:57 - try on my game development academy you
62:58 - can do that for just two bucks one month
63:01 - pass for two dollars if you want it go
63:04 - get it if not good luck learning game
63:06 - development and i will see you guys in
63:08 - another video
63:09 - what is a cracking people this is the
63:12 - last video of this series monster chase
63:14 - game which is a 2d platformer-ish game
63:16 - in the dark game engine so uh let's get
63:19 - into it we need to detect collision
63:21 - between the player and the zombies and
63:23 - kill him we need to also prevent
63:25 - collision between the zombies and
63:27 - themselves
63:28 - and yeah we also need to restart the
63:31 - game when the player dies so let's take
63:32 - a look at how we can do all of that so
63:34 - yeah so the first thing that i am going
63:36 - to do i am going to go over here
63:40 - in our green zombie
63:42 - and we are going to
63:45 - undo the collision with the zombies so
63:49 - i'm going to make sure that the zombies
63:51 - are not colliding with each other so we
63:53 - can do that by selecting the the green
63:55 - zombie game object over here the
63:56 - kinematic body and here for the
63:58 - collision
63:59 - i am going to set the layer over here
64:01 - where it is but the mask i'm going to
64:02 - move it over here so make sure that you
64:04 - move the mask over here do the same
64:06 - thing for the red zombie so let's go
64:07 - over here collision move the mask over
64:10 - here also for the ghost select him
64:12 - collision and here move the mask and
64:15 - everything is gonna be okay simple fix
64:17 - is that so if i command b to run our
64:20 - game we are going to see now that our
64:22 - zombies are not hitting each other or
64:25 - actually they can hit each other but
64:26 - they're going to simply pass between
64:29 - each other you see okay but i can
64:31 - collide with them so i can collide with
64:33 - them so they collided with me okay now
64:34 - you see the zombie has passed and we
64:36 - have another ghost and now you saw they
64:38 - passed through each other so yeah you
64:40 - saw it uh i'm not gonna repeat it again
64:42 - you saw it you're not blind
64:44 - okay what is the next step well here i'm
64:46 - gonna go on the player and select the
64:48 - player and command
64:50 - b or actually right click and attach an
64:53 - area 2d so i'm going to attach an area
64:55 - 2d and what i'm going to do is i'm going
64:58 - to zoom in on this collision shape and
65:00 - i'm going to duplicate this one and i'm
65:02 - going to resize it like this or actually
65:04 - no no no
65:05 - delete it why why did i duplicate it
65:08 - resize the collision like this so simply
65:10 - resize the collision like this but here
65:13 - for the area 2d i'm going to right click
65:15 - and add another collision 2d
65:17 - or collision shape and here for the
65:19 - empty we're going to select here a
65:22 - rectangular shape but this one just like
65:25 - this one i'm going to resize this bad
65:27 - boy so let me just move him over here
65:30 - something like this
65:33 - just a little more
65:35 - a little bit upwards no select this one
65:39 - okay this one
65:41 - and voila
65:43 - so these are going to be this is going
65:44 - to be our collision now what we need to
65:47 - do is we need to create a function so
65:49 - select the collision area and go here
65:51 - under node and here we're going to
65:53 - select this body entered so make sure
65:55 - you select that
65:56 - connect it with the player over here so
65:58 - connect is at the bottom right corner
66:00 - and here i'm simply going to call this
66:02 - function on
66:04 - body entered and i'm going to connect it
66:07 - so let's go in the player and here
66:10 - i'm going to say void on body entered
66:13 - which takes a physics body 2d which i'm
66:15 - simply going to call body what's going
66:17 - to happen over here well here we're
66:18 - going to test if the body
66:20 - so if body is in group
66:24 - enemy like this
66:27 - then what's going to happen we are going
66:28 - to kill free
66:30 - r
66:30 - player but first of all let me just
66:33 - select this enemy copy this so we need
66:35 - to go back here in our engine select the
66:37 - green zombie and here
66:40 - green zombie and where it says node
66:42 - signals we have down the right side
66:44 - group select the group and here pasted
66:46 - enemy and click add do the same thing
66:48 - for the red zombie so here paste add go
66:51 - here on the ghost do the same thing and
66:53 - paste it and voila we're good to go so
66:55 - what's gonna happen now if i command b
66:59 - we are gonna go
67:00 - over here
67:02 - and when one of the zombies or monsters
67:04 - touches us we are going to see one thing
67:06 - first of all we're going to have an
67:08 - error we're going to fix it don't worry
67:10 - but let me just show you that bam you
67:12 - see
67:13 - we crashed our app crashed what happened
67:16 - here well in the camera follow on line
67:18 - 23
67:19 - camera follow line 23
67:22 - this is the error the error is we're
67:24 - using the player target but we have died
67:26 - this is why we're going to use player
67:27 - died variable over here so when we die
67:30 - the first thing that i'm going to do is
67:31 - i'm going to say get the parent which is
67:33 - the gameplay parent then i'm going to
67:34 - say get the node and the node is going
67:37 - to be
67:38 - camera follow so camera follow
67:41 - and the name of the node is gonna be
67:43 - main cam so main camera dot player dime
67:47 - is equal to true so we need to inform it
67:49 - you see player died is true so that this
67:51 - right here
67:52 - will be true so if player died we're
67:55 - gonna hit return and we are not gonna
67:56 - follow the player let's check that out
67:59 - so command b to run our game again and
68:01 - see will that work
68:04 - so now when one of the zombies touches
68:06 - us we're gonna die but the game is not
68:09 - going to so let's go over here and now
68:12 - bam you see i've died
68:14 - you see i've died but the game is still
68:16 - on
68:17 - the game is still on and we didn't crash
68:20 - okay
68:21 - so what is the next step we need to
68:23 - restart the game when we die
68:25 - and for that we're gonna select our
68:26 - gameplay and go inside so go inside of
68:30 - the gameplay and what we are gonna do is
68:32 - here below i'm going to create void
68:35 - so void
68:36 - underscore on
68:38 - player underscore died like this and
68:41 - here's something i'm going to say get
68:43 - the tree dot reload the current scene
68:46 - and here i'm going to simply say public
68:49 - void
68:50 - player died
68:52 - like this
68:54 - and i'm going to say here restart
68:58 - dot
68:59 - start now what is this restart well here
69:01 - on top we are going to create a private
69:04 - timer that i'm going to call restart
69:06 - like this and here inside of our ready
69:09 - function we're going to say restart is
69:11 - equal to get the node which is going to
69:13 - be our timer node and i'm going to call
69:15 - it restart
69:17 - like this so now we need to create it so
69:19 - let's go here
69:21 - and
69:22 - let's go in our engine select the
69:24 - gameplay and add a child it's going to
69:26 - be a timer and double click on it and
69:29 - rename it to restart we do need to copy
69:32 - this function name so on player died so
69:34 - make sure that you copy it and
69:36 - selecting the on or restart go in the
69:39 - node and signals select the timeout
69:42 - connect it on the gameplay and paste
69:44 - here so we are going to paste the on
69:46 - player guide and connected
69:48 - everything is okay the only thing that
69:50 - is left for us to do is go back here in
69:52 - the inspector select the timer
69:54 - and here i'm going to check one shot and
69:57 - i'm going to see here two which means
69:59 - after two seconds we are going to call
70:01 - it so when we call over here so when we
70:03 - call restart after two seconds it will
70:05 - call this signal over here and voila
70:08 - that is that and we are only going to
70:10 - call it once that's why i set here one
70:12 - shot to be true because we don't want to
70:14 - restart the game 2 000 times when the
70:16 - player dies
70:17 - and over here in the player
70:19 - when we die so we get the parent over
70:21 - here for the camera to inform the camera
70:24 - that we have died but we also need to
70:25 - say here get the parent which is going
70:28 - to be our gameplay and we need to say
70:30 - here player died to inform it that the
70:33 - player has died which will in turn go
70:36 - back here in the gameplay it will call
70:38 - this right here restart start after two
70:41 - seconds it will call this and we will
70:43 - restart our game so if i command b now
70:48 - so command b
70:49 - let's take a look at here what we have
70:51 - so here and let's try to jump
70:54 - and now when we die so let me just wait
70:57 - over here because one of the monsters
70:58 - will show up eventually bam we died
71:02 - boom
71:03 - the game has restarted okay you see now
71:06 - congratulations you're creating a 2d
71:08 - platformer maybe this is not technically
71:10 - a 2d platformer but probably some of you
71:13 - wise guys will will correct me and i
71:15 - don't care about that you're here to
71:17 - learn i made the 2d platformer because i
71:19 - didn't know the genre of this game
71:21 - anyways you can download the complete
71:23 - project link will be in the description
71:24 - below along with this with the assets
71:27 - you can use them for whatever you want
71:28 - to use them of course you're going to
71:29 - use it to follow the tutorial but
71:31 - congratulations you have created your
71:32 - first game in the gdo game engine my
71:35 - brother and until next time fight here
71:38 - from astute.com if you want to try my
71:40 - gamedev academy for two bucks one month
71:42 - click the link below and i will see you
71:43 - guys
71:44 - in another video