00:00 - hello everybody and welcome to another
00:03 - video
00:04 - today i would like to show you with you
00:06 - how to create this game
00:09 - game of life with angularjs
00:14 - as you can see it randomly starts and it
00:16 - also has some buttons
00:19 - like a start stop and clear and the
00:22 - generations
00:25 - this game
00:27 - is from freecode.com
00:29 - there are several user cases or user
00:32 - stories
00:33 - and uh you'll see how to complete each
00:36 - one of these
00:38 - there is also a wikipedia link that
00:40 - gives you all the instructions and say
00:43 - rules there are several rules and
00:46 - actually it took me
00:49 - one or two days to read and understand
00:52 - everything so then i will be able to
00:54 - code it
00:55 - i'm not gonna get into a lot of details
00:57 - about the
00:59 - the rules right now but you will see me
01:01 - later that we will discuss some of them
01:05 - now i'm only using uh angularjs and it's
01:08 - not bootstrap as they usually do and i
01:11 - will create this project in codepen
01:15 - uh i will leave in the description box
01:18 - the code for uh
01:20 - the codepen and also i will share it on
01:23 - github too
01:24 - so if you can see very clear what am i
01:27 - typing or uh
01:29 - you know if you want to reread it you
01:31 - can also search it in my codeban or in
01:35 - github
01:36 - i will create writing the html
01:39 - and i've already written the div ng up
01:43 - game of life and ng controller game of
01:46 - life controller
01:49 - then i'm going to start writing a table
01:52 - and inside there i'm going to have an ng
01:55 - repeat
01:56 - roll in rows
01:58 - and
01:59 - after that an ng click
02:04 - and the ng click will be activate
02:07 - which will be a class and it will have
02:10 - the parameter rows dot index off row
02:15 - and index
02:19 - continue with a nenji repeats
02:23 - call
02:23 - in row.course
02:26 - call is for column
02:32 - and last but not least include an ng
02:35 - class
02:37 - i will name
02:39 - i will name my variable board
02:42 - call dot active equals one
02:46 - and call and old
02:49 - column dot active greater than one
02:55 - and that is my table
02:58 - uh you won't be able to see it right now
03:00 - we will first have to write some css
03:02 - code and then some javascript code to
03:05 - give it some functionality
03:13 - all right
03:16 - i think
03:17 - now you're good with the table
03:21 - yes so let's keep going with the
03:25 - patterns
03:26 - first i'm going to write a class
03:28 - components that you will style later in
03:30 - the css and then for the three buttons
03:34 - i'm going to create an ng click
03:37 - and inside there i'm going to have a
03:39 - function the first one will be stop with
03:41 - the name stop another one will be start
03:45 - with the parameter false
03:47 - and the third pattern will be clear
03:50 - with the name clear
03:56 - and another one thing that you are going
03:58 - to need is the generation
04:02 - and just give it a parameter generations
04:06 - all right we are done with the html and
04:10 - uh let's go to css we're going we're not
04:13 - going to write a lot of things
04:16 - just the basics and of course then you
04:18 - can style it however you like it
04:22 - we're going to have a table
04:28 - t htt with border one pixel solid black
04:32 - and border columns uh will be columns
04:36 - then the table i'm going to give it a
04:37 - margin audio and in this way it will be
04:40 - in the center of our screen
04:44 - you can add a background color in my
04:46 - case will be white smoke
04:49 - but you can adjust it to your
04:51 - preferences
04:53 - i'm also going to continue with the td
04:56 - and i'm going to give a width and a
04:58 - height
05:02 - all right
05:04 - just give
05:06 - the class new a background color of
05:09 - orange and then the old the background
05:12 - color of boring straights
05:16 - i think my last class will be components
05:19 - and it's about the buttons and the
05:21 - generation
05:25 - i'm just going to give the basic
05:26 - stylings and now you're ready to focus
05:29 - on the javascript so the javascript here
05:32 - is going to be
05:33 - a little bit longer than it usually is
05:37 - at least in the other africa pen uh
05:39 - sorry free code camp challenges because
05:42 - here there are many many rules
05:45 - i'm going to
05:47 - just read
05:48 - some of the tools
05:51 - from wikipedia
05:57 - the game of life is made by the by
06:01 - conway is a mathematician
06:12 - so
06:13 - let me give you a short description of
06:15 - what is that we are building right now
06:18 - um so far i created the grids with rows
06:22 - and columns
06:24 - and
06:25 - now i would like to mention that
06:28 - any live cell with fewer than two live
06:31 - neighbors dies
06:33 - as if it caused by anti-population
06:36 - two any leave cell with two or three
06:40 - life neighbors lives in the next
06:41 - generation
06:43 - three any live cell with more than three
06:46 - life neighbors dies as if by
06:49 - overpopulation
06:50 - and for any dead cell with exactly three
06:54 - live neighbors becomes a live cell
06:56 - as if by reproduction
07:01 - the initial pattern constitutes the seed
07:03 - of the system the first generation is
07:06 - created by applying the above rule
07:08 - simultaneously to every self in the
07:11 - seeds
07:12 - births and deaths occur simultaneously
07:15 - and the discrete moment at which this
07:17 - happens is sometimes called a take
07:21 - the rules continue to be applied
07:22 - repeatedly to create further generations
07:29 - if you search over the internet uh you
07:32 - will see that there are a couple of
07:34 - algorithms that can um
07:37 - describe what we are trying to do here
07:39 - in javascript and it will be very
07:42 - helpful
07:44 - to take a look at some of these
07:45 - algorithms
07:48 - as i mentioned in the beginning of this
07:49 - video it took me a lot of hours to
07:52 - understand every rule and then figure
07:55 - out how exactly i was going to to write
07:58 - them
08:06 - all right
08:11 - some basic things about
08:13 - angular 2
08:16 - the ng app that we used in the html is a
08:18 - directive that tells angularjs that this
08:22 - is the root element of the application
08:25 - and all angular applications must have a
08:27 - root element
08:29 - then the controller directive defines
08:32 - the controller of course
08:42 - so let's focus now clearly on the
08:45 - javascript part
08:47 - we're generating the seeds which means
08:50 - that
08:51 - that we're going to create a function
08:53 - with the name random seeds
08:55 - inside there i'm going to have a for
08:57 - loop
08:59 - ver
09:01 - i equals 0 i
09:03 - smaller than row marks called marks
09:06 - divided by 2 and i plus plus
09:10 - inside there i'm going to have another
09:11 - variable with the name row and now i'm
09:14 - going to have the math tote floor
09:17 - math.rondo
09:19 - and row max minus one
09:24 - i'm going to do the same for columns
09:40 - okay i started writing the function
09:42 - counts live live neighbors
09:45 - once again the name will be check
09:47 - neighbors
09:49 - the function will have two parameters
09:51 - row and co
09:53 - i'm going to have a variable count
09:55 - equals 0
09:57 - then a 4
09:59 - loop with var
10:01 - i equals rho minus 1 and i
10:05 - rho plus 1 i
10:07 - plus plus
10:09 - another for loop with the j for columns
10:12 - and inside there i'm going to have an if
10:15 - statement
10:20 - if i is different than rho
10:23 - or j is different than colu
10:26 - and
10:34 - and scope dot rows
10:37 - i
10:39 - plus
10:41 - sorry and
10:42 - scope dot
10:44 - rose
10:46 - i
10:47 - don't cause
10:49 - j
10:50 - then i'm going to need
10:53 - another if statement
11:00 - let me write everything here correctly
11:03 - and i'm going to continue with the if
11:04 - statement
11:08 - all right
11:09 - now you can see also the grid system
11:12 - so if scope to throws
11:15 - i
11:16 - don't calls j
11:18 - dot octave
11:20 - is greater
11:21 - or equal than one
11:24 - then count plus plus
11:27 - and in the end
11:33 - you wanna to return your count variable
11:40 - all right i'm just checking to make sure
11:42 - everything is works fine and i think
11:44 - that it's great so now i'm going to
11:47 - continue with some other functions
11:51 - uh all right
11:52 - scope dot stop game equals function and
11:55 - then inside there the only thing i want
11:57 - is the interval dot console in terrible
12:00 - all right
12:02 - that looks good i don't need anything
12:04 - else and let's continue with the
12:06 - activate
12:08 - scope.activate equals function and in
12:11 - the parenthesis write row and call
12:14 - scope dot rows row dot calls
12:18 - call dot active equals one
12:22 - and we are ready with this function also
12:27 - now
12:28 - var interval
12:31 - scope dot start game
12:36 - equals function random
12:38 - so now you start writing a random
12:40 - function
12:42 - which is really important maybe it's the
12:44 - most important uh
12:46 - function of this game
12:49 - scope to generation equals zero
12:52 - if
12:53 - random random seeds and tradum seeds is
12:57 - another function
13:01 - so interval equals
13:04 - dollar interval function
13:07 - and open brackets
13:09 - inside these brackets
13:12 - we're going to have scope
13:18 - dot generation plus plus
13:22 - and then we need two four
13:24 - loops
13:25 - the first one will be for the rows and
13:28 - the next one of course for columns
13:34 - adjust your parameters
13:45 - all right
13:46 - and inside there
13:48 - we're going to have
13:51 - a variable another variable
13:56 - i'm sorry for this
14:03 - so far
14:04 - know of neighbors equals
14:08 - check neighbors
14:13 - i j
14:15 - and then scope dodge rose i don't calls
14:19 - j
14:20 - dot neighbors
14:22 - equals
14:23 - no of neighbors all right
14:26 - we will continue one more time with
14:29 - two more four loops
14:32 - the parameters here are the same as
14:34 - above so you can just copy and paste
14:37 - them
14:39 - and of course we will have some if
14:40 - statements
14:43 - in the first if statement you will need
14:46 - a dollar scope dot rows high dot cos j
14:50 - dot active greater
14:52 - f1
14:54 - and inside there open your brackets
14:56 - again and try if scope two throws i
14:59 - don't calls j dodge neighbors is greater
15:03 - or equal to four
15:05 - or
15:06 - scope to throws i dot calls j dodge
15:10 - neighbors is smaller than one
15:13 - then open brackets
15:15 - and write once again
15:17 - scope.chose i
15:19 - dot course j dot active equals zero
15:24 - now you need an else statement
15:27 - scope dot rows i dot course j dot active
15:31 - plus plus
15:34 - and another else statement which will
15:36 - include an if statement and i will and
15:39 - it will be scope dot choice i calls j
15:43 - neighbors equals equals three
15:46 - and scope dot rows i dot cos j
15:49 - dot octave equals one
15:52 - all right now
15:54 - i'm going to to finish
15:57 - this function and then we'll find uh the
15:59 - mistake but
16:01 - i think i know where it is but
16:05 - let's just be sure
16:07 - it must be a bracket that i forgot to
16:10 - close
16:14 - let me check it
16:19 - yes here it is
16:23 - uh the else statement should have uh
16:25 - also brackets that i that i forgot to
16:27 - read
16:29 - great now let's continue with the start
16:32 - game
16:34 - in the html code we write the start
16:37 - with the parameter false but now i'm
16:40 - going to do it scope.start
16:42 - equals true and then i'm going to have
16:45 - the clear function
16:47 - so we will need once again two for loops
16:51 - with our usual parameters of columns and
16:55 - of rows and columns
16:57 - and inside there just write scope dot
17:01 - rows i
17:03 - don't call j
17:05 - dot octave
17:07 - equals
17:10 - zero
17:11 - all right
17:15 - and that's it guys i hope that you like
17:19 - this game and i know that the rules are
17:21 - quite complicated that's why um i
17:24 - mentioned that you should go to
17:26 - wikipedia or to any other website and
17:29 - search for the algorithm algorithms some
17:32 - codes or some examples try to play this
17:35 - game and this will help you to better
17:37 - understand it
17:39 - so now we can see the generation we can
17:41 - use uh the board we can click on it
17:45 - then we have the three buttons
17:49 - the clear one that it clears everything
17:53 - and of course you can
17:56 - refresh the website and see
17:58 - one more time how this game is
18:01 - thank you very much for watching have a
18:03 - great day and if you like this video
18:06 - please share and subscribe
18:09 - thank you very much
18:17 - [Music]
18:20 - you