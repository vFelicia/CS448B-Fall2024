00:00 - what is up guys fire here from awesome
00:03 - toots dot-com and before we proceed to
00:06 - create our game let us take a short
00:08 - preview what is the game that you are
00:11 - going to create so if I hit the play
00:13 - button here we have a simple main menu
00:16 - with some animations and a play button
00:18 - nothing too fancy but hey you know me I
00:21 - need to add some menus in the game and
00:23 - show how you can navigate from one menu
00:25 - to another man you because well people
00:28 - are always confused about that so here
00:30 - we can only click on the play button it
00:32 - will take us right away in the gameplay
00:34 - when we jump we hear some sounds so I am
00:37 - gonna turn on or turn off my volume a
00:40 - little bit you see some obstacles that
00:42 - we have here and we need to avoid those
00:45 - obstacles such as the ninja or the
00:47 - squirrel that you just saw we can kill
00:50 - all of these enemies while we are in the
00:52 - air so while we are in the air we are
00:55 - able to kill all the enemies but if we
00:57 - are standing like this right here they
01:00 - can kill us as you just saw when we die
01:03 - we preview here the high score or the
01:06 - height that we reached we can click
01:08 - again to print play our game again or we
01:11 - can well click on the main menu to go
01:13 - back to the main menu so nothing too
01:15 - fancy but hey we will see a lot of cool
01:18 - features such as this right here for
01:20 - example the camera is not moving at all
01:22 - if I select the main camera you will see
01:25 - that the position of the main camera is
01:27 - at y equals 0 so we're not moving the
01:31 - main camera at all we are moving the
01:34 - actual backgrounds and what not and
01:36 - moving the enemies and all of those cool
01:38 - stuff we are gonna see so uh let's get
01:42 - into it and create this cool game I'm
01:45 - gonna go in another unity editor that I
01:47 - have created and we are gonna import the
01:50 - assets this is by the way a to the
01:53 - project so when you create a new project
01:55 - you're gonna select that 2d checkbox or
01:58 - radio button not the 3d one name your
02:01 - project and store it wherever you want
02:04 - so first things first here are the
02:07 - assets by the way these assets you can
02:10 - download them link is in the description
02:12 - below see
02:14 - see something like wanna use the assets
02:16 - for this tutorial and the complete
02:18 - project you can get it on the link below
02:20 - so click on the link and it will take
02:22 - you where you can download these assets
02:25 - so simply select all of these folders so
02:28 - we have buttons and/or backgrounds and
02:30 - buttons enemies and obstacles player and
02:32 - the sounds so I'm gonna select all of
02:34 - these folders and simply drag and drop
02:36 - and right here in my unity editor and it
02:39 - is gonna start importing all of those
02:42 - assets besides from importing the assets
02:46 - we are gonna create a main menu or the
02:49 - main menu you just saw in the preview in
02:51 - this video also so I'm gonna right click
02:53 - here and create a new folder so again
02:56 - it's right-clicking here in the project
02:58 - tab so right click create a new folder
03:01 - this is gonna be our scenes so not seen
03:04 - but since it's plural not singular and
03:08 - I'm gonna save this scene by holding
03:10 - command and pressing s and it's gonna
03:12 - open it here to save it of course or you
03:15 - can go under file save scenes and bam
03:19 - here you are I'm gonna select the scenes
03:21 - folder and this is gonna be our main
03:22 - menu so main menu and I'm gonna hit
03:25 - enter now what do we need for our main
03:29 - menu well of course we need a canvas and
03:32 - we need the background image so I'm
03:33 - gonna right click in the hierarchy tab
03:35 - right here and by the way if you want to
03:39 - rearrange how your unity editor looks
03:42 - like you can simply drag and drop all of
03:46 - these tabs you can put him here you can
03:47 - I don't know put him right here you can
03:50 - make them float like this if you like it
03:52 - like that I don't know which techniques
03:54 - you are using to you well create your
03:57 - games but this is how you can do it and
03:59 - you can save the layout for well later
04:02 - reuse by going on the top right corner
04:06 - right here you have the layout drop-down
04:08 - list and then you can click on the save
04:10 - layout and then simply name it here and
04:12 - click Save and voila you're good to go
04:14 - and I have saved mine as my layout and
04:17 - if I click it again BAM this is what I
04:20 - have let me just go here click on the
04:23 - resolution and by the way I'm glad that
04:26 - this has
04:27 - because I see a lot of people have
04:28 - troubles with this so I'm gonna use the
04:30 - resolution 480 by 800 for this tutorial
04:33 - now if you don't have it here if I
04:36 - assume and you need to go under game tab
04:38 - so game tab is right here if you don't
04:40 - have it it's under window and then you
04:43 - can click on game right here and any tab
04:45 - that you see here animation animator
04:48 - console here are key inspector they are
04:52 - all under window and here they are
04:54 - so scene tab game tab inspector here are
04:58 - key project animation blah blah blah so
05:02 - this is where you open these tabs now
05:06 - regarding to the game tab right below it
05:09 - you have a drop down list where you can
05:11 - select resolutions mine is as I already
05:14 - said 480 by 800 if you don't have it you
05:18 - see this little plus circle right here
05:20 - at the bottom you can click on that plus
05:23 - circle and it's gonna open this pop-up
05:25 - window the label here is the actual name
05:29 - for your resolution so it can be full HD
05:32 - for example here you have fixed
05:34 - resolution or aspect ratio aspect ratios
05:37 - like sixteen by nine sixteen by ten but
05:40 - the fixed resolution is where you can
05:42 - write 480 by 800 and when you click OK
05:46 - BAM here it is full HD 480 800 these in
05:49 - parentheses is the actual resolution and
05:52 - the first thing here is the name I named
05:55 - this on 480 by 800 as you can see here
05:57 - in parenthesis that's the resolution I'm
06:00 - gonna click it back again to my 480 by
06:03 - 800 and I'm gonna delete this full HD by
06:05 - right clicking on it and clicking delete
06:08 - and BAM this is how we do so this is how
06:13 - we create these resolutions in game tab
06:16 - moving forward in the hierarchy I'm
06:18 - gonna right-click go under UI and create
06:21 - an image now before I proceed to do
06:24 - anything I'm gonna select the canvas
06:26 - rename it to you I canvassed for the
06:29 - render mode we have screen space overlay
06:31 - screen space camera and world space I'm
06:35 - gonna select screen screen space camera
06:38 - and attach the main camera which is
06:40 - going to
06:41 - take this canvas obey the cameras you
06:43 - can see this whole thing right here this
06:45 - big thing this big rectangle is the
06:47 - canvas but notice now when I drag the
06:50 - main camera here for the render camera
06:52 - BAM the canvas is right here where the
06:56 - camera is if you want to know a little
06:58 - bit more about these and what they are
07:01 - the Unity Technologies has an official
07:04 - tutorial explaining what is the render
07:06 - mode for screen space overlay screen
07:09 - space Cameron rules-based simply type
07:11 - unity canvas render mode or canvas
07:15 - tutorial or something like that and you
07:18 - will find that video and I also talked
07:20 - about this in my courses you can check
07:22 - those courses out below is the link to
07:26 - all of my courses so I'm gonna select
07:29 - screen screen space camera as I already
07:31 - said for that UI scale mode I'm not
07:34 - gonna select scale bit pixel size or
07:37 - constant pixel size I'm gonna select
07:39 - scale with screen size and I'm gonna set
07:42 - the resolution to be 480 by 800 the one
07:44 - that we are using and here screen match
07:47 - mode it's gonna be 0.5 so that the
07:51 - canvas and his UI children will match
07:55 - the width and the height equally now
07:58 - taking this image I'm gonna put it in
07:59 - the middle of the screen this is what we
08:01 - see here and if we go back into the
08:03 - project and the backgrounds and buttons
08:06 - right here we have the background so if
08:09 - I select the UI image and I'm gonna drag
08:11 - and drop the background right here and
08:14 - Bend here it is this is our background
08:17 - now of course here I'm gonna see
08:20 - background image I'm gonna click on
08:23 - native size so set native size this is
08:25 - when we select the image and in the
08:28 - inspector panel in the camera or here in
08:30 - the image we have a property and we have
08:33 - a button called
08:34 - set native size if I click on it BAM
08:35 - here it is this is the native size of
08:38 - our background so you can see here the
08:41 - background now is covering the whole
08:45 - screen we are also gonna duplicate this
08:49 - background and it's gonna be the title
08:51 - so here I'm gonna name it title image
08:52 - subtitle I am
08:54 - gr image and I'm gonna search here in
08:57 - backgrounds and images for title here it
08:59 - is this is title and I'm gonna put it
09:01 - right here where the source image is and
09:03 - been here it is this is our image now
09:06 - again in regards to dragging and
09:09 - dropping these images you can simply
09:12 - drag and drop it like well like I did or
09:15 - you can click on the little circle here
09:17 - where it says source image and then you
09:19 - can search for the image right here and
09:21 - simply type for example title here it is
09:23 - and bam here you are and title is spelt
09:27 - UT what did I do here let me just go
09:30 - here and it's title like this is pelo -
09:33 - t yeah I don't care I'm gonna spell it
09:36 - like that and in regards to the width
09:38 - and the height of the title image is
09:40 - gonna be 430 so 430 for the width and
09:44 - for the height 390 and position Y I'm
09:49 - gonna say it - 5 - this is where we want
09:52 - it so this is what we currently have for
09:54 - that image now when you select it here
09:57 - you have a rect transform and you have
09:59 - position x position Y position Z width
10:01 - and the height this is where I set the
10:03 - width for 30 and the height 390 let me
10:07 - just fix the scale to 1 if for some
10:09 - reason it's at point 9 9 so I just fix
10:12 - it for well to be at 1 what we also need
10:16 - is a button background which is also
10:19 - gonna be well an image I'm gonna
10:21 - duplicate this title image and there's
10:23 - gonna be BT and BG - so I'm gonna name
10:25 - it and it's this blue shield so simply
10:29 - select the button BG drag and drop the
10:32 - blue shield right here it says source
10:34 - image and BAM here it is now the width
10:38 - of this is going to be at 372 the height
10:42 - is gonna be 206 and the position Y for
10:47 - it is gonna be at 31 why like that well
10:50 - now because we have a button and in
10:52 - order to create a button we simply need
10:54 - to right click you eye and we have a
10:57 - button and bam here it is this is our
10:59 - button now we are not gonna use this
11:01 - default one we are gonna edit it so this
11:04 - is gonna be our play BT and this I'm
11:06 - gonna name
11:07 - if you click on the drop down list for
11:10 - the button you will see it has a text by
11:12 - default you see this button that is
11:14 - written that's because of the text if I
11:15 - deactivated you see we don't have the
11:17 - text anymore so I'm gonna delete it we
11:19 - don't need it and select the play button
11:22 - and select the play texture drag and
11:25 - drop it here under source image UI
11:27 - sprite and bam here we are the width of
11:31 - this is going to be 181 and the height
11:33 - is gonna be 75 and position x4 it's
11:38 - gonna be zero position Y is gonna be 23
11:41 - so this is our main menu now you saw in
11:46 - the preview that this circle was well
11:48 - circling around it had an animation this
11:51 - jungle was also stretching and going
11:53 - back stretching and going back so these
11:56 - are the animations that we are gonna
11:57 - create but we're gonna start with that
12:00 - in the next video and now that we have
12:04 - finished our main menu let us animate
12:06 - the title and this circle which is well
12:08 - the background for our button just as we
12:11 - saw in the preview video before we do
12:13 - that I'm gonna right click here in the
12:15 - project tab and create a new folder
12:18 - where we are gonna store our animation
12:20 - so here I'm gonna well name the folder
12:22 - animations inside of it we're gonna
12:24 - create another folder it is gonna be our
12:26 - title animation and another folder so
12:31 - right click create folder this is gonna
12:33 - be our circles of circle animation or
12:37 - however you want to name it but this
12:39 - circle is the circle background for the
12:42 - button this is really important with
12:45 - this I mean organization don't you throw
12:47 - things away in your project like put the
12:50 - animations anywhere I mean you can do
12:52 - that but it will get your project really
12:55 - messy so it's a good idea to create
12:57 - folders such as these so animations and
13:00 - here are gonna store that animations and
13:02 - title animation this is where we are
13:04 - gonna create an animation for our title
13:06 - so in order to create that animation you
13:10 - need to select the title image here it
13:12 - is and go in the animation tab which is
13:15 - this one right here I've talked about
13:17 - these tabs in the previous video
13:20 - if you don't have a tab right here
13:22 - called animation you can go under window
13:25 - and here it is BAM now let me
13:27 - demonstrate that so if I close the tab I
13:29 - don't have it anymore I need it so I'm
13:32 - gonna go under window click animation
13:34 - and bam here it is in most cases is
13:38 - gonna be floating like this sometimes it
13:40 - is docked like this for example but if
13:43 - it's floating and you wanna put it
13:46 - somewhere else simply take it like this
13:48 - and drag and drop it wherever you want
13:50 - it this is my set up by the way for
13:53 - unity editor you don't need to do it
13:55 - like this you can have your own set up
13:57 - experiment with it and then simply save
14:00 - it here under well any layout name that
14:03 - you want so now that we have the title
14:06 - image selected which is really important
14:08 - so select that title image that is
14:11 - really important when you select it go
14:14 - into animation tab and now you can click
14:16 - on create animation so let me just
14:18 - select the title image again to begin
14:20 - animating title image create an animator
14:23 - and animation clip so we're gonna click
14:25 - on create which is gonna create this
14:27 - pop-up window or open it and here in the
14:30 - title animation folder so you see here
14:32 - I'm in assets animations title animation
14:35 - this is where I'm gonna save these
14:36 - animations I'm gonna call this one
14:39 - title animation and I'm gonna hit enter
14:43 - and bam here we are so now we can start
14:46 - animating our title image if we go here
14:50 - into the project and title animation
14:52 - folder you see here we have title
14:54 - animation this is the animation clip
14:57 - itself title image this is the
15:00 - controller so if I select title image
15:02 - you will see now the animator component
15:04 - is attached on it this title image as
15:07 - you can see here is the controller so
15:09 - animator controller for this animator
15:13 - now what we need to do we need to go
15:15 - into the animation select the title
15:17 - image again you see this little red
15:19 - button right here or I'm pointing with
15:22 - my mouse so here it is under the
15:24 - animation tab you have these play rewind
15:27 - go to previous keyframe go to next
15:30 - keyframe and here you have this
15:32 - red image enable/disable keyframe
15:35 - recording mode if you played with any
15:38 - video editing software you know this or
15:41 - this red key icon is from familiar to
15:45 - you so when we press on it it will start
15:49 - recording everything so what we need to
15:51 - do here well first things first we are
15:54 - gonna change the width and the height of
15:57 - our title so I'm gonna go under frame 15
16:02 - and by the way you see these samples
16:04 - here at 60 that means we have 60 frames
16:06 - in this animation but here you see this
16:10 - tab where it says 0 here I can type 15
16:13 - which means it will take me to frame 15
16:15 - you see now this line here indicating
16:18 - where we are in that animation this
16:20 - white line is now on frame 15 what
16:22 - happens on frame 15 well I'm gonna
16:24 - change the width to 230 and I'm gonna
16:28 - change the height to 350 for the title
16:32 - that's 250 but 350 now after that I'm
16:37 - gonna go on frame 30 so here I'm gonna
16:39 - instead of 15 type 30 hit enter which is
16:42 - gonna take me to frame 30 and on frame
16:45 - 30 I'm gonna set the width to 190 and
16:49 - the height is gonna be at 350 I'm not
16:52 - gonna touch it now I'm gonna go back to
16:55 - frame 45 or not go back but actually go
16:59 - to frame 45 hit enter here I'm gonna set
17:03 - the width to be 290 the height is gonna
17:08 - be 360 and lastly we're gonna go on
17:12 - frame 60 so here instead of 45 type 60
17:16 - hit enter here I'm gonna say the width
17:20 - is gonna be 440 and the height is gonna
17:23 - be 400 so now I can click again on the
17:29 - recording button it will stop recording
17:32 - everything and well voila we are good
17:36 - with the animation so we can well
17:38 - preview the animation in or did you
17:40 - preview it I can go back here click on
17:43 - display button you see the
17:45 - is the jungle run animation we can also
17:48 - run the game so if we hit the play
17:50 - button now this is the jungle run
17:52 - animation now you see I don't want it to
17:55 - be this fast how can we change this well
17:59 - in order to change that we can go in the
18:01 - animator tab you see here now we have
18:03 - the animator tab again if you don't see
18:05 - it under window you have animation and
18:08 - you'll also have animator tab the
18:11 - animator tab displays these animation
18:13 - clips so you see title animation is
18:15 - right here we can double click on this
18:17 - and you see here it has the loop time
18:19 - check which means it will loop the
18:21 - animation itself if this is not checked
18:23 - it would not loop that animation now
18:28 - what we need to do here is click on the
18:31 - title animation and you see here the
18:33 - speed of the animation is 1 which means
18:35 - 100 normal speed of animation I am gonna
18:38 - click point 5 which is gonna play that
18:41 - animation two times slower then its own
18:45 - actual speed so if I hit the play button
18:48 - now you see the Jungle Run animation
18:51 - plays a little bit slower so actually
18:55 - please have the speed it did before so
18:59 - in order to do that again you need to go
19:01 - in to the animator tab select the title
19:04 - animation if you select something else
19:06 - sometimes if you select something else
19:07 - it will not display anything here but
19:09 - make sure that you select the game
19:11 - object you want to edit and you will see
19:14 - all of its animations right here so I'm
19:17 - gonna click on title animation and in
19:18 - the inspector panel right here you have
19:20 - the speed property setting it at point
19:23 - five will make it go half the speed of
19:27 - its original speed so half of its
19:29 - original speed so again if I hit the Run
19:31 - button BAM this is what we have right
19:36 - here
19:37 - let us now animate the circle and in
19:40 - order to do that select the button BG
19:42 - again click here create and we're not
19:45 - gonna see that in the title animation
19:46 - we're gonna save it in the circle
19:49 - animation right here so I'm gonna name
19:52 - it circle animation like this and hit
19:57 - say
19:58 - and bam here we are now we are going to
20:01 - do a similar thing and that is we're
20:03 - gonna click on the recording button go
20:05 - on frame 30 and we're gonna edit here
20:09 - the Z rotation so the rotation here
20:11 - we're gonna set it at negative 360 and
20:14 - we're gonna go on frame 60 now so frame
20:18 - 6-0 and we're gonna set this at negative
20:23 - 720 so if I stop recording now and hit
20:28 - the play button you see our well circle
20:31 - is rotating and if I hit the play button
20:35 - again BAM you see the circle is rotating
20:39 - jungle run is also stretching and going
20:42 - wire is stretching and going wider and
20:44 - whatnot now in regards to the circle you
20:47 - see it's rotating then stopping the
20:48 - rotating and stopping this is because of
20:50 - the animation now we can fix this with
20:53 - some lines of code I didn't like this
20:56 - but you can create a script attach it
20:59 - and animate it or actually simply make
21:02 - it rotate with code I'm not going to
21:06 - show you how to do that you can search
21:07 - that on the internet but I'm just
21:09 - pointing out that air that there are
21:11 - multiple ways to solve a certain problem
21:14 - in well programming and that's why when
21:18 - people ask me why did you do it like
21:19 - this what did you do this like this why
21:21 - did you do that that was my own
21:23 - preference I thought that that was the
21:25 - best way to solve that in that
21:27 - particular moment which does not mean
21:29 - it's the best code to solve something
21:31 - you can always always always optimize
21:33 - your code you can always add some new
21:35 - things to make things work better son
21:38 - and so forth so if you see me do
21:40 - something that is my own logic I use
21:43 - animations here too well create these
21:47 - effects I did not use code even though
21:49 - all of this right here did you see the
21:51 - stretching of the title rotating of the
21:54 - circle all of this is doable through
21:57 - code but this is the more simpler way
22:00 - and that's why I am showing you how to
22:02 - do it like that so now let's go into our
22:06 - game play scene so what we need to do is
22:09 - first click on file and then you
22:11 - scene shortcut for that is command and
22:14 - on Mac ctrl + n on Windows
22:17 - so if I click new scenes gonna take me
22:19 - right here and I'm gonna hold command
22:21 - press s to save it so assets scenes this
22:24 - one is gonna be named game play the
22:27 - first thing that I wanna do is set up
22:29 - our game play scene yes again we're
22:32 - gonna set up things still we're not
22:34 - gonna code so I deal with it I don't
22:36 - care anyways I'm gonna right click here
22:38 - in the hierarchy panel go under UI and
22:42 - create an image this is gonna be our
22:43 - background it comes with a canvas
22:46 - right-of-way so I'm gonna rename it to
22:48 - UI canvas change it from screen space
22:52 - overlay to screen space camera and
22:55 - attach the main camera right here take
22:59 - the image and I'm gonna set it at 0 0 0
23:02 - but before or after I do that we are
23:05 - gonna set the UI scale mode to scale
23:07 - with screen size 480 by 800 and we are
23:12 - gonna match width and height equally now
23:16 - what we need to do is we need to add a
23:18 - background to our image and that is
23:22 - gonna be under backgrounds and buttons
23:24 - the sky image so let me take it right
23:27 - here rename it to background instead of
23:30 - image drag and drop the sky image right
23:33 - here where the sprite is and click on
23:35 - set native size now you see the image is
23:37 - not how we wanted it to be because of
23:40 - that I'm simply gonna set it at 480 by
23:43 - 800 for the width and the height and
23:45 - voila here is our image I'm also gonna
23:49 - change the color now we have this purple
23:51 - white color I don't want that so for the
23:54 - color in the image property we have the
23:57 - color hex color right here is gonna be
24:00 - at 7 6 F 9 so 7 6 F 9 f FF this is the
24:07 - color that we want so let me just go
24:10 - here in the game yeah this is exactly
24:12 - the color that we want to have now what
24:15 - we are gonna do is create another image
24:18 - by duplicating the background image is
24:22 - simply duplicated and these are going to
24:23 - be our back
24:25 - trees like this and for that we need to
24:28 - search well for our tree one image so
24:31 - I'm simply gonna put it right here
24:32 - instead of the sky now this is not how
24:34 - we want them to be so I'm gonna change
24:37 - the way to 560 and the height to 450 and
24:42 - the position I'm gonna say here for the
24:45 - Y negative 212 and voila
24:49 - these are our back ground background
24:53 - trees of course since we have duplicated
24:56 - this background we have changed the
24:57 - color so I'm gonna put the color back to
24:59 - white or the normal color so now they
25:01 - are green as any normal trees while our
25:06 - we are also gonna take other trees which
25:09 - are our front trees so and you just take
25:11 - them right here and place them well
25:13 - something like this now these are gonna
25:15 - be our front trees because they are in
25:18 - front of these trees and this one let me
25:22 - just name them front tree one I'm gonna
25:25 - set it here so let me say point five for
25:29 - the X point six for the Y that is the
25:31 - scale of it and notice please notice
25:33 - this is not a UI element so this is a
25:37 - simple game object I have simply dragged
25:40 - and dropped these trees right here in
25:43 - the scene folder or actually in the
25:45 - scene view so I did not create a UI
25:48 - element for them as you can see we have
25:51 - the background then we have the trees if
25:53 - I turn of the canvas we are left with
25:55 - the front trees so don't be confused
25:58 - they are not a UI element they are a
25:59 - simple game object now here I'm gonna
26:02 - set it at negative three point let's say
26:05 - three and for the Y I'm gonna say
26:08 - negative three point five so this is
26:11 - what I'm gonna place this tree and for
26:14 - our other trees I'm simply gonna
26:15 - duplicate these and this is gonna be our
26:17 - front tree let me duplicate it again so
26:20 - this is gonna be our front tree - now
26:23 - this one is gonna be position it at
26:26 - three so negative three or actually
26:29 - positive three and for the Y I'm gonna
26:32 - say three point nine so these are the
26:36 - trees that are gonna be in our game
26:38 - gives that depth effect for our game now
26:44 - the next thing that we need to do is we
26:45 - need to add our bounce and for that we
26:49 - have the bounce right here so they are
26:51 - and we just find them right here at
26:53 - shield side boundaries here they are so
26:56 - these are the bounds that we want to add
26:58 - in our game now we are gonna have we're
27:02 - gonna duplicate these but before we do
27:05 - that I'm gonna change their scale to be
27:08 - 0.76 on the X I'm not gonna touch
27:10 - anything on the Y and I'm gonna set 0 0
27:13 - 0 4 well the X and the y position so
27:16 - this is our level this right here that
27:19 - you see is our level what we need to do
27:22 - now is we need to add two box colliders
27:25 - to them why - well because I don't want
27:27 - to I'm not gonna slice these if I open
27:32 - these as you can see these are two
27:33 - separate boundaries so one is here and
27:36 - another is here I'm not gonna use the
27:38 - slice machine or the slice sprite editor
27:40 - right here to slice it like this so one
27:43 - is here and another is here I don't want
27:45 - to do that instead I'm gonna use them as
27:48 - they are but I need to add two box
27:51 - colliders on them because we don't want
27:54 - or we want to prevent collision from our
27:56 - player going outside of these so if I
27:58 - take the side boundaries we are gonna
28:00 - add one box Collider and we are gonna
28:03 - add another box Collider really really
28:06 - really important to know when you are
28:11 - working in a 2d projects you're working
28:13 - with a 2-d game when you filter for a
28:16 - box Collider so you have a box Collider
28:17 - here and you have a box Collider 2d box
28:20 - Collider is for 3d game objects so be
28:24 - very very careful about that
28:26 - box Collider 2d is for 2d so you need to
28:30 - be careful about it because if you add a
28:31 - box Collider this one the 3d one your
28:35 - code will not work because we are
28:37 - working with 2d so what we're gonna do
28:39 - with the first box Collider
28:41 - well offset is gonna be at 4 actually
28:44 - here offset it's gonna be four point
28:46 - twenty nine we're not gonna touch offset
28:49 - Y size X is gonna be one point
28:52 - six one and the size Y is gonna be 1024
28:57 - and if I take all of these game objects
29:00 - and deactivate and we will see what I'm
29:02 - talking about so I'm gonna take the
29:04 - other box Collider which is this one
29:06 - right here and for this one we are gonna
29:09 - say well the offset is gonna be at
29:11 - negative so this one's gonna be negative
29:13 - four point twenty nine offset Y we're
29:17 - not gonna touch it size is gonna be one
29:20 - point six one so one point six one we're
29:23 - not gonna touch well the other size for
29:25 - the Y as you can see here we have two
29:27 - Box colliders let me just take this
29:30 - right here and position it here so he
29:32 - can see it
29:33 - one box Collider is here and if I move
29:35 - it let me just move on of these okay I'm
29:37 - moving this one on the left side you see
29:39 - I'm moving it let me just remember or
29:41 - memorize the value so I'm moving it this
29:43 - is one of the Box cool as you see it the
29:45 - green thing right here this is for the
29:47 - left one and this one right here the
29:50 - other one this right here is for the
29:52 - well right one so we have two of these
29:55 - that are gonna represent boundaries on
29:57 - our to let's say call these pipes I'm
30:01 - gonna call them pipes and I don't care
30:02 - if they are if they are not actually
30:04 - pipes I'm gonna call them pipes don't
30:07 - you come with me okay technically there
30:09 - are not pipes there are this I don't
30:10 - care okay
30:11 - so we need three more of these so on and
30:15 - this one is gonna be positioned at 10
30:17 - for the y2 this was gonna be positioned
30:20 - at 24 do I and 3 and this one is gonna
30:24 - be positioned at 34 well on the Y so
30:29 - this is what we have these are the
30:30 - boundaries and since I am a control
30:33 - freak or organization freak I'm gonna
30:35 - right click here create an empty game
30:37 - object and I'm gonna name this one play
30:39 - your bounds like this position this at 0
30:43 - 0 0 now when I say position this empty
30:45 - game object at 0 0 0 that does not mean
30:49 - anything I just like them to be
30:50 - positioned like that I don't want this
30:52 - to be at 200 here and 351 no I want them
30:56 - at 0 0 0 select all four of our bounds
31:00 - so we have side boundaries 1 2 & 3
31:03 - drag and drop them under the player
31:05 - bombs which
31:06 - is our parent game object and voila this
31:10 - is what we have this is our official
31:12 - level and we are done with editing it
31:16 - the next thing that we need to do is
31:18 - actually make these bounds move you see
31:21 - we need to make them move like this in
31:22 - order to simulate an infinite background
31:25 - effect and we will start doing that from
31:28 - the next video so let's get into some
31:30 - coding inside of the project tab I'm
31:33 - gonna right click and create a new
31:35 - folder which I'm gonna call well you can
31:37 - assume scripts I mean duh and here I'm
31:41 - gonna right-click and create a new
31:43 - folder and this is gonna be our BG
31:45 - scripts because here we're gonna store
31:47 - the background scripts or actually the
31:50 - ones that are gonna move these pipes or
31:52 - these obstacles or bounds or however you
31:55 - want to call them so here I'm gonna
31:57 - right-click create here BG mover so BG
32:01 - mover like this and we need to attach it
32:05 - on all of our side boundaries so I'm
32:07 - gonna select all of them by well
32:09 - selecting one holding shift then
32:12 - selecting well all of these and right
32:15 - here under add component I am gonna
32:17 - filter for the BG mover and hit enter
32:20 - and this is well the way to add this
32:22 - script to all four of our bounce now I'm
32:27 - gonna double click the script and open
32:29 - it here in mono behavior actually
32:31 - monodevelop I'm gonna tag the class here
32:34 - at the bottom hold enter just to give a
32:36 - little bit of space as always which we
32:38 - are used for me to do so we need a
32:43 - couple of variables as always when we
32:45 - start a script the first one is gonna be
32:48 - a public float which is gonna be the
32:50 - move speed I'm gonna set it at 3 by
32:53 - default let's say 5 by default this is
32:56 - the default value I set it to be public
32:59 - which means it will be visible here in
33:02 - the inspector panel bad here it is so we
33:04 - have the BG mover script we have the
33:06 - move speed value right here default 1 is
33:09 - 5 as we just saw we also need to get a
33:13 - reference to private game object and
33:16 - there's gonna be an array and
33:18 - are gonna be our side bounce not sounds
33:21 - but side bounce what is this well we're
33:24 - gonna get all four of these boundaries
33:28 - from the scene because while we need to
33:30 - calculate where we need to reposition
33:34 - each bound so we will see that in a
33:37 - second we also need a private float so
33:40 - float there's gonna be our camera Y this
33:43 - is the Y position of the camera we also
33:45 - need a private float and this is gonna
33:48 - be our bound height this is the height
33:51 - of our bounce and this is all what we
33:55 - need for now inside of the awake
33:59 - function so I'm gonna change start to
34:02 - awake and I always always always get
34:06 - this question why did you change a week
34:08 - or start to wake why are you using a way
34:10 - you can not start you can use either
34:12 - awake or start but I talked about this
34:15 - all the time and all the time I get
34:18 - questions about this so we have awake
34:20 - we have void start like this and we have
34:23 - void on enable all three of these all
34:28 - three of these functions are used for
34:30 - initialization now the difference is in
34:33 - the order of execution the first
34:36 - function is gonna be called when you
34:38 - start the game is awake function the
34:41 - next one will be on enable and the third
34:43 - one will be start now usually you are
34:47 - gonna use awake and start and awake is
34:49 - called before start that's why I like to
34:52 - use awake it's my own preference you can
34:54 - use start as well and it will work the
34:57 - same way so inside of the awake we need
35:00 - to get the reference to all of these
35:02 - bounds but we need to get them using
35:05 - their tack and in order to do that we
35:07 - need to go back here in the scene editor
35:10 - or unity editor when you select any of
35:13 - these game objects you will see here in
35:15 - the inspector panel below the name of
35:17 - the game object you have these tags it's
35:19 - a drop-down list so you can click on the
35:21 - drop-down list and you can go here add
35:23 - tag so click on that and then here you
35:26 - can create your own custom tag by
35:29 - clicking on this plus button right
35:31 - so if I click on the custom plus button
35:34 - I can create my own tag which I'm gonna
35:36 - call side bounce like this or side bound
35:39 - however you want it and I'm gonna click
35:42 - Save
35:42 - so it's side bound they are put together
35:46 - this is one word no space between side
35:49 - and bound this is important because now
35:52 - we need to tag so select all of these
35:54 - side boundaries and from the tag now you
35:57 - can select that side bound that we have
36:00 - created as our own custom tag so here it
36:03 - is when you select it notice now every
36:05 - single one of eisah our side boundaries
36:08 - will have that side bound tag so at all
36:12 - four of them now why did I say this is
36:14 - important so it's important because now
36:16 - we can go here in our awake and we can
36:19 - say side bounds is equal to game object
36:22 - find game objects so here we have plural
36:27 - not singular so s it's object with s we
36:32 - can remove that and we can only find one
36:34 - game object with the tag but since we
36:37 - need an array meaning all game objects
36:40 - in the scene which carry the tag that we
36:43 - specify right here so the tag is side
36:47 - bound now what is important here this
36:50 - side bound this tag name right here
36:53 - needs to be exactly as the name a right
36:56 - here so we see its side bound no space
37:00 - between side and bound if we do
37:01 - something like this here type space
37:03 - between them we will not find those game
37:05 - objects and we will have a problem so
37:07 - it's me it needs to be the same same
37:10 - signature same capitalization everything
37:13 - needs to be the same we also are going
37:17 - to get the camera why so camera why is
37:20 - going to be equal to camera that main
37:23 - that transformer actually die game
37:26 - object that transform that position that
37:28 - Y so this is gonna give us the Y
37:32 - position of the camera and what we also
37:36 - need to calculate is the bound height
37:38 - which we calculate by using the box
37:42 - Collider so we need to get the box
37:45 - now notice both box colliders have the
37:48 - same size on the y-axis so it does not
37:52 - matter which box Collider we get so
37:54 - simply here we need to type get
37:56 - component box Collider 2d and we need to
37:59 - say bounce that size that why this is
38:04 - gonna give us the height so how high how
38:07 - large when I say how high don't think
38:09 - about smoking weed or something like
38:11 - that it's the height so how high is the
38:16 - bound game object this is important
38:19 - because well we need to recalculate its
38:22 - position before we do that so before we
38:24 - recalculate the position we are gonna
38:27 - move it so we're gonna see here void
38:29 - move this is a function that we have
38:31 - just created which you're gonna call in
38:33 - the update right here to move our game
38:36 - objects our bounce and we're gonna do it
38:39 - simply by using vector three temporary
38:42 - variable is equal to transform that
38:44 - position so the current position of the
38:46 - game object temp that Y is gonna be
38:50 - minus equal to move speed multiplied by
38:54 - time dot delta time and below we simply
38:59 - to say transform position is equal to u
39:01 - temp what are we doing here because some
39:05 - students do not understand this if I
39:07 - take my highlight tool we have created a
39:11 - temporary variable so this is a variable
39:14 - temp to temporary store the value so to
39:17 - store the current value of our own
39:20 - positions of POS so our current position
39:24 - is stored in the temporary variable so
39:27 - now we are using the vy y value of the
39:31 - temporary variable subtracting from it
39:33 - the move speed so move speed speed like
39:38 - this multiplied with the time delta time
39:42 - now timed out delta time is a very small
39:44 - number between each frame so if we have
39:46 - 60 frames in a second that is a very
39:48 - very small number and it's used in
39:50 - calculations like this and simply then
39:54 - we use our current position so POS and
39:57 - we assign it
39:59 - new position which is our temp that's
40:02 - the new position
40:03 - so simply reassigning it back so
40:05 - currently here here we are storing it so
40:09 - this is our current position we have
40:11 - edited our current position and we
40:14 - reassignment back so that we have a new
40:17 - value of the position so think of it
40:21 - like this I have ten dollars and I give
40:24 - you that ten dollars so I give it to you
40:25 - and I tell you okay these are my ten
40:29 - dollars stored them for me so temporary
40:31 - hold them for me but also go and buy me
40:35 - some gums and that gum cost one dollar
40:36 - for example so one dollar is the gum so
40:40 - now from ten you have nine so that means
40:42 - you have nine now you bought me the gun
40:44 - and I tell you okay give me back my
40:46 - money so now you give me back the
40:48 - current value or the edited value which
40:51 - is now nine and not 10 anymore so it's
40:54 - not ten now it's nine so we are done
40:59 - with the movement so here we have well
41:02 - calculated a new position we are calling
41:04 - that in the update function we can go
41:06 - back here and we can well simply hit
41:09 - that play button to see that they are
41:12 - actually moving down you see they are
41:14 - moving down and eventually they will ran
41:16 - out and bam this is the trouble that we
41:19 - have or the problem well that we have
41:22 - now it's not that bad idea since we have
41:26 - these box colliders on these game
41:29 - objects we can select all of these we
41:32 - can add a rigidbody 2d because if I just
41:36 - move it up let me just move the
41:38 - component up and why did I add a
41:41 - rigidbody to all of these game objects
41:43 - well the reason for it is because we
41:46 - have box colliders on them and when you
41:48 - want to move game objects with colliders
41:50 - it is a good idea to add a rigidbody on
41:53 - them but before I proceed I will show
41:55 - you one problem that we have so our game
41:57 - objects are simply gonna fall down you
41:59 - see they just fell down now you might
42:01 - think this is okay because we have the
42:03 - script but if I deactivate the script
42:05 - that is moving them even if I remove it
42:08 - they're gonna fall down you see they're
42:09 - falling down the reason for it is
42:11 - because the rigidbody is
42:13 - applying gravity to our game objects so
42:17 - what we need to do is we need to go here
42:18 - and set them to be kinematic so here
42:21 - from the drop-down list body type is not
42:23 - dynamic anymore its kinematic so I'm
42:26 - gonna put them here as kinematic and if
42:29 - I hit the play button so now they are
42:32 - going down but because of the script if
42:34 - I deactivate the scripts of BG mover is
42:36 - deactivated they are not moving down as
42:40 - you can see they are not affected by
42:41 - gravity anymore so they are not affected
42:44 - by gravity if I change that dynamic BAM
42:47 - they are falling down and this is what I
42:50 - mean so let me turn it back the script
42:52 - on again and put the body to kinematic
42:56 - all four of these bodies so it's a good
42:58 - idea when you have a Collider on a game
43:00 - object and you're moving it that you
43:02 - that you actually put a rigidbody on it
43:06 - if you don't want gravity then simply
43:08 - put it to be kinematic but leave the
43:09 - rigidbody on that game object so what is
43:13 - the problem that we have now well the
43:14 - problem is that we are moving these
43:16 - backgrounds and eventually they are
43:17 - gonna well go away and we are not gonna
43:20 - have them anymore so BAM as you can see
43:23 - right here now also one thing that we
43:26 - are gonna do in regards to our side
43:28 - bounds is that we are gonna take these
43:31 - trees and let me just take them position
43:34 - negative two because I want these trees
43:37 - to be in front of our well obstacles
43:41 - here or side bounce you see the trees
43:43 - are now in front if I put them back at Z
43:45 - so Z position isn't negative two if I
43:47 - put it back at zero you see in the front
43:50 - line we see I'm not sure if you're
43:52 - actually seeing this I'm gonna zoom it
43:53 - back so here notice all of the trees are
43:57 - behind these bounds if I put the front
44:01 - trees at negative two for the Z they're
44:04 - now in front of the boundaries because I
44:07 - wanna create that depth effect so now
44:10 - I'm moving back to our script what we
44:12 - need to do is we need to reposition them
44:14 - so here I'm gonna say void reposition
44:18 - and we need to call this function right
44:20 - below the move function so right below
44:22 - it here call reposition
44:25 - in a side of the reposition we are going
44:28 - to test if our bounds are below the
44:31 - cameras Y position so here we're gonna
44:34 - test if the transform position which is
44:36 - the current position of our bounce that
44:39 - Y is actually less than the camera Y and
44:45 - for the camera Y we also are gonna do
44:48 - the following here so we got the camera
44:50 - Y I'm also gonna subtract 15 so I'm
44:53 - gonna see here minus 15 just so that I
44:56 - can give a little bit of space before we
44:59 - actually reposition the background so if
45:02 - our current position Y is less than the
45:05 - cameras Y position of course we have
45:07 - subtracted 15 from it right here so if
45:11 - our position is less we need to
45:13 - reposition our background how we're
45:16 - gonna do that
45:17 - what we need to calculate the highest Y
45:20 - of the backgrounds Y the highest well
45:23 - notice here in the scene you see the
45:27 - first bounce this one that are here you
45:29 - see I'm deactivating and these first are
45:31 - at position zero for the Y the next one
45:34 - are at 10 the third one are at 20 and
45:37 - the fourth one are at 30 so what we need
45:40 - to do when this side bound right here so
45:44 - when it goes like this and goes below
45:46 - the camera somewhere around here we need
45:48 - to reposition it back in front right
45:52 - here so that it can again go down like
45:54 - this and then be positioned back and
45:56 - again and again so this effect is what
45:59 - we are gonna achieve so let me position
46:02 - this at 0 0 for X and the y to put it
46:05 - back where it was
46:06 - and in order to do that we're gonna say
46:09 - here float highest bounce Y so this is
46:13 - the highest bounce y is gonna be equal
46:15 - to side bounce element that's it index 0
46:19 - that transform that position that Y how
46:22 - can I be sure that the first element in
46:25 - this array is the one that has the
46:28 - highest Y position well I'm not because
46:32 - when we use this game objects or game
46:36 - object find game objects with
46:38 - it's gonna get all of these game objects
46:40 - that have this tag and put it in this
46:43 - array now the order by which this
46:47 - function gets these game objects is
46:48 - always different it does not get them
46:50 - like this so side bounds will be element
46:53 - 0 side boundaries one will be element
46:55 - one side boundaries two will be element
46:58 - two you know it can be that side
46:59 - boundaries two is element zero or at
47:02 - element zero index zero that is side
47:06 - boundaries three can be an element or
47:08 - index one side boundaries can be at
47:11 - index two and side by boundaries one can
47:15 - be at index 3 now my point is that it
47:20 - will not get them in this order so that
47:22 - the last or first element will always be
47:25 - the one with the highest Y position
47:27 - instead we need to compare the value so
47:29 - here are gonna say if or actually we are
47:32 - gonna say for INT i which is equal to 1
47:34 - y1 well because here we used 0 0 index
47:39 - we don't need to test element that's an
47:41 - index 0 instead we are going to test
47:43 - other elements so for y or int i that's
47:47 - equal to 1 I is less than side bounds
47:51 - that length I plus plus so we're gonna
47:53 - filter through the array and we're gonna
47:56 - test if the highest bounce Y which we
48:00 - assigned to be equal to Y well this
48:02 - right here if it's less than side bounce
48:07 - element that's an index Y dot transform
48:09 - that position that Y that means that
48:13 - this element here at index I in the
48:16 - array has the higher value for the y
48:21 - axis which means that we're gonna say
48:23 - our highest bounds Y is equal to this
48:28 - right here like this so what we are
48:31 - doing here let me just go here and well
48:34 - demonstrate this with a highlight tool
48:36 - let's imagine that element at index 0
48:39 - has a value of let's say 5 for Y so
48:43 - here's Y is equal to 5 we assign that to
48:47 - the highest bounce now that does not
48:50 - guarantee the
48:52 - this right here the element that said
48:54 - index zero actually has the highest
48:57 - value for his y-axis that's the reason
49:01 - why we are testing so we are looping
49:03 - through the array here and testing if
49:06 - the current value of our highest bounds
49:10 - Y is less than Y axis or Y value from
49:16 - the element that's it index Y if that is
49:18 - true so let's say this I currently has
49:21 - value one that's element at index one
49:24 - and that element and index one has a
49:27 - y-value of seven so the Y value here is
49:32 - seven which means this value here the
49:34 - first one is actually less than seven so
49:37 - we're testing if it's less and that is
49:39 - true that means we need to reassign this
49:41 - seven to this value because it is the
49:44 - higher value so this is what we are
49:47 - doing here so now that we have the
49:50 - highest Y value for our bounds what we
49:55 - need to do is simply we need to say here
49:57 - vector three temporary position is equal
49:59 - to the transform that position and we
50:02 - need to say the Y value of our current
50:05 - bound is going to be equal to highest
50:08 - bounce so highest bounce y plus the
50:12 - bound height and that is that and here
50:17 - we simply need to say transform that
50:18 - position is equal to temp Y the bound
50:21 - height well if I go here let's say the
50:26 - highest value is 30 and we want to
50:29 - reposition this one so we want to
50:31 - reposition this one here now if I say
50:35 - that the highest Y value is 30 and I
50:38 - want to position it above the one and if
50:41 - I put it here at 30 notice it's at the
50:43 - same spot so it's exactly here you see
50:46 - we have this one it's right below it let
50:48 - me just go here come on reposition back
50:51 - so it's at 30 so it's at the same you
50:55 - see they are at the same position here
50:58 - we don't want it we want this one to be
51:00 - above that one right here and we know
51:03 - that all four of the
51:05 - bounds have the same height so we can
51:09 - use that so we can say okay I want this
51:11 - to be at position 30 but also I want to
51:15 - add to it its height and its height is
51:18 - equal to 10 so that means plus 10 that
51:20 - mean is 40 which means BAM it will
51:22 - position you see it will position it
51:24 - above the down ones of the previous one
51:28 - actually it will reposition it back so
51:31 - we have it right here so we have
51:33 - calculated we're calling this let me
51:35 - just save the script it's really
51:36 - important what did I do here okay so I
51:40 - just duplicated this code so sorry for
51:42 - that anyways it's really important that
51:44 - you save your scripts every time you
51:46 - type some coming out command s or ctrl s
51:48 - on Windows to save the changes in your
51:51 - script so we are calling these functions
51:53 - here and let's see that magic happens so
51:56 - if I go here hit the play button in the
51:58 - scene notice now when this one you see
52:01 - its repositioning about did you see that
52:03 - it is repositioning back these
52:06 - backgrounds and notice here how we have
52:09 - that in our game so this is how we have
52:11 - it in our game you see that little gap
52:13 - that we had yeah we have this gap right
52:15 - here so we can fix that gap by doing
52:17 - something like this so we can say bound
52:19 - height let's say minus one just to well
52:22 - subtract one from our bound height so
52:24 - that we can actually fill out that gap
52:28 - so if I go back here let's see if we
52:30 - have that gap again between these no so
52:35 - yeah this is the effect that we want we
52:37 - don't have the gap between our bounds
52:40 - that we had well a moment ago just by
52:43 - subtracting one to fill out that gap and
52:46 - notice they are repositioning this whole
52:48 - time it's calculating where is the
52:51 - highest y-value all the time and it is
52:54 - putting these back up and up and up and
52:57 - up so we have this infinite background
53:00 - effect and if you take a look at here
53:01 - you have an assumption so you have a
53:04 - feeling like the camera is moving but
53:06 - actually no the bounds are moving down
53:08 - and you think the camera is moving
53:10 - upwards so this is some new features
53:13 - that we have learned so far because most
53:16 - of the time in infinite runner games
53:18 - that
53:18 - did or tutorials that I did for infinite
53:21 - runner effect games I move the camera
53:23 - but now I'm moving the game objects
53:26 - themselves so you see what I was talking
53:28 - about you see this one it's gonna be
53:30 - repositioned on the top BAM it's on the
53:33 - top and again and again they are
53:35 - stacking upon one another so this is
53:39 - what we are doing here calculating the
53:41 - highest Y and repositioning it back
53:43 - using the highest Y plus the bound
53:47 - height minus 1 to fill out that gap and
53:51 - now that we have our obstacles moving
53:55 - let us add our player in the game now
53:57 - before we do that inside of this assets
53:59 - folder we have the player enemies and
54:02 - obstacles and backgrounds and boxes we
54:04 - can create a new folder here so I'm
54:06 - gonna name this one two sprites and
54:09 - select player enemies and obstacles
54:11 - backgrounds and buttons and put all of
54:13 - this inside of that sprites folder just
54:16 - so that we group our sprites right here
54:19 - in one place so if we go here inside of
54:22 - our player folder first sprites then
54:24 - player we have these player animations
54:26 - here so we have the run animation
54:28 - jumping animation and fall down which is
54:30 - his dead animation what we need to do is
54:34 - create a new animation for the player
54:36 - before that in the animations folder I'm
54:39 - gonna right click and create a new
54:41 - folder
54:42 - this is gonna be player animations and
54:45 - here is where we are gonna put the
54:47 - player animations so sprites player
54:50 - select the run animation this one right
54:52 - here and well drag and drop all four of
54:56 - these so one two three four and drag and
54:58 - drop them right here in the scene view
55:01 - and now when we do that BAM this pop-up
55:04 - window pops up asking us to create an
55:06 - animation because we added four or
55:08 - selected four images and we're gonna
55:12 - select animations folder player
55:14 - animation and here I'm gonna call this
55:16 - one run all right and hit enter to save
55:19 - this gonna be our run write animation
55:22 - for the player why run right well we'll
55:25 - see that in a second first I'm gonna
55:26 - rename this game object to player he is
55:29 - too big for our game as we see
55:31 - right here so we need to well resize him
55:33 - select the player scale on the axis
55:36 - point you on the Y point you on the Z
55:39 - point to here I'm gonna say 2 for the x
55:43 - axis and negative 1 on the y axis this
55:46 - is where we are gonna put our players so
55:48 - this right here and let me also take the
55:50 - player and change his Z position let's
55:54 - say Z is gonna be a negative 4 just so
55:56 - that our player is visible on top of the
55:59 - obstacle if I hit the run but now notice
56:02 - what we have our player is running on
56:04 - the obstacle before we proceed with the
56:09 - animations because we need to well
56:10 - prepare these animations for our player
56:12 - we are gonna click here under add
56:14 - component filter for box Collider 2d and
56:18 - voila
56:19 - here is our player so we have the Box
56:21 - Collider here and I'm gonna resize it
56:24 - because as you can see you see this
56:26 - right here this is not how we want it so
56:28 - I'm gonna set the size on the X at two
56:31 - point ninety eight size on the Y let's
56:34 - say five point nine and off set it on
56:39 - the x axis by one point thirty-four so
56:43 - this is what we have for our box
56:44 - Collider voila let me just put the
56:47 - player back here and to you for the X
56:49 - and we need to add a rigidbody as I
56:52 - already said for our player because we
56:55 - will be moving him and he has a box
56:56 - Collider and filter for rigidbody 2d we
57:00 - need to make it to be kinematic because
57:02 - if we leave it like this now BAM you see
57:05 - the player fell down which is not what
57:07 - we want so select the body type here
57:11 - drop down list and click on kinematic
57:13 - and we are done or good to go going back
57:18 - into the assets folder in the project
57:19 - right-click create a new folder for
57:23 - prefabs and inside of the prefabs folder
57:26 - go right here right click create folder
57:30 - player prefabs not play fraps prefabs
57:35 - like this and voila
57:37 - here we are drag and drop the player
57:39 - here because it's a good idea to create
57:42 - prefabs out of game objects that you
57:44 - because a prefab is a reusable game
57:46 - object if I drag and drop the player
57:48 - right here here we have another player
57:50 - and all of the features or all of the
57:52 - settings that we had for this player now
57:55 - this prefab also has and when we change
57:58 - something on our player this one right
58:00 - here we can hit apply at the top right
58:03 - corner so that that change also will
58:06 - apply to the prefab before we proceed
58:08 - with some scripting we need to go here
58:11 - in animation select the player himself
58:13 - and create a new animation we know that
58:17 - when we want to create a new animation
58:18 - if I select the tree we have this create
58:20 - button and I click create and then we
58:22 - can select where we want to save that
58:24 - animation blah blah blah but when we
58:26 - select the player now we don't have that
58:28 - the reason for it is because the player
58:30 - has his animations
58:33 - he has his controller an animator
58:35 - component attached on him so in order to
58:38 - create a new animation right below the
58:40 - red recording button we have this
58:43 - drop-down list and we can click on it
58:45 - and we can click here create new clip
58:48 - this is gonna be our jump animation now
58:51 - since we are on the right side right
58:53 - here we are gonna jump from right to
58:57 - left so here I'm gonna create a new clip
59:00 - and I'm gonna call this one jump left
59:02 - animation and save it as sets animations
59:07 - player animations and click Save what we
59:11 - need to do is put this animator tab
59:14 - right here go into the sprites player
59:18 - folder and we have these jump cycles so
59:21 - we have four of them drag and drop them
59:23 - and put him right here and here they are
59:26 - let me just zoom in a little bit
59:29 - zoom in a little bit more and voila here
59:31 - they are now I don't want them to be
59:34 - right here right next to each other
59:35 - because like that notice here this is
59:38 - the animation now that we have this is
59:40 - our jump left you see the player is like
59:41 - crazy and we do not want that so we are
59:45 - gonna take these keyframes so take these
59:47 - three keyframes and move them like this
59:49 - and let's go on key on frame 15 so let
59:53 - me just move these keyframes a little
59:55 - bit more
59:56 - frame 15 this one right here drag these
60:00 - two or the first two keyframes so these
60:03 - two drag them on frame 15 we're also
60:06 - gonna go on frame 30 and you see where
60:08 - this is going so here we have frame 30
60:11 - this one right here let me just take two
60:14 - keyframes and put this on frame 30 and
60:18 - frame
60:19 - well 45 put these two keyframes actually
60:24 - we can move these a little bit something
60:26 - like this so that I can put this on key
60:30 - frame or these key frames something like
60:32 - this so first two key frames you see
60:34 - they're gonna be on frame 15 next you on
60:37 - Kate on frame 30 then frame 45 so these
60:42 - do you need to be on frame 45 and these
60:45 - two are on frame 60 because our
60:48 - animation looks a little bit better now
60:50 - you see here our animation looks a
60:52 - little bit better don't worry about the
60:55 - animation being slow we will speed it up
60:57 - in the animator panel so we will speed
61:00 - it up so don't worry about that but the
61:02 - important thing is that we have created
61:04 - that animation now as you can see our
61:07 - animation is not that good you see the
61:11 - player is very small when we stop the
61:13 - animation this is the players normal
61:15 - size and whatnot so in order for us to
61:19 - begin the scripting we need to fix these
61:22 - animations because we are not gonna use
61:24 - some code that's gonna put our player
61:26 - from this position to this position
61:28 - instead we're gonna use all animations
61:32 - so we will animate the player running on
61:34 - the right side then animate the player
61:36 - running on the left side and animating
61:39 - the player jumping from left to right
61:41 - and vice versa from right to left so
61:45 - what we also need to do is go in the run
61:47 - animation run right I called it run
61:50 - right for a reason because we need to
61:53 - hit the preview or actually the
61:55 - recording key we need to hit it change
61:58 - the X like this change it to any value
62:01 - so X position change it to any value and
62:03 - now put it on to you and go on the last
62:07 - frame this one right here and again put
62:09 - it on
62:10 - you are actually changing just so the
62:11 - tween record when I say change we need
62:13 - to record so that we record this
62:14 - keyframe so we need to have these
62:16 - keyframes as you can see now we have our
62:19 - player sprite position but put it again
62:22 - at - why - because this is the players
62:25 - running a right animation as you can see
62:29 - right here so we have him running on the
62:32 - right side because we are also gonna
62:34 - have him running on the left side and in
62:38 - order to have him running on the left
62:40 - side we need to select the player go in
62:43 - the animator select the run right and
62:47 - duplicate it not jump left duplicate the
62:50 - run right animation so here it is and
62:53 - now take the run right enemy should
62:56 - rename it from run right zero to run
62:59 - left and hit enter and bam save this
63:03 - select the player again going to the
63:05 - animation tab and now we have so we
63:08 - should actually have another animation
63:11 - no we don't so we need to improvise and
63:14 - go back here delete this one and create
63:17 - a new animation I thought this is gonna
63:18 - work so create a new animation clip and
63:21 - this is gonna be our run right because
63:24 - or actually run left so run left and
63:28 - again we need to drag and drop our
63:29 - animation so go here we have running
63:32 - animations these here and let me just go
63:35 - here and see where they are let me
63:38 - compare them with the running right so
63:42 - yeah they go from well zero up to three
63:46 - frames so this is okay and this one
63:49 - right here run left does the same exact
63:52 - thing so does the same the same exact
63:54 - thing but what we need to do is the
63:57 - following
63:58 - hit the recording button so hit the
64:00 - recording because now we need to well
64:02 - run on the left side which means that
64:04 - our player needs to be on negative - you
64:07 - see right here and also negative zero
64:10 - points you on his scale and we need to
64:14 - go here on the last frame and just
64:17 - change the position just so notice here
64:19 - notice we don't have keyframes right
64:21 - here but if I
64:22 - change the position BAM you see we have
64:24 - keyframes right away so put it at
64:27 - negative two and also change the scale
64:29 - just a little bit just so that we get
64:31 - the keyframes and we are gonna set it at
64:34 - point two why is that well now we have
64:39 - the animation running the player from
64:41 - well on the right side and also we have
64:43 - the player running on the left side if I
64:46 - hear the play button you see this is
64:48 - what we have a right here now don't
64:52 - worry about the animation being that
64:54 - fast we can always always well turn it
64:57 - down a little bit so if I go here inside
65:00 - of that animation this one has 60 if I
65:02 - set it to 12 and if I hit the play
65:05 - button so yeah simply change the frames
65:08 - you have here samples you see samples
65:10 - are set on 60 between 60 frames in a
65:12 - second and the player is running like
65:13 - crazy see like a Rotorua but we don't
65:17 - want that set the samples on 12 because
65:21 - for the run right samples are also on 12
65:24 - so the player runs like this let me just
65:27 - go back to run left it's the same exact
65:30 - thing now in regards to the jump left
65:35 - animation what we need to do so we need
65:38 - to animate our player jumping well from
65:42 - right to left before we actually animate
65:45 - our player jumping from right to left
65:48 - let us select the first three keyframes
65:51 - and put it back like this so the first
65:53 - one will be at zero the second two will
65:56 - be at 15 and the second three or the
65:58 - third two keyframes will be at frame 30
66:01 - the last key frames can be on frame
66:04 - while 60 or the last frame right here
66:07 - because this will make that animation
66:09 - look a little bit better now what we
66:11 - need to do is go on frame 30 and when
66:13 - our player jumps we are gonna hit here
66:15 - the record button set the position Y at
66:20 - 0 and set the position X at 0 so that
66:23 - our player gets here and go on the last
66:26 - frame set the Y position at negative 1
66:29 - and the exposition
66:31 - at negative 2 because now you see this
66:35 - is that animation of our player jumping
66:38 - now our player is very small you see
66:40 - here when he jumps he gets very small we
66:42 - don't want that so going here on frame 0
66:46 - hit the recording button set the skill
66:49 - at point 35 for the X and point 35 for
66:53 - the Y so Y and X are gonna be 0.35 do
66:56 - the same thing here for our well for the
67:00 - last frame let me just put it like this
67:02 - and like this so now I'm gonna set it
67:05 - 35:35 so simply change number at the
67:08 - last frame so that you get the keyframes
67:11 - and put them back so the skill is 0.35
67:14 - skills EADS not important only x and y
67:18 - so notice now when we jump this is what
67:20 - we have here so player is jumping don't
67:23 - worry about the animation being a little
67:24 - bit slow we will fix that later on in
67:27 - our code we can go here in the animator
67:30 - and we have well jump left let me just
67:33 - see where my animations are so we have
67:35 - run right a run left here it is let me
67:38 - just resize the window so that we can
67:40 - see more clearly run right and run left
67:43 - and we have jump left and we will have
67:45 - jump right so if I take it here and put
67:48 - it a 2.5 speed it will run two times two
67:51 - and a half times faster you see as its
67:54 - original speed but we can see that in
67:56 - our game now this right here is a set up
68:00 - for our player animation because this
68:04 - way it is much easier we can simply use
68:06 - the jump left animation the player
68:07 - jumped from right to left and then from
68:10 - here we can continue to play run left
68:13 - animation which is this one right here
68:15 - and when the player jumps from right to
68:18 - left we can continue to play the run
68:22 - right animation which is this one right
68:24 - here this is much more easy or easier
68:27 - than if we had to do all of this from
68:31 - our code now to get this or to paint a
68:36 - clear picture to see how easy this is
68:38 - actually we need to start coding but we
68:42 - are gonna do that from the next video
68:43 - and fire
68:45 - from awesome toots dot-com if you missed
68:48 - something in regards to these animations
68:50 - you can rewind the video to see how I
68:53 - animated everything or download the
68:56 - complete project link is in the
68:57 - description below to see how I set
68:59 - things to be animated and now that we
69:02 - have our player animations
69:04 - let us program the player while players
69:07 - movement and jumping so if we go here in
69:09 - the scripts folder right click create a
69:11 - new folder layer scripts inside of this
69:16 - folder right click and create a new C
69:19 - sharp script let's call it player play a
69:21 - planar and attach it on the player right
69:24 - here hit apply so that this change
69:27 - applies to the prefab what we need for
69:32 - our player what we need to animate the
69:35 - player we also need to be able to click
69:37 - on the screen and make the player jump
69:40 - so before we continue to program we need
69:42 - to add a UI button right here in the
69:45 - middle so if we take our canvas right
69:48 - click and go under UI and create a
69:50 - button BAM here it is this is our button
69:53 - now we need to resize it so resize the
69:56 - button to be right here to fit the whole
69:58 - middle or one half of the screen so this
70:02 - button needs to be on one half of the
70:04 - screen so that when we run our game we
70:06 - have a button right here that we can
70:08 - click on now this is very ugly we don't
70:12 - want it to look like this so first
70:14 - things first remove the text from the
70:16 - button we're also gonna rename this one
70:19 - to jump BTN so Jumby T and this is the
70:22 - name of the button and inside of the
70:25 - inspector panel of the button here we
70:27 - have the color we're gonna click on it
70:30 - which is gonna open this pop-up window
70:32 - and we are gonna set the Alpha to zero
70:34 - you see which is gonna make the button
70:36 - transparent it is still clickable but
70:40 - it's not visible so now we need to go
70:43 - here before we start typing anything we
70:46 - need to type using Unity engine UI
70:48 - because the button is under this UI if
70:52 - we don't type it out we will not be able
70:54 - to get the button and we need to get it
70:56 - in order for us to program it for it to
70:59 - do something so what we need is a
71:02 - private animator which I'm gonna call an
71:04 - M we also need a private boolean on left
71:08 - on right and a private boolean a private
71:12 - bull jumped jumped like this inside of
71:19 - the awake function we are gonna well
71:21 - initialize these variables so in the
71:24 - awake here
71:25 - we are gonna say an M is equal to get
71:27 - component to get the animator component
71:29 - that is attached on the player and we
71:32 - also need to get a reference to our
71:34 - button but before that I'm gonna see
71:36 - here on write is equal to true on left
71:40 - is equal to false this is to initialize
71:43 - on left and on right
71:45 - these on left and on right are gonna
71:48 - determine the side on which we are so
71:53 - it's going to determine if we are
71:54 - currently on the right side or on the
71:58 - left side and this is for the jump
72:01 - animation so we will deal with this in a
72:04 - moment don't worry about that what we
72:07 - need to do is create here a function so
72:09 - public void jump and this is the
72:13 - function that's gonna allow us to jump
72:15 - and we need to add it to the button by
72:18 - typing here game object find the game
72:21 - object with the name jump BT and like
72:24 - this so if I go here in our unity editor
72:28 - we see that we named our jump button
72:31 - jump BTN so that's the same thing we
72:34 - need to type right here now pay close
72:36 - attention this name right here that you
72:38 - put so jump BT and this run right here
72:41 - needs to match up with this right here
72:44 - if you make a mistake this will not work
72:46 - but we need the button and we are gonna
72:48 - get it as a component so get component
72:51 - button like this dot on click dock add
72:56 - listener and this listener takes a
72:59 - function name so the function name is
73:01 - jump which means that now we added jump
73:04 - to the button which is the function and
73:07 - it'll be executed when we click on the
73:10 - button just so that I can well
73:13 - confirm my claims I'm gonna see here
73:15 - printed something like this it's not
73:17 - important but important is that we see
73:19 - that when we click on the button this
73:21 - jump function right here will be called
73:23 - in the console we're gonna see all of
73:26 - that let me just go here and clear it if
73:28 - I hit the play button
73:29 - if I click somewhere here Bam Bam Bam
73:31 - Bam Bam you see here printed is being
73:34 - printed in the console which means that
73:37 - actually this worked so now our public
73:40 - voice jump is the function that's gonna
73:42 - be executed when we well hit the button
73:47 - so what you're gonna do in this jump
73:49 - function well first we are gonna see
73:52 - here if on right so if we are on the
73:55 - right side when we press the jump button
73:58 - we're gonna call our atom to play the
74:02 - jump left animation like this else if we
74:07 - are not on the right side which means we
74:11 - are on the left side we're gonna call
74:12 - our atom to play jump right and below
74:16 - here we're gonna inform that we have
74:18 - jumped so jumped is now equal to true
74:22 - while we're doing all of that well the
74:25 - reason for it is because in the update
74:28 - function right here you're gonna test if
74:30 - we did not jump so if we currently did
74:33 - not jump that means we are moving either
74:36 - on the left side or on the right side so
74:39 - we're gonna test
74:39 - are we moving on the right see if on
74:43 - right meaning we are moving on the right
74:46 - side we're gonna call our atom to play
74:49 - run a write animation else our atom is
74:55 - gonna play the run left animation like
74:59 - this so as simple as that but we are
75:02 - still not done because we need to go
75:04 - here in our unity select the player here
75:08 - so select the player and go here we have
75:11 - jump left we need to duplicate it and
75:14 - now we need to rename it to jump right
75:17 - so now we need to rename it as I said to
75:20 - jump right but what we also need to do
75:24 - is we need to set here the speed
75:26 - be- y- well because when we use jump
75:30 - left it will jump from the right to the
75:33 - left side but now we have duplicated
75:35 - that same animation which means that if
75:38 - we call jump right it will again make
75:41 - the player jump from the right to the
75:43 - left but we need need him to you well
75:46 - jump from left to right that's why we
75:48 - are going to use the negative we will
75:50 - see this in a second now before we
75:53 - continue actually do anything we do need
75:56 - to well we do need to we need to add one
76:00 - more feature to our animations so in the
76:02 - animation panel right here we have our
76:04 - player and here we have his jump left
76:07 - and jump right animation let me just go
76:10 - here inside of our assets then inside of
76:14 - our animations right here player
76:16 - animations here it is we have jump left
76:18 - run left and run right I'm need to
76:20 - duplicate this jump left and call it
76:23 - jump right because we need to be able to
76:26 - see this animation right here so we need
76:29 - to be able to see this animation right
76:31 - here we currently don't see it because
76:33 - we have here jump left which uses jump
76:36 - left motion which is the animation so
76:39 - it's the animation itself jump right
76:41 - uses that same motion we need to select
76:44 - jump right and select here jump right
76:48 - you see this one right here the one that
76:49 - we have just duplicated it's the same
76:51 - animation but we will play it backwards
76:54 - now as I said the reason why we need to
76:57 - do this is because we need to be able to
76:59 - see this animation you see we need to be
77:01 - able to see it right here because we
77:04 - have the player jump left which is this
77:06 - one right here and let me just go here
77:08 - we have jump right actually yeah here it
77:12 - is
77:12 - sprite just take a look at it so this is
77:16 - jump right actually it needs to be
77:18 - duplicated yeah it will be when we well
77:21 - go into code so don't worry about that
77:23 - what we need to do here is take the jump
77:25 - left and go here on the last frame click
77:29 - on this keyframe you see this right here
77:31 - this is while a motion or an event
77:34 - function event that we are adding at the
77:37 - last frame
77:38 - and that is gonna be a function that we
77:41 - need you will create inside of our
77:43 - script so right here below our public
77:45 - void jump you're gonna have void on left
77:48 - and we're gonna have void on right so I
77:53 - left and on right in on left we're gonna
77:56 - see on left is equal to true on right is
78:00 - equal to false and jumped is equal to u
78:04 - true or actually false again copy all of
78:08 - this here in on right we're gonna do
78:10 - well the opposite on left is false on
78:14 - right is true and jumped will be equal
78:18 - to false so if we go back in unity and
78:23 - here select that event so that you can
78:26 - see it like this as I see it in the
78:28 - inspector panel so now you have a
78:29 - function to select so I'm gonna select
78:31 - here this is jump left animation so we
78:34 - have the jump left here we are gonna
78:37 - call on left as you can see here we need
78:40 - to call on the left and for the right
78:42 - animation so for the right one we need
78:45 - to call on right so if I go here we have
78:47 - run actually this is not run jump right
78:51 - here it is jump right we need to add
78:53 - that event here at the beginning why at
78:57 - the beginning well because we're gonna
78:58 - play this animation and backwards we
79:00 - will see this in a second so if I hit
79:03 - here add the keyframe click on it so you
79:06 - need to click the keyframe and select
79:08 - the function on the right so now we are
79:11 - good to go to test all of this out and
79:13 - then I will explain it again line by
79:16 - line and what is going on so if I hit
79:19 - the play button you see here I hit the
79:21 - play button if I click here to jump we
79:23 - will go to this animations we just saw
79:25 - go here as you can see now we have a
79:28 - problem that problem is the following
79:30 - because this jump right needs to well
79:33 - have this loop time on check actually
79:36 - this one right here too so let me just
79:38 - run right run left let me just see what
79:41 - is the problem here so we have on right
79:44 - on left is false on right is true
79:50 - and jumped well be equal to false this
79:53 - is what we did and I think this is okay
79:56 - so let me just go back here in the
79:59 - animation jump right here is our
80:03 - animation on right it's calling on right
80:05 - this should work so I'm gonna just go
80:07 - here hit the play button okay yeah now
80:13 - it's working I don't know why I did not
80:15 - work a moment ago but the important
80:17 - thing is well let me just take the jump
80:20 - left
80:20 - did I turn off loop time so turn off the
80:22 - loop time from jump left and also turn
80:24 - off loop time from jump right and let me
80:27 - just test it out again yeah the problem
80:30 - was the loop time now what is loop time
80:32 - and how do you actually deactivate it
80:34 - well
80:34 - double-click on the animation you will
80:36 - have these options here to deactivate
80:38 - the loop time loop time it will make
80:41 - that animation loop over and over and
80:43 - over again so we do not want that let me
80:46 - now explain what is going on let me hit
80:49 - the play button you see our game is
80:50 - running the player is running on the
80:52 - right side which means that our run
80:54 - right animation is being played when we
80:57 - run the game the awake function will be
81:00 - called now here we are getting the jump
81:03 - button adding the listener which means
81:04 - the function that will be executed when
81:06 - we press the button and we are getting
81:08 - the component animator but we are also
81:09 - setting on the right side to be true on
81:12 - left is false
81:13 - because initially when we run the game
81:15 - our player is on the right side in the
81:18 - update function if we did not jump the
81:20 - default value of a boolean is false if
81:23 - we don't type here if we don't type here
81:26 - like this we don't type is equal to true
81:28 - the default value will be false so if we
81:32 - did not jump before so if we did not
81:35 - jump this is false that means we are
81:37 - running so if we are on the right side
81:40 - we will play the run right animation if
81:42 - we are on the left side we will play a
81:44 - run left when we jump if we are on the
81:47 - right side we will jump to the left side
81:51 - otherwise if we are not on the right
81:53 - meaning we are on the Left will jump to
81:55 - the right side so what is going on yeah
82:00 - jump to the right
82:02 - confusable right left up and downs on
82:04 - and so forth we also created events so
82:07 - animation events here inside of the
82:09 - animation itself you see here we have
82:11 - created these which means these events
82:14 - will be called when the animation hits
82:16 - that frame you see when the animation
82:17 - hits that frame it will call that event
82:22 - which is actually this function so when
82:25 - we get to the last frame in this case we
82:28 - are playing the animation backwards and
82:30 - when I say backwards if I set this to be
82:32 - negative or actually 22.5 notice what's
82:35 - gonna happen so we are gonna jump really
82:38 - see you see what is happening
82:40 - you see which problem do we have here
82:42 - because we are not playing that
82:43 - animation backwards we are not playing
82:46 - that animation back where is this jump
82:48 - right and in order to play it backwards
82:49 - we simply need to set the negative to
82:52 - the speed because we are using the jump
82:54 - left animation you see the motion is
82:56 - from the jump
82:57 - left we just duplicated renamed it to
83:00 - jump right which means that is the same
83:02 - animation if you want to play backwards
83:04 - set the speed to negative it will start
83:08 - playing it from the back so it will not
83:10 - start from the front or the beginning of
83:12 - the animation it will start from the
83:14 - back which means from here it will start
83:16 - from here and go to here which means
83:19 - that the first frame will actually be
83:21 - the last frame because we're playing
83:23 - from backwards when I say from backwards
83:25 - if we have here 60 frames that means
83:27 - backwards we will play from frame 60 to
83:30 - frame zero so frame zero is the last
83:33 - frame and here is where we are putting
83:35 - the on right
83:36 - this one right here function to be
83:39 - called which means we are not on the
83:41 - left side anymore we are on the right
83:43 - side and we did not jump so when the
83:46 - animation ends it calls this event and
83:49 - these get executed jump is false and
83:52 - when the jump is false notice
83:54 - exclamation mark will make what's after
83:56 - after in the opposite so jumped here is
84:00 - false but the exclamation mark here is
84:02 - making it true because it's making the
84:05 - opposite what's opposite of false it's
84:07 - true so if we did not jump and we are on
84:10 - the right side play the run right
84:12 - animation if we did not jump and we are
84:15 - on the right side meaning we're on the
84:17 - left side play the run left animation
84:19 - when we jump if we are on the right side
84:22 - that means jump to the left side when we
84:25 - jump and we are not on the right side
84:28 - that means we are on the left side then
84:31 - play jump right so jump to the right
84:33 - side and as you can see here jumped is
84:37 - true because while we are in the air we
84:41 - don't want to play run right or run a
84:44 - left animation as you can see with a
84:47 - couple of lines of code these are not
84:48 - that many lines of code these are 20 or
84:51 - so lines of code we managed to make our
84:53 - player jump from the left to the right
84:55 - but if we did all of this in our code we
84:58 - will need to calculate where the player
84:59 - is when he lands how we are gonna
85:02 - animate him so it's gonna or that would
85:05 - be complicated but like this it's very
85:08 - very simple you see the players jumping
85:10 - from left to right and right to left
85:11 - with just a couple of lines of code as
85:16 - you see right here so it's really easy
85:20 - to do this with animations and we don't
85:23 - have to do anything complicated now we
85:25 - can also use space and just take this
85:28 - right here so all of this right here and
85:31 - inside of our update right below where
85:34 - we are testing if we did if we did not
85:36 - jump we can test if so if input get key
85:41 - down key code space so space if we press
85:45 - the space key on our keyboard we're
85:50 - gonna do the same thing right here so
85:51 - that same thing is actually jump and we
85:54 - can test it out so if I go back here hit
85:57 - the play button I'm hitting space now
85:59 - and I'm jumping you see hitting space
86:01 - and jumping hitting space and jumping
86:04 - heating space and jumping then you get
86:07 - my point and you can watch these
86:10 - animations being played right here
86:12 - notice when we run the game you see
86:14 - Ronna right is being played when I job
86:16 - you see jump from the left or jump from
86:19 - the right to the left
86:20 - animation played and it is indicated
86:22 - with this bar right here you see the
86:24 - blue thing that is filling this is the
86:26 - bar indicating which animation is the
86:28 - plate so now we are on the left side
86:30 - because we triggered we have triggered
86:33 - on left on left is true on right is
86:35 - false and when on right is false as you
86:40 - can see here we're gonna play run left
86:42 - which animation is playing around left
86:44 - when we jump
86:45 - you see we jump from left to right and
86:48 - the jump right animation was being
86:50 - played because when we jump we're
86:52 - testing if we are not on the right side
86:55 - that means we are on the left jump to
86:57 - the right side
86:59 - let us add our first obstacle in the
87:02 - game so we need to go into sprites and
87:05 - then enemies and obstacles the first one
87:07 - is gonna be our flag so simply drag and
87:10 - drop the flag right here and for this
87:13 - flag what we need to do is set the scale
87:16 - on the x-axis at 1.23 now this flag is
87:21 - not gonna be on its own we are also
87:24 - gonna have the squirrel or the squirrel
87:26 - and we're gonna add it as a child of the
87:30 - flag so before we create the animation
87:33 - of the squirrel as you can see we have
87:35 - four animations or one two three four
87:37 - yes four animations from the squirrel we
87:40 - are going to take the flag and we're
87:42 - gonna add a box Collider 2d on it now
87:47 - you can see that the box Collider is all
87:49 - around this flag we don't want it to be
87:52 - like this instead we are gonna resize
87:56 - that box Collider so the size on the x
87:59 - axis can be 1024 the size on the Y is
88:02 - gonna be point 52 and I'm gonna set the
88:06 - offset Y to be at point zero six so this
88:10 - is this green thing do you see this
88:13 - green rectangle thing this is our
88:16 - Collider that is on the flag itself so
88:20 - now we can select our squirrel and we
88:23 - can create it now before we actually
88:25 - create the squirrel squirrel we will
88:29 - create a folder inside of the animation
88:31 - so assets animations right-click create
88:34 - a new folder just is going to be our
88:36 - squirrel animation so it's
88:38 - sq I RR e
88:42 - Skua and we are gonna create the
88:45 - animation for our squirrel so sprites
88:47 - enemies select all four of these drag
88:50 - and drop the squirrel here BAM
88:53 - here it is and I'm gonna save it into
88:55 - animations and then squirrel and here it
88:58 - is squirrel like this animation and hit
89:05 - enter as you can see the squirrel is too
89:09 - big if I put it right here and go into
89:11 - the game tab it is bigger than the
89:13 - player itself so we do not want that
89:15 - what we want to do is we want to resize
89:17 - the squirrel so we are gonna see points
89:19 - 4 on the x + 4 point 4 on the y 4 x + y
89:24 - scale we're also gonna add a box
89:28 - Collider 2d on the squirrel and resize
89:30 - it because currently it is all over the
89:33 - squirrel so the size on the X is gonna
89:35 - be 1 point
89:36 - terney 9 and the size on the Y is gonna
89:39 - be 0.88 and we're also gonna offset it
89:42 - so offset on X is going to be negative
89:45 - point 28 and offset on the y is gonna be
89:50 - 0.7 teen now we also need to add a
89:54 - rigidbody on the squirrel so here I'm
89:57 - gonna go add component a rigid body 2d
90:01 - on the scroll I'm gonna attach it I'm
90:03 - not gonna set it to be kinematic I'm
90:05 - gonna leave it a dynamic and also what
90:08 - we want to do is we want to add that
90:10 - squirrel to be the child of our flag
90:14 - because the flag and the squirrel go
90:16 - well one with each one with another
90:19 - let me just rename the squirrel here in
90:21 - the hierarchy as squirrel and I'm gonna
90:23 - well put it to be under the flag let me
90:26 - just set it at zero for the x-axis and
90:29 - for the y-axis I'm gonna reposition it
90:30 - something like this but since gravity is
90:33 - being applied on the squirrel it will be
90:36 - well it will fall down on the flag
90:39 - itself now in regards to the flag when
90:42 - we set it to be at position zero for the
90:45 - x axis this is how it looks like we are
90:49 - also going to take the flag set it at
90:52 - negative three we
90:54 - for the Z does this work actually it
90:57 - needs to be at three not negative three
90:59 - so set it to be at three so that it is
91:03 - like this you see it's behind our
91:05 - obstacles now one thing that we want to
91:08 - do is you see when we run the game
91:10 - notice what's happening here so you see
91:12 - we have the flag and it's going or not
91:15 - going down we will cover that in a
91:17 - moment but we also want the squirrel
91:19 - squirrel to move left and right and in
91:24 - order for the squirrel to move left and
91:26 - right we need to create well a script
91:28 - for our squirrel so if we go inside of
91:31 - our assets scripts right click create
91:34 - new folder enemy scripts this is where
91:38 - we are gonna put our enemy script
91:41 - well the folder and here I'm gonna right
91:44 - click and create a new folder and I'm
91:46 - gonna see here squirrel so sq I are evil
91:51 - or are ya P Elia that it is sometimes I
91:54 - don't know how to spell so forgive me
91:56 - right-click create a c-sharp script
91:58 - squirrel and attach it on the squirrel
92:02 - itself so something like this attach it
92:04 - on the squirrel double-click it and open
92:07 - it in monodevelop let me just hold enter
92:10 - actually for a stagette class hold enter
92:12 - just to give a little bit of space and
92:15 - if we go here on top we are gonna add
92:19 - some variables the first one is going to
92:21 - be a private float move speed which by
92:24 - default is gonna be equal to 3 and we
92:28 - need update we don't need the start
92:30 - function so we're not gonna initialize
92:32 - anything but we need to create a
92:33 - function that's actually gonna move the
92:35 - squirrel so here I'm gonna say void move
92:37 - and we're gonna use the same technique
92:40 - as we did with our backgrounds so what
92:44 - we want to do here is create a vector3
92:47 - temporary position which is equal to
92:49 - transform position and here we're gonna
92:52 - say temp that x plus equals speed
92:57 - multiplied with time dot delta time and
93:01 - simply take the transform position is
93:03 - now equal to you temp if we put this
93:06 - function right here in the
93:08 - update it will start moving the squirrel
93:10 - but we will have one problem so if we go
93:12 - back here and run it you see the problem
93:15 - the squirrel is trying to go away here
93:17 - and trying to touch things and whatnot
93:19 - but it is not working so that's not
93:23 - working and why isn't working well
93:25 - because we're just moving the squirrel
93:26 - to the right side plus equals to you is
93:29 - the same thing as if we say temp dot X
93:31 - is equal to temp dot X plus moves be
93:35 - multiplied time that so it's time that
93:38 - delta x we just type it out correctly
93:41 - here time dot time.deltatime finally
93:44 - thank you very much so this right here
93:47 - is the same thing as writing this here
93:48 - but this is a shortcut plus equals two
93:50 - we don't need to type well like this as
93:53 - you just see here now what we need to do
93:56 - we need to detect when we touch our
93:59 - bounds and since both of our bounds so
94:04 - if we go here and if I select the side
94:06 - boundaries you see the box collider
94:08 - actually the box Collider that is
94:10 - attached on them is not set to be a
94:12 - trigger if we select the squirrel the
94:15 - box Collider attached on the squirrel is
94:18 - not set to be a trigger so we cannot use
94:20 - on trigger enter instead we need to use
94:24 - here void on collision enter 2d which
94:28 - takes a collision 2d as an argument and
94:31 - I'm gonna going to call it target so
94:35 - this on collision enter will be called
94:38 - when two colliders touch each other so
94:41 - when the squirrel touches this side of
94:44 - the bound on collision enter will be
94:46 - called or if it touches the left side on
94:48 - collision enter will be called what we
94:51 - want to test here is if the squirrel has
94:55 - touched the side bounce so we are gonna
94:58 - see here if targets so target which is
95:01 - this parameter right here so this is the
95:03 - target parameter collision 2d that's
95:05 - passed inside of this function which
95:08 - enables us to get information about
95:10 - collisions such as the game object we
95:12 - have collided with so if the target dot
95:16 - game object and it's tag is equal to
95:19 - side bound so if
95:21 - equal to side bounce we have touched our
95:23 - bounds now we need to go in our unity
95:27 - editor go inside of our tags so go on
95:30 - top here it is we have side bound so
95:33 - here if we select all of these they are
95:36 - tagged as side bound so not side bounce
95:40 - but its side bounce so don't add s or
95:43 - otherwise it will not work I was just
95:46 - going over to my unity energy to make
95:48 - sure which tag we have applied and if I
95:50 - left it its bounce with s plural not
95:53 - singular then BAM we have a problem so
95:56 - this name right here in the tag this
95:59 - name right here needs to match up with
96:01 - the name right here or otherwise it will
96:04 - not work so if we have collided with our
96:09 - side bounce what we want to do we'll
96:11 - simply we want to change direction so
96:12 - we're gonna say here move speed will be
96:15 - multiplied by negative 1 so multiply 2
96:18 - by negative 1 which will change the
96:21 - value of the speed what does that mean
96:23 - well that means that if the speed was
96:25 - positive now it will be negative if the
96:27 - speed was negative now it will be
96:29 - positive so every time we touch one side
96:32 - it will make the speed either positive
96:35 - or negative and it will make our
96:37 - squirrel go into the left or the right
96:40 - side let me demonstrate that and we will
96:42 - have one problem that we will see and
96:44 - fix so notice now the squirrel is going
96:47 - back what you see the squirrel is going
96:49 - left and right going left and right let
96:51 - me just zooming how can I do this never
96:54 - mind you can see what I mean so you see
96:56 - the squirrel is going left and right
96:57 - left and right you see left right left
97:00 - right now the problem here is that the
97:04 - scroll is not changing the direction
97:06 - where it is facing so what we need to do
97:08 - here is create a vector3 temporary
97:11 - variable which is equal to you transform
97:13 - that a local scale and temporary
97:16 - variable X which is while the scale or
97:20 - the direction on the x axis we are going
97:23 - to multiply that so multiplied equal to
97:26 - by negative 1 and the reason for it is
97:28 - the same thing we are gonna change the
97:30 - direction if the scale is now positive
97:33 - it will be negative so notice what I
97:35 - mean so if I go here in the scene and
97:38 - zoom in you see what the scroll hits
97:40 - this side it's gonna go ink so when it
97:43 - hits the right side is gonna start to go
97:45 - to the left side and it needs to face
97:47 - the left side so that means that the
97:50 - squirrel and let me just type here point
97:52 - four that means that the squirrel will
97:54 - now be facing the left side which is the
97:56 - negative you see like this the negative
97:58 - this is the positive negative positive
97:59 - or negative it will simply change the
98:03 - direction where it is facing by
98:05 - multiplying this with negative one so
98:08 - now transform local scale is equal to
98:11 - temp and we can now go back in our unity
98:14 - editor and test to see if the squirrel
98:16 - will change directions of BAM it is
98:18 - changing the direction BAM changing
98:20 - direction BAM it is in fact now changing
98:24 - the direction what it hits the bounce
98:27 - now one more thing that we need to do is
98:30 - for the flag itself so here in the enemy
98:33 - scripts I'm gonna create a new c-sharp
98:36 - script which I'm going to call enemy
98:37 - move and this one we're gonna attach it
98:41 - on the flag itself so you see the flag
98:43 - itself it needs to move down same way as
98:45 - our bounds are moving down so if we go
98:48 - here in the enemy move function let me
98:51 - just are actually script excuse me so
98:52 - here I'm going to tag it with the class
98:55 - tag hold ENTER to give a little bit of
98:57 - space here on top we need to have a
99:00 - public float move speed which is going
99:04 - to be equal to one F we also need a
99:07 - private float which is going to be
99:09 - camera Y and inside of our start
99:13 - function we're gonna say camera Y is
99:16 - equal to camera so camera that main dot
99:21 - transform that position that Y and let's
99:24 - say -10 F just so that we well know from
99:27 - where we need to turn off our game
99:30 - object now notice this or what we need
99:33 - to do now is that we need to type void
99:35 - move which is a function that's gonna
99:38 - move our game object and we're gonna
99:40 - call move in the update
99:43 - we're gonna do the same thing as we did
99:44 - with our BG mover so vector3 tempest
99:48 - transform.position our temp dot Y is
99:52 - minus equals to move speed multiplied
99:55 - with time dot delta time and transform
99:58 - position is now equal to10 reassigning
100:01 - it back so this is nothing new it will
100:04 - simply move the game object down we did
100:06 - this already but in our void deactivate
100:10 - so deactivate we are simply going to
100:14 - test if transform that position that Y
100:19 - is less than cameras Y then what we want
100:23 - to do is we want to say game object set
100:26 - active Falls to deactivate the game
100:29 - object from our game we're gonna call it
100:32 - right below the update so we are gonna
100:34 - test if our own Y position so the Y
100:36 - position of the enemy move which is
100:38 - attached on the flag itself if it's less
100:41 - than the cameras Y that we have
100:43 - calculated here then we will deactivate
100:46 - our game object deactivating the game
100:48 - object releases memory in our game
100:51 - because we are getting rid of game
100:53 - objects that we don't need we don't need
100:56 - them in terms of when this flag goes
100:58 - down so if the flag goes down like this
101:00 - we don't need it anymore because it's
101:02 - out of sight we don't eat it the player
101:03 - does not see it it's not important to us
101:06 - and because of that well we need to get
101:08 - rid of it the simplest way is to use set
101:11 - active false which means the game object
101:14 - will be deactivated that means notice if
101:16 - I select the flag and notice here in the
101:18 - inspector we have this cube icon right
101:21 - next to it we have a check box and then
101:23 - we have the name of the game object if I
101:25 - uncheck this check box BAM you see the
101:27 - game object is no more it's not visible
101:30 - in the scene view and it's not visible
101:33 - in the game view which means it is
101:35 - deactivated it is still in the hierarchy
101:38 - here we could potentially activate it
101:41 - again if we have a reference to it but
101:43 - when it's not active all scripts that
101:47 - are attached on this game object will
101:49 - not work all scripts that are collisions
101:53 - physics that is applied to this game
101:56 - object will not be calculated when the
101:58 - game object is not active now we do need
102:01 - to set the move speed to five because it
102:03 - needs to be the same speed as our side
102:06 - boundaries so that they move in the same
102:09 - harmony so to say so if I hit the play
102:13 - but now notice it is moving down you see
102:15 - BAM it is moving down and we well
102:17 - touched our squirrel with the player let
102:19 - me just take the player here and
102:20 - actually the player can be set to be a
102:22 - trigger and I'm gonna hit apply because
102:25 - anyways we set him to be kinematic so he
102:27 - can set to be a trigger so that we don't
102:30 - roll over game objects as we just did
102:32 - with our squirrel so if I hit the play
102:35 - button again notice bam the game object
102:37 - is going down and notice now when it
102:39 - goes actually got deactivated so let me
102:41 - try this again in the scene notice when
102:44 - it goes down here BAM it is deactivated
102:48 - and we don't need it in the game any
102:52 - more so this was our first obstacle we
102:56 - will have more obstacles but before we
102:58 - proceed to create more obstacles we are
103:01 - gonna create functionality in our side
103:06 - script or speedy mover script to spawn
103:09 - these obstacles on random so we will see
103:12 - that starting from the next video but
103:14 - before we finish this one here in the
103:16 - prefabs folder create a new folder for
103:18 - enemy prefabs like this and drag and
103:22 - drop the flag right here now the flag
103:24 - has this scroll as a child game objects
103:27 - which will be dragged along with it but
103:29 - create a free prefab out of it because
103:31 - we're gonna use the prefab to spawn that
103:34 - game object in RC so now what we want to
103:38 - do is create the functionality inside of
103:43 - our BG mover script so this one right
103:45 - here so that it spawns obstacles when it
103:48 - repositions the balance but before that
103:52 - what I'm gonna do is select the side
103:55 - boundaries and create an empty game
103:57 - object which is going to be the child
103:59 - offside boundaries and I am simply gonna
104:02 - set its position at 3.5 and this is
104:05 - gonna be the right
104:08 - spawners so this is gonna be the right
104:10 - spawner or this is where we are gonna
104:13 - spawn our obstacles on the right side
104:16 - I'm just quickly gonna tag it here with
104:18 - this tag so it is available right here
104:20 - when you click on this icon so let me
104:22 - just select none and you see this cube
104:24 - icon right here you can click on it and
104:26 - select one of these icons so I'm gonna
104:28 - tag it like this duplicate it and this
104:31 - is gonna be the left spawner so this one
104:33 - instead of right it's gonna be left and
104:35 - I'm gonna set it at X negative 3.5 and
104:39 - tag it with the orange one I'm also
104:42 - going to select both of these and set
104:43 - their z axis at negative two so now I'm
104:47 - gonna duplicate them and simply put them
104:49 - right here to be below our side
104:54 - boundaries 1 now their x-axis is going
104:57 - to be the same Y axis will be set to
105:00 - zero so select both of these set the y
105:03 - axis to 0 so that it moves them right
105:06 - here above or where our next boundaries
105:10 - are so I'm going to duplicate these now
105:12 - and put them below side boundaries too
105:15 - and I am gonna rename it just right and
105:18 - left spawner and I am gonna select them
105:21 - set the y axis at 0 so that they go
105:25 - right here and again duplicate these two
105:28 - and put them right below side boundaries
105:31 - 3 let me just rename them side spawner
105:34 - like this below this one side spawner
105:37 - and I am gonna put them at Y to be equal
105:42 - to 0 X is gonna be the same so for the
105:47 - right spawner it will be 3.5 for the
105:49 - left spawner negative 3.5 and their
105:52 - y-axis will be the same which will make
105:54 - them at the exact same position under
105:57 - every parent game object so now we can
106:02 - go inside of our script which is BG
106:04 - mover and right here on the top we can
106:07 - create a public so public game object
106:11 - array of enemies and a public game
106:15 - object array of spawn positions this is
106:21 - where we are gonna dry
106:21 - can drop our enemies and where we are
106:24 - gonna drag and drop our well spawn
106:27 - positions so before we continue we need
106:28 - to do just that
106:30 - select side boundaries and here for
106:33 - spawn positions set the size to to drag
106:37 - and drop the left and the right spawner
106:41 - now in element 0 first you're gonna put
106:44 - the right spawner so element 0 will be
106:47 - right spawner than the left spawner now
106:50 - for side boundaries 1 2 & 3
106:54 - we're also gonna set the sides or spawn
106:57 - position size 2
106:58 - now don't put these so you see this
107:02 - right spawner here don't put it to be
107:06 - right here for the side boundaries 1 so
107:10 - don't put them right there you need to
107:11 - put their appropriate children so right
107:14 - spawner that is under side boundaries 1
107:16 - will go here and left spawner will be
107:19 - here and for the side boundaries - it's
107:22 - right spawner will be here pay attention
107:24 - which ones I'm dragging so that you
107:27 - don't make a mistake and this one I'm
107:29 - gonna put right here side boundaries and
107:31 - here I'm gonna put the right spawner and
107:33 - here I'm gonna put his left spawner so
107:36 - they're appropriate children this is
107:38 - really important don't mix it up don't
107:40 - put this right spawner to be right here
107:42 - for the side boundaries 3 put the
107:45 - appropriate spawners for the appropriate
107:47 - parents now I'm also gonna select site
107:49 - boundaries all 4 of them so 1 2 & 3 and
107:53 - side boundaries and here for the enemies
107:56 - we're gonna set the size to 1 because
107:58 - currently we only have the flag enemy so
108:01 - I'm gonna click on this little circle
108:02 - here and well select the flag enemy
108:05 - which is our current obstacle that we
108:09 - have or the only obstacle that we
108:11 - currently have so what are we gonna do
108:14 - now we're gonna go here inside of the BG
108:17 - mover and right here below our
108:19 - reposition script we are gonna say void
108:22 - spawn enemies now the spawn enemies will
108:27 - be called right here so right below when
108:31 - we reposition so when we reposition our
108:34 - ops
108:35 - are actually the boundaries when we
108:37 - reposition them up we will spawn enemies
108:41 - and we're gonna call here spawn enemies
108:43 - like this now we're gonna use a random
108:45 - value to determine if we are gonna spawn
108:47 - these enemies so we're gonna say if
108:50 - random that range from 0 up to 10 if
108:54 - it's greater than 0 now first of all
108:56 - this right here is gonna be frequency of
108:59 - spawning enemies and it's not spelled
109:03 - like this so it's frequency of spawning
109:06 - enemies now notice here I said if it's
109:09 - greater than zero every time this will
109:12 - be greater than zero all that is 1 by 10
109:15 - chance that it will not be greater than
109:17 - zero so it means that every time it will
109:20 - spawn enemies but if you want you will
109:22 - set less chance for enemies to be
109:25 - spawned right away you can save 5 so
109:27 - that's 50/50 chance for enemies to be
109:30 - spawned 3 that is 70 by 30 chance for
109:34 - Lana needs to be spawned 7 that is 30 by
109:37 - 70 chance that the enemies will be
109:39 - spawned but for testing purposes I'm
109:42 - gonna say here zero because we need to
109:44 - test right away
109:45 - if this is actually working so what
109:49 - we're gonna do here well first you're
109:50 - gonna say int random enemy he's gonna be
109:53 - equal to a random that range from 0 up
109:57 - to enemies that linked this will give us
110:01 - a random index from 0 up to our arrays
110:05 - length because we're gonna use our
110:07 - enemies array this one right here to
110:09 - spawn our enemies and on random we will
110:13 - spawn while these enemies now since our
110:15 - flag enemy so the flag one with the
110:19 - squirrel that we created in the previous
110:20 - video is the only obstacle that needs to
110:23 - be spawn in the middle and we set that
110:26 - obstacle to be at element well 0 so it's
110:30 - at index 0 for all 4 of our boundaries
110:34 - the flag is at element 0 which means
110:38 - that here we can test if our random
110:40 - enemy which is the index and here we can
110:43 - say random enemy index just so that we
110:46 - don't get confused so random enemy
110:48 - index is equal to zero then we know that
110:52 - this is the flag enemy flag enemy and
110:54 - the flag enemy here I'm gonna say -
110:57 - needs to be spawned in the middle so
111:02 - what you're gonna do here is you're
111:04 - simply gonna call instantiate and we're
111:06 - gonna instantiate the enemies the enemy
111:09 - that's at the random enemy index and we
111:12 - are gonna instantiate it by using new
111:14 - vector3 so new vector3
111:17 - like this 0 for the x because it needs
111:20 - to be spawned in the middle trance from
111:23 - that position that y for the y and 3 f
111:26 - for the z axis and for our rotation
111:30 - we're gonna say quaternion identity like
111:32 - this and just hit enter so that it goes
111:34 - right here on this line else here if
111:38 - it's not so if the random index is not
111:41 - equal to 0 that means that it's not our
111:45 - flag so others or other game objects
111:48 - will be spawned on the left spawner and
111:51 - the right spawner but we will call code
111:53 - that later on now we're gonna test our
111:56 - flag if it's actually working so if we
111:59 - go back here hit the play button and if
112:02 - I go here on the scene you see when we
112:04 - respawn our obstacle you see BAM here we
112:08 - have an Bam and bam and bam
112:09 - every time we will have these obstacles
112:12 - which are the flags that are being
112:14 - spawned right here and when they go down
112:16 - you see when they go down here that will
112:18 - be deactivated so every time they go
112:20 - down they will be deactivated and as you
112:23 - see since I set here if this random
112:25 - range is greater than 0 every time we
112:29 - see that enemy is being spawned and the
112:32 - reason for it because from 0 up to 10
112:34 - that is 1 by 9 chance that we will get
112:39 - something greater than 0 but if you want
112:43 - to spawn enemies less frequently you can
112:46 - say for example 4 that is 60 by 40
112:49 - chance that the enemies will be spawned
112:51 - five that is 50-50 chance so and and so
112:53 - for you get my point and here as I
112:56 - already explained because our flag is
112:58 - set on index 0 and we want the flag to
113:02 - be spawn
113:02 - the middle that's the only obstacle that
113:04 - will be spawned in the middle and
113:07 - because of that as I already said we are
113:11 - doing it like this so in the else
113:13 - statement right here we will spawn all
113:15 - our other obstacles and we will either
113:17 - spawn them here on the right spawner
113:20 - side or on the left spawner side but
113:23 - before we can actually do that we need
113:26 - to create these obstacles and program
113:30 - those obstacles with product we need to
113:31 - go into sprites and then enemies and
113:33 - obstacles the first one will be our tree
113:36 - that you are gonna add but it's too big
113:37 - as you can see here it's trees illa so
113:40 - you can kill our our ninja just by
113:43 - adding it to the scene so what we need
113:46 - to do is we need to change its scale so
113:49 - for the scale X I'm gonna say point 4
113:51 - point 4 for device so this is well how
113:54 - we are gonna use it I'm satisfied with
113:56 - this height or how large our tree is
114:00 - we're gonna attach a box Collider 2d on
114:03 - it now we are not gonna leave it like
114:04 - this as you see we are gonna rescale it
114:07 - so the size on the X is gonna be 4 point
114:10 - 43 and the size on the Y is gonna be
114:14 - 3.44 of course we are gonna well offset
114:19 - it so the offset X is gonna be point 51
114:22 - and the offset y is gonna be negative
114:25 - 1.3 or actually we can leave it at
114:28 - negative 1 so negative 1 can be the
114:30 - offset for our tree we are gonna create
114:34 - attack for the tree so we're gonna click
114:36 - on add tag click on the plus button here
114:39 - and we're gonna see here enemy tree and
114:42 - hit enter select the tree here in the
114:45 - hierarchy and we are gonna see here or
114:48 - select the enemy tree tag so this is our
114:52 - enemy tree we are also gonna have our
114:55 - enemy ninja which is this dude right
114:57 - here who is also a ninja Zilla
114:59 - so yeah we're gonna resize him of course
115:02 - so for the ninja enemy we're gonna say
115:05 - point 25 for the X point 25 for the Y
115:08 - and we are gonna add a box Collider 2d
115:13 - component on him of course you're gonna
115:15 - resize and not leave it
115:16 - like this so the size on the X is right
115:20 - here and we're gonna save 1.99 or
115:23 - actually we're gonna save point -
115:24 - actually - not to point you so - for the
115:27 - size on the x size on the y is gonna be
115:31 - lets say 5.38 and offset x is gonna be
115:36 - one point any one offset y is gonna be
115:40 - point 62 and voila
115:42 - here is our and a meat ninja and we are
115:46 - gonna set him to be a trigger so you're
115:49 - gonna make him to be a trigger and we're
115:51 - also gonna tag him so here we're gonna
115:54 - add a tag which I'm simply gonna call
115:57 - enemy and I'm gonna click Save
115:59 - select the ninja enemy and I am gonna
116:02 - well tag him with the enemy tag the last
116:06 - enemy that we have is our B but our B as
116:10 - you can see here well we have how many
116:13 - eight of these B's so how can we add
116:15 - them because if you drag and drop the be
116:17 - like this this is not what we want to
116:19 - have in our game so select the be right
116:23 - here in sprites enemies and obstacles
116:25 - and you see here in the inspector panel
116:27 - we have the sprite mode this is a
116:29 - drop-down list so we have single
116:31 - multiple and polygons currently it is
116:34 - set to single which means unity is
116:37 - treating this image or this asset as a
116:39 - single image but we need to have these
116:43 - bees separated in order to have them
116:45 - separated
116:46 - we are gonna select multiple instead of
116:48 - single let me hit apply here at the
116:51 - bottom so that this change applies to
116:53 - this image and now we're gonna click on
116:55 - a sprite editor which is going to open
116:57 - this thing that you see right here this
116:59 - is the sprite editor where we can slice
117:01 - each individual bee by itself because
117:04 - this or these bees are a sequence of
117:06 - animations unity can slice this well on
117:11 - its own but you can drag or you can
117:13 - simply draw you see here I just drew
117:15 - this rectangle with well left clicking
117:18 - and drawing it and while out there it is
117:20 - in order to delete it hold command press
117:22 - D on windows control and delete actually
117:25 - I said D but it's backwards or that
117:27 - delete so control the lead on Mac
117:30 - command and button above enter but unity
117:34 - can slice is pretty good on its own by
117:36 - simply clicking here slice you see we
117:38 - have the sprite editor and if you click
117:40 - on the slice here it's gonna say
117:42 - automatic so we want to allow unity to
117:45 - you sliced or detect automatically where
117:47 - it needs to slice things pivot will be
117:49 - the center and I'm gonna click slice and
117:51 - bam here it is so you see unity can
117:54 - slice this pretty good on its own but
117:55 - sometimes it needs a little bit of help
117:57 - so as you can see here we can resize
117:59 - these because we're not gonna leave it
118:01 - like this here we're gonna resize it a
118:02 - little bit something like this and
118:05 - select this one also resize it right
118:08 - here and on well down
118:11 - let me just like this one this one is
118:12 - okay the third one let me see where it
118:15 - is just a little bit here you can simply
118:18 - well read rag these as you can see to
118:20 - resize them just so that it fits the B
118:23 - and it does not go outside of the B so
118:26 - something like this well do select this
118:30 - one okay we need to move this back now
118:33 - as I said unity is pretty good at
118:35 - slicing things but sometimes it needs
118:36 - help from us as you can see right here
118:38 - and this one also is the last one like
118:42 - this and we are good to go
118:44 - and I'm gonna hit apply so when
118:46 - everything here is done you see you can
118:48 - hit apply which is right here and these
118:51 - changes will be applied to this image so
118:53 - now when we click on the drop-down list
118:55 - of this image we can select these bees
118:58 - now by accident unity has added
119:00 - somewhere another slice which is well
119:03 - this empty image so ignore the first
119:05 - part I'm not gonna go back so you will
119:07 - need to go back here and search where
119:09 - that slice is well actually it's here
119:11 - what will font we've found it right away
119:13 - so select it and delete it if you don't
119:15 - find it it's well not a problem and I
119:18 - can hit apply now and bam here we are as
119:22 - I said this is not a problem even if
119:23 - it's there just ignore it don't take the
119:25 - first image but select all other images
119:27 - as you can see here B from 1 up to 9
119:30 - drag and drop the B right here in our
119:33 - well scene view and go into animations
119:37 - to save that animation you folder B
119:40 - animation I'm gonna hit and
119:42 - and Here I am gonna say be animation
119:45 - it's not like you need to be the
119:47 - animation but this is the B animation so
119:49 - B let me just rename it here to be in
119:52 - our hierarchy panel and I am gonna
119:55 - rescale it so the scale is gonna be 0.4
119:58 - 0.4 4 X and the y we are gonna add a
120:02 - component on it so it's gonna be a box
120:04 - Collider 2d and of course we are not
120:08 - gonna resize it this time I said of
120:09 - course but actually yeah we're not gonna
120:11 - resize it this time I'm pretty satisfied
120:13 - with the result right here maybe we can
120:15 - resize it a little bit to be smaller but
120:18 - that we can test that later on to see if
120:20 - there is a need to do so and here we're
120:24 - also gonna attach a rigidbody 2d and we
120:27 - are gonna make in kinematic so here
120:29 - we're gonna say kinematic and we're
120:32 - gonna tag the B as the enemy so tag the
120:35 - B as the enemy and voila we are done we
120:39 - need to go here into the prefabs enemy
120:41 - prefabs so drag and drop the tree drag
120:43 - and drop the enemy drag and drop the B
120:46 - and select our spawners or side
120:49 - boundaries so select all four of these
120:53 - and now for the enemy size we are gonna
120:55 - set well we have four enemies so we're
120:57 - gonna set size to four so now I'm gonna
121:00 - drag and drop the B drag and drop the
121:03 - ninja enemy and drag and drop the tree
121:06 - we don't have to do anything else except
121:10 - attach a script to move our enemies but
121:12 - we will see that in a second we can now
121:14 - safely delete him here from the scene if
121:16 - I hit the play button now as you can see
121:19 - here if I hit the play button actually
121:21 - yeah I was why I was tripping that we
121:24 - actually coded we need to code the
121:27 - spawning of our other enemies so yeah I
121:30 - was tripping that we have already coded
121:32 - that so sorry for that we have attached
121:34 - our enemies now else if our random enemy
121:38 - index is not equal to one if it's equal
121:40 - to 1 we will spawn the flag in the
121:42 - middle else if it's not equal to 1 or 0
121:46 - excuse me we are gonna create a new game
121:48 - object which I'm gonna call enemy obj
121:51 - which is gonna be equal to instantiate
121:53 - enemies
121:55 - inside of it we are gonna see random
121:57 - enemy index like this we are also gonna
122:01 - see here vector 3 which is gonna be our
122:03 - enemies scale which is going to be equal
122:05 - to enemy obj dot a local scale so
122:09 - actually enemy obj dot transform that
122:13 - local scale and now we are gonna
122:16 - determine are we gonna spawn that enemy
122:18 - on the left or on the right so we're
122:20 - gonna see here if our random dot range
122:23 - from zero to two if it's greater than
122:26 - zero so it's a 50-50 chance to spawn
122:29 - this game object or position it either
122:32 - on the left or on the right so here
122:34 - we're gonna spawn it right so we're
122:37 - gonna see here enemy obj that transform
122:40 - that position is going to be equal to u
122:42 - spawn positions and the position that's
122:45 - add the zero index so here I gonna say
122:48 - transform position because the position
122:51 - that is at the zero index we set it to
122:54 - be the right spotter if you remember so
122:57 - this you need to double check to make
122:59 - sure but the right spawner should be at
123:02 - element zero so right spawner and also
123:06 - here right spawner and also here right
123:08 - spawner so the right spawner is on index
123:12 - zero so here we are using index zero we
123:15 - are also gonna take the enemy obj so
123:18 - enemy obj dot scale or actually here
123:23 - enemy scale that X is gonna be equal to
123:26 - negative of Matt AB absolute value of
123:29 - enemy enemy scale that X why is it like
123:34 - this what we need to make sure that our
123:36 - enemies are also facing the correct side
123:39 - we don't want our enemy to be for
123:41 - example here so we don't want our enemy
123:44 - like if I take the player and pretend
123:46 - that he is the enemy I don't want the
123:47 - enemy to be here like this instead I
123:49 - want him to be here like this so I want
123:52 - him to face the correct side and if well
123:56 - in order to do that we need to change
123:59 - the scale and we already explained that
124:01 - we are changing the scale to make the
124:03 - game object face the correct side else
124:07 - if the rank
124:07 - rage is not greater than zero this one
124:09 - right here we are gonna spawn it to the
124:11 - left to the left so spawn left so here
124:14 - we're gonna say enemy obj but let me
124:16 - just copy and paste this right here so
124:18 - enemy obj transform position is going to
124:21 - be equal to spawn positions and the
124:23 - index that's add or element that's an
124:25 - index one which is the left spawner and
124:28 - here we are not gonna use the negative
124:31 - but we're gonna use the positive of the
124:34 - scale X to make the game object face the
124:38 - correct side and the last thing that we
124:41 - need to do is take the enemy obj that
124:44 - transform that a local scale to be equal
124:47 - to enemy skill because while this is
124:49 - gonna face the enemy in the correct
124:52 - direction let me go back here in unity
124:56 - and what we need to do here let me just
124:59 - clear the console we are gonna test it
125:01 - out now so if I hit the play button we
125:03 - are gonna see our enemies being spawned
125:04 - but we're also gonna see one problem you
125:07 - see the B it is spawned the ninja is
125:09 - also spawn but what is happening well
125:12 - they're not moving down so we need to go
125:14 - here select the B ninja enemy and the
125:17 - tree and attach enemy move script set
125:22 - the move speed to five and if I hit the
125:26 - play button now we will see that they
125:29 - are being spawned and going down you see
125:30 - we have our flag now over there is the
125:33 - tree so if I go back here BAM here is
125:37 - the tree we just pass it here is the B
125:39 - here is the tree again let's hope to see
125:41 - the ninja here is the ninja and you see
125:44 - that depending on where he is spawn beat
125:47 - that left or right you see the B now is
125:49 - facing the correct side here on the Left
125:52 - B's facing the correct side let's see
125:55 - the ninja do we have the ninja so we
125:57 - have here C ninja clone but let's hope
125:59 - he's on the right side well he is not
126:01 - but anyways yeah this one is you see he
126:03 - is facing the correct side which is the
126:06 - effect that we achieved by using this
126:09 - right here and this right here and then
126:11 - assigning it to the scale of our enemy
126:14 - obj that we have spawned right here now
126:17 - one thing that we are gonna do is the
126:19 - following
126:21 - our tree is gonna have the enemy move
126:23 - script but the B and the ninja enemy are
126:26 - gonna have different scripts they're
126:28 - gonna move them down but they're also
126:29 - gonna make the B attack our player and
126:31 - the ninja also it will make them attack
126:34 - the player so we need to code that with
126:37 - a separate script I just put these enemy
126:40 - move scripts on them so that we can
126:42 - demonstrate that this actually works and
126:44 - that we have enemies spawned in our game
126:47 - so if we go inside of our scripts folder
126:50 - we have enemy scripts here we are gonna
126:52 - add our B scripts so I'm gonna create a
126:54 - folder B scripts because we have one for
126:58 - the squirrel as you can see here
126:59 - squirrel well I'm just cool whisper wha
127:02 - and Here I am gonna name this one B
127:04 - script so right click create a new
127:06 - script named it B script before I open
127:10 - it I'm gonna go and attach it on the B
127:12 - itself so remove the enemy move script
127:15 - we don't need it we are gonna attach the
127:17 - B script on the B itself simply by
127:20 - clicking add component and while
127:21 - filtering here for the B script and if
127:24 - you want to remove a component that is
127:25 - attached on a game object you have this
127:28 - gear icon on it where you can click on
127:30 - remove component double click on the B
127:33 - script and voila here it is so I'm gonna
127:36 - see here class and I am gonna tag the
127:40 - class at the bottom and hold ENTER to
127:43 - give a little bit of space let me just
127:44 - see here what did I click it's not
127:46 - pouring
127:46 - anyways moving forward as always we need
127:50 - a couple of variables so we need a
127:52 - public float move speed which might be
127:55 - fault I'm gonna say 3.5 F now what is
127:59 - the behavior that we actually want from
128:01 - our B well if I go here in the B prefabs
128:05 - enemy prefabs B here it is what I want
128:08 - from the B is the following
128:10 - I want the B to go here until it's Y
128:13 - position is 0 so until Y position is 0
128:16 - it will stop here and it will try to
128:18 - attack the player something like this or
128:20 - like this or like this it's not
128:21 - important but it will try to attack the
128:24 - player so for that we need a couple of
128:26 - variables we need a private boolean so
128:29 - private ball attack start it we also
128:33 - need pry
128:34 - bull move and attack we also need a
128:39 - private bull private bull attack right
128:43 - this is gonna determine if we are
128:45 - attacking from the right side or the
128:47 - left side so are we attacking to the
128:49 - right or are we attacking to the left
128:52 - side we also need a private float which
128:56 - is going to be our attack speed by
128:58 - default I'm gonna set it to be equal to
129:01 - six now in the start function when we
129:05 - first spawn the B we want to determine
129:09 - do we attack to the right or do we
129:11 - attack to the left and we're going to
129:12 - determine that by using transform
129:14 - position X if it's greater than zero
129:17 - that means we are on the left side or
129:21 - actually we are on the right side and we
129:23 - will attack to the left because notice
129:25 - here I'm gonna take the player as an
129:27 - example so I have the player if I set
129:30 - his X to be zero he's in the middle if
129:32 - the X is at two he is to the right side
129:35 - because in unity x axis goes positive so
129:39 - it's something like this so I'm gonna
129:41 - see here highlight tool we have the
129:44 - coordinate system and this is X and this
129:47 - is y for those of you who don't know so
129:52 - x axis going in this direction it's the
129:56 - positive direction going in this
129:58 - direction
129:59 - it's the negative direction for the y
130:01 - axis going up that's the positive side
130:04 - and going down that's the negative side
130:07 - and here right here at the axis that is
130:10 - zero so I'm testing here if the
130:12 - transform position X is greater than
130:14 - zero what does this tell you so if it's
130:17 - zero it's right in the middle if it's
130:19 - greater than zero that means we are on
130:22 - the right side so we are in the positive
130:24 - side so when the B attacks is going to
130:27 - attack to the left side and not in the
130:30 - right side if the transform position X
130:33 - is not greater than zero that means we
130:35 - need to attack to the right side so here
130:38 - we are gonna say attack so attack right
130:41 - is equal to false because we're
130:44 - attacking to the left side else
130:47 - if the transform position X is greater
130:50 - then or actually lower than zero then
130:53 - attack right is going to be equal to
130:55 - true because I already explained if it's
130:58 - lower than zero that means we're in the
131:00 - left side which is the negative side so
131:05 - now below the update function we're
131:06 - gonna create void be a tag function so
131:10 - be attack and we're gonna call this one
131:12 - inside of the update function this is
131:15 - where the magic happens this is where we
131:17 - are gonna attack so what we're gonna do
131:19 - here we're gonna move the beat downwards
131:22 - until its position is greater than zero
131:25 - so we're gonna say as long as or if our
131:28 - transform position Y is greater than 0
131:31 - which means the B is still not in the
131:34 - middle of the screen and again I'm going
131:36 - to take the highlight tool and
131:37 - demonstrate that so again we have the X
131:39 - and the y so here we have Y and here we
131:42 - have X I said upwards on the Y is the
131:46 - positive size so plus here right here
131:50 - where the X is this is zero so if the B
131:53 - is here that means the transform
131:55 - position Y is greater than zero because
131:57 - you see zero is here and our position is
132:01 - here that means we are greater so
132:03 - position Y is greater than zero and as
132:05 - long as the transform position Y from
132:09 - the B is greater than zero we are gonna
132:10 - move the B downward so when the B hits
132:13 - zero position or below zero somewhere
132:15 - around here as long as the Y position is
132:19 - not greater than zero anymore
132:20 - we will not move the B so what we're
132:23 - going to do here we are gonna say
132:24 - vector3 temp is equal to transform that
132:27 - position temp dot y minus equals move
132:31 - speed multiplied with time.deltatime and
132:35 - transform position is equal to temp
132:38 - again and we can test it out if we go
132:41 - back here since we have a tag script on
132:44 - the B if I simply run the game let us
132:47 - wait for the B to be spawned so here we
132:50 - have the player flag has been spawned
132:52 - next one is ninja enemy ninja enemy
132:56 - again come on please spawned the B spawn
132:59 - the B we have the
133:01 - freak loan come on here it is so the B
133:04 - has been spawned and notice now the B is
133:06 - gonna go down until it reaches here is
133:08 - the B BAM it reached zero you see it
133:10 - reached zero for the Y and it's not
133:13 - moving anymore because its position now
133:16 - is not greater than zero so this is as
133:19 - long as the trésor position Y is greater
133:21 - than zero
133:22 - else if it's not greater than zero
133:24 - anymore which means we reach the center
133:28 - of the screen like this as you can see
133:31 - what we want to do now well this is
133:34 - where the magic happens here we're gonna
133:36 - check if the attack is not started so
133:39 - attack started notice the exclamation
133:43 - mark and I have talked about this
133:44 - numerius of times in my tutorials the
133:48 - exclamation mark makes what's after it
133:51 - opposite so essentially when you see an
133:54 - exclamation mark you will think of it
133:56 - like this you're testing if something
133:58 - did not happened because if you test it
134:00 - like this you are testing if attack
134:02 - started then do something but with an
134:05 - exclamation mark you're testing if the
134:07 - attack did not start think of it like
134:10 - that why well because here we have just
134:13 - declared attack started by default if I
134:16 - don't write is equal to true the default
134:19 - value of a boolean is false so if you
134:21 - just declare a boolean like this this
134:23 - attack right here has false for its
134:26 - value so you don't need to type here is
134:28 - equal to false you can do it but you
134:30 - don't need to because the default value
134:32 - is false now because of that if the
134:37 - attack is not started this exclamation
134:40 - mark if this is false exclamation mark
134:42 - will make it the opposite what's
134:44 - opposite of false true and vice-versa so
134:47 - if the attack did not start we're gonna
134:50 - see here attack started not attack speed
134:53 - attack started is now equal to true so
134:56 - that this if statement does not get
134:58 - executed again so attack now is started
135:02 - and I went to the bottom of the script
135:04 - so now attack is started so attacks is
135:07 - true because now when we get to this if
135:10 - statement exclamation mark will make it
135:12 - the opposite if the value is true
135:14 - what's opposite of true/false you got
135:17 - that right my brother so here since the
135:21 - attack is started we're gonna call start
135:23 - Karrueche because we're gonna create a
135:25 - KO routine that is going to be called
135:27 - attack player this is the name of the
135:30 - core routine which we still did not
135:31 - create so it's giving us a red warning
135:33 - and what we want to do here well we want
135:36 - to create an AI enumerator
135:38 - like this and we're gonna name it attack
135:40 - player so what we want to do inside of
135:43 - this attack player function well we want
135:47 - to yield return new waitforseconds so we
135:51 - want to wait 4 seconds and we're gonna
135:53 - wait 1.5 of a second when the b gets to
135:56 - the middle of the screen so you know
135:58 - that graph that I have well drawn for
136:01 - some reason I don't have my highlight
136:03 - tool here so when the middle of the
136:05 - screen is here let's say our B is here
136:07 - when that happens we will trigger this
136:09 - right here and we will wait 1.5 seconds
136:12 - and then we will start charging at the
136:14 - player and in order to start charging at
136:17 - the player what we need to do we need to
136:19 - say here transform that rotation because
136:22 - we just want to rotate our be a little
136:26 - bit we're gonna make it equal to you
136:27 - quaternion ealer
136:29 - and here we're gonna say new vector3 and
136:34 - we're gonna say 0 for the x 0 for the y
136:38 - and for the Z we're gonna say random
136:41 - range from 0 F to negative 45 F in
136:47 - degrees and we need to close one more
136:49 - parenthesis and bam we are done so this
136:52 - is just gonna rotate our be a little bit
136:54 - and let me show you what I mean so for
136:55 - example if I take the player here and if
136:58 - I rotate him on the z axis you see he's
137:00 - gonna be rotated something like this
137:02 - well we want to rotate the B for example
137:03 - like this and make it charge and the
137:05 - player just so that it looks like you
137:07 - know when Falcons go down to chase the
137:09 - bird or whatever that effect we want to
137:13 - achieve so here we're also gonna say
137:16 - move and attack is equal to true and we
137:19 - want to invoke a function that is called
137:24 - deactivate and we are gonna invoke it in
137:27 - 5 seconds
137:28 - is this the activate function well this
137:30 - is a functions if you're gonna create
137:31 - here void deactivate which is simply
137:35 - gonna call the game object set activity
137:38 - false so first we're gonna attack we're
137:40 - gonna allow the bee to attack after 1.5
137:43 - seconds and when the bee attacks is
137:45 - gonna go outside of the screen we're not
137:47 - gonna see it anymore
137:48 - it's not gonna be visible it's not gonna
137:50 - go downwards we need to deactivate it
137:53 - somehow because you know what I said
137:55 - about those game objects when we don't
137:57 - need them we can simply deactivate them
138:00 - or otherwise they will take up memory in
138:01 - our game but we don't have a use for
138:04 - them because while we are not using them
138:06 - and then we will invoke and invoke if I
138:10 - hover over let me see if there is
138:12 - explanation yes here it is invokes the
138:14 - method method name in time seconds this
138:16 - is the method name in a string so you
138:18 - see quotes this is a string and this is
138:21 - the method name which is this one right
138:22 - here so this one right here method or
138:24 - function this is that this right here it
138:27 - will invoke it in five seconds so this
138:29 - is like a timer before deactivate is
138:32 - called now what about this move and
138:35 - attack well this one is gonna be called
138:37 - right here inside of the else statement
138:39 - right outside of this if statement so or
138:43 - actually excuse me not here but we are
138:45 - gonna call it outside of the if-else
138:47 - statement so let me just close this here
138:50 - outside of the if-else statement because
138:52 - well we don't need it to be inside of
138:54 - the out statement right here we're gonna
138:56 - say if move and attack so if we can move
139:00 - and we can attack what we want to do if
139:04 - so if we are not attacking right which
139:08 - means we are attacking left we're gonna
139:11 - call transform position and we're gonna
139:13 - say minus equals to vector three dot
139:17 - right and we're gonna multiply that with
139:20 - the attack speed and multiply that with
139:22 - time dot delta time Y vector three right
139:26 - well because if you hover over it that
139:28 - is writing shorthand for as you can see
139:31 - here vector three one zero zero this
139:34 - denotes the right side as I said
139:36 - positive side on the x axis is to the
139:40 - right negative is to the
139:41 - so if we are attacking you see here we
139:44 - are not attacking right actually so that
139:47 - means that we need to subtract from our
139:49 - while position using here right else you
139:53 - see here else we're gonna say transform
139:55 - that position plus equals to vector
139:59 - three right multiplied with the attack
140:03 - speed not attack right attack speed
140:06 - multiply the time that Delta time as you
140:11 - can see right here so if we are not
140:15 - attacking to the right that means we are
140:17 - attacking to the left side so we are
140:19 - subtracting from our position why
140:22 - subtracting let me go here again
140:25 - dropping this this is the positive this
140:28 - is the well this right here is the
140:30 - negative this right here is the positive
140:31 - and this is the x-axis if we are not
140:34 - attacking to the right that means we are
140:35 - attacking to the left which means we're
140:37 - going to the negative this right here is
140:40 - negative this is the negative which
140:44 - means we need to subtract from our
140:47 - position to go to the negative side else
140:49 - if we are attacking right which is well
140:53 - this one right here else we need to go
140:55 - to the positive so here is positive like
141:01 - this so we are going to deposit it which
141:03 - means we need to add to our button this
141:06 - is or actually to our position at your
141:08 - button because as I already explained
141:11 - the positive side is the right side so
141:15 - let's test it out and see if it actually
141:16 - works because we have everything
141:18 - attached onto me if I hit the play
141:20 - button let's wait for the B to be
141:23 - spawned when we spawn the B and right
141:25 - away we see the B now please pay
141:27 - attention pay attention now when the B
141:28 - comes down here it is notice now the B
141:31 - is here notice now it's gonna start
141:33 - attacking BAM you see the B wants to
141:35 - attack the player let me see again if we
141:37 - have another B come on where you are BBB
141:40 - BBB BBB nope
141:43 - we are spawning ninjas and flags and
141:46 - again we are spawning flags and ninja
141:48 - come on man spawn the B so that don't
141:52 - need to go and put all B's here it is
141:56 - one more B notice now please take a look
141:58 - at pay attention when the B comes out
142:00 - here it is notice it's gonna stop here
142:01 - and bam it's gonna start attacking you
142:03 - see did you see the B went to attack the
142:06 - player because it reached the middle of
142:09 - the screen so the else statement gets
142:12 - invoked if we did not attack we're gonna
142:14 - say attack started
142:15 - start the co-routine which will wait 1.5
142:19 - of a second it will rotate the beam and
142:22 - it will allow it to move and attack what
142:25 - happens when we are allowed to move an
142:27 - attack we will test on which side we are
142:29 - attacking if it's the left side we will
142:32 - go to the left side I'm gonna go here
142:34 - inside of our enemy prefabs here is our
142:37 - ninja enemy we will need to remove and I
142:39 - mean move script ik as well we don't
142:41 - need it on the ninja anymore we're gonna
142:43 - create his own script and going inside
142:46 - of our scripts folder enemy scripts I'm
142:48 - gonna right-click and create a new
142:50 - folder which I'm gonna call ninja
142:53 - scripts inside of the ninja scripts
142:56 - right-click create a c-sharp script and
142:59 - call it ninja script yes I know how
143:01 - creative I am really creative so moving
143:04 - back here prefabs enemy prefab ninja
143:08 - enemy here he is attach that ninja
143:11 - script on him double-click it and open
143:14 - it right here in monodevelop
143:17 - let me just find it here it is as always
143:19 - I don't even have to tell you anymore
143:22 - that I'm tagging the class with the
143:25 - class tag giving a little bit of space
143:27 - and we need a couple of variables so
143:30 - what do we need well we need a public
143:33 - float move speed which by default is 5
143:37 - we also need a private float camera Y
143:41 - which is the Y of the camera and a
143:44 - private bull attacked player like this
143:49 - now also what we need is a public game
143:52 - object so public game object which I'm
143:55 - going to call shuriken so what is this
143:58 - shuriken well it's the thing that we are
144:00 - gonna throw
144:01 - at our player so we need to create it
144:04 - which is or that is located right here
144:06 - in our sprites enemies and obstacles and
144:11 - here it is this is our shuriken we need
144:13 - to set the sprite mode here to multiple
144:15 - instead of single hit apply here at the
144:18 - bottom open sprite editor and click
144:21 - slice automatic slice unity will slice
144:23 - it for us and bam we are good to go so
144:26 - we have a slice here here here here here
144:29 - and we have one more right here and one
144:32 - more here so we have the animation for
144:36 - our shuriken I'm gonna hit apply and bam
144:38 - we are done so we need to now drag all
144:43 - of these animations so from 0 up to 7
144:47 - select all of these and drag and drop
144:49 - them right here in our scene view we
144:52 - need to go into the animations folder
144:54 - new folder and I'm gonna call this
144:56 - shuriken animations inside of this one
145:00 - simply call this animation shuriken
145:02 - so shariq an animation and I'm gonna hit
145:06 - save and bam here we are of course it's
145:10 - too large as you see here we're not
145:12 - gonna throw this mega shuriken
145:15 - Zillah on our ninja instead we are gonna
145:18 - well resize it first i'm gonna rename it
145:21 - here inside of our hierarchy panel to
145:24 - shuriken set the scale point to point to
145:27 - 4 X and the y and we are gonna apply a
145:31 - circle Collider so not a box Collider
145:34 - but a circle Collider 2d which you see
145:37 - this one right here
145:38 - and we are gonna apply a rigidbody 2d
145:42 - which is gonna be kinematic so here
145:44 - we're gonna set it to be kinematic and
145:47 - we are gonna tack our shuriken as the
145:50 - enemy so here I'm gonna tag him as the
145:53 - enemy tack now we do need to go here
145:58 - inside of prefabs enemy prefabs and drag
146:01 - and drop our shuriken because hey we
146:04 - need it as a prefab so we can select the
146:06 - ninja enemy now and here for the
146:08 - shuriken game object drag and drop the
146:11 - shuriken itself so here it is here is
146:14 - our shuriken and we have
146:15 - everything what we need to start coding
146:18 - our ninja so what do we need in the
146:20 - start function well in the start we need
146:22 - to calculate camera Y which is going to
146:24 - be equal to camera main
146:26 - transform.position
146:28 - dot Y minus 10 because while we are
146:32 - gonna use this to calculate when we are
146:34 - gonna deactivate our ninja below the
146:39 - update function we're gonna create a
146:41 - void move function so void move and here
146:44 - we are going to simply say vector3 temp
146:47 - is transform.position
146:48 - temp dot y not equals but y minus equals
146:53 - to the move speed multiply that with
146:56 - time Delta time and transform position
147:00 - is now equal back to temp this will move
147:02 - them ninja down as we already did before
147:05 - and we're going to call this function
147:07 - inside of the update now this is nothing
147:10 - new we did this already now below this
147:14 - one we're gonna create void deactivate
147:16 - which is also going to be called in the
147:19 - update function so avoid the activate
147:22 - like this open closed curly brackets
147:25 - call it in the update function like this
147:28 - and here we're simply going to test if
147:30 - the transform position Y which is the
147:33 - current Y position of the ninja enemy is
147:36 - less than the cameras Y position we are
147:41 - simply going to call our game object set
147:43 - activity false and bam we are done now
147:48 - inside of this one this move function we
147:52 - are going to detect if our so if
147:54 - transform dot position so that's
147:58 - position that Y is less than 0 so if
148:02 - it's less than 0 why am i testing if
148:05 - it's less than 0 well we have already
148:07 - explained our ninja is gonna be spawned
148:10 - somewhere around here on top and the
148:12 - middle of the screen is 0 so the middle
148:15 - of the screen is 0 so as soon as our
148:17 - ninja reaches the middle of the screen
148:19 - when the ninja so when the ninja reaches
148:23 - middle of the screen what we want to do
148:26 - is the following we want to tell
148:29 - if we did not attack the player so if we
148:33 - are on the middle of the screen and we
148:35 - did not attack the player if we are in
148:40 - the middle of the screen and and we did
148:47 - not attack the player what we want to do
148:50 - we want to attack the player so here
148:52 - we're gonna say attack player is true so
148:54 - that this if statement right here does
148:56 - not get executed again this right here
148:59 - again will calculate or we will know
149:01 - that we have reached the middle of the
149:05 - screen when we are less than zero or
149:07 - equal to zero we have reached the middle
149:09 - of the screen with our ninja and if we
149:11 - did not attack the player then we are
149:13 - gonna attack the player so attack is
149:15 - true and we're simply gonna call here
149:18 - instantiate our shuriken game object at
149:22 - our current position using quaternion
149:25 - identity so this is simply gonna
149:28 - instantiate the shuriken game object now
149:31 - we can test it out right now but we will
149:34 - have a funny effect will instantiate the
149:36 - shuriken but it will stay there as you
149:39 - will see now just in a moment let me
149:40 - wait for the ninja so the B has been
149:42 - spawn flagged now come on spawn the
149:46 - ninja everytime when you need something
149:47 - to be spawned it is not so here it is we
149:50 - have the ninja enemy notice now Babb UC
149:53 - ninja was spawned but hey he fired the
149:57 - shuriken this one also fired the
149:58 - shuriken but the shuriken stays at one
150:01 - place and by the way if I go here in
150:04 - assets prefabs enemy prefabs I'm gonna
150:06 - select the shuriken go in to the
150:08 - animator and here is the shuriken
150:10 - animation I'm gonna set it to be twice
150:12 - the speed so twice its own speed so that
150:15 - while the animation goes faster what we
150:18 - need to do now we need to go inside of
150:21 - our scripts enemy scripts and then ninja
150:24 - scripts we need to create a script for
150:27 - the shuriken itself so here I'm simply
150:29 - gonna say not JavaScript who uses
150:31 - JavaScript anymore I mean just kidding
150:34 - but anyways here we're gonna say
150:35 - shuriken script this one is gonna be
150:39 - attached on the shuriken itself so if I
150:41 - go back here
150:43 - so yeah get some errors here that are
150:46 - not wanted I'm just see if I can run
150:48 - yeah I will need to read restart my
150:51 - unity so just a second if I go here in
150:53 - prefabs enemy prefabs sure it can let me
150:57 - just add component sure you can script
151:00 - did I detach the shuriken scripts let me
151:04 - just see what this is new behavior okay
151:10 - come on let me go here in scripts and
151:13 - any scripts ninja scripts okay do we
151:19 - have this script not right now yeah you
151:22 - see this weird error for reason I left
151:25 - the video like this I don't know what
151:27 - just happened and why did I gut this
151:29 - error but anyways let me just go here
151:31 - too sure you can game object here he is
151:34 - so we have the shuriken add component
151:37 - sure you can script and we are good to
151:40 - go so if I run the game now let me just
151:42 - see if we can run it yes we can
151:43 - you saw that I have created that C sharp
151:46 - or JavaScript file and I have deleted it
151:49 - and afterwards we got that errors so
151:51 - yeah unities full of bugs as any other
151:54 - thing that you will find on the Internet
151:57 - so this is how you fix that particular
152:00 - team that's the reason why I did not cut
152:02 - that out from the video anyways moving
152:04 - forward here we have our shuriken script
152:08 - so what we want to do with our shuriken
152:10 - scripting well first we are gonna have
152:12 - here private bull attack right this is
152:15 - gonna determine how we are attacking
152:16 - from the left side or from the right
152:18 - side same thing as we did with our be
152:20 - exact same thing right here we need to
152:23 - know from which side is the shuriken
152:26 - fired because the ninja can be on the
152:28 - left or on the right so we need to know
152:30 - which side are we and where we need to
152:34 - go right below here we need a private
152:36 - float private float attack speed which
152:40 - is going to be equal to 6 f so this is
152:42 - the speed of the attack in the awake
152:46 - function action I'm gonna do that in the
152:47 - start I am gonna use transform rotation
152:50 - is gonna be equal to quaternion ealer
152:53 - and here I'm gonna pass
152:55 - vector 3 0 for the X 0 for the Y and for
152:59 - disease it's gonna be random so random
153:03 - that range from let's say 45 or negative
153:07 - 45 - 45 or we can test it out so you can
153:11 - either choose negative 45 or 45 or 45
153:15 - then negative 45 this is just you rotate
153:17 - the shuriken itself same thing as we did
153:21 - with the B so this is exactly the same
153:23 - thing that we're doing with the B right
153:25 - here just rotating it a little bit so
153:27 - that it is it's like towards the player
153:31 - so it's looking towards the player where
153:33 - we are actually attacking we are also
153:35 - below gonna calculate are we gonna
153:37 - attack from the right or from the left
153:39 - so we're gonna see here if our transform
153:41 - position X is greater than 0 which means
153:45 - that we are on the right side then we
153:48 - are attacking to the left so here we're
153:50 - gonna say attack right is gonna be equal
153:53 - to false else here our attack right is
153:58 - gonna be equal to true now what is this
154:02 - here we have already explained if the
154:04 - position X is greater than 0 that means
154:06 - we are on the right side because 0 is in
154:08 - the middle the positive side is on the
154:10 - right the negative side is on the left
154:12 - for the x axis for the Y positive is up
154:15 - and negative is down so if we are
154:18 - greater than 0 that means we are on the
154:20 - positive side which is the right side so
154:22 - we need to attack towards the left side
154:24 - which is logic because if I go here just
154:28 - so that someone but someone is confused
154:30 - so this is 0 right here this is the
154:33 - positive side on the X and if we are
154:36 - here so this is our ninja right here he
154:39 - throws the shuriken from here so this is
154:42 - the shuriken which means that this right
154:45 - here we are greater than our X is
154:48 - greater than 0 we are in the positive
154:49 - side so we need to go towards the left
154:52 - side right here which means attack right
154:55 - is false in this case otherwise if we
154:59 - are on the left so if our ninja is here
155:01 - you see if the ninja is here and he
155:04 - throws the shuriken from here like this
155:06 - we are going to this side which is the
155:08 - positive side
155:09 - so attack right will be equal to true
155:13 - because while we are going to the right
155:16 - side and also what we need to do is
155:20 - invoke a function called deactivate
155:23 - which we still did not create but we
155:26 - will and we're gonna invoke it in five
155:29 - seconds after we attack so what we are
155:32 - gonna do below here we are simply gonna
155:35 - create boy deactivate because if we
155:37 - don't have the function with that name
155:39 - BAM we will get an error and here is
155:42 - simply gonna call game object set active
155:45 - to false and bam we are done for
155:49 - deactivating the game object of course
155:51 - in the update we need to move our
155:54 - shuriken in the right direction so if we
155:58 - don't attack to the right so if we are
156:00 - attacking to the left side so if not
156:03 - notice that Commission mark which will
156:05 - make what's after in the opposite if
156:06 - attack right is false this will make it
156:08 - true which means if we are not attacking
156:11 - to the right meaning we are attacking to
156:13 - the left so left
156:15 - we are gonna say transform position
156:17 - minus equals vector three right
156:21 - multiplied with the attack speed
156:23 - multiplied with time dot Delta time and
156:27 - here in the else statement we are gonna
156:31 - do the opposite so here we need to go to
156:34 - the right side so here we're gonna say
156:36 - right and here we are gonna say plus
156:38 - equals because plus or positive is going
156:41 - to the right side minus or negative is
156:45 - going to the left side so I have
156:47 - explained that again I don't care if you
156:50 - are like okay you explained it two
156:52 - thousand times I'm gonna explain it to a
156:53 - thousand times anymore what did I just
156:55 - say anyways I'm just kidding but we are
156:58 - done with this we can go here and we can
157:00 - now test it out so if I hit the Run
157:03 - button let us just hope that the ninja
157:07 - will be spawned very soon so we have the
157:09 - B clone flag
157:10 - come on waiting for that ninja we have
157:12 - the tree we have the tree again tree
157:15 - again here is our enemy ninja finally
157:19 - notice now when the ninja comes here is
157:21 - you see he threw that shuriken on us he
157:25 - threw that shrieking come on one more
157:27 - please one more one more one more where
157:29 - is the ninja man when you need so here
157:31 - we have one more ninja wait for it wait
157:33 - for it BAM you see he threw chicken why
157:36 - don't we get BAM he threw the shuriken
157:39 - and also notice these shuriken x' they
157:41 - are being deactivated so they are here
157:43 - you see shuriken one is here let me see
157:45 - the top one so the top one is here you
157:48 - see where he is he has been deactivated
157:50 - knows this one is right here if I can
157:54 - run the game cmp deactivate yeah here he
157:56 - is he just got deactivated same as the
157:59 - BCB when they get at the same position
158:01 - because I'm leaving the same number of
158:04 - time for them you see here is the
158:06 - shuriken here it is here it is here it
158:08 - is and bam he is deactivated take the
158:11 - animation panel and put him right here
158:14 - and we're gonna select the player but
158:16 - before that let me just go in sprites
158:18 - and then play here and here we have the
158:20 - falldown animations which are gonna be
158:22 - the player dead animation so select the
158:25 - player in the hierarchy and here create
158:28 - a new clip and I'm gonna go in
158:30 - animations and then player animation
158:33 - here here it is and I'm gonna call this
158:36 - one player died right so player has died
158:40 - from the right side so we're gonna play
158:42 - that animation and I am gonna put this
158:45 - right here falling down this one right
158:48 - here and this one I'm gonna put it right
158:49 - here something like this let me just go
158:51 - here inside of our animation or actually
158:54 - move the animation panel and select the
158:56 - player so now you see this is what we
158:59 - want to achieve now in regards to the
159:03 - position of the player I am gonna go on
159:06 - frame 16 so something like this frame 60
159:09 - and I'm gonna hit the recording button
159:12 - set the player at Y or actually not y
159:16 - equal to 0 Y will be 1 but X will be
159:19 - equal to 0 something like this and I'm
159:21 - gonna say Y well down like this
159:24 - something like this and let me see this
159:28 - animation uh so when we play the
159:30 - animation
159:32 - okay this is what we want so this is
159:34 - what do you want simply player falling
159:37 - down it's like when he gets hit he will
159:39 - simply fall down and we'll play the
159:41 - sound and so on and so forth so this is
159:44 - what we want exactly if I go and put
159:48 - this animation panel right here I will
159:52 - need to create player diets from the
159:53 - left side so create a new clip is going
159:55 - to be player died left and I'm gonna hit
159:58 - enter attached the same animation so
160:01 - fall down fall down 0 1 and fall down 0
160:04 - 2 and let me just take the clip so
160:08 - something like this go back here now
160:11 - what is the catch with this animation
160:13 - while the catch is that we are gonna set
160:16 - the player to be at this side and this
160:19 - is his scale right here we're gonna go
160:23 - on frame 60 now and we are gonna send
160:26 - the player well to fall down and let me
160:29 - just move him down something like this
160:31 - and voila
160:32 - we're good to go this is for his left
160:35 - animation because when he dies from the
160:36 - left side he needs to fall from the left
160:38 - side we don't want him to fall well he
160:42 - dies from this side so when he is on the
160:45 - left so he's here and we played the
160:46 - player died right so player starts
160:49 - falling down from the right side that's
160:52 - why we have created these two animations
160:53 - so something like this so what we need
160:57 - to do now well we have the player when
161:00 - we select him right here you see in the
161:01 - animator he has player died right and
161:04 - player died left as you can see here
161:06 - died right died left here he is and now
161:10 - we can go into some scripting so right
161:13 - here on the top inside of our player
161:14 - script which is this one right here
161:16 - below our private ball jump we need a
161:19 - couple of more variables so we need a
161:21 - serialized field which is going to be
161:23 - our audio source which is going to be
161:25 - audio kill to play the kill animation
161:28 - and audio jump and we also need a
161:32 - serialize field
161:34 - this is gonna be private audio clip
161:36 - which I'm gonna call dead sound and we
161:40 - also need a private bull is alive which
161:43 - by default is equal
161:45 - to true this is a lie will determine if
161:47 - the player is alive or not
161:49 - before we start attaching these
161:51 - components in regards to is alive you're
161:54 - gonna take all of the code in the update
161:56 - function and we're gonna test if is
161:59 - alive so if the player is actually alive
162:01 - then we are gonna well call all of the
162:04 - code right here and also in the jump
162:08 - function right here if the player is
162:10 - alive so is alive come on is alive so if
162:17 - the player is alive then we will be able
162:20 - to jump in here if not is so excuse me
162:24 - for this one if the player is alive then
162:26 - we'll be able to jump if the player has
162:27 - died then no jumpy jumpy for the player
162:31 - and let us attach these components now
162:33 - so we have these audio sources and the
162:36 - audio clip if we go here select our
162:39 - player we will need to attach few audio
162:42 - sources so audio source one and let me
162:45 - just move the script down
162:47 - yes break the prefab I don't care
162:49 - because we will reconnect it again add
162:51 - another audio source and move the
162:53 - component down so uncheck play on awake
162:57 - for both of these and we will for the
163:00 - first one so here we have audio source
163:02 - we are gonna attach this sward slash and
163:06 - for the second audio we're gonna attach
163:09 - jump new and we will drag and drop them
163:13 - so the sward slash is gonna go right
163:15 - here audio kill this is the smart slash
163:17 - and jump is gonna be under jump so come
163:20 - on why is it not giving me come on
163:23 - why aren't you scrolling down okay so
163:26 - audio jump is gonna be here and for the
163:29 - dead sound you're gonna play hurt too so
163:32 - attach these like this and then hit
163:34 - apply so that these changes apply to the
163:37 - pray prayer player player player ok
163:41 - player player testing I can now say
163:43 - player to the player prefab so again the
163:48 - Swart slash audio source will go under
163:51 - audio kill and jump new audio source
163:54 - will go under audio jump and for the
163:57 - death sound we are gonna play
163:58 - hurt too we will also go here and when
164:01 - we jump so after we say jump is equal to
164:04 - true we're gonna call audio jump and
164:06 - we're gonna say play since we play the
164:09 - jump sound we're gonna do the same exact
164:11 - thing right here in the jump function
164:13 - and that will be that in regards to you
164:17 - well what we did so far what we need to
164:20 - do now is that we need to create your
164:22 - void ontriggerenter 2d to detect
164:26 - collision between the player and other
164:28 - game objects and collision 2d takes or
164:31 - ontriggerenter takes a collider which
164:33 - I'm gonna call target not try it but
164:35 - target like this and now we are gonna
164:39 - test some things right here if we
164:40 - collide with some game objects if we
164:43 - have jumped so if we have jumped we are
164:46 - in the air we are untouchable we can
164:48 - kill the player we can actually kill the
164:50 - ninja enemy ninja we can kill his
164:52 - shuriken we can kill the bee we can kill
164:54 - everything that we touch while we jump
164:57 - but if we don't jump if we are not
165:00 - jumped like this then we will die but if
165:02 - we have jumped and if the target dot tag
165:06 - is equal to the enemy but we have jumped
165:09 - we are in the air we can kill our
165:11 - enemies so we can say target that game
165:13 - object that said active is false and we
165:17 - are gonna play audio kill so how do you
165:21 - kill that play to play the audio kill
165:24 - sound this is if we have jumped because
165:26 - when we are in the air ninja is you know
165:29 - doing that backflip or the flip rotating
165:32 - and then he throws his knife and kills
165:35 - everybody so yeah that's the point of
165:37 - the game so when the ninja is in the air
165:38 - while he has jumped we can kill any
165:41 - enemy but else if we did not jump and
165:44 - our target attack is equal to the enemy
165:48 - so if we are not we did not jump and the
165:51 - enemy touches us we're gonna call a
165:53 - function called player died which we
165:56 - still did not create so we're gonna
165:58 - create it right here so void player died
166:01 - like this just so that we have the
166:03 - function for the reference and right
166:06 - here below if our target dot tag is
166:09 - going to be equal to the enemy
166:11 - we are also dead and we are gonna call
166:14 - player died function so that we will die
166:17 - of course and we will never come back
166:19 - and you can come back from the dead to
166:21 - haunt me anyways this is the point of
166:24 - the game in the player died function
166:26 - we're gonna call here audio kills audio
166:30 - kill that clip is gonna be equal to our
166:32 - death sound and we're gonna call play
166:34 - this will change to the dead sound of
166:36 - the players so clip is the actual clip
166:39 - this one right here that we have
166:40 - attached let me just go here come on
166:42 - sometimes it does not allow me to scroll
166:44 - so you see that audio clip that is
166:46 - attached in the audio source we have
166:47 - sword slash for this one and for this
166:49 - one we have jump new now we also have
166:52 - this hurt or our dead sound so when the
166:55 - player dies we will play that dead sound
166:57 - and in order for us to play that that's
167:01 - I mean we need to change the clip to our
167:03 - dead sound and then we are gonna play it
167:06 - is alive is now false which means that
167:09 - we're not be able to jump so we'll be
167:11 - false this right here will not be
167:13 - executed and this right here will also
167:15 - not be executed because well we have
167:17 - died and well yeah we cannot jump when
167:21 - we are dead
167:22 - if the transform that position that X is
167:26 - greater than 0 we have died from the
167:28 - right side so we need to fall from the
167:31 - right side so we're gonna see here nm
167:33 - play the player died right animation
167:38 - like this else we have died from the
167:42 - left side so here we're gonna say player
167:43 - died left and voila we are good to go
167:48 - here we're gonna call our game play
167:50 - controller so game play controller to
167:53 - call his instance to say the game is
167:56 - over to share the game over tab but we
167:58 - are still not done with that and we will
168:00 - simply say time that time skill is 0 to
168:04 - stop our game so what did we do well
168:07 - created those two animations in this
168:09 - video which we already saw so created
168:13 - those two animations player dead or
168:14 - player died from the right and player
168:16 - died from the left side and here in our
168:21 - ontriggerenter if we have jumped which
168:23 - we will determine you see when
168:24 - jump so here jump we will see jump is
168:26 - true while that is true and we touch one
168:29 - of the enemies we will kill the enemy
168:30 - because we have jumped we will kill the
168:32 - enemy else you see here if else else if
168:36 - we did not jump and we touch the enemy
168:38 - then we will die also when we touch the
168:40 - tree no matter if we have jumped or not
168:42 - we will die so let's test that out and
168:46 - if I go here console clear let me just
168:49 - lower the volume a little bit because
168:51 - you're gonna hear some sounds notice not
168:53 - when we jump we hear the sound and
168:56 - notice now when any enemy comes here we
168:59 - can kill for example this squirrel can
169:03 - we kill the squirrel no we cannot
169:04 - because we did not tag the squirrel so
169:06 - in prefabs and any prefabs flag squirrel
169:09 - is not tagged with the enemy tagged yeah
169:11 - it's a good idea to tag them so bee is
169:14 - tagged with enemy flag don't tag the
169:16 - flag flag is not important
169:17 - squirrel will be tagged with the enemy
169:19 - ninja enemy is the enemy shuriken is
169:22 - also and tree will be tagged as the
169:24 - enemy tree so now we can test it out so
169:27 - notice now when we jump and we touch the
169:29 - squirrel or the ninja only the tree can
169:32 - kill us if we jump so the tree we're not
169:34 - gonna touch we need to avoid the tree
169:35 - you see I have jumped and killed the
169:38 - ninja so I have jumped and killed the
169:40 - ninja we heard the sound you see now
169:42 - when the bee comes close to me notice
169:43 - now damn I have killed it I have to kill
169:46 - the squirrel also so let's die and see
169:48 - if it's actually working so yeah we have
169:53 - died now what is the problem here as you
169:56 - can see you see the animation well the
169:58 - problem is that we need to select the
170:00 - player since we set here timescale tb0
170:03 - when the time scale is zero
170:05 - physics calculation will not work
170:08 - animations will not work as you just saw
170:10 - but we can fix the thing with the
170:12 - animation and in order to do so select
170:14 - the player and in his animator component
170:18 - you see the animator right here you see
170:20 - the update mode is set to normal so we
170:22 - have the update mode to dropdownlist set
170:25 - it to on scaled time this means it will
170:28 - not be affected by timescale even if the
170:31 - time scale is zero the animation will
170:34 - still play till the end and let's test
170:36 - it out actually and see if
170:37 - actually works I'm saying actually too
170:40 - many times but let's hope that this
170:44 - squirrel will kill me so the squirrel
170:46 - did not give me yeah but you see the
170:50 - tree have has killed me but you see the
170:53 - problem you see what's the problem well
170:54 - the problem is that our animation is
170:56 - looping so go in to the animator panel
170:58 - select the player died right
171:01 - double-click it uncheck the loop time
171:03 - player died left also double-click it
171:07 - uncheck the loop time so for both of
171:08 - these animations simply double-click
171:10 - them loop time will be checked you need
171:12 - to uncheck it click them loop time will
171:14 - be checked on check the loop time let's
171:18 - test them one more time and hoping that
171:20 - everything is ok so now we have the
171:22 - player here we have the ninja enemies so
171:25 - let's hope that the ninja enemy again
171:27 - and Jeremy's here and I've just avoided
171:30 - these obstacles and bam you see I have
171:32 - died and I have fallen down and the game
171:35 - has stopped the animation is not playing
171:37 - anymore so on and so forth but we see
171:41 - that everything is working for death
171:44 - we're gonna right click on the canvas
171:45 - and we're gonna create a UI panel so
171:48 - we're gonna create a panel that we are
171:51 - gonna name score panel or score
171:53 - background which is gonna have source
171:56 - image score background so here it is
171:58 - this is the score background image let
172:01 - me just select here in the image
172:03 - property the color and I'm gonna set the
172:05 - Alpha to full so 255 because I want it
172:10 - to be visible and not transparent
172:12 - let me change here so if I go here and
172:15 - set it in the middle so this is for the
172:18 - anchor set it at the middle and I'm
172:19 - gonna change the width to 225 change the
172:24 - height to let's say 144 this is gonna be
172:27 - our score panel right here that you see
172:29 - I'm also gonna right-click and create a
172:32 - UI text below it and for the text this
172:37 - is where we are actually gonna display
172:39 - our score text and we're gonna call it
172:41 - score text and I'm gonna set the width
172:45 - of the score text you
172:47 - well 225 hike is gonna be 144 and I'm
172:52 - gonna set the alignment at the middle
172:55 - center I'm gonna change the color of the
172:58 - text to white you see all of these
173:00 - properties are in the inspector panel
173:02 - when you select the text itself set the
173:06 - font size to 48 actually could be 50 so
173:11 - 50 for the font size and the beginning
173:13 - score will be 1 let me just take a look
173:15 - at it somewhere around here I will need
173:17 - to put it a little bit down so if I
173:20 - select this corner I just zoom in here I
173:22 - need to put it something like this yeah
173:23 - so that it will be in the middle so
173:26 - where is my score here it is I cannot
173:29 - see it because of the camera so I'll
173:30 - move it upwards here it is something
173:33 - like this for our scores so this is what
173:37 - we want let me just move the score a
173:39 - little bit further down let's say
173:41 - negative 30 on the Y and then we are
173:43 - done now what we want to do is animate
173:47 - the score background coming in so for
173:51 - that we are gonna set the score back or
173:54 - on X 650 initial height you see here
173:58 - initial height or where it is and inside
174:01 - of our animations I'm gonna create a new
174:03 - folder for the score background
174:07 - animation capitalize a animation like
174:12 - this so I will need to go into the
174:15 - animator
174:16 - select the score background hit create
174:18 - and save it in score background
174:21 - animation so here score BG Adam hit
174:26 - enter
174:26 - go on frame 60 right here hit the
174:30 - recording button and I'm gonna put it
174:32 - down at 310 for the y-axis so this is
174:37 - his animation this right here so when we
174:39 - start our game we will see it animating
174:41 - and we will see it animating again and
174:43 - again and again because it loops so we
174:46 - need to go in to the animator himself
174:48 - here he is
174:49 - double click it uncheck the loop time
174:53 - and let me check it again and I'm gonna
174:54 - see the speed the initial speed is gonna
174:56 - be 0.5 so notice here when we run our
174:59 - game
174:59 - the score is slowly gonna start to calm
175:03 - down as we just saw the problem is that
175:05 - the score is not moving at all
175:08 - we have died by the way so the score is
175:11 - not moving at all or actually changing
175:13 - so how can we change the score well for
175:16 - that always there is a script to the
175:18 - rescue so new folder' game manager
175:22 - scripts here inside of our game manager
175:24 - folder I am gonna create a new C sharp
175:27 - scripts I'm gonna call game play
175:29 - controller who is gonna control our
175:31 - gameplay I will create an empty game
175:34 - object here let me put it 0 0 0 for x
175:37 - y&z this does not matter at all I just
175:40 - like it like that so game play
175:44 - controller and attach it on the game
175:47 - play controller game object so now we
175:50 - can start to code our final well lines
175:55 - of code and here tag the class as always
175:59 - hold enter to give a little bit of space
176:02 - so what do we need
176:05 - well we need a public static game play
176:08 - controller instance which we are gonna
176:11 - call here to create that instance so
176:13 - here we're gonna say void make instance
176:16 - and here we're gonna test if our
176:19 - instance is equal to null that means
176:21 - that we need to set the instance to be
176:23 - equal to this so here I'm gonna say
176:26 - instance is equal to this and this is
176:28 - gonna be called in the awake function so
176:31 - make instance I've talked about this
176:33 - numerius of times what is this doing how
176:37 - can we control sing or create
176:38 - Singleton's so on and so forth so you
176:40 - can watch other videos for that I'm not
176:42 - gonna react splain myself here we need a
176:46 - public text but in order to use it he is
176:48 - located under unity engine that you I as
176:51 - you can see here so we need to type
176:53 - above here using unity engine dot you I
176:56 - which now allows us to type private text
177:00 - and I'm gonna call it score text so
177:04 - score text like this we also need a
177:07 - private integer for score this is well
177:09 - the integer that's gonna count our score
177:13 - and voila that is that so what do we
177:15 - need to do now is that we need to well
177:18 - calculate the score and we are gonna do
177:21 - that in a function that is called count
177:23 - score which is going to be ienumerator
177:26 - so ienumerator which is a KO routine
177:28 - count score so count score like this we
177:33 - are gonna do the following yield return
177:36 - new waitforseconds and we're gonna wait
177:40 - 0.1 seconds so one tenth or yeah one
177:44 - tenth of a second and then we're gonna
177:46 - call score plus plus to increment the
177:49 - score incrementing the score and now
177:51 - we're gonna call score text dot X is
177:54 - gonna be equal to you score to string
177:58 - because we need to convert this integer
178:00 - score to string because while our text
178:03 - only accepts strings and we need to call
178:07 - here start co-routine count scores it we
178:10 - start counting our score and don't
178:13 - forget the parentheses here now we need
178:16 - to when we start our game so here in our
178:19 - void start function we need to get a
178:21 - reference to the score text itself so we
178:25 - need to see here score text is gonna be
178:28 - equal to game object find the game
178:30 - object with the name score text now this
178:33 - right here the score text need to make
178:35 - needs to match up with this name right
178:37 - here so here it is make sure that these
178:40 - names are the same so find the game
178:43 - object with the name score text and get
178:46 - the component text from it and voila
178:49 - simple as that and afterwards simply
178:51 - start the kill routine to count our
178:54 - score so this is the KO routine that
178:57 - we'll start counting our score and well
179:01 - when we run our game the KO routine will
179:05 - start to count the score which we can
179:07 - test right now if we go here in unity
179:09 - hit the play button just wait for unity
179:13 - to load notice now it is counting the
179:16 - score but why what what what let me just
179:20 - go here set it that's right now so if I
179:24 - hit the play button
179:26 - yeah now everything is okay just set the
179:29 - score text well position Y at 0 so 0 for
179:33 - the X 0 for the Y and you see now it is
179:36 - counting the score but when we die you
179:38 - see here when we die what we want to do
179:41 - we want to call here as you already saw
179:46 - we're on a call here our gameplay
179:48 - controller instance that the game is
179:50 - over but before the game is over we need
179:53 - to create the game over panel which is
179:56 - gonna well be the game over panel so
179:59 - here I am gonna go back in unity editor
180:01 - I'm gonna create a new panel so you i
180:06 - panel here he is set the background as
180:09 - the score background again set the Alpha
180:13 - at 255 set the anchor in the middle so
180:17 - the width of this one is gonna be 385
180:21 - the height is gonna be 297 and this is
180:26 - gonna be our end and also and panel and
180:31 - for our end panel we also need to add UI
180:36 - text now this text is gonna display the
180:39 - final score so I'm gonna name it final
180:42 - score and the width of our final score
180:46 - is gonna be 270 the height is gonna be
180:49 - 99 I'm gonna set his Y position at 50 I
180:54 - am gonna change his font size to 40 not
180:58 - 50 but 40 I'm gonna see here 1 which is
181:02 - not important and I'm also gonna set the
181:04 - alignment at the middle so going from
181:08 - the left side so left middle and I'm
181:11 - also gonna change the color so here I'm
181:13 - gonna change the color and voila we are
181:17 - good to go let me just take it take this
181:19 - dude so here middle I think everything
181:22 - is okay yeah everything should be okay
181:24 - yeah this is it so here I'm gonna say
181:27 - height which is our final score let's
181:30 - say 1000 and below these two we are
181:34 - gonna attach our buttons so I'm gonna go
181:39 - here create a UI
181:40 - button so one button we have here which
181:43 - I'm gonna remove the text from this is
181:45 - gonna be our again button which will
181:47 - prompt us to play the game again so play
181:51 - the game again 145 for the width and the
181:54 - height I'm gonna say 64 and I am gonna
181:57 - position this one at negative 75 for the
182:01 - X and the y is gonna be negative 32 and
182:05 - here let me just go inside of my sprites
182:09 - backgrounds and buttons here it is our
182:11 - again button let me just select it and
182:13 - drag and drop it right here and bam this
182:15 - is our again button I'm gonna duplicate
182:17 - this one so this again is duplicated I'm
182:20 - gonna call the new one menu and let me
182:23 - just find our menu it's somewhere around
182:25 - here so here it is now the menu I will
182:27 - need to go into our sprite editor and
182:30 - slice it slightly do I need to slice it
182:33 - here actually revert let me just go here
182:37 - and set it to be multiple apply sprite
182:40 - editor and I'm gonna slice it like this
182:43 - just so because the image is distorted a
182:46 - little bit you see the image is not that
182:48 - good but if the image is good you don't
182:50 - need to do this anyways for our menu
182:52 - here I am gonna attach the menu what am
182:57 - I doing here so yeah here it is
182:58 - menu let me attach it right here and
183:01 - back here we have our menu now the menu
183:04 - is again gonna be at negative or
183:07 - actually positive 75 am I gonna leave it
183:11 - like this actually yes I will leave it
183:13 - like this I don't care I just don't care
183:16 - anyways I'm just kidding but this is
183:19 - what we want now I am also gonna
183:23 - creative animation for our panel so our
183:27 - end panel is going to be at 704 the
183:29 - height initially so 704 the height
183:31 - initially go here into the animation
183:34 - create a new animation in animations I'm
183:38 - gonna create a new folder and panel
183:41 - animation hit create and here I'm gonna
183:44 - see and panel animation and voila here
183:48 - we are now where am I gonna put this end
183:52 - panel so let's go on frame 6
183:54 - first frame 60 hit the recording button
183:57 - y-position 77 and this is it so this is
184:01 - for our panel you see Babb and it is
184:04 - going here now if we are smart which we
184:07 - are we're gonna learn from our mistakes
184:09 - so we forgot to uncheck the loop for the
184:10 - score background we are not gonna forget
184:13 - that for the end panels so uncheck the
184:15 - loop time I'm also gonna right-click and
184:18 - create an empty state here and I'm gonna
184:20 - call this one idle and I'm gonna set so
184:24 - right-click on the idle and click this
184:26 - set as default layer' state because we
184:28 - don't want to play the ant panel
184:30 - animation until we need to do so and
184:33 - this end panel I'm gonna call it here
184:35 - ant panel so this is how I'm gonna call
184:37 - the enemy should make sure that you
184:39 - don't forget this because we will need
184:41 - to call the animator of the end panel so
184:46 - ant panel here it is to play that
184:48 - animation we don't want to play it right
184:50 - away because well it makes no sense to
184:52 - play the animation right away so right
184:54 - click create an empty state which is
184:56 - this one name in idle right click on the
184:59 - state and click set as layer default
185:02 - state if I go back in my script here I
185:05 - need a couple of more game objects so I
185:07 - need a public game object which I'm
185:09 - gonna call score panel and I need a
185:13 - public text which is gonna be our end
185:16 - score and a public animator and panel
185:22 - Adam I need all of this and we need to
185:25 - drag and drop them so go back in our
185:27 - unity select the game play controller
185:30 - for the score panel select the score
185:33 - background for the final or end score
185:36 - select the final score right here and
185:38 - for the end panel and I'm select the end
185:41 - panel right here so what we need to do
185:48 - now well we simply need to create a
185:50 - public function so public void game over
185:54 - what do we want to do here well simply
185:58 - we're gonna call our score panel set act
186:01 - if T Falls to deactivate our score panel
186:04 - which is well this the one that is
186:06 - counting the score
186:07 - this one when we run the game so this
186:09 - panel right here we want to deactivate
186:11 - it we don't want it to be there when the
186:13 - player dies and then we're gonna call
186:15 - our end score and we're going to say dot
186:18 - text is going to be equal to height like
186:20 - this plus our score to display the final
186:23 - score and finally end panel Adam dot
186:28 - play not playback time but play the
186:31 - animation with the name and panel and we
186:35 - are calling this right here as you can
186:38 - see so we're calling this right here and
186:41 - simply uncomment this line of code now
186:44 - out let's test it out and see if it
186:47 - actually works so when I hit the play
186:48 - button let us just wait for us to die so
186:51 - here we have our panel here we have our
186:53 - B we have the ninja enemy let's hope
186:56 - that somebody will kill us from it okay
186:59 - then we have died let's wait for the end
187:02 - score panel it's not appearing because
187:04 - we are or I am you are not you're smart
187:06 - I'm stupid because I forgot to select
187:08 - the end panel set the update mode to
187:11 - unskilled time because we are setting
187:13 - time that scale or time scale you see
187:16 - here to 0 so we need unskilled time for
187:20 - the animator let's try this again so
187:25 - let's wait for us to die here we have
187:27 - the flag we have the B come on let's sum
187:31 - let us somebody kill us where is the
187:33 - tree here it is and then we have died
187:35 - you see height is here now we have our
187:39 - problem here we have the animations
187:42 - playing too fast so I'm gonna say here
187:44 - 0.5 so point 5 for the animation we see
187:47 - that the animation is there I set point
187:49 - 5 which will make the animation go
187:51 - slower
187:52 - now before we proceed to test that out
187:55 - again we have two buttons and I'm gonna
187:58 - create functions that we're gonna add to
187:59 - those buttons so we are gonna have
188:01 - public void again to restart the game
188:05 - but before we restart the game it's a
188:06 - good time to set it's a good time it's a
188:09 - good idea to test to set the time scale
188:11 - back to 1 and we're gonna call the scene
188:14 - manager so right here on the top type
188:17 - using Unity engine scene management
188:20 - which is going to allow us to use our
188:22 - scenes and move from one scene to
188:25 - another this is how we actually load
188:26 - levels so here we're gonna call the
188:29 - scene manager that load scene and I'm
188:33 - gonna call here again scene manager that
188:36 - get active scene that name which is
188:40 - gonna reload the same scene and here
188:42 - we're gonna have a public avoid menu
188:44 - which is gonna bring us back to the main
188:46 - menu and simply here we're gonna see the
188:49 - same thing time that time skill is one
188:51 - and scene manager that not seen but
188:55 - scene manager that load scene we are
188:59 - gonna load the main menu scene so before
189:04 - we proceed to test it out again we will
189:06 - need to go here and select again and the
189:09 - menu button so again in menu button
189:11 - click the plus button right here on them
189:14 - drag and drop the gameplay controller
189:16 - here and for the again I'm gonna select
189:19 - again for the menu I am gonna select the
189:23 - menu not not game over but man you come
189:26 - on here where is the menu I've talked
189:28 - about this to marys of times this is how
189:30 - we can attach a game object to a button
189:34 - and make it execute a function from one
189:36 - of the scripts attached on that game
189:38 - object in our case we have again and we
189:40 - have the menu so as you can see here on
189:43 - the again we drag and drop our gameplay
189:45 - controller here then from the drop-down
189:47 - list we select the functions that are
189:49 - attached on that game object so we have
189:51 - the game play controller and we have
189:52 - here a list of functions we have our
189:54 - function called again we select it which
189:57 - means when we press the again button BAM
190:00 - this again right here function will be
190:02 - executed now we will have one problem
190:04 - that we will solve in a moment but let
190:07 - us wait for our player to die let's hope
190:11 - so we have the B we have the ninja enemy
190:13 - command come on where is some of these
190:16 - ok BAM we have died you see here is our
190:19 - height if we press again BAM we reload
190:23 - the same well we reload the same scene
190:27 - if we go back here or actually let me
190:29 - just wait for it to die if I try to load
190:31 - the main menu yeah may
190:33 - I cannot load it and we see we have a
190:35 - problem what is the problem here
190:37 - well the problem is that we did not add
190:39 - it to the build what is the build well
190:42 - let me go here singh's main menu and go
190:46 - under file build settings and here we
190:50 - need to click Add open scenes this will
190:52 - add the current scene to the build where
190:54 - you are so we have the main menu now go
190:56 - into the gameplay and also click Add
190:58 - open seams and now we will be able to
191:01 - load one scene and go from one scene to
191:03 - another so if you don't do this we will
191:06 - not be able to go as you just saw we
191:09 - clicked on the manual it did not bring
191:11 - us there because we did not add that
191:13 - scene to you the manual I've talked
191:14 - about this also in my previous tutorials
191:17 - and I talked about this in my courses
191:19 - now for the main menu here we also need
191:21 - to attach a script so that we can click
191:23 - this play button so in the scripts I'm
191:25 - simply gonna right click here c-sharp
191:27 - script main menu script and we can
191:31 - create an empty game object so here I
191:33 - can create an empty main menu controller
191:37 - like this attach the main manuscript on
191:41 - the main menu controller come on man
191:43 - attach it double-click it we don't need
191:46 - to give a little bit of space because
191:47 - here we're only gonna have a public void
191:50 - and here I'm gonna say play game and we
191:55 - do need to type using Unity engine scene
191:58 - management because we are gonna call
192:00 - here scene manager dot C manager load
192:07 - scene game play like this so we need to
192:11 - go back in unity select our play button
192:15 - so play BT and click the plus button
192:17 - here attach the main menu controller and
192:21 - then go here and select the play game
192:24 - which will allow us to play our game
192:26 - from the start so if we hit the play
192:28 - button we have a nice main menu
192:29 - everything is animating we click on play
192:31 - we go here and start playing our game
192:33 - let me just lower the volume a bit jumpy
192:36 - jumpy jumpy jumpy ninja I will name this
192:39 - game probably jumping in just so we have
192:40 - here kill the squirrel kill the ninja
192:44 - and his sure it can't kill the squirrel
192:46 - again
192:46 - kill the squirrel again and died and bam
192:50 - we have reached the height of 50 or 152