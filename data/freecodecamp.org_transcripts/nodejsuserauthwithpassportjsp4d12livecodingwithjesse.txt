00:08 - hey everybody welcome to live coding
00:11 - with Jesse
00:12 - I'm so sorry about starting this late I
00:16 - can see you've all been busy in the live
00:20 - chat so hopefully there was some good
00:23 - conversation going on I have not had a
00:27 - chance to read any of this so I'm
00:33 - scrolling through it now all right so I
00:40 - was as supposed to have a very brief
00:44 - conversation and it turned into a almost
00:47 - two-hour meeting so that's why I started
00:50 - late I thought I would have plenty of
00:52 - time to get started or to get ready for
00:56 - the stream and stream but it didn't
00:57 - happen like that so I guess as a as
01:07 - asking how the meetings were actually
01:09 - the meetings they there are basically
01:16 - about all the projects that we're going
01:17 - to be doing for the next year I
01:19 - shouldn't say all of them I'm sure some
01:21 - other things will come up but I have a
01:24 - much better idea about what I'll be
01:27 - working on and how that that main
01:32 - website so mentioned a few days ago the
01:34 - main University website franciscan CD
01:37 - you will be completely redoing that
01:40 - front end and back end I have a much
01:45 - better a clearer picture of what's
01:48 - wanted for that and what's what the
01:51 - design is going to be like so I'll be
01:56 - sharing that with you in future streams
01:59 - but I know I have we sketched out some
02:04 - things on a whiteboard and I took a
02:05 - picture of it so I wouldn't forget so
02:07 - I'll be will be working on it but it was
02:13 - a long
02:13 - but it did we sorted quite a few things
02:17 - out one thing that we are going to be
02:19 - working on within the next two weeks or
02:22 - so and we'll see maybe I'll do it on a
02:24 - stream maybe I won't it depends on if
02:26 - you are interested we're going to try to
02:28 - take so the main website right now has
02:31 - an event system that's really hard to to
02:36 - work with in terms of adding the content
02:38 - for the events so we're going to take I
02:43 - may as well give you something to look
02:45 - at what we're talking about this to you
02:50 - all right so what we're gonna do not in
02:54 - this stream but in the next week or so
02:57 - we're gonna redo the events so that
03:00 - we'll use some third-party systems so
03:03 - here's here's right now how the events
03:05 - show up and there are other places
03:09 - throughout the website that these events
03:10 - show up for now I think we'll just worry
03:15 - about this spot but we're going to
03:17 - remove all of this and replace it and
03:21 - instead we're going to pool events from
03:24 - some other systems so it may be a Google
03:26 - Calendar it might be Eventbrite it may
03:29 - be a custom post type from WordPress
03:32 - installation however so someone else in
03:37 - my department is in charge of entering
03:39 - in the data for these events whatever
03:42 - they decide is going to be the best
03:43 - system for them that's going to you save
03:47 - them as much time as possible
03:49 - we're going to work with that system so
03:51 - I don't know what it'll be right up you
03:53 - know right away but it's going to be
03:54 - something that definitely it has to have
03:56 - an API so we're going to replace all of
04:01 - this with whatever that system is that's
04:05 - going to hopefully free up some time for
04:07 - this other person and they're gonna
04:09 - learn react they're actually going to do
04:12 - a clone of our project one the the cata
04:14 - catechol Institute website they're going
04:16 - to do a clone of that and they're going
04:18 - to use that for another University
04:21 - website and in the process hopefully
04:23 - they're going to learn react so if
04:24 - somebody else in
04:25 - department that can can do react sites
04:28 - so that's right so my job in the next
04:32 - week or two is to free up their time by
04:34 - making this event system a lot easier to
04:37 - work with
04:37 - so that's coming if you're interested in
04:41 - that then let me know I'll try to stream
04:46 - when we do that so let me know we'll see
04:51 - I'm still undecided as to whether it's
04:54 - it'll be worth it to stream okay so
04:58 - today I don't know what did I say we're
05:02 - gonna do today
05:03 - Passport yeah passport j/s okay I'm just
05:17 - briefly checking the live chat see if
05:21 - there's anything I should address right
05:23 - away before we get started okay I'll
05:31 - probably be probably missing a lot of
05:33 - things since I'm skimming through so
05:34 - quickly but it looks okay it doesn't
05:39 - look like there's is anything here okay
05:44 - so here's what I'm going to do I'm gonna
05:46 - start my 25-minute Pomodoro timer if
05:48 - you've asked the question I will get to
05:51 - it after we do our first coding session
05:53 - of 25 minutes so I'll take a five-minute
05:54 - break and then I'll start going through
05:56 - questions no matter what at the end of
05:59 - the stream I'll go through all the
06:00 - questions so please don't feel like
06:02 - you're being ignored if I haven't
06:04 - answered your question yet I'm just
06:06 - gonna break it up a little bit and get
06:08 - to the questions a little bit later so
06:10 - hang in there and I will try to answer
06:12 - your question at first here's what I
06:17 - think we're going to do
06:19 - Harshit has added a pull request that
06:23 - did a lot of work to the server so
06:26 - before we try to implement anything with
06:29 - passport j/s on the server we're better
06:31 - off merging that in I think that'll be
06:33 - much easier to handle to do it that way
06:36 - instead of trying to handle
06:38 - all the merge conflicts that will happen
06:39 - so I've already pulled down I'm gonna
06:43 - double-check and make sure that
06:44 - nothing's been added to his pull request
06:47 - but otherwise earlier I've already
06:49 - pulled it down as a separate branch so
06:51 - it shouldn't be that hard to just merge
06:53 - it in right from the command line so on
06:57 - my other screen I have this pull request
06:59 - open I'm just verifying that the last
07:03 - commit let's see the last commit was
07:13 - okay so there has not it looks like
07:16 - there has not been another commit since
07:18 - the last time I pulled everything down
07:20 - so that's great okay so let me bring
07:27 - this over then see all can see it so I
07:38 - was about to do it anyway okay so
07:46 - briefly give this a look and
07:57 - let's see so you can see we have some
08:00 - extra things here we're doing you know
08:02 - webbing emailed ojs file that's handling
08:05 - sending the emails from our form also
08:09 - attachments the app touch as file in the
08:12 - end the server has a lot of extra stuff
08:15 - in there too using a motor to handle
08:18 - form data we have fetch working in here
08:23 - so we have some stuff set up I can't
08:27 - remember how much of this was from a
08:29 - previous pull request and how much was
08:30 - this this last one so maybe going over
08:33 - some stuff that we've already seen but I
08:37 - had a little bit of trouble getting
08:38 - things to work I don't think it had
08:40 - anything to do with with any of the code
08:43 - I think it had something to do with me
08:44 - setting up an account to handle the mail
08:48 - so I'm gonna go ahead and pull this in
08:50 - but if if you happen to clone this
08:54 - repository and it doesn't work for you
08:57 - when you try to submit the form I'm
08:59 - aware that something's wrong with the
09:01 - way I'm doing it so as soon as I figure
09:05 - that out then I'll let you know
09:07 - I wasn't harsh it had given me some
09:09 - suggestions for how to troubleshoot that
09:11 - but I've been in meetings for three
09:15 - hours straight so I have not been able
09:17 - to even attempt to to troubleshoot so
09:21 - tell you I had an issue but I just
09:24 - really didn't have time to try to fix it
09:25 - so I'm not that worried about it let's
09:30 - see all right let's merge this in so
09:34 - just I'm just going to double check and
09:37 - make sure I don't have anything in
09:38 - master that should have been merged okay
09:42 - great we're up to date I'm gonna go back
09:48 - to the master branch and I'm gonna run a
09:49 - git merge and I'm gonna merge in this
09:56 - branch which contains all the work that
09:58 - Harsha did and merge it into master
10:01 - there we go I'm just I think I already
10:05 - brought everything in in terms of the
10:07 - packages but I'm gonna run your own
10:09 - again just to be sure yep
10:10 - we're good so make sure that you do that
10:13 - if you bring in this this latest code
10:15 - locally to your machine be sure to run
10:19 - an NPM install or yarn because there's
10:22 - quite a few packages that that have been
10:25 - added okay great so now that we have
10:28 - that in there we can get to work on
10:31 - actually let me push that up there we go
10:39 - just want to make sure make sure that I
10:41 - push that so in case you all want to get
10:44 - the latest the latest code pulled down
10:48 - on your machines you have it now and see
11:17 - let me bring over let's see I'm John I
11:27 - have a lot of stuff open a lot of
11:29 - windows on my other screen so I'm just a
11:31 - little little clutter and I didn't have
11:33 - a chance to unclutter things before the
11:35 - stream okay here it is alright so let me
11:39 - bring this over this is the github repo
11:43 - for passport j/s which is what we're
11:45 - going to be using so you can check that
11:48 - out if you like um actually I'll paste
11:51 - in the live chat the link and that way
11:58 - you can you can go right there if you
12:00 - want to look at it and also here's the
12:07 - link to the main site and to the docs so
12:13 - we'll be going off looking at these docs
12:16 - I know this is really small I'll zoom in
12:19 - a bit but this is the passport Jay s dot
12:24 - work site so here's what we need to do
12:28 - though the way at least from what I've
12:31 - read so far the way passport UAS works
12:34 - is that there are a lot of these extra
12:37 - modules that you can use depending on
12:40 - what kind of authentication you want so
12:44 - we need to we need to come to a decision
12:48 - about what do we want what we want to do
12:50 - with authentication and I'm not I have
12:57 - an idea what I want to do but I'm not a
12:59 - hundred percent sure so I'm gonna run
13:00 - some things by you all and and see what
13:04 - what you think and if anyone has any
13:08 - input so currently
13:18 - let's see currently we at the university
13:24 - use for all the accounts I believe it's
13:29 - it's Active Directory and right now the
13:35 - single sign-on system that all the other
13:37 - university stuff is tied into but not
13:40 - the bulletin that we're working on I
13:42 - think is using I'm gonna say sam'l it's
13:47 - saml I'm not really sure how people say
13:50 - that normally I've only ever read it but
13:54 - I don't currently have all the
13:56 - information I need to implement that
13:58 - system I think the best case scenario
14:02 - would be to get on that same system and
14:05 - then all user accounts will be handled
14:08 - by the IT department which which would
14:13 - be really nice so it would all be one
14:15 - system and I I think that would be
14:18 - what's best for the users and then that
14:20 - would be what's best for me as well and
14:24 - not having to continually perform you
14:28 - know maintenance tasks to make sure
14:30 - everybody can log in and handle support
14:33 - calls about login issues which is fine
14:37 - but that's not really what my position
14:38 - is supposed to do I'd much rather spend
14:41 - time building new things so I'm not sure
14:47 - how on board IT is with sharing the
14:53 - information I need to bring that into
14:55 - the system
14:58 - I'll need to do some more work in terms
15:00 - of talking to people before I can get to
15:04 - that point so I'm wondering if I should
15:09 - just go ahead and implement all the code
15:10 - and assume that I'm going to get the
15:12 - information that I need it sometime in
15:17 - the next few days I mean meaning like
15:19 - next week or should we try to use some
15:22 - other type of basic system assuming that
15:26 - maybe we
15:27 - be able to tie in the university system
15:29 - and so we'll have to do something else
15:30 - on our own I'm not sure so basically the
15:36 - choices as I see it is start building it
15:41 - out to use sam'l hoping that we get the
15:45 - other information we need from the IT
15:47 - department to finish that at some point
15:49 - next week or do we just pick a different
15:52 - system for users to be able to log in
15:56 - and implement that and then if we
16:00 - eventually get information for an IT we
16:02 - can switch over to something else but
16:04 - for now we we could do something
16:10 - different so if anybody has any opinions
16:12 - on that let me know I'm gonna give it
16:15 - maybe like 30 seconds a minute just to
16:17 - get some feedback otherwise I'm just
16:21 - gonna have to flip a coin or something
16:23 - I'm have to figure it out I guess if you
16:26 - need some more info on what I need to do
16:28 - is basically what I need is only people
16:34 - who work for the university should be
16:36 - able to login I don't have access to a
16:40 - list of all the people that work for the
16:41 - University the best I have is that
16:45 - somebody who has a university email and
16:48 - if I could verify that they actually
16:50 - have access to that email by sending an
16:56 - email link that's the only way that I
16:59 - can do this at this point so whatever I
17:02 - do I need it so that the bulletin is
17:07 - only accessible by people with a
17:10 - Franciscan ddu email address so
17:16 - something like a password this login
17:19 - with an email link is what we're using
17:21 - right now through a different system I
17:24 - want to switch
17:25 - I haven't the system I'm using currently
17:28 - hasn't been a hundred percent reliable
17:31 - so I don't want to do it the exact same
17:32 - way but if we could figure out some way
17:35 - to you an email link password this login
17:37 - that'll work for now and then I guess
17:40 - we get hope that we we can tie it in in
17:43 - a better way later on let's see all
17:53 - right I'm gonna check out the live chat
17:55 - now and see what you all you all think
17:58 - okay okay so we do have password let's
18:03 - log in some of your saying we should do
18:06 - password this at least Sebastian says if
18:10 - it were me I wouldn't even try to do any
18:12 - type of login until you are sure of what
18:14 - you need and what you can use yeah I
18:19 - mean that's not really a bad idea I just
18:21 - I feel like we're getting to the point
18:22 - where I need to start doing something
18:24 - with this because in terms of the
18:27 - project itself we have all the main
18:29 - pieces there we just have a couple more
18:31 - UI things to work out but I think we're
18:34 - getting close to this being you know
18:38 - usable I mean it's certainly you it's
18:42 - currently is usable it's not perfect but
18:46 - it fulfills all the requirements that we
18:48 - need right now at this point and the
18:50 - last requirement left is to make sure
18:52 - that its users have to be authenticated
18:55 - to access this this site so that's why I
19:00 - just want to kind of move on with it one
19:02 - way or another
19:08 - okay
19:14 - okay was umberto says that's how I
19:16 - implemented our HR web portal in
19:19 - register screen active directory pool
19:22 - email address there were no user entry
19:25 - allowed interesting
19:27 - okay cool harsh it actually has a link
19:30 - to a passport password list great you
19:34 - know what I thought there was a password
19:35 - list module I was looking for it
19:37 - yesterday but I couldn't find it in
19:40 - their list of modules on their on their
19:42 - website there's like 300 models on their
19:45 - website though and I was just scanning
19:47 - through so I I probably just missed it
19:50 - let's see
20:03 - but I was pretty sure that I had seen
20:05 - the password list login system used with
20:12 - passport before in a tutorial that I saw
20:15 - probably months ago let's see okay so I
20:20 - see this NPM passport password list do
20:23 - they have a github usually there's a
20:26 - link to the github right there but I
20:28 - don't see it
20:45 - here we go
21:00 - all right so I found it great so found
21:05 - the github repo for this let me pull
21:06 - this over let's check this out and see
21:12 - see if this will work actually I see a
21:16 - lot activity in the live chat too so
21:18 - let's see
21:29 - okay
21:35 - let's see
21:48 - all right let me see I'm Bertos
21:50 - explaining how he set this up so let me
21:53 - go through some of this stuff as well
21:56 - they're just there's just been a lot in
21:57 - the last chat with in the last 30
21:59 - seconds or so
22:02 - okay so embarrassin saying send a
22:05 - verification email and then add user to
22:07 - identity server or the identity store
22:11 - then the next time they access the
22:13 - system if they are registered it uses a
22:16 - D violin doz login to authenticate and
22:18 - authorize cool I mean that's that's what
22:28 - I really want to do I just don't have I
22:34 - don't really have information or access
22:37 - to what we're currently doing with with
22:39 - a D with Active Directory
22:54 - okay so it looks like Harshit saying
22:57 - there are two different ones here so
22:59 - there's a just password list and then
23:02 - there's a password password this he's
23:04 - recommending to use the one that's just
23:06 - password lists okay as we could check
23:12 - that one out as well hmm
23:47 - hmm
23:49 - okay so I'm looking at this password
23:52 - this as well okay interesting
24:06 - here's now here's another thing to keep
24:09 - in mind I don't know the answer this I'm
24:13 - just I'm asking so right now we're
24:19 - comparing these two different modules
24:20 - one is works with Passport
24:25 - the other one it looks like just works
24:29 - on its own it's it's not tied in with
24:32 - Passport what I hope will happen is at
24:37 - some point we'll switch away from this
24:38 - and will actually be tied in more
24:42 - closely with the single sign-on system
24:44 - that the university is using if that's
24:48 - the case would it be better now even
24:52 - let's let's assume for a second that
24:54 - this password list is better than
24:57 - passport password this even if that is
25:01 - the case would it be better to just
25:04 - implement this passport password list
25:06 - knowing that we're going to switch to
25:07 - some other passport solution maybe
25:11 - password passport sam'l or something
25:13 - like that I don't know I'm wondering
25:20 - what what opinion you all have on that
25:36 - hmm
25:52 - I actually already have an email Jas
25:54 - account set up so it wouldn't be that
25:56 - hard to put that in
26:17 - hmm
26:24 - okay let's check this one out briefly
26:27 - and let's see
26:44 - okay so it looks like a few you're
26:49 - saying in the live chat here that if I
26:51 - do plan on switching to use sam'l with
26:55 - Passport
26:56 - then maybe I should set it up just to
26:58 - use Passport right now okay that's kind
27:05 - of what I was thinking I wanted I just
27:08 - looked through the passport password
27:11 - lists I just want to take a brief glance
27:13 - at this password list repository just to
27:22 - see if anything stands out that could be
27:24 - a deal-breaker okay
28:40 - hmm
29:08 - okay
29:10 - interesting I I didn't really see
29:14 - anything in either one that makes me
29:17 - really want to choose one or the other I
29:24 - mean I just looking at the documentation
29:27 - this one seems a bit more simple it
29:32 - could be that just it doesn't explain as
29:35 - much in the documentation though - so
29:40 - all right let's see all right okay harsh
29:53 - it says we should check out password
29:55 - list dotnet
30:21 - hmm
30:53 - okay just to keep in mind as well I'm
30:58 - gonna throw this up here this is what I
31:00 - was thinking of using passport saml so
31:04 - if anybody's interested in checking that
31:10 - out I'm hoping at some point that we
31:13 - implement this or something like it so I
31:19 - came through the link in as well into
31:22 - the live chat
31:27 - Harshit says you can also send SMS with
31:30 - it it the SMS thing is cool but I can't
31:33 - I can't use the SMS right now because
31:37 - the it has to be the email so I wouldn't
31:40 - I wouldn't be able to use it because the
31:43 - email is the only way I can really make
31:47 - sure that it's somebody that works at
31:49 - the University because they have an
31:51 - active University email account
32:03 - okay let me take a break now and answer
32:05 - some questions we didn't didn't actually
32:08 - get any code worked out but as soon as
32:12 - we as soon as I make a decision we will
32:15 - get some code let's see
32:28 - okay
32:34 - all right Blake Blake says could you
32:37 - link their email to their phone number
32:41 - actually that's interesting that might
32:44 - be possible hmm I'll consider that let's
32:52 - see all right I'm gonna scroll up and
32:58 - try to go through and answer some
33:00 - questions it looks like yeah I don't I
33:08 - don't have everything that was in the
33:09 - live chat so it cut off so if you ask
33:12 - something closer to the very beginning
33:16 - of when the stream was supposed to start
33:18 - I can't see it anymore so I'm sorry
33:21 - about that but if there was if you ask
33:23 - the question early on you may want to
33:25 - put it in there again because I I can't
33:28 - see it
34:27 - haha okay Savior at some point says his
34:32 - face in the thumbnail looks like mine
34:34 - when I'm coding so yeah I have a
34:35 - confused thumbnail for the video I
34:41 - thought it just it looked funny I
34:43 - thought I'd put it in here
35:03 - all right and I said I like your stream
35:07 - Thanks
35:08 - it's good to see you in the light yet I
35:10 - haven't seen in the chat for a few days
35:12 - so welcome back
35:16 - okay Harsha says I found a site named
35:19 - vulture the ultr
35:21 - it's it's like digital ocean about
35:24 - offers double resources for the same
35:26 - amount of money oh that's cool I have to
35:30 - check that out thank you all right Kat
35:37 - des how long since you've learned coding
35:42 - I've been I guess seriously doing
35:45 - JavaScript for about three years now
35:47 - in terms of just building websites it's
35:50 - been about five years I first learned
35:53 - about building websites and when I was
35:56 - in high school so somewhere around the
35:58 - year 2003 I think and then I did some
36:04 - stuff in college just like some C++ just
36:10 - really basic like I built a calculator
36:12 - in C++ so nothing nothing too crazy and
36:17 - then I didn't really work that much with
36:19 - coding you know until till about five
36:25 - years ago so if you want to know more I
36:29 - have a video on my channel it's linked
36:31 - in the description to this video and I
36:34 - think the video is called my was a how I
36:39 - became a front-end developer so you can
36:42 - check that out if you want a little bit
36:43 - more in-depth explanation
36:52 - Albert asks what application I'm doing
36:55 - basically we're doing a react app and
36:58 - it's a it's it's a university bulletin
37:02 - so it's gonna have a login system and
37:04 - then once you log in you'll be able to
37:06 - see a lot of different announcements
37:10 - download attachments submit your own
37:14 - announcements link what else yeah that's
37:18 - pretty much it that's that's what it's
37:19 - going to do cat DZ's three-hour meeting
37:29 - sounds too long yeah well it was
37:32 - actually two different meetings so the
37:34 - first meeting was about an hour long and
37:35 - then the second meeting which I thought
37:37 - was only going to be a few minutes ended
37:39 - up being almost two hours so yeah then
37:43 - he'll be being long long time okay
38:00 - and I'm the worst part of the whole
38:02 - thing about all the meetings I'm super
38:04 - hungry I thought I'd have time to eat
38:06 - before I stream but I didn't so what my
38:10 - stomach is killing me all right let's
38:15 - see I'm gonna go back and do some more
38:17 - coding let's um all right here's what
38:20 - I'm gonna do and I'll give you my reason
38:24 - as well I really like password this it
38:28 - looks good but I'm not gonna use it for
38:30 - this stream because I put in my tweet
38:33 - about the stream and in the title for
38:35 - this dream that I would be using
38:37 - Passport so since I can't decide between
38:40 - the two of them I'm just gonna use that
38:42 - as my deciding factor I mean there's
38:45 - also the benefit that I'm probably going
38:48 - to switch up and implement some of the
38:50 - other passport solutions as well so I
38:52 - think that does give me a little bit
38:54 - more freedom that I could potentially
38:56 - implement multiple solutions from
38:58 - passport if I wanted to at some point so
39:02 - that's what I'm gonna go with that I
39:04 - appreciate all the suggestions from
39:06 - everyone and I I may use them like you
39:10 - know I might end up using password lists
39:12 - in a future project or who knows maybe
39:14 - this project if this doesn't work out
39:17 - but at this point I need to make a
39:19 - decision so we can get something done
39:22 - all right so let's go ahead and
39:39 - let's see what we need to do so I assume
39:48 - we're going to have to use ha ha to load
39:51 - up passport first and it looks like
40:00 - we're using Redis
40:10 - okay I want to check this out and see if
40:12 - they're bringing in
40:25 - all right that's interesting
40:47 - okay I may have just changed my mind yes
40:53 - sorry sorry for being so indecisive but
40:56 - now that I took a closer look at this
41:04 - I'm not so sure that this will be the
41:07 - easier way of the two because it seems
41:11 - like and correct me if I'm wrong I've
41:14 - never worked with with Redis but it does
41:18 - not look like it's built into this
41:23 - package or the passport package which
41:28 - means I'll have to install that
41:30 - separately and figure out how to use it
41:34 - I'm not really I'm not really looking
41:39 - forward to trying to do that on the
41:42 - stream in the next 20 minutes where did
41:46 - I put this
41:56 - now
42:01 - let's see
42:17 - yeah okay maybe we will go with the
42:20 - other module I was just checking the
42:21 - live chat as well it looks like you are
42:23 - noticing some some additional things
42:52 - okay all right let's go with this one
43:02 - it it includes some setup for things
43:07 - that this one does not I would say this
43:11 - assumes some knowledge of other things
43:13 - that I don't have and this one is more
43:15 - explicit about talking through the steps
43:18 - so I think we have a better shot of
43:20 - getting this one up and running faster
43:24 - than the other one so apologies for the
43:27 - misleading title I can always go back
43:29 - and change that and I think I probably
43:31 - will after this stream but I think we're
43:35 - gonna end up going with this pasture
43:37 - list so let's bring the terminal up
43:40 - because we need to install some modules
43:44 - okay
43:56 - okay let's see let's go with yarn add
44:04 - password this and we need also need to
44:09 - add password Liz store and
44:21 - this example saying email to use email
44:26 - je s but I thought somewhere else that
44:29 - said that you could use SendGrid
44:34 - yeah I think on their their main hum
44:37 - they just said that you could do you
44:39 - send grade with it
44:51 - hmm
45:12 - I have accounts for both let's just do
45:16 - let's do email js4 now because that'll
45:20 - probably be it'll go along better with
45:24 - the diffusion my princess it'll go along
45:33 - better with their instructions right now
45:35 - on the repo and I don't think we've set
45:37 - up email j/s before on the stream so if
45:40 - we went with sangria it would just be a
45:42 - repeat of what we had done for the last
45:44 - project so we'll go with email j/s just
45:46 - to switch it up a bit okay
45:58 - and we're gonna need to all right we'll
46:08 - let that do its thing
46:09 - and then now in our if we should do this
46:16 - in our app Jess or if we should use
46:19 - another file I'm not sure
46:46 - yeah let's see how we have this maybe we
46:49 - could and this uh
47:22 - okay sorry for all the silence I'm
47:26 - reading through the documentation and
47:41 - and the documentation is very thorough
47:45 - but to get this set up right now I think
47:52 - would be better to take a look at their
47:55 - fully functional example and copy that
48:01 - just to get things going a little bit
48:03 - more quickly so let's work this in here
48:09 - we need to all right let me see what we
48:16 - have alright we have body parts or
48:17 - Express obviously
48:31 - I won't really need some more stuff that
48:33 - we it's not mentioned that's interesting
49:06 - all right so basically the example that
49:10 - they've given the example project has a
49:12 - lot more going on than what they show in
49:16 - the in the documentation so I was hoping
49:21 - the example would would let us get
49:23 - started quickly but now I'm not so sure
49:44 - alright well let's just get started and
49:46 - get as much done as we can I always
49:47 - intended this to be more than one part I
49:50 - figured it would be a two or three part
49:53 - with with multiple streams so let's do
49:57 - that so let's just require these things
49:59 - that that we need so let's bring in
50:05 - these let me change this to Const okay
50:13 - so we brought in we've already let's see
50:16 - yeah we did successfully pull in
50:19 - password this password this store
50:21 - an email je s and now we're gonna bring
50:32 - in let's bring this and
50:42 - change this to cost so if you want to
50:45 - follow along with where I'm at I'm on
50:51 - that password list github repository I'm
50:59 - gonna put the link there in the live
51:00 - chat and I want to step 3 well I just
51:04 - finished step 3 well I'm just going to
51:07 - get all the code in for now we'll fill
51:08 - in our details later on I got a I'll
51:12 - bring up on my other screen my email j/s
51:15 - account and get the info that I need so
51:21 - now we're on step 4
51:50 - oops wrong screen okay here we go so I'm
51:58 - gonna make a mess of this app dot J's
52:00 - file right now we can always refactor
52:03 - this and separate it out later on but
52:09 - just to move a little bit faster for the
52:12 - stream I'm not gonna worry about that
52:14 - for right now
52:24 - so basically we've for this step we are
52:31 - initializing password lists with this
52:35 - store all right and now we're gonna set
52:45 - up our token delivery
52:52 - so all these semicolons are killing me
52:59 - all right
53:04 - so assuming that we're gonna go with
53:06 - email J s this is how it's recommended
53:09 - to set this up which at least for now to
53:16 - test it out we are going to use email J
53:18 - us I might switch it up to send grid at
53:21 - some point and then now we're on step
53:26 - six we're gonna set up the middleware
53:40 - okay I'm going through this pretty
53:42 - quickly but if you want to learn more
53:45 - about what's going on you can read all
53:47 - the details that are there for each of
53:51 - these steps
54:15 - let's make sure we've setup
55:06 - all right we need to I was just
55:10 - double-checking to see if we've said
55:12 - we've done this next step at some point
55:14 - I'm one that steps seven
55:35 - okay
55:39 - let's see oh yeah hard should sing
55:41 - always use node mailer I I'm using email
55:45 - je s in this case because it's that's
55:48 - what they're using for these docs so -
55:50 - let me get it set up more quickly we can
55:53 - always switch up to node mailer you know
55:57 - after we get this going
56:11 - okay
56:26 - okay so we don't have this one right now
56:46 - all right so place it we're on step 7
56:49 - for the routers so let's just copy this
56:54 - in so at this point I'm copy and pasting
57:00 - a lot from the from the documentation
57:04 - once we get it all in there we can give
57:06 - it a you know give it a test then we can
57:08 - go in there and change things if we need
57:10 - to yeah
57:30 - all right and it says in the
57:32 - documentation that we want to make sure
57:34 - using bawdy parser which we are I
57:36 - believe we already have great we already
57:38 - have that fixed list of users okay we're
57:44 - skipping over that second part of step
57:47 - seven because we don't in fact have a
57:50 - fixed list of users so skip that over
57:54 - okay now it has some code for a login
57:57 - page I'm obviously not going to use that
58:00 - for our login page because we're using
58:03 - react so I'm not just going to copy in
58:05 - that that HTML but we can do this in
58:09 - react quickly let me check my time and
58:11 - see what's down there not that much time
58:14 - okay so we just need to make a very
58:17 - basic basic form and let's see
58:32 - so let's make that basic form we just
58:34 - need to send it to the sent oaken path
58:39 - and it looks like it just needs one
58:43 - field I think we just need to just need
58:46 - to send one one field which will be user
58:49 - which in this case we're going to use
58:55 - email
59:18 - okay Harshit saying there's something up
59:20 - with the code so it's not gonna work
59:22 - okay he said I Jesse I don't think I
59:28 - think you don't so much backend stuff
59:31 - yeah yeah that's true I'm a front-end
59:34 - developer that does back in when I have
59:37 - to we don't have a back-end developer
59:41 - here in in my department so I do what I
59:46 - can
59:50 - let's see so I'm trying to see where
60:02 - okay so let's a dragon owner says but
60:05 - you already have a transport that you
60:07 - require on top
60:15 - okay let me check that out so
60:45 - okay yeah I'm not sure where we're
60:48 - trying to figure out where the issue is
60:52 - but I'm not sure
61:00 - okay cat D says if you're using
61:02 - WordPress isn't there an auth module
61:04 - that you can use yes so that basically
61:12 - there's going to be at least in my mind
61:14 - there's gonna have to be two two parts
61:21 - so since the wordpress is is like a
61:25 - separate kind of issue like the first
61:28 - thing is we want to have users
61:31 - authenticated to be able to even access
61:33 - anything within the react portion of it
61:36 - and then our server is going to make
61:40 - calls to the WordPress installation at
61:44 - that point there needs to be something
61:46 - basically something that make sure that
61:49 - the WordPress data can only be accessed
61:53 - by someone who's authorized so
61:58 - essentially we don't need every user to
62:01 - be able to directly access WordPress we
62:05 - need but we do need every user to be
62:07 - able to authenticate to access that
62:09 - react part of it so maybe there's a
62:14 - better way to set it up but I I don't
62:17 - know that it would simplify things to
62:20 - have the authentication kind of pass all
62:22 - the way through to WordPress but that is
62:25 - gonna have to be a part of it at some
62:27 - point but as far as I think not
62:30 - necessarily for the user yeah okay so
62:35 - harsh it has it so I should saying you
62:36 - you're required to authenticate
62:38 - WordPress on the server only yeah so
62:40 - basically the server on the react side
62:43 - of things has to be able to make
62:46 - requests to WordPress but not
62:48 - necessarily the user right from the
62:50 - client side
62:56 - alright let's see I mean
63:02 - [Music]
63:07 - alright work says saying you mean it
63:10 - won't work because of the res render he
63:14 - can switch it to res send for testing no
63:17 - an email JS file okay alright that's why
63:24 - I'm not seeing it so it looks like car
63:25 - should saying that the problem was in
63:30 - the email Jas file okay yeah I'm not
63:47 - okay cool oh it looks like harsh it's
63:49 - making a PR right now so depending on
63:51 - how long that takes we may be able to
63:53 - just pull some stuff in so yeah
63:55 - definitely you all can see how much like
63:58 - difficulty I'm having because well
64:01 - number one I'm not a back-end guy number
64:02 - two this is really all harsh it's work I
64:05 - haven't done anything with the server
64:08 - dot or the app dot J's file for the
64:10 - server so I'm not I'm not familiar with
64:15 - how it's set up I certainly reviewed
64:16 - everything before I pulled it in but I
64:21 - mean you know how it is if you write it
64:24 - yourself you're way more familiar with
64:27 - it then if you're trying to add to
64:28 - someone else's code which is the
64:30 - position I'm in right now so thank you
64:32 - for all the help
64:33 - Harshit and everybody else that's that's
64:36 - adding in a little okay eric says would
64:40 - love to see a flow chart for your
64:42 - authentication on this project that's a
64:44 - great idea I should try to come up with
64:46 - something for that because I have a
64:48 - visual in my head of of the flow but it
64:52 - might be a lot better if I could try to
64:54 - put that in some sort of like visual
64:59 - format for you all okay cool john b
65:08 - spotted a typo let's um let me wait i'm
65:12 - not going to change it right now i'm
65:13 - gonna wait and see what's up with with
65:15 - harsh its next pool request and then
65:19 - i'll change it
65:23 - ours was also asking did the male male
65:27 - trap work i know i didn't have a chance
65:30 - to to get it working before i so i just
65:34 - had to come straight for the meetings
65:35 - and started the stream so i didn't get a
65:38 - chance to even test it out aside from
65:40 - like the very first test i did that did
65:42 - not work
65:48 - see I can give it a shot I currently
65:54 - have have the info let me make sure that
66:00 - I have a
66:20 - there we go I'm gonna I don't want to
66:22 - show everybody my my dot m-files so I'm
66:27 - moving it to my other screen and I'm
66:29 - gonna open it up there just to make sure
66:31 - that I have okay I do have the right
66:34 - stuff in there actually I did I changed
66:45 - my password and username so let me
66:48 - update that
67:01 - okay say that whoops let's make sure
67:25 - I lost my whoa
67:33 - oh I know why cuz I just messed it up
67:36 - with all this obviously I just added a
67:40 - bunch of stuff alright so I'm gonna
67:42 - remove the stuff that I just did because
67:45 - we have a pull request that is on its
67:48 - way I need to get this working at least
67:57 - see and I'm not that worried about
68:01 - getting rid of this because
68:02 - realistically I just copy and paste and
68:04 - some stuff I didn't even make any
68:05 - modifications so it'll take about three
68:09 - minutes to get all that stuff back in
68:11 - there again if I need to let's see that
68:20 - was everything right yeah
68:26 - let's just give it a little restart here
68:29 - see if that fixes things yep
68:35 - there we go
68:39 - I'm gonna try to submit an announcements
68:43 - whoa
68:50 - that's it no that's probably not gonna
68:56 - work because if it was going to work it
68:58 - would have worked already
69:25 - okay my timer did go up so let me do
69:28 - another five minutes on my news okay let
69:32 - me do another five minutes and let me go
69:37 - back up to where I left off three or
69:38 - four
69:58 - okay our arvind says is the initial
70:01 - setup done yeah the the setup for this
70:05 - project it's done if if you go back and
70:08 - watch some of the previous streams
70:10 - you'll be able to check out the initial
70:12 - setup so this is project force if you go
70:15 - back to project for day one then that'll
70:19 - be you know obviously the starting point
70:22 - Sebastian says don't you need a database
70:24 - to store data with Passport
70:28 - yes I would assume
70:30 - I think that's or that we were bringing
70:35 - in that store
71:25 - okay cool Gideon's watching so glad you
71:33 - could join us
71:34 - gideon says so late once hin don't worry
71:38 - about it I was late to my own stream
72:06 - zavier says just use the honor system
72:08 - for us yeah
72:11 - why don't I just make one password and
72:14 - then I'll just email that pass for it to
72:16 - everybody at the University and then
72:19 - it'll be easy right it will just it
72:23 - would just be really basic we'll just
72:26 - have like user name user 1 and password
72:33 - 1 2 3 4 right obvious that change it
72:37 - because I just told you that password so
72:39 - that could work I actually believe it or
72:45 - not I've seen systems like that where we
72:47 - have something that's password protected
72:49 - but literally the the password is shared
72:52 - with everyone that works at the
72:53 - University
73:15 - okay so a few you're talking about using
73:19 - JWT JSON web tokens so rang Shu says
73:24 - JSON web tokens could work with just
73:27 - email just validate the email for a
73:29 - valid one as they says is there a reason
73:32 - you don't want to use JSON web tokens
73:35 - since the university has an email
73:36 - address send the link to the email and
73:39 - that should do the job I guess so
73:49 - let me think don't you think
74:02 - okay so let me sink through and you all
74:06 - know I'm no expert on JSON web tokens
74:08 - and how to set that up so you all if
74:10 - you've used them help me out here
74:12 - so the flow for the user then would be
74:17 - they go to the site for the first time
74:20 - they put in their email address we send
74:22 - them an email then they would click the
74:28 - link in that email then that would take
74:31 - them that that would basically have the
74:33 - token that would validate them at that
74:37 - point we would then have to store we
74:46 - would have to store that data for that
74:47 - user and then if I want to keep them
74:51 - login we'd have to store in local
74:54 - storage or as a cookie or whatever some
74:58 - data for that user in their own browser
74:59 - and then when they try to come back we
75:03 - check for that is that correct is that
75:05 - how the flow should work and if so would
75:15 - it be easier to just implement something
75:17 - very simple like that on our own or
75:19 - should we use one of these other
75:21 - solutions arvind says i think you should
75:29 - consider using the mapping of the email
75:31 - with phone number if it ever be
75:33 - necessary to send SMS considering this
75:41 - we can proceed with password list i
75:43 - guess can we start now please yeah yeah
75:47 - with the SMS maybe we can have the
75:50 - option for users to link it to their
75:54 - phone number and then then I guess later
75:58 - on if they need to log back in they
76:00 - could choose to get a text instead of an
76:02 - email that it might actually be
76:13 - yeah that might actually be a nicer
76:17 - option for people who are trying to use
76:19 - their cell phone
77:18 - okay
77:26 - okay so it looks like in regard to the
77:39 - JSON web tokens that may end up being
77:42 - the simplest way to do it but we'll see
77:45 - because harsh it's working on this pool
77:48 - request so maybe I should see about that
77:51 - first
78:01 - okay let's see um so I guess I don't
78:10 - know that I want to I don't want to put
78:12 - pressure on Harsha to try to push
78:14 - something out this quickly so I don't
78:17 - know if we should wait for that probably
78:20 - not
78:41 - all right so you let me let me just go
78:44 - ahead three I know the timer went up but
78:45 - let me just finish up with all the
78:47 - questions in the live chat here and then
78:51 - we'll see if I finish up the questions
78:52 - and we have something from a pull
78:55 - request maybe we'll check it out
78:56 - otherwise maybe we'll just have to
78:58 - postpone and work on this so yeah so
79:03 - sorry I didn't really get that much
79:04 - accomplished but we did sift through a
79:07 - lot of options and got a lot of
79:09 - different ideas on what would be the
79:10 - best way to do this so it's it's not it
79:13 - was productive in that sense I did think
79:20 - I'd have more time beforehand to get
79:22 - some things ready so it just didn't
79:25 - happen
79:37 - oops
80:02 - oh cool Blake says hey Jesse has
80:06 - submitted a pull request on the free
80:08 - code camp guides can you check it out to
80:10 - see if it reads whoa and it's helpful
80:12 - link okay cool off to check that out
80:15 - not right now but maybe after the stream
80:18 - I could check it out I just saw this
80:30 - some hard
80:31 - he says the the passport module so the
80:34 - passport password list repo says it
80:39 - looks kind of it looks hacky he's they
80:41 - are using password lists internally
80:50 - that's crazy
81:17 - arvin says i think we have only harsh
81:21 -  in the house who knows password
81:23 - this better than any we should listen to
81:25 - him he may got yeah yeah it does seem
81:27 - like harsh it has some experience with
81:30 - using password list
81:40 - okay cool dragon hunter unfortunately I
81:45 - didn't catch all this earlier when I was
81:47 - when I was actually doing some coding
81:49 - the dragon owner said we already said
81:52 - you already have note mailers set up you
81:54 - can use that transport yeah that makes a
81:57 - lot of sense we were already using it
82:00 - for the other emails so in our email Jas
82:05 - we're already bringing in node mailer so
82:11 - could've used that like I said my
82:14 - intention was to set everything up
82:17 - exactly like it was in the documentation
82:19 - for password list thinking that that
82:22 - would allow us to at least have
82:24 - something to test out as quickly as
82:27 - possible
82:29 - yeah buh buh Jen says boy that is a mess
82:36 - of code James says high school in 2003
82:47 - I'm about to show my age high school for
82:49 - me was 94 computers we're not even a
82:52 - consideration when I was going to school
83:06 - and Brett says I'm Way older than James
83:09 - it's always interesting I wonder what
83:11 - age range we have in here I know we've
83:13 - had I'm pretty sure we've had people who
83:16 - are like less than 10 years old I can't
83:20 - remember the exact age but we had some
83:21 - people that are really young and I think
83:23 - we've had people in their 60s on the
83:26 - stream I think it's cool that we have
83:28 - such a big age range and a range of
83:32 - people from different locations around
83:35 - the world that's that's awesome that we
83:37 - all kind of work together you know on
83:41 - these projects
84:10 - Kaddi says TGIF thank goodness it's
84:14 - Friday yeah
84:42 - okay dragon hunter says why not an
84:45 - authentication micro service which will
84:47 - route East request a separate one
85:00 - I don't I don't know enough about it to
85:02 - know whether or not which one would be
85:05 - better which one wouldn't be better ok
85:15 - Umberto says when using Microsoft sequel
85:18 - we make a service account for the server
85:22 - machine to the database ok cool that's
85:25 - that's kind of what I was thinking we'd
85:26 - end up doing with the the WordPress is
85:29 - that we would have a user account on
85:35 - WordPress that would just basically just
85:38 - be for our server to connect to
85:42 - WordPress so I'm glad to hear that
85:45 - that's that's how it's done
85:47 - in other places as well because I mean
85:49 - it seemed like it would work to me but I
85:50 - wasn't sure that that would be you know
85:52 - the proper way to do it
86:05 - Ellen Umberto says and the application
86:07 - controls what date of the login an
86:09 - authenticated user sees yeah definitely
86:11 - that's that's how I was thinking that
86:12 - that it would work so so I'm not crazy
86:16 - that's the legit way Haven
86:45 - okay I'm getting towards the bottom of
86:47 - the live chat it's gonna check see if
86:49 - there's any more questions
87:25 - okay we got so Arvin says okay I might
87:28 - be a noob but don't worry about being a
87:31 - noob I knew that many things as well but
87:37 - says it might be a new but I just want
87:40 - to know how to make multiple single page
87:42 - applications and a website what I
87:44 - basically mean is I should be able to do
87:46 - single page application stuff in
87:48 - multiple pages in the website what I'm
87:53 - basically confused about is how do you
87:54 - segregate multiple modules and
87:57 - associated controllers and factories
88:04 - okay
88:17 - well I mean so you want to have a
88:21 - website to where different routes in the
88:24 - site
88:25 - so I guess different sub directories
88:28 - would be their own single page
88:29 - applications that's what that's what I'm
88:32 - getting from this if that's not what
88:34 - you're saying then please let me know
88:46 - I mean I guess as long as you have
88:48 - something that's sitting in front of
88:50 - your multiple single page applications
88:54 - that's routing it to the different ones
88:57 - I mean you could you could separate them
89:02 - out like that so I'm not I guess it's
89:04 - hard to it's hard for me to say without
89:06 - kind of seeing more like what do you
89:08 - what you're trying to do but whatever a
89:11 - routing system that you have just have
89:15 - the the various routes go to different
89:21 - different applications some thinking
89:25 - like usually
89:35 - I mean potentially depending on what you
89:39 - are using you could have so you can have
89:44 - it set up so that all right so usually
89:48 - how we set up our projects when we're
89:51 - using react and note is we have nginx as
89:54 - a reverse proxy potentially we could at
89:56 - that level of the of nginx route traffic
90:01 - to different node installations
90:04 - different react apps based on the URL so
90:09 - I mean you could do something like that
90:11 - or at the level of node and Express you
90:16 - could route things to different places
90:18 - you know at that point I'm just not
90:21 - exactly sure you know which you what
90:24 - you're kind of looking for in terms of
90:27 - how it's going to function I don't know
90:29 - maybe I'm misunderstanding things if
90:31 - anyone else has some some more
90:36 - information and I'll check down here it
90:38 - looks like alright it looks like you got
90:41 - some more info here
90:46 - okay so Arvind is saying I'm basically
90:50 - using angular 1 running it and it uses
90:55 - the controller and factory concept to
90:57 - send receive data into my view let's say
91:00 - I have five pages in my web app and all
91:02 - our single page applications meaning
91:05 - every page has say for routing so
91:08 - collectively there are 20 routes as a
91:10 - whole how do people manage to separate
91:13 - modules for each page oh okay I I have
91:18 - very very little experience with angular
91:20 - so I don't know that I'm the best person
91:22 - to to handle that question if we have
91:26 - any angular people let's see okay so
91:33 - dragon hunter seems to have some answers
91:35 - here so saying if it's the same app that
91:39 - routing is handled by the client app if
91:41 - it's for multiple apps you can use Doku
91:45 - which I've never used that
91:50 - and since in each app could be in a
91:52 - sub-domain
91:52 - yeah definitely let's see okay
92:06 - okay cool so thanks dragon owner for for
92:09 - those answers yeah I'm definitely not
92:12 - I'm not very knowledgeable about angular
92:14 - stuff so I'll definitely admit when I
92:19 - don't have enough in all this to answer
92:21 - question properly
92:42 - okay we have some some ages here so
92:45 - seventeen twenty four thirty five thirty
92:49 - twenty six twenty I'm 31 I actually be
92:54 - 32 next week what's today I'll be 32
92:58 - that on the 29th of October so soon
93:14 - okay harsh it says the PR is almost done
93:26 - uh-huh Paco says you know the last
93:29 - commit from angular was in 1886 they are
93:33 - still debugging the code at Google I
93:39 - don't want to get into any JavaScript
93:42 - framework Wars here John B says I
93:47 - believe you mean 1861 Paco that's when
93:50 - the great angular Civil War started when
93:53 - angular 2 changed the routing macho
94:05 - this is in react sitting looking at at
94:08 - angular analyst version with a big smile
94:15 - eric says angularjs plus one still
94:18 - learning more about react but it looks
94:20 - really great MD says hi hey how's it
94:30 - going thanks for joining us
94:32 - oh cool Blake said I'll be 15 in a month
94:37 - awesome actually Blake you might be the
94:39 - youngest one in the stream so cool
94:43 - awesome
94:59 - okay let me I think
95:11 - rat the bottom
95:22 - all right I'm at the bottom of the live
95:23 - chat I've gotten through everything so I
95:27 - know our shits pretty close to finishing
95:29 - up this pull request but I'm not sure
95:32 - not streaming away around for it maybe
95:36 - if I had eaten something today I might
95:38 - wait around for it but huh I'm really
95:41 - hungry so I'm right in the stream let's
95:46 - see let's say there's still some
95:47 - conversation going on here in the live
95:49 - stream but no no questions so yeah so I
95:54 - think there's definitely going to be a
95:55 - part two to the authentication and maybe
96:00 - down the road even a part three if we
96:02 - end up switching to something else so
96:07 - alright so my my energy level is is low
96:15 - so I probably wouldn't be very
96:17 - productive if I even try to do anything
96:19 - at this point so dragon owners to start
96:30 - a little Express project let's try
96:31 - password list I can't I don't have I'm I
96:36 - don't have the energy right now so yeah
96:41 - alright so it's Friday right so I'll be
96:44 - back Monday have a great day yeah so
96:50 - sorry didn't didn't really accomplish
96:53 - anything but we'll give it another go on
96:57 - Monday probably harsh it'll have some
96:59 - code for us to review and you know if
97:04 - anyone else has any ideas for you know
97:07 - what to do for authentication you know
97:08 - I'm still open to that as well it's very
97:12 - much still you know up for for
97:15 - discussion so I'll be back next week
97:19 - have a great weekend everybody and
97:22 - thanks for watching