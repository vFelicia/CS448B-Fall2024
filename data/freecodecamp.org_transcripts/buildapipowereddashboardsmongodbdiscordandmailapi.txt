00:00 - hello everyone here on the freecodecamp
00:02 - channel today today i'm going to be
00:04 - showing you how to build every tool that
00:06 - a startup needs thanks to this amazing
00:08 - low code approach we are going to be
00:10 - using this low code approach to build a
00:12 - marketing dashboard in which you can
00:14 - view all your users on a certain page
00:17 - and then on another page you can choose
00:20 - which users which are associated with
00:22 - different marketing lists should be
00:24 - emailed or sent messages to on discord
00:27 - we will also have the option of adding
00:30 - new customers directly from this
00:31 - dashboard editing them as well as
00:33 - deleting them as well as adding new
00:35 - marketing lists too okay so a lot to
00:39 - cover in this tutorial we will be using
00:42 - mongodb we will also be using the smtp
00:46 - api as well as the discord web hook so a
00:49 - lot to cover
00:50 - for those of you who don't know me my
00:52 - name is anukuba and i'm a software
00:54 - developer as well as content creator
00:56 - online you can find me on my channel or
00:58 - just here on freecodecamp
01:00 - now before we get going low code
01:03 - solutions are not to be confused with no
01:05 - code solutions in which no coding is
01:07 - required we will be using this platform
01:10 - right here smith in order to drag and
01:12 - drop ui components have been pre-made
01:14 - for us and all we're going to be doing
01:16 - is hooking up the back end okay so as
01:19 - you can see here a basic understanding
01:21 - of http requests such as get post put
01:24 - delete are required as well as some
01:27 - basic javascript too
01:29 - this course has been possible thanks to
01:31 - a grant from appsmith the low code
01:33 - solution platform
01:35 - okay so first things first i'm just
01:38 - going to head over to the appsmith
01:40 - platform which we will be using to build
01:42 - our low code app
01:44 - so if you sign in this is what your
01:47 - dashboard should look like as you can
01:49 - see here i already have some previous
01:52 - projects that i have built using this
01:55 - platform we of course are just going to
01:57 - create a new one so i'm just going to go
01:59 - ahead and click the new button like so
02:02 - and this will generate this new landing
02:04 - page for me
02:05 - now i'm just going to rename this so
02:07 - that we can keep track of this on our
02:10 - dashboard i'm going to call this
02:12 - communications dashboard just like so
02:15 - and click off it so that is saved
02:18 - and once we have finished that we will
02:21 - have the option to build with drag and
02:23 - drop or generate from a data table so
02:26 - i'm going to choose to build from drag
02:29 - and drop so just go ahead and select
02:31 - that option so that we can start
02:32 - completely from scratch on a blank
02:35 - canvas just like so
02:37 - once we are here the first thing we do
02:39 - is just get the ui for our dashboard
02:43 - down so our dashboard is actually going
02:45 - to have two pages let's start off with
02:47 - creating our first page this is going to
02:50 - be called customer data and it's going
02:52 - to you guessed it hold our customer data
02:55 - because we're going to want to have our
02:56 - customer data on one page and then
02:58 - options to send messages to our
03:01 - customers based on the mailing list they
03:03 - are on on the second page
03:05 - so let's go ahead and call this customer
03:08 - data so our page is now called customer
03:10 - data and like i said let's get to
03:13 - building the ui first
03:16 - so to build the ui we have some widgets
03:19 - to our disposal that are pre-built and
03:21 - pre-made
03:22 - styled up ready for our use
03:25 - so if we click on the widgets here and
03:27 - all i'm going to do is just simply
03:29 - search for a container widget
03:32 - and just drag and drop it you can use
03:35 - the outline on this widget to
03:37 - essentially resize it just like so and
03:40 - if we click on it we can drag it around
03:43 - so there we go there's our first widget
03:46 - that we have used we can also customize
03:48 - it thanks to the tab on the right
03:52 - so here are the options for
03:53 - personalization on this particular
03:56 - widget and i'm simply going to choose to
04:00 - change the color on this so i'm going to
04:01 - change the background color to this
04:03 - lovely green like so and we can do other
04:06 - things such as change the border radius
04:08 - as well
04:09 - okay
04:10 - so there we go that is now a customized
04:13 - container we can actually also rename
04:17 - these widgets
04:19 - so i can choose to name this header if i
04:22 - wish this is useful especially when it
04:25 - comes to picking them out later when we
04:27 - add functionality to some of these
04:29 - widgets okay so that is what you can do
04:32 - it is optional you don't have to
04:35 - so once that is done i'm just going to
04:37 - show you how to add text to this header
04:40 - so we're simply going to search for text
04:42 - in the widgets and drag and drop some
04:44 - text
04:45 - so once again if we now click on this
04:48 - you will see all the options for
04:49 - customization on this particular widget
04:53 - so let's change the text in this to be
04:56 - customer communications
04:59 - portal so all i've done is just change
05:02 - the text in here
05:05 - okay and then once that is done we can
05:08 - also of course resize it by grabbing the
05:11 - border like so
05:14 - the other things we can do are change
05:17 - the color of the tags so i'm simply
05:19 - going to select from the options here
05:22 - and then we can also change the text
05:24 - size so we have some standard words here
05:27 - i'm going to choose to use the heading
05:29 - one for this particular text
05:33 - okay
05:34 - so
05:35 - great this is looking good and of course
05:37 - i can just center it by using the
05:40 - dragging functionality on the widget
05:42 - like so
05:44 - wonderful
05:46 - so that is done and the last thing i'm
05:47 - going to do is just put an image so once
05:50 - again let's go to our widgets and i'm
05:51 - just going to drag in a image widget
05:55 - like so this is a little bit too big so
05:57 - once again we can resize it using the
05:59 - borders and let's just drag it to where
06:02 - we need so that it clicks in place
06:05 - now
06:06 - once here we can simply just use an
06:10 - image that is hosted on the internet so
06:12 - this is a great library that i use or
06:14 - i'm going to use for this project
06:16 - there's loads of free icons for us to
06:17 - use this particular one is just going to
06:20 - be a folder like so
06:23 - so there we go that is the url that i'm
06:26 - going to need you can of course use any
06:28 - url you wish
06:30 - and
06:31 - wonderful
06:33 - so our header is looking good i'm just
06:36 - going to resize this a tiny bit and move
06:38 - on
06:40 - the next i'm going to do is actually use
06:43 - another container because in this
06:45 - container i'm going to store our table
06:48 - of all our customers
06:50 - so once again let's just drag in a
06:51 - container i'm just going to drag it over
06:53 - here and give it the border radius again
06:57 - of 30. so there we go that translates to
07:01 - 30 pixels
07:02 - and once that is done i'm going to now
07:05 - put some text in here so that our user
07:08 - knows what this container is for and
07:10 - this is of course going to be for our
07:12 - customer data like i said so let's go
07:14 - ahead and change that text to customer
07:16 - data
07:17 - and select this to be a
07:20 - heading 2 so that it's a little bit
07:23 - smaller than our main heading
07:25 - so that was super easy the next thing i
07:28 - want to do is just add in two inputs
07:30 - that will let us order the table that
07:32 - we're going to input in later by
07:34 - whatever column we wish and then by
07:36 - ascending or descending order and to do
07:39 - this i'm going to use the
07:42 - text
07:43 - so i'm going to put in some text to say
07:45 - order by like so so just drag in the
07:49 - text and just change this to be ordered
07:51 - by and the next thing i'm going to do is
07:54 - use the select widget
07:56 - so let's go back to our widgets and find
07:59 - the select widget
08:01 - and once again just drop it where we
08:03 - need
08:04 - just like so
08:06 - so the select widget simply looks like
08:08 - this if you click on it it will show you
08:10 - all the options we have
08:12 - all the options are represented by the
08:14 - options on the right with a label and a
08:17 - value
08:18 - okay as well as a little search bar
08:21 - so that's what it looks like we will
08:22 - come back to this later when we get to
08:25 - putting in the values that we
08:27 - essentially want because we don't want
08:29 - blue green red we want to order by the
08:32 - table columns
08:33 - okay
08:35 - so this is looking good let's just
08:37 - stretch this out so we can add a few
08:38 - more things and i'm just going to move
08:40 - this around like so so that we can put
08:42 - in essentially another
08:44 - select and another text widget
08:48 - while we are here however i'm just going
08:50 - to rename this as this is something that
08:52 - i will probably want to pick out later
08:54 - so i'm going to rename this to key
08:57 - select
08:58 - just like so
09:00 - and wonderful
09:02 - now in out smith an easy way to
09:04 - essentially duplicate what we have just
09:06 - done is to literally copy and paste the
09:09 - widget so that's what i've done here and
09:13 - now i can just use the same widget with
09:15 - the same sizing the same inputs and
09:18 - everything and just move it along to
09:21 - here and of course we need to rename
09:23 - this because as default this has been
09:25 - renamed to whatever the previous widget
09:27 - was with the word copy i want this to be
09:30 - the border select
09:32 - okay
09:33 - so there we go we've got the two selects
09:38 - let's now carry on before we get to
09:41 - changing these inputs later
09:44 - now finally for our table so to do this
09:47 - i'm just going to actually go to our
09:49 - widgets search for a table drag it in
09:52 - here just like what we've been doing and
09:53 - a table will be generated for us with
09:56 - some dummy data
09:58 - however we don't want this dummy data we
10:00 - want data from an actual database and
10:02 - this is going to be a mongodb database
10:05 - so this is definitely something i'm
10:07 - going to want to pick out later when we
10:09 - get to writing queries and writing some
10:11 - javascript so let's rename this let's
10:13 - rename this to data table again we don't
10:16 - have to do this you can of course pick
10:18 - it out by the existing name this is just
10:20 - for readability more than anything for
10:22 - this tutorial so just keep that in mind
10:26 - okay so i've just renamed this to
10:29 - data table and this means that instead
10:32 - of having all of this
10:34 - generic data that has been added for us
10:37 - by appsmith i want to
10:39 - get some real data from my database so
10:42 - to do this let's connect to mongodb
10:45 - so all i'm gonna do is head over to our
10:49 - data sources and then once here well we
10:52 - actually need to make our database first
10:54 - so let's head over to mongodb and just
10:56 - sign up for free let's go to mongodb
10:59 - atlas and i'm just simply going to sign
11:02 - up now i've already done the sign up
11:04 - process for this if you haven't please
11:06 - pause here and do the sign up process as
11:09 - if you you know have never used this
11:11 - before if that is the case or just sign
11:13 - in if you have already used mongodb
11:16 - i'm going to choose to log in with my
11:18 - account that i use for mongodb tutorials
11:23 - and
11:24 - amazing
11:25 - so this is what my dashboard looks like
11:30 - as you can see there are a few projects
11:32 - that i've previously done
11:34 - but we are gonna have to create a new
11:37 - project
11:38 - so what should we call this project i'm
11:40 - just gonna call it communications as
11:43 - that is the app that we are working on
11:45 - it's a communications dashboard
11:47 - and once we have named this whatever we
11:50 - wish
11:51 - i'm just going to go ahead and click
11:53 - here
11:54 - and this will take me to
11:56 - the next step in which we add members
11:59 - and set permissions well this is easy
12:02 - i'm just gonna add myself really so
12:04 - let's go ahead and create our project
12:07 - okay
12:08 - and
12:09 - wonderful now let's build a database we
12:12 - are of course going to use the free
12:14 - option for this of course you don't have
12:16 - to this is just for the secret to
12:18 - tutorial so i'm going to click on the
12:20 - shared option right here and now let's
12:23 - go ahead and select some of these
12:26 - options
12:27 - so the shared option well this means
12:29 - that we can only use some of these i'm
12:31 - going to go ahead and stick with the one
12:33 - they are suggested for me and create a
12:36 - cluster
12:38 - once this cluster has started to make
12:40 - let's just fill out these security quick
12:43 - start questions let's give our database
12:46 - a username and password i'm just going
12:48 - to go ahead and make my username
12:50 - annakubo and the password i'm going to
12:52 - use is one two three
12:54 - and i'm just going to create my user of
12:56 - course please choose something more
12:58 - secure again this is just for tutorial
13:00 - purposes so i'm fine with that
13:03 - and wonderful let's also add my current
13:07 - ip address this just means that i will
13:09 - only be able to access this from my
13:12 - current ip address okay
13:15 - so that will be the same for you if you
13:17 - try to access your database from another
13:20 - ip address it won't work thanks to this
13:23 - and let's finish this
13:25 - out
13:26 - and wonderful so now our cluster is
13:29 - being created
13:30 - once that has done you should see
13:32 - something that looks like
13:35 - this
13:36 - okay and now we are ready to
13:41 - start our first collection so let's just
13:43 - click on cluster 0 right here and on the
13:46 - collections let's create our first
13:48 - collection let's add my own data and
13:52 - call our database something i'm just
13:54 - going to call it data for now and our
13:56 - collection name where we're going to
13:58 - have a few things in here we're going to
14:00 - have a
14:01 - customers
14:03 - collection in which we're going to store
14:05 - all our customer data okay so let's just
14:08 - go ahead and call this
14:10 - customers and click create
14:13 - so now you will see that we have data
14:16 - and then a collection called customers
14:19 - and if we want to add another collection
14:21 - just go ahead and click the plus sign
14:23 - right here and checking that you're
14:25 - under the database name data just go
14:27 - ahead and add a collection name of
14:29 - mailing list in which we're gonna store
14:31 - all our mailing lists for our app
14:34 - and just click confirm again
14:37 - and once again a third collection we're
14:40 - gonna have three collections for this
14:42 - project it's to be a marketing list so
14:45 - once that is done just go ahead and
14:47 - click create
14:49 - and
14:50 - wonderful so there we have our three
14:52 - collections in the database called data
14:55 - now i'm gonna just add some customers in
14:58 - here manually to get started okay we are
15:01 - going to be able to add customers from
15:02 - the dashboard itself but just to get
15:04 - going we're going to create some and add
15:06 - them in manually just so we have
15:08 - something to work with
15:10 - so to do this i'm going to insert this
15:13 - first customer into the customer
15:17 - collection as you can see an id has
15:19 - already been generated for me thanks to
15:22 - mongodb and i'm just going to choose
15:24 - this json
15:26 - option just because i prefer working
15:29 - this way you can choose the other option
15:31 - but for me this is slightly easier as it
15:34 - allows to copy and paste and just really
15:37 - kind of you know create these customers
15:39 - quickly as we are going to create 10.
15:42 - so don't forget the comma
15:44 - and what is our customer object going to
15:47 - look like well
15:49 - we are going to have a user do not
15:51 - disturb and this just means that the
15:53 - user has chosen to not be to start okay
15:57 - so that is an option that we're going to
15:58 - have for our app the next thing we're
16:00 - going to have is a customer email id
16:03 - which is simply just going to be an
16:05 - email address for that customer so let's
16:08 - go ahead and do that now
16:13 - and just fill it out again this is all
16:15 - just random data of course these emails
16:19 - you know i don't know if they exist
16:20 - maybe they do but they are just dummy
16:23 - data
16:24 - the next thing i'm going to do is just
16:25 - have a customer id that is separate to
16:28 - the document id above this is a customer
16:31 - id that i have chosen for the customer
16:34 - let's start off with z1001
16:38 - and then we're also going to have a
16:39 - customer name and this is what the name
16:42 - of the customer is that the customer has
16:44 - chosen to be represented by
16:47 - okay so there we go this is our
16:50 - essential customer object now i'm going
16:54 - to copy this so that we can use it to
16:56 - create way more customers and i'm just
16:59 - going to insert this into the collection
17:02 - just like so there we go there we have
17:05 - our fast customer let's create some more
17:08 - so i'm simply just going to insert a new
17:11 - document
17:12 - click on the json option put in the
17:14 - comma paste away and then i'm just going
17:17 - to
17:18 - format this a little bit change the
17:20 - customer id
17:22 - change the email id so i'm just going to
17:25 - make something up once again just like
17:27 - so change the customer name so once
17:30 - again i am just making this up and click
17:34 - insert
17:35 - so there is a few of these to go
17:39 - i'm just going to do one more and then
17:40 - i'm just going to fast forward them for
17:42 - you because you know you should probably
17:44 - get the gist by now and there should be
17:45 - 10
17:46 - so once again i'm just going to insert
17:49 - into the collection choose the json
17:52 - option
17:53 - format this a little bit better and then
17:55 - i'm just going to change the customer id
17:58 - and of course the customer name to once
18:01 - again something that i am making up and
18:03 - click insert
18:07 - okay so there we go like i said i'm not
18:10 - going to put you through all of this so
18:12 - i'm just going to fast forward and cut
18:14 - this bit out until we have 10 customers
18:16 - in our database
18:21 - and wonderful so there we have 10
18:24 - customers in our database right now
18:26 - there are 10 in here
18:28 - so there we go and now we can use this
18:31 - in order to populate the table in our
18:34 - app
18:35 - so
18:36 - great so first off we're going to have
18:38 - to get the
18:40 - url that we're going to need to connect
18:41 - to our database so to do this i'm
18:44 - actually going to go to the overview of
18:47 - this cluster 0 and just click on the
18:52 - connect
18:53 - once here we are going to choose the
18:55 - connect our application option
18:58 - and let's go ahead and just get this
19:01 - whole connection string right here so
19:03 - just go ahead and copy all of this
19:06 - take it and we're gonna go back into our
19:10 - appsmith portal
19:12 - and then under the data sources i'm
19:15 - going to create a new data source and we
19:18 - already have mongodb configured in here
19:21 - to make our lives a lot easier so select
19:23 - the mongodb database option
19:26 - and then
19:27 - right under here let's go ahead and
19:31 - choose the connection string option and
19:35 - then paste our connection string in here
19:38 - making sure to remove my first database
19:41 - and change it to
19:42 - data
19:44 - and then also change the password to 123
19:47 - or whatever you chose to save as your
19:50 - password okay
19:53 - great now we also have to whitelist
19:55 - these ip addresses so just where we
19:58 - added our own ip address we can add
20:01 - these two right here so let's go back to
20:04 - mongodb now and just close this
20:07 - and under network access
20:09 - i'm going to add an ip address
20:13 - so all i'm going to do is just paste in
20:15 - one of the ip addresses from the app
20:18 - smith page
20:19 - and click confirm
20:20 - and let's now go back to appsmith grab
20:24 - the other one
20:25 - and then once again go back into
20:27 - monkeytv and add that ip address
20:31 - and i'm simply going to paste it once
20:33 - again and click confirm
20:36 - so super easy that is currently pending
20:39 - but once that is done we can go back to
20:42 - appsmith and we can of course test the
20:45 - connection
20:47 - so let's go back in there now
20:50 - and then
20:52 - of the three buttons just select the
20:54 - third button and
20:56 - great
20:57 - this data source is valid let's go ahead
21:01 - and rename that once again just for
21:02 - readability i'm going to choose to call
21:05 - this communications data just so that we
21:08 - know
21:09 - what we need to find and it's just a lot
21:12 - more easier for us to work with
21:15 - so great so once that is saved
21:18 - let's carry on
21:20 - so now let's go back to our customer
21:22 - data page and click on the
21:25 - table
21:26 - just like so and get rid of all this
21:29 - dummy data and instead we are going to
21:32 - write a query so let's go ahead and
21:36 - click on the
21:38 - queries js right here on the left
21:41 - and create new or we're going to select
21:44 - the communications data option
21:47 - that we just made as a data source
21:51 - so let's scroll down and find that one
21:53 - right here
21:55 - and then you should see this page pop up
21:58 - so now we are writing our first query
22:00 - okay so to recap what we first did is
22:04 - created a data source and now we're
22:06 - writing a query okay that will use that
22:09 - data source
22:10 - so our query let's go ahead and call
22:13 - this something i'm going to choose to
22:15 - call this
22:18 - find
22:20 - query because we're going to find all
22:22 - the customers okay and just return them
22:25 - so making sure that is connected to the
22:27 - communications data i am now going to
22:31 - choose the command find documents and
22:33 - look in the collection customers
22:36 - okay because that is what collection we
22:38 - want from our database quote data and
22:41 - you're just going to click run
22:43 - and there we go you will see all the
22:45 - customers that we created in the
22:48 - previous step when we manually added
22:50 - them on mongodb
22:53 - easy right
22:54 - okay great so this is looking good now
22:57 - let's go back to our custom
22:59 - accumulations portal and once again just
23:02 - get rid of all the dummy data once we've
23:04 - selected the table data widget and then
23:08 - i'm going to use these two kylie braces
23:11 - so these two curly braces are an app
23:12 - smith thing it will just allow us to use
23:15 - the queries and not confuse the app by
23:17 - thinking it's text
23:19 - you can use javascript inside any widget
23:21 - to control things like its data source
23:24 - behavior and formatting just wrap the
23:26 - javascript in double brackets to
23:28 - separate it from regular text similar to
23:30 - mustache or handlebar syntax
23:32 - this allows you to link widgets to apis
23:35 - queries and javascript functions and is
23:37 - known as binding the widget
23:40 - so i'm just going to use find query dot
23:43 - data
23:44 - and
23:45 - ta-da that has brought back all our
23:47 - customers it has arranged it in columns
23:50 - for us it's got all the data it's very
23:53 - intuitive this is wonderful
23:56 - okay
23:58 - so this is looking good the next thing
24:01 - we're going to do is just customize this
24:03 - table a little bit more
24:06 - so what i can do is make some of these
24:08 - columns not visible as we don't need
24:11 - some of this information visible to the
24:13 - user using the app one of these things
24:16 - is not making the id visible and the
24:18 - other thing is just making a new column
24:22 - called a delete column so to make a new
24:26 - column i'm just going to go ahead and
24:28 - add a new column and let's just change
24:31 - this to say delete just like so and
24:34 - instead of having text in this delete
24:36 - column i actually would have an icon
24:39 - okay so i'm going to show you how to do
24:40 - that now
24:43 - so to do this just go ahead and click on
24:46 - the little cog and it will show you all
24:48 - the options that we can have for this
24:51 - column
24:52 - so the column
24:53 - type well we don't want plain text we
24:56 - want an
24:57 - icon
24:58 - so let's just go ahead and select icon
25:01 - from this drop down right here
25:03 - and
25:04 - great an icon button has been generated
25:08 - for us
25:10 - now we can customize this further for
25:12 - example i want the icon to be a trash
25:15 - can so let's go ahead and select trash
25:18 - and
25:19 - great now because this is more severe i
25:22 - also want to change the color so let's
25:23 - go ahead and change the color of this
25:25 - trash can so i'm simply going to change
25:27 - the button color to be this
25:29 - red like so
25:31 - and
25:32 - great
25:33 - and then just just round it off a little
25:35 - bit too
25:37 - so of course this has no function
25:38 - analogy at the moment but i really want
25:40 - to show you what it's like to not have
25:42 - text in the columns you can have icons
25:45 - you can have buttons you can have
25:47 - whatever you wish
25:49 - we will be hooking this up later so just
25:51 - bear with me for now
25:54 - so now that we have that i'm just going
25:56 - to actually
25:57 - add a modal that will pop up when the
26:00 - delete button is clicked
26:03 - so again we are just doing the ui for
26:05 - now we will do the delete query a little
26:08 - bit later so to do this i'm just going
26:10 - to go back into the widgets
26:15 - and just search for the modal widget and
26:18 - just simply drag it over and place it
26:20 - under here like so
26:23 - so once we have the model here i'm just
26:26 - going to change the text i'm going to
26:28 - change the text to say delete row as
26:30 - that is what the model is going to be
26:32 - for we're going to confirm that we
26:33 - definitely want to delete this
26:36 - line
26:37 - so once that has been changed we can
26:39 - also do some other personalization
26:42 - let's also rename this to delete modal
26:47 - okay
26:48 - so for example i'm going to add some
26:51 - more text in here so let's go back to
26:53 - the widget and search for the text
26:55 - widget and just paste it in here like so
26:59 - and then we're going to have a warning
27:01 - message that says are you sure that you
27:03 - want to delete this item because i want
27:06 - to make sure that people are definitely
27:08 - sure that they want to delete it and
27:10 - we're just not deleting the line if
27:12 - someone clicks on it by mistake
27:15 - so great the next thing i want to do is
27:17 - just change the text of these buttons so
27:20 - let's go ahead and change this from
27:22 - close to cancel because you can change
27:25 - the text of these buttons quite simply
27:27 - like this
27:28 - and by default this already has an event
27:31 - the event is to close the module that we
27:34 - have renamed delete modal
27:37 - okay so that is in there by default
27:40 - and
27:41 - next i'm just going to
27:44 - change this to be a primary button and
27:46 - i'm just going to change the color of
27:48 - the second button to be this red
27:52 - just like so and on this click when we
27:56 - confirm we want to delete the row we're
27:59 - actually going to execute a query okay
28:02 - we're going to execute so this is where
28:03 - we get to writing the delete query we
28:05 - want to execute the delete query
28:08 - so let's on the on click event
28:11 - select well this time i'm actually not
28:14 - going to choose to just execute a query
28:16 - i'm going to change some queries
28:18 - together which is why i'm going to just
28:20 - choose the javascript option so i can
28:22 - write my own javascript in here
28:25 - so to do this just click on the js
28:27 - button until it's turned blank and we
28:30 - are going to run the query delete query
28:33 - which as i said we are yet to write
28:36 - so we would do delete query run
28:39 - and then this
28:40 - function so we're essentially chaining
28:43 - functions in here so once with the
28:46 - delete query runs we're going to run the
28:48 - find query
28:50 - the find query is the one that will
28:51 - bring back all the customers again once
28:54 - the customer has been deleted so
28:56 - essentially refreshing our data to truly
29:00 - represent what is in there okay
29:04 - and then we are also going to close the
29:05 - modal so we're going to write close
29:07 - modal and the modal we want to close is
29:09 - the delete model that we have just
29:11 - created
29:12 - so that is how you would do that
29:16 - chaining all of these things together so
29:18 - that they happen in the right
29:20 - order
29:21 - okay
29:22 - great so of course delete query does
29:24 - have some little red squigglies under it
29:26 - because we don't have that query yet so
29:28 - appsmith is telling us that this is the
29:30 - case and this will be an error so why
29:33 - don't we get to
29:35 - writing
29:36 - that query
29:37 - okay now we're going to actually hook up
29:39 - the button to open the module so that we
29:42 - can open it so i'm just gonna do that
29:44 - now quickly
29:46 - just on click
29:48 - event and change that
29:50 - while i'm here i'm also gonna delete
29:52 - this icon we've done it this is looking
29:55 - so so good
29:57 - so
29:58 - all i'm going to do is just under here
30:01 - go to add query create new making sure
30:05 - to select the communications
30:08 - data
30:09 - and this query is going to be a delete
30:11 - query so let's just name this delete
30:13 - query for readability
30:15 - and the collection we want to work with
30:17 - is the customer collection and the
30:20 - command we want to do is delete document
30:22 - and how we're going to delete the
30:24 - document where we're going to search for
30:26 - it by the
30:27 - id
30:28 - okay the object id
30:31 - so
30:32 - let's go ahead and choose the object id
30:36 - that we are deleting
30:38 - so this is the syntax for working with
30:41 - mongodb we're going to have the id
30:44 - and then we are going to get the object
30:47 - id of the table
30:49 - data of the data table so essentially
30:51 - the table we called data table on our
30:54 - dashboard and then we're going to get
30:56 - the triggered row
30:58 - id
30:59 - okay
31:00 - so that is how we know that we're going
31:03 - to delete the correct row we're going to
31:05 - select it from the table of the
31:08 - triggered row and then pass it through
31:10 - into here so that it gets sent off to
31:12 - mongodb and deletes the correct one by
31:15 - the object id
31:17 - okay so hopefully that makes sense just
31:19 - to make sure this is working let's click
31:21 - run that
31:23 - and now let's check if it works so let's
31:26 - go ahead and choose one of these i'm
31:28 - going to choose the first one
31:31 - and click on the delete icon
31:33 - click confirm
31:35 - and then
31:36 - ta-da
31:37 - that has now been deleted from our
31:40 - database so that has worked
31:43 - okay the delete functionality of this
31:46 - app is now working
31:48 - so
31:49 - let's move on
31:51 - so this is all great and of course this
31:54 - table does actually come with some cool
31:56 - stuff that will allow us to search for
31:58 - things with the search bar it will also
32:00 - allow us to filter so for example we can
32:04 - filter by any one of these columns okay
32:07 - like this and we can do you know users
32:10 - do not disturb is exactly zero for
32:12 - example which of course will bring back
32:14 - all of them because i believe they are
32:16 - all zero at the moment but it just goes
32:18 - to show all the options that you have
32:20 - available to you just by using this
32:21 - table widget like
32:24 - this
32:25 - okay
32:26 - wonderful
32:29 - so now that we have that done i actually
32:32 - also want to
32:33 - do my own custom ordering so let's go
32:36 - ahead and use these inputs the select
32:40 - drop downs that i have made the first
32:43 - thing we're going to do is just delete
32:45 - all of these actually we can just use
32:47 - this as a template and let's change out
32:50 - the labels and the values
32:52 - so i want to be able to sort by
32:55 - three things i believe i want to be able
32:57 - to sort by the users do not disturb
33:00 - so let's just make the value the same
33:02 - like so
33:04 - and then let's also set
33:06 - and then let's also order by the
33:08 - customer name in fact there is one more
33:11 - thing we can choose to order by and that
33:14 - is the customer id so let's just go
33:16 - ahead and put the label as customer id
33:19 - and the value as customer id 2.
33:22 - great and let's also have a default
33:24 - value and i'm going to choose for this
33:26 - to be customer id
33:29 - okay
33:31 - so this is looking good uh as the
33:34 - visible here i'm just going to actually
33:36 - put in some js and that is just going to
33:40 - say that only make this visible if the
33:43 - find query data length is bigger than
33:47 - zero
33:51 - okay otherwise i don't want this to be
33:53 - visible
33:54 - wonderful
33:57 - now do we need any actions well yes on
34:00 - change so on change i actually want to
34:03 - run the find
34:04 - query
34:06 - query again because i want to
34:09 - essentially just bring back certain
34:12 - values in a correct order in this table
34:14 - so we're actually going to have to go
34:15 - back to our find query
34:18 - and add some stuff in there for this to
34:20 - work but just for now on the unchanged
34:23 - event or action we're gonna run the find
34:26 - query uh query again
34:29 - okay so at the moment this won't do much
34:32 - uh but we will be fixing that a little
34:34 - bit later for now let's do the ascending
34:37 - or descending option two
34:39 - so let's go ahead and select the second
34:42 - drop down and once again let's change
34:44 - the label to be asc for ascending and
34:48 - i'm going to get this value of one and
34:50 - the label to be d e s c for descending
34:54 - and change the value of this to minus
34:56 - one and delete the other options because
34:58 - i only want two options here and just
35:00 - like before visible is only going to be
35:03 - visible if the find query data length is
35:06 - bigger than zero so essentially saying
35:08 - there's you know more data in there than
35:11 - zero
35:12 - now we run the find query and then i'm
35:15 - also going to change the default value
35:18 - to be
35:19 - one so we're getting the value to be one
35:21 - but the label for that is ascending
35:24 - great
35:26 - so this is looking
35:28 - wonderful and on this we're also going
35:32 - to have to change the
35:34 - on change action and that is just going
35:36 - to be to run the query find query again
35:40 - okay
35:41 - great
35:43 - so like i said this won't do anything
35:45 - now because we have still a bunch of
35:47 - stuff to do and that is be able to run a
35:51 - query
35:52 - based on the
35:54 - two selects that i have written which is
35:58 - why we actually chose to rename these
36:00 - selects as key selects and
36:02 - order select so let's go back into our
36:05 - find query and as the query up here i
36:09 - just want to be able to sort
36:13 - the data so under the sort once again
36:17 - the syntax for mongodb used to have
36:18 - these two curly braces and then i'm
36:20 - going to use the appsmith two curly
36:22 - braces so that the platform essentially
36:24 - recognizes that this is not text and get
36:27 - the key select selected option value
36:30 - okay and then also the order select
36:34 - selected option
36:36 - value so that
36:38 - things are sorted
36:40 - by
36:41 - the option and whether it's ascended or
36:44 - descending thanks to the order select
36:48 - drop down
36:49 - okay
36:50 - great
36:51 - so this is looking good and of course if
36:54 - we run this it will bring back the data
36:57 - in the correct order
37:00 - and now if we go back into our app
37:04 - let's test it out
37:08 - okay so let's go back in here i'm just
37:10 - going to select the table and actually
37:12 - on page change i'm also going to execute
37:15 - the find query
37:17 - uh query okay and also on the search
37:21 - text change i'm also going to run it
37:23 - just as a backup i just want to make
37:25 - sure that this query is being run if we
37:27 - change anything in here so that we're
37:30 - always going to get the correct data
37:31 - coming back
37:33 - i'm just going to refresh this page to
37:35 - make sure
37:36 - amazing so this is now working this is
37:39 - looking good let's go ahead and switch
37:41 - some of these out again so
37:44 - great this is all being sorted by
37:48 - ascending and descending
37:50 - order
37:52 - okay wonderful so another part done we
37:55 - have now finished making this table
37:58 - sort by our
38:00 - customized sort functions let's
38:05 - carry on
38:07 - now the next thing i want to do so we've
38:09 - deleted stuff from the table we've got
38:11 - all the data from the table the next
38:13 - thing we're going to do is actually add
38:15 - customers directly from the platform to
38:17 - this table
38:18 - so to do this i am going to choose
38:21 - another widget it's going to be a button
38:23 - so let's go to the widgets right here
38:26 - and just search for the button widget
38:28 - i'm just going to drag over so that we
38:31 - can essentially connect it to a another
38:34 - modal
38:35 - so for now i'm just going to rename
38:37 - whatever the label is for this button to
38:40 - be new customer and we can actually add
38:43 - icons as well to these buttons so if we
38:46 - scroll down to all the options for a
38:48 - button you will see the option to add an
38:52 - icon i'm just going to put in a plus
38:54 - sign like so and you can align it to the
38:57 - left or right but i'm going to keep it
38:59 - here i quite like that
39:02 - now that we have that done let's go
39:03 - ahead and find another modal in our
39:05 - widgets so once again let's search for
39:08 - the modal and then let's just drag it
39:10 - down here wherever it doesn't really
39:12 - matter and there we have our roso
39:16 - so this model well i'm going to rename
39:20 - this like we did before i'm going to
39:21 - call this insert modal as that's what
39:24 - it's for we're going to use it to insert
39:25 - a new customer to our database
39:29 - okay
39:30 - so
39:31 - there we go
39:33 - and now let's go ahead and connect this
39:36 - button so that if we click on the button
39:39 - so let's get the on click event i'm
39:42 - going to use it to open a modal
39:44 - so just select the open modal option
39:48 - and then the modal we want to open is
39:50 - the
39:51 - insert
39:53 - modal
39:54 - great
39:55 - so now if i click on the button it opens
39:58 - up the insert modal this is looking
40:00 - wonderful it's exactly what i wanted
40:04 - so first things off let's just change
40:06 - the text of this just like we did before
40:08 - to insert row
40:10 - and now that we have that i'm actually
40:13 - going to
40:14 - put in some inputs here as to create a
40:17 - customer we're going to have to have a
40:18 - lot of inputs right
40:19 - so let's go ahead back to the widgets
40:21 - and search for the input widget
40:24 - and let's change the name of this to
40:27 - insert call input 1 again just for
40:30 - readability so that we know what we need
40:32 - to pick out when a time comes to it
40:36 - so in here let's get this some default
40:39 - text at the moment i'm just going to put
40:41 - in this uh hard coded customer number
40:44 - but we actually want to generate this
40:46 - randomly i'm going to show you how to do
40:48 - that in a bit and the label for this is
40:50 - going to be customer id
40:53 - so this is looking good and now let's
40:56 - just space that out a little bit too
40:59 - and
41:01 - great
41:02 - so there we have our first input that's
41:05 - what it looks like and we've hard coded
41:07 - a number in here this is not a
41:09 - placeholder it is a hard coded number
41:12 - and i'm just going to make this a little
41:14 - bit longer just so that it looks
41:17 - like
41:18 - this
41:19 - now while we are here i'm also going to
41:21 - make this feel required we don't need
41:23 - this visible toggle on
41:25 - and
41:26 - great
41:27 - this is looking good
41:29 - one last thing i'm going to do is just
41:31 - make this bolt
41:33 - now with the same technique we used
41:34 - before i'm actually going to copy and
41:36 - paste this input again so let's just
41:39 - copy and paste it and then just drag it
41:41 - underneath like so and i'm actually
41:42 - going to do this a third time too so
41:45 - that we have three inputs just stacked
41:47 - over each other and just move some
41:49 - things around so that it looks a little
41:51 - bit neater and better so i'm just going
41:53 - to move these buttons i'm going to move
41:55 - them down here and space them out
41:57 - equally at the bottom of our module
42:01 - great
42:04 - okay
42:05 - so now that that has been copied i'm
42:07 - just going to rename some of these so we
42:09 - don't need this copy here let's go ahead
42:11 - and change this to insert column input 2
42:14 - and i'm simply going to change the label
42:16 - as well to customer email id
42:20 - okay and the default text for this well
42:22 - we did default text we don't actually
42:24 - want any default text we just want a
42:26 - placeholder this time so i'm just going
42:28 - to put in a placeholder email email.com
42:32 - okay and same for the third one i'm just
42:35 - going to rename this to insert column
42:37 - input 3 and the placeholder text is just
42:40 - going to be j and we're of course going
42:43 - to change the label to to be customer
42:45 - name
42:46 - okay and let's just re-jiggle this a
42:48 - little bit better so that it looks
42:50 - nicer and
42:52 - wonderful
42:53 - now as promised the default text well i
42:56 - want to randomly generate a customer id
42:59 - so let's keep it the same format that we
43:01 - have been giving so with a little c
43:04 - and then a number which i'm going to
43:05 - generate randomly okay so we're going to
43:08 - use the javascript
43:10 - object math floor to round down a random
43:14 - number okay from essentially anywhere up
43:18 - to
43:19 - ten thousand
43:21 - so math random multiplied by ten
43:23 - thousand will do that for us so if you
43:26 - use this and again using the kylie
43:28 - braces so that appsmith knows not to
43:30 - treat it like text
43:32 - we will get a random number in this case
43:34 - it is 1720.
43:38 - amazing now of course this isn't
43:40 - foolproof there is a chance that someone
43:42 - gonna have the same customer id but this
43:44 - is just for tutorial purposes so i'm
43:46 - gonna say that it's fine for now
43:49 - now let's move on i am going to now use
43:53 - a switch so that we can switch if the
43:55 - user wants to be disturbed or not so
43:57 - let's go back into the widgets and i'm
43:59 - just going to search for the switch
44:01 - widget
44:02 - and just pop it in right here and then
44:05 - change the label to be do not disturb
44:08 - okay
44:09 - so there we go that we have the do not
44:12 - disturb label and
44:14 - okay so now what do we want to happen
44:17 - well on the close nothing that needs to
44:20 - change on this we're just going to close
44:21 - the modal and on the confirm button
44:25 - let's go ahead and change this to insert
44:27 - button because we might want to pick
44:29 - this out later and i just want to make
44:31 - sure that we are picking out the correct
44:33 - button which is why i've called this
44:35 - insert button
44:36 - and now on the confirm button well what
44:39 - do i want to happen well i want a few
44:41 - things to happen i actually want to run
44:44 - a query that will insert this user which
44:46 - way you have to write
44:48 - but let's go ahead and do that because
44:49 - we want a few things and again we want
44:51 - to change them so on the on click just
44:53 - choose the javascript
44:55 - option so we can write our own
44:57 - javascript and let's get up our two
44:59 - curly braces and i'm just going to write
45:01 - insert query run again we have not
45:04 - written this yet and inside i am going
45:07 - to put a callback function that will run
45:10 - the find query after we've inserted our
45:13 - new user so after the insert query runs
45:17 - we then want to run the find query so
45:20 - we'll find all our customers again and
45:22 - then we want to close the modal so once
45:24 - again we're going to use close modal
45:27 - and we are going to close the
45:31 - insert modal
45:33 - okay
45:35 - so while i'm here i'm just going to
45:36 - rename this button to reset button
45:40 - and
45:41 - let's carry on
45:42 - so now let's get to writing our insert
45:44 - query once again i'm just going to click
45:46 - on the add query js create new new
45:50 - communications data and call this insert
45:54 - query
45:56 - now what does our insert query look like
45:58 - well we are going to
46:01 - want to
46:02 - of course
46:03 - the command we're going to use for this
46:05 - is not going to be find documents it's
46:07 - going to be insert documents the
46:09 - collection we're going to work with is
46:10 - our customers collection and the syntax
46:13 - we're going to use well this is mongodb
46:14 - syntax we're going to insert the object
46:18 - essentially into our customer collection
46:22 - so for this we're going to get our curly
46:24 - braces out to create an object and we're
46:26 - going to get the customer id
46:28 - now as the value we are gonna go into
46:32 - okay we're gonna go into the input which
46:34 - we called insert column input one and
46:37 - we're gonna get the text
46:39 - whatever's in there
46:41 - okay so that's what we have done
46:44 - and then the next thing we're going to
46:45 - do is get the costs let's call this
46:48 - customer
46:49 - email id just like we did in mongodb
46:52 - and once again as the value we're going
46:54 - to get our two curly braces up so it
46:56 - knows not to treat this as text i'm
46:58 - gonna go into the insert column input
47:00 - two and get the
47:02 - text
47:03 - okay just make sure that this is all
47:05 - spelt correctly just like we did in the
47:07 - collection okay so maybe it's safer just
47:10 - to copy this and just paste it like so
47:13 - to prevent any spelling mistakes
47:17 - and then again let's get our kylie
47:19 - braces up and get the insert column
47:21 - input three text
47:23 - okay so there we go
47:25 - and
47:26 - now we also need the users do not
47:28 - disturb so let's go ahead and get that
47:30 - one
47:32 - and wonderful and of course we need the
47:34 - curly braces and this time we're gonna
47:36 - get the switch one and then we're gonna
47:38 - get the is switch on and if it is we're
47:41 - gonna return a one and if it's not we're
47:44 - gonna return a zero
47:47 - cool so that is how we are going to
47:51 - control if a label is switched on or
47:54 - not
47:55 - okay
47:56 - so if it is it will assign the values uh
47:59 - one and if it's not it's going to assign
48:01 - the value of zero
48:03 - great
48:04 - so i believe that is it let's just have
48:07 - a quick check to see if this is working
48:11 - so let's go back of course don't forget
48:13 - to run this first
48:15 - and let's go back to here let's click on
48:17 - the new
48:18 - customer okay and then a random id has
48:21 - been generated for us let's put in a
48:24 - customer email i'm just going to put
48:26 - tests at test.com the customer name of
48:29 - course
48:30 - let's
48:31 - again just put in something in here i'm
48:34 - going to put in test
48:36 - user and do not disturb i'm just going
48:38 - to keep that as it is and click submit
48:41 - and now if we search in here
48:44 - amazing our test user has been added
48:49 - this is looking so good everything is
48:51 - working our insert query is working and
48:54 - we have successfully added a new user to
48:57 - our database from the dashboard itself
49:01 - great so now let's carry on
49:03 - the last thing i want to do so once
49:05 - again we've got all the data we've
49:07 - learned how to delete a customer from
49:09 - our database we've learned to add a new
49:11 - customer from our database and i want to
49:13 - edit a new customer in our database so
49:16 - i'm just going to do this to the right
49:18 - of what we have built so far so i'm
49:20 - going to get a container so once again
49:22 - let's search for container
49:24 - let's make this a little bit smaller so
49:26 - that it fits and then i'm just going to
49:28 - drag that in here
49:30 - once again i'm just going to customize
49:32 - this a little bit thanks to the options
49:34 - that we have and i'm just going to give
49:36 - this a border radius of 30. okay
49:39 - so that's what it will look like and now
49:41 - i'm just going to drag in some text
49:44 - so under the widgets i'm going to find
49:46 - the text widget and i'm simply just
49:49 - going to drag it in here like so and
49:51 - call this update selected row
49:54 - okay so i'm just changing the text just
49:57 - so that it represents what we want to
49:59 - say and then of course i can you know
50:02 - customize this further i can give this a
50:04 - heading 2
50:06 - just to make it a little bit bigger and
50:09 - great
50:10 - now once we have that the next thing i'm
50:13 - going to do is just put in some inputs
50:15 - because we are going to want to change
50:17 - some of the inputs that we have so to do
50:19 - that we're going to populate the input
50:21 - with the selected row that we have
50:22 - chosen and then we also have the option
50:24 - to change it so again under the widgets
50:28 - let's just go ahead and find
50:31 - well actually i'm just going to put in
50:33 - some
50:34 - yeah let's put in the input so let's
50:35 - just drag in the input like so
50:38 - this input i'm gonna name this
50:41 - update column one
50:43 - and the default text well it's gonna be
50:46 - the
50:46 - data table selected row
50:50 - customer
50:52 - id
50:53 - okay so i'm just going to use whatever
50:56 - row is selected on the left to
50:58 - essentially populate this uh
51:01 - this
51:03 - input right here
51:05 - valid i'm going to keep as true
51:07 - and the label for this is going to be
51:09 - the customer id
51:11 - okay and i can choose to make the
51:13 - customer id bold the label bold if we
51:16 - just click this button right here
51:18 - and
51:19 - wonderful
51:20 - so there we have it of course i need
51:22 - more of these so let's use the same
51:24 - technique before and copy and paste this
51:27 - widget to create some more widgets
51:30 - so once again let's rename this to
51:32 - update column two
51:34 - this time make the default text the
51:37 - selected row customer email id and of
51:40 - course this means we need to change the
51:42 - label to customer email id as well
51:46 - okay and once again i'm just gonna copy
51:49 - the third one change this to update
51:51 - column three change the default text to
51:54 - be the customer name and then just
51:56 - change the label to be the customer name
51:58 - as well
52:00 - great so now let's check if this works
52:02 - let's selects a different row
52:05 - and
52:06 - amazing so that is changing everything
52:09 - is looking good
52:11 - now of course we also need the switch so
52:14 - let's search in the widgets and i'm just
52:16 - going to search for the switch widget
52:18 - i'm going to paste it in here and then
52:21 - of course change the label of this i'm
52:23 - going to change it to users do not
52:25 - disturb and then we can change the
52:28 - alignment but i'm going to keep it as it
52:29 - is
52:30 - okay
52:31 - so this is looking good and as the
52:34 - default selected well once again we're
52:36 - going to get up off two curly braces go
52:38 - into the data table get the selected row
52:42 - and get the users do not disturb and if
52:46 - it equals one this is going to be true
52:49 - okay
52:50 - so as none of these really apart from i
52:52 - think one equal one that should be false
52:55 - the switch should not be clicked
52:58 - and actually let's just go ahead and
52:59 - change the alignment why not
53:02 - and
53:03 - great
53:04 - so
53:06 - amazing this is looking
53:08 - good
53:09 - i am liking this so far
53:12 - now of course we need a button to
53:15 - confirm that these are the changes we
53:17 - want to make to the selected row so
53:19 - let's go ahead and go back to the
53:21 - widgets search for a button widget and
53:23 - just drag it in here i'm just going to
53:26 - rename this to update
53:28 - button so that we know what we are
53:30 - working with
53:32 - the label of this uh i'm going to change
53:34 - it from submit to update so that it
53:36 - makes more sense and then on click we're
53:40 - going to execute a
53:42 - query this is going to be a new query
53:44 - one that we haven't written yet called
53:46 - update query so let's go ahead and
53:49 - rename this to the update query and this
53:53 - time we're going to update a document
53:56 - we're going to do this in the customer
53:58 - collection so let's just change that to
54:00 - say customer and we're going to
54:02 - just kind of like we did before
54:05 - so the query we need for this well we're
54:07 - going to go and look for the object id
54:11 - so id and that's going to be the object
54:14 - id of our
54:16 - data table selected row id so just to
54:20 - make sure that we are actually updating
54:22 - the correct document
54:24 - and then what are we going to update
54:26 - well we're actually just going to have
54:28 - to write the same object again with the
54:30 - new values
54:32 - so we're going to update we're going to
54:33 - get up our curly braces we're going to
54:35 - get the customer id and then of course
54:39 - we are going to well in fact we can
54:41 - actually copy this from the
54:44 - insert query as it's just the same so
54:46 - let's go back to our insert query and
54:48 - i'm just going to copy all of this and
54:52 - on the update query just paste it
54:54 - however we are going to change the
54:56 - widget that this is reading from right
54:59 - so instead of insert column i'm going to
55:02 - change this to update column
55:05 - 1
55:06 - just like this
55:07 - and of course update column 2 as that is
55:10 - the column that we want to read from or
55:13 - that is the input sorry that we want to
55:14 - read from and update column 3 as well as
55:18 - well as switch to
55:20 - okay so just make sure to change those
55:22 - up as well or change them up to whatever
55:25 - you called your own widgets
55:27 - great so let's click run and let's test
55:30 - this out
55:31 - so if i go ahead and just make sure
55:34 - you're selected on one of the rows
55:37 - if i go ahead and just change some of
55:40 - this
55:42 - so first off let's just make sure that
55:44 - the button is actually going to run the
55:45 - query so on click update query run and
55:50 - then on success once again i'm going to
55:52 - find
55:53 - run the query find query okay
55:56 - and also on error i'm just going to show
55:59 - the alert so that we know that an errors
56:01 - has happened and the alert is going to
56:04 - say
56:05 - error while updating resource okay so
56:08 - this essentially is going to show up if
56:11 - there is an error in our uh update query
56:15 - running okay
56:18 - great
56:19 - so
56:20 - cool shall we check this out
56:24 - first off actually let's just make sure
56:26 - that we can read this so to make sure
56:28 - that the label appears on top all you
56:30 - have to do is just stretch out this
56:32 - widget
56:33 - just like so i'm just reformatting it so
56:36 - that we can see things a little bit
56:37 - better and just in general making sure
56:39 - that it looks a little bit nicer for us
56:45 - okay
56:46 - so we are now officially done with this
56:50 - page everything's working we have
56:52 - essentially we have essentially learned
56:54 - how to get data from our database delete
56:57 - data from our portal add a new customer
57:00 - from our portal and update an existing
57:03 - customer from our portal too
57:05 - now the next thing we want to do is be
57:07 - able to send messages to these customers
57:09 - based on their options and what mailing
57:11 - lists they are associated with so to do
57:14 - this let's just go ahead and create a
57:16 - new page
57:18 - so to do this let's just go over here to
57:21 - the left and all i'm going to do
57:24 - is just press on the plus button next to
57:26 - pages and a new page will be created for
57:29 - me
57:31 - once again we have the two options i'm
57:33 - going to choose to build with drag and
57:35 - drop and let's rename the page while we
57:38 - are here i'm going to choose to call
57:40 - this the send messages page so that we
57:43 - know what is happening on this page
57:46 - and now let's get to selecting our first
57:50 - widget
57:51 - in fact we can actually copy how the
57:54 - customer data
57:55 - page looks like i'm just going to select
57:57 - the header and just paste it in here
58:00 - like so which makes our life a lot
58:02 - easier and let's rename this to be the
58:05 - marketing portal okay just like so
58:10 - just so that it's very clear that this
58:11 - is separate to the other page and let's
58:14 - go ahead and change this image too so
58:17 - once again this is one i found on the
58:19 - internet before so you can use it as
58:21 - well or you can use your own it is
58:23 - completely up to you
58:26 - okay so it's a loud speaker here as i
58:28 - feel that kind of symbolizes what this
58:30 - page is going to be about
58:33 - so next up i'm just going to start you
58:37 - know creating what the layout of this
58:39 - page should look like so i'm going to go
58:41 - into my widget i'm going to search for
58:43 - the container
58:45 - okay
58:46 - and then i am simply going to drag in a
58:48 - container just like this and then i want
58:51 - to put some text into this container
58:54 - this text is going to be here and it's
58:56 - just going to
58:57 - show us essentially how many customers
59:00 - we have to work with
59:02 - so let's change the label of this to
59:04 - total customers so go ahead and change
59:07 - the text widget like so and we can also
59:10 - change the text color now if i don't
59:12 - like any of these colors i can choose my
59:14 - own so i'm simply going to change the
59:16 - hex value of this just like that so that
59:19 - it's a lighter gray
59:22 - once that is done i'm just going to drag
59:24 - in another text
59:27 - this time the text of this is going to
59:29 - i'm just going to hard code it to be 0 0
59:31 - for now we are going to change this
59:33 - later this will be dynamic based on our
59:35 - database and the amount of customers we
59:38 - have in there but for now just leave it
59:40 - as this okay and i'm just going to
59:42 - change this to be a
59:44 - heading
59:45 - one actually let's make it a heading one
59:48 - wonderful
59:50 - so
59:50 - once we are happy with what this looks
59:52 - like i'm just gonna shift these things
59:55 - around a little bit
59:57 - okay just like so
59:59 - i'm just going to put in an icon so i'm
60:02 - going to search for the widgets once
60:03 - again and i'm going to put in a icon
60:05 - button to just paste that in here like
60:08 - this and this is going to symbolize
60:10 - visually what this section is all about
60:13 - so i'm going to search for
60:15 - people
60:16 - so there we have our people icon and i
60:20 - can also change this to be a secondary
60:22 - button
60:23 - just like this and we can also make it
60:25 - more of a
60:26 - rounded square if we want
60:28 - i'm not going to give this any
60:30 - functionality i just wanted to kind of
60:32 - show what this section is all about
60:35 - okay
60:37 - great and let's also give a border
60:40 - radius to the container itself so make
60:42 - sure you're actually on the container
60:44 - when you do this
60:46 - wonderful
60:47 - now again we want to show a lot of other
60:51 - statistics too not just how many
60:52 - customers we have so i'm going to copy
60:54 - this whole container and everything in
60:56 - it using the copy face functionality
60:59 - and i'm just going to drag in wherever i
61:02 - want these other containers
61:04 - so there we go i do want four this is
61:07 - going to store our major analytics if
61:10 - you will
61:12 - so let's change the name of this the
61:14 - first one i want to say reachable
61:16 - customers as this is going to hold the
61:19 - statistics for our reachable customers
61:21 - which is essentially all the ones with
61:23 - do not disturb not on
61:26 - and let's also change the icon for this
61:28 - so i'm going to make this an icon that
61:31 - symbolizes reachable customers
61:34 - just like so so i'm going to choose this
61:37 - one right here
61:38 - now let's move on to the third analytic
61:42 - provider
61:43 - this is going to say do not disturb
61:45 - customers
61:47 - okay
61:48 - so essentially we want to show how many
61:49 - customers which have the do not disturb
61:51 - on and let's change the icon of this to
61:54 - symbolize that to with the blocked
61:57 - person icon
61:59 - and finally on the third one we're just
62:02 - gonna have mailing list count and this
62:04 - will just be how many mailing lists we
62:07 - have on our dashboard and of course
62:10 - let's change this to be some kind of
62:12 - list
62:13 - too
62:14 - great
62:15 - so this is looking good now let's get to
62:17 - displaying the mailing list we have and
62:20 - adding the option to add a new mailing
62:22 - list if we wish as well as show exactly
62:25 - who's on these mailing lists and then
62:27 - add the option to message these people
62:29 - as well
62:31 - so let's do it
62:34 - so once again let's go into our widgets
62:36 - and i'm going to choose the container
62:38 - just drag it in here like so and then
62:40 - i'm also going to choose a second one
62:42 - too
62:43 - so once again let's give the container
62:46 - the border radius this time of 15
62:48 - and just do the same for the other one
62:51 - as well okay so on the left we're going
62:53 - to have our marketing list and on the
62:55 - right we're going to have all the people
62:57 - that are associated with that marketing
62:59 - list
63:01 - so to do this well let's actually just
63:04 - put in some text to visually show what
63:07 - these two sections are about so let's
63:10 - just drag in some text and i'm just
63:11 - going to rename this to marketing lists
63:15 - okay just like so and make sure this is
63:18 - a heading too
63:19 - just so that it's a little bit bigger
63:21 - and we can read it
63:23 - great
63:24 - and once again for the other side just
63:26 - drag in some text and this time let's
63:29 - give it the text of please select a
63:33 - marketing
63:35 - list to view the
63:38 - users
63:39 - okay
63:40 - and once again let's make this a heading
63:42 - to just make sure that it
63:45 - kind of
63:46 - fits in a nice
63:48 - way
63:49 - now we are going to use a cool widget
63:52 - and this is going to be a list widget
63:54 - which allows to map on different things
63:57 - from our database directly onto a list
64:01 - so if i search for lists and then i just
64:04 - drag it in here like so
64:07 - okay
64:08 - there we go
64:10 - at the moment it just has some default
64:12 - values from the default values on the
64:15 - right we want to replace this with our
64:18 - data from our database okay but to do
64:21 - this of course we're gonna have to put
64:24 - in that data
64:25 - so we will do this in a bit i'm just
64:27 - going to finish off starting this
64:29 - section first because we want to also
64:31 - add a button to actually create a new
64:34 - marketing list as well
64:35 - so in the widgets let's search for
64:37 - button and let's just drag in the button
64:40 - and on the label i'm just going to
64:42 - select new because we want to be able to
64:44 - add a new marketing list and of course
64:46 - we also want an icon to you know
64:48 - symbolize that we're adding a new list
64:51 - as well
64:53 - great
64:55 - so now i think i'm ready to start
64:59 - using our data source which is the
65:01 - communications data
65:03 - to write a another query
65:07 - so first off however let's go back to
65:09 -  tv because we need to add some
65:12 - dummy data for us to start working with
65:15 - so back in mongodb under the marketing
65:19 - lists i am going to insert our first
65:23 - markers in list
65:25 - so go ahead and just make sure magazine
65:27 - list is selected as a collection and
65:29 - insert document and once again i prefer
65:32 - to work with the json so just go ahead
65:34 - and select that json option
65:39 - so once again don't forget that comma
65:42 - and what is going to make up our
65:44 - marketing list well each marketing list
65:46 - is going to have a discord web hook
65:49 - because we are going to want to direct
65:52 - anyone from this marketing list to a
65:55 - channel on our discord so as an option
65:58 - you can have so let's go ahead and put
66:00 - discord web hook right here
66:02 - and now i'm going to leave this blank
66:04 - because i will be showing you how to do
66:06 - this later when we start working with
66:08 - the discord
66:09 - web hooks
66:10 - so just leave that blank for now i will
66:12 - come back to it in a bit
66:15 - the next thing we want to do is also add
66:17 - a creation date so the creation date uh
66:21 - well i'm just gonna put in a creation
66:24 - date that i have pre-written for you in
66:27 - the iso format okay so this is the
66:30 - format that we are to use for the
66:32 - creation date
66:34 - okay
66:34 - so there we go and the next thing i'm
66:37 - going to do is put a mailing list and
66:40 - this mailing list is essentially just
66:42 - going to be the name of the mailing list
66:44 - itself so on this occasion it's going to
66:46 - be bugs because we have a mailing list
66:49 - about people who want to know about bugs
66:52 - okay the next thing i'm going to do is
66:54 - just have the mailing list id which once
66:57 - again is different from the document id
67:00 - so let's go ahead and put in a random
67:03 - mailing list id like so and finally
67:06 - we're also going to have an icon
67:09 - okay
67:10 - so once again this is just an icon that
67:12 - i have taken off the internet of a lock
67:14 - you feel free to use this for tutorial
67:16 - purposes or please feel free to use your
67:18 - own
67:19 - and finally we're gonna have the users
67:21 - associated with this
67:24 - marketing list
67:25 - okay so
67:27 - here we are here is the users associated
67:30 - with this marketing list this is going
67:32 - to be an array of users based on their
67:35 - user id that we have written
67:38 - so i'm just going to put in some users
67:40 - in here again this is like kind of
67:42 - random it doesn't really matter which
67:44 - ones you want to use please feel free to
67:48 - use whichever ones you
67:50 - wish
67:52 - okay so i believe we only have up to 10
67:54 - so i think this is fine for now let's
67:57 - just have these three
67:59 - wonderful so there is our first
68:01 - marketing list i'm just going to copy
68:03 - all of this to make our lives easier
68:05 - when it comes to making the next one and
68:07 - insert this one into our marketing list
68:09 - collection
68:11 - great
68:13 - so
68:14 - this is now done let's go ahead and
68:16 - create a new one once again don't forget
68:19 - the comma and i'm just going to paste
68:20 - this in here right so and reformat it a
68:23 - little bit and i'm just going to change
68:25 - the
68:26 - a few things let's just change the
68:27 - creation date let's change the mailing
68:29 - list name this time it's going to be
68:31 - products let's change the id as well
68:34 - let's change the icon to so once again
68:36 - this is one i found on the internet
68:38 - earlier this is uh one of
68:41 - a loudspeaker which we used before as
68:43 - well so i'm just going to use this same
68:45 - one for this and the users associated
68:48 - with it well i'm just going to add a few
68:50 - in here in fact perhaps maybe let's add
68:52 - all of them let's just pretend that
68:54 - everyone wants to know about the product
68:57 - updates everyone wants to be on the
68:58 - product mailing list
69:01 - great
69:02 - so there we have it i'm just going to do
69:05 - a few more so let's go ahead and insert
69:07 - another document don't forget the comma
69:10 - format change the creation date name
69:13 - change this mailing list name to be
69:15 - something else so this time it's gonna
69:17 - be feedback change the id as well and
69:20 - i'm also going to change that icon this
69:22 - time it's going to just be a hot
69:25 - so let's just go ahead and change that
69:27 - once again you don't have to use this
69:28 - one please feel free to use whatever you
69:30 - wish
69:31 - and
69:32 - sure let's just change some of these
69:34 - users around and insert
69:37 - okay so just one final one now to insert
69:40 - i'm just gonna again use the comma
69:42 - reformat change the creation date change
69:46 - the mailing list to be all about
69:52 - the welcome mailing list change the id
69:56 - and i'm going to change this again so
69:57 - once again just change the icon to
70:00 - changing these few digits around and
70:02 - just adding a cake
70:04 - okay so again i'm not making this up
70:06 - this is one that exists and it's hosted
70:07 - on the internet and the users well we
70:09 - should probably have all the users as
70:11 - you know everyone should be on the
70:13 - welcome list mailing list so i'm just
70:15 - going to add all my users in here like
70:18 - so
70:19 - and just click insert
70:22 - great
70:24 - so
70:25 - wonderful now that we have our mailing
70:27 - list what we can do is of course go back
70:29 - to writing our query
70:31 - so i'm going to use the communications
70:34 - data once again and the query we're
70:36 - going to write is get marketing lists
70:39 - okay
70:40 - and we're going to find documents
70:42 - and then of course the collection this
70:45 - time is not going to be the customer
70:47 - collection it's going to be the
70:49 - marketing list collection that we just
70:52 - added some documents too
70:55 - so if we click run you will see exactly
70:58 - that you'll see all the objects that we
71:00 - made that will represent our mailing
71:02 - list
71:04 - wonderful
71:05 - so
71:06 - there we have it so now if i click on
71:08 - the lists i'm going to just get rid of
71:11 - this data
71:12 - and we're going to use our query that we
71:14 - have just written so the get marketing
71:17 - list query and get the data from it
71:20 - okay
71:21 - so it really is that easy and now we're
71:24 - going to use
71:26 - that data to essentially map out things
71:30 - onto our widgets in here so if i click
71:33 - on the image
71:35 - and get the current items
71:37 - icon it will replace it with an icon
71:40 - from the object that we wrote okay so
71:44 - the current item is a list item thing
71:48 - that will use the data that is coming
71:50 - back to us and then it will just use
71:53 - whatever we call this uh we call the
71:56 - icon with a capital i so that's what we
71:58 - need to get
72:00 - and we can also just edit this text
72:02 - right here so if i select this text and
72:05 - at this time let's get the mailing list
72:08 - itself so i'm just going to copy that
72:10 - and change this to be current item
72:13 - mailing list it will change it to the
72:15 - title of the mailing
72:17 - list
72:19 - how good and how easy is that
72:22 - so now i'm just going to delete this
72:24 - second text i'm just going to reshuffle
72:26 - some things just to make this a little
72:28 - bit nicer and just so that we can
72:30 - perhaps see more of these on the
72:32 - marketing list first page
72:34 - and there we go that is immediately
72:36 - looking better i can see three at least
72:39 - and this is looking wonderful it's doing
72:41 - its job we are seeing all the marketing
72:43 - lists to our disposal
72:46 - wonderful
72:48 - so now that we've done that let's
72:50 - actually get to adding a mailing list
72:52 - from the platform itself similar like we
72:55 - did on the customer data page
72:58 - so to do this we're of course going to
73:00 - need a you guessed a modal so let's go
73:02 - back to our widgets and i'm just going
73:04 - to search for a
73:06 - modal
73:08 - so once the modal has been added again
73:10 - you can just drop it anywhere we're of
73:12 - course going to just change the text in
73:15 - here i'm going to change this to create
73:17 - new mailing list and i'm actually just
73:20 - going to make this a whole lot bigger as
73:22 - we're going to need a few things in here
73:26 - so
73:27 - what do we need in here
73:33 - well
73:35 - the first thing we're going to need is a
73:38 - input we're going to need a few inputs
73:40 - because we're going to have to
73:40 - essentially replicate the objects that
73:42 - we just made from the dashboard so let's
73:45 - drag in our first input
73:48 - and this input uh well let's change the
73:51 - name of this to list id as that is what
73:53 - it's going to
73:55 - show and the default text for this again
73:57 - we're going to randomly generate a list
74:00 - id for this using an m to start with and
74:03 - then the curly braces so that it knows
74:05 - not to treat these javascript as text
74:08 - we're going to use math floor to round
74:10 - down the random number that is generated
74:12 - thanks to the math javascript object and
74:15 - random
74:16 - method when it's multiplied by 10 000.
74:20 - okay and valid well we're going to only
74:23 - make this valid if the list id text
74:26 - length is larger than zero
74:29 - great
74:30 - so that is how we do that and then the
74:34 - label itself is going to just say list
74:37 - id so that it's very clear to the user
74:39 - that the list id goes here
74:42 - and let's just make that bold as well
74:45 - okay so once that is done i'm simply
74:47 - going to copy this
74:49 - okay copy that whole
74:51 - widget
74:52 - let's change this i don't want any
74:55 - default text and i'm going to change the
74:57 - label to be icon url so that people can
75:00 - put that icon in here from the internet
75:03 - to and let's just rename this to icon
75:06 - okay so there we go and i'm just going
75:09 - to put that up here and then just maybe
75:11 - make it a little bit longer as well
75:14 - because urls tend to be quite long
75:17 - great so now let's go ahead and copy
75:20 - this once more
75:21 - and
75:22 - drag it up here and this time i'm going
75:25 - to name this list's name
75:27 - and the default text i'm going to delete
75:29 - as well and the label is just going to
75:32 - say well list name
75:34 - because this is where we're going to
75:35 - store the name of our new mailing list
75:39 - great
75:40 - so
75:41 - this is looking good of course we are
75:42 - not yet done there's still a lot of
75:44 - things to do
75:47 - now once again we need another input
75:49 - this time for the web hook so let's just
75:51 - go ahead and i'm just going to remove
75:53 - this valid
75:54 - and change the label of this to say
75:56 - discord webhook url just like so and of
75:59 - course rename this to say webhook
76:03 - okay
76:04 - so there we go now i'm just going to
76:05 - move these buttons down we can actually
76:07 - select both of them at the same time so
76:10 - that's what i'm going to do and i'm just
76:12 - going to move them down here
76:14 - okay so there we go i've moved them down
76:16 - to the bottom
76:18 - and now i'm just going to use a divider
76:21 - just to space things out a little bit so
76:24 - that is another widget that you can use
76:26 - and of course just make sure that it
76:28 - looks exactly how you want thanks to the
76:31 - drag and drop functionality that
76:34 - appsmith gives us
76:36 - great
76:37 - now i am also going to add an image so
76:40 - that we can essentially preview the
76:43 - image url that we want to use
76:46 - so for this i'm just using the image
76:49 - widget that i am resizing and that will
76:52 - essentially show the image url that we
76:55 - put in the icon url input
76:59 - great
77:01 - so we can do this by simply selecting
77:03 - the image and on the image i'm going to
77:05 - get the icon as that is what we call the
77:08 - icon input text
77:11 - okay so that should now work and the
77:13 - last thing we want to do is just select
77:15 - which customers from our customer
77:17 - database we want to put into this new
77:19 - mailing list we are creating so to do
77:22 - this i'm going to select the table
77:24 - widget i'm just going to grab the table
77:25 - widget and just
77:27 - paste it in like so by dragging it down
77:30 - and of course we are going to get rid of
77:33 - all the generic data that we have here
77:36 - and we are going to essentially use a
77:39 - query in order to get all of our
77:42 - customers again so i'm going to call
77:44 - this something different i'm going to
77:46 - call it get all mailing list customers
77:49 - okay
77:50 - and this just means that we need to
77:51 - write a new query based on the
77:53 - communications data so i'm just going to
77:56 - paste that in here like so i'm going to
77:58 - find the documents and what i'm going to
78:01 - do is look in the customers collection
78:03 - let's just click run to essentially get
78:05 - all our customers back
78:08 - okay so again it's the same query wrote
78:10 - in the first page we've just written
78:12 - again and called it something else
78:15 - so now let's just get the modal up again
78:18 - i'm just going to do so this time by
78:20 - just selecting the
78:22 - modal so just here
78:26 - okay so there's our model again and just
78:28 - click on the table and i'm just gonna
78:31 - make sure to get the data from this
78:33 - query and i'm also going to filter out
78:37 - each customer
78:39 - by the
78:40 - customer
78:41 - user do not disturb equals zero
78:45 - okay
78:46 - so that is what i have done right here
78:50 - and
78:51 - i am also now wanting to add a way to
78:55 - select multiple customers right
78:58 - so before we do this i'm actually going
79:00 - to make the user do not disturb not
79:02 - visible as well as the id
79:04 - and down here on the options i'm going
79:08 - to enable multi-row selection so there
79:11 - we have it now we can select multiple
79:13 - rows essentially i'm also going to just
79:16 - make sure that sortable is not true and
79:19 - enable client-side search is also not
79:21 - true as we don't need this
79:23 - great so this is looking good i'm
79:26 - selecting loads of different rows and on
79:28 - the close button i'm just making sure
79:30 - that the event to close does actually
79:34 - close the modal modal one
79:36 - so this is looking good
79:39 - and on the second button let's actually
79:42 - name this to form button one i'm
79:44 - actually going to add a label and the
79:46 - label is actually going to show us how
79:48 - many customers we want to add to our
79:51 - mailing list
79:53 - so i'm going to use the word add and
79:55 - then i'm going to use our kylie braces
79:57 - to go into table
79:59 - 1
80:00 - selected row length
80:04 - okay so if we selected three from table
80:07 - one it will show me the number the
80:10 - number three and then i'm going to use
80:12 - the words user to list and i'm just
80:15 - going to show the list name that we have
80:18 - chosen to call this mailing list
80:20 - at the moment of course it's just
80:22 - nothing because we haven't chose a list
80:24 - name to put in the list name input
80:27 - great
80:28 - so this is looking wonderful and now on
80:31 - click we of course want to execute a
80:32 - query and this is going to be a new
80:34 - query and this query is essentially
80:36 - going to let us add a new list
80:39 - to our mailing list
80:43 - so add a new list we want to insert a
80:46 - document the collection of this is going
80:49 - to be the marketing list and the
80:52 - document well we can actually go ahead
80:54 - and copy all of this because that is
80:56 - what we want our object to look like so
80:59 - just go ahead and make sure to format
81:00 - this correctly so i'm just getting rid
81:02 - of all the spaces and of course the web
81:04 - hook we're going to leave this as blank
81:06 - for now and we need to add the double
81:09 - quotes in all the right places too so
81:11 - i'm just formatting this all a little
81:13 - bit just like so for now i'm just going
81:16 - to keep all of this hard-coded until we
81:18 - finish formatting because i'm going to
81:19 - have to replace some of these a little
81:22 - bit
81:23 - so now that we have all of that
81:25 - formatted well the discord web hook we
81:28 - want to get the value from the webhook
81:31 - input or the input that we called
81:33 - webhook and we want to get the text so
81:35 - making sure that's in kylie braces so
81:37 - that the platform knows that this is
81:40 - not text okay
81:42 - and again we're going to do so for the
81:44 - creation date this time we're actually
81:46 - just going to use today's date and we're
81:48 - going to use moment for this moment is a
81:50 - dependency an npm dependency that we can
81:53 - use that has been already put into
81:54 - appsmith for us
81:56 - and to get the correct date we are just
82:00 - going to format it correctly like so so
82:03 - saying that you want the year the month
82:04 - the day and the format that we used in
82:07 - when we were adding the documents
82:10 - manually in mongodb
82:13 - okay so there we go and the mailing list
82:16 - name well this is just going to be the
82:17 - list name text again we are grabbing the
82:20 - input which we have called list name and
82:22 - getting the text that we put in that
82:24 - input
82:25 - and same for the mailing list id once
82:27 - again we get the list id and its text
82:30 - just like we did before
82:32 - and finally we're going to get the icon
82:34 - and this is simply going to be from the
82:36 - input that we called icon and we're
82:38 - going to grab its text
82:39 - and
82:40 - great
82:41 - so now let's check if this works
82:45 - let's go ahead and just select the modal
82:48 - so up here because we haven't actually
82:50 - connected the button to the model yet
82:53 - and we also need to add the users and
82:55 - the users is essentially going to be an
82:57 - array of the users from the table that
83:00 - we have selected so let's go ahead and
83:04 - do that i'm going to call this users and
83:06 - i'm going to go into table 1 i'm going
83:08 - to get the selected row i'm going to map
83:11 - for each element the customer id so
83:14 - we're just going to return back the
83:15 - customer id from each of the
83:18 - objects
83:20 - okay
83:21 - so great so now let's test it out i'm
83:24 - gonna go and find my modal because we
83:26 - haven't hooked up the modal quite yet
83:28 - we're gonna have to find it to get it up
83:31 - and let's put in a list name at the
83:33 - moment i'm just going to put test
83:36 - let's find a test icon that we can use
83:39 - and just whack it in here like so so the
83:42 - preview is working that is good and
83:45 - let's just select some of these so add
83:48 - three items to the list test list and
83:52 - just click the button
83:54 - now on click what do we want to happen
83:57 - well on click
83:58 - we want to essentially
84:01 - run the query add new list run and on
84:04 - success we're just going to close the
84:06 - modal and the modal is called modal one
84:08 - perhaps we can change that later but for
84:10 - now i'm happy with that being modal one
84:13 - so let's run this
84:15 - and check if that has worked
84:19 - and great so there we have it we can now
84:22 - see
84:23 - our
84:25 - new list our new marketing list
84:28 - this is all looking
84:30 - great
84:32 - okay so now that we have managed to get
84:34 - our marketing list and add a new
84:36 - marketing list from the platform itself
84:38 - let's get to actually displaying the
84:41 - users associated with that marketing
84:43 - list when we click on it
84:45 - so to do this this is relatively simple
84:49 - we're just going to grab the table
84:51 - widget
84:53 - so let's go into our widgets and find
84:55 - the table widget and drop it in here
84:57 - like so and we know what to do now we of
85:00 - course need to get the correct data
85:03 - shown up here so to do this i'm going to
85:05 - write a new query so just go ahead and
85:09 - click on the queries on the left and
85:13 - we're going to use our communications
85:14 - data
85:16 - so let's just click on that and let's
85:18 - call this get customer list
85:21 - okay
85:23 - so the get customer list well we're
85:25 - going to find documents we're going to
85:27 - look in the customers
85:29 - collection and the query we're going to
85:31 - write for this well we're going to have
85:33 - to look if the customer id is
85:36 - essentially in the marketing list we
85:39 - have chosen so we can do so with this
85:41 - mongodb syntax let's get up our curly
85:44 - braces let's get the customer id and
85:47 - using the dollar sign in we're going to
85:50 - look and check if the list we selected
85:54 - so the list
85:56 - widget selected item
85:59 - uses okay and if that exists then we're
86:03 - going to return back the customer
86:06 - associated with that id
86:10 - first of all of course we do have to
86:11 - select one so select one from the list
86:15 - one and click run
86:18 - now we aren't getting anything back
86:20 - however let's just try sort by customer
86:23 - id
86:25 - so just put in this right here and just
86:27 - try click run again
86:28 - and that has not worked so we've
86:30 - encountered our first
86:32 - issue we need to debug so a quick way
86:35 - that i would do this is just simply look
86:37 - in mongodb
86:40 - and check why the customer id
86:43 - is not matching the marketing list id
86:46 - and you will quickly see it's because we
86:48 - used a capital c on the customer id and
86:51 - we used a small c on the
86:54 - marketing list so let's go ahead and
86:57 - quickly change that i'm just going to
86:59 - change these to small c's right here as
87:02 - that would be the easier option so i'm
87:04 - just changing all of these to small cs
87:07 - just like so so there is 10 to update
87:10 - i'm just going to quickly go ahead and
87:12 - do that but that is how it would quickly
87:14 - debug if some data issues are happening
87:18 - i'd always go to the source i'd always
87:20 - go to mongodb to check what that data is
87:23 - looking at perhaps it's a string or and
87:26 - you've said that it should be a number
87:28 - it could be a variety of different
87:30 - things on this occasion it's quite a
87:32 - simple fix so i'm just making sure that
87:34 - the id is exactly the same as what we
87:37 - wrote in our marketing list
87:40 - great
87:41 - so now if you run this
87:43 - tada we will get the data coming back to
87:47 - us okay so these are all the users
87:49 - associated with the marketing list i
87:52 - selected on the dashboard itself so that
87:55 - was the bugs and if i now connect this
87:59 - so instead of using this data for the
88:02 - table i'm going to get rid of this i'm
88:04 - going to get up our curly braces i'm
88:06 - going to use the get customers list data
88:10 - and ta-da so now if i click on a
88:12 - marketing list it will show me all the
88:15 - users associated
88:18 - with that
88:19 - marketing
88:20 - list
88:21 - this is looking so good how easy was
88:25 - that
88:27 - now another cool thing we can do is
88:29 - actually change the text in here to show
88:31 - exactly what list we are looking at so
88:34 - if i select this text i'm going to say
88:37 - that i want it to say i'm just going to
88:39 - cut all that because we're going to use
88:41 - that later get up our two curly braces
88:44 - i'm going to get the list one selected
88:46 - row
88:48 - i'm just going to get the mailing list
88:49 - so that shows the name of the mailing
88:52 - list we have selected
88:53 - and if the length is bigger than zero i
88:57 - wanted to show the list one
89:00 - selected row mailing list
89:03 - name essentially so just what we saw
89:06 - otherwise i just wanted to show please
89:08 - select a marketing list
89:11 - to view users
89:12 - and we can actually get rid of this word
89:15 - users here because this users can be
89:17 - used for either one of these so i'm just
89:20 - going to get rid of here and put it
89:21 - there
89:22 - so now if you select on any marketing
89:24 - list it should show
89:26 - the
89:28 - right title in the container on the
89:32 - right
89:33 - great
89:34 - so this is looking wonderful
89:37 - let's carry
89:38 - on
89:40 - okay
89:40 - so now back on the table just here i'm
89:43 - going to hide some of these columns so
89:46 - i'm just going to hide the users do not
89:47 - disturb and the id as we do not need
89:50 - these things and i'm also going to
89:52 - choose to have the primary key column as
89:55 - the customer id
89:57 - i'm also going to choose to write some
89:59 - javascript to where this is visible or
90:01 - not and this is going to be visible
90:03 - based on if the list one selected item
90:08 - id
90:09 - is essentially larger than zero okay
90:12 - so essentially if it exists
90:16 - great
90:18 - and one last thing i'm going to do is
90:20 - actually add a
90:22 - enable multiple rows selection so that
90:24 - we can choose who we want to email from
90:27 - this list as well you can choose to
90:29 - email everyone but also we have the
90:31 - option to not email them if we wish
90:35 - wonderful
90:36 - so now that we have that done we
90:38 - actually need an option to email the
90:40 - users so for this i'm going to use
90:42 - another button
90:44 - so let's go ahead and select a button
90:46 - widget so that this brings up a modal
90:48 - for us
90:50 - so this button right here
90:54 - and let's just go ahead and change the
90:56 - text to say connect with
90:59 - and then we're gonna have the
91:01 - table
91:03 - two
91:04 - selected rows
91:06 - length so make sure that rows multiple
91:08 - length uses so it'll show us exactly how
91:11 - many users we have selected at the
91:13 - moment is one so it will say connect
91:15 - with one users and if we select more
91:18 - that will update to show us how many
91:20 - users we have selected
91:22 - okay
91:24 - so
91:24 - great and i'm just going to change this
91:27 - visible and put in some javascript to
91:29 - only make this visible if list one
91:32 - selected
91:33 - item id
91:35 - length is larger than zero so
91:37 - essentially if it exists
91:40 - and we're also going to make this
91:41 - disabled so again let's enable the
91:43 - javascript if table two selected rows
91:47 - length equals zero so if there is zero
91:51 - selected this button will be disabled
91:54 - okay
91:55 - great so as you will see if i don't
91:57 - select any that button is now disabled
92:01 - wonderful and there we go we have now
92:04 - enabled it again
92:06 - so great and now of course we need some
92:09 - events to add to this button so on click
92:12 - what do we want to happen we're on click
92:14 - we actually just want to
92:17 - open a model this model we are yet to
92:21 - create
92:22 - so
92:23 - let's go ahead and
92:25 - create that modal
92:27 - now
92:28 - so
92:29 - i'm going to go in here
92:31 - and i'm just going to create a new
92:33 - module and let's call this the message
92:35 - modal as that is what this will be it
92:37 - will be a message model that will
92:40 - essentially send a email or a discord
92:42 - message or both to the users we have
92:45 - selected
92:47 - first things first let's go ahead and
92:49 - change the text of this i'm going to
92:51 - change the text of this to say send
92:54 - message just like we were doing
92:56 - previously
92:57 - and the message we want to send well
92:59 - perhaps let's actually
93:01 - make some options so i can do this with
93:04 - a tabs widget so if you search for tab
93:06 - widgets and just place it in here this
93:09 - is what it should look like
93:10 - i'm also just going to move these
93:12 - buttons around so once again i'm going
93:14 - to select both buttons and move them to
93:16 - the bottom of my module
93:18 - and this is to make the tabs stretch all
93:21 - the way out and i'm just going to move
93:24 - some things around in here just to make
93:26 - things look a little bit better
93:28 - once we are happy with the layout i'm
93:30 - going to select the tabs and i'm just
93:32 - going to change the tabs name the first
93:35 - one is going to be the base text that's
93:37 - going to apply text to both the email
93:39 - and the discord and then i'm going to
93:41 - have a separate tab for the email as
93:43 - well in case we want to alter that text
93:45 - and of course again for the discord in
93:47 - case we want that text to be different
93:49 - as well
93:51 - so there we have our three tabs the next
93:54 - thing i want to do is just actually put
93:57 - in a rich text editor into all of these
94:01 - so i'm just going to search for that and
94:02 - i'm going to drop it in here
94:05 - and first off actually let's just put in
94:07 - some normal text
94:09 - so this text is to show what exactly we
94:12 - want to happen here and i'm going to say
94:14 - i'm going to use actually some html to
94:17 - make this bold
94:19 - enter your base text and then just a
94:21 - normal text i'm just going to put you
94:23 - can edit this message
94:26 - for
94:27 - your email and discord from those
94:30 - separate tabs
94:32 - okay so that's just a little bit of an
94:34 - explainer and the next thing we're going
94:36 - to do is actually grab that rich text
94:38 - editor and just put it at the bottom
94:40 - like this
94:42 - okay and of course we can have some
94:44 - default text but i don't want to i'm
94:45 - just going to leave it blank
94:47 - and i'm actually going to grab all of
94:49 - this and copy it and paste it in the
94:52 - email section too and just change the
94:54 - text of this a little bit so that it
94:56 - better represents what is happening here
94:58 - and that is just going to say write your
95:00 - email
95:01 - and this is really all i want in this
95:04 - section
95:06 - i'm also going to have an input perhaps
95:08 - for the subject too so let's go ahead
95:11 - and put in an input and let's put the
95:13 - label as subject
95:15 - and this is of course going to be for
95:17 - the subject of the email
95:19 - and also the one thing i want to do
95:23 - before we move on
95:25 - is actually
95:27 - change this to say email text so that we
95:29 - can pick out whatever's in the text
95:31 - editor and that we know this is coming
95:34 - from the email tab so let's change this
95:36 - to email text and back on the
95:40 - base text let's also change this to base
95:42 - text okay
95:44 - and finally on the disk or tab once
95:47 - again i'm just going to paste everything
95:48 - i did before and just change this text
95:51 - around just so it better represents what
95:52 - is happening here and of course we also
95:55 - need to change this to say discord text
95:57 - so that people know where this has come
95:59 - from when it comes to picking it out
96:01 - later in this tutorial
96:04 - now one other cool thing we can do i'm
96:06 - just going to move this up to show you
96:08 - you can put this on all the tabs or you
96:10 - can just have it here it's actually just
96:12 - show a count of the characters
96:15 - so i'm just going to do this simply by
96:18 - grabbing the text
96:20 - component or widget and dropping it in
96:22 - here and instead of having some text i'm
96:25 - going to use the kylie braces so that
96:27 - this is not text and get the discord
96:31 - text text length
96:33 - okay and then i'm just going to put
96:35 - characters so now we will know how many
96:37 - characters are used in this discord text
96:40 - widget
96:42 - okay great
96:43 - so now i did say that i would want
96:46 - whoever is using this to choose if we
96:47 - want a message on discord or email or
96:50 - both so i think the perfect example for
96:52 - a switch is this use case let's go ahead
96:55 - and grab these switches
96:57 - and i'm just going to drag one in below
96:59 - the tabs okay i want this to be applied
97:02 - to the modal and not the tabs and let's
97:05 - change the label of this to say discord
97:08 - switch and just put in another one that
97:10 - will say email switch and we're going to
97:12 - link this up later
97:15 - and while we are here i'm just going to
97:16 - make the buttons a bit bigger just so
97:18 - they look a little bit nicer and just
97:21 - make sure
97:22 - that they are looking good and on the
97:25 - confirm button we're going to execute a
97:28 - query that will essentially send
97:30 - messages
97:31 - so
97:32 - what we're going to do is actually write
97:34 - a javascript object for this
97:37 - so this is going to be a javascript
97:40 - object as we're not simply just going to
97:42 - run one query we're going to want to do
97:44 - a lot of things in here which is why
97:45 - we're writing a javascript object
97:48 - so let's create a new javascript object
97:51 - and i'm just going to call this object
97:52 - utils just to make it more clear what
97:54 - this is
97:56 - and let's just go ahead and delete all
97:58 - of this code right here as it is not
98:01 - really needed
98:02 - so now the function that we want to
98:04 - write and essentially the
98:07 - javascript
98:08 - we want to call when clicking that
98:11 - button is something called send messages
98:14 - or as we are going to choose to call
98:15 - send messages and what we want to happen
98:19 - is
98:20 - so if the discord switch or the widget
98:23 - that we call discord switch is switched
98:25 - on
98:26 - we want to essentially
98:29 - get the discord api to run so we are yet
98:32 - to write to the discord api so for now
98:36 - we will come back to that and we also
98:38 - want to show a success message so let's
98:41 - define our success message i'm going to
98:43 - call this success message one as we will
98:45 - have two
98:46 - and the message we're going to have is
98:48 - discord message sent to and i'm just
98:51 - going to concatenate the
98:54 - list
98:55 - ones selected items mailing list so
98:58 - whatever item we have selected from the
99:00 - list i'm going to get the entire mailing
99:02 - list and i'm going to concat server so
99:04 - it's going to show us all the uh mailing
99:07 - lists that we have sent messages to
99:10 - discord messages too and we're just
99:12 - going to put this in alert so show alert
99:15 - and i'm going to put the success message
99:16 - one in here just like so
99:19 - okay
99:20 - so this is great but also what happens
99:23 - if the uh
99:24 - email switch is on right so i'm just
99:27 - gonna copy all of this
99:29 - and change this out so if email switch
99:32 - is switched on well we also want the
99:34 - send email
99:36 - query to run which again we are yet to
99:38 - write
99:39 - and let's just change the success
99:40 - message i'm just going to name it two
99:42 - just to differentiate from the other one
99:45 - and i'm going to say email sent to
99:48 - and to users on and i'm just going to
99:51 - again concatenate it and just use the
99:54 - word list at the end and show the alert
99:58 - okay
99:59 - and then i'm going to reset the widget
100:04 - and the widget i want to reset it's the
100:06 - message model and i want to close the
100:08 - modal of message modal so resetting it
100:11 - so we're emptying out all the fields and
100:13 - we're closing that modal okay so that
100:15 - will run after both of those if
100:18 - statements have been checked
100:21 - great
100:22 - so
100:23 - this is looking good
100:25 - let's carry on
100:28 - so now i think we've come to the point
100:29 - where we should write our discord api
100:33 - so let's go ahead and add a new query
100:37 - i'm going to create a blank api and i'm
100:40 - going to call this discord api and we're
100:44 - going to have to grab a web hook of
100:46 - course we don't have any web hooks yet
100:48 - but we can actually just get the value
100:51 - of the web hook so i can do so easily by
100:54 - getting into the list and getting the
100:56 - select rows discord web hook at the
100:59 - moment they're all blank but that is
101:00 - fine as soon as we populate them this
101:02 - will work and as the key and value here
101:06 - i'm just going to put the content type
101:09 - and i'm going to fill this out with
101:11 - application json so make sure to do this
101:14 - like so
101:16 - and of course let's also not forget to
101:18 - get the body because the body is going
101:20 - to be that of the discord uh
101:23 - the one
101:25 - discord text that we have associated
101:28 - with the rich text editor on the discord
101:30 - tab
101:31 - so make sure all that is done and make
101:33 - sure that this is a post request
101:35 - and just click
101:37 - run
101:38 - okay
101:39 - so now that is done let's carry on
101:45 - the next thing we need to do is be able
101:46 - to send emails
101:48 - so again let's write our send email
101:51 - query so to do this i'm actually going
101:53 - to have to create a new resource and
101:55 - just click on the smtp resource right
101:58 - here and let's call this send email
102:01 - so just go ahead and do that and now
102:03 - let's do some configuration for your
102:05 - gmail account
102:07 - so if you have a gmail account i would
102:09 - suggest if you don't have a gmail
102:11 - account i would suggest you get one
102:12 - because this is going to work with the
102:14 - gmail smtp
102:17 - so
102:17 - the host address for this well the host
102:20 - address for this is going to be
102:21 - smtp.gmail.com
102:24 - and the port there is a few so i'm just
102:26 - going to put in two to be sure
102:28 - so the port that we are going to use is
102:31 - the port
102:33 - 5
102:35 - 5 8 7 and i'm going to put in the other
102:37 - one too because you never know the
102:39 - second port is going to be 465 making
102:42 - sure to of course put the host address
102:44 - as the same and we are going to use
102:46 - authentication so authentication is just
102:49 - simply the credentials you use to log
102:51 - into your gmail account because we're
102:53 - going to essentially be using your gmail
102:55 - account to send out these emails
102:57 - so i'm just going to put any free
102:58 - codecamp.org and the password associated
103:01 - with that account so that i can log in
103:04 - to gmail
103:05 - now you would think this would be it but
103:08 - we are not yet done gmail uses some
103:11 - extra security that we're gonna have to
103:13 - configure
103:14 - so i would suggest clicking run and you
103:16 - will get an error message this is good
103:18 - as it will show up in your email address
103:20 - that some funky activity has gone on
103:23 - so usc's sign in attempt was blocked
103:26 - which is great but it also means we need
103:28 - to unblock this attempt
103:30 - so let's secure up blocks let's just go
103:33 - ahead and click and get more information
103:35 - on this and then i'm simply going to
103:37 - scroll down in here
103:40 - click on this button right here i'm just
103:42 - going to verify that this is me
103:44 - and i'm going to allow less secure apps
103:47 - off be on okay so this will allow me to
103:51 - give access to essentially all less
103:53 - secure apps including this one so this
103:56 - means that if i now click test
103:59 - that should now work so don't forget to
104:02 - do that if you have any issues that
104:04 - could be y and let's carry on
104:08 - so now that we have added our resource
104:10 - sent email i'm actually gonna also have
104:13 - to write a query so we've got the data
104:15 - source let's write the query now i have
104:18 - named this to be sent email so let's
104:19 - just name the query send email again so
104:22 - let's write a new query using the send
104:24 - email data source
104:27 - and i'm just going to call this send
104:29 - email again
104:30 - now the command we want to do is send an
104:32 - email that is correct and from the email
104:34 - address well that is just going to be
104:36 - from my email address so i'm just going
104:38 - to put in that in here just like so and
104:41 - the two emails well we're going to have
104:43 - to get the emails from the mailing list
104:45 - that have been selected so once again
104:48 - let's get our curly braces and i'm going
104:50 - to go into the utils
104:54 - and we're going to actually write our
104:55 - own
104:56 - javascript for this okay instead of
104:58 - writing everything in here i'm just
104:59 - going to put in the retails as that is
105:01 - easier
105:02 - so let's call this get emails and let's
105:06 - have the subject of this be
105:09 - communication sent via communications
105:11 - dashboard and that is what this
105:14 - dashboard is called and the body of our
105:17 - email is just going to be whatever the
105:18 - email text is
105:20 - text okay so whatever we have in the
105:24 - email text rich text editor text is
105:27 - going to be body of our email and the
105:28 - subject will never really change unless
105:31 - we want it to
105:33 - okay so if you want you can connect the
105:36 - input that we have chosen for the
105:37 - subject here but that is optional too
105:41 - and oops this should say get
105:43 - emails so let's just change that to get
105:45 - emails and let's write this in our utors
105:48 - file
105:48 - so once again let's actually
105:51 - describe this let's actually write this
105:54 - out here so i'm just going to use get
105:56 - emails and what do we want to happen
106:00 - well what we want to happen is
106:03 - we want to first define
106:06 - the name array and that is going to be
106:09 - the table to selected row
106:12 - and for each row we're going to get the
106:15 - customer
106:16 - email id
106:18 - so each customer email id or essentially
106:20 - each email will be mapped
106:22 - or essentially each email will be stored
106:24 - to this name array
106:26 - and we're just going to return the name
106:28 - array to string
106:30 - okay
106:31 - so now we have essentially got all the
106:34 - customer emails associated with the
106:36 - selected row of the table
106:38 - and this means that we can now use get
106:41 - emails
106:42 - so get emails
106:43 - and just call it
106:45 - okay
106:46 - so let's check if that has worked so i'm
106:49 - just gonna go ahead and try send a
106:51 - message
106:53 - so let's get up on modal
106:55 - click on the email tab
106:57 - i'm actually going to put the default
106:59 - text of this as the base text text and
107:02 - then we can change it if we want and i'm
107:04 - also going to actually do this for the
107:06 - discord rich text editor too so make
107:08 - sure to click on that and under the
107:10 - default text we're gonna go into the
107:12 - base text and just grab the text like so
107:15 - and of course we can edit this if we
107:17 - wish
107:18 - okay
107:19 - so
107:20 - wonderful
107:21 - let's just check this works of course
107:23 - perhaps we should put our own email in
107:25 - here to email ourselves to
107:27 - so let's just go back to the query and
107:29 - i'm just going to put in my own email
107:31 - address
107:33 - okay and just click
107:35 - run
107:36 - so that says that that has been
107:39 - sent successfully let's check it out
107:42 - and great so i have indeed received that
107:45 - email this is looking wonderful this has
107:48 - worked and let's check if it works from
107:50 - the dashboard itself so once again let's
107:52 - just get up the model and click confirm
107:57 - and let's make sure that this actually
107:59 - runs the query
108:01 - runs the thing that it needs to run so
108:04 - let's click on utils and then let's
108:06 - click on these send messages util
108:10 - why is this red r we need a default tab
108:13 - so let's change this to be
108:15 - base text
108:17 - okay great so we're sending emails
108:20 - everything is working everything is
108:22 - looking good
108:23 - there's a last few things we need to do
108:26 - and that is actually just hook up the
108:28 - analytics on the analytics tabs and then
108:31 - actually link up the discord webhook to
108:33 - discord so first let's do the analytics
108:36 - as that should be relatively easy so
108:39 - let's go ahead and select this first
108:40 - analytic and i'm going to write a
108:43 - new
108:44 - query so let's go ahead and create a new
108:46 - query using the communications data and
108:50 - call this
108:51 - get all customers list
108:53 - and this is just going to find documents
108:55 - and it's just going to look in the
108:56 - customers collection just as we've been
108:58 - doing previously and i'm just going to
109:00 - run it
109:01 - and now this means that if i get the
109:03 - kylie braces up and use that query and
109:06 - just get data length it will show me
109:08 - exactly how many customers we have in
109:11 - that list which is 10 that sounds and
109:14 - now we're just going to get the mailing
109:15 - list count this is easy as we've already
109:18 - written this query so just get the query
109:20 - to get the marketing lists get the data
109:24 - length and that's it
109:26 - great
109:27 - next one
109:28 - so for this one we just want to show the
109:31 - users that are reachable
109:33 - i'm going to write a new query for this
109:35 - in fact let's actually write this in the
109:37 - utils file so let's get up our users
109:39 - file again and i'm just going to not
109:41 - forget the comma and write a function
109:45 - that will essentially show us everyone
109:47 - on the do not disturb list
109:50 - so let's call this dnd list and i'm
109:53 - going to save the dnd count and as
109:56 - default it's going to be zero
109:58 - i'm also going to say the reachable and
110:00 - also make that 0.
110:02 - now
110:03 - what we are going to do is get all
110:05 - customer lists so the query we just
110:07 - wrote i'm going to get the data and for
110:09 - each i guess user coming back to us
110:12 - i'm going to get the user do not disturb
110:15 - and if it equals 0 i want to add to the
110:19 - dnd count however if it
110:23 - does not equal zero i'm going to add it
110:25 - to the reachable count
110:28 - okay
110:29 - so
110:30 - great and then i'm just going to return
110:33 - so let's define what i want to return
110:36 - and i'm going to return an array the
110:38 - first object is going to be for my
110:40 - reachable so i'm just going to make an
110:41 - object that has x as the string
110:43 - reachable and y as the dnd count
110:47 - and x
110:48 - and the second object is going to be for
110:50 - my do not disturb and y is going to be
110:53 - the reachable
110:55 - count
110:56 - great and i'm just going to return this
110:58 - so now i can use the util i have wrote
111:02 - the dnd list of course we need to use
111:04 - utils dot that is the correct syntax and
111:08 - i'm just going to get
111:09 - the filter the second item in my array
111:12 - and get y to show the reachable
111:15 - customers and then i'm also going to use
111:18 - the do not disturb and the same thing so
111:20 - i'm just going to copy and paste all
111:22 - that but this time i'm going to go to
111:24 - fast item from my array and get the
111:28 - y
111:29 - value for that
111:31 - okay so seven reachable customers and
111:34 - three on the do not disturb this is
111:36 - looking correct
111:38 - and great so we're nearly there the last
111:41 - thing we need to do is i'm just going to
111:42 - show you how to use the discord web hook
111:45 - so for this you need to actually have a
111:47 - discord account okay so get up your
111:50 - discord account and if you haven't
111:52 - already i want you to go ahead and start
111:54 - a new server okay because we're assuming
111:56 - that you own a server and you want to
111:58 - message everyone on your server on a
112:00 - certain channel about a certain thing
112:03 - so for example i if i have a server and
112:07 - i have a channel all about bugs i want
112:10 - to everyone everyone on the bug's
112:11 - channel
112:13 - about the bugs
112:14 - so to do this let's create a new server
112:16 - i'm just going to put for me and my
112:18 - friends and i'm going to create it
112:20 - and now once i have done that uh let's
112:23 - just i'm going to show you how to do
112:24 - this on the general channel okay of
112:26 - course once you know how to do this you
112:28 - can connect the correct discord web hook
112:31 - to the correct channel but this is a
112:32 - tutorial so i'm just going to show you
112:33 - how to do it and you can do it yourself
112:36 - now on general i want you to go ahead
112:38 - and just click on the cog and once
112:40 - you're on here i want you to get
112:42 - integration and just
112:43 - essentially create webhook and copy the
112:46 - webhood link
112:48 - and once we have that i'm just going to
112:49 - go on the first
112:51 - marketing list
112:53 - and i'm going to get the first
112:55 - object and in here i'm just going to
112:58 - paste it in okay so on the mailing list
113:01 - of bugs that now has a discord web
113:04 - link which will essentially just post to
113:06 - my general channel on my discord but you
113:09 - get the drift
113:10 - so now let's check it out so if i go
113:12 - back in here and make sure that bugs is
113:15 - selected on the mailing lists and click
113:18 - connect with two users
113:20 - i'm just gonna go ahead and
113:23 - click confirm
113:27 - and great
113:30 - so that has now been sent
113:33 - amazing we've done it we've got the
113:36 - whole app working this is looking
113:38 - fantastic i hope you've enjoyed this
113:40 - lesson we have a few more things to do
113:42 - and that is just deploy this so just
113:44 - bear with me
113:46 - let's do it but i hope you've learned a
113:48 - lot so far and i hope you know now how
113:50 - to add your own discord web hook links
113:53 - too so to do this all i'm going to do is
113:55 - just press on this button right here to
113:58 - connect to git and once done i need to
114:01 - get a remote url to a repository well we
114:04 - need to make a repository first so all
114:06 - i'm going to do is click new right here
114:07 - and create that repository i'm just
114:09 - going to choose add a readme and create
114:14 - now once that is done i'm just going to
114:16 - grab this url like so and paste it in
114:18 - here
114:21 - i'm also going to have to give absolute
114:23 - access to my repository
114:25 - so let's copy this ssh key and go back
114:28 - to github and now under settings i'm
114:31 - just going to click deploy keys and add
114:33 - a deploy key and add that key in there
114:36 - and name it and click add key and that's
114:39 - done let's just connect commit and push
114:42 - and ta-da
114:44 - let's preview what we committed and
114:46 - there is our app and it is saved on our
114:49 - github okay so there we have it there's
114:52 - our wonderful app as you can see here
114:54 - we've got two tabs we can send messages
114:57 - we can also filter through bugs and all
115:00 - our marketing channels and of course we
115:02 - can see all our bug users and all our
115:04 - mailing lists and everything like that
115:07 - thanks so much again for watching i
115:09 - really hope you've enjoyed this tutorial
115:11 - and i hope you love your new app