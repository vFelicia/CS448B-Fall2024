00:04 - [Music]
00:05 - so
00:07 - electron how many people have heard
00:08 - electron besides good how many people
00:11 - have used electron
00:13 - all right awesome hopefully i won't put
00:15 - you to sleep the rest of you hopefully
00:17 - you'll enjoy the journey
00:18 - so
00:20 - why am i here
00:22 - um i have a slight mental defect i
00:24 - actually like standing up here and
00:25 - talking to people
00:28 - secretly wanting to be a teacher then i
00:30 - saw teacher pay
00:32 - ux software pay okay uh we know our
00:34 - career path
00:35 - um i recently wrote a co-authored a book
00:38 - for a press with my good friend leif
00:40 - wells on electron from beginner to pro i
00:43 - actually have a copy here we'll figure
00:45 - out a raffle as well
00:46 - um
00:47 - it's an interesting book we took a
00:49 - different approach in writing it
00:51 - you actually really don't build a nap in
00:53 - there
00:53 - because how many people have like gotten
00:55 - the technical books and like how many
00:57 - people have done the to do app you know
00:59 - there's real value in the to-do app i'm
01:01 - not going to throw that away
01:03 - but
01:04 - there's an issue with electron that
01:06 - you'll understand as we go through of
01:08 - why we didn't have you build an app in
01:11 - there so i'm going to teach you what i
01:12 - thought um
01:14 - i'm still an adobe community
01:15 - professional mostly working in phonegap
01:17 - cordova as well as experience design i
01:20 - am actually ux lead for a home
01:22 - automation security company down in
01:24 - carlsbad so driving north wasn't so bad
01:27 - it wasn't coming from downtown san diego
01:30 - um i have a couple courses on linda and
01:32 - i've also written a book on the ionic
01:33 - framework for o'reilly
01:37 - so what is electron
01:38 - well it was actually released back in
01:41 - 2013 so we're talking it's a
01:43 - five-year-old system
01:45 - where it's just about to hit the 2.0
01:47 - release
01:49 - so
01:49 - it's been chugging along
01:52 - it was actually written by uh
01:54 - xing zhao he actually worked on another
01:57 - project called nwjs node webkit js and
02:01 - then actually moved over and then
02:02 - basically it was the foundation
02:06 - for the atom editor so how many people
02:07 - use atom
02:09 - okay how many people use vs code
02:12 - okay all right there's a reason
02:15 - those are all electron apps
02:17 - so the idea behind electron is it's
02:20 - actually a blending of technologies
02:23 - it's a blend of node.js
02:28 - it's a blend of chromium
02:29 - which is basically the actual engine
02:32 - inside of chrome the browser so chrome
02:34 - is the browser with all the
02:36 - things like bookmarks and all that the
02:38 - actual web rendering engine is chromium
02:42 - these two things together
02:44 - are what sort of make electron
02:47 - magical
02:49 - i was going to do the darkening thing by
02:51 - stop
02:53 - a lot of the apps on your computer
02:56 - are probably built with electron
02:59 - i almost when i do i only talk some of
03:00 - those things saying same thing it's like
03:02 - a lot of the apps on your phone are
03:04 - probably actually written in phonegap
03:06 - you don't know this
03:07 - a lot of the apps probably on your
03:08 - computer are also now written in
03:11 - electron so obviously adam github was
03:14 - drinking their own champagne and built
03:16 - the atom editor that was the foundation
03:18 - of their
03:19 - bs code my favorite editor who would
03:21 - have thought hey i'm i'm a little old i
03:23 - got some great guess your grade like
03:25 - would be saying yes i like a microsoft
03:27 - product
03:28 - it's hard to say but it isn't you know
03:30 - though actually they're both great
03:32 - editors um you mentioned slack here's
03:34 - another electron based app uh github
03:37 - desktop another one postman if you're
03:40 - not familiar with that which is a great
03:42 - um
03:43 - api remote inspector the wordpress
03:46 - desktop app and the list goes online you
03:48 - can actually pull up that url and just
03:50 - keep scrolling
03:51 - all the apps you've never heard of but
03:54 - it's a great solution because it allows
03:57 - the development community to again have
03:59 - that one language that one set of tools
04:03 - and now come to the desktop it's very
04:05 - similar to almost like the sales pitch
04:07 - that i give about phonegap and cordova
04:10 - same idea one code base multiple
04:12 - platforms
04:15 - so what does electron bring to the table
04:17 - what does it give us as a desktop app
04:19 - building solution
04:21 - automatic updates
04:23 - so in this age of agile development and
04:26 - always adding new features because there
04:28 - are no bugs just new features
04:30 - you know we have a way to you know push
04:32 - updates to our users
04:34 - um native menus so if you've been doing
04:37 - some web app development there are hard
04:39 - walls
04:41 - fine i have this beautiful web app but i
04:43 - have the chrome menu bar the firefox
04:45 - media bar i have to somehow fake some
04:48 - sort of interior menu bar that's
04:52 - clunky closure doesn't fully work right
04:54 - now i'm trying to hack in and override
04:56 - keyboard shortcuts to try to make no
04:59 - we can get that notifications
05:02 - things we have that sort of an engine so
05:03 - i say hey you know we all use slack
05:06 - slack notifications hey you just got a
05:08 - new you know dm or whatever
05:11 - crash reporting okay yeah there might be
05:13 - bugs you might want to know about them
05:16 - profiling
05:18 - windows installers mac installers on and
05:20 - on so it actually brings the table a lot
05:23 - what you would need in your utility
05:25 - built to make a desktop app
05:27 - because
05:29 - most people don't write desktop apps
05:32 - they're a rarer breed than say even like
05:34 - trying to find someone to write a native
05:36 - desktop app it's harder to find as
05:37 - someone who like oh can you find a swift
05:39 - developer can i find a you know a a java
05:42 - developer to do something for android
05:45 - that's not people a little harder
05:49 - beauty is you can ship to all three of
05:50 - the platforms
05:52 - so i can write roughly with one code
05:55 - base
05:57 - ship for the mac ship for windows and
05:59 - even ship for those penguin loving
06:00 - people out there in the world as well
06:03 - so
06:04 - and this has a lot of value especially
06:06 - when you start thinking about the
06:07 - enterprise world
06:08 - where if you i used to work at qualcomm
06:11 - you step behind the firewall into the
06:13 - land of it and all of a sudden you know
06:15 - here are hundreds of these web apps and
06:18 - applications to make the backend world
06:20 - oh wait i can start doing some stuff
06:22 - that i can't do
06:24 - and really provide some value
06:28 - so how does this all work talked about
06:29 - no talk about chromium real fast
06:32 - electron is really built upon
06:35 - two silos
06:37 - it's built upon this main process silo
06:40 - and it's built upon a renderer silo
06:42 - these two processes run simultaneously
06:45 - and this is probably the biggest sort of
06:48 - mental shift going from a web app
06:50 - development world into an electron
06:52 - development world
06:54 - because
06:55 - these two friends
06:56 - have a way to talk to each other but you
06:58 - have to explicitly tell them to
07:01 - the main process that's really where
07:04 - you're going to mostly interact with
07:06 - that node component of electron that's
07:09 - where you're going to pull in a lot of
07:10 - your node modules this is what's going
07:12 - to allow you
07:13 - all the cool desktop stuff that you
07:16 - can't do in a browser when you start to
07:17 - do some browsers are getting better
07:19 - but if i want to talk to the file system
07:22 - write to the files
07:24 - launch other applications
07:26 - put up native dialogues things like that
07:29 - that's going to live over in this main
07:31 - process which is mostly a node
07:34 - mostly where i think it was that's where
07:36 - my node stuff lives
07:38 - the renderer process this is that ui
07:41 - layer this is all living in that
07:42 - chromium side of the world this is what
07:45 - i paint on the screen to show my users
07:48 - something
07:50 - and those the two parts now the
07:52 - interesting thing is you actually don't
07:53 - have to have this part you don't have to
07:55 - have a renderer
07:57 - you have something that's just a main
07:58 - process so if you've got some little
08:00 - batch job or something you can actually
08:02 - make a headless faceless electron app
08:06 - and do something with it
08:07 - so
08:08 - let's face it we're software developers
08:11 - we're lazy
08:12 - if we can find a way to automate a
08:14 - process
08:15 - we'll do it and you can start doing
08:17 - doing things like that
08:19 - you know making your life easier that's
08:21 - what it's all about
08:24 - that ui layer i mentioned it really
08:27 - briefly
08:29 - it doesn't have one
08:31 - this is actually sort of the hard part
08:33 - of electron
08:35 - that is a blank web canvas just like
08:37 - your web apps are
08:39 - you have to make some informed decision
08:43 - about
08:44 - some framework somewhere to come up and
08:47 - develop a ui layer
08:49 - just like cordova cordova is a blank
08:51 - slate it doesn't care if you're using
08:54 - framework 7 ionic onsen your own
08:59 - same thing over here
09:01 - so depending on what the
09:03 - background you have you can pick
09:06 - your technology to render that ui layer
09:09 - so you know the angular people of the
09:11 - world a little more in the angular world
09:13 - we can use angular
09:15 - if you're a react fam boom
09:17 - you want to play around with ugis great
09:19 - backbone number heck
09:21 - you know if you're old school you want
09:22 - to go jquery ui you can do that roll
09:25 - your own heck you can even use ionic
09:27 - which i've done
09:29 - it's the real challenge that's
09:33 - why we actually didn't have you build an
09:34 - app in our book
09:36 - because if i wrote a sample after to do
09:38 - an angular guess who i just pissed off
09:41 - the reactive view people and if i did
09:43 - react people i'm going to piss the
09:44 - angular people off so we actually just
09:46 - kept rather just plain simple javascript
09:50 - and really didn't go too deep because
09:52 - like
09:53 - all right how many times do i want to
09:54 - write that to do app and you know try to
09:56 - come up with some artificial
09:58 - so
10:00 - that's the one big challenge with
10:01 - electron
10:03 - is that ui layer what are you going to
10:05 - pick
10:06 - because what you do in electron isn't
10:08 - necessarily that hard
10:10 - setting meaning some dialogue some
10:12 - things like that
10:13 - it's still the hard engine is the
10:15 - business logic the ui side that's where
10:18 - the sort of the challenge of electron
10:20 - development comes in
10:23 - so
10:24 - installing it
10:25 - heck everything's npm
10:28 - boom drop it
10:30 - real simple
10:33 - now
10:34 - they have a little quick little kick
10:35 - starting this is actually command
10:37 - actually we'll hop out and do a little
10:39 - more demos in a minute
10:41 - basically clone their starter has a few
10:44 - things
10:45 - change the directory
10:46 - reset the get flags mtm start boom you
10:49 - got your initial electron app
10:52 - and it looks really sexy
10:55 - you know hello world um there's some
10:58 - interesting stuff that actually goes on
10:59 - if you actually will walk through the
11:01 - gets here we'll do it up here so you
11:03 - literally have six files
11:05 - six files basically
11:08 - and then the node modules
11:10 - start and create my desktop application
11:13 - and even less because you know who cares
11:14 - about the license we always forget which
11:15 - one do we want you know
11:17 - mit whatever
11:19 - we have an index.html
11:21 - a couple json files and a package.json
11:24 - that's the start
11:28 - now in reality you're probably going to
11:30 - start you know
11:31 - having directories and making things a
11:32 - little nicer
11:34 - you know you're probably going to start
11:35 - putting everything inside of an app
11:36 - folder you're going to have a build
11:38 - folder a disk folder things of that
11:40 - nature
11:43 - the git ignore
11:45 - so the main js
11:46 - so the main js file
11:49 - this is what electrons going to point to
11:52 - well
11:53 - by default the package json points to
11:55 - main.js if you want to change convention
11:58 - you can't but just maintain yes
12:00 - this initial javascript file is what
12:02 - electrons are going to boot up from
12:05 - and
12:07 - the nice thing is since we're living on
12:09 - top of some modern stuff we can actually
12:10 - start to write in a little more modern
12:12 - fashion
12:14 - now we're going to be writing
12:15 - the main js
12:17 - in js
12:19 - the renderer side you know if you want
12:20 - to live over in the land of typescript
12:22 - or something else you can do that but
12:24 - over here you're basically running es6
12:29 - basically pull in electron
12:31 - we define a browser window
12:34 - do things like path url
12:38 - eventually we're going to call and
12:40 - create a window
12:42 - and say hey make me a new window i went
12:44 - at this height this wide
12:46 - tell it what to load up in there
12:49 - not a lot to it
12:50 - to get started
12:55 - now remember it's chromium
12:57 - so all those skills you have like that
12:59 - chrome dev tools
13:02 - we have it built in
13:03 - it's there for us so everything that you
13:06 - kind of gotten used to working with
13:09 - as part of that muscle memory of
13:11 - figuring out starts to be there
13:14 - now unfortunately
13:16 - because you're moving out of the browser
13:19 - into a desktop app
13:21 - some of the responsibilities start to
13:23 - move back onto you like cleaning up
13:26 - after yourself when windows close and
13:27 - listening to all these other events so
13:29 - some of the things you've never had to
13:31 - worry about before now become your
13:33 - responsibility
13:34 - so like going from
13:36 - being a teenager to like a young adult
13:38 - like what do you mean i gotta pay rent
13:40 - and do laundry
13:43 - my twins are 17 were in that phase oh
13:46 - um so
13:48 - we have a on ready event so all of us
13:52 - who have lived in the land of you know
13:54 - document ready or cordova developers
13:56 - device ready
13:58 - we got ours yeah because this is still
14:00 - going to take you know a few moments to
14:02 - boot up and things and splash screens
14:04 - and
14:04 - you got to deal with that world
14:08 - the html side is pretty straightforward
14:11 - it's just html so the nice thing is
14:14 - even though we're just barely getting to
14:16 - 2l with electron there's lots of little
14:18 - minor updates they actually keep the
14:20 - chromium engine
14:22 - really really really really really fresh
14:24 - like within a day or two and they
14:26 - basically you got a new one so whatever
14:28 - is getting poured into the latest
14:30 - version of chromium in terms of support
14:32 - for new features
14:34 - and the evolution of you know html5.1.2
14:37 - etc etc all the new javascript
14:39 - is available to you
14:42 - and the nice thing is you're locking
14:44 - that inside of your electron app
14:46 - so you know what you're going to get
14:48 - you're not beholden
14:50 - to mismatches so you could actually make
14:52 - electron even say your enterprise
14:54 - company says thou shall use only ie or
14:57 - something
14:58 - you know i mean there's
15:00 - it's not as bad as it was but you know
15:02 - you may be trapped in a legacy system
15:04 - where heaven forbid you know they're
15:05 - still running windows 7 or something in
15:08 - ie11 with electron basically you have a
15:10 - captive browser so you can use the new
15:13 - stuff
15:14 - that you want to use that makes life a
15:16 - whole lot easier so it's a nice thing
15:17 - there
15:18 - but
15:19 - now we have our script engine here so we
15:21 - have another
15:22 - script engine also
15:25 - so we can figure out processes so this
15:27 - is what actually wrote that you know hey
15:28 - what version of
15:30 - chrome i'm running chromium really
15:32 - my version electron my version of node
15:34 - over there
15:36 - real exciting
15:38 - and then i basically can pull in this
15:39 - render.js file
15:43 - so windows
15:45 - so
15:46 - not the operating system
15:48 - but the actual application window we
15:51 - actually have a whole lot of parameters
15:53 - so out of the box
15:54 - that first one just had width and height
15:56 - we actually have a whole bunch of
15:58 - attributes we can set up on our window
16:01 - and we're not restricted to one window
16:04 - i'll show you an example so second
16:06 - windows how to make a fake splash screen
16:09 - sort of thing show you that
16:11 - so we can say whether it's window to be
16:13 - shown or not our background color we can
16:16 - restrict the width and the height to the
16:18 - thing so
16:19 - you know we can only make it so small
16:21 - because
16:22 - as a ui person there's a point where
16:24 - like um yeah i know you can shrink down
16:26 - the window but i can't refactor the ui
16:29 - of this app to that point i need a
16:31 - minimum of this you know it's a data
16:32 - table i can't make any smaller
16:34 - um
16:34 - i can make it not movable
16:37 - so if i actually was making some sort of
16:39 - you know dashboardy thing i could you
16:41 - know walk all these things in positions
16:43 - and not have anyone like muck them up
16:48 - i can have it always be on top i can
16:51 - change the title
16:53 - um
16:54 - lots of capabilities
16:56 - i can actually make frameless windows
16:58 - so if i don't want
17:00 - the window chrome i don't have to have
17:02 - the window chrome i can also make my
17:05 - window transparent
17:07 - if i want it to
17:08 - um that was a lot of fun that was an
17:10 - interesting one i don't know if anyone
17:12 - has used this i don't know what it's
17:14 - written in but i've seen some web
17:16 - measurement apps
17:18 - that you can fire up and will act as
17:21 - overlays on top of the browser you're
17:22 - trying to take screen measurements and
17:24 - that sort of thing
17:25 - that's what you could use this
17:27 - potentially for
17:32 - so yeah so here's a transparent one so
17:34 - yeah there's the attribute transparent
17:36 - true
17:37 - if i wanted to be transparent i'd see
17:38 - the stuff through this the content in
17:40 - the html is there
17:43 - but the window
17:45 - itself is transparent
17:47 - you can do interesting things
17:51 - mentioned this earlier menus
17:53 - this is obviously one of the big
17:55 - differentiators between the browser
17:57 - world and the desktop world and when you
17:59 - launch any sort of application you have
18:02 - a menu bar that has all the things that
18:03 - you want to do with it
18:05 - not what chrome wants to do or firefox
18:07 - wants to do
18:08 - we have that capability
18:11 - and this is actually usually winds up
18:12 - with being the bigger
18:14 - blocks of code in my electron apps
18:18 - because
18:19 - you have to define
18:21 - all those menu items and the structure
18:23 - and it becomes something
18:25 - about
18:26 - this long ten times longer for a fully
18:28 - fledged menu
18:31 - so basically we tell it to build from a
18:33 - template we set the application menu and
18:36 - away we go
18:38 - what does that template look like
18:40 - well is basically a
18:42 - big long nested messy json file
18:46 - so we give it a label and the first
18:49 - label that's what's going across the top
18:52 - of the menu bar
18:53 - then the sub menus are the things
18:55 - underneath and you can have sub menus in
18:57 - there
18:58 - add infinite item ahead of time now you
19:00 - can update this on the fly you can
19:02 - change what things are enabled so all
19:04 - everything you think you need to do with
19:05 - the menu you can do
19:07 - it's not a
19:08 - hack now what's nice is they have
19:13 - both accelerators and roles
19:15 - because when you're stepping into the
19:17 - land of the desktop world
19:19 - there are lots of conventions you know
19:22 - copy paste etc etc
19:25 - you don't need to rewrite those they
19:28 - understand that those are sort of
19:30 - core functionality and that's where that
19:32 - role comes in
19:34 - so they sort of automatically handle
19:36 - that for you by adding that role
19:38 - they know what you want to do
19:41 - now you can't override it so if you
19:43 - put that in your you basically have a
19:45 - contract with electron that this is how
19:48 - it's going to work so if you have
19:49 - something custom
19:51 - you're gonna have to call your own
19:52 - function
19:53 - but we can also define our accelerators
19:55 - those are the keyboard shortcuts
19:58 - and you'll see that first one you know
19:59 - command or control
20:01 - hey i can deliver to both platforms
20:04 - as mac people it's you know command c
20:06 - the windows focus is control c
20:09 - it handles both of those worlds for you
20:11 - it knows what os it's running on and
20:14 - we'll adapt to that
20:18 - so here's an example screenshot of a
20:21 - menu being instantiated so there are you
20:24 - know my
20:26 - modifiers up there here's a submenu i
20:28 - have a check mark under there all that
20:30 - is within my electron control so as i'm
20:32 - moving things in and around i can do all
20:35 - that
20:39 - contention wins how many people tried to
20:41 - do a contextual menu in their web app
20:45 - one or two yeah it was fun wasn't it you
20:48 - know you just it was probably one of the
20:49 - most hackiest things you'd ever attempt
20:51 - and
20:52 - yeah and you still probably got jira
20:54 - tickets from qa saying it didn't work
20:55 - estj is over there
20:58 - remember like send charges yeah
21:02 - yeah
21:03 - yeah
21:06 - so we get them as well
21:09 - so this is just basically another
21:11 - variation of the menu element
21:13 - so we can have
21:15 - os proper contextual menus in our
21:19 - application
21:20 - and we can either set them globally or
21:23 - on an item by item basis so depending on
21:25 - what your app needs to do so again
21:28 - to the end user they have this is all
21:30 - the right set of tools they have no idea
21:32 - what this is written in
21:34 - so
21:35 - here i have a contextual menu building
21:37 - it from a template
21:38 - um usually the contextual menus are a
21:40 - little simple without all the nesting in
21:42 - the menus
21:44 - custom functions right in here
21:46 - and then i just set it right here to a
21:47 - window event listener so this one would
21:49 - just
21:50 - anywhere i clicked inside my application
21:53 - this would show up
21:55 - but
21:56 - you know if i it on a specific button or
21:58 - a specific element you know i just move
22:00 - where i attach that event listener to
22:05 - and see you know we get nice things you
22:06 - know fat arrow functions
22:08 - so all the cool things you're learning
22:10 - like here at fuse you know
22:12 - all great
22:15 - this is the magic
22:17 - between the two worlds so it's talking
22:19 - about those two silos
22:21 - you got that main silo you got the
22:23 - renderer silo they don't talk to one
22:25 - another kind of like my twins i have boy
22:27 - girl twins they don't talk much
22:29 - usually yelling
22:30 - who's emptying the dishwasher
22:33 - ibc
22:34 - so like us like me and my wife with
22:36 - parents we're communicating between
22:38 - these two
22:39 - the ipc
22:41 - this is the channel between these two
22:43 - processes
22:45 - because
22:46 - basically these are kind of sort of
22:48 - segregated there is a way to actually
22:51 - call
22:51 - functions within each other you can
22:55 - but what i have found in talking with
22:56 - other developers it tends to get a
22:58 - little messy messy that way they really
23:01 - do like to sort of keep
23:03 - ui stuff over here really separation
23:05 - concerns
23:06 - and stuff that's really sort of ose over
23:09 - on the main
23:11 - but a great example of where that baton
23:14 - handoff would be was
23:16 - i click on a button over here then i
23:18 - want to open like save dialog
23:21 - save dialog is over in the os side of
23:23 - the world so i need to tell it hey go
23:26 - from the dialog and then the dialog
23:28 - needs to tell say my ui oh here's your
23:31 - file path
23:32 - and oh okay i'm done now do this or
23:34 - whatever it's the ipc that allows us to
23:37 - talk back and forth
23:43 - ipc actually comes in two flavors
23:46 - it comes in a synchronous portion
23:48 - version as well as an asynchronous
23:50 - version so this is the sync version
23:53 - so
23:54 - pull it in
23:55 - and you know they're really cryptically
23:57 - named if you see render ipc main usually
24:00 - keep them straight
24:02 - unless it's two in the morning and your
24:04 - chapter's due um
24:07 - basically here we're attaching it to
24:09 - a button to have on my ui
24:12 - click
24:13 - and basically send synchronous this
24:15 - message
24:17 - with that
24:18 - and over here
24:20 - so this part right here
24:23 - that's sort of the
24:25 - name of my token that i'm sending over
24:28 - and over in the renderer
24:30 - it says hey if i get an ipc message
24:33 - with this basically as the message
24:35 - header
24:36 - then pull these targets and do this and
24:38 - then i can basically send back
24:41 - the return value
24:43 - now it's all locked up synchronous
24:45 - we may want something asynchronous
24:48 - very type is similar hey we're going to
24:50 - send
24:51 - over
24:52 - and then
24:54 - same idea
24:58 - so depending how your ui your
25:01 - interaction because sometimes you may
25:02 - want to lock something up until it's
25:04 - done
25:05 - um sometimes you may not or may run
25:10 - so a great place where this gets used
25:13 - is actually
25:14 - pulling up and kicking off
25:16 - dialogues
25:19 - so
25:19 - you know we have some files we're
25:21 - starting to get more and more file
25:22 - access with our browser but you know
25:25 - the native alert dialogue in a web
25:27 - browser is on a scale of one to ten what
25:30 - about a one
25:32 - i mean
25:32 - it's you know it's funny it's actually
25:34 - like one of the first things you
25:35 - actually show then one's done any
25:37 - cordova work
25:39 - same thing you pull up you make a
25:40 - phonegap app you have a javascript alert
25:43 - and it says your index.html and we're
25:45 - like oh well that's not nice so the
25:48 - first thing you do is like okay you're
25:48 - gonna get a name dialog
25:50 - same thing here how do you give a name
25:52 - dialog well
25:54 - we got them we actually have
25:56 - several variations of them
25:58 - so we have a file open and file save
26:01 - we have a message box which is really
26:03 - sort of your alert info box we also have
26:06 - this special alert box
26:09 - sometimes the naming in github kind of i
26:13 - love to hit that wayback machine because
26:16 - calling these boxes i don't fully get
26:19 - i'd love to like have that one who lost
26:21 - the bet you know um an error box
26:26 - is
26:26 - something you can fire off very very
26:28 - very very fast in the start of your
26:30 - application if something went horribly
26:33 - horribly wrong
26:34 - but
26:35 - but the cool ones are like the file open
26:38 - so
26:39 - this
26:40 - basically
26:42 - is where that ipc stuff starts to come
26:44 - into play again
26:45 - so
26:46 - here we have a dialog
26:48 - we're going to say hey go open the
26:50 - directory dialog
26:51 - boom go do this
26:55 - and then we're going to get
26:57 - a nice looking file dialog
27:01 - we have a lot of opportunities with the
27:03 - open
27:04 - so we can actually filter on the file
27:06 - the directory multi-selection
27:08 - if i want to need to be able to create a
27:09 - directory so all these capabilities you
27:12 - would want in a desktop application or
27:14 - there i can even you know show the
27:16 - hidden files
27:17 - it's like oh you know you're writing a
27:19 - text editor oh yeah that dot did ignore
27:21 - that you actually need to go edit i can
27:22 - show that to you because it's hidden
27:25 - um
27:28 - and actually there's a nice thing on
27:29 - windows we can actually prompt create
27:34 - so
27:34 - here's a little more
27:36 - here's a save
27:38 - you know hide extension a lot of things
27:40 - are all there for us
27:42 - so message boxes these are really dialog
27:45 - boxes in my world
27:46 - um
27:48 - very similar
27:50 - except now we start to define our
27:51 - buttons
27:52 - whose default
27:54 - what the cancel is because remember as
27:56 - you start moving in the desktop world
27:57 - you have to you know really do you think
27:59 - about keyboard interaction
28:01 - accessibility those sorts of things so
28:03 - when i hit you know escape to cancel
28:06 - who am i talking to what am i working
28:08 - with
28:08 - message in detail
28:12 - there are four variations
28:14 - so an info
28:15 - an error a question and a none
28:18 - on the mac side
28:19 - they're all the same
28:22 - there really there is no visual
28:24 - difference between them
28:26 - windows actually does something with
28:28 - those variations so
28:30 - depending on my type you know i can get
28:33 - different icons in there and have
28:34 - different little bit of elements of how
28:36 - they lay out
28:39 - now you are not bound to the default
28:41 - icons
28:42 - you can actually have your own custom
28:45 - icon your own custom image
28:47 - so
28:48 - basically we have a module in there
28:50 - called native image
28:52 - tell it where our little icon is
28:55 - and then we can just pass that in as an
28:57 - icon so you know your visual designers
28:59 - crafted a beautiful application icon and
29:02 - then you plop the warning
29:05 - triangle on the corner and make it look
29:06 - nice and pretty
29:08 - or something else
29:12 - i was talking earlier
29:13 - that that ui layer was all about
29:15 - chromium
29:17 - we have all of these web content events
29:20 - that we can listen to
29:22 - and hook into and start to do something
29:24 - with
29:25 - so depending on what your application
29:27 - usually do
29:28 - you know did the cursor change should i
29:29 - do something
29:30 - um
29:32 - if the dev tools were open do something
29:35 - um did i fail the load did i
29:38 - you know media started playing
29:41 - plugin crashed uh you can actually run
29:44 - flash
29:45 - inside there just just so you know if
29:46 - you actually needed to um
29:50 - you will navigate all these things these
29:52 - are all events and things you can start
29:54 - to listen into if your application needs
29:56 - to work with them
30:00 - all right
30:01 - let's talk about some of the sad parts
30:03 - of the world debugging
30:05 - because i know everyone in this room you
30:08 - know writes flawless code but your
30:09 - co-workers may not
30:11 - you know
30:12 - how do you handle that
30:14 - well
30:15 - the regular process actually
30:17 - we have chromium's dev tools right there
30:20 - for us
30:21 - so we have our console log we can go in
30:25 - look at the html
30:27 - why is the css misbehaving what's going
30:29 - on i can go at it from there
30:33 - the main process actually is a little
30:34 - harder because this is a little bit
30:36 - inside the land of node
30:39 - we actually can implement and use
30:43 - vs codes code tools it's debugging
30:47 - to get them there
30:49 - and if you are a node person you're
30:50 - familiar with node inspector
30:53 - you pull that in and start playing it
30:55 - over on that end of the world
30:56 - because
30:58 - those two silos are are truly silos you
31:01 - may be putting console logs over there
31:03 - but you're not going to see them in the
31:05 - console log that you would see over on
31:06 - the renderer side
31:07 - so
31:11 - there is another extension actually a
31:13 - devtools extension called devtron
31:17 - it has some interesting stuff
31:20 - i used a little bit it didn't knock my
31:22 - socks off it's kind of like okay it's
31:24 - there
31:25 - um
31:27 - but it the only thing i would say is it
31:30 - does help a little bit on some of the
31:32 - ipc communication
31:34 - this stuff going back and forth because
31:36 - it's really that one part of the world
31:38 - where you're living in
31:39 - two worlds at the same time
31:43 - all right how many people test write
31:45 - unit tests
31:46 - share more hands more hands
31:48 - fix that um
31:50 - i'm a prototyper a friend of mine wrote
31:53 - a job description for me one time in a
31:54 - talk says i get paid to write spaghetti
31:56 - code for a living
31:58 - so it's awesome um i'm a ux i'm
32:00 - prototyper it literally is like it's got
32:02 - to run for 12 people for usability study
32:04 - and it never sees the light of day
32:06 - so
32:08 - but i know in the real world testing is
32:09 - important they actually have a tool
32:11 - called spectron
32:13 - which you can use to leverage and
32:15 - actually run proper
32:18 - unit tests with mocha and chai or
32:20 - whatever and actually begin to test your
32:22 - application
32:23 - which is
32:24 - probably rather important especially if
32:26 - you start thinking about in fact this is
32:28 - desktop application
32:30 - a lot more security starts to come into
32:32 - play because you have access to
32:34 - everything in here
32:36 - you know you can say i'm going to erase
32:38 - your hard drive you know a lot of power
32:40 - a lot of responsibility comes in writing
32:42 - an electron app
32:43 - and you want to make sure it's it's
32:45 - working well
32:47 - um
32:48 - real simple installation boom
32:51 - so
32:52 - let's talk about building
32:54 - your application and we'll get to some
32:55 - demos at the end
32:59 - so
33:01 - you need to somehow sort of compile all
33:03 - these bits into something distributable
33:06 - something that may go into the mac app
33:07 - store the windows store
33:09 - on a server that looks and smells like a
33:12 - real application
33:14 - the
33:15 - preferred tool is this module called
33:18 - electron builder
33:21 - and
33:23 - really
33:24 - it only takes a little bit of change to
33:26 - your setup so like i was mentioning
33:28 - earlier that's why you kind of throw
33:29 - some stuff in the app folder
33:31 - like that it's going to start writing
33:33 - stuff out to the build and distribution
33:34 - folder it's a very well maintained
33:36 - project that's always that question you
33:38 - should ask yourself with any sort of
33:39 - open source tool
33:41 - how well-maintained is it you know am i
33:43 - going to be ending life you know two
33:45 - months from now when the critical bug
33:46 - hits and i'm completely in trouble
33:49 - so it's just nice to have a good
33:50 - maintained library
33:53 - it will build for all our platforms it
33:54 - will build for our various architectures
33:57 - so if you have to deal for you know back
33:59 - into 32-bit or 64
34:01 - mac windows it will do all that for you
34:06 - basically in that package json file we
34:08 - need to update our scripts to basically
34:10 - tell it to run build what we want to
34:12 - build for
34:14 - and then we need to define
34:17 - a whole bunch of properties
34:19 - these are actually
34:20 - very well documented we have to give an
34:22 - app id everyone needs an app id um
34:24 - that's how the world
34:26 - you know keeps itself straight
34:28 - copyrights you know the name is going to
34:30 - be what elect version of electron i want
34:32 - to package in there um
34:35 - category from putting this in the app
34:36 - store for mac where it's going to live
34:40 - what kind of installer for windows
34:42 - um
34:43 - what i want to do for linux how i went
34:45 - straight there
34:47 - app icons etc etc all start to put them
34:51 - all in here those are the things you
34:52 - start to define in here if you like i
34:54 - said if you ever worked with cordova
34:56 - this is sort of the equivalent of the
34:58 - config.xml file just they have to use
35:01 - json because it's not 10 years ago
35:03 - so
35:07 - really
35:08 - you know you just basically have to
35:09 - point to where that new starter is
35:12 - it's all good to go
35:14 - make your appt icons in there you have
35:16 - to go a little further
35:18 - like for the mac you know you probably
35:20 - have opened
35:21 - dmgs
35:23 - disk images and you've probably seen
35:25 - something you know really nice like this
35:26 - you know okay take this icon this app
35:29 - put it over here in this you know alias
35:31 - applications folder and that's the
35:33 - extent of the installer
35:35 - well you have to tell it where this
35:36 - graphic is and how big it is
35:38 - and what those things are
35:40 - and it will create that dmg for you make
35:44 - the zip
35:45 - and there they're your bits
35:48 - same thing with windows
35:49 - it will make your windows installers i
35:51 - don't know if anyone's ever tried to
35:52 - make a windows installer
35:53 - but oh they're so much fun
35:56 - so it really does take a lot of the pain
35:58 - out of it there are a couple variations
35:59 - on
36:01 - the two types of windows installers out
36:03 - there
36:04 - this or not um but you get to define
36:07 - this is the real simple one you can have
36:09 - a more
36:10 - formal one and you can start to define
36:12 - sidebar graphics and header graphics and
36:14 - make make it look you know like a real
36:16 - software developer knew what they were
36:18 - doing when they made this installer
36:20 - really nice
36:22 - auto updating
36:24 - this was a hard part this was actually
36:26 - more interesting
36:28 - than i thought i almost kind of feel
36:29 - like they got to the point i'm like oh
36:31 - we just got to add it and move on um
36:37 - it is built into electron
36:40 - however
36:41 - the amount of additional work with the
36:44 - default electron auto update system
36:48 - really left my head scratching
36:50 - because they're not even on top of the
36:52 - same worlds so for mac os it's going to
36:55 - use the system called swirl dot mac
36:57 - which is different than the squirrel for
37:00 - windows
37:01 - and linux actually your starter outlet
37:04 - completely
37:05 - but
37:06 - for the mac one to work you got to have
37:08 - your own server up and running sending
37:10 - back
37:12 - a json file when requested to then send
37:15 - the update around and all this
37:17 - like i said i'm a prototype i'm a
37:18 - front-end guy i'm like what
37:20 - server what
37:22 - 200 response with what package oh oh
37:25 - please
37:26 - um help me help me um
37:30 - so instead there's a lovely alternative
37:32 - package out there called electron
37:34 - updater
37:35 - and there's actually a
37:37 - sort of
37:38 - what i call a third-party group
37:40 - uh
37:42 - it's electron user line i believe
37:44 - they actually have written quite a few
37:47 - so that electron builder tool i
37:49 - mentioned earlier it's the same group
37:51 - also has done this mostly not an
37:53 - electron forge which we'll talk about a
37:55 - second
37:56 - this is an alternative to the electrons
38:00 - built-in updater
38:02 - and the nice thing is it doesn't worry
38:04 - about
38:05 - the whole server response sort of stuff
38:07 - so you just basically drop this in as a
38:10 - replacement
38:11 - and life is good again
38:13 - so
38:14 - you pull in
38:15 - their auto updater not electrons
38:18 - and then you can basically listen onto
38:20 - various events it goes out
38:22 - to a url it asks some stuff
38:25 - and then check if there's an update not
38:27 - update
38:28 - download an error so you can have it do
38:30 - a silent install a prompt install so all
38:33 - that updating you see inside of real vs
38:36 - code stuff like that
38:38 - it's all living on this
38:40 - much much simpler than like
38:42 - standing up your own heroku instance and
38:44 - uploading stuff and hoping you did it
38:46 - right and that sort of thing so
38:49 - but yeah it is electron user land
38:52 - they also started another project
38:54 - which i was just playing with toward the
38:56 - end of the book this thing called
38:57 - electron forge which is really an
38:59 - electron cli it's almost a whole
39:02 - collection of tools
39:03 - to make all this even simpler
39:06 - um it was just getting off the ground so
39:08 - i'm like oh we don't want to rewrite the
39:10 - book we're already late so let's mention
39:13 - at the end
39:14 - so
39:15 - that's the book um
39:19 - that's me let me show you some demos
39:27 - all right
39:29 - so
39:31 - make a little bigger
39:39 - so
39:40 - before i actually run this thing so
39:41 - here's the package.json file you can see
39:44 - we're a little testing got distribution
39:46 - in there a few keywords
39:49 - some more dev dependencies
39:52 - build script type stuff
39:54 - let me just go ahead
39:56 - and run this
40:04 - now it's wait it's right over
40:06 - here
40:08 - quit that wrong project
40:21 - oh that's right i moved it
40:23 - that's what i get for cleaning up before
40:24 - i start
40:35 - there we go
40:41 - hurry
40:49 - right yes
40:52 - oh if they are red
40:53 - um
40:54 - you may have noticed that presentation i
40:55 - just gave you
40:57 - was electron app
40:58 - actually that was just reveal js that
41:00 - only just dropped into the quick start
41:02 - replacing the existing files and was
41:05 - just an electronic so it literally is
41:06 - that easy to take a web app and slap it
41:09 - into electron app now
41:11 - i didn't do anything to deskify it oh
41:13 - that's a real word um
41:16 - things like you know what with a
41:17 - keyboard you know putting up a proper
41:19 - menu keyboard saying you know command h
41:21 - would do this et cetera
41:22 - none of that was done but it's literally
41:24 - as simple as it was so
41:26 - here's electronics so those are the
41:28 - chrome tools i was talking about right
41:29 - there um i forgot to pull in the npc
41:32 - render but that's okay
41:34 - you know i can pull up my
41:37 - my dialog box
41:41 - and then you know i can see what we have
41:42 - down here i can choose a directory
41:47 - all these things that i want
41:50 - test out my
41:52 - processes there's you know console
41:54 - logged back and forth and this is all
41:56 - that code i was talking about through
41:58 - the presentation
42:00 - so
42:01 - pulling a few modules i basically go
42:03 - find the document again keeping it
42:05 - vanilla
42:06 - and
42:06 - you know contextual menus so if i come
42:08 - back over
42:13 - and control click you know i get a real
42:15 - contextual menu inside my html and do
42:17 - something with it
42:18 - my custom menu
42:21 - there's my custom menu
42:23 - pulls that out
42:27 - so
42:29 - oh and there's a reason why the buttons
42:30 - are purple look up rebecca purple um
42:36 - but here are the things back and forth
42:38 - just what i was showing you to think
42:40 - i'll just simply put up inside the thing
42:42 - inside there over the main.js
42:46 - you know here's where i'm creating the
42:47 - window
42:51 - a little bit of the menus
42:54 - you said the menus can get a little
42:57 - larger
42:59 - this is where some of that uh
43:01 - file management loading in would be
43:03 - probably advantageous
43:05 - generate the icon custom functions and
43:08 - that sort of thing so that is you know
43:10 - kind of the start of electron
43:13 - and here let me show you what's possible
43:16 - it should be right there
43:21 - so here's ion generator so we have that
43:23 - splash screen and then here we have this
43:25 - application right here
43:27 - this is an electron application and
43:29 - not in the app store it's assigned to go
43:32 - that far the ui actually is the ionic
43:34 - framework so even i've taken a mobile
43:37 - framework and actually pulled into the
43:38 - desktop so i have the ability to go
43:40 - through here
43:42 - and the idea is if you've worked with
43:44 - ionic it comes with a cli
43:47 - i can never remember all the parameters
43:48 - and it actually doesn't do everything
43:50 - that you would need
43:52 - to set up your ionic application things
43:55 - like adjusting the manifest json file
43:57 - for progressive web app
43:59 - updating the fig.xml file if you were
44:02 - deploying it to a native mobile app
44:04 - pulling in the various plugins the
44:06 - cordova plug-ins this actually
44:09 - was i said well let's just play around
44:11 - with this so i can go through and start
44:13 - to define
44:14 - my manifest json over here
44:16 - come over to cordova yeah i know there's
44:18 - no platform
44:20 - start to pull in things a lot of flying
44:22 - splash screens things i would do in a
44:23 - cordova application
44:26 - yes i know i didn't pull it in i can
44:28 - start having these scrolling lists
44:30 - pulling in plug-ins
44:32 - i can pull in
44:33 - lock testing
44:35 - and eventually
44:37 - have it execute
44:39 - the cli in the terminal on my user
44:43 - system so i don't even paste that like
44:45 - no don't copy this into a terminal it
44:47 - would actually run
44:48 - and build bionic application all through
44:51 - gui so if you have a bunch of command
44:53 - line tools lying around
44:55 - you could actually write a ui
44:57 - making a lot more friendly a little more
44:59 - safeguards
45:01 - and
45:01 - actually just use electron to actually
45:04 - run those headless things for you
45:06 - and go from there
45:08 - but that is a brief look at just you
45:11 - know just the
45:12 - top veneer of what electron is sort of a
45:15 - sampling of what the tools it can give
45:17 - you the hard part is you know
45:20 - writing all the application logic you
45:22 - know it doesn't solve that for you but
45:23 - it really gives you a nice
45:26 - other solution to take that web app take
45:29 - that idea out of the browser you know
45:31 - where you probably had to say to your
45:33 - boss
45:34 - oh the browser won't let me do that only
45:36 - a desktop can
45:37 - well now you can
45:39 - so with that that is electron so i guess
45:43 - we can open up to some questions if
45:46 - there are any hey i'm vj thanks for
45:48 - coming to the meetup today i'm the
45:50 - organizer for javascript la i wanted to
45:52 - just personally thank you for watching
45:53 - this video if you found it useful i'd
45:55 - love for you to subscribe to our channel
45:57 - we're slowly but surely making lots of
45:59 - little video content for you guys to
46:02 - enjoy and soak up especially if you want
46:04 - to get better at programming
46:05 - i'd love for you to be on our slack
46:07 - channel too over 800 users the link is
46:10 - right here js join jsjo.in if you forget
46:13 - it's really simple if you have questions
46:15 - for this meetup or you know questions
46:17 - you didn't get to ask or because you
46:19 - couldn't make it
46:20 - we'd love to have you just post it on
46:22 - our slack group so if you're a newbie
46:24 - don't worry it's a good place to go
46:26 - there's a lot of great engineers all
46:28 - connected around la and orange county so
46:30 - i hope to see you there