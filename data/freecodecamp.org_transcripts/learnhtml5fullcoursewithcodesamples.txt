00:04 - welcome to this interactive scrimba
00:06 - course on html in this introduction i'm
00:09 - going to explain the role of html on the
00:12 - internet and why it is so important
00:15 - what is html it is the standard markup
00:18 - language for creating web pages and web
00:20 - applications along with css and
00:23 - javascript it is one of the cornerstones
00:25 - of the world wide web every website and
00:28 - every web application will render html
00:31 - to the browser let me explain how the
00:33 - web works in essence once you have
00:35 - developed a website you need to host it
00:37 - on a server to make it accessible to the
00:39 - world wide web the server says here's my
00:41 - number call me maybe that is what we
00:44 - call an ip address and often we put a
00:46 - domain name over that ip address so that
00:48 - it is easy to remember
00:51 - when you type that domain name on the
00:52 - browser the browser will then give the
00:54 - server a call and then the server will
00:56 - send the hosted files back to the
00:58 - browser to be rendered your browser will
01:02 - first load the html which may reference
01:05 - other css files and javascript files and
01:08 - will load those references in the order
01:10 - that they are listed in the html from
01:13 - top to bottom so css and javascript is
01:17 - built on top of html elements like skin
01:21 - on bones
01:22 - think of html as the skeleton
01:25 - html provides tags to name different
01:27 - types of content or rather elements on
01:30 - your website for example the header
01:32 - element the links styles etc this helps
01:36 - your browser understands what it reads
01:39 - to render it properly even though the
01:41 - browser only needs html to render a
01:43 - website think of it as a skeleton with
01:46 - bare contents that you will then make a
01:48 - dynamic and more beautiful using
01:50 - javascript and css you can think of
01:53 - javascript as the brains of your website
01:55 - or web application it can modify the
01:58 - html and css and re-render elements of
02:01 - the page based on user input or logic or
02:04 - changes in data from a server this makes
02:06 - your html dynamic rather than static
02:10 - a dynamic website behaves more like this
02:13 - after the page is rendered the user can
02:15 - interact with inputs and elements on the
02:17 - page and trigger javascript functions
02:19 - which can modify the html elements and
02:21 - contents the css and send or fetch data
02:26 - to and from the server which then gets
02:28 - sent back to the browser to be
02:30 - re-rendered games and interactive
02:33 - applications can be built upon html
02:35 - thanks to javascript
02:37 - however without rendered html elements
02:40 - javascript and css will have no visible
02:43 - usefulness on the browser you can think
02:46 - of css like the skin of the website css
02:48 - allows us to enhance the user experience
02:51 - for visitors design a user interface
02:54 - implement a brand identity apply
02:56 - typographic and visual design principles
02:59 - make the site responsive for mobile and
03:01 - desktop viewing alike and overall a more
03:04 - enjoyable experience
03:06 - to look at and use now regardless of
03:09 - whether you are looking to be a designer
03:11 - of websites and web applications or a
03:13 - more full stack developer of web
03:16 - applications a thorough understanding of
03:18 - html is a must and hopefully after this
03:21 - course you will have html in your pocket
03:25 - in this course i'll share with you the
03:27 - boilerplate tags and declarations that
03:29 - you'll need on every project we'll
03:30 - practice element nesting and indentation
03:33 - we'll learn how to use layout elements
03:35 - semantically or properly learn how to
03:38 - use metadata link scripts and style
03:40 - elements we will use attributes ids
03:43 - classes along the way we'll learn how to
03:45 - embed images video and audio
03:48 - we'll also practice using text
03:50 - formatting elements we'll learn how to
03:52 - make a numbered or bulleted list of
03:55 - items and to wrap things up we'll learn
03:57 - about forms and tables as a result we're
04:00 - going to build a project using the most
04:03 - useful elements and best practices of
04:05 - html5 i will provide you with css and
04:08 - javascript to make learning html more
04:10 - visually enjoyable and fun my name is
04:13 - eric you can find me as i am toronto
04:15 - pretty much anywhere on social media if
04:16 - you have any questions feel free to ask
04:18 - me anytime or ask questions on the q a
04:20 - section on the sidebar and let's jump
04:22 - right in
04:28 - for the browser to render a website it
04:30 - needs html and for us to write html we
04:34 - need an html document
04:36 - and what makes an html document
04:39 - that is having the extension of dot html
04:43 - over on the top left of our workspace we
04:45 - have a gear icon by clicking there i can
04:48 - select new file and i'm going to create
04:51 - a new file and simply give it the name
04:53 - of
04:54 - hello.html to be added to my website
04:56 - assets
04:59 - as you can see
05:01 - if we try to render this and open the
05:02 - browser
05:04 - we can see that we still have an error
05:06 - when you enter a url on your browser
05:08 - your browser makes a call to the server
05:10 - requesting the website assets the screen
05:12 - browser is automatically looking for the
05:14 - assets in your project files here on our
05:17 - files panel
05:18 - but now it doesn't know what the name of
05:20 - my html document is to render it
05:23 - automatically if i tell the browser
05:25 - exactly what document to look for it can
05:27 - find it for example if i type
05:29 - hello.html
05:33 - hello world let's hit save again
05:36 - and as we can see it will render hello
05:38 - world but it could not find this on its
05:40 - own
05:41 - so how do we get a home page to load by
05:44 - default all browsers will look for a
05:46 - file called index.html in order to
05:49 - render it as the home page also known as
05:52 - the landing page for this reason every
05:54 - project needs to contain an index.html
05:57 - file the browser can load by default
06:00 - now i'm going to go ahead and rename
06:02 - this to index.html
06:04 - i'm going to save it and now in the
06:06 - browser here i'm going to type
06:07 - index.html
06:09 - and it will render hello world now the
06:11 - browser will load this by default if you
06:14 - would like to try this outside of
06:15 - scrimba on your actual browser you may
06:17 - use any text editor that comes with your
06:19 - computer
06:20 - and simply save a file and name it index
06:23 - with the extension of dot html then drag
06:26 - it onto your browser and it will render
06:28 - whatever text you placed inside
06:30 - there are more advanced and free text
06:32 - editors out there that you can use to
06:34 - edit html and other programming
06:36 - languages such as atom
06:38 - visual studio code and sublime text to
06:42 - name a few
06:43 - to create a javascript file you need to
06:45 - use the extension of js and to create a
06:49 - css file we need the extension of css
06:52 - now these don't need any specific names
06:55 - since our index.html document can tell
06:58 - the browser the exact names of required
07:00 - css and javascripts we'll learn more
07:02 - about that in another lesson but for now
07:04 - let's name them index dot js and
07:07 - index.css as well
07:10 - index.js
07:12 - index.css now that we have our html
07:14 - document we can begin learning how to
07:16 - code html see you in the next lesson
07:23 - hello welcome to in this lesson we're
07:26 - going to be practicing nesting and i've
07:28 - prepared some css so that we can
07:31 - visually understand nesting and how it
07:34 - works and we're going to begin by
07:35 - connecting that css style sheet to our
07:38 - html document so let's go ahead and
07:40 - begin there let's make a link
07:43 - and you do that with the link tag
07:45 - to create
07:46 - link
07:47 - and then we're going to type rel which
07:50 - stands for relationship
07:52 - and you're letting the browser know what
07:54 - relationship this style sheet has to
07:56 - html document that would be stylesheet
07:59 - let's go ahead now and put the reference
08:01 - to the
08:03 - index.css okay so we have named this css
08:06 - style sheet as index dot css it could be
08:08 - named styles.css or anything else and
08:11 - just make sure it has the same name okay
08:13 - so now let's hit save and see what
08:15 - happens
08:17 - we have
08:19 - a purple background color applied to the
08:21 - body tag that's why everything turned
08:24 - purple
08:25 - let's remove this hello world here and
08:27 - now we're going to play with nesting so
08:30 - i'm going to create a div
08:32 - element this is the most common element
08:35 - that is used
08:37 - on html and this element doesn't have
08:41 - any semantic meaning it is pretty much
08:43 - for any content that you want to divide
08:45 - from other content that you're not sure
08:47 - if you should use other semantic tags
08:49 - for and as you can see i have created
08:51 - this div element with a opening tag and
08:54 - closing tag wrapped by the body opening
08:56 - tag and the body closing tag so it's a
08:58 - child of the body now let's add a class
09:02 - by typing class equals
09:05 - in quotation marks i'm going to put
09:07 - white
09:08 - and
09:09 - now you're going to see that this
09:11 - element has a white background it has a
09:13 - width and a height this is because in
09:15 - the css i have applied a style to any
09:18 - element that has the class of white so
09:21 - think of white or a class as a cell
09:24 - phone number that the css can call and
09:26 - then attribute styles to any element
09:29 - that has that class
09:32 - and similarly there is an attribute
09:35 - called id
09:36 - but the id it is not meant to be used on
09:40 - multiple elements only on one single
09:42 - element on your whole document should
09:44 - have that specific id so it's good for
09:46 - when you're making an element there it's
09:48 - going to be
09:49 - on your website only once and you can
09:51 - call that
09:52 - for example advertisement and then in
09:55 - the css you can style that also
09:57 - javascript uses ids and you communicate
10:00 - with elements so we're going to leave
10:01 - this as class of white okay i'm going to
10:04 - make another element here
10:06 - and i'm going to call it div
10:08 - class
10:10 - green
10:11 - all right so now we have two elements
10:14 - and as you can see they're not inside
10:15 - each other they're next to each other
10:16 - and that's because they are siblings now
10:19 - what would happen if i grab this div
10:21 - with the class of green
10:23 - and put it inside the opening and
10:25 - closing tags of the div with the class
10:28 - of white i'm going to hit save
10:31 - all right there we go now that green div
10:33 - is visually also inside of the other
10:36 - element it is wrapped by it
10:38 - okay so i'm going to create a proper
10:40 - indentation here so that we can visually
10:42 - understand what's going on and now you
10:44 - can pause this video go in here and
10:46 - create another div inside of the green
10:48 - div that has the class of red i'll wait
10:54 - all right that should look something
10:56 - like this
10:59 - perfect i love it let's create more
11:02 - elements
11:03 - here if you like feel free to play
11:04 - around however you want with this these
11:06 - are the only three classes that i have
11:08 - styled so
11:09 - stick to those three classes there the
11:11 - white green and red but you can have
11:13 - multiple elements
11:17 - and you can keep doing the same thing
11:19 - for all of them pretty fun feel free to
11:21 - play around with these elements and see
11:22 - you in the next lesson
11:29 - all right everybody let's go ahead and
11:31 - populate uh this head element with some
11:34 - meta tags well before the meta tags
11:36 - let's do the title tag unfortunately we
11:38 - cannot preview what the title tag does
11:42 - on this browser because the the scrimba
11:44 - browser doesn't show the title of the
11:46 - page
11:47 - but just to illustrate it the title of
11:50 - this lesson is called head elements and
11:54 - you can see that the title of this
11:55 - course is also on the tab of your
11:57 - browser and that is because your browser
11:59 - is looking for the content of the title
12:01 - tag and placing that on the tab on your
12:04 - browser
12:05 - so here we can say this html document is
12:09 - called learning html and there are other
12:12 - meta tags that you should add for
12:14 - example the meta
12:16 - char set
12:17 - equals utf-8 so this is telling the
12:20 - browser what character set you are using
12:23 - to write your html document with
12:26 - okay and there are other ones i'm going
12:28 - to give it a name of description
12:31 - and the content of that description is
12:33 - going to be
12:37 - my first html website
12:40 - and as you can see there's no closing
12:42 - tag for the meta tag and that is because
12:45 - it is a self-closing tag it never
12:47 - carries content so it doesn't require a
12:50 - closing tag everything is in attributes
12:54 - and values right inside the opening tag
12:57 - itself there's one meta tag that you
12:59 - must always have on a document
13:01 - especially if you're going to be
13:02 - building a responsive website and that
13:04 - is called
13:05 - the viewport meta tag so here we're
13:07 - going to type name
13:09 - viewport
13:10 - and on the content we're going to
13:11 - specify
13:13 - the width
13:14 - of the site is always the device
13:17 - width
13:19 - comma
13:20 - and let that initial scale
13:23 - be
13:24 - 100
13:25 - what this allows is for your browser to
13:27 - render everything at a 100 scale no
13:31 - matter what the width of your browser is
13:34 - so you must always have this tag
13:37 - especially if you're trying to build a
13:38 - beautiful responsive website okay here
13:41 - we have the link tag that we brought
13:44 - over from our previous document it is
13:46 - loaded in the same server as our html
13:49 - but let me tell you that you can also
13:50 - import an external style sheet from
13:53 - anywhere on the web on our website we're
13:55 - going to be using icons that come from a
13:57 - style sheet
13:58 - that is hosted on fontawesome.com on
14:01 - awesome.com makes fonts that we can
14:03 - access through html classes i'm just
14:05 - going to import that right in because
14:06 - we're going to be using it on our
14:07 - project so this goes to show that you
14:09 - can import a style sheet that's loaded
14:11 - on your server or you can import an
14:13 - external style sheet that it's on the
14:15 - web now you can also have
14:18 - you can also have embedded styles in the
14:20 - document just know that whatever style
14:23 - is here you cannot use it on another
14:24 - page because you cannot import it or
14:27 - reference it or link to it from another
14:30 - html page let's write some content here
14:33 - this is the header one element
14:38 - which is the most important text on your
14:40 - site you should only use it once per
14:43 - page just so that the browser know what
14:44 - the most important text is
14:47 - here we're going to type
14:49 - hello
14:50 - world
14:51 - and as you can see we have some text now
14:53 - we're going to explore the header tags
14:55 - later on but now i'm going to use the
14:57 - style here to apply some text to our
15:00 - hello world here so let's do
15:02 - h1
15:04 - and i'm going to do text
15:06 - align
15:07 - center
15:08 - there you go i have aligned the text now
15:10 - this style right here will override this
15:13 - index dot css because it is after in the
15:16 - flow the browser will read this and then
15:19 - overwrite it
15:20 - with this now you will be able to
15:22 - overwrite this if you do an inline style
15:25 - and you do that by typing the
15:27 - attribute of style
15:29 - with the value of
15:31 - let's say i'm going to do text align
15:34 - left just to show you that i can
15:35 - overwrite it
15:37 - there you go in the line to the left it
15:39 - overwrote what this specified right
15:41 - there
15:42 - now i'm going to do i'm going to change
15:44 - the color to let's say
15:46 - gold
15:47 - there we go so i'm applying text align
15:50 - center here
15:52 - i'm applying color gold here
15:55 - and this background purple comes from
15:57 - the index dot css so that's two ways
16:00 - that you can apply styles on your page
16:03 - now there's another element that you can
16:04 - use called script
16:06 - so that you can run javascript right on
16:08 - your website and i'm going to run a
16:10 - simple script that says hello universe
16:14 - and this is going to give an error let's
16:15 - save it and that is because i don't have
16:18 - anything with the id of h1 on the
16:21 - document
16:23 - so let's type
16:24 - id
16:25 - h1
16:27 - hit save and we still have the error and
16:29 - that is because we need to put script
16:31 - after the element that we're trying to
16:33 - modify with javascript hello universe
16:36 - there you go i replace the content of
16:38 - hello world with hello universe okay so
16:40 - i'm not trying to give you a lesson on
16:42 - javascript but even if you don't know
16:44 - javascript you can import javascript
16:47 - plugins that other people have developed
16:49 - into your site so you always want to
16:51 - make sure that it's inside the body
16:53 - but it needs to be after the rest of the
16:56 - content of your site
16:58 - and now let's say i want this to come
17:01 - from an external javascript file so
17:03 - let's go ahead and cut this out i'm
17:05 - going to put it inside this javascript
17:06 - file
17:08 - we lost the hello universe
17:10 - and now for the script tag
17:12 - i'm going to type source
17:14 - index.js
17:16 - and i'm going to hit save
17:17 - and there we go we've imported the same
17:20 - javascript code that we had inside the
17:22 - tag
17:23 - from here
17:24 - and now that we've got our head elements
17:26 - set up our meta tags our styles and
17:29 - script tags
17:30 - we're ready to start building our layout
17:32 - let's go
17:37 - in this lesson we're going to be
17:39 - building this beautiful layout using the
17:42 - layout elements that have been provided
17:43 - to us using html5 let me tell you a
17:46 - little bit about how we used to do it
17:48 - before we had these layout elements we
17:50 - used to use the div element to separate
17:53 - all kinds of different content on our
17:54 - page
17:55 - and to differentiate one div from
17:58 - another we would use classes
18:03 - and you can do this today but html5 has
18:06 - provided us tags for the most commonly
18:08 - used layout elements so we're going to
18:10 - replace this div
18:12 - with
18:13 - the header element
18:15 - in here i'm just going to type header
18:16 - and let's see what that looks like if
18:18 - you ever want to see what these look
18:19 - like without the styles just feel free
18:21 - to comment out
18:23 - or remove this style right here
18:26 - and you'll see header right there okay
18:28 - i'm gonna put that back
18:32 - another great layout element that we've
18:34 - been given is the footer element
18:38 - i don't know why i did two closing tags
18:40 - there
18:41 - see what that looks like perfect
18:43 - all right i'm gonna type footer in here
18:46 - and another great element that they gave
18:48 - us is the section element
18:51 - now you may want to divide different
18:53 - parts of your site by sections and you
18:55 - don't have to use divs anymore
18:57 - you can be a little bit more specific
18:58 - and say this is a different section of
19:00 - the page that's all it is pretty
19:02 - straightforward
19:03 - in here i'm going to type the main
19:05 - element
19:08 - now this tells your browser what the
19:11 - main content of this document is
19:14 - so don't put anything that's repeated
19:16 - throughout different pages in here don't
19:18 - put the header in here don't put the
19:19 - sidebar in here then put the footer in
19:21 - here the main is for the specific
19:23 - content of this document in here i'm
19:25 - going to write the article element
19:29 - and in here i'm going to type
19:31 - article
19:32 - let's see what that looks like
19:34 - all right there we go i have an article
19:36 - inside my main element i'm going to
19:39 - multiply this
19:41 - all right perfect
19:43 - and now as a sibling of the main element
19:45 - i'm going to place
19:47 - the aside
19:50 - what this says is this is content aside
19:53 - of the main content so sometimes having
19:56 - ads or a sidebar on our page can go
19:59 - inside of the aside element one last one
20:01 - that i'm going to use here i'm going to
20:03 - replace this header type here for the
20:06 - nav element
20:07 - this is also very common elements and
20:10 - they've given us an element for that and
20:12 - i'm just gonna
20:14 - type here navigation and hit save
20:17 - all right here we go we've built a basic
20:19 - layout using the layout elements of
20:21 - html5 on the next lesson we're going to
20:24 - embed some images and a video
20:26 - see you there
20:33 - in this lesson we're gonna play around
20:35 - with figure and image elements let's go
20:38 - ahead and get started with the image
20:39 - element so here is the image tag
20:42 - and the image tag does not have a
20:44 - closing tag such as article it has a
20:48 - closing tag here and the closing tag for
20:50 - main it doesn't have that it is what we
20:52 - call a self closing element it does not
20:54 - carry content inside of it uh
20:58 - so you're just going to put a forward
21:00 - slash there at the end of the tag
21:02 - and it has two attributes that are
21:06 - required and one of those is source
21:10 - and the other one
21:13 - and the other one is alternate
21:16 - and you type it as such
21:19 - for the source attribute the value is
21:22 - simply the name of your image or a link
21:24 - to the image if the image were to be at
21:26 - the root directory of your files such as
21:29 - where this index.html is if it was at
21:31 - the same level you would type simply the
21:34 - name of the image and the extension
21:36 - if the image is inside of a folder that
21:38 - is at the root directory of your project
21:42 - then you would type the folder name
21:44 - forward slash and then the image name
21:47 - now i cannot upload an image here onto
21:50 - scrimba but i can link to an external
21:53 - image somewhere else on the internet so
21:55 - i'm just going to grab
21:56 - a url and paste it right here
22:00 - i'm gonna hit save
22:02 - there we go now we can see the image
22:05 - uh feel free to play around with this uh
22:07 - grab an image from the internet and try
22:08 - to embed it uh right there in the source
22:12 - this alternate attribute
22:14 - the value that you place here it
22:19 - now for the
22:20 - alt attribute
22:24 - what you are telling the browser is if
22:27 - you cannot load the image what alternate
22:29 - information it can show so here you
22:32 - simply type information about the image
22:36 - such as
22:37 - a laptop
22:38 - with a mouse
22:40 - on a desk
22:47 - and
22:48 - a pair of glasses
22:51 - now this can be especially helpful for
22:54 - people that are visiting your site but
22:56 - are visually impaired and they may be
22:58 - using screen readers
22:59 - to view
23:03 - and maybe using screen readers to
23:05 - navigate your site and
23:07 - though they cannot see the image they
23:08 - can get an idea of the image that you're
23:10 - using
23:11 - on your page as an illustration or a
23:14 - graph
23:20 - so these are the two required attributes
23:22 - of the image tag
23:24 - now let's go ahead and move on to the
23:27 - figure
23:28 - tag so this one does have an opening and
23:31 - a closing tag so i'm going to go ahead
23:33 - and put them in
23:35 - i'm going to indent
23:36 - image right here perfect now the figure
23:39 - element has a an element uh
23:43 - now the figure element has a child
23:45 - element that is to be used together with
23:48 - it and that is called fig caption
23:51 - that also has
23:53 - an opening and closing tag
23:57 - and in here you're gonna i'm gonna write
23:59 - a caption to the image just to give it a
24:01 - little description
24:03 - it could be an it
24:11 - now let's learn about the fig
24:14 - now now let's learn about the figure
24:16 - element
24:19 - the figure element specifies
24:21 - self-contained content not just images
24:23 - it could be an illustration it could be
24:25 - code photos diagrams etc
24:30 - i'm going to write the closing tag here
24:33 - and
24:34 - what's special about the figure element
24:36 - is that it has a child element that goes
24:37 - along with it called fig caption and in
24:40 - here you can write a caption that is
24:43 - directly related to the content inside
24:47 - the figure element
24:49 - this could be at the top of the figure
24:51 - element or the bottom as i am placing it
24:53 - here and here i'm gonna describe
25:08 - and here i'm going to describe
25:10 - the
25:11 - figure image
25:18 - i'm going to hit save
25:20 - all right and we can see how the browser
25:21 - will attach this caption right to the
25:23 - bottom of the image as a little
25:25 - description
25:27 - alternatively you can add styles to this
25:29 - and change how it behaves
25:31 - as an example i have made a class that
25:34 - we can add here i have styled this with
25:36 - css
25:37 - to the class of
25:40 - hero i'm gonna hit save
25:42 - there we go we can see the caption is on
25:44 - top the image is blurred uh you can play
25:46 - around with figure and
25:49 - editing the content of it so
25:57 - as you can see uh the css completely
25:59 - modified the way the caption looks and
26:02 - the image itself looks is now blurred so
26:05 - don't feel limited by fig caption it is
26:07 - another tool that we can use to style
26:09 - our content more effectively
26:20 - so as you can see i have applied
26:22 - so as you can see i have applied quite a
26:24 - bit of
26:27 - so as you can see i have modified quite
26:29 - a bit uh the figure image
26:32 - the figure element
26:34 - so as you can see i have modified quite
26:36 - a bit the figure element and the
26:38 - contents of the figure elements such as
26:40 - the image and the caption so don't feel
26:42 - like it's going to limit you it is
26:44 - simply more semantic to use it when you
26:46 - need it and you are completely free to
26:49 - make it look how you need it to and you
26:51 - are completely free to make it look just
26:54 - how you need it
27:01 - hey guys in this lesson we're going to
27:02 - learn how to embed a video using html
27:06 - the first way is using the video element
27:10 - i'm going to type video and i'm going to
27:12 - treat it as a closing self-closing
27:15 - element or a void element just like we
27:17 - did with image meaning it has no closing
27:20 - tag
27:22 - in it i can type source
27:26 - and for the source i can type the name
27:28 - of the video
27:30 - if it was in my root directory it would
27:33 - be the name of the video if it was
27:35 - inside a folder i would type the folder
27:37 - name and then the video name
27:40 - but because i don't have that i'm going
27:42 - to go ahead and use an external video
27:45 - source right here
27:46 - now scrima cannot record the video
27:48 - playing so i'm going to tell you to
27:50 - pause the video here open the preview
27:53 - and hit play for yourself
27:57 - were you able to
27:59 - that is because there are no controls
28:01 - you need to type the attribute of
28:03 - controls so that you can hit play go
28:05 - ahead jump into the code and now try to
28:07 - play it
28:08 - alright i hope you were able to
28:11 - there are other attributes you can use
28:12 - such as autoplay so the video plays by
28:15 - itself there's one called muted so that
28:16 - it is muted by default loop so the video
28:19 - plays over and over again by itself
28:22 - uh preload
28:23 - so the video downloads or buffers before
28:26 - the user hits play and there's also
28:28 - width
28:30 - i'm going to give it 600 pixels and
28:32 - there's also height
28:34 - can i give it a height of 350 pixels
28:38 - all right
28:39 - so there's my video but now i want my
28:41 - video to be responsive if you can see
28:44 - the frame of the video
28:46 - the width does not change based on the
28:47 - width of the viewports
28:49 - so i have used css to create a class for
28:52 - a wrapper so i'm going to wrap this in a
28:54 - div with the class of
28:57 - responsive
28:58 - vid
29:00 - and i'm going to hit save and now you'll
29:02 - see that the boundaries of the video
29:04 - should be responsive
29:06 - now the video elements can take the
29:08 - source as a nested element
29:12 - for that i'm going to need to create a
29:14 - closing tag for the video element and
29:16 - the nested element is going to be called
29:17 - source and in here i'm going to paste
29:19 - the source attribute that i had before
29:22 - now i'm going to use the type attribute
29:25 - and i'm going to tell the browser this
29:27 - is a video
29:28 - of the format mp4
29:32 - now this is useful or necessary because
29:35 - some browsers do not support formats
29:37 - like ogd for example safari
29:40 - and internet explorer so you need to
29:42 - have a fallback source for those
29:45 - browsers so this is good practice for
29:47 - video make sure that you can upload
29:49 - multiple formats of your video
29:51 - especially if your website is going to
29:52 - be used by people that may have older
29:54 - browsers
29:56 - another way that you can embed a video
29:58 - is using the iframe elements
30:01 - so i'm going to type the iframe opening
30:03 - and closing tags
30:04 - and the iframe can take a width actually
30:08 - you need to give it a width so that you
30:10 - can see
30:11 - the content and a height
30:14 - as well so i'm going to give it 350
30:18 - and these are pixel dimensions again and
30:21 - for the source
30:22 - to help you understand a little bit of
30:24 - what the iframe does i'm just going to
30:26 - type a url to the scrimba.com
30:30 - page
30:34 - so as you can see it has put the
30:36 - screamer page in a frame inside of my
30:38 - document if this is not working in the
30:40 - recording go ahead and jump into the
30:42 - preview yourself and try to play with
30:44 - this but it has put the scrimba website
30:47 - within my document
30:49 - now this is the method that some
30:51 - platforms will give you a video to be
30:53 - embedded on your site such as youtube if
30:55 - you find a video on youtube right below
30:57 - there's going to be a tab that says
30:58 - embed go ahead and click that and you
31:01 - can copy
31:02 - the code there which is
31:04 - an iframe and paste it
31:07 - those are the two ways in which you can
31:08 - embed videos in html see you in the next
31:11 - one
31:16 - in this lesson we're going to learn
31:17 - about list items and we're going to
31:19 - build our navigation bar so to start off
31:21 - i'm going to disable the css and also
31:23 - this figure
31:24 - element and in here i'm going to type
31:28 - ul a ul element it has an opening and a
31:31 - closing tag
31:32 - that's because it's going to contain
31:34 - certain elements and those elements are
31:37 - li which stands for list item
31:40 - and those have an opening and a closing
31:42 - tag so ul stands for unordered list
31:45 - i'm going to type here item one hit save
31:49 - okay it's an unordered list meaning it
31:51 - has no numbers
31:53 - if you want one with numbers you do an
31:55 - ordered list with an
31:57 - ol
31:59 - there we go it has a number perfect
32:01 - let's go back to ul
32:04 - now list items behave as block elements
32:07 - meaning they will stack vertically they
32:09 - will not go in one line but you can
32:12 - overwrite that with css
32:14 - i'm gonna go ahead and put this style
32:16 - sheet back and let's see what happened
32:18 - to that ul
32:19 - there we go we have it in a row
32:22 - i'm gonna get rid of this text that i
32:23 - don't need anymore
32:26 - okay i'm gonna add some
32:28 - anchor tags
32:30 - and i'm just gonna put a pound symbol
32:33 - there close the opening tag for the
32:35 - anchor
32:36 - and have another anchor
32:38 - closing tag here
32:40 - okay perfect so now these are links
32:43 - inside of a list item
32:46 - and that should add the default link
32:48 - styles
32:50 - perfect
32:53 - i can have this outside of my header for
32:56 - a different style that i've prepared so
32:58 - these are different ways that you can
32:59 - have an app you can have it below a
33:01 - header or inside a header
33:03 - as a matter of fact you could have it
33:05 - as a sidebar or off canvas
33:08 - if you notice that
33:09 - all of my content is wrapped
33:11 - by a div that has a class of center and
33:14 - that is because i have styles for
33:16 - sidebars i'm just going to go ahead and
33:18 - type those up real quick
33:21 - as well as a bar to toggle it triggering
33:24 - some javascript
33:25 - functions
33:27 - let's take a look
33:29 - isn't that neat
33:31 - okay
33:32 - now i can also copy this unordered list
33:35 - and put it on the sidebar for example
33:40 - and see what that looks like
33:42 - awesome
33:43 - beautiful
33:44 - okay so there we go we have learned how
33:46 - to use lists
33:48 - remember if you want to see what this
33:50 - stuff looks like without styles
33:52 - just remove the css
33:54 - take a look
33:56 - all right there we go we learned about
33:58 - list list items and how they can be used
34:00 - we're going to keep building up our page
34:03 - on the next lesson see you there
34:09 - all right in this lesson we're learning
34:11 - headings and headings are pretty easy
34:13 - let's go ahead and get started i'm going
34:14 - to scroll right below my figure elements
34:17 - right here and i'm going to begin with
34:18 - the most important heading of them all
34:21 - and that is the h1
34:24 - i'm going to type that here
34:26 - and let's hit save and take a look
34:29 - all right there we go this is the most
34:30 - important heading
34:32 - now i'm going gonna go to the least
34:34 - important heading they go from one
34:35 - through six so i'm gonna do h6
34:39 - and i'm gonna type a little description
34:41 - here
34:43 - all right
34:44 - the browser will render these at
34:46 - different sizes h1 is the largest and h6
34:50 - as the smallest
34:51 - now we may be tempted to use h1 through
34:54 - 6 to style our text and make them larger
34:58 - or smaller but the browser and search
35:01 - engines and screen readers want to know
35:04 - what the most important text of your
35:06 - site is so use h1 through 6 to determine
35:09 - importance not the size
35:12 - so i want to say that learning html is
35:15 - the most important
35:17 - so i'm going to wrap it in the h1
35:21 - and i'm gonna use an h2 for this header
35:24 - here
35:26 - and i'm gonna save it
35:29 - and now we can see that it got smaller
35:32 - but now let's say i want to make the h2
35:33 - of a larger font size without changing
35:35 - it to an h1 well that is why we have css
35:40 - so i'm just going to go ahead and put
35:41 - style here and font size and i'm gonna
35:44 - make this
35:46 - three ems and as we can see our h2 now
35:50 - is visually larger but i'm still letting
35:52 - the browser know it is not the most
35:54 - important text of this document that's
35:56 - pretty much it feel free to play with
35:58 - headings h one through six and see you
36:01 - in the next lesson
36:08 - all right in this lesson we're learning
36:10 - about paragraphs and some basic text
36:13 - formatting in here it's a little bonus
36:15 - we have the hr a horizontal row it
36:17 - simply draws a line you can modify that
36:19 - with css to look however you'd like but
36:21 - uh let's begin with the paragraph tag so
36:24 - that would be simply a p and we would
36:26 - have an opening and a closing tag for
36:28 - the p
36:29 - and in here you can type anything you'd
36:31 - like i have some text that talks about
36:34 - html so i'm just going to paste that in
36:36 - here let's hit save see what that looks
36:38 - like
36:39 - all right there we go we got a paragraph
36:41 - pretty boring so let's use some extra
36:44 - markup here to jazz it up a little bit
36:47 - so here we got hypertext markup language
36:50 - i'm going to make this bold and we're
36:51 - going to use the bold element which is
36:53 - simply a b
36:55 - and we place the opening tag there and
36:58 - i'm going to put the closing tag
37:00 - over here after
37:01 - html there we go
37:04 - now that's bold pretty cool
37:07 - we got some other ones we got italics
37:09 - i'm gonna turn cascading style sheets
37:11 - and css into
37:14 - italics so that is simply the i
37:19 - and let's hit
37:20 - save and let's take a look nice okay
37:24 - cascading style sheets and css it's all
37:27 - in italic
37:29 - we also have another one called emphasis
37:33 - which is em
37:39 - as it save
37:40 - and as you can see it also italicized it
37:44 - but it is telling the browser that it is
37:46 - not just italicized but it is more
37:49 - important than other words because it is
37:51 - emphasized so some of these tags don't
37:54 - only change the style or the way that it
37:56 - looks but also changes uh the meaning of
37:59 - the words that are wrapped within them
38:02 - we also have one called a strong
38:09 - which is another word to add emphasis to
38:12 - text and it is styled like bold
38:15 - we also have another one that i think is
38:16 - pretty neat it's called mark
38:20 - it's pretty much like you grabbed a
38:21 - marker or a highlighter
38:23 - and went over the text let's take a look
38:25 - at that there we go html documents is
38:27 - highlighted
38:29 - i like that
38:31 - and inside a paragraph you can also put
38:33 - a link so let's say you want to put a
38:34 - link in your text to another page on
38:36 - your website or another page on the
38:38 - internet
38:39 - you can wrap your text in in an anchor
38:42 - tag
38:44 - type the href i'm just going to put a
38:46 - pound symbol so it doesn't go anywhere
38:49 - and put the closing tag
38:52 - here
38:53 - all right
38:55 - html describes there you go it's a link
38:57 - it doesn't do anything okay so this is
38:58 - basic formatting for paragraphs i'm
39:01 - going to show you a little bit more in
39:02 - the next lesson
39:09 - welcome to text formatting part 2.
39:12 - now let's say that you want to break a
39:14 - paragraph to start on a new line
39:17 - you may have tried doing this right here
39:20 - but uh that doesn't quite work
39:22 - and let me tell you that there is a tag
39:24 - for that and that would be the break tag
39:27 - let's see how that looks
39:29 - all right we see that web browsers is on
39:31 - a new line after world wide web
39:35 - perfect now i've seen people that will
39:37 - pile these break tags like this to
39:39 - create spaces between different lines of
39:43 - text
39:44 - that is not good practice just go ahead
39:45 - and make a new paragraph like this
39:50 - and there we go those are the two ways
39:52 - in which you can break a new paragraph
39:54 - to a new line another useful tag is the
39:57 - block quote tag
40:00 - if you have a quote on your document
40:03 - and you want it to stand out
40:06 - and i'm just going to paste the quote
40:07 - that i found on the internet about
40:09 - development and i'm going to hit save
40:12 - let's take a look at that
40:13 - all right beautiful
40:15 - by default it is usually indented a
40:17 - little bit from the left of where the
40:19 - paragraphs are aligned
40:21 - but i have styled it so that it looks uh
40:23 - like this
40:25 - the block quote tag can also take the
40:26 - attribute of site
40:28 - and you can put a citation to the source
40:31 - of this quote i'm just going to say
40:33 - twitter
40:35 - and here we
40:36 - go perfect
40:39 - awesome
40:41 - we also have a
40:42 - tag of code
40:44 - which is just letting the browser know
40:46 - that you're putting code inside of this
40:48 - element
40:49 - and
40:51 - i'm going to paste some css in here
40:54 - just to see what it looks like
40:58 - all right and what it did is it put it
41:00 - all in a single line but the browser by
41:03 - default will apply what is called a
41:05 - monospace typeface but what if we want
41:07 - to keep our indentation for that we have
41:09 - another tag called pre now this code
41:12 - element doesn't really do much for me i
41:14 - don't really need it i'm going to
41:16 - replace it
41:17 - for the pre-tag and let's see what that
41:20 - does
41:21 - scroll down all right so 3 stands for
41:24 - pre-formatting so all the indentation
41:26 - that i gave my code stayed there now i
41:29 - don't want all of this indentation that
41:31 - i used to keep my code pretty so
41:34 - unfortunately i'm gonna have to
41:37 - get rid of all this indentation
41:41 - and let's take a look at it again right
41:44 - perfect beautiful there we go and that
41:46 - is how you use the code and the pre tag
41:48 - and the block quotes i'm going to teach
41:50 - you one more tag called the quote tag
41:54 - and for that i'm just going to replace
41:56 - this mark tag for a queue this is for a
41:59 - short quote i'm going to save as you may
42:02 - have noticed i did not add these
42:04 - quotation marks but the browser will add
42:07 - those quotation marks by defaults all
42:10 - right i hope you had fun learning these
42:11 - extra formatting elements and see you in
42:14 - the next lesson
42:20 - in this lesson we're going to cover the
42:21 - basics of tables tables can be a bit
42:24 - complicated for some people it was for
42:26 - me at the beginning but i'm going to try
42:27 - to make it as simple as possible let's
42:29 - get started
42:31 - when creating a table the first element
42:33 - that we need to create is the table
42:36 - element
42:37 - and the table element can take a child
42:40 - element of tr which stands for table row
42:45 - and the table row element can take a
42:49 - child
42:50 - that is called the td or table data
42:54 - element
42:56 - and in here is where we would put our
42:58 - content so i'm just going to type here
43:00 - table
43:01 - data
43:03 - i'm going to duplicate this three times
43:05 - let's take a look at that
43:08 - and we have table data three times in a
43:11 - single row
43:12 - now i'm going to apply a class
43:16 - so that it takes on a css style that
43:20 - i've provided
43:22 - and let's see what that looks like all
43:24 - right here we go we got our table with
43:26 - three table data elements in a single
43:30 - row now i'm going to duplicate the table
43:32 - row three times let's take a look at
43:34 - that we have three rows and each row has
43:38 - three td elements
43:40 - now i'm gonna duplicate this row one
43:43 - more time i'm gonna place it above here
43:45 - and there is another element that the
43:48 - table row can nest and that is the th
43:51 - which stands for
43:53 - table header
43:55 - i'm going to replace this with header
43:57 - and let's see what that looks like
43:59 - even though the browser applies some
44:02 - styling by default
44:04 - this styling right here comes from css
44:06 - now the table header element as well as
44:08 - the table data element can take an
44:10 - attribute
44:11 - that is called
44:12 - call
44:13 - span
44:14 - in other words span
44:16 - this number of columns
44:18 - so because i have three table data
44:21 - elements creating three columns on each
44:24 - row
44:25 - and i want one of these to span across
44:27 - all three columns all the way at the top
44:30 - and i'm just going to call this
44:33 - spanning three
44:35 - columns
44:37 - and let's take a look at that
44:39 - all right here we go we got our table
44:42 - header uh spanning three columns
44:45 - similar to that we have another
44:47 - attribute called row span and i'm going
44:49 - to apply it here
44:51 - and now
44:52 - this is going to make this able data
44:54 - element span across a rows so if i
44:57 - wanted to span through one two
45:00 - three rows
45:01 - i'm going to specify three and now let's
45:04 - see what happens
45:06 - huh
45:07 - it spanned three rows but now it pushed
45:10 - two items
45:11 - out of the three columns and that is
45:14 - because
45:15 - that row
45:16 - span taken a spot
45:20 - on this third row
45:23 - as well as on this fourth row
45:27 - so that is as if we had four columns
45:30 - on the last two rows
45:33 - and that is precisely what we're seeing
45:34 - here on the last two rows we're seeing
45:37 - one two three four
45:39 - columns and one two three four columns
45:42 - so we need to remove
45:44 - table elements from those other two
45:46 - columns for them to line up
45:53 - in this lesson we're going to learn how
45:55 - to use some of the more advanced
45:57 - elements for tables
45:59 - there are
46:00 - three other elements
46:04 - there are three other elements in tables
46:07 - that allows you to group a certain
46:12 - so we have group uh table data
46:15 - under table rows
46:17 - and we have all of the table rows under
46:21 - our table element now there are three
46:23 - other elements that we can use to
46:25 - categorize uh the rows that is t head
46:29 - t body
46:31 - and
46:32 - t
46:33 - foot
46:35 - now i'm gonna go ahead and grab this row
46:38 - and move it into my head
46:41 - and i'm going to move my content here to
46:43 - the t body
46:45 - so now it should look about the same but
46:47 - what this allows me is to control all of
46:50 - the elements that are inside the t head
46:52 - separate from the elements that are in
46:53 - the t body etc now i'm going to show you
46:56 - another element that is called call
46:59 - group it stands for column group and you
47:01 - type it as such
47:03 - call group opening and closing tag
47:06 - the call group tag specifies a group of
47:08 - one or more columns in a table
47:10 - so that we can format it and it is
47:12 - useful so that we can apply styles to
47:14 - entire columns instead of repeating the
47:17 - styles for each cell in each row all
47:19 - right now we can nest an element called
47:22 - call so that we can apply
47:24 - a style to that whole column
47:28 - and i'm going to choose background
47:31 - color let's do the blue
47:34 - violet
47:35 - color that we're using on our site and
47:38 - let's see what that looks like
47:40 - okay there we go
47:42 - and the style that we applied has been
47:43 - applied to every single cell
47:46 - in that
47:47 - column
47:48 - now what would happen if i copied this
47:53 - over
47:54 - and let's change the color here
47:58 - okay so now we have another column
48:00 - now what if we switch them around in
48:03 - order here
48:05 - it will also switch around which column
48:08 - has which color
48:09 - and another attribute that we can place
48:12 - here is the span attribute and now i'm
48:15 - going to tell it span
48:18 - across two columns
48:22 - and now we're gonna see that the yellow
48:24 - spans across
48:25 - two colors
48:27 - again i'm gonna switch these around
48:32 - and there we go now this is purple here
48:34 - yellow here actually this should be up
48:37 - right inside the entire table
48:39 - and if i remove this style here we can
48:41 - see that it affects all the rows
48:44 - but because i have this style styling
48:46 - the header it overwrites
48:48 - the default style there of the call
48:50 - group
48:51 - all right and now that we've learned
48:52 - tables i'm going to have a little
48:53 - challenge
48:55 - in this challenge i want you to make a
48:56 - section element inside of the footer
48:58 - inside the section element i want you to
49:00 - create a table with the class of styled
49:04 - and inside that table i want you to
49:05 - create three rows on the first row we're
49:08 - going to have a table header cell with a
49:10 - call span of two and you can write work
49:13 - hours in there and for the last two rows
49:16 - you're going to have a table data cell
49:18 - with the following contents inside of it
49:21 - we're going to be using these elements
49:22 - in the next lesson you should be able to
49:24 - do them either way i'll see you in the
49:27 - next lesson
49:32 - all right so now we're going to add some
49:34 - final touches to make our sites look
49:36 - more real make it come alive a little
49:38 - bit
49:39 - let's begin by changing our navigation
49:42 - as you can see it says item one three
49:44 - times that's not very realistic eric why
49:46 - did you do that let's go ahead and
49:48 - change these to
49:50 - top
49:52 - i'm gonna do quotes
49:55 - and i'm gonna do contact
49:58 - us
50:00 - i'm gonna add a fourth one that is
50:02 - called next
50:04 - page
50:06 - now the pound symbol in the reference
50:08 - stands for an id so this is trying to
50:11 - reference a blank id that does not exist
50:14 - now how about we create links to actual
50:17 - ids on our page on the main element here
50:20 - i'm going to add the id
50:22 - of
50:23 - top
50:25 - now i'm gonna go looking for a block
50:27 - quote
50:29 - and add the id
50:31 - of quote
50:35 - and for the form
50:37 - that we have on the bottom of our page
50:39 - i'm going to add the id
50:42 - of
50:43 - contact
50:46 - so now
50:48 - now that we have these ids
50:50 - i'm going to type them in the values for
50:53 - each one of these links so
50:55 - the id of top
50:57 - the id of quote
50:59 - the id of contact
51:01 - and let's try these out so i'm going to
51:04 - hit save
51:05 - top okay i'm at the top already
51:08 - let's hit quotes
51:10 - it tried to place the contact form as
51:12 - close as possible to the top
51:14 - perfect now what about this next page
51:17 - you may have noticed that i have a
51:19 - document called next.html
51:22 - here on this page
51:24 - i am simply going to reference the name
51:26 - of the file which is next dot html and
51:30 - that is because it is at the same level
51:33 - in the files directory as my index.html
51:37 - now let's say there was a folder here on
51:38 - the left that said pages and the
51:40 - next.html document was inside the pages
51:42 - folder i would have to put the folder
51:44 - name here first and then the document
51:47 - name but we can leave it like this since
51:49 - next is at the root there
51:52 - gonna hit save let's try that out
51:55 - awesome next dot html we have linked to
51:58 - a separate document in the same
51:59 - directory so you can see it has
52:01 - different contents and different colors
52:02 - because that document has different ids
52:04 - and classes and i was able to apply
52:06 - different styles awesome let's go back
52:08 - to the home page and let's try the
52:10 - sidebar here
52:11 - this
52:12 - sidebar does not yet work so let's go
52:14 - ahead and fix that so now i'm just going
52:16 - to copy this ul
52:18 - over to my
52:20 - off canvas
52:22 - sidebar
52:23 - fix the indentation
52:25 - let's try this out top quote contact us
52:28 - back to top perfect next page
52:31 - sweet
52:32 - now we're done awesome i'm so glad you
52:35 - made it this far you can pat yourself on
52:37 - the back because now you know html
52:41 - remember that if you have any questions
52:42 - you can drop them in the q a section on
52:44 - scrimba you can also interact with the
52:46 - code and i hope that with your html
52:49 - skills you can take them to the next
52:50 - level take over the world and see you in
52:52 - the next course