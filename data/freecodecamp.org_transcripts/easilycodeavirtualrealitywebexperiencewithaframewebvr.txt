00:00 - Hello this is Benji JS I'm Benji and today
00:03 - I'd like to show you that anyone who can write HTML can create a virtual reality scene using the framework A-Frame.
00:10 - First I'm going to show you A-Frame's website. It's a - frame.io, and you can see on here they have some examples.
00:16 - We're gonna be creating something similar to this so it is a 3d scene using
00:21 - Behind the scenes a frame uses three.js and if you happen to have a mobile device and a Google cardboard headset you can
00:29 - Pull up examples like this on your phone and tap this little button and you'll be able to explore the world in first-person 3d
00:36 - Okay to get started
00:37 - We are going to find an A-frame
00:39 - CDN which I just did by searching for A-frame CDN on Google.
00:43 - A CDN if you don't know is a content delivery network which is
00:47 - basically a way to make files available globally at
00:51 - high speed with high availability. Just going to click this result here and
00:57 - Scroll down and here are links to A-frame itself and also a minified version of a frame if you're not familiar with minified files
01:05 - They have been compressed such that they've lost a lot of legibility, but also they can be downloaded more quickly
01:12 - We're gonna be using just the regular a-frame file because if we do end up needing to debug inside of A-Frame itself
01:19 - It'll make it a lot easier, so I just have an empty
01:23 - index.html file here
01:24 - I'm gonna create a script tag and set the source to the path that we just copied
01:28 - So what's awesome about A-Frame as I said before is you can create a VR scene just using HTML tags?
01:34 - The first thing you need is the a scene tag and then inside of that you can
01:40 - Build other shapes like a sphere. I'm gonna back up a little bit and Hey look
01:46 - There's a sphere,  kind of hard to see because it's a white sphere and a white background, but we can just use
01:52 - HTML attributes to
01:55 - Change the sphere color to whatever we want
01:57 - So I'm just gonna make it black for now or you know you can use hex code
02:01 - Or you can use any sort of styling string that you can use with CSS
02:05 - I think you can use with a frame as well so now here
02:08 - We have a red sphere and as I promised we have created a virtual-reality seen on the web
02:15 - Using only HTML. I know not too exciting
02:20 - As it is I still think it shows that a frame is a really powerful tool
02:24 - Now if you're a JavaScript developer, and I'm sure most of you, are you're probably thinking right now
02:29 - Huh I could set those attributes
02:33 - Programmatically, and that's actually exactly what we're gonna do next so I'm gonna add another script tag
02:39 - And I'm gonna set it to a local
02:42 - Index.js file which I'm gonna create right now and the first thing. I think I'm gonna do is
02:49 - Set up a little shortcut for
02:52 - Selecting Dom elements the API will look basically like jQuery
02:56 - We're gonna use document query selector, which is the query selector that's built into JavaScript
03:02 - and we're gonna pass it a query string and
03:05 - We're going to return what that returns so now if we wanted to set the color of that
03:11 - Sphere you can just say dollar sign A-sphere.setattribute
03:16 - Color and let's say we want to make it blue we do that
03:22 - And hey look it's blue now no
03:25 - I don't want to have to adjust the camera every single time that we change a property
03:31 - I'm going to go ahead and set the XY and Z position of the sphere to a value
03:35 - I happen to know that will Center it in our camera view
03:38 - this is X Y
03:41 - Z now obviously just setting the color once programmatically isn't super exciting so what I think we should do is change the color over time
03:48 - using
03:49 - Programmatic animation the way you do animation in JavaScript is with a built-in function called requestanimationframe
03:56 - Which will accept a callback requestanimationframe?
04:00 - will
04:01 - Fire the callback when the browser's ready, and it can do that up to 60 times per second
04:06 - So we're going to create a function here to pass as our callback. We're just going to call it animate
04:11 - It's not going to be doing much
04:15 - Animating as of yet, but we'll get there and then you also want to call requestanimationframe
04:22 - Within your callback so that it keeps firing endlessly
04:26 - and again pass
04:28 - animate into requestanimationframe
04:31 - and then the last thing you need to do is call requestanimationframe and pass in your
04:37 - Animation function no whoops type that wrong, okay?
04:41 - So now it should be setting our sphere to blue 60 times a second
04:45 - Instead of setting into blue 60 times a second though
04:48 - We want to set it to a new color sixty times a second, so I'm going to create a new function called
04:54 - Shift hue it's going to take an integer
04:57 - that represents a hue as a value from 1 to 360 degrees and
05:05 - It'll just return that hue plus 1
05:08 - We're going to use modulus 360 so that the value never goes over 360
05:13 - We're gonna create a state variable for a hue started out at 0 and
05:19 - then every frame we're gonna create a new hue which is going to be we're gonna use HSL because that's
05:26 - Just an intuitive way to build colors for me the first value is the hue
05:34 - Second value is
05:36 - Saturation which I'm going to put it a hundred percent and the last value is lightness which I'm going to put it 50 percent
05:40 - and we're actually going to
05:44 - Build that string with the return value from shift Q so it'll start out at zero then the next room
05:51 - It'll be one the next frame. It'll be two so on until three sixty at which point it will set itself back to zero
06:01 - The last thing to do here is
06:04 - Set the color well, let's call this color not hue and we'll set the color to that color oh
06:14 - We also need to be setting the value of Hugh every frame, so let's do it this way shift hue hue
06:22 - And then we can pass Hue directly in here
06:26 - Hey check that out now our color is changing over time
06:30 - Another thing we might want to animate is the position so I'm going to go ahead and grab our starting position. I'll set up a
06:39 - variable to hold our position
06:47 - We will set the position each frame
06:57 - And that shouldn't change anything
06:59 - Yet, but then
07:02 - We're gonna change this position
07:05 - to be a string template and
07:09 - We're going to
07:11 - update the y-value every frame
07:15 - We're gonna make it 1.5+
07:17 - Let's say math.sign
07:20 - and
07:22 - pass in date now
07:23 - Which will give us how many milliseconds have passed since January 1st 1970 or something like that. Let's see what that does?
07:33 - It's a little fast, let's divide what we get back from date. Now by say a thousand and see what that does
07:41 - Yeah, that's pretty nice and of course. This is a VR
07:47 - Application so we can look all around it if we want we can pull it up in our Google cardboard and see it in 3d
07:52 - It would be nice if we had some sort of a grounding effect to give the sphere some context
07:59 - So let's add a plane below it, so just gonna add a plane tag here
08:05 - We can get rid of the color. We're setting on our sphere since we're setting that programmatically now
08:10 - We can do the same with the position actually we will need to set its rotation
08:15 - We'll rotate it along the x axis the reason for that is that it's it starts out standing upright
08:20 - We want it to be flat because it's gonna be the ground and let's set it to
08:26 - Black just so we can see it looks like we want to push it back
08:32 - in the Z position
08:34 - Maybe also set the width and height let's do this first so X Y
08:41 - Z
08:44 - With the 10
08:47 - Height 10 remember we're using height because it starts out like this, and we've rotated it. Let's do this
08:55 - And I'm gonna go ahead and set the color of our plane
08:59 - to match that of our sphere
09:08 - Might be fun to spin it around so let's pull out the rotation
09:20 - And i'm gonna go ahead and capture this value call it variation
09:32 - That way we can reuse it with our rotation, and we'll make this one
09:39 - 90 times variation let's see what that does whoa check it out our
09:48 - Platform is rotating
09:51 - I'm just gonna do one more thing
09:54 - One thing that I like to do is go to jiffy.com and just grab some random image
10:01 - I happen to have found one I like for this you can set the texture of
10:07 - Your 3d objects by setting the source to an image if we reload one more time
10:16 - Chris farley is really into this experiment
10:19 - So I'm hoping that after seeing this you're getting pretty excited about the possibilities
10:25 - Imagining all sorts of really cool stuff you can do with A-frame. I know I have been excited about it myself
10:31 - I've actually released kind of a funny little project where anybody can hop onto the meta verse
10:38 - set their texture to a jiff and
10:41 - Run around with other people now once again. I would love any feedback on the video
10:48 - Always happy to hear your thoughts and
10:52 - Let me know if you have any questions in the comments, and I'll be happy to answer them. Thanks and have a good one.