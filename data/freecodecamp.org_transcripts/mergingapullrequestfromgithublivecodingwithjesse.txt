00:09 - hey everybody it's
00:11 - Jesse and uh I hope you all had a great
00:13 - weekend if anybody did anything awesome
00:16 - let me know in the live chat um today
00:19 - I'm going to do something that for some
00:21 - of you is going to seem really simple uh
00:23 - but for others this may be the first
00:25 - time you've actually seen this done uh
00:28 - and I've gotten a pool
00:31 - request um from one of you uh that's
00:34 - that's been watching the streams and I
00:37 - checked it out Friday afternoon I um I
00:41 - pulled it down to my machine as a
00:43 - separate branch and checked it out and I
00:46 - only found one thing that was different
00:50 - um and it was simply because
00:53 - um I messed something up and put and and
00:58 - basically um
01:02 - it caused a class not to be applied to
01:05 - an element and it looked good like that
01:09 - and then when uh the person who
01:11 - submitted the pool request fixed it it
01:13 - changed the appearance and it actually
01:15 - changed it to what it should have been
01:17 - based on the classes that were there but
01:18 - I actually don't like it like that so
01:20 - that's the only thing that I'm really
01:22 - going to change uh for this everything
01:25 - else is awesome so um I'm going to take
01:29 - you through just you know quickly a
01:31 - quick scan of okay here's here's what's
01:34 - changed uh so you can see like where to
01:37 - go to look at if somebody submits a pool
01:40 - request for your project kind of go
01:42 - through the steps of how you would
01:44 - evaluate that and then what you would do
01:46 - to merge it uh into your your branch
01:49 - also I had some requests uh for me to
01:53 - use uh enro I don't know how it's NG r o
01:59 - k I'm just say enro if that's not how
02:01 - you pronounce it then let me know in the
02:03 - live chat uh but this is going to let
02:07 - you
02:08 - all go to the development version of the
02:12 - site so instead of waiting to see on the
02:15 - screen what I change and you only being
02:17 - able to see what I'm showing on my
02:19 - screen you can look at the site as it's
02:23 - being developed on my local machine
02:26 - so uh I'm this site's being served on
02:30 - um Port 3000 uh for the dev site so I'm
02:34 - just going to start this and now let
02:40 - me blow this up a little bit so if you
02:43 - want to go
02:44 - to I'm going to paste
02:47 - this in the
02:51 - description okay so in the live chat
02:55 - I've just pasted in the uh the URL I was
02:58 - just talking about if you go there
02:59 - you'll be able to see the site so it's
03:02 - not going to be uh wow look at that it
03:05 - looks like some people are going there
03:06 - cuz I can see uh all the requests here
03:09 - um it's not going to be that useful
03:11 - today since you know we're just merging
03:13 - in pool request and we're not making a
03:15 - lot of um like little changes that we
03:18 - want to check out but it'll definitely
03:20 - be useful in the future I'm going to
03:22 - check the live chat really quickly
03:25 - before we get started because looks like
03:27 - some people are saying hi hey everybody
03:30 - all right Thor is says he's finally on
03:32 - time so uh Thor is uh frequently watches
03:37 - uh the live uh show but uh always drops
03:40 - in a little bit later so uh awesome that
03:43 - you're here uh on
03:47 - time um Sebastian says check material
03:50 - ui.com material design with react found
03:52 - it while
03:53 - browsing
03:55 - um yeah I um I've been I've actually
03:59 - been checking it out I actually have
04:01 - open on one of my other screens right
04:02 - now a um material design react uh it's
04:06 - on of framework um I was looking at
04:09 - react uh
04:11 - MD but I've also seen material UI as
04:14 - well
04:15 - I actually was going to go with material
04:17 - UI at once but there was like one
04:19 - component that they didn't have built
04:21 - yet uh that I I needed to use and I
04:25 - didn't feel like uh building it myself
04:28 - at the time so but I definit def want to
04:30 - check that out I think that would be
04:31 - better right now I'm using materialized
04:33 - and I'm trying to make it work in in
04:35 - react um my goal was to kind of
04:40 - translate everything materialized does
04:42 - into react components but maybe it would
04:44 - just be a lot easier to use one of these
04:46 - other react uh component libraries and
04:50 - that use material design and then just
04:53 - contribute to those for the things that
04:56 - that are missing that I I
04:58 - use
05:04 - seem to have overloaded the
05:07 - site looks like yeah we're getting a lot
05:10 - of requests so is it is it working is is
05:12 - the uh the dev site thing working
05:16 - there's it too many too many people
05:21 - connecting too many oh it does say all
05:23 - right let me show you what it
05:25 - says so too many connections the rate
05:30 - limit policy of 20 connections per
05:31 - minute wow 143 connections last 60
05:37 - seconds okay
05:40 - so I have to think of something else I
05:43 - don't know what the paid plan for um
05:45 - enro
05:47 - is I'll have to check that out after
05:49 - stream if it's not a lot of money then
05:51 - maybe I'll get it I just have no idea
05:53 - how much it how much it is but yeah this
05:55 - isn't going to work for right
05:57 - now so sorry about that that but I mean
06:00 - for today it's I guess I'll just shut
06:02 - this down since it's already shutting
06:04 - down um on its own
06:09 - so yeah it's not going to be a big deal
06:11 - today uh
06:14 - but maybe I'll look it up and see either
06:17 - if there's an alternative that lets me
06:19 - have more connections or if I I could
06:20 - just pay for um for the paid version of
06:25 - enr so thanks to everybody that
06:27 - suggested that it is really cool I
06:30 - hopefully we can get it working with
06:32 - this
06:34 - volume uh Thor says it's $5 for 60
06:39 - requests per minute which is still not
06:42 - enough because we had 143 Connections in
06:44 - a minute so $12
06:47 - for10 so it's getting closer Andrew says
06:52 - dos
06:53 - successfully uh yes that was that that
06:57 - was sweet yeah you guys just definitely
06:58 - dos my Dev site
07:01 - um all right so let's get started
07:06 - um I uh I have a meeting at
07:09 - 3 so if you noticed the pattern I have a
07:12 - meeting at 3:00 every Monday so I wanted
07:15 - to keep this short which is part of the
07:17 - reason why I picked this topic to do
07:19 - right now because I don't think it'll
07:20 - take that long the other part of the
07:22 - reason is
07:23 - because if you never really did this
07:26 - before this might be good to see uh I
07:28 - know I always get nervous when I'm doing
07:32 - something you know to my code base
07:34 - bringing something in like will I mess
07:36 - it up now obviously since I'm using get
07:37 - I shouldn't be that nervous I can always
07:39 - just roll it back to a previous commit
07:42 - but uh it's still it's kind of nice to
07:45 - see something
07:46 - demonstrated uh and especially since
07:49 - I'll demonstrate it live maybe I'll make
07:51 - a mistake and that's even better because
07:53 - then you'll uh know not to do what I
07:57 - did I do really feel that way I think uh
08:00 - it's it ends up being better for for you
08:04 - most of the time if I mess things up
08:06 - because
08:07 - then I don't know you you learn you
08:10 - learn more because not only we usually
08:12 - fix it eventually so you know what to do
08:14 - but you also learn what not to do or how
08:16 - to get out of it once you mess it up
08:19 - so basically just to to recap the the
08:22 - steps that I've already
08:24 - taken I just followed these is it these
08:28 - ones yeah I follow these instructions
08:31 - right super easy so this is right on
08:33 - GitHub um I follow these instructions to
08:36 - basically do this just make another
08:39 - Branch that's this this fix okay so I
08:43 - really just kind of
08:45 - um I'll show you what the uh request was
08:48 - so this is the pool request so thanks
08:51 - to v v po I don't I'm not sure how to
08:56 - pronounce that exactly if you're
08:57 - watching oh yeah there there you
09:00 - are
09:02 - President okay so V is um in the live
09:06 - chat right now so thank you very much
09:08 - for this request I checked it out and
09:10 - it's awesome uh and I'll show you guys a
09:13 - little bit about uh what was changed
09:15 - just to show you um how great this is so
09:19 - anyway this is the uh this is what
09:20 - you'll see if somebody does a pool
09:22 - request and like I said if if this is
09:24 - like old news to you and easy stuff then
09:27 - uh sorry but uh consider sticking around
09:29 - and maybe giving some tips uh to
09:31 - everybody that's that's in the live chat
09:34 - so I'm going to show you the um the
09:37 - files that have changed and this is kind
09:38 - of the important part I think to me just
09:40 - to check things out and understand
09:42 - what's going on I love looking at these
09:44 - um the last I've gotten two pool
09:45 - requests so far and I've learned so much
09:47 - from both of them by being able to
09:49 - compare what I did with what what they
09:52 - did in the pool request and seeing how I
09:54 - can improve my own code in the
09:57 - future so uh we could see here so we
10:00 - have um now this component file this
10:03 - head. JS which we actually uh some
10:07 - people asked about I don't remember who
10:08 - it was in the live chat but I had at
10:10 - least one person maybe more ask about
10:12 - moving all of this head stuff into its
10:14 - own component and I remember I had said
10:16 - I think that would be a good good to do
10:19 - I'm just not sure how I would do it yet
10:21 - and um I just never got around to
10:23 - actually trying to figure out how to do
10:26 - it as you know it was a kind of a tight
10:28 - schedule so a lot of things that I
10:31 - thought were great ideas just got kind
10:33 - of pushed pushed back and not done uh so
10:36 - there's also this so here's one new
10:38 - component completely new and that's all
10:39 - the stuff we had in the head and um we
10:42 - needed everything in the head can
10:43 - basically be the same for every page
10:45 - except we needed uh this title tag and
10:49 - we needed the meta description right so
10:51 - now we can actually pass that in okay
10:54 - the title in the description so that's
10:57 - that's awesome like that's the part that
10:58 - was really giving me a bit of trouble
11:01 - was uh I need pass then but also there
11:04 - was some error that I was getting when I
11:06 - tried to do this and um so I just kind
11:10 - of gave up on it when I first tried and
11:13 - uh when I finally kind of realized how I
11:15 - could have fixed the error I was already
11:16 - moved on to something else and I just
11:18 - never attempted it again so the next
11:20 - component is layout. JS so this is
11:24 - totally new and this does what you would
11:27 - think it does this is the layout for the
11:29 - page so we had a lot of uh repetitious
11:32 - code uh we never want to do that right
11:34 - we always want to stay dry right uh do
11:37 - not repeat okay that's the that's the
11:39 - principle right so we don't want to
11:42 - repeat all this so you could see uh
11:45 - especially like this we we're bringing
11:47 - in that head that was just created here
11:51 - bringing that in here because we need
11:52 - that for every page we also we had this
11:55 - div for every page we always have a
11:56 - footer we always import these scripts at
11:58 - the bottom here
12:00 - so all this stuff is now taken out and
12:04 - put into its own component it makes all
12:06 - the rest of the components a little bit
12:07 - cleaner and we don't repeat ourselves so
12:10 - that's awesome uh great idea also the uh
12:14 - Google analytics code is initialized
12:16 - here as well so we don't initialize it
12:19 - everywhere and these changes are all
12:21 - spread out over a bunch of commits and
12:23 - each commit has its own message to kind
12:25 - of explain it to so I mean that's that's
12:27 - all there in the git uh the GitHub repo
12:31 - and there's a link to that in the
12:32 - description so you can check out on your
12:33 - own and kind of go more in depth if you
12:35 - want to try to understand some of this
12:37 - um this is what I was talking about at
12:39 - the beginning which actually changed how
12:42 - things are displayed I'll show you in a
12:43 - second so we had this class card action
12:47 - which if you see obviously this doesn't
12:49 - work because it needs to be class name
12:51 - card action so when I first did this I
12:54 - didn't even catch this because it didn't
12:55 - throw an error and um it looked looked
12:59 - good I liked how it looked so I never
13:03 - even thought twice about it but then
13:05 - when this class name was at and it's
13:07 - actually card action it actually changed
13:09 - the the display how this displayed now I
13:12 - don't like how it's displayed which is
13:13 - of
13:14 - course you know V is uh did this 100%
13:18 - correctly this is how it should have
13:19 - been
13:20 - done um I just should have not use this
13:24 - class on here so what I'm going to do is
13:27 - either change how this looks or just
13:29 - completely take out this this class and
13:32 - see so not sure how I'm going to do that
13:34 - yet uh let me bring
13:37 - over I thought I had it up here but I
13:40 - guess I didn't
13:42 - um oh I know actually my
13:48 - um my computer started making all kinds
13:51 - of noise like it was working really hard
13:53 - and so I closed a bunch of my windows so
13:55 - I ended up closing out the uh window for
13:57 - this so let me open it up again
14:02 - oops didn't want to do that there we
14:05 - go okay
14:07 - so this is reflecting the uh the
14:11 - completely changed version so you see
14:12 - there's this line here and then there's
14:15 - more now normally because of the way
14:17 - materialized does the Styles this
14:19 - shouldn't be inside it should be like on
14:22 - the outside of this card it shouldn't be
14:23 - inside this revealed text so that's why
14:26 - I'm getting like this should have been
14:28 - all the way across but now there's
14:29 - padding so I just kind of took an
14:31 - element and put it in a different spot
14:33 - than the framework was intending which
14:36 - is fine but I just need to account for
14:38 - that and I don't want this color so I
14:40 - need to change that color um this was
14:43 - this is actually the right color
14:45 - normally for our sites but since this
14:46 - site has a different color palette than
14:48 - all the rest of our sites I do need to
14:50 - change this and I want to take out this
14:52 - line I'll show you what it looked
14:55 - like before just in case you you haven't
14:58 - seen it see it just looked like this and
15:01 - after I looked at this I thought I I
15:02 - would kind of like to change this I
15:04 - would like to have this be all capitals
15:06 - and maybe a different color maybe a red
15:08 - color we'll see so it was really good
15:12 - that that happened because I I hadn't
15:15 - even noticed that so I'm glad and it's
15:17 - going to make me rethink the look of
15:19 - that anyway uh also upgraded next
15:26 - so that's good I think I had already
15:29 - upgraded to 2.4.2 so maybe like probably
15:34 - this was this was repo was forked when I
15:37 - was still at 4.1 and
15:39 - then at some point within the last week
15:43 - I think I did upgrade to 4.2 cuz there
15:45 - was a security upgrade that came out so
15:47 - if you're using next and you're still on
15:49 - like 4.1 or lower uh upgrade to at least
15:54 - 2.4.2 because that's an important
15:57 - security update uh I don't know enough
15:59 - about it to tell you exactly what the
16:01 - issue is but I just know that it seems
16:03 - serious from what I
16:07 - read uh so also a lot of changes here
16:10 - see I'm not going to go through all
16:11 - these because they're pretty much the
16:12 - same so Pages now we've gotten rid of
16:14 - all that stuff that's been taken out and
16:16 - put put
16:17 - into other uh components right so now we
16:22 - just have layout so we've wrapped all of
16:24 - this in layout all right which is
16:27 - awesome just so so much less uh less
16:31 - code in general uh we no longer need
16:34 - before we initialize Google analytics
16:36 - every time now we don't now we just log
16:38 - a page view
16:41 - and uh now instead of having our title
16:44 - in description here we just pass it uh
16:48 - as props
16:50 - into uh
16:53 - the layout component and
16:56 - then that gets in turn passed to the
16:59 - Head
17:00 - component all right so that's it and
17:02 - pretty much all of them I'm going to
17:03 - skip down because these are all just the
17:05 - same thing happening on every page
17:07 - pretty much uh so just cleaning
17:09 - everything
17:10 - up and it's important if somebody does
17:12 - submit a pool request to you go through
17:14 - all this stuff you know because you
17:16 - don't want to mess up your project uh
17:18 - you know because you missed something
17:20 - larger projects have like automatic
17:22 - testing that happens um and which which
17:25 - is awesome I don't have that set up I
17:28 - obviously didn't even expect to have
17:30 - anybody else submitting pool requests uh
17:32 - so I didn't even think to set it up uh
17:35 - the final thing is now the analytics has
17:38 - been split out into its own component
17:41 - and there's a new folder uh utils right
17:43 - so for utilities so now this is in its
17:46 - own component which is also a great idea
17:48 - so all
17:50 - around just making everything so much
17:53 - cleaner um more kind of separated out
17:57 - and I really like all those changes so
18:00 - again thank you so much for this and
18:02 - look at look at that
18:04 - change look how
18:08 - much you know basically all the same
18:11 - things are happening but with way less
18:14 - uh in terms of Total Lines of codes so
18:19 - really great pool request so now that
18:21 - we've kind of gone
18:23 - through uh the pool requests like how
18:26 - you how you check it out uh now we've
18:29 - pulled down using these
18:32 - instructions we've pulled that down and
18:34 - I've done that beforehand I did that
18:36 - last week uh so I'm not going to show
18:39 - how to do it I mean it's it's really
18:40 - like what five five steps literally five
18:43 - steps and it works uh
18:47 - so we're going
18:50 - to merge this Branch now into the master
18:55 - Branch but I'm going to do something I
18:58 - was reading somewhere maybe a stack
18:59 - Overflow somebody said that when they do
19:02 - merges what the way they do it is first
19:05 - they merge the so they they merge
19:08 - everything that's been done in master so
19:10 - like there's a lot of stuff that's been
19:12 - done like since this so this is not
19:15 - necessarily completely up to date uh I
19:17 - don't know maybe it is more up to date
19:19 - but there's probably some things that
19:21 - happen that that aren't in here yet so
19:24 - I'm going to merge Master into this
19:25 - Branch right test it on this branch make
19:28 - Tri everything's okay and then merge
19:30 - this back into the master branch and I
19:33 - thought that was kind of a nice idea
19:35 - maybe not always necessary for small
19:36 - changes but um in this case there were a
19:39 - lot of changes so I'm going to do it
19:41 - like that and then that way you know
19:44 - we'll be able to we'll be able to see
19:46 - and if if we mess up this Branch you
19:47 - know not really a big deal uh not as big
19:50 - of a deal as if I messed up master I
19:52 - won't even have to worry about you know
19:54 - reverting to a previous commit because
19:56 - I'll just switch back to master and
19:57 - everything will be
19:59 - uh as it should
20:00 - be so let
20:05 - me let me check the live chat really
20:07 - quick because I've been ignoring it for
20:09 - like 10
20:19 - minutes okay Thor says there's also Hub
20:23 - a CL CLI by GitHub to simplify fetching
20:27 - the pool request oh that's awesome I'll
20:29 - have to check that out so uh check that
20:32 - out if you
20:34 - um uh hub. github.com
20:38 - so I'll have to check that out after
20:40 - this
20:44 - and but rebase instead hey there guys
20:46 - please don't use merge Thor's saying
20:48 - please don't use merge Master but rebase
20:50 - instead please Andrew says agree with
20:53 - rebase or get merge rebase I see so many
20:56 - people doying it and messing up their
20:57 - history
21:00 - get rebase master on the feature branch
21:02 - and then switch to master and do merge
21:04 - feature Branch okay yeah so let
21:07 - me where did I put this I had a link and
21:10 - somebody was talking about that same
21:12 - thing about messing up their history and
21:13 - there was a way to work around it and
21:16 - that's what I used the last time I did
21:20 - this yeah so rebase Master into feature
21:23 - then merge feature into Master right
21:25 - yeah so I'll um
21:30 - I definitely want to do that in a way
21:32 - that I can keep my history up so I sorry
21:35 - I had a meeting right before this too so
21:37 - I just got here a few minutes before I
21:39 - started so otherwise I would have had
21:41 - this up already but let me um let me
21:44 - bring up the instructions that I was
21:46 - going to use I'll pull them on the
21:47 - screen and then you all in the live chat
21:50 - can let me know if this is kind of what
21:51 - you were thinking or if it's um or if
21:56 - you have something totally different in
21:57 - mind
21:59 - so I got to remember I would I would
22:02 - think that that was something that I
22:03 - would have saved probably in Google Keep
22:06 - so that's where I'm going to look
22:23 - first okay and I did find it and I did
22:26 - save it exactly where I I thought it
22:28 - would
22:30 - be I really like Google keep I don't
22:32 - know if you all use Google keep but
22:35 - um it's it's just really convenient for
22:38 - me uh I use Google for a lot of stuff I
22:41 - have an Android phone so it it works out
22:44 - uh that it syncs up
22:46 - nicely I used to use Evernote for that
22:48 - kind of thing but keep is more simple
22:52 - and I didn't ever really use the uh feat
22:55 - all the features of
22:56 - Evernote uh okay
22:59 - so here's the instructions I was going
23:00 - to use and then uh to keep
23:04 - track it looks like this is not what you
23:06 - were talking about because you guys were
23:09 - talking about rebate or rebase and this
23:12 - is just merge so I'm going to look now
23:14 - back at the live
23:26 - chat so take take a look at this on the
23:28 - screen uh hopefully let me blow it up a
23:30 - little bit more to make sure you can see
23:32 - even if you're on a small screen check
23:35 - this out for a second see if this is
23:38 - going
23:39 - to going to do it yeah okay so Andrew
23:43 - says yeah this part down here this is
23:45 - yeah this is the part that I used the
23:47 - last time I did
23:48 - it so that that will get the job done
23:53 - then awesome thank you okay so Thor is
23:58 - saying this will work but uh prefers
24:01 - rebase could you uh maybe just explain
24:05 - why you prefer rebase I think it'd be
24:07 - cool and I'd like to read it out so
24:09 - everybody that's watching um even later
24:12 - on could be uh could know kind of the
24:14 - difference I mean I'm sure everybody
24:16 - could look it up but since we're on the
24:18 - topic already of the video it'd be nice
24:19 - to to kind of give the alternate way to
24:22 - do
24:27 - this
24:30 - because Andrew saying if you made any
24:32 - commits in master it's better to
24:36 - rebase but I'm wondering I'm wondering
24:39 - why why is it better to
24:41 - rebase so I'll let that I know there's a
24:43 - delay so I'll
24:46 - um I'll kind of get on with it here and
24:50 - then I'll show how to do it and actually
24:52 - I'm going to have more things to merge
24:54 - in so it's possible that we could do I
24:57 - don't know if we'll have time today but
24:59 - it's possible we could do do it both
25:01 - ways and then see just just to
25:04 - demonstrate that might be useful uh you
25:07 - know and helpful so that you all can see
25:11 - you know the differences figure out
25:14 - what's
25:17 - easier Patrick said or Andrew says
25:19 - rebase will get all new commits from
25:22 - Master put on feature and then apply all
25:25 - new commits from feature
25:30 - okay uh Patrick says rebase allows you
25:33 - to clean up your history MK says rebase
25:36 - performs automatic checkout and checks
25:48 - okay okay cool
25:51 - so then Thor says rebase will reset your
25:54 - feature Branch to the point it's split
25:56 - for master apply all new commits from
25:59 - master and then put your commits from
26:03 - the feature uh on
26:08 - top that's cool that sounds good
26:11 - so to uh to
26:14 - explain the difference then
26:19 - so if we merge like this well like I
26:24 - said first I was going to actually merge
26:26 - Master uh into the feature branch make
26:31 - sure everything's working while I'm on
26:33 - the feature Branch then put it all back
26:35 - into master so if I did that so if I
26:39 - used rebase basically all the commits
26:43 - from Master would be in the history
26:44 - first and then all the commits
26:48 - from the uh feature Branch would come if
26:51 - I do it this way that I have up on the
26:53 - screen
26:54 - now then I'm assuming the history would
26:56 - be a different order
26:59 - Thor says it's different okay so so
27:02 - that's then the difference the main
27:04 - difference right you would just have a
27:05 - different
27:09 - history
27:12 - okay all right cool so if you're if
27:14 - you're thinking about doing this if
27:15 - you've never done this before or if
27:17 - you've done it one way but not the other
27:19 - uh then there's a difference in the
27:21 - history so I'll actually uh after I do
27:26 - this I will
27:28 - look at all the commits just to give you
27:30 - an idea of what history looks like from
27:32 - this since I've already explained based
27:34 - on what everybody's saying in the live
27:36 - chat I've already explained what it
27:37 - would look like if you did
27:40 - rebase and then we'll be able to see in
27:43 - the terminal what it would look like
27:44 - this way
27:48 - so okay so Thor Thor is saying you would
27:51 - have Master till it split then feature
27:55 - commits then new commits for master
27:58 - we're doing it this way with rebase you
28:00 - have master and then feature
28:03 - commits
28:05 - so Thor says uh he highly prefers the
28:10 - the second route to just have master and
28:12 - then all the feature commits
28:16 - after
28:18 - H okay uh so like I said I'm going to go
28:22 - I'll probably do the next Branch with
28:24 - rebase uh to demonstrate that I'm going
28:27 - to go with this one first since uh I
28:29 - said I was going to go with this one and
28:31 - I may as well just do it at this point
28:34 - um but that way you'll have a nice idea
28:37 - of which one which one to go
28:42 - with all right so for this
28:45 - Branch so you can follow along I mean
28:47 - the um I mean the URL was crazy for that
28:51 - so I don't know I want to find that uh
28:55 - that there's instructions on stack over
28:58 - overflow maybe I'll
29:00 - um I'll just post it in the uh in the
29:04 - live chat for now and uh maybe post it
29:08 - in the uh description uh in case you
29:10 - want to see those uh commands
29:19 - so first we're going to do so we are on
29:23 - the development Branch so that's
29:24 - important so make sure you're on
29:25 - development branch and I can tell here
29:28 - and actually I so somebody I saw asked a
29:30 - question let me go back so I don't miss
29:33 - it cuz it it makes sense to answer this
29:35 - question right
29:36 - now
29:40 - um I can't find it now but I know
29:43 - somebody said something about okay so uh
29:47 - Ro Rody I'm not sure it I'm not sure how
29:50 - to pronounce this it's like Ro roie
29:53 - w91 so
29:56 - um says how did you fix your your
29:58 - terminal so it looks like that so yeah
30:00 - my terminal this is not default if you
30:03 - never used a terminal before this is not
30:04 - the default look so
30:06 - basically I did this so long ago that I
30:09 - couldn't tell you exactly how I did it
30:11 - like step by step but basically you have
30:15 - like a what's called Like A bash profile
30:18 - and it's just a file all if you heard
30:21 - that in the background that was my alarm
30:23 - to tell me it's 230 so I need to get a
30:25 - move on um this
30:28 - is in your bash profile you can set the
30:32 - colors for different things and and how
30:34 - things work so that's what I edited but
30:39 - I I did the uh git and GitHub course on
30:42 - Udacity so if you go to udacity.com they
30:45 - have a ton of free courses they also
30:47 - have paid certifications you can get but
30:49 - the git and GitHub course is totally
30:52 - free in that course one of the lessons
30:54 - teaches you how to do this I actually
30:57 - just used the default example from the
30:59 - lesson I never even changed it uh
31:03 - so I'd always intended that I would
31:05 - customize the colors but I had some
31:08 - projects that I did and now I'm so used
31:10 - to these I don't really want to change
31:11 - them but you can uh I would recommend
31:14 - that that course especially if you're
31:15 - new to this it was really helpful for me
31:18 - they take you through a lot of test
31:19 - projects and have you do pool requests
31:22 - and merge things and uh really kind of
31:25 - go through everything that you would
31:26 - normally use uh use git and GitHub
31:30 - 4
31:32 - so let's
31:41 - um let's do the first step which is get
31:44 - so anyway you have to be on the feature
31:46 - Branch to start okay so get merge
31:53 - Master wait
31:56 - what
32:00 - it's already up to date no way it's
32:03 - already up to date and
32:14 - actually all right so I guess this
32:19 - was maybe this did have I I had assumed
32:22 - that this didn't have all the changes
32:25 - from uh from Master
32:33 - huh all right let's try it
32:37 - out I just I do want to check something
32:41 - quickly
32:48 - oops uh where's my oh okay I did want to
32:53 - check this just really quickly just to
32:55 - make sure CU I was almost positive that
32:57 - I had react 2.4.3 all right so I'm going
33:01 - to check that and then now when I switch
33:07 - over I want to
33:09 - check I never changed that that's
33:18 - crazy that's really crazy because I do
33:21 - remember maybe I just did it for another
33:23 - site that I was using next with I know I
33:25 - did it for one of my client sites
33:28 - maybe I just never did it so earlier in
33:31 - the um in the show I realized now that I
33:35 - said something that was
33:37 - incorrect I thought that I had updated
33:40 - next but I
33:42 - didn't and I don't know what happened if
33:46 - I I don't know I I really could have
33:48 - sworn that I did update next I thought I
33:50 - updated
33:51 - 2.4.1 or point2 I guess I did not all
33:55 - right so anyway
33:58 - basically what what has happen is uh
34:00 - this this pull
34:02 - request was actually this pull request
34:05 - was actually already completely up to
34:07 - date with everything so it was really
34:09 - almost kind of pointless for me to do
34:11 - that
34:12 - but if it wasn't completely up to date
34:15 - then that would have actually been
34:22 - important
34:23 - and so now this is going to be really
34:26 - easy
34:28 - so we're going to
34:31 - merge so we're going to get
34:34 - merge so whenever you do a merge you're
34:36 - always merging the branch you specify
34:38 - here into the branch that you're on so I
34:42 - often forget that and I always look it
34:44 - up just to be sure um so I mean don't
34:47 - feel bad if you don't remember that cuz
34:48 - I almost never remember that uh but
34:51 - we're going to to get merge and what was
34:53 - the name of that Branch
34:56 - fix do react. if you if you really
35:00 - haven't used the command line and you're
35:01 - wondering how I make that appear so
35:02 - quickly um when you're on the command
35:05 - line if you just type in like the first
35:06 - letter first two letters of what you're
35:09 - looking for and then hit tab it will try
35:12 - to
35:12 - autocomplete and um if there's like two
35:15 - files or two folders that have this at
35:18 - the beginning um it'll just stop there
35:21 - and so you'll have to type more in so
35:23 - that it can autocomplete but that's
35:24 - that'll save you a ton of time that's
35:26 - that's something I didn't really know at
35:28 - first I saw people on YouTube
35:31 - autocompleting stuff and I just wasn't
35:33 - sure how that was happening but that's
35:35 - how it happens and it's awesome all
35:37 - right so let's let's go ahead and
35:40 - merge great now in this case there are
35:42 - no conflicts okay there occasionally you
35:46 - will have a con conflict
35:50 - no um I forgot to do the step I told you
35:53 - I was going to do in this case it didn't
35:55 - matter because um
35:58 - it was already up to date basically like
36:00 - the log let me show you the
36:04 - log okay
36:08 - so you can see the log and uh who did
36:12 - these
36:19 - changes let's
36:22 - see so these changes are like actually
36:26 - in the right order
36:28 - uh you can see the dates and everything
36:31 - and yeah so right order now what what we
36:34 - had talked about before and I can't
36:36 - remember I can't believe I forgot this
36:37 - was using this instead get merg okay
36:42 - so we had talked about doing this to be
36:45 - able to make
36:46 - your keep your commit uh
36:50 - history uh basically keep everything the
36:53 - way it should
36:55 - be the reason and correct me if I'm
36:59 - wrong the reason that this actually
37:02 - worked was because there there was no
37:05 - difference really there there weren't
37:07 - any new um commits on the master branch
37:11 - that would have made it a lot more
37:13 - complicated so and like I said I'm not
37:17 - like super expert at this because I
37:18 - don't often get pool requests so correct
37:21 - me if I'm misstating that but this this
37:24 - only worked out I think because of that
37:26 - it was simple so um if you had kind of a
37:28 - more complicated situation do this or uh
37:32 - do the
37:33 - rebase um like uh like Thor and Andrew
37:38 - and a few other people in the live chat
37:40 - were suggesting so I'm going to go to
37:42 - live chat because I did ask some
37:44 - questions about what I was doing and I
37:46 - want to get I want to read out the
37:48 - answers to
37:50 - you
37:56 - um
37:59 - Andrew um did have a link he did share a
38:04 - link um of an article for how to do
38:07 - rebase but there's I'm not going to read
38:09 - it out because it has a lot of numbers
38:11 - and letters at the end
38:13 - so um Andrew if you want to put that in
38:16 - the comments for the video so people
38:18 - watching uh later on the recording can
38:20 - can go there as well that would be
38:22 - awesome I it's going to get blocked by
38:23 - the spam filter but I'll go in and
38:24 - approve it later
38:26 - on
38:48 - um Thor says get merge and then with the
38:51 - flag squash would have been a better
38:53 - option I'm not familiar with that flag
38:55 - so um if anybody familiar with the flag
38:58 - squash let me know what what that would
39:00 - do I know that I I read it I remember
39:04 - seeing that in the documentation but I
39:06 - don't I don't uh I didn't pay enough
39:08 - attention to it that I actually remember
39:09 - what it
39:14 - does Thor says normally you don't want
39:17 - all these small commits uh Andrew says
39:20 - it depends on if you want to keep commit
39:23 - history all right in this case if I
39:26 - would have done the uh
39:28 - the oops this
39:32 - command and this is uh this is basically
39:35 - Thor and Andrew are giving a lot of of
39:37 - helpful
39:39 - um a lot of helpful information here so
39:41 - I'm just kind of relaying this to you
39:43 - all um Andrew
39:45 - says if we would have done this command
39:48 - it would have created an unnecessary
39:50 - merge message okay so basically this
39:54 - would have forced a merge
39:56 - message so I would have had to have and
39:59 - I a few times it's happened that I've
40:01 - had to do a merge message on the live
40:03 - stream basically would have forced me to
40:05 - type a message explaining what's
40:06 - happening like why are you it would ask
40:08 - me why are you why is this merge
40:09 - necessary and I would explain that so um
40:13 - sometimes you want
40:14 - that
40:16 - but Andrew says like in this
40:19 - case unnecessary right there are no
40:22 - conflicts we don't you know it all just
40:24 - works um Thor says squash would have
40:26 - squashed all the commits from the
40:28 - feature Branch into one so it would have
40:30 - just been one commit instead of all of
40:33 - all of these commits that you see here
40:35 - in the
40:40 - log okay so it would have been uh Mike
40:43 - also says squash would have made things
40:45 - cleaner okay I could see the benefit of
40:47 - that I
40:50 - actually
40:53 - because at least for me because I'm not
40:57 - getting so many pool requests I kind of
40:59 - like it like this and this lets me see
41:00 - like exactly what was done for me I like
41:04 - this because I'm trying I really trying
41:06 - to learn from the pool requests that you
41:09 - all submit so I kind of like to be able
41:11 - to see all this uh and be able to go
41:15 - through step by step and see like oh
41:17 - what was changed why was it changed to
41:20 - help me understand it if that wasn't if
41:23 - I didn't need to do that I could
41:25 - definitely see the benefit of using the
41:27 - squash flag and just making it one down
41:30 - into one but for me at least at this
41:33 - point uh I like this right now
41:37 - so but this could definitely get really
41:40 - messy if you're pulling in a lot of
41:43 - different stuff
41:45 - so anyway that's so a lot of good
41:50 - info about uh get merges and um how to
41:56 - do things and I'm glad glad we did this
41:57 - because I to be honest with you there
41:59 - were so many options when I was checking
42:02 - I always look this up because I don't do
42:04 - it often enough that I remember how to
42:05 - do it and every time I look it up I
42:08 - always see so many different ways that
42:11 - people do it you know stack Overflow has
42:14 - you know different ways people are doing
42:16 - it even you know there there are a lot
42:17 - of ways to do it and I'm not always
42:19 - clear of what the benefit of doing it
42:21 - one way or another is so um so this is
42:25 - this has been really helpful for me and
42:27 - hopefully for you all and anybody
42:28 - watching this later on uh if you're not
42:30 - sure how to get out of this log when you
42:33 - do it just hit
42:35 - Q so maybe it'll save you a few few
42:38 - minutes of frustration just hit q and
42:40 - it'll get you
42:45 - out okay
42:48 - so MK Tech says you do need to be
42:51 - careful with squash if you are working
42:53 - in a
42:55 - group okay good yeah so so yeah in this
43:01 - case yeah not not in this case would it
43:04 - matter so much
43:12 - but okay
43:14 - so now that we've made this merge like
43:16 - let's just look at it right I mean uh
43:20 - you we do want to double check and make
43:22 - sure that everything we did is working
43:25 - let me see where I
43:28 - I pulled this over here we go let me
43:31 - pull this back over and we can
43:33 - see I'm going to do a refresh just to
43:37 - just to double check we do have the hot
43:38 - module reloading going on so um it
43:42 - should reload but just in case so we
43:44 - could see like okay uh we have this
43:48 - which we knew you know right off the bat
43:50 - this is this is different okay so we are
43:52 - on Master now okay before we only saw
43:55 - this on the feature branch so uh that's
43:58 - a good indication because most of the
44:01 - changes I think all of the changes were
44:03 - all kind of behind the scenes this is
44:04 - really the only change that had any
44:06 - effect on what the user would see so
44:09 - this is a good this is really the only
44:11 - visual indicator we have that the change
44:12 - is really there I mean obviously we know
44:15 - we know it worked we saw it here but
44:16 - just you know just for the for the
44:20 - visual proof confirmation here so and
44:23 - I'm just going to click around I'm going
44:24 - to open up uh Dev tools like I already
44:27 - did this on the on the other Branch uh
44:31 - beforehand so I mean I'm pretty
44:34 - confident that everything's going to be
44:35 - all right uh and it's all going to work
44:38 - out but just for the sake of
44:40 - demonstration I'll click around just so
44:42 - we can
44:46 - see see what's going on
44:51 - here right
44:54 - and everything seems to be working
44:59 - working this this violation here this is
45:02 - because of um this video so I don't know
45:05 - if I can do anything about that so you
45:06 - can see this is the the code for this
45:08 - YouTube ined so if anybody knows how to
45:12 - do anything about that let me know as
45:14 - far as I know I'm I'm pretty much stuck
45:15 - with
45:17 - this but may maybe there's a way to use
45:19 - video in here so that that I just don't
45:22 - know about uh just trying to click
45:25 - around just making sure this works
45:27 - awesome all right and
45:29 - that's that's pretty much it so we made
45:32 - kind of um a
45:35 - major I can also show you the code this
45:37 - would be the last test so now we have
45:39 - the right version of next let's go into
45:42 - like one of our pages so if you can look
45:44 - up
45:45 - here uh we have layout everything's in
45:48 - layout we've gotten rid of all that that
45:51 - head stuff that we had before we have
45:54 - our new folder on the side I know this
45:56 - is small here on the side I I don't
45:58 - really know how to make this stuff
45:59 - bigger but uh we have our new uh utils
46:03 - folder we have some more in components
46:06 - we have some extra components here that
46:08 - we didn't have before so um yeah so
46:12 - everything's in there everything's
46:13 - working we're getting no error messages
46:15 - so successfully um I don't think I had a
46:20 - Trello thing so I have nothing to move
46:21 - over into done because I didn't even
46:23 - make that a task but
46:25 - um yeah so everything worked out and
46:30 - we're on track to have an episode that
46:32 - is less than one hour which was was the
46:35 - goal that we established last week and
46:37 - we couldn't quite achieve that goal uh
46:41 - so awesome that we did it this
46:45 - week uh so good way to start the week
46:48 - here um as always I'm going to do some
46:51 - question and answer right now so want to
46:55 - keep it kind of short so like 5 minutes
46:58 - you know 10 minutes max so I can get
47:01 - over to my meeting at
47:04 - 3 uh also just want to let you know if
47:06 - you're following along with the uh with
47:08 - the project um you can see like pretty
47:11 - much nothing has gotten done since
47:12 - Friday so sorry sorry about that uh
47:16 - today was filled with like meetings and
47:19 - just answering emails I don't know how
47:20 - it is for for you all where you work but
47:23 - it seems like Monday morning is just
47:25 - crazy for email you know you get you got
47:27 - all these emails built up people sending
47:29 - stuff on the weekend and it just took me
47:32 - forever to get through them all um some
47:36 - of them really really important though
47:37 - and then I had a meeting before this so
47:40 - uh actually going to have I think two
47:41 - student workers uh this Summer that are
47:44 - going to work uh remotely for me on some
47:47 - of these sites so that's going to be
47:49 - that's going to be pretty exciting I
47:51 - think it'll be good they're computer
47:52 - science students here so hopefully
47:54 - they'll get some good experience and be
47:55 - able to put some stuff on the resume and
47:57 - GitHub
47:58 - profile uh all right so now I'm going to
48:01 - take a look at the live chat uh if you
48:04 - have a question go ahead and throw it
48:05 - out there now um or put it in the
48:08 - comments for the video or you can direct
48:10 - message me on
48:19 - Twitter let's
48:22 - see oh good good look Seb so Sebastian
48:30 - i' had forgotten to do
48:34 - this and I who was it already up to
48:38 - date
48:41 - no wait a
48:48 - second any sorry Sebastian said uh
48:52 - install the last update of next now that
48:54 - you've updated your package Json so
48:58 - yeah that's really weird uh I should
49:01 - have if anybody knows what's going on
49:03 - with this let me know but I should have
49:05 - had to have reinstalled to the you the
49:08 - next version of next here uh so that
49:11 - changed
49:13 - so what should have happened is when I
49:17 - typed
49:18 - in uh yarn it it should
49:22 - have installed the new
49:25 - updates
49:27 - so I'm a little bit confused by that
49:30 - um I don't know if there's a way if I
49:34 - could go into maybe like the node
49:36 - modules to
49:39 - verify what the version
49:48 - is where am I at okay see if I can find
49:51 - next all right so next is in
49:55 - here
50:01 - I'm trying to find somewhere where it
50:03 - give me
50:05 - a version
50:12 - number yeah version 2.4.3 okay so yeah
50:16 - so this is in fact 2.4.3 so I don't know
50:20 - what happened or why that worked
50:24 - um but it worked
50:28 - but anyway Sebastian good thought I mean
50:30 - after you said that I immediately
50:31 - thought like yeah I do need to do that
50:33 - so for some reason I didn't need to do
50:36 - that but anyway whenever you are doing
50:38 - like a um a get pool or a merge or
50:41 - anything like that it is a good idea to
50:42 - just type in like npm install or yarn if
50:46 - you're using yarn just to make sure I I
50:48 - don't know how many times it's happened
50:50 - to me that I forgotten to do that and
50:51 - I'm getting weird errors and I Wast a
50:53 - lot of time trying to figure out the
50:54 - error when the problem was just that I
50:56 - didn't pull in the package usually it's
50:58 - not necessarily an update but like I've
51:00 - actually added a package somewhere on
51:02 - another computer and then just forgotten
51:06 - so anyway good uh good thought though
51:10 - Sebastian uh v um I I assume that's how
51:14 - you pronounce your name let me know if
51:16 - it's not and I will I will correct
51:18 - myself uh so V ask why are you not using
51:21 - any
51:23 - linter
51:25 - um basically I just
51:28 - didn't I haven't taken the time to
51:31 - install a linter and and use it so I
51:34 - know uh I think I I explained some of
51:37 - this before but there are things that I
51:39 - probably should be doing that I just
51:41 - never did for two reasons one I work by
51:44 - myself so I usually don't have to worry
51:46 - about can my teammates read this um so
51:51 - I've let myself get a little bit sloppy
51:53 - at times uh in terms of my style my
51:57 - coding style my documentation like
51:59 - things like that um or even just like
52:03 - testing uh in terms of like an actual
52:06 - like test Suite like using like mocha or
52:08 - chai or something like that um also like
52:13 - the second reason just of the the
52:14 - busyness and the pace of the projects
52:17 - here uh is
52:19 - just sometimes it stops me from learning
52:21 - things and and doing things that I know
52:23 - I should be doing um because because
52:26 - it's hard to explain to other people
52:28 - like the people above me uh that don't
52:32 - really know the importance of those
52:34 - things why I should push the date back
52:37 - of something because I need to set this
52:39 - stuff up uh because so
52:43 - anyway uh vet what would you recommend
52:46 - for a linter that I I should use uh
52:50 - because if you have a recommendation I'm
52:52 - I I definitely want to try it
52:54 - out uh part of the reason too I don't
52:57 - Implement stuff like that sometimes it's
52:59 - just I'm not sure which one to go with
53:01 - and I'm just like instead of just trying
53:04 - one I just research and research and
53:08 - never make the decision one way or
53:11 - another uh Andrew says I have an
53:14 - exciting app
53:15 - idea uh to
53:17 - create project folder and P
53:23 - project wait
53:25 - what
53:39 - all right I'm not sure Andrew I'm not
53:42 - sure what that um comment about I have
53:45 - an exciting app idea create project
53:46 - folder I'm not sure what that was in
53:48 - reference to so let me know I'm I'm
53:50 - missing something I
53:52 - think uh I'm missing some joke here
53:55 - obviously but
53:57 - um Andrew says uh yarn or um the new
53:59 - update was installed when I typed yarn
54:01 - in the feature
54:03 - Branch that's what
54:05 - I obviously I thought that in the
54:07 - feature Branch but because node modules
54:09 - get ignored I wasn't sure if it would
54:11 - transfer over so that's why I thought I
54:13 - would have to do it again evidently it
54:15 - did transfer over and
54:17 - um
54:21 - so I guess that's why it
54:25 - works
54:29 - okay so we have a suggestion to use uh
54:31 - es
54:36 - lent and to use a plugin for the text
54:39 - edor okay yeah I I'll try that and would
54:42 - we prefer
54:45 - a would prefer V says prefer a uh uh
54:50 - pool request with linter and prettier
54:53 - set up
54:55 - okay
55:01 - yeah and Andrew says it was a joke I I
55:05 - got that it was a joke I just didn't get
55:06 - the joke exactly and I wasn't sure what
55:10 - um like what prompted like if I had
55:13 - missed some conversation earlier that
55:15 - that joke was in response to but um in
55:18 - case you're all watching this is what I
55:20 - was talking about Andrew says one have
55:23 - an exciting app idea two create project
55:25 - folder three include
55:28 - webpack um 47 so step 47 lose all
55:32 - passion for project and is it supposed
55:35 - to be 4 or 47 I'm not sure anyway lose
55:37 - all passion for project and give up go
55:40 - to one all right I get it now the thing
55:42 - that threw me is for some reason I
55:44 - thought it said I have an exciting app
55:46 - idea so I was expecting the next thing
55:48 - to be your idea I but it didn't say that
55:51 - it's it just said have an exciting app
55:53 - idea so sorry about that it was nothing
55:56 - wrong with with what how Andrew phrased
55:58 - that or anything it was entirely my
56:00 - misreading of that that ruined it for me
56:03 - uh so yeah the joke is about how
56:07 - difficult webpack is which is why I like
56:09 - to use nextjs because I don't have to
56:11 - worry about
56:12 - webpack and
56:15 - um it kind of handles all of that stuff
56:18 - for
56:20 - me okay so van says I use standard JS
56:25 - and nextjs all also uses it but if you
56:27 - prefer semicolons then we can use uh EXO
56:31 - or ES lent actually I don't prefer
56:33 - semicolons it's been like so ingrained
56:35 - in me that you're supposed to use
56:37 - semicolons like I mean I don't know if
56:39 - it's just my experience but for most
56:42 - other things in JavaScript it was always
56:45 - like use a semicolon you know like all
56:47 - when I was first learning JavaScript
56:49 - everything said use a semicolon so now I
56:52 - catch my if I really think about it I
56:55 - don't use them but if I'm just kind of
56:57 - not thinking and I'm typing away and I
57:00 - always put in the semicolons
57:02 - so the I think I'll go with standard JS
57:05 - because it'll probably be good for me
57:07 - and help me to quit using semicolons
57:09 - when I don't need
57:13 - to oops and it is almost 3:00 so uh like
57:17 - I said if you have any other questions
57:19 - uh put them up on Twitter or in the
57:22 - comments to this video thank you for all
57:24 - the help and hopefully
57:26 - you know someone out there had you know
57:28 - had a good uh educational experience
57:31 - from this and uh V thanks again for this
57:33 - amazing pool request I really appreciate
57:36 - it and uh I'll see you all uh tomorrow
57:41 - same time 2 p.m
57:47 - Eastern