00:00 - learn how to build a fully functional
00:01 - Google Drive clone with larvel and
00:04 - vue.js you'll learn how to implement
00:07 - functionality such as uploading files
00:09 - sharing files searching for files and
00:12 - more and at the end you will learn how
00:14 - to deploy to a custom domain on a
00:16 - production ready environment zura the
00:19 - kolic developed this course he has over
00:22 - 11 years of experience as a develper and
00:24 - has created many popular courses hello
00:28 - everyone in this video we're going to
00:29 - build fully functional file manager type
00:31 - of application with laral and inera with
00:34 - vue.js the application will be very
00:36 - similar to Google Drive we're going to
00:38 - implement some basic functionalities
00:40 - such as creating unlimited depth folders
00:43 - uploading files and uploading folders
00:46 - searching for the files or folders but
00:49 - we're going to also Implement some
00:50 - Advanced functionality such as sharing
00:53 - files and folders to another users in
00:56 - this application by email we're going to
00:58 - implement fully functional trash system
01:00 - you can easily move your files into
01:02 - trash and recover them later or delete
01:05 - them permanently we're going to also
01:07 - Implement favorite files page you can
01:10 - add your desired files into start
01:13 - section and then you can easily find
01:15 - them in the future at the end of the
01:17 - video we're going to deploy our project
01:19 - in production ready environment with a
01:21 - custom domain and we're going to also
01:23 - connect to awss 3 packet and Implement
01:27 - uploading files into a WS S3 bucket I'm
01:31 - going to show you how you can set up
01:33 - your AWS account how you can create a
01:36 - role in policy how you can get your
01:38 - access token and key and configure your
01:41 - Lal application to use the access token
01:43 - and key for uploading files I have been
01:46 - working on this project for more than
01:48 - three months you can check the entire
01:49 - source code on my GitHub and you can
01:51 - even find that the initial comet is made
01:54 - more than three months ago if you find
01:57 - this video helpful please give it a like
02:00 - who am I my name is zura last 11 plus
02:03 - years I have been working as a
02:05 - professional web developer and have
02:07 - built dozens of projects around PHP and
02:10 - laravel if you're interested more
02:12 - laravel PHP and JavaScript related
02:15 - content you can check my YouTube channel
02:17 - the Cod holic or my website the cool.com
02:21 - where you can find some premium courses
02:23 - such as building and e-commerce website
02:25 - withal VJs and tyon CSS before we jump I
02:29 - would like to say big thanks to free
02:31 - code camp for doing such an amazing job
02:34 - and providing free educational content
02:36 - for everyone all right no further Ado
02:39 - let's start building our project before
02:42 - we start building the project let's have
02:44 - a look at the quick demo the entire
02:47 - application is running with a larel sale
02:51 - for local development environment so we
02:53 - have this email sending service so
02:55 - whenever you open the website you see
02:57 - login and register buttons right there
02:59 - there as soon as you register you will
03:01 - receive an email in this email sending
03:04 - service mail pit you whenever you
03:06 - confirm your email then you can log in
03:08 - or you already will be logged in I'm
03:11 - going to click log in and when you log
03:13 - in you will see the following screen on
03:15 - the left side we see different types of
03:17 - pages my files shared with me shared by
03:20 - me or trash and this is the main area
03:23 - where we see all the files which are in
03:25 - that specific folder in this case my
03:28 - files and we have uh infinite scroll
03:32 - implemented right here so if I start
03:34 - scrolling down below more files and more
03:37 - content is simply loaded we have
03:39 - possibility to search our files or
03:41 - folders through this main S search area
03:45 - we also have possibility to uh search
03:47 - only files which I have added in my
03:50 - favorite section at the moment I don't
03:52 - have anything but if I add two files in
03:55 - the favorite section I can click on
03:57 - these I see only only those two files
04:00 - and we have possibility to download
04:02 - files as well if you select multiple
04:04 - files let's select this and this and
04:07 - when you click download it's going to
04:09 - create zip out of these multiple files
04:12 - and just download that if you select
04:14 - only one file and click on download it's
04:17 - going to start downloading those this
04:19 - only file okay obviously we have
04:22 - possibility to delete um selected files
04:26 - and I'm going to right now delete these
04:28 - two files okay selected files have been
04:30 - deleted and we can see those files under
04:32 - trash as you see right here we have
04:34 - possibility to select everything in the
04:37 - trash and click delete forever or we can
04:39 - click restore which will obviously
04:41 - restore the just deleted files if you go
04:44 - in my file section we have also
04:46 - possibility to create new folder and
04:49 - upload files and upload folder okay I'm
04:52 - going to upload um single folder right
04:54 - now let's upload this e-commerce
04:57 - products upload
04:59 - okay and six files have been uploaded so
05:02 - whenever you upload file or folder
05:04 - there's a background process running at
05:07 - the very same time okay so we
05:09 - immediately see the feedback that the
05:11 - file and the folder was successfully
05:13 - uploaded but the background job starts
05:16 - working which uploads those files into
05:19 - awss 3 okay so we save all files into
05:23 - awss 3 and so that we don't want the
05:27 - upload process first from the browser to
05:30 - the server and from the server to the
05:32 - awss 3 it it will take much more time so
05:35 - we immediately show the user hey we took
05:37 - your file and it has been uploaded and
05:40 - then simply in the background we upload
05:42 - that on awss 3 okay so we have
05:45 - possibility to obviously share the files
05:48 - and folders to another user so when you
05:50 - click on share you have to enter the
05:52 - email address of another user in the
05:55 - same system and as soon as you do this
05:57 - and click on submit the folder will be
06:00 - shared and then the user will be able to
06:02 - see that under shared with me section
06:06 - and you will be able to see this under
06:08 - shared by me section because that's
06:11 - going to be the file you shared let me
06:13 - try to share this to a user if I
06:16 - remember correctly I have this in the
06:19 - system marry example.com I'm going to
06:21 - click on submit selected files will be
06:23 - shared to Mar example.com if the email
06:26 - exists in the system so if the email
06:29 - doesn't exist this obviously it will not
06:31 - be shared okay that's the main thing but
06:33 - we don't get um the error if the email
06:37 - doesn't exist if I go in the shared by
06:39 - me I don't see that probably because the
06:42 - email does not exist in the system but
06:45 - believe me this is the functionality
06:46 - that
06:48 - exists okay so here I just registered
06:51 - with another user Mary and I got the
06:53 - email in the mail pit and I'm going to
06:55 - click this verify email address and I am
06:58 - authorized now in my Incognito browser
07:00 - with user Mary okay so I can just
07:03 - collapse this and now try to share these
07:05 - screenshots to Mary at example.com I'm
07:11 - going to click on submit okay I get the
07:13 - same notification and if I go in the
07:15 - shared by me now I see that screenshots
07:18 - actually is shared by me to someone else
07:22 - and if I check this Incognito browser I
07:25 - just reload the page under shared with
07:28 - me section I see screen screenshots and
07:30 - I can just click on the screenshots and
07:33 - just download it if I want um or or
07:37 - actually I don't have any other actions
07:39 - except that download so if something was
07:41 - shared to me I can easily download that
07:44 - and when you share file or folder to
07:46 - Mary Mary actually gets an email that
07:50 - files hello Mary user Zur shared the
07:53 - following files to you obviously the
07:54 - template doesn't look very nice but the
07:58 - main thing is that the function
07:59 - functionality is there and we send the
08:01 - email when the file or folder is shared
08:04 - to Mary the functionality is basically
08:07 - that but believe me there are many many
08:10 - things to learn while building this
08:13 - application now let's start working on
08:15 - the project and the very first thing is
08:18 - to install a laral project I'm going to
08:20 - open the laral documentation and go to
08:23 - the installation section and I'm going
08:25 - to click getting started on Windows this
08:28 - particular approach basically requires
08:30 - Docker in wsl2 make sure you have Docker
08:33 - in wsl2 installed on your operating
08:36 - system Windows in this case if you are
08:38 - on Linux or Mac you don't need wsl2 you
08:41 - just need Docker now if you scroll down
08:44 - below we have the following command curl
08:46 - you need curl command also in your
08:49 - terminal I'm going to open now my Ubuntu
08:54 - which I actually have inside my Windows
08:57 - operating system and right here I'm
08:59 - going to copy and paste however
09:02 - generally I put all my projects under
09:05 - www folder inside my ubun operating
09:09 - system so I'm going to paste this
09:11 - comment right here and I'm going to only
09:13 - change the application name in this case
09:16 - the example app is not good for me I'm
09:18 - going to call this file- manager so I'm
09:22 - going to hit enter that's going to take
09:24 - some time it's going to first download
09:26 - the lateral project then run all its
09:29 - depend Tendencies then it's going to
09:31 - spin up the docker images so download
09:34 - those images and start the containers as
09:36 - well if you are running this very first
09:38 - time in your um terminal uh if you are
09:42 - running this project very first time
09:44 - using Docker in your terminal it's going
09:46 - to take some
09:49 - time after waiting for a couple of
09:51 - minutes here it asks me my Ubuntu
09:54 - operating system pseudo root password
09:58 - I'm going to provide the
10:04 - password and here it goes so it actually
10:08 - downloaded the project and run then
10:10 - downloaded all the docker images and uh
10:14 - then we have the project actually set up
10:17 - and ready we just need to go inside file
10:20 - manager folder which we just named and
10:23 - then from inside I'm going to execute
10:25 - vendor Bean sale app if you're new to
10:29 - Docker there's no need to learn like
10:32 - Basics or anything about Docker we just
10:34 - need to start the application using
10:36 - Docker and stop it whenever we don't
10:38 - need and we're going to also go inside
10:41 - the containers and run Artisan commands
10:44 - from inside the container okay I can
10:47 - execute this vendor Bean sale app but
10:49 - I'm going to actually open the project
10:51 - right now in PHP stor and continue from
10:55 - there first I need to open the file
10:58 - explorer so I'm going to just type
11:01 - explorer. XA and specify the dot as a
11:04 - current directory then it opens the
11:07 - following directory uh this is the file
11:10 - manager which we're going to open I'm
11:12 - going to right click on this file
11:13 - manager and open folder as PHP storm
11:17 - project it's going to take few seconds
11:19 - until this is
11:21 - opened it will ask you if you want to
11:23 - trust this uh folder I'm going to trust
11:26 - project
11:29 - and here it is
11:32 - opening all right now let's open
11:38 - Terminal and from the terminal of PHP
11:41 - storm I'm going to execute the command
11:43 - to start the project and also go inside
11:47 - the container if you are not using PHP
11:49 - torm and you using like a vs code for
11:51 - example it's going to be pretty
11:53 - straightforward we code obviously has
11:55 - its integrated terminal and you can
11:57 - execute the commands from from there all
12:00 - right just make sure from the vs code
12:02 - you switch to WSL terminal because any
12:05 - comma needs to be executed from inside
12:07 - the Ubuntu right now I am inside the
12:10 - Ubuntu operating system and the terminal
12:12 - basically supports any command that
12:15 - Ubuntu operating system terminal
12:17 - supports all right now let's execute
12:20 - vendor Bean sale app and I'm want to
12:23 - specify also DHD to start the processes
12:26 - and spin up all the containers in a
12:28 - detached mode let's hit the enter it's
12:32 - going to take a few seconds if you're
12:33 - running this very first time all right
12:35 - the containers are created and they are
12:42 - starting and they are started now we
12:45 - need to go inside the container there
12:47 - are a couple of containers I'm going to
12:49 - just type Docker PS and hit the enter we
12:52 - have the following containers we have
12:55 - the main container which is for the
12:56 - application we have some selenium for
12:58 - testing
12:59 - we have this maele search container
13:01 - MySQL obviously we have also Ries and we
13:05 - have this mail pit which is for fake
13:08 - mail sending we need to go inside the
13:11 - app container and execute any commments
13:13 - from there so I'm going to type vender
13:16 - being sale
13:21 - bash now I am inside the main container
13:25 - and from here I can execute any Artisan
13:28 - commments like like PHP artisan
13:32 - d-el and as we see Artisan is available
13:35 - and it's right there and anytime you
13:37 - want to execute your Artisan command you
13:40 - should do it from here now let's run mpm
13:44 - run Dev and let's also open
13:49 - browser by default
13:51 - the we need to check this on Local Host
13:54 - because we just started the project and
13:57 - it's on Local Host when we run mpm run
14:00 - there we don't see anything because we
14:02 - haven't run mpm install but the
14:04 - application is right there let me zoom
14:06 - out slightly and this is the L welcome
14:09 - page and now let's execute mpm
14:15 - install Okay npm install was completed
14:18 - and now we are going to install laravel
14:21 - Breeze to install laral Breeze let's
14:24 - open the documentation of laral Breeze
14:27 - and if we scroll down below we're going
14:29 - find the installation instructions first
14:31 - we need to require it as a Dev
14:33 - dependency in the project so I'm going
14:35 - to copy this command and paste it right
14:38 - here until this is installed let's have
14:40 - a look what we need to do we need to
14:42 - execute Breeze install command to
14:45 - install all the necessary U like files
14:48 - and assets then we're going to execute
14:51 - uh Artisan mic rate and mpm install and
14:53 - npm run Dev all right let's follow it
14:56 - step by step and I'm going to copy this
14:58 - PHP IGN brief Breeze install Breeze was
15:01 - actually already installed using
15:04 - composer now let's execute PHP RM Bree
15:07 - install here it goes it asks which stack
15:11 - we want to install and in this case we
15:13 - are going to use a view JS so I'm going
15:16 - to choose um number two right here would
15:20 - you like to install Dark mode support
15:22 - I'm going to type no in this case would
15:24 - do like type typescript support no in
15:27 - this case as well you like to install
15:29 - inertia server side rendering no in this
15:33 - case as
15:34 - well and no here as well all right now
15:38 - it's U installing all the necessary
15:40 - packages like inertia and every package
15:44 - that is dependency of the inertia
15:46 - actually and it's also automatically
15:48 - running mpm install and mpm run T so
15:52 - whenever this command finishes working
15:55 - we will have a vue.js inertia configured
15:58 - and working in our application mpm run
16:01 - um Dev will be also running there
16:05 - actually mpm uh run build was run and we
16:08 - have those build files but if we want to
16:11 - start the development mode we need to
16:14 - execute mpm run de let's check this
16:16 - first in the browser so if we reload the
16:19 - page on the right side we see login and
16:21 - register if we click on register or
16:24 - login on anything else we see that the
16:27 - URL uh changes is but the full reload
16:30 - doesn't happen because that everything
16:32 - happens through vue.js right now all
16:36 - right now we have this in a built mode
16:38 - but because we're going to actively work
16:40 - in modify layout we need development
16:43 - mode so mpm run Dev hit the enter all
16:48 - right here we have that up and running
16:50 - now if I reload the page something is
16:53 - broken that is kind of issue when you
16:55 - run your uh mpm run Dev command with uh
17:00 - Docker so it doesn't see basically the
17:04 - following um following uh
17:08 - address so in this case we're going to
17:10 - open Vite config file right here and
17:15 - maybe before plugins we need to add
17:19 - server
17:22 - HMR host to be a local
17:26 - host okay so we configure that the hot
17:30 - module replacement host is a local host
17:33 - we save this and I believe it's going to
17:35 - be automatically reloaded if I just
17:38 - reload the page I see login page and now
17:41 - our development server is up and running
17:44 - we can go on the homepage and register
17:47 - and it's there it's
17:48 - good now we need to execute myig great
17:51 - command PHP Artis and migrate to run all
17:54 - the necessary migrations so I'm going to
17:57 - stop the vi server and execute PHP
18:00 - Artisan
18:03 - migrate okay so the migrations have been
18:06 - applied however I'm going to make small
18:08 - change in the example we see that the DB
18:12 - connection is my SQL and the host is
18:16 - 1271 in thein file which was
18:19 - automatically created by the command crl
18:21 - command we have the DB host to be MySQL
18:25 - so that happens because we are running
18:28 - the application from inside the docker
18:30 - container and the other service to
18:33 - communicate as a database is called
18:36 - MySQL so we just need to change it's a
18:38 - good um it's going to be good to just
18:40 - change this into MySQL because if you
18:43 - are going to install this project at a
18:45 - later stage and
18:46 - copy example
18:49 - into you need to have MySQL right there
18:52 - as well okay just small thing but it's
18:55 - just good to make a
18:57 - change now we because we already have
18:59 - Bree installed we can actually already
19:02 - register on the website and the only
19:05 - thing I'm going to add is email
19:07 - verification at the moment the
19:09 - registration doesn't require email
19:11 - verification as soon as the user is
19:13 - registered U he she will be able to log
19:16 - in immediately but I'm going to open
19:19 - user.php
19:22 - this this uh the model app modules
19:26 - user.php and I'm going to Implement an
19:30 - interface called must verify email all
19:34 - right and I save this and right here in
19:37 - this console we see errors that happens
19:39 - because the Vite server is not running
19:41 - so we need to execute mpm run Dev
19:45 - command and now we just reload the page
19:47 - and we don't see any errors and let's
19:49 - now try to
19:51 - register I'm going to type my
19:54 - name
19:56 - email some password
19:59 - and hit the enter all right now we see
20:02 - right here the following message thanks
20:04 - for signing up before getting started
20:06 - could you please verify your email
20:07 - address how to check where the email is
20:11 - received by default because we are
20:13 - running and that's the beauty of the
20:14 - docker and that's why I love to setting
20:16 - up my projects through Docker we have a
20:19 - couple of services and we can see the
20:21 - services under Docker compos yml so this
20:24 - is the main application larel test we
20:26 - have the MySQL server service and this
20:28 - is exact same name what we have inside
20:32 - to connect so if this would be called
20:35 - like a test we would write test right
20:39 - here as well okay I hope this makes
20:42 - sense all right and we have r as well
20:44 - which we don't care at this moment we
20:46 - have mail search we have mail pit and
20:49 - this mail pit is exactly the fake mail
20:54 - client soal it so that we can check all
20:57 - sent mails right here in this mail pit
21:00 - and in the file as well if we scroll
21:03 - down below we see this mail mailer is
21:05 - MTP host is mail pit Port is 1025 and so
21:09 - on so the rest of the things are not
21:11 - actually necessary okay here we have two
21:15 - main ports exposed 1025 this is just for
21:18 - email sending and 8025 this is the
21:21 - client where we can check all the
21:25 - received emails now in the browser I'm
21:28 - going to type Local Host port
21:32 - at25 and we see our nice looking mail
21:36 - client for fake email sending as you can
21:39 - see right here the receiver is zura
21:42 - example.com so basically Zur example.com
21:45 - received the following email and when we
21:48 - click on this button our account is
21:51 - activated and now I am logged in and I
21:54 - can reload this page and I'm logged in
21:56 - right here as well so I can close this
21:58 - and and from now on I will have this
22:00 - mail client open so whenever I register
22:02 - or password reset I can immediately see
22:05 - received emails right here I'm going to
22:07 - have this application right here and
22:10 - always documentation open because I will
22:13 - be constantly checking things in the
22:15 - documentation before we start generating
22:17 - modules and migrations let's talk about
22:20 - the
22:21 - schema uh right here we're going to have
22:23 - three the most important tables files
22:26 - file shares and start file files
22:29 - obviously the schema can increase and
22:31 - you can add much more features but for
22:34 - the basic functionality like creating
22:36 - files and sharing and making as a
22:39 - favorite files this will be enough and
22:42 - let's start with the most important one
22:44 - files right there we have the name and
22:46 - path we have left right and pent ID left
22:50 - right and pent ID is um necessary for
22:54 - having a like a nesty data we're going
22:56 - to talk more about this left write in
22:59 - parent ID in just a few minutes okay we
23:02 - have is folder as well we have um this
23:05 - is folder identifies whether the current
23:08 - file is a folder or just a file we have
23:10 - M type we have size created it updated
23:14 - uh add created by updated by very
23:16 - obvious we have also deleted at and
23:18 - deleted by we're going to also keep
23:20 - track uh we're going to have soft delete
23:24 - so that the file if it is deleted or
23:26 - folder we're going to still keep that
23:29 - um in the database so the file shares
23:32 - right here indicates that this
23:34 - particular file was shared to that
23:38 - particular user we might also add uh in
23:42 - the future like a permission whether the
23:45 - file was shared through read permission
23:47 - only or read and write just the table is
23:50 - right there and we can add few more cols
23:52 - if we need that and we have start files
23:54 - that this particular file was starred by
23:58 - that user all right and we have also the
24:01 - time when that happened so that's just
24:03 - basic now let's talk about this left and
24:05 - right in P ID I'm going to open Now
24:09 - browser and type nested
24:12 - set nested set model so that's a very
24:16 - common data structure mechanism to save
24:20 - a hierarchical
24:22 - data let's click on the very first link
24:25 - from the Wikipedia and let me open the
24:27 - following in image right let's open this
24:31 - on a full screen so nested set modu the
24:34 - idea is the following that the perent
24:37 - every record in this nested set model
24:39 - has left and right and the parent
24:43 - element in this hierarchical
24:46 - data the left coordinate of this parent
24:50 - element is always less than any of its
24:53 - children left and the right of the
24:57 - parent is always more than greater than
25:00 - any of its children right so in this
25:03 - case let's imagine that we have this
25:05 - clothing category and inside there we
25:08 - have men's category and women's category
25:11 - and inside men's category we have suits
25:14 - and inside women's we have dresses and
25:17 - inside men's suits we have slacks and
25:20 - jackets and inside women dresses we have
25:22 - everything and so you get the idea and
25:24 - now this clothing has left one and right
25:30 - 22 men men's category has left two and
25:35 - right nine women has left 10 and right
25:41 - 21 so that gives you not only like a
25:46 - structure to save hierarchical data but
25:49 - it gives you also proper ordering like
25:52 - you can order this by left coordinate
25:56 - and you can simply get in a proper order
25:59 - for example we want the men's to be
26:01 - always before women in this whatever
26:05 - like list of the subcategories so if the
26:09 - men's has like two here then it is
26:12 - before women's however if we change this
26:17 - from like a two would be here and
26:20 - instead of 21 this would be nine then
26:23 - the women's will be in front of so we
26:26 - have this numbering from one to whatever
26:28 - is the largest 22 in this case and just
26:31 - like this we're going to save our files
26:33 - we're going to have the Parent Directory
26:36 - which will have left and right
26:37 - coordinates and any of its children
26:39 - files or folders will have similar left
26:43 - and rights like men's and women's and in
26:45 - the same way we're going to have deep
26:47 - nested of the file system and why is
26:50 - that
26:51 - good why we simply cannot have a parent
26:54 - ID and that's it why do we need left and
26:57 - right so if If You observe this you can
26:59 - easily identify which subcategories or
27:04 - sub subcategories or any nested level of
27:07 - categories in this image uh can be
27:11 - easily identified from a appearent
27:13 - category let's say I want
27:16 - to um I want to understand and find out
27:21 - the number of files in our example let's
27:23 - go in our example let's say I want to
27:26 - identify how many many files I have in
27:30 - my specific folder but not only how many
27:33 - files directly inside the folder but
27:36 - also in a deep
27:39 - nested level of the main folder Target
27:42 - folder in which I'm interested so this
27:45 - is a little bit tricky to achieve with
27:47 - only pent ID right because pent ID only
27:53 - gives you access to the parent but it
27:55 - doesn't give you access to its perance
27:58 - parent or grandfather or grand grand
28:01 - parent or whatever right and in the same
28:04 - way you can always identify using parent
28:07 - ID which are your direct
28:10 - children but you cannot identify which
28:14 - are your grandchildren or grand
28:18 - grandchildren but if we have left and
28:20 - right we can easily do this so in this
28:23 - case if I want to select how many
28:26 - categories I have in inside clothing I
28:29 - would select all the records which has
28:33 - left greater than the clothing left and
28:38 - which has right less than clothing right
28:41 - and that would give me totally whatever
28:44 - 1 2 3 4 5 6 7 8 9 10 10 subcategories
28:49 - inside clothing no matter how deeply
28:53 - nested is that okay I hope this makes
28:57 - sense so now if we check in the database
28:59 - we have this left and right which
29:01 - exactly identifies what we want and now
29:03 - we can open HP storm and start
29:07 - generating
29:09 - migrations I'm going to stop the
29:12 - server and let's create now three main
29:15 - tables PHP artisan make model file and
29:21 - let's specify DM for migration we're
29:24 - going to
29:26 - create a file
29:29 - sheare I hope that's the correct name
29:31 - file sheare let's hit the
29:34 - m
29:36 - and
29:39 - start
29:41 - file that's it all right we hit the
29:44 - enter obviously on this schema we also
29:46 - have users but that's pretty obvious we
29:49 - have this um user table available
29:53 - already right there and one additional
29:56 - thing to this user table is this t
29:58 - storage size so this kind of storage
30:00 - limit what is the limit for that
30:03 - specific user and by having this by the
30:06 - way as a nested set model we can easily
30:10 - also understand what is the total size
30:14 - of the files for this specific user if
30:18 - we have size in the database we can just
30:21 - sum up all the sizes of those records
30:25 - which has left greater than specific
30:30 - folder all right so we have created uh
30:34 - three models in three migrations now
30:37 - let's open go into database migrations
30:40 - and let's open this create files
30:43 - table I will try to speed up the process
30:46 - a little bit so I'm going to copy and
30:50 - paste the table records right here and
30:53 - simply go through and explain we have ID
30:55 - obvious we have string name uh
30:59 - 1,24 we have path 1024 which is nullable
31:03 - we have nested sets so that method is
31:07 - available if we install the proper
31:10 - nested set package which we have not
31:12 - installed yet but I'm going to write
31:14 - migration and then we can install that
31:16 - package we have this Boolean is folder
31:19 - we have this m type which can beable we
31:22 - have the size nullable we have the time
31:24 - stamp such as create that and update dat
31:27 - we have for IDs for the created by and
31:29 - foring IDs for updated by and we also
31:33 - have soft
31:35 - deletes all right so this is the files
31:39 - now let's open
31:42 - second migration and that's file
31:46 - sheares here we will add two more
31:49 - columns file ID which is inullable and
31:53 - it is constrained by um files and and we
31:58 - have also user ID which is constrained
32:00 - by users actually those two columns
32:06 - should be required whenever we are
32:08 - sharing something we need to share what
32:11 - file is shared to which user so let me
32:15 - actually remove
32:16 - this so they are actually
32:20 - required perfect and let's now open the
32:23 - third migration file which is start file
32:30 - and we add two columns right here foring
32:33 - ID file ID which is constrained by files
32:37 - and user ID which is constrained by
32:39 - users it's pretty similar to uh file
32:42 - shears so we have those migrations ready
32:45 - and these down methods are also
32:47 - implemented properly so let's bring up
32:50 - the terminal and execute PHP
32:53 - Artisan
32:56 - migrate uh okay this will throw an error
32:59 - because we have not installed this
33:02 - nested set model package so let's open
33:07 - the browser and I'm going to search for
33:09 - let me actually close this let's search
33:11 - for nested set
33:14 - model and let's actually search for
33:17 - laravel nested
33:20 - sets there are couple of packages on Lal
33:23 - for nested sets some of them are not
33:26 - free but we're going to choose the one
33:29 - which has proper license to use for
33:33 - free okay here we have a couple of
33:36 - options this uh Cal list n set it's not
33:39 - actually free and let's che check this
33:42 - lazy Chaser I believe this is the one
33:45 - what uh what's good for you good for us
33:48 - it's a free and we can easily use that
33:50 - so let's go in the installation
33:52 - instructions and we need to execute
33:54 - composer require whenever we execute
33:57 - that and the package is installed then
33:59 - we can already use nested set function
34:02 - inside migration and if we want to drop
34:05 - that we can execute drop nested sets as
34:09 - well all right now
34:12 - let's execute composer
34:16 - require U caloi nested sets let's hit
34:20 - the
34:21 - enter okay that was downloaded and
34:24 - already installed
34:29 - now let's
34:30 - execute PHP Artisan migrate let's hit
34:35 - the enter all right so those three
34:38 - migrations have been successfully
34:40 - applied now I'm going to connect to the
34:43 - database through PHP Storm's uh database
34:46 - client from here uh if you are not using
34:50 - PHP storm you can use any client any
34:53 - mycle client like mycol workbench or
34:56 - there are some extensions in vs code as
34:58 - well to connect to my SQL so I need to
35:02 - constantly check the status for the
35:04 - database so I'm going to choose where's
35:08 - my SQL here it is we have to provide
35:11 - host to be Local Host Port 3306 the user
35:15 - is actually sale and the password is
35:20 - lowercase all lowercase password let's
35:23 - click test connection right here and we
35:25 - have successfully connected let's go on
35:27 - under
35:29 - schemas
35:30 - and let's actually click okay first and
35:34 - then click settings and schemas and I'm
35:37 - going to choose this file manager
35:39 - default schema now I'm going to expand
35:42 - the file manager and we have the
35:44 - following tables right here files file
35:47 - shares start files and everything else
35:50 - that was already right there so we have
35:53 - actually successfully created models and
35:56 - migrations now let's have a look at the
35:59 - project and because we are using inertia
36:02 - there will be some changes different
36:04 - from what you have seen previously when
36:06 - you have built LEL project let's focus
36:09 - on the resources folder because right
36:12 - here is the key differences between Lal
36:14 - and just inertia with Lal inside
36:17 - resources we have views normally which
36:19 - are plate files but this is something we
36:21 - don't need in this particular project we
36:24 - need JS folder and inside there we have
36:27 - this Main appjs which is responsible for
36:30 - initialization of this iners application
36:32 - as well as the vue.js application so it
36:34 - Imports this create inertia app then
36:37 - calls that inside the it configures the
36:40 - title and some uh how to resolve the
36:42 - components and inside setup it just
36:45 - creates a vuejs component the main
36:48 - component using Create up which is
36:50 - imported from view so this is the main
36:52 - file main Javascript file and we also
36:56 - have pages each page is associated to a
37:00 - rote in this case we have the dashboard
37:02 - and welcome we have profile page as well
37:04 - and inside Al folder we have this login
37:07 - register sign up password reset and so
37:10 - on inside layout we have two main
37:13 - component files one is the authenticated
37:16 - layout and second is the guest layout
37:19 - you probably guessed those are for guest
37:22 - user and for authenticated users and
37:24 - inside components we have many
37:25 - components comes out of the box box when
37:27 - you install this inera we have the logo
37:30 - and checkbox and danger but button and
37:32 - drop down and model and so on like we
37:35 - are developing we will create new
37:36 - components or modify these components or
37:39 - if we don't need at the end of the
37:40 - project we can obviously delete those
37:42 - components as well all right now let's
37:46 - start working on the layout this is the
37:47 - main thing what I'm going to do I'm
37:50 - going to open this authenticated layout
37:53 - and let's first check by the way the
37:54 - pages and dashboard so the dashboard is
37:58 - what is rendered right now when you log
38:00 - in and if I just remove everything from
38:03 - this template we will see simply an
38:05 - empty page by the way we have
38:07 - automatically reloading so whenever you
38:09 - change something it's going to be
38:10 - affected in the browser but there are
38:12 - two components inside the dashboard one
38:15 - is head which is the native inertia head
38:19 - component and by the way let's open
38:22 - inera documentation as well inera Js
38:28 - all right and we can explore I'm going
38:30 - to have this documentation open as well
38:31 - because probably I won't remember
38:34 - everything uh by heart and if we observe
38:37 - this under the title and meta section we
38:40 - will find this head component this is
38:42 - the main head component which will be
38:44 - converted into an HTML head tag okay and
38:49 - if we provide title right here as a prop
38:52 - it will be simply a title tag of this
38:55 - HTML document head component component
38:58 - we can have it in a different way as
38:59 - well and provide some meta tags if we
39:02 - want however um I'm going to Simply um
39:06 - like a we can remove these we are not
39:08 - building something which needs to be
39:10 - very SEO friendly so we are building an
39:13 - application a file manager application
39:15 - we don't hear SEO in this particular
39:17 - type of application so we can leave this
39:19 - head we can remove it really doesn't
39:20 - matter I'm going to remove it and inside
39:23 - authenticated layout this is uh where
39:25 - I'm going to work uh here we also have
39:28 - this U slot for header which is outputed
39:33 - right let's actually save this which is
39:36 - output it right here and then we have
39:38 - this main um your logged in card all
39:42 - right so I'm going to remove this and
39:45 - let's have a look in the authenticated
39:47 - layout this is what I'm going to adjust
39:49 - uh actually I will try
39:52 - to I'm going to get everything and
39:54 - create new scratch file vue.js scratch
39:57 - file and paste everything here and I'm
39:59 - going to build uh this layout from
40:01 - scratch but I'm going to use I will use
40:05 - certain components from here and extract
40:09 - into a new components probably which
40:12 - finally will be used right here so
40:15 - basically I'm going to split this file
40:17 - into multiple small components modify
40:20 - the layout and finally we will have our
40:23 - own new authenticated
40:25 - layout all right so we're going to start
40:28 - with the um main div I'm going to create
40:31 - and let's give it um I'm going to give
40:33 - it full hate uh H let's give it h
40:39 - screen uh I'm going to give it also BG
40:42 - gray 50 let's give it flex and W full
40:47 - and let's give it cap 4 okay so this is
40:50 - the main D um I I want to have like a
40:53 - left side navigation and on the right
40:55 - side we're going to have the main
40:56 - content for the section so I plan to
40:59 - create a separate component for the left
41:02 - side navigation which I will try to use
41:05 - right now so
41:08 - navigation like this and I can already
41:10 - go ahead and under components I can
41:13 - create
41:15 - new navigation component it's going to
41:18 - be VJs component by the way I have
41:21 - configured my vue.js template whenever I
41:24 - create new new vue.js um view file
41:27 - viw file uh it will write the following
41:31 - comments for me so this is how I'm going
41:34 - to structure my code inside the script
41:36 - tag all right so let's write just T at
41:40 - the moment and
41:42 - navigation all
41:44 - right and let's close
41:47 - it we have this main navigation which I
41:50 - want to import so I'm I'm just going to
41:52 - simply delete the last um last uh letter
41:56 - and hit control and space in my PHP
42:00 - store and it will autocomplete that for
42:02 - me and put that navigation under the
42:06 - script tag and by the way I also have
42:09 - like my
42:10 - own coding style so that I prefer to
42:13 - have templates at the top and scripts at
42:16 - the bottom okay so I can remove those
42:19 - Imports just like this I can remove this
42:23 - as well don't care at the moment while I
42:27 - will be just typing I will be importing
42:29 - them as far as I need so now I have
42:32 - navigation and I'm going to Define main
42:34 - this main will have display Flex let's
42:38 - give it also Flex column I'm going to
42:41 - give it Flex one let's give it padding
42:44 - horizontal four and some
42:47 - overflow overflow hidden all right so
42:50 - that's going to be the main section
42:52 - inside there we will have couple of De
42:54 - components because we have this Flex col
42:57 - colum we're going to have the top
42:58 - section for the search and Below section
43:01 - for the actually displaying the
43:05 - table so I'm going to create one div for
43:08 - the top section let's give it flex and
43:10 - items Center I'm going to give it also
43:13 - justify between and W full that's going
43:16 - to be for the um search form and some
43:20 - user dropdown and I'm going to actually
43:23 - I will assume that I already have search
43:26 - form or I I can actually create just
43:28 - like I did for the navigation so I'm
43:30 - going to go under
43:31 - components and I'm going to actually
43:34 - create right here a component called
43:37 - search form.
43:40 - VI and I'm going to create let's
43:43 - actually use first of all search
43:48 - form search form just like this and the
43:51 - second component I plan to create is the
43:54 - user settings dropdown so I'm going to
43:56 - call this exactly like this user
44:00 - settings drop
44:02 - down let's create this component as
44:07 - well user settings
44:12 - dropdown perfect let's creative user
44:17 - settings let's save this so they are
44:20 - used under inside this authenticated
44:22 - layout so we need to import them however
44:26 - we have these component and I don't want
44:28 - this components folder to become very
44:30 - giant with hundreds of files so we have
44:34 - here like very small tiny Atomic
44:38 - components like a model and this nav
44:41 - link and primary button which can be
44:43 - used
44:44 - across uh not only this particular
44:46 - application but the other applications
44:48 - as well okay so that I can easily copy
44:51 - the model component if I want into
44:53 - another application so I just want to
44:54 - create some kind of structure of my
44:57 - vue.js components so I'm going to create
45:00 - new folder called app and put my
45:04 - components which will be specific to my
45:07 - application like a
45:11 - navigation
45:15 - uh search
45:17 - form and user settings St down so I
45:21 - understand that this is a kind of
45:23 - subjective thing it's not a standard you
45:25 - can apply it's just a my prefer choice
45:27 - of um structuring my components I know
45:31 - that I can search those inside up and
45:34 - other very very like core components
45:36 - will be inside the components directly
45:39 - okay in the future I'm going to create
45:41 - some components inside up and some
45:43 - components inside components depending
45:45 - on how I'm going to use them all right
45:47 - we just have to modify these import path
45:51 - so because they were moved
45:55 - under up will just add up right here so
45:59 - now we have this navigation and search
46:00 - form and user settings so I'm going to
46:02 - save this and let's have a look so we
46:04 - have this navigation on the left side we
46:06 - have the search form and we have this
46:08 - user
46:10 - settings now let's create inside main
46:13 - let's create another div which will be
46:15 - for the main content let's give it class
46:19 - uh Flex one flex and flex column and
46:25 - overflow hidden
46:27 - as well I want basically to disable
46:29 - scroll on every element except that the
46:33 - files table itself only files table is
46:37 - something which needs to be scrollable
46:38 - in my opinion so I'm going to create
46:41 - slot right here and let's call up the
46:44 - left side so let's save it and if we
46:47 - check right now dashboard and if we just
46:50 - undo what we had previously now we see
46:53 - our layout and the component comes right
46:56 - here okay now let's start working on the
47:00 - navigation let's open
47:03 - navigation. View and let's delete this
47:07 - I'm going to change this from div into
47:09 - nav and let's give it also minan WID to
47:14 - be like 200
47:16 - pixel uh not 100 but 200 pixel okay
47:20 - inide there I'm going to create one div
47:22 - element and I'm going to give this eight
47:26 - like eight pixel this will be container
47:29 - for me for the logo so 80 pixel needs to
47:33 - be inside square brackets we need some
47:35 - horizontal ping let's give it flex and
47:38 - items Center and let's give it gap of
47:41 - three all right inside there I'm going
47:44 - to use Now inertia's link component if
47:48 - you don't know how to use that no
47:50 - problem let's go in the
47:51 - documentation uh and you can find link
47:54 - right here under links section the
47:57 - documentation is not overwhelming it's
47:59 - very simple and there are not that many
48:02 - links to get lost so you can easily
48:04 - figure out what you're looking for this
48:06 - is the link component we can use and it
48:08 - needs to be imported from inertia JS U
48:12 - SL view3 in our case if you're using a
48:14 - different framework obviously it needs
48:16 - to be imported into from a different
48:19 - package okay so I'm going to use now
48:22 - this link component uppercase
48:25 - L uh
48:27 - like
48:31 - this okay and I'm going to provide right
48:34 - here colum hre to be a root and this
48:39 - root will be the main root what we are
48:42 - going to have what we're going to Define
48:45 - well at the moment I'm going to leave
48:46 - this as a just a slash because we have
48:50 - not defined any kind of um roots in our
48:54 - application all right uh now I'm going
48:56 - to use application logo which is
48:59 - something that was previously in
49:01 - authenticated layout and we moved this
49:04 - entire authenticated layout into scratch
49:06 - file so we can have a look here's the
49:09 - application logo so I'm going to get
49:11 - this and put in
49:14 - our
49:15 - navigation let's move this navigation on
49:17 - the left side so I'm going to paste this
49:19 - right here and I'm going to Simply
49:22 - import this application logo component
49:24 - which was imported right here but I'm
49:27 - going to move
49:28 - this above under Imports section okay
49:33 - perfect so we have this logo defined the
49:35 - classes let's leave them and have a look
49:39 - and let's give it name some name to our
49:41 - application I'm going to call this Lara
49:44 - storage okay why is this closing link
49:49 - not highlighted into red uh let's just
49:52 - type
49:54 - link yeah strange
49:58 - it's not highlighted into red by PHP
50:00 - stor but I'm going to leave this as it
50:02 - is okay now this is the like a header
50:06 - section of the navigation for the logo
50:09 - we're going to have another div
50:10 - obviously where the main menu items will
50:13 - be let's give it some horizontal pting
50:16 - and I'm going to
50:17 - have like a drop- down to create new
50:21 - content in our application and the drop
50:24 - down will have options to create new
50:27 - folder or upload new file or upload new
50:30 - folder or something else if we decide to
50:33 - add in the future okay so I'm going to
50:36 - create this new component under
50:40 - app that's going to
50:43 - be uh let's call it create new
50:49 - dropdown okay again I'm just going to
50:51 - give it a create new text at the moment
50:55 - let's close this
50:57 - and let's use create new dropdown that
51:01 - was automatically imported if something
51:03 - is not automatically imported and if you
51:05 - see some kind of error if I delete this
51:06 - import for example you will
51:09 - see um error right here or simply let's
51:13 - open developer tools always have your
51:15 - developer tools opened and you will see
51:18 - these warnings right here like uh link
51:21 - if this is a native custom element uh
51:23 - the link was not actually imported that
51:25 - is the one problem and second problem is
51:27 - this uh fail to resolve component create
51:30 - new dropdown okay so this is something
51:33 - we need to we need to take here um if we
51:35 - go in
51:37 - the right here and we need to
51:40 - import link
51:44 - from uh inertia JS SL
51:49 - view3 now we have this link and the
51:52 - color was highlighted as well and let's
51:55 - import this drop down as well
51:59 - perfect now we have this create new
52:01 - which in the future will be converted
52:03 - into a drop
52:05 - down all right and down below we're
52:07 - going to have another div with actual
52:10 - menu items let's give it some uh
52:12 - vertical ping and inside there I'm going
52:15 - to use nav links so we actually have
52:17 - this nav link component available which
52:21 - was used pre previously in the header so
52:23 - I'm going to modify this nav link
52:25 - component but first let me use it right
52:30 - here now
52:32 - link okay uh we are going to have few
52:37 - menu items like my files and let's
52:41 - duplicate these few times we're going to
52:44 - have files shared with
52:48 - me we're going to have
52:51 - files uh shared by
52:55 - me and we're going to have uh trash
52:59 - maybe we're going to also add start
53:01 - files in the future okay we obviously we
53:04 - need to Define roads for each of them
53:06 - but we because we don't have roads at
53:08 - the moment I'm going to leave all of
53:10 - them into slash and we're going to also
53:14 - make these files active uh depending on
53:19 - which is clicked but let's leave them at
53:22 - the moment as they are and I'm going to
53:24 - open this now link and mod ify this a
53:27 - little bit uh before we modify let's see
53:31 - how that looks like okay so this is how
53:34 - it looks like and that is probably
53:37 - because it has inline flex and I'm going
53:40 - to change this into just
53:44 - Flex okay we need to adjust a few other
53:49 - things um this is flex side navigation
53:57 - uh okay if props active Flex yeah here
54:01 - we need to also change it into Flex okay
54:05 - that's good um let's go
54:08 - back it has border bottom so I'm going
54:12 - to remove this border button no need for
54:16 - that uh let's increase
54:19 - this a pting I'm going to set this into
54:23 - five let's give it also
54:27 - vertical ping pting Y 2 let's save
54:32 - it okay not
54:35 - bad let's give it also some um text
54:40 - color and hover color as well I'm going
54:44 - to also change this text
54:47 - color uh from 500 if the link is not
54:50 - active from text Gray 500 into
54:55 - 700 and and if it is active let's give
54:59 - it also different text color like we
55:02 - have text Gray 900 I'm going to change
55:07 - this into text
55:09 - Indigo um
55:11 - 700 and maybe let's give it also BG
55:16 - Indigo
55:17 - 100 okay let's have a look now none of
55:21 - them is active so that's fine however if
55:24 - we go in the navigation and I'm going to
55:26 - give this one for example
55:29 - active
55:31 - true this is how it looks like let's
55:36 - inspect
55:40 - it okay it has a different pading at the
55:44 - top pading top one okay let's remove
55:49 - it that's good and let's also give it uh
55:54 - rounded LG
55:59 - okay that's fine by me at least for now
56:03 - so let's test on the second one to be
56:07 - active obviously we are not going to
56:10 - have too many items active at the same
56:11 - time but just to have a look how active
56:14 - looks like I think this pretty good so
56:16 - we have created this uh let me remove
56:20 - the active as well and go in inside this
56:24 - authenticated layout so I think think we
56:27 - finished working on the
56:30 - navigation at the moment we don't have
56:32 - these rules defin so we can leave that
56:34 - let's go in the authenticated layout and
56:37 - we have this search form okay I'm going
56:39 - to work inside the search form right
56:41 - now inside there I'm going to create a
56:45 - form let's give it
56:48 - w 600
56:51 - pixel let's give it a h height of 80
56:56 - pixel like we have on the logo let's
56:58 - give it also flex and
57:01 - items Center and inside there I'm going
57:04 - to use text input the text input is a
57:07 - core component which comes uh with the
57:10 - inertia so I'm going to use text input
57:13 - component
57:15 - here let's give it type
57:22 - text and let's give it also class uh
57:26 - block and W full I'm going to stretch
57:29 - this on full width and let's give it
57:31 - margin
57:32 - to margin right to and this model value
57:37 - is something I'm going to remove instead
57:40 - I'm going to give it a v model form.
57:42 - search I'm going to Define this below as
57:45 - well and let's give it autocomplete as
57:49 - well auto
57:53 - complete I think this component might
57:55 - not exist in the text input but we're
57:57 - going to add that and I'm going to give
57:59 - it also Place holder which will be
58:03 - search for files and folders okay I'm
58:09 - going to move now these properties on a
58:13 - new line like this and let's have a look
58:16 - inside text input Define propes it only
58:19 - accepts model value so we're going to uh
58:22 - we're going to pass couple of components
58:25 - couple of props probably from
58:28 - here okay so those autocomplete
58:31 - placeholder they will be automatically
58:33 - given because inside the template we
58:37 - have the only component we have is the
58:39 - input and because we're are passing
58:41 - those props to the component text input
58:44 - they will be just delegated to the input
58:47 - let's actually move this above
58:51 - script okay so those will be given
58:53 - automatically let's define this
58:56 - uh form inside uh uses I'm going to use
59:02 - I'm going to create form equals use
59:06 - form that needs to be imported from
59:08 - inertia and we are going to provide
59:11 - search the
59:13 - only property will be search as an empty
59:16 - string at the
59:18 - moment and this text input component
59:21 - needs to be imported that let's move
59:25 - this
59:28 - right
59:30 - here okay just like this let's have a
59:35 - look here is the search input that looks
59:39 - pretty nice and on the right side we are
59:41 - going to define the user settings let's
59:44 - open user settings
59:47 - dropdown and let's open this scratch
59:51 - file and right here we probably have
59:53 - this user settings here's the settings
59:56 - drop down and it is using the drop-down
59:59 - and
60:00 - template and everything what it
60:06 - needs however instead of the dropdown
60:09 - which is which comes with inertia I am
60:12 - going to create a new I'm going going to
60:17 - install headless UI and use its own drop
60:20 - down let's search for headless UI
60:26 - and it has a couple of JavaScript
60:28 - components but the main thing of the
60:30 - main idea of this headless UI is that it
60:34 - provides only functionality unstyled and
60:36 - we can style it according to our needs
60:38 - so we have this menu and tabs and list
60:40 - box and let's have a look the Headless
60:43 - UI
60:44 - itself uh the menu what exactly I want
60:48 - to use uh the reason why I am going to
60:52 - install this headless UI is that first
60:55 - it gives you possibility uh to customize
60:59 - it as much as you need but it also has
61:03 - much more components then whatever comes
61:07 - with this inertia like it comes with the
61:09 - drop down and model but that's basically
61:13 - it and I found the dropdowns for the
61:17 - Headless UI is more configurable and
61:21 - like maybe it's a personal preference
61:23 - but I found it um more easy to use okay
61:26 - if we go under GitHub
61:29 - and this is how we can install
61:33 - that and I'm going to also Install hero
61:36 - icons probably so let's have a look uh
61:40 - I'm going to stop this mpm run Dev
61:42 - running and then execute this mpm
61:45 - install headless UI view latest well
61:49 - probably the best will be if we install
61:53 - this table version what ever is
61:57 - this
61:58 - 1.7 something because if you're watching
62:01 - this in the very future the latest
62:03 - version will be something which probably
62:05 - contains some breaking changes and it
62:08 - might not work so I'm going to
62:12 - specify 1 Point um 7
62:18 - something let's try anything above 1
62:22 - Point 1.7
62:26 - let's hit the
62:30 - enter okay that was installed and if we
62:35 - check page Json we should see
62:39 - headless UI right here as
62:43 - well okay perfect now how we can use
62:46 - that I'm going to go in the
62:47 - documentation of headless UI let's go
62:51 - back we can find some documentation
62:53 - right here as well but better to go on
62:56 - the following link and this is the drop-
62:59 - down example so I'm going to get the
63:02 - code this is it this is the react
63:07 - version
63:10 - let's switch to VJs version where's
63:19 - that this is react version okay from
63:21 - here we need to switch to view version
63:24 - let's get the code
63:27 - I'm going to copy that go under user
63:30 - settings dropdown and I'm going to paste
63:32 - it oops it looks like we copied the
63:36 - whole
63:38 - template
63:41 - and script as well well I'm going to
63:46 - replace it and now we have two script
63:48 - text which obviously is something we
63:50 - don't want so I'm going to get those
63:53 - Imports and put them
63:56 - right here now
63:59 - this uh this drop down also uses hero
64:03 - icons okay and it is possible to install
64:07 - hero icons and then use the components
64:10 - like this or the second way which I
64:14 - generally prefer is to open hero
64:18 - icons.com search for the icon what we
64:20 - need like the first one for example and
64:23 - I generally copy SVG and then put in the
64:27 - HTML in the place I need the obviously
64:31 - the markup is good is
64:34 - large but in this case you don't need to
64:36 - install any third party package and
64:39 - that's it okay it depends uh what is
64:43 - your prefer choice so in this case
64:46 - because the hero icons is used by this
64:50 - dropdown like we can install it and this
64:54 - will simply work or I can search for
64:58 - Chevron Chevon down icon and this will
65:02 - be where is Chon down here it is so this
65:05 - will be SVG I would copy that put this
65:09 - right here and it would do the exact
65:12 - same thing okay let's try to install uh
65:16 - these um hero icons because it will be
65:20 - probably it will make our code probably
65:24 - more readable uh mpm
65:27 - Install hero icons SL
65:31 - view archive icon duplicate icon those
65:34 - are the icons we don't need we don't use
65:37 - so I'm going to just remove them hero
65:41 - icons we're
65:43 - installed mpm run
65:47 - Dev and now the underline disappears we
65:51 - have this chair icon down available
65:56 - and let's save this user settings
65:58 - dropdown and let's have a look
66:02 - here okay here is the drop down and this
66:05 - is how it looks like but I'm going to
66:08 - change some Styles and we only need to
66:11 - leave too many items uh one will be
66:14 - profile and second will be log
66:17 - out so let's modify
66:20 - this first let me check what is this SVG
66:25 - this is the SV I past it I'm going to
66:27 - remove
66:28 - that this this is the SVG what I had so
66:31 - I'm going to remove it I'm going to
66:33 - remove this Steve as
66:35 - well let's okay this is how it should be
66:39 - on the right side perfect now let's
66:41 - start with the options so it should not
66:44 - be options instead it should be the
66:46 - currently authorized user name and if we
66:51 - check this dropdown this is the usern
66:54 - name page props out username okay this
66:58 - is what I'm going to put
67:00 - paste okay now here we see
67:04 - zoraa let's scroll down below and let's
67:07 - adjust remove menu items uh what did we
67:11 - have previously so that
67:14 - was drop down and we have profile and we
67:18 - have log out well I'm going to get just
67:22 - texts we have this edit icon
67:26 - we have another menu
67:28 - item which is duplicate icon and those
67:33 - two menu
67:34 - items are grouped in its own div and
67:39 - there is another div so those are like
67:42 - sections inside the dropdown and this
67:44 - good to understand because we might need
67:47 - and we will probably need to create
67:49 - structure uh of the same layout the drop
67:53 - down okay so in this case will remove
67:56 - those things we will have just one div
67:59 - and inside there we will
68:02 - have
68:04 - profile and we will
68:06 - have log
68:09 - out however it should not be duplicate
68:13 - icon uh log out should be something else
68:17 - let's
68:19 - check sign
68:21 - out log out okay
68:27 - maybe Arrow let's search for some
68:41 - Arrow I don't see anything that might be
68:45 - a log out
68:53 - Arrow okay let's leave it I'm going to
68:56 - just remove the
68:57 - icon and I'm going to remove the icon
69:00 - from here as
69:02 - well let's save
69:04 - it we have profile and log out the color
69:07 - is something we need to adjust as
69:10 - well okay I'll try to save some time and
69:13 - I'm going to copy and paste those menu
69:15 - items final version so that we can focus
69:18 - on more uh on Lal side rather than on
69:22 - markup so we have these menu items as we
69:25 - had previously I'm using responsive nav
69:27 - link which is the component which comes
69:30 - with inertia uh installation responsive
69:33 - nav link that's basic component similar
69:36 - to navlink uh the only difference is
69:39 - that it's um for uh responsive as
69:42 - well and that needs to be imported
69:45 - responsive Now link and the root this is
69:48 - something uh which generates which will
69:52 - generate uh the root for the f root name
69:56 - and this root inside vue.js is available
70:00 - uh through inertia and if we check the
70:03 - documentation in the routing section
70:07 - right here you will find how to uh how
70:10 - to define those roots with JavaScript
70:13 - okay so it will probably be somewhere
70:17 - right here under redirects or I don't
70:19 - remember actually by Hardware it is but
70:21 - I'm sure that this is working so I save
70:25 - that
70:26 - reload the page and this is the profile
70:29 - and log out now we can adjust the tiles
70:33 - a little bit I'm going to move up and
70:36 - this one
70:39 - has gray this is menu
70:41 - [Music]
70:43 - button where's the gray
70:47 - color let's check
70:50 - it it has text white but
70:55 - black okay it has black with some
71:03 - opacity BG black and BG opacity I'm
71:06 - going to remove
71:09 - that and I'm going to change the white
71:13 - color
71:14 - into
71:16 - maybe gray
71:20 - 800 and I'm going to change the
71:23 - color text
71:26 - gray 800 as
71:33 - well and I'm going to remove this
71:36 - border this is this comes from
71:38 - responsive Now link let's search for
71:40 - border border left
71:43 - four let's remove
71:50 - it okay and it probably has
71:53 - also with full and it has like the width
71:58 - is too
72:09 - much and right here it has the width 56
72:13 - and we can remove this or set this into
72:16 - a lower value like this and this is the
72:20 - profile page okay so now we have this
72:22 - drop down which I guess is is looking
72:26 - exactly how I want it okay and the last
72:30 - thing is this create new uh drop down
72:33 - which should be slightly easier because
72:36 - now we have this drop-down component
72:39 - from the user settings drop down so I'm
72:43 - going to copy this menu and go inside
72:47 - this create new drop down and I'm going
72:48 - to paste it and let's adjust a few
72:51 - things
72:59 - okay so this should be called create new
73:03 - and this Chev drop down is icon we can
73:07 - remove this menu button should be
73:11 - imported so those Imports is something
73:14 - we need I'm just deleting the last
73:16 - letter and hitting the control and space
73:18 - or we can also hit alt and enter in PHP
73:22 - stor and that's going to Auto Import
73:24 - that
73:25 - uh here are the
73:29 - Imports this responsive nav link is
73:32 - something I'm going to remove we have
73:34 - this menu item and inside there we're
73:38 - going to have new
73:43 - folder and I'm going to duplicate this
73:45 - by the way now this is the case where we
73:47 - need like a two groups so new folder
73:50 - will be its own group and we're going to
73:53 - have two more menu items
73:56 - um upload
73:59 - folder and upload file so I'm going to
74:03 - duplicate this upload
74:08 - files good now this div can be removed
74:13 - as
74:15 - well I save
74:17 - that and I don't
74:20 - see the drop down instead I see an error
74:24 - menu button
74:32 - okay where is this
74:35 - problem menu button is missing on parent
74:39 - menu component is that coming from the
74:41 - user settings no that's not probably
74:44 - coming from user settings because it was
74:46 - working that's coming from probably
74:48 - navigation I'm going to remove this
74:50 - create new dropdown and let's
74:53 - check if I return this
74:55 - spec yeah we have problem here well I
75:00 - think the problem is that the menu is
75:02 - not imported so we need to import menu
75:05 - from headless UI save
75:08 - that and here we go so we see this great
75:11 - new when we click however we got the
75:15 - error passing props on template the
75:18 - current component menu item is rendering
75:21 - a template
75:33 - okay we have this menu items which is
75:37 - which is
75:39 - imported if we remove
75:42 - everything create new click on that it
75:46 - opens
75:48 - something the menu item I think that
75:52 - this menu item
75:55 - needs not a text but some kind
75:58 - of uh HTML
76:01 - element okay so if I put this in a tag I
76:06 - think that should fix the
76:10 - problem let's have a look here we go
76:14 - obviously this does not look pretty nice
76:17 - we can apply some styles to
76:20 - that uh let's give it
76:25 - well
76:27 - this can be active in
76:30 - theory okay in our case it will not
76:34 - probably
76:37 - active let's give it
76:39 - text uh text Gray 700 and block and
76:45 - pting X4 and pting Y 2 and text
76:51 - small uh I'm going to get
76:53 - this and and replaceing other places as
76:57 - well and we have this menu items which
76:59 - has right zero I'm going to change this
77:02 - right zero into left zero so that we
77:05 - have it fully visible like this okay I
77:09 - think that's looking good
77:12 - actually obviously on Mouse it doesn't
77:15 - do anything we can add those Styles as
77:18 - well but it's fine so far in this create
77:22 - new we can give some Styles here as well
77:27 - I'm going to actually copy some styles
77:29 - of this
77:31 - create new button and replace the
77:35 - current button okay and if we have a
77:39 - look this is create
77:44 - new and let's give it also with a little
77:48 - larger
77:53 - width Maybe be full
77:56 - width uh that should
77:58 - be
78:01 - block okay so we have this create new
78:03 - new folder upload files and upload
78:07 - folder that's perfect now let's define
78:10 - couple of roads and I'm going to create
78:12 - a file controller for that let's stop
78:15 - I'm going to stop this mpm run
78:18 - Dev and I'm going to create new
78:20 - controller PHP artison
78:23 - make controller
78:27 - file
78:29 - controller and let's hit the enter file
78:32 - controller was created uh we can even
78:36 - specify check we can even specify that I
78:39 - want this controller to be resource
78:42 - based but in this case it's fine we're
78:44 - going to have custom U custom actions
78:47 - it's not like a standard crud okay we
78:50 - are going to have my files here which
78:54 - which will
79:00 - return
79:01 - inertia render and the component name so
79:08 - under under resources under JS and Pages
79:13 - I'm going to
79:16 - create new
79:19 - files my files.
79:22 - VI and that
79:25 - said there I'm just going to type the
79:27 - current page
79:29 - slurl
79:31 - okay now let's call this my
79:35 - files semicolon now let's open web.php
79:40 - and in the roots for authorized
79:44 - users so we need to allow this only
79:47 - whenever the user is um
79:52 - authorized right here
79:57 - not right here well actually we're going
80:00 - to create now
80:03 - group uh with middle wear out and
80:07 - verified this is this dashboard is
80:10 - something we don't care so I'm going to
80:13 - change this into root
80:17 - controller file
80:22 - controller middle wear
80:26 - out and
80:31 - verified and then we group
80:36 - it like
80:40 - this okay and inside that
80:43 - group let's move this
80:53 - down excuse me
80:57 - and inside here we are going to have
81:01 - Ro
81:05 - get my files or we can uh put this as a
81:09 - default as well do we have default the
81:13 - default is welcome at the moment uh does
81:16 - this do anything okay this is the
81:18 - welcome um let's leave the welcome as it
81:22 - is let's give it my files
81:26 - and the action will be my files which is
81:29 - already defined and we can specify name
81:32 - here as well which will be my
81:34 - files okay so I'm going to save that and
81:38 - if we go now
81:40 - in my files my Dash
81:43 - files uh okay we have this error unable
81:46 - to locate file and that's because we
81:49 - have stopped the V server mpm run Dave
81:54 - PR the page and this shows now my files
81:58 - we can put this in our authenticated
82:03 - layout as
82:05 - well and now here's my files and in the
82:09 - same way we can Define other roots and
82:11 - other VJs Pages like shared with me and
82:15 - shared by me but we are going to focus
82:18 - at the moment on my files so that's why
82:20 - I'm not going to define the others at
82:22 - the moment however if we open now
82:26 - navigation we can link this to
82:31 - root called
82:35 - root my files okay and right here as
82:39 - well we can get this and
82:45 - specify my
82:47 - files okay and how to test that if I go
82:51 - in the profile page and then click on
82:53 - the logo
82:55 - and by the way let's put this inside the
82:57 - link as well this large
83:03 - storage like
83:05 - this okay we need to give this flex and
83:08 - item Center and G three and everything
83:13 - probably on the link itself not the
83:18 - div like
83:20 - this if I click on this it goes to my
83:23 - files and same way if I on the profile
83:26 - and click these on the left side my
83:28 - files it opens my files now let's make
83:30 - these my files active in the left
83:34 - side uh I'm going to
83:36 - Define active
83:39 - here which will be if page. URL equals
83:47 - to um my Dash
83:50 - files then this will become active and
83:53 - if this is active it will have different
83:56 - classes Let's test this here we go so
83:59 - this is now active if I go on the
84:01 - profile this is not active anymore I
84:03 - click on that this gets active and in
84:05 - the same way others will become active
84:07 - whenever we will Implement them okay so
84:10 - now we have defined the layout and we
84:12 - have defined the main rout and let's
84:15 - move on on the next part now if we check
84:18 - the data base inside files we don't have
84:22 - any record right there and in the users
84:25 - we have only one user so I want whenever
84:28 - new user registers there should be a
84:31 - root folder created for that specific
84:34 - user and every file then the user
84:37 - uploads will go inside the root of that
84:42 - uh user okay so that's why I'm going to
84:45 - open up HTTP controller
84:49 - South uh registered user controller and
84:53 - right here after the user is registered
84:57 - and after the user is logged in I'm
84:59 - going to
85:04 - create the file instance let's import
85:07 - the up modules file and let's specify it
85:12 - name the name in this case I'm going to
85:14 - make it user email because I know that
85:17 - it's going to be unique so that's fine
85:20 - I'm going to specify that the file is
85:24 - older equals
85:26 - one and this file needs to become root
85:30 - so there is a method actually called
85:32 - make root and let's call Save on that
85:37 - make sure that this file has the proper
85:41 - trait used in order to be able to call
85:44 - this make root okay for this we need to
85:49 - check the documentation uh check the
85:51 - following documentation somewhere there
85:53 - should make root how to make that root
85:56 - however we need to use a trait called uh
86:00 - I believe it's called node
86:04 - trait inside the model to be able to
86:07 - call this make root so inside this file
86:11 - model we have this has Factory um I'm
86:15 - going
86:16 - to provide node trait here and I'm going
86:20 - to also provide soft delet because this
86:23 - is something I
86:24 - I'm going to
86:26 - use also when the file is created I
86:30 - haven't specified the created by who
86:35 - created that file in the database of the
86:37 - files we have this uh Fields created by
86:42 - however I haven't specified and I'm
86:44 - going to create one more tra which will
86:47 - do this automatically for me under app
86:51 - folder I'm going to create new folder
86:53 - called
86:55 - trades and inside there I'm going to
86:58 - create
86:59 - new
87:02 - trade called um has
87:06 - Creator and
87:09 - updator something like
87:11 - this okay so this will indicate that
87:14 - whenever I use that trade this will be
87:16 - an indication for the model that this
87:19 - model has created by or updated by and
87:23 - we just need to manage that so I want to
87:26 - Define protected function here protected
87:29 - static function here called boot has
87:34 - Creator and
87:39 - updator I think I made a typo
87:44 - updator okay and then I'm going to call
87:48 - static this boot has Creator and updator
87:52 - um is in like a special name coming from
87:56 - the eloquent so that whenever we
87:59 - call creating from
88:02 - here we pass
88:06 - function and we have inside the function
88:08 - we will accept a
88:10 - model then model we call created by and
88:15 - that's going to be currently authorized
88:17 - users
88:18 - ID and let's import this out from facade
88:24 - created by is this and also updated by
88:29 - is the same whenever record is created
88:33 - I'm going to duplicate
88:34 - this and on updating we only change
88:38 - updated
88:40 - by okay now let's use this has Creator
88:43 - and updator trait right
88:48 - here let's import
88:51 - that and and then should be good boot
88:55 - has create or updat okay perfect now
88:59 - whenever the file will be created it
89:02 - should have this created by we are going
89:06 - to try a registration the redirect by
89:09 - the way uh on the home URL is still
89:13 - dashboard so we can change this into my
89:16 - files now let's try
89:19 - registration I'm going to log
89:22 - out uh I can actually even and try to
89:24 - delete the current
89:28 - user yep now let's
89:31 - register
89:33 - s at example.com
89:41 - register okay let's check the email
89:44 - click verify I was able to verify my
89:48 - account and if I
89:51 - reload and if I reload I am logged in
89:55 - now let's check files here we see okay
89:59 - the record was made the name is email we
90:02 - have left right we have we don't have
90:05 - parent ID because yeah it should not
90:07 - have parent ID this is the root is
90:09 - folder M size is only for files created
90:12 - updated that created by and updated by
90:14 - okay here we see that and deleted that
90:18 - okay now whenever new file or new folder
90:22 - is created they should be children of
90:25 - this rout and a single user will always
90:29 - have a single root and that's the whole
90:32 - idea this is how we're going to proceed
90:34 - now let's start working on folder
90:36 - creation whenever we click create new in
90:39 - the new folder it should bring up the
90:41 - model we type the folder name hit the
90:43 - submit button and it's going to send the
90:45 - request and the folder needs to be
90:47 - created okay but let's start first from
90:50 - the backend we have file control
90:58 - and right here I'm going to create
90:59 - function called create
91:02 - folder I'm going to also open
91:05 - web uh web.php
91:09 - and inside
91:11 - this uh Au and verified group for the
91:17 - controller let's create new
91:19 - rout and let's actually call this root
91:22 - create folder how however we can
91:25 - even uh we can even do like this folder
91:28 - slash create okay or let's let's leave
91:32 - create folder the
91:37 - moment now there going to be create
91:40 - folder and then we have folder. create
91:48 - here I'm going to also change this into
91:51 - a folder SL create I think that's more
91:53 - logical
91:55 - okay so we have this create folder
91:57 - perfect and I'm going to create now a
91:59 - form
92:00 - request uh we have this npm run de
92:02 - running so I'm going to bring up the new
92:04 - terminal and go inside the container
92:06 - vendor being sale bash and then PHP
92:10 - artisan make request and let's call this
92:15 - store
92:17 - folder folder
92:20 - request hit the enter let's now open
92:24 - store folder
92:27 - request uh we can change this authorized
92:30 - into true for now but we're going to
92:33 - have more logic right
92:36 - there and then we need to focus on the
92:41 - rules
92:45 - okay whenever the file or folder is
92:49 - created it will create it will be
92:51 - created either in the root folder or
92:55 - inside some folder we're going to
92:57 - implement the navigation as well going
92:59 - inside the folder and we're going to
93:01 - have also nested folders so we can go
93:04 - inside nested folders and create new
93:06 - folder right there or upload new files
93:08 - right there so we need some kind of
93:12 - identifier whether the current request
93:15 - is inside the root folder or inside the
93:17 - Ned folder that's why we will probably
93:20 - need prent ID here obviously we need
93:24 - name the name is something which um
93:28 - needs to be required whenever folder is
93:31 - about to to be created but as I
93:33 - mentioned we will need P ID as well and
93:36 - this P ID is something that we will need
93:40 - in other form requests as well that's
93:43 - why I am going to create a new form
93:48 - request let's call these
93:50 - parent parent ID
93:54 - base request okay we are not going to
93:58 - directly use that in the controller
94:01 - although we will be able to use it but
94:04 - instead we will just extend from this
94:08 - parent ID base request so inside store
94:12 - folder request I'm going to extend this
94:14 - into from pent ID base request and if I
94:17 - go in the parent ID base request I'm
94:19 - going to Define right here uh parent
94:25 - ID okay and the parent ID is
94:30 - something which let's start writing rule
94:34 - it must exist in the
94:37 - table uh
94:39 - files
94:42 - ID uh we can even specify right here
94:45 - file
94:47 - class uh that needs to be string ID and
94:51 - we we need to add additional we closes
94:54 - right
94:55 - here
94:57 - function we need a q
95:02 - Builder Builder like
95:05 - this
95:10 - quy and we are going to return cury
95:20 - where is folder
95:24 - equals one so we basically the parent ID
95:28 - needs to be faltered for sure whenever
95:30 - this comes in the request and also it
95:33 - must be owned by the currently current
95:36 - user okay so we're going to add
95:38 - additional we here created by needs to
95:44 - be
95:46 - out out
95:49 - ID like
95:51 - this okay so whenever parent ID comes um
95:55 - it must exist in the table whenever it's
95:59 - there it must exist in the uh file
96:02 - stable inside ID column and it must be
96:05 - folder and the current currently
96:08 - authorized user must be the owner of
96:10 - that folder okay that's absolutely
96:13 - logical this is something we need to we
96:15 - need to always do now I'm going to
96:17 - Define file public file right here which
96:22 - uh can be nullable as well
96:24 - if the parent ID was not
96:27 - given and right here inside the
96:30 - authorized I'm going to select this
96:33 - parent equals
96:35 - file
96:39 - query where
96:43 - ID is the given um parent ID so this is
96:47 - going to be this
96:50 - input uh parent ID
96:54 - okay and I'm going to get
96:59 - first and then I'm going to check if the
97:03 - parent
97:04 - ID uh we are going to only allow if the
97:07 - parent ID exists and if this is owned by
97:11 - the current user so basically if the
97:14 - parent
97:17 - exists and it is not
97:20 - root this
97:22 - parent is root returns
97:26 - false
97:28 - and if this is not root then it means
97:31 - that the folder needs to be a normal
97:34 - regular folder created by that user okay
97:39 - if this is a regular folder
97:42 - and the
97:44 - folder um does not belong to the current
97:47 - user I'm going to actually create helper
97:50 - method inside the file
97:54 - uh to
97:55 - easily is owned by and I'm going to
98:00 - provide user ID
98:03 - here the purpose of this function is to
98:05 - Simply return if the
98:08 - current um current modu is owned by the
98:11 - currently authorized user so I'm going
98:14 - to Simply return
98:19 - this created by
98:24 - equals to the given user
98:27 - ID okay and the the return type will be
98:31 - Boolean for this
98:33 - function okay now if I go in the request
98:37 - if this pint is owned
98:42 - by
98:45 - Al Al ID if not owned by Al ID okay then
98:52 - we are going to return
98:54 - false otherwise we will return true so
98:57 - again let's double check so we select
99:00 - the parent file based on the ID if this
99:04 - is null or
99:06 - incorrect uh then the parent will not
99:09 - exist okay if the parent ID does not
99:12 - exist so that's the that's the important
99:14 - thing if the parent ID does not exist if
99:17 - this is
99:18 - null then we will assume that the user
99:22 - wants to create something something in
99:23 - the
99:24 - root okay and then we will simply return
99:28 - true from here but if the parent ID
99:31 - exists and if this is not
99:35 - root and if this is not owned by the
99:40 - currently authorized
99:43 - user then we will simply return
99:49 - false I think we can even remove this
99:52 - portion because even if it is root it
99:55 - still is owned by the currently
99:58 - authorized user because this is how we
100:00 - implement it
100:02 - right so that's why I think we can
100:05 - remove
100:07 - that okay now we have this parent ID
100:10 - base request ready and if we go in the
100:12 - store folder request we extend this from
100:14 - parent ID base request and this one now
100:18 - here we don't need authorize anymore so
100:20 - I can completely remove that because it
100:22 - will take the authorized from appearent
100:25 - and right here under rules I'm going to
100:28 - call array
100:30 - merge and I'm going to merge uh rules of
100:35 - these two form requests so first I'm
100:39 - going to call parent
100:44 - rules and then we will have our own
100:48 - rules like
100:50 - this the name must be required
100:54 - and also it must be unique so I'm going
100:58 - to Define new rule right here unique
101:02 - inside file class inside name but we
101:07 - need to add extra we closes as well so
101:11 - it must be unique inside file table but
101:14 - only for current user currently
101:16 - authorized user and only inside the
101:21 - given parent ID
101:24 - okay so we have to provide only when the
101:28 - created
101:30 - by is out
101:35 - ID and when parent ID is the given this
101:43 - parent
101:44 - ID and also the other re will be if it's
101:49 - not deleted so if the for example if the
101:52 - test folder is created and then deleted
101:55 - then we should be able to create new
101:57 - test folder right so if deleted
102:02 - it we deleted at is uh now so probably
102:07 - we should write where
102:11 - now created
102:15 - it okay so we have this store folder
102:18 - request ready I'm going to also
102:20 - customize public function mage
102:23 - mes
102:25 - return uh name.
102:29 - unique I'm going to give it a custom
102:31 - message
102:33 - folder whatever um
102:36 - input folder input already
102:42 - exists like
102:47 - this okay so we have request ready we
102:52 - have
102:53 - ready we have controller which is not
102:57 - yet ready so let's in the
103:03 - controller uh I will accept
103:06 - the request right here store store
103:11 - folder request excuse me store folder
103:17 - request then I'm going to get validated
103:20 - data
103:23 - from
103:25 - here and this request is a store folder
103:28 - request and it also has parent model
103:33 - okay we selected this in the parent
103:35 - class it should be available right here
103:37 - so whenever we want select we kind of
103:39 - caching it so that we don't have to
103:41 - select it second time we will need this
103:43 - right here so that was also one idea why
103:46 - I created it like this and then uh let
103:50 - me assign this into parent variable so I
103:53 - have parent and I'm going to also check
103:55 - if the parent doesn't
103:58 - exist if not
104:01 - parent then erent equals this I'm going
104:06 - to create new function get root so I
104:08 - want to get the
104:10 - root um root file for the currently
104:14 - authorized
104:16 - user so probably right here I'm going to
104:20 - Define get root
104:23 - and I'm going to
104:27 - return file
104:31 - cury
104:34 - where uh created
104:37 - by is the currently authorized
104:43 - user and we we we we want to get
104:47 - basically where it is root so I think
104:50 - there is a query for that
104:53 - uh where is root here it is where is
104:57 - root so I want to get root for the
105:02 - currently authorized user and I'm going
105:04 - to call first or
105:08 - bail like this uh let's actually move
105:12 - this right
105:15 - here where is root yeah it doesn't
105:18 - autocomplete but it is there and it
105:21 - should work
105:25 - okay so I call this get root if the
105:27 - parent is not given then we get the
105:31 - parent and then I create file is new
105:37 - file we provide is
105:40 - folder equals one or true we provide
105:45 - also name equals data
105:50 - name and then on the p I'm going to call
105:53 - append node which is a method from this
105:56 - nested set model file okay so from the
106:01 - request we get the data we get the
106:03 - parent model if it doesn't exist we get
106:05 - the root then we create the folder and
106:07 - append this inside the parent okay I
106:10 - think now the back end is ready and we
106:13 - can move on the front end
106:16 - side let's create uh let's open create
106:21 - new dropdown
106:23 - and here we have this new
106:25 - folder whenever user clicks on this new
106:28 - folder I wanted to open new model and
106:31 - type the name right there and then hit
106:34 - the
106:35 - submit so first I'm going to add H right
106:38 - here to show cursor basically and then
106:42 - on click with prevent uh I'm going to
106:46 - call a method show
106:49 - create folder model so that's going to
106:52 - be the function
106:53 - which I'm going to Define down
106:57 - below let's scroll down below under
107:01 - methods create um show create folder
107:05 - model and I'm going to create a model as
107:09 - well so under components app I'm going
107:12 - to create new component called create
107:16 - folder
107:19 - model okay I am going to use this base
107:22 - model
107:23 - which comes with inertia
107:29 - installation
107:31 - model but I'm going to adjust few things
107:34 - right here let me import this model
107:36 - first from here okay uh this model
107:40 - requires show property and I'm going to
107:47 - Define how I'm going to do this so I'm
107:49 - going to I want to create like a two-way
107:52 - data binder in for the
107:56 - model model value so I want to have
107:59 - this show to be a two-way data bound
108:04 - property so I'm going to use model value
108:07 - right here now let's define
108:11 - props
108:14 - const model value equals
108:18 - Define
108:20 - props model value and that needs to be
108:28 - Boolean okay then from this create new
108:32 - dropdown I'm going to use this
108:35 - create uh create folder
108:38 - model and then inside there I'm going to
108:43 - provide V
108:45 - model to
108:47 - be a new reference const show
108:55 - const
108:57 - show uh create
109:00 - folder
109:03 - folder model but I have the name
109:07 - Collision okay let's just call this
109:09 - create folder mod that's going to be ref
109:12 - by default it's going to be false
109:15 - whenever this method is called show
109:17 - create folder model I'm going to set the
109:19 - value to be true so I show the model
109:23 - then using V model I'm passing this
109:25 - create folder model which will be
109:28 - accepted right here as a folder
109:31 - model and model value and then I can use
109:34 - this model value right
109:38 - here um create or show model let's just
109:44 - write like
109:45 - this let's open the browser
109:49 - now let's bring up the terminal just in
109:52 - case we have some
109:53 - errors and hit new folder and this shows
109:58 - this show
110:00 - model okay we need to apply some
110:04 - Styles let's
110:07 - create div with pading
110:11 - six inside there I'm going to create H2
110:14 - let's give
110:16 - it text LG and font medium and let's
110:21 - give it text
110:24 - gray um
110:26 - 900 okay that's going to be create new
110:30 - folder that's the
110:33 - title okay then I'm going to
110:36 - have the body for the model let's give
110:39 - it margin
110:41 - top and inside there I'm going to have
110:44 - the input label and input text I think
110:48 - we have input label and text input as
110:51 - well so let's just use it input
110:58 - label and
111:01 - input input text or text input text
111:05 - input like
111:12 - this to import that and let's provide
111:15 - inside the text input type to be text we
111:20 - provide ID to be
111:23 - folder
111:24 - name uh by the way this input label
111:28 - should be for folder name uh the value
111:32 - is to be folder
111:35 - name and I'm going to move this now
111:41 - down we are going to
111:44 - have the
111:47 - model uh we will Define form right here
111:50 - so that's why I'm going to use form Dot
111:53 - uh form.
111:55 - name let me collapse the left side then
111:59 - we're going to have some classes let's
112:01 - give it um margin top one and block and
112:06 - W
112:08 - full let's give
112:10 - it form.
112:14 - errors.
112:15 - name so if there is error inside the
112:20 - name then we're going to going to give
112:23 - it some red border that's going to be
112:27 - border red 500 and on
112:31 - Focus we give it also
112:35 - border
112:37 - red
112:39 - 500 and also on
112:42 - Focus we give it
112:44 - ring red
112:47 - 500 okay if there is some kind of error
112:50 - otherwise we will leave this empty
112:53 - okay and let's provide Place holder as
112:56 - well Place holder to be folder
113:02 - name and we provide we listen to um
113:07 - enter as well key up. enter and we call
113:11 - method like create folder okay whenever
113:16 - the we hit the enter on this input it
113:18 - will call this create
113:20 - folder and down follow this text input
113:24 - we we're going to show input error as
113:26 - well and basically we can find that
113:28 - information that uh like input label
113:31 - text input Inside Out login as well so
113:35 - if we check the template for out login
113:38 - here we see input label text input and
113:42 - input
113:43 - error okay so now we let's use input
113:48 - error and the message we provide inside
113:51 - input error will be
113:53 - form.
113:55 - errors.
113:56 - name and let's give it class margin TP
114:00 - two now let's define a few things I'm
114:02 - going to Define this create folder which
114:05 - will be under
114:07 - methods FN create folder okay console
114:11 - log create folder let's move these
114:17 - Imports
114:19 - here const form equals
114:23 - use
114:26 - form and we provide name only to be an
114:30 - empty
114:32 - string there are other Imports as well
114:35 - which I'm going to move up as
114:42 - well okay so what now we have this input
114:45 - and label and I think we need now
114:50 - buttons class margin tops six and flex
114:54 - and justify and I want the buttons to be
114:58 - at the right and I'm going to use now
115:00 - secondary button which is again comes
115:03 - with
115:05 - inertia there is this secondary button
115:08 - and there's primary Button as well so
115:10 - I'm going to use those buttons secondary
115:13 - button uh let's give it a cancel text
115:17 - and whenever this is clicked I want to
115:19 - call a method called close
115:24 - model so let's define
115:28 - this function close model which will
115:32 - basically uh emit the
115:35 - value um and updated value for the model
115:39 - value so
115:41 - emit by the way we need to Define emits
115:44 - as well const emit equals Define
115:49 - emits and we provide right here up
115:52 - update column model
115:54 - value so this event name is necessary
115:59 - for two-way data
116:01 - binding okay and now we will emit that
116:05 - that event
116:08 - name which will internally um change the
116:12 - value of
116:14 - this create folder model okay so this is
116:18 - how we're going to do the two-way data
116:20 - binding and then I'm going to call also
116:22 - so on on the form clear errors if there
116:25 - are some errors when we close the model
116:28 - they should be cleared out and I going
116:30 - to reset the model as well when the
116:32 - model is actually
116:35 - closed okay so what
116:41 - else I think we are
116:43 - good now let's test
116:48 - this okay so model is
116:50 - opened uh
116:52 - folder
116:56 - name this is camel
117:08 - case this
117:11 - value that should be older
117:17 - name we can even I think that should be
117:21 - screen reader only okay like this and I
117:24 - want to reduce the width also for the
117:27 - model this model has Max
117:31 - width by default it's two
117:35 - Excel and there are other versions as
117:38 - well and I'm going to
117:41 - provide Max width to be
117:44 - small okay that's more like it that's
117:48 - acceptable uh where is the prim button
117:52 - okay we don't we haven't added primary
117:55 - button this is it I'm going to call this
117:58 - submit and we need
118:00 - to let's give it uh margin
118:06 - left and on click we're going to call
118:10 - create
118:12 - folder we already have that function
118:18 - defined and I'm going to also disable
118:21 - this button if the form is in
118:26 - processing form.
118:29 - processing and just like this the button
118:31 - will be disabled if the form is in
118:34 - processing and we can also give it a
118:38 - different slightly different color or
118:41 - opacity when the form is in processing
118:45 - so again I think we will find this in
118:48 - the login as
118:50 - well exact ly okay so we give it opacity
118:56 - 25 when the form is in processing state
119:00 - so that it gives us more like a disabled
119:04 - feeling okay here we see this model
119:08 - that's perfect now whenever we click
119:12 - this we see create
119:15 - folder right so from here from the
119:19 - create folder we need to make request or
119:22 - we can call form
119:25 - post and provide right here root folder.
119:30 - create and that should send a post
119:33 - request to the following
119:35 - URL
119:37 - however uh that again this is a
119:40 - something U from the inertia and we can
119:43 - find this in the inertia documentation
119:45 - as well and we need to preserve the
119:48 - scroll so preserve scroll I'm going to
119:51 - specify true
119:53 - and on success whenever the folder is
119:56 - actually
119:58 - created uh we need to close
120:02 - model we need to call form
120:05 - resette and maybe in the future we're
120:07 - going to show success
120:12 - notification
120:15 - however if there is some kind of error
120:18 - on error we need to focus maybe inside
120:23 - the input to focus inside the input I'm
120:27 - going to give this input
120:29 - ref uh
120:31 - folder name
120:35 - input okay and then right here folder
120:38 - name input. value.
120:41 - Focus however only this will not be
120:44 - enough we need to Define this folder
120:47 - name input inside refs as well const
120:50 - folder name input equal
120:52 - ref by default we can specify null here
120:55 - this ref is something we need to
121:01 - import and and what
121:04 - else and uh whenever this model is
121:09 - displayed uh we need to also Focus
121:13 - inside the input and I have the feeling
121:18 - that the model has Show event
121:22 - let's check it again I'm going to move
121:24 - this template above the script this
121:29 - confuses me because I'm very used to
121:32 - have the template before script uh let's
121:35 - search
121:37 - for Emit let's search for Emit from
121:42 - everywhere okay we only emit close but
121:45 - we can actually
121:46 - implement the show on the model Show
121:50 - event and when whenever it is displayed
121:54 - then we can we need to listen to that
121:57 - show event because we we're going to
122:00 - have like a reusable mod model
122:02 - component it's going to be good to have
122:05 - this uh possibility to listen to the uh
122:09 - show okay let's go inside the model and
122:12 - I'm going to Define two more events
122:14 - right here show and
122:18 - hide and we are watching on props show
122:22 - and whenever props show is
122:24 - true on the body we call overflow hidden
122:27 - this means that we need to show the
122:29 - model and we can call AIT
122:33 - show and right here we need to
122:37 - AIT
122:39 - hide it's as simple as that and if we go
122:43 - in the create folder model we can now
122:45 - listen to show
122:48 - event and on show let's call this on
122:51 - show
122:54 - function let's define it right here on
122:57 - show and
122:59 - whenever uh we whenever this is called
123:02 - we need to focus inside the
123:05 - input now let's test all
123:08 - that new folder we have an
123:11 - error errors are
123:14 - good read property on null create folder
123:25 - okay we have this ref
123:36 - specified folder name
123:41 - input okay what is this folder name
123:44 - input let's check that
124:00 - so this ref might not be immediately
124:03 - available so I think we need
124:07 - to we need to wrap that because the
124:12 - content is
124:14 - displayed when the model is displayed is
124:17 - shown we check the model we have show
124:21 - here
124:22 - and we have the main slot which is
124:24 - displayed when the show is set to want
124:28 - to um the show is set to true so this
124:34 - ref might not yet be available whenever
124:36 - we are trying to focus I'm going to
124:39 - import next
124:41 - tick and inside next tick I'm going to
124:44 - try to focus make sure that the next TI
124:47 - is
124:49 - imported so if I save that
124:52 - refresh and open now uh there's Focus
124:56 - okay so that's perfect that's good uh if
125:00 - we go in the network and type test here
125:04 - and click submit the request was made
125:07 - the post method is not supported okay we
125:11 - probably need to change this into
125:14 - post
125:16 - save now let's create test submit
125:22 - okay so the response looks like it was
125:25 - successfully completed we have errors as
125:27 - an empty object and we need to check the
125:31 - database let's open files and we see
125:35 - test folder right here which is a child
125:38 - of the parent we see left and right so
125:40 - the right was increased now this
125:43 - basically is a parent of this and it has
125:45 - left less than its child and right
125:49 - greater than its child and this this one
125:51 - also has a parent ID of
125:56 - this this folder is true on both of them
126:01 - and we have updated created by and
126:03 - updated by as well so that's perfect now
126:06 - we have implemented creating folders now
126:08 - let's create
126:11 - documents
126:13 - submit um images let's hit the enter as
126:18 - well and something
126:23 - okay there it's perfect the drop down is
126:26 - not hidden when we open the
126:34 - model hold on when we click cancel it is
126:38 - hidden but when it is
126:41 - saved it is not hidden okay that's weird
126:44 - but we we will figure this out okay how
126:47 - many folders did we create documents
126:49 - images something saved and so on
126:52 - okay that's
126:53 - perfect now let's implement this path
126:57 - because that's going to be the place
126:58 - where we're going to save the parent and
127:02 - basically any ancestors paths as well
127:06 - and in the future we're going to select
127:08 - the folders based on the path so I'm
127:10 - going to open file.php
127:13 - and down below I'm going to create
127:18 - protected protected um
127:22 - static
127:25 - function
127:29 - boot uh I'm going to call parent
127:33 - Boot and then
127:36 - static
127:39 - creating whenever we are
127:43 - creating static
127:49 - creating we accept a model
127:53 - here and if the
127:56 - model here in if that doesn't exists
128:00 - which means that if this is root we
128:03 - don't do anything okay the root can have
128:06 - empty
128:10 - path however if this is not root then
128:15 - Model
128:17 - A needs to be equal
128:23 - model parent if the models parent okay
128:27 - we don't have model parent at the moment
128:30 - so we need to Define couple of relations
128:34 - right here we have this is owned by only
128:36 - method at the moment so let's define
128:39 - public function user first of
128:43 - all belongs to so we return this belongs
128:50 - to user
128:53 - user by the field created
128:56 - by okay in the same way I'm going to
129:02 - Define
129:04 - heent we provide file
129:08 - here and we provide heent
129:12 - ID
129:18 - okay okay that's good
129:22 - now right here at the
129:25 - bottom we can provide if model parent is
129:30 - root we also need to define a method
129:32 - called is root let's define it
129:38 - here return if this heent ID equals null
129:45 - then obviously this is root so if model
129:49 - parent is root
129:51 - if this is not root basically and if
129:55 - this is a normal folder then we need to
129:58 - take model parent
130:01 - path
130:03 - and then we need to
130:07 - um the model's path will
130:14 - be like
130:17 - this and plus we need to so basically
130:21 - the idea is the following we're going to
130:22 - take the appearance path and prefix it
130:26 - to the current modu path if this is not
130:29 - root so in this case if this is not root
130:32 - we take its path uh we
130:36 - prepend and then right here we have the
130:39 - model uh model
130:41 - name however I'm going to convert this
130:45 - model name into slug
130:53 - okay if this is a appearent if this is a
130:56 - root then nothing empty string will be
130:59 - prefixed to the model
131:02 - name uh I think that should
131:06 - work I'm going to save that and try to
131:10 - create a new folder and let's call
131:14 - videos click
131:16 - submit in the
131:19 - database we see video
131:22 - path okay now let's create one more
131:26 - folder with two
131:30 - words we see this as a path whenever in
131:33 - the future we create folder inside the
131:37 - videos or two
131:38 - words uh the inner folder will be videos
131:41 - slash the inner folder inner folder name
131:44 - okay I hope this makes sense now let's
131:48 - create the table in the HTML table and
131:51 - and render created folders right there
131:54 - so I'm going to open my files. view and
131:58 - this this is the place where we're going
132:00 - to render the table uh but let's open
132:04 - file controller first and right here we
132:08 - have this my files and I want to cure
132:10 - now
132:11 - files I'm going to Define folder and
132:14 - this will be get root I'm getting the
132:18 - root in the future this endpoint
132:21 - uh will support
132:23 - also uh rendering content for child
132:27 - folders as well and then we will simply
132:30 - modify this but at the moment we only
132:33 - display content for the root folder
132:36 - that's why we get the
132:38 - folder file
132:42 - cury
132:44 - where parent ID
132:48 - equals um I think this equals is not
132:53 - necessary folder
132:58 - ID next we is to get content only for
133:03 - currently authorized user created
133:06 - by his Al
133:09 - ID and we also want to get files which
133:14 - is not
133:15 - deleted but I think by
133:18 - default by default because it's it has
133:21 - soft deletes right there it will
133:23 - exclude uh deleted files and let's order
133:29 - by uh order by is folder descending
133:32 - first I want to show folders first and
133:36 - then files and then the second order by
133:39 - will be created at
133:44 - descending and I'm going to call Page
133:47 - inate let's show only 10 at the moment
133:52 - all right so we can assign this into
133:55 - files and then pass the
133:58 - data into files now if we open my files
134:03 - we will accept inside props so I'm going
134:07 - to Define props or we can D structure
134:10 - props and take out files equals Define
134:15 - props and files will
134:18 - be an array probably
134:21 - it might be even an object I don't know
134:24 - we will see if we reload the page we see
134:29 - an error created by I have a
134:33 - typo created
134:36 - by
134:38 - reload okay we need to print now the
134:43 - data let's print
134:45 - files and here we see that and it is an
134:49 - object it is not array
134:51 - so we provide object right
134:55 - here that's perfect and the data is
134:58 - exactly what we want so we need to now
135:01 - render a
135:05 - table table let's give it um mean with
135:12 - full we're going to have t
135:14 - head which will have BG gray uh 100 and
135:20 - Border button
135:23 - TR and th each
135:27 - th will have text small and
135:32 - font um
135:33 - medium and text
135:37 - Gray 900 and pting
135:41 - x uh six and pting y4 and text
135:47 - left okay so this is the first column is
135:51 - probably name and let's duplicate this
135:54 - few times we are going to
135:56 - have um owner who is the owner of the
136:00 - file we're going to have last
136:02 - modified and we're going to have the
136:05 - file size okay let's leave it like this
136:08 - at the moment
136:11 - tbody inside tbody we will have TR and
136:15 - we need to iterate now inside our files.
136:20 - data so file
136:23 - off off
136:25 - files. data we need to provide also e
136:31 - here to be file
136:32 - ID and inside we will have TD
136:38 - with BG
136:40 - white order
136:42 - button
136:45 - transition let's give it um duration 300
136:51 - and Easy in out some
136:54 - animations and on Hover we're going to
136:56 - have PG gray
137:01 - 100 and I think that's
137:06 - it um okay but I think this needs to
137:14 - be on the TR not the
137:19 - TD like this
137:21 - as for the TD we will have just pting X6
137:26 - pting
137:27 - y4 white
137:29 - space wh space no
137:32 - wrap white space no wrap and we're going
137:36 - to add text small and
137:42 - font
137:44 - medium text Gray 900 blacks and items
137:50 - Center
137:59 - okay and I'm going to Output file. name
138:05 - here okay so here we
138:07 - see the folders that's perfect let's
138:11 - duplicate these three more
138:13 - times the second will be owner but we
138:16 - don't have
138:17 - owner the third will be last modified
138:21 - which will be updated it and then we
138:24 - have
138:29 - size
138:37 - okay something is
138:41 - broken yeah probably I missed some CSS
138:44 - class so I'm just going to get the
138:46 - classes for
138:48 - TR which looks like correct
138:54 - in Ford which looks like
139:01 - correct okay what is wrong
139:36 - okay this is this
139:38 - is this is
139:42 - funny we have normal
139:47 - TDS like this so if I just remove move
139:51 - them now we see them properly
139:57 - aligned so what's
140:01 - wrong maybe I need to zoom
140:18 - out t one Med text item
140:24 - Center uh let's remove this flex and
140:27 - item
140:35 - Center
140:39 - okay okay and now I'm going to Define
140:42 - resource to return these updated it in a
140:45 - more readable way as well as the owner
140:49 - and some of the information
140:51 - um in a
140:53 - more in a way that is uh printable to
140:57 - the user so I'm going to create new
141:00 - resource PHP artisan make
141:05 - resource let's call it file
141:09 - resource now we open file
141:14 - resource and let's just return an array
141:17 - from
141:18 - here so here I'm going to paste what I
141:21 - want to return I'm returning an ID named
141:24 - slug the the slug is something path okay
141:29 - so I'm returning path uh pent ID is
141:33 - folder M size I'm returning an owner
141:37 - which is something we're going to Define
141:39 - right now and we have created it and
141:43 - updated it created by updated by and
141:46 - deleted it so we have this uh created
141:49 - and updated it
141:51 - uh as a carbon instances that's why we
141:53 - can call diff for humans and this will
141:56 - give us more human readable uh formats
141:59 - so if I save that and go in the file
142:03 - controller
142:04 - and then change
142:07 - files pass this into file
142:10 - resource
142:14 - collection then we see last modified is
142:18 - more human readable let's go in the file
142:21 - and Define
142:23 - the owner as
142:25 - well uh I'm going to Define owner is
142:30 - a
142:33 - property public function
142:37 - owner um we return
142:40 - new
142:45 - attribute
142:47 - get function mixed
142:52 - value and we get array
142:55 - of attributes as
142:59 - well and we return from
143:05 - attributes created by so if the created
143:09 - by equals to the out ID then I'm going
143:15 - to return me as the
143:18 - owner otherwise I'm going to return
143:21 - this
143:22 - user
143:24 - name okay you probably have a
143:28 - question when will be when will I be
143:33 - able to see a content of another another
143:37 - user uh so that we're showing this user
143:40 - me uh in most cases in every case we
143:44 - will have me right because we have only
143:47 - our files whenever we Implement sharing
143:52 - functionality and we will be able to see
143:55 - content of someone else then we will
143:57 - need these part but right now I agree
144:01 - the created by will always be out ID so
144:05 - let's import this attribute I think this
144:08 - attribute is eliminate database eloquent
144:11 - cast attribute so I save that and we
144:15 - need
144:18 - now this new is not necessary that was
144:23 - that was the
144:24 - problem okay so we reload now let's
144:27 - specify that this must return an
144:31 - instance of
144:33 - attribute save and reload and we see
144:38 - successful result now what's the owner
144:42 - owner is me every time what about
144:46 - size size is probably null because we
144:51 - never said this because we are dealing
144:54 - with folders so far folders don't have
144:57 - um size so that's perfect now we have
145:00 - rendered we can zoom in we have rendered
145:03 - the data we just created now if I create
145:06 - new folder let's call this test uh two
145:10 - click submit we see test two at the very
145:13 - top one second to go if I try to create
145:16 - new folder test two again
145:20 - I was able to create that as
145:23 - well
145:25 - however I think we have some kind of
145:28 - validation and that should not be
145:30 - allowed so let's search for store folder
145:35 - request name required
145:38 - unique oops here we have this error it
145:40 - should be created by not created at so
145:45 - if I save
145:46 - that actually tested this couple of
145:48 - times and created many test folders and
145:51 - all of them were
145:53 - created now let's try to create test now
145:56 - we see that test already exist as well
145:58 - as test two already
146:00 - exists all right so I think that's good
146:06 - right now now let's Implement opening
146:09 - file opening folder and uh we're going
146:13 - to basically see a content of that
146:15 - specific folder and I want to also
146:17 - Implement bre crumbs
146:22 - apologies for the
146:24 - sound okay first of all I'm going to
146:26 - delete all these test folders which I
146:29 - have just created we have a lot of test
146:32 - folders so all of them
146:35 - are yeah all of them can be easily
146:42 - deleted okay just like this uh and I'm
146:45 - going to change the right coordinate of
146:47 - these because whenever you manually
146:49 - delete something you might mess up uh
146:51 - like mix up the uh left and right
146:54 - coordinates that's important to know and
146:57 - the right coordinate needs to be the
146:59 - highest child coordinate plus one in
147:01 - this case I'm going to set this manually
147:03 - on
147:04 - 16 okay or like to be absolutely safe we
147:08 - can delete everything and set this right
147:10 - to two save reload the page we don't
147:14 - have any files and folders and by the
147:16 - way we can also display there are no
147:19 - files
147:21 - um text something like
147:24 - this so let's open my
147:27 - files
147:31 - and uh below the table well we can put
147:34 - this table inside if
147:37 - statement if uh files data length if
147:42 - that exists we render the table
147:47 - otherwise we show some some kind of
147:52 - text uh well we can even remove this and
147:56 - we can put this right here so the table
147:58 - headers can be rendered they can be
148:00 - there but if the length doesn't exist we
148:03 - show there is no data in this folder
148:08 - something like this let's give it also
148:11 - ping
148:13 - Y8 text
148:16 - Center text large and text Gray
148:24 - 400 okay that's
148:31 - good now let me expand this table and on
148:34 - this TR I'm going to add double click
148:38 - whenever we double click on the row it's
148:42 - going to uh open the folder so I'm going
148:44 - to call function open folder and pass
148:47 - the file right there the Open folder
148:50 - function does not exist yet but we're
148:52 - going to create
148:54 - that I'm going to scroll down below
148:56 - [Music]
148:58 - under right here open folder we accept a
149:02 - file here first we're going to check if
149:06 - the file is
149:08 - folder if that's false we simply return
149:12 - okay so if we are double clicking on a
149:13 - file not a folder otherwise I'm want to
149:16 - call inertias router visit
149:20 - and we're going to provide rout right
149:22 - here which will be my files but we're
149:26 - going to provide an extra folder
149:28 - parameter right here which we're going
149:30 - to accept in this rad Define and accept
149:33 - very soon so the path will be file.
149:37 - path okay however this path will be some
149:42 - kind of
149:43 - string which contains slashes right
149:46 - there as well now if I open web. pH
149:50 - PHP and check right here we're going to
149:54 - accept Bolder as an optional parameter
149:58 - right here okay but in order to be able
150:01 - to specify that this optional parameter
150:04 - might even include slashes we need extra
150:11 - where here where the
150:15 - folder can be anything in this case we
150:19 - can provide regular expression. and
150:22 - asterisk and symbol okay now this gives
150:26 - us possibility to go in the file
150:29 - controller my files and we can accept
150:33 - right
150:35 - here
150:37 - file call it folder because we call this
150:40 - folder we can accept the folder right
150:43 - here and let's just try to dump the
150:46 - folder
150:48 - here and by default it can also be null
150:53 - so we can provide null here and now
150:56 - let's check it if I reload it is now
151:00 - okay now let me comment this and I'm
151:04 - going to create new folder called
151:05 - videoos the enter videos is there now
151:09 - I'm going to comment
151:11 - this and let's provide videos here hit
151:15 - the enter okay it shows not found
151:17 - because that does not exist
151:20 - okay to make this working there are two
151:22 - ways one way is to change the model's
151:25 - Road key name into a path but that's not
151:29 - what I like instead I'm going to assume
151:32 - that I'm going to accept string
151:34 - basically right here and I'm going to
151:36 - also validate check if the folder user
151:40 - is trying to open belongs to the current
151:42 - user okay so if the given folder exists
151:47 - then the folder equals
151:50 - file query
151:54 - where uh first of all we need created by
151:57 - to be out ID and extra we will be
152:04 - a equals to the folder given folder and
152:09 - then we either get first or fail in this
152:13 - case we can even fail if that doesn't
152:16 - exist or doesn't belong to the current
152:19 - current
152:20 - user okay and whenever we get this
152:22 - folder then before we call this get root
152:27 - we're going to check if the folder
152:29 - doesn't
152:32 - exist then the folder will become root
152:36 - okay now let's actually dump and die
152:42 - this
152:43 - folder reload the page and we see
152:46 - something this is a file attributes and
152:49 - the name is videos so the folder right
152:53 - now is videos that's perfect if I simply
152:57 - remove Slash from the URL hit the enter
153:00 - we see null and the folder right here
153:03 - will be root okay now let's reload now
153:07 - we see videos if I double click on that
153:11 - we have some kind of
153:13 - error router is not defined yep router
153:16 - needs to be imported let's open my file
153:21 - from inertia view3 this needs to be
153:23 - imported reload double click on that and
153:26 - look at this now we are inside videos
153:29 - and we don't see any data right here uh
153:32 - this is large and this is too much in my
153:39 - opinion okay that's better
153:43 - okay that's so cool now we have videos
153:46 - if I double click on that I go inside
153:48 - there now I open this TR and I'm going
153:50 - to give
153:52 - it um cursor
154:00 - pointer that's good double click perfect
154:03 - now let's Implement bread crumbs as well
154:06 - so that we see um if I go inside the
154:09 - folder and if I have like multiple Nest
154:12 - folders I see brecs right there and
154:14 - we're going to also Implement creating
154:16 - folders inside videos right now so impl
154:20 - creating folder inside the nested folder
154:22 - let's open create folder model and in
154:26 - this form I'm going to Define pent ID
154:29 - which is something we already expect on
154:31 - the back end by default this is going to
154:34 - be null but before we send request right
154:37 - here form. parent ID will be uh from
154:42 - page and this page uh we we will use it
154:46 - right now from page we get props
154:51 - then folder and then ID however let's
154:56 - follow step by step this page is
154:58 - something which comes from inertia again
155:00 - you can find this inertia documentation
155:03 - and we can get this from use
155:06 - page okay that's one step then from the
155:10 - page props we can get the folder however
155:14 - the current page is these my files and
155:18 - my files has only one prop that is files
155:22 - and this files prop is given from the
155:25 - file
155:27 - controller all right so from here we
155:31 - need to
155:32 - pass folder the current folder which we
155:35 - already have selected here so then this
155:38 - folder will be available
155:41 - through page. props folder and then we
155:45 - can get the ID however in theory this
155:49 - folder might be um even now or it might
155:53 - not be let's think about
155:55 - it um if the folder doesn't exist we
155:57 - always get the root so it will never be
156:00 - actually
156:01 - now so that's why we can just get the
156:03 - par ID and just like this we will pass
156:07 - the pent ID now let's have a look if we
156:11 - just reload the
156:12 - page create new folder test now hit the
156:16 - submit button and we see test by inside
156:19 - video
156:20 - if I go into my files I see only videos
156:23 - if I double click on the videos I see
156:25 - test if I double click on the test I see
156:27 - nothing and I can create uh nested
156:31 - folder right here as well look at this
156:35 - videos test and
156:37 - nested that's perfect we can create Now
156:40 - new folder documents oops documents here
156:46 - and we see it okay this drop down
156:48 - doesn't disappear we we need to fix that
156:51 - as
156:52 - well but now we have successfully
156:55 - implemented um creating folders inside
157:01 - subfolder now let's Implement bread
157:03 - crumbs I'm going to open this file
157:07 - controller and from here like we are
157:10 - passing files and folders We need to
157:13 - pass the list of the ancestors for the
157:18 - current folder to display it in the view
157:22 - okay so down below let's
157:26 - select um
157:29 - ancestors equals I think I have a
157:33 - typo
157:35 - equals uh for the current folder I'm
157:38 - going to call ancestors I think there is
157:40 - ancestor something like this from this
157:42 - nested set model so I'm going to search
157:44 - for
157:46 - ancestors let's search for
157:50 - category
157:52 - ancestors yeah we can definitely
157:55 - access ancestors property accessing
157:58 - ancestors like this okay so we can
158:01 - access
158:02 - that uh but we also want inside the brid
158:07 - crumbs we want all the parents all the
158:09 - ancestors plus the current folder okay
158:13 - and basically anything that is returned
158:15 - from here I want to
158:17 - be inside the file resource I want it to
158:21 - pass the file resource so that we have
158:24 - the same type of response as we have
158:26 - defined in the file resource so
158:29 - basically I'm going to call file
158:32 - resource collection and we are going to
158:35 - pass an array here we are going to
158:39 - destructure like use this three dots
158:42 - operator
158:44 - to for incestors and we're going to pass
158:48 - uh also f
158:50 - folder okay and just like this we are
158:53 - passing ancestors and the folder uh so
158:57 - far we already have the ancestors what
158:59 - we need but I'm going to uh pass the uh
159:03 - folder into file resources as well
159:08 - so folder equals new file resource and
159:13 - pass folder right there just like this
159:17 - now the ancestors and fold
159:20 - will be available inside my files right
159:23 - here as
159:25 - folder
159:26 - object and
159:28 - anour is a probably and we can use that
159:34 - anour above the table to render red
159:40 - crumbs let's have a look if we have
159:43 - ancestors here we see that so this is
159:46 - actually the root older but if we go
159:49 - inside let's comment this
159:53 - out if we go inside then uncomment that
159:58 - now we see two folders right there okay
160:02 - so now let's render red
160:06 - crumbs I'm going to use nav and let's
160:09 - specify classes uh
160:13 - flex and I need items Center and justify
160:18 - between and pading one and margin bottom
160:23 - three okay then um I need order list and
160:28 - let's provide inline flex and items
160:32 - Center and
160:36 - space um space X1 and MD space X3 as
160:43 - well okay inside there I will need link
160:46 - Le um elements and then I'm use
160:51 - V4 NS of NS stores.
160:55 - data and we have to provide key here as
160:59 - well n.
161:02 - ID and let's provide some classes here
161:04 - as well inline flex and items
161:11 - Center okay and then I can use a link
161:14 - which is the link from inertia uppercase
161:16 - l
161:19 - like this and the link needs to be
161:22 - obviously imported so let's scroll down
161:25 - below and
161:28 - import link
161:32 - from inera
161:35 - view3 this rotor needs to be moved
161:41 - up we also have some other import at
161:47 - button okay so we have this link L now
161:50 - and I'm going to check if the parent ID
161:54 - doesn't exist so basically I don't want
161:57 - to render these root in a bread crumbs
162:00 - so if ancestor parent ID does not exist
162:04 - only in this case we
162:08 - render this link okay
162:13 - otherwise we simply render
162:16 - div and the div can be like um
162:20 - home icon probably so I'm going to copy
162:22 - icon what I already have chosen and
162:25 - paste right
162:26 - here and I'm going to also have a link
162:31 - I'm going to copy that link as
162:34 - well and that's going to be uh that's
162:36 - going to have a rout to my files the
162:39 - folder will be the
162:42 - path and just like this let's specify
162:46 - classes uh that's going to be under V
162:49 - else okay and flex and items
162:56 - Center okay for this link we have to
162:58 - provide
163:01 - hre
163:03 - root into my
163:10 - files okay let's understand now this so
163:14 - if the parti doesn't exist that means
163:18 - that this is is the
163:20 - root okay and if this is the root we
163:24 - need different
163:27 - styles so let's give it some
163:31 - Styles some t one CS classes and then
163:36 - I'm going
163:37 - to paste the icon what I have chosen
163:40 - from hero
163:43 - icons my
163:46 - files have a look okay here we go so
163:49 - this is the home icon and we have
163:51 - documents now we are inside documents if
163:54 - I reload the page we don't have any
163:56 - errors in the console if I click this my
163:59 - files now we are inside the my files and
164:01 - that indicates the root folder if I
164:05 - double click on videos I am inside
164:07 - videos if I double click on test I'm
164:10 - inside my files videos test if I double
164:13 - click on Nest it you get the idea and we
164:16 - can easily uh go to the desired folder
164:19 - what we want like videos for example or
164:21 - my files or whatever okay I think this
164:25 - is awesome and again you can find these
164:27 - hero icons from the hero icons.com and
164:30 - if you just search for home you can get
164:33 - the home or you we can even use the
164:36 - icons because we have installed hero
164:38 - icons package if we just start typing uh
164:43 - home okay let's search
164:45 - for uh right here in this hero icons
164:48 - documentation
164:49 - if you click on
164:51 - documentation scroll down below I want
164:54 - to show you a different ways of uh doing
164:57 - the same
164:58 - thing browse a full list of Icon names
165:01 - if I we click on
165:03 - this we have the icon names right here
165:06 - if I search for home we see home icon
165:10 - and I can type home
165:12 - icon like this but I need to now import
165:17 - that from
165:20 - um from um hero icons which is something
165:24 - um like that takes time so and I just
165:27 - have
165:29 - svgs like we want to go into an import
165:33 - section and write
165:36 - something that we probably have in user
165:39 - settings
165:41 - dropdown something like this like I need
165:43 - to copy that part and put this right
165:46 - here that should be
165:52 - home home
165:54 - icon and
165:56 - then if I save
165:59 - this now we have two home icons this one
166:03 - and we have to provide also
166:05 - classes uh with six and hate
166:10 - six it's too much maybe
166:16 - before okay so this is how you you can
166:19 - use this hero icon home icon from the
166:23 - hero icon package not in svi but again
166:26 - like for me it's really easy to just
166:28 - grab open the
166:30 - documentation right here just type what
166:33 - I want copy SVG and paste
166:36 - it that's super easy for me okay so we
166:40 - have now breadcrumbs also implemented
166:43 - and working awesome now let's start
166:46 - working on uploading files and uploading
166:49 - folders as well we're going to allow
166:50 - uploading folders and we are going to
166:53 - have uploading files through this drop-
166:56 - down menu item and folder and I'm going
166:59 - to also Implement uploading files
167:02 - through drag and drop from our file
167:04 - system into the browser okay so we're
167:07 - going to have pretty rich functionality
167:10 - and let's start with these upload files
167:13 - so uh I'm going to open this upload file
167:20 - menu item or how do I call
167:24 - that let me check this under resources
167:28 - components
167:31 - up okay we don't have this component
167:33 - which I am going to create right now
167:37 - let's go under JS components and we have
167:40 - this create new dropdown and inside
167:44 - there we have this upload files and
167:47 - upload folder so so those two menu items
167:50 - I'm going to move into their own
167:54 - separate components and under
167:57 - up let me create new component call
168:02 - that file upload menu
168:07 - item and the second
168:09 - one I'm going to call this folder upload
168:14 - menu
168:16 - item all right let me grab this and put
168:20 - this in the file upload menu item and
168:22 - the second one will go in folder upload
168:26 - menu item okay first we need to import
168:29 - this menu item from headless UI and that
168:33 - was imported at the very bottom of the
168:35 - script tag I'm going to move this up and
168:37 - I need the exact same import right
168:41 - here we format the code and then let's
168:44 - use
168:45 - here uh file upload menu
168:49 - item and folder upload menu
168:53 - item this should be lowercase I I
168:59 - think or no I didn't correct name it
169:04 - correctly file upload menu item so it
169:06 - was uppercase I I changed it into
169:09 - lowercase i and now inside Imports we
169:12 - need to change this as well into
169:14 - lowercase i here and here otherwise we
169:19 - just don't follow the conventions of
169:22 - naming and here we go so we have those
169:25 - into a separate components now from here
169:28 - whenever user clicks that button not a
169:31 - button but an anchor link we're going to
169:34 - ask the user to choose a file so for
169:37 - this inside this a tag first of all
169:40 - let's give this hre and just a hashtag
169:45 - so that it shows cursor basically and
169:48 - and then inside we're going to create
169:51 - input type file that input type file
169:54 - should be should have position absolute
169:57 - and let's give it left zero top
170:01 - zero
170:03 - bottom bottom zero and right zero and
170:07 - I'm going to give it
170:09 - also uh cursor
170:13 - pointer all right now let's have a look
170:16 - so I save that and in the browser
170:19 - we see this um input type file uh let's
170:23 - give this parent position relative or
170:26 - maybe we should give it to this a tag
170:32 - relative all right now it's inside this
170:34 - menu item and I'm going to hide this so
170:38 - I will give it opacity zero so we have
170:41 - this now hidden uh this cursor pointer
170:45 - doesn't seem to be
170:47 - working but yeah it's not a big deal so
170:50 - whenever we click on this upload files
170:52 - it asks us to choose the file okay
170:56 - that's perfect whenever we choose the
170:58 - file now we want to start the upload
171:01 - process okay we are going to have a very
171:04 - similar logic in this layout the main
171:08 - layout from which we're going to
171:10 - implement the drag and drop
171:11 - functionality so if I open right now
171:14 - authenticated layout so I will create I
171:18 - will add these events to this main tag
171:22 - whenever we Mouse over on the main tag
171:25 - then we will be able to drop files right
171:28 - there and they will be uploaded so
171:30 - because I don't want to have this
171:32 - duplicated logic inside this file upload
171:36 - menu item and inside the authenticated
171:38 - layout because we need uploading files
171:42 - from both
171:43 - components I am going to uh pass chosen
171:48 - files from this file upload menu item
171:50 - into authenticated layout and basically
171:54 - the only place I'm going to implement
171:57 - that uploading functionality will be
171:59 - inside the authenticated
172:01 - layout to transfer data from file upload
172:05 - menu item to authenticated layout I'm
172:09 - going to use event B bus methodology so
172:13 - let me search for the package um meet MP
172:18 - TM package this is what I'm going to use
172:21 - and I'm going to explain it in a
172:23 - second okay it's pretty popular package
172:26 - over like almost 3 million downloads uh
172:30 - per week so let's go into installation
172:33 - section we're going to install in the
172:34 - following way and this package basically
172:37 - is a central place on which we can
172:41 - trigger some events and from other place
172:43 - we can listen to those events and
172:46 - basically from the file upload menu item
172:50 - we are going to trigger the event upload
172:53 - started event pass the chosen
172:56 - files uh from
172:58 - here and inside the authenticated layout
173:00 - we will listen to this event and
173:02 - whenever this event is triggered we will
173:04 - get those files and start the upload
173:06 - process okay first of all let's install
173:09 - this meet let's bring up the terminal uh
173:12 - on the first top I have this mpm run Dev
173:15 - so I'm going to stop this and execute
173:17 - mpm install
173:19 - that was already installed npm run
173:22 - Dev that's perfect and now inside the JS
173:25 - folder where I have uh all my JavaScript
173:29 - files I'm going to create a new file new
173:32 - Javascript file called this event
173:35 - DB okay so this the syntax is the
173:38 - following we're going to import and
173:40 - we're going to Simply uh create um
173:44 - emiter in the following way and then we
173:46 - can listen to certain events and then
173:49 - obviously execute our own code uh we can
173:52 - listen to all events and we can AIT this
173:54 - event so basically we need these
173:57 - two uh lines of code uh to implement the
174:01 - functionality we are basically looking
174:03 - for so let's import this actually let's
174:06 - do like this inside even bus I'm
174:09 - importing the meat creating the emiter
174:13 - and let's delete this and right here so
174:16 - whenever I emit an event like like a f
174:19 - for example the event name I can I can
174:21 - do this as a string but the good
174:23 - practice will be to create constants for
174:27 - these event names so I'm going to export
174:32 - and Define constants right here like
174:35 - file upload started okay and that's
174:40 - going to be let's give it the same name
174:44 - whatever is the name I'm going to put
174:46 - the same thing in the string
174:48 - okay
174:50 - and
174:53 - okay uh I'm going to leave this file
174:56 - right now as it is and from this file
174:59 - upload menu item when the change happens
175:02 - we're going to listen to change and
175:04 - let's call uh files
175:07 - chosen or on file change or simply on
175:11 - change let's make it simple on change
175:15 - all right now inside method
175:19 - let's create this onchange we get right
175:21 - here an event and first of all let's
175:23 - just print event Target
175:28 - files
175:29 - Target okay so whenever we choose the
175:32 - file we can print them and let's give
175:35 - this one also multiple attribute because
175:39 - uh we want to allow uploading multiple
175:41 - files okay now inside
175:46 - the let's choose the file load files I'm
175:50 - going to choose just one file and we see
175:53 - this right here okay let's choose
175:55 - another files like maybe multiple files
175:58 - and click open and we see the chosen
176:00 - files right here okay now from this
176:03 - place I'm going to import the emiter
176:07 - basically we need to also export this
176:10 - emiter from here export const
176:13 - emiter then I will start typing emiter
176:16 - and that needs to be import
176:18 - right here then on emiter I'm going to
176:21 - call Emit and let's pass the constant
176:24 - file name file upload started that also
176:27 - needs to be imported somewhere right
176:29 - here we can manually write the import
176:32 - file upload
176:33 - started and then we are emiting the
176:36 - following event and we're going to pass
176:38 - event
176:40 - Target files now let's go in the
176:43 - authenticated
176:45 - layout by the way we don't have these
176:47 - comments right right here so let me copy
176:50 - these
176:51 - comments paste
176:54 - remove
176:56 - JavaScript and we have everything what
176:59 - we needed and inside hooks I want to
177:02 - call now unmounted
177:05 - hook and on mounted I'm going to import
177:07 - emiter and listen to file upload started
177:12 - event and that be needs to be imported
177:15 - again right here and whenever this
177:18 - happens I'm going to call the function
177:20 - upload files which doesn't exist yet so
177:22 - let's define this function upload files
177:25 - and we get files right here so we can
177:27 - print files right here and from file
177:31 - upload menu item we can remove this
177:34 - console log save that and now let's test
177:37 - this so I'm going to choose couple of
177:40 - files click open and we see conso right
177:44 - here but that comes from authenticated
177:46 - layout all right previously that was
177:49 - coming from this file upload menu item
177:52 - but now this comes from authenticated
177:54 - layout okay so far so good now if we go
177:57 - in the authenticated layout we need to
177:59 - listen
178:00 - to drop event right here as well drag
178:04 - and drop events as well so on this main
178:08 - um let's listen to drop and I'm going to
178:11 - also call prevent right here let's
178:14 - create let's assume that we will create
178:16 - like a handle drop
178:19 - function Okay let's listen to drag over
178:23 - as well and we need to call prevent as
178:26 - well on drug
178:29 - over and the last event I want to listen
178:32 - is drug
178:34 - leave prevent on drug leave all right
178:40 - now on uppercase Tru and uppercase L
178:44 - leave now we need to Define these
178:46 - functions so I'm going to copy all three
178:47 - Nam names let's come down below and
178:50 - maybe before
178:52 - that okay let's create multiple cursors
178:55 - and
178:56 - FN
178:58 - oops actually let me try one thing so FN
179:02 - and tab okay yeah it creates three
179:05 - functions paste the function names and
179:07 - now we need to do a few things right
179:10 - here here I'm going to Define one ref
179:15 - const drag over let's call it like this
179:19 - I'm going to import the ref and the
179:21 - default value will be false
179:23 - whenever uh the mouse will be the file
179:26 - will be dragged over on the container on
179:29 - this main element I'm going to set this
179:31 - drag over. value to be true whenever on
179:36 - drag leave I'm going to set this into
179:38 - false okay uh I'm going to move this
179:40 - down because that's going to be the
179:42 - largest function all right so we have
179:46 - those functions let's C up them and on
179:49 - handle drop we're going to accept an
179:51 - event and the files basically will be
179:54 - under event data
179:58 - transfer. files okay those will be the
180:01 - files that will be dropped inside the
180:05 - HTML element so
180:07 - const const files equals that and also
180:12 - when we drop the files we're going to
180:13 - set uh drag over. value equals false and
180:19 - we're going to also check if no files
180:21 - are dropped for example if you drop a
180:26 - folder uh basically there will be no
180:28 - files
180:29 - dropped or if you just drag and drop
180:33 - something right here inside uh then it's
180:36 - going to also uh call this drop event
180:39 - but no files will be there so we're
180:40 - going to test that we can print this
180:43 - files but we're going to check files if
180:46 - files. length does not exist let's put
180:49 - exclamation here then we simply return
180:53 - but if that exists then we call upload
180:56 - files and we pass those files okay but
181:00 - why do we need this drag over this drag
181:02 - over is a flag kind of um indicator that
181:07 - right now we are Mouse overing we're
181:10 - just dragging files on that element and
181:13 - we need to um change some Styles we
181:17 - probably need to write WR a text drop
181:18 - files here to upload or something like
181:20 - this so that's why inside this main I'm
181:24 - going to create my
181:28 - template and um inside the if if the
181:33 - drag over is there so if we are dragging
181:35 - right now let's give this some classes
181:38 - like
181:39 - text text Gray uh 500 and text Center
181:46 - and pting Y eight and text small and
181:50 - inide there let's just write drop files
181:54 - here to
181:55 - upload and I'm going to create another
181:58 - template and wrap with v else and wrap
182:03 - everything what I had so far inside this
182:07 - template okay we have this drug over now
182:10 - let's save this and test this uh I'm
182:14 - going to now bring up a window
182:18 - where I have the images here I have this
182:21 - window uh I think I need
182:23 - to reduce the size of that all right and
182:28 - I'm going to just drag and drop my file
182:30 - here and as we see drop files here to
182:33 - upload so this screen is visible I'm
182:35 - going to move this on the
182:37 - right and here we go so drop files here
182:40 - to upload however the styles are not
182:44 - perfect definitely so
182:48 - let's let's give this one
182:53 - class if drug over is true I'm going to
182:57 - add a class called like a drop zone
183:00 - otherwise nothing will be added inside
183:03 - classes and let's scroll down below and
183:06 - under styles do we have styles
183:09 - here uh no we don't have so let's Define
183:13 - style and inside style let's give it um
183:20 - scoped okay and insde style under Drop
183:25 - Zone we are going to give it like um
183:29 - let's give it width
183:31 - 100% hate
183:33 - 100% uh let's give it um color some gray
183:37 - color I want to give it like eight I
183:40 - have this color eight um d uh D 8 d8d
183:46 - like this let's give it all also border
183:50 - 2 pixel dashed gray let's give it
183:55 - display Flex
183:58 - justify content Center and align
184:03 - align items Center okay let's save it
184:08 - and try to drag and drop okay now that's
184:12 - much better so we have these drop files
184:14 - here to upload we can even go uh like a
184:17 - step step further and add those events
184:22 - not to main but right here as
184:28 - well not sure if this is going to be the
184:30 - great idea but if we can try it and we
184:34 - can observe what's going to be the
184:35 - result so we save
184:41 - that uh uh uh it's not ideal definitely
184:45 - okay let's return this pack
184:48 - obviously let we can experiment with
184:50 - that and apply some CSS Styles but I
184:52 - think that's fine so we the main is that
184:54 - we're going to implement drug and drop
184:56 - functionality and that's going to be
184:58 - fine so whenever I drop now I'm going to
184:59 - release
185:01 - Mouse okay and we see right here files
185:05 - and I guess this is printed two times
185:06 - isn't
185:09 - it yeah this is printed two times once
185:12 - from here and second from here but
185:16 - whenever there are no files like a
185:19 - folder okay let's try to drop a folder
185:21 - not sure what will happen but let's try
185:24 - when I drop
185:27 - something okay this is a
185:32 - folder okay let's try to drop folder
185:36 - which has files inside there this was
185:39 - probably an empty so let's grab this
185:42 - drop
185:43 - [Music]
185:45 - here okay so that is a folder
185:54 - and yeah we can handle this case if we
185:56 - are dropping a folder we cannot actually
185:58 - read the files uh we can identify that
186:02 - this is a
186:04 - folder and maybe don't do any action
186:07 - because we can't actually take the files
186:10 - and send those files to the back end
186:12 - because that's simply a folder if we
186:14 - drop a file it has
186:16 - different uh properties there it has the
186:20 - name the name is here as well by the way
186:23 - it has Type list now here we don't have
186:28 - type all right now in any case now we
186:32 - have those files and we need to send
186:35 - those files to the back end so for this
186:40 - we are going to Define form right
186:45 - here const uh let's call this file
186:49 - upload form equals use
186:53 - form okay we need to import this use
186:56 - form and let's define files so we're
186:59 - sending files right here and I'm going
187:01 - to also Define parent ID okay so that is
187:05 - very important we need to send also to
187:07 - the packet in which folder I am
187:10 - uploading files right now because at the
187:12 - moment I'm inside the nested folder if I
187:14 - go in the my files I in the main folder
187:17 - folder and I'm uploading files right
187:19 - here okay so that's important that's why
187:21 - we're going to need PR ID here and if we
187:25 - scroll down below we have these upload
187:28 - files and inside upload files we are
187:30 - going to send the request we have this
187:33 - file upload form and let's set parent ID
187:38 - here and that will be page and again we
187:42 - need
187:43 - to use the page const page
187:48 - page equals use
187:51 - page use page needs to be imported from
187:55 - inertia and then right here on page
187:59 - props folder ID okay we always have this
188:04 - uh props folder so that's why we take
188:06 - its ID and we also need to assign files
188:10 - obviously file upload form. files equals
188:14 - files chosen files and just like this we
188:18 - can send request right now file upload
188:23 - form. poost and we're going to send that
188:27 - into a route which we don't have yet so
188:30 - let's open web.php
188:33 - and let's define this rout I'm going to
188:35 - collapse the left
188:37 - side and right
188:39 - here I'm going to Define New Road
188:43 - Post
188:44 - file store
188:48 - and let's give it
188:49 - name file.
188:52 - store now let's
188:54 - open file
188:57 - controller and we need to
189:00 - Define store here public function store
189:05 - okay we also need to define the request
189:09 - the form request class PHP artisan
189:15 - make make
189:19 - request colum here make request um store
189:25 - file
189:28 - request okay that was created and let's
189:31 - go inside store file request right now
189:35 - and I'm going to extend this from base
189:39 - parent ID base request okay because this
189:42 - will also need parent
189:45 - ID okay I'm going to remove this
189:48 - authorized and inside rules I'm going to
189:50 - Define now
189:52 - files files. Asic so I'm indicating that
189:57 - files will be list not a single file and
190:01 - then for each file we are going to have
190:03 - the following rules each file needs to
190:06 - be
190:08 - required uh and then it must be valid
190:12 - file and I'm going to also add like a
190:16 - custom
190:18 - validation function here let's accept
190:21 - right here
190:23 - attribute and value and also fail which
190:28 - going to be the function which we're
190:30 - going to
190:31 - call uh whenever the validation will be
190:34 - failed all right so why I need this
190:36 - custom function I I want to
190:40 - restrict uh ability to upload files with
190:44 - the same name inside the same folder
190:48 - so basically this value will be uploaded
190:52 - file so I'm going to write a query like
190:56 - file
191:00 - query where the name of the
191:03 - file equals to Value let's define let's
191:09 - um let's add right here annotation for
191:13 - hore value is an instance of
191:18 - um excuse me
191:21 - VAR value is an instance of uploaded
191:26 - file from illuminate HTTP now on this
191:29 - value I
191:30 - can um call the method get client I
191:34 - could actually call the method obviously
191:36 - without this annotation just whenever I
191:39 - add this annotation now PHP storm
191:41 - autocompletes that for me get client
191:45 - original name
191:48 - and then I
191:50 - call where created by is the current
191:55 - user Al
191:57 - ID and I also call parent
192:02 - ID um parent ID is this parent ID
192:09 - remember we have this parent ID defined
192:11 - in the parent ID base
192:14 - request right here so we obviously can
192:16 - access
192:17 - that parent ID and I'm going to also
192:21 - exclude those which is deleted so we
192:25 - have to specify we are
192:27 - now deleted
192:30 - at and simply we're going to call
192:33 - exists okay and let's assign this into
192:38 - file single file and then we check if
192:42 - the file
192:45 - exists that's a problem let's put this
192:47 - inside parenthesis if the file exists
192:50 - then I'm going to call fail and let's
192:53 - give it a message like file in the file
192:57 - name in this case value get client
193:01 - original name file um
193:06 - already
193:09 - exists and let's put the original file
193:12 - name into double
193:15 - quotes all right
193:17 - let's save this and basically whenever
193:21 - um whenever the validation will passes
193:24 - inside file
193:28 - controller um excuse me store file
193:31 - request excuse me file request we get
193:36 - this request and let's just get data
193:41 - equals request validated data and now
193:45 - I'm going to dump and die entire data so
193:51 - we save that and let's choose now file
193:53 - from here let's justo three files open
193:57 - now let's see we have an
193:59 - error H undefined reading H okay let's
194:04 - check the request was not
194:07 - made okay let's reload the page and just
194:11 - choose one file we see error right here
194:14 - upload files oh
194:17 - obviously we don't pass the URL that's
194:21 - the problem so let's call root and we're
194:25 - going to pass the root name and this
194:27 - going to be file store file.
194:32 - store let's save
194:34 - it and let's choose a
194:38 - file
194:41 - okay let's reload again choose the file
194:47 - okay now the request was
194:49 - made that's
194:51 - perfect however deleted a is something
194:56 - typo inside store file request deleted
195:01 - it we save
195:03 - it and choose another file and now we
195:07 - see data we see files which is uploaded
195:11 - file and if we choose multiple
195:15 - files we see five files right here
195:18 - awesome if I go inside
195:20 - documents and then upload files like
195:24 - multiple
195:25 - files I see files only do we pass perent
195:31 - ID let's check it inside payload we see
195:34 - parent ID as an empty okay maybe we
195:37 - don't pass parent
195:41 - ID let's go in the authenticated
195:45 - layout page props
195:48 - folder ID okay let's check what is Page
195:55 - props
195:58 - reload and choose
196:03 - files page props has a folder there and
196:08 - the folder has
196:10 - data
196:12 - ahuh that is the
196:15 - case okay we can get this from
196:19 - folder.
196:21 - data but I'm going to actually try to
196:25 - disable this data file
196:29 - resource let's give it rra equals
196:35 - false if we do it like
196:38 - this
196:41 - now let's have a
196:43 - look okay Network
196:47 - parent ID that was passed however we
196:49 - don't see this parent ID right here
196:53 - under validated data why is it not there
196:57 - probably because we lost that rule we
197:02 - obviously obviously lost that rule
197:04 - because we over um overrode the rules
197:08 - method we're going to call array merge
197:11 - right here called
197:13 - parent rules
197:17 - and then merge it with our own rules now
197:22 - once again if we try to
197:26 - upload files now we see parent ID here
197:31 - as well which is awesome and
197:34 - fantastic all right that's great now we
197:37 - have the data inside the file controller
197:40 - however before I proceed and implement
197:42 - this store file request I want to um I
197:47 - want to implement also uploading folder
197:50 - because it's going to be very similar to
197:52 - uploading files but we're going to make
197:55 - some
197:56 - modifications in the um store file
197:59 - request and prepare this finalize this
198:02 - and then went into the file controller
198:05 - and implemented right there okay now
198:08 - let's try to choose the
198:11 - file we have this folder upload menu
198:14 - item so that's going to be pretty
198:16 - similar so I'm going to copy
198:20 - this uh paste here let's give it
198:24 - um let's give it hre hashtag
198:30 - and hre hashtag and
198:37 - relative
198:38 - okay we can listen to onchange
198:43 - however we need to specify uh something
198:46 - right right here and that will be
198:49 - directory we have to provide that this
198:52 - needs to be directory and web kit
198:55 - directory as well however we're going to
198:58 - search basically uploading
199:00 - directories upload
199:03 - directories um
199:05 - HTML JavaScript something like this so
199:08 - basically this is not a
199:11 - standard uh mdn let's search
199:15 - for mdn
199:18 - n okay webkit
199:22 - directory this is exactly what we are
199:24 - going to use
199:27 - however I think that is not implemented
199:33 - in every browser but that actually works
199:37 - here I remember when I was like um um
199:39 - preparing for for this project I came
199:42 - across to an article or something that
199:45 - um it is not kind of standard and it
199:47 - might not work in every browser but it
199:50 - works in Google Chrome it works probably
199:54 - in um Firefox as well in like the
199:57 - Evergreen browsers probably hopefully it
200:00 - will
200:06 - work okay so that's great this is
200:08 - exactly what we wanted we have specified
200:10 - this directory and webkit directory now
200:13 - let's define this on change function
200:17 - and on change and we accept an event
200:21 - here and obviously we are going to get
200:23 - even Target files from here and I'm
200:25 - going to also use
200:27 - emiter and emit file upload
200:32 - started plus event Target files event
200:38 - Target
200:41 - files is the emitter imported no it was
200:45 - not imported
200:47 - okay so that is that is awesome now we
200:51 - save
200:52 - it and have a look upload folder okay
200:56 - now we have ability to choose folder
201:00 - upload upload and here we go so we see
201:04 - parent ID and we see files and the files
201:08 - there are 26 files inside the folder
201:10 - which CH so we we see all the
201:13 - files however there's one tricky thing
201:17 - if I
201:18 - upload a folder which contains
201:21 - subfolders right
201:24 - there the content which will be created
201:28 - right here in our file manager needs to
201:31 - reflect the uploaded folder structure so
201:34 - if there are folders it needs to also
201:37 - create folders right there but whenever
201:40 - we upload a like a folder and let's do
201:43 - like this this e-commerce product inside
201:46 - there we have folder another folder so
201:48 - if I choose this e-commerce product
201:51 - upload it shows me that there are six
201:55 - files
201:56 - totally however if we check these
201:59 - e-commerce products there are three
202:02 - files here and then a folder and inside
202:06 - there we have three another files okay
202:10 - and by the way these are the e-commerce
202:11 - files uh from my um premium course
202:15 - building a lot Lal Ecommerce file if you
202:17 - want to check this course you can check
202:19 - my website thecode holly.com you will
202:22 - find like about 23 hours content and I'm
202:25 - working on the update as well on that
202:28 - course all right so we need some kind of
202:32 - um modifications so that reflect the
202:35 - structure which is inside the folder we
202:37 - we're uploading and that needs to be
202:39 - done on the client side because as soon
202:42 - as those files are
202:43 - submitted there is no way
202:47 - to understand and realize on the backand
202:51 - in which folder those files were
202:55 - located so when we choose those files
202:58 - let's go in the authenticated layout and
203:03 - we have the props I'm going to remove
203:05 - this and we have upload files and these
203:10 - are the files which I'm going to print
203:12 - right now and we are going to observe
203:16 - that
203:19 - okay let's choose the
203:21 - folder e-commerce products upload now
203:26 - let's have a
203:28 - look six files and if we expand them we
203:31 - see webkit a relative path okay so this
203:36 - file keyboard.jpg is inside e-commerce
203:39 - products so this is inside e-commerce
203:42 - products this is inside e-commerce
203:45 - products however
203:46 - cheer is inside e-commerce products SL
203:50 - test/ cheer and this one is inside
203:54 - e-commerce products
203:56 - test um then this is the name okay so
204:00 - this web kit relative path is
204:04 - something that is the only way to
204:07 - identify inside which folder the file is
204:09 - located so we need to pass that
204:12 - information to the back end to PHP side
204:16 - and then construct the proper tree of
204:20 - files and then where necessary we're
204:23 - going to create folder in this case
204:25 - we're going to create folder of
204:27 - e-commerce products then inside there we
204:31 - will create three files those files
204:34 - keyboard and MX Masters and this and
204:37 - we're going to also create one folder
204:39 - inside this e-commerce products and the
204:41 - folder name will be test and inside
204:43 - there we're going to create um three
204:45 - more files okay this
204:49 - is right
204:51 - here three more files this is the way
204:54 - we're going to do so we need to pass
204:57 - that webkit relative paths for all
205:00 - uploaded
205:01 - files to the back
205:04 - end let me open now uh my authenticated
205:08 - layout and inside this form I'm going to
205:12 - add a property called relative
205:17 - relative
205:20 - paths all right and that's going to be
205:23 - an
205:24 - array and right here not here let's
205:28 - remove it and right here when we set
205:33 - files I'm going to also set these
205:35 - relative
205:37 - paths which will be to map each
205:42 - file I'm going to call files map
205:47 - however I am um using this rest the
205:50 - spread operator to basically destructure
205:54 - these files and create new array because
205:59 - the files itself is not an array and I
206:02 - cannot directly call map on the
206:05 - files in this case I want to call map
206:08 - and each file needs to be mapped its own
206:11 - web kit relative path so F web kit
206:16 - relative path and now finally I will
206:19 - have relative paths right here which we
206:23 - can easily
206:25 - test if we choose this we can easily
206:30 - check this in the
206:32 - network we see relative paths right here
206:35 - okay so we have that information but we
206:37 - need that information now on the backend
206:40 - side now backand
206:42 - knows uh where each file should be
206:45 - located
206:46 - in terms of in which folder it should be
206:49 - located now we're going to open this
206:51 - store file request and we're going to
206:54 - prepare the data properly right
206:58 - here I'm going to Define method right
207:00 - here
207:02 - prepare prepare for
207:05 - validation and from this
207:09 - relative paths so I have this these
207:12 - relative paths and I want to
207:16 - well I want to also filter these
207:19 - relative paths because it might be an
207:22 - empty array as
207:25 - well uh it might be list of empty arrays
207:29 - if we are for example choosing multiple
207:34 - files in this case relative paths will
207:37 - be list of empty arrays and if this is
207:39 - the case we're uploading files and we we
207:42 - need to also detect that we are not
207:45 - uploading folder we are uploading files
207:48 - and that's why we need to do it
207:50 - differently so I'm going to call array
207:53 - filter right here on this uh if this
207:57 - relative paths for some reason does not
207:59 - exist we can take it as an empty array
208:01 - just a small extra security check and
208:05 - obviously we are going to write a filter
208:12 - function if F does not equal to n I'm
208:18 - going to use right here um just
208:21 - exclamation mark and equal sign by the
208:25 - way this symbol this strange symbol
208:29 - right here is done through the because
208:31 - of the theme I'm using but actually I
208:34 - have written exclamation mark and equal
208:37 - sign and it automatically displays that
208:41 - um okay I am not using double equal
208:44 - right here exclamation and double equal
208:46 - because this might be an empty string as
208:49 - well so I want I don't want it to check
208:52 - also
208:53 - types okay perfect now we have these
208:57 - paths and I want
208:59 - to call
209:01 - merge and pass this file paths which
209:06 - will be
209:08 - paths okay and I also want to create one
209:13 - extra property called folder name
209:17 - and that's going to
209:19 - be that's going to be the folder
209:22 - name um which I am
209:25 - uploading so even if I'm
209:28 - uploading um like a folder name behind
209:32 - we still submit multiple files all the
209:35 - files which are located inside that
209:37 - folder right but in this case if we if
209:42 - I'm uploading folder folder is the key
209:45 - if this there exists a folder with the
209:48 - same name inside the folder I
209:50 - uploading then it should be prevented
209:53 - for example if I'm uploading this test
209:56 - folder right here inside
209:58 - documents um and I choose this test from
210:03 - here finally it will give me three files
210:06 - and it will send those three files to
210:08 - the back end but the key right here is
210:11 - the test I need to check if the test
210:14 - already exists inside the documents
210:17 - folder then I need to show an error to
210:20 - the user that there already exists test
210:23 - folder however if I'm
210:26 - uploading those three files without
210:29 - uploading the folder then those three
210:31 - files will be directly available right
210:34 - here and displayed right here and then I
210:36 - need to check if those three files one
210:39 - of those three files by their names is
210:43 - already available right here okay I hope
210:45 - this makes sense now right here I'm
210:48 - going to call a function non-existing
210:50 - function right now but I'm going to
210:51 - create that function
210:53 - detect detect folder
210:58 - name okay and I'm going to pass paths
211:01 - right
211:02 - there okay and down
211:05 - below I think I need to zoom out
211:08 - slightly maybe yeah down below I'm going
211:11 - to create this detect uh folder name
211:14 - function public function
211:16 - detect folder name we accept paths right
211:23 - here and if paths doesn't
211:28 - exist if this is an empty array or it
211:31 - doesn't exist we return now which means
211:35 - that there's no folder we are not
211:37 - uploading folder okay however if the
211:41 - paths
211:42 - exist then we need to do the following
211:46 - we are going to call
211:48 - explode and split the very first
211:53 - path path zero we're going to take the
211:57 - very first path split that and there
212:00 - going to be parts
212:03 - right and then I'm going to return Parts
212:06 - at zero the very first part again if we
212:10 - have a look right here so we're going to
212:13 - split that the very first path and take
212:17 - the first part and that's going to be
212:19 - the folder name the folder name which I
212:22 - am
212:24 - uploading all right now since we have
212:26 - that folder name I can write a rule
212:31 - inside rule
212:33 - section for folder
212:37 - name and that can be nullable that's the
212:40 - first thing we need to
212:42 - specify and it must be string and I'm
212:46 - going to create similar custom
212:49 - validation function with some difference
212:53 - so right here the value will be the
212:56 - folder name
212:59 - oops the value will be the folder name
213:02 - so in this case I'm going to check um
213:05 - file query where the name equals value
213:10 - itself we are created by is the
213:14 - currently authorized user
213:17 - um parent ID is
213:19 - this uh deleted that is this and exist I
213:22 - think that looks correct we can
213:25 - optionally add extra check if is folder
213:28 - equals one
213:30 - however if there
213:33 - exists a file with name test for example
213:38 - or test.
213:40 - jpg let's Skip and don't allow creating
213:43 - folder test. jpg as well okay so we
213:48 - basically don't care if it is file or
213:50 - folder if for the current user there
213:54 - exists in the current directory not
213:57 - deleted file then we need to show an
214:00 - error in this case the error will be
214:03 - folder uh let's remove this folder for
214:07 - example test already
214:10 - exists however however we need to do
214:14 - this only in case when folder name
214:17 - exists and it is not null or an empty
214:19 - string so let's add right here
214:22 - if value
214:26 - exists we do this only in this
214:30 - case VI Versa we're going to do right
214:33 - here we're doing this validation
214:36 - checking every uploaded file every
214:40 - uploaded file pay attention so we have
214:42 - asterisk right here we're going to check
214:44 - every uploaded file if that is
214:47 - unique inside the current folder for the
214:51 - current user only in case when folder
214:54 - name is not uh when it is empty when it
214:58 - doesn't exist because if the folder name
215:01 - exists it means that we are uploading
215:03 - folder not individual files and we need
215:05 - validation for that folder okay I hope
215:09 - this makes sense so
215:11 - if
215:14 - this folder
215:16 - name does not exist I'm using
215:19 - exclamation here if the folder name does
215:21 - not exist then I'm doing I'm applying
215:25 - this
215:27 - validation okay that's perfect that's
215:32 - good I think we have the validations
215:34 - ready and I'm going to make a quick test
215:37 - right
215:38 - now I'm going to go inside this my files
215:40 - and I'm going to create new folder
215:41 - called test okay I submit that now I
215:45 - have test right here and now I am
215:47 - uploading files those three files click
215:50 - okay and I see this code which comes
215:53 - from file controller we have folder name
215:55 - now parent ID and files now I'm
215:58 - uploading a folder test folder click
216:02 - upload upload and let's have a
216:06 - look let's have a
216:09 - look we have some kind of Errors let me
216:11 - reload the
216:13 - page and upload
216:18 - folder my
216:21 - files okay here we see inside preview
216:24 - under props and errors we see folder
216:27 - test already exists so that proves that
216:31 - we have implemented validation let's
216:34 - close this where is this store file
216:36 - request we have implemented validation
216:39 - properly and now we have the data
216:42 - correctly available in the file
216:44 - controller
216:46 - however there is another one however the
216:49 - data we are sending right now is flat
216:53 - even if we are
216:56 - choosing this e-commerce products folder
216:59 - which has nested folder inside there the
217:02 - data that is right there is still flat
217:06 - okay and we need to construct a tree
217:10 - type of structure so that inside the
217:13 - controller we will accept that tree type
217:16 - of
217:17 - structure and simply iterate over this
217:21 - tree Traverse the tree and then create
217:24 - files and folders According to which one
217:28 - is necessary
217:30 - okay in this store file request I'm
217:34 - going to create one more function which
217:37 - will be past validation okay that's the
217:41 - uh reserved name function and as you see
217:44 - right here small indicator that
217:46 - indicates in the phorum that uh that
217:50 - overwrites the method in the parent
217:52 - class okay and right here we are going
217:57 - to call the method
218:01 - replace uh file tree okay well replace
218:06 - probably is not the ideal name in this
218:08 - case because we aren't actually
218:09 - replacing but we are setting the file
218:11 - tree right here uh and let's get the
218:16 - validated data that function by the way
218:18 - will be called only when the validation
218:20 - is
218:23 - passed so in this case I'm getting
218:26 - validated
218:27 - data and I'm going to create now a
218:31 - function
218:32 - called build uh
218:36 - file file
218:39 - tree like this and I'm going to pass
218:42 - these file
218:44 - paths and I'm going to pass data files
218:49 - okay so these file paths is you know
218:53 - what this is so we have set these file
218:56 - paths and those are the paths we sent uh
219:00 - from the front
219:01 - end okay uh we don't see payload for
219:06 - some reason right here but um previously
219:09 - we saw that the file path and the data
219:12 - files is the actually uploaded files and
219:16 - now the key thing is this build file
219:20 - tree so at the very bottom let's create
219:23 - this maybe private function build file
219:26 - tree we accept file paths and we accept
219:30 - files right here
219:33 - okay and first of
219:37 - all uh we're going to check if the file
219:41 - paths and files are actually the equal
219:45 - size
219:47 - array okay and this is important and let
219:50 - me explain why so if I
219:56 - create uh folder for example entire
220:00 - pictures folder click
220:04 - upload then under files we see
220:09 - this uh
220:11 - 86 files
220:15 - okay we should not have right here 86
220:18 - files and by default when you upload uh
220:21 - files by default the default setting um
220:24 - is 20 files so basically PHP will only
220:29 - take first 20 files and the rest of the
220:33 - files will be simply forgotten okay
220:37 - while I was like preparing for this
220:39 - project I changed some configuration in
220:42 - the docker container and now it uploads
220:46 - 500 files so this is we're going to also
220:48 - see and learn how to make those changes
220:51 - but right now I'm going to revert those
220:54 - changes and right here we will only see
220:57 - 20 files when we upload more than 20
221:00 - files okay I'm going to pause the
221:02 - recording just revert those change and
221:05 - then we're going to see 20 right
221:08 - here okay I reverted the change in the
221:11 - container Docker container which I made
221:14 - and whenever it's time we're going to
221:16 - redo this change and you're going to
221:17 - also see how you can increase the number
221:19 - of files and load files to be uploaded
221:22 - or how you can increase the file size
221:24 - when you're running your application in
221:26 - the docker container using blal sale in
221:29 - this case let's choose upload folder and
221:32 - I'm going to choose entire
221:34 - pictures and let's have a look now as
221:37 - you see we have only 20 files right here
221:41 - however if we observe the
221:43 - payload we see
221:49 - see okay this is something else hold
221:54 - on okay so we
221:57 - sent
221:59 - uh actually my bed um all files were
222:03 - sent and all relative paths were sent
222:07 - but the files got lost and the relative
222:10 - paths will probably be available and
222:13 - will be right there but the point is
222:16 - that inside relative paths we're going
222:17 - to have much more records than inside
222:20 - files and I think the ideal case will be
222:23 - to demonstrate this right here I'm going
222:26 - to dump and die file paths and
222:32 - files that will be much better to
222:36 - show let's click
222:40 - upload okay now let's have a look so we
222:42 - have 86 file pack
222:46 - as you see but we have only 20
222:49 - files so this is something we need to
222:52 - consider when we are building the tree
222:55 - because even though we might increase
222:58 - the number of allowed files from 20 up
223:02 - to
223:03 - 500 user might still upload more than
223:08 - 500 and then we just need to match the
223:12 - file paths uh length to the length of of
223:15 - the files that's why I'm going to do the
223:18 - following file paths equals array
223:22 - slice from file paths zero is the um
223:27 - starting position and count of files
223:31 - will be the ending position in this case
223:35 - if I just dump file paths and files we
223:40 - can see both of them will be 20
223:46 - this is 20 I'm uploading the same thing
223:49 - hold on from file paths okay this is
223:53 - what we need to do okay file paths and
223:58 - files perfect now let's build this
224:02 - tree this file paths is something which
224:05 - I'm going to call also array filter
224:07 - because if we are uploading files not a
224:10 - folder then each file path will be an
224:13 - empty string so
224:16 - let me actually get this from
224:22 - here uh file paths
224:26 - equals filtering file paths where each
224:29 - of them is not null or is not an empty
224:32 - string and now let's build tree tree is
224:35 - an
224:37 - array and for each file
224:42 - paths is we need all also an index right
224:46 - here in the file
224:50 - path okay now I'm going to split explode
224:55 - the file
224:56 - path using
225:01 - slash okay and we will have
225:05 - Parts like
225:06 - this and now I'm want to create a
225:09 - variable called current node which will
225:11 - be uh which will be tree and we can take
225:15 - take this trip by reference we should
225:16 - take this by reference because we are
225:18 - going to modify this current road we're
225:21 - going to put something inside there and
225:24 - that should be inserted inside the tree
225:28 - okay and now I'm going to iterate over
225:31 - parts we have exploded and I'm going to
225:34 - also take I right here as an index now
225:38 - let me explain this clearly let's say we
225:41 - have folder called test and inside there
225:43 - we have one dot jpg okay jpg as simple
225:47 - as that we're exploding this with the
225:51 - slash so inside Parts we're going to
225:53 - have two um two array Two element array
225:57 - test will be one and one. jpg is will be
226:02 - second so here I'm checking
226:05 - if the current node or the part in this
226:10 - case for test if that does not exist so
226:13 - we're going to do this using is set if
226:16 - that does not
226:19 - exist then I am setting this current
226:22 - node or part equals an array okay so
226:27 - finally I'm building um
226:30 - something like this so I will have um an
226:36 - array inside there I will have
226:40 - test which will be an array okay and
226:44 - inside
226:45 - there I will have
226:48 - one.jpg
226:50 - so that indicates that there's a test
226:53 - folder and inside there there's one
226:55 - jpg so this is my final goal how I want
226:59 - to do
227:00 - this okay and I also want
227:05 - to uh right now I'm working on the file
227:07 - paths and finally I will have a least a
227:10 - tree of file paths but not an actual
227:14 - files so I'm going to check whenever
227:18 - this is the index from these parts
227:21 - whenever the index is the last index
227:25 - which indicates that this is a file not
227:27 - folder anymore okay so whenever I equals
227:32 - count of
227:34 - Parts minus one so this is the file now
227:38 - inside current node or the given part we
227:42 - are going to put an actual file and that
227:46 - will be from
227:48 - files from
227:52 - files on the given index
227:56 - in right here okay remember we now match
228:01 - the length of the file paths to files
228:04 - and we receive them in the same order in
228:08 - the same order because we this is how we
228:10 - send from front end we have files and
228:12 - then we map each file into its own path
228:16 - so finally the the element from this
228:19 - relative paths at index for example 10
228:23 - will be path Four Element from this
228:25 - files array at index 10 they will
228:29 - correspond to each other so from these
228:31 - files I will take uh the element from
228:33 - the same index I am iterating inside
228:36 - these file
228:37 - paths all right and in El's
228:42 - case current node
228:45 - will be current node
228:48 - for given part and let's take this as a
228:51 - reference game and let's discuss this
228:54 - else case if we have path like test/
228:59 - test two something like this then we
229:01 - will have folder okay let's take my
229:04 - example we have e-commerce folder inside
229:07 - there we have test folder and then we
229:09 - have some
229:11 - images Ecommerce okay so in this case in
229:14 - the first case uh this doesn't exist so
229:17 - that will be created like this
229:21 - e-commerce okay so this is the first
229:23 - iteration then the if statement will not
229:26 - be satisfied because we are here we are
229:29 - not on the last
229:31 - index the else case will be taken and
229:34 - the node the current node will become
229:38 - this okay not this anymore initially the
229:41 - current node was this but now it will
229:45 - become this let's remove this one at a
229:48 - moment okay now current node is this now
229:52 - the loop finishes and the I becomes one
229:57 - and we are just looking at the test so
230:00 - this if will be satisfied and that
230:04 - array that array will be
230:08 - created okay and this if will not be
230:11 - satisfied and then current node will
230:14 - become this and then I will increase
230:17 - that I will be here this will still be
230:20 - done so inside
230:24 - there something like this will happen 1.
230:29 - jpg this will happen but because I will
230:35 - equal to the parts length minus one then
230:40 - this will be replaced by an actual
230:43 - uploaded file
230:45 - and finally we're going to have U the
230:48 - following structure tree okay I hope
230:52 - this makes sense I cannot explain better
230:54 - than this and I think you will uh
230:58 - understand when you see if if there is
231:00 - something you haven't understand um
231:02 - understood you will see that when we
231:05 - actually print that tree and which I'm
231:07 - going to do right now I'm returning this
231:11 - tree and I have this file tree uh
231:14 - replaced after past validation so
231:17 - basically in the file controller inside
231:20 - store I should be able to access this
231:25 - file
231:27 - tree okay file tree
231:31 - equals
231:33 - request file
231:36 - tree and let's print file tree we save
231:41 - it now we
231:43 - upload uh let's upload my e-commerce
231:46 - folder let's have a look so this is
231:50 - clear that was previously but this is
231:52 - interesting so we have e-commerce
231:54 - products we have four items inside there
231:57 - we have three
231:58 - files like this and one folder inside
232:02 - this folder we have three more files and
232:05 - this is exactly what we wanted to
232:08 - have now let's implement this function
232:12 - okay and this is the last thing we need
232:14 - to Implement so we get the data we get
232:17 - the file tree let's also get the parent
232:21 - from this
232:24 - request and I'm going to also get the
232:26 - current
232:27 - [Music]
232:28 - user um do any the
232:32 - user well I need the user ID which I can
232:35 - get it or let's just take the user maybe
232:38 - we need it not sure it doesn't hard if
232:41 - we just take the user now I'm going to
232:43 - check if the parent was not received
232:46 - then obviously the very first thing what
232:47 - we do is the parent will become this get
232:51 - root okay now we have the parent we are
232:54 - sure that we have a pent now I'm going
232:56 - to check if the file tree is not empty
233:01 - okay not
233:04 - empty file
233:07 - tree then we're going to save the entire
233:10 - tree so I will create a separate
233:11 - function for this but right now I'm
233:13 - going to call save file tree and we are
233:17 - going to pass file tree we are going to
233:21 - pass parent in in which folder I want to
233:24 - create that file tree and the current
233:27 - user as
233:29 - well perfect however if the file tree is
233:33 - empty then we have these data files
233:37 - which we probably can see here as well
233:41 - okay if the file tree is empty it means
233:43 - that we have have not uploaded folder
233:46 - instead we uploaded files multiple files
233:49 - one or more files and we we just need to
233:52 - iterate over our data files so for each
233:56 - data
233:58 - files like this and then in this case we
234:02 - just need to create um file instance
234:06 - let's call this
234:07 - model equals
234:09 - new
234:11 - file and that should be file from Up
234:14 - models file like this we are going to
234:18 - provide we are going to provide um is
234:21 - folder equals
234:24 - false we will need also name to be
234:30 - file get client something okay I don't
234:34 - remember the name by heart I can
234:36 - obviously copy this from here but what I
234:40 - generally like is adding annotation like
234:43 - bar
234:45 - not model but file is an instance of
234:49 - uploaded file okay whenever I do this
234:53 - now the a completion works like a
234:56 - magic and model dot model. mime oops
235:03 - mime equals file get mime
235:08 - type and model do size
235:14 - equals
235:17 - file get
235:19 - size okay and we are going to call on
235:22 - parent node
235:24 - append node model however here's one
235:29 - important important thing we actually
235:31 - don't save a file on a file system yet
235:36 - and this is something we need to do so
235:40 - on that file I'm going to call um store
235:44 - and provide the path and let's provide
235:48 - like files I want to save everything
235:50 - inside files but I'm going to also
235:52 - provide um user ID as the folder user
235:59 - ID like this and that will be the path
236:03 - where the file will be
236:06 - saved okay and I also want to save that
236:09 - path inside the files table in the
236:12 - database if we check the these
236:15 - files database table we have path right
236:21 - here but that path is actually a
236:23 - different path uh I'm going to create
236:26 - new column and call that like a storage
236:29 - path okay PHP
236:33 - artisan make migration Ed storage path
236:39 - to files table let's try like this
236:45 - add storage path to files
236:49 - table okay so we have this table uh the
236:53 - storage path will be
236:55 - string
236:59 - storage and the length will be like
237:02 - let's give it 2,000 okay and in this
237:05 - down I'm going to drop
237:09 - column storage path okay let's apply
237:13 - migration
237:15 - PHP PHP Artisan
237:19 - migrate storage path okay I want to roll
237:22 - back phpr do migrate roll back D- step
237:27 - equals one and I want to add
237:31 - this after
237:35 - path migrate perfect let's check now
237:40 - database and we see path and storage
237:42 - path and this is now at the
237:45 - moment okay right here on this model I'm
237:49 - going to specify now storage path equals
237:53 - the given
237:54 - path okay so this is something that is
237:57 - not implemented yet I'm going now oh s
238:01 - mistake closed file controller I'm going
238:05 - to now upload files not a folder and
238:09 - test the else statement okay how this
238:12 - works let's r the page upload files I'm
238:16 - going to choose these three files click
238:18 - open and attempt to read property ID on
238:22 - now and that
238:24 - happens on user
238:27 - ID okay okay why does this
238:34 - happen because I have request ID right
238:37 - here do you have idea why I did that no
238:41 - okay I don't have idea as well why I did
238:44 - that stupid thing all right so now let's
238:48 - upload
238:51 - files and do you see
238:53 - that that means that we have uploaded
238:57 - files if we just reload the content is
239:00 - there and now let's check the
239:03 - storage go under storage app files the
239:08 - current user ID and then we have those
239:12 - uploaded files with some random names
239:16 - and
239:18 - those storage will be available in the
239:21 - storage path as well right
239:23 - here that is already big success okay so
239:27 - we have that it's amazing first we have
239:32 - folders these are the folders and then
239:34 - we have
239:36 - files we need also to add icons right
239:39 - here which we will do but now let's
239:41 - focus on saving the entire tree this
239:46 - this file
239:47 - tree okay at the very bottom I'm going
239:50 - to create that
239:53 - function uh save file
239:59 - tree we are going to
240:02 - accept file tree we are going to accept
240:06 - parent and user
240:14 - let me now iterate over my file tree and
240:19 - we're going to have
240:21 - name and we're going to have an actual
240:24 - file however that file might be sub tree
240:29 - so I'm going to check
240:32 - if is array that file if this is an
240:37 - array okay it means that this is a
240:41 - folder it has a sub tree right there so
240:44 - right here I'm going to create
240:47 - folder equals new
240:50 - file folder is folder equals 1 or true
240:57 - no
240:58 - matter and
241:01 - folder name is the given name and on the
241:06 - parent we're going to call a pended
241:10 - child
241:12 - folder so here we are going to call this
241:16 - save file tree again this save file Tree
241:22 - in this case we pass it subtree and
241:25 - subtree will be the file we just we just
241:28 - created folder so this will be now sub
241:31 - tree and the parent will not be this
241:34 - parent anymore the parent will become
241:37 - the folder we just created okay so this
241:40 - is the parent and the user obviously
241:43 - will be user
241:44 - and just like this it will iterate over
241:47 - our tree for every folder and create the
241:50 - folder and then call this for basically
241:54 - um sub tree however if this is not an
241:57 - array this is the case where we need to
242:00 - save it as a file and we can get this
242:03 - code from here at the moment I'm I'm
242:07 - going to just um copy and paste and we
242:10 - need to
242:11 - copy this part as well
242:18 - so we have this file and we store this
242:21 - in the following path we create this
242:24 - file and specify storage path is folder
242:27 - everything everything
242:29 - is exactly as how it should be however
242:34 - like we have this code duplication here
242:36 - and there so probably I'm going to
242:39 - select this hit control alt and M and
242:43 - that will will be separated into its own
242:46 - method like a extracted method and we
242:48 - can call this save
242:52 - file and PHP sh detected that there's
242:55 - another code fragment in this file that
242:57 - can be replaced with the call to
242:59 - extracted method would you like to
243:01 - review and replace it I'm going to type
243:03 - yes replace now both places we replaced
243:08 - save file here inside the store method
243:11 - and save file here here as well inside
243:14 - the save file tree however I need a
243:17 - slight modifications
243:20 - formatting
243:23 - okay that's perfect now we should be
243:26 - able to upload folder as
243:29 - well upload folder let's choose my
243:33 - e-commerce products click
243:37 - upload upload okay file append child
243:41 - append child is something
243:45 - uh something not correct it should be up
243:48 - in the
243:50 - node reload the
243:55 - page upload
243:58 - upload okay storage path doesn't have a
244:01 - default value okay we should probably
244:03 - make storage path nullable right so
244:07 - let's come right here and make this
244:10 - nullable because for folders it should
244:13 - not be
244:14 - required okay I made this nullable and I
244:17 - can now run roll
244:20 - back and migrate
244:25 - again and let's upload this eCommerce
244:30 - products once
244:31 - again and here we see e-commerce
244:33 - products okay so the folder was there it
244:36 - was uploaded now let's double click
244:38 - inside the folder we are inside this
244:39 - folder we see test and those three files
244:43 - okay if I double click on the test I see
244:45 - the other three files as well if I check
244:48 - the database right
244:49 - now I see those three
244:56 - files those three files that's perfect
245:00 - and on the file system we see totally
245:03 - nine probably so we see nine because
245:06 - they we previously other three as well
245:09 - which doesn't exist in the database
245:11 - anymore so we probably can delete delete
245:14 - that but that's not a big
245:17 - deal okay so this is the implementation
245:22 - of uploading files we have uploaded
245:26 - files through upload files
245:30 - functionality uh let's choose
245:34 - settings okay now let's have a look it
245:37 - looks like it was
245:39 - uploaded but maybe
245:44 - somewhere right here okay it was
245:46 - uploaded not inside e-commerce products
245:49 - but
245:50 - outside let's check I want to
245:55 - upload
246:02 - settings okay what is this it triggers
246:05 - this multiple
246:12 - times okay okay let's
246:18 - see expected array cut object for
246:21 - ancestors okay let's fix that I don't
246:24 - like warnings because one warning might
246:28 - causing absolutely different problem and
246:31 - you have no idea about
246:40 - that okay object is not that should be
246:42 - uper Cas so
246:46 - object okay I want to upload settings
246:49 - folder settings
246:52 - file right here but it does not seem to
246:56 - be
247:05 - working okay all those settings we are
247:07 - uploaded in the
247:10 - root now we have three settings in the
247:12 - root okay we obviously have something
247:14 - wrong in
247:16 - validation uh or not in the validation
247:18 - but probably in uploading in a proper
247:20 - place let's open file
247:23 - controller let's
247:27 - check this
247:30 - part this is the problem exclamation
247:33 - mark is missing if the pr doesn't exist
247:37 - in this case we get the
247:38 - root
247:40 - okay now let's go inside Commerce
247:43 - products and I'm going to
247:45 - upload settings and I see settings right
247:49 - here I reload and settings is still
247:52 - there I can go inside any of these
247:54 - images I go inside test and I upload
247:59 - download for example it's there now
248:01 - let's test one with drag and
248:07 - drop so here I have it and let's upload
248:10 - this logo my logo release it and we see
248:15 - that isn't it
248:17 - awesome yeah so it is
248:24 - awesome really awesome the files are
248:27 - being uploaded like a charm if you look
248:31 - at the size column right here we see
248:33 - that the column is displaying bytes if
248:37 - we go inside the folder we see bytes
248:39 - right here we should change this and
248:42 - probably display in more user readable
248:45 - format such as kilobytes or megabytes or
248:49 - gigabytes okay so let's try to implement
248:52 - this for this let's open file.php model
248:58 - and right here I'm going to create a
249:00 - function method basically a public
249:03 - method let's define it right here public
249:06 - function get
249:09 - file size okay and I'm going to Define r
249:13 - here units which file size we're going
249:15 - to have we're going to have BTE and
249:18 - kilobyte and megabyte and gigabyte and
249:23 - we can go uh even farther but I'm going
249:25 - to stop right here and let's define
249:29 - power so this size if this size is more
249:35 - than zero in this case I'm going to call
249:38 - Floor to round this everything basically
249:42 - um down
249:43 - and let's write else casee as well so
249:46 - I'm going to round everything down and
249:48 - I'm going to use a log function for
249:51 - logarithm so
249:54 - this
249:58 - size 124
250:01 - 1,24 okay so this will give me the power
250:06 - and now I'm going to
250:08 - return number
250:10 - format I'm going to give this
250:14 - size decided using the power
250:19 - function 1024 which is the number of
250:22 - btes in a single kilobyte uh in power
250:27 - and yeah I think that's it so we can
250:30 - specify
250:31 - extra uh two that we want two decimal
250:35 - points and I'm going to specify right
250:37 - here that the decimal separator needs to
250:39 - be Dot and this thousand separator needs
250:42 - to be
250:43 - comma okay and we also need to provide
250:47 - what should be the units so from units I
250:51 - am going to take so this is why we
250:54 - calculated this power so from the units
250:56 - we are going to take whatever is the
250:59 - power
251:02 - okay if we explain the following part so
251:05 - what does this actually do so this is
251:08 - pretty obvious I think that if the size
251:10 - is more than zero then we need to
251:11 - calculate something otherwise we just
251:13 - take power to be zero okay but why we
251:17 - create this power or what what is the
251:20 - magic rate here so the logarithm
251:23 - obviously is a mathematical function
251:25 - which calculates in which power we
251:28 - should
251:29 - take uh 10 24 in this case to receive
251:34 - this size for example if we assume that
251:38 - this size is
251:41 - 5,000 bytes okay so when we calculate
251:46 - log
251:48 - 5000 with a base of uh
251:51 - 1024 okay this will give us roughly
251:55 - roughly it's not exactly 1
252:00 - 228 okay so this means that if I take
252:03 - this 10 and 24 and take this in power
252:09 - 1.
252:10 - 228 it will give us roughly
252:14 - 5,000 okay and then why why we do this
252:17 - so obviously if this size is 5,000 in
252:21 - this case this the selected section will
252:24 - give us 1. 1228 but we are rounding this
252:28 - down so finally when after we round this
252:32 - down we will have just one so this
252:35 - expression will return one and why do we
252:40 - do this so we have the power one right
252:43 - right here and then we call the power
252:46 - function to take this 1024 in the
252:50 - calculated power so because we round
252:52 - down now this power 1024 in power one
252:57 - will obviously give us
253:00 - 1024 okay and then when we calculate
253:04 - this size divided on
253:07 - 1024 this will give us uh roughly 4
253:13 - something right and because this is 4
253:17 - point
253:17 - something um we will have 4 point we
253:21 - also have decimals right here 4 point
253:24 - whatever something and from the units we
253:28 - also take what is the power so in this
253:30 - case the power is um the index from the
253:34 - units and the power is one so we take 0
253:38 - 1 2 3 4 5 so we take in our specific
253:43 - case the power will be one so we take
253:46 - kilobyte so finally this calculation for
253:49 - 5,000 this size 5000 will give us uh
253:56 - 4 something x x
253:59 - kilobyte okay so this is the whole idea
254:02 - it's a kind of magical but it's a that's
254:04 - a formula so you can take the logorithm
254:07 - for for these size then you round down
254:10 - and then you again call the uh Power so
254:13 - basically these log and the power are um
254:18 - inverse functions okay but the
254:21 - difference is that we also call floor
254:23 - right here to reduce the actual value
254:26 - and then we call power on this reduced
254:28 - value so if we increase this and if we
254:31 - have like 5 million then obviously this
254:33 - will be much larger and right here the
254:36 - power will be changed and it will be two
254:40 - and then finally we will have something
254:42 - like a 4 point something megabyte not
254:46 - kilobyte anymore okay I hope this makes
254:48 - sense so if I save this right now and
254:51 - open file
254:54 - resource we have size right here and I'm
254:57 - going to call get file
255:04 - size if we open my
255:09 - files so the size is already outputed
255:12 - right here here so there's nothing to
255:15 - do so if we just reload in the browser
255:20 - we see formatted values so test in this
255:23 - case is a folder and we see Z byte which
255:26 - is fine the folder by itself doesn't
255:28 - have any size and now this is 400
255:31 - something this is 150 and I hope this
255:33 - makes sense okay so we have the perfect
255:36 - output let's try to upload larger file
255:41 - if we have one
255:43 - upload
255:44 - files uh do we have larger file like
255:47 - this one is 2 megabyte okay so I'm going
255:50 - to click
255:51 - open and look at this so we have
255:54 - 2.90 megabyte right here okay
256:00 - perfect now let's do something which is
256:04 - fun so we're going to add icons to the
256:07 - files and folders so I have used the
256:10 - following website flat icon
256:14 - . I searched for the icons such as word
256:18 - for
256:20 - example and I downloaded those icons for
256:23 - word excel image video and so on so
256:26 - obviously I don't have all the possible
256:28 - file types but I just downloaded few of
256:31 - them and I'm just going to open this
256:34 - with
256:34 - you uh to see which files we
256:39 - have here is the icons so we have um
256:43 - this is uh just an standard file so if
256:46 - we don't know what type is that that uh
256:50 - I think that's that's for it or maybe
256:52 - this is just an icon of the button
256:55 - anyway so we have audio Excel image PDF
256:59 - text file video word and zip and pro
257:02 - maybe this is just as I said extra file
257:05 - which is not supported which is not one
257:07 - of these so I'm going to get those icons
257:11 - now and go in pH stor and put them under
257:18 - resources and we should put them
257:20 - probably right here actually we should
257:23 - put them under
257:25 - public under public let's
257:28 - create folder
257:31 - called
257:32 - images and paste the entire icons folder
257:37 - inside okay so now we have this then
257:41 - under resources and under JS components
257:45 - and maybe right here I am going to
257:49 - create let's put this inside up I'm
257:51 - going to create a component
257:54 - called file
257:56 - icon okay and then right here based on
258:00 - the file type I'm going to display a
258:03 - different icon so first of all inside
258:06 - the scripts under props I'm going to
258:10 - define the file which will be passed
258:12 - right here as prop const file equals uh
258:17 - Define
258:19 - props I give it file which must be
258:24 - object
258:27 - okay then I'm going to
258:30 - create under maybe under JS I'm going to
258:34 - define a folder
258:37 - called Helper and inside the helper
258:41 - let's create one
258:43 - extra file called file- helper so I'm
258:47 - also trying to define the folder
258:49 - structure which will be scalable so I
258:52 - just introduced the helpers section and
258:55 - inside right there I'm going to export a
258:58 - couple functions is image for example
259:02 - and this accepts a file and we are going
259:05 - to
259:06 - return uh I'm going to basically do a
259:09 - regex right here and if
259:14 - uh I'm going to test the file mime type
259:17 - okay so let's define the Rix so the mime
259:21 - should start with image and it should
259:26 - have then any word characters right
259:30 - there and then this should be the end of
259:33 - the mime type and then let's call test
259:37 - file.
259:40 - mine okay so is image now let me import
259:48 - that inside file
259:50 - icon and let's define right here the um
259:57 - template I actually already have
259:59 - templates
260:02 - so let's open hero icons and let's get
260:07 - the folder from
260:10 - here I would uh take like word and image
260:13 - files from here as well but there are
260:15 - not every file type so let's get the
260:20 - following SVG which is just for the
260:22 - folder so I'm going to paste this right
260:24 - here and let's
260:26 - add let's add the if let's wrap this
260:30 - inside the
260:37 - span okay and let's give this SVG
260:45 - the if the file um is folder so this is
260:50 - the if this is the folder we show The
260:51 - Following
260:53 - SVG okay so we have else case as well we
260:58 - can put this under
261:01 - template and you will understand why I'm
261:04 - putting this template because right here
261:06 - I need to have many different types of
261:09 - images for different um different
261:12 - extensions different types so if if this
261:16 - is image and now this is the case when
261:19 - we want to import this is image right
261:23 - here okay and that was automatically
261:25 - imported from the file helper let's move
261:28 - this under import section so if this is
261:31 - image then we have to provide source to
261:36 - the image so
261:40 - images uh icon slash
261:44 - image.png okay we can check this public
261:47 - images
261:49 - icons okay that should be under
261:51 - icons uh
261:54 - image do PNG okay so this one will be
261:58 - displayed whenever the file is actually
262:00 - an image okay let me remove everything
262:03 - else and let's go in the my
262:07 - files and
262:11 - let's maybe before the file name let's
262:14 - use file
262:16 - icon okay and we have to provide file
262:20 - right here and the file icon needs to be
262:23 - also
262:24 - imported okay that was automatically
262:27 - imported now let's check the
262:30 - browser okay it looks like we have some
262:33 - kind of error reading M can read
262:36 - properties find and find reading mine is
262:39 - image okay
262:45 - we have this yeah I'm not F passing the
262:49 - file obviously I need to pass
262:51 - that okay let me save this reload the
262:55 - page okay and we see we see icons so we
263:00 - see for the folder as well as for the
263:02 - image however we need some CSS okay
263:05 - let's define some CSS for the image
263:07 - first I'm going to give it
263:09 - Max with full
263:13 - okay and on this pan I'm going to Define
263:17 - so with 8
263:21 - 88 inline flex and item Center and
263:26 - justify Center and margin right
263:30 - two okay let's reload the page not too
263:35 - bad
263:37 - however I don't really like how this is
263:42 - a line so this is good but I don't like
263:46 - how this is
263:51 - aligned so let's open my files and check
263:58 - this okay maybe we
264:01 - need maybe we need items flex and items
264:06 - Center here as well so if I specify okay
264:11 - that's much better
264:13 - and as you see right now we have proper
264:17 - Styles well this one is much larger than
264:21 - this one we can actually adjust this a
264:25 - little bit so if we just reduce the size
264:30 - for that
264:32 - maybe like
264:35 - this okay it's much better let's go
264:38 - inside e-commerce products we have only
264:40 - images actually we don't have any
264:42 - anything
264:44 - else okay let's try to
264:47 - upload any other
264:50 - file uh this is also
264:53 - image let me open this from documents
264:57 - like surveys. SQL we see we don't see
265:00 - any icon because we don't handle this
265:03 - this case but it's good that um it is
265:07 - not there because we have to implement
265:11 - it right now okay so in the file icon
265:14 - I'm going to duplicate this okay
265:16 - multiple times and let me actually first
265:18 - Define the functions right here okay so
265:21 - to save some time uh I searched in in
265:24 - the internet the MIM types the most
265:27 - common M types for different file uh
265:32 - file types so I'm just going to copy and
265:39 - paste okay let me copy and paste this
265:44 - part okay so we have image defined then
265:47 - I am pasting The Following part okay so
265:51 - if export function is PDF and we specify
265:56 - if the MIM type is one of the following
265:58 - application PDF xpdf acrobot vnd PDF
266:02 - whatever okay if one of those includes
266:05 - file mine then this is PDF and we have
266:08 - the exact same approach for is audio is
266:11 - video
266:12 - is word is Excel is zip and is text file
266:18 - okay so we have all of them defined
266:21 - right here
266:24 - and inside file icon I'm going to also
266:28 - copy and paste this
266:33 - part and this is PDF needs to be
266:38 - imported his audio needs to be imported
266:41 - his video so is word is Excel is zip is
266:47 - text so we have imported all of them and
266:50 - we have V else case where we just show
266:53 - attach file so normal file and those are
266:57 - right here imported so if I save this
267:00 - right
267:01 - now and reload we see surveys SQL okay
267:07 - um yeah this this is icon and we have
267:11 - inside icons let me actually change this
267:14 - into
267:15 - icon the folder then we change this into
267:19 - icon as well now we have icon everywhere
267:22 - I save that reload the page and we see
267:24 - that the survey is actually type of text
267:28 - okay and if we upload like
267:32 - um this file it will become as a
267:37 - zip if we
267:40 - upload what is the bu file it is also
267:43 - zip let me upload one
267:48 - video now this this has a video type
267:51 - okay so that's cool now we display the
267:55 - icons okay now let's display the
267:58 - progress indicator when we start
268:01 - uploading files somewhere maybe at the
268:04 - bottom right corner of the screen let's
268:07 - display the
268:09 - progress okay so let's open
268:14 - authenticated layout because this is the
268:17 - place from which we handle upload okay
268:22 - and we have this file upload form which
268:25 - is what basically is the main object in
268:28 - this case inertia object form which
268:31 - handles this this upload part and this
268:36 - file upload form actually has the uh
268:41 - progress IND Ator right there so if we
268:44 - just print somewhere let's put this at
268:48 - the bottom maybe we have the navigation
268:51 - we have the main section
268:54 - and let's put this right here okay this
268:58 - form uh needs to have an indicator to
269:02 - progress if I remember correctly but we
269:05 - can
269:07 - also progress
269:12 - okay let's check
269:14 - this if I upload something let's upload
269:18 - a
269:19 - video okay we saw something right so
269:21 - that was a progress and the progress is
269:24 - an object which has
269:26 - percentage percentage so I save that and
269:30 - let's try to
269:35 - upload uh okay we see 100 right right
269:38 - here so but I think we we just uploaded
269:41 - the same file file which we already have
269:43 - uploaded and we
269:48 - should uh this is different type of
269:50 - error uh let's let's see
269:58 - so yeah when we try to upload the same
270:01 - file which already exists we need to
270:04 - display the errors as well right let's
270:06 - first finish the progress displaying the
270:08 - progress and then we can implement this
270:11 - displaying the proper
270:14 - error inside the
270:19 - components uh I'm going to create maybe
270:22 - inside the app I'm going to create a
270:24 - component called form
270:27 - progress
270:29 - form
270:31 - progress okay so this form progress
270:34 - should
270:36 - accept a prop called form so Props
270:42 - Define props we accept form which needs
270:45 - to be an
270:46 - object okay now let's define the
270:49 - template let's make it div standard div
270:53 - element and this div should only be
270:57 - visible if form.
270:59 - progress exists okay let's define some
271:05 - CSS on that D so it must have position
271:08 - absolute let's give it border Gray
271:12 - and 900 let's give it border as well
271:15 - let's give it
271:18 - right8 and
271:20 - bottom um bottom
271:23 - four BG
271:26 - white shadow
271:29 - LG and let's give it rounded and let's
271:33 - give it also flex and flex column and
271:36 - let's give it fixed with like 240
271:40 - pixel okay inside there I'm going to
271:43 - create one div which will display text
271:49 - uploading uh form files
271:53 - length files okay how many files we are
271:56 - uploading we display it right here and
271:58 - let's give it text extra small margin
272:01 - buttom to and we need another div which
272:05 - in this case will be progress okay so
272:08 - let's give this one eight three PG gray
272:15 - 100 let's give it
272:19 - rounded rounded MD and inside there
272:23 - another D which will be an actual
272:25 - progress indicator which will be filled
272:28 - let's give it
272:29 - eight hateful BG gray 900 and
272:36 - rounded MD and transition all okay and
272:41 - this one should have a style which will
272:44 - be dynamically bound okay the width
272:48 - should be calculated based on form
272:52 - progress percentage okay and let's
272:55 - suffix with percent as well so if I save
273:00 - this and go in the authenticated layout
273:02 - and at the very bottom let's include
273:05 - form progress and we have to provide
273:08 - form which will be file upload
273:12 - form I save
273:14 - that reload we have an error awesome I
273:18 - love errors because when I fix I have
273:20 - that feeling of satisfaction okay
273:23 - authenticated layout I think that is
273:26 - coming from here so we just need to
273:27 - remove
273:29 - that okay that's perfect let's click
273:32 - upload files and choose one file click
273:35 - open and look at this did you see that
273:39 - progress uh let's slow down
273:42 - AIT
273:45 - Network slow 3G and let's choose I think
273:50 - image will be enough as well maybe a
273:51 - large image this one look at this so we
273:55 - have this progress well I don't actually
273:58 - like that it doesn't have
274:02 - any any
274:04 - padding so we probably need to provide
274:09 - so the form
274:10 - progress some kind of ping ping three
274:17 - maybe
274:19 - okay okay not bad let's reduce ping
274:25 - two okay so we have that
274:31 - progress okay as soon as the file is
274:34 - uploaded then the progress disappears
274:37 - because form progress does not exist
274:40 - anymore okay so let me go inside no
274:45 - throtl Ling and upload maybe a
274:50 - video okay the progress is there and
274:53 - it's very obvious now let's Implement
274:56 - displaying the error dialogue with the
274:58 - proper error message when there is some
275:00 - kind of error when creating folder and
275:04 - if the folder already exist or uploading
275:07 - files I'm going to also open de
275:09 - developer tool so that we see an eror
275:11 - immediately and whenever we try to
275:14 - upload a file which already exists under
275:18 - props errors we get the following error
275:21 - message file create whatever already
275:25 - exists okay now let's go inside
275:28 - authenticated
275:31 - layout and right here when we call uh
275:36 - post on the form we can specify a second
275:40 - object which is is a configuration and
275:42 - we can configure a couple of uh events
275:45 - as well so I'm going to also open
275:47 - inertia
275:49 - documentation here we see these and if
275:51 - we go under forms we can easily find
275:55 - that
275:57 - section uh let's scroll down
276:02 - below okay as you see we can uh provide
276:05 - preserve scroll and success and the
276:09 - options what what we can pass right here
276:11 - here supports all the typical visit
276:14 - options so if we click visit options we
276:16 - can find out what options we have right
276:19 - there on progress on success whatever
276:21 - and the form submit supports all those
276:25 - options so in this case we need on
276:27 - success on error and on
276:31 - finish
276:33 - so on success when everything is okay we
276:37 - need to
276:38 - show um some notification I'm going to
276:41 - leave this as it is right now I'm going
276:44 - to implement it later after this so
276:47 - inside on error I get I accept
276:52 - errors okay and I'm going to define a
276:54 - message so let message equals an empty
276:58 - string now I'm going to check
277:01 - if
277:03 - object is SS
277:07 - dot
277:09 - length is more than zero
277:13 - okay uh hold on need like this so if
277:17 - this is more than zero then message
277:21 - equals from the errors object we
277:26 - take object
277:29 - his errors at position zero okay so if
277:35 - these
277:36 - errors uh we need like this
277:43 - like this okay so if this is this errors
277:46 - which should be an object if it contains
277:49 - something okay then we take the very
277:51 - first key and take the message and
277:54 - assign it to the
277:57 - message okay that's perfect however if
278:00 - the keys is empty then we can define a
278:03 - general
278:05 - message error during file
278:09 - upload please try again
278:14 - later okay and now from this point we
278:18 - need to show this error dialogue okay so
278:21 - we have
278:23 - defined event pass and inside the event
278:27 - pass we have only one event at the
278:29 - moment show um file upload started okay
278:32 - so I'm going to Define another event
278:35 - export con
278:37 - show error dialogue
278:42 - and let's specify the same name right
278:45 - here show error dialogue and for
278:49 - Simplicity we can
278:53 - export function
278:56 - show error
278:59 - dialogue message like this okay so I can
279:04 - actually because I'm emiting I'm
279:06 - exporting from here
279:09 - emiter I can actually import emiter here
279:12 - and call trigger however I'm going to
279:16 - Define this show error dialogue which
279:18 - accepts a message and then on emiter I
279:21 - can call
279:23 - emit
279:25 - actually I need to write
279:29 - this I can write this here okay let me
279:32 - write this down below let's move the
279:35 - functions down okay I'm calling Emit and
279:39 - the key will be show error dialogue and
279:42 - we pass message inside an
279:46 - object now I need to open this um
279:51 - authenticated
279:53 - layout and I'm going to actually first
279:56 - create this error dialogue under
280:00 - components let's
280:03 - create
280:05 - error um er dialogue
280:12 - okay I'm going to use model we already
280:15 - have that component defined so here's
280:19 - the model I'm providing show it needs to
280:23 - be displayed if the show is true and I'm
280:28 - going to Define this show as well and
280:30 - let's specify Max width as well which
280:33 - needs to be
280:34 - MD okay so inside there let's define
280:37 - let's give it um like pting of six
280:43 - H2 that should be an error let's give
280:46 - some classes TT two Excel margin buttom
280:51 - two text red 600 and font semi
280:57 - Bol let's collapse the left side and
281:01 - then we will have a div with margin top
281:05 - six let's give it flex and justify end
281:09 - so this will be just a button and inside
281:12 - there I'm going to put primary
281:14 - button which will be
281:16 - okay and we can listen to click if we
281:20 - want and call close and we click okay
281:24 - now we we need to Define few things like
281:26 - show and close let me move these Imports
281:30 - up first like this and let's
281:35 - Define function close and I also need to
281:41 - Define and refs con show equals
281:46 - ref uh
281:48 - false okay and let's import this ref
281:53 - perfect now let's define message as well
281:57 - const message equals ref which by
282:01 - default will be an empty string okay and
282:03 - I'm going to Define
282:05 - also uh Amit Define Amit
282:12 - and
282:15 - close okay what else do we
282:18 - need this is a show uh on close
282:21 - basically we call show. Value equals
282:27 - false and message. value equals an empty
282:32 - string and let's put inside hooks on
282:37 - mounted un mounted I need to start
282:41 - listening to the following event show
282:45 - error dialogue okay so I'm going to
282:48 - import
282:51 - emiter on show error
282:55 - dialogue and whenever this happens we
282:58 - will accept message
283:04 - here uh and I'm going to set show. value
283:08 - equals true in I'm going to set message.
283:12 - value okay so here's the problem so we
283:14 - have message defined inside refs and
283:18 - message as a um as a variable inside the
283:22 - local function the structured um
283:25 - variable of this object so I'm going to
283:28 - destructure and take out MSG okay so I'm
283:31 - taking the message but assigning it into
283:34 - a variable MSG so in this case the
283:36 - message right here will be my ref so
283:40 - message do
283:41 - value will be
283:44 - MSG the emiter needs to be
283:47 - imported
283:49 - okay okay perfect if I open our
283:52 - authenticated
283:53 - layout right here let's
283:57 - import error dialogue okay and we don't
284:01 - need to pass any prop right there
284:04 - because everything basically will be
284:06 - done through event
284:09 - bus mistakenly closed authenticated
284:12 - layout okay I save
284:16 - that and let's now try to
284:19 - upload
284:24 - file okay we obviously it didn't
284:29 - work we don't see this
284:33 - error and now let's figure out what's
284:36 - going
284:39 - on this this is the form we have this on
284:46 - error h i don't call
284:49 - show error dialogue obviously and I
284:53 - don't pass message as
284:57 - well okay we import this show error
285:00 - dialogue from um event
285:04 - bus here it is so I save
285:08 - that and upload the file
285:11 - and look at this so we have error and we
285:14 - should have some sort of message but the
285:16 - message is probably not
285:19 - outputed here so let me actually create
285:24 - a paragraph with
285:28 - message and now we see file whatever
285:32 - already exists now let's try to create
285:36 - new folder called test this will return
285:39 - error but will not display
285:42 - the error no it actually displays
285:44 - because we handle this type of error
285:47 - slightly
285:48 - differently okay what if I try to upload
285:52 - a file with drag and
285:55 - drop uh if I go inside this e-commerce
285:58 - and we have settings right there and I
286:01 - search for
286:03 - settings and I try to drop here we get
286:08 - this message because every file upload
286:12 - whether it's uh using the file upload
286:15 - button or using drag and
286:18 - drop uh is handled through this
286:21 - authenticated
286:23 - layout from from here here so it will
286:29 - display an
286:30 - error okay let's add one more thing
286:33 - right here which will be onfinish so
286:37 - whenever this is finished no matter if
286:40 - it was successfully finished or not
286:43 - successfully file upload
286:46 - form we're going to call clear errors
286:50 - and on file upload form we're going to
286:52 - call reset as
286:55 - well okay that's just one extra
287:00 - thing and now let's try to upload a
287:02 - folder I will try to
287:04 - [Music]
287:06 - upload um e-commerce okay let me go back
287:10 - and try to up
287:12 - load from
287:16 - here
287:18 - e-commerce load okay folder e-commerce
287:22 - products already exist and obviously
287:25 - this is coming from
287:27 - store file request but this is the case
287:32 - when folder name exists okay folder
287:36 - whatever already
287:38 - exists okay so that's perfect so we have
287:41 - implemented displaying the error message
287:43 - when we try to upload file which already
287:46 - exists in our uh file
287:49 - storage now let's Implement one very
287:52 - useful and important feature and that's
287:55 - going to be loading data while we are
287:59 - scrolling okay at the moment as you see
288:02 - we don't even show SC scroll okay this
288:06 - is something which needs to be probably
288:09 - added on this
288:11 - on this element which is above the table
288:15 - which has overflow hidden so not sure
288:18 - we're going to experiment and we're
288:19 - going to
288:21 - see let's open my
288:26 - files
288:27 - [Music]
288:28 - and we have this table and I'm going
288:33 - to put this table in zone div okay and
288:37 - I'm going to give this
288:39 - div uh FL X1 but
288:43 - overflow overflow
288:49 - Auto okay let's put this table now
288:55 - inside save it and as you see now we
288:59 - have the scroll okay however nothing is
289:03 - loaded while we're scrolling and by
289:06 - default we are displaying how many maybe
289:08 - 10 10 records right here obviously if I
289:13 - open let me close everything if I open
289:17 - file
289:19 - controller and find this place we have
289:23 - page8 10 if we increase this into
289:26 - 50 and reload the page we see 50 items
289:30 - we don't probably have 50 but we we're
289:32 - going to see as much items as many items
289:36 - as we have at the
289:37 - moment okay I'm going to set this back
289:41 - into 10 and we are going to implement
289:43 - the scroll let's go under my files and
289:47 - at the very bottom of my files I'm going
289:50 - to add H called
289:53 - unmounted okay so when this
289:57 - happens I'm going to Define
290:00 - observer which will be new intersection
290:05 - Observer and this will accept a call
290:09 - back okay
290:11 - and this
290:14 - callback will be triggered when uh the
290:18 - intersection actually happens okay so in
290:22 - this
290:23 - case let's specify um third argument
290:27 - here as well that's going to be the
290:30 - margin okay so let's specify root
290:34 - margin minus uh 250 pixel
290:41 - Z pixel 0 pixel 0 pixel okay so whenever
290:47 - there is negative
290:50 - 250 pixels remain so this the the goal
290:54 - basically for that is whenever the
290:59 - scrollable
291:01 - area this area scrollable area is
291:06 - 250
291:08 - pixels um whenever the edge of the
291:11 - scrollable area is 250 pixels
291:16 - below this part okay then we need to
291:20 - load the content okay while I'm
291:23 - scrolling okay the edge is obviously so
291:25 - this is The Edge so we have the keyboard
291:28 - jpg in the um like bottom bottom edge of
291:32 - this keyboard jpg is the edge of this
291:36 - entire scrollable area okay and whenever
291:40 - this keyboard's Edge okay bottom Edge is
291:45 - 250 pixels
291:48 - close less than or 250 pixels close to
291:53 - this part okay this is the idea it is
291:56 - not yet implemented but this is how I'm
291:58 - going to do that when it is that closed
292:01 - then we are going to load more
292:04 - content okay so I'm going to also Define
292:08 - a one riff
292:12 - uh right here and that ref should be the
292:16 - load more intersect okay so let's define
292:20 - const load more
292:25 - intersect it will make a total sense
292:28 - believe me right now okay so we Define
292:31 - this
292:33 - ref now I am going to
292:38 - create uh right here
292:42 - here I'm going to create hold on which
292:47 - part is the scrollable area so this is
292:51 - the scrollable area
292:54 - right so I'm going to move this closing
292:58 - div at the bottom and put this
293:03 - inside the scrollable section and inside
293:07 - the scrollable element I'm going to
293:10 - create one div which will have this ref
293:13 - L more intersect okay so now this is the
293:18 - element load more intersect now let's
293:21 - scroll down
293:22 - below and I will implement this call
293:24 - back in a
293:26 - second on
293:30 - Observer I'm going to call
293:33 - observe load more intersect
293:37 - dot value
293:41 - okay so this is the element so the I'm
293:44 - I'm configuring The Observer to observe
293:48 - these load more intersect value and I'm
293:51 - also specifying that the root margin
293:54 - whenever it is minus 250 pixel then the
293:58 - Callback needs to be
294:01 - executed so inside the Callback we get
294:07 - entries and on each entry we can
294:11 - actually test if at least one of them is
294:15 - intersecting okay and again if we check
294:19 - in the browser at the moment we have an
294:22 - error so
294:25 - intersection
294:27 - Observer so we can check the
294:29 - documentation from the mozilla.org mdn
294:33 - if we scroll down below we can find some
294:37 - examples here and here the example of
294:41 - entries we Define the Callback the
294:43 - entries and each entry describes an
294:46 - intersection change for one observed
294:49 - Target element and each entry has the
294:52 - following uh properties like bounding
294:54 - client rectangle is intersecting this is
294:57 - something which we are interested okay
294:59 - so in our case I am going to iterate
295:04 - over my
295:07 - entries entry
295:11 - and I'm going to do the following if
295:13 - entry is
295:17 - intersecting okay if at least one entry
295:19 - is
295:20 - intersecting then I am going to load
295:23 - more
295:24 - content and I need to define a function
295:27 - to load more
295:30 - content so I'm going to Define
295:33 - it load more at the moment I'm going to
295:37 - write just load more as a console lock
295:41 - but right here I'm going to call this
295:44 - load
295:48 - more okay now I save this and let's test
295:54 - test everything go in the console and if
295:57 - I start scrolling and I when I reach the
296:02 - last section I get this load more
296:06 - okay so again I reached the last part
296:11 - and this load more is printed and that's
296:13 - the place from which we need to uh make
296:17 - requests to the back end and get more
296:22 - content so if we have a look inside
296:26 - props we have uh files and folder and
296:31 - ancestors okay defined right here the
296:35 - files is what we are using and if we
296:38 - check at the top we see file files. data
296:41 - but the files has something else as well
296:44 - so it has pagination information as well
296:47 - and imagine that when we are loading
296:49 - more and more data the number of files
296:55 - or folders totally on this page will
296:58 - increase like we are loading and loading
297:00 - and loading more data okay so this is
297:03 - not standard pagination the standard
297:05 - pagination is that if you have a page
297:08 - size set to 20 you you always load data
297:12 - of 20 and you always display data of 20
297:16 - okay so this is how standard pagination
297:18 - works and if the following function the
297:23 - following action will be executed this
297:25 - will always return um 10 items so we
297:30 - need some way to accumulate the data
297:34 - returned from the back end into the
297:37 - following component and then when the
297:40 - next page data is returned it's going to
297:42 - be accumulated and appended to the
297:44 - existing um data and and so on so what
297:49 - I'm going to do is
297:52 - Define under RS I'm going to Define all
297:58 - files okay so we have the files which
298:01 - will always return data for specific
298:05 - page okay now let me Define all files
298:09 - and there going to be ref
298:10 - and this will have data inside which
298:14 - will be props files.
298:17 - dat and we're going to have also
298:21 - next which will
298:25 - be
298:27 - props
298:29 - files.
298:31 - links.
298:36 - next
298:38 - however the props is not available right
298:42 - here isn't it so what we can do is set
298:47 - this into well actually let me do like
298:50 - this I'm going to copy this part and I'm
298:53 - going to set the data to be an empty
298:55 - array and next to be null we have all
299:00 - files and then inside hooks I am going
299:04 - to listen on updated hook and whenever
299:09 - update happens
299:10 - all files. value is an object and then
299:16 - while inside this on updated
299:19 - hook uh we
299:21 - will yeah we will get updated props so
299:24 - in this case let me Define props right
299:31 - here and instead of having a direct
299:35 - access on files dot whatever we are
299:39 - going to use all
299:41 - files and do we have
299:44 - files somewhere else that should be all
299:48 - files because that accumulates the data
299:52 - okay files always contains one page data
299:55 - but all files contains the
299:58 - data from previous um page as
300:06 - well okay now let's implement this load
300:09 - mod
300:10 - what are we going to do so standard
300:14 - inertia approach is the following that
300:17 - when you access the endpoint it is
300:20 - actually
300:22 - rendering this is returning the data and
300:25 - passing this into view component okay
300:28 - but in our case we need to do it
300:31 - slightly differently okay we are going
300:34 - to make xhr standard request and just
300:39 - get the data using
300:42 - xhr so first of all let's define what is
300:47 - all
300:48 - files. value. next because this should
300:52 - be the next page URL we just reload the
300:57 - page we don't see anything which is
301:02 - okay props and we have all files. data
301:06 - okay let's see what is
301:10 - uh here we see ancestors as
301:13 - well uh which
301:16 - is
301:18 - okay and we have
301:22 - props okay let's print all
301:33 - files okay we see all files data dot
301:38 - data as well here we go okay now if we
301:42 - iterate over our all files we shouldn't
301:46 - have any problem okay whenever I reload
301:50 - it doesn't seem to be working okay the
301:56 - reason what might be the
302:00 - reason
302:01 - because we listen only on updated and
302:05 - unupdated is not triggered let's just
302:07 - print one one when updated it is not
302:10 - triggered and all files does not have
302:12 - the information regarding files so if we
302:14 - just take this and do the same thing on
302:18 - mounted then it's obvious and it is
302:21 - working again if I comment the mounted
302:24 - section then it doesn't seem to be
302:27 - working also what we can do is when
302:30 - defining
302:32 - this uh we can take props dot whatever
302:38 - but I think think that not going to work
302:41 - because props are not defined at this
302:43 - stage so in this case we have to move
302:45 - these all files down let's just try
302:55 - this what is
302:58 - this variable might not be initialized
303:01 - okay hold on
303:17 - okay so what how how does this work like
303:21 - props do
303:25 - files props is defined obviously right
303:28 - here that's really strange so if I
303:30 - Define const a equals 1 and then
303:34 - console. log a before defining that that
303:39 - will give me an error for sure reference
303:42 - can say before
303:43 - initialization okay how am I accessing
303:51 - props okay maybe this props is kind of a
303:55 - magically defined at the very beginning
303:57 - of this script composition API script
304:00 - and it is available
304:02 - everywhere anyway if that works okay
304:05 - that's fine um let's take the next from
304:09 - here
304:11 - and now if we reload the page we see
304:14 - everything if we scroll down we see load
304:17 - more in undefined that
304:20 - undefined is all
304:25 - files value okay we need to take it like
304:33 - this Rel load scroll down and we see so
304:36 - this is the URL from which we need to
304:39 - fetch the data okay and we're going to
304:42 - make request on the following URL inside
304:44 - load more so let's do a check first if
304:48 - all
304:49 - files.
304:51 - value. next if that equals null okay if
304:55 - there are are no more pages then we
304:57 - simply return we don't do
304:59 - anything otherwise we are going to make
305:01 - an HTTP request I'm going to Define now
305:04 - another helper under helpers and we can
305:08 - call these
305:12 - HTTP
305:14 - helper maybe something like this inide
305:17 - there I'm going to export function
305:20 - HTTP
305:22 - HTTP
305:24 - kit okay we're going to accept an URL
305:27 - right here and I'm going to use the
305:30 - fetch API to make request and I'm
305:32 - returning a promise from here so fetch
305:35 - on the
305:36 - URL we pass pams if we have those params
305:40 - we just pass
305:42 - them okay
305:44 - um actually we accept par pars right
305:47 - here by default it's an empty object and
305:51 - we pass
305:53 - params
305:54 - [Music]
305:55 - um and we need to pass
305:58 - [Music]
306:01 - also okay we don't need params at the
306:03 - moment so let's just remove
306:08 - it and let's just pass an object and
306:11 - with headers we are going to provide
306:14 - content type to be application SL
306:21 - Json and
306:23 - accept will
306:26 - be
306:29 - application application SL
306:33 - Json okay and inside then we return
306:38 - response response
306:40 - resp
306:42 - response.
306:45 - Json like
306:48 - this if I go in my files I need to
306:52 - import this HTTP get and passing the all
306:57 - files. value. nextt so this should
307:02 - return the next
307:06 - page excuse me next page files
307:10 - and we need to call then we get then we
307:15 - get the
307:17 - result and how we're going to get the
307:19 - result so that's another thing let me
307:21 - import this HTTP get first and test if
307:25 - we make
307:27 - request and I assume that the result
307:31 - will contain links and data in the same
307:36 - way the
307:38 - files right here
307:40 - contains so what I will do is all
307:44 - files all files. value. data will equal
307:50 - to destructure all files use the um
307:55 - spread operator to take out all files
308:00 - value.
308:03 - data and use the sprad operator for
308:06 - result. dat and all files
308:10 - .
308:12 - value. will be equal to res. links.
308:19 - nextt okay however that's not going to
308:21 - work as we expect and let's see what
308:24 - what will
308:25 - happen uh let's go under Network and
308:29 - scroll down below the request was
308:31 - made however the request
308:36 - actually is trying to return inertia
308:40 - type of content okay so this is not what
308:44 - we want we want to return normal Json
308:49 - response so if we go in the file
308:52 - controller and maybe right
308:57 - here
308:59 - um well it should
309:02 - be should be right here since we have
309:04 - the
309:05 - collection okay since we have the
309:08 - collection we're going to check if the
309:11 - request do we have the
309:14 - request uh no we don't have the request
309:17 - so let's try to accept request here and
309:22 - I'm going to check if the request want
309:26 - Json okay and once Json means that we
309:30 - are requiring accept application Json
309:34 - okay if the request wants Json then we
309:37 - will simply return file
309:39 - okay and this will be returned as a Json
309:43 - otherwise the rest of the code will be
309:45 - executed and inertia uh view will be
309:49 - rendered and this will be executed when
309:52 - you are opening the page and this will
309:55 - be executed when we are loading more
309:58 - content now let me inspect this load
310:03 - everything is good I will scroll down
310:05 - below and look at this the content was
310:07 - loaded you see that that reload the page
310:11 - again scroll down below and the content
310:13 - was
310:14 - loaded pay attention to the
310:19 - scroll this is
310:21 - it if I go in the file controller and
310:24 - change this into
310:25 - five we will see even more content
310:29 - actually it doesn't change to
310:33 - five why not
310:35 - sure our page
310:39 - yeah I think it was
310:42 - changed uh that was not actually changed
310:45 - but we can we can figure this out why
310:48 - this why this is happening but yeah this
310:51 - is how we implemented the scroll right
310:54 - so uh let's upload uh the entire folder
310:58 - of
310:59 - the
311:02 - e-commerce
311:05 - products we see that okay uh we we
311:10 - haven't uploaded that let me upload
311:13 - multiple files from
311:19 - pictures settings already exist
311:23 - okay okay settings already exist and
311:26 - probably I want to delete that settings
311:28 - yeah we have to implement delete as
311:31 - well but for now this is this is
311:36 - working okay go back scroll down BL the
311:39 - content is successfully
311:43 - loaded now let's do one very amazing
311:46 - thing by default PHP allows you to
311:50 - upload only 20 files and there is also
311:53 - very small limit for the number of um
311:57 - the total megabytes you can upload and
311:59 - what's going to be the post size so
312:01 - let's actually observe this I'm going to
312:03 - open file controller and let's print PHP
312:08 - info
312:11 - let's go in the my files Echo P HP
312:18 - info and let's exit from here okay
312:22 - awesome let's open the browser reload
312:24 - the page and we see the following output
312:27 - now I'm going to search for Max file
312:30 - uploads which is 20 that indicates that
312:33 - we can only upload 20 files in a single
312:36 - upload and we also have Max file size I
312:40 - believe upload Max file size which is
312:42 - 100 megabyte in this case set by default
312:46 - and there's also host Max size which is
312:49 - also 100
312:51 - megabytes okay I want to now customize
312:54 - this and if we open now laravel sale
312:58 - documentation click on this link and
313:01 - scroll down below in the customization
313:03 - section we are going to execute the
313:05 - following comment um PHP Artisan sale
313:07 - publish or we can even execute sale
313:10 - Artis and publish I'm going to bring up
313:12 - the terminal because right now I am
313:15 - already inside the main container I can
313:17 - execute PHP Artisan sale publish however
313:22 - if you are not in the container you can
313:24 - execute sale Artisan um sale publish
313:29 - however in our case if I just exed from
313:31 - the container I just don't have sale
313:34 - globally available so I cannot execute
313:36 - sale Artisan sale publish I need to
313:39 - execute vendor Bean sale Artisan sale
313:43 - column publish okay that should do the
313:46 - same thing for me as you can see now it
313:49 - published sale Docker assets copying
313:52 - directory vendor Lal sale run times into
313:54 - Docker so if we
313:56 - go let me clear this and if we go now
314:01 - under
314:03 - vendor not the vendor excuse me under
314:07 - resources no under Docker here we go so
314:11 - under Docker we see multiple versions
314:13 - and right now we are running our
314:15 - application on PHP 8.2 so if we expand
314:19 - 8.2 we see multiple configuration files
314:22 - right here so this is the docker file
314:25 - using which the image is built okay and
314:29 - right here we see all the PHP extensions
314:31 - that is installed by default if you want
314:34 - to customize this and if you want to uh
314:36 - install some third part party packages
314:40 - for example unicor which is a very
314:42 - powerful package to convert uh documents
314:46 - from one format into another okay you
314:48 - should do this right here if you want to
314:51 - install some other third party uh image
314:53 - manipulation or fmpg for example you can
314:57 - do these things right here okay so I'm
314:59 - not going to cover everything from here
315:01 - I just explained what is what the file
315:03 - is for so I'm going to close this and
315:06 - PHP is obviously what we're going change
315:09 - right now and as you can see the default
315:11 - configuration is post Max size 100 mbes
315:15 - upload Max file size 100 megabyte and we
315:18 - see right here variables order as well
315:21 - okay and we see the start container how
315:23 - the container should be started and we
315:25 - see supervisor com which is uh more for
315:30 - um actually I don't know what is this
315:33 - for I'm going to be
315:36 - honest okay so by I can figure this out
315:39 - what what is this supervisor
315:41 - dcon for I can figure this out okay so
315:46 - now what we are going to do
315:51 - is okay excuse me I just didn't want to
315:55 - uh just continue like this I wanted to
315:58 - figure out what was this supervisor
316:00 - decom so I paed the recording and figure
316:02 - this out and I also want to show this to
316:04 - you so that basically is a right here
316:08 - this is the the uh highlight highlighted
316:10 - section so the supervisor is the process
316:12 - manager in LEL which suggests to use as
316:15 - a process monitor for Q workers okay it
316:18 - will automatically start the Q worker in
316:20 - the background even after the system has
316:22 - been booted and will automatically
316:23 - restart the worker if the worker exceeds
316:27 - unexpectedly okay I hope this gives you
316:29 - a little like a brief what is this not
316:33 - very much details but at least we know
316:35 - roughly what this is for okay in
316:38 - apologies if uh like my explanation was
316:41 - 100% accurate about this supervisor D
316:45 - okay so now we're going to make some
316:47 - changes in this PHP in file so first of
316:49 - all I'm going to increase this post Marx
316:51 - file size into like a 2 gigabyte I'm
316:55 - going to also change the upload Max file
316:57 - size into 2 gigabyte and I'm going to
317:00 - also add Max um what's the name exact
317:04 - file name exact parameter name Max file
317:07 - uploads which by default is 20 but I'm
317:10 - going to increase this into like 500
317:14 - okay but just saving this and reloading
317:18 - right here doesn't make any changes okay
317:21 - even if we stop our server if we exceed
317:25 - if we execute vendor vendor Bean
317:30 - sale uh
317:32 - stop okay it's not going to take effect
317:35 - because using the docker the image is
317:37 - already built
317:39 - okay so what we are going to do is
317:41 - execute sale build no cash as well and
317:45 - that will take the latest modifications
317:48 - and create the new image okay so let's
317:52 - try to execute this
317:54 - vendor vendor Bean sale build let's hit
317:59 - the enter it will probably take some
318:02 - time um I'm going to pause the recording
318:04 - because it generally takes few minutes
318:06 - and to Finish the build and create Now
318:09 - new image with the new configuration
318:11 - option so I'm going to pause the
318:13 - recording and just get back when this is
318:16 - done image was built and now we are
318:19 - going to start the container again so
318:21 - I'm going to execute vendor be sale up
318:25 - in detached mode Let's open the browser
318:28 - reload the
318:30 - page uh okay starting okay they started
318:33 - reload the page okay let's log in and
318:36 - now let's have a look so what's going to
318:39 - be the max file uploads we see 500 uh
318:43 - what about Max file size that's going to
318:46 - be 2 gigabyte and we have also post
318:51 - Max file size also 2 gbyte okay so we
318:55 - made that change successfully from
318:58 - here you can add and override as many
319:02 - configuration options in this PHP file
319:05 - as you want to change every possible uh
319:09 - php's configuration option what you see
319:12 - right here which is awesome now I will
319:14 - go in the file controller and I will
319:16 - remove this
319:17 - PHP uh PHP info and just like this now
319:20 - we have possibility to
319:23 - upload um more than 20 files uh well I
319:27 - don't have mpm Rand de
319:31 - running vendor be sale bash mpm run Dev
319:38 - okay here we go and if I try to upload a
319:41 - very large file which is more than 100
319:43 - megab and I can also upload the my
319:47 - entire um upload folder my entire
319:51 - pictures maybe which contains I don't
319:53 - know much more files than 20 so I can
319:57 - just select on the pictures click upload
320:02 - actually before I upload that um I'm
320:04 - going to
320:06 - check I'm going to check in
320:09 - files in the
320:11 - database okay we have 42 total files
320:14 - right there so I'm going to click upload
320:16 - on that and you you see we just uploaded
320:19 - 86 files and if I just reload the
320:23 - page uh we see that was
320:28 - 42 okay
320:31 - 1035 minus
320:35 - 42 minus 42 yeah roughly
320:39 - 93 993 new entries we are added and
320:43 - obviously there we 86 files uploaded but
320:46 - totally 93 new entries we are created
320:49 - because they are we folders as well like
320:52 - roughly seven folders so the pictures is
320:54 - one folder two three four five six and
320:58 - probably there is another folder
320:59 - somewhere this is seventh okay just like
321:02 - this we have uploaded my entire pictures
321:05 - folder and even we can try to upload
321:08 - would like even larger folder like the
321:10 - entire my documents okay but I'm not
321:13 - going to do this I just demonstrated how
321:15 - you can increase the number of um a load
321:18 - files to be uploaded in our application
321:21 - now let's start working on deleting
321:23 - files and
321:25 - folders so I'm going to create new
321:28 - action right here probably call it
321:30 - destroy I'm just going to collapse all
321:31 - of them and probably at the bottom of
321:35 - the public functions right here let's
321:37 - define
321:39 - new public function I'm going to call
321:40 - this destroy we're going to accept
321:43 - request right here but I'm going to
321:44 - actually create custom request class for
321:47 - this and it should be
321:50 - destroy okay so at the moment let's just
321:52 - die and dump I'm going to accept rate
321:54 - here
321:57 - request request well actually let's
322:01 - let's
322:03 - create um Artisan well that should be
322:07 - vendor be in sale
322:10 - bash then PHP artisan
322:14 - make request request and I'm going to
322:17 - call
322:19 - this
322:21 - destroy
322:23 - destroy files
322:27 - request okay destroy files request that
322:29 - was
322:31 - created destroy files request we get it
322:34 - right here request validated so we're
322:37 - going to get the validated
322:39 - data and just print that so this destroy
322:41 - files request should extend from my
322:46 - custom base request pant ID base request
322:50 - let's provide this right here so we
322:52 - actually need to take the pent if we are
322:55 - deleting a folder or file which is
322:57 - inside another folder not inside the
323:00 - root directory we are going to get the
323:02 - parent also we need the proper
323:05 - authorized uh logic right here uh the
323:09 - rules for pent ID will be the same so
323:12 - I'm going to delete the authorized
323:14 - completely and for these rules I'm going
323:16 - to call array merge and provide right
323:21 - here
323:22 - Cent
323:24 - rules and then my rules will go right
323:29 - here okay perfect let's now open web
323:33 - web.php
323:36 - and let's define Define what is
323:42 - this okay and let's define um action
323:46 - will be
323:48 - destroy and the name will be delete or
323:52 - destroy let's call it delete okay file
323:56 - delete uh that should be delete not post
324:00 - okay so we have the um Road ready we
324:04 - have created action and created uh these
324:07 - request as well however we need to
324:09 - implement rules properly right here so
324:13 - here we are going to accept uh two main
324:17 - properties I'm going to write rules for
324:18 - two main properties one will be all so
324:22 - from the user interface we're going to
324:23 - have possibility to select all the files
324:26 - and that will be a flag true or false so
324:29 - if all files are selected then we're
324:31 - going to delete everything inside that
324:34 - folder okay so that all can be nullable
324:38 - but it must be Boolean as well okay and
324:42 - we're going to have also IDs specific
324:44 - IDs of the files or folders that we want
324:48 - to delete and in this case I'm going to
324:51 - write um exist rule so from the
324:54 - validation I'm going to call
324:57 - exists and each ID must exist inside the
325:01 - file table column ID but I want to add
325:06 - extra wear conditions right here here so
325:09 - I'm going to pass
325:10 - function
325:14 - quy and let's also use the currently
325:18 - authorized user which will
325:21 - be this
325:23 - get
325:26 - user okay so we are going to accept user
325:31 - here hold on okay like this and then I'm
325:35 - going to execute we
325:38 - query we created by is the currently
325:44 - authorized user ID or simply I think
325:47 - it's going to be much easier to use uh
325:50 - out ID like this in this case I don't
325:53 - even need user I think that's easier so
325:58 - basically the I idas will be a list of
326:01 - integers and each integer must be an ID
326:05 - of the file table and I also should be
326:07 - the OWN owner of that specific file or
326:09 - folder which I am trying to delete which
326:12 - kind of makes sense because I I should
326:15 - not be able to delete someone else's
326:18 - files or folders right okay before we
326:21 - move on the front end side let's
326:23 - actually implement this file controller
326:26 - as well so let's get the data and this
326:29 - going to be
326:30 - request
326:36 - validated let's get the p as
326:40 - well from request
326:44 - Cent If data all if that
326:49 - exists then we get the children will be
326:54 - parent
326:56 - children uh but as a property not as a
326:59 - method okay and then I simply iterate
327:03 - over children as a child and on the
327:07 - child I'm going to call
327:09 - delete okay so I basically iterate over
327:12 - the entire list of children of the given
327:15 - parent if that parent exists and if the
327:18 - data all is selected and deleting all of
327:23 - them okay in um in other case like if a
327:27 - data IDs is provided okay it it should
327:31 - be else right here as well like else for
327:35 - each but I think we will will either
327:38 - have all or either have data IDs okay we
327:43 - aren't going to have both
327:46 - provided but in any case I think it
327:49 - doesn't hurt if we just rubp this inside
327:52 - the
327:54 - else okay if the data ID does not exist
327:58 - for some reason let's take the empty
328:00 - array just to avoid any kind of Errors
328:02 - right here so we get the ID and then I
328:05 - select the file
328:08 - equals file uh find by ID and then on
328:14 - the file I'm going to call
328:19 - delete and finally I need to return to
328:24 - root and to root is the Alpine JS
328:28 - function uh sorry not Alpine JJs
328:32 - inertia to root is inertia function we
328:36 - provide my files the road where I want
328:39 - to be redirected and I also provide the
328:43 - folder which needs to be
328:46 - parent path okay so this is the folder
328:50 - inside which I want to be um redirected
328:53 - okay so what do we need to implement
328:56 - right now we need to
328:58 - open
328:59 - file.php
329:02 - and right
329:04 - here I'm going to write
329:08 - static a similar way like we have
329:11 - creating here so we are going to write
329:15 - deleting or let's let's use deleted so
329:18 - whenever the record is deleted we accept
329:24 - file model here and
329:28 - if
329:30 - model is folder if it is not folder more
329:34 - specifically if it is not folder from
329:36 - the file system we ALS also need to
329:40 - delete uh storage delete and we are
329:44 - going to
329:45 - provide uh
329:47 - storage
329:50 - path which is the actual path let's open
329:53 - the storage path which is the actual
329:56 - path which holds where the file is
329:59 - located in the file system okay so in
330:03 - our case we save everything locally in
330:05 - the local file system and in the
330:07 - following way if the model is not a
330:10 - folder if it's a folder it doesn't have
330:12 - any files associated in the file system
330:14 - if it's not a folder and if it's a file
330:17 - then we delete that
330:19 - specific uh file from the file
330:22 - system here is one thing which I want to
330:25 - give you as a challenge okay so if I'm
330:29 - trying to delete a
330:31 - folder only one only one folder which
330:36 - has files and folders inside there and
330:39 - the subfolders also have their own files
330:44 - okay according to our implementation we
330:48 - get the direct Children of the given
330:50 - folder let's say as an example I think
330:54 - our um our pictures
330:57 - example uh e-commerce example will be
331:00 - ideal okay so if we have the following
331:03 - e-commerce products folder and I want to
331:07 - delete that so I'm deleting this
331:10 - particular folder or maybe everything
331:12 - inside it let's let's do like this
331:16 - everything inside it so data all is
331:19 - Select will be selected in that case and
331:22 - we are iterating over children and
331:24 - deleting one um one by after another
331:29 - okay so the first one is the folder so
331:32 - if we try to delete the folder there
331:34 - will
331:35 - be files inside there
331:38 - and it will deleting the folder will
331:42 - call the following
331:43 - function and because this one is a
331:46 - folder this if will not be satisfied and
331:49 - nothing will be deleted from the file
331:51 - system okay so the problem is that from
331:54 - the database this particular folder
331:57 - record and all its children records will
332:00 - be deleted but in the file system there
332:04 - will be uh actual files remaining for
332:09 - the corresponding files okay so at the
332:13 - moment I give this challenge to you so
332:16 - you need to figure out the way how you
332:19 - can also delete the
332:23 - files which will be children of that
332:27 - specific given
332:28 - folder okay I hope this makes sense a
332:32 - very quick recap so whenever we try to
332:35 - delete everything from that specific
332:37 - folder
332:38 - the children will give us a Four Element
332:41 - array so we delete child delete four
332:44 - times thus this function will be
332:47 - executed four times for the first one
332:50 - this is not a file it is folder so
332:52 - nothing will happen inside the function
332:54 - for the rest of the files from the
332:56 - storage the corresponding storage path
332:58 - files will be deleted for for those
333:00 - files it is okay however because this is
333:03 - a folder the entire folder will be
333:05 - deleted with its children however the
333:08 - actual files will not be deleted from
333:10 - the file system okay so you need to
333:13 - figure out how you can delete the actual
333:16 - storage uh files from the file
333:19 - system okay so that's perfect now we are
333:22 - going to move on the and also let me
333:25 - know in the comment section if you have
333:28 - implemented that challenge because
333:30 - that's going to be really interesting to
333:31 - see
333:33 - that um yeah okay let's move on on the
333:37 - front end site and I am going to open my
333:47 - files okay so let's have a look in the
333:51 - browser I'm going to create checkboxes
333:54 - right here inside the header as well as
333:57 - for each file and whenever we click on
334:00 - the checkbox I'm going to highlight the
334:01 - row and I'm going to also Mark the
334:03 - record as
334:06 - selected if if we
334:08 - check resources section and by the way
334:12 - from the stalker folder we can delete
334:13 - the previous version folders we don't
334:16 - need that okay actually let me
334:20 - delete okay if we go under resources JS
334:24 - components here we have this checkbox
334:26 - okay now I'm going to use that checkbox
334:29 - component inside my
334:32 - files so in the header I'm going to
334:35 - create one additional th let's give it
334:38 - the same CSS classes and now let's use
334:43 - checkbox okay we have to provide whether
334:46 - this is checked or not at the moment
334:48 - let's give it
334:51 - false and that should be with two column
334:55 - and let's
334:57 - create one
335:01 - TD right here with the similar checkbox
335:06 - inside and
335:08 - and similar tnd CSS classes okay if I
335:13 - save this and have a look okay we see
335:16 - checkbox we see checkbox right here as
335:19 - well
335:21 - um let's remove this flex and item
335:28 - Center
335:30 - okay
335:32 - perfect let's reduce the width of that
335:35 - specific column so in this th I'm going
335:39 - to give it width to be 30 pixel and Max
335:44 - width to be 30 pixel as well and let's
335:48 - reduce the pting right as
335:51 - well okay I think
335:55 - that's that's better so we reduce the
335:57 - size we can even
335:59 - reduce even
336:01 - more pting
336:04 - right was the pting right okay we should
336:09 - give these classes
336:10 - to TD as
336:13 - well
336:15 - okay that's that's
336:19 - better now I'm going to Define two refs
336:23 - so this is the TD and it should have V
336:28 - model um I want to Define now selected
336:32 - object and all selected property so
336:35 - let's actually Define it I think it's
336:37 - going to be um it's going to be better
336:41 - so inside revs const all selected will
336:47 - be
336:49 - false and we
336:52 - need
336:55 - const selected which needs to be
337:01 - object so then right here I want to
337:04 - provide selected for the file ID so we
337:08 - have file right here and select it will
337:10 - be an object where the key will be file
337:13 - ID and the value will will be whether
337:15 - that specific file ID is selected or not
337:19 - and in the checked we need also
337:23 - selected
337:25 - file file. ID okay however if
337:31 - the if this selected file ID does not
337:34 - exist
337:35 - because by default selected object will
337:38 - be an empty object okay and if it
337:41 - doesn't exist then we need to use all
337:45 - selected okay if all is selected we need
337:48 - to also select that specific
337:51 - record let's move up and right here we
337:54 - need to provide all
337:56 - selected
337:59 - and that should be not checked that
338:02 - should be probably V model or we can do
338:05 - like this V model and Che checked all
338:09 - selected and let's use now change
338:12 - whenever we change this we want to
338:16 - select everything so I'm going to create
338:18 - new function on select all change maybe
338:24 - so I'm going to copy the name and define
338:28 - that function at the bottom
338:32 - under under
338:34 - functions methods uh right here okay FN
338:40 - on select all
338:41 - change and I want to now
338:45 - iterate okay how should I do
338:48 - that I want to now iterate over all my
338:52 - files which what is rendered right now
338:55 - here and I want to mark all of them as
338:59 - selected and even when I scroll down
339:02 - below and load more content the others
339:06 - should also be selected because select
339:09 - all obviously means not only what we see
339:13 - but even those files and folders which
339:15 - we don't see but that is there when we
339:18 - scroll down below and appears okay so
339:21 - this is how we are going to do so we
339:24 - obviously have right here um all files
339:28 - right which is this const a by the
339:31 - way
339:34 - what why do I have this here okay let me
339:40 - remove okay so we have all files now I'm
339:45 - going
339:45 - to use all files value and that has data
339:50 - let's check yeah that has data and now
339:54 - inside there I want to hold
339:59 - on come on ph storm for
340:05 - each okay and for for for each file
340:09 - inside these all files um in the
340:12 - selected value for the F ID I want to um
340:19 - give it the same value whatever is the
340:22 - all
340:23 - select.
340:26 - value okay let's let's test so far I'm
340:30 - going to bring up the developer tools
340:32 - just in case we have some errors we need
340:34 - to know it about it immediately so I
340:36 - click all and now it selects everything
340:39 - okay however if you scroll other
340:41 - content okay the other content is also
340:44 - selected which is awesome but how is
340:48 - that selected by itself because all is
340:53 - selected okay here's one important thing
340:56 - it looks like everything is selected
340:58 - right now but
341:02 - actually if we print let's print it
341:05 - right
341:06 - here what
341:08 - is
341:16 - selected okay reload and we see right
341:20 - now I think only 10 records and again we
341:22 - can check
341:24 - this uh 10 yeah we only see 10 if I
341:27 - click on all selected we see 1 2 3 4 5 6
341:31 - 7 8 9 10 if I scroll down below we see
341:35 - more than 10 is selected but this still
341:38 - shows a length of 10 and if we try to
341:41 - now get the IDS of selected records it's
341:45 - not going to give us the um
341:48 - correct um it's not going to give us the
341:50 - correct IDs however in that specific
341:54 - case we have all selected and all
341:58 - selected is what we are going to send to
342:01 - the back end right so if I untick that
342:04 - all selected becomes false and in this
342:07 - case we need to send whatever is
342:10 - actually selected now let's try to
342:12 - select one two records and as we see now
342:17 - those will become
342:19 - true okay this is awesome now let's also
342:26 - highlight let's also highlight the row
342:29 - which is selected
342:31 - so right
342:33 - here uh I'm going to give it some like
342:36 - light gray color uh to the row whichever
342:41 - is selected so maybe I need to Define
342:50 - class class here and if
342:54 - selected for that specific ID is
342:59 - true um or maybe all selected is true
343:05 - then we are going to give it BG blue 50
343:11 - um otherwise we're going to give it BG
343:16 - white um and that's it yeah let's remove
343:19 - this PG white okay if that specific row
343:22 - is selected or all rows are selected
343:26 - then we give it p uh BG blue okay let's
343:29 - have a look okay we see it has
343:33 - this uh
343:36 - BG BG
343:38 - blue however on Mouse over it changes
343:42 - into into
343:44 - gray so what I'm going to do is change
343:48 - this on Hover from BG gray into maybe BG
343:53 - blue
343:58 - 100
344:00 - okay I like I like this now I select all
344:04 - and all records are selected so we have
344:08 - implemented actually
344:10 - selecting selecting rows selecting files
344:13 - and we have now two variables one is all
344:16 - selected and second is the selected
344:20 - object where we have this uh key which
344:23 - is the file ID and the value whether
344:25 - that specific file is selected or
344:28 - not now let's add two more additions to
344:31 - this selection system whenever we click
344:35 - on the file we it should also select
344:39 - that specific file okay double click
344:41 - opens the folder single click should
344:44 - select that file or folder because
344:46 - that's the easier way to Mark the file
344:48 - selected we can just click on them and
344:51 - they will become selected okay so let's
344:54 - go in the
344:56 - checkbox and I'm going to U listen to
345:00 - The Click event on that checkbox or
345:05 - maybe um okay let me think now we need
345:08 - to listen to The Click event of this row
345:12 - so whenever we click on the row uh let's
345:15 - get event right here and I'm going to
345:18 - execute the function and let's call the
345:21 - function uh toggle file select and we're
345:25 - going to provide file
345:30 - here okay that function doesn't exist we
345:33 - are going to create
345:35 - that let's scroll down below under
345:39 - methods and create
345:42 - that I toggle file select we accept file
345:46 - here and
345:48 - under selected value for the given file
345:53 - ID we're going to set the inverse
345:57 - whatever is already there for that
345:59 - specific
346:01 - ID in the
346:05 - selected Okay so Let's test this when I
346:07 - click on this it gets selected when I
346:09 - click again it gets deselected okay this
346:12 - is what we have just implemented and if
346:15 - we
346:19 - print selected here we will also see
346:23 - that the actual value gets true and
346:26 - false um just
346:31 - respectively another thing what we might
346:33 - need to do is whenever we start
346:37 - selecting files and we select all the
346:39 - files which is there and let's let's
346:42 - open this e-commerce products okay and
346:45 - test
346:46 - maybe yeah here we only have like six uh
346:50 - six files so if I start selecting and
346:53 - select all of them select all should
346:57 - become selected as
347:00 - well okay so how we're going to do this
347:03 - so I'm going to listen to
347:05 - change um on
347:09 - select
347:12 - checkbox
347:15 - change and we create that
347:22 - function or we accept
347:24 - file do we pass file no we don't pass so
347:28 - we accept an event right here call the
347:30 - function and pass
347:35 - file okay and and then I'm going to
347:37 - check
347:40 - if
347:42 - selected value for the file ID if that
347:47 - uh if that doesn't exist okay uh if we
347:51 - set this into false we are going to set
347:54 - all selected. value into false as
347:59 - well okay if everything was selected or
348:03 - even it doesn't matter so if we marked
348:05 - that specific row as not selected then
348:09 - obviously all selected should be false
348:11 - as well and that is particularly useful
348:16 - if we opened and selected all and now
348:20 - all selected is true and we are going
348:24 - to
348:25 - print all selected and selected so that
348:29 - will give us good understanding okay I
348:32 - selected everything and we see all
348:34 - selected is true however ever if I just
348:38 - unselected one we see that this is
348:41 - false however this is still true and
348:45 - because of that that reason we still see
348:48 - this row selected okay even though it
348:50 - has actual internal value false so
348:53 - that's
348:54 - why if we scroll down below we are going
348:58 - to um set that all selected value to be
349:03 - false however why that didn't work
349:09 - unchange if selected value for file ID
349:12 - if that
349:13 - is false then we said okay let's try to
349:17 - debug
349:20 - this click everything and then click on
349:26 - that okay okay that makes sense so we
349:30 - have added the change listener and we
349:33 - are not actually listening to the click
349:35 - of the row if I just click on checkbox
349:38 - then the debugger is triggered and we
349:40 - see all is false this is also false and
349:44 - using the checkboxes I can easily
349:45 - disable that however clicking on the row
349:48 - should do the same
349:50 - thing toggle file select okay whenever
349:55 - this
349:55 - happens uh I'm going to call this same
349:58 - method and pass
350:01 - file below the page select all and then
350:04 - click on the row and voila now we see
350:08 - that all selected is false and I'm going
350:10 - to remove the
350:12 - debugger select all and then dis select
350:16 - and we see all selected is false and now
350:19 - we whenever we make request to the back
350:21 - end we're going to send IDs not these
350:24 - all selected
350:26 - false okay that's perfect
350:29 - however what should we do in else case
350:31 - whenever we just marked the row as
350:34 - selected okay so if if if this is the
350:38 - case when we just selected the last
350:42 - unselected record in this folder we
350:45 - should Mark all selected true as well so
350:50 - let's do a very simple operation let
350:54 - checked equals true let's assume that
350:58 - everything is checked and now we're
351:00 - going to do a simple Loop if file of all
351:05 - files
351:07 - value. data we iterate our all files and
351:12 - if not
351:16 - selected uh do value or the file ID if
351:21 - at least one of them okay so we iterate
351:24 - over all selected files and if at least
351:27 - one of them is false I said checked to
351:31 - be
351:33 - false and I break immediately L and at
351:37 - the end of the for Loop I'm going to set
351:40 - all selected. value equals
351:45 - checked now if I select everything then
351:49 - I unselect one of them and then I select
351:52 - again that makes all selected true again
351:56 - or if I just start um selecting
352:01 - everything that selects all selected
352:04 - true as well however we should also keep
352:07 - in mind
352:09 - that um we don't see all the records
352:14 - okay so if I
352:16 - selected all the
352:19 - records I
352:22 - see well obviously I won't be able to
352:25 - select all the records what I see right
352:27 - here because as soon as I try to reach
352:31 - the end of the scroll
352:33 - section it's going to load additional
352:37 - files okay so it is not possible me to
352:43 - select all the records right
352:47 - here while also having other records in
352:51 - the database behind which is not loaded
352:55 - yet because I will not be able to reach
352:58 - the end of the
353:00 - scroll okay this is my
353:03 - point so actually if I manage and select
353:08 - everything right
353:14 - here then this will Mark all selected
353:17 - true as well okay so here I'm going to
353:21 - give you additional Challenge and just
353:24 - uh spend time on those CH challenges
353:26 - because these challenges will give
353:28 - you like a a huge huge understanding so
353:32 - you might have some struggle
353:35 - implementing those challenges but
353:37 - believe me these challenges will teach
353:39 - you a lot so whenever you select one
353:41 - record and then you select shift you
353:45 - just hit shift on your
353:47 - keyboard and select click on here for
353:52 - example it should it's right now
353:56 - highlighted just a marked selected texts
354:00 - but it should
354:02 - select the these three records as well
354:07 - okay and hint will be you need to keep
354:12 - track on the indices of the selected
354:16 - records more importantly you need to
354:18 - keep track on the last selected record
354:22 - indise index so in this case the last
354:25 - selected record index will be documents
354:27 - which has index 4 or if we start
354:30 - counting from zero it's going to have
354:31 - index three okay and then whenever you
354:35 - just select try to select new record and
354:38 - also you have shift on your keyboard hit
354:44 - selected then you need to uh Mark every
354:49 - other record in that range from this
354:53 - index to this index the last saved index
354:57 - uh also selected uh you should also
355:00 - consider the case when you select the
355:02 - first the record below and then the
355:05 - record using shift above okay that
355:09 - should Mark those four records selected
355:12 - as well okay just few hints and good
355:15 - luck on implementing this particular
355:19 - feature now let's try to actually send
355:22 - request and delete the selected files
355:25 - and later we're going to also Implement
355:27 - downloading files and we're going to use
355:30 - the exact same selection mechanism down
355:33 - for downloading the files
355:37 - okay
355:38 - so let's remove this
355:41 - pre-ex and I'm going to um Define uh
355:45 - right here a button maybe to delete
355:51 - selected
355:52 - records but let's have a look in the UI
355:55 - so we have this bread crumbs and I'm
355:57 - going to put those buttons next to the
355:59 - great breadcrumbs right here so the
356:02 - breadcrumbs are inside the nav we have o
356:05 - and let's define let's create one div
356:10 - right here and inside there I'm going to
356:12 - Define this delete button however I'm
356:14 - going to create new component for that
356:17 - under up and let's call these delete
356:22 - files
356:25 - button okay um I'm going to actually
356:28 - copy uh the
356:31 - component the button CSS
356:34 - classes okay that should be normal
356:38 - button with some T SES classes so I I
356:42 - just didn't want to type that so that is
356:44 - something which I also copied so it has
356:47 - some positions and paddings and um also
356:51 - it supports this dark mode as well which
356:53 - I copied also from the
356:55 - uh from the official documentation okay
357:00 - and we need the the most important thing
357:02 - is that we are going to listen to click
357:05 - of this button
357:06 - okay we can add prevent but we actually
357:09 - don't need in this case and on delete
357:12 - click let's call this function on delete
357:16 - click in the methods we have this on
357:19 - delete click at the moment let's just uh
357:22 - print a console log
357:25 - delete inside this button I want to have
357:28 - a trash icon so I will open hero
357:31 - icons I will type trash here I didn't
357:35 - type trash
357:38 - I copy the SVG
357:40 - paste right here okay let's also write
357:43 - text
357:45 - delete save
357:48 - that uh we don't see the button because
357:50 - we don't include this button so delete
357:53 - files button is here so I save that and
357:57 - we see delete button right here okay
358:00 - that's perfect however this delete um
358:03 - delete files button needs to accept two
358:06 - main properties okay so under props
358:10 - let's
358:12 - define const props equals Define props
358:17 - and we're going to have uh Delete
358:20 - all and that's going to be it's going to
358:24 - have type of
358:26 - Boolean and default value will be false
358:31 - and the second prop will be delete IDs
358:36 - which by default will have type of
358:39 - array and
358:43 - required will be
358:46 - false
358:48 - and let's make this
358:52 - required uh false as
358:57 - well so this is good and I'm going to
359:01 - Define also
359:04 - emit Define
359:07 - emit delete okay when whenever files are
359:10 - actually deleted I'm going to emit this
359:13 - event
359:15 - delete okay now we have this delete all
359:17 - and delete IDs which we need to pass
359:20 - from here delete all will be um just IDs
359:26 - okay IDs from the selected object so
359:31 - here we have that selected object and we
359:33 - want to get only IDs from there
359:36 - for this I'm going to Define inside my
359:39 - files um one computed property called
359:43 - selected
359:45 - IDs let's call
359:49 - computed and we have the selected object
359:52 - again you remember how that looks like
359:54 - so we have ID like one corresponds to
359:57 - True two corresponds to false whatever
360:01 - so I'm going to call
360:03 - object entries so I'm going to convert
360:07 - this um object into an array okay so I
360:12 - pass selected. value and these object
360:16 - entries will give me the following array
360:20 - okay one
360:23 - true and two false so
360:28 - now I have this array and I can call
360:32 - filter on this array okay I have the
360:36 - element and then this a corresponds the
360:40 - following sub arrays so I'm going to
360:43 - filter those records which has a at
360:48 - position one to be true okay so if here
360:52 - we have true then I need this ID if here
360:56 - we have false then I don't need this ID
361:00 - so I'm filtering where the second
361:02 - element inside this array is true and
361:05 - finally I'm I'm going to map this into a
361:09 - at Z so by the by calling the following
361:14 - the selected code this will finally will
361:17 - give me the following array and then I'm
361:19 - mapping this array into just an ID okay
361:25 - so finally this will return this ID this
361:29 - array the final result of selected IDs
361:32 - will be this so I can get these selected
361:34 - IDs
361:37 - let's
361:38 - delete um my junk work uh we have the
361:42 - selected IDs and I need to pass the
361:46 - selected IDs right
361:49 - here uh White does
361:51 - underline type string array is not to
361:54 - type oan okay this is delete all so we
361:57 - have to pass all selected here and we
362:01 - have delete IDs then that will be
362:04 - selected IDs but I also want to
362:07 - print what is selected
362:12 - IDs so let's have a
362:15 - look reload the page here we see so if I
362:20 - just unselect now this is an empty array
362:23 - so I select multiple records I unselect
362:26 - and the elements inside this array are
362:29 - added and removed perfect if I go in the
362:33 - delete files button we can also print
362:39 - um delete all
362:42 - and all um delete IDs delete IDs
362:50 - right okay false and empty array if I
362:53 - select records this array
362:57 - increases now let's Implement an actual
363:00 - delete but we also want to add
363:02 - confirmation right now if I just click
363:05 - click on delete I get this delete and
363:09 - right here we can also print what is um
363:14 - all how it's
363:18 - called delete all and delete IDs but we
363:21 - to get this from
363:23 - props delete all and props delete IDs if
363:29 - I just click on that we see false and
363:31 - empty array if I select few records
363:34 - click on that we see IDs if I select all
363:36 - click delete we see this true right
363:40 - here okay we need confirmation whenever
363:43 - user clicks on the delete let's first
363:45 - show are you really sure you want to
363:48 - delete those files because the operation
363:50 - cannot be undone or something like this
363:53 - in this delete files button I'm going to
363:56 - create uh well we don't actually have
363:58 - this confirmation dialogue don't
364:00 - we uh no we don't have this confirmation
364:04 - dialogue so in these components I'm
364:08 - going to
364:10 - create confer
364:14 - confir
364:17 - dialogue
364:19 - um here we're going to use Modo which is
364:24 - already um some the component what we
364:27 - have already used and we need to provide
364:31 - show right here if the modu needs to be
364:33 - displayed or not uh we also need to
364:37 - provide Max WID I'm going to provide MD
364:41 - in this case let's give
364:46 - some
364:47 - ping let's give it
364:52 - H2 we have some dialogue don't we we
364:55 - have error dialogue so I
364:59 - can copy these tiles however I need to
365:03 - remove this text Red
365:06 - also this error should be like a
365:10 - please
365:13 - confirm and I need one paragraph where
365:17 - we will display
365:20 - message I need footer section as
365:24 - well let's give it margin top six flex
365:28 - and justify end and inside there I will
365:32 - have secondary button
365:35 - and whenever we click on this
365:40 - button uh we need
365:43 - to we need to emit cancel let let's
365:48 - accept event and call
365:54 - emit
365:56 - cancel let's give it text cancel as
366:02 - well and we
366:04 - need uh danger button as
366:07 - well which which will be um red
366:11 - button let's give it margin left
366:15 - three and whenever we click on
366:19 - that I want to
366:26 - emit uh
366:29 - confirm however let's define
366:34 - emit Define
366:36 - we need cancel
366:42 - and
366:46 - confirm Also let's
366:49 - define
366:52 - props show which will be
366:56 - Boolean and message which will be
367:04 - string let's move those
367:07 - Imports top emiter is not
367:10 - necessary we have now this delete files
367:15 - button and the component confirmation
367:18 - dialogue and I can display this
367:21 - confirmation
367:22 - dialogue right here however we need to
367:26 - provide show to be show delete dialogue
367:32 - as a true false variable so I
367:36 - refs const show delete dialogue will be
367:41 - by default false let's import
367:45 - ref let's put at the
367:48 - top we need to provide also
367:51 - message message will be are you sure you
367:58 - want to delete selected
368:02 - files okay and we need to listen to
368:05 - cancel
368:08 - on delete enel and
368:17 - confirm on delete
368:22 - confirm okay so what do we do on delete
368:25 - cancel
368:27 - um we need to just hide the model right
368:31 - uh let's put this right here until it
368:35 - cancel
368:36 - uh
368:37 - show show delete dialogue. value needs
368:42 - to be
368:45 - false whenever we click on the button on
368:48 - delete
368:50 - click we need to show delete dialogue.
368:56 - value to be true so we need to show the
369:01 - confirmation uh and we need on delete
369:04 - confirm as well
369:07 - which will be
369:09 - actually deleting
369:17 - records now let's check this in the
369:21 - browser so I click delete uh we don't
369:24 - have text inside the confirmation
369:26 - dialogue so that should be
369:28 - [Music]
369:29 - confirm okay perfect I click on confirm
369:32 - and we see this console loog so
369:36 - that's great I think that's great
369:38 - because now we can make request from
369:42 - here to actually delete the records so
369:46 - for this we need to define the form so
369:49 - in the refs or maybe in the
369:53 - uses uh I need two things I need page
369:57 - use
369:59 - page uh where's the import let's move
370:02 - Imports
370:07 - here and I
370:09 - need um delete files form as well use
370:20 - form so we said all to be
370:23 - null and we set IDs to be an Mt okay so
370:28 - all and IDs needs to be the exact same
370:32 - names what we have given in the
370:37 - request up HTTP request destroy files
370:41 - request under
370:43 - rules okay so make sure you have the
370:45 - same names and we also need parent
370:50 - ID uh and we give it to
370:55 - null okay
370:57 - now whenever we are about to
371:03 - confirm um
371:08 - right
371:09 - here I'm going to give parent ID to be
371:14 - uh page
371:16 - props uh folder.
371:21 - ID and I'm going to check if props
371:25 - delete if delete all
371:28 - exists we set delete files form all
371:34 - equal
371:36 - equals um
371:40 - true
371:42 - otherwise delete files form. IDs equals
371:48 - props do delete
371:51 - IDs then on that delete files form I
371:56 - call
371:58 - delete and
372:01 - root file. delete
372:06 - so we we have the following rout while
372:10 - the delete so we're going to make delete
372:12 - request on the following endpoint and we
372:15 - need to listen also the
372:18 - success uh
372:20 - callback on
372:27 - success uh first we're going to hide the
372:30 - dialogue value equals
372:33 - false and I'm going to AIT an event
372:39 - delete and we also need to
372:43 - show success notification
372:49 - later okay what else I'm going to do
372:52 - here on delete click I'm going to check
372:55 - so if props
372:59 - delete if props Del it all is false so
373:03 - and all also
373:06 - props uh Delete IDs do length does not
373:12 - exist okay if no select all and no ID is
373:17 - selected then we're going to probably
373:20 - show error dialogue uh please select at
373:25 - least one file to
373:28 - delete and I'm going to return from here
373:30 - immediately let me import this show
373:32 - error dialogue from event Pass Perfect
373:36 - reload the page click on delete button I
373:38 - see error please select at least one
373:40 - file to delete I select this file I'm
373:44 - going to open now Network and click
373:46 - delete I get the confirmation I sure
373:48 - want to delete selected files I'm going
373:50 - to click cancel the module Heights
373:53 - nothing happens I click confirm the
373:56 - request is
374:00 - made and we don't have any errors and
374:03 - the file disappears as well so let me
374:05 - try to
374:09 - delete
374:11 - okay uh that file let's
374:14 - reload that file was actually deleted
374:17 - now pay
374:18 - attention so this is here delete
374:22 - confirm okay that
374:26 - disappeared select delete
374:29 - confirm okay call to member function
374:31 - delete on N now let's have a look
374:36 - okay um in the IDS we pass two IDs and
374:41 - that happens because the previously
374:43 - deleted record
374:45 - ID is still inside the IDS array from
374:51 - these my
374:52 - files so here we have this selected let
374:56 - me explain
374:58 - this
375:02 - clearly reload the page we see an empty
375:05 - object I select this file we see um 89 I
375:09 - click on delete confirm and look at this
375:11 - so This 89 is still there it is still
375:15 - there and if I click another one now we
375:17 - have two IDs and whenever we click
375:19 - delete and the request is made uh the
375:22 - back end tries to still delete this
375:26 - 89 which does not exist okay and that's
375:30 - why we get this error so we can add
375:32 - extra check on the back
375:35 - and we open um destroy function right
375:40 - here uh when we select the file we can
375:44 - do an extra check if the
375:46 - file uh exists only delete in this case
375:49 - if the file doesn't exist don't delete
375:53 - that and that will I guess fix the
375:57 - problem however we can fix the problem
376:00 - on the front end as well so we have this
376:03 - delete button and we can simply listen
376:07 - to delete event right there and whenever
376:11 - that happens we can clear the selected
376:16 - let's listen
376:17 - to delete and whenever this is triggered
376:22 - on
376:23 - delete scroll down below under
376:28 - methods we can set all selected. value
376:33 - equals false
376:35 - and selected IDs do
376:39 - value equals an empty
376:42 - array uh empty object that should be an
376:45 - empty object okay reload the page select
376:49 - one click on
376:52 - delete click on
376:54 - confirm uh that was deleted but it is
376:57 - still
376:59 - there okay
377:03 - um how that
377:10 - happens uh was that
377:13 - triggered selected IDs that
377:18 - Valu Oops I did something wrong it
377:22 - should be
377:25 - selected select delete confirm and now
377:28 - this gets an empty object so whenever we
377:30 - click on the other file and click on
377:32 - delete it will only make make request
377:36 - with one and only one
377:41 - ID okay let's go
377:44 - inside e-commerce
377:47 - products and I'm going to go inside
377:50 - test let me remove this
377:55 - selected go
377:57 - back click on e-commerce products and
378:01 - test and I'm want to click now select
378:03 - all and let's bring up the terminal
378:06 - again and I'm going to click delete and
378:08 - confirm now that send request all true
378:13 - and this is exactly what we wanted and
378:16 - on the back end everything inside that
378:17 - folder was
378:21 - deleted that is awesome and that is
378:26 - perfect okay so we have implemented
378:29 - deleting the files
378:33 - however now
378:37 - I gave you challenge earlier and now I'm
378:40 - going to recall on this challenge under
378:43 - storage up
378:46 - files and under user
378:50 - two okay let me open this in
378:54 - Explorer okay so we have like 108 items
378:59 - so that's too much we shouldn't have
379:00 - that much but anyway we are testing and
379:03 - we're building so it's okay there are
379:05 - more files than then we should have that
379:09 - so we have 108 files here if I come and
379:13 - click on one file and click on delete
379:15 - and confirm the file was deleted from
379:17 - the database and if I simply refresh
379:21 - that now we have 107 items so that shows
379:25 - that we have successfully deleted file
379:26 - not from only the database but from file
379:29 - system as well however if I go inside
379:32 - these e-commerce products or maybe just
379:35 - select this e-commerce products okay and
379:39 - also I want to check the
379:42 - database so we have 135 rows I selected
379:46 - only one item and click on delete and
379:49 - confirm now I'm going to check the
379:51 - database and in database
379:55 - now uh okay my bad uh that was deleted
379:59 - however we have soft deletes and that's
380:02 - why um the actual records we are not
380:06 - deleted so let's filter this by deleted
380:09 - at is not
380:12 - null well it should be is n i want only
380:16 - those files which are not deleted um and
380:19 - let me upload now this my e-commerce
380:22 - products
380:25 - folder okay folder eom products already
380:28 - exists uh hold on why does it exist
380:39 - uh why did it
380:42 - exist okay let's delete this test um we
380:47 - have this e-commerce
380:51 - products uh something is wrong inside
380:54 - the uploading and I just I just caught
380:58 - in pag but I need to reproduce this pag
381:06 - but again let's get back to the what I
381:08 - was trying to show to you so we have
381:10 - these e-commerce products and inside
381:12 - there we have this test okay I want to
381:15 - focus on this test folder right now in
381:17 - the database we have
381:20 - 126 non- deleted records in the file
381:26 - system we
381:28 - have3 items selected now I'm going to
381:32 - delete this particular folder
381:35 - okay and from the database now we have
381:38 - four less records because inside that
381:41 - folder there were three files in one
381:43 - folder and three files were deleted
381:45 - successfully okay however if they check
381:49 - the file system and I'm going to refresh
381:51 - we still have 113 items right there
381:57 - okay that is actually right now correct
382:01 - so the
382:02 - challenge I gave to you and hopefully
382:06 - you have
382:07 - implemented uh because you would learn a
382:10 - lot of things while implementing
382:13 - that that challenge is not um not what
382:18 - we want right now
382:20 - okay so we are going to have a trash
382:24 - trash system so we have files marked as
382:29 - deleted and later we are going to
382:32 - implement recovering those files from
382:34 - Tres and those files which are still on
382:38 - the file system should stay still on the
382:41 - file system because we want in the
382:44 - future to recover them however in the
382:46 - future if we delete those files uh like
382:49 - permanently from the uh trash we would
382:51 - obviously want them to be deleted from
382:53 - the trash okay so this is what I wanted
382:57 - to mention right now everything works as
383:00 - it should work when we delete the folder
383:03 - it is marked as deleted from the
383:05 - database uh but the files are actually
383:10 - deleted from the file system which is
383:12 - something we need to
383:16 - fix right here so this is what we have
383:19 - implemented and this is what deletes the
383:22 - actual file from the file system but I'm
383:25 - going to comment this part of code uh
383:28 - I'm commenting this because uh I might
383:31 - activate it later okay but at the moment
383:34 - I don't want any files from um from the
383:37 - file system to be deleted because in the
383:39 - future I might need to implement the
383:42 - trash and recover them from the trash
383:45 - okay so that is the whole idea about the
383:47 - deleting files now let's start working
383:49 - on downloading files we're going to
383:52 - implement downloading a single file as
383:54 - well as downloading multiple files in a
383:57 - zip format or downloading a folder in a
384:00 - zip format so I'm going to open file
384:04 - controller and let me create new action
384:08 - um under all the public actions public
384:11 - functions right here so let's call this
384:15 - download okay so we want to accept some
384:18 - form of request and the request we're
384:21 - going to accept is very similar to this
384:23 - destroy files request so the whole idea
384:26 - is that we are going to have all as well
384:29 - as
384:30 - IDs right here so if all is selected it
384:33 - obviously means that we're going to
384:35 - download every file if IDs is provided
384:38 - it might be a single folder or a single
384:42 - file or just maybe multiple files so I
384:46 - want to use the this destroy files
384:48 - request but obviously the name is does
384:52 - not describe exactly what we want so I
384:55 - will try to rename these destroy files
384:57 - request into something
385:00 - like um files
385:04 - action request okay so we are doing some
385:08 - sort of actions in the future you can
385:11 - Implement other types of actions such as
385:14 - move into another folder or uh we
385:17 - already have or copy maybe I don't know
385:19 - so this is just more generic request uh
385:24 - class okay so the class name and the
385:26 - file name was also renamed the usage
385:29 - right here in the destroy was renamed as
385:31 - well and now let's accept right here
385:34 - files action
385:36 - request here we have the request and now
385:39 - what we are going to do so first we're
385:41 - going to get the data let me copy these
385:43 - parts so we need parent we need
385:45 - data I'm going to copy this
385:50 - part and now I'm going to uh get all as
385:54 - well from data all if that doesn't exist
385:59 - let's assume it is
386:01 - false and let's get IDs
386:05 - data IDs if that doesn't exist let's
386:08 - assume it is an empty array okay now
386:11 - let's check so if all is true or let's
386:15 - do first if uh let's actually return
386:19 - immediately if all is false and if IDs
386:25 - is
386:27 - empty empty IDs so I'm going to return
386:36 - message please select files to
386:42 - download
386:44 - okay now let me check now if all is true
386:50 - we are going to uh generate zip
386:53 - obviously if all is true it means that
386:55 - we have to download everything what we
386:57 - see right here and that means we have to
387:00 - create
387:02 - zip so I'm going to create a function a
387:05 - private or protected function in this
387:08 - class uh and I'm going to call this
387:10 - create zip okay so that's going to be
387:13 - the uh main function which will generate
387:16 - the zip but in this case I will just
387:18 - assume that function already exists so
387:22 - create zip and I'm going to pass the
387:26 - children of the current folder okay and
387:29 - the current folder is this parent so
387:33 - parent children I pass all the children
387:37 - to this and I assume that this function
387:40 - create zip function will create an
387:42 - actual Z and return the URL from here
387:46 - and I want also want to create a new
387:49 - variable called file name which will be
387:52 - the download file name of this ZIP and
387:55 - let's give the file name to be parent
387:58 - name uh dot zip okay so if I go
388:07 - if I go just a
388:09 - second my keyboard stopped working I
388:12 - have wireless keyboard and stopped
388:14 - working for some
388:18 - reason so here we generate the file name
388:22 - okay so if I just open the browser and
388:25 - if I go inside the pictures and I try to
388:27 - download everything I want the
388:29 - downloaded zip to be pictures. Z because
388:33 - I'm inside the picture
388:34 - okay I hope that makes sense um okay
388:37 - let's consider the else case obviously
388:40 - so if all is not uh true then obviously
388:44 - we we have IDs now let's check if count
388:49 - of IDs equals one okay if there is
388:53 - selected only one file or folder okay
388:56 - for example for example this one okay or
389:01 - this one but let's assume that it is
389:03 - folder first so we need all we have also
389:06 - two cases if we're going to select the
389:08 - file first what I
389:11 - did
389:14 - file find so we are going to
389:18 - find the file and then I'm going to
389:22 - check if file is
389:25 - folder so again I'm going to download
389:29 - zip but again let's make one additional
389:32 - check if file
389:34 - file
389:36 - children count equals zero okay if there
389:41 - are if the user selected only one folder
389:45 - but there are no files or folders inside
389:48 - that folder we are going to return with
389:54 - message the folder is
389:58 - empty
390:00 - however if there are more than Z zero
390:04 - children right there so if there are
390:06 - some something inside that folder then
390:10 - I'm going to create zip and give it a
390:13 - file name okay so let's create the zip
390:16 - in this case I'm going to give it file
390:20 - children because this is the file we
390:23 - want to download so let's imagine that
390:25 - this is the file I want to download and
390:27 - I'm going to give this create zip
390:30 - function the children of that file
390:32 - folder in this case so when I say file
390:36 - uh sometimes because we save everything
390:38 - in the files table in the database when
390:41 - I say file sometimes I also mean folder
390:44 - okay so all of them are
390:46 - records um these and these as well are
390:50 - all records from the database table
390:55 - files okay what about the name so name
390:59 - in this case will be
391:01 - file fil name. zip
391:04 - okay so we have URL and file name and
391:06 - this is what I am going to return from
391:09 - this function um at the end of this
391:12 - function
391:13 - basically okay if it is not a folder
391:16 - then obviously it is a single file okay
391:20 - if the count is one and if it is not a
391:23 - folder it is a single file and I want to
391:27 - uh download that single file okay so in
391:30 - this case I'm going to move that file
391:35 - into web accessible place so every file
391:39 - at the moment what we have is
391:42 - under
391:44 - storage app files okay everything is
391:48 - right here but none of the files are
391:50 - accessible in the browser so we can't
391:53 - actually access through this file name
391:55 - uh in the URL we canot do this because
391:57 - all of them are are not um web
392:01 - accessible what we need to do is to move
392:04 - them or copy them inside the public
392:09 - directory okay and then download from
392:13 - there so in this
392:16 - case I'm going to Define
392:19 - path which will be public actually let's
392:22 - do like this public
392:25 - slash and I'm going to copy into the
392:28 - following path okay the actual uh file
392:31 - so I'm going to use path in
392:35 - info of the
392:39 - file storage
392:42 - path that is the actual path where the
392:45 - file is saved and we can check this in
392:47 - the database as
392:51 - well have a look so here we have this
392:53 - storage path and we're going to take
392:55 - that path and I want to get the base
392:59 - name okay whatever is after the last
393:02 - slash for slash so this is the base name
393:05 - so I'm getting the base name and moving
393:08 - this the base name is actually unique so
393:11 - we are going to copy let's create a new
393:15 - destination uh
393:17 - and
393:20 - actually let's call this destination
393:26 - directly okay now I'm going to call
393:31 - Storage copy from file storage path into
393:40 - destination so I copy that then I need
393:43 - to get the URL of this copied file so
393:45 - I'm going to create a variable URL which
393:49 - will be asset
393:52 - storage
393:54 - URL let's give it destination that's
393:56 - going to be the path and the
393:59 - file name
394:08 - that actually only accepts URL why do I
394:11 - need to give it a file name I think I
394:14 - don't need to give it okay so we have
394:16 - only URL but I need file name right here
394:19 - file name equals
394:23 - file
394:25 - name all right in the last
394:28 - case will be if number of IDs is more
394:33 - than one okay so it means that we have
394:36 - to again generate zip from those from
394:42 - those given files so in El's case we are
394:45 - going to select files which will be file
394:49 - uh
394:50 - cury
394:51 - where
394:53 - ID um actually we need to call we in
394:58 - because IDs will be an array called get
395:02 - on this this will give us the whole list
395:05 - of files and URL equals this create zip
395:12 - and we pass files here and the file
395:17 - name again will be parent
395:21 - name
395:25 - doz okay so finally at the end of this
395:28 - function I'm going to return an array
395:32 - and we have URL
395:36 - here and we have file
395:43 - name so we have this action ready now
395:46 - let's create this function called create
395:49 - zip at the very
395:51 - bottom I'm going to create that function
395:54 - create zip we accept right here files
395:57 - and it should return
396:00 - string now I'm going to define the path
396:03 - to the output zip file so that's going
396:06 - to be called zip
396:09 - path zip and Slash and I'm going to
396:13 - create a random name St
396:16 - Str
396:19 - random
396:22 - doz okay I'm going to also Define the
396:26 - public path
396:33 - oops public
396:36 - slash uh actually let's use double
396:40 - quotes here uh ZIP
396:44 - path okay so that's going to be the
396:46 - public path where we are going to
396:49 - actually create the U zip and now let me
396:53 - check so if the directory to this public
396:56 - path does not exist we are going to
396:59 - create that okay so if that zip doesn't
397:02 - exist basically we're going to we're
397:03 - going to create that so if not is
397:07 - directory and we're going to pass um
397:10 - deer name right here to the public path
397:15 - so if that doesn't exist we are going to
397:17 - call
397:18 - Storage make
397:21 - directory and dear
397:26 - name public path okay so we create the
397:30 - directory next let's get the the zip
397:37 - file
397:40 - storage path okay so we we're going to
397:42 - get the absolute path so so far we have
397:46 - a relative path right here okay but
397:49 - calling storage path will give us the
397:53 - absolute path of this public
397:56 - path okay now we can already create the
398:00 - archive so zip equals new
398:04 - zip
398:06 - archive and now let's open the
398:10 - zip
398:14 - oops zip open we're going to provide
398:18 - right here the um file name so in this
398:21 - case it will be zip file and we're going
398:24 - to provide also Flags right here so zip
398:27 - archive we want to
398:30 - create if that doesn't exist
398:35 - uh or we can
398:37 - also
398:42 - overwrite let's collapse the right
398:48 - side uh okay why is this giving
398:54 - me okay so we're going to check if the
398:57 - open happened successfully so if that
399:00 - equals true then we are going
399:04 - to write inside the Z but why this this
399:08 - is giving
399:10 - me can't use square brackets for
399:14 - reading zip
399:17 - archive okay zip open file name and
399:23 - flex we have something messed up
399:35 - okay let's continue and see if this red
399:38 - underline uh disappears because
399:40 - sometimes just PHP stor I think this is
399:42 - the reason yeah that was the
399:45 - reason okay so
399:50 - this add file so I'm going to create
399:53 - another function in the very bottom and
399:55 - I'm going to call this um add files to
400:00 - zip so we accepted uh in instance of the
400:04 - zip we accept files
400:07 - and and I'm going to also accept right
400:10 - here
400:12 - ancestors and I'm going to explain what
400:14 - is these
400:15 - ancestors
400:17 - okay so add
400:20 - files add files to zip let's provide zip
400:27 - right here and provide files
400:33 - okay so whenever we open the zip for
400:36 - reading we add files to the zip and we
400:40 - pass this ZIP and pass the
400:43 - files okay so this is now is the main
400:46 - method we should add all our given files
400:49 - into the zip whenever this finishes the
400:52 - work we need to call on zip
400:57 - close and I'm going to return asset uh
401:01 - ass set from here
401:03 - here
401:05 - storage
401:07 - URL zip file okay so zip path actually
401:11 - so we want to return URL from this
401:14 - method because this is what we
401:18 - expect uh let's have a look in the
401:20 - create
401:22 - zip okay this is what we expect
401:24 - everywhere uh where we are using this
401:27 - and right here I also have assert that
401:30 - should be asset
401:35 - so now let's implement this so we accept
401:38 - files so I'm going to iterate our files
401:41 - as file and I'm going to check
401:44 - if if file uh is
401:49 - folder then I am going to call add files
401:54 - to zip in this case but for the children
401:59 - of the given file okay and this is the
402:02 - case where stor is actually necessary so
402:05 - let me call this add um add files to zip
402:11 - I'm going to pass zip and I'm going to
402:13 - pass Children of the
402:16 - file okay and I'm going to pass also the
402:20 - prefix of the
402:22 - ancestors okay because right now we are
402:26 - adding everything in the root of the
402:29 - zip we don't pass anything so it's it's
402:32 - an empty string okay but right now we
402:36 - are going to add every children every
402:39 - children of that given file as a inside
402:43 - a subfolder of this file
402:46 - name so the prefix in this case will be
402:50 - existing
402:52 - prefix concatenated
402:55 - with file name okay and we also need
402:58 - slash right here if it is not a folder
403:04 - on the
403:05 - zip we simply call add
403:08 - file and pass
403:11 - storage path okay and that's going to be
403:17 - file storage
403:19 - path and we can
403:22 - also give
403:24 - it okay so this is the actual file we
403:28 - want to add inside the zip but at which
403:33 - location inside the zip that file should
403:36 - be added in this case it's going to be
403:40 - ancestors concatenated with the
403:43 - file
403:46 - name okay so this is where my files will
403:50 - go now let's understand this if I try to
403:54 - download uh test okay so I'm trying to
403:58 - download um okay let's try to download
404:01 - this e-commerce products and when we try
404:03 - to download this particular
404:05 - folder then we will select all the
404:08 - children and give those children's right
404:11 - here as files okay then we start
404:13 - iterating and if the file is folder
404:15 - which is the case right here okay then
404:18 - we call it files to folder but pass
404:21 - Children of the given file so we're
404:23 - going to pass those three childrens as a
404:26 - children inside this a files to zip and
404:30 - we also pass a prefix ancestors in this
404:34 - case um the the ancestors is empty
404:37 - string so we
404:39 - pass test slash right there so whenever
404:44 - we try to
404:46 - add those three files we will have test
404:50 - SL as prefix so those three files will
404:53 - be added inside the test folder okay if
404:56 - you mix something right here you are
404:59 - going to basically create those files in
405:01 - another folder in a r folder probably
405:05 - okay but if we are adding files those
405:08 - files will be added inside the root of
405:10 - the zip with their file
405:14 - name so with that being said I believe
405:18 - we have this action ready and what we
405:21 - can do is first
405:24 - Define the rout web.php
405:28 - and let's define so we are going to have
405:33 - uh
405:34 - get on file slash
405:38 - download the action is called
405:42 - download and the name will be file
405:46 - download okay so we have this um ready
405:50 - as well now let's go to the my
405:54 - files and I want to create uh here a
405:59 - button to the um download button
406:02 - basically basically in the similar way
406:04 - how we have this delete button so I'm
406:07 - going to go
406:09 - under components let's open this delete
406:12 - button
406:17 - actually and let me create now or maybe
406:20 - we can copy and paste these uh delete
406:22 - files by turn let's call these um
406:25 - download files
406:27 - button okay we have ton of classes right
406:31 - here I'm going to actually use prime
406:32 - primary
406:35 - button primary button okay great uh
406:38 - let's remove all the
406:43 - classes uh whenever we click on the
406:45 - button I want to call a method called
406:48 - download uh I'm going to change this
406:50 - download icon as
406:52 - well and let's write here
406:55 - download Okay so let's get the icon
406:58 - while we are
407:01 - here down
407:04 - download uh that is fine or this is fine
407:08 - let's put
407:10 - this okay great uh we don't need
407:13 - confirmation dialogue so I'm going to
407:15 - remove
407:16 - that and let's define this
407:20 - download delete files form I think we
407:24 - don't need or maybe we need uh but we
407:27 - need a download files form so let's call
407:30 - this download files form form or maybe
407:34 - as simple as
407:36 - form uh show delete dialogue we can
407:38 - remove that props I believe we need
407:42 - these props okay but in this case I'm
407:44 - going to call them all and
407:47 - IDs to make it more
407:50 - generic and we are not going to emit
407:54 - anything and let's create function
407:57 - called
407:59 - download and I'm going to just print
408:04 - download okay let's remove those
408:11 - functions okay we can remove the Imports
408:15 - as well and now let's go under my files
408:19 - and I'm going to import that download
408:22 - files button and provide all to
408:28 - be all selected and IDs to be
408:34 - IDs
408:38 - selected okay I think this looks
408:41 - good let's now go
408:45 - to our application and we have this
408:48 - download uh actually that's looking good
408:51 - let's give
408:53 - it class margin right
408:57 - two that's good and also let's give this
409:00 - SVG icon margin right right to as
409:05 - well we can even reduce the icon but
409:07 - that's fine let's open the developer
409:10 - tools and click on download yeah it
409:13 - calls
409:15 - download okay so we have to work a
409:19 - little bit on
409:20 - responsiveness but let's focus on the
409:23 - main functionality at the
409:25 - moment okay so we have this download and
409:28 - now I'm going to make request to get the
409:31 - URL into the file name for
409:37 - the um for the file downloaded file I'm
409:40 - just thinking if I missed anything uh I
409:43 - would like to just double check
409:45 - everything before I test it okay so it
409:48 - looks good okay in the
409:52 - download so let's first of all check if
409:56 - props uh all doesn't exist and also uh
410:03 - props do um id. length equals zero I'm
410:10 - going to
410:12 - return
410:15 - oops okay
410:18 - now
410:19 - form parent ID will be page
410:24 - props folder
410:30 - ID now I'm going to make
410:33 - request to get the URL okay I'm just
410:37 - thinking so this form right here is the
410:39 - inertia form if we submit that form call
410:43 - get or post on
410:45 - that this will return inertia response
410:49 - but what we want is a like plain Json
410:53 - type of response so probably having this
410:56 - form is extra and we don't probably need
410:59 - that so we probably need to make a
411:02 - simple
411:03 - HTTP get
411:05 - request and
411:07 - provide file. download as a URL but we
411:13 - also have to provide couple of query
411:15 - parameters such as all and
411:19 - IDs and maybe parent
411:22 - ID so what I'm going to do here instead
411:25 - of populating this parent ID on the form
411:28 - let me check
411:30 - if props all
411:33 - exists let me actually
411:35 - create um P to be like new URL search
411:42 - Rams okay so if props do all is true
411:47 - then inside P I'm going to call append
411:50 - I'm going to provide all and I'm going
411:52 - to provide uh props
411:56 - doall if
412:00 - else P append
412:03 - um okay I have to append this inside the
412:06 - loop because props ID will be
412:09 - Loop
412:11 - so
412:13 - for let ID of props
412:19 - IDs P
412:22 - append we have to append IDs with square
412:26 - brickets indicating that this is an
412:29 - array it has an array value provide ID
412:32 - okay so we're going to call this upend
412:34 - multiple times so finally these IDs will
412:36 - be an
412:38 - array okay perfect so we have if else
412:41 - and finally we're going to make request
412:43 - let me import this HTTP get and we are
412:46 - going to give it
412:50 - this t. to string as a quy okay and
412:57 - because this is our function this will
412:59 - return a
413:00 - promise so I'm going to then here we get
413:04 - the response and let's put debugger and
413:07 - see what's going to be the response and
413:09 - maybe maybe log this response okay so
413:13 - let's save it let's save it and have a
413:16 - look so if I just click download nothing
413:19 - happens because we don't send request
413:21 - nothing is selected if I select one file
413:24 - and click download the request is made
413:27 - but we have error
413:29 - 500 okay array to string conversion okay
413:33 - what was
413:34 - sent okay IDs were
413:39 - sent file controller line 160 let's
413:46 - check 160 is right
413:50 - here is this
413:53 - really array to string
413:56 - conversion yeah I I forgot to provide
414:00 - right here path info base name
414:04 - uh okay let's click on download
414:07 - again okay it returned something it
414:10 - returned the file name and it returned
414:13 - the
414:14 - URL if I check first under public
414:23 - folder uh we should see something in the
414:27 - public folder Public Storage let's try
414:30 - to
414:33 - reload okay if we don't see something
414:37 - that's not good although we copied in
414:39 - the public I think we don't have storage
414:42 - link created okay we can easily test
414:45 - this if I
414:48 - copy and open okay that doesn't doesn't
414:52 - work so basically we need to create a
414:55 - link so we're going to execute PHP
414:58 - Artisan storage column
415:01 - link okay okay now public storage link
415:04 - was created and that is connecting to
415:07 - storage app public so if we go under
415:09 - storage up public now this um this
415:13 - folder which has only one file inside
415:16 - there and this is our keyboard file what
415:19 - we just Tred to download is also should
415:23 - also be available if I just
415:26 - reload should also be available here but
415:29 - I don't see it for some reason maybe PHP
415:33 - storm doesn't show that to me but
415:37 - anyway let's try to download again and
415:40 - I'm going to get
415:42 - this and open now we see that
415:47 - okay now we see that and if I go in
415:51 - the
415:53 - Explorer and we can
415:56 - check oblique
416:02 - okay it does not show that let's check
416:08 - it let's check it through the terminal
416:11 - okay so we see storage which is probably
416:14 - because it is a symbolic link uh our PHP
416:17 - storm and also Explorer doesn't show
416:20 - that to us but as you see we have this
416:22 - storage link which refers to storage up
416:25 - public so
416:27 - now if I go in the download files button
416:31 - where I have this response and we can
416:33 - check the response in the console as
416:34 - well because we are logging that
416:36 - response so I need to download this
416:39 - first let me check if the U res. URL
416:43 - does not
416:47 - exist uh then I'm going to Simply return
416:51 - let's write this in a single
416:57 - line then I'm going to create document
417:01 - create element
417:03 - a a download equals res. file name so
417:11 - this is what we return from the back
417:13 - end and I'm going to give a do hre
417:18 - equals res.
417:20 - URL and on a I'm going to call click
417:24 - method so now it's the moment of magic
417:30 - we click on download and it starts down
417:33 - downloading the
417:36 - keyboard uh okay let me save this and
417:39 - open if it's really there and here we
417:42 - see this keyboard that's perfect now
417:45 - let's try to download a test as a folder
417:49 - click on download we see test.zip
417:54 - awesome let's open that test.zip let's
417:58 - click inside and we see three files
418:00 - right there okay and all of them are
418:04 - working none of them are broken as you
418:06 - see also file sizes that's perfect now
418:09 - let's download three
418:12 - files click on
418:15 - download okay we have an
418:18 - error attempt to read property name or
418:20 - null on file controller
418:24 - 170 okay let's check 170
418:32 - okay is the parent
418:34 - now do we pass parent ID I think we
418:37 - don't pass parent ID and that is the
418:39 - reason if I go in the download files
418:41 - button right here I created this p and
418:45 - let's append p.
418:48 - append parent
418:50 - ID and that's going to be props uh
418:54 - actually it should be page. proops do
418:57 - folder.
419:00 - ID and now now I am confident that I
419:04 - don't need this form so I can remove
419:06 - that
419:08 - save let's select those three files and
419:11 - click on download okay here we see
419:13 - e-commerce product zip I'm going to
419:15 - click on Save let's open
419:19 - that double click and here we see those
419:22 - three files okay isn't that amazing so
419:25 - that's really good so let's go into my
419:28 - files and select everything and click on
419:30 - download now we have have something
419:33 - broken the all field must be true or
419:36 - false what do we have okay so we have it
419:41 - as
419:42 - true but it is actually it is actually
419:46 - string true okay and we expect it to be
419:52 - true or false as
419:54 - Boolean to validate Boolean um request
419:59 - types uh L actually uses
420:02 - one of the following formats so uh I'm
420:06 - going to go in
420:08 - the actually and scroll down so instead
420:11 - of passing right here um props all which
420:16 - is an actual Boolean Lal uses the
420:18 - following formats like true as an actual
420:21 - Boolean false it has zero and one as
420:26 - integers and zero and one as string so
420:31 - those those are the inputs and if you
420:34 - send those inputs and you configure the
420:38 - type of that property in the rule
420:41 - section to be Boolean the validation
420:43 - will be passed because those are treated
420:45 - as booleans but in this case because we
420:48 - use form right here as a eural search
420:51 - params so our sent value props URL is
420:55 - actually true or false as string and
421:00 - those are not treated as booleans those
421:05 - are treated as strings so if we change
421:07 - this and if that is true then we send
421:12 - one otherwise we send zero that should
421:16 - fix the
421:18 - problem okay so we save
421:21 - that and let's download
421:25 - everything okay we still have an
421:30 - error but def error argument number one
421:34 - path must be type of string null given
421:37 - that
421:38 - happens
421:40 - somewhere okay where does this eror
421:43 - start that starts in the file
421:45 - controller
421:49 - 230
421:52 - 230 it comes right here okay file
421:57 - storage path that is probably null and
421:59 - if this is null that is is probably
422:03 - for old
422:06 - files
422:08 - yes for this as an example it doesn't
422:12 - have it's a file but it doesn't have the
422:16 - storage path we can check is folder is
422:19 - false so that is the
422:23 - problem actually what if I delete
422:28 - everything I don't want to have kind of
422:31 - broken data so I'm going to delete
422:37 - everything and let's set left and right
422:41 - to be correct and I'm going to also go
422:45 - in the
422:47 - storage files and for my user I'm going
422:51 - to delete also every single file right
422:54 - there okay so I'm just starting my um
422:58 - testing process from scratch also I have
423:01 - right here zip and inside zip I have few
423:04 - zip files I can delete those as well and
423:09 - these as
423:10 - well so we also need to create kind of
423:14 - background script job the files which
423:17 - are generated under this public folder
423:21 - whether they are zip or they are just
423:23 - files copied from another directory they
423:27 - need to be deleted after some time okay
423:31 - as soon as they are downloaded probably
423:34 - they just need to be
423:36 - deleted so we have to create job for
423:38 - that as well in my case if I just reload
423:40 - now I have everything empty let me try
423:43 - to upload a
423:45 - folder upload
423:48 - e-commerce and let's
423:51 - upload few files as
423:57 - well okay perfect now if I select
423:59 - everything and click on download I see
424:02 - this um zip and this is now my email. Z
424:07 - because this is the actual name of the
424:10 - folder what we have here but I think
424:13 - that is fine if I just click save and
424:16 - then expand this and check we have all
424:20 - the files right there and I think this
424:24 - is exactly what we wanted let's select
424:27 - few files click on download download
424:30 - starts immediately L now let's add um
424:34 - success notifications whenever we upload
424:36 - new file folder whenever we delete
424:38 - something we want to show user that the
424:40 - operation has been completed
424:44 - successfully let me open now my PHP
424:47 - storm let's close
424:51 - everything and I'm going to create under
424:54 - resources views resources JS components
424:58 - and uh under components actually let's
425:01 - create a component called
425:07 - notification I'm going to Define um ref
425:11 - right here which will be show to show
425:13 - notification or not so let's provide
425:17 - false and let's import
425:20 - ref under import
425:23 - section okay and now uh let's actually
425:25 - Define message as well const message
425:30 - equals ref an empty
425:32 - string now I'm going to copy and paste
425:35 - markup which I already have
425:38 - prepared right here so we also have
425:41 - transition enter active class and enter
425:45 - from
425:46 - class sorry about my
425:49 - voice enter to class leave active class
425:52 - leave from class and leave to class okay
425:55 - so those are the classes which will be
425:59 - added to this element
426:02 - on certain
426:05 - actions so from is whenever the
426:08 - animation starts to uh is the target
426:12 - where the animation goes okay leave
426:15 - active classes whenever um whenever it
426:19 - is leaving in the process so this will
426:22 - be the classes added and leave from
426:25 - class is from this uh CSS properties it
426:29 - needs to go to this CSS proper property
426:32 - okay and we also have show with some um
426:36 - fixed positions and I'm going to show
426:38 - this at the bottom um left corner of the
426:42 - screen and we also have a type and I
426:45 - need to Define type as well
426:47 - because I'm going to have two types of
426:50 - uh notifications success and error and
426:54 - based on that we're going to show
426:55 - different color so let me
426:57 - Define
426:59 - type here as well which by default can
427:03 - be
427:06 - success okay now I'm going to open Event
427:09 - pass and just like we have show error
427:11 - dialogue I'm going to Define two
427:14 - functions export function show uh show
427:20 - success
427:22 - notification we're going to provide only
427:24 - message
427:26 - here and the second one will be show
427:29 - error notification
427:35 - okay I'm going to Define one constant
427:37 - which will be
427:39 - show notification as a generic
427:45 - constant and on the emitter I'm going to
427:48 - emit shown notification and I'm going to
427:51 - Pro provide type here to be
427:58 - success and down below I'm going to
428:00 - provide hpe to be
428:04 - error okay so now I'm going to go in the
428:09 - notification and unmounted hook I need
428:14 - to listen to
428:17 - whenever this is emitted show
428:20 - notification is
428:22 - emitted so
428:28 - emitter we have this with single M
428:33 - emiter on show
428:38 - notification we accept here an
428:43 - object okay which has type and message
428:46 - so I'm going to get type and
428:51 - message and assign it to local type and
428:55 - message however I have like a name
428:58 - Collision on the variable so I'm going
429:00 - to get the type and assign it into a
429:04 - local variable T and I'm going to get
429:07 - message and assign it into
429:11 - MSG show. value equals
429:16 - True type. Value equals
429:21 - T
429:23 - message. value equals MSG
429:31 - and that's basically all so using this
429:34 - approach the notification will be
429:36 - displayed however I'm going to use
429:39 - also um if the notifications are
429:43 - displayed
429:45 - um okay if you display one notification
429:48 - and after two seconds you display
429:50 - another
429:51 - notification U it should only show only
429:54 - one the latest one I also want
429:57 - to close the notification after 5
430:01 - Seconds
430:02 - seconds uh let's actually do this set
430:05 - time
430:10 - out and I'm going to call
430:13 - close and let's define this
430:16 - method close
430:20 - here we're going to set show dot value
430:25 - equals
430:26 - false show um type. value equal T and
430:33 - message. value equals an empty string
430:36 - and that should be an empty string as
430:41 - well uh okay now let's go in the my
430:52 - files and let's try to delete show
430:56 - success notification okay show success
430:59 - notification so selected files have been
431:06 - deleted let's import this show Suess
431:10 - notification and now let's test it so I
431:13 - selected the keyboard click on delete
431:14 - click on
431:15 - confirm and nothing happens why because
431:19 - probably we haven't included this
431:23 - notification let's go in the
431:25 - authenticated layout and I'm going to
431:28 - include this notification here
431:32 - so that it will be displayed every time
431:34 - I need
431:42 - that what is
431:53 - this uh okay
432:02 - I put this outside of the template my
432:09 - mistake okay so we have this
432:11 - notification here so let's try to delete
432:14 - one more
432:16 - file delete nothing
432:20 - happens there's an error show
432:22 - notification is not defined okay so the
432:26 - constant is not
432:29 - defined that is not imported right
432:36 - here good select click on delete click
432:40 - on confirm and we see selected files
432:42 - have been
432:44 - deleted
432:45 - however uh it was automatically
432:48 - disappeared it automatically disappeared
432:50 - after 5 Seconds however if I just delete
432:52 - one file and after a few seconds I
432:55 - delete another
432:56 - file the latest notification should stay
433:00 - 5 Seconds
433:01 - but actually the
433:03 - timeout is taken from the first shown
433:06 - notification so basically after deleting
433:10 - the second file in about two seconds it
433:14 - disappeared so what I want to do is to
433:18 - define a timeout maybe right here let
433:23 - time
433:24 - out and
433:26 - then time out equals set timeout but
433:31 - before that I'm going to call if time
433:33 - out exists I'm going to call clear
433:36 - timeout so the previous timeout will be
433:39 - cleared and this function will not be
433:41 - executed but the new one will be planned
433:45 - so we provide time out here now let's
433:48 - test I'm going to delete one one 2 3 I'm
433:52 - going to delete the second now one 2 3 4
433:58 - 5 so obviously now the time was taken
434:00 - from the second and deleted
434:03 - notification okay so now it's very
434:05 - simple so we have created that schema
434:08 - that skeleton and reusable components
434:10 - and if we go in the my files I'm going
434:13 - to copy this go in my files uh where we
434:16 - have these we have this in the
434:18 - authenticated layout actually to upload
434:21 - files and where's
434:25 - that where is that coming
434:28 - from that's coming from side bar or navv
434:35 - navigation create new dropdown and we
434:38 - have this file upload menu
434:42 - item but finally it comes down to this
434:45 - authenticated layout isn't it here it is
434:49 - uploaded files we have on success okay
434:51 - so this is the place from where we need
434:53 - to show
434:55 - notification um okay how do we do so
434:58 - let's get the files length
435:01 - and then how many files are
435:05 - uploaded let's do like this files.
435:10 - length files have been
435:16 - uploaded select files let's
435:20 - select two files open two files have
435:24 - been uploaded if I select a
435:29 - folder we get ation 26 files have been
435:32 - uploaded okay I think that's not bad now
435:37 - let's move on to the next part in which
435:39 - we're going to implement the trash page
435:41 - we already have file or folder delete
435:44 - functionality and at the moment they are
435:46 - simply um not deleted they are marked as
435:49 - deleted in the database using this
435:52 - deleted at flag and as well as using
435:55 - this soft delet trait we are using so if
435:58 - you don't know what I'm talking about
435:59 - let me open
436:02 - file.php
436:07 - and right here we have this soft delit
436:10 - Strait and if we check also the
436:14 - database we will see that we have files
436:17 - which have a deleted yet so those files
436:19 - are still in the database and also we
436:21 - don't delete actual files from the file
436:24 - system so now we're going to create the
436:26 - trash page and we have the data which
436:29 - was actually deleted and we will
436:31 - implement the functionality to recover
436:33 - the files from the trash and move into
436:36 - my files section or just completely
436:39 - delete those files if we completely
436:42 - delete them in this case um this record
436:46 - will be completely deleted from the
436:47 - table and also the actual file or folder
436:51 - um not folder but the actual file or
436:53 - files will be deleted from the file
436:56 - system all right now let's start with
436:59 - defining root
437:01 - let me close the database and I'm going
437:04 - to open web.php
437:06 - and we have this um let me Define this
437:10 - right here not right here excuse me
437:16 - so wrote get on trash
437:21 - URL we are going to have a trash action
437:24 - okay and let's give it also name
437:29 - trash now let's open
437:31 - file
437:33 - controller let's scroll up and maybe up
437:36 - after my files I'm going to Define
437:39 - public function
437:41 - trash we are going to obviously accept
437:43 - request right
437:45 - here and I'm going to return inertia
437:51 - view
437:56 - inertia uh excuse me it should be
437:58 - render uh provided trash the file name
438:02 - and we're going to provide the files
438:04 - which needs to be rendered so which
438:06 - files should we select right here let me
438:09 - start curing so I want to uh select only
438:14 - trashed files okay and only trashed is
438:17 - the predefined method in laravel which
438:20 - selects the files that comes from the um
438:23 - pay attention to this tool tip it comes
438:24 - from the soft deletes trait and this
438:28 - only will cury those records which has
438:31 - deleted at not null value so we want
438:34 - only trashed we are going to also
438:36 - provide the value that the current user
438:39 - needs to be author so created at created
438:43 - by should be out ID and let's
438:49 - also order by um is folder so first
438:55 - let's show folders by the sending and
438:59 - I'm going to also order by created
439:01 - it created it um deleted or maybe we can
439:06 - even order by deleted Ed so the latest
439:11 - deleted file will go at the
439:14 - top like this and we will need
439:17 - pagination so I will call paginate with
439:20 - a value maybe 10 or 20 whichever we want
439:23 - and I'm going to call this files and
439:26 - finally I'm going to create the
439:27 - collection from the files so I'm going
439:29 - to use
439:31 - a file
439:32 - resource collection and provide the
439:35 - files and finally I'm going to pass
439:38 - these files as a view parameter right
439:43 - here files so we have the method ready
439:46 - and now let's go to the front and
439:49 - side under resources JS and we have
439:54 - Pages here I'm going to copy my files
439:57 - and paste because trash will be very
440:00 - simp similar to my files in in terms of
440:04 - the layout there will be a table and the
440:06 - bons as well but we're going to
440:08 - obviously modify many things right here
440:11 - like I'm going to remove this pagination
440:13 - we don't need that at all well we don't
440:17 - probably need those all Fields right
440:21 - here I'm going to only leave name and
440:25 - I'm going to create another column
440:27 - called path so that's going to be the
440:28 - actual location for the the file
440:31 - anything else I think can be deleted so
440:35 - right here I'm going to Output the name
440:37 - and I'm going to Output
440:41 - path uh just let's make sure that path
440:46 - is something that is returned in the uh
440:49 - file resource and we see this path right
440:52 - here okay so anything any
440:55 - item any file right here is an instance
440:58 - of this file resource and if we don't
441:00 - have power defined right here then we
441:02 - won't be able simply to Output it right
441:04 - here okay so this looks
441:09 - good however let's
441:12 - change let's change a few things so I'm
441:15 - going to scroll down below so we have
441:16 - these all files that's good we're going
441:19 - to also have infinite scroll down below
441:22 - open folder we don't obviously need to
441:24 - open anything okay so we can search for
441:27 - this open folder and I'm going to remove
441:29 - double click
441:31 - so delete this function as well load
441:33 - more this is something we need but we
441:35 - are going to uh make request yeah that's
441:38 - correct so we're going to make request
441:39 - to um all files value next that's good
441:42 - as well on select all change we do this
441:46 - that's good toggle file select that's
441:48 - also necessary on select checkbox change
441:51 - that's also good on delete okay so we
441:56 - don't have actually I deleted the whole
441:59 - breadcrumb
442:01 - and also we
442:03 - had in this now we also had these
442:05 - pattern so I want to delete only bread
442:08 - Crums not button so I'm going to copy
442:10 - this now again go into the trash
442:15 - and right here I'm going to paste I'm
442:18 - going to delete this ordered list
442:19 - because that is the breadcrumbs and
442:22 - let's give it justify justify
442:25 - end and we don't need download files
442:28 - pattern or delete files patteron I'm
442:30 - going to create two new buttons one will
442:32 - be called to delete forever and uh
442:36 - second button will be to restore files
442:39 - okay just
442:41 - wait so that's good let me delete
442:46 - this let's go to the trash but we need
442:49 - to link the uh menu item to the trash
442:52 - page so I'm going to open navigation
442:56 - here we have this trash let's
442:59 - provide row
443:05 - like this okay now let's click on the
443:09 - trash and it opens trash
443:11 - page 1 2 3 4 5 six so we have six files
443:15 - deleted let's check now into the
443:17 - database if the data is
443:20 - accurate
443:22 - six okay we don't have anything else
443:25 - that's awesome that's good if I go into
443:27 - my files and just delete one more
443:31 - that was deleted I I will go in the
443:33 - trash and now we see seven items right
443:36 - here okay that's good so select works it
443:39 - should
443:40 - work um we don't have folder deleted
443:44 - let's delete this screen Ally folder
443:50 - completely okay that has been deleted I
443:52 - will go in the trash and we see a folder
443:54 - right here if I double click this folder
443:55 - is not actually
443:57 - opened okay first of all let me make
443:59 - this trash
444:01 - active menu item I will go in the
444:04 - navigation and just like we have this
444:06 - active property I'm going to add that
444:10 - right
444:12 - here um I mistaken we deleted that not
444:16 - deleted but closed uh the URL should be
444:21 - trash awesome now we see that the trash
444:24 - menu item is active now I want to check
444:26 - one thing in the database so now we
444:29 - deleted scre scen live folder just one
444:32 - folder but if we check the
444:36 - database we see multiple files have been
444:39 - deleted okay so here is the folder by
444:43 - itself this one but anything that is
444:48 - inside this folder has also been deleted
444:52 - okay and that happens
444:55 - because if we check let me collapse
444:59 - unnecessary methods to make this more
445:01 - readable so if we check this destroy so
445:04 - we see that we call Child delete and the
445:07 - delete is a LEL method which basically
445:11 - looks at the if the trait soft delites
445:15 - trait is configured it's going to Simply
445:17 - make a soft delete and instead of
445:18 - deleting it will just set deleted at if
445:22 - the Soft delete is not there that's can
445:24 - to actually delete however we are using
445:27 - this nested set package as well which is
445:30 - overriding that delete and it's also
445:33 - deleting every children of that child
445:37 - but in this case the delete is not an
445:40 - actual delete but the nested set is
445:42 - marking all the children as deleted it
445:45 - that's why we see a lot of uh deleted at
445:49 - records right here and
445:52 - also when we check right here we see
445:55 - that the screen line is a folder that
445:57 - was deleted and it has the following
445:59 - path as well
446:00 - but we also
446:02 - see uh the children items of this screen
446:06 - line as you can observe okay so those
446:08 - are the children items uh by the way why
446:11 - this scroll doesn't work we we're going
446:13 - to check the scroll as well in a moment
446:16 - so what I want to do is that I just want
446:19 - to show screen lie and not the children
446:22 - of the screen line okay and anything
446:25 - else obviously which is an actual
446:26 - deleted file so in ideal case I want
446:30 - whenever a folder is deleted this is the
446:32 - folder I want its children not to be
446:35 - deleted and they should have null values
446:39 - okay they should stay active but we
446:43 - won't be able to access those files
446:45 - because the paring folder is actually
446:46 - deleted so now I set uh them to now
446:50 - manually and if I reload I will see only
446:53 - screen line not children of the screen
446:56 - line okay I hope this makes sense
447:00 - okay so how to implement that only the
447:04 - um actual folder to be marked as deleted
447:07 - and not uh the children of
447:11 - it okay I'm going to open now file
447:14 - controller and in the destroy instead of
447:17 - calling an actual delete um I will
447:21 - create a new method in this file PHP and
447:25 - use that method and let me call this
447:27 - method
447:30 - um maybe move to trash move to trash
447:35 - okay and we will do very simple thing
447:38 - I'm going to set
447:40 - deleted it to be carbon carbon is the
447:45 - package uh to manipulate dates carbon
447:48 - now so I will simply set deleted at to
447:52 - be now I'm marking this particular
447:54 - record deleted and I'm going to return
447:58 - this save
448:00 - I'm calling save as well so now if I use
448:03 - this move to trash in this file
448:06 - controller right here and right here as
448:09 - well instead of calling an actual delete
448:12 - that will only Mark deleted the parent
448:16 - which we are actually trying to delete
448:17 - not the children of it so I'm going to
448:19 - open files again and I'm going to remove
448:22 - this deleted at on the screen lie now
448:27 - screen lie will be gone from trash if I
448:30 - go in my files I will see a screen line
448:32 - right screen lie right here if I double
448:34 - click obviously it has files inside if I
448:37 - select the screen lie and click on
448:39 - delete and confirm now I check the trash
448:42 - and I only see screen lie I don't see
448:45 - screen lie children in the trash which
448:47 - is exactly what we wanted and if I
448:49 - refresh the database I will see that
448:52 - only screen light is marked as deleted
448:54 - okay this is awesome this is exactly
448:55 - what I wanted now when I Implement
448:58 - restore I will simply restore that
449:01 - particular item obviously I don't have
449:03 - to restore its children as well and by
449:06 - the way I checked and the nested set
449:09 - package whenever you call delete on the
449:13 - file the nested set package is deleting
449:15 - all the children's but when you call
449:18 - Restore um the N set model does not
449:21 - restore its children okay that is
449:24 - probably something you should also know
449:26 - and probably would be good if the N say
449:29 - model would do that as well okay so now
449:33 - we are good we are just deleting one
449:35 - record and we will restore that one as
449:37 - well okay I think now we should create
449:40 - the restore
449:42 - functionality now let me open file
449:45 - controller and let's define two methods
449:49 - let's scroll down
449:51 - below one will be
449:53 - restore and second will be delete
449:57 - forever
450:01 - okay we are going to accept some type of
450:03 - request and I'm going to create new
450:06 - request specifically for those two
450:09 - actions because they will need the
450:12 - similar type of request PHP artisan make
450:17 - request trash files request let's hit
450:22 - the enter okay that request was created
450:25 - trash files request let's open that
450:31 - and well um I need rules very similar
450:36 - to oh it's called to here in ID base
450:40 - filter no not this one not this one
450:44 - basically files action request okay I
450:48 - need all and IDs but what I don't need
450:52 - is the parent ID so we have this parent
450:56 - ID defined in the rules obviously if I
450:59 - have trash opened I don't have I am not
451:02 - inside any particular folder so this is
451:04 - a general trash area and I don't need
451:08 - par ID so what I'm going to do is just
451:11 - copy rules these all end
451:14 - IDs uh I'm going to close this let's
451:17 - open
451:20 - this uh trash files
451:22 - request put
451:25 - this okay let's format the code uh let
451:29 - me set the AL authorized to be
451:34 - true okay and I
451:37 - think yeah I think that's it so now
451:39 - let's go in the file controller and
451:42 - let's use this trash files request right
451:46 - here when we are trying to restore or
451:48 - maybe when we are trying to delete
451:50 - forever first let's get the validated
451:54 - data like this that's going to be our uh
451:58 - data
452:03 - oops then let me check if data all is
452:08 - set to true I'm going to delete
452:11 - everything that is inside the trash
452:15 - so children will
452:17 - be
452:20 - file only trashed get okay then I'm
452:25 - going to start iterating over my
452:26 - children as child and on child I'm going
452:29 - to to call uh restore so this is this is
452:32 - the restore functionality so I'm going
452:34 - to call
452:36 - Restore uh okay also some uh in L's case
452:40 - I obviously have the IDS
452:45 - so I'm going to copy this part but
452:48 - change how I am
452:53 - selecting how I am selecting my
452:57 - records so I'm going to select it with
453:00 - here let's call
453:03 - cury we are
453:06 - in we are
453:08 - in we need column ID to be in IDs okay
453:13 - let me create IDs variable here there
453:16 - going to be data IDs if that does not
453:21 - exist we can take an empty
453:24 - array okay and I will provide IDs here
453:28 - and then I can call get
453:30 - then I start iterating over my uh
453:33 - children and I will call Restore perfect
453:37 - and finally I'm going to um just
453:41 - redirect to rad Uh current road
453:45 - basically which will be
453:47 - trash okay this is for ReStore now let's
453:50 - go into trash and I'm going to create
453:52 - this button um restore files button
453:57 - let's go in the
454:00 - here we are in the components in the app
454:03 - and I'm going to actually copy and paste
454:06 - delete files
454:08 - button and call restore files
454:15 - button okay let's call this
454:18 - restore um let's go into trash and first
454:21 - I'm going to try to use that restore
454:24 - files button and I'm going to
454:27 - provide uh I'm going to provide all so
454:31 - we have a delete all okay so here's what
454:33 - I'm going to do this delete all is
454:36 - specific for delete button what I'm
454:38 - going to do is just make some changes in
454:41 - this restore files
454:43 - button instead of delete all I will
454:46 - simply have all um all selected maybe
454:51 - okay I'm using this in four places so
454:54 - I'm going to replace all of them all
454:56 - selected and obviously now I can use all
455:00 - selected property instead of delete all
455:02 - and I'm going to pass uh all selected
455:06 - here and then we have IDs delete IDs
455:09 - which I'm going to replace as well
455:12 - delete IDs I'm going to replace it with
455:16 - um selected
455:18 - IDs okay let's replace all then I will
455:21 - use selected
455:24 - IDs like this again I will go in the
455:28 - restore files button and I will search
455:30 - for delete so we have many delete Words
455:33 - here first of all the form delete files
455:36 - form we don't have that many forms in
455:39 - this component actually we only have one
455:41 - form in this component so I will simply
455:43 - call this
455:45 - form okay so we have file delete which
455:48 - I'm going to call Restore we don't have
455:50 - Road created yet which I'm going to do
455:52 - and create and we are also emitting that
455:56 - it has been restored we don't actually
455:58 - need emitting anything but like we can
456:01 - do if we need in the future uh selected
456:03 - files have been
456:06 - restored okay console log let's remove
456:08 - console log completely let's search for
456:11 - again word delete on delete click okay
456:15 - I'm going to change again this instead
456:17 - of on delete click let's do on click
456:20 - because that's more
456:21 - generic and that's also good enough and
456:25 - we also have show delete dialogue which
456:28 - I'm going to call
456:30 - uh show confirmation
456:33 - dialogue replace all are you sure you
456:36 - want
456:37 - to um restore selected files on delete
456:42 - cancel this is something I'm going to
456:44 - also replace on
456:47 - cancel and on delete confirm uh let's
456:51 - call this on
456:54 - confirm okay do we have any delete Words
456:57 - here uh yes Define any let's change this
457:00 - into restore please select at least one
457:02 - file to restore and I think there's only
457:06 - one matching form delete uhuh so we are
457:11 - actually um we are actually deleting we
457:15 - are going to make a post request I think
457:17 - right here okay because we're going to
457:19 - restore and delete method is not what we
457:25 - want now let's open web.php
457:34 - and we have this file delete and maybe
457:37 - after delete I'm going to
457:40 - create uh restore the URL will be
457:43 - restore uh the method should be
457:47 - post the action will be restore we have
457:51 - already defined the action and the name
457:53 - will be
457:55 - restore okay let's have a look so we
457:58 - have this restore but obviously I'm
458:00 - going to change the icon as well so what
458:03 - icon should we use uh let's search for
458:08 - ReStore okay let's use this
458:12 - icon restore files
458:14 - button SVG replace
458:21 - it in my opinion the button the icon is
458:24 - a bit larger so I'm going to reduce and
458:27 - let's give it margin right to as well as
458:30 - well okay perfect now I select the
458:33 - folder I click on restore I say the
458:37 - confirmation I shown to restore selected
458:39 - files let me open the network so I need
458:42 - to have a look what's the uh what
458:44 - request will go and what's going to be
458:46 - the response and I'm going to click
458:48 - confirm okay we have an
458:50 - error entry properties of undefine
458:53 - reading ID restore files
458:56 - button ahuh we are just taking the
458:59 - parent ID from this restore files button
459:02 - which is obviously not related to us so
459:06 - we can delete this line
459:09 - completely okay let's make request again
459:13 - selected files have been restored okay
459:18 - okay okay so let's just reload the page
459:20 - we still see screen light here it does
459:23 - not look like it is restored probably
459:26 - because we need to
459:30 - uh let's check
459:32 - here so we are calling restore seems
459:35 - like we are doing it
459:37 - correctly uh but let's check if anything
459:40 - is selected here okay so let's use dump
459:44 - and D
459:46 - IDs let's save it select restore confirm
459:50 - we see IDs right here okay now let's
459:53 - select if children is selected I'm doing
459:56 - the Cy correctly confirm
460:02 - uh
460:06 - children okay it looks like I am not
460:10 - curing it correctly ahuh because I need
460:13 - to call only trashed okay that's the
460:16 - point only trashed okay let's click okay
460:20 - now we see one item inside there and now
460:23 - it should work I'm going to remove this
460:25 - uh let's clear the network click confirm
460:28 - it was deleted the file disappeared from
460:30 - here I see this access notification
460:32 - selected files have been restored and if
460:34 - I go into my files I see screen Li back
460:38 - into my files this is awesome this is
460:41 - perfect um now let's Implement Force
460:44 - delete which will be slightly easier
460:47 - because now we have this very generic
460:50 - button we don't have many restore or
460:53 - delete keywords right here and now look
460:55 - at this so I'm just going to copy and
460:56 - paste this delete files pon and I'm
460:59 - going to call this delete forever
461:03 - forever
461:05 - button okay now I can use the delete
461:08 - icon
461:10 - here let me get this SVG
461:15 - icon inside a delete forever button we
461:19 - call this
461:24 - delete okay hold
461:27 - on hold on I I just copied and pasted I
461:30 - think a wrong wrong component uh Delete
461:34 - forever button let me delete this I need
461:37 - to copy and paste paste restore files
461:40 - button and I'm going to call
461:43 - these uh Delete forever
461:49 - button okay and let me copy this delete
461:54 - files icon
462:02 - okay and the text should be
462:06 - delete uh and instead of restore I will
462:09 - change this into
462:11 - delete well I I obviously could just
462:14 - copy and paste this delete files button
462:17 - but why I did this from restore files
462:20 - Buton because this restore files pton is
462:23 - much more generic we don't have like a
462:27 - specific um we don't have specific names
462:30 - like instead of show delete dialogue we
462:34 - have the show confirmation dialogue in
462:36 - our case like it's it's true that we are
462:38 - actually doing delete so show delete
462:40 - dialog would be uh ideal for our case
462:43 - but um I don't know why I actually took
462:47 - this from
462:48 - restore okay I don't know why
462:51 - um instead of restore obviously we need
462:54 - to change this into delete and I think
462:56 - everything else is good I will go
462:59 - into where's trash and let me use this
463:03 - delete forever button okay I will use
463:08 - all
463:09 - selected and I will use selected
463:15 - IDs let's have a
463:18 - look going to
463:21 - trash uh we see this delete button let's
463:26 - change its size with an eight in margin
463:30 - right
463:31 - to and let's give margin right to the
463:34 - button itself from the trash from here
463:38 - class margin right
463:43 - two oh it doesn't seem to be
463:47 - working delete forever button it does
463:50 - not seem to be working yes let's do this
463:54 - from here margin right three something
463:58 - like this
464:00 - okay now we have this uh let's give it
464:03 - text by the way delete
464:07 - forever okay now let's go in the file
464:09 - controller and Define this delete
464:13 - forever
464:15 - method let me copy and
464:19 - paste this down
464:21 - below let's accept these trash files
464:27 - request okay so we we get the
464:30 - request um we select only trashed and
464:34 - instead of
464:36 - restore I'm going to
464:38 - call um delete forever delete forever
464:43 - and this delete forever is something
464:45 - which I am going to create in the file
464:48 - but let me check this part it looks like
464:51 - correct okay let's now create this
464:54 - public function delete forever okay now
464:57 - this is the interesting thing when we
464:59 - deleting file whever we also need to
465:02 - delete the file from an actual file
465:05 - system okay so I'm going to do uh I'm
465:08 - going to call two methods from here
465:11 - first um first one will be to delete
465:14 - files from storage and let's create that
465:18 - function delete files uh from
465:23 - Storage okay and the second method will
465:26 - be to force delete that particular
465:30 - record for
465:32 - delete like
465:34 - this now let's create these delete files
465:37 - from uh
465:40 - storage okay we're going to
465:43 - accept Okay I'm going to call this
465:45 - method recursively for the children
465:47 - imagine that I am deleting a folder
465:50 - which has subfolders inside there okay I
465:54 - want to delete files for every item that
465:58 - is inside the the main folder or inside
466:02 - the sub folders so I want to call these
466:04 - delete files from Storage recursively on
466:08 - every children which is a folder okay so
466:11 - I will do the following I will accept
466:13 - right here files for which I want to
466:16 - delete the files from the storage and
466:18 - from here I'm going to pass an array
466:21 - this okay because I'm accepting right
466:24 - here in Array I'm going to pass right
466:26 - here in Array only this so I want to
466:28 - delete files for only this now I start
466:32 - iterating over my
466:34 - files and I'm going to check if the
466:38 - file is
466:40 - folder then I'm going to call this
466:44 - delete files from
466:48 - storage and I'm going to give
466:51 - file children okay now you know the
466:55 - answer why I did why I accepted an array
466:59 - right here okay because from here I'm
467:02 - going to pass an array as well inside
467:05 - else
467:07 - case uh I will write
467:10 - storage
467:12 - delete and I'm going to pass
467:15 - file
467:17 - storage storage
467:21 - path okay this is good this is good now
467:26 - let's go in the
467:30 - let's go in
467:31 - storage up files and we have a bunch of
467:36 - files here let me actually open this in
467:39 - the
467:41 - Explorer and let's move the Explorer in
467:45 - the recording window and how many files
467:48 - we have we have 51 items in this folder
467:53 - now whenever we call a force delete or
467:57 - delete forever there should be much less
467:59 - files right or less files in general
468:02 - depending how many files we are
468:07 - deleting okay let's um let's make
468:10 - request
468:13 - but uh do we have the root no we don't
468:17 - have root so let's
468:22 - define delete
468:25 - method uh
468:27 - Delete or
468:29 - ever the action will be delete
468:34 - forever and the name will be file delete
468:38 - forever as well then from the delete
468:42 - forever button when we make the request
468:46 - we're going to make delete request the
468:48 - road will be file delete
468:52 - forever okay we are emitting delete and
468:55 - the notification will be selected files
468:57 - have been deleted Ed
469:02 - forever okay let's check this I select
469:05 - this
469:06 - file um is this file actually something
469:10 - that exists on the file system I need to
469:11 - check this as well uh okay me Hero Let's
469:15 - download
469:19 - this okay the file is working this is my
469:23 - file okay I'm going to move this file
469:26 - into trash go into trash I know that
469:29 - there is a file system actual item for
469:32 - this and I will
469:34 - call delete forever click confirm
469:38 - selected files have been deleted forever
469:41 - and now if I just refresh this page I
469:46 - see 50 items only here okay so this is
469:51 - awesome let's delete now more than one
469:55 - file three files delete forever confirm
469:59 - okay here's something here's something
470:02 - we have an
470:04 - error selected IDs is
470:09 - invalid
470:11 - okay select it two is okay something is
470:17 - wrong one of the IDS is
470:21 - invalid okay let's try this again and
470:25 - then detect why it is invalid
470:31 - okay now it is not
470:33 - invalid hold
470:35 - on hold on and it was also deleted
470:38 - successfully let's make sure that this
470:41 - works fine now we have uh
470:43 - 47 items
470:47 - perfect now I delete the first
470:50 - one and I delete now first two
470:55 - forever okay uh I think
471:00 - if we have a look in the
471:03 - payload what data to do we
471:10 - send I think we are sending the
471:14 - previously deleted ID as
471:18 - well why it doesn't show me what data
471:21 - I'm
471:23 - sending there was a payload
471:26 - tab uh probably because I am sending oh
471:30 - here is payload okay I was looking at
471:32 - the wrong place delete forever payload
471:35 - look at this so we we are sending uh
471:38 - three three IDs and this is not what we
471:42 - want so on success I need
471:49 - to okay I need to clear the IDS
471:56 - so also what is the s selected
471:59 - IDs props selected IDs okay let me print
472:07 - this let's have a look it's an empty
472:10 - array I delete okay there's only one
472:13 - delete forever click confirm okay this
472:15 - is still
472:17 - here this is still here if I select one
472:20 - now we have two items okay this is
472:22 - obviously
472:23 - wrong uh I need to go to
472:27 - trash okay how we are doing this in my
472:31 - files we doing this correctly and let's
472:35 - use existing method okay we are
472:37 - listening to delete and when this
472:40 - happens we are doing this so what I'm
472:45 - going to do go to trash we are going to
472:50 - listen when the action
472:54 - completes uh we have different events we
472:57 - have delete and restore so let me write
472:59 - delete here
473:02 - on on
473:04 - delete uh but for restore the event will
473:08 - be called
473:10 - restore and maybe I'm going to call this
473:12 - reset
473:14 - form reset form whenever this is called
473:17 - I'm going to call reset form let's
473:19 - scroll down below and let's create this
473:23 - function okay here is on delete let's
473:25 - call this reset form
473:28 - and I'm resetting it perfect now I
473:31 - select the first hold on let's go in the
473:34 - delete forever and I'm going to print
473:35 - the
473:36 - IDS okay I select the first one we see
473:38 - IDs I click delete forever that is
473:41 - deleted and I don't see the previous ID
473:43 - here this is awesome and now I select
473:46 - and delete
473:49 - forever okay something is
473:53 - wrong we select only one ID in this
473:56 - case but the problem
474:02 - ID zero is
474:09 - invalid okay hold
474:12 - on why it is
474:14 - invalid let's delete two more files
474:19 - going to
474:20 - trash okay so we have three files
474:23 - deleted and I'm going to check also
474:29 - okay let me filter deleted that is not
474:33 - null what are the IDS okay 169 175
474:41 - 176 I select the first and click delete
474:43 - forever
474:45 - 175 confirm okay now I reload the page
474:49 - and 175 was deleted now I select this
474:53 - 176 and click delete forever confirm
474:55 - that was also deleted
474:59 - Okay click on keyboard delete forever
475:04 - confirm
475:07 - H
475:09 - 176 okay it still sends
475:13 - 176 176 why does that
475:17 - do H let's remove this console by the
475:21 - way okay okay so we
475:25 - have uh key to be file ID
475:33 - delete
475:35 - forever we have selected ideas to
475:38 - be um to be
475:43 - modified UNC
475:51 - confirm
475:56 - uhuh okay
475:59 - so whenever we click on this it looks
476:01 - like all is
476:04 - selected now we have this all
476:07 - true and whenever there's all true we
476:10 - actually don't care IDs isn't it so
476:14 - whenever this all is true that form ID
476:17 - is remembers the previous state okay
476:21 - when this happens when all is true we
476:23 - can set this an empty array this is what
476:26 - we can do
476:29 - okay awesome I think that's good
476:32 - now uh I'm going to move your files into
476:36 - trash awesome go into trash delete
476:42 - forever delete forever and now let's
476:45 - delete all of
476:48 - them and that was
476:50 - deleted awesome it it sent now all
476:53 - through and IDs and if we have a look in
476:57 - the file system
476:59 - there are now 38 items now it's time to
477:03 - delete the folder entire
477:05 - folder okay I'll will go into trash we
477:08 - have only one folder and delete forever
477:11 - and now let's check how many files we
477:13 - have here we have a 12 as you can guess
477:17 - like roughly 26 items we are deleted now
477:20 - from the file system because we deleted
477:22 - files
477:24 - forever okay I think this is awesome
477:28 - let's just go into resore button or
477:30 - delete forever button and just remove
477:33 - this selected
477:36 - IDs and just like this just like this we
477:40 - have implemented let's delete
477:43 - everything we have
477:45 - implemented uh moving files into trash
477:48 - okay I want one one thing to test let's
477:51 - upload multiple
477:53 - files open 26 files that has been
477:57 - uploaded
477:58 - okay I scroll down below and the data is
478:00 - loaded in my files if I go into trash
478:03 - okay let me delete
478:06 - all okay if I go into trash and scroll
478:09 - down okay the data is not loaded and we
478:12 - have an
478:14 - error doct type is not valid Json uhu
478:19 - because we need to go into file
478:22 - controller and we need the following
478:24 - check like we're doing in my files so if
478:28 - if a request wants Json we return files
478:31 - scroll down below and right here if
478:34 - request wants Json we return files
478:37 - reload the page scroll down below more
478:39 - data is loaded down below more data is
478:42 - loaded and just like this and if I click
478:45 - right here if you want to like empty the
478:47 - entire trash like we can add a new
478:50 - button empty trash okay we can do this
478:53 - and what you need to do whenever this
478:55 - empty trash button is clicked you need
478:58 - to make
479:00 - the uh this delete like uh the request
479:04 - we are making from the delete forever
479:07 - and you're going to pass form all equals
479:09 - true that's going to delete all the
479:11 - files inside the trash okay but simply
479:14 - selecting everything right here means
479:17 - that I want to empty a trash so I'm not
479:19 - going to do a dedicated button for that
479:21 - I will click delete forever click
479:22 - confirm everything is deleted and in the
479:25 - file system we have like zero files as
479:29 - you can see okay so we have absolutely
479:32 - empty file system from the database
479:36 - Point as well we have only hold on we
479:40 - have only one record which is our root
479:42 - and from the file system we also have
479:45 - nothing right there that is good that is
479:49 - good so let's upload those files let's
479:54 - upload the entire folder
479:59 - and yeah we have implemented the trash
480:01 - functionality
480:05 - successfully now let's Implement new
480:07 - functionality which will be to start the
480:09 - pages as not the pages but the files in
480:12 - folders as like a favorite um favorite
480:17 - files or folder so that in the future
480:19 - you can easily find which files are your
480:22 - favorite files okay so to implement the
480:25 - functionality we're going to go with the
480:27 - tradition approach whenever you select
480:29 - something uh we're going to create a
480:31 - button right here click on the star
480:33 - button or favorite button and it's going
480:35 - to save those items into the database we
480:39 - already have table for that and this is
480:41 - called start files and we have the
480:44 - following Fields so we have the primary
480:46 - key obviously we have the file ID we
480:49 - have the user ID and we have date when
480:51 - that was created uh to be honest this
480:53 - updated dat is something we don't even
480:55 - need Okay so who the user inserted those
481:01 - file this file in its favorite area and
481:06 - when okay so let's start from the user
481:09 - interface and I'm going to open my
481:14 - files let's scroll up we have this
481:17 - download button let's go to the download
481:19 - button and um actually let's copy these
481:26 - restore files button okay restore files
481:31 - button and I'm going to call this um
481:34 - star star files
481:38 - button okay we need to change the SVG
481:41 - icon so let's go into hero icon and
481:44 - search for Star let's copy this paste
481:50 - let's give this one with
481:53 - 484 modin 2 instead of restore let's
481:58 - call this star or maybe add to
482:05 - favorites okay now if we go into my
482:08 - files I am going
482:11 - to include that file star files pton and
482:15 - we are going to
482:17 - provide um all
482:21 - selected all selected and selected IDs
482:29 - uh selected IDs like
482:35 - this okay and I also want to listen to
482:41 - the action and then just like on delete
482:44 - we are resetting the selection we need
482:46 - to do this similar thing right
482:50 - here okay
482:53 - um I think we don't need to do this
482:55 - because this is necessary whenever you
482:58 - delete something and whatever is deleted
483:01 - disappears from the current list okay if
483:04 - it disappears from the current list
483:07 - there's no point saving the IDS that's
483:10 - why we we do this but even though we
483:13 - move the files into start section not
483:16 - not we we are not moving actual file
483:19 - we're just marking the file as a
483:22 - start okay let's have a look in the
483:25 - browser so we see this at favor um
483:29 - listen I think we need to reduce the
483:33 - icons for the other two buttons as
483:37 - well download and delete files
483:46 - button margin right
483:51 - two okay and
483:53 - this star files button needs to have
483:57 - also margin right something like
484:01 - three okay so when I select I click add
484:04 - to favorites it's going to send request
484:06 - now let's scroll down
484:09 - below let's change this
484:13 - restore um let's start from the
484:15 - beginning so are you sure you want
484:18 - to um maybe the confirmation is not
484:22 - necessary so you select something click
484:23 - add to favorites and that's it if you
484:26 - mistakenly addit something into it
484:28 - favorite it doesn't hurt anything it is
484:31 - not castrop so we can simply undo that
484:35 - so the confirmation is extra whenever
484:38 - the button is
484:39 - clicked whatever is written in unconfirm
484:42 - that should go inside on
484:47 - click
484:49 - so we don't need this variable let's
484:52 - remove this
484:53 - confirmation let's remove this
484:58 - here here on Console we can delete on
485:02 - confirm whatever is the body of this
485:04 - function needs to go inside on
485:08 - click just make sure that we have
485:10 - something selected okay if something is
485:12 - not selected we show this dialogue
485:14 - otherwise we execute that file restore
485:19 - uh no it should not be restored it
485:21 - should be file stars star maybe or add
485:25 - to favorites
485:28 - let's call this a to fa favorites okay
485:33 - and just to avoid any confusion in the
485:36 - future uh let's call this file as
485:42 - well add
485:44 - to
485:47 - favorites
485:49 - button something like
485:51 - this okay go in my files and add to
485:56 - favorites button scroll down below and
485:59 - we have the old import somewhere star
486:03 - files button which we can
486:08 - remove okay that's good a to favorites
486:11 - this doesn't exist we're going to create
486:12 - that but let's have a look please select
486:14 - at least one file okay let's remove this
486:17 - to
486:19 - restore um we are going to emit okay
486:23 - nothing is necessary to be emitted so I
486:25 - can remove that selected files have been
486:29 - added to
486:36 - favorites a it we can delete
486:41 - that I think that's it
486:44 - um parent ID okay we need this parent ID
486:49 - we need this parent ID and we are going
486:51 - to send this P ID so if I go in the
486:53 - delete files
486:56 - button um um where is this parent ID
486:59 - here it is so we are using this parent
487:01 - ID so I'm going to add
487:04 - this here as well
487:06 - because let's paste let's call this
487:11 - form because if we are inside the screen
487:14 - light folder and I click all and click
487:17 - add to favorites obviously I want to add
487:20 - everything into favorites and we need
487:23 - also here and tidy everything in which
487:26 - folder okay that's why we need this uh
487:30 - pentti okay a favorites this is
487:32 - something um which doesn't exist so
487:35 - let's open web.php
487:39 - add
487:41 - to
487:52 - favorites now let's open file controller
487:58 - scroll down below and create this
488:01 - function a to favorites uh the function
488:04 - will need the same type of
488:08 - request as we
488:11 - have for
488:13 - example for download where's
488:19 - that so files action request okay and
488:23 - then we get the IDS and date so I'm
488:28 - going to copy
488:31 - this paste we need files action
488:38 - request we have parent ID we have
488:42 - all and we have IDs now we check uh let
488:47 - me actually copy this part as well so if
488:51 - all then we need to take the appear and
488:54 - children otherwise we select by IDs
489:01 - right if
489:05 - all okay so we're going to make requests
489:08 - uh insert requests into start
489:10 - files obviously here in children is the
489:15 - items we are going to add into start so
489:19 - that's going to be
489:21 - children
489:23 - if uh we don't have all and if we have
489:26 - IDs
489:30 - uh in this case children will become
489:36 - file uh
489:38 - find and provide
489:42 - IDs okay so let me dump and die
489:49 - children I select something click it to
489:54 - favorites support method delete okay I
489:56 - made a
489:58 - mistake uh that should be
490:01 - post and we're making post request okay
490:04 - that's
490:05 - fine select something it to
490:08 - favorites okay we see two items that's
490:12 - perfect we have the items and now I can
490:15 - iterate over my items and just insert
490:19 - into the
490:20 - database uh one by one or I can create
490:24 - prepare everything and do a patch insert
490:28 - insert okay I think bch insert will be
490:30 - more optimal because we're going to do
490:32 - everything in one um database C database
490:36 - insert command so first we need to
490:38 - prepare the data okay that the data will
490:42 - need to be an array of associative
490:45 - arrays and we're going to have file ID
490:49 - inside there which will be something I'm
490:52 - just showing you the format and we're
490:54 - going to have user ID as well
490:58 - something and we're going to have
491:02 - created
491:03 - it uh which will be carbon now and
491:06 - updated it okay and we're going to have
491:09 - multiple such type of request as as many
491:11 - such type of inner arrays as many um
491:14 - items we have inside the children okay
491:17 - so I start iterating over children and
491:21 - inside
491:22 - data I push the following array so file
491:26 - ID
491:27 - is Child
491:30 - ID this dot needs to be removed we need
491:34 - a user
491:36 - ID which will be Al
491:42 - ID we have created it which will be
491:48 - carbon hang
491:50 - on carbon
491:54 - now and updated it
492:01 - so I prepared the data and now let me
492:08 - call um start file
492:14 - insert and provide
492:21 - data and
492:23 - whenever the data is inserted we are
492:25 - going to uh simply ref fresh the current
492:29 - rote so my files to wrote my files it's
492:34 - called my files not
492:38 - sure
492:39 - um not the render
492:44 - but let's check what's the rout name my
492:47 - files camel
492:49 - case okay to wrote my files okay start
492:53 - files let's check it is empty I select
492:56 - two files click at to favorites selected
492:59 - files have been added to
493:03 - favorites refresh we see two items here
493:07 - okay I select one
493:09 - more that was
493:13 - added okay now we
493:15 - see aha now we see this and this is Ed
493:19 - twice because we sent probably three IDs
493:23 - we need to go into at to favorites and
493:26 - on success
493:27 - we need to set form IDs equals an empty
493:31 - array like
493:34 - this now I need to delete these two
493:37 - items refresh let's
493:42 - add uh now we added the same item second
493:46 - time this is something we need to also
493:49 - consider and and maybe remove this
493:55 - item uh from from
493:58 - the from the start files okay we also
494:01 - need to Output which file is start and
494:03 - which not maybe we should start from
494:07 - there let me show you what I mean I will
494:11 - go in my
494:12 - files and let's create one more
494:17 - column
494:19 - um it doesn't need any label
494:25 - probably okay
494:29 - okay let's duplicate
494:36 - this and I am going to put right there
494:43 - icon uh okay we need two types of icons
494:47 - uhuh we have solid as well okay good so
494:51 - we need outline
494:53 - icon and we need solid icon
494:58 - like
494:59 - this okay so I'm going to give this one
495:04 - text text
495:06 - yellow or text orange I don't have the
495:10 - AOC completion text
495:15 - yellow 500 let's check
495:18 - it okay I see
495:21 - that which is good let's remove this
495:25 - item Center and Flex from here here no
495:29 - need okay good and we should display one
495:32 - or another not both
495:37 - so um I want to return from the backand
495:41 - if that file is added into favorites for
495:45 - that particular user okay now imagine
495:49 - that this property already exists okay
495:52 - so here's what I'm going to do I'm going
495:54 - to open file resource
495:57 - and from here let's say from here um is
496:02 - favorite I'm going to return true okay
496:06 - let's say that every every file is a
496:08 - favorite file so then from here I'm
496:11 - going to do the if file
496:15 - is
496:17 - favorite then if it is um if it is not
496:21 - favorite then we show
496:23 - outline icon in else case we show a
496:28 - solid icon so in this
496:31 - case we see all solid icons because all
496:34 - files are considered to be favored
496:38 - files um we can reduce
496:42 - the we can reduce the width of this
496:47 - particular column I
496:49 - think no not like
496:51 - this let's give it like a Max
496:55 - width of
496:57 - 60 pixel
497:01 - maybe even
497:05 - 50
497:07 - 40 think it is not reducing but that is
497:11 - fine white space no rra can be
497:15 - removed okay so this is this is more or
497:18 - less okay I will go in the um file
497:21 - resource and I will say is favored
497:23 - equals false okay now this means that
497:26 - none of the files FES our favorite files
497:28 - so we see this type of a star right
497:31 - there for every file now the point is
497:34 - that based on the start files we need to
497:37 - decide whether this file is favored or
497:40 - not and return the corresponding data
497:43 - inside this file
497:45 - resource to do this in the most optimal
497:49 - way um I will create a relation from the
497:53 - file
497:54 - PHP like we have here
497:58 - um belongs to and has many
498:03 - relations we don't have as many
498:05 - relations right here but obviously uh we
498:08 - can create public
498:11 - function um how should I do
498:15 - start okay let's call this start and I'm
498:19 - going to
498:20 - return
498:24 - this um has one
498:27 - relation will go to start
498:33 - file okay and then from the start files
498:38 - foring key will be file ID corresponds
498:41 - to my
498:46 - ID okay and based on this criteria the
498:51 - uh foring key is file ID corresponds to
498:53 - my
498:55 - ID it's going to return turn many
498:57 - records because one particular file like
499:01 - this particular file in theory in theory
499:04 - if this file is let's say shared to
499:07 - multiple users this particular file can
499:10 - be starred
499:13 - by um by multiple users okay and this
499:17 - will
499:19 - return um only first one because we have
499:22 - one but it might return a record of a
499:26 - different
499:28 - user so that's the
499:31 - point let's say if I have here another
499:35 - record this file but for user
499:39 - one
499:41 - then from here we're selecting the start
499:45 - file but if we are logged in as a user
499:48 - to it might quer for the user
499:53 - one so we need to add a custom we
499:56 - condition for the currently authorized
500:00 - user so we can add this wear condition
500:04 - right here or write when we do the join
500:08 - okay so I think in this case we can even
500:12 - do here file user ID corresponds to out
500:18 - ID now this now we have the guarantee
500:21 - that this will always return uh one and
500:24 - the correct one or the currently
500:27 - authorized user if there is no starred
500:29 - file if this particular file is not
500:32 - starred for the currently authorized
500:35 - user then this will simply return
500:39 - null all right now if I go file
500:45 - controller to create kind of like
500:48 - Optimal
500:51 - solution uh we need to add with right
500:55 - here with
500:57 - starred so I went to Q file with star
501:02 - files let me select
501:04 - this uh and let's go into file
501:09 - resource and just let's just print
501:14 - this this
501:19 - start okay for the first one we see null
501:23 - um okay let me return if if this start
501:29 - exists let's take the Boolean value out
501:32 - of
501:37 - it um okay um maybe we can just call
501:41 - Double exclamation to cast this into
501:45 - Boolean okay now look at this this seems
501:48 - to be working so this is added into
501:52 - favorites and it has this solid version
501:55 - to have other others this is also
502:00 - added and and that's it so we have
502:05 - only do we have only one and two files
502:09 - maybe one is inside here okay so here we
502:12 - have two
502:17 - more do we have four
502:21 - files now we only have three
502:23 - files why this is considered to be start
502:26 - both of
502:28 - them hold on one two three and
502:34 - four it's a bit too much uh there is
502:38 - some sort of bug and those
502:41 - items those items even should not be
502:45 - there okay let's debug this make sure we
502:47 - have the correct implementation I will
502:49 - go into my files and I will
502:52 - output file ID as well
502:57 - now let's check we have
503:01 - 268
503:02 - 269 and
503:04 - 241 241 that should be
503:10 - start okay so we have 241 twice
503:19 - here 2421 is
503:23 - twice uh how this is possible
503:31 - possible how this is possible hold
503:38 - on
503:39 - 2 6
503:48 - six if we go inside 268
503:55 - 269
503:59 - 268
504:01 - 269 okay so we have duplicated data and
504:05 - that's why we see it twice why do we
504:08 - have duplicated data probably that's a
504:10 - fault of the
504:12 - pagination if I just
504:18 - reload and if I scroll down below then
504:21 - the data is loaded for page two
504:26 - let's check the
504:30 - data the data starts from
504:43 - 275 but we still see this 200
504:47 - and
504:49 - 268 okay how many total records do we
504:54 - have I think we found different print
504:57 - problem let's
505:00 - output all
505:02 - files we have all files. dat.
505:09 - length if I reload we see 10 I scroll
505:14 - down below we see
505:19 - 20
505:22 - but 1 2 3 4 five six 7 7 8 9 10 11 12 13
505:32 - 14
505:36 - 15 um how is this
505:40 - possible
505:42 - 268 here okay maybe it's a because of
505:46 - this start section and we maybe we
505:48 - didn't have bug previously so I'm going
505:51 - to remove this start and go in the file
505:54 - resource and just comment this
505:58 - line and pay attention that this is the
506:00 - file name which is duplicated so I'm
506:03 - going to copy the file name we see this
506:06 - file name twice on the page so I will
506:09 - refresh the page now we see this only
506:12 - once I will scroll down
506:15 - below now I see this twice obviously the
506:19 - problem is not in the start section and
506:22 - our implementation uh what we just did
506:26 - so the problem is in something
506:34 - else
506:37 - 268 hold on hold
506:41 - on go to file controller
506:57 - 268 is
507:02 - here for page
507:09 - two if I simply reload the
507:13 - page uh the data we see IS 268 69 70 71
507:19 - 2 3 4 five
507:22 - 6 and
507:24 - seven and then the rest of the data is
507:42 - loaded it looks like it is not
507:48 - considering pagination or anything like
507:51 - this
507:56 - I want to print the
508:00 - SQL so let's dump into
508:06 - files SQL or
508:11 - um let me search for how to LEL quy
508:17 - tosql string
508:35 - tosql so we have
508:37 - these
508:38 - files to
508:43 - SQL why it doesn't seem to be
508:47 - working collection okay so we
508:50 - have files to be
508:53 - collection because we called paginate on
508:55 - that that's why it is it is
509:02 - collection without page in eight we see
509:06 - the
509:20 - CER so I was thinking that maybe you
509:23 - have to provide the page ID but LEL
509:25 - doesn't take to long need the page ID to
509:28 - write explicitly in the qer because if
509:32 - we have
509:35 - provided let's remove this if we have
509:38 - provided the page parameter if I scroll
509:40 - down below and we have provided page two
509:43 - page three LEL takes
509:46 - that
509:54 - automatically we have file is definitely
509:56 - duplicated this is
510:01 - twice this is
510:10 - twice this is
510:15 - twice and that is inside the screen
510:20 - Li let's go h
510:29 - okay how many items are inside there so
510:32 - this is its left and right so let's
510:35 - select where left is greater than 54 and
510:41 - right is less than
510:44 - 107 we have 26 items
510:57 - okay what if I change
511:04 - the order by and let's order by
511:22 - ID okay it starts correctly from to
511:34 - 68 now it loads the correct
511:39 - data now it loads the correct
511:47 - data I think I know the
511:50 - reason so the dates are identical so we
511:55 - are sort in uhuh now I get it so we are
511:59 - sorting this by uh first we're showing
512:02 - folders but in that specific case we
512:04 - don't have any
512:06 - folders so then we are ordering by
512:09 - created at descending and because
512:11 - created at is identical so we are
512:14 - selecting it is selecting the first 10
512:17 - like this and then it should technically
512:20 - select the next 10 but well the update
512:26 - it or created it is identical so it is
512:29 - sometimes selecting the exact same
512:32 - records so what should I do here is that
512:36 - first we need folders then we need by
512:39 - dat descending and
512:42 - then then we need ID
512:47 - descending like
512:49 - this reload the
512:52 - page we see the records it's not going
512:56 - to be duplicated it's not going to be
512:58 - duplicated
512:59 - now okay I got scared a bit what was
513:04 - wrong now let me uncomment this as
513:07 - favorite I will go in the file
513:09 - controller and uncomment this with as
513:11 - well and now let's reload if I scroll
513:14 - down below now I will see two files
513:19 - added into favorites and this is inside
513:22 - the screen line let's also remove the
513:26 - this length and if I go back I should
513:30 - see one file somewhere here okay now we
513:36 - have totally three files starred into
513:40 - the database and this is
513:43 - one this is two and this is
513:46 - three okay so now I can select this and
513:49 - click it to favores and this will get
513:52 - starred but for some reason it
513:54 - disappeared
514:00 - uh it disappeared
514:02 - because we we are inside the folder if I
514:05 - go inside the folder select and click
514:08 - Start then it is redirected to the URL
514:11 - without the
514:12 - folder just like this so now I will need
514:16 - to
514:18 - provide here
514:24 - folder which needs to be
514:29 - parent so I select click it
514:33 - favorite uh okay maybe I did something
514:37 - wrong so let's search by camel case
514:41 - older appearing path okay let's provide
514:48 - path
514:50 - click okay good
514:53 - perfect okay so now I was thinking and
514:55 - maybe a separate button is not ideal
514:59 - solution uh because we can simply click
515:02 - on this and it will send request like
515:06 - this okay what do you think about this
515:09 - it's bad that I cannot know your opinion
515:12 - right now about this immediately um I
515:15 - would do as as like a majority of you
515:18 - would decide but yeah like um having a
515:22 - button right here is kind of confusing
515:24 - because if you selected
515:26 - uh this file and this file and clicking
515:28 - the set of favorites what should happen
515:30 - should both become favored should both
515:35 - become unfavored or should this become
515:37 - unfavored and this become favorite
515:40 - that's why probably putting clicking
515:43 - right here is a better solution so I
515:46 - will go into my
515:48 - files remove the ID here
515:56 - and let's
515:59 - wrap these two
516:01 - svgs in a d
516:05 - probably and let's add click listener on
516:09 - that whenever we click on this let's
516:12 - call stop and
516:15 - prevent add um add remove
516:22 - Favorite like this and we're going to
516:24 - pass the file as well so I want this
516:27 - particular file to be added or removed
516:29 - from favorite now let's create function
516:32 - for
516:40 - that and if I go into at favorites
516:43 - pattern this is um this is not necessary
516:48 - anymore uh what I need is the
516:51 - form so I can create this form directly
516:58 - here and I
517:00 - need this
517:05 - request okay so I create the form I
517:07 - don't need all I need PR ID do I need
517:10 - par ID no I think I don't need the pr ID
517:13 - if I don't need all I don't need PR ID
517:15 - as well so I just need
517:17 - IDs that's perfect so I will provide
517:21 - IDs um make request right here selected
517:24 - files have been added to favor it in
517:25 - then form IDE is this will be something
517:27 - that is reseted but even reset is not
517:30 - necessary because this form is created
517:32 - whenever we click on the button so this
517:34 - is not necessary okay however we're
517:37 - going to have a problem when we do
517:40 - this because the back end expects P an
517:45 - ID and all flag as well so if I just
517:51 - click right here the request is
517:54 - made and and look at this please select
517:56 - files to download why
518:01 - doing
518:03 - download
518:06 - uh
518:08 - yes please select
518:10 - files okay did we send IDs no we didn't
518:14 - send IDs okay we need to send
518:17 - IDs so when whatever file we're clicking
518:21 - we have the file here and we're going to
518:23 - provide that file do
518:27 - ID so I click on
518:30 - that now we send
518:33 - this uh attempt to read property path on
518:36 - null
518:37 - okay so uh this error comes from here
518:42 - probably because we don't have pint
518:50 - anymore okay so we don't even need to to
518:55 - do a
518:56 - redirect so in this case we just need to
518:59 - do a standard axio request probably and
519:05 - whenever whenever we insert the record
519:08 - we just need to return like a success
519:12 - success true or simply simply a
519:17 - response with empty content in status
519:20 - code 204 so it means that yeah the the
519:24 - response was successful
519:26 - completed
519:28 - um
519:30 - but um no response is actually
519:34 - required okay if I go into my files uh I
519:38 - need to change this into axios so I
519:41 - think I have an axio
519:44 - example
519:46 - here let me search this in the
519:50 - project in
519:52 - the Js
519:56 - where is
519:58 - that maybe I don't have AOS and I have
520:00 - fetch
520:01 - example HTTP get okay I need HTTP Post
520:07 - in this
520:08 - case so I will duplicate
520:13 - this let's change this into HTTP
520:19 - post
520:22 - um let me change this first so this
520:25 - should be HTTP
520:28 - poost and we provide the road and we
520:32 - need to provide the IDS as well so we're
520:36 - going to delete this
520:38 - form and we're going to provide data
520:42 - like
520:43 - IDs is
520:50 - this and we
520:53 - accept uh data
520:56 - here which we should pass inside body
520:59 - Json
521:01 - stringify
521:03 - data okay if I remember correctly we
521:06 - should do it like this now if I click on
521:10 - this we have an
521:12 - error request with get head method
521:15 - cannot have body uh okay we need method
521:19 - as well method to be post
521:26 - click on
521:27 - this
521:29 - okay what
521:31 - happens is we made post unknown status
521:35 - to uh
521:39 - 419 um unknown
521:44 - status csrf token mismatch okay so we
521:48 - don't pass csrf
521:53 - token okay I'm going to justest one
521:55 - thing what if I um what if I return this
521:59 - and
522:01 - send the previous request using inertia
522:04 - form submission but from the back end
522:08 - instead of response uh yeah from the
522:11 - backend I will just return the following
522:12 - response what will this do let me check
522:16 - so I click on
522:17 - here and this is the
522:22 - response well we don't need to return
522:28 - anything so I don't want the model or
522:32 - anything to be displayed
522:56 - okay what if I call here a
522:59 - redirect
523:04 - back let's check
523:07 - this okay this
523:10 - looks like
523:13 - working let's uh let it disappear Okay
523:16 - click here okay this looks like to be
523:19 - working now we need to implement
523:22 - removing from the favorites so I will go
523:26 - in that file
523:34 - controller and I'm going to also modify
523:37 - this part because right now I am
523:40 - accepting a list of it and this is
523:45 - something uh which will be hard to use
523:50 - when we want to remove from the
523:51 - favorites so I'm going to make it
523:53 - simpler
523:55 - and I'm going to create new action which
523:57 - will be a to favorit action not the
523:59 - action but the request so PHP artisan
524:03 - make
524:05 - request add to
524:16 - favorites Aid to
524:20 - favorites okay a to favorites request
524:35 - add to favorites request uh we have
524:39 - another request mistakenly created here
524:42 - add to favorite so I'm going to remove
524:44 - this and now from files action I just
524:47 - need to get single
524:49 - ID nothing
524:51 - else true here
524:56 - I will just need one
525:03 - ID exist uh inside files
525:07 - ID for the currently authorized user
525:11 - that's fine it to favor its request
525:14 - let's open now file
525:18 - controller let's import this we have the
525:20 - request we don't need parent so I can
525:23 - remove this we have the data and we have
525:25 - the ID so I'm going to just get the
525:31 - ID remove everything
525:34 - else we are just working with a single
525:36 - file right now and we're going to
525:39 - prepare the
525:43 - data that will
525:46 - be we are going to select the
525:49 - file file will be
525:53 - file find
525:57 - uh by
526:02 - ID then we pass the file ID we pass the
526:06 - user and create an update that and then
526:10 - we call create passing the data it's
526:14 - going to uh return the result the model
526:19 - it created and then we don't actually
526:21 - need the result and then we redirect
526:24 - back
526:25 - okay so this is how we
526:29 - do and I need to test this
526:32 - now click on
526:35 - this okay now let's
526:38 - check undefined area key ID uh we pass
526:42 - IDs this is something we need to change
526:45 - as well we just need to pass single
526:53 - ID uh file ID to be feelable okay you're
526:59 - right those fields need to be ented
527:03 - into
527:12 - aable like
527:18 - this updated and created
527:22 - it I deleted something
527:27 - mistakenly now we added this into star
527:30 - and if we go into file
527:34 - controller uh now I'm going to do the
527:38 - following so when when I get the ID and
527:41 - I have the user ID as well let me
527:46 - extract into user ID
527:51 - variable I am going to select
527:55 - star start file to
527:59 - be start file
528:03 - C
528:05 - where file
528:07 - ID is file
528:11 - ID and
528:16 - where uh user ID is user
528:21 - ID and I want to get the first
528:26 - let me move this on its own line so I'm
528:29 - going to get the first or I will assume
528:32 - that there already exists a start record
528:36 - if that
528:37 - exists then I need to simply delete that
528:42 - which means that remove from favorites
528:44 - okay I will delete that in else
528:48 - case I will create
528:51 - that we don't even need a separate
528:54 - variable we we can directly pass this
528:56 - into
528:57 - create if that exists I will delete if
529:00 - doesn't exist I will create and I will
529:02 - redirect back now if I click an existing
529:06 - button that should be
529:08 - removed we have 14 records
529:12 - here click on
529:16 - this it deleted but why this get start
529:20 - uhuh I know why it gets
529:22 - start um
529:29 - why does it get started hold on click on
529:34 - here click on
529:44 - here okay look at this because we call
529:48 - redirect back if we are at the very
529:51 - bottom if we have scrolled down below
529:53 - somewhere and click on something think
529:55 - pay attention to the scroll so
529:58 - it um it like uh reduces and then it
530:02 - increases if I have scroll down below
530:06 - and then scroll up and click on this now
530:08 - the scroll increased and we only have 10
530:10 - records so it completely refreshes the
530:13 - page which is not what we want that's
530:15 - why I think I was just experimenting
530:19 - right now but I think we should make
530:23 - http post request to the following URL
530:28 - we are going to
530:30 - pass ID to be file
530:37 - ID and we don't have on
530:41 - sucess we can
530:43 - have promise and
530:47 - then and then we can show the access
530:51 - notification selected files have been
530:53 - added to favorites or have been removed
530:56 - from favorites depending on what action
530:59 - we are doing but let's make sure that
531:02 - this request works first we need to pass
531:06 - the csrf token we had this problem
531:08 - earlier so when I click on this uh we
531:13 - have
531:16 - this assf token mismatch and why do I
531:19 - see this access notification I should
531:20 - not see that
531:31 - what's the status
531:39 - code I'm going to do like
531:43 - this
531:46 - response if
531:49 - response
531:51 - status code
531:55 - if
531:58 - that is more than or equal to
532:02 - 200
532:05 - and response status is less than
532:10 - 300 we can return
532:14 - response
532:16 - Json we assume that this is successful
532:18 - response otherwise we're going to
532:22 - throw new
532:27 - error and we can
532:30 - pass the response to the error so const
532:34 - error equals new error error
532:38 - response equals entire
532:42 - response and then we call throw new
532:45 - error not new error but throw
532:49 - error now let me check I click on
532:53 - this okay
532:54 - we don't see success notification which
532:56 - is good we we are in
532:58 - uncode uh in promise error so if I go
533:02 - here and then call
533:07 - catch and I will print something like
533:10 - one to three it will come inside one to
533:13 - three so I catch this and I can also I
533:17 - have an error probably
533:20 - here let me
533:22 - check uh click on this
533:26 - uh one to three
533:28 - and I should have an
533:32 - error so this is the entire
533:41 - response so here's the error and I can
533:44 - get the actual response from here error.
533:49 - response here's the response and from
533:53 - the response I can get get what is the
533:58 - body and
534:06 - Json const body equals
534:10 - error.
534:12 - response. body Json so this is a promise
534:17 - so we call a wait on that let's change
534:21 - this into a sync
534:24 - and let's print the body that's going to
534:26 - be an actual result whenever we want
534:33 - to Jon Jon is another
534:40 - function what is
534:43 - it if it's no
534:48 - function readable
534:51 - stream and we have A8 in front of it
535:11 - okay let me make slight modifications um
535:14 - here I'm going to return new
535:19 - promise
535:20 - resolve and reject
535:25 - so
535:26 - then we can move this inside here and
535:31 - then instead of status code I can also
535:33 - check if the response is okay then I'm
535:38 - going to return uh not the return but
535:40 - I'm going to call
535:42 - resolve uh response
535:47 - Json in L's
535:51 - case I will reject
535:56 - um before I call
535:58 - reject uh I need to call response Json
536:05 - again and in
536:09 - then I need to call reject with the
536:15 - data so that's an actual um response and
536:19 - maybe we can pass the entire response
536:23 - here in the
536:26 - data or maybe this will be like an
536:34 - error okay let's
536:37 - try let's try
536:48 - this uh go in my
536:51 - files let me print the entire
537:00 - error we have the response and actual
537:04 - error okay so even though um I might not
537:08 - use this message since I've toen
537:10 - mismatch right here so it's good to know
537:13 - how you can get an actual response when
537:16 - the error is not when the request is not
537:18 - successfully completed so in this case
537:20 - we have this error um if I want to
537:23 - display the error I would do like um
537:25 - this is a response or um this is an
537:30 - actual error so error dot response or
537:33 - error.
537:35 - data
537:36 - is the
537:39 - actual hold on error.
537:43 - error. message will be the actual
537:46 - text here it is CSF token mismatch and
537:50 - you can display this in the catch if you
537:52 - want we need to f fix the csrf token
537:55 - issue because right now we aren't able
537:57 - to send a post request to add this into
538:00 - a favorites so what we're going to do is
538:03 - first open the handle inertia requests
538:07 - and if we go in the share that is the
538:10 - global variables that is available
538:13 - inside The View files so I'm going to
538:15 - create
538:17 - csrf token a variable here which will be
538:21 - csrf
538:25 - csrf undor token and now I will be able
538:29 - to access the csrf token inside uh my
538:34 - files so if I will just print uh
538:40 - page do I have page
538:42 - here or do I have
538:45 - props I have props so I can just write
538:50 - props
538:52 - page uh let's check this whenever I
538:57 - click this
538:58 - button
539:00 - okay let's just print
539:13 - props okay those are our props um I want
539:18 - to use page okay let me use page
539:25 - const page equals use
539:30 - page and
539:33 - then instead of
539:38 - props I will use page it should be
539:41 - inside the page
539:58 - uppercase x
540:01 - csrf dash token and that's going to be
540:06 - our token okay so we need to provide
540:09 - this token from
540:12 - here
540:14 - um so I can either pass
540:18 - this is a
540:21 - token here or
540:24 - or I will try to use page const equals
540:30 - use page
540:32 - here and then I will take
540:35 - the page propes I token let me print
540:38 - this page propes I've token here as well
540:42 - and I'm going to remove
540:44 - it I actually have removed it from here
540:47 - okay so let's check this part I click on
540:51 - this and we see save token and and the
540:54 - request completed successfully so I
540:57 - click on
540:59 - this okay it looks like it is working
541:03 - now let's check the database and we see
541:05 - 13 records I click on this and we see
541:09 - now 12 I click on
541:12 - this here and I see now 11 if I just
541:17 - reload the page I see that those are
541:19 - excluded however it doesn't affect it it
541:23 - doesn't affect immediately so what I
541:25 - will do is on success I will set file
541:31 - is favorite
541:34 - equals whatever is file is favorite
541:40 - inversed let me check now I click on
541:43 - this it gets removed I click on this it
541:45 - gets added and we see success
541:48 - notification in HTTP helper we have this
541:51 - console log here and here which we can
541:56 - remove and now this looks fine okay it
542:01 - looks like we don't need this Ed
542:03 - favorites
542:07 - button uh so we can
542:11 - simply we can simply delete
542:20 - that okay there's some error
542:25 - it to favorite P okay this this is used
542:28 - somewhere so let's go into my files
542:31 - probably it is used
542:37 - here okay now one thing what we might
542:41 - need to do is that filter the uh files
542:46 - or
542:47 - folders by is
542:52 - favored okay I'm going to add
542:58 - checkbox um right here next to
543:05 - download I want to remove this as well
543:09 - do we have this used somewhere else no
543:12 - we don't okay so let me get these
543:17 - checkbox and put this right
543:22 - here let's give it some label I'm going
543:25 - to actually put this inside the label
543:28 - and give it
543:29 - text
543:30 - um only
543:47 - favorites okay this change is something
543:51 - else show
543:54 - only
544:10 - favorites um what we need to do is
544:12 - probably redirect user to different URL
544:17 - where we put in the URL like question
544:21 - mark favorites equals one and when this
544:26 - happens we will simply show only
544:30 - favorites so if I go in the file
544:41 - controller uh let's get this cury
544:44 - parameter
544:47 - favorites it's going to be request
544:52 - get favor
544:55 - and let's dump make sure that it is
544:59 - there it is one okay and we can assign a
545:03 - default value uh which will be null
545:07 - okay
545:10 - and what if we provide zero it's going
545:14 - to be string zero right so we need to
545:17 - par uh we to cast this into an integer
545:21 - value let's print
545:24 - and then cast into an
545:27 - integer now we see a zero
545:32 - here and if we provide
545:35 - one we see
545:38 - one and now we check if
545:43 - favorites
545:44 - equals one then we need to only show
545:49 - favorites records so I will do this down
545:52 - below I will will remove this paginate
545:56 - and call
545:59 - files
546:01 - pinate
546:05 - here but we need to add a join to the
546:09 - start files so
546:13 - files left
546:16 - join uh well actually we need inner join
546:19 - if we're going to show only favorites we
546:22 - can call also inner
546:24 - join on
546:27 - start
546:29 - files we are start files file ID
546:35 - equals files
546:39 - ID
546:42 - and we need an extra
546:47 - condition uh
546:51 - where start
546:55 - files user ID equals Al
547:07 - ID let's just write
547:12 - join okay now create that is
547:17 - ambiguous uh here so that should be
547:20 - files created that
547:23 - that should be files
547:35 - ID uh I think we need to select
547:40 - everything from files we don't want to
547:44 - select uh start files
547:54 - uh I think we need to assign the result
547:57 - into files back inside the files
548:00 - actually I think this should be
548:03 - called uh
548:05 - cury and this should be called
548:12 - files okay and when we have favorit one
548:15 - we only see favorite files
548:23 - if we open my
548:30 - files uh if I just remove
548:38 - this uh let's give it
548:41 - Flex
548:43 - Flex item Center margin right three
548:53 - what does it move
549:01 - above plus
549:06 - Flex okay so let's give this one margin
549:10 - left
549:16 - to REM model so we
549:19 - can we can give it another
549:25 - another
549:26 - value instead of all selected that
549:28 - should be only
549:38 - favorites okay and whenever we click
549:40 - only the
549:41 - favorites then we are going to um just
549:45 - change the
549:46 - url so I want to add uh this favorite
549:50 - cury parameter in the URL so but uh
549:53 - there might be in theory some other Q
549:55 - parameters in the URL right so how we're
549:58 - going to get the existing Q parameters
550:00 - and then merge my e
550:02 - favorites let's just execute window
550:08 - location uh window location where's
550:12 - that
550:14 - search exactly
550:16 - so there is this variable in JavaScript
550:20 - called um new Eur
550:24 - search
550:26 - Rams and if we just provide window
550:29 - location search there and if I assign
550:33 - this into a variable called s then this
550:37 - s will have entries
550:47 - there um s
550:49 - dot get all let me call this get all
550:57 - get
551:01 - allall how to
551:09 - get now if I call to string okay here
551:13 - here is the that so what we need to do
551:15 - is to convert the existing search into
551:19 - URL
551:20 - params and then we're going to call set
551:24 - let me actually do this right here so um
551:27 - const proms equals new URL search params
551:32 - window location
551:35 - search then inside the params I'm going
551:37 - to call
551:41 - set
551:45 - favorites and we're going to provide the
551:49 - only favorites. value if this is true
551:53 - we're going to provide one if not we're
551:56 - going to provide
551:57 - zero okay and finally we need to convert
552:02 - this into
552:04 - string and just do a redirect maybe so
552:11 - we can do also window
552:15 - location um search equals
552:20 - forams do to
552:25 - ring if that's if that's going to
552:30 - work if I choose that we see that the
552:33 - URL actually
552:36 - changes uh however we don't need this
552:40 - full
552:42 - reload so we need to be able to do a
552:47 - like um rotor rotor visit or something
552:51 - like this
552:54 - so instead of window location search we
552:57 - should probably call um
552:59 - rotor which um should be imported do we
553:04 - have
553:05 - rotor yes we do have rotor so we are
553:09 - going to do
553:11 - rotor.
553:13 - getet um we need to get the current
553:16 - route
553:27 - the current route actually will
553:30 - be
553:32 - window window
553:38 - location uh not
553:42 - H what
553:44 - other things we
553:52 - have path name window location path name
553:57 - window
554:01 - location path name and then we provide
554:07 - these pams to
554:11 - string let's check this I click only
554:15 - favorites well we should remove that I
554:19 - click only favorites and we don't see
554:21 - the full reload in the browser and we
554:23 - only see filtered results now what we
554:26 - need to do is this only favor is to be
554:28 - marked as well if in the URL we have
554:31 - only favorites so these URL search
554:34 - programs can be
554:37 - done um unmounted
554:43 - maybe uh I just need to Define a
554:45 - variable here con not const but L
554:49 - params equals null in then on mounted do
554:55 - I have
554:56 - unmounted I do have on mounted I will
555:00 - assign
555:01 - pams equals new eural search
555:05 - pams and only
555:08 - favorite. value equals if
555:13 - params
555:16 - get
555:17 - favorites if that
555:20 - exists more specifically that
555:24 - equals
555:26 - one then only favorites value will
555:29 - become true let's use requal here and
555:35 - I'm going to also print what is the Pam
555:37 - get
555:41 - favorites okay as you see this is marked
555:44 - so if I click on this that uh favor
555:47 - turns into zero I refresh it and it
555:50 - disappears we can also remove move
555:53 - completely this only favor so I can
555:57 - check if only favor value is true we're
556:01 - going to set
556:03 - this as
556:06 - one if it is not
556:08 - true then we can
556:12 - completely um delete the favorites from
556:16 - the URL so now there's zero I click on
556:19 - this it turns into one and we see only
556:22 - favorite it Ms if I just click on this
556:24 - it's get removed from the
556:27 - URL okay and just like this we have
556:29 - Implement filtering if I go in my files
556:33 - uh and I filter only favorites I see
556:35 - only one item right there this is only
556:38 - favorite item if I remove this go in the
556:42 - screen line I see
556:45 - um only faor
556:48 - it's I see multiple items right here
556:51 - okay so
556:53 - uh I I'm not sure maybe this is not 100%
556:56 - ideal solution maybe a separate page of
557:00 - uh all the favorite items will be good
557:03 - because right now I have like five items
557:07 - selected five items marked as favorites
557:11 - but if I just select only favorites I
557:14 - see only one right here okay if I want
557:19 - to see the all the favorite items in my
557:24 - entire um file file
557:26 - manager then I should probably have a
557:29 - separate page for that okay but this is
557:32 - something um I'm not going to implement
557:35 - I will leave this up to you because we
557:38 - have already created U many similar type
557:40 - of functionalities like filtering and we
557:44 - Weir closes and this trash page you can
557:47 - Implement something similar to my files
557:49 - and just filter uh with only favorites
557:56 - yeah the my favor page should be similar
557:58 - to trash because you are not going to
558:00 - have um you don't need to go inside the
558:04 - folders you just need to have a list of
558:06 - all the favorite files and folders
558:09 - directly even if one folder is a
558:12 - favorite and its child is a favorite you
558:15 - need to see them in a single View and
558:19 - this is how you are going to create that
558:22 - new page now I'm going to start working
558:25 - on sharing files into another users of
558:28 - the same
558:29 - application so we're going to create one
558:32 - button right here when you select file
558:34 - click this share button it will show a
558:37 - model where you have to provide the
558:39 - email of the user you want to share this
558:42 - file email or emails maybe and on the
558:46 - back end we're going to send emails to
558:49 - those users that uh zura
558:53 - in my case my name is Zur Zur has shared
558:56 - um the selected files to you and the
558:59 - users can go into the system and see uh
559:03 - those files under shared with the me
559:06 - section and I will be able to see those
559:09 - files under shared by me section okay so
559:14 - shared by me will be the files which I
559:16 - shared to someone else and shared with
559:19 - me will be files which which someone
559:22 - shared to
559:25 - me let me open
559:27 - now uh my
559:31 - files and I'm going to go under
559:33 - components app and let me copy and paste
559:37 - this
559:39 - maybe restore files button and just call
559:43 - these share files
559:48 - button okay let's choose the icon
559:55 - sheare let's get the
559:58 - SVG put this right here let's provide
560:03 - correct withth eight margin right
560:07 - two
560:09 - share okay we don't need confirmation
560:11 - whenever we click um on share we can
560:14 - immediately show the dialogue where
560:17 - users can just provide the um provide
560:20 - the email
560:21 - addresses so this confirmation dialogue
560:24 - is not actually necessary however we're
560:26 - going to show dialogue something like a
560:29 - new folder okay so you are going to
560:31 - share the selected files to and write
560:34 - down emails so we want something like
560:39 - this let's go under app and we
560:44 - have
560:45 - create folder model let me copy and
560:49 - paste this create folder model and call
560:52 - all these share files
560:57 - model okay let's give it
561:03 - title
561:05 - share
561:09 - files the text input will be just a
561:12 - single email or comma
561:15 - separated list of email addresses we
561:18 - want to share the files so let's just
561:22 - give the this
561:24 - one uh we have the form let's have a
561:27 - look in the form as well so in the form
561:29 - we are going to provide
561:34 - emails uh and it it's going to be an
561:38 - array and we're going to have file
561:42 - IDs which is going to be an array as
561:47 - well now right here we're going to
561:50 - have uh V model will be form
562:01 - emails uh as for the errors I think we
562:05 - can forget at the
562:07 - moment uh
562:10 - enter email
562:14 - addresses let's remove this error
562:16 - section at the moment um key up enter
562:19 - instead of create folder we should
562:21 - probably call this
562:36 - share okay and now let's use this model
562:39 - we we are going to probably make some
562:42 - changes
562:45 - here okay let's finalize this uh model
562:48 - so folder name input let's re name this
562:53 - and call this
562:55 - email email
563:00 - input ID will be folder name we can call
563:05 - this uh Shear
563:12 - email enter
563:15 - email
563:18 - addresses and now let's use these share
563:21 - file files mode mod in the same way we
563:23 - are using this uh create folder model if
563:26 - we go in the create new drop-down we
563:29 - have this create folder model which has
563:31 - this V model create folder model which
563:34 - is probably Boolean
563:37 - value right here
563:39 - so I am going to copy not copy but
563:44 - create in the same
563:48 - way we need share files model and the
563:52 - only thing we need is V
563:55 - model uh show confirmation dialogue No
563:58 - it should not be confirmation dialogue
564:01 - it should be something else but let's
564:03 - rename this confirmation dialogue into
564:05 - show emails
564:10 - model okay and whenever we click on
564:14 - this uh we it shows show email it sets
564:19 - the show emails model to true we also
564:22 - have check that
564:25 - um all
564:30 - selected please select at least one file
564:32 - to
564:35 - share okay let's leave this as it is
564:37 - right
564:40 - now let's go into my
564:43 - files and before the checkbox share
564:47 - files button let's provide all
564:52 - all selected and
564:57 - IDs selected
565:01 - IDs okay we have this share button let's
565:04 - give
565:05 - it margin right
565:09 - three and when I click on this I get
565:11 - this error when I select something I
565:14 - click on share I get share files enter
565:17 - email
565:19 - addresses okay we probably need to
565:21 - provide some hint as well
565:24 - that um well you know let's just
565:26 - implement this
565:28 - sharing um to a single user okay let's
565:31 - let's not make it too complex at the
565:33 - moment and just make it to a single
565:35 - email address obviously it's going to be
565:37 - easier um it's going to be also possible
565:40 - and Easy in the future to just convert
565:42 - this into multiple IM address but for
565:44 - Simplicity and so that you get the idea
565:47 - I'm going to just implement this for a
565:49 - single email address okay sheare model
565:53 - OKAY enter your email address so we're
565:56 - going to do this in plural and that's
565:59 - going to be form email instead of
566:06 - emails just like this okay
566:10 - Enter email address now whenever user
566:13 - provides the email address and clicks on
566:17 - submit we are going to uh make a post
566:19 - request to some root and there going to
566:22 - be file. share road which doesn't exist
566:26 - yet and we're going to create
566:29 - that okay when the share happens we
566:32 - close the model we reset and we show the
566:36 - success notification by the way it looks
566:38 - like we don't show the success
566:40 - notification when the folder is
566:42 - created yeah we don't do this show
566:46 - success
566:47 - notification the folder and let's use
566:51 - the
566:52 - name form
566:54 - dot
566:56 - name the folder let's use
567:03 - btics form.
567:05 - name
567:07 - oops was
567:10 - created and make sure we have this show
567:12 - success notification imported I'm going
567:14 - to save this and let's quickly test this
567:18 - uh zoraa hit submit folder okay
567:23 - okay ahuh so I need to first show the
567:25 - notification and
567:28 - reset Zora 2 click on submit
567:34 - folder okay what's going
567:38 - on form. name
567:55 - Let's test
567:59 - this Surah
568:04 - 3 it has name
568:10 - empty it has name
568:18 - empty form. name is it empty before
568:22 - making requests as
568:25 - well Z
568:27 - 4 no it is not so let's just get the
568:31 - name form. name maybe it
568:34 - resets even before form reset I don't
568:38 - know but I'm not going to spend more
568:41 - time on that 05 click on submit folder
568:45 - 05 was
568:48 - created okay fine let's close this model
568:51 - let's focus on this so we have this on
568:53 - the road file share let's go back and
568:58 - let's implement this file
569:03 - share let's call the action share file
569:08 - share now let's open file
569:12 - controller and let's
569:15 - Implement
569:16 - share okay so we are going to
569:19 - accept um we are going to AC accept
569:23 - IDs
569:26 - and yeah let's accept the same type of
569:30 - request files action request what we're
569:34 - accepting for download like you can
569:36 - share everything inside that specific
569:39 - folder or just a specific IDs so we get
569:43 - the um same action let's have a look the
569:47 - usage of
569:48 - that this is the destroy this is the
569:52 - download I'm going to copy this from
569:57 - download please select files to
570:02 - share and down below we are going to
570:05 - send an email and save also data inside
570:10 - file shares inside file shares we
570:15 - have we
570:19 - have the user user ID and the file idid
570:24 - okay so this means that this file was
570:26 - shared to that
570:30 - user this is how we are going to do that
570:34 - this file was shared to that
570:36 - user okay
570:39 - perfect so let's prepare the data to
570:42 - insert into the
570:45 - database file
570:48 - share let's add aable here here we're
570:53 - going to have file
570:56 - ID we're going to have user
570:59 - ID created
571:01 - it and updated
571:08 - it uh okay let's call file share
571:13 - create we will provide file
571:16 - ID but the file
571:19 - ID can be more than one like we have um
571:23 - all or we have IDs a list of uh list
571:27 - of IDs so what we are going to do if all
571:32 - is
571:33 - selected we're going to get
571:36 - files equals parent
571:41 - children else files
571:44 - equals file
571:47 - find
571:49 - IDs so now we get the
571:54 - files we can uh iterate our our files
571:58 - and
571:59 - insert one by one into the
572:02 - database or we can just do a bch insert
572:05 - I'm going to prepare the data using bch
572:07 - insert so let's iterate over our
572:11 - files inside
572:13 - data let's just
572:16 - push file
572:20 - ID file ID to to
572:22 - be uh file
572:26 - ID
572:29 - okay
572:31 - and and we need user
572:37 - ID the user ID is something which we are
572:41 - going to accept from the
572:44 - request uh so we have an email and we
572:47 - have file IDs based on the email we are
572:50 - going to select the user to which we are
572:52 - going to share okay so we can put this
572:57 - uh we can create new request class and
572:59 - put this email address inside the files
573:04 - action
573:07 - however um I don't want this to
573:12 - be well I want this to be defined in the
573:15 - rules but I don't want to prevent I
573:18 - don't want it to be required
573:22 - okay let me explain what I mean clearly
573:25 - I I just don't feel it I don't explain
573:27 - it very clearly okay
573:29 - so here we have this files action
573:32 - request which is very generic we are
573:34 - using in multiple
573:35 - places uh I think I'm going to create
573:37 - new request anyways so let me do this
573:40 - PHP artisan make
573:44 - request uh F uh
573:49 - file files or share files
573:52 - share files
573:55 - request okay now let's open share files
574:01 - request let's extend this from files
574:06 - action
574:07 - request okay remove authorized inside
574:10 - files action we have all and IDs and
574:13 - everything from the pr ENT which is okay
574:15 - which is good we can have
574:16 - that uh let me copy this array merge
574:20 - portion to save a few seconds and right
574:24 - here I need email okay so this must be
574:28 - valid EMA it it can be nullable no no it
574:31 - must be required so it must be required
574:35 - and it must be email address okay I can
574:38 - also add additional check right here and
574:40 - this is exactly what I I was meaning I
574:43 - can add an extra rule right here
574:46 - additional rule that the email must be a
574:48 - string and based on the email the user
574:50 - must exist in the database okay and if
574:54 - the email does not exist in the database
574:56 - we can immediately show user a message
575:00 - that hey the email you provided doesn't
575:02 - exist in the
575:04 - database um and so you need to probably
575:07 - provide different email address okay we
575:09 - can this is one way how to do second way
575:12 - is just that we will accept that email
575:15 - address even if it doesn't exist in the
575:17 - database and we will show a generic
575:19 - message to the user if the provided
575:22 - email address exists in the
575:25 - database uh the user will receive an
575:27 - email of sharing files if it doesn't
575:31 - exist you no one obviously will receive
575:33 - any kind of email so we are not giving
575:35 - specific information to the user that
575:38 - hey you are sharing this file to user
575:41 - and the user does not exist in the
575:42 - database or exists in the database we
575:45 - just don't say that okay so I don't know
575:50 - that's a maybe a small but kind of
575:53 - security small security thing so that
575:56 - when you are sharing file to someone
575:57 - else you might share a dummy file one
576:01 - like a damor msum file I try to uh type
576:05 - right there some email addresses just to
576:09 - understand if the someone else is
576:10 - registered in the same platform you are
576:12 - registered okay so I'm doing something
576:16 - similar like when you're doing a
576:18 - password reset so you provide the email
576:20 - address someone else's email address
576:22 - just to understand if someone else
576:25 - exists in the system and there are two
576:27 - ways one way is the website will tell
576:29 - you the provided email address doesn't
576:32 - exist in our system or second is that
576:35 - the password resit link will be sent to
576:38 - your email email address if it exists
576:41 - okay and I found that the second
576:44 - approach is what is more common nowadays
576:47 - and um I'm going to do something similar
576:49 - I hope I explained clearly so we will
576:52 - just accept um email right here and then
576:55 - in the file
576:56 - controller let me get this
577:05 - email uh I'm going to select the user if
577:08 - the user doesn't exist we are not going
577:09 - to do anything so let's do
577:14 - this right here user
577:19 - equals user
577:24 - Fury
577:25 - we
577:27 - email equals
577:29 - email and let's get
577:32 - first then we do the check if the user
577:37 - does not exist we
577:41 - return um what do we do shall we return
577:46 - or shall we
577:48 - just let's actually return redirect
577:52 - redirect
577:56 - back okay so this is what we do if the
577:58 - user doesn't exists we simply return if
578:00 - it exists we continue we select the
578:02 - files and now we have the user ID here
578:06 - already we provide created
578:10 - at Carbon now and updated it
578:22 - and here we need to provide insert
578:26 - method with data in this case we just
578:29 - did the share and we need to send an
578:31 - email address let's leave it to do here
578:34 - send email addresses address actually
578:39 - and return uh
578:43 - redirect
578:46 - back and right here we are going to use
578:50 - cheer file
578:52 - request now I'm going to save
578:55 - this uh I think we should delete those
579:00 - folders okay I'm going to select this
579:02 - screen line and click on share and
579:04 - provide email
579:06 - address well I need to select an email
579:08 - address let me select first uh the email
579:11 - which doesn't exist like bread at
579:15 - example.com
579:16 - click on submit please select files to
579:20 - share
579:22 - okay okay what
579:26 - happened um we see file IDs we don't
579:30 - send file IDs let's go into file shares
579:38 - model okay we don't pass we don't pass
579:42 - IDs to the
579:48 - model on share we immediate L send
579:52 - request we have we have share files
579:59 - button but what we can do is listen to
580:06 - confirm and then do the rest on
580:11 - confirm file share
580:21 - if I go inside the model on
580:30 - share okay which one would be better to
580:34 - make requests from the
580:36 - model or UNC confirm I think making
580:39 - request from the modal is good idea
580:42 - because if something is wrong we can
580:44 - show this error into the model before it
580:47 - get gets closed so I'm going to undo
580:49 - this
580:51 - and we actually unclick we show the
580:56 - model
580:59 - however we don't do anything on cancel
581:02 - and we don't do anything on
581:05 - confirm however we need to
581:10 - pass um all end IDs so if I go in the
581:14 - props
581:15 - section I think we don't have props
581:18 - section or we do
581:20 - have we do have so we need all
581:25 - selected is a
581:28 - Boolean and selected IDs is an
581:34 - array now we are going to
581:37 - provide all selected
581:40 - equals all selected and selected IDs
581:45 - equals selected
581:49 - IDs now when we before we make the
581:55 - request uh we need to
581:58 - Define we have file
582:00 - IDs well let's actually change this into
582:02 - IDs and let's provide all to be
582:06 - false and we need parent ID as well to
582:11 - be
582:13 - null now we provide the Pint ID we
582:16 - provide all to be all select Ed and
582:22 - let's do with IFL statement if all
582:26 - selected do value hold
582:32 - on here let me copy this and here we
582:36 - need this all selected and selected
582:42 - IDs if all
582:48 - selected I think it doesn't need value
582:50 - because it is is not uh ref if all
582:53 - selected then form all equals true and
582:58 - form IDs equals an empty array otherwise
583:02 - form. IDs equals selected
583:10 - IDs now let's check this select and
583:14 - click on share uh bread at example.com
583:19 - click on submit
583:24 - okay uh there are there are no IDs so we
583:27 - sent all and parent ID in email but no
583:35 - IDs form
583:41 - IDs oh let's print selected IDs and all
583:45 - selected
583:52 - let me actually click submit immediately
583:54 - selected ID is an
583:57 - empty okay I selected something but it
584:00 - is
584:02 - empty okay let's provide all
584:06 - selected
584:08 - and selected IDs inside
584:15 - share okay we see that now click on
584:17 - share
584:22 - selected
584:33 - IDs let's print this selected IDs we see
584:46 - that on shear
584:52 - that's very strange we see that in the
584:56 - template but
585:00 - not but not inside the
585:03 - share selected
585:10 - IDs okay so in the previous places like
585:14 - in when we are trying
585:16 - to uh Restore for example so we have
585:20 - props
585:24 - we have model value as well we D
585:27 - structured previously the props and use
585:29 - the model
585:33 - value uh here I'm using this model
585:36 - value okay let me change this into
585:43 - props and this is the only place where
585:45 - I'm using model value I can use prop.
585:48 - model value
585:51 - now I can
585:54 - use I have a feeling that this might be
585:57 - the problem so Props selected IDs props
586:01 - all
586:02 - selected props all
586:05 - selected and props selected
586:08 - IDs now let's test this I select click
586:11 - on share click on submit now I get the
586:15 - ID okay now let's have a
586:18 - look we didn't send anything in the
586:20 - email
586:24 - and we got the
586:25 - error email field is required okay now
586:29 - it's the time to uh show proper
586:31 - validation or similar to we are showing
586:33 - in the create folder model so right here
586:37 - we have this class let me copy this
586:40 - share files
586:42 - model form errors email if that exists
586:47 - we're going to show that and the input
586:50 - error as well
586:54 - email okay select something click on
586:57 - share click on submit email field is
586:59 - required now I'm going to provide
587:00 - nonexisting uh not a valid email address
587:03 - click on submit I see that the email
587:05 - must be valid email address so far so
587:07 - good I provide bread at example.com and
587:11 - click on submit okay now I got
587:14 - successful response okay it looked like
587:17 - it
587:19 - worked first of all let me remove this
587:24 - printing here as well and if I go in the
587:26 - share files model we are going to show
587:30 - success notification as well so success
587:34 - notification uh let's import this
587:39 - selected files have
587:43 - been shared to and the email address
587:48 - let's change this into back
587:55 - again form. email not sure if this form.
588:00 - email is available at this stage but
588:02 - let's try this red at example.com
588:07 - to now okay so let's get the email right
588:10 - here const email equals form.
588:18 - email share a paste submit okay so that
588:23 - seems like like that was shared however
588:26 - if we check in the database we don't see
588:27 - anything file shares that's
588:30 - because uh the bread at example.com
588:33 - doesn't exist in our database probably
588:36 - we should also change the message
588:38 - selected files will be
588:42 - shared to breed example.com if the
588:46 - email exists in the system
588:52 - like
588:56 - this good now do we have another user in
589:00 - the database no we don't have now let's
589:03 - try to
589:05 - create new
589:07 - account read
589:09 - it hold on what I'm
589:16 - doing where sign up
589:20 - come
589:30 - on
589:32 - red red at example.com
589:41 - let's
589:42 - open
589:44 - 1025 or it was 825
589:53 - okay now I am bred I bred in incognito
589:57 - mode and the email address actually
590:00 - exists now if I open non incog version
590:04 - and select this file and click on share
590:07 - I will provide bread example.com click
590:10 - on
590:11 - submit and we see the same message in
590:14 - the database file shares we see the file
590:18 - was shared to Brett
590:21 - this is awesome this is awesome so the
590:23 - record is there okay let's add a few
590:26 - improvements first of all if the file is
590:28 - already shared to specific user let's
590:32 - don't do
590:34 - this uh again so right here we are doing
590:38 - PCH
590:39 - insert well probably be before we do the
590:42 - PCH insert we should check if the file
590:45 - exists in the database or not so for
590:48 - Simplicity I'm just going to change the
590:50 - page insert
590:52 - into a select and
591:03 - insert obviously like u in the previous
591:06 - approach we can also achieve this we can
591:08 - select the file shares by the provided
591:12 - file IDs and the user ID and if that
591:16 - exists we we're going to skip that we
591:18 - simply don't um insert that second time
591:23 - in the
591:25 - database but uh I'm just going to do it
591:29 - very quickly right
591:31 - here uh file um we're going to call
591:36 - find well we actually have file we're
591:40 - going to
591:41 - do file
591:44 - Shear uh
591:47 - cury
591:49 - we well in you know what I don't like
591:52 - writing Qs in the
591:54 - loop uh I don't
591:58 - like just I want to hit myself on hands
592:02 - when I do
592:04 - this so what I prefer to do is
592:09 - to uh
592:12 - collect all the file
592:15 - IDs uh what I have here so I can use
592:19 - array collection
592:22 - um array Helper and I think I'm going to
592:25 - do plug provide files and ID I just want
592:29 - to get the
592:32 - IDS uh and if I remember correctly this
592:35 - will give me IDs let me actually test
592:38 - this so I select two files click on
592:40 - share
592:42 - um red at example.com
592:46 - okay here I got the IDS now I want to
592:51 - quy
592:53 - file
592:56 - shares quy well uh yeah F sh query we
593:01 - will provide we
593:07 - in file
593:10 - share we are in uh file ID in the
593:15 - given
593:17 - IDs and another we will be
593:21 - user
593:22 - ID is the given user
593:27 - ID so I'm selecting basically every file
593:30 - that
593:31 - is received to share to the user and I'm
593:35 - selecting if they are already shared to
593:39 - the given user okay this is the shared
593:42 - and I need to convert this
593:47 - into into a map or simply I can get
593:53 - the again plug on that
593:58 - maybe I want to get the file ID okay so
594:01 - this will finally give
594:04 - me
594:06 - existing existing file
594:09 - IDs this will finally give me the IDS if
594:12 - I receive 10 IDs to share you to the
594:15 - user existing file IDs finally will be
594:17 - those that are already shared to the
594:19 - user so that I'm sure I won't make uh
594:22 - record in the database second time okay
594:25 - and in this case I'm going to do a check
594:27 - if in Array so if file ID is already in
594:33 - the existing file ID's
594:36 - array plck in then I'm going to call
594:41 - get uh hold
594:43 - on then I will continue
594:47 - and continue and don't add this into the
594:51 - array okay so without this if just have
594:55 - a look so we have this file 2 six7 Shar
594:59 - to the bre user so I
595:02 - will click on submit
595:08 - again uh two few
595:11 - arguments to fun okay and do we need
595:17 - get key is missing
595:20 - okay let me check what
595:23 - is this existing yield
595:37 - IDs now this is actually giving me a
595:41 - nested um like an array of arrays which
595:44 - I don't want I just want a normal array
595:48 - so what I would do is
595:51 - I'm going to call Key
595:54 - by um first I'm going to call
595:58 - get and I think then I can call
596:01 - plaque um for file
596:04 - ID let's check what this will give
596:08 - me or I can do Key
596:13 - by Key by file ID and then inside the
596:17 - collection it will have this key
596:23 - let's actually check
596:26 - this existing file
596:31 - IDs for some specific key right let's
596:34 - check if there exists this
596:41 - key it
596:44 - exists okay so this is exactly what I
596:48 - wanted
596:50 - instead of in Array maybe we can call
596:52 - array key
596:55 - exists inside here and if it exists it's
596:58 - not going to make uh record second time
597:01 - if I comment this
597:03 - line then I click on submit in the
597:07 - database we are going to have this and
597:09 - this repeated okay I'm going to delete
597:12 - this now and uncomment this code and
597:15 - click on share and provide the email
597:20 - click on
597:22 - submit argument to array must be type of
597:25 - array collection
597:28 - given okay if it's a collection we
597:32 - can call a method has
597:36 - e right there file ID
597:55 - that was
597:58 - shared but no more records were made so
598:01 - if I select these two and click on share
598:03 - and provide bread at example.com click
598:07 - on submit nothing is added right here
598:10 - because those two files are already
598:11 - shared to bread if I add one new file
598:14 - and provide the email then one file will
598:17 - be added right here however if there's a
598:19 - new user and I will provide an email
598:21 - address for that new user the record
598:23 - will be created right here for that new
598:25 - user okay just like this we are doing um
598:28 - sharing the file now we need to send the
598:32 - email
598:33 - address so for this we should probably
598:35 - create a mail class PHP artisan
598:41 - make
598:43 - make how did I write make come on make
598:48 - mail um
598:50 - share files mail probably something like
598:55 - this share files mail so now let's
598:58 - search for share
599:00 - files mail PHP class here we have this
599:05 - envelope and
599:08 - content here we have the view name
599:12 - provided okay and let me put this to
599:16 - send
599:17 - mail to
599:20 - we need to provide the
599:25 - user send new sheare files mail and we
599:31 - are going to provide some data into
599:33 - sheare files
599:35 - mail let's try
599:37 - to make sheare
599:41 - again okay view name not found obviously
599:45 - that's what I always expected we have
599:47 - this view name here we need to go on
599:50 - under views and inside the blade views
599:54 - we're going to create mail
599:57 - folder and let's inside create new blade
600:00 - file and call this share- files. blade.
600:08 - PHP hello
600:11 - test now let's provide here
600:15 - mail.
600:17 - share- files
600:21 - let's do sharing
600:24 - again okay that has been shared if I go
600:27 - in mail pit we see hello test sheare
600:30 - files mail okay awesome so we have this
600:33 - blade file and we just need to render
600:37 - the files we are going to share to the
600:39 - user and some text as well right so
600:44 - let's create table because in most cases
600:47 - we write um Mals with with TDS to be
600:50 - compatible with uh everything including
600:56 - Outlook um so we have this table
601:00 - and first let's
601:03 - write hello and the name so here we
601:08 - need
601:10 - user
601:11 - name hello
601:15 - bread
601:18 - user uh in this case will be author
601:22 - another user user zura for
601:25 - example shared the following files to
601:31 - you and then we're going to have list of
601:34 - files so now let's use for each we have
601:39 - files as
601:46 - file and let's just output
601:50 - file
601:54 - name um what else do we need anything
602:02 - else I think we can skip anything else
602:06 - and we don't even need probably table we
602:09 - just need a paragraph
602:11 - maybe but we have to provide files
602:14 - author and user inside sheare files
602:18 - mail we need to to pass in the
602:20 - Constructor some identifier or some
602:23 - information if I go in the file
602:25 - controller I'm going to provide the user
602:29 - to which we are sharing
602:31 - something we can provide the current
602:33 - user as well out user and we can provide
602:39 - the
602:40 - files we are
602:44 - sharing okay good now let's accept those
602:48 - here public
602:52 - uh user public instance of the user is
602:57 - user public instance of the user is
603:01 - author and
603:03 - public uh we can't use an array notation
603:08 - here um it they are files simply
603:12 - files okay now these three variables
603:14 - should be available inside the view
603:16 - because those are public properties
603:19 - inside the class and lets to sharing
603:22 - once again R example.com
603:31 - return okay hello bread user Zur share
603:34 - the following files to you screen line
603:38 - blah blah and the
603:40 - folder uh we need some formatting
603:43 - obviously that should be
603:47 - paragraph it should be another paragraph
603:55 - and this is the file name and this is
603:58 - the folder
604:01 - name
604:02 - let's provide a prefix
604:09 - like if file is
604:12 - folder then we show
604:16 - folder else we show file
604:20 - let's do sharing once
604:24 - again
604:31 - oops hello bra user zura shared the
604:34 - following files
604:37 - to
604:38 - you file screen L folder screen L
604:43 - okay um we can also add a link to open
604:47 - to share it with me section but we
604:49 - haven't created this link yet let's put
604:54 - this in
604:57 - bold and this in Bol as
605:03 - well and let's put HR here okay so we
605:06 - have implemented email sending and now
605:09 - the main thing is to display those
605:12 - shared files under shared with me or
605:14 - shared by me section so for this first
605:18 - open file
605:20 - controller let's remove this
605:23 - too and shared with
605:27 - me now let me
605:32 - copy let me copy
605:35 - um maybe trash I think I need to copy
605:40 - trash paste here okay instead of only
605:44 - trashed we need Q we want to select non-
605:47 - Tred items
605:51 - uh this is shared with me so created by
605:55 - we is not
605:56 - relevant we need to join
606:00 - files into file
606:05 - sheares okay we
606:07 - file
606:09 - shares. file
606:11 - ID equals to files
606:15 - ID inside where we're going to put file
606:18 - sheares user ID is the currently
606:22 - authorized user ID okay so we want to
606:24 - see files that are shared with me
606:28 - through these file
606:30 - shares a single file can be shared to
606:33 - single user only once so this will not
606:36 - duplicate the records we're going to
606:38 - order by
606:40 - folder uh and we're going to order by uh
606:44 - not deleted it but
606:46 - created Created it
606:49 - or
606:51 - maybe maybe we just need to order by
606:55 - file file
606:57 - sheares created at
607:01 - descending and I want to also use order
607:06 - by uh files ID descending because
607:10 - remember we had this problem
607:15 - earlier this order by files ID by the
607:18 - way needs to be probably added into
607:21 - trash method as
607:23 - well so if two files are deleted at the
607:26 - very same time if many files are deleted
607:28 - at the very same time then the
607:30 - pagination might not work properly so we
607:32 - need this order by ID as
607:38 - well um okay so we want to accept
607:41 - request because if we are trying to load
607:44 - more then this is still
607:47 - relevant and instead of TR
607:50 - crash we want shared with
607:55 - me and we will provide
608:00 - files okay while we are here let me
608:04 - create shared by me as
608:07 - well shared by
608:10 - me we still join to file shares because
608:13 - the file needs to be
608:15 - shared but inside we we add file
608:20 - created by is the currently authorized
608:23 - user so I want all the files that are
608:25 - shared to someone
608:27 - else but the author of the file is me
608:31 - obviously only author should be able to
608:34 - share the
608:37 - file okay and maybe in
608:41 - Sharing uh right here we also need to
608:47 - check if the file
608:50 - the uh user is trying to
608:54 - share belongs to the current user and I
608:57 - think this is done in the uh share files
609:00 - request in the files exchange request
609:03 - more specifically so we have the
609:06 - IDS and
609:08 - all and each ID uh we check that the um
609:13 - ID belongs to the currently the the
609:17 - author of that file so this is the
609:19 - security done um is done on that side
609:22 - okay go back to the file
609:26 - controller uh scroll down
609:28 - below shared by me uh that is good I
609:32 - think we only need to change the view
609:34 - shared by me okay and now let's go into
609:39 - JS
609:41 - pages and let me copy and paste trash
609:45 - and call these
609:46 - shared with me
609:51 - okay and before I do any
609:56 - change
609:57 - um I want to remove
610:02 - this I want to see the result
610:05 - immediately so we have sharing but we
610:08 - don't have
610:09 - Pages
610:11 - get shared um shared with
610:16 - me shared with me
610:22 - and shared by
610:30 - me now let's open
610:35 - navigation and
610:38 - provide Road
610:45 - here files shared with
610:51 - me and that's going to be
610:53 - files shared by
610:56 - me let's add
611:00 - also active
611:05 - indicator if the URL is files maybe we
611:10 - can just remove this
611:13 - files shared with me and shared by me
611:19 - I would love in inertia to be
611:21 - possibility to get the current page Uh
611:26 - current road name but unfortunately
611:28 - there is no direct possibility for that
611:31 - that's why I have to compare it by URL
611:33 - which which is something not
611:36 - ideal uh shared with
611:39 - me and shared by
611:44 - me okay now we have all that let's check
611:50 - my files
611:54 - broken files shared with me is not in
611:57 - the road list let's open
612:02 - web it is not
612:06 - files it is
612:13 - file shared with me no data in this
612:17 - folder
612:20 - there's an error in shared by
612:22 - me in order
612:26 - close order by file create it yeah here
612:31 - D is
612:34 - missing shared shared by me
612:40 - created Created
612:46 - it okay there's n
612:49 - uh shared by me that doesn't exist okay
612:51 - shared by me doesn't exist but why I
612:54 - don't see anything in the shared with me
612:56 - I have this file
613:00 - shared ah because uh this file is shared
613:04 - by me not shared with me if I open now
613:07 - my incognito
613:08 - mode shared with me should show
613:11 - something to me okay here I have another
613:16 - error uh fixed
613:23 - it save reload shared by
613:33 - me um shared with
613:38 - me okay created
613:47 - it okay here I see something interesting
613:50 - so those are files that are shared with
613:54 - me someone shared that file to me and I
613:57 - probably need a download button
613:59 - obviously I shouldn't be able to delete
614:01 - anything but I should be able to
614:04 - download
614:06 - those uh files if I if that file is
614:11 - shared to me okay so let's first
614:14 - Implement shared by me as well
614:19 - maybe I can use the exact same uh
614:23 - view let me try shared with
614:27 - me shared by me is empty however if I
614:31 - open zoraa user shared by Me shows those
614:35 - files uh double click doesn't do
614:37 - anything that's good well if I Shar
614:40 - something to someone else that someone
614:42 - else should be able to download at least
614:46 - right so we need to show download button
614:50 - I'm going to open my
614:53 - files copy download button go
614:59 - into shared with
615:01 - me and paste it
615:05 - here okay this is shared with me if I
615:08 - select
615:09 - something and click on
615:13 - download uh let's have a look download
615:15 - files
615:17 - button okay uh um we don't there's no
615:20 - folder at the moment page props folder
615:23 - ID okay if I search for this inside the
615:27 - download there is no folder if there's
615:30 - no folder that's fine we can pass the
615:33 - parent ID to be now or we can use a
615:35 - question mark here if the folder doesn't
615:38 - exist that will be passed as now so
615:40 - let's save this and
615:41 - reload click on download now there is
615:44 - another error that error comes from the
615:48 - back end
615:49 - uh the selected parent ID is invalid
615:51 - what is the parent ID
615:53 - undefined okay so we don't we should not
615:56 - even send parent
616:00 - ID uh if it is undefined so we only send
616:04 - it if it
616:07 - exists select and click on download now
616:11 - let's have a
616:13 - look now we have this problem selected
616:15 - IDs uh zero is invalid and that's 100
616:18 - person
616:19 - correct because if we check
616:24 - now
616:26 - action
616:28 - download or simply download
616:31 - method uh this uses the files action
616:36 - request and we have IDs here and each
616:39 - ID um must exist in the files table and
616:44 - the current user currently authorized
616:47 - user must be the owner of that file okay
616:52 - so this is the Restriction how we have
616:54 - implemented at the moment and we should
616:57 - probably change this
617:01 - okay uh let me think what's going to be
617:04 - the um easiest way to change
617:08 - that so I'm going to write a left
617:13 - join um we have a we
617:19 - and we have a Cy okay so what I'm going
617:21 - to do I'm going to write a
617:23 - lift
617:25 - join uh can we add The annotation that
617:29 - the uh
617:33 - quary actually it should be a variable
617:36 - query is um query
617:42 - builder left join uh file shares
617:49 - file
617:51 - shears file ID equals to files ID so we
617:56 - do the
617:58 - shear and then I'm going to
618:03 - write a
618:09 - we uh again I'm going to accept cury
618:14 - here a to
618:20 - uh the created by we can provide here
618:23 - files files. created by should be the
618:26 - currently authorized users or
618:30 - we file
618:33 - shares. user
618:35 - ID is
618:39 - the um out
618:42 - out out ID
618:49 - so let me double check so uh the ID must
618:52 - exist in the files and we had an extra
618:55 - we so we left join this into file
618:59 - shares left join because uh we don't use
619:02 - inner join because um if the file is not
619:06 - shared to anyone but is owned by me when
619:09 - you do an inner join uh the file will
619:12 - not be
619:13 - selected so we do the left join and then
619:17 - we do where the file created by needs to
619:19 - be the currently authorized user
619:23 - or from the file shares user ID needs to
619:26 - be currently authorized user in this
619:28 - case it should be able to download let
619:30 - me now check this I'm going to click on
619:33 - download let try it doesn't seem to be
619:36 - working we have an error file
619:39 - shares unknown column file shares in
619:43 - okay what's going to what's the
619:46 - Q select count as aggreg from files S
619:56 - ID we ID okay so we should probably do a
620:00 - left
620:02 - join here if it
620:05 - supports if it
620:07 - supports we should do it
620:11 - there uh let's try it
620:20 - it does not
620:24 - support um okay does it support
620:27 - something
620:29 - like uh Cy or join
620:40 - or okay what does it
620:46 - support when is
620:54 - well in this case we just need to write
620:57 - a custom validation
621:02 - rule like we
621:04 - did
621:08 - um where we did that store folder
621:12 - request was
621:14 - that no store file request yeah I think
621:19 - this is this is how we how we're going
621:21 - to do
621:23 - that okay let's open files action
621:28 - request and I'm going to leave the old
621:30 - rule that ID must
621:34 - exist and then we're going to have
621:37 - additional uh function
621:40 - here it must be a function attribute
621:43 - value and fail so we get these three
621:47 - values there
621:56 - and the value will be an array right so
622:00 - let's
622:03 - just uh value well we can call this
622:16 - IDs uh let's TR
622:19 - try
622:23 - download four okay so we have this IDs
622:27 - uh is is it an array or just
622:34 - a it is it is a single value if I
622:39 - provide now we
622:43 - have so it looks like this is called
622:46 - multiple times for each ID
622:49 - fine so we are going to
622:52 - do
622:54 - file
622:59 - quy then we
623:01 - do left
623:07 - join and
623:10 - then we do this
623:16 - we file left joint file shares where the
623:20 - files created by is the current user or
623:23 - file shares user ID is the current
623:27 - user that should return
623:31 - something
623:33 - file and then we check if file
623:39 - exists if file doesn't exist then we
623:42 - call
623:43 - fail
623:45 - and we can use the value
623:49 - or
623:51 - just show some sort of
623:55 - error
623:57 - invalid
624:00 - ID and that should be ID not IDs but
624:06 - ID uh I think we is
624:09 - [Music]
624:14 - missing where ID is the ID so I'm just
624:18 - selecting one
624:20 - file invalid
624:31 - ID now let's test this
624:37 - download okay the file is invalid still
624:40 - get this
624:41 - error it must exist in the files ID so
624:45 - it
624:46 - exists it will will definitely
625:03 - exist okay what is inside parent
625:10 - rules okay there's also parent
625:16 - ID but this is not the reason why it is
625:20 - failing ID is at zero okay let me remove
625:24 - the rules
625:31 - exist attempt to read properties folder
625:34 - or n
625:50 - okay so here's the problem the
625:55 - download these
625:58 - download it's very hard to use this
626:01 - download for both for my files
626:03 - and um shared with me files now it
626:08 - expects pent ID here
626:12 - because uh because if you are in my
626:15 - files there definitely exists parent ID
626:18 - if if you are downloading everything
626:21 - from my
626:23 - files
626:26 - um
626:28 - you you need you you definitely have a
626:31 - pent and you need the P because you need
626:33 - to select every child of the parent okay
626:35 - so we need to do it slightly differently
626:38 - it's not going to work um in the way we
626:42 - had that implemented so we either need a
626:46 - separate method or a big modific ations
626:48 - in the download modifying an existing
626:51 - function will be definitely tricky thing
626:54 - uh so I'm going to create tricky and
626:56 - even maybe not good idea and even not
626:59 - possible uh well it's going to be
627:01 - probably possible but we're we are not
627:04 - going to have a good solution so I'm
627:05 - going to copy this
627:08 - download and create new one download um
627:15 - shared
627:18 - okay so here we don't have pint at all
627:21 - so we can remove this
627:23 - pint we are not going to have all flag
627:27 - as well well we can technically have all
627:31 - but all simply means download all
627:37 - shared and when we are trying to
627:40 - download all
627:43 - shared um it means that yeah we also
627:47 - need a
627:49 - differentiation um shared with me or
627:52 - shared by me so let's do like this
627:56 - download shared with
627:58 - me so when this is
628:01 - all obviously if all it doesn't exist
628:04 - and uh if I this is empty please select
628:07 - files download okay good if we select
628:10 - all then we need to select the
628:15 - files okay so files will be
628:19 - all files that are shared with me
628:22 - without pagination so we have this
628:25 - shared with mury without pagination and
628:29 - we are going
628:32 - to um we're going to just get this Q I
628:35 - don't want the Q duplication so I will
628:38 - go in the
628:39 - file and
628:42 - create get shared with
628:46 - me so I will get
628:49 - this get
628:52 - shared it should be
628:55 - static
628:57 - static get shared with
629:02 - me okay return file quy and we are
629:07 - returning this so we are good now I am
629:12 - going to
629:14 - do let me actually do this for shared by
629:17 - me as well as
629:22 - well get shared by me it should be
629:31 - static return
629:35 - file
629:40 - cury okay get shared by me
629:46 - perfect and if all selected then I'm
629:48 - going to call file get shared with me
629:53 - call get I want to get
629:56 - everything and then I'm going to pass
629:59 - files
630:01 - here which will create the uh ZIP and
630:05 - the URL to zip and the file name should
630:10 - be something like
630:12 - shared with me zip
630:18 - okay if the IDS exist then
630:23 - we then we find by ID each
630:28 - file and
630:31 - create if it is a folder
630:35 - actually so if it is only one if it is a
630:38 - folder I think this
630:42 - logic well if only one is selected
630:48 - or even if multiple files are
630:51 - selected this logic stays the same the
630:55 - only difference
630:58 - is the file name right
631:03 - here if more than one file is selected
631:05 - we're going to give it a name right
631:09 - inside shared with me so that should be
631:12 - shared with
631:15 - me okay again I don't really like code
631:20 - duplication so what if I extract this
631:26 - part of
631:29 - code um can I do
631:34 - that and what what should this return it
631:37 - should return URL and file name okay so
631:42 - I'm going to use list or maybe I can use
631:44 - this notation as well URL and file name
631:49 - equals
631:51 - this um get download
631:57 - URL okay this get download URL doesn't
632:00 - exist so let's create private function
632:02 - get download URL let's paste this here
632:07 - okay what information is missing so we
632:09 - need IDs which must be an
632:14 - array okay good what else and and we
632:18 - need the zip
632:21 - name so I'm going to remove this and
632:25 - call zip
632:30 - name we are going to
632:33 - return URL and file
632:37 - name let's accept
632:40 - here zip
632:43 - name and from get download URL we're
632:46 - going to pass IDs
632:48 - and I'm going to pass zip name which
632:51 - will be
632:53 - shared with me I can actually create
632:58 - separate variable for that zip
633:05 - name like this and I can use that zip
633:09 - name here as
633:13 - well so now my download shared with me
633:16 - gets very small
633:18 - so I get all and IDs and if it's all
633:22 - then I get every every shared with me
633:25 - file and create zip out of that if there
633:28 - are specific IDs then I get download URL
633:32 - um for that IDs we have the code dupc
633:36 - code duplication which is fine so I will
633:39 - find the second piece of code
633:42 - this uh which is from the download
633:44 - method and I will replace it so we're
633:47 - we're going to have URL and file
633:52 - name this get
633:54 - download download URL we provide IDs and
633:58 - we provide parent
634:01 - name now we don't have code
634:06 - duplication and I like
634:11 - that now in the same
634:15 - way I can create
634:23 - in the same way I can create shared by
634:25 - me but let's first test this shared with
634:29 - me download shared with me uh I need uh
634:34 - root to
634:35 - Define so we have Download
634:41 - Here download
634:43 - shared with me
634:51 - okay and if I go in the download files
634:56 - pattern uh this pattern is the same for
634:59 - my files for shared with me and for
635:02 - shared by me so either we need to create
635:06 - a separate
635:09 - component uh or we need
635:13 - to pass some property here that this is
635:17 - for my files or this is for shared with
635:20 - me or this is for shared by
635:28 - me okay let's try to accept
635:32 - prop uh shared with me equals false and
635:38 - shared by me equals
635:42 - false
635:44 - so
635:46 - before the detecting the
635:49 - URL let URL equals
635:54 - this
635:56 - if props
635:58 - shared with me is
636:01 - true then URL will
636:06 - become download shared with
636:12 - me else
636:15 - if props Shar
636:18 - by
636:20 - me is true then the URL becomes
636:25 - shared by
636:28 - me and then we make the request and the
636:31 - rest of the thing is the same now let's
636:33 - go in the Shar with me I select the file
636:36 - I click on download first let's check
636:39 - the URL it's still accesses the
636:46 - download because I don't pass shared
636:48 - with me if I go in
636:50 - the shared with
636:54 - me I'm going to pass shared with me to
636:58 - be
637:03 - true click download okay now we it makes
637:07 - correct
637:09 - request is folder on
637:14 - now this happens on file controller 4
637:20 - 432 line
637:27 - 432
637:38 - file okay so we accepted the ID and we
637:41 - just want to download that but that was
637:43 - not found
637:53 - okay so I need to dump IDs in
637:58 - file just to test
638:02 - this we have the IDS and
638:06 - file okay if we check
638:11 - files we don't do we have
638:15 - id4 we don't have
638:21 - id4 okay why is there
638:28 - id4 I think I know I go in the file
638:33 - controller and select shared with
638:37 - me this is
638:39 - it uh we are joining to file
638:42 - shares and in the select we are
638:45 - selecting everything from file files as
638:48 - well as everything from file shares and
638:51 - the ID for is the ID from file sheares
638:56 - this one not ID from files so we need to
639:00 - add select here everything from files we
639:04 - don't want to select obviously file
639:06 - shares let's add this selecting shared
639:09 - by me as well now if I reload select and
639:12 - download we see different ID here and we
639:16 - see a file select
639:19 - Ed now let's remove this
639:25 - Tamp okay now download worked let me
639:29 - click on Save and let's open here we see
639:33 - the file so I was able to actually
639:38 - download shared with me
639:42 - file okay I'm going to click on this
639:46 - and no let me open non incognit version
639:49 - for Zora go into my files and I want to
639:52 - get just one
639:55 - ID um like
639:58 - 255 okay I want to hardcode this ID in
640:04 - download files
640:08 - button here we are
640:10 - passing so I'm going to put right there
640:13 - this ID
640:15 - 255 okay and and now I'm going to open
640:19 - bread and I go in shared with me select
640:23 - and click on
640:25 - download okay what id was
640:29 - passed
640:33 - 255 is this file
640:38 - shared no file 255 is not
640:43 - shared okay then why was that file
640:48 - selected and why the download triggered
640:50 - okay we have some security
640:53 - thing uh when open file actions
640:58 - request
640:59 - actually we made big modifications here
641:02 - which I'm going to undo everything
641:04 - because that was uh for download so
641:08 - let's undo it
641:20 - how was
641:21 - it
641:23 - okay this is where local history
641:27 - is amazing
641:57 - this is it how it was
642:02 - before okay now it doesn't
642:10 - work okay selected as
642:13 - invalid this is good this is good uh no
642:17 - this is not good this is not good
642:23 - because now it doesn't allow me to
642:28 - download shared with me
642:32 - file okay this is not good
642:56 - okay let's try
643:00 - this file not
643:03 - found
643:06 - import
643:09 - file okay download works it should work
643:18 - okay it should
643:20 - work however no it should not work
643:23 - because we have this hardcoded
643:26 - 255 okay and
643:29 - I yeah and this
643:32 - 255
643:34 - um is not
643:37 - shared I think I have this kit or first
643:43 - this is the problem
643:50 - okay this is
644:02 - good Integrity constr viation column ID
644:05 - and we CL ambigous
644:08 - okay we are files ID in quals
644:14 - ID click on download and now we have
644:17 - this validation rule what I was
644:19 - expecting for so long so I have this
644:21 - invalid ID
644:23 - 255 okay because right now we have
644:26 - hardcoded um ID on which I don't have
644:28 - access uh and I'm trying to download I
644:31 - will always get this message okay
644:33 - obviously from the user interface you
644:35 - won't be able to uh trigger download if
644:39 - you don't manipulate the console and
644:41 - things like that but the main thing is
644:43 - that we are secured on the back end so
644:46 - I'm going to click on download both of
644:48 - them and it's not going to work now
644:51 - let's go on the download files button
644:53 - I'm going to just revert the change and
644:56 - now I will select both and click on
644:58 - download and this is downloaded with
645:00 - shared with me click
645:03 - okay that was
645:08 - opened one file
645:11 - and another
645:14 - file just like this we have
645:18 - download functionality in shared with me
645:20 - section we don't have anything
645:23 - else if I select all and click download
645:26 - it's going to trigger download and we
645:29 - have screen line inside there with all
645:32 - the files
645:34 - awesome that works fine if I go in
645:37 - shared by me now that's the that's the
645:39 - thing the remaining thing uh and I'm
645:42 - going to open now Zora's page shared by
645:45 - me
645:47 - and if I select and click download um
645:50 - it's not going to work because it is
645:53 - making a request on
645:59 - download uh and we have this internal
646:01 - server
646:03 - error well it it can make request to
646:07 - download however um it's not going to
646:10 - work because uh in file controller we
646:13 - probably wait for parent let's open this
646:16 - file controller
646:21 - 189 file
646:24 - controller
646:27 - 189
646:29 - 809 yeah appearing the appearing doesn't
646:32 - exist
646:34 - so it should make request
646:38 - into shared by
646:41 - me how should we do that
646:47 - well I think we should
646:50 - create
646:52 - separate view we have a bunch of kind of
646:56 - duplicated views at the moment shared
646:59 - with me shared by me and we have these
647:04 - uh trash in my files all of them are
647:06 - very similar the selecting
647:09 - functionality is there as well it can be
647:13 - combined it can be
647:15 - combined but for now I will just create
647:20 - shared by
647:25 - me and inside shared by me I will pass
647:30 - this shared by me to be
647:34 - true and inside
647:37 - the file
647:43 - controller I will change this view name
647:47 - into shared by
647:48 - me so I will save
647:52 - that and I'm in shared by me click on
647:55 - file and click on
647:57 - download okay there was an error shared
648:00 - by me is not in the list okay let's open
648:05 - web.php
648:07 - duplicate this download
648:11 - shared bu me
648:18 - select and click on download we have
648:21 - internal server
648:25 - error download shared by me doesn't
648:27 - exist okay download shared with me that
648:31 - exists so let's duplicate
648:40 - it
648:42 - shared by me
648:47 - okay the zip name will be shared by
648:50 - me and the actual content will be
648:55 - shared by
648:59 - me if everything is
649:03 - selected okay awesome and the file ID is
649:06 - what is passed right here we're we're
649:08 - just blindly selecting the file uh and
649:11 - don't uh just consider if that file
649:14 - belongs to the current user or if that
649:16 - file is shared to the current user but
649:19 - this is done inside the
649:21 - request okay if I open this action file
649:24 - action request we check that the file
649:27 - must exist and that ID must be either
649:31 - created by me or must be shared by
649:34 - me and
649:37 - that gives the permission to the user
649:40 - that whenever ID comes right here we are
649:42 - sure that that ID the current user has
649:46 - per mission to that ID to
649:50 - download awesome now let's test
649:53 - download and here it works so this is
649:56 - shared by me that was downloaded and
649:59 - let's select everything and the zip is
650:03 - called shared by me I open that and we
650:06 - see all the
650:12 - files
650:14 - okay we have trash
650:17 - we have shared by me we have shared with
650:20 - me and we have my
650:23 - files now let's start working on
650:26 - searching for files so we have this
650:29 - search bar from the very beginning but
650:31 - we haven't implemented that yet so we
650:36 - are going to implement the search for
650:38 - only the content for only the page the
650:41 - user has opened at the moment so I have
650:43 - the idea that maybe when I type
650:46 - something it's starts searching
650:48 - everywhere like inside shared with
650:51 - me inside trash as well shared by me
650:55 - shared by me obviously is the same as my
650:57 - files but I decided finally to have a
651:00 - separate search Fields um for every page
651:05 - so when I search for something like 16
651:08 - right here and hit the enter it's going
651:09 - to filter inside my files obviously it's
651:12 - going to search for recursively as well
651:14 - inside folders if I want to find
651:17 - file which has 16 inside the file name I
651:20 - would go in the shared with me and type
651:22 - 16 right here and in the same way if I
651:25 - want to search for a file inside a trash
651:28 - I will go in the trash and type 16 right
651:30 - here hit the enter and it's going to
651:31 - find those files from the trash okay so
651:34 - this is the idea how I am going to
651:36 - do let's go in the default
651:43 - layout or how it's called authenticated
651:49 - layout
651:55 - and where is the search
652:07 - bar I don't remember where's the search
652:10 - bar so let me search
652:12 - for search for
652:17 - it is a search
652:20 - form but where is that used inside the
652:23 - authenticated layout I couldn't find
652:26 - that for some reason okay so here's the
652:28 - search
652:31 - form now let's listen to key up
652:37 - enter and call method
652:44 - search uh do we have V model here we
652:47 - have form
652:50 - search we don't actually need form in
652:53 - this case uh because what I'm going to
652:55 - do is just the change the url and put
653:00 - the um search cury parameter right there
653:03 - and then the rest of the thing will be
653:05 - handled by inertia so what I need to do
653:08 - just Define const search equals
653:14 - rev import ref
653:18 - and we will just
653:21 - provide um search V model
653:24 - here and because I named this
653:28 - search the method should be on
653:35 - search so on search I will get the
653:38 - search. value and I'm going to
653:41 - do like a
653:44 - rotor doget
653:47 - let's use window
653:49 - location uh path name and then append
653:54 - the search
653:58 - parameter um
654:02 - however this is what I'm going to do I'm
654:04 - going to show this to you uh but this is
654:06 - not ideal and I will explain
654:11 - why
654:13 - equals plus search value
654:16 - okay I type test hit the
654:23 - enter uh
654:26 - search do
654:32 - value
654:34 - okay
654:38 - let's
654:43 - check uh I know the reason so we need to
654:46 - to
654:49 - call
654:51 - prevent
654:56 - prevent test hit the
655:00 - enter let me change this form into div
655:04 - because because this is a form it
655:06 - triggers the standard
655:08 - submit let's type test in the enter okay
655:13 - now we see that
655:17 - now imagine the case
655:20 - that we have only favs filtered okay
655:23 - let's do like this only favor filtered
655:26 - and now I want to search inside only
655:28 - favor so I would type test hit the enter
655:31 - and those only fav wordss get lost okay
655:34 - this is not what I want so I would do
655:36 - the following const params equals new
655:40 - URL search param I'm going to pass
655:42 - window location search and then inside
655:47 - params I'm going to set
655:50 - search equals
655:52 - search. value and
655:57 - then then I'm going to
656:01 - pass uh here plus uh params to
656:07 - string now if I go on homepage then
656:11 - filter only favorites and then type test
656:13 - I have both favorites and test in the
656:16 - URL okay now we need to open file um
656:21 - file controller but before I make some
656:24 - changes in the file controller uh when I
656:27 - reload the page I want test to be
656:29 - written here as well so I will
656:34 - create this param
656:39 - variable um inside the component not
656:42 - inside the function let me make it empty
656:45 - string then then on
656:51 - mounted on mounted I will populate
656:57 - that and I'm going to set
657:01 - search search. value equals arms get
657:10 - search now if I reload the page I will
657:13 - see test right here if I just change
657:15 - something in URL like uh zura hit the
657:18 - enter we see Zur right here okay now
657:21 - let's go in the back end and let's start
657:23 - with my files I'm going to get the
657:31 - search request
657:35 - get
657:39 - search okay so whenever I search
657:42 - something in
657:44 - the um
657:46 - in the search field I want to find any
657:49 - file that matches the search
657:52 - criteria uh by name so I don't care
657:56 - about whether it must be the child of
657:59 - the current folder or not so this is
658:01 - something we need to
658:03 - forget so right here we have this pent
658:07 - ID so that we are sure that we are going
658:10 - to only cury um which has the parent ID
658:14 - this but this is something I
658:16 - am going to remove so I'm going to
658:20 - remove it and if search is
658:24 - provided then um I need to do the search
658:29 - in L's case I will provide
658:32 - that uh P ID filter okay now let's focus
658:36 - on the
658:39 - search uh I'm going to call
658:42 - where uh name
658:51 - like and we need to provide the
658:55 - percentage and then the
658:59 - search
659:01 - okay let me
659:04 - dump
659:08 - search and have a look so here we see
659:11 - the search criteria and if I reload the
659:13 - page I see only one and what is this I
659:17 - think this is root obviously we need to
659:20 - exclude
659:22 - root and we can exclude
659:24 - root um in
659:27 - a always in any case we uh there should
659:32 - be some kind of root flag
659:36 - or left is
659:39 - one indicates that this is a
659:44 - root we _
659:48 - lft uh does not equal to
659:53 - one reload the page we see empty okay
659:56 - let me remove the search and we see
659:58 - everything okay uh as you see we have
660:00 - only scre
660:03 - ey scre ey okay we have only scre ey
660:06 - files I'm going to upload Now new
660:10 - folder
660:13 - e-commerce upload we have the Ecommerce
660:16 - products inside there we have this MX
660:18 - Masters 3 and keyboard and we have
660:21 - headset and Dell XPS and chair okay
660:24 - fantastic now I'm going to search for
660:26 - Dell hit the enter okay now I see Dell
660:30 - awesome now let's search for um
660:34 - keyboard okay I see keyboard right here
660:38 - okay so the filtering looks like working
660:41 - let me
660:42 - upload entire
660:46 - entire pictures if it's not too
660:51 - much okay 59 files are being
660:55 - uploaded pictures and we have many
660:59 - things right
661:01 - here okay if I search for keyboard now
661:05 - let's have a look so we have multiple
661:06 - keyboards and we also
661:09 - need parameter the path where the
661:11 - keyboard is located so I will go in my
661:15 - files
661:20 - and I will create this path
661:22 - column how however however I will only
661:25 - display it whenever search criteria
661:30 - exists okay so let's give it
661:38 - path then we have
661:41 - here file path
661:46 - now this is displayed always but I'm
661:48 - going to hide it based on the search
661:50 - criteria if it's not available I'm going
661:51 - to hide it okay so let's go in
661:58 - the refs or uses or even just create uh
662:02 - con search No it should be let search
662:07 - equals an empty string then um we'll go
662:10 - in
662:12 - unmounted we have the params
662:16 - I'm going to remove this console loog
662:18 - and we have search equals harams
662:23 - doget search pay attention that right
662:27 - now I just Define the search without ref
662:31 - okay because I Define without ref I can
662:33 - directly assign it whenever I Define
662:35 - with ref I need to assign it with DOT
662:38 - value and I think I can use this search
662:41 - steel right here so okay if search
662:46 - [Music]
662:48 - and where if
662:50 - search okay now I don't see path if I
662:54 - search for keyboard hit the
662:59 - enter
663:01 - um okay now unmounted didn't
663:04 - happen
663:06 - um something was changed the URL was
663:11 - changed okay I need to listen to search
663:16 - the search happens from here so I want
663:19 - to
663:20 - use event pass or
663:25 - emiter dot emit let's open
663:30 - Emer let's create new
663:34 - constant on
663:43 - search search
663:47 - okay now I'm going to emit on
663:50 - search and I'm going to pass also
663:53 - search.
663:56 - value let's import the
664:00 - amiter okay aome now I'll go in my
664:05 - files and on
664:09 - mounted I will listen
664:11 - to uh
664:13 - emiter do on
664:19 - on
664:21 - search I will get
664:24 - the um value of the search
664:27 - value and then search equals
664:31 - value okay so this is not necessary
664:35 - anymore let me no this is actually this
664:39 - is also necessary so when you reload the
664:41 - page then you need this as well but you
664:44 - need to listen on ser as well so let me
664:46 - import this on search I think this looks
664:49 - good now if I just reload the page
664:52 - unmounted
664:54 - happens but the parms
664:58 - get
665:01 - okay um let's just
665:03 - print
665:11 - search search looks
665:16 - hold
665:17 - on search is there okay that is
665:21 - probably let me check if this
665:24 - search is
665:27 - available in the component it is
665:30 - available if I just reload no it is not
665:36 - available why it is not
665:41 - available okay I'm going to make this
665:43 - riff
665:45 - um I will avoid such problems an empty
665:50 - string scroll down below search.
665:55 - value equals this and search. value
665:58 - equals value so I save I reload the page
666:01 - and now I see keyboard every
666:05 - time let's remove this okay whenever I
666:09 - have something searched and I will
666:11 - open this I will see the path the
666:15 - location
666:16 - where it actually lives and if I change
666:19 - the search keyword call like Max hit the
666:24 - enter then this path stays here and if I
666:27 - delete that hit the enter then this path
666:30 - disappears because uh simply search
666:32 - doesn't exist now I search for keyboard
666:36 - again hit the enter and I see
666:40 - path obviously if I zoom out slightly
666:47 - then this works
666:51 - perfectly okay so this is this is
666:55 - implemented and now we can
666:57 - go into shared by me and implement the
667:00 - same thing right here and shared with me
667:02 - and trash so that's going to be pretty
667:04 - pretty
667:05 - straightforward I will open file
667:10 - controller uh okay just like I did
667:13 - inside my files
667:18 - uh I need to listen to emiter No Maybe I
667:22 - don't even listen don't need to listen
667:24 - to emitor because in shared with me
667:27 - shared by me in trash we always show
667:30 - path okay so it is not necessary to
667:34 - listen to emiter the only thing we need
667:37 - to change is the back end so here we
667:40 - have these my files now let's check
667:42 - trash
667:46 - uh this pagate needs to be called
667:51 - later um files
667:55 - equals cury
667:58 - Agate and I'm going to call this
668:03 - cury and I'm going to get the
668:08 - search request
668:12 - get search
668:17 - okay and if search
668:20 - exists then
668:24 - y we
668:27 - name
668:32 - like
668:36 - search here we go this is trash let me
668:40 - delete
668:41 - now what should I delete let me go in
668:44 - the pictures
668:45 - and delete Z example.com
668:49 - zip go in the trash and I'm going to
668:52 - search for
668:54 - zura uh okay I see everything because
668:57 - every file has Zur right there okay
668:59 - example hit the enter okay now I see
669:02 - only only
669:04 - that okay this is awesome so
669:08 - the that that that's all for our trash
669:11 - we don't need to do anything
669:13 - else and I will move the other
669:18 - methods like shared with me and shared
669:21 - by me Methods at the top so that we have
669:24 - the methods which return the data at the
669:26 - very
669:27 - top this create zip those
669:31 - are
669:33 - all like functional methods not
669:36 - returning data okay here we have this
669:38 - shared with me and shared by me so let's
669:41 - move these two methods at the top
669:50 - here now let's get the search
669:56 - parameter here let's get it here as well
670:02 - and let's copy this
670:05 - search we are close as
670:10 - well now shared with me okay so let's
670:12 - call this Cy
670:17 - files equal quer
670:23 - paginate and if search exists in the
670:26 - quer we add this
670:29 - search so I copy
670:32 - this and put
670:34 - this here as
670:37 - well that should
670:39 - become
670:41 - cury and files
670:45 - equal your paginate and this needs to
670:49 - obviously go after the search we is
670:55 - added now let's test this shared with me
670:58 - and shared by me inside shared by me
671:01 - let's search
671:02 - for screen light hit the enter it leaves
671:06 - only one let's search
671:08 - for this number hit the enter it only
671:11 - finds one and let's open second window
671:15 - window inside which I am logged in with
671:17 - a different user and I have shared with
671:19 - me and when I paste this number hit the
671:21 - enter and this is shared with me okay
671:24 - and do we have any
671:28 - Earths resource CH event pass doesn't
671:33 - exist on
671:35 - search event bus doesn't
671:39 - provide hold on
671:47 - maybe that is a different error like the
671:49 - error from the old
671:51 - version okay just like this as easy as
671:55 - that we have that implementation okay
671:57 - one thing whenever I search for
671:59 - something like again uh I will go in my
672:03 - zoraa account and search for keyboard so
672:08 - the menu is not highlighted anymore
672:10 - because we have this full URL detection
672:14 - activated so let's open navigation and
672:17 - see if there is possibility
672:21 - to fix that if there is like easy way to
672:25 - fix
672:27 - that okay so we have props error
672:32 - out okay props are
672:36 - out we have CSR token and we
672:40 - have Z key which has URL P defaults RS
672:44 - through those are all the roads we have
672:49 - registered we have
672:55 - files folder and stour and URL the URL
672:58 - is full URL I'm curious in one thing if
673:03 - I
673:06 - open
673:07 - um how it's
673:12 - called up HTTP middle
673:16 - we handle inertial
673:19 - request okay and I will provide right
673:22 - here roadcore name I'm just curious if I
673:26 - get the current
673:29 - road um how to get the current road I
673:32 - forgot LEL get
673:36 - current road name
673:54 - let's import this
673:58 - road uh it should be
674:01 - facade okay Road name I save
674:05 - this and now let's search for Road name
674:09 - here we see Road
674:11 - name okay that's that's good now if I go
674:16 - in the
674:18 - trash what's going to be the road
674:20 - name rad name will be
674:23 - trash so what we can do now is go to the
674:26 - navigation instead of page
674:29 - URL we are going to use
674:33 - page props wrot
674:35 - name so let me change this
674:38 - into
674:41 - props rcore name
674:46 - and obviously we need to change this
674:47 - into name so that's going to be my
674:54 - files um let's get this it's going to be
674:59 - file shared with
675:01 - me it will be shared by
675:05 - me and it's going to be simply
675:08 - trash so let's remove the
675:11 - page oh we are in trash no I in my files
675:15 - if I select only favorites the menu item
675:17 - still gets activated okay previously
675:19 - that was lost and if I search for
675:21 - something like keyboard obviously I
675:24 - don't see anything but the menu item is
675:26 - active I remove only favorites and I see
675:29 - uh keyboard this is awesome so we have
675:33 - now implemented this functionality as
675:34 - well I search for example and the menu
675:38 - item is still
675:42 - active now I want to connect my laral
675:45 - file storage application into awss 3
675:50 - you're probably familiar what is awss 3
675:52 - it is the biggest um Cloud uh file
675:56 - storage service provided by Amazon okay
676:00 - so we're going to first register on AWS
676:03 - so we're going to open AWS console you
676:06 - can just type in the Google AWS console
676:08 - and the very first link will give you
676:10 - the console link but you need to be
676:13 - logged in in order to be able to access
676:15 - the console obviously so we need to
676:17 - create an account so click create an AWS
676:21 - account right here you have to provide
676:23 - your root user email address and your
676:26 - account name then you will verify your
676:29 - email address and then you need to
676:31 - follow the registration steps there are
676:33 - multiple Pages uh make sure you provide
676:37 - them you have uh free trial for certain
676:40 - products however this requires you to
676:43 - provide credit card information um and
676:47 - make sure your credit card is also
676:49 - working it will take just a nominal
676:51 - amount one dollar whatever $1 or one
676:55 - Euro and then it will obviously return
676:58 - it back but whenever you're using the
677:00 - paid services or whenever you will start
677:03 - using more than what is offered by free
677:07 - then it will start uh charging uh from
677:09 - your credit card but it will not charge
677:12 - from your credit card if you don't don't
677:15 - use those paid services this is
677:17 - important okay so don't be afraid to
677:19 - entering your credit card information on
677:22 - AWS so the biggest uh Cloud um hosting
677:26 - service provider okay so I am already
677:31 - registered and logged in um in my AWS so
677:35 - instead of just going in the
677:37 - registration steps I'm going to go and
677:40 - try to log in
677:45 - at this stage you have to provide your
677:47 - root user you are not I am user so you
677:50 - are root user so I'm going to provide my
677:56 - email I have two Factor authentication
677:59 - enabled as well so I'm going to provide
678:01 - my two Factor authentication code
678:06 - here and now I am in AWS console okay so
678:11 - what do we need to do so the idea is the
678:13 - following we need to create S3 bucket S3
678:18 - bucket will be the container where we
678:20 - will put our files our File Manager
678:23 - application will be connected to that
678:25 - specific S3 packet and whatever files
678:28 - are are uploaded right here they will be
678:30 - uploaded on the S3 packet we configure
678:33 - okay uh the next thing is to get the API
678:38 - credentials from
678:41 - AWS uh console okay so we want want to
678:45 - put those uh credentials secret and
678:48 - access token in our laral application in
678:51 - order laral to be able to
678:54 - communicate uh to AWS services and in
678:58 - this case to S3 service to upload files
679:01 - right there okay let's start with these
679:03 - steps and I'm going to go in the S3 so
679:05 - you can search all your services right
679:07 - here actually I'm going to type
679:09 - S3 right here and here's the service we
679:12 - can click on that I already have several
679:15 - buckets but I'm going to create a new
679:19 - bucket right here so let's click create
679:21 - bucket and I'm going to call this file-
679:26 - manager you can choose the AWS region in
679:29 - which you want the backet to be created
679:31 - I'm going to leave this into
679:32 - London um okay in terms of ownership I'm
679:36 - going to leave them as it is right now
679:38 - uh but we're going to do uh the
679:41 - ownership we are not going to actually
679:43 - do the ownership but we're going to
679:44 - create a new I user um and only that
679:48 - user will be able to uh communicate with
679:50 - the
679:50 - S3 entire S3 service okay so I'm going
679:54 - to click this create
679:57 - bucket did I miss
680:00 - anything okay it already exists let's
680:03 - call this
680:05 - laravel I literally have like a few okay
680:09 - so one important thing make sure that
680:12 - the bucket name is unique so the bucket
680:14 - name needs to be unique not only for
680:16 - your account but it should be unique for
680:19 - the
680:20 - entire uh S3 service across the world
680:25 - okay so that's the Restriction because
680:27 - those bucket names are used in multiple
680:29 - places so we're going to name it
680:30 - something different like larel larel
680:34 - manager the code hold it you can name it
680:37 - whatever you want it's it's just a name
680:39 - which is not visible to um anywhere you
680:42 - can even give it some random text like a
680:45 - file manager um some random text okay
680:48 - that's going to be also fine but let me
680:50 - call this laral manager the code
680:53 - holic uh sorry file manager the code
680:56 - holic let's click on create
681:00 - backet okay so the backet was created
681:03 - now we're going to create policy and
681:05 - then we're going to create user and
681:07 - assign the policy to that user so I'm
681:09 - going to go in the IM section from where
681:13 - we can actually manage policy and users
681:15 - and groups so I'm going to go in the
681:19 - policies and just like I already have
681:22 - this laravel file manager policy I'm
681:25 - going to create something similar so I'm
681:27 - going to click create policy the other
681:29 - one was created for um testing
681:32 - purposes okay so we can provide some
681:36 - policy configuration through the visual
681:39 - editor or through the Json if we switch
681:41 - to the Json we need to put
681:45 - um we we can actually configure this
681:47 - Json right here and provide the services
681:50 - so actually we are looking for S3
681:52 - service if we search for S3 we can click
681:55 - on that and we can tick all the actions
681:59 - so by ticking this all the actions I am
682:03 - allowing whoever whichever user or
682:07 - whichever group will have that policy
682:09 - assigned they will be able to
682:12 - communicate to the S3 service with
682:14 - without any limits okay so they will be
682:16 - able to connect to any backhead delete
682:20 - file from any backhead and so on so
682:23 - while you're doing this make sure you
682:25 - know actually what you are doing and
682:27 - make sure you really want this okay
682:31 - considering that you have brand new AWS
682:35 - environment then you okay to do this but
682:38 - if you have other projects on your S3
682:41 - you should not probably give uh
682:44 - particular APA credentials access to
682:48 - every uh your S3 packet okay I hope this
682:52 - makes sense okay so then let me actually
682:55 - remove
682:56 - this and I'm going to search
682:59 - for S3 again and we can see what other
683:03 - options we have so here we can have a
683:05 - look at the individual access level
683:08 - permissions like list access list access
683:11 - points for object Lambda list all my
683:13 - buckets and so so on obviously we can
683:16 - have a look at this and choose only the
683:19 - um permissions we might need in our
683:22 - application but again this going to take
683:24 - um a lot of time to choose exactly what
683:28 - we need and to be honest I don't even
683:30 - know all the permissions what they are
683:33 - doing internally like for example I
683:35 - don't know what is delete storage lens
683:39 - configuration okay so in this case I'm
683:41 - going to choose just everything
683:45 - right
683:46 - here um and
683:51 - let let's have a
683:54 - look uh okay where is this is
683:57 - three all actions to scroll down
684:01 - probably and click
684:07 - next why is it not chosen right
684:11 - here okay it was eded
684:17 - ah I think we need to click
684:23 - add hold
684:28 - on next doesn't seem to be
684:34 - working no I don't want it to be removed
684:39 - I want next okay let me click add
684:41 - resource here and choose
684:46 - we can specify bucket name right here
684:48 - specific bucket name as well uh in our
684:51 - case that's going to
684:53 - be
684:54 - file-
684:57 - manager- the code
685:03 - hoic okay so using this approach we have
685:06 - specified that I'm giving all
685:08 - permissions to that policy but only to
685:12 - that specific packet but I have a
685:15 - question why it doesn't allow me to
685:17 - click next now it does now it does okay
685:20 - so I do have that configured file
685:23 - manager the code holic that's going to
685:25 - be the bucket name on which I'm giving
685:27 - the following permissions to this policy
685:30 - and I'm going to click create policy
685:31 - let's provide the name file
685:35 - manager uh the code Hol
685:40 - policy oops
685:45 - okay let's click create policy file
685:48 - manager the code hoic policy was created
685:51 - awesome now let's go in the user section
685:54 - and I already have this lateral file
685:55 - manager which I created for testing
685:57 - purposes I'm going to click um new Ed
686:00 - users and I'm going to call this file
686:04 - manager the code
686:11 - holic okay provide user access to AWS
686:13 - management console okay so this is
686:16 - optional you can turn this on if you
686:17 - want this user to be able to log in in
686:20 - this um in this
686:23 - interface I don't want that so I'm going
686:25 - to click next then permission groups add
686:27 - user to group okay attach policy
686:30 - directly so I want to directly attach
686:32 - the policy and the policy I have created
686:34 - is the code toic so file manager the
686:37 - code toic this is the policy I'm going
686:38 - to click on
686:40 - next then what else do we have so
686:45 - we're going to click this create
686:47 - user okay so now we have this user uh
686:51 - file manager the code holic and I'm
686:53 - going to click on this user and I want
686:56 - to get the security credentials for that
686:58 - user because that security credentials
687:01 - is the credentials we are going to put
687:04 - in our Lal application to be able to
687:07 - upload or download files from S3 so I'm
687:10 - going to click this create access
687:12 - scheme and where we're going to choose
687:14 - the use case so in our case we
687:19 - want application running no this is not
687:22 - we want third party
687:26 - service we can even choose this
687:28 - application running outside
687:30 - AWS
687:34 - okay okay right here it gives us this
687:36 - alternative recommended warning but I'm
687:39 - going to um I understand that and I'm
687:42 - going to just Skip and the description
687:45 - will be uh
687:47 - for okay
687:50 - space okay for um file
687:55 - manager the code
687:58 - holic create access key okay I have just
688:01 - created the access key and this is the
688:03 - access key and this is the secret key so
688:05 - I'm going to get this access key and now
688:08 - let's open the project
688:18 - let's go in the
688:25 - en okay here we see this AWS access key
688:29 - ID and I'm going to paste my access key
688:32 - here and we have this secret I'm going
688:35 - to copy that and put this right here so
688:37 - make sure you don't show your secret to
688:41 - anyone I'm going to actually delete
688:43 - these access key and secret key after I
688:46 - finish the recording so you won't be
688:48 - able to do anything with this um access
688:51 - key and uh secret key okay so we have to
688:54 - provide the region and the bucket name
688:58 - region in my case is the London so
689:03 - EU
689:04 - West 2 and the bucket is file manager
689:10 - the code
689:12 - holic so I'm going to save that that but
689:14 - before I start
689:16 - using um and modify my code to upload to
689:20 - S3 I'm going to test if my credentials
689:22 - are actually correct and if I am able to
689:26 - upload files to S3 so for this I'm going
689:29 - to use AWS CLI uh but before I go that
689:33 - let me open
689:35 - the
689:37 - bucket here is the file manager the code
689:40 - holic I'm going to click on the bucket
689:42 - now I'm inside the bucket and everything
689:44 - is empty let me zoom out slightly okay
689:46 - so there are no files now let me search
689:50 - for
689:52 - AWS CLI Ubuntu I'm searching this Ubuntu
689:57 - because we are running our application
689:59 - in um wsl2 with Ubuntu so we can
690:02 - actually uh install this inside wsl2
690:08 - Ubuntu okay so let's click this Linux
690:11 - and let me collapse
690:14 - those we don't need and let's follow the
690:17 - steps so we're going to get this and
690:21 - then run install Okay so this is
690:24 - the the very basic thing and then it is
690:28 - explained right
690:35 - here okay so let's
690:38 - do let's get
690:41 - this and now let me open ubun 2
690:47 - so here is the Ubuntu I'm going to paste
690:51 - this and it already started
690:54 - downloading let's have a look so it's
690:57 - take it will take some
691:00 - time that was downloaded and let's hit
691:04 - the
691:06 - enter okay so it tells me that there
691:08 - already exists this AWS rmy um and I
691:12 - actually already have that inst
691:14 - if I want to replace or whatever I want
691:17 - to do I'm going to click replace yes hit
691:21 - the
691:22 - enter I'm going to click yes right here
691:24 - and it will ask me this for all so I'm
691:27 - going to choose
691:31 - all okay now let's check
691:35 - AWS okay so we have this command we can
691:39 - provide some option test version and
691:42 - here we have that install so by
691:44 - following these instructions you will be
691:47 - able to install AWS CLI and now it's
691:50 - time to connect to uh our backet and
691:54 - actually um upload some file through the
691:57 - CLI to make sure that our credentials
691:59 - are working so for this I'm going to
692:00 - search for um AWS CLI uh upload to
692:07 - S3 and let's open the very first link
692:14 - I want to we can list buckets and
692:18 - objects as
692:19 - well we can try AWS S3 LS okay whenever
692:24 - we do this probably it will give us an
692:26 - error because we need to also configure
692:29 - the APA credentials the
692:31 - AWS uh command will use so in my case I
692:34 - already have that configured and I'm
692:36 - going to show you how you can do this in
692:39 - the home directory there is this AWS
692:41 - folder and inside there there will be
692:44 - the credentials
692:47 - file uh what's going on com
692:51 - found oops I need to open this so I'm
692:54 - going to type uh cut okay hit the enter
692:57 - so here are the API credentials so this
693:00 - is probably different from what I have
693:03 - generated and inserted in my project
693:06 - okay different from this one because
693:08 - this is the old one I was testing but
693:10 - the idea is the following so you create
693:12 - this aw folder inside there you create
693:15 - credentials and then uh using the
693:18 - following text you define your um access
693:22 - key and your secret
693:24 - key okay and whenever you do this let me
693:26 - actually take those two values and I'm
693:29 - going to open this using
693:32 - Nano okay then let's put this right
693:38 - here
693:40 - uh let's put this here and the other
693:48 - one we need to put right here okay so
693:53 - I'm going to save this and exit from
693:55 - here uh in order to save an exit from
693:58 - Nano you just need to hit control and O
694:01 - hit the enter Then control and X will
694:03 - exit from there and now if I open these
694:05 - credentials we will see that now we have
694:07 - the credentials which we have also in
694:09 - our application okay so now let's run
694:12 - AWS Comm
694:14 - AWS um LS for
694:17 - example and this will give us probably
694:19 - all the services but we want AWS S3
694:24 - LS S3
694:28 - LS okay so it looks like we don't have
694:35 - access okay now let's provide AWS um S3
694:39 - LS in the uh packet name so file
694:44 - manager the code holic yeah we don't
694:48 - have permission because when we created
694:51 - the policy we provided that that policy
694:54 - is only for uh file manager the code
694:57 - holic packet okay now let's have a look
695:00 - there's nothing actually okay so it
695:02 - didn't return anything but if I go in
695:04 - the file manager uh in this uh S3 and if
695:09 - I just create one folder probably call
695:11 - let's call this test
695:15 - here we see that and now let's check if
695:18 - this returns anything here we see that
695:20 - it returned test so the connection
695:22 - through the API tokens actually work
695:26 - successfully we can even try to upload
695:28 - files and uploading file is very very
695:31 - easy let's see what files we have we
695:33 - have the sample TT which we can easily
695:36 - upload so what um we need to do is just
695:41 - to run probably copy Comm
695:44 - sample text needs to be uploaded into
695:48 - file manager the code holic colum I
695:54 - think to sample text I'm going to
695:56 - remember this but let's have a look now
696:00 - let's search for CP command source and
696:03 - Target so we have an
696:06 - example S3 bucket name this is it so the
696:11 - local file needs to be uploaded on S
696:13 - three bucket name so we will provide
696:16 - right
696:17 - here
696:19 - S3 in the bucket name let's hit the
696:23 - enter okay so we have access
696:28 - denied okay that probably indicates that
696:30 - we either have the uh error in the
696:34 - policy configuration or we just didn't
696:36 - provide the
696:39 - correct bucket
696:42 - name let's have a
696:44 - look if you just provide incorrect
696:47 - bucket name it will give you another
696:51 - error no such bucket I
696:54 - see but in this case this tells us that
696:57 - we don't
697:00 - have enough
697:03 - permission one calling put object
697:05 - operation let's hit the
697:08 - enter okay so we don't have the policy
697:11 - configured correctly so I will go in the
697:14 - policy section again I um like the this
697:18 - doesn't cover all the detailed
697:20 - configuration of AWS and um what is
697:23 - possible right here through policies and
697:24 - eems so I will make it simpler and I
697:27 - will go in the policy and I will just
697:30 - simply remove the
697:34 - service the resource if I click on
697:38 - this here we have this
697:44 - file manager the code holic file name
697:48 - okay let me edit
697:51 - this and I will simply remove the
698:03 - resource okay so I B I'm basically
698:05 - giving the all the actions on S3 not to
698:09 - any specific resource let's click on
698:12 - next it does not look
698:14 - like is allowing that to me but now I'm
698:18 - going to
698:20 - add
698:24 - S3 packet no S3 all
698:29 - resources here we see all the resources
698:33 - okay now let's click
698:34 - next and save changes okay I just
698:38 - updated the policy and the user for
698:41 - which we have this access key and secret
698:43 - ke taken is already using that
698:47 - policy isn't
698:50 - it file manager the code did we assign
698:53 - the policy to the
698:55 - user here's the policy yes yes we did
699:00 - okay now if I try to upload this file
699:05 - again that worked as you see and if I go
699:09 - in the S3
699:13 - uh file manager the code hoic we will
699:15 - see sample TT right here which was
699:18 - uploaded through this um comment okay if
699:22 - I just make um an incorrect if I just
699:24 - open the credentials and make some
699:28 - changes here or here then I won't be
699:30 - able to do that so now we are sure that
699:32 - we have security credentials which
699:34 - connect successfully to file manager the
699:36 - code holic S3 packet and is able to
699:39 - upload files right there now it's time
699:42 - to modify our code so that instead of
699:45 - saving files on a local file system it
699:48 - actually uploads them on the S3 packet
699:52 - okay so I have deleted the folder and
699:54 - the file from this S3 packet and now
699:56 - let's Implement uploading files to S3
699:59 - packet actually from our application I'm
700:01 - going to open the documentation and show
700:03 - you one thing if we go in the storage
700:08 - section file storage section so here you
700:12 - will find out that we have possibility
700:14 - the LEL has possibility to actually use
700:17 - multiple different types of storage uh
700:20 - providers for example we have these AWS
700:23 - compatible file systems um if we scroll
700:28 - up where's that let me actually find the
700:31 - proper place so we have this public uh
700:33 - the local driver we have the public
700:35 - driver
700:41 - and I think this is in the
700:45 - configuration here it is driver
700:48 - prerequisites okay so in order us to be
700:51 - able to connect to awsn upload files
700:53 - through the standard um laravel um
700:57 - approach we need to install the
700:59 - following package uh fly system awss 3
701:03 - version 3 okay so this is what we are
701:06 - going to install so I'm going to copy
701:08 - this
701:09 - command and open the project
701:13 - let me go inside the container vendor
701:16 - Bean sale
701:19 - bash and then I'm going to execute the
701:22 - following common composer require
701:25 - whatever let's wait until this downloads
701:29 - and installs meanwhile let's have a look
701:31 - in the documentation again so here we
701:34 - have many different driver configuration
701:37 - options like FTP we can connect to FTP
701:41 - we can connect to SFTP
701:44 - and uh we can even configure the readon
701:48 - and scoped file systems okay but in all
701:51 - cases you have to separately install uh
701:54 - additional composer packages in order to
701:56 - be able to adapt this and use it like
702:00 - this okay so what we are going to do and
702:04 - you then you can um just get the disk
702:06 - and call put for U specific disk what
702:10 - you going to configure I'm going to also
702:11 - show you what this are already
702:14 - configured uh this is still is yeah this
702:17 - is finished it was installed let's go in
702:20 - the project and in the config and in
702:25 - where's that file system okay so the
702:28 - default is actually what is written
702:30 - inside the en file so if I open en file
702:34 - and search for this file system disk it
702:36 - tells me that the default is local if
702:39 - this is not available then the default
702:41 - will be local but in any case okay what
702:44 - we're going to do is the change that the
702:46 - default needs to be S three y S3 and not
702:49 - for example AWS S3 because S3 is already
702:54 - preconfigured dis right here look at
702:57 - this so it has discs and inside there we
703:00 - have the those configured local public
703:03 - and S3 and that S3 is actually using
703:07 - correct AWS credentials fromen file so
703:12 - I'm going to set this in to S3 save that
703:15 - and then let's have a look again AWS
703:17 - access uh key ID we have that configured
703:20 - we have this secret we have this
703:24 - region we have this bucket as well and
703:28 - there are others like AWS URL and
703:30 - endpoint which in our case don't need
703:35 - okay okay perfect so now we have
703:37 - configured our Lal application so and we
703:41 - also change the default disk into S3
703:44 - because we changed
703:46 - this uh right here so whenever now we
703:50 - call the default methods on the um file
703:55 - storage the storage facade it's going
703:58 - actually use the default dis which will
704:01 - be as three in our case okay now let me
704:05 - tell you the whole idea what I'm going
704:07 - to do uploading of files on in our
704:11 - application will consist into two steps
704:14 - first obviously the files needs to be
704:17 - uploaded into uh the Local web server
704:21 - where Lal application will be running
704:24 - and then those files needs to be
704:26 - uploaded into awss 3 as well by the way
704:30 - just to give you a little bit more
704:32 - information there are there is
704:35 - possibility to directly upload files
704:38 - from your browser to AWS but in this
704:41 - case you need different approach you
704:44 - need to generate
704:46 - pre-shared uh private key and not the
704:48 - key but the pre-shared private URL that
704:51 - URL will contain a secret token inside
704:54 - there and then through that URL the
704:57 - JavaScript AWS JavaScript SDK will be
705:00 - able to upload files directly to
705:04 - S3 that's that is a like a very big
705:07 - change in our application so I don't
705:10 - want to go with that approach
705:13 - at at least right now and in this case
705:15 - we are going to Simply upload the files
705:17 - to our web server just like we were
705:19 - doing this earlier but I will create a
705:23 - background job which will take those
705:26 - files and upload them into
705:29 - S3 okay and I will also need a flag on
705:34 - the database level if I check the
705:36 - database and the files inside the files
705:39 - for each file I want to add that flag
705:43 - which will Mark if that specific file is
705:46 - already uploaded on
705:49 - S3 um or not uploaded on yeah Cloud I
705:53 - will call this a more generic name not
705:55 - upload on S3 but uploaded on Cloud for
705:58 - example because you can configure the
706:00 - FTP or Dropbox if you want and just try
706:04 - to
706:05 - upload files through on Dropbox or FTP
706:09 - whatever okay now I'm going to create
706:11 - the migration PHP artisan
706:19 - make uh
706:23 - migration let's give it Name
706:27 - ID um uploaded on cloud column to files
706:37 - table okay let's open
706:46 - and on the table I'm going to call
706:50 - Boolean uploaded on
706:54 - cloud this will have default to be one
706:59 - let's mark every existing file let's say
707:01 - that all of them are already uploaded
707:08 - on actually default should be let me
707:11 - think let me think
707:14 - yeah default can be whatever because in
707:16 - any case we're going to set this manual
707:17 - so I'm going to leave this default to be
707:19 - one then after I'm going to want to I'm
707:24 - going to add this after for example size
707:27 - so let's provide size
707:32 - here and then let's Implement down as
707:37 - well that will be drop column upload it
707:40 - on cloud
707:44 - just like this now let's apply PHP
707:46 - Artisan migrate hit the enter okay the
707:49 - column was added we can open the
707:53 - database uh after size we see uploaded
707:56 - on cloud every file was marked as one
707:58 - which means that they it seems like they
708:00 - are already uploaded but now I'm going
708:02 - to create a background job okay and I
708:05 - also want to change the uploading
708:08 - process um
708:10 - slightly um okay let me do like this I'm
708:14 - going to uh open file
708:21 - controller um I'm going to find the
708:24 - method
708:25 - called save file not save file tree but
708:30 - save
708:33 - file and right here when we call store
708:36 - this uploads the file into default disk
708:41 - okay in our case we can provide the
708:44 - second argument which will Define uh the
708:47 - another disk if we if we don't want the
708:49 - default dis to be used for uploading
708:51 - this file in our case Now the default
708:54 - dis is is S3 okay whenever the file is
708:58 - uploaded I don't want it to be
708:59 - immediately uploaded in S3 because this
709:02 - will take this might take um several
709:06 - seconds mean it's depending on the file
709:08 - size uploading file on this three so
709:11 - what I want
709:13 - is that upload this file locally so I
709:17 - will provide the disk to be local
709:20 - because we already have this local
709:22 - configured so I'm still uploading this
709:24 - on local and then uh let me also Mark
709:29 - this
709:31 - uploaded on S um uploaded on cloud this
709:35 - is what we called to be
709:39 - zero okay and then right here here I
709:43 - want to start the
709:44 - background start background job for file
709:50 - upload okay and then I will start the
709:53 - background job which will upload this
709:54 - file to S3 okay why I am doing this
709:58 - again if the file is too large uploading
710:01 - that file to S3 will take several
710:03 - seconds several minutes depending on the
710:05 - file size and we don't want user to just
710:08 - sit and wait until the file is uploaded
710:10 - on S 3 to start interacting with the
710:14 - file or with the entire File Manager
710:17 - application okay so I'm quickly
710:19 - uploading the file on local file system
710:22 - telling the user that hey your file has
710:24 - been uploaded and you can start interact
710:27 - interaction with that user but that file
710:30 - will be marked uploading on cloud false
710:32 - and why do I need this whenever user
710:35 - wants to download that file I know that
710:38 - this file does not yet exist on S3 so if
710:42 - you want to download it I need to run a
710:44 - different logic okay but if the file is
710:47 - upload on S3 and user wants to download
710:50 - or for example user wants to download it
710:52 - as a zip I will download that file from
710:55 - S3 into local disk create the zip and
710:59 - then download that zip to the user okay
711:02 - so this is the approach I am going to
711:05 - do and now let me create this um job
711:10 - file so I'm going to call this let's
711:13 - open PHP artisan make job let's call
711:18 - this upload file to Cloud
711:24 - job upload file to Cloud
711:29 - job okay so that was created
711:32 - successfully let's go into upload file
711:35 - to Cloud job and and what I'm going to
711:40 - do is that
711:42 - let's let me actually already use that
711:45 - uh right here upload a file to Cloud job
711:50 - I'm going to call dispatch on that and
711:52 - pass the argument in our case the
711:54 - argument will be
711:55 - model okay so I want to uh accept this
711:59 - model inside the Constructor so I will
712:03 - create this public property um or it
712:07 - should be actually protected let me
712:09 - actually create
712:11 - protected uh we can do something like
712:14 - this
712:18 - protected
712:22 - file let's import this needs to be
712:27 - model okay now we have this file
712:30 - available here and inside the handle
712:33 - which is the main method we need to run
712:36 - the following
712:37 - logic okay
712:39 - so um let me think
712:43 - okay I'm going to create a model
712:49 - variable this
712:52 - file then I'm going to check if the
712:54 - model is not uploaded in
712:58 - S3 on upload on
713:01 - cloud if not then we run the logic if it
713:05 - is already uploaded on cloud there's
713:07 - nothing we need to do for that specific
713:11 - file okay but let me actually get the
713:15 - local path so I need the local path that
713:18 - will be a
713:20 - storage
713:22 - disk
713:24 - local and we provide path
713:27 - here that will
713:30 - be a model storage path okay so every
713:34 - model has a storage path even though if
713:37 - that file might not be uploaded on S3 on
713:40 - cloud it will still have this storage
713:42 - path so I will get this model
713:46 - storage path here I'm going to call UPS
713:50 - the right side so I get the local path
713:53 - okay um also I'm going to write logs
713:56 - just to make sure that my script is
713:58 - working so I will use um where is log
714:02 - facade and let's write some debugs for
714:05 - example um uploading file on
714:11 - S3 and and let's provide local paths so
714:14 - this is the file I'm uploading on
714:17 - S3 and then inside the TR catch um I'm
714:20 - going to actually do the upload inside
714:23 - TR catch because uh there might be cases
714:26 - when uh connection doesn't work or
714:29 - something is broken and I don't want
714:31 - this error uh to be unhandled so that's
714:35 - why I'm properly handling
714:37 - this storage put whenever you call put
714:42 - put on storage uh you know that it's
714:44 - going to use the default dis the default
714:47 - dis is S3 so I just need to provide the
714:50 - path in my case that's going to be model
714:53 - uh storage path but I need to provide
714:57 - also the
714:59 - local uh file path okay so I will use
715:06 - storage uh
715:10 - dis uh local
715:15 - and then I'm going to call get so I'm
715:16 - actually getting the entire file through
715:19 - this storage disk
715:22 - local and then um I'm going to upload
715:26 - it to a three storage path okay so here
715:32 - is one restriction which I came across
715:35 - from this
715:37 - AWS um PHP
715:41 - SDK if the file is large when you call
715:44 - get on that it
715:46 - starts to stream this file okay and
715:51 - while streaming there is um the
715:55 - incompatibility problem in this uh SDK
715:59 - and it doesn't work on the latest PHP
716:01 - versions like in my case it is 8. 8.2
716:05 - okay we're going to probably see this
716:07 - error if we try to upload large file but
716:09 - let's follow this okay storage put I
716:12 - want to put the file on the following
716:14 - location in the S3 then I get the file
716:18 - from local perfect uh
716:22 - let's let's assign it into a success
716:25 - variable and if it is
716:28 - uploaded let's write log
716:33 - debug um
716:36 - uploaded uh
716:38 - updating the
716:40 - database and on model I will set
716:44 - uploaded on cloud to be one and I will
716:48 - call
716:49 - model
716:52 - save if it is not
716:55 - successfully run then I will write uh
717:00 - error unable to upload files to
717:06 - S3 okay and in the catch uh instead of
717:10 - throw I'm going to do
717:13 - log
717:15 - error exception get
717:21 - message
717:24 - okay those log files can be seen in the
717:29 - storage logs L
717:32 - log which I want to make it
717:34 - empty save that and now I think we have
717:39 - everything to test this so so I'm going
717:42 - to open my
717:43 - application and upload one file I will
717:46 - upload small file in this case let's go
717:49 - in the
717:51 - pictures and I'm going to just choose
717:54 - one picture click
717:56 - open the file has been uploaded okay
717:59 - perfect in the logs look at this
718:01 - uploading file on S3 we see the file
718:05 - path and uploaded updating the database
718:08 - okay there's nothing to check in the
718:09 - database actually if that works then we
718:12 - go right here and refresh it and we see
718:16 - files inside there we see the user ID
718:19 - inside there we see the actual file okay
718:23 - that is so awesome in the
718:26 - database if we check the very first file
718:30 - created um created at
718:34 - descending this is the very first one um
718:38 - which has uploaded on S3
718:42 - one by default this is one by the
718:46 - way um but yeah we see that file is
718:49 - actually right here
718:51 - okay okay so this is perfect now let me
718:54 - show you the error I was talking about
718:56 - if I try to upload large file I will go
718:59 - in the videos and choose this one for
719:02 - example I think it's large
719:04 - enough here we see the error okay de
719:06 - clearing of AWS hashing stream seek must
719:10 - be compatible with PSR whatever whatever
719:13 - okay this comes from the following
719:17 - problem that this is the interface which
719:21 - was mod which was moved to the latest
719:23 - PHP standards and it is using the typed
719:27 - typed properties right here int offset
719:30 - and int W but the actual AWS hashing
719:34 - stream implementation this one uh still
719:38 - is using the old approach offset and w
719:43 - and not sure when will they fix
719:47 - this uh I want to show this on gab as
719:50 - well I spend quite a lot of time on this
719:57 - problem um
720:00 - LEL uh give me a
720:02 - second
720:04 - AWS SDK
720:09 - PHP uh Gab
720:18 - and the file must be somewhere here here
720:22 - it is Hing
720:24 - stream let's have a look hold
720:30 - on okay and this method
720:34 - has seek right here okay and that seek
720:38 - doesn't have types right here I know
720:41 - it's not a b big deal um we can even
720:44 - Fork this particular repository and make
720:48 - it
720:49 - compatible uh and just uh modify a few
720:52 - things and then install this repository
720:56 - from our version this is all possible
720:59 - but this is probably a topic of
721:01 - different
721:02 - video um so far the small files are
721:05 - being successfully uploaded to S3 and
721:10 - the larger files uh are not working as
721:13 - smooth or are not completely actually
721:19 - working um the link which I
721:23 - found um is this one and they are
721:26 - talking about this problem all the time
721:28 - and recently like 5 days ago uh they
721:33 - have the following fix now sure if this
721:36 - works I was facing the same issue
721:38 - although all my computer Pages were up
721:40 - to date uh okay what HTTP message
721:44 - version do we have installed maybe if we
721:46 - downgrade our HTTP version that's going
721:49 - to start working if we go in the
721:52 - composer Json uh we don't have prob HT
721:55 - Mage here inside composer
721:57 - lock HTTP
722:09 - message we have 2 point zero HTP message
722:13 - installed okay if I go in the composer
722:17 - Json and
722:21 - install this PSR HTTP
722:25 - message uh to be something above
722:30 - 1.0 okay not
722:32 - 2.0 and then execute composer install
722:37 - compo or composer update it should be
722:39 - composer update or I can execute
722:41 - composer
722:43 - require require PSR HTTP message above
722:53 - 1.0 okay it is downgrading to 1.1 from
723:03 - 2.0 okay it has been downgraded
723:06 - successfully now if I open application
723:10 - maybe that stream interface was changed
723:13 - before I execute this I want to check
723:18 - it PSR HD message vendor that's it and
723:22 - it has the sck
723:26 - method no it's still has the
723:30 - following it it still has the
723:35 - types does it still have this okay I'm
723:39 - going to delete this HD message
723:41 - completely from the vendor and then I'm
723:44 - going to execute this once
723:50 - again HTTP message Source stream
723:55 - interface right now it's still has this
723:58 - one point uh sorry uh the in and type so
724:01 - the types are still there so it probably
724:05 - will not work we can try upload files by
724:08 - the way this still is installation
724:10 - process
724:14 - okay good let's choose Now
724:16 - video that already exists well the point
724:20 - is that that was actually uploaded to
724:24 - the local file system and in fact we see
724:28 - this file right here and we can even
724:31 - download this file um no we
724:34 - cannot we cannot because we have not
724:37 - modified download if we modify the
724:40 - download properly this file is saved on
724:42 - a local file system and it can be
724:45 - downloaded from local file system which
724:46 - we're going to do right now but let me
724:48 - try to upload another file
724:57 - meanwhile it is
725:10 - thinking was it is there something
725:13 - failed which is in pending for quite
725:16 - some
725:21 - time let's
725:24 - open
725:29 - storage so those are
725:33 - the okay did it
725:39 - work I think it worked
725:43 - but okay
725:45 - um let's check here we see this MP4 okay
725:49 - so it looks like it worked now let's try
725:53 - larger file this one
726:13 - while this is an uploading process let
726:15 - me check what's the status of that file
726:17 - in the
726:18 - database uploaded on cloud
726:23 - is
726:25 - zero so probably something is working
726:28 - behind because this is in uploading and
726:31 - now that was uploaded and if I just
726:32 - reload I see one right here okay so it
726:35 - seems like downgrading this HTP message
726:38 - into 1 point something fixes the problem
726:41 - I'm going to try this once again for a
726:43 - larger file but now the problem is that
726:48 - the file upload is not actually um a
726:52 - synchronous okay so when we call this
726:57 - attach or uh dispatch excuse me so that
727:02 - should be a synchronous that should be
727:04 - in the background right now the request
727:07 - is pending and it doesn't finish user
727:10 - doesn't see a success message uh but the
727:13 - file is in uploading process it looks
727:16 - like if I check this right
727:21 - here we see two large files the other
727:24 - one which was which was already
727:30 - uploaded here it is that was actually
727:33 - also uploaded okay now we're going to
727:36 - make this a dispatch to run in the
727:40 - background
727:42 - and then we are good to
727:45 - go first let's open this upload file to
727:48 - cloud and we have this
727:51 - dispatchable interacts with Q Cable in
727:54 - serializes modules okay this looks like
727:56 - we have correctly
728:00 - configured okay so if we have a look in
728:03 - the en file uh right here we have this Q
728:07 - connection okay by default this um job
728:10 - is connected to to the que and then it
728:13 - is simply running from the que the que
728:16 - connection is set into sync if we want
728:19 - this to be run in the background then we
728:23 - have to change this because the sync
728:24 - actually means that this script needs to
728:27 - be
728:29 - finished in order the response to be
728:32 - sent to the browser okay so we need to
728:36 - change this into something like
728:39 - database okay
728:43 - this will indicate that a lot of
728:45 - application needs to use database for
728:47 - the Q management but to be able to use
728:50 - that we need to uh create the proper
728:53 - database table as well so we're going to
728:55 - execute the commment called PHP Artisan
728:59 - Q table hit the enter migration created
729:04 - successfully and we can check in the
729:07 - database
729:09 - migrations here we see this cre create
729:11 - jobs table okay and then we need to
729:15 - execute this PHP Artisan U
729:19 - migrate and if we just now refresh it we
729:24 - see jobs table right here okay now the
729:26 - table exists we set this into
729:31 - database and it should run this in the
729:34 - background okay now let's try I'm going
729:38 - to open my application
729:42 - upload large file 120
729:45 - megabyte uh click
729:48 - open we see now immediate success
729:51 - notification which is exactly what we
729:53 - want and it seems like for me as an end
729:56 - user everything worked it's there it's
729:58 - perfect it's working but if we check in
730:00 - the database in the files we see that it
730:02 - has uploaded on cloud to be zero and in
730:06 - fact the background process needs to be
730:08 - working here we see that okay so
730:13 - here is the payload of that and the
730:16 - default whatever so whenever this is
730:18 - finished then we will see this uploaded
730:21 - on
730:23 - cloud I'm going to just pause the
730:25 - recording and just keep refreshing right
730:27 - here until this turns into
730:29 - one and then we will see that file on
730:32 - the S3 packet as
730:35 - well actually this will not be processed
730:38 - by itself if we don't EX cute Q listen
730:43 - so something was added in the queue but
730:45 - nothing is at the moment looking at the
730:47 - queue PHP
730:50 - Artisan uh Q colum listen okay if we hit
730:55 - on this it starts listening and it's now
730:59 - just found that one job uploaded file to
731:01 - cloud and it is running now this is
731:04 - running we see attempts is one reserved
731:07 - at which means that this is already
731:09 - allocated and another cu should not take
731:13 - um that record for processing and it is
731:16 - in the running process if we check in
731:19 - the LEL we see also uh uploading right
731:23 - here uploading file on S3 okay and it
731:28 - will take a few minutes I'm going to
731:30 - pause the
731:35 - recording um okay and here we see it did
731:39 - not work at actually it timed
731:44 - out um after 60 seconds because it it
731:48 - has its own time out so I'm going to
731:50 - open the documentation from the Lal q
731:53 - and we can uh increase the
731:56 - timeout here is um everything what you
731:58 - can found regarding cues and I want to
732:03 - specify the
732:07 - timeout we can configure the number of
732:09 - tries
732:13 - [Music]
732:15 - and where's the time
732:20 - out we try
732:30 - until okay here's the
732:34 - timeout we can provide this timeout when
732:37 - we run Q listen but I want to provide
732:40 - the
732:43 - it into a single job probably that
732:46 - should be
732:47 - configured on a q
732:52 - level okay so when we run this Q listen
732:57 - if you provide timeout to
733:01 - be the Q work basically is an
733:04 - alternative command for Q listen but the
733:06 - difference is that Q work does not look
733:08 - for the file changes and if something is
733:11 - changed you need to stop this Q work and
733:15 - then restart it okay so Q uh listen is
733:19 - better in our case um the time oute is
733:21 - actually let's set it into 120
733:29 - seconds okay so the previous one was
733:31 - failed now it
733:35 - has okay this is
733:38 - gone it didn't change
733:41 - it is
733:45 - gone okay uh we should probably set also
733:49 - tries the number of times the job have
733:52 - been attempted let's set
733:54 - into um I don't want to actually
733:58 - implement the
734:02 - Q
734:04 - tce okay let's provide it to try three
734:07 - times
734:12 - okay and now let's
734:16 - upload let me delete this file
734:19 - first now let's upload the same
734:27 - file let's wait the file okay it has
734:30 - been uploaded now the job was created
734:32 - and it is running here we see that the
734:36 - latest one this was deleted but it is
734:38 - moved into trash instead
734:42 - okay so let's wait um few
734:46 - seconds now as you can see it was
734:50 - completed
734:51 - [Music]
734:54 - and uploading cloud is still zero if we
734:59 - check jobs we don't see anything
735:03 - there okay what's going on if we check
735:07 - on the S3
735:14 - we see this file right here which was
735:15 - uploaded just a one minute ago however
735:22 - why is this
735:24 - marked a zero we need to check our
735:33 - lock
735:36 - okay updating the
735:38 - database column updated by cannot be
735:42 - null now let's try to find out where
735:45 - this problem is coming from we are
735:48 - obviously calling save on the model
735:51 - level um right here and this is
735:55 - triggering the updating event so if we
735:57 - just open file.php this has has Creator
736:02 - and updator trait and if we check right
736:05 - here we are listening to the updating
736:07 - and we're setting the updated buy to be
736:09 - out ID and in this case when the file is
736:13 - saved from the queue the out ID doesn't
736:16 - exist so in our case maybe we need to
736:19 - completely disable all kind of events
736:22 - even don't update the probably dates or
736:26 - um create by and update by so we can
736:28 - easily do this if we just call Save
736:32 - quietly okay so I'm going to save that
736:34 - now let's open the
736:36 - browser come here
736:41 - and
736:43 - upload any file basically any file no
736:47 - matter the size of the file will work so
736:51 - I'm going to click
736:53 - open we can check the script is
736:58 - running we can check the database as
737:01 - well the script was done and we see
737:03 - uploaded on cloud was set to one to the
737:06 - latest one so that was successfully
737:08 - uploaded and also the database was
737:11 - updated successfully so we did it we
737:14 - made it uh we can check in the L logs we
737:17 - see uploading file on on S3 here's the
737:21 - file and uploaded okay now let's try
737:24 - download on the files how download works
737:28 - I'm going to click on download and as
737:30 - you see we have this access denied
737:32 - problem because the URL right now is
737:34 - coming from um it's coming from Amazon
737:38 - so we need to do it um something
737:40 - differently and also if I'm trying to
737:42 - download multiple files H click on
737:45 - download it should generate a zip and
737:48 - download the Z but I can't obviously
737:51 - generate Z on the server itself so I
737:55 - have to download the files those
737:58 - selected files locally create a zip then
738:01 - create a URL which will be from the
738:05 - local disk public disk and just return
738:08 - that URL
738:11 - okay so let's open file controller
738:14 - because we have to work
738:17 - there here's the file controller let's
738:20 - open
738:22 - download here we go and now what do we
738:26 - do so if all is
738:29 - selected uh then we create the zip and
738:32 - return that URL otherwise we call get
738:35 - download URL okay what does this return
738:39 - get download URL
738:41 - for if all is selected we do this for
738:44 - all but if some of them is selected we
738:47 - just pass the
738:49 - IDS and again right here if we selected
738:52 - more
738:54 - than if the count ID is equals uh one if
738:58 - there's only one to download if this is
739:02 - folder we are again creating zip and
739:05 - right here in the else case we are also
739:07 - creating zip okay so the only place
739:11 - where we don't create zip is this
739:16 - place okay so we
739:18 - copy from Storage path into destination
739:21 - and destination is
739:23 - public okay however this is not going to
739:26 - work in our case so we have to download
739:29 - this from S3
739:32 - cloud and then put this in the local
739:35 - disk and then we can return the um local
739:40 - URL
739:43 - okay so let's do like this this is the
739:44 - destination and uh we can actually
739:47 - remove this public I think we're going
739:50 - to test this and then on storage I'm
739:52 - going to call uh first get to get the
739:56 - current uh file
739:59 - storage path content so I'm getting the
740:05 - content and then I'm going to call disk
740:08 - on the storage because I want put this
740:11 - on uh on public and then I can call
740:16 - put I will put um on the destination the
740:21 - following
740:26 - content okay so this will save the file
740:28 - locally in the public directory so uh we
740:31 - can already check that
740:35 - public um maybe files we're going to see
740:39 - that we are going to see that the public
740:42 - is actually a symbolic link but we can
740:44 - check under storage app public okay
740:48 - right here we will be able to see
740:52 - that uh we were are right here so we put
740:55 - this on the public and then we're going
740:56 - to return the public link so again I'm
740:59 - going to call uh
741:02 - disk right here and then a URL disk but
741:07 - dis should be public
741:10 - okay so I save this and let's try to
741:13 - download single
741:17 - file and if we have some URL we will be
741:20 - able to see
741:26 - that okay we obviously have some error
741:31 - what's the
741:33 - error we don't see the error right here
741:36 - let me open developer
741:38 - tools go to network click on
741:46 - download what's going
741:49 - on uh it doesn't trigger it doesn't say
741:54 - anything here we
741:57 - go
741:58 - download it is probably downloading the
742:01 - file locally here we go here we go
742:04 - perfect so it actually downloaded the
742:07 - file put that on the public storage
742:09 - probably and fed than the download
742:12 - process I'm going to save this under
742:15 - downloads I'm going to click on
742:18 - that and the
742:21 - video okay and video actually opens
742:25 - Perfect by the way these are the video
742:28 - tutorials which I created for my LEL
742:30 - react fullstack application project you
742:33 - can check this on my YouTube
742:36 - channel okay so let's have a look here
742:39 - we see this video that was downloaded it
742:42 - has a random name so it doesn't conflict
742:45 - to any other video that was downloaded
742:48 - uh and whenever we have that
742:50 - downloaded uh after some time probably
742:53 - like after 1 hour we should probably
742:56 - clean up those uh public files because
742:59 - that will collect and finally just run
743:02 - out our space or even maybe five minutes
743:06 - so we have this this is a download link
743:09 - okay so under public and we can actually
743:12 - delete the download leags after some
743:16 - time but now let's try to download zip
743:19 - let me close everything else and
743:22 - probably leave only file
743:26 - controller like
743:28 - this okay so single file download Works
743:30 - let's go under zip and what do we do
743:34 - here
743:38 - so so here we create the zip in the
743:41 - public folder and if the directory
743:43 - doesn't exist we create that um here is
743:46 - the zip creation process then we open
743:49 - and then we call add files to zip and we
743:51 - provide the files so this is the
743:53 - interesting at this stage the files are
743:56 - located on AWS here for example if this
744:00 - is a folder we're going to call this
744:01 - recursively but if this is a file here
744:04 - we see that uh the file path is will be
744:07 - taken from the awss 3 because this
744:10 - storage path um actually indicates uh
744:14 - the default
744:16 - disk so probably what we want to do here
744:20 - is download that file locally first and
744:24 - then provide the path right here but let
744:28 - me
744:30 - try let me try to download
744:35 - zip I'm curious what will happen in such
744:39 - case let's open developer tools click on
744:43 - download and here we see the error
744:45 - unable to write file at location public
744:49 - zip error executing put object on AWS
744:54 - exactly okay so whenever we create the
744:59 - zip it happens right
745:09 - here make directory even make directory
745:12 - calls on the default dis so I need to
745:16 - call Disk first to be
745:19 - public and then call make directory this
745:23 - is the first thing and not sure if we
745:25 - really need this public because we
745:27 - everything everything is done inside the
745:30 - public
745:32 - disk so let's leave it like this then we
745:35 - try to get the path but we want to get
745:38 - the path from the disk uh public disk we
745:44 - want to get the path okay then we open
745:47 - the zip and it files to the zip okay
745:48 - let's see so far how this will work
745:51 - click on
745:53 - download it file no such file or
745:56 - directory okay so we call something on
745:59 - it file but that file doesn't exist and
746:01 - this is coming from here exactly so we
746:05 - can die and dump dump and die click on
746:10 - download and this is this is the file
746:13 - path which doesn't exist but the file
746:15 - path actually is coming from AWS so what
746:18 - we need to do is to download this
746:20 - locally let me search for download get
746:24 - download URL and right here we made this
746:27 - modification like this these two lines
746:31 - probably no these three lines let's take
746:33 - it is exactly what we want now let's go
746:36 - back into Ed file I'm going to paste
746:39 - this right here
746:41 - we have
746:43 - this uh path so we get the local
746:47 - destination we get the content and put
746:50 - this locally on the destination and then
746:52 - on the storage path we can actually put
746:58 - destination let me actually print what
747:00 - is uh destination as well and let's open
747:06 - the public area as
747:08 - well save it
747:10 - click on
747:12 - download and
747:15 - wait it is probably downloading right
747:19 - now those two
747:23 - files one is 120 megabytes okay it's
747:26 - going to take some time it is probably
747:28 - downloading now those two files and then
747:31 - it will dump the destination right here
747:35 - for the first
747:36 - file
747:38 - because yeah it's can do the for for the
747:41 - first
747:45 - file okay so the request was paining for
747:48 - quite some time probably something was
747:51 - not
747:53 - working so I just refreshed the page the
747:57 - pending request was stuck for some time
748:00 - so I had to reload the entire page and
748:03 - I'm going to try first on smaller size
748:06 - files and I'm going to choose two files
748:09 - right here okay one of them already
748:11 - exists let's choose something else here
748:16 - we go so we have two files and let's
748:19 - make sure those two files are uploaded
748:21 - on
748:22 - AWS
748:23 - S3 if we check the database we see the
748:26 - latest two files roughly same size has
748:29 - uploaded on cloud one however uh we
748:33 - should also consider the case when the
748:35 - file is not yet uploaded on cloud maybe
748:38 - due to um the reason that the user
748:41 - uploaded too many files and they will be
748:44 - put in the queue and if the then the
748:47 - user is trying to download the latest
748:49 - one um which is not yet uploaded on S3
748:53 - we need to download this from local uh
748:56 - local file system okay so right here we
748:59 - need to also have a look at the path so
749:03 - let's do like this local path
749:06 - equals uh storage
749:10 - path
749:12 - file storage
749:16 - path okay like this however now let's
749:19 - check if the
749:21 - file uploaded on
749:25 - cloud equals
749:27 - 1 if this is uploaded in Cloud then we
749:30 - need to get the destination then we need
749:34 - to download the file and then I'm going
749:38 - to put the file locally
749:41 - so this is the just the file name and
749:44 - then I will put this under
749:48 - destination in the
749:50 - public that's good and finally I'm going
749:53 - to return the local path equals storage
750:01 - dis
750:03 - public
750:05 - path provide the destination okay and
750:09 - finally I will pass local path right
750:12 - here now let's have a look now both of
750:15 - the files the latest files I just
750:17 - uploaded are uploaded on S3 if I select
750:21 - them so this will satisfy and it should
750:25 - download local path and put them locally
750:28 - and we will be able to see them right
750:30 - here we can clean up the existing local
750:33 - files we don't need them click on
750:35 - download let's
750:37 - wait uh okay so so they have been
750:42 - downloaded and zip was generated but the
750:44 - zip URL was returned from the S3 which
750:48 - is not obviously
750:49 - correct so what we should do
750:54 - is go
750:57 - back go
750:59 - back when we call create zip we have
751:02 - multiple places for that
751:06 - actually this is the URL and we
751:08 - immediately return URL okay let's go in
751:10 - the create zip and instead of calling
751:13 - storage URL we need to do storage disk
751:17 - local and then
751:20 - URL okay let's try this once again let's
751:23 - go back we have those two file selected
751:26 - let me actually refresh it and click on
751:30 - download okay now zip download has just
751:33 - started if we save this and open
751:36 - it we see two files in
751:41 - Insight that is awesome so we have
751:44 - implemented this now I want to
751:47 - try I want to try case when the file is
751:50 - first on a local disk and try to
751:53 - download like this so I'm going to open
751:55 - this Q listen and just kill the queue
751:59 - okay so it will the files will not be
752:01 - uploaded on
752:02 - S3 so let's reload the database let's
752:07 - try to upload two new files
752:12 - let's choose those two files okay they
752:14 - have been uploaded if we just check the
752:16 - database we see uploaded uh on cloud is
752:19 - false for both of them and if I click on
752:22 - download here on the first individual
752:25 - file we have this
752:27 - problem okay the file doesn't exist on
752:30 - the remote that's why we have this
752:32 - problem so we need to open download as
752:37 - well and get download
752:41 - URL and this is the changes uh what we
752:44 - made in this area so we probably need to
752:49 - indirectly return actually I'm going to
752:52 - quickly undo just to avoid any kind of
752:55 - buck so I'm going to save everything and
752:57 - hit the control and Z for a very long
753:00 - time uh here it is undoing the change
753:05 - oops too much
753:10 - okay so this is how we head it
753:15 - earlier
753:19 - right from file storage path we were
753:23 - putting this on the destination and then
753:25 - we were returning this okay perfect so
753:28 - I'm going to actually copy this code and
753:31 - then redo everything
753:34 - again what I have done for a to files it
753:37 - files to zip and so on read do until the
753:40 - very end now let's search for get
753:42 - download
753:43 - URL find that place and I'm going to
753:46 - write an if statement if
753:49 - file
753:51 - uploaded on
753:53 - cloud if this is uploaded on cloud we
753:56 - need to download
753:58 - it okay
754:05 - else we just copy from the existing path
754:09 - into public okay and finally we have
754:11 - this URL and file name in both
754:16 - cases uploaded on cloud okay this is
754:19 - integer so we don't need actually to
754:21 - write equals one but this is also fine
754:24 - so I'm going to save this now and I know
754:25 - that this file is not uploaded on cloud
754:28 - so I'm going to click on download here
754:31 - and it is still returning the S3 URL why
754:35 - first of all let's check yeah right here
754:38 - because we need to provide the dis needs
754:41 - to be public and then
754:44 - URL so let's save it go back click on
754:51 - download I think it didn't send uh we're
754:54 - going to refresh the page click on
754:57 - download okay and it actually downloaded
755:00 - the file so this is the case hold on
755:03 - hold on there's no file failed the no
755:07 - file okay that's not good
755:10 - storage copy aha because we are using
755:12 - storage right here we need to again
755:15 - provide that we want to copy from um we
755:20 - want to work with a local dis more
755:22 - specifically not local but
755:27 - public and before the file goes into
755:30 - public I think the file is inside the
755:34 - files right so we actually want to move
755:40 - from local this is the local dis from
755:44 - local into
755:47 - public okay this is what I want
755:52 - so we have the file storage path so I
755:55 - want to actually let's do like this
755:58 - storage
756:00 - disk
756:03 - public
756:05 - H uh the path will be destination
756:10 - and the content will be storage disk
756:15 - local get and the path storage
756:20 - path I think that's that's good so we
756:24 - are actually getting the storage path
756:26 - from local and putting that into public
756:29 - this is extra let's let's check this and
756:32 - finally we're going to return the public
756:34 - URL on the destination URL now let's see
756:38 - once again reload the page select the
756:41 - file click on download a trigger
756:43 - download click on Save and the file
756:46 - seems like the file
756:49 - exists and here is my file and by the
756:54 - way this is my laral e-commerce course
756:56 - which you can find on my website the
756:57 - code holly.com 140 videos 23 Plus
757:02 - hours okay awesome
757:06 - so this is how we download single file
757:09 - let me try a second file trigger
757:12 - download click open it opens
757:15 - successfully and now let's check how it
757:18 - works on zip
757:21 - case okay we have this
757:25 - problem no suchar fileer directory
757:29 - 314 this is the line
757:33 - 314 let's go to 314
757:37 - line local path okay so it looks like
757:40 - the local path does not exist so in our
757:44 - case the file is not uploaded on cloud
757:50 - the last two files so what we are
757:53 - getting is the path from local
757:58 - path okay so let's print the local
758:03 - path click
758:06 - on
758:08 - download okay okay so this is the local
758:10 - path but I think we need absolute
758:14 - path we need absolute path why isn't
758:17 - that absolute path okay give me a second
758:21 - I'm going to try another file which is
758:24 - uploaded on
758:28 - S3 okay now this
758:32 - is this is the local path
758:35 - which uh which was downloaded
758:41 - which was downloaded from S3 this
758:45 - one but in our
758:48 - case h i see because we again need to
758:52 - call local or disk local
759:00 - here okay the default is is always S
759:04 - three right now and if we want to
759:05 - interact with another dis we have to
759:07 - explicitly provide on which dis we want
759:09 - to interact so in our case I'm going to
759:12 - select those two files which are on
759:14 - locally but not awss 3 first and click
759:17 - on
759:18 - download uh and yeah the URL looks
759:21 - correct let's remove this dump and die
759:24 - and click on download again and now the
759:27 - zip is
759:28 - downloaded okay
759:31 - awesome and there are two files I think
759:34 - both of them if they have size probably
759:36 - they they are working and now I'm going
759:38 - to try those four files two of them are
759:41 - on S three two of them are not on S
759:44 - three okay so now when the uh script
759:49 - comes right here for those files which
759:51 - exist on this three will run the
759:53 - following code and download locally but
759:56 - the other ones um simply will be
760:00 - um will be used from uh as from the
760:04 - local path I was thinking right now that
760:07 - uh we need to write the script to clean
760:10 - up those public files as soon as
760:15 - possible
760:17 - actually actually and why do I have two
760:20 - times public here not sure we can figure
760:22 - this out um click on download four files
760:27 - okay all of them we downloaded we can
760:29 - open the zip and we see four files right
760:31 - there okay so this is so awesome now if
760:35 - I execute Q again
760:40 - those two jobs will be handled in the
760:43 - database we can see that uploaded on
760:46 - cloud was set to one and if we just try
760:49 - to download on the same four files but
760:52 - two of them now uh are also on S three
760:55 - we can see that they are working as
760:59 - well okay awesome I'm going to do now
761:02 - one final test I'm going to clean up
761:05 - everything from public
761:10 - and I'm going to run um few tests first
761:13 - let's download those four files actually
761:16 - I don't need to download I will see zip
761:20 - and four files here and now I'm going to
761:23 - download a single
761:27 - file which
761:31 - is nowhere here okay let's try to
761:34 - download this once
761:36 - again save
761:40 - okay it
761:41 - exists we don't see this on
761:44 - public okay uh one last thing I'm going
761:47 - to just kill the queue and upload one
761:50 - additional
761:52 - file this one which will be saved under
761:55 - files for
761:58 - now and then I'm going to try to
762:01 - download this from
762:03 - files it was moved this is the case it
762:06 - was moved into Public public so we're
762:08 - going to search
762:10 - for uh public
762:13 - slash here we see
762:16 - that um if the fil is uploaded on cloud
762:18 - this is the get download URL okay if the
762:20 - fil is uploaded on cloud we do
762:26 - this let's actually remove public from
762:29 - here and now the destination is the same
762:31 - so we can move this
762:35 - up remove from here so we get the file
762:38 - name
762:40 - we either download it from
762:47 - S3 or download it from
762:53 - locally by the way these code is very
762:56 - very similar so as you can see in any
762:59 - case
763:01 - finally we have these two things in
763:04 - common as well
763:09 - so the only difference is that in one
763:12 - case let's actually put this right here
763:15 - in one
763:18 - case um we download file from the
763:21 - default
763:22 - disk in second case we download
763:25 - files from local disk and in both cases
763:29 - we put this in the um in the
763:35 - public you know what we can even get
763:37 - this code but this down
763:40 - below and here we can type
763:47 - content uh
763:50 - content and then
763:54 - content here equals
763:59 - this I'm just trying to speed up the
764:02 - process and that's why I'm making
764:04 - mistakes typ
764:05 - holes and here
764:09 - we will have content equals
764:16 - that perfect so now this is the only
764:19 - difference uh for whether the file is
764:21 - uploaded on cloud or not we have very
764:24 - similar logic in both cases and I'm
764:27 - pretty sure we can do the same thing in
764:30 - create
764:31 - zip or it files to
764:35 - zip right here
764:40 - yeah we can leave this as it is right
764:42 - now that's
764:45 - fine now it's time to deploy our
764:48 - application on production ready
764:51 - environment with custom domain for this
764:54 - I'm going to use hostinger shared
764:56 - hosting Services I have been using
764:58 - hostinger services for quite some time
765:00 - and I genuinely think that they have the
765:02 - best shared hosting Services out there
765:06 - however if you are going to build a
765:07 - website and with which should serve
765:09 - thousands of users simultaneously if
765:12 - you're doing something extraordinary and
765:14 - large don't use shared Housing Services
765:17 - shared hosting services are ideal for
765:20 - small to medium type of projects okay so
765:24 - I'm going to talk more about hostinger
765:25 - Services because this video is not
765:27 - sponsored by hostinger I'm I mentioned
765:30 - this because I use it every day uh for
765:33 - my websites and I'm going to show you
765:34 - how you can set up your account right
765:36 - there and deploy this project on a
765:39 - custom domain with hosting or shared
765:41 - hosting Services okay so we need to go
765:43 - to the um actually let's scroll down
765:46 - below right here they have plans you
765:48 - need to choose the the one you want the
765:51 - um the most popular one has everything
765:54 - what you need basically so I'm going to
765:56 - click this add to
765:59 - cart then you will go to the um checkout
766:02 - page right here you just need to choose
766:05 - um for the period you want to purchase
766:08 - the domain and hosting of course if you
766:11 - CH if you choose the 48 months you're
766:13 - going to have huge saving and down below
766:16 - you will see that you will pay um
766:19 - $191 for two uh for um four years shared
766:25 - hosting plus one your domain okay so the
766:29 - most common one probably is to just take
766:32 - it for 12 months because the domain
766:35 - basically comes with 12 months as well
766:37 - so if we scroll down below we see that
766:39 - the price is
766:41 - $59 for the entire year for the hosting
766:46 - as well as for the domain and it also
766:48 - includes the free SSL certificates
766:51 - unlimited number of databases it also uh
766:54 - includes the free email and there are a
766:56 - few others okay so if you decide to just
766:59 - take the hosting or shared hosting
767:01 - services and go with that then you can
767:03 - use the coupon code right here the code
767:07 - holic and this will give you additional
767:09 - 10% discount on the price right here
767:13 - however if you want to choose a
767:15 - different hosting provider no problem
767:17 - about that we are going to clone the
767:20 - project using SSH and make sure your
767:23 - hosting provider has access um on SSH
767:27 - terminal so that you can log in and
767:29 - clone the project and run composer
767:31 - commands and so one okay so this is what
767:34 - you need to be able in order to follow
767:36 - this tutorial and be able to set the
767:39 - project on your custom domain okay so if
767:43 - you decide to go with the hostinger this
767:44 - is all what you need to do you choose
767:47 - the period you choose the plan you
767:49 - provide the coupon code the code colag
767:51 - and click submit secure payments
767:53 - whenever you do this your uh you will
767:55 - have to just provide the credit card
767:57 - information obviously and click submit
767:58 - secure payments but you also need to
768:01 - sign up with your email address or
768:04 - through Facebook or Google and if you
768:06 - don't have an account you obviously need
768:08 - to create an account first once you do
768:11 - all these steps you will be redirected
768:13 - to hostinger age panel okay so I have
768:17 - obviously already have an account and I
768:19 - have I used hosting or service uh
768:22 - Services quite like multiple times in
768:25 - the past and I have been using this
768:27 - since now and this is my hosting rage
768:30 - panel okay so right here I have my
768:32 - hosting my personal website is hosted on
768:36 - the hostinger I have been using the pH
768:38 - following emails as well my blog is
768:40 - hosted on hostinger as well so and right
768:44 - here you will have this uh premium web
768:47 - hosting as well as domain okay so in
768:50 - this case I have this very old domain
768:52 - which I was going to set up earlier but
768:55 - I just didn't finish that so I can um
768:58 - just finish the setup of this domain you
769:01 - will have extra um like fresh brand new
769:04 - domain right here and you will click set
769:07 - up okay then you will have to choose the
769:09 - domain I have already made this decision
769:12 - and this is uh the domain I have chosen
769:15 - and by the way I have chosen this domain
769:17 - to just create a tutorial how to deploy
769:20 - larl on Virtual private server not on
769:23 - shared hosting now this video is already
769:26 - available on my YouTube channel you can
769:27 - check that if you want to see how you
769:29 - can deploy this particular project on
769:32 - laravel VPS not L uh on um sorry on VPS
769:37 - servers not on shared hosting okay you
769:40 - can check this um on my YouTube channel
769:42 - um okay this is the domain you can
769:44 - choose whatever you want make sure this
769:47 - is available then you will have to
769:48 - choose the region um where you want um
769:52 - your hosting basically to
769:54 - be and right here you have to provide
769:57 - your um profile and your just details
770:01 - address and email and phone all that is
770:04 - necessary for domain registration and
770:07 - then you will click Phenix registration
770:09 - okay this will generally take few
770:11 - seconds few minutes depending on many
770:14 - things let's wait until this is
770:16 - done okay this is finished I'm going to
770:19 - click continue
770:21 - here okay and here I have this larel on
770:25 - VPS domain again this domain can be
770:29 - anything just make sure that this is
770:31 - available okay I'm going to copy the
770:33 - domain and open in a new tab okay I'm
770:36 - going to close the other tabs and right
770:38 - here you see that the domain is working
770:41 - you will see the hostinger default page
770:44 - which indicates that you have
770:45 - successfully set up your domain also
770:48 - make sure that uh we need to um set up
770:51 - the SSL as well right now you see that
770:53 - the domain has not secure we don't have
770:55 - SSL set up so let's go under domain
770:59 - right now we have set up only domain not
771:02 - hosting if you have purchased the
771:05 - premium shared hosting the way I showed
771:08 - to you
771:09 - you will have the possibility to set up
771:11 - everything the domain and hosting
771:13 - together in my case I'm going to set up
771:15 - hosting separately okay so your approach
771:19 - will be pretty straightforward you just
771:20 - need to follow the instructions so I'm
771:23 - going to click these premium web hosting
771:28 - setup okay so right here I'm going to
771:30 - skip this I'm going to skip this again
771:33 - and now I have to choose the website for
771:36 - which I'm going to set up the uh domain
771:39 - I can use an existing domain or choose
771:41 - the one which I have right here I can
771:43 - also buy a new domain I'm going to
771:45 - choose this Lal on VPS and click on
771:48 - select this is the place I have to
771:50 - choose the region I want my server to be
771:53 - located uh The Logical will be to choose
771:56 - the uh region which will be closer to
772:00 - the audience for which you are creating
772:03 - the website okay so if I'm creating my
772:05 - website for USA Market I'm going to
772:07 - choose the north americ car region uh if
772:09 - I create something for friends um I'm
772:12 - going to choose friends or you get the
772:14 - idea okay so I'm going to leave this
772:16 - into North America and I'm going to
772:18 - click change so I have the domain um for
772:22 - which I'm setting up my shared hosting
772:26 - and I have the location I'm going to
772:27 - click finish setup this will take few
772:30 - minutes let's wait until this is
772:34 - completed okay this is completed and I'm
772:37 - going to click on on the control panel
772:39 - manage site I can click this view
772:42 - website which will basically open this
772:45 - and this is already working I'm going to
772:47 - click this manage site this will open my
772:51 - uh premium web hosting control panel so
772:55 - I have the domain the website name this
772:57 - is Lal on VPS and I have a lot of
773:00 - configuration options right here okay so
773:02 - we have the hosting section we have
773:04 - performance security email domains my
773:06 - favorite one is actually advance so if
773:08 - you go in the advance we see multiple
773:10 - things right here and um I'm going to go
773:14 - into PHP info actually and this will
773:17 - give you the current PHP version and
773:19 - everything what is configured in this uh
773:22 - shared hosting we have S access which
773:25 - I'm going to um just get back really
773:27 - soon and we have this PHP configuration
773:30 - as well from which we can change the PHP
773:32 - versions and enable disable PHP
773:35 - extensions and configure some PHP
773:37 - options this is a actually pretty uh
773:39 - awesome I'm going to go under domain and
773:43 - actually I'm going to search for SSL so
773:45 - I'm looking for security and SSL and I'm
773:48 - going to check if SSL certificate is
773:50 - properly installed right now you you see
773:53 - I got the notification SSL is installed
773:55 - okay so whenever you set up your web
773:57 - hosting SSL needs some time to be set up
774:02 - okay right now we see that domain lalon
774:05 - VPS the domain I have chosen has the
774:07 - status active for SSL so if I open my
774:11 - domain and refresh in the browser
774:13 - actually I'm going to open this in
774:15 - Incognito because browser actually
774:16 - caches the SSL
774:19 - status okay so error certificate
774:22 - transparency required okay let's have a
774:25 - look I think I know the reason I think I
774:26 - know the reason this is the issue on my
774:30 - personal computer uh for some reason I
774:34 - don't know why when I restart my
774:36 - computer it actually changes the date
774:40 - into uh UTC time so this is the UTC time
774:44 - and I'm actually in toi time zone so the
774:49 - my time the real time is 11 uh 8 p.m.
774:53 - but this shows 78 p.m. and due to the
774:56 - time mismatch this SSL certificate
774:58 - doesn't actually work okay so what I'm
775:01 - going to do is just it's weird that I'm
775:05 - going to installing um I'm installing
775:07 - the SSL and I have to change the time
775:09 - again this will not be an issue on your
775:12 - case because you will probably have
775:14 - correct time I just don't have it so now
775:17 - my time is correct if I just reload the
775:20 - page again let me actually close this
775:23 - and reopen
775:28 - it okay let's wait for a few minutes I
775:33 - believe this will be set up if not we
775:35 - will get back to this uh here we go here
775:40 - we go okay so it started working we are
775:42 - in incognit mode we see that the
775:44 - connection is secure okay so the
775:47 - certificate is valid so let start it
775:51 - working okay and it's it's not going to
775:53 - work probably in the standard browser
775:56 - because the browser has it cached but if
775:59 - you check in in cognito it's working
776:01 - okay so
776:02 - now we are already ready to clone our
776:06 - project and set it up but before I do
776:09 - this I'm going to go into advanced and
776:12 - PHP configuration and I'm going to
776:13 - change this into PHP h u 8.2 this is
776:17 - what I want I'm going to click update
776:21 - confirm uh if we go in the PHP
776:24 - extensions uh if you are using like um
776:28 - image manipulation or anything which is
776:30 - not ticked you can easily take that if
776:32 - you are using like mcrypt or ldap or
776:36 - anything uh you can easily activate that
776:39 - um I'm going to leave everything what is
776:42 - left by
776:43 - default okay so we see that Max file
776:46 - uploads is 20 uh we have increased this
776:49 - for local uh development and I'm going
776:52 - to increase this right here as well into
776:55 - 500 now we need a post Max size this is
776:59 - set
777:00 - to this is like 100 gab uh sorry um the
777:05 - 1 gab 1.5 gbyte okay I'm going to leave
777:07 - this
777:08 - as it is it's pretty large large enough
777:13 - uh where's the postm size that was
777:15 - actually post Max size and this is the
777:17 - upload upload Max file size this is also
777:20 - fine I can however I can just type it
777:24 - something manual like 4
777:26 - gabes uh but no it has some predefined
777:30 - options and I can choose only what is
777:32 - pretty find which is fine so the size is
777:35 - pretty large okay so I have the PHP
777:37 - config configured properly um if you
777:40 - want to check the file manager you can
777:41 - check that right here again I'm going to
777:44 - go into advanced and I'm going to click
777:46 - on SSH access okay so first of all I'm
777:49 - going to enable SSH access click on this
777:53 - right here then I'm going to change the
777:55 - password and make sure you set something
777:57 - very secure or you can also generate uh
778:02 - public private keys on your operating
778:04 - system and add that public private key
778:07 - right here and then Au authenticate
778:09 - through the public private Keys okay how
778:13 - to generate public private Keys that's
778:15 - pretty straightforward you can just um
778:17 - search in the internet for that uh in
778:20 - this case I'm going to use just password
778:23 - way approach however again I should
778:25 - mention this that if you are doing
778:27 - something for production uh the approach
778:30 - for uh public private Keys is much more
778:32 - secure and recommended way to go with
778:36 - you know what let me open uh my Ubuntu
778:41 - on Windows this is my Ubuntu and I'm
778:44 - going to open my
778:47 - SSH ID RSA dop so this is my public key
778:51 - okay I'm going to just take my public
778:54 - key I'm going to copy that click add
778:58 - public key and paste this right here
778:59 - okay so this is public key so I okay if
779:02 - you see that that will
779:04 - be um Laptop Windows something like like
779:08 - this Windows WSL Ubuntu I'm just giving
779:13 - it a proper name to describe add SSH key
779:16 - again I'm going to search uh for
779:20 - you
779:22 - generate uh SSH
779:26 - key the very first link probably will be
779:29 - what you want you just need to follow
779:31 - the instructions you you're going to
779:32 - call this SSH key again provide the um
779:36 - algorithm for which you want to generate
779:39 - this is the old algorithm which I still
779:41 - use it Legacy
779:44 - system um okay so using this approach
779:47 - you will be able to generate it and then
779:48 - you can get that um like like I got it
779:53 - okay now I have added my public key so
779:56 - I'm going to copy the following comment
779:58 - I have also enabled SSH status so I
780:01 - copied the following command which
780:03 - includes right there let me paste paste
780:06 - it here
780:11 - uh copy paste okay so this is the port
780:16 - this is the username this is the IP if I
780:20 - hit the
780:21 - enter uh then I have to just take the
780:24 - fingerprint I'm going to type yes
780:26 - here and look at this so I was able to
780:29 - log in in my um in my hosting premium
780:33 - shared hosting server so right now I am
780:37 - in my home folder and here if I type ls-
780:42 - La I will see that I have this public
780:44 - HTML this public HTML is the folder
780:48 - which contains the main file which
780:51 - displays the following domain okay so if
780:55 - I go inside this public HTML which by
780:58 - the way is a symbolic link on domains
781:02 - lalon vps.com public HTML okay so this
781:06 - is just a symol link if I navigate
781:09 - inside this public HTML and then just
781:11 - type
781:13 - PWD this will show me that I'm inside
781:16 - public HTML and if I type ls-
781:18 - laa I have this default PHP and that
781:21 - default PHP is what you see right here
781:26 - you can access the same file from the
781:30 - file manager if we just click on the
781:31 - file
781:34 - manager um let's wait
781:37 - for a few seconds here we see we see
781:40 - this public HTML if I double click on
781:42 - that I'm inside and I will see this
781:43 - default PHP which I can edit or delete
781:46 - or do whatever I want okay so in this
781:49 - case I'm just going to close it because
781:51 - I'm used to working with terminal and I
781:53 - want you guys if you don't have
781:55 - experience with the terminal to get
781:57 - familiar with that as well so again I
781:59 - have this default PHP which I'm going to
782:01 - delete so I'm going to call RM default
782:05 - PHP because I deleted that now if I the
782:08 - page I'm not going to see this default
782:10 - page in sayate I forbidden because
782:13 - there's no file which needs to be
782:15 - returned and again now we have this um
782:17 - secure connection connection is secure
782:20 - perfect actually I don't need anything
782:23 - inside the public HTML so I'm going to
782:25 - go back and now I'm inside my home
782:29 - directory and I'm going to go inside
782:31 - domains okay and inside domains we have
782:34 - the only domain we have assigned to our
782:37 - premium shared hosting so I'm going to
782:39 - navigate in inside my domain lalon
782:42 - vps.com and here I have this public HTML
782:45 - this public HTML however is empty
782:48 - because it had this default PHP inside
782:50 - there and we deleted that so what I'm
782:53 - going to do is even delete this public
782:57 - HTML so I'm going to execute rm-rf uh
783:01 - why I'm executing with RF because I want
783:03 - to delete the uh folder okay so rm-rf
783:09 - public HTML and now I don't have
783:11 - anything inside laravel on VPS now it's
783:15 - time to clone my project okay so if you
783:19 - uh if you just have been following the
783:21 - tutorial and if you have just create the
783:24 - project now it's time to push your
783:27 - project on uh GitHub or somewhere like
783:30 - bit packet or gitlab make sure it is
783:33 - pushed in the Version Control System um
783:36 - remotely okay okay so I'm going to go
783:39 - into repositories and just get
783:43 - the where is L file
783:47 - manager okay the
783:51 - codic file manager this is how I called
783:55 - it okay probably it is private so I'm
783:59 - going to Now log
784:01 - in okay so I have logged in my account
784:04 - and I see that the repository is
784:06 - actually private
784:08 - okay so you can make the repository
784:10 - private and just uh click this local and
784:13 - then you need to clone it okay so uh if
784:17 - you want to clone through SSH then you
784:20 - need to generate public private keys on
784:23 - the server as well just like I showed to
784:26 - you how you can generate it um on your
784:29 - local but just to make it easy I'm going
784:32 - to just clone it uh through https so I'm
784:35 - going to click um copy right here here
784:38 - and then I'm going to execute git clone
784:41 - and then just type the URL however I
784:45 - want to clone it inside the current
784:47 - directory okay if I don't specify
784:49 - anything after the URL it will clone
784:52 - inside the following folder but I want
784:55 - it to be cloned inside the current
784:57 - directory so I'm going to provide dot
784:58 - right here so just clone it inside the
785:01 - current directory if I hit the enter
785:03 - Because the repository is private it
785:05 - will ask me to enter my username name
785:08 - and my password okay you can provide
785:11 - this however I still I am still going to
785:16 - make my repository public so instead of
785:21 - providing email and password I will just
785:24 - go and make the repository public danger
785:29 - zone change
785:32 - visibility change to public
785:38 - make this repository
785:40 - public okay now this is public so I'm
785:44 - going to execute kit clone again it
785:46 - doesn't ask me username and password
785:48 - instead the project was cloned and if I
785:50 - type ls- laa I will see all the files
785:54 - and folders that are in the
785:56 - repository okay now the first thing
786:00 - after we clone the project is to run
786:02 - composer install Okay however if I just
786:06 - type composer d d version we see that
786:10 - the composer default version is 1 point
786:13 - something okay this is we are going to
786:17 - change uh LEL tan actually needs the
786:20 - composer version too so I'm going to
786:22 - just type in the Google composer version
786:26 - two download composer latest so we are
786:30 - going to copy the following command okay
786:34 - and I'm going to clear up everything and
786:37 - just
786:41 - paste okay hold on so I will get the
786:45 - following code and paste it here it is
786:48 - downloading the composer then I'm going
786:50 - to hit the enter and finally what I have
786:53 - here is the composer far that was
786:56 - downloaded okay and to execute this
786:59 - composer far which is basically a
787:01 - composer we're going to do like com uh
787:04 - PHP
787:05 - composer excuse me
787:08 - PHP composer far D- version now this
787:13 - gives me composer version two so what I
787:16 - need to do is just execute PHP composer
787:20 - far
787:22 - install we're going to wait it will
787:24 - download all the packages and just
787:27 - install that and after that we need to
787:32 - create file okay so here inside the
787:35 - project we have
787:37 - example so I'm going to
787:40 - copy example
787:42 - into and since I copy I'm going to open
787:45 - this using Vim
787:48 - vm. hit the enter here I inside the Vim
787:51 - I just need to type I on the keyboard to
787:54 - go in insert mode I so then we can give
787:57 - the project name like let's put this in
788:00 - the double quotes laravel storage or we
788:04 - call it actually Lara storage okay the
788:08 - environment I'm going to set this into
788:10 - production APA key is something that
788:13 - needs to be automatically generated so
788:14 - I'm going to leave this empty debug I'm
788:17 - going to disable make sure you disable
788:19 - it when you go in the production up URL
788:22 - will be htps in the domain we have
788:25 - decided to take LEL on
788:29 - VPS vps.com
788:32 - okay so then I'm going to scroll down
788:34 - below we have this MySQL connection host
788:37 - we have not created the mySQL database
788:40 - so I'm going to leave everything opened
788:42 - and go in the browser then I'm going to
788:44 - go in the um H panel and I'm going to
788:47 - search for database right here and as we
788:50 - see here we have this management section
788:53 - and we are about to create new database
788:55 - so let's call this Lara uh storage and
789:00 - let's choose the username to be L
789:01 - Storage as well for the password I just
789:04 - want to generate some random password so
789:07 - this this will be okay I'm going to copy
789:09 - the password and click on create so I
789:12 - have password already copied I'm going
789:14 - to open my terminal and go in the
789:17 - password section and paste my password
789:20 - here then I'm going to copy the
789:24 - user and paste right
789:29 - here and I'm going to copy the
789:32 - database and
789:34 - paste right here okay so then if we go
789:39 - in the broadcast driver we don't need
789:41 - anything I'm going to go in the Q
789:43 - connection and I'm going to change this
789:45 - into database because we have changed
789:47 - this into database if I scroll down
789:50 - below I'm going to leave everything as
789:52 - it is right now however for
789:55 - mailer we don't need this local mail pit
789:59 - okay we need a valid SMTP credentials
790:04 - for email sending okay
790:07 - however I'm going to go to I'm not going
790:09 - to go too deep and show you how you can
790:12 - set up your sntp uh for production
790:14 - because that's absolutely different
790:16 - story what I'm going to do is just to
790:20 - use fake email SMTP
790:23 - credentials okay so I will open mail
790:28 - trap which I generally use for um email
790:32 - sending so I will quickly log
790:35 - in with my Google
790:41 - account okay here I inside um this is my
790:45 - actual inbox so I will go inside the
790:47 - Inbox and I will get the following uh
790:51 - credentials so actually I want Lal 7
790:53 - plus something so I'm going to uh copy
790:58 - that and where is this
791:02 - mailer actually actually let me paste
791:05 - this here
791:08 - here we see everything and it ended with
791:11 - encryption so basically I need to delete
791:14 - these lines because I have now correct
791:18 - credentials so I can easily delete that
791:22 - by just hitting the Escape right now I'm
791:24 - in in the insert mode so I hit the
791:27 - Escape make sure the insert mode is gone
791:31 - then I hit the D on my keyboard two
791:34 - times D okay d two
791:39 - times and I delete it all then I hit I
791:42 - again to go in the insert mode if I want
791:44 - to change something okay this is the
791:47 - email from address we can leave this
791:49 - right now because we have actual fake
791:52 - SMTP credentials right there but we need
791:55 - to provide correct AWS access key ID and
791:58 - secret key ID so I will open my
792:02 - phor I will open my enan and I'm going
792:06 - to copy this a access key ID and secret
792:08 - key
792:10 - ID actually let me copy just
792:14 - values
792:18 - paste
792:20 - value paste okay let's choose the region
792:24 - which will be EU West 2 and the backet
792:30 - will be file manager the codeo so I'm
792:33 - going to paste the backet right here
792:35 - okay so everything else can be left so
792:39 - I'm going to hit escape on my keyboard
792:41 - again make sure the insert text is gone
792:44 - then call on W to write everything and Q
792:48 - to quit from this B so I have configured
792:52 - my Ian properly and now we're going to
792:53 - execute migrations PHP Artisan
792:58 - migrate okay as you see everything was
793:01 - applied and we see head storage path to
793:04 - files table
793:07 - create start f it uploaded okay
793:11 - okay what probably I have not pushed is
793:15 - the latest migration let's go in the
793:17 - database
793:20 - migrations create jobs table okay this
793:23 - is something I have not pushed so that's
793:26 - good so I will push this right
793:29 - now I have actually edit the migration
793:32 - and pushed on the GitHub and now I'm
793:35 - going to pull the changes and this way
793:37 - you can also see how you can update your
793:40 - project whenever you make some changes
793:44 - in your repository okay so right here
793:46 - I'm inside the repository so I'm going
793:48 - to execute kit pull this will pull the
793:52 - latest versions here I see create jobs
793:54 - table and I will execute migrate again
793:57 - PHP Artisan migrate and here we see that
794:01 - create jobs table has been
794:03 - applied okay so this is awesome one last
794:09 - thing what we need to do uh before I do
794:11 - this let's check in the browser we
794:13 - should not see anything so if I check
794:16 - this it's it shows not found which is
794:21 - understandable uh the hostinger
794:23 - basically is looking for public
794:26 - HTML folder inside this domain name and
794:31 - then inside this public HTML there
794:34 - should be index PHP or default PHP okay
794:38 - so in our case laral doesn't have public
794:40 - HTML but it has public folder there okay
794:44 - so what I'm going to do is create a
794:46 - symbolic link of public folder into
794:49 - public HTML so I'm I'm going to execute
794:51 - Ln d s to create D uppercases to create
794:55 - simol link public into public
795:01 - HTML I'm not sure if I'm doing this
795:05 - correctly actually it should be vice
795:07 - versa so I want to create symbolic link
795:11 - which I'm going to
795:12 - call public HTML and that should
795:15 - reference to public folder I'm going
795:21 - to okay it should be lower cases
795:25 - probably let's type
795:27 - ls- LA
795:32 - and hold on
795:38 - it didn't create symbolic link
795:43 - so okay I think I did it incorrectly
795:47 - here we see that so we should basically
795:48 - execute ln- s so I want to create um
795:52 - from public into public HTML symbolic
795:55 - link but we we just need a lowercase s-
795:58 - lowercase s so that created public HTML
796:02 - uh symbolic link which references to
796:04 - public and now if I navigate in to
796:07 - public HTML it's navigatable and inside
796:12 - there we have this um
796:16 - index um index
796:18 - PHP U not sure why this what is this but
796:22 - I think we can completely remove that
796:25 - public HTML from inside the public HTML
796:30 - can be removed hit the enter we don't
796:33 - need that the main thing is that we have
796:35 - now index PHP inside public HTML and
796:39 - this is exactly what the server needs so
796:42 - if I reload the page I I see this 500
796:46 - error which indicates that the laral
796:48 - started working but we have actually the
796:51 - laral error okay we don't see these
796:54 - Trace because we just disabled the debug
796:57 - mode if I go back and just open
797:02 - the and then hit the I to go in the
797:04 - insert mode then I I go up and in the
797:10 - debug I will enable that then Escape
797:15 - colon
797:17 - W let's
797:19 - reload uh okay this is something what I
797:22 - have missed now colon and Q to quit from
797:26 - here PHP
797:28 - Artisan key colon generate d-i okay we
797:34 - didn't have that key set in the so we
797:37 - need to generate the key Now application
797:39 - key was set successfully and if I reload
797:41 - the
797:42 - page uh I see a different error okay so
797:46 - this is something else which uh we need
797:48 - to do so it is looking for this build
797:53 - manifest okay and this happens generally
797:57 - because we don't have assets compiled
798:00 - and assets are not available on the
798:02 - server so there are two approaches to do
798:04 - that one is to run mpm run Dev uh not
798:09 - Dev excuse me mpm run build on the
798:11 - server but we cannot do this because as
798:14 - far as I know shared hosting doesn't
798:17 - provide mpm in nodejs okay so what I
798:21 - will do is just execute I have this mpm
798:26 - run Dev running so let's close this and
798:29 - I'm going to execute mpm run build okay
798:34 - so this will build those pages and
798:37 - create JavaScript and CSS files and
798:40 - those are the build files a public build
798:44 - assets okay and if I just open public
798:48 - build assets so this is the build files
798:52 - however in the G ignore we have them
798:55 - ignored in the G ignore uh public Bui
798:59 - okay so this is
799:02 - ignored okay I'm going to remove this
799:04 - from get ignore so this is the the case
799:07 - I want to remove it from G ignore
799:10 - because I want this build directory to
799:12 - be committed and pushed
799:16 - okay so here I am commenting the get
799:19 - ignore
799:20 - change this line has been deleted and
799:24 - all those build files as
799:26 - well okay add
799:30 - build files let's comment that
799:36 - and push
799:40 - everything now let's go in my terminal
799:43 - and want to execute G
799:46 - pull this will pull all these build
799:49 - files and now let's check in the
799:53 - browser reload the page and we see our
799:56 - application is up and running we have
799:59 - SSL certificate as well which is awesome
800:02 - now let's click log in actually we don't
800:04 - have an account to log in so I'm going
800:06 - to click on register and now I'm going
800:08 - to provide my name I'm just going to
800:11 - provide dami
800:16 - email and just click on register okay
800:21 - let's wait now the email was sent
800:23 - however because we don't have an actual
800:25 - SMTP configured we and also we indicated
800:30 - fake email address so here we will have
800:34 - that email a few seconds ago verify
800:36 - email address as you see I'm going to
800:38 - click verify email address right here
800:41 - and now I am inside the
800:44 - application okay this is getting
800:47 - awesome so we are inside the application
800:50 - and now we can start
800:52 - testing test let's actually open
800:56 - developer Tools in case there's some
800:58 - kind of error click on submit the folder
801:01 - was created okay double click we are
801:04 - inside there the routing works fine if I
801:07 - reload the page I am inside there now
801:11 - the main thing is that we need to upload
801:13 - the files and that needs to go into um
801:17 - S3 AWS S3 however we don't have that Q
801:23 - command running okay so this is
801:27 - something we need to configure as
801:30 - well so I found the following
801:35 - link which I'm going to share right now
801:38 - how to keep laral Q system running on
801:40 - the server okay so here are different
801:43 - approaches one approach is to install
801:45 - some supervisor but we cannot install
801:49 - anything here because this is shared
801:51 - hosting we don't have sud sudo to
801:53 - install anything but if no hop is
802:00 - available okay missing operant this
802:02 - looks like no h is the command is
802:05 - available and this is what we are going
802:08 - to execute so I'm going to just copy
802:10 - that and just paste this NOA phpr design
802:15 - before I execute this I'm going to type
802:17 - PS D um X and then type and GP Artisan
802:25 - for example I'm just checking if there
802:27 - is any Artisan Commander running okay
802:31 - ps- a x this will just list the
802:34 - commments and then we are grapping the
802:36 - Artis
802:37 - okay there are no commands running so I
802:39 - am going to execute the following
802:42 - command and hit the
802:44 - enter ignoring input and appending
802:47 - output to no
802:50 - hop okay so this was started and this
802:54 - should be its process ID and now I'm
802:57 - going to execute this ps- ax script
803:00 - Artisan again and we see that there is
803:02 - background common PHP Artisan qyw work
803:06 - time running okay perfect now I'm going
803:10 - to check the database as well so here we
803:12 - have this PHP my admin this is my
803:14 - database I'm going to click to enter in
803:17 - PHP my
803:19 - admin it's going to take few minutes and
803:22 - I'm interested in the files table let's
803:25 - click on the files and we see one which
803:29 - is the root and second which is the
803:31 - folder okay now let's go in the project
803:35 - we actually have verified so if I just
803:37 - reload I am inside the system uh I can
803:40 - close this and now I'm going to upload a
803:44 - file let's upload not so small and not
803:47 - so large file so I will upload
803:52 - this let's go actually in the
803:55 - videos and I will upload this 18
803:59 - megabyte video so I'm going to click
804:02 - open it is uploading on the server we
804:05 - see success notifications and right now
804:08 - if I just reload this I see record right
804:12 - here and let's scroll on the right and
804:15 - we see uploaded on cloud is actually one
804:18 - so this means that it has already been
804:20 - uploaded to Cloud which is actually
804:23 - really awesome and we can check this in
804:26 - lot of logs as well so we are logging so
804:30 - tail-f I'm going to go into
804:33 - storage then double tab and we see logs
804:38 - double tab ll. log okay and let's have a
804:43 - look uploading file on S3 uploaded
804:46 - updating the database so that happened
804:48 - successfully now I'm going to hit enter
804:51 - multiple times just to create an empty
804:53 - area and I'm going to upload another
804:55 - file right here in this case I'm going
804:58 - to make it larger like 51 megabyte I'm
805:01 - going to click open this is uploading
805:03 - first it is uploading on the server
805:06 - okay on our hosting server and that's
805:09 - going to take some time I'm going to
805:12 - actually pause the
805:15 - recording here I'm going to unpause the
805:18 - recording and bring up the terminal as
805:20 - well let's wait we see the Suess
805:22 - notification and look at this so we got
805:24 - these two comments uploading file on
805:27 - this three uploaded updating the
805:30 - database uh it's actually strange how
805:33 - does it manage to upload files on this
805:36 - so
805:37 - fast I am not actually sure maybe it is
805:41 - not actually uploading on
805:44 - S3 but instead giving us the
805:48 - message that it
805:51 - uploaded I think I am right because we
805:54 - have not changed one thing
805:56 - in we have not
805:59 - changed file system dis and it is
806:03 - actually uploading this on a local
806:06 - that's the problem so we're going to
806:08 - change this into
806:09 - S3 hold on so equal
806:13 - S3 then Escape column and W and Q we
806:17 - quit from here okay that was
806:21 - changed this is this is awesome uh I'm
806:26 - going to open this L log
806:29 - again and in this case I'm going to
806:32 - upload smaller file let's choose an
806:35 - image
806:38 - open that that was
806:40 - uploaded here we see that uploaded final
806:43 - three updating the database but I'm
806:45 - going to actually check check if that is
806:49 - uploaded on S3 uh actually the best
806:53 - check will be if I just choose again a
806:57 - slightly larger file
806:59 - like uh like this one which has 10
807:02 - megabyte okay I'm going to open this
807:07 - okay so we should see that uploading
807:09 - file on is three then we should not see
807:13 - uh this uploaded for some time for a few
807:16 - seconds and then we should see it okay
807:19 - so it actually will be approv that the
807:21 - file is in uploading
807:25 - process let's
807:30 - wait okay we see
807:34 - this uh very fast so in the same second
807:39 - so what I think is that probably the
807:42 - changes which I made in the enan is not
807:46 - affected by the commment so I'm going to
807:49 - execute this ps- ax grip artisan and I
807:53 - see this process ID here so I'm going to
807:56 - copy the process ID and execute
808:00 - K-9 and the process ID and hit the enter
808:04 - okay so this will kill the process
808:06 - process and now if I execute P ps- ax we
808:10 - don't see this Artisan command running
808:13 - okay and I'm going to execute now this
808:15 - command Artisan command
808:20 - again okay and this is the now the
808:23 - process ID and we will see that the
808:25 - command is actually running and I'm
808:27 - going to open now logs
808:30 - again
808:32 - tail-f and now I'm going to upload one
808:35 - file again again and hopefully this time
808:38 - it will work as
808:40 - expected uh 7 mgab video
808:45 - Perfect okay that was uploaded let's
808:48 - wait here we see uploading file three
808:51 - then we had two second pose and then
808:55 - uploaded in updating the database okay
808:57 - this is exactly what I was expecting let
809:00 - me actually choose slightly larger file
809:02 - like 34 mgab and I'm going to also check
809:08 - the
809:11 - S3 here we
809:15 - see okay here we see the error
809:18 - which actually uh which actually
809:22 - um
809:24 - was a problem for me uh and I think the
809:28 - reason is that I have not also pushed
809:31 - that composer Json updated version if I
809:34 - check the composer
809:38 - Json I don't see this PSR message right
809:42 - here so this is something I need to push
809:45 - again okay so here is the updated
809:48 - composer Json and here we have that um
809:50 - PSR HTTP message right there so I'm
809:53 - going to comment that change PSR HTTP
809:59 - message package
810:04 - version I'm going to push that then open
810:09 - my
810:10 - server and I'm going to run
810:14 - P okay now my script because of the
810:18 - exception which happened inside the
810:20 - script this qor has been failed and it
810:24 - has been just quit so if I just type ps-
810:28 - A we don't see that running so we're
810:30 - going to start that diamond
810:33 - again and now we will see that running
810:37 - here we go and now I'm going to open
810:40 - that lar a log
810:42 - again and I'm going to
810:45 - upload
810:48 - file testing is the
810:52 - key whenever you deploy the application
810:55 - you definitely need to test it very
810:57 - carefully okay so while this is in the
811:01 - process uh or is it proceeding fast let
811:06 - wait actually we will see the output and
811:09 - the dates as well so it's not going to
811:10 - be a problem so I'm going to go into AWS
811:19 - console I just want to make sure that
811:22 - the file is uploaded
811:39 - let's check in
811:43 - the my bed again so I'm just trying to
811:47 - speed up but I'm making mistakes so we
811:50 - pulled but we haven't run composer
811:52 - install we are going to run composer
811:54 - install by executing PHP composer far
811:59 - because this is the composer version two
812:02 - so
812:03 - composer install
812:10 - okay required package is in the lock
812:13 - file as 2.0 but that doesn't satisfy
812:16 - your constraint understood so we
812:18 - probably need to push composer lock as
812:22 - well I have pushed the composer lock and
812:25 - I need to execute git pull first now
812:29 - this will pull the composer lock and I'm
812:31 - going to execute now PHP composer for
812:34 - install and it is downgrading this PSR
812:38 - HTTP message this is exactly what I
812:40 - wanted to happen now if I execute
812:45 - ps- there's no Artisan command running
812:48 - so I'm going to execute that Artisan
812:51 - command awesome then I will
812:54 - open uh Lara log again and I will upload
812:59 - the
813:04 - file uh let's
813:07 - choose smaller one like 19
813:11 - megabyte click open and we should see
813:14 - right here logs however I'm going to
813:17 - check the file was actually already
813:20 - uploaded and there was a 3 second
813:23 - difference and I'm going to check now in
813:25 - the
813:29 - S3 if uploading on S3 Works successfully
813:33 - so file manager the code ho
813:36 - go inside files we
813:39 - have
813:42 - um today is July 14 so this is the
813:47 - user and we see two files right there
813:50 - okay 19 megab and 7 megabyte okay I'm
813:53 - going to upload
813:55 - one more but let's choose smaller one
814:00 - that has been
814:01 - uploaded refresh now we see three files
814:05 - Okay so
814:06 - uploading on S3 Works successfully and
814:10 - we have that background process
814:14 - running which um basically will check if
814:17 - there is any new file that's going to
814:19 - take that file and upload it on
814:23 - S3 so that's the end of this deployment
814:27 - phase we have deployed our project on
814:29 - custom domain on shared hosting on which
814:33 - we have actually a lot of flexibilities
814:35 - we have FTP access we have SSL
814:38 - certificates we have unlimited number of
814:40 - databases we have email client as well
814:43 - and we have much more additional
814:45 - security as
814:48 - well we have possibility to manage Crown
814:51 - jobs as well for example you can create
814:52 - a crown job which will clean up all the
814:57 - downloaded files which have been
814:59 - downloaded for um Z purposes actually we
815:03 - haven't tested if download works fine so
815:06 - I'm going to just click on this download
815:09 - jpg and let's wait here it started
815:12 - download click on
815:14 - Save uh as you see it has been failed
815:18 - and it has no file right there okay so
815:22 - it looks like download is not
815:26 - working it is trying to download that
815:30 - click on Save but there's no file so it
815:34 - wasn't able to download download it
815:37 - again let's try to download file which
815:40 - we know for sure is on S3 and again
815:43 - let's upload a new file I'm going to go
815:46 - in directory one we have three
815:49 - files let's upload one
815:55 - file that was
815:57 - uploaded here we see four
816:00 - files select this one and click on
816:03 - download
816:05 - then click on Save and we see this no
816:08 - file if I click on that nothing
816:12 - happens to find out what was the actual
816:15 - problem I started debugging it I did
816:19 - couple of logs right here log debug
816:21 - getting the file content from the file
816:24 - path and here I'm just printing the
816:26 - whether the content exists or not so I'm
816:29 - just taking one or zero as an in value
816:31 - of the content if the content doesn't
816:33 - exist that's going to print a zero if it
816:36 - exists it's going to print one okay so
816:39 - then I'm inserting the content into a
816:41 - public dis so I'm just writing that
816:44 - insert it in public disk here is the
816:47 - destination where I inserted and here is
816:49 - the success status whether this is zero
816:53 - or one again if this is one it means
816:55 - that it successfully inserted the file
816:58 - into public disk okay and then finally
817:02 - I'm printing the loging URL which should
817:04 - be returned to the back end so I have
817:07 - made those changes and then I log in in
817:10 - my
817:12 - SSH uh and I just made a pull git pull
817:15 - origin uh main or master and then I open
817:19 - the log files and now I'm going
817:22 - to actually try to download and have a
817:26 - look at the locks so I have already
817:28 - tried this but I'm going to try this
817:30 - once again so I just select the file
817:32 - click on download and we can have a look
817:34 - right here so getting file content and
817:37 - this is the actual file path inserted in
817:40 - public disk and we see that this is the
817:43 - um destination for the public disk and
817:46 - then success returns one so it
817:48 - successfully inserted into public disk
817:51 - what's the problem so Ling URL so this
817:55 - is the URL which does not exist for some
817:58 - reason and having a look at this URL now
818:01 - I know what is the problem okay so the
818:03 - problem is that storage does does not
818:06 - exist in the public folder so this
818:08 - obviously corresponds to public folder
818:12 - and storage doesn't exist there so I
818:14 - think I have not created a storage link
818:18 - ls- LA Public let's check it there is no
818:22 - storage mentioning in the public folder
818:25 - so I'm going to execute PHP
818:28 - Artisan
818:29 - storage link let's hit the enter link
818:33 - has been connected so now see that
818:35 - Public Storage link has been connected
818:37 - to app um storage app public and if I
818:40 - execute right now ls- LA Public I see
818:45 - storage right here okay and now if I
818:49 - execute uh let me try this and if I
818:52 - execute download now and click on Save I
818:56 - see that it has content failed no file
819:00 - we don't see something similar here if I
819:02 - click on this it's going to open and
819:05 - here is my logo I can download this
819:08 - second image as
819:11 - well let's click on
819:14 - that it opens on my second screen here
819:18 - it is and we can even download both
819:22 - files as a
819:24 - zip
819:26 - download
819:28 - and showing folder and we can click on
819:31 - that and we see two files right there
819:33 - and all of them have some size which
819:36 - obviously means that they are valid
819:39 - files okay just like this so uh this is
819:43 - a very small lesson how you can start
819:47 - debugging your problem okay so we needed
819:49 - to understand what was the actual
819:51 - problem why the no file content was
819:55 - displayed whether the file was not
819:57 - actually uploaded on AW ss3 or the file
820:01 - was not successfully downloaded so we
820:03 - started writing logs and more logs you
820:06 - write more information you're getting
820:09 - where the problem might be and finally
820:12 - having a look at the logs we just
820:15 - understood what was the
820:17 - problem right here all right my friends
820:20 - that's it for this video and I hope you
820:22 - learned something out of it if so please
820:25 - hit the like button and check my YouTube
820:27 - channel the code toic as well thanks
820:30 - again and I will see you in the next
820:31 - time