00:05 - [Music]
00:16 - [Music]
00:22 - [Music]
01:03 - hey this is steve with dabble lab
01:05 - welcome to uh where are we day three of
01:09 - five on the live stream for building
01:12 - alexa skills for uh for anybody that was
01:15 - here uh
01:16 - the first couple of days welcome back
01:18 - for anybody who's new welcome we are
01:21 - going today to let me uh
01:26 - over here we're going to first we're
01:29 - going to just start with a a recap of
01:31 - what we talked about yesterday where am
01:33 - i
01:34 - uh here we go so um quick recap
01:37 - yesterday we uh we did an intro to the
01:40 - alexa skills kit cli and we
01:44 - also looked at the alexa skills kit sdk
01:48 - 2.0
01:50 - 2.0 and we talked to
01:52 - okay and we talked about um coding
01:55 - intent handlers and uh we created a
01:58 - couple of handlers in our example
02:00 - application that we started building
02:02 - which
02:03 - is our example skill rather which is a
02:06 - skill for free code camp that we're
02:09 - hoping to use as a live example but
02:11 - we'll uh we'll see how it goes
02:13 - and then toward the end of yesterday we
02:15 - started working on
02:18 - wiring up some code to call an external
02:20 - api and specifically what i was trying
02:23 - to do was to get a list of the
02:27 - articles that are posted on the free
02:29 - code camp median site and ran into
02:33 - an issue so we didn't finish that up but
02:35 - that's a good segue into what we're
02:37 - going to do today because we're going to
02:38 - talk about debugging so i'm going to
02:39 - just pick up where
02:41 - i left off yesterday
02:43 - bugs and all and and try to continue on
02:46 - uh from there
02:48 - so
02:48 - today uh we're gonna do a uh an intro to
02:53 - debugging to to start it out
02:55 - and then we're going to um talk about
02:58 - the uh the skill manifest and we're
03:00 - gonna end today with a discussion on
03:03 - beta testing and hopefully
03:05 - uh provide anybody that wants to do this
03:08 - an opportunity to uh to test the skill
03:10 - in test mode on their end and i am also
03:15 - i didn't do this but i meant to set up a
03:18 - github repo for this stuff today uh so
03:20 - i'll uh i'll do that before tomorrow so
03:22 - anybody that wants to uh to pull the
03:24 - code will be able to uh to do that
03:27 - so let's um let's get into let's get
03:31 - into it if uh
03:34 - let me
03:35 - let me go back to where we left off
03:37 - exactly yesterday so
03:40 - if you recall from yesterday if you were
03:42 - on if you if you weren't on let me just
03:44 - walk through what we did quickly
03:46 - yesterday and then i'm going to
03:48 - start
03:49 - with the testing the skill and we're
03:51 - going to get the same error and then i'm
03:53 - going to go through how we would go
03:55 - about debugging that error
03:57 - so yesterday we created uh
04:01 - let's see where we left off was um this
04:04 - recent articles intent handler and uh
04:09 - this is where
04:11 - i was getting
04:12 - the the error so i was trying to use
04:15 - this npm module to uh to pull a json
04:19 - feed
04:20 - from medium and
04:22 - was getting an error uh so let's
04:25 - let's just
04:26 - uh
04:28 - let me just get over back over here and
04:30 - we'll
04:32 - start
04:33 - where we left off
04:35 - so
04:36 - let's see i did um
04:40 - [Music]
04:43 - so i'm going to redeploy
04:45 - the lambda function
04:51 - and
04:52 - let's see
04:53 - so alexa open free code camp
05:02 - alexa
05:03 - open free code camp
05:08 - okay hello welcome to the free code camp
05:11 - skill i can tell you about recent medium
05:14 - articles or scheduled live streams what
05:16 - would you like
05:18 - medium articles
05:22 - sorry i can't understand the command
05:25 - let's say again okay so this is the
05:27 - error that we are getting alexa stop
05:29 - and um i'm gonna i can't understand the
05:32 - command please say again alexa stop
05:36 - goodbye so um i want to show you uh a
05:39 - couple of different ways
05:41 - we could do a whole well maybe not a
05:44 - week maybe a week on just debugging and
05:47 - and error
05:49 - working through errors so i'm going to
05:51 - just touch on a couple of the uh the the
05:53 - easiest or the most straightforward ways
05:56 - to go at it
05:57 - so with the the new sdk
06:01 - when an error is thrown like i'm using
06:04 - in this here using uh promises and
06:08 - when an error occurs somewhere in here
06:12 - it triggers
06:16 - this
06:17 - there's like an error handler this error
06:19 - handler down here and by default with
06:22 - this template that we used it just says
06:25 - um
06:25 - this sorry i can't understand the
06:27 - command please try again
06:29 - um what i do sometimes i mean it's just
06:32 - kind of a cheat but
06:35 - while i'm developing you wouldn't want
06:36 - to do this on a live skill but i'll just
06:38 - do something like this
06:41 - [Music]
06:49 - and this way i'm going to redeploy the
06:52 - lambda function this way when the error
06:54 - occurs it's going to uh i'm going to be
06:57 - able to hear what the error message was
06:59 - and this can be a quick hack to
07:03 - quickly figure out without digging
07:04 - through the logs what's going on but
07:06 - alexa
07:07 - open free code camp
07:10 - hello welcome to the free code camp
07:13 - skill i can tell you about recent medium
07:15 - articles or scheduled live streams what
07:18 - would you like
07:20 - media articles
07:24 - the error is could not find handler that
07:26 - can handle the request type intent
07:29 - request requested amazon one dot echo
07:32 - api dot request dot one a seventy one
07:35 - sixty two d six a fifty nine d forty six
07:38 - alexa stop
07:39 - so he got that
07:41 - um
07:42 - so let me so that wasn't actually the
07:44 - error that i thought we were getting but
07:46 - let me um let me try something else
07:48 - alexa open free code camp
07:50 - that error just
07:52 - didn't find
07:54 - the utterance i can tell you about
07:55 - recent medium articles or scheduled live
07:58 - streams what would you like medium posts
08:03 - the error is assignment to constant
08:05 - variable
08:07 - okay alexa stop so
08:10 - from that i
08:14 - alexa stop
08:16 - goodbye
08:17 - from that i can i i can guess what the
08:19 - uh the problem is but i want to show you
08:21 - how else you would get to it um so you
08:24 - can go through and look at the logs
08:27 - for
08:28 - the lambda function
08:30 - and
08:30 - you can
08:32 - you can also see in the code here
08:36 - let's see
08:42 - in the error function you see um by
08:44 - default it uh logs to the console and so
08:48 - if you go into
08:50 - your lambda function and then go to
08:53 - monitoring
08:54 - and then from here
08:56 - jump out to the logs
09:04 - and this is loading
09:05 - taking a
09:06 - second while it's loading i'm gonna read
09:09 - some of the comments
09:11 - which ide i'm using the ide i'm using is
09:14 - visual studio code you can go to
09:16 - code.visualstudio.com
09:18 - to grab that it's open source and i like
09:22 - it a lot
09:26 - why does it always say free code camp
09:28 - skill
09:29 - um
09:31 - i'm i'm not sure i understand that
09:33 - question uh can you
09:36 - karthik can you um
09:38 - can you uh try to clarify that let's see
09:42 - okay um back to
09:45 - back to this and i'll come back to that
09:48 - uh
09:49 - so in here
09:52 - a lot of times what i'll do is just go
09:54 - to text because it's easier uh to read
09:56 - but um in here
09:58 - i can see that error that got written
10:01 - out the error handled here and then
10:04 - assignment to constant variable so i've
10:07 - got a an error
10:10 - it's a javascript error i'm trying to
10:12 - reassign a value to a constant so i
10:16 - should have declared the variable with
10:17 - something other than const and um
10:21 - if you're if you're not familiar with uh
10:24 - with with javascript there's actually if
10:26 - you go to
10:27 - um well there's a lot of tutorials on
10:29 - free code camps youtube channel and then
10:32 - i did one also that's sort of in the
10:34 - context of doing
10:36 - alexa development and if you go to
10:38 - youtube.com
10:40 - dabble lab there's a
10:43 - node.js intro to node.js for
10:46 - developing alexa skills and the first
10:49 - video or first or second video i think
10:50 - talks about um
10:53 - variables and so let's
10:56 - go
10:56 - see where that problem is uh so in this
11:02 - handler
11:04 - here
11:05 - yeah so
11:06 - here's the problem so i declared this
11:09 - speech text as a constant
11:11 - and
11:13 - i'm trying to reset the value of that
11:15 - constant down here
11:17 - and that i think is probably what's
11:20 - causing the uh the issue but
11:25 - let's see so right now just um for for
11:28 - testing
11:29 - what i'm doing here is
11:32 - grabbing uh the the very first record so
11:35 - it's an array that comes back of of um
11:39 - posts medium posts and i'm just trying
11:41 - to grab the title from the first one so
11:43 - let's
11:44 - re-deploy this and see if that fixes it
12:02 - yeah yeah that's um i i see what you're
12:05 - asking now about why it keeps saying
12:08 - free code camp that's just
12:10 - this here this could be anything yeah
12:14 - in fact you had some um
12:16 - you
12:17 - i'll say phoenix
12:20 - you had some really good suggestions for
12:23 - content tomorrow or yesterday so i think
12:25 - we're gonna grab uh some of those and
12:28 - use them to clean this up in a little
12:30 - bit so let's um let's test this now that
12:32 - that's all deployed so alexa open free
12:35 - code camp
12:37 - sorry i'm not sure about that
12:40 - alexa
12:41 - open free code camp
12:44 - hello welcome to the free code camp
12:47 - skill i can tell you about recent medium
12:49 - articles or scheduled live streams
12:52 - what would you like
12:54 - medium articles
12:58 - how i built a job scraping web app using
13:01 - node.js
13:03 - okay so now it's working now we we got
13:06 - the
13:07 - uh we got the array from
13:10 - medium and we got the first item in the
13:13 - array and we got the title so
13:16 - we'll need to clean this up and
13:19 - respond with something a little more
13:21 - meaningful to the user but we've got at
13:24 - least the um
13:25 - the the bones of the code working so i'm
13:28 - gonna leave that
13:30 - for
13:31 - right now and um
13:34 - transition to
13:36 - i want to try to by the end of the day
13:39 - today and i jumped around in my
13:42 - plan um
13:44 - i recapped what we talked about
13:46 - yesterday but i knew i didn't really get
13:48 - into everything that i want to talk
13:49 - about today
13:50 - so um
13:52 - so today i want to get into like i said
13:54 - debugging which we just started talking
13:57 - about and the skill manifest in beta
14:00 - testing but i'd like to also clean this
14:02 - the skill up a little bit so um it's
14:06 - less uh hacked together and a little
14:08 - more polished so we'll do that today
14:10 - as well
14:11 - um
14:12 - coming back over here the uh
14:17 - the last point i want to make on
14:19 - debugging and this is like super simple
14:22 - uh debugging is
14:23 - you can um debug in the uh uh in the the
14:28 - console
14:30 - through
14:31 - developer.amazon.com also
14:34 - and let me show you that
14:36 - so
14:44 - well actually through the um aws console
14:46 - but i'm going to get the request
14:50 - um
14:52 - i'm going to get the request from
14:54 - inside the alexa developer console let
14:56 - me just grab that real quick and i'll
14:58 - show you here
15:07 - [Music]
15:23 - [Music]
15:31 - okay
15:33 - so
15:34 - in here
15:39 - and i'm not go although you can test we
15:41 - talked about this on the the first day
15:43 - you can test in here
15:45 - uh
15:46 - but what i'm doing right now is i'm not
15:48 - really going in here to test as much as
15:49 - i'm going in here to uh to get
15:52 - the
15:54 - example of a request
15:57 - and then i'm going to use that to test
16:03 - while my internet is running really slow
16:05 - or something here
16:11 - okay uh
16:36 - so now
16:39 - i didn't get the error here because we
16:42 - fixed it but what i'm what i'm doing is
16:44 - i'm just copying this request json here
16:48 - the other way that i could test is i
16:49 - could go over here to the function and i
16:52 - think i talked about this on the first
16:53 - day actually too so this might be a uh
16:57 - this might be a review but um just in
16:59 - case
17:00 - so uh here
17:01 - in the lambda function you can go test
17:04 - and then
17:04 - [Music]
17:11 - paste the json in here
17:14 - and
17:15 - i'm going to create that as a test
17:18 - and then i can run the test here which
17:21 - right now it's going to succeed
17:23 - so
17:24 - no
17:26 - nothing's going wrong but if i
17:28 - change this back and recreate that um
17:32 - that error which was
17:35 - where was it
17:38 - [Music]
17:44 - show you the last piece of
17:47 - testing here so
17:51 - okay so i'm redeploying the lambda now
17:54 - but i'm really
17:55 - just redeploying it to recreate that
17:58 - error
18:00 - and
18:01 - like i said i mean there's
18:03 - better ways we could do a whole course
18:04 - on testing than what i'm showing you
18:07 - right now but this is the quickest
18:09 - way to uh to get started with it so
18:13 - so if i run the test now um i get the
18:16 - response back
18:18 - um but i can also go down here and i can
18:21 - see
18:22 - that council
18:23 - log info here so without having to dig
18:26 - through the uh the log files so that's
18:29 - just another way to uh to to quickly
18:33 - um figure out what's going on if you're
18:35 - getting errors as you're doing
18:36 - developing so so three different ways
18:38 - you can go through the the cloud watch
18:39 - log files
18:41 - for the lambda function you can use a
18:44 - simulated test like use an example
18:46 - request
18:48 - or you can the third way in the first
18:50 - way that we talked about is in the
18:53 - error
18:54 - intent handler
18:57 - you can just
18:59 - wire this up to read back the uh
19:02 - the message the error message that's
19:04 - coming you can usually figure out what's
19:05 - going on from that again you don't want
19:07 - to leave that in there when the skill
19:08 - goes live with three different ways to
19:10 - go at it
19:12 - all right any um any questions at this
19:15 - point before i move on let me read real
19:17 - quick here
19:27 - yeah so it looks like karthik's got the
19:29 - questions covered thank you cardig
19:38 - okay all right well let's um
19:40 - let's keep uh let's keep rolling let's
19:42 - keep moving on
19:44 - so the next thing i want to do is um
19:49 - i want to clean this up a little bit
19:51 - we're doing fine on time we're just at
19:54 - 20 minutes into it so we've got got some
19:56 - time yesterday
19:58 - we had um a lot of really good
20:02 - suggestions that you guys provided for
20:05 - some things that we could add to it and
20:07 - i
20:08 - uh tried to make some notes from the uh
20:10 - the log and some of the things that uh
20:13 - some of the ideas that that came back
20:16 - were
20:17 - i think just just clean up the the intro
20:19 - all together
20:21 - so i'm going to use um this was provided
20:24 - by phoenix who's on
20:27 - right now so i think we
20:29 - um want to include this you know
20:32 - something that says what is free code
20:33 - cam
20:34 - and then
20:35 - a lot of
20:36 - these ideas i think we could boil into
20:39 - just sort of faq kind of functionality
20:43 - and so um i think that's probably the
20:46 - way to handle all of the not all of them
20:48 - but most of them some of them though
20:51 - like
20:53 - how many hours of content are on youtube
20:56 - um this one
20:58 - the the answer is variable because
20:59 - that'll be changing so we'll probably
21:01 - want to figure out how to get that from
21:03 - an api if we did that
21:05 - and the multi-turn dialogue we're gonna
21:07 - do this uh i am thinking that we will
21:11 - probably get
21:12 - to uh to that on here's here's my plan
21:16 - for the rest of the week so um
21:19 - a day four
21:20 - we'll uh we'll get into
21:23 - using slots and custom slots and and
21:25 - we'll we'll do that in an entity
21:27 - resolution so i'm gonna save the faq
21:31 - adding the faq for tomorrow because i
21:33 - think we can do a whole day on that
21:36 - and then day five um which will be
21:39 - friday
21:40 - this friday will talk about using
21:43 - multi-turn dialogues and then also i
21:46 - think talking about saving information
21:48 - to dynamodb is something that we ought
21:51 - to cover and then this certification
21:53 - process if we have the skill ready and
21:55 - it's okay with free code camp maybe we
21:57 - can actually submit it for certification
22:00 - um
22:01 - i thought maybe we could do that today i
22:03 - don't think we're going to be able to do
22:04 - that but what we can do is the beta test
22:07 - and so we'll go through that process
22:10 - right now
22:12 - actually so we talked about debugging
22:15 - the skill manifest is the the next thing
22:18 - that we're gonna talk about right now
22:20 - so in the um in the developer council
22:24 - when we went through this on day one
22:27 - we talked through creating the
22:30 - interaction model and
22:32 - providing all of the skill configuration
22:34 - information through the web browser
22:36 - but all of this can be configured
22:40 - as part of your skill project and
22:44 - it is
22:45 - all of the
22:46 - details are in this
22:49 - file here for the well most of them are
22:52 - the
22:53 - like we talked about the invocation name
22:54 - and the model stuff is is
22:56 - in here but the
22:58 - um the the details for the skill are in
23:02 - here
23:03 - and um the the example that is provided
23:06 - with the default template the greeter
23:10 - template that is uh what we started with
23:13 - um doesn't provide everything that you
23:17 - would need to um to to complete the the
23:22 - submission if you were going to submit
23:24 - it for
23:25 - um
23:26 - certification
23:28 - but the uh i've got that in
23:33 - well actually any one of the if you use
23:35 - one of the templates from
23:36 - skilltemplates.com i've uh we've added
23:39 - those in there
23:40 - so the skill.json so for example um
23:45 - the icon urls uh
23:47 - and i'll just
23:50 - [Music]
23:51 - grab these for right now just to show
23:54 - you
23:56 - and we'll also
23:58 - [Music]
24:07 - we'll also
24:09 - need
24:10 - just as an example so um in the
24:12 - documentation you can get
24:15 - an example of all of the different
24:18 - options that are available here for the
24:20 - manifest file the configuration stuff
24:23 - or you can use
24:24 - most of what's required at least for
24:26 - custom skills is in
24:28 - actually all of what's required for
24:30 - custom skills is in the
24:33 - startup template examples so you can use
24:36 - those as well
24:38 - and
24:44 - the repo will be on github i i meant to
24:46 - put it out there today for this code but
24:48 - i'll uh i'll definitely have it out by
24:51 - tomorrow
24:54 - um let's see
24:59 - in this privacy and compliance stuff
25:01 - here we need
25:03 - [Music]
25:08 - which isn't included i guess for obvious
25:10 - reasons
25:11 - [Music]
25:13 - you need your own
25:14 - privacy policy and everything
25:16 - um
25:18 - but
25:19 - uh so now
25:22 - and then of course we would want to go
25:23 - through here and finish up the uh
25:27 - the summary short description
25:30 - and
25:33 - let's say
25:34 - skill for
25:37 - free code camp
25:40 - i'm sure somebody can come up with
25:41 - something better than this
25:44 - and then
25:46 - for the example phrases
25:48 - uh we want to update this too
25:55 - and
25:57 - i'll say
26:00 - would we
26:01 - ask free code camp
26:06 - code
26:08 - camp
26:10 - for recent
26:14 - uh recent medium posts
26:21 - and ask free code camp
26:24 - for
26:27 - what was the other one we were gonna do
26:28 - let's see
26:30 - let's go back to our dialogue notes from
26:32 - yesterday
26:35 - um
26:37 - what the most
26:38 - as free code camp what the most recent
26:40 - videos are
26:45 - [Music]
26:50 - and uh yeah then we would want a more
26:53 - detailed description all of this stuff
26:55 - is what is going to show up in the um
26:59 - the public skills store
27:04 - so
27:12 - so when the
27:16 - when a user goes and searches
27:19 - for skills in the
27:21 - alexa companion app or in the skills
27:24 - store
27:25 - they're going to show up here so
27:29 - well let me just
27:31 - grab jeopardy to show you
27:33 - so this is the uh the skill name here
27:36 - you can see and then the example phrases
27:39 - are what's showing up
27:41 - uh here
27:43 - and then
27:44 - the longer description is is this here
27:49 - all right
27:51 - that is what
27:53 - we're setting up in here so once um once
27:55 - this is all
27:56 - uh configured and keywords are in here
27:58 - too so there's there's more than what
28:00 - i'm going to do but just for uh for time
28:03 - today i'm i'm not going to go out and
28:05 - or i'm not going to fill all this out
28:07 - but you would want to before you publish
28:09 - it live but we're going to go ahead and
28:12 - deploy this
28:15 - and this time i'm not going to use the
28:17 - um the dash t because i do want to
28:20 - deploy
28:21 - the changes to the skill and rebuild the
28:24 - interaction model so let me use the full
28:27 - deploy
28:29 - [Music]
28:35 - [Music]
28:38 - yeah any ideas for what we ought to
28:40 - include in the skill keep those keep
28:42 - those coming out um go through
28:45 - tomorrow
28:47 - and pull out new ideas and we'll try to
28:49 - get as much of this
28:50 - in as we can
28:55 - and that'll be
28:57 - maybe maybe there will be a little bit
28:59 - of time today i don't want to spend time
29:00 - just updating content because i want to
29:03 - save as much time as we can for actually
29:06 - doing
29:06 - uh some some coding stuff
29:13 - but what i'm going to do
29:15 - next is
29:16 - um
29:19 - i'm going to show you how to set up beta
29:21 - testing
29:23 - for a skill
29:24 - and then for anybody that has an echo
29:27 - that would like to uh to beta test this
29:31 - i have a
29:33 - let's see
29:34 - had
29:36 - a um
29:37 - [Music]
29:39 - a url to a google
29:43 - form let me grab that real quick
29:51 - [Music]
29:59 - and i'll post that in the uh in the
30:01 - comments so if you want to you can just
30:03 - uh provide your uh your email address
30:06 - and i'll invite you to uh to beta test
30:09 - it
30:11 - so that you can test it on your echo if
30:14 - you want to do that
30:15 - okay so now that it's all uh deployed
30:18 - let's go back over here
30:22 - and take a look
30:24 - at
30:25 - the changes
30:41 - okay so
30:46 - we're gonna go over here to
30:48 - certification
30:50 - and
30:56 - in the certification
30:58 - process we're not going to go
31:02 - live yet
31:09 - but what we are going to do is and this
31:11 - has changed just a little bit so
31:15 - this functional test
31:18 - looks new
31:34 - okay so this is uh this is different
31:36 - that isn't what i wanted that isn't what
31:37 - i wanted let me withdraw that
31:40 - what i wanted was the
31:47 - [Music]
31:53 - okay that's perfect
31:57 - [Music]
32:09 - okay so i'm gonna have to um
32:12 - i'm gonna have to figure out what's
32:13 - going on there alexa open free code camp
32:19 - hello welcome to the free code camp
32:22 - skill i can tell you about recent medium
32:24 - articles or scheduled live streams what
32:27 - would you like
32:31 - median articles
32:35 - the error is assignment to constant
32:37 - variable
32:40 - alexa stop
32:42 - goodbye
32:52 - [Music]
32:54 - okay yeah so this is this stuff was set
32:58 - with the manifest in here
33:01 - and
33:03 - used to be that
33:05 - like very recently
33:08 - [Music]
33:17 - okay looks like this is letting me with
33:20 - draw it
33:22 - uh let's see
33:48 - hmm
33:55 - um
33:56 - all right we're gonna i'm gonna come
33:58 - back to this because something's changed
33:59 - here it used to be that you could uh
34:02 - send it through beta test and i'm not
34:04 - seeing that now so i need to
34:07 - figure out why so let's um
34:14 - [Music]
34:17 - here's our icons came through this time
34:20 - which is good
34:25 - all right
34:26 - i'm going to come back to that let's um
34:28 - let's keep
34:29 - keep going here i'm not sure
34:32 - where that went i'm
34:34 - guessing it's probably been uh probably
34:36 - been moved but i'll have to figure that
34:37 - out
34:38 - um okay the um
34:42 - so i guess we can we've still got time
34:44 - so we're
34:46 - why don't we just go ahead and move into
34:50 - uh some of what i wanted to talk about
34:51 - on day four and we will
34:55 - talk about using uh slots how about we
34:58 - do that
35:00 - all right
35:05 - the distribution tab all right
35:08 - let me actually let me go back to this
35:10 - [Music]
35:19 - oh i see i didn't finish this up
35:23 - okay here here's what i was looking for
35:26 - all
35:28 - right so the beta test here is where
35:34 - you would enter your email address as
35:36 - the admin
35:41 - and then down here you would add the
35:43 - email addresses of anybody that you
35:47 - wanted to have as a tester as a beta
35:49 - tester
35:50 - and so the email address that you um
35:52 - that you provide here needs to be an
35:54 - email address that they're using with
35:56 - their amazon echo so it needs to be
36:00 - an amazon
36:01 - account but i will do
36:05 - as an example going to karthik
36:11 - and uh
36:15 - add him
36:16 - but anybody else i'll post uh in the
36:21 - i'll post in the uh the the chat a link
36:24 - like i said to
36:27 - the
36:28 - here we go
36:30 - google form
36:35 - [Music]
36:41 - and then if you want
36:43 - to be a beta tester
36:46 - i'll add you to this
36:50 - so there is uh there's the link so
36:53 - anybody that wants to uh get a beta test
36:56 - invite i'll i'll do that after the the
36:58 - stream today but you'll be able to
37:00 - uh enable the skill and you'll just see
37:03 - how that whole process works so if you
37:04 - haven't done it before you'll see what
37:06 - it looks like on the the beta test side
37:09 - of it so
37:11 - that um yeah that
37:13 - thank you ken for that direction i was
37:18 - lost
37:19 - appreciate that okay um
37:23 - yeah we've still got we still got 20
37:25 - minutes so let's uh let's
37:28 - let's keep going let me
37:30 - look to see if there's any
37:32 - questions for a second and then we will
37:36 - move on
37:55 - okay
37:58 - all right
38:00 - uh yeah let's keep going let's go into
38:04 - let's go into using slots
38:07 - so i'm going to
38:10 - i'm going to use
38:11 - because
38:13 - we've got a lot of what the ideas that
38:16 - we had a lot of the functionality is
38:19 - um
38:22 - kind of faq ish
38:24 - i thought like we could maybe just set
38:27 - up an faq within this skill
38:30 - and
38:31 - actually there is
38:35 - a new uh skill template that we
38:39 - had been working on
38:42 - let's see if
38:46 - it is
38:48 - out there i think it is
38:54 - that has some really similar
38:56 - functionality so i'm going to grab that
38:58 - remember from yesterday ask
39:01 - new
39:02 - template
39:04 - url
39:08 - skill templates
39:11 - dot com slash templates
39:14 - jason
39:19 - and
39:22 - it's this one here this knowledge base
39:23 - starter
39:30 - and this one
39:32 - has
39:34 - this is this is basically an faq skill
39:37 - so um i'll show you the the code and
39:40 - then we'll
39:41 - um grab we'll grab some of the uh the
39:44 - code here and merge it into
39:47 - our free code camp skill
39:49 - um so
39:51 - what uh what's going on here there's two
39:54 - things i want to show you
39:56 - um the model first of all so
40:00 - when we talked quickly day one about um
40:04 - slots i mentioned that slots are kind of
40:07 - parameters so
40:09 - during a uh dialogue between the user
40:12 - and the skill
40:13 - um the
40:15 - oftentimes the um the the intent is
40:18 - going to need information from the user
40:20 - to fulfill whatever it is that you want
40:21 - to do and so um the the information or
40:24 - the parameters that the skill is going
40:27 - to use are called slots and there's
40:28 - basically two different types of slots
40:31 - there's
40:33 - built-in slots and then there's custom
40:35 - slot types so built-in slots actually
40:38 - let me go over here
40:46 - and we're going to do this using the ask
40:49 - cli i'm not going to change anything in
40:52 - here but i'm just going to
40:54 - show you in here
40:57 - so
40:59 - in here we've got our intents
41:02 - and
41:04 - we'll just
41:05 - actually no i said i'm not gonna do that
41:07 - uh
41:11 - uh and then there there's also slots and
41:14 - there's
41:16 - if i create a slot here well let me go
41:19 - down here and choose add that way i
41:21 - won't have to add it
41:22 - so there's two different kinds of
41:25 - slots there's custom slots and then
41:28 - there is
41:31 - built-in slots and the built-in slots
41:34 - there's
41:35 - uh slot types there's a lot of them that
41:38 - that amazon provides that will do things
41:41 - like uh provide you with dates and times
41:44 - and uh and numbers so um if it's a
41:47 - common
41:48 - type of information data that you're
41:51 - trying to get to chances are that
41:53 - there's a slot type for it so
41:55 - you you want to look at what slots are
41:58 - available built in first before you go
42:01 - creating your own and the one that we're
42:03 - going to use for
42:05 - the
42:05 - q a example is
42:10 - going to be a custom one and the reason
42:12 - that
42:13 - we're going to use a custom one is
42:14 - because the we don't know what the the
42:17 - values are that the user is going to
42:19 - provide or what type and so
42:21 - in this
42:24 - knowledge base starter
42:25 - i've got a
42:27 - custom type
42:29 - that is called question values and this
42:32 - is what we're gonna use for uh for our
42:35 - example but let's um let's do this
42:39 - [Music]
42:44 - ah let's see
42:47 - [Music]
43:02 - okay let's um
43:06 - how can we keep this
43:08 - simple as an example
43:11 - why don't we just why don't we just
43:13 - start with a simple example and then
43:15 - we'll make it more meaningful just to uh
43:19 - just to show you so i'm gonna go into
43:21 - here and i'm gonna create a
43:24 - new
43:25 - handler
43:27 - um
43:28 - called
43:30 - let's see we'll say
43:32 - hello handler just to show the slots
43:38 - [Music]
43:53 - and
43:55 - we're going to create a new intent
43:58 - called hello intent
44:02 - and remember we need to when we add a
44:04 - new handler we need to register it so
44:08 - down here or export it
44:12 - and so
44:15 - there's that and now um
44:18 - what else do we want to do here so now
44:21 - what we want to do is we want to
44:24 - set up
44:26 - in our
44:27 - model we want to set up this
44:30 - intent and in that intent
44:32 - we're going to let me copy this
44:35 - we're going to have a slot
44:37 - and we're going to prompt
44:39 - the
44:41 - person for their name
44:43 - so
44:48 - let's do that here
45:00 - [Music]
45:03 - we'll call this hello intent
45:09 - [Music]
45:12 - and
45:14 - [Music]
45:22 - we'll give it some examples
45:27 - utterances
45:32 - and
45:33 - just i'll stub it out first and then
45:35 - we'll
45:36 - put a slot in there
45:39 - get rid of this
45:43 - [Music]
45:48 - say
45:50 - hello
45:51 - what is your name
45:56 - [Music]
46:00 - and
46:02 - let's build that and push it out
46:16 - and we'll test it
46:22 - [Music]
46:30 - [Music]
46:32 - oops
46:34 - [Music]
46:42 - okay
46:44 - all right well that's building i'm gonna
46:45 - look at the uh the questions if anybody
46:48 - has any questions or thoughts
47:00 - karthik
47:01 - looks like you got them all
47:07 - okay well we'll let that uh let that
47:09 - build here for a second we're how are we
47:12 - doing on time we've got about 10 minutes
47:13 - so that should give us plenty
47:16 - of time
47:18 - [Music]
47:29 - [Music]
47:42 - [Music]
47:43 - okay
47:50 - all right so that's all built so let's
47:52 - um let's test it out just to see if
47:54 - we're getting this uh this hello intent
47:56 - to fire alexa open free code cam
48:01 - sorry i don't know that one
48:04 - alexa open free code camp
48:08 - hello welcome to the free code camp
48:10 - skill i can tell you about recent medium
48:13 - articles or scheduled live streams what
48:16 - would you like
48:17 - hello
48:19 - hello what is your name
48:22 - my name's steve
48:25 - and you can see it's not doing anything
48:27 - now because there's uh no it's not
48:30 - waiting for
48:32 - a response
48:33 - and
48:34 - um it is not got a slot in it so that's
48:38 - what we're going to do now is we're
48:39 - going to
48:41 - add a slot
48:43 - that is going to collect the name and
48:45 - this will be um
48:48 - this will be an example of a
48:53 - we'll use
48:54 - there's one built in for first names and
48:56 - i'm going to use that one for this
48:57 - example so
48:59 - go in here into my model and now
49:02 - i'm going to uh whoops
49:12 - [Music]
49:14 - copying the right one
49:19 - [Music]
49:26 - okay
49:30 - all right so now i've added a slot
49:32 - and um
49:34 - the
49:35 - [Music]
49:38 - slot is
49:40 - named name the parameter so now i can
49:42 - say
49:43 - hello
49:44 - something like hello
49:49 - my name is
49:51 - steve well
49:53 - name
49:57 - like that or
49:59 - [Music]
50:01 - hi
50:03 - i'm
50:04 - name
50:07 - or
50:08 - maybe just
50:10 - [Music]
50:12 - name
50:13 - like that
50:15 - and what i want to do is well let's
50:18 - oh no let me add the code so what i want
50:20 - to do uh is
50:22 - when the
50:24 - user response
50:26 - um
50:28 - i want to
50:32 - respond with
50:36 - something let's see
50:38 - how i'm going to do this
50:45 - let's go back over here and what i want
50:48 - to do is i want to grab the value of
50:50 - their name so i'm going to get that from
50:52 - the handler input
50:55 - and let's see
50:58 - so um let's get rid of this now
51:02 - [Music]
51:05 - and so what's going on here is the uh
51:07 - i'm setting up this
51:10 - variable name slot here and setting it
51:13 - to the value of
51:15 - the um the the the value that's coming
51:18 - over in the json which is in the request
51:22 - that's sent from the alexa service
51:24 - and um i'll i'll show you that in a
51:27 - second here
51:29 - uh and then i'm
51:31 - including that or using that as part of
51:33 - my response back so now i'm just gonna
51:34 - say something like um to test this let's
51:37 - deploy it
51:41 - to test it i'll do something like
51:44 - alexa ask
51:46 - well alexa stop
51:53 - okay i've got a an error here
51:56 - let me go back and fix that
52:12 - [Music]
52:20 - [Music]
52:38 - all right let that finish deploying and
52:40 - then we'll test it out and i
52:42 - think that is
52:43 - probably as far as we're going to go
52:45 - today but let me know while this is
52:48 - building if anybody has
52:50 - any questions up to this point
53:04 - um
53:21 - um on your question about using uh or
53:24 - generating code through skillinator io
53:27 - i think that's a really good tool i
53:29 - haven't used it in a little while but
53:31 - for creating like just a a an endpoint
53:34 - that you can use for testing i think
53:35 - it's pretty awesome i'm pretty sure it's
53:37 - been updated for
53:39 - the uh the 2.0 sdk but i haven't looked
53:43 - at it recently um i've used it before
53:45 - though with the 1.0 sdk and it was a
53:47 - super helpful tool
53:49 - and there is also i saw a question from
53:52 - somebody yesterday about generating
53:55 - i i tried to find it i'll look again
53:57 - before the course is over but there is a
54:00 - tool out there for um
54:02 - generating like utterance patterns
54:04 - it's uh like a script and i can't i've
54:07 - got the link somewhere i'll find that
54:09 - but um and and post it but there is one
54:12 - out there
54:13 - uh let's see so i think we can try this
54:17 - now we'll see
54:18 - alexa
54:20 - tell free code camp my name is steve
54:24 - hello welcome to the free code camp
54:26 - skill i can tell you about recent medium
54:29 - articles or scheduled live streams what
54:32 - would you like
54:34 - alexa stop
54:36 - goodbye
54:40 - alexa
54:41 - tell free code camp
54:43 - hello my name is steve welcome to the
54:45 - free code camp skill i can tell you
54:48 - about recent medium articles or
54:50 - scheduled live streams what would you
54:52 - like
54:54 - hello my name is steve
54:57 - hello steve
54:58 - it's nice to meet you
55:00 - okay so the the dialogue flow on that's
55:03 - not super smooth we've got to go back
55:04 - and and clean this up so that it makes
55:06 - sense you wouldn't have somebody just
55:08 - going into the launch and
55:10 - uh knowing you know that they could say
55:12 - that their name is steve but we'll we'll
55:14 - clean all of that up
55:16 - and um
55:17 - again i'll push this code out to
55:20 - a github repo tonight so that for
55:22 - anybody that wants it you can get it
55:24 - and tomorrow
55:26 - we're going to uh let's see what we're
55:30 - going to talk about tomorrow we're going
55:31 - to
55:33 - um talk a little bit more about using
55:36 - slots uh just because i kind of crammed
55:38 - it in at the end here and i want to
55:41 - spend a little bit more time on it and
55:42 - um
55:43 - and then we'll get into using custom
55:45 - slots and
55:47 - entity resolution and this is where i'm
55:49 - going to get into the faq functionality
55:52 - and so we'll uh we'll look again at the
55:54 - example in the knowledge base starter
55:56 - and then we're going to incorporate that
55:58 - into you into here so that the user can
56:03 - get
56:03 - answers to a lot of the uh the idea
56:06 - questions that we got uh from yesterday
56:09 - and
56:11 - yeah and for anybody that filled out the
56:13 - um the google form i'll also send out an
56:16 - invite to uh to test the skill to beta
56:19 - test the skills so as we're doing this
56:20 - you can test it on your own echo if you
56:22 - want to do that
56:23 - so that is it for today if anybody has
56:26 - any questions i'll um just i'll stay on
56:29 - and be watching those thanks so much for
56:32 - uh hopping on today and i look forward
56:35 - to hopefully seeing you again tomorrow
56:38 - thanks so much
56:39 - [Music]
64:17 - you