00:00 - [Music]
00:07 - with mommy
00:09 - should I say he has I'd ask let me stay
00:12 - here it's design and yes I do speak a
00:14 - little bit of German because I've lived
00:15 - here for eight years when I was a kid so
00:17 - it's always really nice to come back
00:18 - here because there is a lot of memories
00:20 - involved and it's been 23 years since
00:22 - the last time it snowed on me so I'm
00:24 - very much looking forward to tomorrow so
00:29 - I'm a front-end developer and over the
00:32 - last the last three years I've been
00:34 - doing a lot of work with SVG because SVG
00:36 - excites me
00:37 - it is both an image format and an object
00:39 - and the document format and there's so
00:41 - much possible with it I'm not a designer
00:43 - but I wish I were particularly I'm not
00:47 - really well I do like web design but the
00:49 - kind of design that excites me the most
00:51 - is print design so as a kid I always
00:53 - used to grab magazines and browse them I
00:55 - still do that today with digital
00:57 - magazines I rarely ever read the text in
00:59 - them I just like looking at them I love
01:01 - the layout
01:02 - I love the imagery I love the effects
01:04 - included in it so and I started with the
01:06 - web I wished I could do on the web or
01:09 - actually I expected to be able to
01:11 - recreate certain print designs on the
01:14 - web but it wasn't really that possible
01:16 - before but the gap between what's
01:18 - possible in print design and editors
01:20 - such as Photoshop and what's possible on
01:22 - the web has been getting a lot smaller
01:24 - over the last few years in fact this
01:26 - grab has always been very small it's
01:29 - just taken us an awful lot of time and
01:31 - years to realize it and to pay attention
01:33 - to the parts of the web that do make
01:35 - that gap small now when it comes to CSS
01:38 - over the last three a few years mostly
01:41 - three or four years it's been getting a
01:43 - lot of features that make the scab
01:44 - smaller it started with printed with CSS
01:47 - shapes which which allow you to create
01:51 - content that wraps around and inside
01:53 - irregular shapes i got extreme can
01:55 - imagine i got extremely excited when i
01:57 - saw this back then i was even one of the
01:59 - first people to write these articles on
02:01 - them and then with the introduction of
02:03 - CSS blend modes which also enable us to
02:05 - do a lot of color compositing and
02:07 - blending to create really nice effects
02:09 - that are also part of what you always
02:11 - see in poster design and print design
02:13 - and then there is CSS filters that
02:15 - enable that in
02:16 - to do more image editing right in the
02:19 - comfort of our code editors there are 11
02:22 - filter effects possible that do a range
02:24 - of effects from blurring to change in
02:26 - color to contrast and saturation and all
02:28 - of that and one particularly interesting
02:30 - function is the URL function which
02:32 - enable us to import even more complex
02:34 - functions and new functions and to CSS
02:38 - from SVG now extruded CSS has made this
02:42 - gap smaller of the last few years but
02:43 - SVG has always had a lot of features
02:46 - that have been around for a very long
02:49 - time in fact these CSS filters and most
02:52 - of what's possible in CSS when it comes
02:54 - to graphic design has been imported from
02:57 - SVG the CSS versions here are optimized
03:01 - fairly optimized versions of filters
03:04 - that are currently available in SVG and
03:05 - that are even more capable for example
03:08 - it is currently possible to blur an
03:10 - image using the CSS blur function okay
03:12 - and the image above I'm blurring it
03:14 - using six pixels so the blur is applied
03:17 - uniformly over the entire image both in
03:20 - the horizontal and the vertical
03:21 - direction but this function is merely a
03:23 - simplified and very limited shorthand
03:25 - for the blur function that is available
03:27 - in SVG so SVG allows you to blur an
03:31 - image either uniformly just like you do
03:33 - with CSS or if you provide two values
03:35 - two numerical values you can speed them
03:37 - blur the image on the x axis and the y
03:40 - axis separately differently or at the
03:43 - same time so you can imagine can use
03:45 - this effect for example the be
03:46 - horizontal during you can create a
03:48 - motion blur effect if you combine it
03:49 - with other filters as well now I know
03:53 - that for me I did it too so at some
03:56 - point I did wonder why would I want to
03:57 - use these effects on the web why don't I
03:59 - just create an image and you know just
04:02 - embed it on the website right it's just
04:05 - one image you create it and then you
04:06 - embed it well the first problem is if
04:08 - you're building responsive websites then
04:10 - you're not just dealing with one image
04:12 - if you think about it because you have
04:14 - multiple resolutions we have picture and
04:15 - sources and other resources that that
04:17 - enable us to embed different image
04:19 - resolutions for different screen sizes
04:21 - and we have to do that and if you want
04:23 - to change anything about your effect you
04:24 - have to jump back into Photoshop or
04:26 - whatever editor you used to create it
04:28 - and then you have to edit it and then
04:29 - you have to edit all of the versions of
04:31 - that image and then you have to reinvent
04:33 - them now in addition to that there are
04:36 - other reasons now the ability to apply
04:40 - filter effects on the web helps us
04:42 - maintain the semantic structure of the
04:44 - document instead of resorting to images
04:46 - which aside from being fixed resolution
04:48 - most of the times they tend to obscure
04:50 - the original semantics of the elements
04:53 - that they replace and this is
04:54 - particularly important when it comes to
04:56 - text if you want text that has a
04:58 - specific filter or effect applied to it
05:00 - and you create it as an image and then
05:02 - you embed it you lose the semantics of
05:04 - that text it's no longer searchable not
05:06 - selectable it's not accessible anymore
05:07 - and that is not right so the content
05:10 - semantics are preserved this is the most
05:12 - important point personally for me the
05:14 - content is editable and dynamic so if
05:16 - you want to change that text you can do
05:18 - that in the comfort of your code editor
05:19 - you don't have to jump into the graphics
05:21 - editor change it and then we embed it
05:22 - it's easier and faster to tweak the
05:25 - change either the content or the effect
05:27 - itself if you're applying it with code
05:29 - you can change it again you don't have
05:30 - to resort to the design design editor
05:34 - anymore and the effects are animatable
05:36 - so if you create an effect as an image
05:39 - and then you embed that you can't
05:40 - animate it even if you have multiple
05:42 - versions of that image and then you're
05:43 - animating between those images is not
05:45 - really a transition anymore it's not it
05:47 - doesn't look good for example with CSS
05:49 - filters you can create an effect that is
05:50 - as simple as this one here which it just
05:53 - fades an image and an ounce and you can
05:55 - change anything about it you can play
05:56 - with the contrast with the colors and
05:58 - you can do that using just a few lines
05:59 - of CSS and using filters on the web can
06:03 - also be a really nice addition for
06:05 - progressive performance so you know
06:07 - Kravitz has this really nice technique
06:09 - it's called contrast swap where you
06:11 - create an image in Photoshop and then
06:13 - you reduce the colors in that image and
06:15 - then you embed it on the website and
06:17 - then you re increase the colors or you
06:19 - edit the colors using CSS filters so the
06:21 - image that you're embedding is a much
06:23 - smaller size than the original image
06:24 - which would contain all of the colors so
06:27 - you have a smaller image you are
06:28 - embedding a smaller image is better for
06:30 - performance and then you get the
06:32 - benefits or you reapply this effects on
06:34 - the web using CSS now there's a lot of
06:37 - controversy around that
06:38 - issue like if you want to download the
06:40 - image is going to be downloaded without
06:41 - the filter effects and stuff like that
06:43 - but it's still a really nice and a
06:45 - really nice effect if you want to do it
06:47 - now filter effects an SVG are defined
06:51 - using the using filter elements a filter
06:54 - element filter elements are never
06:55 - rendered directly they're only usage is
06:58 - as something that you can create and
07:00 - then you reference and apply later on
07:01 - certain elements it could be images it
07:04 - could be text it could be anything such
07:05 - elements elements that are only defined
07:08 - and then reapplied a referenced are
07:10 - usually raps and deaths deaths is short
07:12 - for definitions and some element and SVG
07:14 - whatever you put into a deafs element is
07:17 - not going to be rendered on the page but
07:19 - when it comes to filters whether you
07:21 - wrap them in the Deaf's or not it's not
07:22 - really it doesn't make any difference
07:24 - because it's not gonna rendered the
07:26 - reason it's not gonna render anyway
07:28 - because the reason for that is that
07:29 - filters require a source image to work
07:31 - on and unless you explicitly dis define
07:35 - that source by calling the add the
07:37 - filter on that source image then it's
07:39 - not gonna have anything to render and so
07:41 - it's not going to render so you can put
07:43 - it in the Deaf's element or not it's up
07:45 - to you now a filter effect to create and
07:49 - effect whatever that effect it's made up
07:50 - of a series of operations and each
07:52 - operation is created or as done or is
07:56 - applied using a filter primitive in SVG
07:58 - all of these primitives are prefixed F
08:00 - with F e F E is short for filter effects
08:03 - so you have F a blend which is the blend
08:05 - filter effect and then you have Fe
08:07 - composite compositing effect each filter
08:10 - primitive performs a single fundamental
08:13 - graphical operation on one or more
08:15 - inputs one or more so an effect can be
08:18 - applied to either one input or it can
08:19 - take two inputs and apply the effect
08:21 - using those two inputs this input can be
08:24 - it's gonna get very technical from now
08:26 - on okay the input can be the original
08:28 - image the source graphic is called the
08:30 - source graphic and SVG it could be the
08:33 - results of another primitive so you can
08:36 - chain filters together the result of one
08:38 - primitive can be used as an input to
08:40 - another primitive or it can also be the
08:42 - alpha channel of an element which is
08:44 - essentially a black version of that of
08:47 - that element this in turn means like you
08:49 - have you have more than 19 filters
08:52 - Viji each one of they can all be changed
08:54 - they can be chained they can be you can
08:57 - take an input from one of them and use
08:58 - it for more than one more than an input
09:00 - for more than one other filter
09:02 - primitives we have almost an endless
09:04 - combination of filters and therefore an
09:06 - endless combination of primitives the
09:07 - sky is the limit
09:08 - now before diving into the examples and
09:11 - we're gonna talk about some of these
09:12 - filter primitives and create some really
09:14 - nice effects with them I want to cover
09:16 - another topic really fast it's called
09:18 - the filter region the the set of filter
09:21 - operations need a region to be applied
09:23 - on okay so suppose you're applying a
09:25 - filter effect on one of many elements
09:28 - and the SVG how do you tell the SVG that
09:29 - you want that effect to be restricted to
09:31 - a specific area and not be applied on
09:34 - everything else on the on on the SVG or
09:36 - maybe you want to do it the other way
09:37 - around you have multiple images multiple
09:40 - elements on the page and you want the
09:41 - effect to be applied on the entire SVG
09:43 - you can do that by specifying the filter
09:46 - region or editing the photo region so
09:50 - each element has a small region every
09:52 - element and SVG has a small region whose
09:55 - boundaries are defined by the borders of
09:57 - the bounding box a bounding box also
09:59 - called a short but the short version is
10:02 - called be box in SVG it is the smallest
10:04 - fitting rectangle around an element okay
10:07 - so if we have text this is what the
10:09 - smallest fitting rectangle could look
10:11 - like it could also have some padding on
10:12 - the top and bottom because the line
10:13 - height also counts here the bounding box
10:17 - of an element is by default the filter
10:20 - region for an element so if you apply an
10:22 - effect to this text for example it will
10:24 - be restricted to that small rectangle of
10:26 - the text however some filters affect
10:29 - pixels that are that lie outside of that
10:31 - bounding air but bounding box for
10:33 - example if you apply a blur effect and
10:35 - you look at this image here on the right
10:36 - side and on the left side you can see
10:38 - that the blur being clipped off and that
10:40 - is very undesirable now according to the
10:43 - specification it is often necessary to
10:45 - provide padding space in the filter
10:47 - region because the filter effect might
10:49 - impact bits slightly outside the tight
10:51 - fitting bounding box okay for these
10:54 - purposes it's possible to provide you
10:56 - can change the value we can change the
10:58 - area of the region by changing the
11:00 - position of
11:01 - the top left corner and the width and
11:02 - the height of that region and in order
11:04 - to expand it you need to be able to
11:06 - provide negative values for the X&Y
11:08 - positions and that is actually possible
11:10 - so if we were to visualize the filter
11:13 - region area we'd be able to see that
11:15 - this padding indeed exists by default so
11:19 - it is the the filter region is the
11:22 - bounding box but if you look at it if
11:24 - you really visualize it in real life
11:26 - it's not really just the bounding box it
11:28 - is a little bit more than that now first
11:31 - of all I want to talk about how I
11:33 - visualized it so I'm using a filter here
11:35 - and we have the FC the filter effect
11:37 - it's got the flood filter effect what
11:39 - the flood does is it literally floods
11:41 - the filter region with color it just
11:44 - floods it it the cut lip color is gonna
11:46 - cover everything in the filter region
11:48 - but when it does that is going to cover
11:50 - everything behind it so the text will no
11:52 - longer be visible so in order to put the
11:55 - text back I'm going to be using these
11:56 - filters and the rest of the examples as
11:58 - well and that's why I'm covering them
11:59 - right now so in order to report the text
12:02 - on top of the image you can merge both
12:04 - the flood color and the source graphic
12:07 - using the merge filter function each
12:10 - merge element has children elements what
12:13 - each one of them is called merge mode
12:14 - these are essentially just layers so the
12:17 - first one takes and the flood color and
12:19 - the second one takes in the source
12:20 - graphic and it puts them on top of each
12:22 - other the ones that come later are the
12:24 - ones that on top so we have flood and
12:26 - then source graphics the source graphic
12:28 - is going to be on top each layer okay is
12:32 - called an emergent but you need to keep
12:35 - in mind that you need to keep something
12:36 - in mind here the units that you use to
12:40 - change the the origin and the size of
12:43 - the filter region are can be in
12:45 - percentages or they can also be in
12:47 - pixels if you set them in percentages
12:49 - they're going to be relative to the
12:50 - bounding box of the element okay so if
12:52 - you want to move to extent to expand it
12:55 - you extended you would use minus 5%
12:57 - minus 5% not positive here and then you
13:00 - could extend it to a hundred and 20
13:02 - percent in in width or if you use if you
13:06 - use the user space on use as the
13:10 - coordinate system which is essentially
13:11 - the entire SVG then you can specify the
13:13 - filter image
13:14 - and pixels but when you do that is going
13:16 - to be relative to the entire SVG these
13:20 - are a little bit of small technical
13:21 - details that I needed to cover and now
13:24 - we can start creating some effects now
13:26 - the most basic effect that you're
13:28 - probably most of the times find and
13:30 - tutorials about SVG filters is creating
13:32 - a drop shadow because it's a very simple
13:34 - one fairly straightforward and it gives
13:36 - you a clear idea of how chaining works
13:38 - and how then merging layers and stuff
13:40 - like that so I'm gonna create this
13:45 - effect here I just have an image I want
13:47 - to create a drop shadow the drop shadow
13:48 - is a very light drop shadow it's not
13:50 - very dark so it's not really black we're
13:53 - gonna have to change that color into
13:54 - gray sure okay so you can start that by
13:58 - creating a filter element inside of that
14:00 - filter element you use the offset filter
14:02 - primitive the offset primitive offsets
14:04 - the input image relative to the to its
14:07 - current position and the image space by
14:08 - the specified vector so I specified DX
14:11 - and dy and then the DX and dy will move
14:13 - the image on the X and y axis
14:15 - respectively this is this offset filter
14:19 - is you is most important in effects like
14:21 - these like creating drop shadows and
14:23 - this is why we're using it here now and
14:24 - then the second one is the Gaussian blur
14:27 - Gaussian blur effect so the Gaussian
14:29 - blur effect takes a standard deviation
14:30 - which specifies the amount of blur that
14:32 - you want to use you can specify one
14:35 - number only which creates a uniform blur
14:37 - or you can specify two numbers if you
14:38 - want to create only horizontal or
14:40 - vertical or different horizontal and
14:41 - vertical effects the end that we're
14:45 - using in the offset we're taking the
14:47 - source alpha and then we're moving that
14:50 - source alpha well if you have if you
14:52 - have a JPEG image then the Alpha Channel
14:54 - of that image is always going to be one
14:56 - because it's fully opak and so the Alpha
14:58 - source alpha the Alpha channel is going
15:01 - to be a fully black rectangle which is
15:03 - the same size as the image and this is
15:05 - what we have here so we get the black
15:07 - rectangle we offset it and then we blur
15:09 - it using Gaussian blur next you you
15:13 - flood if you want to color your plot you
15:15 - want to apply a color to that shadow
15:17 - right you don't want it to be completely
15:18 - black anymore so you can use a flood a
15:20 - flood we're flooding the area with a
15:23 - very light gray color the hashtag BBB
15:26 - and
15:26 - which is going to give us the color
15:29 - result and then you then you use the
15:31 - composite function now compositing is
15:34 - the combining of a graphic element with
15:36 - its backdrop okay a backdrop is the
15:38 - content behind the element and what is
15:40 - the element is what the element is going
15:41 - to be composited with using different
15:44 - compositing operations there are sixteen
15:46 - different ones you can specify which
15:47 - parts of the source and the backdrop are
15:50 - going to be visible so you would have
15:52 - something like this if you have two
15:53 - elements one of them is blue and one of
15:55 - them Avia is yellow and they overlap in
15:57 - certain areas different composite
15:59 - operations are going to tell the browser
16:01 - which parts of that you want them to be
16:03 - visible so in our case here the flood
16:05 - color is on top so it is the source and
16:07 - the backdrop the the the shadow is the
16:11 - backdrop which is the destination and we
16:13 - only want to show the part which is the
16:16 - backdrop itself which is the shadow so
16:19 - we use source and in this case if we do
16:21 - that
16:22 - we're gonna end up with only showing the
16:24 - parts where the flood color and the
16:25 - shadow intersect which happens to be the
16:28 - shadow and it's going to be the color
16:30 - gray which is the flood color so
16:32 - essentially we're literally coloring the
16:34 - flood shadow
16:35 - coloring the drop shadow with the flood
16:38 - is confusing so at this point the only
16:42 - thing that is visible on the page is
16:44 - this year we have a rectangle we have it
16:47 - blurred and we have it colored but we so
16:48 - we have the drop shadow but we don't
16:50 - have the image how do you combine them
16:53 - using merge so you get the shadow you
16:57 - put that in a merge node and then you
16:59 - put the source graphic on top and you
17:00 - end up with this very small effect so
17:03 - upset the source alpha use that for
17:07 - input for the Gaussian blur the Gaussian
17:10 - blur is going to blur it and then you
17:12 - flood the area with color and then you
17:14 - composite that color with the shadow you
17:16 - have a colored shadow and then you merge
17:19 - that shadow that you created with the
17:20 - source alpha and that's how we create a
17:22 - simple drop shadow
17:24 - another simple primitive that I
17:26 - personally really like is the FE
17:28 - morphology morphology to morph an
17:30 - element means to transform the shape or
17:32 - the form of that element the morphology
17:34 - filter effect operates on the form of
17:36 - the object at
17:38 - - values the first one is erode and the
17:40 - second one is dilate to erode an element
17:42 - means to make it thinner to dilate means
17:45 - to make it thicker and this is literally
17:47 - what this primitive does it either makes
17:49 - the element thinner of Earth makes it
17:50 - thicker now the amount by which you make
17:54 - it thinner or thicker is specified using
17:55 - a radius attribute and even though we're
17:58 - saying radius which usually refer means
18:00 - a circle or an ellipse the browser
18:03 - doesn't really use a circle in order to
18:05 - make this erosion our dilation using the
18:08 - number that you specify and radios the
18:10 - browser is going to create a matrix or a
18:11 - kernel which is then used to do this
18:15 - this kind of erosion and dilation this
18:17 - is a little bit technical jargon but
18:19 - it's necessary to know so when you apply
18:22 - to a graphical JPEG image to a
18:25 - photograph erode and dilate have very
18:28 - very predictable results so the image is
18:30 - going to be transformed in a sort of a
18:32 - an image that has been painted with a
18:35 - real really large strokes of color and
18:37 - this is literally what it what it looks
18:39 - like and if you were to animate the
18:41 - effect to see how it works it's the one
18:42 - on the top right so you start with the
18:45 - image and the thicker you make it or the
18:47 - more the the stronger the morphology you
18:50 - have let me repeat that
18:51 - [Music]
18:53 - the thicker or the wider the strokes get
18:57 - under less detail you have in the image
18:59 - the only thing that you might notice in
19:01 - this slide is that when you apply these
19:03 - effects you have a road and you have
19:05 - dilate the difference between the image
19:06 - on the top right and the one on the
19:08 - bottom left is the color one of them
19:10 - looks that it has lighter strokes and
19:12 - the other one has darker strokes this is
19:14 - because again a little bit of technical
19:16 - stuff erode sets each pixel to its
19:19 - darkest or most transparent neighbor
19:21 - whereas dilate sets the channel to match
19:23 - the brightest or least transparent one
19:25 - so morphology when applied to images has
19:28 - a very predictable effect that image did
19:31 - get if you look really close the image
19:33 - with when you apply erode it gets it
19:35 - does get a little bit smaller on the
19:37 - edges around the edges whereas dilate
19:39 - makes it a little bit wider one was dark
19:41 - one is like very predictable effect now
19:47 - this is all too much again gibberish so
19:50 - for single
19:51 - objects such as text for example erode
19:53 - makes the object thinner or dilate makes
19:56 - a thicker we can take advantage of this
19:57 - fact to fix something fix something that
20:01 - we usually want to do an SVG but we get
20:03 - unpredictable results for so if you want
20:06 - to add a stroke to text an SVG you can
20:08 - do that you think using the stroke
20:10 - attribute okay so if you add a stroke
20:12 - you can do that like this
20:14 - stroke deep pink this is the color that
20:16 - I used most of the times because it's
20:17 - the easiest you add a deep pink stroke
20:19 - and you give it a stroke width and you
20:21 - end up with the results on the second
20:22 - line here what happens when you add a
20:24 - stroke or an outline you want to add an
20:26 - outline but if you do it using stroke
20:28 - you end up with the text that that's
20:30 - that got thinner so that stroke actually
20:32 - ate up part of the text and this is
20:34 - probably not the effect you want if you
20:36 - want to add an outline you want to
20:37 - preserve the size of the text and then
20:39 - add the outline to the text if you use
20:42 - stroke this is the result that you get
20:43 - you're going to eat up some of the text
20:45 - but if you use SVG filters you can fix
20:48 - that
20:49 - so what do you have here we have we have
20:53 - a source alpha we have text okay we take
20:56 - the source alpha of that text and then
20:59 - we operate it we specify the operator on
21:01 - it on the morphology filter to be dilate
21:04 - so we want to make the text thicker okay
21:06 - by three pixels and then we flood the
21:09 - area with color let's sleep tank again
21:11 - which results in a pink flood area and
21:15 - then we composite remember compositing
21:17 - you specify which parts is going to
21:19 - elect you're gonna clip off something so
21:21 - in this case here if you use the
21:23 - operator M what's gonna happen is you
21:26 - have a color on top and then you have
21:27 - the the text and the background and when
21:31 - you composite them together that the
21:35 - dilated text and the color you're gonna
21:37 - end up coloring the text and then and
21:42 - then you merge you merge the recolor
21:44 - text with the source graphic so you have
21:48 - the original text which is in black and
21:50 - then you have a pink version a dot a
21:53 - pink dilated version of that text okay
21:55 - you have them on top of each other and
21:57 - then you show them on top of each other
21:59 - with merge so you end up with the one on
22:02 - the bottom here so literally right now
22:04 - you
22:04 - two layers of text the one in the behind
22:07 - is the text itself but it has been
22:09 - dilated and colored and pink and then
22:11 - you put the original text on top again
22:12 - you can take this a little bit further
22:14 - and create something like this you can
22:16 - create outline only text so for example
22:19 - if you have this outline here and you
22:20 - can put it on any kind of background
22:22 - anything that happens in the background
22:24 - will be reflected inside of the text and
22:26 - this is also possible using the exact
22:28 - same technique or changing it a little
22:30 - bit and then adding one filter to it so
22:33 - we're gonna start with morphology again
22:35 - we're gonna make the text thicker but
22:37 - what i'm doing here is into instead of
22:39 - taking the source alpha which which is
22:41 - black and then i'm gonna have to color
22:42 - it with Fe flood and f8 composite which
22:45 - is a little bit too much I'm taking the
22:47 - source graphic itself which is my text
22:49 - right the text is going to be originally
22:51 - black or any other fill color that you
22:53 - want and then you're making the text
22:56 - thicker okay and then you're using the
22:59 - composite with the operator out so you
23:02 - have the thicker text and the background
23:04 - and then you take the original text you
23:06 - put it on top and you cut it out so
23:08 - you're creating sort of a hole in the
23:12 - thicker text from by using the original
23:14 - text and the most important part here is
23:17 - because I'm not using Fe flood to color
23:20 - the outline the outline has the same
23:22 - color as the source graphic so the same
23:24 - color as the text which gets its color
23:26 - using the fill attribute which ki can't
23:29 - specify using CSS so if you use this
23:31 - flow through here just these two steps
23:33 - you can create outline text and then you
23:35 - can style that text and change the color
23:37 - and CSS which is perfect for separation
23:39 - of concerns the next thing here what
23:43 - this is the thing that I'm most excited
23:44 - about the demo I showed this demo to a
23:46 - lot of people and some of them said well
23:48 - I thought this was created using 3d max
23:50 - and another one was like oh my god this
23:52 - is SVG I said yes so in this section I'm
23:58 - gonna talk about how you can use an
24:00 - image of a texture any texture and then
24:03 - use it to change the shape or apply a
24:05 - texture and change the shape of text
24:08 - okay in particular I want to create this
24:11 - effect that I borrowed from a Photoshop
24:12 - tutorial that I found on YouTube because
24:14 - I'm not a designer I have no idea how to
24:15 - have to do things in Photoshop so
24:17 - what I do want to come when I want to
24:19 - experiment with SVG filters as I find a
24:21 - really nice Photoshop tutorial I follow
24:23 - the steps that they make and then I
24:24 - recreate those steps with filters now in
24:27 - the video the designer created this
24:28 - effect by using what is known as a
24:30 - displacement map a displacement map is
24:32 - an image whose color information is used
24:34 - to distort the content of another
24:36 - element they have an image it has colors
24:38 - those colors will be used to distort
24:40 - another element that is put on top of it
24:42 - an SVG filters the FE displacement map
24:45 - primitive uses the pixels values from
24:47 - the input image that you give it to
24:48 - spatially displace the image from
24:51 - another input so displacement map takes
24:53 - two inputs one of them is the texture or
24:56 - the map and the other one is the element
24:58 - that you want to apply the texture to
25:00 - the steps to recreate that are in
25:03 - Photoshop you want to desaturate the
25:05 - image turn it into black and white
25:06 - according to the designer then you want
25:09 - to reduce the amount of detail in it by
25:11 - blurring it by just one pixel because
25:13 - the more detail you have on an image the
25:15 - less realistic that effect is going to
25:17 - be so you blur it by one pixel which is
25:19 - just enough if you blur it more it's
25:21 - gonna be too little detail and it's also
25:22 - B it will also be very unrealistic you
25:25 - save that image the black and white
25:27 - slightly blurred you save it as a
25:29 - displacement map and then you reuse that
25:32 - image you open it again but use it as a
25:34 - displacement map to distort some text
25:36 - okay so the text now has changed but you
25:39 - don't see a background image so you take
25:41 - the original image again you use it as a
25:43 - background and then you composite the
25:45 - text with the background to make the
25:46 - effect even more realistic in SVG fill
25:50 - the region area with the image that will
25:52 - be used as a texture so we have an image
25:55 - we're going to fill the region region
25:56 - area with that image we're going to
25:58 - desaturate it using color matrix which
26:01 - is another filter primitive with a value
26:03 - saturate just like saturating CSS if you
26:05 - set the saturate to zero the image is
26:07 - going to be d saturated you apply a 1
26:10 - pixel Gaussian blur to the image using a
26:12 - few Gaussian blur use the image to
26:14 - distort the text with displacement map
26:17 - blend the text into the background image
26:19 - using blend and apply a translucent
26:21 - effect to it just to make it a little
26:23 - bit more realistic by decreasing the
26:25 - opacity using component transfer and
26:27 - then we display the text on the image
26:30 - behind it by more
26:31 - the two layers again this is the coat so
26:35 - we're gonna start with Effie image and
26:38 - then she literally just gets an image
26:40 - and puts it in the region area it's
26:42 - gonna fill the region area with it it
26:43 - even comes with a preserve aspect ratio
26:45 - so if you want to preserve the aspect
26:46 - ratio of the image or if you want to
26:47 - just fill the area in regardless of the
26:49 - aspect ratio you can do that and then
26:52 - you desaturate the image with color
26:53 - matrix color matrix tape it takes many
26:56 - types one of them which is saturate
26:58 - which is just a shorthand for a specific
27:00 - color matrix it's just for convenience
27:02 - and it's available for us so if you use
27:05 - type saturate values zero you're going
27:07 - to desaturate the image and then you
27:10 - decrease the level of details by
27:11 - applying a Gaussian blur on the image
27:13 - itself in this case I've used the 0.5
27:16 - because I found that to be more even
27:17 - more realistic than 1 pixels and that
27:19 - result is a map and this is what it
27:22 - looks like okay then you use that map as
27:26 - a displacement map to displace the text
27:28 - which is our source graphic so the
27:29 - displace in the map takes and a source
27:31 - graphic and then it takes the n2 it's
27:34 - called you can only have N and in to
27:36 - know and three you know and four and the
27:39 - end two is the map so the map here is
27:40 - going to be used to displace the text
27:42 - and the scale is 15 the scale allows you
27:46 - to specify the amount or the scale by
27:48 - which you want the effect to be applied
27:50 - the larger the scale the more the more
27:53 - dramatic the effect is going to be the
27:55 - channel selector is only you're
27:57 - essentially telling the browser which
27:58 - colors you want to use to apply the
28:00 - distortion and then there is a result
28:02 - which is texture check a texture text
28:04 - and then using the color matrix on that
28:07 - texture text you can reduce the opacity
28:09 - so a color matrix has the matrix for RGB
28:13 - a plus an offset at the end that's why
28:15 - you have five columns and then four rows
28:17 - for RGB a so the zero point nine there
28:20 - that's where the opacity is it's
28:22 - initially one in the identity matrix and
28:25 - I just turned it into zero point zero
28:26 - point nine this is what the text now
28:28 - looks like it has been changed displaced
28:32 - using the texture now I want to show the
28:34 - texture no first I want to decrease the
28:36 - opacity okay I didn't decrease the
28:41 - opacity I add now the image again back
28:43 - in the background
28:44 - using EFI image again and then you can
28:47 - change the gamma what I'm doing it is
28:48 - just a little bit of tweaking just like
28:50 - the Photoshop guy did I'm adding
28:52 - increasing the contrast of the image
28:54 - using component transfer the component
28:56 - transfer is very similar to matrix but
28:58 - instead of using a matrix you can you
29:00 - can have a channel for each one of those
29:02 - components RGB and even a and then you
29:05 - can use functions to change the values
29:08 - in those channels now the type gamma the
29:11 - component transfer type gamma literally
29:13 - works on the gamma of an image so it it
29:16 - manipulates and changes the lightness
29:18 - and the dark areas of the image so if
29:20 - you make the dark areas darker you're
29:22 - increasing the contrast and if you make
29:23 - the the light areas lighter with the
29:26 - darker dark areas you're increasing the
29:29 - contrast and this is what I'm doing here
29:31 - changing the amplitude and exponent as
29:33 - much as going to make the dark areas
29:35 - darker and make the light areas lighter
29:37 - so we have this displace text in the
29:41 - background re added the original image
29:43 - and tweak the contrast a little bit of
29:45 - that image and this is the background
29:46 - now and then you blend the text with a
29:50 - background using the blend primitive so
29:52 - again the blend takes two inputs noir
29:55 - that you want to blend to add together
29:56 - the mode can be multiply screen one of
30:00 - the many blend options that you have in
30:01 - CSS except that you only have like four
30:03 - or five in SVG
30:04 - but you can definitely recreate the
30:06 - others on your own so I'm multiplying
30:08 - the text with the background and then
30:10 - I'm merging the two on top of each other
30:12 - to get this result now the color could
30:18 - be made even more realistic I just
30:20 - didn't have a little I just didn't have
30:21 - the time to do it if instead of using
30:23 - multiplier you use a linear burn I would
30:26 - have to recreate the linear burn effect
30:27 - and then apply it then it becomes even
30:29 - more realistic similar to this here this
30:31 - is the original tutorial and this is how
30:36 - you displace text with SVG filters thank
30:42 - you
30:46 - now in addition to getting an external
30:51 - texture and applying its own element SPG
30:54 - is even more cooler it allows you to
30:56 - create your own texture that you can use
30:58 - as a displacement map later
30:59 - so filters can generate too rich
31:01 - textures you can create fire textures
31:03 - cloud textures marble stone paper and
31:07 - we're going to create paper shortly we
31:10 - can do that using the turbulence
31:11 - function the turbulence filter whenever
31:14 - I say function I mean filter the
31:16 - turbulence filter primitive generates
31:17 - and renders Perlin noise this kind of
31:19 - noise is useful in simulating several
31:22 - natural phenomena like clouds fire smoke
31:24 - and in generating complex texture like
31:26 - marble marble organ night just like
31:29 - Effie flood when use F if F E flat you
31:31 - flood the entire region with a color if
31:33 - you use turbulence you flood the entire
31:35 - region with a noise that we're gonna see
31:38 - shortly now in this session I'm gonna go
31:40 - over how you can create noise with Fe
31:42 - turbulence and how that noise can first
31:44 - be used to distort images and text
31:45 - distort images and text and then we're
31:47 - going to see how the noise can be
31:50 - generated with this primitive and
31:51 - combination with SVG lighting filters so
31:55 - you have a texture and then you apply
31:56 - some light to it and you turn that into
31:59 - real you have noise and you apply light
32:01 - to it you turn it into a texture and the
32:04 - more different the noise the more
32:05 - different the end result is going to be
32:07 - so this is what Fe turbulence looks like
32:09 - here you will usually only have to worry
32:11 - about three attributes the base
32:13 - frequency it specifies the grain of the
32:16 - noise very low values such as 0.001 will
32:20 - produce larger patterns you see on an
32:22 - example shortly and very high values
32:24 - such as 0.5 will produce tiny patterns
32:26 - values in the range of 0.02 and 0.2 are
32:30 - a useful starting point for most
32:32 - textures there are also two types of
32:35 - noise fractal noise and turbulence the
32:37 - fractal noise is the more smooth one
32:39 - it's it gets you closer to clouds and
32:42 - those kinds of effects and then there is
32:44 - the num of tabs which is the number of
32:47 - octaves which very similar to music is
32:49 - just the number of levels
32:51 - the higher the number of octaves the
32:53 - higher the number of layers you have and
32:55 - therefore
32:55 - the higher the detail level so these are
32:59 - these twelve images represent twelve
33:01 - different results of noise created with
33:03 - turbulence with different types based
33:05 - frequency and Nam octave values just to
33:08 - quickly go over them an image you have a
33:11 - base frequency of 0.04 this is a
33:14 - standard noise we're not playing with
33:15 - any of the other values just a base
33:17 - frequency of 0.04 B is the same as a but
33:21 - to increase the level of details with
33:22 - number of tabs to so if you look at it
33:24 - as B is exactly the same as is the
33:27 - contrast good enough can you see them
33:28 - okay so B is the same as a but with a
33:31 - little bit more detail if you look
33:32 - inside of it C is the same as B but we
33:35 - change the seat to 201
33:36 - so essentially what the seat does it
33:39 - affects the shape drastically just not
33:41 - in a way that's understandable it's just
33:43 - that to generate the turbulence you need
33:45 - to generate a bunch of random numbers
33:47 - that's random noise and if you want the
33:50 - same randomness the same randomness in
33:53 - multiple faces for example over multiple
33:55 - elements that are next to each other you
33:56 - can start the generator from the same
33:58 - seed multiple times so the seed is sort
34:01 - of like changes it's a random number
34:02 - that the browser's going to use to start
34:04 - the randomness from D is the same as C
34:08 - with the number of times five so we've
34:10 - increased the level in d e shows that
34:13 - noise is continuous so if you have a and
34:15 - E let's start with the same with the
34:17 - same seed and you put them next to each
34:18 - other you're gonna see that the noise is
34:19 - continuous from A to E it's like it's
34:21 - the same noise da F is decreasing the
34:26 - base frequency to 0.01 and that will
34:28 - create larger patterns so if you look at
34:30 - F this is a larger pattern and then you
34:32 - have the smaller patterns each one of
34:34 - these can be used to create different
34:35 - textures GNH show the difference in the
34:38 - number of octaves again between G and H
34:40 - I and J is nice but that is using
34:45 - fractal noise not turbulence so if you
34:47 - look at all the ones like AE b c d @ GH
34:50 - all of these are like intricate noise
34:52 - and then i and j are more cloudy and
34:55 - more vague and more blurred these can be
34:57 - used to create clouds for example okay
34:59 - and I'll show you that you can change
35:01 - the size of the noise the size of the
35:04 - turbulence along the x-axis and
35:06 - y-axis so if you look at L for example
35:08 - you can create that effect and you can
35:11 - some create some really nice effect with
35:12 - that an example that I have now is this
35:15 - is a demo online that shows you how we
35:18 - can apply an effect so if you choose
35:20 - turbulence and you use the turbulence as
35:22 - a displacement map on this image this is
35:24 - what it looks like and then you can
35:26 - change the scale to make it more
35:27 - dramatic or less dramatic and then we
35:32 - can also apply the same texture to text
35:34 - which will give you that warping text
35:36 - effect dirk Weber used FK turbulence as
35:41 - a displacement map on text to create
35:43 - this water splash effect which is
35:45 - available in Smashing Magazine and then
35:47 - code drops they have this really nice
35:48 - button effects that are also using noise
35:52 - and your animating that noise because
35:54 - all the numbers all of the values and
35:56 - the noise are animatable so if you
35:57 - animate those you can end up with these
35:59 - effects I like this one the most is that
36:01 - the music one this is a vertical noise
36:03 - like the one you show earlier and but
36:05 - you're just animating it now what I want
36:10 - to talk about now is how you can this
36:11 - lose this noise this turbulence plus
36:13 - lighting effects to create texture and
36:15 - more specifically I want to create a
36:17 - very simple rough paper texture which I
36:19 - borrowed from Michael Milani by the way
36:21 - online
36:22 - this texture requires literally two
36:25 - steps two functions two primitives and
36:27 - then you can do anything with it you can
36:28 - use it as a displacement map or whatever
36:30 - you want to do so first we're gonna
36:31 - start by creating the base for this
36:33 - whole effect with the turbulence
36:34 - primitive we're not specifying a type on
36:38 - the turbulence at at this point so we're
36:40 - getting toward turbulence not that
36:42 - cloudy effect
36:44 - yeah we're creating the base frequency
36:46 - 0.04 which is a fairly good start most
36:49 - of the times I just experiment so I just
36:51 - change the values to see which one gets
36:53 - me closer to my to my goal and then I
36:55 - have a rectangle that I'm applying this
36:57 - texture to this is what I have this is
36:59 - what you start with now we need to shine
37:02 - a light on that surface shining a light
37:04 - on graphic provides additional depth and
37:06 - texture and to create a lighting effect
37:08 - you need to specify three things a light
37:11 - color specified by the lighting color
37:13 - proper lighting color property you're
37:15 - going to see shortly and
37:16 - type which is specified using a light
37:19 - source which no a light type so you can
37:24 - there is diffused lighting and there is
37:27 - specular lighting and SVG the diffused
37:29 - lighting indicates indirect light from
37:31 - an outside source and is best used for
37:33 - some light effects something to simulate
37:35 - Sun you use diffuse lighting if you want
37:37 - something to simulate more of a lamp or
37:39 - a room and a light inside of a room you
37:42 - use specular lighting which specifies
37:44 - secondary light that bounced from
37:47 - reflective surfaces both these primitive
37:49 - shine light on an object or image by
37:50 - using the Alpha channel of that image as
37:53 - a bump map transparent values remain
37:56 - flat while elpac values rise to form
37:58 - Peaks so if you have let me rephrase
38:03 - that
38:03 - a light source filter uses an input
38:06 - alpha channel to provide depth
38:07 - information you have an alpha Channel
38:11 - you take the Alpha values of that
38:13 - channel and then you use those as a bump
38:15 - map for the light so how do how does the
38:16 - light know that this part of it is high
38:19 - and the other one is low how do you
38:20 - create shadows and Hills it uses the
38:23 - Alpha Channel to do that the more
38:25 - transparent the lower and flatter it is
38:27 - the more opac the higher it is because
38:30 - Fe turbulence generates an alpha channel
38:32 - full of noisy values so red green blue
38:35 - are noisy and random so is alpha it
38:38 - comes with a lot of different alpha
38:40 - values it produces a nice variable Z
38:43 - terrain that creates highlights when we
38:45 - shine our light on it I know there are
38:47 - two yeah so there are two types of light
38:51 - and there are two sources of light to
38:53 - create a light source you nest the light
38:54 - source inside of the light type so you
38:56 - have type source inside of it and then
38:59 - you finally specify the lighting color
39:00 - so to light the noise we generated
39:02 - earlier we will apply a white diffused
39:05 - lighting which is sunlight emanating
39:08 - from a distant light source and this is
39:09 - what the code looks like both of these
39:13 - primitives accept an attribute called
39:15 - surface scale which is the set index
39:19 - multiplier so if you increase the scale
39:21 - does that index is going to be higher
39:22 - and you can gotta get more steeper
39:26 - steeper visual slopes and your texture
39:28 - then you have azimuth and azimuth and
39:35 - elevation on the light source as you can
39:38 - see in this graphic here from the
39:39 - specification as the most azimuth and
39:41 - elevation both of them specify where the
39:44 - light source is coming from essential
39:45 - and you also need to play with that
39:46 - because the closer you make it to the
39:49 - texture the different the effect and the
39:50 - lighting is going to be so we have here
39:53 - turbulence and then we have a lighting
39:55 - apply to that turbulence this is what we
39:59 - get there is too much sharp edges here
40:03 - so we need to smooth the noise out we
40:05 - can do that by using fractal noise to
40:07 - start with instead of using turbulence
40:09 - switching the type to fractal fractal
40:11 - fractal noise gives us a better base
40:15 - which is this it is smoother a little
40:17 - bit more like water in this case it's
40:20 - not really rough paper rock paper has
40:23 - more detail so we need to increase the
40:25 - detail and we can do that by increasing
40:27 - the number of log tabs
40:28 - five octaves is usually the highest you
40:30 - will need for most of your effects if
40:32 - you have six and more the effect is not
40:34 - very visible if you have a very sharp
40:36 - eye you can't you can notice a little
40:39 - bit of difference I do
40:40 - but most of the times it's not really
40:42 - that big of a difference so if we
40:44 - increase the number of octaves it gets a
40:47 - little bit more grain and it looks much
40:50 - better than generally you can change the
40:52 - effect a little bit and tweak it more by
40:53 - playing with the source and the distance
40:55 - distance of the light maybe even the
40:57 - color if you change the color this is
40:58 - going to be colored rough paper
41:01 - decreasing the elevation on the light
41:03 - source for example it's going to make it
41:04 - look like this it's a little bit of
41:06 - darker which brings us a little bit more
41:09 - to sandpaper which is not what we want
41:11 - we want to rough paper so I think the
41:13 - previous version looked just fine and
41:16 - that's all you need to create a simple
41:17 - texture you need noise and you apply
41:20 - some text to it and then you can use
41:21 - this texture to use it as a displacement
41:24 - map so if you want to simulate writing
41:26 - on paper you can do that you can do
41:30 - pretty much anything with this now we
41:33 - before you can also create a myriad
41:35 - myriad of different effects if you take
41:36 - that noise and you apply different other
41:39 - filters to it so this is an example here
41:40 - this is each
41:42 - violence some of them may might look
41:44 - like more closer to bouquet effect
41:46 - others like like fireworks are something
41:50 - what we're doing here and the ones on
41:51 - top we're blurring we're changing the
41:53 - colors using color matrix and then on
41:55 - the one at the ones in the ones at the
41:57 - bottom we're changing the sharpness by
42:00 - using con twelve major convolve matrix
42:03 - that's filtered for motive I'm not going
42:05 - to talk about that because that won't
42:06 - occur
42:07 - it requires an entire hour and it's the
42:09 - most complex of all filters because it
42:11 - allows you to create your own filters
42:13 - and filter to create filters so you can
42:16 - do a lot of things if you have noise if
42:18 - you delete colors you're going to end up
42:20 - with a different texture you can do
42:21 - anything
42:22 - essentially the sky's the limit now
42:25 - before we end this talk I want to give a
42:26 - short overview of two primitives that
42:28 - are also the most used that enable you
42:31 - to manipulate the colors of images so we
42:34 - talked about thinning and thickening of
42:36 - text or of images we talked about
42:38 - blending compositing turbulence textures
42:42 - displacement maps there's a lot more but
42:45 - I want to cover image color manipulation
42:47 - just like the ones you can find in CSS
42:49 - so more specifically I want to cover
42:52 - poster effects something that would
42:55 - create a poster version of whatever you
42:56 - have
42:57 - unlike Chris island I do draw a little
42:59 - bit so the one the image on the Left I
43:01 - drew that using pastels and then I
43:03 - turned that digitally into a poster
43:05 - version so you have the real pastel with
43:09 - all of the color gradients and then on
43:10 - the right side you turn that into a
43:12 - poster effect now this effect can be
43:14 - created using discrete component
43:16 - transfer function okay I'm gonna go over
43:18 - that shortly but what what when you use
43:21 - this function here it's called component
43:23 - transfer again RGB a lot of control you
43:26 - can use different functions we use the
43:28 - gamma function earlier to control
43:30 - contrast and brightness and then you
43:32 - have the discrete function the discrete
43:35 - function has four different attribute
43:36 - which is called table values it reduces
43:39 - the number of colors in an image and
43:41 - shows more sudden color changes which
43:43 - look more like the images made up of
43:45 - color bands or color clusters so again
43:47 - if you look at this instead of having a
43:49 - gradient of every single color every
43:52 - color you
43:53 - les couleurs the browser deuce this does
43:55 - this by doing some sort of mapping so if
43:58 - you have for example table values set to
44:01 - zero zero point five one you can have as
44:03 - many values as you want the more values
44:06 - you give the more ranges you have and
44:08 - the browser is going to map the color to
44:10 - these ranges so if you have a red color
44:12 - for example between the range zero and
44:14 - 0.33 the browser is going to map it to
44:17 - just zero so all of the shades between
44:19 - zero and zero point three will just be
44:21 - one shade less color zero point three is
44:24 - 0.66 will be mapped to your zero point
44:26 - five so you only have three shades of
44:29 - red you're decreasing the number of
44:30 - colors and they're forgetting that
44:32 - poster effect and this is what you get
44:36 - here so all I did is I gave I use
44:39 - discrete I used three different colors
44:43 - and then the browser is going to take
44:45 - the whole shades of red and green and
44:48 - blue and it's going to map the shades
44:50 - into the ranges I specify here another
44:58 - thing is I want to create a dual tone
45:00 - effect with contrast control so to
45:03 - create the dual tone effect in Photoshop
45:04 - usually do two steps you turn the image
45:07 - into grayscale and then you map the
45:09 - greyscale range into a new range that
45:11 - instead of having black and white on the
45:13 - edges so instead of a range from black
45:15 - to white you map that to arrange from
45:18 - pink to yellow or whatever color you
45:21 - want to do in other words you will need
45:22 - a gradient map that the browser will use
45:24 - to map your greyscale image to now this
45:28 - is the tutorial that I found on YouTube
45:30 - again so you have this black and white
45:32 - and then you're gonna do a little bit of
45:35 - mapping you change the black to some
45:37 - color that you want so all of the shades
45:40 - of black will be transferred to this or
45:42 - map to this color and then the white you
45:44 - change that into your other color and
45:45 - you get written effect like the one from
45:48 - Spotify how do you do that in SVG you
45:52 - need to create a gradient map using
45:54 - component transfer but instead of using
45:55 - the discrete value which limits the
45:57 - number of colors were going to use the
45:59 - table value in order to map your colors
46:01 - into a new range of colors without
46:03 - losing any colors
46:05 - like we do indiscreet you can use the
46:08 - component transfer type table so suppose
46:10 - you want to create the duotone image
46:11 - using these two colors here you have a
46:15 - pink color and then you have another
46:17 - color for every one of those colors the
46:19 - two colors you get the RGB values which
46:22 - you have on the right and then you
46:23 - divide that value the R value the G
46:26 - value and the B value divide that you
46:28 - divide that by 255 you get a small
46:30 - decimal value and that's what you're
46:32 - going to use and the function here so
46:36 - these three here are G B are the RGB of
46:40 - pink and the other ones here RGB are the
46:44 - values for the other color so red is
46:47 - going to be mapped from black and white
46:49 - to these to rate this range and then G
46:52 - is going to be mapped to this range and
46:54 - B to this and that gives you the dual
46:56 - tone effect this looks nice but it does
46:59 - look like it's missing something if you
47:00 - increase the lightness of the colors
47:02 - increase the lightness of the yellow and
47:04 - increase the intensity of the pink the
47:06 - color of the the effect becomes a little
47:08 - bit more realistic so you can do that
47:10 - again by using the gamma function of
47:12 - component transfer increasing the
47:14 - amplitude decreasing the the exponent a
47:17 - little bit of tweaking you get a better
47:19 - result now you may have noticed an
47:22 - attribute on the component transfer
47:24 - filter here is called color
47:26 - interpolation filters this attribute is
47:30 - used to switch from and between the
47:33 - linear RGB space and the srgb space it
47:36 - is useful to get more desert deserve
47:37 - desirable results when applying certain
47:39 - effects for example if you want to apply
47:41 - a an inversion effect if you will have
47:45 - an image and you want to invert the
47:46 - colors of that image if you use the
47:48 - default linear RGB space you're going to
47:50 - end up with the result on the right
47:51 - which is not very desirable the one you
47:53 - want is the one on the left with more
47:55 - intense colors now the reason this
47:58 - happens this is not really wrong the
48:00 - mapping is happening it's correct
48:01 - everything is working as expected but
48:03 - because of the way the human eye
48:05 - perceives colors lighter tones always
48:08 - look more like actual just white to us
48:10 - so we have all the tones we need and the
48:12 - right one but it's
48:14 - our eyes are seeing it in a two light
48:17 - way in order to change this and get more
48:20 - darker shades and less lighter shades
48:22 - you can switch to the srgb space and you
48:25 - get a more desirable not more rights
48:30 - because both of them are correct you get
48:31 - a more desirable effect yeah before
48:35 - before the thank you just a quick note
48:37 - so if you use any kind of coloring
48:40 - effects in SVG and you get the colors
48:43 - are not really just like you expected
48:45 - the image is too light most of the times
48:47 - the solution is going to be to switch
48:48 - the color interpret interpolation
48:50 - filters to srgb
48:52 - and that is all I have thank you so much
48:58 - thank you sir
49:01 - thanks a lot